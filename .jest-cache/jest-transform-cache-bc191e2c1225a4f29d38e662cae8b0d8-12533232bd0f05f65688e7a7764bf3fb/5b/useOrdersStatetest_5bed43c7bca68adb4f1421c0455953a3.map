{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\__tests__\\hooks\\admin\\useOrdersState.test.ts"],"sourcesContent":["// ===================================\n// PINTEYA E-COMMERCE - USEORDERSSTATE TESTS\n// Tests completos para el hook de estado de órdenes\n// ===================================\n\nimport { renderHook, act } from '@testing-library/react'\nimport { describe, it, expect, beforeEach, jest } from '@jest/globals'\nimport { useOrdersState } from '@/hooks/admin/useOrdersState'\n\n// ===================================\n// DATOS DE PRUEBA\n// ===================================\n\nconst mockInitialFilters = {\n  page: 1,\n  limit: 20,\n  sort_by: 'created_at',\n  sort_order: 'desc' as const,\n}\n\nconst mockOrdersData = {\n  orders: [\n    { id: '1', order_number: 'ORD-001', status: 'pending', total: 100 },\n    { id: '2', order_number: 'ORD-002', status: 'confirmed', total: 200 },\n  ],\n  pagination: { page: 1, totalPages: 5, hasNextPage: true },\n  analytics: { totalOrders: 2, totalRevenue: 300 },\n}\n\nconst mockUpdatedFilters = {\n  page: 2,\n  limit: 10,\n  status: 'confirmed',\n  search: 'test',\n}\n\n// ===================================\n// SETUP\n// ===================================\n\nbeforeEach(() => {\n  jest.clearAllMocks()\n})\n\n// ===================================\n// TESTS PRINCIPALES\n// ===================================\n\ndescribe('useOrdersState', () => {\n  it('debe inicializarse con estado por defecto', () => {\n    const { result } = renderHook(() => useOrdersState(mockInitialFilters))\n\n    expect(result.current.orders).toEqual([])\n    expect(result.current.pagination).toBeNull()\n    expect(result.current.analytics).toBeNull()\n    expect(result.current.filters).toEqual(mockInitialFilters)\n    expect(result.current.isLoading).toBe(false)\n    expect(result.current.error).toBeNull()\n  })\n\n  it('debe proporcionar todas las funciones necesarias', () => {\n    const { result } = renderHook(() => useOrdersState(mockInitialFilters))\n\n    expect(result.current.updateFilters).toBeDefined()\n    expect(result.current.setLoading).toBeDefined()\n    expect(result.current.setError).toBeDefined()\n    expect(result.current.setOrders).toBeDefined()\n    expect(result.current.setPagination).toBeDefined()\n    expect(result.current.setAnalytics).toBeDefined()\n    expect(result.current.clearError).toBeDefined()\n    expect(result.current.resetState).toBeDefined()\n    expect(result.current.areFiltersEqual).toBeDefined()\n\n    // Verificar que son funciones\n    expect(typeof result.current.updateFilters).toBe('function')\n    expect(typeof result.current.setLoading).toBe('function')\n    expect(typeof result.current.setError).toBe('function')\n    expect(typeof result.current.setOrders).toBe('function')\n    expect(typeof result.current.setPagination).toBe('function')\n    expect(typeof result.current.setAnalytics).toBe('function')\n    expect(typeof result.current.clearError).toBe('function')\n    expect(typeof result.current.resetState).toBe('function')\n    expect(typeof result.current.areFiltersEqual).toBe('function')\n  })\n\n  it('debe actualizar filtros correctamente', () => {\n    const { result } = renderHook(() => useOrdersState(mockInitialFilters))\n\n    act(() => {\n      result.current.updateFilters(mockUpdatedFilters)\n    })\n\n    expect(result.current.filters).toEqual({\n      ...mockInitialFilters,\n      ...mockUpdatedFilters,\n    })\n  })\n\n  it('debe mantener inmutabilidad al actualizar filtros', () => {\n    const { result } = renderHook(() => useOrdersState(mockInitialFilters))\n\n    const originalFilters = result.current.filters\n\n    act(() => {\n      result.current.updateFilters({ page: 2 })\n    })\n\n    // Los filtros originales no deben haber cambiado\n    expect(originalFilters).toEqual(mockInitialFilters)\n    // Los nuevos filtros deben ser diferentes\n    expect(result.current.filters).not.toBe(originalFilters)\n    expect(result.current.filters.page).toBe(2)\n  })\n\n  it('debe establecer estado de carga correctamente', () => {\n    const { result } = renderHook(() => useOrdersState(mockInitialFilters))\n\n    act(() => {\n      result.current.setLoading(true)\n    })\n\n    expect(result.current.isLoading).toBe(true)\n\n    act(() => {\n      result.current.setLoading(false)\n    })\n\n    expect(result.current.isLoading).toBe(false)\n  })\n\n  it('debe establecer y limpiar errores correctamente', () => {\n    const { result } = renderHook(() => useOrdersState(mockInitialFilters))\n\n    const testError = new Error('Test error')\n\n    act(() => {\n      result.current.setError(testError)\n    })\n\n    expect(result.current.error).toBe(testError)\n\n    act(() => {\n      result.current.clearError()\n    })\n\n    expect(result.current.error).toBeNull()\n  })\n\n  it('debe establecer órdenes correctamente', () => {\n    const { result } = renderHook(() => useOrdersState(mockInitialFilters))\n\n    act(() => {\n      result.current.setOrders(mockOrdersData.orders)\n    })\n\n    expect(result.current.orders).toEqual(mockOrdersData.orders)\n  })\n\n  it('debe establecer paginación correctamente', () => {\n    const { result } = renderHook(() => useOrdersState(mockInitialFilters))\n\n    act(() => {\n      result.current.setPagination(mockOrdersData.pagination)\n    })\n\n    expect(result.current.pagination).toEqual(mockOrdersData.pagination)\n  })\n\n  it('debe establecer analytics correctamente', () => {\n    const { result } = renderHook(() => useOrdersState(mockInitialFilters))\n\n    act(() => {\n      result.current.setAnalytics(mockOrdersData.analytics)\n    })\n\n    expect(result.current.analytics).toEqual(mockOrdersData.analytics)\n  })\n\n  it('debe resetear estado correctamente', () => {\n    const { result } = renderHook(() => useOrdersState(mockInitialFilters))\n\n    // Establecer algún estado\n    act(() => {\n      result.current.setOrders(mockOrdersData.orders)\n      result.current.setPagination(mockOrdersData.pagination)\n      result.current.setAnalytics(mockOrdersData.analytics)\n      result.current.setLoading(true)\n      result.current.setError(new Error('Test error'))\n    })\n\n    // Verificar que el estado se estableció\n    expect(result.current.orders).toEqual(mockOrdersData.orders)\n    expect(result.current.isLoading).toBe(true)\n    expect(result.current.error).toBeTruthy()\n\n    // Resetear estado\n    act(() => {\n      result.current.resetState()\n    })\n\n    // Verificar que el estado se reseteó\n    expect(result.current.orders).toEqual([])\n    expect(result.current.pagination).toBeNull()\n    expect(result.current.analytics).toBeNull()\n    expect(result.current.isLoading).toBe(false)\n    expect(result.current.error).toBeNull()\n    // Los filtros deben mantenerse\n    expect(result.current.filters).toEqual(mockInitialFilters)\n  })\n\n  it('debe comparar filtros correctamente', () => {\n    const { result } = renderHook(() => useOrdersState(mockInitialFilters))\n\n    // Filtros idénticos\n    const identicalFilters = { ...mockInitialFilters }\n    expect(result.current.areFiltersEqual(mockInitialFilters, identicalFilters)).toBe(true)\n\n    // Filtros diferentes\n    const differentFilters = { ...mockInitialFilters, page: 2 }\n    expect(result.current.areFiltersEqual(mockInitialFilters, differentFilters)).toBe(false)\n\n    // Filtros con propiedades adicionales\n    const filtersWithExtra = { ...mockInitialFilters, status: 'pending' }\n    expect(result.current.areFiltersEqual(mockInitialFilters, filtersWithExtra)).toBe(false)\n\n    // Filtros con valores undefined vs null\n    const filtersWithUndefined = { ...mockInitialFilters, status: undefined }\n    const filtersWithNull = { ...mockInitialFilters, status: null }\n    expect(result.current.areFiltersEqual(filtersWithUndefined, filtersWithNull)).toBe(false)\n  })\n\n  it('debe manejar valores null y undefined en filtros', () => {\n    const filtersWithNulls = {\n      page: 1,\n      limit: 20,\n      status: null,\n      search: undefined,\n    }\n\n    const { result } = renderHook(() => useOrdersState(filtersWithNulls))\n\n    expect(result.current.filters).toEqual(filtersWithNulls)\n\n    act(() => {\n      result.current.updateFilters({ status: 'pending' })\n    })\n\n    expect(result.current.filters.status).toBe('pending')\n    expect(result.current.filters.search).toBeUndefined()\n  })\n\n  it('debe mantener referencia estable de funciones', () => {\n    const { result, rerender } = renderHook(() => useOrdersState(mockInitialFilters))\n\n    const initialFunctions = {\n      updateFilters: result.current.updateFilters,\n      setLoading: result.current.setLoading,\n      setError: result.current.setError,\n      setOrders: result.current.setOrders,\n      setPagination: result.current.setPagination,\n      setAnalytics: result.current.setAnalytics,\n      clearError: result.current.clearError,\n      resetState: result.current.resetState,\n      areFiltersEqual: result.current.areFiltersEqual,\n    }\n\n    // Re-renderizar\n    rerender()\n\n    // Las funciones deben mantener la misma referencia\n    expect(result.current.updateFilters).toBe(initialFunctions.updateFilters)\n    expect(result.current.setLoading).toBe(initialFunctions.setLoading)\n    expect(result.current.setError).toBe(initialFunctions.setError)\n    expect(result.current.setOrders).toBe(initialFunctions.setOrders)\n    expect(result.current.setPagination).toBe(initialFunctions.setPagination)\n    expect(result.current.setAnalytics).toBe(initialFunctions.setAnalytics)\n    expect(result.current.clearError).toBe(initialFunctions.clearError)\n    expect(result.current.resetState).toBe(initialFunctions.resetState)\n    expect(result.current.areFiltersEqual).toBe(initialFunctions.areFiltersEqual)\n  })\n\n  it('debe manejar actualizaciones de estado múltiples correctamente', () => {\n    const { result } = renderHook(() => useOrdersState(mockInitialFilters))\n\n    act(() => {\n      result.current.setLoading(true)\n      result.current.setOrders(mockOrdersData.orders)\n      result.current.setPagination(mockOrdersData.pagination)\n      result.current.setAnalytics(mockOrdersData.analytics)\n      result.current.setLoading(false)\n    })\n\n    expect(result.current.isLoading).toBe(false)\n    expect(result.current.orders).toEqual(mockOrdersData.orders)\n    expect(result.current.pagination).toEqual(mockOrdersData.pagination)\n    expect(result.current.analytics).toEqual(mockOrdersData.analytics)\n  })\n\n  it('debe manejar filtros complejos con objetos anidados', () => {\n    const complexFilters = {\n      page: 1,\n      limit: 20,\n      dateRange: {\n        start: '2025-01-01',\n        end: '2025-01-31',\n      },\n      statusFilter: {\n        include: ['pending', 'confirmed'],\n        exclude: ['cancelled'],\n      },\n    }\n\n    const { result } = renderHook(() => useOrdersState(complexFilters))\n\n    expect(result.current.filters).toEqual(complexFilters)\n\n    act(() => {\n      result.current.updateFilters({\n        dateRange: {\n          start: '2025-02-01',\n          end: '2025-02-28',\n        },\n      })\n    })\n\n    expect(result.current.filters.dateRange).toEqual({\n      start: '2025-02-01',\n      end: '2025-02-28',\n    })\n    expect(result.current.filters.statusFilter).toEqual(complexFilters.statusFilter)\n  })\n})\n"],"names":["mockInitialFilters","page","limit","sort_by","sort_order","mockOrdersData","orders","id","order_number","status","total","pagination","totalPages","hasNextPage","analytics","totalOrders","totalRevenue","mockUpdatedFilters","search","beforeEach","jest","clearAllMocks","describe","it","result","renderHook","useOrdersState","expect","current","toEqual","toBeNull","filters","isLoading","toBe","error","updateFilters","toBeDefined","setLoading","setError","setOrders","setPagination","setAnalytics","clearError","resetState","areFiltersEqual","act","originalFilters","not","testError","Error","toBeTruthy","identicalFilters","differentFilters","filtersWithExtra","filtersWithUndefined","undefined","filtersWithNull","filtersWithNulls","toBeUndefined","rerender","initialFunctions","complexFilters","dateRange","start","end","statusFilter","include","exclude"],"mappings":"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"}