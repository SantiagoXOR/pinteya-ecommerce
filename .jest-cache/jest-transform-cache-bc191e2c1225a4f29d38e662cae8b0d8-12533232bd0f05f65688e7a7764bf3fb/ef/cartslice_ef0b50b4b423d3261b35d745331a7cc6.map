{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\redux\\features\\cart-slice.ts"],"sourcesContent":["import { createSelector, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { RootState } from '../store'\nimport { loadCartFromStorage } from '../middleware/cartPersistence'\n\ntype InitialState = {\n  items: CartItem[]\n}\n\ntype CartItem = {\n  id: number\n  title: string\n  price: number\n  discountedPrice: number\n  quantity: number\n  imgs?: {\n    thumbnails: string[]\n    previews: string[]\n  }\n}\n\n// Función para obtener el estado inicial con persistencia\nconst getInitialState = (): InitialState => {\n  // En el servidor, siempre retornar estado vacío\n  if (typeof window === 'undefined') {\n    return { items: [] }\n  }\n\n  // En el cliente, intentar cargar desde localStorage\n  try {\n    const persistedItems = loadCartFromStorage()\n    return { items: persistedItems }\n  } catch (error) {\n    console.warn('Error loading persisted cart:', error)\n    return { items: [] }\n  }\n}\n\nconst initialState: InitialState = getInitialState()\n\nexport const cart = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addItemToCart: (state, action: PayloadAction<CartItem>) => {\n      const { id, title, price, quantity, discountedPrice, imgs } = action.payload\n      const existingItem = state.items.find(item => item.id === id)\n\n      if (existingItem) {\n        existingItem.quantity += quantity\n      } else {\n        state.items.push({\n          id,\n          title,\n          price,\n          quantity,\n          discountedPrice,\n          imgs,\n        })\n      }\n    },\n    removeItemFromCart: (state, action: PayloadAction<number>) => {\n      const itemId = action.payload\n      state.items = state.items.filter(item => item.id !== itemId)\n    },\n    updateCartItemQuantity: (state, action: PayloadAction<{ id: number; quantity: number }>) => {\n      const { id, quantity } = action.payload\n      const existingItem = state.items.find(item => item.id === id)\n\n      if (existingItem) {\n        existingItem.quantity = quantity\n      }\n    },\n\n    removeAllItemsFromCart: state => {\n      state.items = []\n    },\n\n    // Acción para hidratar el carrito desde localStorage\n    hydrateCart: (state, action: PayloadAction<CartItem[]>) => {\n      state.items = action.payload\n    },\n\n    // Acción para reemplazar todo el carrito (útil para migración de usuarios)\n    replaceCart: (state, action: PayloadAction<CartItem[]>) => {\n      state.items = action.payload\n    },\n  },\n})\n\nexport const selectCartItems = (state: RootState) => state.cartReducer.items\n\nexport const selectTotalPrice = createSelector([selectCartItems], items => {\n  return items.reduce((total: number, item: CartItem) => {\n    return total + item.discountedPrice * item.quantity\n  }, 0)\n})\n\nexport const {\n  addItemToCart,\n  removeItemFromCart,\n  updateCartItemQuantity,\n  removeAllItemsFromCart,\n  hydrateCart,\n  replaceCart,\n} = cart.actions\nexport default cart.reducer\n"],"names":["addItemToCart","cart","hydrateCart","removeAllItemsFromCart","removeItemFromCart","replaceCart","selectCartItems","selectTotalPrice","updateCartItemQuantity","getInitialState","window","items","persistedItems","loadCartFromStorage","error","console","warn","initialState","createSlice","name","reducers","state","action","id","title","price","quantity","discountedPrice","imgs","payload","existingItem","find","item","push","itemId","filter","cartReducer","createSelector","reduce","total","actions","reducer"],"mappings":";;;;;;;;;;;QAkGEA;eAAAA;;QA3DWC;eAAAA;;QAkEb;eAAA;;QAHEC;eAAAA;;QADAC;eAAAA;;QAFAC;eAAAA;;QAIAC;eAAAA;;QAdWC;eAAAA;;QAEAC;eAAAA;;QASXC;eAAAA;;;yBApGyD;iCAEvB;AAkBpC,0DAA0D;AAC1D,MAAMC,kBAAkB;IACtB,gDAAgD;IAChD,IAAI,OAAOC,WAAW,aAAa;QACjC,OAAO;YAAEC,OAAO,EAAE;QAAC;IACrB;IAEA,oDAAoD;IACpD,IAAI;QACF,MAAMC,iBAAiBC,IAAAA,oCAAmB;QAC1C,OAAO;YAAEF,OAAOC;QAAe;IACjC,EAAE,OAAOE,OAAO;QACdC,QAAQC,IAAI,CAAC,iCAAiCF;QAC9C,OAAO;YAAEH,OAAO,EAAE;QAAC;IACrB;AACF;AAEA,MAAMM,eAA6BR;AAE5B,MAAMR,OAAOiB,IAAAA,oBAAW,EAAC;IAC9BC,MAAM;IACNF;IACAG,UAAU;QACRpB,eAAe,CAACqB,OAAOC;YACrB,MAAM,EAAEC,EAAE,EAAEC,KAAK,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,eAAe,EAAEC,IAAI,EAAE,GAAGN,OAAOO,OAAO;YAC5E,MAAMC,eAAeT,MAAMV,KAAK,CAACoB,IAAI,CAACC,CAAAA,OAAQA,KAAKT,EAAE,KAAKA;YAE1D,IAAIO,cAAc;gBAChBA,aAAaJ,QAAQ,IAAIA;YAC3B,OAAO;gBACLL,MAAMV,KAAK,CAACsB,IAAI,CAAC;oBACfV;oBACAC;oBACAC;oBACAC;oBACAC;oBACAC;gBACF;YACF;QACF;QACAxB,oBAAoB,CAACiB,OAAOC;YAC1B,MAAMY,SAASZ,OAAOO,OAAO;YAC7BR,MAAMV,KAAK,GAAGU,MAAMV,KAAK,CAACwB,MAAM,CAACH,CAAAA,OAAQA,KAAKT,EAAE,KAAKW;QACvD;QACA1B,wBAAwB,CAACa,OAAOC;YAC9B,MAAM,EAAEC,EAAE,EAAEG,QAAQ,EAAE,GAAGJ,OAAOO,OAAO;YACvC,MAAMC,eAAeT,MAAMV,KAAK,CAACoB,IAAI,CAACC,CAAAA,OAAQA,KAAKT,EAAE,KAAKA;YAE1D,IAAIO,cAAc;gBAChBA,aAAaJ,QAAQ,GAAGA;YAC1B;QACF;QAEAvB,wBAAwBkB,CAAAA;YACtBA,MAAMV,KAAK,GAAG,EAAE;QAClB;QAEA,qDAAqD;QACrDT,aAAa,CAACmB,OAAOC;YACnBD,MAAMV,KAAK,GAAGW,OAAOO,OAAO;QAC9B;QAEA,2EAA2E;QAC3ExB,aAAa,CAACgB,OAAOC;YACnBD,MAAMV,KAAK,GAAGW,OAAOO,OAAO;QAC9B;IACF;AACF;AAEO,MAAMvB,kBAAkB,CAACe,QAAqBA,MAAMe,WAAW,CAACzB,KAAK;AAErE,MAAMJ,mBAAmB8B,IAAAA,uBAAc,EAAC;IAAC/B;CAAgB,EAAEK,CAAAA;IAChE,OAAOA,MAAM2B,MAAM,CAAC,CAACC,OAAeP;QAClC,OAAOO,QAAQP,KAAKL,eAAe,GAAGK,KAAKN,QAAQ;IACrD,GAAG;AACL;AAEO,MAAM,EACX1B,aAAa,EACbI,kBAAkB,EAClBI,sBAAsB,EACtBL,sBAAsB,EACtBD,WAAW,EACXG,WAAW,EACZ,GAAGJ,KAAKuC,OAAO;MAChB,WAAevC,KAAKwC,OAAO"}