{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\__tests__\\seo\\seo-optimization-tools.test.ts"],"sourcesContent":["// ===================================\r\n// TESTS - SEO OPTIMIZATION TOOLS\r\n// Tests para herramientas de optimización SEO\r\n// ===================================\r\n\r\nimport { seoOptimizationTools, SEOOptimizationTools } from '@/lib/seo/seo-optimization-tools';\r\n\r\ninterface MockElement {\r\n  getAttribute: (attr: string) => string | null;\r\n  textContent?: string;\r\n}\r\n\r\ninterface MockDocument {\r\n  querySelectorAll: (selector: string) => MockElement[];\r\n  body?: {\r\n    textContent?: string;\r\n    innerHTML?: string;\r\n  };\r\n}\r\n\r\n// Mock DOM Parser para tests\r\nglobal.DOMParser = class DOMParser {\r\n  parseFromString(html: string, type: string) {\r\n    // Simulación básica de DOM parsing\r\n    const mockDoc: MockDocument = {\r\n      body: {\r\n        textContent: html.replace(/<[^>]*>/g, ' ').replace(/\\s+/g, ' ').trim()\r\n      },\r\n      querySelectorAll: (selector: string) => {\r\n        const matches: MockElement[] = [];\r\n        \r\n        if (selector === 'h1') {\r\n          const h1Matches = html.match(/<h1[^>]*>/g);\r\n          return h1Matches ? Array(h1Matches.length).fill({ textContent: 'H1 Title' }) : [];\r\n        }\r\n        if (selector === 'h2') {\r\n          const h2Matches = html.match(/<h2[^>]*>/g);\r\n          return h2Matches ? Array(h2Matches.length).fill({ textContent: 'H2 Title' }) : [];\r\n        }\r\n        if (selector === 'h3') {\r\n          const h3Matches = html.match(/<h3[^>]*>/g);\r\n          return h3Matches ? Array(h3Matches.length).fill({ textContent: 'H3 Title' }) : [];\r\n        }\r\n        if (selector === 'img') {\r\n          const imgMatches = html.match(/<img[^>]*>/g);\r\n          return imgMatches ? imgMatches.map(img => ({\r\n            getAttribute: (attr: string) => {\r\n              if (attr === 'alt') return img.includes('alt=') ? 'Alt text' : null;\r\n              if (attr === 'src') return img.includes('large') ? 'large-image.jpg' : 'image.jpg';\r\n              return null;\r\n            }\r\n          })) : [];\r\n        }\r\n        if (selector === 'a[href]') {\r\n          const linkMatches = html.match(/<a[^>]*href[^>]*>/g);\r\n          return linkMatches ? linkMatches.map(link => ({\r\n            getAttribute: (attr: string) => {\r\n              if (attr === 'href') {\r\n                if (link.includes('http') && !link.includes('pinteya-ecommerce.vercel.app')) {\r\n                  return 'https://external.com';\r\n                }\r\n                return '/internal-link';\r\n              }\r\n              if (attr === 'rel') return link.includes('nofollow') ? 'nofollow' : null;\r\n              return null;\r\n            },\r\n            textContent: 'Link text'\r\n          })) : [];\r\n        }\r\n        \r\n        return matches;\r\n      }\r\n    };\r\n    \r\n    return mockDoc as MockDocument;\r\n  }\r\n};\r\n\r\ndescribe('SEOOptimizationTools', () => {\r\n  \r\n  describe('Singleton Pattern', () => {\r\n    test('mantiene una sola instancia', () => {\r\n      const instance1 = SEOOptimizationTools.getInstance();\r\n      const instance2 = SEOOptimizationTools.getInstance();\r\n      \r\n      expect(instance1).toBe(instance2);\r\n      expect(instance1).toBe(seoOptimizationTools);\r\n    });\r\n  });\r\n\r\n  describe('Content Analysis', () => {\r\n    const sampleHTML = `\r\n      <html>\r\n        <body>\r\n          <h1>Título Principal</h1>\r\n          <h2>Subtítulo</h2>\r\n          <p>Este es un párrafo de contenido con palabras clave como pintura y herramientas. \r\n             El contenido debe ser suficientemente largo para el análisis SEO.</p>\r\n          <img src=\"image1.jpg\" alt=\"Imagen con alt text\" />\r\n          <img src=\"large-image.jpg\" />\r\n          <a href=\"/internal-link\">Enlace interno</a>\r\n          <a href=\"https://external.com\">Enlace externo</a>\r\n          <a href=\"/nofollow-link\" rel=\"nofollow\">Enlace nofollow</a>\r\n        </body>\r\n      </html>\r\n    `;\r\n\r\n    test('analiza contenido correctamente', () => {\r\n      const analysis = seoOptimizationTools.analyzeContent(sampleHTML, ['pintura', 'herramientas']);\r\n\r\n      expect(analysis.wordCount).toBeGreaterThan(0);\r\n      expect(analysis.readabilityScore).toBeGreaterThan(0);\r\n      expect(analysis.keywordDensity).toHaveProperty('pintura');\r\n      expect(analysis.keywordDensity).toHaveProperty('herramientas');\r\n      expect(analysis.seoScore).toBeGreaterThan(0);\r\n      expect(analysis.recommendations).toBeInstanceOf(Array);\r\n    });\r\n\r\n    test('analiza estructura de headings', () => {\r\n      const analysis = seoOptimizationTools.analyzeContent(sampleHTML);\r\n\r\n      expect(analysis.headingStructure.h1Count).toBe(1);\r\n      expect(analysis.headingStructure.h2Count).toBe(1);\r\n      expect(analysis.headingStructure.hasProperStructure).toBe(true);\r\n    });\r\n\r\n    test('analiza imágenes correctamente', () => {\r\n      const analysis = seoOptimizationTools.analyzeContent(sampleHTML);\r\n\r\n      expect(analysis.imageAnalysis.totalImages).toBe(2);\r\n      expect(analysis.imageAnalysis.imagesWithAlt).toBe(1);\r\n      expect(analysis.imageAnalysis.imagesWithoutAlt).toBe(1);\r\n      expect(analysis.imageAnalysis.oversizedImages).toBe(1);\r\n    });\r\n\r\n    test('analiza enlaces correctamente', () => {\r\n      const analysis = seoOptimizationTools.analyzeContent(sampleHTML);\r\n\r\n      expect(analysis.linkAnalysis.internalLinks).toBe(2);\r\n      expect(analysis.linkAnalysis.externalLinks).toBe(1);\r\n      expect(analysis.linkAnalysis.noFollowLinks).toBe(1);\r\n    });\r\n\r\n    test('calcula densidad de keywords', () => {\r\n      const analysis = seoOptimizationTools.analyzeContent(sampleHTML, ['pintura', 'herramientas']);\r\n\r\n      expect(analysis.keywordDensity['pintura']).toBeGreaterThan(0);\r\n      expect(analysis.keywordDensity['herramientas']).toBeGreaterThan(0);\r\n    });\r\n\r\n    test('genera recomendaciones relevantes', () => {\r\n      const shortHTML = '<html><body><p>Contenido muy corto</p></body></html>';\r\n      const analysis = seoOptimizationTools.analyzeContent(shortHTML);\r\n\r\n      expect(analysis.recommendations).toContain('Aumentar el contenido a al menos 300 palabras');\r\n    });\r\n  });\r\n\r\n  describe('Title Optimization', () => {\r\n    test('optimiza título agregando keyword', () => {\r\n      const currentTitle = 'Productos de Calidad';\r\n      const targetKeyword = 'pinturas';\r\n      \r\n      const suggestion = seoOptimizationTools.optimizeTitle(currentTitle, targetKeyword);\r\n\r\n      expect(suggestion.type).toBe('title');\r\n      expect(suggestion.priority).toBe('high');\r\n      expect(suggestion.suggested).toContain('pinturas');\r\n      expect(suggestion.impact).toBeGreaterThan(0);\r\n    });\r\n\r\n    test('trunca títulos muy largos', () => {\r\n      const longTitle = 'Este es un título extremadamente largo que definitivamente excede los 60 caracteres recomendados';\r\n      const targetKeyword = 'pinturas';\r\n      \r\n      const suggestion = seoOptimizationTools.optimizeTitle(longTitle, targetKeyword, 60);\r\n\r\n      expect(suggestion.suggested.length).toBeLessThanOrEqual(60);\r\n      expect(suggestion.suggested).toContain('...');\r\n    });\r\n\r\n    test('mantiene títulos que ya incluyen keyword', () => {\r\n      const currentTitle = 'Pinturas de Alta Calidad';\r\n      const targetKeyword = 'pinturas';\r\n      \r\n      const suggestion = seoOptimizationTools.optimizeTitle(currentTitle, targetKeyword);\r\n\r\n      expect(suggestion.suggested).not.toContain('pinturas - Pinturas');\r\n    });\r\n  });\r\n\r\n  describe('Meta Description Optimization', () => {\r\n    test('optimiza descripción agregando keyword y CTA', () => {\r\n      const currentDescription = 'Productos de alta calidad para tu hogar.';\r\n      const targetKeyword = 'pinturas';\r\n      \r\n      const suggestion = seoOptimizationTools.optimizeMetaDescription(currentDescription, targetKeyword);\r\n\r\n      expect(suggestion.type).toBe('description');\r\n      expect(suggestion.suggested).toContain('pinturas');\r\n      expect(suggestion.suggested).toMatch(/compra|descubre|encuentra|explora|ver más/i);\r\n    });\r\n\r\n    test('trunca descripciones muy largas', () => {\r\n      const longDescription = 'Esta es una descripción extremadamente larga que definitivamente excede los 160 caracteres recomendados para meta descriptions y necesita ser truncada apropiadamente para SEO.';\r\n      const targetKeyword = 'pinturas';\r\n      \r\n      const suggestion = seoOptimizationTools.optimizeMetaDescription(longDescription, targetKeyword, 160);\r\n\r\n      expect(suggestion.suggested.length).toBeLessThanOrEqual(160);\r\n    });\r\n  });\r\n\r\n  describe('Keyword Suggestions', () => {\r\n    test('genera sugerencias de keywords relacionadas', async () => {\r\n      const suggestions = await seoOptimizationTools.suggestKeywords('pintura');\r\n\r\n      expect(suggestions).toBeInstanceOf(Array);\r\n      expect(suggestions.length).toBeGreaterThan(0);\r\n      \r\n      suggestions.forEach(suggestion => {\r\n        expect(suggestion).toHaveProperty('keyword');\r\n        expect(suggestion).toHaveProperty('searchVolume');\r\n        expect(suggestion).toHaveProperty('difficulty');\r\n        expect(suggestion).toHaveProperty('relevanceScore');\r\n        expect(suggestion).toHaveProperty('opportunity');\r\n        expect(suggestion).toHaveProperty('intent');\r\n      });\r\n    });\r\n\r\n    test('incluye variaciones relevantes de keyword base', async () => {\r\n      const suggestions = await seoOptimizationTools.suggestKeywords('pintura');\r\n\r\n      const keywords = suggestions.map(s => s.keyword);\r\n      expect(keywords.some(k => k.includes('pintura online'))).toBe(true);\r\n      expect(keywords.some(k => k.includes('pintura argentina'))).toBe(true);\r\n    });\r\n  });\r\n\r\n  describe('Competitor Analysis', () => {\r\n    test('analiza competidores para keywords', async () => {\r\n      const keywords = ['pintura', 'herramientas'];\r\n      const analysis = await seoOptimizationTools.analyzeCompetitors(keywords);\r\n\r\n      expect(analysis).toBeInstanceOf(Array);\r\n      expect(analysis.length).toBeGreaterThan(0);\r\n      \r\n      analysis.forEach(item => {\r\n        expect(item).toHaveProperty('keyword');\r\n        expect(item).toHaveProperty('competitorRanking');\r\n        expect(item).toHaveProperty('searchVolume');\r\n        expect(item).toHaveProperty('difficulty');\r\n        expect(item).toHaveProperty('gap');\r\n      });\r\n    });\r\n  });\r\n\r\n  describe('Readability Calculation', () => {\r\n    test('calcula score de legibilidad', () => {\r\n      const text = 'Este es un texto simple. Tiene oraciones cortas. Es fácil de leer.';\r\n      const analysis = seoOptimizationTools.analyzeContent(`<html><body><p>${text}</p></body></html>`);\r\n\r\n      expect(analysis.readabilityScore).toBeGreaterThan(0);\r\n      expect(analysis.readabilityScore).toBeLessThanOrEqual(100);\r\n    });\r\n\r\n    test('penaliza texto con oraciones muy largas', () => {\r\n      const longText = 'Esta es una oración extremadamente larga que contiene muchas palabras y cláusulas subordinadas que hacen que sea difícil de leer y comprender para la mayoría de los usuarios, lo cual afecta negativamente la experiencia del usuario y el SEO.';\r\n      const shortText = 'Texto corto. Fácil de leer. Buena experiencia.';\r\n\r\n      const longAnalysis = seoOptimizationTools.analyzeContent(`<html><body><p>${longText}</p></body></html>`);\r\n      const shortAnalysis = seoOptimizationTools.analyzeContent(`<html><body><p>${shortText}</p></body></html>`);\r\n\r\n      expect(shortAnalysis.readabilityScore).toBeGreaterThan(longAnalysis.readabilityScore);\r\n    });\r\n  });\r\n\r\n  describe('SEO Score Calculation', () => {\r\n    test('calcula score SEO basado en múltiples factores', () => {\r\n      const goodHTML = `\r\n        <html>\r\n          <body>\r\n            <h1>Título Principal con Keyword</h1>\r\n            <h2>Subtítulo Relevante</h2>\r\n            <p>Contenido extenso y bien estructurado con keywords relevantes como pintura y herramientas. \r\n               Este párrafo tiene suficiente longitud para ser considerado contenido de calidad.\r\n               Incluye información valiosa para los usuarios y está optimizado para SEO.</p>\r\n            <img src=\"image1.jpg\" alt=\"Descripción detallada de la imagen\" />\r\n            <img src=\"image2.jpg\" alt=\"Otra imagen con alt text\" />\r\n            <a href=\"/categoria-pinturas\">Enlace interno relevante</a>\r\n            <a href=\"/herramientas\">Otro enlace interno</a>\r\n          </body>\r\n        </html>\r\n      `;\r\n\r\n      const analysis = seoOptimizationTools.analyzeContent(goodHTML, ['pintura', 'herramientas']);\r\n\r\n      expect(analysis.seoScore).toBeGreaterThan(50);\r\n      expect(analysis.seoScore).toBeLessThanOrEqual(100);\r\n    });\r\n\r\n    test('penaliza contenido con problemas SEO', () => {\r\n      const badHTML = `\r\n        <html>\r\n          <body>\r\n            <p>Contenido muy corto sin estructura.</p>\r\n            <img src=\"image.jpg\" />\r\n          </body>\r\n        </html>\r\n      `;\r\n\r\n      const analysis = seoOptimizationTools.analyzeContent(badHTML);\r\n\r\n      expect(analysis.seoScore).toBeLessThan(50);\r\n      expect(analysis.recommendations.length).toBeGreaterThan(0);\r\n    });\r\n  });\r\n});\r\n"],"names":["global","DOMParser","parseFromString","html","type","mockDoc","body","textContent","replace","trim","querySelectorAll","selector","matches","h1Matches","match","Array","length","fill","h2Matches","h3Matches","imgMatches","map","img","getAttribute","attr","includes","linkMatches","link","describe","test","instance1","SEOOptimizationTools","getInstance","instance2","expect","toBe","seoOptimizationTools","sampleHTML","analysis","analyzeContent","wordCount","toBeGreaterThan","readabilityScore","keywordDensity","toHaveProperty","seoScore","recommendations","toBeInstanceOf","headingStructure","h1Count","h2Count","hasProperStructure","imageAnalysis","totalImages","imagesWithAlt","imagesWithoutAlt","oversizedImages","linkAnalysis","internalLinks","externalLinks","noFollowLinks","shortHTML","toContain","currentTitle","targetKeyword","suggestion","optimizeTitle","priority","suggested","impact","longTitle","toBeLessThanOrEqual","not","currentDescription","optimizeMetaDescription","toMatch","longDescription","suggestions","suggestKeywords","forEach","keywords","s","keyword","some","k","analyzeCompetitors","item","text","longText","shortText","longAnalysis","shortAnalysis","goodHTML","badHTML","toBeLessThan"],"mappings":"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"}