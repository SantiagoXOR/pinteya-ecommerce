{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\__tests__\\seo\\enhanced-seo-optimization-tools.test.ts"],"sourcesContent":["// ===================================\r\n// PINTEYA E-COMMERCE - ENHANCED SEO OPTIMIZATION TOOLS TESTS\r\n// Tests comprehensivos para el sistema de herramientas de optimización SEO\r\n// ===================================\r\n\r\nimport { \r\n  EnhancedSEOOptimizationTools,\r\n  enhancedSEOOptimizationTools,\r\n  type SEOOptimizationConfig,\r\n  type CompetitorAnalysisResult,\r\n  type ABTestResult,\r\n  type CoreWebVitalsOptimization,\r\n  type ContentOptimizationSuggestion,\r\n  type TechnicalSEOAuditResult,\r\n  type AutomatedRecommendation\r\n} from '@/lib/seo/seo-optimization-tools';\r\n\r\n// Mock dependencies\r\njest.mock('@/lib/logger', () => ({\r\n  logger: {\r\n    info: jest.fn(),\r\n    warn: jest.fn(),\r\n    error: jest.fn()\r\n  },\r\n  LogLevel: {\r\n    INFO: 'info',\r\n    WARN: 'warn',\r\n    ERROR: 'error'\r\n  },\r\n  LogCategory: {\r\n    SEO: 'seo'\r\n  }\r\n}));\r\n\r\njest.mock('@/lib/redis', () => ({\r\n  getRedisClient: jest.fn().mockResolvedValue({\r\n    get: jest.fn(),\r\n    setex: jest.fn(),\r\n    keys: jest.fn().mockResolvedValue([]),\r\n    del: jest.fn()\r\n  })\r\n}));\r\n\r\njest.mock('@/lib/supabase', () => ({\r\n  getSupabaseClient: jest.fn().mockResolvedValue({})\r\n}));\r\n\r\njest.mock('@/lib/seo/seo-analytics-manager', () => ({\r\n  enhancedSEOAnalyticsManager: {\r\n    trackSEOMetrics: jest.fn()\r\n  }\r\n}));\r\n\r\ndescribe('Enhanced SEO Optimization Tools', () => {\r\n  let seoTools: EnhancedSEOOptimizationTools;\r\n\r\n  beforeEach(() => {\r\n    // Crear nueva instancia para cada test\r\n    seoTools = EnhancedSEOOptimizationTools.getInstance();\r\n\r\n    // Resetear configuración a valores por defecto\r\n    seoTools.configure({\r\n      enableCompetitorAnalysis: true,\r\n      enableABTesting: true,\r\n      enableCoreWebVitalsOptimization: true,\r\n      enableKeywordResearch: true,\r\n      enableContentOptimization: true,\r\n      enableTechnicalAudit: true\r\n    });\r\n\r\n    jest.clearAllMocks();\r\n  });\r\n\r\n  describe('Initialization', () => {\r\n    test('should create singleton instance', () => {\r\n      const instance1 = EnhancedSEOOptimizationTools.getInstance();\r\n      const instance2 = EnhancedSEOOptimizationTools.getInstance();\r\n      \r\n      expect(instance1).toBe(instance2);\r\n      expect(instance1).toBeInstanceOf(EnhancedSEOOptimizationTools);\r\n    });\r\n\r\n    test('should initialize with default configuration', () => {\r\n      const stats = seoTools.getUsageStats();\r\n      \r\n      expect(stats).toHaveProperty('activeABTests');\r\n      expect(stats).toHaveProperty('totalRecommendations');\r\n      expect(stats).toHaveProperty('cacheSize');\r\n      expect(stats).toHaveProperty('enabledFeatures');\r\n      expect(stats.enabledFeatures).toContain('CompetitorAnalysis');\r\n      expect(stats.enabledFeatures).toContain('ABTesting');\r\n    });\r\n\r\n    test('should accept custom configuration', () => {\r\n      const customConfig: Partial<SEOOptimizationConfig> = {\r\n        enableCompetitorAnalysis: false,\r\n        enableABTesting: true,\r\n        abTestDuration: 30\r\n      };\r\n\r\n      const customInstance = EnhancedSEOOptimizationTools.getInstance(customConfig);\r\n      expect(customInstance).toBeInstanceOf(EnhancedSEOOptimizationTools);\r\n    });\r\n  });\r\n\r\n  describe('Competitor Analysis', () => {\r\n    test('should analyze competitors successfully', async () => {\r\n      const competitors = ['competitor1.com', 'competitor2.com'];\r\n      \r\n      const results = await seoTools.analyzeCompetitors(competitors);\r\n      \r\n      expect(results).toHaveLength(2);\r\n      expect(results[0]).toHaveProperty('competitor');\r\n      expect(results[0]).toHaveProperty('domain');\r\n      expect(results[0]).toHaveProperty('overallScore');\r\n      expect(results[0]).toHaveProperty('strengths');\r\n      expect(results[0]).toHaveProperty('weaknesses');\r\n      expect(results[0]).toHaveProperty('opportunities');\r\n      expect(results[0]).toHaveProperty('keywordGaps');\r\n      expect(results[0]).toHaveProperty('contentGaps');\r\n      expect(results[0]).toHaveProperty('backlinksAnalysis');\r\n      expect(results[0]).toHaveProperty('socialSignals');\r\n      \r\n      expect(results[0].overallScore).toBeGreaterThanOrEqual(60);\r\n      expect(results[0].overallScore).toBeLessThanOrEqual(100);\r\n      expect(Array.isArray(results[0].keywordGaps)).toBe(true);\r\n      expect(Array.isArray(results[0].contentGaps)).toBe(true);\r\n    });\r\n\r\n    test('should handle competitor analysis errors', async () => {\r\n      // Deshabilitar análisis de competidores\r\n      seoTools.configure({ enableCompetitorAnalysis: false });\r\n      \r\n      await expect(seoTools.analyzeCompetitors(['test.com']))\r\n        .rejects.toThrow('Competitor analysis is disabled');\r\n    });\r\n\r\n    test('should analyze keyword gaps correctly', async () => {\r\n      const results = await seoTools.analyzeCompetitors(['competitor.com']);\r\n      const keywordGaps = results[0].keywordGaps;\r\n      \r\n      expect(keywordGaps.length).toBeGreaterThan(0);\r\n      expect(keywordGaps[0]).toHaveProperty('keyword');\r\n      expect(keywordGaps[0]).toHaveProperty('competitorRanking');\r\n      expect(keywordGaps[0]).toHaveProperty('searchVolume');\r\n      expect(keywordGaps[0]).toHaveProperty('difficulty');\r\n      expect(keywordGaps[0]).toHaveProperty('opportunity');\r\n      expect(['high', 'medium', 'low']).toContain(keywordGaps[0].opportunity);\r\n    });\r\n  });\r\n\r\n  describe('A/B Testing', () => {\r\n    test('should create A/B test successfully', async () => {\r\n      const testConfig = {\r\n        name: 'Product Page Title Test',\r\n        url: '/products/test',\r\n        variants: [\r\n          {\r\n            name: 'Control',\r\n            metadata: { title: 'Original Title' }\r\n          },\r\n          {\r\n            name: 'Variant A',\r\n            metadata: { title: 'Optimized Title' }\r\n          }\r\n        ]\r\n      };\r\n      \r\n      const testId = await seoTools.createABTest(testConfig);\r\n      \r\n      expect(testId).toMatch(/^ab_test_\\d+_[a-z0-9]+$/);\r\n    });\r\n\r\n    test('should update A/B test metrics', async () => {\r\n      const testConfig = {\r\n        name: 'Test',\r\n        url: '/test',\r\n        variants: [\r\n          { name: 'Control', metadata: { title: 'Control' } },\r\n          { name: 'Variant', metadata: { title: 'Variant' } }\r\n        ]\r\n      };\r\n      \r\n      const testId = await seoTools.createABTest(testConfig);\r\n      \r\n      await expect(seoTools.updateABTestMetrics(testId, 'variant_0', {\r\n        impressions: 100,\r\n        clicks: 5,\r\n        conversions: 1\r\n      })).resolves.not.toThrow();\r\n    });\r\n\r\n    test('should analyze A/B test results', async () => {\r\n      const testConfig = {\r\n        name: 'Test',\r\n        url: '/test',\r\n        variants: [\r\n          { name: 'Control', metadata: { title: 'Control' } },\r\n          { name: 'Variant', metadata: { title: 'Variant' } }\r\n        ]\r\n      };\r\n      \r\n      const testId = await seoTools.createABTest(testConfig);\r\n      \r\n      // Agregar métricas\r\n      await seoTools.updateABTestMetrics(testId, 'variant_0', {\r\n        impressions: 100,\r\n        clicks: 5,\r\n        conversions: 1\r\n      });\r\n      \r\n      const results = await seoTools.analyzeABTestResults(testId);\r\n      \r\n      expect(results).toHaveProperty('testId', testId);\r\n      expect(results).toHaveProperty('status');\r\n      expect(results).toHaveProperty('variants');\r\n      expect(results).toHaveProperty('results');\r\n      expect(results.variants).toHaveLength(2);\r\n    });\r\n\r\n    test('should handle A/B testing errors', async () => {\r\n      seoTools.configure({ enableABTesting: false });\r\n      \r\n      await expect(seoTools.createABTest({\r\n        name: 'Test',\r\n        url: '/test',\r\n        variants: []\r\n      })).rejects.toThrow('A/B Testing is disabled');\r\n    });\r\n  });\r\n\r\n  describe('Core Web Vitals', () => {\r\n    test('should analyze Core Web Vitals successfully', async () => {\r\n      const url = 'https://pinteya.com/products/test';\r\n      \r\n      const analysis = await seoTools.analyzeCoreWebVitals(url);\r\n      \r\n      expect(analysis).toHaveProperty('url', url);\r\n      expect(analysis).toHaveProperty('currentMetrics');\r\n      expect(analysis).toHaveProperty('targetMetrics');\r\n      expect(analysis).toHaveProperty('optimizations');\r\n      expect(analysis).toHaveProperty('overallScore');\r\n      expect(analysis).toHaveProperty('improvementPotential');\r\n      \r\n      expect(analysis.currentMetrics).toHaveProperty('lcp');\r\n      expect(analysis.currentMetrics).toHaveProperty('fid');\r\n      expect(analysis.currentMetrics).toHaveProperty('cls');\r\n      expect(analysis.currentMetrics).toHaveProperty('fcp');\r\n      expect(analysis.currentMetrics).toHaveProperty('ttfb');\r\n      expect(analysis.currentMetrics).toHaveProperty('inp');\r\n      \r\n      expect(analysis.overallScore).toBeGreaterThanOrEqual(0);\r\n      expect(analysis.overallScore).toBeLessThanOrEqual(100);\r\n      expect(Array.isArray(analysis.optimizations)).toBe(true);\r\n    });\r\n\r\n    test('should generate appropriate optimizations', async () => {\r\n      const analysis = await seoTools.analyzeCoreWebVitals('https://test.com');\r\n      \r\n      if (analysis.optimizations.length > 0) {\r\n        const optimization = analysis.optimizations[0];\r\n        \r\n        expect(optimization).toHaveProperty('metric');\r\n        expect(optimization).toHaveProperty('issue');\r\n        expect(optimization).toHaveProperty('solution');\r\n        expect(optimization).toHaveProperty('priority');\r\n        expect(optimization).toHaveProperty('estimatedImpact');\r\n        expect(optimization).toHaveProperty('implementationEffort');\r\n        expect(optimization).toHaveProperty('resources');\r\n        \r\n        expect(['critical', 'high', 'medium', 'low']).toContain(optimization.priority);\r\n        expect(['low', 'medium', 'high']).toContain(optimization.implementationEffort);\r\n        expect(Array.isArray(optimization.resources)).toBe(true);\r\n      }\r\n    });\r\n\r\n    test('should handle Core Web Vitals errors', async () => {\r\n      seoTools.configure({ enableCoreWebVitalsOptimization: false });\r\n      \r\n      await expect(seoTools.analyzeCoreWebVitals('https://test.com'))\r\n        .rejects.toThrow('Core Web Vitals optimization is disabled');\r\n    });\r\n  });\r\n\r\n  describe('Content Optimization', () => {\r\n    test('should optimize content successfully', async () => {\r\n      const url = 'https://pinteya.com/products/test';\r\n      const contentType = 'product';\r\n      \r\n      const optimization = await seoTools.optimizeContent(url, contentType);\r\n      \r\n      expect(optimization).toHaveProperty('url', url);\r\n      expect(optimization).toHaveProperty('contentType', contentType);\r\n      expect(optimization).toHaveProperty('currentScore');\r\n      expect(optimization).toHaveProperty('targetScore');\r\n      expect(optimization).toHaveProperty('suggestions');\r\n      expect(optimization).toHaveProperty('keywordOptimization');\r\n      expect(optimization).toHaveProperty('readabilityAnalysis');\r\n      \r\n      expect(optimization.currentScore).toBeGreaterThanOrEqual(40);\r\n      expect(optimization.currentScore).toBeLessThanOrEqual(80);\r\n      expect(optimization.targetScore).toBe(85);\r\n      expect(Array.isArray(optimization.suggestions)).toBe(true);\r\n    });\r\n\r\n    test('should generate relevant content suggestions', async () => {\r\n      const optimization = await seoTools.optimizeContent('https://test.com', 'product');\r\n      \r\n      if (optimization.suggestions.length > 0) {\r\n        const suggestion = optimization.suggestions[0];\r\n        \r\n        expect(suggestion).toHaveProperty('type');\r\n        expect(suggestion).toHaveProperty('current');\r\n        expect(suggestion).toHaveProperty('suggested');\r\n        expect(suggestion).toHaveProperty('reason');\r\n        expect(suggestion).toHaveProperty('impact');\r\n        expect(suggestion).toHaveProperty('difficulty');\r\n        \r\n        expect(['title', 'description', 'headings', 'content', 'images', 'links', 'schema'])\r\n          .toContain(suggestion.type);\r\n        expect(['high', 'medium', 'low']).toContain(suggestion.impact);\r\n        expect(['easy', 'medium', 'hard']).toContain(suggestion.difficulty);\r\n      }\r\n    });\r\n\r\n    test('should handle content optimization errors', async () => {\r\n      seoTools.configure({ enableContentOptimization: false });\r\n      \r\n      await expect(seoTools.optimizeContent('https://test.com', 'product'))\r\n        .rejects.toThrow('Content optimization is disabled');\r\n    });\r\n  });\r\n\r\n  describe('Technical SEO Audit', () => {\r\n    test('should perform technical audit successfully', async () => {\r\n      const url = 'https://pinteya.com';\r\n      \r\n      const audit = await seoTools.performTechnicalAudit(url);\r\n      \r\n      expect(audit).toHaveProperty('url', url);\r\n      expect(audit).toHaveProperty('overallScore');\r\n      expect(audit).toHaveProperty('issues');\r\n      expect(audit).toHaveProperty('categories');\r\n      expect(audit).toHaveProperty('recommendations');\r\n      \r\n      expect(audit.overallScore).toBeGreaterThanOrEqual(0);\r\n      expect(audit.overallScore).toBeLessThanOrEqual(100);\r\n      expect(Array.isArray(audit.issues)).toBe(true);\r\n      expect(Array.isArray(audit.recommendations)).toBe(true);\r\n      \r\n      expect(audit.categories).toHaveProperty('crawlability');\r\n      expect(audit.categories).toHaveProperty('indexability');\r\n      expect(audit.categories).toHaveProperty('performance');\r\n      expect(audit.categories).toHaveProperty('mobile');\r\n      expect(audit.categories).toHaveProperty('security');\r\n      expect(audit.categories).toHaveProperty('structured_data');\r\n    });\r\n\r\n    test('should handle technical audit errors', async () => {\r\n      seoTools.configure({ enableTechnicalAudit: false });\r\n      \r\n      await expect(seoTools.performTechnicalAudit('https://test.com'))\r\n        .rejects.toThrow('Technical SEO audit is disabled');\r\n    });\r\n  });\r\n\r\n  describe('Automated Recommendations', () => {\r\n    test('should generate automated recommendations', async () => {\r\n      const recommendations = await seoTools.generateAutomatedRecommendations();\r\n      \r\n      expect(Array.isArray(recommendations)).toBe(true);\r\n      expect(recommendations.length).toBeGreaterThan(0);\r\n      \r\n      const recommendation = recommendations[0];\r\n      expect(recommendation).toHaveProperty('id');\r\n      expect(recommendation).toHaveProperty('type');\r\n      expect(recommendation).toHaveProperty('priority');\r\n      expect(recommendation).toHaveProperty('title');\r\n      expect(recommendation).toHaveProperty('description');\r\n      expect(recommendation).toHaveProperty('actionItems');\r\n      expect(recommendation).toHaveProperty('expectedResults');\r\n      expect(recommendation).toHaveProperty('createdAt');\r\n      expect(recommendation).toHaveProperty('status');\r\n      \r\n      expect(['keyword', 'content', 'technical', 'competitor', 'performance'])\r\n        .toContain(recommendation.type);\r\n      expect(['critical', 'high', 'medium', 'low']).toContain(recommendation.priority);\r\n      expect(['pending', 'in_progress', 'completed', 'dismissed']).toContain(recommendation.status);\r\n    });\r\n  });\r\n\r\n  describe('Configuration and Utilities', () => {\r\n    test('should update configuration', () => {\r\n      const newConfig = {\r\n        enableCompetitorAnalysis: false,\r\n        abTestDuration: 30\r\n      };\r\n      \r\n      expect(() => seoTools.configure(newConfig)).not.toThrow();\r\n    });\r\n\r\n    test('should get usage statistics', () => {\r\n      const stats = seoTools.getUsageStats();\r\n      \r\n      expect(stats).toHaveProperty('activeABTests');\r\n      expect(stats).toHaveProperty('totalRecommendations');\r\n      expect(stats).toHaveProperty('cacheSize');\r\n      expect(stats).toHaveProperty('enabledFeatures');\r\n      \r\n      expect(typeof stats.activeABTests).toBe('number');\r\n      expect(typeof stats.totalRecommendations).toBe('number');\r\n      expect(typeof stats.cacheSize).toBe('number');\r\n      expect(Array.isArray(stats.enabledFeatures)).toBe(true);\r\n    });\r\n\r\n    test('should clear cache', async () => {\r\n      await expect(seoTools.clearCache()).resolves.not.toThrow();\r\n    });\r\n\r\n    test('should destroy instance properly', async () => {\r\n      await expect(seoTools.destroy()).resolves.not.toThrow();\r\n    });\r\n  });\r\n\r\n  describe('Error Handling', () => {\r\n    test('should handle invalid competitor URLs', async () => {\r\n      const results = await seoTools.analyzeCompetitors(['invalid-url']);\r\n      expect(results).toHaveLength(1);\r\n      expect(results[0]).toHaveProperty('competitor', 'invalid-url');\r\n    });\r\n\r\n    test('should handle missing A/B test', async () => {\r\n      await expect(seoTools.updateABTestMetrics('nonexistent', 'variant_0', {}))\r\n        .rejects.toThrow('A/B Test nonexistent not found');\r\n    });\r\n\r\n    test('should handle invalid variant ID', async () => {\r\n      const testConfig = {\r\n        name: 'Test',\r\n        url: '/test',\r\n        variants: [{ name: 'Control', metadata: { title: 'Control' } }]\r\n      };\r\n      \r\n      const testId = await seoTools.createABTest(testConfig);\r\n      \r\n      await expect(seoTools.updateABTestMetrics(testId, 'invalid_variant', {}))\r\n        .rejects.toThrow('Variant invalid_variant not found');\r\n    });\r\n  });\r\n});\r\n"],"names":["jest","mock","logger","info","fn","warn","error","LogLevel","INFO","WARN","ERROR","LogCategory","SEO","getRedisClient","mockResolvedValue","get","setex","keys","del","getSupabaseClient","enhancedSEOAnalyticsManager","trackSEOMetrics","describe","seoTools","beforeEach","EnhancedSEOOptimizationTools","getInstance","configure","enableCompetitorAnalysis","enableABTesting","enableCoreWebVitalsOptimization","enableKeywordResearch","enableContentOptimization","enableTechnicalAudit","clearAllMocks","test","instance1","instance2","expect","toBe","toBeInstanceOf","stats","getUsageStats","toHaveProperty","enabledFeatures","toContain","customConfig","abTestDuration","customInstance","competitors","results","analyzeCompetitors","toHaveLength","overallScore","toBeGreaterThanOrEqual","toBeLessThanOrEqual","Array","isArray","keywordGaps","contentGaps","rejects","toThrow","length","toBeGreaterThan","opportunity","testConfig","name","url","variants","metadata","title","testId","createABTest","toMatch","updateABTestMetrics","impressions","clicks","conversions","resolves","not","analyzeABTestResults","analysis","analyzeCoreWebVitals","currentMetrics","optimizations","optimization","priority","implementationEffort","resources","contentType","optimizeContent","currentScore","targetScore","suggestions","suggestion","type","impact","difficulty","audit","performTechnicalAudit","issues","recommendations","categories","generateAutomatedRecommendations","recommendation","status","newConfig","activeABTests","totalRecommendations","cacheSize","clearCache","destroy"],"mappings":"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"}