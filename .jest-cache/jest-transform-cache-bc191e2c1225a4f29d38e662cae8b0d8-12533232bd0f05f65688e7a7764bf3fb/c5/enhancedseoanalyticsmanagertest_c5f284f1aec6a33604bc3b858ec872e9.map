{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\__tests__\\seo\\enhanced-seo-analytics-manager.test.ts"],"sourcesContent":["// ===================================\r\n// PINTEYA E-COMMERCE - ENHANCED SEO ANALYTICS MANAGER TESTS\r\n// Tests comprehensivos para el sistema avanzado de análisis SEO\r\n// ===================================\r\n\r\nimport { \r\n  EnhancedSEOAnalyticsManager,\r\n  enhancedSEOAnalyticsManager,\r\n  DEFAULT_SEO_CONFIG,\r\n  SEOMetrics,\r\n  KeywordMetrics,\r\n  SEOAlert,\r\n  SEOReport\r\n} from '@/lib/seo/seo-analytics-manager';\r\n\r\n// Mock dependencies\r\njest.mock('@/lib/logger', () => ({\r\n  logger: {\r\n    info: jest.fn(),\r\n    warn: jest.fn(),\r\n    error: jest.fn()\r\n  },\r\n  LogLevel: {\r\n    INFO: 'info',\r\n    WARN: 'warn',\r\n    ERROR: 'error'\r\n  },\r\n  LogCategory: {\r\n    SEO: 'seo'\r\n  }\r\n}));\r\n\r\njest.mock('@/lib/redis', () => ({\r\n  getRedisClient: jest.fn().mockResolvedValue({\r\n    setex: jest.fn(),\r\n    get: jest.fn(),\r\n    del: jest.fn()\r\n  })\r\n}));\r\n\r\njest.mock('@/lib/monitoring/real-time-performance-monitor', () => ({\r\n  realTimePerformanceMonitor: {\r\n    getCurrentMetrics: jest.fn().mockReturnValue({\r\n      webVitals: [{\r\n        lcp: 2000,\r\n        fid: 80,\r\n        cls: 0.05,\r\n        fcp: 1500,\r\n        ttfb: 300,\r\n        inp: 150\r\n      }]\r\n    })\r\n  }\r\n}));\r\n\r\njest.mock('@/lib/monitoring/advanced-alerting-engine', () => ({\r\n  advancedAlertingEngine: {\r\n    createAlert: jest.fn()\r\n  },\r\n  AlertType: {\r\n    PERFORMANCE: 'performance'\r\n  },\r\n  AlertSeverity: {\r\n    CRITICAL: 'critical'\r\n  }\r\n}));\r\n\r\ndescribe('Enhanced SEO Analytics Manager', () => {\r\n  let manager: EnhancedSEOAnalyticsManager;\r\n\r\n  beforeEach(() => {\r\n    // Crear nueva instancia para cada test\r\n    manager = EnhancedSEOAnalyticsManager.getInstance();\r\n    jest.clearAllMocks();\r\n  });\r\n\r\n  afterEach(() => {\r\n    // Limpiar intervalos y listeners\r\n    manager.destroy();\r\n  });\r\n\r\n  describe('Inicialización', () => {\r\n    it('debe inicializar con configuración por defecto', () => {\r\n      expect(manager).toBeDefined();\r\n      expect(manager).toBeInstanceOf(EnhancedSEOAnalyticsManager);\r\n    });\r\n\r\n    it('debe ser singleton', () => {\r\n      const instance1 = EnhancedSEOAnalyticsManager.getInstance();\r\n      const instance2 = EnhancedSEOAnalyticsManager.getInstance();\r\n      expect(instance1).toBe(instance2);\r\n    });\r\n\r\n    it('debe aceptar configuración personalizada', () => {\r\n      const customConfig = {\r\n        enableRealTimeTracking: false,\r\n        metricsUpdateInterval: 30\r\n      };\r\n      \r\n      const customManager = EnhancedSEOAnalyticsManager.getInstance(customConfig);\r\n      expect(customManager).toBeDefined();\r\n    });\r\n  });\r\n\r\n  describe('Recopilación de Métricas', () => {\r\n    it('debe recopilar Core Web Vitals correctamente', async () => {\r\n      const coreWebVitals = await manager.collectCoreWebVitals();\r\n      \r\n      expect(coreWebVitals).toHaveProperty('lcp');\r\n      expect(coreWebVitals).toHaveProperty('fid');\r\n      expect(coreWebVitals).toHaveProperty('cls');\r\n      expect(coreWebVitals).toHaveProperty('fcp');\r\n      expect(coreWebVitals).toHaveProperty('ttfb');\r\n      expect(coreWebVitals).toHaveProperty('inp');\r\n      expect(coreWebVitals).toHaveProperty('score');\r\n      expect(coreWebVitals).toHaveProperty('speedIndex');\r\n      expect(coreWebVitals).toHaveProperty('totalBlockingTime');\r\n      \r\n      expect(['good', 'needs-improvement', 'poor']).toContain(coreWebVitals.score);\r\n    });\r\n\r\n    it('debe analizar estado de indexación', async () => {\r\n      const indexationStatus = await manager.analyzeIndexationStatus();\r\n      \r\n      expect(indexationStatus).toHaveProperty('totalPages');\r\n      expect(indexationStatus).toHaveProperty('indexedPages');\r\n      expect(indexationStatus).toHaveProperty('notIndexedPages');\r\n      expect(indexationStatus).toHaveProperty('indexationRate');\r\n      expect(indexationStatus).toHaveProperty('crawlErrors');\r\n      expect(indexationStatus).toHaveProperty('sitemapStatus');\r\n      expect(indexationStatus).toHaveProperty('lastCrawlDate');\r\n      \r\n      expect(indexationStatus.indexationRate).toBeGreaterThanOrEqual(0);\r\n      expect(indexationStatus.indexationRate).toBeLessThanOrEqual(100);\r\n    });\r\n\r\n    it('debe evaluar métricas técnicas de SEO', async () => {\r\n      const technicalSEO = await manager.evaluateTechnicalSEO();\r\n      \r\n      expect(technicalSEO).toHaveProperty('mobileUsability');\r\n      expect(technicalSEO).toHaveProperty('pagespeedScore');\r\n      expect(technicalSEO).toHaveProperty('httpsUsage');\r\n      expect(technicalSEO).toHaveProperty('structuredDataErrors');\r\n      expect(technicalSEO).toHaveProperty('metaTagsOptimization');\r\n      expect(technicalSEO).toHaveProperty('internalLinkingScore');\r\n      expect(technicalSEO).toHaveProperty('imageOptimization');\r\n      expect(technicalSEO).toHaveProperty('canonicalIssues');\r\n    });\r\n  });\r\n\r\n  describe('Análisis de Keywords', () => {\r\n    it('debe analizar keywords con métricas avanzadas', async () => {\r\n      const keywords = await manager.analyzeKeywords();\r\n      \r\n      expect(Array.isArray(keywords)).toBe(true);\r\n      expect(keywords.length).toBeGreaterThan(0);\r\n      \r\n      const keyword = keywords[0];\r\n      expect(keyword).toHaveProperty('keyword');\r\n      expect(keyword).toHaveProperty('position');\r\n      expect(keyword).toHaveProperty('searchVolume');\r\n      expect(keyword).toHaveProperty('difficulty');\r\n      expect(keyword).toHaveProperty('clicks');\r\n      expect(keyword).toHaveProperty('impressions');\r\n      expect(keyword).toHaveProperty('ctr');\r\n      expect(keyword).toHaveProperty('trend');\r\n      expect(keyword).toHaveProperty('intent');\r\n      expect(keyword).toHaveProperty('competitorRankings');\r\n      expect(keyword).toHaveProperty('relatedKeywords');\r\n      expect(keyword).toHaveProperty('seasonalTrends');\r\n      expect(keyword).toHaveProperty('conversionRate');\r\n      expect(keyword).toHaveProperty('revenue');\r\n      \r\n      expect(['up', 'down', 'stable']).toContain(keyword.trend);\r\n      expect(['informational', 'navigational', 'transactional', 'commercial']).toContain(keyword.intent);\r\n    });\r\n\r\n    it('debe obtener estadísticas de keywords', async () => {\r\n      // Primero analizar keywords para poblar el array\r\n      const keywords = await manager.analyzeKeywords();\r\n      expect(keywords.length).toBeGreaterThan(0);\r\n\r\n      // Luego obtener estadísticas\r\n      const stats = manager.getKeywordStats();\r\n\r\n      expect(stats).toHaveProperty('total');\r\n      expect(stats).toHaveProperty('topPositions');\r\n      expect(stats).toHaveProperty('improvements');\r\n      expect(stats).toHaveProperty('declines');\r\n      expect(stats).toHaveProperty('averagePosition');\r\n\r\n      expect(stats.total).toBeGreaterThan(0);\r\n      expect(stats.averagePosition).toBeGreaterThan(0);\r\n    });\r\n\r\n    it('debe filtrar keywords por tendencia', async () => {\r\n      await manager.analyzeKeywords();\r\n      \r\n      const upTrend = manager.getKeywordsByTrend('up');\r\n      const downTrend = manager.getKeywordsByTrend('down');\r\n      const stable = manager.getKeywordsByTrend('stable');\r\n      \r\n      upTrend.forEach(k => expect(k.trend).toBe('up'));\r\n      downTrend.forEach(k => expect(k.trend).toBe('down'));\r\n      stable.forEach(k => expect(k.trend).toBe('stable'));\r\n    });\r\n  });\r\n\r\n  describe('Sistema de Alertas', () => {\r\n    it('debe detectar problemas SEO', async () => {\r\n      const alerts = await manager.detectSEOIssues();\r\n      \r\n      expect(Array.isArray(alerts)).toBe(true);\r\n      \r\n      if (alerts.length > 0) {\r\n        const alert = alerts[0];\r\n        expect(alert).toHaveProperty('id');\r\n        expect(alert).toHaveProperty('type');\r\n        expect(alert).toHaveProperty('category');\r\n        expect(alert).toHaveProperty('title');\r\n        expect(alert).toHaveProperty('description');\r\n        expect(alert).toHaveProperty('severity');\r\n        expect(alert).toHaveProperty('timestamp');\r\n        expect(alert).toHaveProperty('resolved');\r\n        expect(alert).toHaveProperty('recommendations');\r\n        expect(alert).toHaveProperty('impact');\r\n        expect(alert).toHaveProperty('effort');\r\n        expect(alert).toHaveProperty('priority');\r\n        expect(alert).toHaveProperty('affectedPages');\r\n        expect(alert).toHaveProperty('estimatedTrafficImpact');\r\n        expect(alert).toHaveProperty('estimatedRevenueImpact');\r\n        \r\n        expect(['critical', 'warning', 'info']).toContain(alert.type);\r\n        expect(['technical', 'content', 'performance', 'indexation', 'security', 'mobile', 'schema']).toContain(alert.category);\r\n        expect(['high', 'medium', 'low']).toContain(alert.impact);\r\n        expect(['low', 'medium', 'high']).toContain(alert.effort);\r\n      }\r\n    });\r\n\r\n    it('debe resolver alertas correctamente', async () => {\r\n      // Primero detectar problemas para generar alertas\r\n      const alerts = await manager.detectSEOIssues();\r\n      expect(alerts.length).toBeGreaterThan(0);\r\n\r\n      // Tomar la primera alerta\r\n      const alertId = alerts[0].id;\r\n      expect(alertId).toBeDefined();\r\n\r\n      // Verificar que la alerta existe antes de resolverla\r\n      const unresolvedBefore = manager.getUnresolvedAlerts();\r\n      const alertExists = unresolvedBefore.find(a => a.id === alertId);\r\n      expect(alertExists).toBeDefined();\r\n\r\n      // Resolver la alerta\r\n      const resolved = await manager.resolveAlert(alertId, 'Test resolution');\r\n      expect(resolved).toBe(true);\r\n\r\n      // Verificar que la alerta ya no está en la lista de no resueltas\r\n      const unresolvedAfter = manager.getUnresolvedAlerts();\r\n      const resolvedAlert = unresolvedAfter.find(a => a.id === alertId);\r\n      expect(resolvedAlert).toBeUndefined();\r\n    });\r\n\r\n    it('debe filtrar alertas por tipo', async () => {\r\n      await manager.detectSEOIssues();\r\n      \r\n      const criticalAlerts = manager.getAlertsByType('critical');\r\n      const warningAlerts = manager.getAlertsByType('warning');\r\n      const infoAlerts = manager.getAlertsByType('info');\r\n      \r\n      criticalAlerts.forEach(a => expect(a.type).toBe('critical'));\r\n      warningAlerts.forEach(a => expect(a.type).toBe('warning'));\r\n      infoAlerts.forEach(a => expect(a.type).toBe('info'));\r\n    });\r\n  });\r\n\r\n  describe('Generación de Reportes', () => {\r\n    it('debe generar reporte SEO completo', async () => {\r\n      const report = await manager.generateSEOReport('weekly');\r\n      \r\n      expect(report).toHaveProperty('id');\r\n      expect(report).toHaveProperty('period');\r\n      expect(report).toHaveProperty('startDate');\r\n      expect(report).toHaveProperty('endDate');\r\n      expect(report).toHaveProperty('metrics');\r\n      expect(report).toHaveProperty('keywords');\r\n      expect(report).toHaveProperty('alerts');\r\n      expect(report).toHaveProperty('recommendations');\r\n      expect(report).toHaveProperty('executiveSummary');\r\n      expect(report).toHaveProperty('performanceAnalysis');\r\n      expect(report).toHaveProperty('keywordAnalysis');\r\n      expect(report).toHaveProperty('technicalAnalysis');\r\n      expect(report).toHaveProperty('contentAnalysis');\r\n      expect(report).toHaveProperty('competitiveAnalysis');\r\n      expect(report).toHaveProperty('actionPlan');\r\n      expect(report).toHaveProperty('generatedBy');\r\n      expect(report).toHaveProperty('generatedAt');\r\n      expect(report).toHaveProperty('version');\r\n      \r\n      expect(report.period).toBe('weekly');\r\n      expect(report.generatedBy).toBe('Enhanced SEO Analytics Manager');\r\n      expect(report.version).toBe('2.0.0');\r\n    });\r\n\r\n    it('debe generar resumen ejecutivo', async () => {\r\n      const report = await manager.generateSEOReport('daily');\r\n      const summary = report.executiveSummary;\r\n      \r\n      expect(summary).toHaveProperty('overallScore');\r\n      expect(summary).toHaveProperty('scoreChange');\r\n      expect(summary).toHaveProperty('keyAchievements');\r\n      expect(summary).toHaveProperty('majorConcerns');\r\n      expect(summary).toHaveProperty('quickWins');\r\n      expect(summary).toHaveProperty('budgetRecommendations');\r\n      \r\n      expect(Array.isArray(summary.keyAchievements)).toBe(true);\r\n      expect(Array.isArray(summary.majorConcerns)).toBe(true);\r\n      expect(Array.isArray(summary.quickWins)).toBe(true);\r\n      expect(Array.isArray(summary.budgetRecommendations)).toBe(true);\r\n    });\r\n  });\r\n\r\n  describe('Exportación de Datos', () => {\r\n    it('debe exportar datos para dashboard', async () => {\r\n      const dashboardData = manager.exportDashboardData();\r\n      \r\n      expect(dashboardData).toHaveProperty('overview');\r\n      expect(dashboardData).toHaveProperty('keywords');\r\n      expect(dashboardData).toHaveProperty('alerts');\r\n      expect(dashboardData).toHaveProperty('performance');\r\n      expect(dashboardData).toHaveProperty('competitors');\r\n      expect(dashboardData).toHaveProperty('reports');\r\n      \r\n      expect(dashboardData.overview).toHaveProperty('overallScore');\r\n      expect(dashboardData.overview).toHaveProperty('organicTraffic');\r\n      expect(dashboardData.overview).toHaveProperty('averagePosition');\r\n      expect(dashboardData.overview).toHaveProperty('indexationRate');\r\n      expect(dashboardData.overview).toHaveProperty('coreWebVitalsScore');\r\n      expect(dashboardData.overview).toHaveProperty('unresolvedAlerts');\r\n      expect(dashboardData.overview).toHaveProperty('lastUpdated');\r\n      \r\n      expect(Array.isArray(dashboardData.keywords)).toBe(true);\r\n      expect(Array.isArray(dashboardData.alerts)).toBe(true);\r\n      expect(Array.isArray(dashboardData.reports)).toBe(true);\r\n    });\r\n  });\r\n\r\n  describe('Gestión de Cache', () => {\r\n    it('debe cachear métricas correctamente', async () => {\r\n      const testData = { test: 'data', timestamp: Date.now() };\r\n      \r\n      // El método es privado, pero podemos testear indirectamente\r\n      await manager.collectCoreWebVitals();\r\n      \r\n      // Verificar que no hay errores en el proceso de cache\r\n      expect(true).toBe(true); // Test básico de que no hay errores\r\n    });\r\n  });\r\n\r\n  describe('Limpieza de Datos', () => {\r\n    it('debe limpiar datos antiguos', async () => {\r\n      await manager.cleanupOldData();\r\n      \r\n      // Verificar que el método se ejecuta sin errores\r\n      expect(true).toBe(true);\r\n    });\r\n  });\r\n\r\n  describe('Sistema de Eventos', () => {\r\n    it('debe permitir suscripción y notificación', () => {\r\n      const mockCallback = jest.fn();\r\n      \r\n      manager.subscribe(mockCallback);\r\n      \r\n      // Simular evento\r\n      const testData = { type: 'test', data: 'test_data' };\r\n      manager['notifyListeners'](testData);\r\n      \r\n      expect(mockCallback).toHaveBeenCalledWith(testData);\r\n    });\r\n\r\n    it('debe permitir desuscripción', () => {\r\n      const mockCallback = jest.fn();\r\n      \r\n      manager.subscribe(mockCallback);\r\n      manager.unsubscribe(mockCallback);\r\n      \r\n      // Simular evento\r\n      const testData = { type: 'test', data: 'test_data' };\r\n      manager['notifyListeners'](testData);\r\n      \r\n      expect(mockCallback).not.toHaveBeenCalled();\r\n    });\r\n  });\r\n\r\n  describe('Destrucción y Limpieza', () => {\r\n    it('debe limpiar recursos al destruir', () => {\r\n      const testManager = EnhancedSEOAnalyticsManager.getInstance();\r\n      \r\n      // Verificar que destroy no arroja errores\r\n      expect(() => testManager.destroy()).not.toThrow();\r\n    });\r\n  });\r\n});\r\n"],"names":["jest","mock","logger","info","fn","warn","error","LogLevel","INFO","WARN","ERROR","LogCategory","SEO","getRedisClient","mockResolvedValue","setex","get","del","realTimePerformanceMonitor","getCurrentMetrics","mockReturnValue","webVitals","lcp","fid","cls","fcp","ttfb","inp","advancedAlertingEngine","createAlert","AlertType","PERFORMANCE","AlertSeverity","CRITICAL","describe","manager","beforeEach","EnhancedSEOAnalyticsManager","getInstance","clearAllMocks","afterEach","destroy","it","expect","toBeDefined","toBeInstanceOf","instance1","instance2","toBe","customConfig","enableRealTimeTracking","metricsUpdateInterval","customManager","coreWebVitals","collectCoreWebVitals","toHaveProperty","toContain","score","indexationStatus","analyzeIndexationStatus","indexationRate","toBeGreaterThanOrEqual","toBeLessThanOrEqual","technicalSEO","evaluateTechnicalSEO","keywords","analyzeKeywords","Array","isArray","length","toBeGreaterThan","keyword","trend","intent","stats","getKeywordStats","total","averagePosition","upTrend","getKeywordsByTrend","downTrend","stable","forEach","k","alerts","detectSEOIssues","alert","type","category","impact","effort","alertId","id","unresolvedBefore","getUnresolvedAlerts","alertExists","find","a","resolved","resolveAlert","unresolvedAfter","resolvedAlert","toBeUndefined","criticalAlerts","getAlertsByType","warningAlerts","infoAlerts","report","generateSEOReport","period","generatedBy","version","summary","executiveSummary","keyAchievements","majorConcerns","quickWins","budgetRecommendations","dashboardData","exportDashboardData","overview","reports","testData","test","timestamp","Date","now","cleanupOldData","mockCallback","subscribe","data","toHaveBeenCalledWith","unsubscribe","not","toHaveBeenCalled","testManager","toThrow"],"mappings":"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"}