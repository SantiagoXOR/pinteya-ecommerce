{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\Header\\__tests__\\jest.config.js"],"sourcesContent":["/**\n * Configuración Jest específica para tests del Header\n */\n\nconst path = require('path');\n\nmodule.exports = {\n  // Entorno de testing\n  testEnvironment: 'jsdom',\n  \n  // Archivos de setup\n  setupFilesAfterEnv: [\n    '<rootDir>/src/test-utils/setup.ts',\n    '<rootDir>/src/components/Header/__tests__/setup.ts'\n  ],\n  \n  // Patrones de archivos de test\n  testMatch: [\n    '<rootDir>/src/components/Header/__tests__/**/*.test.{ts,tsx}',\n    '<rootDir>/src/components/Header/__tests__/**/*.spec.{ts,tsx}'\n  ],\n  \n  // Mapeo de módulos\n  moduleNameMapping: {\n    '^@/(.*)$': '<rootDir>/src/$1',\n    '^@/components/(.*)$': '<rootDir>/src/components/$1',\n    '^@/hooks/(.*)$': '<rootDir>/src/hooks/$1',\n    '^@/lib/(.*)$': '<rootDir>/src/lib/$1',\n    '^@/redux/(.*)$': '<rootDir>/src/redux/$1',\n    '^@/app/(.*)$': '<rootDir>/src/app/$1',\n  },\n  \n  // Transformaciones\n  transform: {\n    '^.+\\\\.(ts|tsx)$': ['ts-jest', {\n      tsconfig: {\n        jsx: 'react-jsx',\n      },\n    }],\n    '^.+\\\\.(js|jsx)$': ['babel-jest', {\n      presets: [\n        ['@babel/preset-env', { targets: { node: 'current' } }],\n        ['@babel/preset-react', { runtime: 'automatic' }],\n        '@babel/preset-typescript',\n      ],\n    }],\n  },\n  \n  // Archivos a ignorar en transformaciones\n  transformIgnorePatterns: [\n    'node_modules/(?!(.*\\\\.mjs$|@clerk/nextjs|@tanstack/react-query))',\n  ],\n  \n  // Extensiones de módulos\n  moduleFileExtensions: ['ts', 'tsx', 'js', 'jsx', 'json'],\n  \n  // Cobertura de código\n  collectCoverageFrom: [\n    'src/components/Header/**/*.{ts,tsx}',\n    '!src/components/Header/**/*.stories.{ts,tsx}',\n    '!src/components/Header/**/*.d.ts',\n    '!src/components/Header/__tests__/**/*',\n  ],\n  \n  // Umbrales de cobertura\n  coverageThreshold: {\n    global: {\n      branches: 90,\n      functions: 95,\n      lines: 95,\n      statements: 95,\n    },\n    // Umbrales específicos por archivo\n    'src/components/Header/index.tsx': {\n      branches: 95,\n      functions: 95,\n      lines: 95,\n      statements: 95,\n    },\n    'src/components/Header/AuthSection.tsx': {\n      branches: 90,\n      functions: 95,\n      lines: 95,\n      statements: 95,\n    },\n  },\n  \n  // Reportes de cobertura\n  coverageReporters: [\n    'text',\n    'text-summary',\n    'html',\n    'lcov',\n    'json-summary',\n  ],\n  \n  // Directorio de reportes\n  coverageDirectory: '<rootDir>/coverage/header',\n  \n  // Mocks de archivos estáticos\n  moduleNameMapping: {\n    '\\\\.(css|less|scss|sass)$': 'identity-obj-proxy',\n    '\\\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$': '<rootDir>/src/test-utils/fileMock.js',\n  },\n  \n  // Variables de entorno para tests\n  setupFiles: ['<rootDir>/src/test-utils/env.ts'],\n  \n  // Configuración de timeouts\n  testTimeout: 10000,\n  \n  // Configuración de workers\n  maxWorkers: '50%',\n  \n  // Configuración de cache\n  cache: true,\n  cacheDirectory: '<rootDir>/node_modules/.cache/jest/header',\n  \n  // Configuración de watch\n  watchPathIgnorePatterns: [\n    '<rootDir>/node_modules/',\n    '<rootDir>/coverage/',\n    '<rootDir>/.next/',\n  ],\n  \n  // Configuración de notificaciones\n  notify: true,\n  notifyMode: 'failure-change',\n  \n  // Configuración de verbose\n  verbose: true,\n  \n  // Configuración de bail (detener en primer fallo)\n  bail: false,\n  \n  // Configuración de clear mocks\n  clearMocks: true,\n  restoreMocks: true,\n  \n  // Configuración de globals\n  globals: {\n    'ts-jest': {\n      tsconfig: {\n        jsx: 'react-jsx',\n      },\n    },\n  },\n  \n  // Configuración de test results processor\n  testResultsProcessor: '<rootDir>/src/test-utils/testResultsProcessor.js',\n  \n  // Configuración de reporters\n  reporters: [\n    'default',\n    [\n      'jest-html-reporters',\n      {\n        publicPath: '<rootDir>/coverage/header/html-report',\n        filename: 'report.html',\n        expand: true,\n        hideIcon: false,\n        pageTitle: 'Header Component Test Report',\n      },\n    ],\n    [\n      'jest-junit',\n      {\n        outputDirectory: '<rootDir>/coverage/header',\n        outputName: 'junit.xml',\n        suiteName: 'Header Component Tests',\n      },\n    ],\n  ],\n  \n  // Configuración de test sequences\n  testSequencer: '<rootDir>/src/test-utils/testSequencer.js',\n  \n  // Configuración de error on deprecated\n  errorOnDeprecated: true,\n  \n  // Configuración de detect open handles\n  detectOpenHandles: true,\n  \n  // Configuración de force exit\n  forceExit: false,\n  \n  // Configuración de log heap usage\n  logHeapUsage: false,\n  \n  // Configuración de max concurrency\n  maxConcurrency: 5,\n  \n  // Configuración de pass with no tests\n  passWithNoTests: true,\n  \n  // Configuración de preset\n  preset: 'ts-jest/presets/js-with-ts',\n  \n  // Configuración de project display name\n  displayName: {\n    name: 'Header Component Tests',\n    color: 'blue',\n  },\n  \n  // Configuración de runner\n  runner: 'jest-runner',\n  \n  // Configuración de silent\n  silent: false,\n  \n  // Configuración de update snapshot\n  updateSnapshot: false,\n  \n  // Configuración de use stderr\n  useStderr: false,\n  \n  // Configuración de watch\n  watch: false,\n  watchAll: false,\n};\n"],"names":["path","require","module","exports","testEnvironment","setupFilesAfterEnv","testMatch","moduleNameMapping","transform","tsconfig","jsx","presets","targets","node","runtime","transformIgnorePatterns","moduleFileExtensions","collectCoverageFrom","coverageThreshold","global","branches","functions","lines","statements","coverageReporters","coverageDirectory","setupFiles","testTimeout","maxWorkers","cache","cacheDirectory","watchPathIgnorePatterns","notify","notifyMode","verbose","bail","clearMocks","restoreMocks","globals","testResultsProcessor","reporters","publicPath","filename","expand","hideIcon","pageTitle","outputDirectory","outputName","suiteName","testSequencer","errorOnDeprecated","detectOpenHandles","forceExit","logHeapUsage","maxConcurrency","passWithNoTests","preset","displayName","name","color","runner","silent","updateSnapshot","useStderr","watch","watchAll"],"mappings":"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"}