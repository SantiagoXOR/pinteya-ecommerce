{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useUserProfile.ts"],"sourcesContent":["// ===================================\n// PINTEYA E-COMMERCE - HOOK PARA PERFIL DE USUARIO\n// ===================================\n\nimport { useState, useEffect, useCallback } from 'react';\n\nexport interface UserProfile {\n  id: string;\n  clerk_id: string;\n  name: string;\n  email: string;\n  created_at: string;\n  updated_at: string;\n}\n\nexport interface UseUserProfileReturn {\n  profile: UserProfile | null;\n  loading: boolean;\n  error: string | null;\n  updateProfile: (data: Partial<UserProfile>) => Promise<boolean>;\n  refreshProfile: () => void;\n}\n\nexport function useUserProfile(): UseUserProfileReturn {\n  const [profile, setProfile] = useState<UserProfile | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const fetchProfile = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      const response = await fetch('/api/user/profile');\n      const data = await response.json();\n\n      if (data.success) {\n        setProfile(data.profile);\n      } else {\n        setError(data.error || 'Error obteniendo perfil');\n      }\n    } catch (err) {\n      setError('Error de conexión');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  const updateProfile = useCallback(async (data: Partial<UserProfile>): Promise<boolean> => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      const response = await fetch('/api/user/profile', {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n\n      const result = await response.json();\n\n      if (result.success) {\n        setProfile(result.profile);\n        return true;\n      } else {\n        setError(result.error || 'Error actualizando perfil');\n        return false;\n      }\n    } catch (err) {\n      setError('Error de conexión');\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  const refreshProfile = useCallback(() => {\n    fetchProfile();\n  }, [fetchProfile]);\n\n  useEffect(() => {\n    fetchProfile();\n  }, [fetchProfile]);\n\n  return {\n    profile,\n    loading,\n    error,\n    updateProfile,\n    refreshProfile,\n  };\n}\n"],"names":["useUserProfile","profile","setProfile","useState","loading","setLoading","error","setError","fetchProfile","useCallback","response","fetch","data","json","success","err","updateProfile","method","headers","body","JSON","stringify","result","refreshProfile","useEffect"],"mappings":"AAAA,sCAAsC;AACtC,mDAAmD;AACnD,sCAAsC;;;;;+BAqBtBA;;;eAAAA;;;uBAnBiC;AAmB1C,SAASA;IACd,MAAM,CAACC,SAASC,WAAW,GAAGC,IAAAA,eAAQ,EAAqB;IAC3D,MAAM,CAACC,SAASC,WAAW,GAAGF,IAAAA,eAAQ,EAAC;IACvC,MAAM,CAACG,OAAOC,SAAS,GAAGJ,IAAAA,eAAQ,EAAgB;IAElD,MAAMK,eAAeC,IAAAA,kBAAW,EAAC;QAC/B,IAAI;YACFJ,WAAW;YACXE,SAAS;YAET,MAAMG,WAAW,MAAMC,MAAM;YAC7B,MAAMC,OAAO,MAAMF,SAASG,IAAI;YAEhC,IAAID,KAAKE,OAAO,EAAE;gBAChBZ,WAAWU,KAAKX,OAAO;YACzB,OAAO;gBACLM,SAASK,KAAKN,KAAK,IAAI;YACzB;QACF,EAAE,OAAOS,KAAK;YACZR,SAAS;QACX,SAAU;YACRF,WAAW;QACb;IACF,GAAG,EAAE;IAEL,MAAMW,gBAAgBP,IAAAA,kBAAW,EAAC,OAAOG;QACvC,IAAI;YACFP,WAAW;YACXE,SAAS;YAET,MAAMG,WAAW,MAAMC,MAAM,qBAAqB;gBAChDM,QAAQ;gBACRC,SAAS;oBACP,gBAAgB;gBAClB;gBACAC,MAAMC,KAAKC,SAAS,CAACT;YACvB;YAEA,MAAMU,SAAS,MAAMZ,SAASG,IAAI;YAElC,IAAIS,OAAOR,OAAO,EAAE;gBAClBZ,WAAWoB,OAAOrB,OAAO;gBACzB,OAAO;YACT,OAAO;gBACLM,SAASe,OAAOhB,KAAK,IAAI;gBACzB,OAAO;YACT;QACF,EAAE,OAAOS,KAAK;YACZR,SAAS;YACT,OAAO;QACT,SAAU;YACRF,WAAW;QACb;IACF,GAAG,EAAE;IAEL,MAAMkB,iBAAiBd,IAAAA,kBAAW,EAAC;QACjCD;IACF,GAAG;QAACA;KAAa;IAEjBgB,IAAAA,gBAAS,EAAC;QACRhB;IACF,GAAG;QAACA;KAAa;IAEjB,OAAO;QACLP;QACAG;QACAE;QACAU;QACAO;IACF;AACF"}