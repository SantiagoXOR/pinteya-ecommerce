1ed00bed4e556507a7c2bcb1b2bed4c4
/**
 * Tests de integración para el Header
 * Verifica la funcionalidad completa del header mobile
 */ "use strict";
// Mock de Clerk
jest.mock('@clerk/nextjs', ()=>({
        SignedIn: ({ children })=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                "data-testid": "signed-in",
                children: children
            }),
        SignedOut: ({ children })=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                "data-testid": "signed-out",
                children: children
            }),
        UserButton: ()=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                "data-testid": "user-button",
                children: "UserButton"
            }),
        useUser: ()=>({
                isSignedIn: false,
                user: null,
                isLoaded: true
            })
    }));
// Mock de Next.js
jest.mock('next/link', ()=>{
    return ({ children, href, ...props })=>/*#__PURE__*/ (0, _jsxruntime.jsx)("a", {
            href: href,
            ...props,
            children: children
        });
});
jest.mock('next/image', ()=>{
    return ({ src, alt, ...props })=>/*#__PURE__*/ (0, _jsxruntime.jsx)("img", {
            src: src,
            alt: alt,
            ...props
        });
});
jest.mock('@/hooks/useGeolocation', ()=>({
        useGeolocation: ()=>({
                detectedZone: {
                    name: 'Córdoba Capital',
                    available: true
                },
                requestLocation: mockRequestLocation,
                selectZone: mockSelectZone,
                permissionStatus: 'prompt',
                isLoading: false,
                error: null,
                location: null,
                getAvailableZones: ()=>[],
                deliveryZones: []
            })
    }));
// Mock del componente de búsqueda
jest.mock('@/components/ui/SearchAutocompleteIntegrated', ()=>{
    return {
        SearchAutocompleteIntegrated: ({ placeholder, className })=>/*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                "data-testid": "search-input",
                placeholder: placeholder,
                className: className
            })
    };
});
// Mock de hooks de animación
jest.mock('@/hooks/useCartAnimation', ()=>({
        useCartAnimation: ()=>({
                isAnimating: false
            })
    }));
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_default(require("react"));
const _react1 = require("@testing-library/react");
const _reactredux = require("react-redux");
const _reactquery = require("@tanstack/react-query");
const _toolkit = require("@reduxjs/toolkit");
const _index = /*#__PURE__*/ _interop_require_default(require("../index"));
const _cartslice = require("../../../redux/features/cart-slice");
const _CartSidebarModalContext = require("../../../app/context/CartSidebarModalContext");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
// Mock del hook de geolocalización
const mockRequestLocation = jest.fn();
const mockSelectZone = jest.fn();
// Setup del store de Redux
const createTestStore = ()=>{
    return (0, _toolkit.configureStore)({
        reducer: {
            cartReducer: _cartslice.cartReducer
        },
        preloadedState: {
            cartReducer: {
                items: [],
                totalQuantity: 0,
                totalPrice: 0
            }
        }
    });
};
// Setup del QueryClient
const createTestQueryClient = ()=>{
    return new _reactquery.QueryClient({
        defaultOptions: {
            queries: {
                retry: false
            }
        }
    });
};
// Wrapper de providers para tests
const TestWrapper = ({ children })=>{
    const store = createTestStore();
    const queryClient = createTestQueryClient();
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactredux.Provider, {
        store: store,
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactquery.QueryClientProvider, {
            client: queryClient,
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_CartSidebarModalContext.CartSidebarModalProvider, {
                children: children
            })
        })
    });
};
describe('Header Integration Tests', ()=>{
    beforeEach(()=>{
        jest.clearAllMocks();
        // Mock window.matchMedia para responsive
        Object.defineProperty(window, 'matchMedia', {
            writable: true,
            value: jest.fn().mockImplementation((query)=>({
                    matches: false,
                    media: query,
                    onchange: null,
                    addListener: jest.fn(),
                    removeListener: jest.fn(),
                    addEventListener: jest.fn(),
                    removeEventListener: jest.fn(),
                    dispatchEvent: jest.fn()
                }))
        });
    });
    describe('Renderizado del Header Mobile', ()=>{
        it('debe renderizar todos los elementos del header mobile', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            // Verificar logo
            expect(_react1.screen.getByAltText('Pinteya - Tu Pinturería Online')).toBeInTheDocument();
            // Verificar campo de búsqueda
            expect(_react1.screen.getByTestId('search-input')).toBeInTheDocument();
            expect(_react1.screen.getByPlaceholderText('latex interior blanco 20lts')).toBeInTheDocument();
            // Verificar ubicación
            expect(_react1.screen.getByText(/Envíos a/)).toBeInTheDocument();
            expect(_react1.screen.getByText('Córdoba Capital')).toBeInTheDocument();
            // Verificar autenticación
            expect(_react1.screen.getByTestId('signed-out')).toBeInTheDocument();
        });
        it('debe tener el layout correcto en mobile', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            // Verificar que el logo y búsqueda están en la misma línea
            const logo = _react1.screen.getByAltText('Pinteya - Tu Pinturería Online');
            const searchInput = _react1.screen.getByTestId('search-input');
            expect(logo).toBeInTheDocument();
            expect(searchInput).toBeInTheDocument();
        });
    });
    describe('Funcionalidad del Logo', ()=>{
        it('debe ser clickeable y navegar al inicio', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            const logoLink = _react1.screen.getByAltText('Pinteya - Tu Pinturería Online').closest('a');
            expect(logoLink).toHaveAttribute('href', '/');
        });
        it('debe tener el tamaño correcto (64x64px)', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            const logo = _react1.screen.getByAltText('Pinteya - Tu Pinturería Online');
            expect(logo).toHaveClass('h-16', 'w-16'); // 64px = 16 * 4px
        });
    });
    describe('Campo de Búsqueda', ()=>{
        it('debe tener el placeholder correcto', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            expect(_react1.screen.getByPlaceholderText('latex interior blanco 20lts')).toBeInTheDocument();
        });
        it('debe tener los estilos correctos', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            const searchInput = _react1.screen.getByTestId('search-input');
            expect(searchInput).toHaveClass('bg-[#fff3c5]'); // Fondo amarillo
        });
    });
    describe('Funcionalidad de Geolocalización', ()=>{
        it('debe mostrar la ubicación detectada', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            expect(_react1.screen.getByText('Córdoba Capital')).toBeInTheDocument();
        });
        it('debe solicitar ubicación al hacer click', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            const locationButton = _react1.screen.getByText(/Envíos a/).closest('div');
            _react1.fireEvent.click(locationButton);
            expect(mockRequestLocation).toHaveBeenCalled();
        });
        it('debe mostrar estado de carga', ()=>{
            // Mock del hook con estado de carga
            jest.doMock('@/hooks/useGeolocation', ()=>({
                    useGeolocation: ()=>({
                            detectedZone: null,
                            requestLocation: mockRequestLocation,
                            selectZone: mockSelectZone,
                            permissionStatus: 'prompt',
                            isLoading: true,
                            error: null,
                            location: null,
                            getAvailableZones: ()=>[],
                            deliveryZones: []
                        })
                }));
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            expect(_react1.screen.getByText('Detectando ubicación...')).toBeInTheDocument();
        });
    });
    describe('Autenticación', ()=>{
        it('debe mostrar botón de iniciar sesión cuando no está autenticado', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            expect(_react1.screen.getByText('Iniciar Sesión')).toBeInTheDocument();
        });
        it('debe tener el enlace correcto para iniciar sesión', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            const signinLink = _react1.screen.getByText('Iniciar Sesión').closest('a');
            expect(signinLink).toHaveAttribute('href', '/signin');
        });
    });
    describe('Responsive Design', ()=>{
        it('debe ocultar elementos desktop en mobile', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            // El header desktop debería estar oculto en mobile
            const desktopElements = _react1.screen.queryAllByText('Todo');
            expect(desktopElements).toHaveLength(0);
        });
        it('debe mostrar layout mobile específico', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            // Verificar que existe el contenedor mobile
            const mobileContainer = _react1.screen.getByText(/Envíos a/).closest('.sm\\:hidden');
            expect(mobileContainer).toBeInTheDocument();
        });
    });
    describe('Interacciones del Usuario', ()=>{
        it('debe manejar click en logo', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            const logo = _react1.screen.getByAltText('Pinteya - Tu Pinturería Online');
            _react1.fireEvent.click(logo);
            // El logo debería ser clickeable (verificado por el href)
            const logoLink = logo.closest('a');
            expect(logoLink).toHaveAttribute('href', '/');
        });
        it('debe manejar click en ubicación', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            const locationElement = _react1.screen.getByText(/Envíos a/).closest('div');
            _react1.fireEvent.click(locationElement);
            expect(mockRequestLocation).toHaveBeenCalled();
        });
        it('debe manejar focus en campo de búsqueda', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            const searchInput = _react1.screen.getByTestId('search-input');
            _react1.fireEvent.focus(searchInput);
            expect(searchInput).toHaveFocus();
        });
    });
    describe('Estados de Error', ()=>{
        it('debe manejar error de geolocalización', ()=>{
            // Mock del hook con error
            jest.doMock('@/hooks/useGeolocation', ()=>({
                    useGeolocation: ()=>({
                            detectedZone: {
                                name: 'Córdoba Capital',
                                available: true
                            },
                            requestLocation: mockRequestLocation,
                            selectZone: mockSelectZone,
                            permissionStatus: 'denied',
                            isLoading: false,
                            error: 'Permisos de ubicación denegados',
                            location: null,
                            getAvailableZones: ()=>[],
                            deliveryZones: []
                        })
                }));
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            // Debería mostrar la ubicación por defecto
            expect(_react1.screen.getByText('Córdoba Capital')).toBeInTheDocument();
        });
    });
    describe('Accesibilidad', ()=>{
        it('debe tener elementos accesibles por teclado', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            const logo = _react1.screen.getByAltText('Pinteya - Tu Pinturería Online');
            const searchInput = _react1.screen.getByTestId('search-input');
            const signinButton = _react1.screen.getByText('Iniciar Sesión');
            expect(logo.closest('a')).toHaveAttribute('href');
            expect(searchInput).toBeInTheDocument();
            expect(signinButton.closest('a')).toHaveAttribute('href');
        });
        it('debe tener textos alternativos apropiados', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            expect(_react1.screen.getByAltText('Pinteya - Tu Pinturería Online')).toBeInTheDocument();
        });
    });
});

//# sourceMappingURL=data:application/json;base64,