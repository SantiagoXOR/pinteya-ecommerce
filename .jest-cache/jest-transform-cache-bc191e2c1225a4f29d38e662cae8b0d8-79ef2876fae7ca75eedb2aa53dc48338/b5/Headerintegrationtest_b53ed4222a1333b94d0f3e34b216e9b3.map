{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\Header\\__tests__\\Header.integration.test.tsx"],"sourcesContent":["/**\n * Tests de integración para el Header\n * Verifica la funcionalidad completa del header mobile\n */\n\nimport React from 'react';\nimport { render, screen, fireEvent, waitFor } from '@testing-library/react';\nimport { Provider } from 'react-redux';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { configureStore } from '@reduxjs/toolkit';\nimport Header from '../index';\nimport { cartReducer } from '@/redux/features/cart-slice';\nimport { CartSidebarModalProvider } from '@/app/context/CartSidebarModalContext';\n\n// Mock de Clerk\njest.mock('@clerk/nextjs', () => ({\n  SignedIn: ({ children }: { children: React.ReactNode }) => (\n    <div data-testid=\"signed-in\">{children}</div>\n  ),\n  SignedOut: ({ children }: { children: React.ReactNode }) => (\n    <div data-testid=\"signed-out\">{children}</div>\n  ),\n  UserButton: () => <div data-testid=\"user-button\">UserButton</div>,\n  useUser: () => ({ isSignedIn: false, user: null, isLoaded: true }),\n}));\n\n// Mock de Next.js\njest.mock('next/link', () => {\n  return ({ children, href, ...props }: any) => (\n    <a href={href} {...props}>\n      {children}\n    </a>\n  );\n});\n\njest.mock('next/image', () => {\n  return ({ src, alt, ...props }: any) => (\n    <img src={src} alt={alt} {...props} />\n  );\n});\n\n// Mock del hook de geolocalización\nconst mockRequestLocation = jest.fn();\nconst mockSelectZone = jest.fn();\n\njest.mock('@/hooks/useGeolocation', () => ({\n  useGeolocation: () => ({\n    detectedZone: { name: 'Córdoba Capital', available: true },\n    requestLocation: mockRequestLocation,\n    selectZone: mockSelectZone,\n    permissionStatus: 'prompt',\n    isLoading: false,\n    error: null,\n    location: null,\n    getAvailableZones: () => [],\n    deliveryZones: [],\n  }),\n}));\n\n// Mock del componente de búsqueda\njest.mock('@/components/ui/SearchAutocompleteIntegrated', () => {\n  return {\n    SearchAutocompleteIntegrated: ({ placeholder, className }: any) => (\n      <input\n        data-testid=\"search-input\"\n        placeholder={placeholder}\n        className={className}\n      />\n    ),\n  };\n});\n\n// Mock de hooks de animación\njest.mock('@/hooks/useCartAnimation', () => ({\n  useCartAnimation: () => ({ isAnimating: false }),\n}));\n\n// Setup del store de Redux\nconst createTestStore = () => {\n  return configureStore({\n    reducer: {\n      cartReducer,\n    },\n    preloadedState: {\n      cartReducer: {\n        items: [],\n        totalQuantity: 0,\n        totalPrice: 0,\n      },\n    },\n  });\n};\n\n// Setup del QueryClient\nconst createTestQueryClient = () => {\n  return new QueryClient({\n    defaultOptions: {\n      queries: {\n        retry: false,\n      },\n    },\n  });\n};\n\n// Wrapper de providers para tests\nconst TestWrapper = ({ children }: { children: React.ReactNode }) => {\n  const store = createTestStore();\n  const queryClient = createTestQueryClient();\n\n  return (\n    <Provider store={store}>\n      <QueryClientProvider client={queryClient}>\n        <CartSidebarModalProvider>\n          {children}\n        </CartSidebarModalProvider>\n      </QueryClientProvider>\n    </Provider>\n  );\n};\n\ndescribe('Header Integration Tests', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n    \n    // Mock window.matchMedia para responsive\n    Object.defineProperty(window, 'matchMedia', {\n      writable: true,\n      value: jest.fn().mockImplementation(query => ({\n        matches: false,\n        media: query,\n        onchange: null,\n        addListener: jest.fn(),\n        removeListener: jest.fn(),\n        addEventListener: jest.fn(),\n        removeEventListener: jest.fn(),\n        dispatchEvent: jest.fn(),\n      })),\n    });\n  });\n\n  describe('Renderizado del Header Mobile', () => {\n    it('debe renderizar todos los elementos del header mobile', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      // Verificar logo\n      expect(screen.getByAltText('Pinteya - Tu Pinturería Online')).toBeInTheDocument();\n\n      // Verificar campo de búsqueda\n      expect(screen.getByTestId('search-input')).toBeInTheDocument();\n      expect(screen.getByPlaceholderText('latex interior blanco 20lts')).toBeInTheDocument();\n\n      // Verificar ubicación\n      expect(screen.getByText(/Envíos a/)).toBeInTheDocument();\n      expect(screen.getByText('Córdoba Capital')).toBeInTheDocument();\n\n      // Verificar autenticación\n      expect(screen.getByTestId('signed-out')).toBeInTheDocument();\n    });\n\n    it('debe tener el layout correcto en mobile', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      // Verificar que el logo y búsqueda están en la misma línea\n      const logo = screen.getByAltText('Pinteya - Tu Pinturería Online');\n      const searchInput = screen.getByTestId('search-input');\n\n      expect(logo).toBeInTheDocument();\n      expect(searchInput).toBeInTheDocument();\n    });\n  });\n\n  describe('Funcionalidad del Logo', () => {\n    it('debe ser clickeable y navegar al inicio', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      const logoLink = screen.getByAltText('Pinteya - Tu Pinturería Online').closest('a');\n      expect(logoLink).toHaveAttribute('href', '/');\n    });\n\n    it('debe tener el tamaño correcto (64x64px)', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      const logo = screen.getByAltText('Pinteya - Tu Pinturería Online');\n      expect(logo).toHaveClass('h-16', 'w-16'); // 64px = 16 * 4px\n    });\n  });\n\n  describe('Campo de Búsqueda', () => {\n    it('debe tener el placeholder correcto', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      expect(screen.getByPlaceholderText('latex interior blanco 20lts')).toBeInTheDocument();\n    });\n\n    it('debe tener los estilos correctos', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      const searchInput = screen.getByTestId('search-input');\n      expect(searchInput).toHaveClass('bg-[#fff3c5]'); // Fondo amarillo\n    });\n  });\n\n  describe('Funcionalidad de Geolocalización', () => {\n    it('debe mostrar la ubicación detectada', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      expect(screen.getByText('Córdoba Capital')).toBeInTheDocument();\n    });\n\n    it('debe solicitar ubicación al hacer click', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      const locationButton = screen.getByText(/Envíos a/).closest('div');\n      fireEvent.click(locationButton!);\n\n      expect(mockRequestLocation).toHaveBeenCalled();\n    });\n\n    it('debe mostrar estado de carga', () => {\n      // Mock del hook con estado de carga\n      jest.doMock('@/hooks/useGeolocation', () => ({\n        useGeolocation: () => ({\n          detectedZone: null,\n          requestLocation: mockRequestLocation,\n          selectZone: mockSelectZone,\n          permissionStatus: 'prompt',\n          isLoading: true,\n          error: null,\n          location: null,\n          getAvailableZones: () => [],\n          deliveryZones: [],\n        }),\n      }));\n\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      expect(screen.getByText('Detectando ubicación...')).toBeInTheDocument();\n    });\n  });\n\n  describe('Autenticación', () => {\n    it('debe mostrar botón de iniciar sesión cuando no está autenticado', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      expect(screen.getByText('Iniciar Sesión')).toBeInTheDocument();\n    });\n\n    it('debe tener el enlace correcto para iniciar sesión', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      const signinLink = screen.getByText('Iniciar Sesión').closest('a');\n      expect(signinLink).toHaveAttribute('href', '/signin');\n    });\n  });\n\n  describe('Responsive Design', () => {\n    it('debe ocultar elementos desktop en mobile', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      // El header desktop debería estar oculto en mobile\n      const desktopElements = screen.queryAllByText('Todo');\n      expect(desktopElements).toHaveLength(0);\n    });\n\n    it('debe mostrar layout mobile específico', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      // Verificar que existe el contenedor mobile\n      const mobileContainer = screen.getByText(/Envíos a/).closest('.sm\\\\:hidden');\n      expect(mobileContainer).toBeInTheDocument();\n    });\n  });\n\n  describe('Interacciones del Usuario', () => {\n    it('debe manejar click en logo', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      const logo = screen.getByAltText('Pinteya - Tu Pinturería Online');\n      fireEvent.click(logo);\n\n      // El logo debería ser clickeable (verificado por el href)\n      const logoLink = logo.closest('a');\n      expect(logoLink).toHaveAttribute('href', '/');\n    });\n\n    it('debe manejar click en ubicación', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      const locationElement = screen.getByText(/Envíos a/).closest('div');\n      fireEvent.click(locationElement!);\n\n      expect(mockRequestLocation).toHaveBeenCalled();\n    });\n\n    it('debe manejar focus en campo de búsqueda', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      const searchInput = screen.getByTestId('search-input');\n      fireEvent.focus(searchInput);\n\n      expect(searchInput).toHaveFocus();\n    });\n  });\n\n  describe('Estados de Error', () => {\n    it('debe manejar error de geolocalización', () => {\n      // Mock del hook con error\n      jest.doMock('@/hooks/useGeolocation', () => ({\n        useGeolocation: () => ({\n          detectedZone: { name: 'Córdoba Capital', available: true },\n          requestLocation: mockRequestLocation,\n          selectZone: mockSelectZone,\n          permissionStatus: 'denied',\n          isLoading: false,\n          error: 'Permisos de ubicación denegados',\n          location: null,\n          getAvailableZones: () => [],\n          deliveryZones: [],\n        }),\n      }));\n\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      // Debería mostrar la ubicación por defecto\n      expect(screen.getByText('Córdoba Capital')).toBeInTheDocument();\n    });\n  });\n\n  describe('Accesibilidad', () => {\n    it('debe tener elementos accesibles por teclado', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      const logo = screen.getByAltText('Pinteya - Tu Pinturería Online');\n      const searchInput = screen.getByTestId('search-input');\n      const signinButton = screen.getByText('Iniciar Sesión');\n\n      expect(logo.closest('a')).toHaveAttribute('href');\n      expect(searchInput).toBeInTheDocument();\n      expect(signinButton.closest('a')).toHaveAttribute('href');\n    });\n\n    it('debe tener textos alternativos apropiados', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      expect(screen.getByAltText('Pinteya - Tu Pinturería Online')).toBeInTheDocument();\n    });\n  });\n});\n"],"names":["jest","mock","SignedIn","children","div","data-testid","SignedOut","UserButton","useUser","isSignedIn","user","isLoaded","href","props","a","src","alt","img","useGeolocation","detectedZone","name","available","requestLocation","mockRequestLocation","selectZone","mockSelectZone","permissionStatus","isLoading","error","location","getAvailableZones","deliveryZones","SearchAutocompleteIntegrated","placeholder","className","input","useCartAnimation","isAnimating","fn","createTestStore","configureStore","reducer","cartReducer","preloadedState","items","totalQuantity","totalPrice","createTestQueryClient","QueryClient","defaultOptions","queries","retry","TestWrapper","store","queryClient","Provider","QueryClientProvider","client","CartSidebarModalProvider","describe","beforeEach","clearAllMocks","Object","defineProperty","window","writable","value","mockImplementation","query","matches","media","onchange","addListener","removeListener","addEventListener","removeEventListener","dispatchEvent","it","render","Header","expect","screen","getByAltText","toBeInTheDocument","getByTestId","getByPlaceholderText","getByText","logo","searchInput","logoLink","closest","toHaveAttribute","toHaveClass","locationButton","fireEvent","click","toHaveBeenCalled","doMock","signinLink","desktopElements","queryAllByText","toHaveLength","mobileContainer","locationElement","focus","toHaveFocus","signinButton"],"mappings":"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"}