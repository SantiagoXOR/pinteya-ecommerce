71e31e30c9be24bee6e9398b74ac30fc
'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "ProductList", {
    enumerable: true,
    get: function() {
        return ProductList;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _image = /*#__PURE__*/ _interop_require_default(require("next/image"));
const _navigation = require("next/navigation");
const _AdminDataTable = require("../ui/AdminDataTable");
const _ProductFilters = require("./ProductFilters");
const _ProductActions = require("./ProductActions");
const _useProductList = require("../../../hooks/admin/useProductList");
const _utils = require("../../../lib/utils");
const _lucidereact = require("lucide-react");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
// Status Badge Component
function StatusBadge({ status }) {
    const statusConfig = {
        active: {
            label: 'Activo',
            icon: _lucidereact.CheckCircle,
            className: 'bg-green-100 text-green-800 border-green-200'
        },
        inactive: {
            label: 'Inactivo',
            icon: _lucidereact.AlertCircle,
            className: 'bg-red-100 text-red-800 border-red-200'
        },
        draft: {
            label: 'Borrador',
            icon: _lucidereact.Clock,
            className: 'bg-yellow-100 text-yellow-800 border-yellow-200'
        }
    };
    const config = statusConfig[status];
    const Icon = config && config.icon ? config.icon : _lucidereact.Package;
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
        className: (0, _utils.cn)("inline-flex items-center space-x-1 px-2 py-1 text-xs font-medium rounded-full border", config && config.className ? config.className : 'bg-gray-100 text-gray-800 border-gray-200'),
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(Icon, {
                className: "w-3 h-3"
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                children: config && config.label ? config.label : 'Estado'
            })
        ]
    });
}
// Stock Badge Component
function StockBadge({ stock }) {
    if (stock === 0) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
            className: "inline-flex items-center px-2 py-1 text-xs font-medium bg-red-100 text-red-800 rounded-full",
            children: "Sin stock"
        });
    }
    if (stock <= 10) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
            className: "inline-flex items-center px-2 py-1 text-xs font-medium bg-yellow-100 text-yellow-800 rounded-full",
            children: "Stock bajo"
        });
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
        className: "text-sm text-gray-900",
        children: [
            stock,
            " unidades"
        ]
    });
}
function ProductList({ className }) {
    console.log('ðŸ”§ ProductList: Componente iniciado');
    const router = (0, _navigation.useRouter)();
    const [selectedProducts, setSelectedProducts] = (0, _react.useState)([]);
    const { products, isLoading, error } = (0, _useProductList.useProductList)();
    // Valores temporales para compatibilidad
    const total = 53; // Total real de la base de datos
    const currentPage = 1;
    const currentPageSize = 25;
    const params = {
        filters: {}
    };
    const updateFilters = ()=>{};
    const clearFilters = ()=>{};
    const goToPage = ()=>{};
    const changePageSize = ()=>{};
    const deleteProduct = ()=>{};
    const bulkDelete = ()=>{};
    const isDeleting = false;
    const isBulkDeleting = false;
    // Table columns configuration
    const columns = [
        {
            key: 'image_url',
            title: 'Imagen',
            width: '80px',
            render: (imageUrl, product)=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                    className: "w-12 h-12 bg-gray-100 rounded-lg overflow-hidden flex items-center justify-center",
                    children: imageUrl ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_image.default, {
                        src: imageUrl,
                        alt: product.name,
                        width: 48,
                        height: 48,
                        className: "object-cover"
                    }) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Package, {
                        className: "w-6 h-6 text-gray-400"
                    })
                })
        },
        {
            key: 'name',
            title: 'Producto',
            sortable: true,
            render: (name, product)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            className: "font-medium text-gray-900",
                            children: name
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            className: "text-sm text-gray-500 truncate max-w-xs",
                            children: product.description
                        })
                    ]
                })
        },
        {
            key: 'category_name',
            title: 'CategorÃ­a',
            sortable: true,
            render: (categoryName)=>/*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                    className: "text-sm text-gray-900",
                    children: categoryName || 'Sin categorÃ­a'
                })
        },
        {
            key: 'price',
            title: 'Precio',
            align: 'right',
            sortable: true,
            render: (price)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                    className: "font-medium text-gray-900",
                    children: [
                        "$",
                        price.toLocaleString('es-AR')
                    ]
                })
        },
        {
            key: 'stock',
            title: 'Stock',
            align: 'center',
            sortable: true,
            render: (stock)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(StockBadge, {
                    stock: stock
                })
        },
        {
            key: 'status',
            title: 'Estado',
            align: 'center',
            sortable: true,
            render: (status)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(StatusBadge, {
                    status: status
                })
        },
        {
            key: 'created_at',
            title: 'Creado',
            sortable: true,
            render: (createdAt)=>/*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                    className: "text-sm text-gray-500",
                    children: new Date(createdAt).toLocaleDateString('es-AR')
                })
        },
        {
            key: 'actions',
            title: 'Acciones',
            width: '60px',
            render: (_, product)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_ProductActions.ProductRowActions, {
                    product: product,
                    onView: (id)=>router.push(`/admin/products/${id}`),
                    onEdit: (id)=>router.push(`/admin/products/${id}/edit`),
                    onDelete: handleDeleteProduct,
                    onDuplicate: handleDuplicateProduct,
                    isLoading: isDeleting
                })
        }
    ];
    // Event handlers
    const handleDeleteProduct = async (productId)=>{
        const result = await deleteProduct(productId);
        if (!result.success) {
            // Handle error (show toast, etc.)
            console.error('Error deleting product:', result.error);
        }
    };
    const handleBulkDelete = async (productIds)=>{
        const result = await bulkDelete(productIds);
        if (result.success) {
            setSelectedProducts([]);
        } else {
            // Handle error
            console.error('Error bulk deleting products:', result.error);
        }
    };
    const handleDuplicateProduct = (productId)=>{
        // TODO: Implement product duplication
        console.log('Duplicate product:', productId);
    };
    const handleCreateProduct = ()=>{
        router.push('/admin/products/new');
    };
    const handleExportProducts = ()=>{
        // TODO: Implement export functionality
        console.log('Export products');
    };
    const handleImportProducts = ()=>{
        // TODO: Implement import functionality
        console.log('Import products');
    };
    const handleRowClick = (product)=>{
        router.push(`/admin/products/${product.id}`);
    };
    // Pagination configuration
    const paginationConfig = {
        page: currentPage,
        pageSize: currentPageSize,
        total,
        onPageChange: goToPage,
        onPageSizeChange: changePageSize
    };
    if (error) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
            className: "bg-red-50 border border-red-200 rounded-lg p-6",
            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "flex items-center space-x-3",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.AlertCircle, {
                        className: "w-6 h-6 text-red-600"
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("h3", {
                                className: "text-lg font-medium text-red-800",
                                children: "Error al cargar productos"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                className: "text-red-700 mt-1",
                                children: error.message
                            })
                        ]
                    })
                ]
            })
        });
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        className: (0, _utils.cn)("space-y-6", className),
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_ProductFilters.ProductFilters, {
                filters: params.filters || {},
                onFiltersChange: updateFilters,
                onClearFilters: clearFilters,
                categories: []
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_ProductActions.ProductActions, {
                selectedProducts: selectedProducts,
                onCreateProduct: handleCreateProduct,
                onBulkDelete: handleBulkDelete,
                onExportProducts: handleExportProducts,
                onImportProducts: handleImportProducts,
                isLoading: isDeleting || isBulkDeleting
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_AdminDataTable.AdminDataTable, {
                data: Array.isArray(products) ? products : [],
                columns: columns,
                loading: isLoading,
                pagination: paginationConfig,
                selectable: true,
                onRowClick: handleRowClick,
                onSelectionChange: setSelectedProducts,
                className: "shadow-sm"
            }),
            !isLoading && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "text-sm text-gray-600 text-center",
                children: [
                    "Mostrando ",
                    products.length,
                    " de ",
                    total,
                    " productos"
                ]
            })
        ]
    });
}

//# sourceMappingURL=data:application/json;base64,