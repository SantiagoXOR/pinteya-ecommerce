{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\ui\\checkbox.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\r\nimport { Check, Minus } from \"lucide-react\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst checkboxVariants = cva(\r\n  \"peer h-4 w-4 shrink-0 rounded-sm border border-gray-300 ring-offset-white focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 transition-all duration-200\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"data-[state=checked]:bg-primary data-[state=checked]:text-white data-[state=checked]:border-primary\",\r\n        destructive: \"data-[state=checked]:bg-red-600 data-[state=checked]:text-white data-[state=checked]:border-red-600\",\r\n        success: \"data-[state=checked]:bg-green-600 data-[state=checked]:text-white data-[state=checked]:border-green-600\",\r\n        warning: \"data-[state=checked]:bg-yellow-600 data-[state=checked]:text-white data-[state=checked]:border-yellow-600\",\r\n      },\r\n      size: {\r\n        sm: \"h-3 w-3\",\r\n        md: \"h-4 w-4\",\r\n        lg: \"h-5 w-5\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"md\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface CheckboxProps\r\n  extends React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>,\r\n    VariantProps<typeof checkboxVariants> {\r\n  label?: string\r\n  description?: string\r\n  error?: string\r\n  indeterminate?: boolean\r\n}\r\n\r\nconst Checkbox = React.forwardRef<\r\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\r\n  CheckboxProps\r\n>(({ className, variant, size, label, description, error, indeterminate, id, ...props }, ref) => {\r\n  const generatedId = React.useId()\r\n  const checkboxId = id || generatedId\r\n  const hasError = !!error\r\n\r\n  return (\r\n    <div className=\"space-y-2\">\r\n      <div className=\"flex items-start space-x-2\">\r\n        <CheckboxPrimitive.Root\r\n          ref={ref}\r\n          id={checkboxId}\r\n          className={cn(\r\n            checkboxVariants({ variant: hasError ? \"destructive\" : variant, size }),\r\n            hasError && \"border-red-500\",\r\n            className\r\n          )}\r\n          {...props}\r\n        >\r\n          <CheckboxPrimitive.Indicator className={cn(\"flex items-center justify-center text-current\")}>\r\n            {indeterminate ? (\r\n              <Minus className=\"h-3 w-3\" />\r\n            ) : (\r\n              <Check className=\"h-3 w-3\" />\r\n            )}\r\n          </CheckboxPrimitive.Indicator>\r\n        </CheckboxPrimitive.Root>\r\n        \r\n        {(label || description) && (\r\n          <div className=\"grid gap-1.5 leading-none\">\r\n            {label && (\r\n              <label\r\n                htmlFor={checkboxId}\r\n                className={cn(\r\n                  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70 cursor-pointer\",\r\n                  hasError && \"text-red-600\"\r\n                )}\r\n              >\r\n                {label}\r\n                {props.required && <span className=\"text-red-500 ml-1\">*</span>}\r\n              </label>\r\n            )}\r\n            {description && (\r\n              <p className={cn(\r\n                \"text-xs text-gray-600\",\r\n                hasError && \"text-red-500\"\r\n              )}>\r\n                {description}\r\n              </p>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      {error && (\r\n        <p className=\"text-xs text-red-600 mt-1\">{error}</p>\r\n      )}\r\n    </div>\r\n  )\r\n})\r\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\r\n\r\n// Checkbox Group para m√∫ltiples opciones\r\nexport interface CheckboxGroupProps {\r\n  children: React.ReactNode\r\n  label?: string\r\n  description?: string\r\n  error?: string\r\n  orientation?: \"horizontal\" | \"vertical\"\r\n  className?: string\r\n}\r\n\r\nexport function CheckboxGroup({\r\n  children,\r\n  label,\r\n  description,\r\n  error,\r\n  orientation = \"vertical\",\r\n  className,\r\n}: CheckboxGroupProps) {\r\n  const hasError = !!error\r\n\r\n  return (\r\n    <div className={cn(\"space-y-3\", className)}>\r\n      {(label || description) && (\r\n        <div className=\"space-y-1\">\r\n          {label && (\r\n            <label className={cn(\r\n              \"text-sm font-medium text-gray-900\",\r\n              hasError && \"text-red-600\"\r\n            )}>\r\n              {label}\r\n            </label>\r\n          )}\r\n          {description && (\r\n            <p className={cn(\r\n              \"text-xs text-gray-600\",\r\n              hasError && \"text-red-500\"\r\n            )}>\r\n              {description}\r\n            </p>\r\n          )}\r\n        </div>\r\n      )}\r\n      \r\n      <div className={cn(\r\n        \"space-y-2\",\r\n        orientation === \"horizontal\" && \"flex flex-wrap gap-4 space-y-0\"\r\n      )}>\r\n        {children}\r\n      </div>\r\n      \r\n      {error && (\r\n        <p className=\"text-xs text-red-600\">{error}</p>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\n// Checkbox con switch style\r\nexport interface SwitchCheckboxProps extends CheckboxProps {\r\n  switchStyle?: boolean\r\n}\r\n\r\nexport const SwitchCheckbox = React.forwardRef<\r\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\r\n  SwitchCheckboxProps\r\n>(({ className, switchStyle = true, size = \"md\", ...props }, ref) => {\r\n  if (!switchStyle) {\r\n    return <Checkbox ref={ref} className={className} size={size} {...props} />\r\n  }\r\n\r\n  const sizeClasses = {\r\n    sm: \"h-4 w-7\",\r\n    md: \"h-5 w-9\", \r\n    lg: \"h-6 w-11\",\r\n  }\r\n\r\n  const thumbSizeClasses = {\r\n    sm: \"h-3 w-3 data-[state=checked]:translate-x-3\",\r\n    md: \"h-4 w-4 data-[state=checked]:translate-x-4\",\r\n    lg: \"h-5 w-5 data-[state=checked]:translate-x-5\",\r\n  }\r\n\r\n  return (\r\n    <CheckboxPrimitive.Root\r\n      ref={ref}\r\n      className={cn(\r\n        \"peer inline-flex shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2 focus-visible:ring-offset-white disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-gray-200\",\r\n        sizeClasses[size || \"md\"],\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      <CheckboxPrimitive.Indicator\r\n        className={cn(\r\n          \"pointer-events-none block rounded-full bg-white shadow-lg ring-0 transition-transform data-[state=unchecked]:translate-x-0\",\r\n          thumbSizeClasses[size || \"md\"]\r\n        )}\r\n      />\r\n    </CheckboxPrimitive.Root>\r\n  )\r\n})\r\nSwitchCheckbox.displayName = \"SwitchCheckbox\"\r\n\r\nexport { Checkbox }\r\n"],"names":["Checkbox","CheckboxGroup","SwitchCheckbox","checkboxVariants","cva","variants","variant","default","destructive","success","warning","size","sm","md","lg","defaultVariants","React","forwardRef","className","label","description","error","indeterminate","id","props","ref","generatedId","useId","checkboxId","hasError","div","CheckboxPrimitive","Root","cn","Indicator","Minus","Check","htmlFor","required","span","p","displayName","children","orientation","switchStyle","sizeClasses","thumbSizeClasses"],"mappings":"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"}