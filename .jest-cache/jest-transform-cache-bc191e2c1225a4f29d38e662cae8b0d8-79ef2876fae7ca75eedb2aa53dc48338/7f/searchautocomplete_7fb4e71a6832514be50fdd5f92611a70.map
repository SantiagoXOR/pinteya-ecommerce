{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\ui\\search-autocomplete.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { Search, X, Clock, TrendingUp, Package } from \"lucide-react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { searchProducts } from \"@/lib/api/products\";\r\nimport { ProductWithCategory } from \"@/types/api\";\r\nimport { Badge } from \"./badge\";\r\nimport { Button } from \"./button\";\r\nimport Image from \"next/image\";\r\nimport { useTrendingSearches } from \"@/hooks/useTrendingSearches\";\r\nimport { useRecentSearches } from \"@/hooks/useRecentSearches\";\r\nimport { SEARCH_CONSTANTS } from \"@/constants/shop\";\r\n\r\nconst searchAutocompleteVariants = cva(\r\n  \"relative w-full\",\r\n  {\r\n    variants: {\r\n      size: {\r\n        sm: \"text-sm\",\r\n        md: \"text-base\",\r\n        lg: \"text-lg\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      size: \"md\",\r\n    },\r\n  }\r\n);\r\n\r\nexport interface SearchSuggestion {\r\n  id: string;\r\n  type: 'product' | 'category' | 'recent' | 'trending';\r\n  title: string;\r\n  subtitle?: string;\r\n  image?: string;\r\n  badge?: string;\r\n  href: string;\r\n}\r\n\r\nexport interface SearchAutocompleteProps\r\n  extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'size'>,\r\n    VariantProps<typeof searchAutocompleteVariants> {\r\n  onSearch?: (query: string) => void;\r\n  onSuggestionSelect?: (suggestion: SearchSuggestion) => void;\r\n  showRecentSearches?: boolean;\r\n  showTrendingSearches?: boolean;\r\n  maxSuggestions?: number;\r\n  debounceMs?: number;\r\n  // Props opcionales para integración con hooks externos\r\n  query?: string;\r\n  suggestions?: SearchSuggestion[];\r\n  isLoading?: boolean;\r\n  error?: string | null;\r\n  searchWithDebounce?: (query: string) => void;\r\n  onClear?: () => void;\r\n}\r\n\r\n// Búsquedas trending por defecto para pinturería\r\nconst defaultTrendingSearches: SearchSuggestion[] = [\r\n  {\r\n    id: \"trending-1\",\r\n    type: \"trending\",\r\n    title: \"Pintura látex\",\r\n    href: \"/shop?search=pintura+latex\",\r\n  },\r\n  {\r\n    id: \"trending-2\", \r\n    type: \"trending\",\r\n    title: \"Sherwin Williams\",\r\n    href: \"/shop?search=sherwin+williams\",\r\n  },\r\n  {\r\n    id: \"trending-3\",\r\n    type: \"trending\", \r\n    title: \"Rodillos premium\",\r\n    href: \"/shop?search=rodillos+premium\",\r\n  },\r\n  {\r\n    id: \"trending-4\",\r\n    type: \"trending\",\r\n    title: \"Pinceles\",\r\n    href: \"/shop?search=pinceles\",\r\n  },\r\n];\r\n\r\nconst SearchAutocomplete = React.forwardRef<HTMLInputElement, SearchAutocompleteProps>(\r\n  ({\r\n    className,\r\n    size,\r\n    onSearch,\r\n    onSuggestionSelect,\r\n    showRecentSearches = true,\r\n    showTrendingSearches = true,\r\n    maxSuggestions = 8,\r\n    debounceMs = 300,\r\n    placeholder = \"Látex interior blanco 20lts, rodillos, pinceles...\",\r\n    // Props opcionales para integración con hooks externos\r\n    query: externalQuery,\r\n    suggestions: externalSuggestions,\r\n    isLoading: externalIsLoading,\r\n    error: externalError,\r\n    searchWithDebounce: externalSearchWithDebounce,\r\n    onClear: externalOnClear,\r\n    ...props\r\n  }, ref) => {\r\n\r\n    // Hook para obtener búsquedas trending reales\r\n    const { trendingSearches, trackSearch } = useTrendingSearches({\r\n      limit: 4,\r\n      enabled: showTrendingSearches\r\n    });\r\n\r\n    // Hook para gestionar búsquedas recientes\r\n    const {\r\n      recentSearches,\r\n      addSearch: addRecentSearch,\r\n      getRecentSearches\r\n    } = useRecentSearches({\r\n      maxSearches: SEARCH_CONSTANTS.MAX_RECENT_SEARCHES,\r\n      enablePersistence: showRecentSearches,\r\n      expirationDays: SEARCH_CONSTANTS.RECENT_SEARCHES_EXPIRATION_DAYS\r\n    });\r\n    // Estado interno (usado solo si no hay props externas)\r\n    const [internalQuery, setInternalQuery] = useState(\"\");\r\n    const [internalSuggestions, setInternalSuggestions] = useState<SearchSuggestion[]>([]);\r\n    const [internalIsLoading, setInternalIsLoading] = useState(false);\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [selectedIndex, setSelectedIndex] = useState(-1);\r\n\r\n    // Usar props externas si están disponibles, sino usar estado interno\r\n    const query = externalQuery !== undefined ? externalQuery : internalQuery;\r\n    const suggestions = externalSuggestions !== undefined ? externalSuggestions : internalSuggestions;\r\n    const isLoading = externalIsLoading !== undefined ? externalIsLoading : internalIsLoading;\r\n    const error = externalError;\r\n    \r\n    const router = useRouter();\r\n    const inputRef = useRef<HTMLInputElement>(null);\r\n    const dropdownRef = useRef<HTMLDivElement>(null);\r\n    const debounceRef = useRef<NodeJS.Timeout>();\r\n\r\n    // Buscar productos con debounce\r\n    const searchProductsDebounced = useCallback(async (searchQuery: string) => {\r\n      // No ejecutar si hay props externas\r\n      if (externalSuggestions !== undefined) {\r\n        return;\r\n      }\r\n\r\n      if (!searchQuery.trim()) {\r\n        setInternalSuggestions([]);\r\n        return;\r\n      }\r\n\r\n      setInternalIsLoading(true);\r\n      \r\n      try {\r\n        const response = await searchProducts(searchQuery, 6);\r\n        \r\n        if (response.success && response.data) {\r\n          const productSuggestions: SearchSuggestion[] = response.data.map(product => ({\r\n            id: `product-${product.id}`,\r\n            type: 'product',\r\n            title: product.name,\r\n            subtitle: product.category?.name,\r\n            image: product.images?.previews?.[0] || product.images?.thumbnails?.[0] || '/images/products/placeholder.jpg',\r\n            badge: product.stock > 0 ? 'En stock' : 'Sin stock',\r\n            href: `/product/${product.id}`,\r\n          }));\r\n\r\n          setInternalSuggestions(productSuggestions.slice(0, maxSuggestions));\r\n        }\r\n      } catch (error) {\r\n        console.error('Error searching products:', error);\r\n        setInternalSuggestions([]);\r\n      } finally {\r\n        setInternalIsLoading(false);\r\n      }\r\n    }, [maxSuggestions, externalSuggestions]);\r\n\r\n    // Manejar cambio en el input\r\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      const value = e.target.value;\r\n\r\n      // Si hay función externa de búsqueda, usarla\r\n      if (externalSearchWithDebounce) {\r\n        externalSearchWithDebounce(value);\r\n      } else {\r\n        // Usar lógica interna\r\n        setInternalQuery(value);\r\n        setSelectedIndex(-1);\r\n\r\n        // Limpiar debounce anterior\r\n        if (debounceRef.current) {\r\n          clearTimeout(debounceRef.current);\r\n        }\r\n\r\n        // Configurar nuevo debounce\r\n        debounceRef.current = setTimeout(() => {\r\n          searchProductsDebounced(value);\r\n        }, debounceMs);\r\n      }\r\n    };\r\n\r\n    // Mostrar sugerencias por defecto cuando se enfoca\r\n    const handleFocus = () => {\r\n      setIsOpen(true);\r\n\r\n      if (!query.trim() && !externalSuggestions) {\r\n        // Solo mostrar sugerencias por defecto si no hay props externas\r\n        const defaultSuggestions: SearchSuggestion[] = [];\r\n\r\n        // Agregar búsquedas recientes\r\n        if (showRecentSearches && recentSearches.length > 0) {\r\n          defaultSuggestions.push(\r\n            ...getRecentSearches(3).map((search, index) => ({\r\n              id: `recent-${index}`,\r\n              type: 'recent' as const,\r\n              title: search,\r\n              href: `/search?q=${encodeURIComponent(search)}`,\r\n            }))\r\n          );\r\n        }\r\n\r\n        // Agregar búsquedas trending reales\r\n        if (showTrendingSearches && trendingSearches.length > 0) {\r\n          const trendingSuggestions: SearchSuggestion[] = trendingSearches.map(trending => ({\r\n            id: trending.id,\r\n            type: 'trending' as const,\r\n            title: trending.query,\r\n            href: trending.href,\r\n            badge: trending.count ? `${trending.count}` : undefined\r\n          }));\r\n          defaultSuggestions.push(...trendingSuggestions.slice(0, 4));\r\n        }\r\n\r\n        setInternalSuggestions(defaultSuggestions.slice(0, maxSuggestions));\r\n      }\r\n    };\r\n\r\n    // Manejar selección de sugerencia\r\n    const handleSuggestionSelect = (suggestion: SearchSuggestion) => {\r\n      if (suggestion.type === 'product' || suggestion.type === 'category') {\r\n        addRecentSearch(suggestion.title);\r\n      }\r\n\r\n      // Registrar búsquedas trending y recientes en analytics\r\n      if (suggestion.type === 'trending' || suggestion.type === 'recent') {\r\n        trackSearch(suggestion.title).catch(console.warn);\r\n      }\r\n\r\n      // Solo actualizar query interna si no hay query externa\r\n      if (externalQuery === undefined) {\r\n        setInternalQuery(suggestion.title);\r\n      }\r\n      setIsOpen(false);\r\n\r\n      if (onSuggestionSelect) {\r\n        onSuggestionSelect(suggestion);\r\n      } else {\r\n        router.push(suggestion.href);\r\n      }\r\n    };\r\n\r\n    // Manejar envío del formulario\r\n    const handleSubmit = (e: React.FormEvent) => {\r\n      e.preventDefault();\r\n\r\n      if (query.trim()) {\r\n        addRecentSearch(query.trim());\r\n        setIsOpen(false);\r\n\r\n        // Registrar búsqueda en analytics para trending\r\n        trackSearch(query.trim()).catch(console.warn);\r\n\r\n        if (onSearch) {\r\n          onSearch(query.trim());\r\n        } else {\r\n          router.push(`/search?q=${encodeURIComponent(query.trim())}`);\r\n        }\r\n      }\r\n    };\r\n\r\n    // Manejar teclas\r\n    const handleKeyDown = (e: React.KeyboardEvent) => {\r\n      if (!isOpen) return;\r\n\r\n      switch (e.key) {\r\n        case 'ArrowDown':\r\n          e.preventDefault();\r\n          setSelectedIndex(prev => \r\n            prev < suggestions.length - 1 ? prev + 1 : prev\r\n          );\r\n          break;\r\n        case 'ArrowUp':\r\n          e.preventDefault();\r\n          setSelectedIndex(prev => prev > 0 ? prev - 1 : -1);\r\n          break;\r\n        case 'Enter':\r\n          e.preventDefault();\r\n          if (selectedIndex >= 0 && suggestions[selectedIndex]) {\r\n            handleSuggestionSelect(suggestions[selectedIndex]);\r\n          } else {\r\n            handleSubmit(e);\r\n          }\r\n          break;\r\n        case 'Escape':\r\n          setIsOpen(false);\r\n          setSelectedIndex(-1);\r\n          break;\r\n      }\r\n    };\r\n\r\n    // Cerrar dropdown al hacer click fuera\r\n    useEffect(() => {\r\n      const handleClickOutside = (event: MouseEvent) => {\r\n        if (\r\n          dropdownRef.current &&\r\n          !dropdownRef.current.contains(event.target as Node) &&\r\n          inputRef.current &&\r\n          !inputRef.current.contains(event.target as Node)\r\n        ) {\r\n          setIsOpen(false);\r\n        }\r\n      };\r\n\r\n      document.addEventListener('mousedown', handleClickOutside);\r\n      return () => document.removeEventListener('mousedown', handleClickOutside);\r\n    }, []);\r\n\r\n    // Limpiar debounce al desmontar\r\n    useEffect(() => {\r\n      return () => {\r\n        if (debounceRef.current) {\r\n          clearTimeout(debounceRef.current);\r\n        }\r\n      };\r\n    }, []);\r\n\r\n    const getSuggestionIcon = (type: SearchSuggestion['type']) => {\r\n      switch (type) {\r\n        case 'recent':\r\n          return <Clock className=\"w-4 h-4 text-gray-400\" />;\r\n        case 'trending':\r\n          return <TrendingUp className=\"w-4 h-4 text-fun-green-600\" />;\r\n        case 'product':\r\n          return <Package className=\"w-4 h-4 text-gray-600\" />;\r\n        default:\r\n          return <Search className=\"w-4 h-4 text-gray-400\" />;\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div className={cn(searchAutocompleteVariants({ size }), className)}>\r\n        <div className=\"relative\">\r\n          <div className=\"relative\">\r\n            <input\r\n              ref={inputRef}\r\n              type=\"search\"\r\n              value={query}\r\n              onChange={handleInputChange}\r\n              onFocus={handleFocus}\r\n              onKeyDown={handleKeyDown}\r\n              placeholder={placeholder}\r\n              autoComplete=\"off\"\r\n              data-testid=\"search-input\"\r\n              className={cn(\r\n                \"w-full rounded-r-[5px] bg-gray-1 border border-gray-3 py-2.5 pl-4 pr-10 outline-none transition-all duration-200\",\r\n                \"focus:border-primary/50 focus:ring-2 focus:ring-primary/20\",\r\n                \"placeholder:text-gray-400 placeholder:font-normal\",\r\n                size === \"sm\" && \"py-2 text-sm\",\r\n                size === \"lg\" && \"py-3 text-lg\"\r\n              )}\r\n              {...props}\r\n            />\r\n            \r\n            {/* Search Icon */}\r\n            <div className=\"absolute right-3 top-1/2 -translate-y-1/2 flex items-center gap-2\">\r\n              {query && (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => {\r\n                    if (externalOnClear) {\r\n                      externalOnClear();\r\n                    } else {\r\n                      setInternalQuery(\"\");\r\n                      setInternalSuggestions([]);\r\n                    }\r\n                    inputRef.current?.focus();\r\n                  }}\r\n                  className=\"text-gray-400 hover:text-gray-600 transition-colors\"\r\n                  aria-label=\"Clear search\"\r\n                >\r\n                  <X className=\"w-4 h-4\" />\r\n                </button>\r\n              )}\r\n              <button\r\n                type=\"submit\"\r\n                className=\"text-gray-500 hover:text-primary transition-colors\"\r\n                aria-label=\"Search\"\r\n              >\r\n                <Search className=\"w-4 h-4\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Dropdown de sugerencias */}\r\n          {isOpen && (\r\n            <div\r\n              ref={dropdownRef}\r\n              className=\"absolute top-full left-0 right-0 z-50 mt-1 rounded-md shadow-lg max-h-96 overflow-y-auto\"\r\n              style={{ backgroundColor: '#fff3c5' }}\r\n              role=\"listbox\"\r\n              aria-label=\"Search suggestions\"\r\n            >\r\n              {isLoading && (\r\n                <div className=\"p-4 text-center text-gray-500\">\r\n                  <div className=\"animate-spin w-5 h-5 border-2 border-primary border-t-transparent rounded-full mx-auto mb-2\"></div>\r\n                  Buscando...\r\n                </div>\r\n              )}\r\n\r\n              {!isLoading && suggestions.length === 0 && query.trim() && (\r\n                <div className=\"p-4 text-center text-gray-500\">\r\n                  No se encontraron resultados para \"{query}\"\r\n                </div>\r\n              )}\r\n\r\n              {!isLoading && suggestions.length > 0 && (\r\n                <div className=\"py-2\">\r\n                  {/* Secciones de sugerencias */}\r\n                  {showRecentSearches && suggestions.some(s => s.type === 'recent') && (\r\n                    <div className=\"px-3 py-2\">\r\n                      <h4 className=\"text-xs font-medium text-fun-green-700 uppercase tracking-wide mb-2\">\r\n                        Búsquedas recientes\r\n                      </h4>\r\n                      {suggestions\r\n                        .filter(s => s.type === 'recent')\r\n                        .map((suggestion, index) => (\r\n                          <button\r\n                            key={suggestion.id}\r\n                            onClick={() => handleSuggestionSelect(suggestion)}\r\n                            onMouseEnter={() => setSelectedIndex(suggestions.indexOf(suggestion))}\r\n                            className={cn(\r\n                              \"w-full flex items-center gap-3 px-3 py-2 text-left hover:bg-white/50 hover:border-l-2 hover:border-fun-green-500 rounded-md transition-all duration-200\",\r\n                              selectedIndex === suggestions.indexOf(suggestion) && \"bg-white/70 border-l-2 border-fun-green-600\"\r\n                            )}\r\n                            role=\"option\"\r\n                            aria-selected={selectedIndex === suggestions.indexOf(suggestion)}\r\n                          >\r\n                            {getSuggestionIcon(suggestion.type)}\r\n                            <span className=\"text-sm text-gray-700\">{suggestion.title}</span>\r\n                          </button>\r\n                        ))}\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* Productos */}\r\n                  {suggestions.some(s => s.type === 'product') && (\r\n                    <div className=\"px-3 py-2\">\r\n                      <h4 className=\"text-xs font-medium text-fun-green-700 uppercase tracking-wide mb-2\">\r\n                        Productos\r\n                      </h4>\r\n                      {suggestions\r\n                        .filter(s => s.type === 'product')\r\n                        .map((suggestion, index) => (\r\n                          <button\r\n                            key={suggestion.id}\r\n                            onClick={() => handleSuggestionSelect(suggestion)}\r\n                            onMouseEnter={() => setSelectedIndex(suggestions.indexOf(suggestion))}\r\n                            className={cn(\r\n                              \"w-full flex items-center gap-3 px-3 py-2 text-left hover:bg-white/50 hover:border-l-2 hover:border-fun-green-500 rounded-md transition-all duration-200\",\r\n                              selectedIndex === suggestions.indexOf(suggestion) && \"bg-white/70 border-l-2 border-fun-green-600\"\r\n                            )}\r\n                            role=\"option\"\r\n                            aria-selected={selectedIndex === suggestions.indexOf(suggestion)}\r\n                          >\r\n                            {suggestion.image ? (\r\n                              <div className=\"w-8 h-8 rounded-md overflow-hidden bg-gray-100 flex-shrink-0\">\r\n                                <Image\r\n                                  src={suggestion.image}\r\n                                  alt={suggestion.title}\r\n                                  width={32}\r\n                                  height={32}\r\n                                  className=\"w-full h-full object-cover\"\r\n                                />\r\n                              </div>\r\n                            ) : (\r\n                              getSuggestionIcon(suggestion.type)\r\n                            )}\r\n                            <div className=\"flex-1 min-w-0\">\r\n                              <div className=\"text-sm font-medium text-gray-900 truncate\">\r\n                                {suggestion.title}\r\n                              </div>\r\n                              {suggestion.subtitle && (\r\n                                <div className=\"text-xs text-fun-green-600 truncate font-medium\">\r\n                                  {suggestion.subtitle}\r\n                                </div>\r\n                              )}\r\n                            </div>\r\n                            {suggestion.badge && (\r\n                              <Badge variant=\"secondary\" size=\"sm\">\r\n                                {suggestion.badge}\r\n                              </Badge>\r\n                            )}\r\n                          </button>\r\n                        ))}\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* Trending */}\r\n                  {showTrendingSearches && suggestions.some(s => s.type === 'trending') && !query.trim() && (\r\n                    <div className=\"px-3 py-2\">\r\n                      <h4 className=\"text-xs font-medium text-fun-green-700 uppercase tracking-wide mb-2\">\r\n                        Búsquedas populares\r\n                      </h4>\r\n                      {suggestions\r\n                        .filter(s => s.type === 'trending')\r\n                        .map((suggestion, index) => (\r\n                          <button\r\n                            key={suggestion.id}\r\n                            onClick={() => handleSuggestionSelect(suggestion)}\r\n                            onMouseEnter={() => setSelectedIndex(suggestions.indexOf(suggestion))}\r\n                            className={cn(\r\n                              \"w-full flex items-center gap-3 px-3 py-2 text-left hover:bg-white/50 hover:border-l-2 hover:border-fun-green-500 rounded-md transition-all duration-200\",\r\n                              selectedIndex === suggestions.indexOf(suggestion) && \"bg-white/70 border-l-2 border-fun-green-600\"\r\n                            )}\r\n                            role=\"option\"\r\n                            aria-selected={selectedIndex === suggestions.indexOf(suggestion)}\r\n                          >\r\n                            {getSuggestionIcon(suggestion.type)}\r\n                            <span className=\"text-sm text-gray-700\">{suggestion.title}</span>\r\n                          </button>\r\n                        ))}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nSearchAutocomplete.displayName = \"SearchAutocomplete\";\r\n\r\nexport { SearchAutocomplete, searchAutocompleteVariants };\r\n"],"names":["SearchAutocomplete","searchAutocompleteVariants","cva","variants","size","sm","md","lg","defaultVariants","defaultTrendingSearches","id","type","title","href","React","forwardRef","className","onSearch","onSuggestionSelect","showRecentSearches","showTrendingSearches","maxSuggestions","debounceMs","placeholder","query","externalQuery","suggestions","externalSuggestions","isLoading","externalIsLoading","error","externalError","searchWithDebounce","externalSearchWithDebounce","onClear","externalOnClear","props","ref","trendingSearches","trackSearch","useTrendingSearches","limit","enabled","recentSearches","addSearch","addRecentSearch","getRecentSearches","useRecentSearches","maxSearches","SEARCH_CONSTANTS","MAX_RECENT_SEARCHES","enablePersistence","expirationDays","RECENT_SEARCHES_EXPIRATION_DAYS","internalQuery","setInternalQuery","useState","internalSuggestions","setInternalSuggestions","internalIsLoading","setInternalIsLoading","isOpen","setIsOpen","selectedIndex","setSelectedIndex","undefined","router","useRouter","inputRef","useRef","dropdownRef","debounceRef","searchProductsDebounced","useCallback","searchQuery","trim","response","searchProducts","success","data","productSuggestions","map","product","name","subtitle","category","image","images","previews","thumbnails","badge","stock","slice","console","handleInputChange","e","value","target","current","clearTimeout","setTimeout","handleFocus","defaultSuggestions","length","push","search","index","encodeURIComponent","trendingSuggestions","trending","count","handleSuggestionSelect","suggestion","catch","warn","handleSubmit","preventDefault","handleKeyDown","key","prev","useEffect","handleClickOutside","event","contains","document","addEventListener","removeEventListener","getSuggestionIcon","Clock","TrendingUp","Package","Search","div","cn","input","onChange","onFocus","onKeyDown","autoComplete","data-testid","button","onClick","focus","aria-label","X","style","backgroundColor","role","some","s","h4","filter","onMouseEnter","indexOf","aria-selected","span","Image","src","alt","width","height","Badge","variant","displayName"],"mappings":"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"}