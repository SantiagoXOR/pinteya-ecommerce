{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\providers\\MonitoringProvider.tsx"],"sourcesContent":["'use client'\n\nimport React, { createContext, useContext, useEffect, useState, ReactNode } from 'react'\nimport { proactiveMonitoring, startMonitoring } from '../lib/monitoring/proactive-monitoring'\nimport { logger, LogLevel, LogCategory } from '../lib/logger'\nimport { ErrorBoundaryWrapper } from '../components/ErrorBoundary'\n\ninterface MonitoringContextType {\n  isInitialized: boolean\n  isMonitoring: boolean\n  error: string | null\n}\n\nconst MonitoringContext = createContext<MonitoringContextType>({\n  isInitialized: false,\n  isMonitoring: false,\n  error: null\n})\n\nexport const useMonitoring = () => {\n  const context = useContext(MonitoringContext)\n  if (!context) {\n    throw new Error('useMonitoring must be used within a MonitoringProvider')\n  }\n  return context\n}\n\ninterface MonitoringProviderProps {\n  children: ReactNode\n  autoStart?: boolean\n  enableErrorBoundary?: boolean\n}\n\nexport function MonitoringProvider({\n  children,\n  autoStart = true,\n  enableErrorBoundary = true\n}: MonitoringProviderProps) {\n  const [isInitialized, setIsInitialized] = useState(false)\n  const [isMonitoring, setIsMonitoring] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n\n  useEffect(() => {\n    const initializeMonitoring = async () => {\n      try {\n        logger.info(LogLevel.INFO, 'Initializing proactive monitoring system', {}, LogCategory.SYSTEM)\n        \n        // Configurar el sistema de monitoreo\n        proactiveMonitoring.updateConfig({\n          enabled: true,\n          checkInterval: 30, // 30 segundos\n          errorThreshold: 5, // 5% de errores\n          responseTimeThreshold: 2000, // 2 segundos\n          memoryThreshold: 80, // 80% de memoria\n          cpuThreshold: 80, // 80% de CPU\n          enableAutoRecovery: false, // Deshabilitado por seguridad\n          notificationChannels: ['email', 'slack']\n        })\n\n        // Iniciar monitoreo automáticamente si está habilitado\n        if (autoStart) {\n          startMonitoring()\n          setIsMonitoring(true)\n          logger.info(LogLevel.INFO, 'Proactive monitoring started automatically', {}, LogCategory.SYSTEM)\n        }\n\n        // Configurar listeners para errores no capturados\n        if (typeof window !== 'undefined') {\n          // Errores de JavaScript no capturados\n          window.addEventListener('error', handleGlobalError)\n          \n          // Promesas rechazadas no capturadas\n          window.addEventListener('unhandledrejection', handleUnhandledRejection)\n          \n          // Errores de recursos (imágenes, scripts, etc.)\n          window.addEventListener('error', handleResourceError, true)\n        }\n\n        setIsInitialized(true)\n        setError(null)\n        \n        logger.info(LogLevel.INFO, 'Proactive monitoring system initialized successfully', {\n          autoStart,\n          enableErrorBoundary\n        }, LogCategory.SYSTEM)\n        \n      } catch (err) {\n        const errorMessage = err instanceof Error ? err.message : 'Failed to initialize monitoring'\n        setError(errorMessage)\n        logger.error(LogLevel.ERROR, 'Failed to initialize monitoring system', {\n          error: errorMessage\n        }, LogCategory.SYSTEM)\n      }\n    }\n\n    initializeMonitoring()\n\n    // Cleanup\n    return () => {\n      if (typeof window !== 'undefined') {\n        window.removeEventListener('error', handleGlobalError)\n        window.removeEventListener('unhandledrejection', handleUnhandledRejection)\n        window.removeEventListener('error', handleResourceError, true)\n      }\n    }\n  }, [autoStart])\n\n  const handleGlobalError = async (event: ErrorEvent) => {\n    try {\n      await proactiveMonitoring.reportError(event.error || new Error(event.message), {\n        source: 'global_error_handler',\n        filename: event.filename,\n        lineno: event.lineno,\n        colno: event.colno,\n        timestamp: new Date().toISOString(),\n        url: window.location.href,\n        userAgent: navigator.userAgent\n      })\n    } catch (reportingError) {\n      logger.error(LogLevel.ERROR, 'Failed to report global error', {\n        originalError: event.message,\n        reportingError: reportingError instanceof Error ? reportingError.message : 'Unknown error'\n      }, LogCategory.SYSTEM)\n    }\n  }\n\n  const handleUnhandledRejection = async (event: PromiseRejectionEvent) => {\n    try {\n      const error = event.reason instanceof Error ? event.reason : new Error(String(event.reason))\n      await proactiveMonitoring.reportError(error, {\n        source: 'unhandled_promise_rejection',\n        timestamp: new Date().toISOString(),\n        url: window.location.href,\n        userAgent: navigator.userAgent,\n        reason: String(event.reason)\n      })\n    } catch (reportingError) {\n      logger.error(LogLevel.ERROR, 'Failed to report unhandled promise rejection', {\n        originalReason: String(event.reason),\n        reportingError: reportingError instanceof Error ? reportingError.message : 'Unknown error'\n      }, LogCategory.SYSTEM)\n    }\n  }\n\n  const handleResourceError = async (event: Event) => {\n    if (event.target && event.target !== window) {\n      const target = event.target as HTMLElement\n      const tagName = target.tagName?.toLowerCase()\n      const src = (target as any).src || (target as any).href\n      \n      if (src && ['img', 'script', 'link', 'iframe'].includes(tagName)) {\n        try {\n          await proactiveMonitoring.reportError(\n            new Error(`Resource loading failed: ${tagName} - ${src}`),\n            {\n              source: 'resource_error',\n              resourceType: tagName,\n              resourceUrl: src,\n              timestamp: new Date().toISOString(),\n              url: window.location.href\n            }\n          )\n        } catch (reportingError) {\n          logger.error(LogLevel.ERROR, 'Failed to report resource error', {\n            resourceUrl: src,\n            resourceType: tagName,\n            reportingError: reportingError instanceof Error ? reportingError.message : 'Unknown error'\n          }, LogCategory.SYSTEM)\n        }\n      }\n    }\n  }\n\n  const contextValue: MonitoringContextType = {\n    isInitialized,\n    isMonitoring,\n    error\n  }\n\n  const content = (\n    <MonitoringContext.Provider value={contextValue}>\n      {children}\n    </MonitoringContext.Provider>\n  )\n\n  // Envolver con Error Boundary si está habilitado\n  if (enableErrorBoundary) {\n    return (\n      <ErrorBoundaryWrapper\n        showDetails={process.env.NODE_ENV === 'development'}\n        enableReporting={true}\n      >\n        {content}\n      </ErrorBoundaryWrapper>\n    )\n  }\n\n  return content\n}\n\n/**\n * Hook para reportar errores manualmente desde componentes\n */\nexport function useErrorReporting() {\n  const { isInitialized } = useMonitoring()\n\n  const reportError = React.useCallback(async (error: Error | string, context?: Record<string, any>) => {\n    if (!isInitialized) {\n      logger.warn(LogLevel.WARN, 'Monitoring not initialized, error not reported', {\n        error: error instanceof Error ? error.message : error\n      }, LogCategory.SYSTEM)\n      return\n    }\n\n    try {\n      await proactiveMonitoring.reportError(error, {\n        ...context,\n        source: 'manual_report',\n        timestamp: new Date().toISOString(),\n        url: typeof window !== 'undefined' ? window.location.href : 'unknown'\n      })\n    } catch (reportingError) {\n      logger.error(LogLevel.ERROR, 'Failed to report error manually', {\n        originalError: error instanceof Error ? error.message : error,\n        reportingError: reportingError instanceof Error ? reportingError.message : 'Unknown error'\n      }, LogCategory.SYSTEM)\n    }\n  }, [isInitialized])\n\n  return { reportError, isInitialized }\n}\n\n/**\n * Hook para obtener estadísticas de monitoreo\n */\nexport function useMonitoringStats() {\n  const { isInitialized } = useMonitoring()\n  const [stats, setStats] = useState<any>(null)\n  const [loading, setLoading] = useState(false)\n\n  const refreshStats = React.useCallback(async () => {\n    if (!isInitialized) return\n\n    try {\n      setLoading(true)\n      const newStats = await proactiveMonitoring.getMonitoringStats()\n      setStats(newStats)\n    } catch (error) {\n      logger.error(LogLevel.ERROR, 'Failed to fetch monitoring stats', {\n        error: error instanceof Error ? error.message : 'Unknown error'\n      }, LogCategory.SYSTEM)\n    } finally {\n      setLoading(false)\n    }\n  }, [isInitialized])\n\n  React.useEffect(() => {\n    if (isInitialized) {\n      refreshStats()\n      \n      // Actualizar estadísticas cada 30 segundos\n      const interval = setInterval(refreshStats, 30000)\n      return () => clearInterval(interval)\n    }\n  }, [isInitialized, refreshStats])\n\n  return { stats, loading, refreshStats }\n}\n\n/**\n * Componente de estado del monitoreo (para debugging)\n */\nexport function MonitoringStatus() {\n  const { isInitialized, isMonitoring, error } = useMonitoring()\n\n  if (process.env.NODE_ENV !== 'development') {\n    return null\n  }\n\n  return (\n    <div className=\"fixed bottom-4 right-4 z-50 bg-black text-white text-xs p-2 rounded shadow-lg\">\n      <div>Monitoring: {isInitialized ? '✅' : '❌'}</div>\n      <div>Active: {isMonitoring ? '✅' : '❌'}</div>\n      {error && <div className=\"text-red-300\">Error: {error}</div>}\n    </div>\n  )\n}"],"names":["MonitoringProvider","MonitoringStatus","useErrorReporting","useMonitoring","useMonitoringStats","MonitoringContext","createContext","isInitialized","isMonitoring","error","context","useContext","Error","children","autoStart","enableErrorBoundary","setIsInitialized","useState","setIsMonitoring","setError","useEffect","initializeMonitoring","logger","info","LogLevel","INFO","LogCategory","SYSTEM","proactiveMonitoring","updateConfig","enabled","checkInterval","errorThreshold","responseTimeThreshold","memoryThreshold","cpuThreshold","enableAutoRecovery","notificationChannels","startMonitoring","window","addEventListener","handleGlobalError","handleUnhandledRejection","handleResourceError","err","errorMessage","message","ERROR","removeEventListener","event","reportError","source","filename","lineno","colno","timestamp","Date","toISOString","url","location","href","userAgent","navigator","reportingError","originalError","reason","String","originalReason","target","tagName","toLowerCase","src","includes","resourceType","resourceUrl","contextValue","content","Provider","value","ErrorBoundaryWrapper","showDetails","process","env","NODE_ENV","enableReporting","React","useCallback","warn","WARN","stats","setStats","loading","setLoading","refreshStats","newStats","getMonitoringStats","interval","setInterval","clearInterval","div","className"],"mappings":"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"}