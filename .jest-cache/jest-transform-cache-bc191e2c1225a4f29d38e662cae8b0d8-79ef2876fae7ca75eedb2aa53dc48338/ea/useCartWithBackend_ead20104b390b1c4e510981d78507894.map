{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useCartWithBackend.ts"],"sourcesContent":["// ===================================\n// PINTEYA E-COMMERCE - HOOK DE CARRITO CON BACKEND\n// ===================================\n// Hook optimizado que conecta el carrito frontend con las APIs del backend\n\n'use client';\n\nimport { useCallback, useEffect, useState } from 'react';\nimport { useSession } from 'next-auth/react';\nimport { toast } from 'sonner';\n\n// Tipos para el carrito\ninterface CartProduct {\n  id: number;\n  name: string;\n  price: number;\n  discounted_price?: number;\n  images?: any;\n  stock: number;\n  brand?: string;\n  category?: {\n    id: number;\n    name: string;\n  };\n}\n\ninterface CartItem {\n  id: string;\n  user_id: string;\n  product_id: number;\n  quantity: number;\n  created_at: string;\n  updated_at: string;\n  products: CartProduct;\n}\n\ninterface CartState {\n  items: CartItem[];\n  totalItems: number;\n  totalAmount: number;\n  itemCount: number;\n  loading: boolean;\n  error: string | null;\n}\n\ninterface UseCartWithBackendReturn extends CartState {\n  addItem: (productId: number, quantity?: number) => Promise<boolean>;\n  removeItem: (productId: number, quantity?: number) => Promise<boolean>;\n  updateQuantity: (productId: number, quantity: number) => Promise<boolean>;\n  clearCart: () => Promise<boolean>;\n  loadCart: () => Promise<void>;\n  getItemQuantity: (productId: number) => number;\n  isInCart: (productId: number) => boolean;\n  refreshCart: () => Promise<void>;\n}\n\n/**\n * Hook para manejar el carrito con integración completa al backend\n */\nexport const useCartWithBackend = (): UseCartWithBackendReturn => {\n  const { data: session, status } = useSession();\n  const [cartState, setCartState] = useState<CartState>({\n    items: [],\n    totalItems: 0,\n    totalAmount: 0,\n    itemCount: 0,\n    loading: false,\n    error: null\n  });\n\n  // Función para hacer requests a la API\n  const apiRequest = useCallback(async (url: string, options: RequestInit = {}) => {\n    try {\n      const response = await fetch(url, {\n        headers: {\n          'Content-Type': 'application/json',\n          ...options.headers\n        },\n        ...options\n      });\n\n      const data = await response.json();\n      \n      if (!response.ok) {\n        throw new Error(data.error || `HTTP ${response.status}`);\n      }\n\n      return data;\n    } catch (error: any) {\n      console.error(`API Error (${url}):`, error);\n      throw error;\n    }\n  }, []);\n\n  // Cargar carrito desde el backend\n  const loadCart = useCallback(async () => {\n    if (status === 'loading') return;\n    \n    if (!session?.user) {\n      // Usuario no autenticado - carrito vacío\n      setCartState(prev => ({\n        ...prev,\n        items: [],\n        totalItems: 0,\n        totalAmount: 0,\n        itemCount: 0,\n        loading: false,\n        error: null\n      }));\n      return;\n    }\n\n    setCartState(prev => ({ ...prev, loading: true, error: null }));\n\n    try {\n      const data = await apiRequest('/api/cart');\n      \n      setCartState(prev => ({\n        ...prev,\n        items: data.items || [],\n        totalItems: data.totalItems || 0,\n        totalAmount: data.totalAmount || 0,\n        itemCount: data.itemCount || 0,\n        loading: false,\n        error: null\n      }));\n\n      console.log('✅ Carrito cargado:', data.itemCount, 'productos únicos');\n    } catch (error: any) {\n      console.error('❌ Error cargando carrito:', error);\n      setCartState(prev => ({\n        ...prev,\n        loading: false,\n        error: error.message || 'Error cargando carrito'\n      }));\n    }\n  }, [session, status, apiRequest]);\n\n  // Agregar item al carrito\n  const addItem = useCallback(async (productId: number, quantity: number = 1): Promise<boolean> => {\n    if (!session?.user) {\n      toast.error('Debes iniciar sesión para agregar productos al carrito');\n      return false;\n    }\n\n    setCartState(prev => ({ ...prev, loading: true, error: null }));\n\n    try {\n      const data = await apiRequest('/api/cart/add', {\n        method: 'POST',\n        body: JSON.stringify({ productId, quantity })\n      });\n\n      if (data.success) {\n        // Recargar carrito para obtener estado actualizado\n        await loadCart();\n        \n        toast.success(data.message || 'Producto agregado al carrito');\n        console.log('✅ Producto agregado:', data.item?.productName);\n        return true;\n      } else {\n        throw new Error(data.error || 'Error agregando producto');\n      }\n    } catch (error: any) {\n      console.error('❌ Error agregando al carrito:', error);\n      setCartState(prev => ({ ...prev, loading: false, error: error.message }));\n      \n      if (error.message.includes('Stock insuficiente')) {\n        toast.error(error.message);\n      } else if (error.message.includes('autenticado')) {\n        toast.error('Debes iniciar sesión para agregar productos');\n      } else {\n        toast.error('Error agregando producto al carrito');\n      }\n      \n      return false;\n    }\n  }, [session, apiRequest, loadCart]);\n\n  // Remover item del carrito\n  const removeItem = useCallback(async (productId: number, quantity?: number): Promise<boolean> => {\n    if (!session?.user) {\n      toast.error('Debes iniciar sesión');\n      return false;\n    }\n\n    setCartState(prev => ({ ...prev, loading: true, error: null }));\n\n    try {\n      const data = await apiRequest('/api/cart/remove', {\n        method: 'DELETE',\n        body: JSON.stringify({ productId, quantity })\n      });\n\n      if (data.success) {\n        await loadCart();\n        toast.success(data.message || 'Producto removido del carrito');\n        console.log('✅ Producto removido:', data.item?.productName);\n        return true;\n      } else {\n        throw new Error(data.error || 'Error removiendo producto');\n      }\n    } catch (error: any) {\n      console.error('❌ Error removiendo del carrito:', error);\n      setCartState(prev => ({ ...prev, loading: false, error: error.message }));\n      toast.error('Error removiendo producto del carrito');\n      return false;\n    }\n  }, [session, apiRequest, loadCart]);\n\n  // Actualizar cantidad de un item\n  const updateQuantity = useCallback(async (productId: number, quantity: number): Promise<boolean> => {\n    if (!session?.user) {\n      toast.error('Debes iniciar sesión');\n      return false;\n    }\n\n    setCartState(prev => ({ ...prev, loading: true, error: null }));\n\n    try {\n      const data = await apiRequest('/api/cart/update', {\n        method: 'PUT',\n        body: JSON.stringify({ productId, quantity })\n      });\n\n      if (data.success) {\n        await loadCart();\n        toast.success(data.message || 'Cantidad actualizada');\n        console.log('✅ Cantidad actualizada:', data.item?.productName);\n        return true;\n      } else {\n        throw new Error(data.error || 'Error actualizando cantidad');\n      }\n    } catch (error: any) {\n      console.error('❌ Error actualizando cantidad:', error);\n      setCartState(prev => ({ ...prev, loading: false, error: error.message }));\n      toast.error('Error actualizando cantidad');\n      return false;\n    }\n  }, [session, apiRequest, loadCart]);\n\n  // Limpiar carrito completo\n  const clearCart = useCallback(async (): Promise<boolean> => {\n    if (!session?.user) {\n      toast.error('Debes iniciar sesión');\n      return false;\n    }\n\n    setCartState(prev => ({ ...prev, loading: true, error: null }));\n\n    try {\n      const data = await apiRequest('/api/cart', {\n        method: 'DELETE'\n      });\n\n      if (data.success) {\n        await loadCart();\n        toast.success('Carrito limpiado');\n        console.log('✅ Carrito limpiado');\n        return true;\n      } else {\n        throw new Error(data.error || 'Error limpiando carrito');\n      }\n    } catch (error: any) {\n      console.error('❌ Error limpiando carrito:', error);\n      setCartState(prev => ({ ...prev, loading: false, error: error.message }));\n      toast.error('Error limpiando carrito');\n      return false;\n    }\n  }, [session, apiRequest, loadCart]);\n\n  // Obtener cantidad de un producto específico en el carrito\n  const getItemQuantity = useCallback((productId: number): number => {\n    const item = cartState.items.find(item => item.product_id === productId);\n    return item?.quantity || 0;\n  }, [cartState.items]);\n\n  // Verificar si un producto está en el carrito\n  const isInCart = useCallback((productId: number): boolean => {\n    return cartState.items.some(item => item.product_id === productId);\n  }, [cartState.items]);\n\n  // Refrescar carrito (alias para loadCart)\n  const refreshCart = useCallback(async () => {\n    await loadCart();\n  }, [loadCart]);\n\n  // Cargar carrito al montar el componente o cuando cambie la sesión\n  useEffect(() => {\n    loadCart();\n  }, [loadCart]);\n\n  return {\n    ...cartState,\n    addItem,\n    removeItem,\n    updateQuantity,\n    clearCart,\n    loadCart,\n    getItemQuantity,\n    isInCart,\n    refreshCart\n  };\n};\n\nexport default useCartWithBackend;\n"],"names":["useCartWithBackend","data","session","status","useSession","cartState","setCartState","useState","items","totalItems","totalAmount","itemCount","loading","error","apiRequest","useCallback","url","options","response","fetch","headers","json","ok","Error","console","loadCart","user","prev","log","message","addItem","productId","quantity","toast","method","body","JSON","stringify","success","item","productName","includes","removeItem","updateQuantity","clearCart","getItemQuantity","find","product_id","isInCart","some","refreshCart","useEffect"],"mappings":"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"}