1ca325d642f9a9a36c84db3894766e61
"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _image = /*#__PURE__*/ _interop_require_default(require("next/image"));
const _react1 = require("swiper/react");
const _modules = require("swiper/modules");
require("swiper/css");
require("swiper/css/pagination");
require("swiper/css/navigation");
require("swiper/css/effect-fade");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const ImageCarousel = ({ images, autoplay = true, autoplayDelay = 4000, pauseOnHover = true, showNavigation = true, showPagination = true, effect = "slide", className = "", imageClassName = "", aspectRatio = "auto", sizes = "(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw", onSlideChange, ariaLabel = "Carrusel de imágenes" })=>{
    const swiperRef = (0, _react.useRef)(null);
    const [activeIndex, setActiveIndex] = (0, _react.useState)(0);
    const [isHovered, setIsHovered] = (0, _react.useState)(false);
    // Manejar cambio de slide
    const handleSlideChange = (0, _react.useCallback)((swiper)=>{
        setActiveIndex(swiper.activeIndex);
        onSlideChange?.(swiper.activeIndex);
    }, [
        onSlideChange
    ]);
    // Manejar hover para pausar autoplay
    const handleMouseEnter = (0, _react.useCallback)(()=>{
        setIsHovered(true);
        if (pauseOnHover && swiperRef.current?.autoplay) {
            swiperRef.current.autoplay.stop();
        }
    }, [
        pauseOnHover
    ]);
    const handleMouseLeave = (0, _react.useCallback)(()=>{
        setIsHovered(false);
        if (pauseOnHover && swiperRef.current?.autoplay && autoplay) {
            swiperRef.current.autoplay.start();
        }
    }, [
        pauseOnHover,
        autoplay
    ]);
    // Navegación por teclado
    const handleKeyDown = (0, _react.useCallback)((event)=>{
        if (!swiperRef.current) return;
        switch(event.key){
            case "ArrowLeft":
                event.preventDefault();
                swiperRef.current.slidePrev();
                break;
            case "ArrowRight":
                event.preventDefault();
                swiperRef.current.slideNext();
                break;
            case "Home":
                event.preventDefault();
                swiperRef.current.slideTo(0);
                break;
            case "End":
                event.preventDefault();
                swiperRef.current.slideTo(images.length - 1);
                break;
        }
    }, [
        images.length
    ]);
    // Clases CSS para aspect ratio
    const getAspectRatioClass = ()=>{
        switch(aspectRatio){
            case "square":
                return "aspect-square";
            case "video":
                return "aspect-video";
            case "wide":
                return "aspect-[21/9]";
            default:
                return "";
        }
    };
    // Configuración de Swiper
    const swiperConfig = {
        modules: [
            _modules.Autoplay,
            _modules.Pagination,
            _modules.Navigation,
            _modules.EffectFade
        ],
        spaceBetween: 0,
        slidesPerView: 1,
        loop: images.length > 1,
        effect: effect,
        autoplay: autoplay ? {
            delay: autoplayDelay,
            disableOnInteraction: false,
            pauseOnMouseEnter: pauseOnHover
        } : false,
        pagination: showPagination ? {
            clickable: true,
            bulletClass: "swiper-pagination-bullet !bg-white/60 !w-3 !h-3 !mx-1",
            bulletActiveClass: "swiper-pagination-bullet-active !bg-blaze-orange-500 !scale-125"
        } : false,
        navigation: showNavigation ? {
            nextEl: ".swiper-button-next-custom",
            prevEl: ".swiper-button-prev-custom"
        } : false,
        onSwiper: (swiper)=>{
            swiperRef.current = swiper;
        },
        onSlideChange: handleSlideChange
    };
    if (!images || images.length === 0) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
            className: `bg-gray-200 animate-pulse ${getAspectRatioClass()} ${className}`,
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "flex items-center justify-center h-full text-gray-400",
                children: "Sin im\xe1genes disponibles"
            })
        });
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        className: `relative group ${className}`,
        onMouseEnter: handleMouseEnter,
        onMouseLeave: handleMouseLeave,
        onKeyDown: handleKeyDown,
        tabIndex: 0,
        role: "region",
        "aria-label": ariaLabel,
        "aria-live": "polite",
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_react1.Swiper, {
                ...swiperConfig,
                className: "w-full h-full",
                children: images.map((image, index)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_react1.SwiperSlide, {
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            className: `relative w-full h-full ${getAspectRatioClass()}`,
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_image.default, {
                                src: image.src,
                                alt: image.alt,
                                fill: true,
                                className: `object-cover transition-transform duration-700 ease-out group-hover:scale-105 ${imageClassName}`,
                                sizes: sizes,
                                priority: image.priority || index === 0,
                                quality: 85
                            })
                        })
                    }, `${image.src}-${index}`))
            }),
            showNavigation && images.length > 1 && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                        className: "swiper-button-prev-custom absolute left-4 top-1/2 -translate-y-1/2 z-10 w-10 h-10 bg-white/80 hover:bg-white rounded-full shadow-lg opacity-0 group-hover:opacity-100 transition-all duration-300 flex items-center justify-center text-blaze-orange-600 hover:text-blaze-orange-700 focus:outline-none focus:ring-2 focus:ring-blaze-orange-500 focus:ring-offset-2",
                        "aria-label": "Imagen anterior",
                        type: "button",
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)("svg", {
                            className: "w-5 h-5",
                            fill: "none",
                            stroke: "currentColor",
                            viewBox: "0 0 24 24",
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)("path", {
                                strokeLinecap: "round",
                                strokeLinejoin: "round",
                                strokeWidth: 2,
                                d: "M15 19l-7-7 7-7"
                            })
                        })
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                        className: "swiper-button-next-custom absolute right-4 top-1/2 -translate-y-1/2 z-10 w-10 h-10 bg-white/80 hover:bg-white rounded-full shadow-lg opacity-0 group-hover:opacity-100 transition-all duration-300 flex items-center justify-center text-blaze-orange-600 hover:text-blaze-orange-700 focus:outline-none focus:ring-2 focus:ring-blaze-orange-500 focus:ring-offset-2",
                        "aria-label": "Imagen siguiente",
                        type: "button",
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)("svg", {
                            className: "w-5 h-5",
                            fill: "none",
                            stroke: "currentColor",
                            viewBox: "0 0 24 24",
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)("path", {
                                strokeLinecap: "round",
                                strokeLinejoin: "round",
                                strokeWidth: 2,
                                d: "M9 5l7 7-7 7"
                            })
                        })
                    })
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "sr-only",
                "aria-live": "polite",
                children: [
                    "Imagen ",
                    activeIndex + 1,
                    " de ",
                    images.length,
                    ": ",
                    images[activeIndex]?.alt
                ]
            }),
            autoplay && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "absolute top-4 right-4 z-10",
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                    className: `w-2 h-2 rounded-full transition-colors duration-300 ${isHovered ? 'bg-yellow-400' : 'bg-white/60'}`,
                    title: isHovered ? 'Autoplay pausado' : 'Autoplay activo'
                })
            })
        ]
    });
};
const _default = ImageCarousel;

//# sourceMappingURL=data:application/json;base64,