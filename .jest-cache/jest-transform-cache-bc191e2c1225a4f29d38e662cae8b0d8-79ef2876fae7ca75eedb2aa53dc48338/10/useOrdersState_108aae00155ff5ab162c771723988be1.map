{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\admin\\useOrdersState.ts"],"sourcesContent":["// ===================================\n// PINTEYA E-COMMERCE - ORDERS STATE HOOK\n// Hook especializado para manejo de estado de Ã³rdenes\n// ===================================\n\nimport { useState, useCallback, useRef } from 'react';\nimport { StrictOrderEnterprise, StrictPagination } from '@/types/api-strict';\nimport { StrictOrderFilters } from './useOrdersEnterpriseStrict';\n\n// ===================================\n// TIPOS DE ESTADO\n// ===================================\n\nexport interface StrictOrdersState {\n  readonly orders: StrictOrderEnterprise[];\n  readonly pagination: StrictPagination | null;\n  readonly analytics: {\n    readonly total_orders: number;\n    readonly total_revenue: number;\n    readonly pending_orders: number;\n    readonly completed_orders: number;\n  } | null;\n  readonly filters: StrictOrderFilters;\n  readonly isLoading: boolean;\n  readonly error: string | null;\n  readonly lastUpdated: Date | null;\n}\n\nexport interface StrictOrdersActions {\n  readonly updateFilters: (newFilters: Partial<StrictOrderFilters>) => void;\n  readonly setLoading: (loading: boolean) => void;\n  readonly setError: (error: string | null) => void;\n  readonly setOrders: (orders: StrictOrderEnterprise[]) => void;\n  readonly setPagination: (pagination: StrictPagination | null) => void;\n  readonly setAnalytics: (analytics: StrictOrdersState['analytics']) => void;\n  readonly resetState: () => void;\n  readonly updateOrder: (orderId: string, updates: Partial<StrictOrderEnterprise>) => void;\n}\n\n// ===================================\n// ESTADO POR DEFECTO\n// ===================================\n\nconst DEFAULT_FILTERS: StrictOrderFilters = {\n  page: 1,\n  limit: 20,\n  sort_by: 'created_at',\n  sort_order: 'desc',\n  status: 'all',\n  payment_status: 'all',\n  fulfillment_status: 'all'\n};\n\nconst DEFAULT_STATE: Omit<StrictOrdersState, 'filters'> = {\n  orders: [],\n  pagination: null,\n  analytics: null,\n  isLoading: false,\n  error: null,\n  lastUpdated: null\n};\n\n// ===================================\n// HOOK DE ESTADO\n// ===================================\n\nexport interface UseOrdersStateReturn extends StrictOrdersState, StrictOrdersActions {\n  readonly getLastFilters: () => StrictOrderFilters;\n  readonly hasFiltersChanged: (newFilters: StrictOrderFilters) => boolean;\n}\n\nexport function useOrdersState(\n  initialFilters: Partial<StrictOrderFilters> = {}\n): UseOrdersStateReturn {\n  \n  // Estado principal\n  const [state, setState] = useState<StrictOrdersState>({\n    ...DEFAULT_STATE,\n    filters: { ...DEFAULT_FILTERS, ...initialFilters }\n  });\n  \n  // Referencias para comparaciones\n  const lastFiltersRef = useRef<StrictOrderFilters>(state.filters);\n  \n  // ===================================\n  // ACCIONES DE ESTADO\n  // ===================================\n  \n  const updateFilters = useCallback((newFilters: Partial<StrictOrderFilters>): void => {\n    setState(prev => {\n      const updatedFilters = { ...prev.filters, ...newFilters };\n      lastFiltersRef.current = updatedFilters;\n      \n      return {\n        ...prev,\n        filters: updatedFilters,\n        // Reset pagination cuando cambian filtros (excepto page)\n        ...(Object.keys(newFilters).some(key => key !== 'page') && {\n          pagination: prev.pagination ? { ...prev.pagination, page: 1 } : null\n        })\n      };\n    });\n  }, []);\n  \n  const setLoading = useCallback((loading: boolean): void => {\n    setState(prev => ({\n      ...prev,\n      isLoading: loading,\n      // Limpiar error cuando empieza nueva carga\n      ...(loading && { error: null })\n    }));\n  }, []);\n  \n  const setError = useCallback((error: string | null): void => {\n    setState(prev => ({\n      ...prev,\n      error,\n      isLoading: false\n    }));\n  }, []);\n  \n  const setOrders = useCallback((orders: StrictOrderEnterprise[]): void => {\n    setState(prev => ({\n      ...prev,\n      orders,\n      lastUpdated: new Date(),\n      isLoading: false,\n      error: null\n    }));\n  }, []);\n  \n  const setPagination = useCallback((pagination: StrictPagination | null): void => {\n    setState(prev => ({\n      ...prev,\n      pagination\n    }));\n  }, []);\n  \n  const setAnalytics = useCallback((analytics: StrictOrdersState['analytics']): void => {\n    setState(prev => ({\n      ...prev,\n      analytics\n    }));\n  }, []);\n  \n  const resetState = useCallback((): void => {\n    setState({\n      ...DEFAULT_STATE,\n      filters: { ...DEFAULT_FILTERS }\n    });\n    lastFiltersRef.current = { ...DEFAULT_FILTERS };\n  }, []);\n  \n  const updateOrder = useCallback((orderId: string, updates: Partial<StrictOrderEnterprise>): void => {\n    setState(prev => ({\n      ...prev,\n      orders: prev.orders.map(order => \n        order.id === orderId \n          ? { ...order, ...updates }\n          : order\n      ),\n      lastUpdated: new Date()\n    }));\n  }, []);\n  \n  // ===================================\n  // UTILIDADES\n  // ===================================\n  \n  const getLastFilters = useCallback((): StrictOrderFilters => {\n    return lastFiltersRef.current;\n  }, []);\n  \n  const hasFiltersChanged = useCallback((newFilters: StrictOrderFilters): boolean => {\n    const currentFiltersString = JSON.stringify(state.filters);\n    const newFiltersString = JSON.stringify(newFilters);\n    return currentFiltersString !== newFiltersString;\n  }, [state.filters]);\n  \n  // ===================================\n  // RETORNO DEL HOOK\n  // ===================================\n  \n  return {\n    // Estado\n    orders: state.orders,\n    pagination: state.pagination,\n    analytics: state.analytics,\n    filters: state.filters,\n    isLoading: state.isLoading,\n    error: state.error,\n    lastUpdated: state.lastUpdated,\n    \n    // Acciones\n    updateFilters,\n    setLoading,\n    setError,\n    setOrders,\n    setPagination,\n    setAnalytics,\n    resetState,\n    updateOrder,\n    \n    // Utilidades\n    getLastFilters,\n    hasFiltersChanged\n  };\n}\n"],"names":["useOrdersState","DEFAULT_FILTERS","page","limit","sort_by","sort_order","status","payment_status","fulfillment_status","DEFAULT_STATE","orders","pagination","analytics","isLoading","error","lastUpdated","initialFilters","state","setState","useState","filters","lastFiltersRef","useRef","updateFilters","useCallback","newFilters","prev","updatedFilters","current","Object","keys","some","key","setLoading","loading","setError","setOrders","Date","setPagination","setAnalytics","resetState","updateOrder","orderId","updates","map","order","id","getLastFilters","hasFiltersChanged","currentFiltersString","JSON","stringify","newFiltersString"],"mappings":"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"}