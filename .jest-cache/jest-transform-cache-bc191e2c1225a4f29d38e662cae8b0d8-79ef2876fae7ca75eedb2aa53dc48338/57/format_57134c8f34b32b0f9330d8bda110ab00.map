{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\utils\\format.ts"],"sourcesContent":["// =====================================================\n// UTILIDADES: FORMATEO DE DATOS\n// Descripción: Funciones para formatear fechas, números, monedas, etc.\n// Basado en: Intl API + date-fns + patrones enterprise\n// =====================================================\n\nimport { format, formatDistanceToNow, parseISO, isValid } from 'date-fns';\nimport { es } from 'date-fns/locale';\n\n// =====================================================\n// FORMATEO DE FECHAS\n// =====================================================\n\nexport function formatDate(date: string | Date, pattern: string = 'dd/MM/yyyy'): string {\n  try {\n    const dateObj = typeof date === 'string' ? parseISO(date) : date;\n    if (!isValid(dateObj)) {\n      return 'Fecha inválida';\n    }\n    return format(dateObj, pattern, { locale: es });\n  } catch (error) {\n    console.error('Error formatting date:', error);\n    return 'Fecha inválida';\n  }\n}\n\nexport function formatDateTime(date: string | Date): string {\n  return formatDate(date, 'dd/MM/yyyy HH:mm');\n}\n\nexport function formatTimeAgo(date: string | Date): string {\n  try {\n    const dateObj = typeof date === 'string' ? parseISO(date) : date;\n    if (!isValid(dateObj)) {\n      return 'Fecha inválida';\n    }\n    return formatDistanceToNow(dateObj, {\n      addSuffix: true,\n      locale: es\n    });\n  } catch (error) {\n    console.error('Error formatting time ago:', error);\n    return 'Fecha inválida';\n  }\n}\n\nexport function formatRelativeTime(date: string | Date): string {\n  return formatTimeAgo(date);\n}\n\n// =====================================================\n// FORMATEO DE NÚMEROS Y MONEDAS\n// =====================================================\n\nexport function formatCurrency(\n  amount: number, \n  currency: string = 'ARS',\n  locale: string = 'es-AR'\n): string {\n  try {\n    return new Intl.NumberFormat(locale, {\n      style: 'currency',\n      currency: currency,\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 2\n    }).format(amount);\n  } catch (error) {\n    console.error('Error formatting currency:', error);\n    return `$${amount.toFixed(2)}`;\n  }\n}\n\nexport function formatNumber(\n  number: number,\n  locale: string = 'es-AR',\n  options?: Intl.NumberFormatOptions\n): string {\n  try {\n    return new Intl.NumberFormat(locale, options).format(number);\n  } catch (error) {\n    console.error('Error formatting number:', error);\n    return number.toString();\n  }\n}\n\nexport function formatPercentage(\n  value: number,\n  decimals: number = 1,\n  locale: string = 'es-AR'\n): string {\n  try {\n    return new Intl.NumberFormat(locale, {\n      style: 'percent',\n      minimumFractionDigits: decimals,\n      maximumFractionDigits: decimals\n    }).format(value / 100);\n  } catch (error) {\n    console.error('Error formatting percentage:', error);\n    return `${value.toFixed(decimals)}%`;\n  }\n}\n\n// =====================================================\n// FORMATEO DE TEXTO\n// =====================================================\n\nexport function formatPhoneNumber(phone: string): string {\n  // Formato argentino: +54 9 351 123 4567\n  const cleaned = phone.replace(/\\D/g, '');\n  \n  if (cleaned.length === 10) {\n    // Formato local: 351 123 4567\n    return cleaned.replace(/(\\d{3})(\\d{3})(\\d{4})/, '$1 $2 $3');\n  } else if (cleaned.length === 13 && cleaned.startsWith('549')) {\n    // Formato internacional: +54 9 351 123 4567\n    return cleaned.replace(/(\\d{2})(\\d{1})(\\d{3})(\\d{3})(\\d{4})/, '+$1 $2 $3 $4 $5');\n  }\n  \n  return phone;\n}\n\nexport function formatAddress(address: {\n  street: string;\n  number: string;\n  apartment?: string;\n  neighborhood: string;\n  city: string;\n  state: string;\n  postal_code: string;\n}): string {\n  const parts = [\n    `${address.street} ${address.number}`,\n    address.apartment ? `Depto ${address.apartment}` : '',\n    address.neighborhood,\n    address.city,\n    address.state,\n    `CP ${address.postal_code}`\n  ].filter(Boolean);\n  \n  return parts.join(', ');\n}\n\nexport function truncateText(text: string, maxLength: number = 50): string {\n  if (text.length <= maxLength) {\n    return text;\n  }\n  return text.substring(0, maxLength - 3) + '...';\n}\n\nexport function capitalizeFirst(text: string): string {\n  if (!text) return '';\n  return text.charAt(0).toUpperCase() + text.slice(1).toLowerCase();\n}\n\nexport function formatSlug(text: string): string {\n  return text\n    .toLowerCase()\n    .normalize('NFD')\n    .replace(/[\\u0300-\\u036f]/g, '') // Remover acentos\n    .replace(/[^a-z0-9\\s-]/g, '') // Remover caracteres especiales\n    .replace(/\\s+/g, '-') // Reemplazar espacios con guiones\n    .replace(/-+/g, '-') // Remover guiones múltiples\n    .trim();\n}\n\n// =====================================================\n// FORMATEO DE ESTADOS Y BADGES\n// =====================================================\n\nexport function formatShipmentStatus(status: string): {\n  label: string;\n  color: 'default' | 'secondary' | 'destructive' | 'outline';\n} {\n  const statusMap: Record<string, { label: string; color: any }> = {\n    pending: { label: 'Pendiente', color: 'secondary' },\n    confirmed: { label: 'Confirmado', color: 'default' },\n    picked_up: { label: 'Retirado', color: 'default' },\n    in_transit: { label: 'En Tránsito', color: 'default' },\n    out_for_delivery: { label: 'En Reparto', color: 'default' },\n    delivered: { label: 'Entregado', color: 'default' },\n    exception: { label: 'Excepción', color: 'destructive' },\n    cancelled: { label: 'Cancelado', color: 'destructive' },\n    returned: { label: 'Devuelto', color: 'outline' }\n  };\n  \n  return statusMap[status] || { label: status, color: 'outline' };\n}\n\nexport function formatOrderStatus(status: string): {\n  label: string;\n  color: 'default' | 'secondary' | 'destructive' | 'outline';\n} {\n  const statusMap: Record<string, { label: string; color: any }> = {\n    pending: { label: 'Pendiente', color: 'secondary' },\n    confirmed: { label: 'Confirmado', color: 'default' },\n    processing: { label: 'Procesando', color: 'default' },\n    shipped: { label: 'Enviado', color: 'default' },\n    delivered: { label: 'Entregado', color: 'default' },\n    cancelled: { label: 'Cancelado', color: 'destructive' },\n    refunded: { label: 'Reembolsado', color: 'outline' },\n    returned: { label: 'Devuelto', color: 'outline' }\n  };\n  \n  return statusMap[status] || { label: status, color: 'outline' };\n}\n\n// =====================================================\n// FORMATEO DE ARCHIVOS Y TAMAÑOS\n// =====================================================\n\nexport function formatFileSize(bytes: number): string {\n  if (bytes === 0) return '0 Bytes';\n  \n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  \n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n}\n\n// =====================================================\n// FORMATEO DE COORDENADAS\n// =====================================================\n\nexport function formatCoordinates(lat: number, lng: number): string {\n  const latDir = lat >= 0 ? 'N' : 'S';\n  const lngDir = lng >= 0 ? 'E' : 'O';\n  \n  return `${Math.abs(lat).toFixed(6)}°${latDir}, ${Math.abs(lng).toFixed(6)}°${lngDir}`;\n}\n\n// =====================================================\n// FORMATEO DE DURACIÓN\n// =====================================================\n\nexport function formatDuration(minutes: number): string {\n  if (minutes < 60) {\n    return `${minutes} min`;\n  }\n  \n  const hours = Math.floor(minutes / 60);\n  const remainingMinutes = minutes % 60;\n  \n  if (remainingMinutes === 0) {\n    return `${hours}h`;\n  }\n  \n  return `${hours}h ${remainingMinutes}min`;\n}\n"],"names":["capitalizeFirst","formatAddress","formatCoordinates","formatCurrency","formatDate","formatDateTime","formatDuration","formatFileSize","formatNumber","formatOrderStatus","formatPercentage","formatPhoneNumber","formatRelativeTime","formatShipmentStatus","formatSlug","formatTimeAgo","truncateText","date","pattern","dateObj","parseISO","isValid","format","locale","es","error","console","formatDistanceToNow","addSuffix","amount","currency","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","toFixed","number","options","toString","value","decimals","phone","cleaned","replace","length","startsWith","address","parts","street","apartment","neighborhood","city","state","postal_code","filter","Boolean","join","text","maxLength","substring","charAt","toUpperCase","slice","toLowerCase","normalize","trim","status","statusMap","pending","label","color","confirmed","picked_up","in_transit","out_for_delivery","delivered","exception","cancelled","returned","processing","shipped","refunded","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","lat","lng","latDir","lngDir","abs","minutes","hours","remainingMinutes"],"mappings":"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"}