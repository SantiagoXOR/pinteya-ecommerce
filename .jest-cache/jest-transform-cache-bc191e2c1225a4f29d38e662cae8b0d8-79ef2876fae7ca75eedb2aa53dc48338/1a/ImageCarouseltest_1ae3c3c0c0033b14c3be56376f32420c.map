{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\__tests__\\components\\ImageCarousel.test.tsx"],"sourcesContent":["import React from 'react';\nimport { render, screen, fireEvent, waitFor } from '@testing-library/react';\nimport userEvent from '@testing-library/user-event';\nimport { axe, toHaveNoViolations } from 'jest-axe';\nimport ImageCarousel, { type CarouselImage } from '@/components/ui/ImageCarousel';\n\n// Extender expect con jest-axe\nexpect.extend(toHaveNoViolations);\n\n// Mock de Swiper\njest.mock('swiper/react', () => ({\n  Swiper: ({ children, onSwiper, onSlideChange, ...props }: any) => {\n    React.useEffect(() => {\n      const mockSwiper = {\n        activeIndex: 0,\n        slidePrev: jest.fn(),\n        slideNext: jest.fn(),\n        slideTo: jest.fn(),\n        autoplay: {\n          start: jest.fn(),\n          stop: jest.fn(),\n        },\n      };\n      onSwiper?.(mockSwiper);\n    }, []);\n\n    return (\n      <div data-testid=\"swiper-container\" {...props}>\n        {children}\n      </div>\n    );\n  },\n  SwiperSlide: ({ children }: any) => (\n    <div data-testid=\"swiper-slide\">{children}</div>\n  ),\n}));\n\njest.mock('swiper/modules', () => ({\n  Autoplay: {},\n  Pagination: {},\n  Navigation: {},\n  EffectFade: {},\n}));\n\n// Mock de Next.js Image\njest.mock('next/image', () => {\n  return function MockImage({ src, alt, ...props }: any) {\n    return <img src={src} alt={alt} {...props} data-testid=\"carousel-image\" />;\n  };\n});\n\n// Datos de prueba\nconst mockImages: CarouselImage[] = [\n  {\n    src: '/images/hero/hero-01.png',\n    alt: 'Pintá rápido, fácil y cotiza al instante - Productos de pinturería premium',\n    priority: true,\n  },\n  {\n    src: '/images/hero/hero-02.png',\n    alt: 'Amplia gama de productos para pinturería y ferretería',\n    priority: false,\n  },\n  {\n    src: '/images/hero/hero-03.png',\n    alt: 'Herramientas y accesorios profesionales para pintura',\n    priority: false,\n  },\n];\n\ndescribe('ImageCarousel', () => {\n  const user = userEvent.setup();\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  describe('Renderizado básico', () => {\n    it('debe renderizar el carrusel con imágenes', () => {\n      render(<ImageCarousel images={mockImages} />);\n      \n      expect(screen.getByTestId('swiper-container')).toBeInTheDocument();\n      expect(screen.getAllByTestId('carousel-image')).toHaveLength(mockImages.length);\n    });\n\n    it('debe mostrar mensaje cuando no hay imágenes', () => {\n      render(<ImageCarousel images={[]} />);\n      \n      expect(screen.getByText('Sin imágenes disponibles')).toBeInTheDocument();\n    });\n\n    it('debe aplicar className personalizado', () => {\n      const customClass = 'custom-carousel-class';\n      render(<ImageCarousel images={mockImages} className={customClass} />);\n      \n      const container = screen.getByRole('region');\n      expect(container).toHaveClass(customClass);\n    });\n  });\n\n  describe('Accesibilidad', () => {\n    it('debe tener atributos ARIA correctos', () => {\n      const ariaLabel = 'Carrusel de productos Pinteya';\n      render(<ImageCarousel images={mockImages} ariaLabel={ariaLabel} />);\n      \n      const carousel = screen.getByRole('region');\n      expect(carousel).toHaveAttribute('aria-label', ariaLabel);\n      expect(carousel).toHaveAttribute('aria-live', 'polite');\n      expect(carousel).toHaveAttribute('tabIndex', '0');\n    });\n\n    it('debe mostrar botones de navegación con labels accesibles', () => {\n      render(<ImageCarousel images={mockImages} showNavigation={true} />);\n      \n      expect(screen.getByLabelText('Imagen anterior')).toBeInTheDocument();\n      expect(screen.getByLabelText('Imagen siguiente')).toBeInTheDocument();\n    });\n\n    it('debe mostrar indicador de slide actual para lectores de pantalla', () => {\n      render(<ImageCarousel images={mockImages} />);\n      \n      const indicator = screen.getByText(/Imagen 1 de 3:/);\n      expect(indicator).toHaveClass('sr-only');\n      expect(indicator).toHaveAttribute('aria-live', 'polite');\n    });\n\n    it('no debe tener violaciones de accesibilidad', async () => {\n      const { container } = render(<ImageCarousel images={mockImages} />);\n      const results = await axe(container);\n      expect(results).toHaveNoViolations();\n    });\n  });\n\n  describe('Navegación por teclado', () => {\n    it('debe navegar con flechas del teclado', async () => {\n      render(<ImageCarousel images={mockImages} />);\n      \n      const carousel = screen.getByRole('region');\n      carousel.focus();\n\n      // Simular tecla flecha derecha\n      await user.keyboard('{ArrowRight}');\n      \n      // Verificar que se llamó al método de navegación\n      // (En un test real, verificaríamos el cambio de slide)\n      expect(carousel).toHaveFocus();\n    });\n\n    it('debe ir al inicio con tecla Home', async () => {\n      render(<ImageCarousel images={mockImages} />);\n      \n      const carousel = screen.getByRole('region');\n      carousel.focus();\n\n      await user.keyboard('{Home}');\n      expect(carousel).toHaveFocus();\n    });\n\n    it('debe ir al final con tecla End', async () => {\n      render(<ImageCarousel images={mockImages} />);\n      \n      const carousel = screen.getByRole('region');\n      carousel.focus();\n\n      await user.keyboard('{End}');\n      expect(carousel).toHaveFocus();\n    });\n  });\n\n  describe('Autoplay y hover', () => {\n    it('debe mostrar indicador de autoplay cuando está activo', () => {\n      render(<ImageCarousel images={mockImages} autoplay={true} />);\n      \n      const indicator = screen.getByTitle('Autoplay activo');\n      expect(indicator).toBeInTheDocument();\n    });\n\n    it('debe cambiar indicador en hover', async () => {\n      render(<ImageCarousel images={mockImages} autoplay={true} pauseOnHover={true} />);\n      \n      const carousel = screen.getByRole('region');\n      \n      // Hover sobre el carrusel\n      await user.hover(carousel);\n      \n      await waitFor(() => {\n        expect(screen.getByTitle('Autoplay pausado')).toBeInTheDocument();\n      });\n    });\n  });\n\n  describe('Configuración responsive', () => {\n    it('debe aplicar aspect ratio correcto', () => {\n      render(<ImageCarousel images={mockImages} aspectRatio=\"square\" />);\n      \n      const slides = screen.getAllByTestId('swiper-slide');\n      slides.forEach(slide => {\n        expect(slide.firstChild).toHaveClass('aspect-square');\n      });\n    });\n\n    it('debe ocultar navegación en mobile cuando se especifica', () => {\n      render(<ImageCarousel images={mockImages} showNavigation={false} />);\n      \n      expect(screen.queryByLabelText('Imagen anterior')).not.toBeInTheDocument();\n      expect(screen.queryByLabelText('Imagen siguiente')).not.toBeInTheDocument();\n    });\n  });\n\n  describe('Estilos Pinteya', () => {\n    it('debe aplicar colores de marca en controles', () => {\n      render(<ImageCarousel images={mockImages} showNavigation={true} />);\n      \n      const prevButton = screen.getByLabelText('Imagen anterior');\n      const nextButton = screen.getByLabelText('Imagen siguiente');\n      \n      expect(prevButton).toHaveClass('text-blaze-orange-600');\n      expect(nextButton).toHaveClass('text-blaze-orange-600');\n    });\n\n    it('debe aplicar estilos de foco con colores Pinteya', () => {\n      render(<ImageCarousel images={mockImages} showNavigation={true} />);\n      \n      const prevButton = screen.getByLabelText('Imagen anterior');\n      expect(prevButton).toHaveClass('focus:ring-blaze-orange-500');\n    });\n  });\n\n  describe('Callbacks y eventos', () => {\n    it('debe llamar onSlideChange cuando cambia el slide', () => {\n      const onSlideChange = jest.fn();\n      render(<ImageCarousel images={mockImages} onSlideChange={onSlideChange} />);\n      \n      // El callback se llama durante la inicialización\n      expect(onSlideChange).toHaveBeenCalled();\n    });\n  });\n\n  describe('Optimización de imágenes', () => {\n    it('debe marcar la primera imagen con priority', () => {\n      render(<ImageCarousel images={mockImages} />);\n      \n      const images = screen.getAllByTestId('carousel-image');\n      expect(images[0]).toHaveAttribute('priority', 'true');\n    });\n\n    it('debe aplicar sizes responsive por defecto', () => {\n      render(<ImageCarousel images={mockImages} />);\n      \n      const images = screen.getAllByTestId('carousel-image');\n      images.forEach(img => {\n        expect(img).toHaveAttribute('sizes');\n      });\n    });\n  });\n\n  describe('Estados de error', () => {\n    it('debe manejar imágenes undefined gracefully', () => {\n      render(<ImageCarousel images={undefined as any} />);\n      \n      expect(screen.getByText('Sin imágenes disponibles')).toBeInTheDocument();\n    });\n\n    it('debe manejar array vacío de imágenes', () => {\n      render(<ImageCarousel images={[]} />);\n      \n      expect(screen.getByText('Sin imágenes disponibles')).toBeInTheDocument();\n    });\n  });\n});\n"],"names":["jest","mock","Swiper","children","onSwiper","onSlideChange","props","React","useEffect","mockSwiper","activeIndex","slidePrev","fn","slideNext","slideTo","autoplay","start","stop","div","data-testid","SwiperSlide","Autoplay","Pagination","Navigation","EffectFade","MockImage","src","alt","img","expect","extend","toHaveNoViolations","mockImages","priority","describe","user","userEvent","setup","beforeEach","clearAllMocks","it","render","ImageCarousel","images","screen","getByTestId","toBeInTheDocument","getAllByTestId","toHaveLength","length","getByText","customClass","className","container","getByRole","toHaveClass","ariaLabel","carousel","toHaveAttribute","showNavigation","getByLabelText","indicator","results","axe","focus","keyboard","toHaveFocus","getByTitle","pauseOnHover","hover","waitFor","aspectRatio","slides","forEach","slide","firstChild","queryByLabelText","not","prevButton","nextButton","toHaveBeenCalled","undefined"],"mappings":"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"}