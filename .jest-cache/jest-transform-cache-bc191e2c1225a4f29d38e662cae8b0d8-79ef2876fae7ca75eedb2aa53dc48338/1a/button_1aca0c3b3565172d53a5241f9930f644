c719b8128ed2ed02bb75143a7ebd6271
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: Object.getOwnPropertyDescriptor(all, name).get
    });
}
_export(exports, {
    get Button () {
        return Button;
    },
    get buttonVariants () {
        return buttonVariants;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _reactslot = require("@radix-ui/react-slot");
const _classvarianceauthority = require("class-variance-authority");
const _utils = require("../../lib/utils");
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const buttonVariants = (0, _classvarianceauthority.cva)("inline-flex items-center justify-center whitespace-nowrap rounded-button text-sm font-medium transition-all duration-200 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 active:scale-[0.98]", {
    variants: {
        variant: {
            primary: "bg-primary text-white shadow-1 hover:bg-primary-hover hover:shadow-2 active:bg-primary-active",
            secondary: "border border-gray-300 bg-white text-gray-900 shadow-1 hover:bg-gray-50 hover:border-gray-400 active:bg-gray-100",
            outline: "border border-primary text-primary bg-transparent hover:bg-primary hover:text-white active:bg-primary-active active:text-white",
            ghost: "text-gray-700 hover:bg-gray-100 hover:text-gray-900 active:bg-gray-200",
            destructive: "bg-error text-white shadow-1 hover:bg-red-600 active:bg-red-700",
            success: "bg-success text-white shadow-1 hover:bg-green-600 active:bg-green-700",
            warning: "bg-warning text-white shadow-1 hover:bg-yellow-600 active:bg-yellow-700",
            link: "text-primary underline-offset-4 hover:underline hover:text-primary-hover"
        },
        size: {
            sm: "h-8 px-3 text-xs",
            md: "h-9 px-4 text-sm",
            lg: "h-10 px-6 text-base",
            xl: "h-12 px-8 text-lg",
            icon: "h-9 w-9",
            "icon-sm": "h-8 w-8",
            "icon-lg": "h-10 w-10"
        },
        fullWidth: {
            true: "w-full",
            false: "w-auto"
        }
    },
    defaultVariants: {
        variant: "primary",
        size: "md",
        fullWidth: false
    }
});
const Button = /*#__PURE__*/ _react.forwardRef(({ className, variant, size, fullWidth, asChild = false, loading = false, leftIcon, rightIcon, children, disabled, ...props }, ref)=>{
    const Comp = asChild ? _reactslot.Slot : "button";
    // Cuando se usa asChild, no podemos renderizar m√∫ltiples elementos hijos
    // porque Slot espera exactamente un elemento hijo
    if (asChild) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(Comp, {
            className: (0, _utils.cn)(buttonVariants({
                variant,
                size,
                fullWidth,
                className
            })),
            ref: ref,
            disabled: disabled || loading,
            ...props,
            children: children
        });
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(Comp, {
        className: (0, _utils.cn)(buttonVariants({
            variant,
            size,
            fullWidth,
            className
        })),
        ref: ref,
        disabled: disabled || loading,
        ...props,
        children: [
            loading && /*#__PURE__*/ (0, _jsxruntime.jsxs)("svg", {
                className: "mr-2 h-4 w-4 animate-spin",
                xmlns: "http://www.w3.org/2000/svg",
                fill: "none",
                viewBox: "0 0 24 24",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("circle", {
                        className: "opacity-25",
                        cx: "12",
                        cy: "12",
                        r: "10",
                        stroke: "currentColor",
                        strokeWidth: "4"
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("path", {
                        className: "opacity-75",
                        fill: "currentColor",
                        d: "m4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
                    })
                ]
            }),
            !loading && leftIcon && /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                className: "mr-2",
                children: leftIcon
            }),
            children,
            !loading && rightIcon && /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                className: "ml-2",
                children: rightIcon
            })
        ]
    });
});
Button.displayName = "Button";

//# sourceMappingURL=data:application/json;base64,