{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\__tests__\\hooks\\useCart.test.tsx"],"sourcesContent":["// ===================================\n// TESTS PARA HOOK DEL CARRITO\n// Tests unitarios e integración para useCart\n// ===================================\n\nimport { renderHook, act, waitFor } from '@testing-library/react';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { useCart } from '@/hooks/useCart';\nimport { toast } from 'sonner';\nimport React from 'react';\n\n// Mocks\njest.mock('sonner', () => ({\n  toast: {\n    success: jest.fn(),\n    error: jest.fn(),\n    info: jest.fn()\n  }\n}));\n\n// Mock localStorage\nconst localStorageMock = (() => {\n  let store: { [key: string]: string } = {};\n\n  return {\n    getItem: (key: string) => {\n      return store[key] || null;\n    },\n    setItem: (key: string, value: string) => {\n      store[key] = value.toString();\n    },\n    removeItem: (key: string) => {\n      delete store[key];\n    },\n    clear: () => {\n      store = {};\n    }\n  };\n})();\n\nObject.defineProperty(window, 'localStorage', {\n  value: localStorageMock\n});\n\n// Wrapper para React Query\nconst createWrapper = () => {\n  const queryClient = new QueryClient({\n    defaultOptions: {\n      queries: {\n        retry: false,\n      },\n    },\n  });\n  \n  return ({ children }: { children: React.ReactNode }) => (\n    <QueryClientProvider client={queryClient}>{children}</QueryClientProvider>\n  );\n};\n\n// Datos de prueba\nconst mockProduct = {\n  id: 1,\n  name: 'Producto Test',\n  price: 100,\n  image: 'https://example.com/image.jpg',\n  stock: 10,\n  category: 'Electronics'\n};\n\nconst mockCartItem = {\n  id: 1,\n  name: 'Producto Test',\n  price: 100,\n  image: 'https://example.com/image.jpg',\n  quantity: 2,\n  stock: 10\n};\n\ndescribe('useCart Hook', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n    localStorageMock.clear();\n  });\n\n  describe('Inicialización del Carrito', () => {\n    it('debe inicializar con carrito vacío', () => {\n      const { result } = renderHook(() => useCart(), {\n        wrapper: createWrapper()\n      });\n\n      expect(result.current.items).toEqual([]);\n      expect(result.current.totalItems).toBe(0);\n      expect(result.current.totalPrice).toBe(0);\n      expect(result.current.isEmpty).toBe(true);\n    });\n\n    it('debe cargar items del localStorage al inicializar', () => {\n      const savedItems = [mockCartItem];\n      localStorageMock.setItem('cart-items', JSON.stringify(savedItems));\n\n      const { result } = renderHook(() => useCart(), {\n        wrapper: createWrapper()\n      });\n\n      expect(result.current.items).toEqual(savedItems);\n      expect(result.current.totalItems).toBe(2);\n      expect(result.current.totalPrice).toBe(200);\n      expect(result.current.isEmpty).toBe(false);\n    });\n\n    it('debe manejar localStorage corrupto', () => {\n      localStorageMock.setItem('cart-items', 'invalid-json');\n\n      const { result } = renderHook(() => useCart(), {\n        wrapper: createWrapper()\n      });\n\n      expect(result.current.items).toEqual([]);\n      expect(result.current.isEmpty).toBe(true);\n    });\n  });\n\n  describe('Agregar Productos', () => {\n    it('debe agregar un producto nuevo al carrito', () => {\n      const { result } = renderHook(() => useCart(), {\n        wrapper: createWrapper()\n      });\n\n      act(() => {\n        result.current.addItem(mockProduct, 2);\n      });\n\n      expect(result.current.items).toHaveLength(1);\n      expect(result.current.items[0]).toEqual({\n        id: mockProduct.id,\n        name: mockProduct.name,\n        price: mockProduct.price,\n        image: mockProduct.image,\n        quantity: 2,\n        stock: mockProduct.stock\n      });\n      expect(result.current.totalItems).toBe(2);\n      expect(result.current.totalPrice).toBe(200);\n      expect(toast.success).toHaveBeenCalledWith('Producto agregado al carrito');\n    });\n\n    it('debe incrementar cantidad si el producto ya existe', () => {\n      const { result } = renderHook(() => useCart(), {\n        wrapper: createWrapper()\n      });\n\n      act(() => {\n        result.current.addItem(mockProduct, 1);\n      });\n\n      act(() => {\n        result.current.addItem(mockProduct, 2);\n      });\n\n      expect(result.current.items).toHaveLength(1);\n      expect(result.current.items[0].quantity).toBe(3);\n      expect(result.current.totalItems).toBe(3);\n      expect(result.current.totalPrice).toBe(300);\n    });\n\n    it('debe validar stock disponible', () => {\n      const { result } = renderHook(() => useCart(), {\n        wrapper: createWrapper()\n      });\n\n      act(() => {\n        result.current.addItem(mockProduct, 15); // Más que el stock disponible\n      });\n\n      expect(result.current.items).toHaveLength(0);\n      expect(toast.error).toHaveBeenCalledWith(\n        'No hay suficiente stock disponible'\n      );\n    });\n\n    it('debe validar cantidad mínima', () => {\n      const { result } = renderHook(() => useCart(), {\n        wrapper: createWrapper()\n      });\n\n      act(() => {\n        result.current.addItem(mockProduct, 0);\n      });\n\n      expect(result.current.items).toHaveLength(0);\n      expect(toast.error).toHaveBeenCalledWith(\n        'La cantidad debe ser mayor a 0'\n      );\n    });\n\n    it('debe usar cantidad por defecto de 1', () => {\n      const { result } = renderHook(() => useCart(), {\n        wrapper: createWrapper()\n      });\n\n      act(() => {\n        result.current.addItem(mockProduct);\n      });\n\n      expect(result.current.items[0].quantity).toBe(1);\n    });\n  });\n\n  describe('Actualizar Cantidad', () => {\n    beforeEach(() => {\n      localStorageMock.setItem('cart-items', JSON.stringify([mockCartItem]));\n    });\n\n    it('debe actualizar la cantidad de un producto', () => {\n      const { result } = renderHook(() => useCart(), {\n        wrapper: createWrapper()\n      });\n\n      act(() => {\n        result.current.updateQuantity(1, 5);\n      });\n\n      expect(result.current.items[0].quantity).toBe(5);\n      expect(result.current.totalItems).toBe(5);\n      expect(result.current.totalPrice).toBe(500);\n    });\n\n    it('debe validar stock al actualizar cantidad', () => {\n      const { result } = renderHook(() => useCart(), {\n        wrapper: createWrapper()\n      });\n\n      act(() => {\n        result.current.updateQuantity(1, 15);\n      });\n\n      expect(result.current.items[0].quantity).toBe(2); // No debe cambiar\n      expect(toast.error).toHaveBeenCalledWith(\n        'No hay suficiente stock disponible'\n      );\n    });\n\n    it('debe remover el producto si la cantidad es 0', () => {\n      const { result } = renderHook(() => useCart(), {\n        wrapper: createWrapper()\n      });\n\n      act(() => {\n        result.current.updateQuantity(1, 0);\n      });\n\n      expect(result.current.items).toHaveLength(0);\n      expect(result.current.isEmpty).toBe(true);\n    });\n\n    it('debe manejar producto inexistente', () => {\n      const { result } = renderHook(() => useCart(), {\n        wrapper: createWrapper()\n      });\n\n      act(() => {\n        result.current.updateQuantity(999, 5);\n      });\n\n      expect(toast.error).toHaveBeenCalledWith('Producto no encontrado en el carrito');\n    });\n  });\n\n  describe('Remover Productos', () => {\n    beforeEach(() => {\n      const items = [mockCartItem, { ...mockCartItem, id: 2, name: 'Producto 2' }];\n      localStorageMock.setItem('cart-items', JSON.stringify(items));\n    });\n\n    it('debe remover un producto específico', () => {\n      const { result } = renderHook(() => useCart(), {\n        wrapper: createWrapper()\n      });\n\n      act(() => {\n        result.current.removeItem(1);\n      });\n\n      expect(result.current.items).toHaveLength(1);\n      expect(result.current.items[0].id).toBe(2);\n      expect(toast.success).toHaveBeenCalledWith('Producto removido del carrito');\n    });\n\n    it('debe manejar producto inexistente al remover', () => {\n      const { result } = renderHook(() => useCart(), {\n        wrapper: createWrapper()\n      });\n\n      act(() => {\n        result.current.removeItem(999);\n      });\n\n      expect(result.current.items).toHaveLength(2); // No debe cambiar\n      expect(toast.error).toHaveBeenCalledWith('Producto no encontrado en el carrito');\n    });\n  });\n\n  describe('Limpiar Carrito', () => {\n    beforeEach(() => {\n      localStorageMock.setItem('cart-items', JSON.stringify([mockCartItem]));\n    });\n\n    it('debe limpiar todos los productos del carrito', () => {\n      const { result } = renderHook(() => useCart(), {\n        wrapper: createWrapper()\n      });\n\n      act(() => {\n        result.current.clearCart();\n      });\n\n      expect(result.current.items).toEqual([]);\n      expect(result.current.totalItems).toBe(0);\n      expect(result.current.totalPrice).toBe(0);\n      expect(result.current.isEmpty).toBe(true);\n      expect(toast.success).toHaveBeenCalledWith('Carrito vaciado');\n    });\n  });\n\n  describe('Cálculos del Carrito', () => {\n    it('debe calcular correctamente el total de items', () => {\n      const items = [\n        { ...mockCartItem, quantity: 2 },\n        { ...mockCartItem, id: 2, quantity: 3 }\n      ];\n      localStorageMock.setItem('cart-items', JSON.stringify(items));\n\n      const { result } = renderHook(() => useCart(), {\n        wrapper: createWrapper()\n      });\n\n      expect(result.current.totalItems).toBe(5);\n    });\n\n    it('debe calcular correctamente el precio total', () => {\n      const items = [\n        { ...mockCartItem, price: 100, quantity: 2 },\n        { ...mockCartItem, id: 2, price: 50, quantity: 3 }\n      ];\n      localStorageMock.setItem('cart-items', JSON.stringify(items));\n\n      const { result } = renderHook(() => useCart(), {\n        wrapper: createWrapper()\n      });\n\n      expect(result.current.totalPrice).toBe(350); // (100*2) + (50*3)\n    });\n\n    it('debe manejar precios decimales correctamente', () => {\n      const items = [\n        { ...mockCartItem, price: 99.99, quantity: 2 }\n      ];\n      localStorageMock.setItem('cart-items', JSON.stringify(items));\n\n      const { result } = renderHook(() => useCart(), {\n        wrapper: createWrapper()\n      });\n\n      expect(result.current.totalPrice).toBe(199.98);\n    });\n  });\n\n  describe('Persistencia en localStorage', () => {\n    it('debe guardar cambios en localStorage', () => {\n      const { result } = renderHook(() => useCart(), {\n        wrapper: createWrapper()\n      });\n\n      act(() => {\n        result.current.addItem(mockProduct, 2);\n      });\n\n      const savedItems = JSON.parse(localStorageMock.getItem('cart-items') || '[]');\n      expect(savedItems).toHaveLength(1);\n      expect(savedItems[0].id).toBe(mockProduct.id);\n      expect(savedItems[0].quantity).toBe(2);\n    });\n\n    it('debe sincronizar con localStorage al actualizar', () => {\n      localStorageMock.setItem('cart-items', JSON.stringify([mockCartItem]));\n\n      const { result } = renderHook(() => useCart(), {\n        wrapper: createWrapper()\n      });\n\n      act(() => {\n        result.current.updateQuantity(1, 5);\n      });\n\n      const savedItems = JSON.parse(localStorageMock.getItem('cart-items') || '[]');\n      expect(savedItems[0].quantity).toBe(5);\n    });\n\n    it('debe limpiar localStorage al vaciar carrito', () => {\n      localStorageMock.setItem('cart-items', JSON.stringify([mockCartItem]));\n\n      const { result } = renderHook(() => useCart(), {\n        wrapper: createWrapper()\n      });\n\n      act(() => {\n        result.current.clearCart();\n      });\n\n      const savedItems = localStorageMock.getItem('cart-items');\n      expect(JSON.parse(savedItems || '[]')).toEqual([]);\n    });\n  });\n\n  describe('Utilidades del Carrito', () => {\n    beforeEach(() => {\n      localStorageMock.setItem('cart-items', JSON.stringify([mockCartItem]));\n    });\n\n    it('debe verificar si un producto está en el carrito', () => {\n      const { result } = renderHook(() => useCart(), {\n        wrapper: createWrapper()\n      });\n\n      expect(result.current.isInCart(1)).toBe(true);\n      expect(result.current.isInCart(999)).toBe(false);\n    });\n\n    it('debe obtener la cantidad de un producto específico', () => {\n      const { result } = renderHook(() => useCart(), {\n        wrapper: createWrapper()\n      });\n\n      expect(result.current.getItemQuantity(1)).toBe(2);\n      expect(result.current.getItemQuantity(999)).toBe(0);\n    });\n\n    it('debe obtener un producto específico del carrito', () => {\n      const { result } = renderHook(() => useCart(), {\n        wrapper: createWrapper()\n      });\n\n      const item = result.current.getItem(1);\n      expect(item).toEqual(mockCartItem);\n      expect(result.current.getItem(999)).toBeUndefined();\n    });\n  });\n\n  describe('Casos Edge y Errores', () => {\n    it('debe manejar productos con datos inválidos', () => {\n      const { result } = renderHook(() => useCart(), {\n        wrapper: createWrapper()\n      });\n\n      const invalidProduct = {\n        id: null,\n        name: '',\n        price: -100,\n        image: '',\n        stock: -5\n      };\n\n      act(() => {\n        result.current.addItem(invalidProduct as any, 1);\n      });\n\n      expect(result.current.items).toHaveLength(0);\n      expect(toast.error).toHaveBeenCalledWith(\n        'Datos del producto inválidos'\n      );\n    });\n\n    it('debe manejar errores de localStorage', () => {\n      // Simular error de localStorage\n      const originalSetItem = localStorageMock.setItem;\n      localStorageMock.setItem = jest.fn(() => {\n        throw new Error('localStorage error');\n      });\n\n      const { result } = renderHook(() => useCart(), {\n        wrapper: createWrapper()\n      });\n\n      act(() => {\n        result.current.addItem(mockProduct, 1);\n      });\n\n      // Debe agregar el item aunque falle localStorage\n      expect(result.current.items).toHaveLength(1);\n      expect(toast.error).toHaveBeenCalledWith(\n        'Error al guardar en el carrito'\n      );\n\n      // Restaurar función original\n      localStorageMock.setItem = originalSetItem;\n    });\n\n    it('debe manejar cantidades muy grandes', () => {\n      const { result } = renderHook(() => useCart(), {\n        wrapper: createWrapper()\n      });\n\n      act(() => {\n        result.current.addItem(mockProduct, 999999);\n      });\n\n      expect(result.current.items).toHaveLength(0);\n      expect(toast.error).toHaveBeenCalledWith(\n        'Cantidad demasiado grande'\n      );\n    });\n\n    it('debe manejar productos sin stock', () => {\n      const { result } = renderHook(() => useCart(), {\n        wrapper: createWrapper()\n      });\n\n      const outOfStockProduct = { ...mockProduct, stock: 0 };\n\n      act(() => {\n        result.current.addItem(outOfStockProduct, 1);\n      });\n\n      expect(result.current.items).toHaveLength(0);\n      expect(toast.error).toHaveBeenCalledWith(\n        'Producto sin stock disponible'\n      );\n    });\n  });\n\n  describe('Performance y Optimización', () => {\n    it('debe evitar re-renders innecesarios', () => {\n      const { result, rerender } = renderHook(() => useCart(), {\n        wrapper: createWrapper()\n      });\n\n      const initialItems = result.current.items;\n      const initialTotalItems = result.current.totalItems;\n      const initialTotalPrice = result.current.totalPrice;\n\n      // Re-render sin cambios\n      rerender();\n\n      // Las referencias deben ser las mismas\n      expect(result.current.items).toBe(initialItems);\n      expect(result.current.totalItems).toBe(initialTotalItems);\n      expect(result.current.totalPrice).toBe(initialTotalPrice);\n    });\n\n    it('debe manejar múltiples operaciones rápidas', () => {\n      const { result } = renderHook(() => useCart(), {\n        wrapper: createWrapper()\n      });\n\n      act(() => {\n        // Múltiples operaciones rápidas\n        result.current.addItem(mockProduct, 1);\n        result.current.addItem(mockProduct, 1);\n        result.current.updateQuantity(1, 5);\n        result.current.updateQuantity(1, 3);\n      });\n\n      expect(result.current.items[0].quantity).toBe(3);\n      expect(result.current.totalItems).toBe(3);\n    });\n  });\n});"],"names":["jest","mock","toast","success","fn","error","info","localStorageMock","store","getItem","key","setItem","value","toString","removeItem","clear","Object","defineProperty","window","createWrapper","queryClient","QueryClient","defaultOptions","queries","retry","children","QueryClientProvider","client","mockProduct","id","name","price","image","stock","category","mockCartItem","quantity","describe","beforeEach","clearAllMocks","it","result","renderHook","useCart","wrapper","expect","current","items","toEqual","totalItems","toBe","totalPrice","isEmpty","savedItems","JSON","stringify","act","addItem","toHaveLength","toHaveBeenCalledWith","updateQuantity","clearCart","parse","isInCart","getItemQuantity","item","toBeUndefined","invalidProduct","originalSetItem","Error","outOfStockProduct","rerender","initialItems","initialTotalItems","initialTotalPrice"],"mappings":"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"}