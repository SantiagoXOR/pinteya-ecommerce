b1947aa805b503a4db4bd0b3f468231b
/**
 * Test para verificar la funcionalidad de los dropdowns en el header mejorado
 */ "use strict";
// Mock de Radix UI DropdownMenu para testing
jest.mock('@/components/ui/dropdown-menu', ()=>({
        DropdownMenu: ({ children })=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                "data-testid": "dropdown-menu",
                children: children
            }),
        DropdownMenuTrigger: ({ children, asChild, ...props })=>{
            const Component = asChild ? 'div' : 'button';
            return /*#__PURE__*/ (0, _jsxruntime.jsx)(Component, {
                ...props,
                onClick: (e)=>{
                    // Simular apertura del dropdown
                    const content = document.querySelector('[data-testid="dropdown-content"]');
                    if (content) {
                        content.setAttribute('data-state', 'open');
                        content.style.display = 'block';
                    }
                    props.onClick?.(e);
                },
                children: children
            });
        },
        DropdownMenuContent: ({ children, ...props })=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                ...props,
                "data-testid": "dropdown-content",
                "data-state": "closed",
                style: {
                    display: 'none'
                },
                children: children
            }),
        DropdownMenuItem: ({ children, onClick, ...props })=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                ...props,
                role: "menuitem",
                onClick: onClick,
                style: {
                    cursor: 'pointer'
                },
                children: children
            }),
        DropdownMenuSeparator: ()=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                "data-testid": "dropdown-separator"
            })
    }));
jest.mock('@/app/context/CartSidebarModalContext', ()=>({
        useCartModalContext: ()=>mockCartContext
    }));
// Mock de Next.js Link
jest.mock('next/link', ()=>{
    return ({ children, href, ...props })=>/*#__PURE__*/ (0, _jsxruntime.jsx)("a", {
            href: href,
            ...props,
            children: children
        });
});
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_default(require("react"));
const _react1 = require("@testing-library/react");
const _reactredux = require("react-redux");
const _toolkit = require("@reduxjs/toolkit");
require("@testing-library/jest-dom");
const _TopBar = /*#__PURE__*/ _interop_require_default(require("../TopBar"));
const _EnhancedSearchBar = /*#__PURE__*/ _interop_require_default(require("../EnhancedSearchBar"));
const _ActionButtons = /*#__PURE__*/ _interop_require_default(require("../ActionButtons"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
// Mock del store de Redux
const mockStore = (0, _toolkit.configureStore)({
    reducer: {
        cartReducer: ()=>({
                items: [],
                totalPrice: 0
            })
    }
});
// Mock del contexto del carrito
const mockCartContext = {
    openCartModal: jest.fn(),
    closeCartModal: jest.fn(),
    isCartModalOpen: false
};
describe('Header Dropdown Functionality', ()=>{
    beforeEach(()=>{
        jest.clearAllMocks();
    });
    describe('TopBar Dropdown', ()=>{
        test('should render delivery zone selector', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_TopBar.default, {}));
            expect(_react1.screen.getByText(/Envíos en Córdoba Capital/i)).toBeInTheDocument();
        });
        test('should open dropdown when clicked', async ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_TopBar.default, {}));
            const trigger = _react1.screen.getByTestId('delivery-zone-selector');
            _react1.fireEvent.click(trigger);
            await (0, _react1.waitFor)(()=>{
                // Verificar que el dropdown se abre (mock simula esto)
                const content = _react1.screen.getByTestId('dropdown-content');
                expect(content).toBeInTheDocument();
            });
        });
        test('should show available and unavailable zones', async ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_TopBar.default, {}));
            const trigger = _react1.screen.getByTestId('delivery-zone-selector');
            _react1.fireEvent.click(trigger);
            await (0, _react1.waitFor)(()=>{
                // Verificar que las zonas están renderizadas en el componente usando getAllByText
                expect(_react1.screen.getAllByText(/Córdoba Capital/i)).toHaveLength(2); // Una en trigger, otra en dropdown
                expect(_react1.screen.getByText(/Interior de Córdoba/i)).toBeInTheDocument();
                expect(_react1.screen.getByText(/Buenos Aires/i)).toBeInTheDocument();
            });
        });
    });
    describe('EnhancedSearchBar Dropdown', ()=>{
        const mockOnSearch = jest.fn();
        test('should render category selector', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_EnhancedSearchBar.default, {
                onSearch: mockOnSearch
            }));
            expect(_react1.screen.getAllByText(/Todas las Categorías/i)).toHaveLength(2); // Una visible, otra en dropdown
        });
        test('should open category dropdown when clicked', async ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_EnhancedSearchBar.default, {
                onSearch: mockOnSearch
            }));
            const trigger = _react1.screen.getByTestId('category-selector');
            _react1.fireEvent.click(trigger);
            await (0, _react1.waitFor)(()=>{
                // Verificar que las categorías están renderizadas
                expect(_react1.screen.getByText(/Pinturas/i)).toBeInTheDocument();
                expect(_react1.screen.getByText(/Herramientas/i)).toBeInTheDocument();
                expect(_react1.screen.getByText(/Accesorios/i)).toBeInTheDocument();
            });
        });
        test('should update placeholder when category changes', async ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_EnhancedSearchBar.default, {
                onSearch: mockOnSearch
            }));
            const trigger = _react1.screen.getByRole('button', {
                name: /Todas las Categorías/i
            });
            _react1.fireEvent.click(trigger);
            await (0, _react1.waitFor)(()=>{
                const paintCategory = _react1.screen.getByText(/Pinturas/i);
                _react1.fireEvent.click(paintCategory);
            });
            // Verificar que el placeholder cambió
            const searchInput = _react1.screen.getByPlaceholderText(/Busco pinturas.../i);
            expect(searchInput).toBeInTheDocument();
        });
        test('should show category icons', async ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_EnhancedSearchBar.default, {
                onSearch: mockOnSearch
            }));
            const trigger = _react1.screen.getByRole('button', {
                name: /Todas las Categorías/i
            });
            _react1.fireEvent.click(trigger);
            await (0, _react1.waitFor)(()=>{
                // Los iconos SVG deberían estar presentes (no emojis)
                const paletteIcons = document.querySelectorAll('.lucide-palette');
                const wrenchIcons = document.querySelectorAll('.lucide-wrench');
                expect(paletteIcons.length).toBeGreaterThan(0);
                expect(wrenchIcons.length).toBeGreaterThan(0);
            });
        });
    });
    describe('ActionButtons Dropdown', ()=>{
        test('should render cart button with counter', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_reactredux.Provider, {
                store: mockStore,
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_ActionButtons.default, {
                    variant: "header"
                })
            }));
            expect(_react1.screen.getByTestId('cart-icon')).toBeInTheDocument();
        });
        test('should show login buttons when not authenticated', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_reactredux.Provider, {
                store: mockStore,
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_ActionButtons.default, {
                    variant: "header"
                })
            }));
            expect(_react1.screen.getByText(/Iniciar con Google/i)).toBeInTheDocument();
            expect(_react1.screen.getByText(/Registrarse/i)).toBeInTheDocument();
        });
        test('should open cart modal when cart button is clicked', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_reactredux.Provider, {
                store: mockStore,
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_ActionButtons.default, {
                    variant: "header"
                })
            }));
            const cartButton = _react1.screen.getByRole('button', {
                name: /carrito/i
            });
            _react1.fireEvent.click(cartButton);
            expect(mockCartContext.openCartModal).toHaveBeenCalledTimes(1);
        });
    });
    describe('Mobile Variant', ()=>{
        test('should render mobile action buttons', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_reactredux.Provider, {
                store: mockStore,
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_ActionButtons.default, {
                    variant: "mobile"
                })
            }));
            // En mobile, los botones deberían ser más compactos
            const cartButton = _react1.screen.getByTestId('cart-icon');
            expect(cartButton).toHaveClass('p-2');
        });
    });
    describe('Accessibility', ()=>{
        test('dropdowns should be keyboard accessible', async ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_TopBar.default, {}));
            const trigger = _react1.screen.getByRole('button', {
                name: /Envíos a/i
            });
            // Simular navegación por teclado
            trigger.focus();
            _react1.fireEvent.keyDown(trigger, {
                key: 'Enter'
            });
            await (0, _react1.waitFor)(()=>{
                expect(_react1.screen.getByText(/Interior de Córdoba/i)).toBeInTheDocument();
            });
        });
        test('should have proper ARIA attributes', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_EnhancedSearchBar.default, {
                onSearch: jest.fn()
            }));
            const trigger = _react1.screen.getByRole('button', {
                name: /Todas las Categorías/i
            });
            expect(trigger).toHaveAttribute('aria-expanded');
        });
    });
    describe('Responsive Behavior', ()=>{
        test('should hide certain elements on mobile', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_TopBar.default, {}));
            // TopBar debería estar oculto en mobile - buscar el contenedor principal
            const topBarContainer = _react1.screen.getByText(/Asesoramiento 24\/7/i).closest('.bg-blaze-orange-600');
            expect(topBarContainer).toHaveClass('hidden', 'lg:block');
        });
    });
});
describe('Dropdown Integration', ()=>{
    test('all dropdown components should work together', async ()=>{
        const mockOnSearch = jest.fn();
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_reactredux.Provider, {
            store: mockStore,
            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_TopBar.default, {}),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_EnhancedSearchBar.default, {
                        onSearch: mockOnSearch
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_ActionButtons.default, {
                        variant: "header"
                    })
                ]
            })
        }));
        // Verificar que todos los dropdowns están presentes
        expect(_react1.screen.getByText(/Envíos en Córdoba Capital/i)).toBeInTheDocument();
        expect(_react1.screen.getAllByText(/Todas las Categorías/i)).toHaveLength(2);
        expect(_react1.screen.getByText(/Iniciar con Google/i)).toBeInTheDocument();
        // Verificar que no hay conflictos entre dropdowns
        const deliveryTrigger = _react1.screen.getByRole('button', {
            name: /Envíos en/i
        });
        const categoryTrigger = _react1.screen.getByRole('button', {
            name: /Todas las Categorías/i
        });
        _react1.fireEvent.click(deliveryTrigger);
        await (0, _react1.waitFor)(()=>{
            expect(_react1.screen.getByText(/Interior de Córdoba/i)).toBeInTheDocument();
        });
        _react1.fireEvent.click(categoryTrigger);
        await (0, _react1.waitFor)(()=>{
            expect(_react1.screen.getByText(/Pinturas/i)).toBeInTheDocument();
        });
    });
});

//# sourceMappingURL=data:application/json;base64,