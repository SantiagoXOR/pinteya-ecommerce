{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\auth\\webhook\\route.ts"],"sourcesContent":["// ===================================\n// PINTEYA E-COMMERCE - WEBHOOK ROBUSTO DE CLERK\n// Versión mejorada con validación de firma, retry logic y auditoría\n// ===================================\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { Webhook } from 'svix';\nimport {\n  syncUserToSupabase,\n  deleteUserFromSupabase,\n  type ClerkUserData\n} from '@/lib/auth/user-sync-service';\nimport {\n  logSecurityEvent,\n  logAdminAction\n} from '@/lib/auth/security-audit';\n\n// ===================================\n// TIPOS Y INTERFACES\n// ===================================\n\ninterface WebhookEventData {\n  data: ClerkUserData;\n  object: string;\n  type: string;\n  timestamp?: number;\n}\n\ninterface WebhookProcessingResult {\n  success: boolean;\n  eventType: string;\n  userId?: string;\n  action?: string;\n  error?: string;\n  processingTime?: number;\n}\n\ninterface WebhookMetrics {\n  totalEvents: number;\n  successfulEvents: number;\n  failedEvents: number;\n  eventTypes: Record<string, number>;\n  averageProcessingTime: number;\n}\n\n// ===================================\n// FUNCIONES DE UTILIDAD\n// ===================================\n\n/**\n * Valida los headers del webhook de Clerk\n */\nfunction validateWebhookHeaders(request: NextRequest): {\n  valid: boolean;\n  headers?: {\n    svix_id: string;\n    svix_timestamp: string;\n    svix_signature: string;\n  };\n  error?: string;\n} {\n  const svix_id = request.headers.get('svix-id');\n  const svix_timestamp = request.headers.get('svix-timestamp');\n  const svix_signature = request.headers.get('svix-signature');\n\n  if (!svix_id || !svix_timestamp || !svix_signature) {\n    return {\n      valid: false,\n      error: 'Headers de webhook faltantes (svix-id, svix-timestamp, svix-signature)'\n    };\n  }\n\n  return {\n    valid: true,\n    headers: {\n      svix_id,\n      svix_timestamp,\n      svix_signature\n    }\n  };\n}\n\n/**\n * Verifica la firma del webhook usando svix\n */\nasync function verifyWebhookSignature(\n  payload: string,\n  headers: { svix_id: string; svix_timestamp: string; svix_signature: string },\n  secret: string\n): Promise<{ valid: boolean; event?: WebhookEventData; error?: string }> {\n  try {\n    const wh = new Webhook(secret);\n\n    const evt = wh.verify(payload, {\n      'svix-id': headers.svix_id,\n      'svix-timestamp': headers.svix_timestamp,\n      'svix-signature': headers.svix_signature,\n    }) as WebhookEventData;\n\n    return { valid: true, event: evt };\n  } catch (error) {\n    console.error('[WEBHOOK] Error verificando firma:', error);\n    return {\n      valid: false,\n      error: `Error verificando firma: ${error.message}`\n    };\n  }\n}\n\n/**\n * Procesa un evento de webhook específico\n */\nasync function processWebhookEvent(event: WebhookEventData): Promise<WebhookProcessingResult> {\n  const startTime = Date.now();\n  const eventType = event.type;\n  const userData = event.data;\n\n  console.log(`[WEBHOOK] Procesando evento: ${eventType} para usuario ${userData.id}`);\n\n  try {\n    switch (eventType) {\n      case 'user.created':\n        const createResult = await syncUserToSupabase(userData, {\n          retryAttempts: 2,\n          retryDelay: 1000,\n          validateData: true,\n          createMissingRole: true,\n          logEvents: true\n        });\n\n        if (createResult.success) {\n          await logAdminAction(\n            userData.id,\n            'USER_CREATED_VIA_WEBHOOK',\n            'user_profile',\n            {\n              userId: userData.id,\n              userRole: 'customer',\n              permissions: {},\n              metadata: { source: 'clerk_webhook' }\n            },\n            {\n              action: createResult.action,\n              email: userData.email_addresses[0]?.email_address,\n              webhook_event: eventType\n            }\n          );\n\n          return {\n            success: true,\n            eventType,\n            userId: userData.id,\n            action: createResult.action,\n            processingTime: Date.now() - startTime\n          };\n        } else {\n          throw new Error(createResult.error || 'Error creando usuario');\n        }\n\n      case 'user.updated':\n        const updateResult = await syncUserToSupabase(userData, {\n          retryAttempts: 2,\n          retryDelay: 1000,\n          validateData: true,\n          createMissingRole: false,\n          logEvents: true\n        });\n\n        if (updateResult.success) {\n          await logAdminAction(\n            userData.id,\n            'USER_UPDATED_VIA_WEBHOOK',\n            'user_profile',\n            {\n              userId: userData.id,\n              userRole: 'customer',\n              permissions: {},\n              metadata: { source: 'clerk_webhook' }\n            },\n            {\n              action: updateResult.action,\n              email: userData.email_addresses[0]?.email_address,\n              webhook_event: eventType\n            }\n          );\n\n          return {\n            success: true,\n            eventType,\n            userId: userData.id,\n            action: updateResult.action,\n            processingTime: Date.now() - startTime\n          };\n        } else {\n          throw new Error(updateResult.error || 'Error actualizando usuario');\n        }\n\n      case 'user.deleted':\n        const deleteResult = await deleteUserFromSupabase(userData.id, {\n          retryAttempts: 2,\n          retryDelay: 1000,\n          logEvents: true\n        });\n\n        if (deleteResult.success) {\n          await logAdminAction(\n            userData.id,\n            'USER_DELETED_VIA_WEBHOOK',\n            'user_profile',\n            {\n              userId: userData.id,\n              userRole: 'customer',\n              permissions: {},\n              metadata: { source: 'clerk_webhook' }\n            },\n            {\n              action: deleteResult.action,\n              webhook_event: eventType\n            }\n          );\n\n          return {\n            success: true,\n            eventType,\n            userId: userData.id,\n            action: deleteResult.action,\n            processingTime: Date.now() - startTime\n          };\n        } else {\n          throw new Error(deleteResult.error || 'Error eliminando usuario');\n        }\n\n      default:\n        console.log(`[WEBHOOK] Evento no manejado: ${eventType}`);\n        return {\n          success: true,\n          eventType,\n          userId: userData.id,\n          action: 'ignored',\n          processingTime: Date.now() - startTime\n        };\n    }\n  } catch (error) {\n    console.error(`[WEBHOOK] Error procesando evento ${eventType}:`, error);\n\n    // Log evento de error\n    await logSecurityEvent({\n      user_id: userData.id,\n      event_type: 'SECURITY_VIOLATION',\n      event_category: 'data_access',\n      severity: 'medium',\n      description: `Error procesando webhook ${eventType}`,\n      metadata: {\n        eventType,\n        error: error.message,\n        webhook_event: true\n      }\n    });\n\n    return {\n      success: false,\n      eventType,\n      userId: userData.id,\n      error: error.message,\n      processingTime: Date.now() - startTime\n    };\n  }\n}\n\n// ===================================\n// ENDPOINT PRINCIPAL DEL WEBHOOK\n// ===================================\n/**\n * POST /api/auth/webhook - Webhook robusto de Clerk\n * Maneja eventos de usuario con validación de firma, retry logic y auditoría\n */\nexport async function POST(request: NextRequest) {\n  const requestStartTime = Date.now();\n\n  try {\n    console.log('[WEBHOOK] Recibiendo evento de Clerk...');\n\n    // 1. Verificar configuración del webhook\n    const WEBHOOK_SECRET = process.env.CLERK_WEBHOOK_SECRET;\n    if (!WEBHOOK_SECRET) {\n      console.warn('[WEBHOOK] CLERK_WEBHOOK_SECRET no configurado - webhook deshabilitado');\n      return new Response('Webhook no configurado', {\n        status: 200,\n        headers: { 'Content-Type': 'text/plain' }\n      });\n    }\n\n    // 2. Validar headers del webhook\n    const headerValidation = validateWebhookHeaders(request);\n    if (!headerValidation.valid) {\n      console.error('[WEBHOOK] Headers inválidos:', headerValidation.error);\n\n      await logSecurityEvent({\n        user_id: 'unknown',\n        event_type: 'SECURITY_VIOLATION',\n        event_category: 'authentication',\n        severity: 'medium',\n        description: 'Webhook con headers inválidos',\n        metadata: {\n          error: headerValidation.error,\n          ip_address: request.headers.get('x-forwarded-for') || 'unknown'\n        }\n      });\n\n      return new Response(headerValidation.error, {\n        status: 400,\n        headers: { 'Content-Type': 'text/plain' }\n      });\n    }\n\n    // 3. Obtener payload\n    const payload = await request.text();\n    if (!payload) {\n      console.error('[WEBHOOK] Payload vacío');\n      return new Response('Payload vacío', {\n        status: 400,\n        headers: { 'Content-Type': 'text/plain' }\n      });\n    }\n\n    // 4. Verificar firma del webhook\n    const signatureValidation = await verifyWebhookSignature(\n      payload,\n      headerValidation.headers!,\n      WEBHOOK_SECRET\n    );\n\n    if (!signatureValidation.valid) {\n      console.error('[WEBHOOK] Firma inválida:', signatureValidation.error);\n\n      await logSecurityEvent({\n        user_id: 'unknown',\n        event_type: 'SECURITY_VIOLATION',\n        event_category: 'authentication',\n        severity: 'high',\n        description: 'Webhook con firma inválida',\n        metadata: {\n          error: signatureValidation.error,\n          ip_address: request.headers.get('x-forwarded-for') || 'unknown'\n        }\n      });\n\n      return new Response('Firma inválida', {\n        status: 401,\n        headers: { 'Content-Type': 'text/plain' }\n      });\n    }\n\n    const event = signatureValidation.event!;\n    console.log(`[WEBHOOK] Evento verificado: ${event.type} para usuario ${event.data.id}`);\n\n    // 5. Procesar el evento\n    const processingResult = await processWebhookEvent(event);\n\n    // 6. Log del resultado\n    if (processingResult.success) {\n      console.log(`[WEBHOOK] Evento procesado exitosamente: ${processingResult.eventType} - ${processingResult.action} (${processingResult.processingTime}ms)`);\n\n      await logSecurityEvent({\n        user_id: processingResult.userId || 'unknown',\n        event_type: 'DATA_ACCESS',\n        event_category: 'data_access',\n        severity: 'low',\n        description: `Webhook procesado: ${processingResult.eventType}`,\n        metadata: {\n          eventType: processingResult.eventType,\n          action: processingResult.action,\n          processingTime: processingResult.processingTime,\n          webhook_success: true\n        }\n      });\n\n      return new Response(JSON.stringify({\n        success: true,\n        message: 'Webhook procesado correctamente',\n        eventType: processingResult.eventType,\n        action: processingResult.action,\n        processingTime: processingResult.processingTime\n      }), {\n        status: 200,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    } else {\n      console.error(`[WEBHOOK] Error procesando evento: ${processingResult.error}`);\n\n      return new Response(JSON.stringify({\n        success: false,\n        error: 'Error procesando webhook',\n        details: processingResult.error,\n        eventType: processingResult.eventType\n      }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n  } catch (error) {\n    const totalTime = Date.now() - requestStartTime;\n    console.error('[WEBHOOK] Error crítico en webhook:', error);\n\n    await logSecurityEvent({\n      user_id: 'unknown',\n      event_type: 'SECURITY_VIOLATION',\n      event_category: 'data_access',\n      severity: 'critical',\n      description: 'Error crítico en webhook de Clerk',\n      metadata: {\n        error: error.message,\n        processingTime: totalTime,\n        webhook_critical_error: true\n      }\n    });\n\n    return new Response(JSON.stringify({\n      success: false,\n      error: 'Error interno del servidor',\n      processingTime: totalTime\n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n\n// ===================================\n// GET /api/auth/webhook - Health check y métricas\n// ===================================\nexport async function GET(request: NextRequest) {\n  try {\n    const url = new URL(request.url);\n    const includeMetrics = url.searchParams.get('metrics') === 'true';\n\n    const response: any = {\n      status: 'healthy',\n      message: 'Webhook robusto de Clerk funcionando correctamente',\n      timestamp: new Date().toISOString(),\n      version: '2.0',\n      features: [\n        'Validación de firma robusta',\n        'Retry logic con backoff exponencial',\n        'Auditoría completa de eventos',\n        'Manejo de errores avanzado',\n        'Logging estructurado',\n        'Métricas de rendimiento'\n      ]\n    };\n\n    if (includeMetrics) {\n      // Aquí podrías añadir métricas reales desde una base de datos o cache\n      response.metrics = {\n        totalEvents: 0,\n        successfulEvents: 0,\n        failedEvents: 0,\n        eventTypes: {\n          'user.created': 0,\n          'user.updated': 0,\n          'user.deleted': 0\n        },\n        averageProcessingTime: 0,\n        lastEventTimestamp: null\n      };\n    }\n\n    // Verificar configuración\n    const WEBHOOK_SECRET = process.env.CLERK_WEBHOOK_SECRET;\n    response.configuration = {\n      webhookSecretConfigured: !!WEBHOOK_SECRET,\n      environment: process.env.NODE_ENV || 'development'\n    };\n\n    return NextResponse.json(response);\n  } catch (error) {\n    console.error('[WEBHOOK] Error en health check:', error);\n    return NextResponse.json({\n      status: 'error',\n      message: 'Error en health check del webhook',\n      timestamp: new Date().toISOString(),\n      error: error.message\n    }, { status: 500 });\n  }\n}\n"],"names":["GET","POST","validateWebhookHeaders","request","svix_id","headers","get","svix_timestamp","svix_signature","valid","error","verifyWebhookSignature","payload","secret","wh","Webhook","evt","verify","event","console","message","processWebhookEvent","startTime","Date","now","eventType","type","userData","data","log","id","createResult","syncUserToSupabase","retryAttempts","retryDelay","validateData","createMissingRole","logEvents","success","logAdminAction","userId","userRole","permissions","metadata","source","action","email","email_addresses","email_address","webhook_event","processingTime","Error","updateResult","deleteResult","deleteUserFromSupabase","logSecurityEvent","user_id","event_type","event_category","severity","description","requestStartTime","WEBHOOK_SECRET","process","env","CLERK_WEBHOOK_SECRET","warn","Response","status","headerValidation","ip_address","text","signatureValidation","processingResult","webhook_success","JSON","stringify","details","totalTime","webhook_critical_error","url","URL","includeMetrics","searchParams","response","timestamp","toISOString","version","features","metrics","totalEvents","successfulEvents","failedEvents","eventTypes","averageProcessingTime","lastEventTimestamp","configuration","webhookSecretConfigured","environment","NODE_ENV","NextResponse","json"],"mappings":"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"}