{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\jest.setup.js"],"sourcesContent":["// ===================================\r\n// PINTEYA E-COMMERCE - SETUP DE JEST\r\n// ===================================\r\n\r\n// Polyfills para MSW\r\nimport { TextEncoder, TextDecoder } from 'util';\r\nimport { ReadableStream, WritableStream, TransformStream } from 'stream/web';\r\n\r\nglobal.TextEncoder = TextEncoder;\r\nglobal.TextDecoder = TextDecoder;\r\nglobal.ReadableStream = ReadableStream;\r\nglobal.WritableStream = WritableStream;\r\nglobal.TransformStream = TransformStream;\r\n\r\n// Mock fetch si no está disponible\r\nif (!global.fetch) {\r\n  global.fetch = jest.fn();\r\n}\r\n\r\n// Mock BroadcastChannel para MSW\r\nglobal.BroadcastChannel = class BroadcastChannel {\r\n  constructor(name) {\r\n    this.name = name;\r\n  }\r\n  postMessage() {}\r\n  close() {}\r\n  addEventListener() {}\r\n  removeEventListener() {}\r\n};\r\n\r\nimport '@testing-library/jest-dom'\r\n\r\n// Mock TanStack Query para tests - Versión completa con QueryCache\r\njest.mock('@tanstack/react-query', () => {\r\n  const actual = jest.requireActual('@tanstack/react-query');\r\n\r\n  // Mock completo del QueryCache\r\n  const mockQueryCache = {\r\n    clear: jest.fn(),\r\n    get: jest.fn(() => null),\r\n    getAll: jest.fn(() => []),\r\n    find: jest.fn(() => null),\r\n    findAll: jest.fn(() => []),\r\n    notify: jest.fn(),\r\n    onFocus: jest.fn(),\r\n    onOnline: jest.fn(),\r\n    subscribe: jest.fn(() => jest.fn()),\r\n    build: jest.fn(),\r\n  };\r\n\r\n  // Mock completo del MutationCache\r\n  const mockMutationCache = {\r\n    clear: jest.fn(),\r\n    getAll: jest.fn(() => []),\r\n    find: jest.fn(() => null),\r\n    findAll: jest.fn(() => []),\r\n    notify: jest.fn(),\r\n    subscribe: jest.fn(() => jest.fn()),\r\n    build: jest.fn(),\r\n  };\r\n\r\n  // Mock del QueryClient con todos los métodos necesarios\r\n  const mockQueryClient = {\r\n    clear: jest.fn(),\r\n    getQueryCache: jest.fn(() => mockQueryCache),\r\n    getMutationCache: jest.fn(() => mockMutationCache),\r\n    setQueryData: jest.fn(),\r\n    getQueryData: jest.fn(),\r\n    invalidateQueries: jest.fn(),\r\n    removeQueries: jest.fn(),\r\n    prefetchQuery: jest.fn(),\r\n    defaultQueryOptions: jest.fn(() => ({})),\r\n    getDefaultOptions: jest.fn(() => ({\r\n      queries: {},\r\n      mutations: {},\r\n    })),\r\n    mount: jest.fn(),\r\n    unmount: jest.fn(),\r\n    isFetching: jest.fn(() => 0),\r\n    isMutating: jest.fn(() => 0),\r\n  };\r\n\r\n  return {\r\n    ...actual,\r\n    QueryClient: jest.fn().mockImplementation(() => mockQueryClient),\r\n    useQuery: jest.fn(() => ({\r\n      data: null,\r\n      error: null,\r\n      isLoading: false,\r\n      isError: false,\r\n      isSuccess: true,\r\n      isFetching: false,\r\n      isStale: false,\r\n      dataUpdatedAt: Date.now(),\r\n      refetch: jest.fn(),\r\n    })),\r\n    useQueryClient: jest.fn(() => mockQueryClient),\r\n    QueryClientProvider: ({ children }) => children,\r\n  };\r\n});\r\n\r\n// Mock Next.js router\r\njest.mock('next/router', () => ({\r\n  useRouter() {\r\n    return {\r\n      route: '/',\r\n      pathname: '/',\r\n      query: {},\r\n      asPath: '/',\r\n      push: jest.fn(),\r\n      pop: jest.fn(),\r\n      reload: jest.fn(),\r\n      back: jest.fn(),\r\n      prefetch: jest.fn(),\r\n      beforePopState: jest.fn(),\r\n      events: {\r\n        on: jest.fn(),\r\n        off: jest.fn(),\r\n        emit: jest.fn(),\r\n      },\r\n      isFallback: false,\r\n    }\r\n  },\r\n}))\r\n\r\n// Mock Next.js navigation\r\njest.mock('next/navigation', () => ({\r\n  useRouter() {\r\n    return {\r\n      push: jest.fn(),\r\n      replace: jest.fn(),\r\n      prefetch: jest.fn(),\r\n      back: jest.fn(),\r\n      forward: jest.fn(),\r\n      refresh: jest.fn(),\r\n    }\r\n  },\r\n  useSearchParams: jest.fn(() => ({\r\n    get: jest.fn((key) => {\r\n      if (key === 'q') return 'test-query';\r\n      return null;\r\n    }),\r\n    getAll: jest.fn(),\r\n    has: jest.fn(),\r\n    keys: jest.fn(),\r\n    values: jest.fn(),\r\n    entries: jest.fn(),\r\n    forEach: jest.fn(),\r\n    toString: jest.fn(() => 'q=test-query'),\r\n  })),\r\n  usePathname() {\r\n    return '/'\r\n  },\r\n}))\r\n\r\n// Mock Next.js Image component\r\njest.mock('next/image', () => ({\r\n  __esModule: true,\r\n  default: (props) => {\r\n    // eslint-disable-next-line @next/next/no-img-element\r\n    return <img {...props} />\r\n  },\r\n}))\r\n\r\n// Mock Next.js Link component\r\njest.mock('next/link', () => ({\r\n  __esModule: true,\r\n  default: ({ children, href, ...props }) => {\r\n    return <a href={href} {...props}>{children}</a>\r\n  },\r\n}))\r\n\r\n// Mock environment variables\r\nprocess.env.NEXT_PUBLIC_SUPABASE_URL = 'https://test.supabase.co'\r\nprocess.env.NEXT_PUBLIC_SUPABASE_ANON_KEY = 'test-anon-key'\r\nprocess.env.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY = 'test-clerk-key'\r\nprocess.env.CLERK_SECRET_KEY = 'test-clerk-secret'\r\nprocess.env.MERCADOPAGO_ACCESS_TOKEN = 'test-mp-token'\r\nprocess.env.NEXT_PUBLIC_MERCADOPAGO_PUBLIC_KEY = 'test-mp-public-key'\r\n\r\n// Mock window.matchMedia\r\nObject.defineProperty(window, 'matchMedia', {\r\n  writable: true,\r\n  value: jest.fn().mockImplementation(query => ({\r\n    matches: false,\r\n    media: query,\r\n    onchange: null,\r\n    addListener: jest.fn(), // deprecated\r\n    removeListener: jest.fn(), // deprecated\r\n    addEventListener: jest.fn(),\r\n    removeEventListener: jest.fn(),\r\n    dispatchEvent: jest.fn(),\r\n  })),\r\n})\r\n\r\n// Mock IntersectionObserver\r\nglobal.IntersectionObserver = class IntersectionObserver {\r\n  constructor() {}\r\n  observe() {\r\n    return null\r\n  }\r\n  disconnect() {\r\n    return null\r\n  }\r\n  unobserve() {\r\n    return null\r\n  }\r\n}\r\n\r\n// Mock ResizeObserver\r\nglobal.ResizeObserver = class ResizeObserver {\r\n  constructor() {}\r\n  observe() {\r\n    return null\r\n  }\r\n  disconnect() {\r\n    return null\r\n  }\r\n  unobserve() {\r\n    return null\r\n  }\r\n}\r\n\r\n// Mock localStorage\r\nconst localStorageMock = {\r\n  getItem: jest.fn(),\r\n  setItem: jest.fn(),\r\n  removeItem: jest.fn(),\r\n  clear: jest.fn(),\r\n}\r\nglobal.localStorage = localStorageMock\r\n\r\n// Mock sessionStorage\r\nconst sessionStorageMock = {\r\n  getItem: jest.fn(),\r\n  setItem: jest.fn(),\r\n  removeItem: jest.fn(),\r\n  clear: jest.fn(),\r\n}\r\nglobal.sessionStorage = sessionStorageMock\r\n\r\n// Mock fetch\r\nglobal.fetch = jest.fn()\r\n\r\n// Mock Request and Response for Next.js API tests\r\nglobal.Request = class Request {\r\n  constructor(input, init = {}) {\r\n    // Use defineProperty to handle read-only properties\r\n    Object.defineProperty(this, 'url', {\r\n      value: input,\r\n      writable: false,\r\n      enumerable: true,\r\n      configurable: true\r\n    })\r\n    this.method = init.method || 'GET'\r\n    this.headers = new Headers(init.headers)\r\n    this.body = init.body\r\n  }\r\n\r\n  async json() {\r\n    return JSON.parse(this.body || '{}')\r\n  }\r\n\r\n  async text() {\r\n    return this.body || ''\r\n  }\r\n}\r\n\r\nglobal.Response = class Response {\r\n  constructor(body, init = {}) {\r\n    this.body = body\r\n    this.status = init.status || 200\r\n    this.statusText = init.statusText || 'OK'\r\n    this.headers = new Headers(init.headers)\r\n    this.ok = this.status >= 200 && this.status < 300\r\n  }\r\n\r\n  static json(data, init = {}) {\r\n    return new Response(JSON.stringify(data), {\r\n      ...init,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        ...init.headers,\r\n      },\r\n    })\r\n  }\r\n\r\n  async json() {\r\n    return JSON.parse(this.body || '{}')\r\n  }\r\n\r\n  async text() {\r\n    return this.body || ''\r\n  }\r\n}\r\n\r\nglobal.Headers = class Headers {\r\n  constructor(init = {}) {\r\n    this.headers = new Map()\r\n    if (init) {\r\n      Object.entries(init).forEach(([key, value]) => {\r\n        this.headers.set(key.toLowerCase(), value)\r\n      })\r\n    }\r\n  }\r\n\r\n  get(name) {\r\n    return this.headers.get(name.toLowerCase())\r\n  }\r\n\r\n  set(name, value) {\r\n    this.headers.set(name.toLowerCase(), value)\r\n  }\r\n\r\n  has(name) {\r\n    return this.headers.has(name.toLowerCase())\r\n  }\r\n\r\n  delete(name) {\r\n    this.headers.delete(name.toLowerCase())\r\n  }\r\n\r\n  // Método entries() requerido por NextRequest\r\n  entries() {\r\n    return this.headers.entries()\r\n  }\r\n\r\n  // Métodos adicionales para compatibilidad completa\r\n  keys() {\r\n    return this.headers.keys()\r\n  }\r\n\r\n  values() {\r\n    return this.headers.values()\r\n  }\r\n\r\n  forEach(callback, thisArg) {\r\n    this.headers.forEach(callback, thisArg)\r\n  }\r\n\r\n  // Symbol.iterator para hacer Headers iterable\r\n  [Symbol.iterator]() {\r\n    return this.headers.entries()\r\n  }\r\n}\r\n\r\n// Suppress console errors in tests unless explicitly needed\r\nconst originalError = console.error\r\nbeforeAll(() => {\r\n  console.error = (...args) => {\r\n    if (\r\n      typeof args[0] === 'string' &&\r\n      args[0].includes('Warning: ReactDOM.render is no longer supported')\r\n    ) {\r\n      return\r\n    }\r\n    originalError.call(console, ...args)\r\n  }\r\n})\r\n\r\nafterAll(() => {\r\n  console.error = originalError\r\n})\r\n\r\n// Mock Context Providers\r\njest.mock('@/app/context/CartSidebarModalContext', () => ({\r\n  useCartModalContext: () => ({\r\n    isOpen: false,\r\n    openModal: jest.fn(),\r\n    closeModal: jest.fn(),\r\n  }),\r\n  CartModalProvider: ({ children }) => children,\r\n}))\r\n\r\njest.mock('@/app/context/QuickViewModalContext', () => ({\r\n  useModalContext: () => ({\r\n    isOpen: false,\r\n    openModal: jest.fn(),\r\n    closeModal: jest.fn(),\r\n    selectedProduct: null,\r\n  }),\r\n  ModalProvider: ({ children }) => children,\r\n}))\r\n\r\n// Mock NextAuth.js components and functions\r\njest.mock('next-auth', () => ({\r\n  default: jest.fn(() => ({\r\n    handlers: { GET: jest.fn(), POST: jest.fn() },\r\n    auth: jest.fn(),\r\n    signIn: jest.fn(),\r\n    signOut: jest.fn(),\r\n  })),\r\n}))\r\n\r\njest.mock('next-auth/providers/google', () => ({\r\n  default: jest.fn(() => ({\r\n    id: 'google',\r\n    name: 'Google',\r\n    type: 'oauth',\r\n  })),\r\n}))\r\n\r\n// Mock NextAuth.js React hooks\r\njest.mock('next-auth/react', () => ({\r\n  useSession: jest.fn(() => ({\r\n    data: {\r\n      user: {\r\n        id: 'test-user-id',\r\n        email: 'test@example.com',\r\n        name: 'Test User',\r\n        image: 'https://example.com/avatar.jpg',\r\n      },\r\n      expires: new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString(),\r\n    },\r\n    status: 'authenticated',\r\n  })),\r\n  signIn: jest.fn(() => Promise.resolve({ ok: true, error: null })),\r\n  signOut: jest.fn(() => Promise.resolve({ url: '/api/auth/signin' })),\r\n  getProviders: jest.fn(() => Promise.resolve({\r\n    google: {\r\n      id: 'google',\r\n      name: 'Google',\r\n      type: 'oauth',\r\n      signinUrl: '/api/auth/signin/google',\r\n      callbackUrl: '/api/auth/callback/google',\r\n    },\r\n  })),\r\n  SessionProvider: ({ children }) => children,\r\n}))\r\n\r\n// Mock NextAuth.js auth function\r\njest.mock('@/auth', () => ({\r\n  auth: jest.fn(() => Promise.resolve({\r\n    user: {\r\n      id: 'test-user-id',\r\n      email: 'test@example.com',\r\n      name: 'Test User',\r\n      image: 'https://example.com/avatar.jpg',\r\n    },\r\n    expires: new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString(),\r\n  })),\r\n  signIn: jest.fn(),\r\n  signOut: jest.fn(),\r\n}))\r\n\r\n// Mock Supabase - Configuración completa y robusta\r\nconst mockSupabaseResponse = {\r\n  data: [\r\n    {\r\n      id: 1,\r\n      name: 'Test Product 1',\r\n      slug: 'test-product-1',\r\n      description: 'Test description',\r\n      price: 1000,\r\n      discounted_price: 900,\r\n      stock: 10,\r\n      category_id: 1,\r\n      brand: 'Test Brand',\r\n      images: ['test1.jpg'],\r\n      created_at: '2024-01-01T00:00:00Z',\r\n      category: { id: 1, name: 'Test Category', slug: 'test-category' },\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Test Product 2',\r\n      slug: 'test-product-2',\r\n      description: 'Test description 2',\r\n      price: 2000,\r\n      discounted_price: 2000,\r\n      stock: 5,\r\n      category_id: 2,\r\n      brand: 'Test Brand 2',\r\n      images: ['test2.jpg'],\r\n      created_at: '2024-01-01T00:00:00Z',\r\n      category: { id: 2, name: 'Test Category 2', slug: 'test-category-2' },\r\n    },\r\n  ],\r\n  error: null,\r\n  count: 2,\r\n}\r\n\r\n// Función para crear un mock robusto de query builder\r\nconst createMockQueryBuilder = () => {\r\n  const builder = {}\r\n\r\n  // Métodos que retornan el builder para chaining\r\n  const chainableMethods = [\r\n    'select', 'eq', 'gte', 'lte', 'gt', 'lt', 'or', 'and',\r\n    'ilike', 'like', 'in', 'order', 'neq', 'is', 'not'\r\n  ]\r\n\r\n  chainableMethods.forEach(method => {\r\n    builder[method] = jest.fn(() => builder)\r\n  })\r\n\r\n  // Métodos que retornan promesas\r\n  builder.range = jest.fn(() => Promise.resolve(mockSupabaseResponse))\r\n  builder.single = jest.fn(() => Promise.resolve({\r\n    data: { id: 1, name: 'Test Category', slug: 'test-category' },\r\n    error: null,\r\n  }))\r\n\r\n  // Agregar soporte para Promise (then/catch) para casos donde no se llama a range()\r\n  builder.then = jest.fn((callback) => {\r\n    return Promise.resolve(callback(mockSupabaseResponse))\r\n  })\r\n  builder.catch = jest.fn((callback) => {\r\n    return Promise.resolve()\r\n  })\r\n\r\n  // Métodos especiales\r\n  builder.insert = jest.fn((data) => {\r\n    // Para inserts que no necesitan select (como order_items)\r\n    if (Array.isArray(data) && data[0]?.order_id) {\r\n      return Promise.resolve({ data: null, error: null });\r\n    }\r\n\r\n    return {\r\n      select: jest.fn((columns) => ({\r\n        single: jest.fn(() => {\r\n          // Crear un objeto de usuario válido para inserts de usuarios (array)\r\n          if (Array.isArray(data) && data[0]?.clerk_id) {\r\n            return Promise.resolve({\r\n              data: {\r\n                id: 'test-user-id',\r\n                clerk_id: data[0].clerk_id,\r\n                email: data[0].email || 'test@example.com',\r\n                name: data[0].name || 'Test User'\r\n              },\r\n              error: null,\r\n            });\r\n          }\r\n          // Para inserts de usuarios sin array (objeto directo)\r\n          if (data?.clerk_id) {\r\n            return Promise.resolve({\r\n              data: {\r\n                id: 'test-user-id',\r\n                clerk_id: data.clerk_id,\r\n                email: data.email || 'test@example.com',\r\n                name: data.name || 'Test User'\r\n              },\r\n              error: null,\r\n            });\r\n          }\r\n          // Para otros tipos de insert, usar el mock por defecto\r\n          return Promise.resolve({\r\n            data: { id: 1, ...mockSupabaseResponse.data[0] },\r\n            error: null,\r\n          });\r\n        }),\r\n      }))\r\n    };\r\n  })\r\n\r\n  builder.update = jest.fn(() => ({\r\n    eq: jest.fn(() => Promise.resolve({ error: null })),\r\n  }))\r\n\r\n  builder.delete = jest.fn(() => ({\r\n    eq: jest.fn(() => Promise.resolve({ error: null })),\r\n  }))\r\n\r\n  // Método para consultas con IN (productos)\r\n  builder.in = jest.fn(() => Promise.resolve({\r\n    data: [\r\n      {\r\n        id: 1,\r\n        name: 'Test Product 1',\r\n        price: 1000,\r\n        discounted_price: null,\r\n        stock: 10,\r\n        images: { previews: ['test1.jpg'] },\r\n        category: { name: 'Test Category', slug: 'test-category' }\r\n      },\r\n      {\r\n        id: 2,\r\n        name: 'Test Product 2',\r\n        price: 2000,\r\n        discounted_price: 1800,\r\n        stock: 5,\r\n        images: { previews: ['test2.jpg'] },\r\n        category: { name: 'Test Category', slug: 'test-category' }\r\n      }\r\n    ],\r\n    error: null\r\n  }))\r\n\r\n  return builder\r\n}\r\n\r\n// Mock principal de Supabase - Versión mejorada\r\njest.mock('@/lib/supabase', () => {\r\n  // Mock completo del query builder con todos los métodos\r\n  const createMockQueryBuilder = () => {\r\n    const mockData = {\r\n      data: [\r\n        { brand: 'El Galgo', product_count: 3 },\r\n        { brand: 'Plavicon', product_count: 5 },\r\n        { brand: 'Akapol', product_count: 2 },\r\n      ],\r\n      error: null\r\n    };\r\n\r\n    const mockQueryBuilder = {\r\n      select: jest.fn(() => mockQueryBuilder),\r\n      from: jest.fn(() => mockQueryBuilder),\r\n      insert: jest.fn(() => mockQueryBuilder),\r\n      update: jest.fn(() => mockQueryBuilder),\r\n      delete: jest.fn(() => mockQueryBuilder),\r\n      eq: jest.fn(() => mockQueryBuilder),\r\n      neq: jest.fn(() => mockQueryBuilder),\r\n      gt: jest.fn(() => mockQueryBuilder),\r\n      gte: jest.fn(() => mockQueryBuilder),\r\n      lt: jest.fn(() => mockQueryBuilder),\r\n      lte: jest.fn(() => mockQueryBuilder),\r\n      like: jest.fn(() => mockQueryBuilder),\r\n      ilike: jest.fn(() => mockQueryBuilder),\r\n      is: jest.fn(() => mockQueryBuilder),\r\n      in: jest.fn(() => mockQueryBuilder),\r\n      not: jest.fn(() => mockQueryBuilder),\r\n      or: jest.fn(() => mockQueryBuilder),\r\n      and: jest.fn(() => mockQueryBuilder),\r\n      order: jest.fn(() => mockQueryBuilder),\r\n      limit: jest.fn(() => mockQueryBuilder),\r\n      range: jest.fn(() => mockQueryBuilder),\r\n      single: jest.fn(() => Promise.resolve(mockData)),\r\n      maybeSingle: jest.fn(() => Promise.resolve(mockData)),\r\n      then: jest.fn((callback) => Promise.resolve(callback(mockData))),\r\n      catch: jest.fn(() => Promise.resolve()),\r\n    };\r\n\r\n    return mockQueryBuilder;\r\n  };\r\n\r\n  const mockClient = {\r\n    from: jest.fn(() => createMockQueryBuilder()),\r\n    auth: {\r\n      getUser: jest.fn(() => Promise.resolve({\r\n        data: { user: null },\r\n        error: null,\r\n      })),\r\n    },\r\n  }\r\n\r\n  return {\r\n    getSupabaseClient: jest.fn(() => mockClient),\r\n    supabase: mockClient,\r\n    supabaseAdmin: mockClient,\r\n    handleSupabaseError: jest.fn((error, context) => {\r\n      if (error?.message) {\r\n        throw new Error(error.message)\r\n      }\r\n      throw new Error('Supabase error')\r\n    }),\r\n    isAuthenticated: jest.fn(() => Promise.resolve(false)),\r\n    getCurrentUser: jest.fn(() => Promise.resolve(null)),\r\n  }\r\n})\r\n\r\n// Mock adicional para importaciones directas\r\njest.mock('@/lib/supabase/client', () => ({\r\n  createClient: jest.fn(() => mockSupabaseClient),\r\n}))\r\n\r\n// Mock NextAuth.js para tests de API\r\njest.mock('next-auth/next', () => ({\r\n  getServerSession: jest.fn(() => Promise.resolve({\r\n    user: {\r\n      id: 'test-user-id',\r\n      email: 'test@example.com',\r\n      name: 'Test User',\r\n    },\r\n  })),\r\n}))\r\n\r\n// Mock auth utilities para compatibilidad\r\njest.mock('@/lib/auth/admin-auth', () => ({\r\n  getAuthUser: jest.fn(() => Promise.resolve({\r\n    id: 'test-user-id',\r\n    email: 'test@example.com',\r\n    name: 'Test User',\r\n  })),\r\n  getAuthUserId: jest.fn(() => Promise.resolve('test-user-id')),\r\n  requireAuth: jest.fn(() => Promise.resolve({\r\n    id: 'test-user-id',\r\n    email: 'test@example.com',\r\n    name: 'Test User',\r\n  })),\r\n}))\r\n\r\n// Mock MercadoPago - Versión completa\r\njest.mock('@/lib/mercadopago', () => ({\r\n  preference: {\r\n    create: jest.fn(() => Promise.resolve({\r\n      id: 'test-preference-id',\r\n      init_point: 'https://test-mercadopago.com/checkout',\r\n    })),\r\n  },\r\n  payment: {\r\n    get: jest.fn(() => Promise.resolve({\r\n      id: 'test-payment-id',\r\n      status: 'approved',\r\n      external_reference: 'test-order-id',\r\n    })),\r\n  },\r\n  getPaymentInfo: jest.fn(() => Promise.resolve({\r\n    success: true,\r\n    data: {\r\n      id: 'test-payment-id',\r\n      status: 'approved',\r\n      external_reference: 'test-order-id',\r\n    },\r\n  })),\r\n  validateWebhookSignature: jest.fn(() => true),\r\n  createPaymentPreference: jest.fn(() => Promise.resolve({\r\n    success: true,\r\n    data: {\r\n      id: 'test-preference-id',\r\n      init_point: 'https://test-mercadopago.com/checkout',\r\n      sandbox_init_point: 'https://test-mercadopago.com/checkout',\r\n    },\r\n  })),\r\n  mercadopago: {\r\n    preferences: {\r\n      create: jest.fn(() => Promise.resolve({\r\n        body: {\r\n          id: 'test-preference-id',\r\n          init_point: 'https://test-mercadopago.com/checkout',\r\n        },\r\n      })),\r\n    },\r\n  },\r\n}))\r\n\r\n// Mock Redis para tests\r\njest.mock('@/lib/redis', () => ({\r\n  redis: {\r\n    get: jest.fn(() => Promise.resolve(null)),\r\n    set: jest.fn(() => Promise.resolve('OK')),\r\n    del: jest.fn(() => Promise.resolve(1)),\r\n    incr: jest.fn(() => Promise.resolve(1)),\r\n    expire: jest.fn(() => Promise.resolve(1)),\r\n    ping: jest.fn(() => Promise.resolve('PONG')),\r\n    disconnect: jest.fn(() => Promise.resolve()),\r\n  },\r\n  RedisCache: jest.fn().mockImplementation(() => ({\r\n    get: jest.fn(() => Promise.resolve(null)),\r\n    set: jest.fn(() => Promise.resolve(true)),\r\n    del: jest.fn(() => Promise.resolve(true)),\r\n    incr: jest.fn(() => Promise.resolve(1)),\r\n    expire: jest.fn(() => Promise.resolve(true)),\r\n    ping: jest.fn(() => Promise.resolve(true)),\r\n  })),\r\n  isRedisAvailable: jest.fn(() => false),\r\n}))\r\n\r\n// Mock Rate Limiter\r\njest.mock('@/lib/rate-limiter', () => ({\r\n  checkRateLimit: jest.fn(() => Promise.resolve({\r\n    success: true,\r\n    remaining: 100,\r\n    reset: Date.now() + 60000,\r\n  })),\r\n  RateLimiter: jest.fn().mockImplementation(() => ({\r\n    check: jest.fn(() => Promise.resolve({\r\n      success: true,\r\n      remaining: 100,\r\n      reset: Date.now() + 60000,\r\n    })),\r\n  })),\r\n}))\r\n\r\n// Clean up after each test\r\nafterEach(() => {\r\n  jest.clearAllMocks()\r\n  localStorageMock.clear()\r\n  sessionStorageMock.clear()\r\n})\r\n"],"names":["jest","mock","actual","requireActual","mockQueryCache","clear","fn","get","getAll","find","findAll","notify","onFocus","onOnline","subscribe","build","mockMutationCache","mockQueryClient","getQueryCache","getMutationCache","setQueryData","getQueryData","invalidateQueries","removeQueries","prefetchQuery","defaultQueryOptions","getDefaultOptions","queries","mutations","mount","unmount","isFetching","isMutating","QueryClient","mockImplementation","useQuery","data","error","isLoading","isError","isSuccess","isStale","dataUpdatedAt","Date","now","refetch","useQueryClient","QueryClientProvider","children","useRouter","route","pathname","query","asPath","push","pop","reload","back","prefetch","beforePopState","events","on","off","emit","isFallback","replace","forward","refresh","useSearchParams","key","has","keys","values","entries","forEach","toString","usePathname","__esModule","default","props","img","href","a","useCartModalContext","isOpen","openModal","closeModal","CartModalProvider","useModalContext","selectedProduct","ModalProvider","handlers","GET","POST","auth","signIn","signOut","id","name","type","useSession","user","email","image","expires","toISOString","status","Promise","resolve","ok","url","getProviders","google","signinUrl","callbackUrl","SessionProvider","createMockQueryBuilder","mockData","brand","product_count","mockQueryBuilder","select","from","insert","update","delete","eq","neq","gt","gte","lt","lte","like","ilike","is","in","not","or","and","order","limit","range","single","maybeSingle","then","callback","catch","mockClient","getUser","getSupabaseClient","supabase","supabaseAdmin","handleSupabaseError","context","message","Error","isAuthenticated","getCurrentUser","createClient","mockSupabaseClient","getServerSession","getAuthUser","getAuthUserId","requireAuth","preference","create","init_point","payment","external_reference","getPaymentInfo","success","validateWebhookSignature","createPaymentPreference","sandbox_init_point","mercadopago","preferences","body","redis","set","del","incr","expire","ping","disconnect","RedisCache","isRedisAvailable","checkRateLimit","remaining","reset","RateLimiter","check","global","TextEncoder","TextDecoder","ReadableStream","WritableStream","TransformStream","fetch","BroadcastChannel","postMessage","close","addEventListener","removeEventListener","process","env","NEXT_PUBLIC_SUPABASE_URL","NEXT_PUBLIC_SUPABASE_ANON_KEY","NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY","CLERK_SECRET_KEY","MERCADOPAGO_ACCESS_TOKEN","NEXT_PUBLIC_MERCADOPAGO_PUBLIC_KEY","Object","defineProperty","window","writable","value","matches","media","onchange","addListener","removeListener","dispatchEvent","IntersectionObserver","observe","unobserve","ResizeObserver","localStorageMock","getItem","setItem","removeItem","localStorage","sessionStorageMock","sessionStorage","Request","input","init","enumerable","configurable","method","headers","Headers","json","JSON","parse","text","Response","statusText","stringify","Map","toLowerCase","thisArg","Symbol","iterator","originalError","console","beforeAll","args","includes","call","afterAll","mockSupabaseResponse","slug","description","price","discounted_price","stock","category_id","images","created_at","category","count","builder","chainableMethods","Array","isArray","order_id","columns","clerk_id","previews","afterEach","clearAllMocks"],"mappings":"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"}