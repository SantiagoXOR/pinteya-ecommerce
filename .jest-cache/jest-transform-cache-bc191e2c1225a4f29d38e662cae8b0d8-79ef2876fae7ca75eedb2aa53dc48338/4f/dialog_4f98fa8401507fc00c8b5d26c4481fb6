8d1a832c827e781272738cd9edb509ca
"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: Object.getOwnPropertyDescriptor(all, name).get
    });
}
_export(exports, {
    get Dialog () {
        return Dialog;
    },
    get DialogClose () {
        return DialogClose;
    },
    get DialogContent () {
        return DialogContent;
    },
    get DialogDescription () {
        return DialogDescription;
    },
    get DialogFooter () {
        return DialogFooter;
    },
    get DialogHeader () {
        return DialogHeader;
    },
    get DialogOverlay () {
        return DialogOverlay;
    },
    get DialogPortal () {
        return DialogPortal;
    },
    get DialogTitle () {
        return DialogTitle;
    },
    get DialogTrigger () {
        return DialogTrigger;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _reactdialog = /*#__PURE__*/ _interop_require_wildcard(require("@radix-ui/react-dialog"));
const _optimizedimports = require("../../lib/optimized-imports");
const _classvarianceauthority = require("class-variance-authority");
const _utils = require("../../lib/utils");
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const Dialog = _reactdialog.Root;
const DialogTrigger = _reactdialog.Trigger;
const DialogPortal = _reactdialog.Portal;
const DialogClose = _reactdialog.Close;
const DialogOverlay = /*#__PURE__*/ _react.forwardRef(({ className, ...props }, ref)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_reactdialog.Overlay, {
        ref: ref,
        className: (0, _utils.cn)("fixed inset-0 z-modal-backdrop bg-dark/70 backdrop-blur-sm data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0", className),
        ...props
    }));
DialogOverlay.displayName = _reactdialog.Overlay.displayName;
const dialogContentVariants = (0, _classvarianceauthority.cva)("fixed left-[50%] top-[50%] z-modal grid w-full translate-x-[-50%] translate-y-[-50%] gap-4 border bg-white p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%]", {
    variants: {
        size: {
            sm: "max-w-sm",
            md: "max-w-md",
            lg: "max-w-lg",
            xl: "max-w-xl",
            "2xl": "max-w-2xl",
            "3xl": "max-w-3xl",
            "4xl": "max-w-4xl",
            full: "max-w-[95vw] max-h-[95vh]"
        },
        variant: {
            default: "rounded-modal border-gray-200",
            elevated: "rounded-modal border-0 shadow-2",
            fullscreen: "rounded-none border-0 w-screen h-screen max-w-none max-h-none"
        }
    },
    defaultVariants: {
        size: "md",
        variant: "default"
    }
});
const DialogContent = /*#__PURE__*/ _react.forwardRef(({ className, children, size, variant, showCloseButton = true, ...props }, ref)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)(DialogPortal, {
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(DialogOverlay, {}),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_reactdialog.Content, {
                ref: ref,
                className: (0, _utils.cn)(dialogContentVariants({
                    size,
                    variant
                }), className),
                ...props,
                children: [
                    children,
                    showCloseButton && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_reactdialog.Close, {
                        className: "absolute right-4 top-4 rounded-sm opacity-70 ring-offset-white transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-gray-100 data-[state=open]:text-gray-500",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_optimizedimports.X, {
                                className: "h-4 w-4"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                className: "sr-only",
                                children: "Cerrar"
                            })
                        ]
                    })
                ]
            })
        ]
    }));
DialogContent.displayName = _reactdialog.Content.displayName;
const DialogHeader = ({ className, ...props })=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
        className: (0, _utils.cn)("flex flex-col space-y-1.5 text-center sm:text-left", className),
        ...props
    });
DialogHeader.displayName = "DialogHeader";
const DialogFooter = ({ className, ...props })=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
        className: (0, _utils.cn)("flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2", className),
        ...props
    });
DialogFooter.displayName = "DialogFooter";
const DialogTitle = /*#__PURE__*/ _react.forwardRef(({ className, ...props }, ref)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_reactdialog.Title, {
        ref: ref,
        className: (0, _utils.cn)("text-lg font-semibold leading-none tracking-tight text-gray-900", className),
        ...props
    }));
DialogTitle.displayName = _reactdialog.Title.displayName;
const DialogDescription = /*#__PURE__*/ _react.forwardRef(({ className, ...props }, ref)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_reactdialog.Description, {
        ref: ref,
        className: (0, _utils.cn)("text-sm text-gray-600", className),
        ...props
    }));
DialogDescription.displayName = _reactdialog.Description.displayName;

//# sourceMappingURL=data:application/json;base64,