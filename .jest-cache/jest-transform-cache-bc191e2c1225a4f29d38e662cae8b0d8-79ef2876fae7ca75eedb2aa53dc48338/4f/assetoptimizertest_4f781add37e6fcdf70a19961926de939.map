{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\__tests__\\lib\\asset-optimizer.test.ts"],"sourcesContent":["// ===================================\r\n// PINTEYA E-COMMERCE - ASSET OPTIMIZER TESTS\r\n// ===================================\r\n\r\nimport { AssetOptimizer, assetOptimizer, ASSET_CONFIGS, AssetUtils } from '@/lib/asset-optimizer';\r\n\r\n// Mock logger\r\njest.mock('@/lib/logger', () => ({\r\n  logger: {\r\n    debug: jest.fn(),\r\n    info: jest.fn(),\r\n    warn: jest.fn(),\r\n    error: jest.fn(),\r\n  },\r\n  LogLevel: {\r\n    DEBUG: 'debug',\r\n    INFO: 'info',\r\n    WARN: 'warn',\r\n    ERROR: 'error',\r\n  },\r\n  LogCategory: {\r\n    SYSTEM: 'system',\r\n  },\r\n}));\r\n\r\n// Mock DOM para tests de browser\r\nconst mockDocument = {\r\n  createElement: jest.fn(),\r\n  head: {\r\n    appendChild: jest.fn(),\r\n  },\r\n  querySelectorAll: jest.fn(),\r\n  addEventListener: jest.fn(),\r\n};\r\n\r\nconst mockWindow = {\r\n  IntersectionObserver: jest.fn(),\r\n  document: mockDocument,\r\n};\r\n\r\n// Solo mockear si no existe\r\nif (typeof global.document === 'undefined') {\r\n  Object.defineProperty(global, 'document', {\r\n    value: mockDocument,\r\n    writable: true,\r\n  });\r\n}\r\n\r\nif (typeof global.window === 'undefined') {\r\n  Object.defineProperty(global, 'window', {\r\n    value: mockWindow,\r\n    writable: true,\r\n  });\r\n}\r\n\r\ndescribe('AssetOptimizer', () => {\r\n  beforeEach(() => {\r\n    jest.clearAllMocks();\r\n  });\r\n\r\n  describe('Singleton Pattern', () => {\r\n    it('should return the same instance', () => {\r\n      const instance1 = AssetOptimizer.getInstance();\r\n      const instance2 = AssetOptimizer.getInstance();\r\n      \r\n      expect(instance1).toBe(instance2);\r\n      expect(instance1).toBe(assetOptimizer);\r\n    });\r\n  });\r\n\r\n  describe('optimizeImageUrl', () => {\r\n    it('should optimize Supabase image URLs', () => {\r\n      const originalUrl = 'https://abc.supabase.co/storage/v1/object/public/images/test.jpg';\r\n      const config = ASSET_CONFIGS.PRODUCT_IMAGES;\r\n      \r\n      const optimized = assetOptimizer.optimizeImageUrl(originalUrl, config);\r\n      \r\n      expect(optimized).toContain('width=800');\r\n      expect(optimized).toContain('height=600');\r\n      expect(optimized).toContain('quality=85');\r\n      expect(optimized).toContain('format=webp');\r\n    });\r\n\r\n    it('should leave local URLs unchanged', () => {\r\n      const localUrl = '/images/product.jpg';\r\n      \r\n      const optimized = assetOptimizer.optimizeImageUrl(localUrl, ASSET_CONFIGS.PRODUCT_IMAGES);\r\n      \r\n      expect(optimized).toBe(localUrl);\r\n    });\r\n\r\n    it('should handle invalid URLs gracefully', () => {\r\n      const invalidUrl = 'not-a-url';\r\n\r\n      const optimized = assetOptimizer.optimizeImageUrl(invalidUrl, ASSET_CONFIGS.PRODUCT_IMAGES);\r\n\r\n      expect(optimized).toBe(invalidUrl);\r\n    });\r\n  });\r\n\r\n  describe('generateSrcSet', () => {\r\n    it('should generate responsive srcSet', () => {\r\n      const baseUrl = 'https://example.supabase.co/image.jpg';\r\n      \r\n      const srcSet = assetOptimizer.generateSrcSet(baseUrl, ASSET_CONFIGS.PRODUCT_IMAGES);\r\n      \r\n      expect(srcSet).toContain('320w');\r\n      expect(srcSet).toContain('640w');\r\n      expect(srcSet).toContain('width=320');\r\n      expect(srcSet).toContain('width=640');\r\n    });\r\n\r\n    it('should respect maxWidth limits', () => {\r\n      const baseUrl = 'https://example.supabase.co/image.jpg';\r\n      const config = { ...ASSET_CONFIGS.PRODUCT_IMAGES, maxWidth: 640 };\r\n      \r\n      const srcSet = assetOptimizer.generateSrcSet(baseUrl, config);\r\n      \r\n      expect(srcSet).toContain('320w');\r\n      expect(srcSet).toContain('640w');\r\n      expect(srcSet).not.toContain('1024w');\r\n    });\r\n\r\n    it('should handle errors gracefully', () => {\r\n      const invalidUrl = null as any;\r\n\r\n      // No debería lanzar error\r\n      expect(() => assetOptimizer.generateSrcSet(invalidUrl, ASSET_CONFIGS.PRODUCT_IMAGES)).not.toThrow();\r\n    });\r\n  });\r\n\r\n  describe('generateSizes', () => {\r\n    it('should generate sizes attribute', () => {\r\n      const breakpoints = [\r\n        { condition: '(max-width: 640px)', size: '100vw' },\r\n        { condition: '(max-width: 1024px)', size: '50vw' },\r\n        { condition: '', size: '33vw' },\r\n      ];\r\n      \r\n      const sizes = assetOptimizer.generateSizes(breakpoints);\r\n      \r\n      expect(sizes).toBe('(max-width: 640px) 100vw, (max-width: 1024px) 50vw,  33vw');\r\n    });\r\n  });\r\n\r\n  describe('preloadCriticalAssets', () => {\r\n    it('should not throw errors when preloading assets', () => {\r\n      const assets = [\r\n        { url: '/image.jpg', type: 'image' as const },\r\n        { url: '/font.woff2', type: 'font' as const },\r\n        { url: '/style.css', type: 'style' as const },\r\n      ];\r\n\r\n      // No debería lanzar error\r\n      expect(() => assetOptimizer.preloadCriticalAssets(assets)).not.toThrow();\r\n    });\r\n  });\r\n\r\n  describe('optimizeJsonResponse', () => {\r\n    it('should remove null values and compress JSON', () => {\r\n      const data = {\r\n        id: 1,\r\n        name: 'Test',\r\n        description: null,\r\n        tags: ['tag1', null, 'tag2'],\r\n        metadata: {\r\n          created: '2023-01-01',\r\n          updated: null,\r\n        },\r\n      };\r\n\r\n      const optimized = assetOptimizer.optimizeJsonResponse(data);\r\n      const parsed = JSON.parse(optimized);\r\n\r\n      expect(parsed.description).toBeUndefined();\r\n      expect(parsed.tags).toEqual(['tag1', 'tag2']);\r\n      expect(parsed.metadata.updated).toBeUndefined();\r\n      expect(parsed.metadata.created).toBe('2023-01-01');\r\n    });\r\n\r\n    it('should handle arrays correctly', () => {\r\n      const data = [\r\n        { id: 1, name: 'Item 1', deleted: null },\r\n        null,\r\n        { id: 2, name: 'Item 2', deleted: false },\r\n      ];\r\n\r\n      const optimized = assetOptimizer.optimizeJsonResponse(data);\r\n      const parsed = JSON.parse(optimized);\r\n\r\n      expect(parsed).toHaveLength(2);\r\n      expect(parsed[0].deleted).toBeUndefined();\r\n      expect(parsed[1].deleted).toBe(false);\r\n    });\r\n\r\n    it('should handle primitive values', () => {\r\n      const data = 'simple string';\r\n\r\n      const optimized = assetOptimizer.optimizeJsonResponse(data);\r\n\r\n      expect(optimized).toBe('\"simple string\"');\r\n    });\r\n\r\n    it('should handle errors gracefully', () => {\r\n      // Crear objeto circular\r\n      const circularObj: any = { name: 'test' };\r\n      circularObj.self = circularObj;\r\n\r\n      // No debería lanzar error, debería retornar algo\r\n      expect(() => assetOptimizer.optimizeJsonResponse(circularObj)).not.toThrow();\r\n    });\r\n  });\r\n\r\n  describe('Asset Configurations', () => {\r\n    it('should have product images config', () => {\r\n      const config = ASSET_CONFIGS.PRODUCT_IMAGES;\r\n      \r\n      expect(config.compress).toBe(true);\r\n      expect(config.quality).toBe(85);\r\n      expect(config.format).toBe('webp');\r\n      expect(config.maxWidth).toBe(800);\r\n      expect(config.maxHeight).toBe(600);\r\n      expect(config.lazy).toBe(true);\r\n    });\r\n\r\n    it('should have payment icons config', () => {\r\n      const config = ASSET_CONFIGS.PAYMENT_ICONS;\r\n      \r\n      expect(config.compress).toBe(true);\r\n      expect(config.quality).toBe(90);\r\n      expect(config.format).toBe('webp');\r\n      expect(config.maxWidth).toBe(64);\r\n      expect(config.maxHeight).toBe(64);\r\n      expect(config.lazy).toBe(false);\r\n    });\r\n\r\n    it('should have hero images config', () => {\r\n      const config = ASSET_CONFIGS.HERO_IMAGES;\r\n      \r\n      expect(config.compress).toBe(true);\r\n      expect(config.quality).toBe(80);\r\n      expect(config.format).toBe('webp');\r\n      expect(config.maxWidth).toBe(1920);\r\n      expect(config.maxHeight).toBe(1080);\r\n      expect(config.lazy).toBe(true);\r\n    });\r\n  });\r\n});\r\n\r\ndescribe('AssetUtils', () => {\r\n  beforeEach(() => {\r\n    jest.clearAllMocks();\r\n  });\r\n\r\n  describe('optimizeProductImage', () => {\r\n    it('should optimize product image with correct config', () => {\r\n      const url = 'https://example.supabase.co/product.jpg';\r\n      \r\n      const optimized = AssetUtils.optimizeProductImage(url);\r\n      \r\n      expect(optimized).toContain('width=800');\r\n      expect(optimized).toContain('quality=85');\r\n    });\r\n  });\r\n\r\n  describe('optimizePaymentIcon', () => {\r\n    it('should optimize payment icon with correct config', () => {\r\n      const url = 'https://example.supabase.co/visa.svg';\r\n      \r\n      const optimized = AssetUtils.optimizePaymentIcon(url);\r\n      \r\n      expect(optimized).toContain('width=64');\r\n      expect(optimized).toContain('quality=90');\r\n    });\r\n  });\r\n\r\n  describe('generateProductImageProps', () => {\r\n    it('should generate complete image props', () => {\r\n      const url = 'https://example.supabase.co/product.jpg';\r\n      \r\n      const props = AssetUtils.generateProductImageProps(url);\r\n      \r\n      expect(props.src).toContain('width=800');\r\n      expect(props.srcSet).toContain('320w');\r\n      expect(props.sizes).toContain('100vw');\r\n      expect(props.loading).toBe('lazy');\r\n      expect(props.decoding).toBe('async');\r\n    });\r\n  });\r\n\r\n  describe('preloadPaymentAssets', () => {\r\n    it('should not throw errors when preloading payment assets', () => {\r\n      // No debería lanzar error\r\n      expect(() => AssetUtils.preloadPaymentAssets()).not.toThrow();\r\n    });\r\n  });\r\n\r\n  describe('initializeClientOptimizations', () => {\r\n    it('should not throw errors during initialization', () => {\r\n      // No debería lanzar error\r\n      expect(() => AssetUtils.initializeClientOptimizations()).not.toThrow();\r\n    });\r\n\r\n    it('should handle server-side rendering', () => {\r\n      const originalWindow = global.window;\r\n      delete (global as any).window;\r\n\r\n      // No debería lanzar error\r\n      expect(() => AssetUtils.initializeClientOptimizations()).not.toThrow();\r\n\r\n      global.window = originalWindow;\r\n    });\r\n  });\r\n});\r\n"],"names":["jest","mock","logger","debug","fn","info","warn","error","LogLevel","DEBUG","INFO","WARN","ERROR","LogCategory","SYSTEM","mockDocument","createElement","head","appendChild","querySelectorAll","addEventListener","mockWindow","IntersectionObserver","document","global","Object","defineProperty","value","writable","window","describe","beforeEach","clearAllMocks","it","instance1","AssetOptimizer","getInstance","instance2","expect","toBe","assetOptimizer","originalUrl","config","ASSET_CONFIGS","PRODUCT_IMAGES","optimized","optimizeImageUrl","toContain","localUrl","invalidUrl","baseUrl","srcSet","generateSrcSet","maxWidth","not","toThrow","breakpoints","condition","size","sizes","generateSizes","assets","url","type","preloadCriticalAssets","data","id","name","description","tags","metadata","created","updated","optimizeJsonResponse","parsed","JSON","parse","toBeUndefined","toEqual","deleted","toHaveLength","circularObj","self","compress","quality","format","maxHeight","lazy","PAYMENT_ICONS","HERO_IMAGES","AssetUtils","optimizeProductImage","optimizePaymentIcon","props","generateProductImageProps","src","loading","decoding","preloadPaymentAssets","initializeClientOptimizations","originalWindow"],"mappings":"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"}