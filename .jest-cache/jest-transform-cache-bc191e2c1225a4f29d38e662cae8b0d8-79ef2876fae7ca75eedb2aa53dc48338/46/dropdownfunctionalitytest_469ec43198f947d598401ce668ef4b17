c0041897ddfd2461bb47d7d4373bb15f
/**
 * Dropdown Functionality Test Ultra-Simplificado
 * Sin dependencias complejas - Solo funcionalidad básica de dropdowns
 */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_default(require("react"));
const _react1 = require("@testing-library/react");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
// Componentes mock ultra-simplificados
const MockTopBar = ()=>{
    const [deliveryZone, setDeliveryZone] = _react.default.useState('Córdoba Capital');
    const [isDeliveryOpen, setIsDeliveryOpen] = _react.default.useState(false);
    return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
        "data-testid": "topbar",
        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
            "data-testid": "dropdown-menu",
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("button", {
                    onClick: ()=>setIsDeliveryOpen(!isDeliveryOpen),
                    "data-testid": "delivery-zone-selector",
                    children: [
                        "Env\xedos en ",
                        deliveryZone
                    ]
                }),
                isDeliveryOpen && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    "data-testid": "dropdown-content",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            onClick: ()=>{
                                setDeliveryZone('Córdoba Capital');
                                setIsDeliveryOpen(false);
                            },
                            children: "C\xf3rdoba Capital"
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            onClick: ()=>{
                                setDeliveryZone('Interior');
                                setIsDeliveryOpen(false);
                            },
                            children: "Interior de C\xf3rdoba"
                        })
                    ]
                })
            ]
        })
    });
};
const MockSearchBar = ()=>{
    const [category, setCategory] = _react.default.useState('Todas las Categorías');
    const [isCategoryOpen, setIsCategoryOpen] = _react.default.useState(false);
    const [searchValue, setSearchValue] = _react.default.useState('');
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        "data-testid": "searchbar",
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                "data-testid": "dropdown-menu",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                        onClick: ()=>setIsCategoryOpen(!isCategoryOpen),
                        "data-testid": "category-selector",
                        children: category
                    }),
                    isCategoryOpen && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        "data-testid": "dropdown-content",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                onClick: ()=>{
                                    setCategory('Todas las Categorías');
                                    setIsCategoryOpen(false);
                                },
                                children: "Todas las Categor\xedas"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                onClick: ()=>{
                                    setCategory('Pinturas');
                                    setIsCategoryOpen(false);
                                },
                                children: "Pinturas"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                onClick: ()=>{
                                    setCategory('Herramientas');
                                    setIsCategoryOpen(false);
                                },
                                children: "Herramientas"
                            })
                        ]
                    })
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                value: searchValue,
                onChange: (e)=>setSearchValue(e.target.value),
                placeholder: category === 'Pinturas' ? 'Busco pinturas...' : 'Buscar productos...'
            })
        ]
    });
};
const MockActionButtons = ()=>{
    const [isAuthenticated, setIsAuthenticated] = _react.default.useState(false);
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        "data-testid": "action-buttons",
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                "data-testid": "cart-icon",
                children: "Carrito (0)"
            }),
            !isAuthenticated ? /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                    onClick: ()=>setIsAuthenticated(true),
                    children: "Iniciar Sesi\xf3n"
                })
            }) : /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                    children: "Admin"
                })
            })
        ]
    });
};
describe('Dropdown Functionality - Ultra-Simplified Tests', ()=>{
    beforeEach(()=>{
        jest.clearAllMocks();
    });
    describe('TopBar Dropdown', ()=>{
        it('debe renderizar selector de zona de entrega', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(MockTopBar, {}));
            const selector = _react1.screen.getByTestId('delivery-zone-selector');
            expect(selector).toBeInTheDocument();
            expect(selector).toHaveTextContent('Envíos en Córdoba Capital');
        });
        it('debe abrir dropdown al hacer click', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(MockTopBar, {}));
            const selector = _react1.screen.getByTestId('delivery-zone-selector');
            // Dropdown cerrado inicialmente
            expect(_react1.screen.queryByTestId('dropdown-content')).not.toBeInTheDocument();
            // Abrir dropdown
            _react1.fireEvent.click(selector);
            expect(_react1.screen.getByTestId('dropdown-content')).toBeInTheDocument();
        });
        it('debe cambiar zona de entrega', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(MockTopBar, {}));
            const selector = _react1.screen.getByTestId('delivery-zone-selector');
            _react1.fireEvent.click(selector);
            const interiorOption = _react1.screen.getByText('Interior de Córdoba');
            _react1.fireEvent.click(interiorOption);
            expect(selector).toHaveTextContent('Envíos en Interior');
            expect(_react1.screen.queryByTestId('dropdown-content')).not.toBeInTheDocument();
        });
    });
    describe('SearchBar Dropdown', ()=>{
        it('debe renderizar selector de categoría', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(MockSearchBar, {}));
            const selector = _react1.screen.getByTestId('category-selector');
            expect(selector).toBeInTheDocument();
            expect(selector).toHaveTextContent('Todas las Categorías');
        });
        it('debe abrir dropdown de categorías', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(MockSearchBar, {}));
            const selector = _react1.screen.getByTestId('category-selector');
            // Dropdown cerrado inicialmente
            expect(_react1.screen.queryByTestId('dropdown-content')).not.toBeInTheDocument();
            // Abrir dropdown
            _react1.fireEvent.click(selector);
            expect(_react1.screen.getByTestId('dropdown-content')).toBeInTheDocument();
            // Verificar opciones (usar getAllByText para elementos duplicados)
            expect(_react1.screen.getAllByText('Todas las Categorías')).toHaveLength(2); // Botón + opción
            expect(_react1.screen.getByText('Pinturas')).toBeInTheDocument();
            expect(_react1.screen.getByText('Herramientas')).toBeInTheDocument();
        });
        it('debe cambiar categoría y actualizar placeholder', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(MockSearchBar, {}));
            const selector = _react1.screen.getByTestId('category-selector');
            const searchInput = _react1.screen.getByRole('textbox');
            // Estado inicial
            expect(searchInput).toHaveAttribute('placeholder', 'Buscar productos...');
            // Cambiar a Pinturas
            _react1.fireEvent.click(selector);
            const pinturasOption = _react1.screen.getByText('Pinturas');
            _react1.fireEvent.click(pinturasOption);
            // Verificar cambios
            expect(selector).toHaveTextContent('Pinturas');
            expect(searchInput).toHaveAttribute('placeholder', 'Busco pinturas...');
        });
        it('debe permitir escribir en búsqueda', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(MockSearchBar, {}));
            const searchInput = _react1.screen.getByRole('textbox');
            _react1.fireEvent.change(searchInput, {
                target: {
                    value: 'latex blanco'
                }
            });
            expect(searchInput.value).toBe('latex blanco');
        });
    });
    describe('ActionButtons Dropdown', ()=>{
        it('debe mostrar botón de carrito', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(MockActionButtons, {}));
            const cartButton = _react1.screen.getByTestId('cart-icon');
            expect(cartButton).toBeInTheDocument();
            expect(cartButton).toHaveTextContent('Carrito (0)');
        });
        it('debe mostrar botón de login cuando no está autenticado', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(MockActionButtons, {}));
            const loginButton = _react1.screen.getByText('Iniciar Sesión');
            expect(loginButton).toBeInTheDocument();
        });
        it('debe cambiar a botón admin al autenticarse', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(MockActionButtons, {}));
            const loginButton = _react1.screen.getByText('Iniciar Sesión');
            _react1.fireEvent.click(loginButton);
            expect(_react1.screen.getByText('Admin')).toBeInTheDocument();
            expect(_react1.screen.queryByText('Iniciar Sesión')).not.toBeInTheDocument();
        });
    });
    describe('Integración de Dropdowns', ()=>{
        it('debe renderizar todos los componentes con dropdowns', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(MockTopBar, {}),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(MockSearchBar, {}),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(MockActionButtons, {})
                ]
            }));
            expect(_react1.screen.getByTestId('topbar')).toBeInTheDocument();
            expect(_react1.screen.getByTestId('searchbar')).toBeInTheDocument();
            expect(_react1.screen.getByTestId('action-buttons')).toBeInTheDocument();
        });
        it('debe manejar múltiples dropdowns independientemente', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(MockTopBar, {}),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(MockSearchBar, {})
                ]
            }));
            const deliverySelector = _react1.screen.getByTestId('delivery-zone-selector');
            const categorySelector = _react1.screen.getByTestId('category-selector');
            // Abrir dropdown de entrega
            _react1.fireEvent.click(deliverySelector);
            expect(_react1.screen.getAllByTestId('dropdown-content')).toHaveLength(1);
            // Abrir dropdown de categoría (ambos pueden estar abiertos independientemente)
            _react1.fireEvent.click(categorySelector);
            expect(_react1.screen.getAllByTestId('dropdown-content')).toHaveLength(2);
        });
        it('debe mantener estado independiente entre componentes', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(MockTopBar, {}),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(MockSearchBar, {}),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(MockActionButtons, {})
                ]
            }));
            // Cambiar zona de entrega
            const deliverySelector = _react1.screen.getByTestId('delivery-zone-selector');
            _react1.fireEvent.click(deliverySelector);
            _react1.fireEvent.click(_react1.screen.getByText('Interior de Córdoba'));
            // Cambiar categoría
            const categorySelector = _react1.screen.getByTestId('category-selector');
            _react1.fireEvent.click(categorySelector);
            _react1.fireEvent.click(_react1.screen.getByText('Pinturas'));
            // Autenticar
            const loginButton = _react1.screen.getByText('Iniciar Sesión');
            _react1.fireEvent.click(loginButton);
            // Verificar que todos los cambios se mantienen
            expect(deliverySelector).toHaveTextContent('Envíos en Interior');
            expect(categorySelector).toHaveTextContent('Pinturas');
            expect(_react1.screen.getByText('Admin')).toBeInTheDocument();
        });
    });
    describe('Accesibilidad de Dropdowns', ()=>{
        it('debe tener elementos focusables', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(MockTopBar, {}),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(MockSearchBar, {}),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(MockActionButtons, {})
                ]
            }));
            const deliverySelector = _react1.screen.getByTestId('delivery-zone-selector');
            const categorySelector = _react1.screen.getByTestId('category-selector');
            const cartButton = _react1.screen.getByTestId('cart-icon');
            // Verificar que se pueden enfocar
            deliverySelector.focus();
            expect(document.activeElement).toBe(deliverySelector);
            categorySelector.focus();
            expect(document.activeElement).toBe(categorySelector);
            cartButton.focus();
            expect(document.activeElement).toBe(cartButton);
        });
        it('debe cerrar dropdowns con Escape', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(MockTopBar, {}));
            const selector = _react1.screen.getByTestId('delivery-zone-selector');
            // Abrir dropdown
            _react1.fireEvent.click(selector);
            expect(_react1.screen.getByTestId('dropdown-content')).toBeInTheDocument();
            // Cerrar con Escape
            _react1.fireEvent.keyDown(selector, {
                key: 'Escape',
                code: 'Escape'
            });
            // En implementación real, esto cerraría el dropdown
            expect(selector).toBeInTheDocument();
        });
    });
    describe('Responsive Behavior', ()=>{
        it('debe renderizar en diferentes tamaños de pantalla', ()=>{
            // Simular móvil
            Object.defineProperty(window, 'innerWidth', {
                writable: true,
                configurable: true,
                value: 375
            });
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(MockTopBar, {}),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(MockSearchBar, {}),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(MockActionButtons, {})
                ]
            }));
            expect(_react1.screen.getByTestId('topbar')).toBeInTheDocument();
            expect(_react1.screen.getByTestId('searchbar')).toBeInTheDocument();
            expect(_react1.screen.getByTestId('action-buttons')).toBeInTheDocument();
            // Simular desktop
            Object.defineProperty(window, 'innerWidth', {
                writable: true,
                configurable: true,
                value: 1200
            });
            expect(_react1.screen.getByTestId('topbar')).toBeInTheDocument();
        });
    });
    describe('Performance', ()=>{
        it('debe renderizar rápidamente', ()=>{
            const startTime = performance.now();
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(MockTopBar, {}),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(MockSearchBar, {}),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(MockActionButtons, {})
                ]
            }));
            const endTime = performance.now();
            const renderTime = endTime - startTime;
            // Verificar que renderiza en tiempo razonable
            expect(renderTime).toBeLessThan(100);
            expect(_react1.screen.getByTestId('topbar')).toBeInTheDocument();
        });
    });
});

//# sourceMappingURL=data:application/json;base64,