{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useAuth.ts"],"sourcesContent":["/**\n * Hook de Autenticación para NextAuth.js\n * Reemplaza los hooks de Clerk con NextAuth.js\n */\n\n\"use client\"\n\nimport { useSession, signIn, signOut } from \"next-auth/react\"\nimport { useRouter } from \"next/navigation\"\nimport { useCallback } from \"react\"\n\nexport interface AuthUser {\n  id: string\n  name?: string | null\n  email?: string | null\n  image?: string | null\n}\n\nexport interface UseAuthReturn {\n  // Estado de autenticación\n  user: AuthUser | null\n  isLoaded: boolean\n  isSignedIn: boolean\n  \n  // Funciones de autenticación\n  signIn: (provider?: string, options?: { callbackUrl?: string }) => Promise<void>\n  signOut: (options?: { callbackUrl?: string }) => Promise<void>\n  \n  // Información de sesión\n  session: any\n  status: \"loading\" | \"authenticated\" | \"unauthenticated\"\n}\n\nexport function useAuth(): UseAuthReturn {\n  // 🚨 TEMPORAL: Implementación simple sin useSession para evitar errores\n  // TODO: Restaurar useSession cuando el SessionProvider esté funcionando correctamente\n  const session = null\n  const status = \"unauthenticated\" as const\n  const router = useRouter()\n\n  const handleSignIn = useCallback(async (provider: string = \"google\", options?: { callbackUrl?: string }) => {\n    try {\n      await signIn(provider, {\n        callbackUrl: options?.callbackUrl || \"/admin\",\n        redirect: true,\n      })\n    } catch (error) {\n      console.error(\"Error al iniciar sesión:\", error)\n    }\n  }, [])\n\n  const handleSignOut = useCallback(async (options?: { callbackUrl?: string }) => {\n    try {\n      await signOut({\n        callbackUrl: options?.callbackUrl || \"/\",\n        redirect: true,\n      })\n    } catch (error) {\n      console.error(\"Error al cerrar sesión:\", error)\n    }\n  }, [])\n\n  // 🚨 TEMPORAL: Usuario null mientras migramos\n  const user: AuthUser | null = null\n\n  return {\n    user,\n    isLoaded: status !== \"loading\",\n    isSignedIn: status === \"authenticated\",\n    signIn: handleSignIn,\n    signOut: handleSignOut,\n    session,\n    status,\n  }\n}\n\n// Hook para verificar si el usuario es administrador\nexport function useIsAdmin(): boolean {\n  const { user, isSignedIn } = useAuth()\n  \n  // Por ahora, todos los usuarios autenticados son admin\n  // TODO: Implementar sistema de roles más granular\n  return isSignedIn && !!user\n}\n\n// Hook para proteger rutas\nexport function useRequireAuth(redirectTo: string = \"/api/auth/signin\") {\n  const { isSignedIn, isLoaded } = useAuth()\n  const router = useRouter()\n\n  if (isLoaded && !isSignedIn) {\n    router.push(redirectTo)\n  }\n\n  return { isSignedIn, isLoaded }\n}\n"],"names":["useAuth","useIsAdmin","useRequireAuth","session","status","router","useRouter","handleSignIn","useCallback","provider","options","signIn","callbackUrl","redirect","error","console","handleSignOut","signOut","user","isLoaded","isSignedIn","redirectTo","push"],"mappings":"AAAA;;;CAGC,GAED;;;;;;;;;;;;QA4BgBA;eAAAA;;QA4CAC;eAAAA;;QASAC;eAAAA;;;uBA/E4B;4BAClB;wBACE;AAwBrB,SAASF;IACd,wEAAwE;IACxE,sFAAsF;IACtF,MAAMG,UAAU;IAChB,MAAMC,SAAS;IACf,MAAMC,SAASC,IAAAA,qBAAS;IAExB,MAAMC,eAAeC,IAAAA,mBAAW,EAAC,OAAOC,WAAmB,QAAQ,EAAEC;QACnE,IAAI;YACF,MAAMC,IAAAA,aAAM,EAACF,UAAU;gBACrBG,aAAaF,SAASE,eAAe;gBACrCC,UAAU;YACZ;QACF,EAAE,OAAOC,OAAO;YACdC,QAAQD,KAAK,CAAC,4BAA4BA;QAC5C;IACF,GAAG,EAAE;IAEL,MAAME,gBAAgBR,IAAAA,mBAAW,EAAC,OAAOE;QACvC,IAAI;YACF,MAAMO,IAAAA,cAAO,EAAC;gBACZL,aAAaF,SAASE,eAAe;gBACrCC,UAAU;YACZ;QACF,EAAE,OAAOC,OAAO;YACdC,QAAQD,KAAK,CAAC,2BAA2BA;QAC3C;IACF,GAAG,EAAE;IAEL,8CAA8C;IAC9C,MAAMI,OAAwB;IAE9B,OAAO;QACLA;QACAC,UAAUf,WAAW;QACrBgB,YAAYhB,WAAW;QACvBO,QAAQJ;QACRU,SAASD;QACTb;QACAC;IACF;AACF;AAGO,SAASH;IACd,MAAM,EAAEiB,IAAI,EAAEE,UAAU,EAAE,GAAGpB;IAE7B,uDAAuD;IACvD,kDAAkD;IAClD,OAAOoB,cAAc,CAAC,CAACF;AACzB;AAGO,SAAShB,eAAemB,aAAqB,kBAAkB;IACpE,MAAM,EAAED,UAAU,EAAED,QAAQ,EAAE,GAAGnB;IACjC,MAAMK,SAASC,IAAAA,qBAAS;IAExB,IAAIa,YAAY,CAACC,YAAY;QAC3Bf,OAAOiB,IAAI,CAACD;IACd;IAEA,OAAO;QAAED;QAAYD;IAAS;AAChC"}