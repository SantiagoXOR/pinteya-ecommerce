0b1342295e5a34752d31b6d26973fc42
/**
 * NextAuth.js v5 Configuration for Pinteya E-commerce
 * Configuración optimizada para producción con Google OAuth
 * Migración completa desde Clerk a NextAuth.js
 */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: Object.getOwnPropertyDescriptor(all, name).get
    });
}
_export(exports, {
    get auth () {
        return auth;
    },
    get handlers () {
        return handlers;
    },
    get signIn () {
        return signIn;
    },
    get signOut () {
        return signOut;
    }
});
const _nextauth = /*#__PURE__*/ _interop_require_default(require("next-auth"));
const _google = /*#__PURE__*/ _interop_require_default(require("next-auth/providers/google"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
const { handlers, auth, signIn, signOut } = (0, _nextauth.default)({
    // Configuración de providers con validación
    providers: [
        (0, _google.default)({
            clientId: process.env.AUTH_GOOGLE_ID,
            clientSecret: process.env.AUTH_GOOGLE_SECRET,
            authorization: {
                params: {
                    prompt: "consent",
                    access_type: "offline",
                    response_type: "code"
                }
            }
        })
    ],
    // Usar JWT strategy en lugar de adaptador de base de datos
    // adapter: SupabaseAdapter({
    //   url: process.env.NEXT_PUBLIC_SUPABASE_URL!,
    //   secret: process.env.SUPABASE_SERVICE_ROLE_KEY!,
    // }),
    // Configuración de páginas personalizadas
    pages: {
        signIn: "/auth/signin",
        error: "/auth/error"
    },
    // Configuración de base URL para producción
    basePath: "/api/auth",
    // Configuración de callbacks
    callbacks: {
        // Callback de sesión - JWT strategy simplificado
        async session ({ session, token }) {
            // Agregar información adicional del usuario desde el token
            if (token.sub) {
                session.user.id = token.sub;
            }
            return session;
        },
        // Callback de JWT
        async jwt ({ token, user, account }) {
            if (user) {
                token.sub = user.id;
                token.email = user.email;
            }
            return token;
        },
        // Callback de autorización
        async signIn ({ user, account, profile }) {
            // Permitir todos los sign-ins por ahora
            // Aquí se pueden agregar validaciones adicionales
            return true;
        }
    },
    // Configuración de eventos
    events: {
        async signIn ({ user, account, profile, isNewUser }) {
            console.log(`[NextAuth] Usuario autenticado: ${user.email}`);
            // Si es un nuevo usuario, crear entrada en tabla pública
            if (isNewUser) {
                console.log(`[NextAuth] Nuevo usuario registrado: ${user.email}`);
            }
        },
        async signOut ({ session, token }) {
            console.log(`[NextAuth] Usuario desconectado`);
        }
    },
    // Configuración de sesión con JWT
    session: {
        strategy: "jwt",
        maxAge: 30 * 24 * 60 * 60,
        updateAge: 24 * 60 * 60
    },
    // Configuración de JWT para evitar problemas con Edge Runtime
    jwt: {
        maxAge: 30 * 24 * 60 * 60
    },
    // Configuración de debug
    debug: process.env.NODE_ENV === "development",
    // Configuración de trusted hosts para desarrollo y producción
    trustHost: true,
    // Configuración de cookies para producción
    cookies: {
        sessionToken: {
            name: `${process.env.NODE_ENV === "production" ? "__Secure-" : ""}next-auth.session-token`,
            options: {
                httpOnly: true,
                sameSite: "lax",
                path: "/",
                secure: process.env.NODE_ENV === "production"
            }
        }
    },
    // Configuración de secret para producción
    secret: process.env.NEXTAUTH_SECRET
});

//# sourceMappingURL=data:application/json;base64,