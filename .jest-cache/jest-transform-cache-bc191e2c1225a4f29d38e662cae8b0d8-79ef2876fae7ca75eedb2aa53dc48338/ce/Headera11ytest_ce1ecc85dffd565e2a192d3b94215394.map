{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\Header\\__tests__\\accessibility\\Header.a11y.test.tsx"],"sourcesContent":["/**\n * Tests de Accesibilidad - Header\n * Pruebas de cumplimiento WCAG 2.1 AA\n */\n\nimport React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport { axe, toHaveNoViolations } from 'jest-axe';\nimport { Provider } from 'react-redux';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport Header from '../../index';\nimport AuthSection from '../../AuthSection';\nimport { store } from '@/redux/store';\nimport { CartModalProvider } from '@/app/context/CartSidebarModalContext';\n\n// Extender expect con jest-axe\nexpect.extend(toHaveNoViolations);\n\n// Mock de Next.js\njest.mock('next/navigation', () => ({\n  useRouter: () => ({\n    push: jest.fn(),\n    replace: jest.fn(),\n    prefetch: jest.fn(),\n  }),\n  useSearchParams: () => ({\n    get: jest.fn(),\n  }),\n}));\n\n// Mock de Clerk\njest.mock('@clerk/nextjs', () => ({\n  ClerkProvider: ({ children }: { children: React.ReactNode }) => <div>{children}</div>,\n  SignedIn: ({ children }: { children: React.ReactNode }) => <div data-testid=\"signed-in\">{children}</div>,\n  SignedOut: ({ children }: { children: React.ReactNode }) => <div data-testid=\"signed-out\">{children}</div>,\n  UserButton: () => <div data-testid=\"user-button\" role=\"button\" tabIndex={0}>UserButton</div>,\n  useUser: () => ({\n    isSignedIn: false,\n    user: null,\n    isLoaded: true,\n  }),\n}));\n\n// Mock de hooks\njest.mock('@/hooks/useGeolocation', () => ({\n  useGeolocation: () => ({\n    detectedZone: { id: 'cordoba-capital', name: 'Córdoba Capital' },\n    requestLocation: jest.fn(),\n    permissionStatus: 'granted',\n    isLoading: false,\n    error: null,\n    location: null,\n    testLocation: jest.fn(),\n    deliveryZones: [{ id: 'cordoba-capital', name: 'Córdoba Capital' }],\n  }),\n}));\n\njest.mock('@/hooks/useCartAnimation', () => ({\n  useCartAnimation: () => ({ isAnimating: false }),\n}));\n\n// Mock de componentes con accesibilidad\njest.mock('@/components/ui/SearchAutocompleteIntegrated', () => ({\n  SearchAutocompleteIntegrated: ({ onSearch }: { onSearch: (query: string) => void }) => (\n    <input\n      data-testid=\"search-input\"\n      placeholder=\"latex interior blanco 20lts\"\n      aria-label=\"Buscar productos de pinturería\"\n      role=\"searchbox\"\n      onChange={(e) => onSearch(e.target.value)}\n    />\n  ),\n}));\n\njest.mock('@/components/ui/optimized-cart-icon', () => ({\n  OptimizedCartIcon: ({ alt }: { alt: string }) => (\n    <div data-testid=\"cart-icon\" aria-label={alt} role=\"img\">\n      Cart Icon\n    </div>\n  ),\n}));\n\njest.mock('@/components/ui/OptimizedLogo', () => ({\n  HeaderLogo: () => (\n    <img\n      src=\"/images/logo/LOGO POSITIVO.svg\"\n      alt=\"Pinteya - Tu Pinturería Online\"\n      data-testid=\"header-logo\"\n    />\n  ),\n}));\n\n// Wrapper de pruebas\nconst TestWrapper = ({ children }: { children: React.ReactNode }) => {\n  const queryClient = new QueryClient({\n    defaultOptions: {\n      queries: { retry: false },\n      mutations: { retry: false },\n    },\n  });\n\n  return (\n    <Provider store={store}>\n      <QueryClientProvider client={queryClient}>\n        <CartModalProvider>\n          {children}\n        </CartModalProvider>\n      </QueryClientProvider>\n    </Provider>\n  );\n};\n\ndescribe('Header Accessibility - WCAG 2.1 AA', () => {\n  describe('Cumplimiento Automático de Axe', () => {\n    it('debe pasar todas las reglas de accesibilidad de axe', async () => {\n      const { container } = render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      const results = await axe(container);\n      expect(results).toHaveNoViolations();\n    });\n\n    it('debe pasar axe en AuthSection independiente', async () => {\n      const { container } = render(\n        <TestWrapper>\n          <AuthSection variant=\"desktop\" />\n        </TestWrapper>\n      );\n\n      const results = await axe(container);\n      expect(results).toHaveNoViolations();\n    });\n  });\n\n  describe('Estructura Semántica', () => {\n    it('debe usar elementos semánticos correctos', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      // Verificar que usa el elemento header\n      expect(screen.getByRole('banner')).toBeInTheDocument();\n      \n      // Verificar que tiene navegación\n      const searchInput = screen.getByRole('searchbox');\n      expect(searchInput).toBeInTheDocument();\n      \n      // Verificar botones\n      const buttons = screen.getAllByRole('button');\n      expect(buttons.length).toBeGreaterThan(0);\n    });\n\n    it('debe tener landmarks ARIA correctos', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      // Header debe ser un banner landmark\n      const banner = screen.getByRole('banner');\n      expect(banner).toBeInTheDocument();\n    });\n  });\n\n  describe('Navegación por Teclado', () => {\n    it('debe permitir navegación por Tab', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      const searchInput = screen.getByRole('searchbox');\n      const buttons = screen.getAllByRole('button');\n\n      // Verificar que los elementos son focusables\n      expect(searchInput).toHaveAttribute('tabIndex', '0');\n      \n      buttons.forEach(button => {\n        expect(button).not.toHaveAttribute('tabIndex', '-1');\n      });\n    });\n\n    it('debe manejar navegación con Enter y Space', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      const buttons = screen.getAllByRole('button');\n      \n      buttons.forEach(button => {\n        // Simular Enter\n        fireEvent.keyDown(button, { key: 'Enter', code: 'Enter' });\n        \n        // Simular Space\n        fireEvent.keyDown(button, { key: ' ', code: 'Space' });\n        \n        // No debe haber errores\n        expect(button).toBeInTheDocument();\n      });\n    });\n\n    it('debe manejar Escape en elementos interactivos', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      const searchInput = screen.getByRole('searchbox');\n      \n      // Simular Escape\n      fireEvent.keyDown(searchInput, { key: 'Escape', code: 'Escape' });\n      \n      // No debe haber errores\n      expect(searchInput).toBeInTheDocument();\n    });\n  });\n\n  describe('Etiquetas y Descripciones', () => {\n    it('debe tener aria-labels apropiados', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      const searchInput = screen.getByRole('searchbox');\n      expect(searchInput).toHaveAttribute('aria-label', 'Buscar productos de pinturería');\n      \n      const cartIcon = screen.getByTestId('cart-icon');\n      expect(cartIcon).toHaveAttribute('aria-label', 'Carrito de compras');\n    });\n\n    it('debe tener textos alternativos para imágenes', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      const logo = screen.getByTestId('header-logo');\n      expect(logo).toHaveAttribute('alt', 'Pinteya - Tu Pinturería Online');\n    });\n\n    it('debe tener placeholders descriptivos', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      const searchInput = screen.getByRole('searchbox');\n      expect(searchInput).toHaveAttribute('placeholder', 'latex interior blanco 20lts');\n    });\n  });\n\n  describe('Contraste de Colores', () => {\n    it('debe tener suficiente contraste en texto sobre fondo naranja', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      const header = screen.getByRole('banner');\n      \n      // Verificar que usa colores con buen contraste\n      const computedStyle = window.getComputedStyle(header);\n      \n      // El fondo naranja (#ea5a17) con texto blanco debe tener contraste > 4.5:1\n      expect(header).toBeInTheDocument();\n    });\n\n    it('debe mantener contraste en estados hover y focus', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      const buttons = screen.getAllByRole('button');\n      \n      buttons.forEach(button => {\n        // Simular hover\n        fireEvent.mouseEnter(button);\n        \n        // Simular focus\n        fireEvent.focus(button);\n        \n        // Verificar que sigue siendo visible\n        expect(button).toBeVisible();\n      });\n    });\n  });\n\n  describe('Estados de Focus', () => {\n    it('debe mostrar indicadores de focus visibles', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      const searchInput = screen.getByRole('searchbox');\n      const buttons = screen.getAllByRole('button');\n\n      // Focus en input de búsqueda\n      fireEvent.focus(searchInput);\n      expect(document.activeElement).toBe(searchInput);\n\n      // Focus en botones\n      buttons.forEach(button => {\n        fireEvent.focus(button);\n        expect(document.activeElement).toBe(button);\n      });\n    });\n\n    it('debe mantener orden lógico de tabulación', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      // Simular navegación por Tab\n      const searchInput = screen.getByRole('searchbox');\n      fireEvent.focus(searchInput);\n      \n      // El orden debe ser: logo -> búsqueda -> botones\n      expect(document.activeElement).toBe(searchInput);\n    });\n  });\n\n  describe('Anuncios para Screen Readers', () => {\n    it('debe tener roles ARIA apropiados', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      const searchInput = screen.getByRole('searchbox');\n      expect(searchInput).toHaveAttribute('role', 'searchbox');\n      \n      const cartIcon = screen.getByTestId('cart-icon');\n      expect(cartIcon).toHaveAttribute('role', 'img');\n    });\n\n    it('debe anunciar cambios de estado', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      // Verificar que los elementos interactivos tienen estados claros\n      const buttons = screen.getAllByRole('button');\n      \n      buttons.forEach(button => {\n        // No debe tener aria-disabled sin razón\n        expect(button).not.toHaveAttribute('aria-disabled', 'true');\n      });\n    });\n  });\n\n  describe('Responsive Accessibility', () => {\n    it('debe mantener accesibilidad en mobile', () => {\n      // Simular viewport mobile\n      Object.defineProperty(window, 'innerWidth', {\n        writable: true,\n        configurable: true,\n        value: 375,\n      });\n\n      const { container } = render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      // Verificar que sigue siendo accesible\n      expect(screen.getByRole('banner')).toBeInTheDocument();\n      expect(screen.getByRole('searchbox')).toBeInTheDocument();\n    });\n\n    it('debe adaptar tamaños de touch targets', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      const buttons = screen.getAllByRole('button');\n      \n      // Los botones deben tener tamaño mínimo de 44px (WCAG)\n      buttons.forEach(button => {\n        const computedStyle = window.getComputedStyle(button);\n        // En tests, verificamos que tienen padding apropiado\n        expect(button).toHaveStyle('padding: 0.5rem'); // p-2 = 8px = suficiente para 44px total\n      });\n    });\n  });\n\n  describe('Compatibilidad con Tecnologías Asistivas', () => {\n    it('debe funcionar con lectores de pantalla', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      // Verificar que todos los elementos interactivos tienen nombres accesibles\n      const searchInput = screen.getByRole('searchbox');\n      expect(searchInput).toHaveAccessibleName();\n      \n      const buttons = screen.getAllByRole('button');\n      buttons.forEach(button => {\n        expect(button).toHaveAccessibleName();\n      });\n    });\n\n    it('debe soportar navegación por voz', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      // Los elementos deben tener nombres únicos y descriptivos\n      const searchInput = screen.getByRole('searchbox');\n      expect(searchInput).toHaveAttribute('aria-label', 'Buscar productos de pinturería');\n    });\n  });\n});\n"],"names":["jest","mock","useRouter","push","fn","replace","prefetch","useSearchParams","get","ClerkProvider","children","div","SignedIn","data-testid","SignedOut","UserButton","role","tabIndex","useUser","isSignedIn","user","isLoaded","useGeolocation","detectedZone","id","name","requestLocation","permissionStatus","isLoading","error","location","testLocation","deliveryZones","useCartAnimation","isAnimating","SearchAutocompleteIntegrated","onSearch","input","placeholder","aria-label","onChange","e","target","value","OptimizedCartIcon","alt","HeaderLogo","img","src","expect","extend","toHaveNoViolations","TestWrapper","queryClient","QueryClient","defaultOptions","queries","retry","mutations","Provider","store","QueryClientProvider","client","CartModalProvider","describe","it","container","render","Header","results","axe","AuthSection","variant","screen","getByRole","toBeInTheDocument","searchInput","buttons","getAllByRole","length","toBeGreaterThan","banner","toHaveAttribute","forEach","button","not","fireEvent","keyDown","key","code","cartIcon","getByTestId","logo","header","computedStyle","window","getComputedStyle","mouseEnter","focus","toBeVisible","document","activeElement","toBe","Object","defineProperty","writable","configurable","toHaveStyle","toHaveAccessibleName"],"mappings":"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"}