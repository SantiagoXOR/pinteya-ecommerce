{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useSearchOptimized.ts"],"sourcesContent":["// ===================================\r\n// HOOK: useSearchOptimized - Sistema de b√∫squeda con TanStack Query\r\n// ===================================\r\n\r\nimport { useState, useCallback, useEffect, useRef } from 'react';\r\nimport { useQuery, useQueryClient } from '@tanstack/react-query';\r\nimport { useDebouncedCallback } from 'use-debounce';\r\nimport { searchProducts } from '@/lib/api/products';\r\nimport { ProductWithCategory } from '@/types/api';\r\nimport { searchQueryKeys, searchQueryConfig } from '@/lib/query-client';\r\nimport { useSearchErrorHandler } from './useSearchErrorHandler';\r\nimport { useSearchToast } from './useSearchToast';\r\nimport { useSearchNavigation } from './useSearchNavigation';\r\nimport { useTrendingSearches } from './useTrendingSearches';\r\nimport { useRecentSearches } from './useRecentSearches';\r\nimport { SEARCH_CONSTANTS } from '@/constants/shop';\r\n\r\n// ===================================\r\n// TIPOS\r\n// ===================================\r\n\r\nexport interface SearchSuggestion {\r\n  id: string;\r\n  type: 'product' | 'category' | 'recent' | 'trending';\r\n  title: string;\r\n  subtitle?: string;\r\n  image?: string;\r\n  badge?: string;\r\n  href: string;\r\n}\r\n\r\nexport interface UseSearchOptimizedOptions {\r\n  /** Tiempo de debounce en milisegundos */\r\n  debounceMs?: number;\r\n  /** N√∫mero m√°ximo de sugerencias */\r\n  maxSuggestions?: number;\r\n  /** L√≠mite de resultados de b√∫squeda */\r\n  searchLimit?: number;\r\n  /** Guardar b√∫squedas recientes */\r\n  saveRecentSearches?: boolean;\r\n  /** Habilitar prefetch de sugerencias */\r\n  enablePrefetch?: boolean;\r\n  /** Callback cuando se realiza una b√∫squeda */\r\n  onSearch?: (query: string, results: ProductWithCategory[]) => void;\r\n  /** Callback cuando se selecciona una sugerencia */\r\n  onSuggestionSelect?: (suggestion: SearchSuggestion) => void;\r\n}\r\n\r\n// ===================================\r\n// HOOK PRINCIPAL\r\n// ===================================\r\n\r\nexport function useSearchOptimized(options: UseSearchOptimizedOptions = {}) {\r\n  const {\r\n    debounceMs = 150,\r\n    maxSuggestions = 6,\r\n    searchLimit = 12,\r\n    saveRecentSearches = true,\r\n    enablePrefetch = true,\r\n    onSearch,\r\n    onSuggestionSelect,\r\n  } = options;\r\n\r\n  // Estados locales\r\n  const [query, setQuery] = useState('');\r\n  const [debouncedQuery, setDebouncedQuery] = useState('');\r\n  const [recentSearches, setRecentSearches] = useState<string[]>([]);\r\n  const [hasSearched, setHasSearched] = useState(false);\r\n\r\n  // Hooks externos\r\n  const queryClient = useQueryClient();\r\n  const errorHandler = useSearchErrorHandler();\r\n  const toastHandler = useSearchToast();\r\n  const navigation = useSearchNavigation({\r\n    scrollToTop: true,\r\n    onBeforeNavigate: (url) => console.log('üîç Navegando a:', url),\r\n    onAfterNavigate: (url) => console.log('‚úÖ Navegaci√≥n completada:', url),\r\n  });\r\n\r\n  // Hooks para trending y recent searches\r\n  const { trendingSearches, trackSearch } = useTrendingSearches({\r\n    limit: 4,\r\n    enabled: true\r\n  });\r\n\r\n  const {\r\n    recentSearches: recentSearchesList,\r\n    addSearch: addRecentSearch,\r\n    getRecentSearches\r\n  } = useRecentSearches({\r\n    maxSearches: SEARCH_CONSTANTS.MAX_RECENT_SEARCHES,\r\n    enablePersistence: saveRecentSearches,\r\n    expirationDays: SEARCH_CONSTANTS.RECENT_SEARCHES_EXPIRATION_DAYS\r\n  });\r\n\r\n  // ===================================\r\n  // DEBOUNCED QUERY UPDATE\r\n  // ===================================\r\n\r\n  const updateDebouncedQuery = useDebouncedCallback(\r\n    (value: string) => {\r\n      setDebouncedQuery(value);\r\n\r\n      // Analytics tracking\r\n      if (value.trim()) {\r\n        console.log('üîç useSearchOptimized: Query debounced:', value);\r\n        console.log('üîç useSearchOptimized: New debouncedQuery value:', value);\r\n        console.log('üîç useSearchOptimized: Value type:', typeof value);\r\n        console.log('üîç useSearchOptimized: Value length:', value?.length);\r\n        console.log('üîç useSearchOptimized: Query enabled condition will be:', !!value?.trim());\r\n      }\r\n    },\r\n    debounceMs,\r\n    {\r\n      maxWait: 2000,\r\n      leading: false,\r\n      trailing: true,\r\n    }\r\n  );\r\n\r\n  // ===================================\r\n  // TANSTACK QUERY INTEGRATION\r\n  // ===================================\r\n\r\n  // Query principal para b√∫squedas\r\n  const { \r\n    data: searchResults, \r\n    isLoading, \r\n    error, \r\n    isFetching,\r\n    isStale,\r\n    dataUpdatedAt \r\n  } = useQuery({\r\n    queryKey: searchQueryKeys.search(debouncedQuery),\r\n    queryFn: async ({ queryKey, signal }) => {\r\n      const [, , searchQuery] = queryKey;\r\n      if (!searchQuery?.trim()) return [];\r\n      \r\n      console.log('üîç useSearchOptimized: Executing search for:', searchQuery);\r\n\r\n      // AbortController para cancelar requests (nota: searchProducts no soporta signal a√∫n)\r\n      const response = await searchProducts(searchQuery, maxSuggestions);\r\n      console.log('üîç useSearchOptimized: API response:', response);\r\n      console.log('üîç useSearchOptimized: Response data:', response.data);\r\n      console.log('üîç useSearchOptimized: Response success:', response.success);\r\n      return response.data || [];\r\n    },\r\n    enabled: (() => {\r\n      const isEnabled = !!debouncedQuery?.trim() && debouncedQuery.length >= 1;\r\n      console.log('üîç useSearchOptimized: Query enabled condition:', isEnabled, 'for query:', debouncedQuery);\r\n      return isEnabled;\r\n    })(),\r\n    ...searchQueryConfig,\r\n  });\r\n\r\n  // ===================================\r\n  // SUGGESTIONS GENERATION\r\n  // ===================================\r\n\r\n  const suggestions: SearchSuggestion[] = (() => {\r\n    const allSuggestions: SearchSuggestion[] = [];\r\n    const hasQuery = !!debouncedQuery?.trim();\r\n\r\n    console.log('üîç useSearchOptimized: === GENERATING SUGGESTIONS ===');\r\n    console.log('üîç useSearchOptimized: hasQuery:', hasQuery);\r\n    console.log('üîç useSearchOptimized: debouncedQuery:', `\"${debouncedQuery}\"`);\r\n    console.log('üîç useSearchOptimized: query (current):', `\"${query}\"`);\r\n    console.log('üîç useSearchOptimized: isLoading:', isLoading);\r\n    console.log('üîç useSearchOptimized: error:', error);\r\n    console.log('üîç useSearchOptimized: searchResults:', searchResults);\r\n    console.log('üîç useSearchOptimized: searchResults type:', typeof searchResults);\r\n    console.log('üîç useSearchOptimized: searchResults.data isArray:', Array.isArray(searchResults?.data));\r\n    console.log('üîç useSearchOptimized: searchResults.data length:', searchResults?.data?.length);\r\n\r\n    if (hasQuery) {\r\n      // CUANDO HAY TEXTO: Priorizar productos SIEMPRE\r\n      console.log('üîç useSearchOptimized: *** PROCESSING QUERY MODE ***');\r\n\r\n      if (Array.isArray(searchResults?.data) && searchResults.data.length > 0) {\r\n        console.log('üîç useSearchOptimized: Processing', searchResults.data.length, 'products');\r\n        const productSuggestions = searchResults.data.map((product) => {\r\n          console.log('üîç useSearchOptimized: Mapping product:', product.name);\r\n          return {\r\n            id: product.id.toString(),\r\n            type: 'product' as const,\r\n            title: product.name,\r\n            subtitle: product.category?.name,\r\n            image: product.images?.previews?.[0] || product.images?.thumbnails?.[0],\r\n            badge: product.stock > 0 ? 'En stock' : 'Sin stock',\r\n            href: `/products/${product.id}`,\r\n          };\r\n        });\r\n        allSuggestions.push(...productSuggestions);\r\n        console.log('üîç useSearchOptimized: ‚úÖ Added', productSuggestions.length, 'product suggestions');\r\n      } else {\r\n        console.log('üîç useSearchOptimized: ‚ùå No products found or invalid searchResults');\r\n        console.log('üîç useSearchOptimized: searchResults details:', {\r\n          isArray: Array.isArray(searchResults?.data),\r\n          length: searchResults?.data?.length,\r\n          value: searchResults\r\n        });\r\n      }\r\n\r\n      // Solo agregar recent/trending si hay muy pocos productos\r\n      if (allSuggestions.length < 2) {\r\n        console.log('üîç useSearchOptimized: Adding recent searches as fallback');\r\n        const recentSuggestions = getRecentSearches(2).map((search, index) => ({\r\n          id: `recent-${index}`,\r\n          type: 'recent' as const,\r\n          title: search,\r\n          href: `/shop?q=${encodeURIComponent(search)}`,\r\n        }));\r\n        allSuggestions.push(...recentSuggestions);\r\n        console.log('üîç useSearchOptimized: Added', recentSuggestions.length, 'recent suggestions as fallback');\r\n      }\r\n    } else {\r\n      // CUANDO NO HAY TEXTO: Mostrar trending y recent\r\n      console.log('üîç useSearchOptimized: *** PROCESSING EMPTY MODE ***');\r\n\r\n      // Agregar b√∫squedas recientes primero\r\n      const recentSuggestions = getRecentSearches(3).map((search, index) => ({\r\n        id: `recent-${index}`,\r\n        type: 'recent' as const,\r\n        title: search,\r\n        href: `/shop?q=${encodeURIComponent(search)}`,\r\n      }));\r\n      allSuggestions.push(...recentSuggestions);\r\n      console.log('üîç useSearchOptimized: Added', recentSuggestions.length, 'recent suggestions');\r\n\r\n      // Agregar trending searches\r\n      if (allSuggestions.length < maxSuggestions) {\r\n        const remainingSlots = maxSuggestions - allSuggestions.length;\r\n        const trendingSuggestions = trendingSearches.slice(0, remainingSlots).map(trending => ({\r\n          id: trending.id,\r\n          type: 'trending' as const,\r\n          title: trending.query,\r\n          href: trending.href,\r\n          badge: trending.count ? `${trending.count}` : undefined\r\n        }));\r\n        allSuggestions.push(...trendingSuggestions);\r\n        console.log('üîç useSearchOptimized: Added', trendingSuggestions.length, 'trending suggestions');\r\n      }\r\n    }\r\n\r\n    const finalSuggestions = allSuggestions.slice(0, maxSuggestions);\r\n    console.log('üîç useSearchOptimized: === FINAL RESULT ===');\r\n    console.log('üîç useSearchOptimized: Final suggestions count:', finalSuggestions.length);\r\n    console.log('üîç useSearchOptimized: Final suggestions types:', finalSuggestions.map(s => s.type));\r\n    console.log('üîç useSearchOptimized: Final suggestions titles:', finalSuggestions.map(s => s.title));\r\n    console.log('üîç useSearchOptimized: === END SUGGESTIONS ===');\r\n\r\n    return finalSuggestions;\r\n  })();\r\n\r\n  console.log('üîç useSearchOptimized: Generated suggestions:', suggestions.length, suggestions);\r\n\r\n  // ===================================\r\n  // SEARCH FUNCTIONS\r\n  // ===================================\r\n\r\n  const searchWithDebounce = useCallback((searchQuery: string) => {\r\n    setQuery(searchQuery);\r\n    updateDebouncedQuery(searchQuery);\r\n\r\n    // Prefetch si est√° habilitado y la query es v√°lida\r\n    if (enablePrefetch && searchQuery.trim().length >= 1) {\r\n      // Prefetch de datos de b√∫squeda\r\n      queryClient.prefetchQuery({\r\n        queryKey: searchQueryKeys.search(searchQuery),\r\n        queryFn: () => searchProducts(searchQuery, maxSuggestions),\r\n        ...searchQueryConfig,\r\n      });\r\n\r\n      // Prefetch de p√°gina de resultados\r\n      navigation.prefetchSearch(searchQuery.trim());\r\n    }\r\n  }, [updateDebouncedQuery, enablePrefetch, queryClient, maxSuggestions, navigation]);\r\n\r\n  const executeSearch = useCallback(async (searchQuery: string) => {\r\n    if (!searchQuery.trim()) return;\r\n\r\n    try {\r\n      setHasSearched(true);\r\n      \r\n      // Guardar en historial usando el hook\r\n      if (saveRecentSearches) {\r\n        addRecentSearch(searchQuery.trim());\r\n      }\r\n\r\n      // Registrar en trending searches\r\n      trackSearch(searchQuery.trim()).catch(console.warn);\r\n\r\n      // Navegar a p√°gina de resultados usando navegaci√≥n optimizada\r\n      navigation.navigateToSearch(searchQuery.trim());\r\n\r\n      // Callback externo\r\n      if (onSearch && searchResults) {\r\n        onSearch(searchQuery, searchResults);\r\n      }\r\n\r\n      toastHandler.showSuccessToast(searchQuery, searchResults?.data?.length || 0);\r\n      \r\n    } catch (error) {\r\n      console.error('‚ùå useSearchOptimized: Error en executeSearch:', error);\r\n      errorHandler.handleError(error);\r\n    }\r\n  }, [saveRecentSearches, recentSearches, navigation, onSearch, searchResults, toastHandler, errorHandler]);\r\n\r\n  const selectSuggestion = useCallback((suggestion: SearchSuggestion) => {\r\n    console.log('‚úÖ useSearchOptimized: Suggestion selected:', suggestion.title);\r\n\r\n    // Navegar seg√∫n el tipo de sugerencia\r\n    if (suggestion.type === 'product') {\r\n      navigation.navigateToProduct(suggestion.id);\r\n    } else {\r\n      // Para b√∫squedas recientes o trending, navegar a b√∫squeda\r\n      navigation.navigateToSearch(suggestion.title);\r\n    }\r\n\r\n    // Callback externo\r\n    if (onSuggestionSelect) {\r\n      onSuggestionSelect(suggestion);\r\n    }\r\n\r\n    toastHandler.showInfoToast(`${suggestion.type === 'product' ? 'Producto' : 'B√∫squeda'} seleccionado`, suggestion.title);\r\n  }, [navigation, onSuggestionSelect, toastHandler]);\r\n\r\n  const clearSearch = useCallback(() => {\r\n    setQuery('');\r\n    setDebouncedQuery('');\r\n    setHasSearched(false);\r\n    \r\n    // Limpiar cache de b√∫squedas si es necesario\r\n    queryClient.removeQueries({ queryKey: searchQueryKeys.searches() });\r\n  }, [queryClient]);\r\n\r\n  // ===================================\r\n  // LIFECYCLE\r\n  // ===================================\r\n\r\n  const initialize = useCallback(() => {\r\n    // Cargar b√∫squedas recientes\r\n    if (saveRecentSearches) {\r\n      try {\r\n        const saved = localStorage.getItem('pinteya-recent-searches');\r\n        if (saved && saved.trim() !== '' && saved !== '\"\"' && saved !== \"''\") {\r\n          // Validar que no est√© corrupto\r\n          if (saved.includes('\"\"') && saved.length < 5) {\r\n            console.warn('Detected corrupted recent searches data, cleaning up');\r\n            localStorage.removeItem('pinteya-recent-searches');\r\n            return;\r\n          }\r\n\r\n          const parsed = JSON.parse(saved);\r\n          // Verificar que sea un array v√°lido\r\n          if (Array.isArray(parsed)) {\r\n            setRecentSearches(parsed);\r\n          } else {\r\n            console.warn('Invalid recent searches format, resetting');\r\n            localStorage.removeItem('pinteya-recent-searches');\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.warn('Error cargando b√∫squedas recientes:', error);\r\n        // Limpiar datos corruptos\r\n        localStorage.removeItem('pinteya-recent-searches');\r\n      }\r\n    }\r\n  }, [saveRecentSearches]);\r\n\r\n  const cleanup = useCallback(() => {\r\n    // Limpiar debounce y cache si es necesario\r\n    updateDebouncedQuery.cancel();\r\n  }, [updateDebouncedQuery]);\r\n\r\n  // Inicializar al montar\r\n  useEffect(() => {\r\n    initialize();\r\n    return cleanup;\r\n  }, [initialize, cleanup]);\r\n\r\n  // ===================================\r\n  // RETURN\r\n  // ===================================\r\n\r\n  return {\r\n    // Estado de b√∫squeda\r\n    query,\r\n    results: searchResults || [],\r\n    suggestions,\r\n    isLoading,\r\n    error: error?.message || null,\r\n    hasSearched,\r\n    recentSearches: recentSearchesList,\r\n    trendingSearches,\r\n\r\n    // Estados de TanStack Query\r\n    isFetching,\r\n    isStale,\r\n    dataUpdatedAt,\r\n\r\n    // Estado de errores y toasts\r\n    searchError: errorHandler.currentError,\r\n    isRetrying: errorHandler.isRetrying,\r\n    retryCount: errorHandler.retryCount,\r\n    toasts: toastHandler.toasts,\r\n\r\n    // Funciones principales\r\n    searchWithDebounce,\r\n    executeSearch,\r\n    selectSuggestion,\r\n    clearSearch,\r\n    initialize,\r\n    cleanup,\r\n\r\n    // Funciones de manejo de errores\r\n    clearError: errorHandler.clearError,\r\n    retryManually: errorHandler.retryManually,\r\n\r\n    // Funciones de toast\r\n    removeToast: toastHandler.removeToast,\r\n    clearToasts: toastHandler.clearToasts,\r\n\r\n    // Utilidades de cache\r\n    invalidateSearch: (searchQuery: string) =>\r\n      queryClient.invalidateQueries({ queryKey: searchQueryKeys.search(searchQuery) }),\r\n    prefetchSearch: (searchQuery: string) =>\r\n      queryClient.prefetchQuery({\r\n        queryKey: searchQueryKeys.search(searchQuery),\r\n        queryFn: () => searchProducts(searchQuery, maxSuggestions),\r\n        ...searchQueryConfig,\r\n      }),\r\n\r\n    // Funciones de navegaci√≥n optimizada\r\n    navigateToSearch: navigation.navigateToSearch,\r\n    navigateToProduct: navigation.navigateToProduct,\r\n    navigateToCategory: navigation.navigateToCategory,\r\n    prefetchSearchPage: navigation.prefetchSearch,\r\n    prefetchProductPage: navigation.prefetchProduct,\r\n    getCurrentSearchQuery: navigation.getCurrentSearchQuery,\r\n    buildSearchUrl: navigation.buildSearchUrl,\r\n  };\r\n}\r\n\r\nexport default useSearchOptimized;\r\n"],"names":["useSearchOptimized","options","debounceMs","maxSuggestions","searchLimit","saveRecentSearches","enablePrefetch","onSearch","onSuggestionSelect","query","setQuery","useState","debouncedQuery","setDebouncedQuery","recentSearches","setRecentSearches","hasSearched","setHasSearched","queryClient","useQueryClient","errorHandler","useSearchErrorHandler","toastHandler","useSearchToast","navigation","useSearchNavigation","scrollToTop","onBeforeNavigate","url","console","log","onAfterNavigate","trendingSearches","trackSearch","useTrendingSearches","limit","enabled","recentSearchesList","addSearch","addRecentSearch","getRecentSearches","useRecentSearches","maxSearches","SEARCH_CONSTANTS","MAX_RECENT_SEARCHES","enablePersistence","expirationDays","RECENT_SEARCHES_EXPIRATION_DAYS","updateDebouncedQuery","useDebouncedCallback","value","trim","length","maxWait","leading","trailing","data","searchResults","isLoading","error","isFetching","isStale","dataUpdatedAt","useQuery","queryKey","searchQueryKeys","search","queryFn","signal","searchQuery","response","searchProducts","success","isEnabled","searchQueryConfig","suggestions","allSuggestions","hasQuery","Array","isArray","productSuggestions","map","product","name","id","toString","type","title","subtitle","category","image","images","previews","thumbnails","badge","stock","href","push","recentSuggestions","index","encodeURIComponent","remainingSlots","trendingSuggestions","slice","trending","count","undefined","finalSuggestions","s","searchWithDebounce","useCallback","prefetchQuery","prefetchSearch","executeSearch","catch","warn","navigateToSearch","showSuccessToast","handleError","selectSuggestion","suggestion","navigateToProduct","showInfoToast","clearSearch","removeQueries","searches","initialize","saved","localStorage","getItem","includes","removeItem","parsed","JSON","parse","cleanup","cancel","useEffect","results","message","searchError","currentError","isRetrying","retryCount","toasts","clearError","retryManually","removeToast","clearToasts","invalidateSearch","invalidateQueries","navigateToCategory","prefetchSearchPage","prefetchProductPage","prefetchProduct","getCurrentSearchQuery","buildSearchUrl"],"mappings":"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"}