{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\ui\\form.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\n// Form Container\r\nexport interface FormProps extends React.FormHTMLAttributes<HTMLFormElement> {\r\n  children: React.ReactNode\r\n}\r\n\r\nconst Form = React.forwardRef<HTMLFormElement, FormProps>(\r\n  ({ className, children, ...props }, ref) => {\r\n    return (\r\n      <form\r\n        ref={ref}\r\n        className={cn(\"space-y-6\", className)}\r\n        {...props}\r\n      >\r\n        {children}\r\n      </form>\r\n    )\r\n  }\r\n)\r\nForm.displayName = \"Form\"\r\n\r\n// Form Section para agrupar campos relacionados\r\nexport interface FormSectionProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  title?: string\r\n  description?: string\r\n  children: React.ReactNode\r\n}\r\n\r\nconst FormSection = React.forwardRef<HTMLDivElement, FormSectionProps>(\r\n  ({ className, title, description, children, ...props }, ref) => {\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        className={cn(\"space-y-4\", className)}\r\n        {...props}\r\n      >\r\n        {(title || description) && (\r\n          <div className=\"space-y-1\">\r\n            {title && (\r\n              <h3 className=\"text-lg font-medium text-gray-900\">{title}</h3>\r\n            )}\r\n            {description && (\r\n              <p className=\"text-sm text-gray-600\">{description}</p>\r\n            )}\r\n          </div>\r\n        )}\r\n        <div className=\"space-y-4\">\r\n          {children}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n)\r\nFormSection.displayName = \"FormSection\"\r\n\r\n// Form Row para campos en línea\r\nexport interface FormRowProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  children: React.ReactNode\r\n  columns?: 1 | 2 | 3 | 4\r\n  gap?: \"sm\" | \"md\" | \"lg\"\r\n}\r\n\r\nconst FormRow = React.forwardRef<HTMLDivElement, FormRowProps>(\r\n  ({ className, children, columns = 2, gap = \"md\", ...props }, ref) => {\r\n    const gapClasses = {\r\n      sm: \"gap-2\",\r\n      md: \"gap-4\", \r\n      lg: \"gap-6\",\r\n    }\r\n\r\n    const columnClasses = {\r\n      1: \"grid-cols-1\",\r\n      2: \"grid-cols-1 md:grid-cols-2\",\r\n      3: \"grid-cols-1 md:grid-cols-3\",\r\n      4: \"grid-cols-1 md:grid-cols-2 lg:grid-cols-4\",\r\n    }\r\n\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        className={cn(\r\n          \"grid\",\r\n          columnClasses[columns],\r\n          gapClasses[gap],\r\n          className\r\n        )}\r\n        {...props}\r\n      >\r\n        {children}\r\n      </div>\r\n    )\r\n  }\r\n)\r\nFormRow.displayName = \"FormRow\"\r\n\r\n// Form Field Container genérico\r\nexport interface FormFieldProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  children: React.ReactNode\r\n  error?: string\r\n  required?: boolean\r\n}\r\n\r\nconst FormField = React.forwardRef<HTMLDivElement, FormFieldProps>(\r\n  ({ className, children, error, required, ...props }, ref) => {\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        className={cn(\"space-y-2\", className)}\r\n        {...props}\r\n      >\r\n        {children}\r\n      </div>\r\n    )\r\n  }\r\n)\r\nFormField.displayName = \"FormField\"\r\n\r\n// Form Actions para botones\r\nexport interface FormActionsProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  children: React.ReactNode\r\n  align?: \"left\" | \"center\" | \"right\" | \"between\"\r\n  orientation?: \"horizontal\" | \"vertical\"\r\n}\r\n\r\nconst FormActions = React.forwardRef<HTMLDivElement, FormActionsProps>(\r\n  ({ className, children, align = \"right\", orientation = \"horizontal\", ...props }, ref) => {\r\n    const alignClasses = {\r\n      left: \"justify-start\",\r\n      center: \"justify-center\", \r\n      right: \"justify-end\",\r\n      between: \"justify-between\",\r\n    }\r\n\r\n    const orientationClasses = {\r\n      horizontal: \"flex flex-row gap-3\",\r\n      vertical: \"flex flex-col gap-2\",\r\n    }\r\n\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        className={cn(\r\n          orientationClasses[orientation],\r\n          alignClasses[align],\r\n          \"pt-4\",\r\n          className\r\n        )}\r\n        {...props}\r\n      >\r\n        {children}\r\n      </div>\r\n    )\r\n  }\r\n)\r\nFormActions.displayName = \"FormActions\"\r\n\r\n// Form Message para mostrar mensajes de estado\r\nexport interface FormMessageProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  children: React.ReactNode\r\n  variant?: \"info\" | \"success\" | \"warning\" | \"error\"\r\n}\r\n\r\nconst FormMessage = React.forwardRef<HTMLDivElement, FormMessageProps>(\r\n  ({ className, children, variant = \"info\", ...props }, ref) => {\r\n    const variantClasses = {\r\n      info: \"bg-blue-50 border-blue-200 text-blue-800\",\r\n      success: \"bg-green-50 border-green-200 text-green-800\",\r\n      warning: \"bg-yellow-50 border-yellow-200 text-yellow-800\",\r\n      error: \"bg-red-50 border-red-200 text-red-800\",\r\n    }\r\n\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        className={cn(\r\n          \"rounded-md border p-4 text-sm\",\r\n          variantClasses[variant],\r\n          className\r\n        )}\r\n        {...props}\r\n      >\r\n        {children}\r\n      </div>\r\n    )\r\n  }\r\n)\r\nFormMessage.displayName = \"FormMessage\"\r\n\r\n// Hook para manejo de formularios\r\nexport interface UseFormOptions<T = Record<string, any>> {\r\n  defaultValues?: T\r\n  onSubmit?: (data: T) => void | Promise<void>\r\n  validate?: (data: T) => Record<string, string> | null\r\n}\r\n\r\nexport function useForm<T = Record<string, any>>({ defaultValues = {} as T, onSubmit, validate }: UseFormOptions<T> = {}) {\r\n  const [values, setValues] = React.useState<T>(defaultValues)\r\n  const [errors, setErrors] = React.useState<Record<string, string>>({})\r\n  const [isSubmitting, setIsSubmitting] = React.useState(false)\r\n  const [submitCount, setSubmitCount] = React.useState(0)\r\n\r\n  const setValue = React.useCallback((name: string, value: any) => {\r\n    setValues(prev => ({ ...prev, [name]: value }))\r\n    // Clear error when user starts typing\r\n    if (errors[name]) {\r\n      setErrors(prev => {\r\n        const newErrors = { ...prev }\r\n        delete newErrors[name]\r\n        return newErrors\r\n      })\r\n    }\r\n  }, [errors])\r\n\r\n  const setError = React.useCallback((name: string, error: string) => {\r\n    setErrors(prev => ({ ...prev, [name]: error }))\r\n  }, [])\r\n\r\n  const clearErrors = React.useCallback(() => {\r\n    setErrors({})\r\n  }, [])\r\n\r\n  const reset = React.useCallback((newValues = defaultValues) => {\r\n    setValues(newValues)\r\n    setErrors({})\r\n    setSubmitCount(0)\r\n  }, [defaultValues])\r\n\r\n  const handleSubmit = React.useCallback(async (e?: React.FormEvent) => {\r\n    e?.preventDefault()\r\n    \r\n    setIsSubmitting(true)\r\n    setSubmitCount(prev => prev + 1)\r\n    \r\n    try {\r\n      // Validate if validator is provided\r\n      if (validate) {\r\n        const validationErrors = validate(values)\r\n        if (validationErrors) {\r\n          setErrors(validationErrors)\r\n          return\r\n        }\r\n      }\r\n      \r\n      // Clear errors and submit\r\n      setErrors({})\r\n      await onSubmit?.(values)\r\n    } catch (error) {\r\n      console.error('Form submission error:', error)\r\n    } finally {\r\n      setIsSubmitting(false)\r\n    }\r\n  }, [values, validate, onSubmit])\r\n\r\n  return {\r\n    values,\r\n    errors,\r\n    isSubmitting,\r\n    submitCount,\r\n    setValue,\r\n    setError,\r\n    clearErrors,\r\n    reset,\r\n    handleSubmit,\r\n    register: (name: string) => ({\r\n      value: (values as any)[name] || '',\r\n      onChange: (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\r\n        setValue(name, e.target.value)\r\n      },\r\n      error: errors[name],\r\n    }),\r\n  }\r\n}\r\n\r\n// Componente de ejemplo para formulario de contacto\r\nexport interface ContactFormData {\r\n  name: string\r\n  email: string\r\n  subject: string\r\n  message: string\r\n  acceptTerms: boolean\r\n}\r\n\r\nexport interface ContactFormProps {\r\n  onSubmit?: (data: ContactFormData) => void | Promise<void>\r\n  className?: string\r\n}\r\n\r\nexport function ContactForm({ onSubmit, className }: ContactFormProps) {\r\n  const { values, errors, isSubmitting, handleSubmit, register } = useForm<ContactFormData>({\r\n    defaultValues: {\r\n      name: '',\r\n      email: '',\r\n      subject: '',\r\n      message: '',\r\n      acceptTerms: false,\r\n    },\r\n    onSubmit,\r\n    validate: (data) => {\r\n      const errors: Record<string, string> = {}\r\n      \r\n      if (!data.name?.trim()) errors.name = 'El nombre es requerido'\r\n      if (!data.email?.trim()) errors.email = 'El email es requerido'\r\n      else if (!/\\S+@\\S+\\.\\S+/.test(data.email)) errors.email = 'Email inválido'\r\n      if (!data.subject?.trim()) errors.subject = 'El asunto es requerido'\r\n      if (!data.message?.trim()) errors.message = 'El mensaje es requerido'\r\n      if (!data.acceptTerms) errors.acceptTerms = 'Debes aceptar los términos'\r\n      \r\n      return Object.keys(errors).length > 0 ? errors : null\r\n    },\r\n  })\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit} className={className}>\r\n      <FormSection\r\n        title=\"Formulario de Contacto\"\r\n        description=\"Completa el formulario y nos pondremos en contacto contigo\"\r\n      >\r\n        <FormRow columns={2}>\r\n          <FormField>\r\n            {/* Aquí irían los componentes Input, etc. */}\r\n            <p className=\"text-sm text-gray-600\">\r\n              Componentes Input, Select, Textarea, etc. se integrarían aquí\r\n            </p>\r\n          </FormField>\r\n        </FormRow>\r\n        \r\n        <FormActions>\r\n          <button\r\n            type=\"button\"\r\n            className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50\"\r\n          >\r\n            Cancelar\r\n          </button>\r\n          <button\r\n            type=\"submit\"\r\n            disabled={isSubmitting}\r\n            className=\"px-4 py-2 text-sm font-medium text-white bg-primary rounded-md hover:bg-primary-hover disabled:opacity-50\"\r\n          >\r\n            {isSubmitting ? 'Enviando...' : 'Enviar'}\r\n          </button>\r\n        </FormActions>\r\n      </FormSection>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport {\r\n  Form,\r\n  FormSection,\r\n  FormRow,\r\n  FormField,\r\n  FormActions,\r\n  FormMessage,\r\n}\r\n"],"names":["ContactForm","Form","FormActions","FormField","FormMessage","FormRow","FormSection","useForm","React","forwardRef","className","children","props","ref","form","cn","displayName","title","description","div","h3","p","columns","gap","gapClasses","sm","md","lg","columnClasses","error","required","align","orientation","alignClasses","left","center","right","between","orientationClasses","horizontal","vertical","variant","variantClasses","info","success","warning","defaultValues","onSubmit","validate","values","setValues","useState","errors","setErrors","isSubmitting","setIsSubmitting","submitCount","setSubmitCount","setValue","useCallback","name","value","prev","newErrors","setError","clearErrors","reset","newValues","handleSubmit","e","preventDefault","validationErrors","console","register","onChange","target","email","subject","message","acceptTerms","data","trim","test","Object","keys","length","button","type","disabled"],"mappings":"AAAA;;;;;;;;;;;;QAmSgBA;eAAAA;;QA4DdC;eAAAA;;QAIAC;eAAAA;;QADAC;eAAAA;;QAEAC;eAAAA;;QAHAC;eAAAA;;QADAC;eAAAA;;QAzJcC;eAAAA;;;;+DArMO;uBACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOnB,MAAMN,qBAAOO,OAAMC,UAAU,CAC3B,CAAC,EAAEC,SAAS,EAAEC,QAAQ,EAAE,GAAGC,OAAO,EAAEC;IAClC,qBACE,qBAACC;QACCD,KAAKA;QACLH,WAAWK,IAAAA,SAAE,EAAC,aAAaL;QAC1B,GAAGE,KAAK;kBAERD;;AAGP;AAEFV,KAAKe,WAAW,GAAG;AASnB,MAAMV,4BAAcE,OAAMC,UAAU,CAClC,CAAC,EAAEC,SAAS,EAAEO,KAAK,EAAEC,WAAW,EAAEP,QAAQ,EAAE,GAAGC,OAAO,EAAEC;IACtD,qBACE,sBAACM;QACCN,KAAKA;QACLH,WAAWK,IAAAA,SAAE,EAAC,aAAaL;QAC1B,GAAGE,KAAK;;YAEPK,CAAAA,SAASC,WAAU,mBACnB,sBAACC;gBAAIT,WAAU;;oBACZO,uBACC,qBAACG;wBAAGV,WAAU;kCAAqCO;;oBAEpDC,6BACC,qBAACG;wBAAEX,WAAU;kCAAyBQ;;;;0BAI5C,qBAACC;gBAAIT,WAAU;0BACZC;;;;AAIT;AAEFL,YAAYU,WAAW,GAAG;AAS1B,MAAMX,wBAAUG,OAAMC,UAAU,CAC9B,CAAC,EAAEC,SAAS,EAAEC,QAAQ,EAAEW,UAAU,CAAC,EAAEC,MAAM,IAAI,EAAE,GAAGX,OAAO,EAAEC;IAC3D,MAAMW,aAAa;QACjBC,IAAI;QACJC,IAAI;QACJC,IAAI;IACN;IAEA,MAAMC,gBAAgB;QACpB,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;IACL;IAEA,qBACE,qBAACT;QACCN,KAAKA;QACLH,WAAWK,IAAAA,SAAE,EACX,QACAa,aAAa,CAACN,QAAQ,EACtBE,UAAU,CAACD,IAAI,EACfb;QAED,GAAGE,KAAK;kBAERD;;AAGP;AAEFN,QAAQW,WAAW,GAAG;AAStB,MAAMb,0BAAYK,OAAMC,UAAU,CAChC,CAAC,EAAEC,SAAS,EAAEC,QAAQ,EAAEkB,KAAK,EAAEC,QAAQ,EAAE,GAAGlB,OAAO,EAAEC;IACnD,qBACE,qBAACM;QACCN,KAAKA;QACLH,WAAWK,IAAAA,SAAE,EAAC,aAAaL;QAC1B,GAAGE,KAAK;kBAERD;;AAGP;AAEFR,UAAUa,WAAW,GAAG;AASxB,MAAMd,4BAAcM,OAAMC,UAAU,CAClC,CAAC,EAAEC,SAAS,EAAEC,QAAQ,EAAEoB,QAAQ,OAAO,EAAEC,cAAc,YAAY,EAAE,GAAGpB,OAAO,EAAEC;IAC/E,MAAMoB,eAAe;QACnBC,MAAM;QACNC,QAAQ;QACRC,OAAO;QACPC,SAAS;IACX;IAEA,MAAMC,qBAAqB;QACzBC,YAAY;QACZC,UAAU;IACZ;IAEA,qBACE,qBAACrB;QACCN,KAAKA;QACLH,WAAWK,IAAAA,SAAE,EACXuB,kBAAkB,CAACN,YAAY,EAC/BC,YAAY,CAACF,MAAM,EACnB,QACArB;QAED,GAAGE,KAAK;kBAERD;;AAGP;AAEFT,YAAYc,WAAW,GAAG;AAQ1B,MAAMZ,4BAAcI,OAAMC,UAAU,CAClC,CAAC,EAAEC,SAAS,EAAEC,QAAQ,EAAE8B,UAAU,MAAM,EAAE,GAAG7B,OAAO,EAAEC;IACpD,MAAM6B,iBAAiB;QACrBC,MAAM;QACNC,SAAS;QACTC,SAAS;QACThB,OAAO;IACT;IAEA,qBACE,qBAACV;QACCN,KAAKA;QACLH,WAAWK,IAAAA,SAAE,EACX,iCACA2B,cAAc,CAACD,QAAQ,EACvB/B;QAED,GAAGE,KAAK;kBAERD;;AAGP;AAEFP,YAAYY,WAAW,GAAG;AASnB,SAAST,QAAiC,EAAEuC,gBAAgB,CAAC,CAAM,EAAEC,QAAQ,EAAEC,QAAQ,EAAqB,GAAG,CAAC,CAAC;IACtH,MAAM,CAACC,QAAQC,UAAU,GAAG1C,OAAM2C,QAAQ,CAAIL;IAC9C,MAAM,CAACM,QAAQC,UAAU,GAAG7C,OAAM2C,QAAQ,CAAyB,CAAC;IACpE,MAAM,CAACG,cAAcC,gBAAgB,GAAG/C,OAAM2C,QAAQ,CAAC;IACvD,MAAM,CAACK,aAAaC,eAAe,GAAGjD,OAAM2C,QAAQ,CAAC;IAErD,MAAMO,WAAWlD,OAAMmD,WAAW,CAAC,CAACC,MAAcC;QAChDX,UAAUY,CAAAA,OAAS,CAAA;gBAAE,GAAGA,IAAI;gBAAE,CAACF,KAAK,EAAEC;YAAM,CAAA;QAC5C,sCAAsC;QACtC,IAAIT,MAAM,CAACQ,KAAK,EAAE;YAChBP,UAAUS,CAAAA;gBACR,MAAMC,YAAY;oBAAE,GAAGD,IAAI;gBAAC;gBAC5B,OAAOC,SAAS,CAACH,KAAK;gBACtB,OAAOG;YACT;QACF;IACF,GAAG;QAACX;KAAO;IAEX,MAAMY,WAAWxD,OAAMmD,WAAW,CAAC,CAACC,MAAc/B;QAChDwB,UAAUS,CAAAA,OAAS,CAAA;gBAAE,GAAGA,IAAI;gBAAE,CAACF,KAAK,EAAE/B;YAAM,CAAA;IAC9C,GAAG,EAAE;IAEL,MAAMoC,cAAczD,OAAMmD,WAAW,CAAC;QACpCN,UAAU,CAAC;IACb,GAAG,EAAE;IAEL,MAAMa,QAAQ1D,OAAMmD,WAAW,CAAC,CAACQ,YAAYrB,aAAa;QACxDI,UAAUiB;QACVd,UAAU,CAAC;QACXI,eAAe;IACjB,GAAG;QAACX;KAAc;IAElB,MAAMsB,eAAe5D,OAAMmD,WAAW,CAAC,OAAOU;QAC5CA,GAAGC;QAEHf,gBAAgB;QAChBE,eAAeK,CAAAA,OAAQA,OAAO;QAE9B,IAAI;YACF,oCAAoC;YACpC,IAAId,UAAU;gBACZ,MAAMuB,mBAAmBvB,SAASC;gBAClC,IAAIsB,kBAAkB;oBACpBlB,UAAUkB;oBACV;gBACF;YACF;YAEA,0BAA0B;YAC1BlB,UAAU,CAAC;YACX,MAAMN,WAAWE;QACnB,EAAE,OAAOpB,OAAO;YACd2C,QAAQ3C,KAAK,CAAC,0BAA0BA;QAC1C,SAAU;YACR0B,gBAAgB;QAClB;IACF,GAAG;QAACN;QAAQD;QAAUD;KAAS;IAE/B,OAAO;QACLE;QACAG;QACAE;QACAE;QACAE;QACAM;QACAC;QACAC;QACAE;QACAK,UAAU,CAACb,OAAkB,CAAA;gBAC3BC,OAAO,AAACZ,MAAc,CAACW,KAAK,IAAI;gBAChCc,UAAU,CAACL;oBACTX,SAASE,MAAMS,EAAEM,MAAM,CAACd,KAAK;gBAC/B;gBACAhC,OAAOuB,MAAM,CAACQ,KAAK;YACrB,CAAA;IACF;AACF;AAgBO,SAAS5D,YAAY,EAAE+C,QAAQ,EAAErC,SAAS,EAAoB;IACnE,MAAM,EAAEuC,MAAM,EAAEG,MAAM,EAAEE,YAAY,EAAEc,YAAY,EAAEK,QAAQ,EAAE,GAAGlE,QAAyB;QACxFuC,eAAe;YACbc,MAAM;YACNgB,OAAO;YACPC,SAAS;YACTC,SAAS;YACTC,aAAa;QACf;QACAhC;QACAC,UAAU,CAACgC;YACT,MAAM5B,SAAiC,CAAC;YAExC,IAAI,CAAC4B,KAAKpB,IAAI,EAAEqB,QAAQ7B,OAAOQ,IAAI,GAAG;YACtC,IAAI,CAACoB,KAAKJ,KAAK,EAAEK,QAAQ7B,OAAOwB,KAAK,GAAG;iBACnC,IAAI,CAAC,eAAeM,IAAI,CAACF,KAAKJ,KAAK,GAAGxB,OAAOwB,KAAK,GAAG;YAC1D,IAAI,CAACI,KAAKH,OAAO,EAAEI,QAAQ7B,OAAOyB,OAAO,GAAG;YAC5C,IAAI,CAACG,KAAKF,OAAO,EAAEG,QAAQ7B,OAAO0B,OAAO,GAAG;YAC5C,IAAI,CAACE,KAAKD,WAAW,EAAE3B,OAAO2B,WAAW,GAAG;YAE5C,OAAOI,OAAOC,IAAI,CAAChC,QAAQiC,MAAM,GAAG,IAAIjC,SAAS;QACnD;IACF;IAEA,qBACE,qBAACnD;QAAK8C,UAAUqB;QAAc1D,WAAWA;kBACvC,cAAA,sBAACJ;YACCW,OAAM;YACNC,aAAY;;8BAEZ,qBAACb;oBAAQiB,SAAS;8BAChB,cAAA,qBAACnB;kCAEC,cAAA,qBAACkB;4BAAEX,WAAU;sCAAwB;;;;8BAMzC,sBAACR;;sCACC,qBAACoF;4BACCC,MAAK;4BACL7E,WAAU;sCACX;;sCAGD,qBAAC4E;4BACCC,MAAK;4BACLC,UAAUlC;4BACV5C,WAAU;sCAET4C,eAAe,gBAAgB;;;;;;;AAM5C"}