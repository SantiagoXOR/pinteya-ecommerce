eeaa99d1d5be271c691cd5edb2ed9b22
// ===================================
// PINTEYA E-COMMERCE - ADAPTADOR DE PRODUCTOS
// ===================================
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: Object.getOwnPropertyDescriptor(all, name).get
    });
}
_export(exports, {
    get adaptApiProductToComponent () {
        return adaptApiProductToComponent;
    },
    get adaptApiProductsToComponents () {
        return adaptApiProductsToComponents;
    },
    get adaptComponentProductToApi () {
        return adaptComponentProductToApi;
    },
    get formatPrice () {
        return formatPrice;
    },
    get generateSlug () {
        return generateSlug;
    },
    get getDiscountPercentage () {
        return getDiscountPercentage;
    },
    get getFinalPrice () {
        return getFinalPrice;
    },
    get getMainImage () {
        return getMainImage;
    },
    get getPreviewImage () {
        return getPreviewImage;
    },
    get getThumbnailImage () {
        return getThumbnailImage;
    },
    get getValidImageUrl () {
        return getValidImageUrl;
    },
    get hasDiscount () {
        return hasDiscount;
    }
});
function adaptApiProductToComponent(apiProduct) {
    // Mapear correctamente las imágenes desde la estructura de BD a la estructura de componentes
    const images = apiProduct.images || {};
    return {
        id: apiProduct.id,
        title: apiProduct.name,
        reviews: Math.floor(Math.random() * 50) + 1,
        price: apiProduct.price,
        discountedPrice: apiProduct.discounted_price || apiProduct.price,
        imgs: {
            // Mapear desde la estructura real de la BD: { main, gallery, thumbnail }
            thumbnails: images.thumbnail ? [
                images.thumbnail
            ] : [
                '/images/products/placeholder.svg'
            ],
            previews: images.main ? [
                images.main
            ] : images.gallery?.[0] ? [
                images.gallery[0]
            ] : [
                '/images/products/placeholder.svg'
            ]
        }
    };
}
function adaptApiProductsToComponents(apiProducts) {
    return apiProducts.map(adaptApiProductToComponent);
}
function adaptComponentProductToApi(componentProduct) {
    return {
        id: componentProduct.id,
        name: componentProduct.title,
        price: componentProduct.price,
        discounted_price: componentProduct.discountedPrice !== componentProduct.price ? componentProduct.discountedPrice : null,
        images: componentProduct.imgs,
        stock: 50
    };
}
function hasDiscount(product) {
    if ('discountedPrice' in product) {
        return product.discountedPrice < product.price;
    }
    if ('discounted_price' in product) {
        return product.discounted_price !== null && product.discounted_price < product.price;
    }
    return false;
}
function getDiscountPercentage(product) {
    let originalPrice;
    let discountedPrice;
    if ('discountedPrice' in product) {
        originalPrice = product.price;
        discountedPrice = product.discountedPrice;
    } else {
        originalPrice = product.price;
        discountedPrice = product.discounted_price || product.price;
    }
    if (discountedPrice >= originalPrice) {
        return 0;
    }
    return Math.round((originalPrice - discountedPrice) / originalPrice * 100);
}
function getFinalPrice(product) {
    if ('discountedPrice' in product) {
        return product.discountedPrice;
    }
    return product.discounted_price ?? product.price;
}
function getMainImage(product) {
    if ('imgs' in product && product.imgs?.previews?.[0]) {
        return product.imgs.previews[0];
    }
    if ('images' in product && product.images?.previews?.[0]) {
        return product.images.previews[0];
    }
    return '/images/products/placeholder.svg';
}
function getValidImageUrl(imageUrl, fallback = '/images/products/placeholder.svg') {
    // Verificar si la imagen existe y no es una cadena vacía o solo espacios
    if (imageUrl && typeof imageUrl === 'string' && imageUrl.trim() !== '') {
        return imageUrl.trim();
    }
    return fallback;
}
function getThumbnailImage(product) {
    let imageUrl;
    if ('imgs' in product && product.imgs?.thumbnails?.[0]) {
        imageUrl = product.imgs.thumbnails[0];
    } else if ('images' in product && product.images?.thumbnails?.[0]) {
        imageUrl = product.images.thumbnails[0];
    }
    return getValidImageUrl(imageUrl);
}
function getPreviewImage(product) {
    let imageUrl;
    if ('imgs' in product && product.imgs?.previews?.[0]) {
        imageUrl = product.imgs.previews[0];
    } else if ('images' in product && product.images?.previews?.[0]) {
        imageUrl = product.images.previews[0];
    }
    return getValidImageUrl(imageUrl);
}
function formatPrice(price) {
    return new Intl.NumberFormat('es-AR', {
        style: 'currency',
        currency: 'ARS',
        minimumFractionDigits: 0,
        maximumFractionDigits: 0
    }).format(price);
}
function generateSlug(name) {
    return name.toLowerCase().normalize('NFD').replace(/[\u0300-\u036f]/g, '') // Remover acentos
    .replace(/[^a-z0-9\s-]/g, '') // Remover caracteres especiales
    .replace(/\s+/g, '-') // Reemplazar espacios con guiones
    .replace(/-+/g, '-') // Remover guiones múltiples
    .replace(/^-|-$/g, ''); // Remover guiones al inicio y final
}

//# sourceMappingURL=data:application/json;base64,