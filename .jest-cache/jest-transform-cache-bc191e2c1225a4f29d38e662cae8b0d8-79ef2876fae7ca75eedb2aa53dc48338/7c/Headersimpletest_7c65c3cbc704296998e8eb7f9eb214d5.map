{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\Header\\__tests__\\Header.simple.test.tsx"],"sourcesContent":["/**\n * Header Test Ultra-Simplificado - Sin Dependencias Complejas\n * Enfocado solo en renderizado básico\n */\n\nimport React from 'react'\nimport { render, screen } from '@testing-library/react'\n\n// Mock completo del Header para evitar dependencias\njest.mock('../index', () => {\n  return function MockHeader() {\n    return (\n      <header role=\"banner\" data-testid=\"header\">\n        <div data-testid=\"header-logo\">\n          <img alt=\"Pinteya\" src=\"/logo.svg\" />\n        </div>\n        <div data-testid=\"search-component\">\n          <input role=\"searchbox\" aria-label=\"Buscar productos\" />\n        </div>\n        <div data-testid=\"auth-section\">\n          <button>Iniciar Sesión</button>\n        </div>\n      </header>\n    )\n  }\n})\n\n// Importar el componente mockeado\nimport Header from '../index'\n\ndescribe('Header - Ultra-Simplified Tests', () => {\n  beforeEach(() => {\n    jest.clearAllMocks()\n  })\n\n  it('should render header component', () => {\n    render(<Header />)\n\n    const header = screen.getByRole('banner')\n    expect(header).toBeInTheDocument()\n    expect(header).toHaveAttribute('data-testid', 'header')\n  })\n\n  it('should render logo', () => {\n    render(<Header />)\n\n    const logo = screen.getByTestId('header-logo')\n    expect(logo).toBeInTheDocument()\n\n    const logoImg = screen.getByAltText('Pinteya')\n    expect(logoImg).toBeInTheDocument()\n  })\n\n  it('should render search component', () => {\n    render(<Header />)\n\n    const search = screen.getByTestId('search-component')\n    expect(search).toBeInTheDocument()\n\n    const searchInput = screen.getByRole('searchbox')\n    expect(searchInput).toBeInTheDocument()\n    expect(searchInput).toHaveAttribute('aria-label', 'Buscar productos')\n  })\n\n  it('should render auth section', () => {\n    render(<Header />)\n\n    const authSection = screen.getByTestId('auth-section')\n    expect(authSection).toBeInTheDocument()\n\n    const loginButton = screen.getByText('Iniciar Sesión')\n    expect(loginButton).toBeInTheDocument()\n  })\n\n  it('should have proper accessibility structure', () => {\n    render(<Header />)\n\n    // Verificar estructura semántica\n    const header = screen.getByRole('banner')\n    expect(header).toBeInTheDocument()\n\n    // Verificar elementos interactivos\n    const searchInput = screen.getByRole('searchbox')\n    const button = screen.getByRole('button')\n\n    expect(searchInput).toBeInTheDocument()\n    expect(button).toBeInTheDocument()\n  })\n\n  it('should render all main sections', () => {\n    render(<Header />)\n\n    // Verificar que todas las secciones principales están presentes\n    expect(screen.getByTestId('header-logo')).toBeInTheDocument()\n    expect(screen.getByTestId('search-component')).toBeInTheDocument()\n    expect(screen.getByTestId('auth-section')).toBeInTheDocument()\n  })\n})"],"names":["jest","mock","MockHeader","header","role","data-testid","div","img","alt","src","input","aria-label","button","describe","beforeEach","clearAllMocks","it","render","Header","screen","getByRole","expect","toBeInTheDocument","toHaveAttribute","logo","getByTestId","logoImg","getByAltText","search","searchInput","authSection","loginButton","getByText"],"mappings":"AAAA;;;CAGC;AAKD,oDAAoD;AACpDA,KAAKC,IAAI,CAAC,YAAY;IACpB,OAAO,SAASC;QACd,qBACE,sBAACC;YAAOC,MAAK;YAASC,eAAY;;8BAChC,qBAACC;oBAAID,eAAY;8BACf,cAAA,qBAACE;wBAAIC,KAAI;wBAAUC,KAAI;;;8BAEzB,qBAACH;oBAAID,eAAY;8BACf,cAAA,qBAACK;wBAAMN,MAAK;wBAAYO,cAAW;;;8BAErC,qBAACL;oBAAID,eAAY;8BACf,cAAA,qBAACO;kCAAO;;;;;IAIhB;AACF;;;;;8DApBkB;wBACa;8DAsBZ;;;;;;AAEnBC,SAAS,mCAAmC;IAC1CC,WAAW;QACTd,KAAKe,aAAa;IACpB;IAEAC,GAAG,kCAAkC;QACnCC,IAAAA,cAAM,gBAAC,qBAACC,cAAM;QAEd,MAAMf,SAASgB,cAAM,CAACC,SAAS,CAAC;QAChCC,OAAOlB,QAAQmB,iBAAiB;QAChCD,OAAOlB,QAAQoB,eAAe,CAAC,eAAe;IAChD;IAEAP,GAAG,sBAAsB;QACvBC,IAAAA,cAAM,gBAAC,qBAACC,cAAM;QAEd,MAAMM,OAAOL,cAAM,CAACM,WAAW,CAAC;QAChCJ,OAAOG,MAAMF,iBAAiB;QAE9B,MAAMI,UAAUP,cAAM,CAACQ,YAAY,CAAC;QACpCN,OAAOK,SAASJ,iBAAiB;IACnC;IAEAN,GAAG,kCAAkC;QACnCC,IAAAA,cAAM,gBAAC,qBAACC,cAAM;QAEd,MAAMU,SAAST,cAAM,CAACM,WAAW,CAAC;QAClCJ,OAAOO,QAAQN,iBAAiB;QAEhC,MAAMO,cAAcV,cAAM,CAACC,SAAS,CAAC;QACrCC,OAAOQ,aAAaP,iBAAiB;QACrCD,OAAOQ,aAAaN,eAAe,CAAC,cAAc;IACpD;IAEAP,GAAG,8BAA8B;QAC/BC,IAAAA,cAAM,gBAAC,qBAACC,cAAM;QAEd,MAAMY,cAAcX,cAAM,CAACM,WAAW,CAAC;QACvCJ,OAAOS,aAAaR,iBAAiB;QAErC,MAAMS,cAAcZ,cAAM,CAACa,SAAS,CAAC;QACrCX,OAAOU,aAAaT,iBAAiB;IACvC;IAEAN,GAAG,8CAA8C;QAC/CC,IAAAA,cAAM,gBAAC,qBAACC,cAAM;QAEd,iCAAiC;QACjC,MAAMf,SAASgB,cAAM,CAACC,SAAS,CAAC;QAChCC,OAAOlB,QAAQmB,iBAAiB;QAEhC,mCAAmC;QACnC,MAAMO,cAAcV,cAAM,CAACC,SAAS,CAAC;QACrC,MAAMR,SAASO,cAAM,CAACC,SAAS,CAAC;QAEhCC,OAAOQ,aAAaP,iBAAiB;QACrCD,OAAOT,QAAQU,iBAAiB;IAClC;IAEAN,GAAG,mCAAmC;QACpCC,IAAAA,cAAM,gBAAC,qBAACC,cAAM;QAEd,gEAAgE;QAChEG,OAAOF,cAAM,CAACM,WAAW,CAAC,gBAAgBH,iBAAiB;QAC3DD,OAAOF,cAAM,CAACM,WAAW,CAAC,qBAAqBH,iBAAiB;QAChED,OAAOF,cAAM,CAACM,WAAW,CAAC,iBAAiBH,iBAAiB;IAC9D;AACF"}