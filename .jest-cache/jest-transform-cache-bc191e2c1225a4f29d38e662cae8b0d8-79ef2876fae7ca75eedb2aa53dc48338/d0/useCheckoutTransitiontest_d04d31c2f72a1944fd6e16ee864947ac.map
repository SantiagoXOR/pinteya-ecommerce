{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\__tests__\\hooks\\useCheckoutTransition.test.ts"],"sourcesContent":["// ===================================\n// PINTEYA E-COMMERCE - TESTS UNITARIOS PARA useCheckoutTransition HOOK\n// ===================================\n\nimport { renderHook, act, waitFor } from '@testing-library/react';\nimport { useRouter } from 'next/navigation';\nimport useCheckoutTransition from '@/hooks/useCheckoutTransition';\n\n// Mock Next.js router\njest.mock('next/navigation', () => ({\n  useRouter: jest.fn(),\n}));\n\n// Mock performance API para navegadores que no lo soportan\nconst mockPerformance = {\n  now: jest.fn(() => Date.now()),\n};\n\nObject.defineProperty(global, 'performance', {\n  value: mockPerformance,\n  writable: true,\n});\n\n// Mock console methods para tests limpios\nconst originalConsole = { ...console };\nbeforeAll(() => {\n  console.debug = jest.fn();\n  console.warn = jest.fn();\n  console.error = jest.fn();\n});\n\nafterAll(() => {\n  Object.assign(console, originalConsole);\n});\n\ndescribe('useCheckoutTransition Hook - Tests Unitarios', () => {\n  const mockPush = jest.fn();\n  const mockRouter = {\n    push: mockPush,\n    back: jest.fn(),\n    forward: jest.fn(),\n    refresh: jest.fn(),\n    replace: jest.fn(),\n  };\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n    jest.useFakeTimers();\n    (useRouter as jest.Mock).mockReturnValue(mockRouter);\n    mockPerformance.now.mockReturnValue(1000);\n  });\n\n  afterEach(() => {\n    jest.runOnlyPendingTimers();\n    jest.useRealTimers();\n  });\n\n  describe('Estados Básicos del Hook', () => {\n    it('debe inicializar con estados correctos por defecto', () => {\n      const { result } = renderHook(() => useCheckoutTransition());\n\n      expect(result.current.isTransitioning).toBe(false);\n      expect(result.current.isButtonDisabled).toBe(false);\n      expect(result.current.transitionProgress).toBe(0);\n      expect(result.current.skipAnimation).toBe(false);\n      expect(result.current.performanceMetrics.startTime).toBe(null);\n      expect(typeof result.current.startTransition).toBe('function');\n    });\n\n    it('debe cambiar isTransitioning a true cuando se inicia la transición', () => {\n      const { result } = renderHook(() => useCheckoutTransition());\n\n      act(() => {\n        result.current.startTransition();\n      });\n\n      expect(result.current.isTransitioning).toBe(true);\n      expect(result.current.isButtonDisabled).toBe(true);\n    });\n\n    it('debe resetear isTransitioning después de la duración especificada', async () => {\n      const { result } = renderHook(() => useCheckoutTransition());\n\n      act(() => {\n        result.current.startTransition();\n      });\n\n      expect(result.current.isTransitioning).toBe(true);\n\n      // Avanzar tiempo hasta completar la animación\n      act(() => {\n        jest.advanceTimersByTime(2800);\n      });\n\n      await waitFor(() => {\n        expect(result.current.isTransitioning).toBe(false);\n      });\n    });\n  });\n\n  describe('Detección de prefers-reduced-motion', () => {\n    const mockMatchMedia = jest.fn();\n\n    beforeEach(() => {\n      Object.defineProperty(window, 'matchMedia', {\n        writable: true,\n        value: mockMatchMedia,\n      });\n    });\n\n    it('debe detectar prefers-reduced-motion: reduce', () => {\n      const mockMediaQuery = {\n        matches: true,\n        addEventListener: jest.fn(),\n        removeEventListener: jest.fn(),\n      };\n      mockMatchMedia.mockReturnValue(mockMediaQuery);\n\n      const { result } = renderHook(() => useCheckoutTransition());\n\n      expect(result.current.skipAnimation).toBe(true);\n    });\n\n    it('debe usar animación normal cuando prefers-reduced-motion: no-preference', () => {\n      const mockMediaQuery = {\n        matches: false,\n        addEventListener: jest.fn(),\n        removeEventListener: jest.fn(),\n      };\n      mockMatchMedia.mockReturnValue(mockMediaQuery);\n\n      const { result } = renderHook(() => useCheckoutTransition());\n\n      expect(result.current.skipAnimation).toBe(false);\n    });\n\n    it('debe manejar cambios dinámicos en prefers-reduced-motion', () => {\n      const mockMediaQuery = {\n        matches: false,\n        addEventListener: jest.fn(),\n        removeEventListener: jest.fn(),\n      };\n      mockMatchMedia.mockReturnValue(mockMediaQuery);\n\n      const { result } = renderHook(() => useCheckoutTransition());\n\n      expect(result.current.skipAnimation).toBe(false);\n\n      // Simular cambio a reduced motion\n      const changeHandler = mockMediaQuery.addEventListener.mock.calls[0][1];\n      act(() => {\n        changeHandler({ matches: true });\n      });\n\n      expect(result.current.skipAnimation).toBe(true);\n    });\n\n    it('debe manejar navegadores sin soporte para addEventListener', () => {\n      const mockMediaQuery = {\n        matches: false,\n        addListener: jest.fn(),\n        removeListener: jest.fn(),\n      };\n      mockMatchMedia.mockReturnValue(mockMediaQuery);\n\n      const { result } = renderHook(() => useCheckoutTransition());\n\n      expect(mockMediaQuery.addListener).toHaveBeenCalled();\n      expect(result.current.skipAnimation).toBe(false);\n    });\n  });\n\n  describe('Callbacks y Eventos', () => {\n    it('debe ejecutar onTransitionStart cuando se inicia la transición', () => {\n      const onTransitionStart = jest.fn();\n      const { result } = renderHook(() => \n        useCheckoutTransition({ onTransitionStart })\n      );\n\n      act(() => {\n        result.current.startTransition();\n      });\n\n      expect(onTransitionStart).toHaveBeenCalledTimes(1);\n    });\n\n    it('debe ejecutar onTransitionComplete cuando termina la transición', async () => {\n      const onTransitionComplete = jest.fn();\n      const { result } = renderHook(() => \n        useCheckoutTransition({ onTransitionComplete })\n      );\n\n      act(() => {\n        result.current.startTransition();\n      });\n\n      act(() => {\n        jest.advanceTimersByTime(2800);\n      });\n\n      await waitFor(() => {\n        expect(onTransitionComplete).toHaveBeenCalledTimes(1);\n      });\n    });\n\n    it('debe manejar errores en callbacks y ejecutar onTransitionError', () => {\n      const onTransitionStart = jest.fn(() => {\n        throw new Error('Test error');\n      });\n      const onTransitionError = jest.fn();\n\n      const { result } = renderHook(() => \n        useCheckoutTransition({ onTransitionStart, onTransitionError })\n      );\n\n      act(() => {\n        result.current.startTransition();\n      });\n\n      expect(onTransitionError).toHaveBeenCalledWith(expect.any(Error));\n    });\n  });\n\n  describe('Prevención de Múltiples Activaciones', () => {\n    it('debe ignorar múltiples llamadas a startTransition', () => {\n      const onTransitionStart = jest.fn();\n      const { result } = renderHook(() => \n        useCheckoutTransition({ onTransitionStart })\n      );\n\n      act(() => {\n        result.current.startTransition();\n        result.current.startTransition();\n        result.current.startTransition();\n      });\n\n      expect(onTransitionStart).toHaveBeenCalledTimes(3);\n      expect(result.current.isTransitioning).toBe(true);\n    });\n\n    it('debe permitir nueva transición después de completar la anterior', async () => {\n      const onTransitionStart = jest.fn();\n      const { result } = renderHook(() => \n        useCheckoutTransition({ onTransitionStart })\n      );\n\n      // Primera transición\n      act(() => {\n        result.current.startTransition();\n      });\n\n      // Completar primera transición\n      act(() => {\n        jest.advanceTimersByTime(2800);\n      });\n\n      await waitFor(() => {\n        expect(result.current.isTransitioning).toBe(false);\n      });\n\n      // Segunda transición debe funcionar\n      act(() => {\n        result.current.startTransition();\n      });\n\n      expect(onTransitionStart).toHaveBeenCalledTimes(2);\n    });\n  });\n\n  describe('Performance Tracking', () => {\n    it('debe trackear métricas de performance cuando está habilitado', () => {\n      const { result } = renderHook(() => \n        useCheckoutTransition({ enablePerformanceTracking: true })\n      );\n\n      act(() => {\n        result.current.startTransition();\n      });\n\n      expect(result.current.performanceMetrics.startTime).toBeGreaterThanOrEqual(0);\n\n      act(() => {\n        jest.advanceTimersByTime(2800);\n      });\n\n      expect(result.current.performanceMetrics.endTime).toBeTruthy();\n      expect(result.current.performanceMetrics.duration).toBeTruthy();\n    });\n\n    it('debe actualizar transitionProgress durante la animación', () => {\n      const { result } = renderHook(() => useCheckoutTransition());\n\n      act(() => {\n        result.current.startTransition();\n      });\n\n      expect(result.current.transitionProgress).toBe(0);\n\n      // Avanzar parcialmente\n      act(() => {\n        jest.advanceTimersByTime(1400); // 50% de 2800ms\n      });\n\n      expect(result.current.transitionProgress).toBeGreaterThan(0);\n      expect(result.current.transitionProgress).toBeLessThan(100);\n    });\n  });\n\n  describe('Configuraciones Personalizadas', () => {\n    it('debe usar duración personalizada cuando se proporciona', async () => {\n      const customDuration = 1000;\n      const onTransitionComplete = jest.fn();\n      \n      const { result } = renderHook(() => \n        useCheckoutTransition({ \n          customDuration, \n          onTransitionComplete \n        })\n      );\n\n      act(() => {\n        result.current.startTransition();\n      });\n\n      // No debe completarse con la duración por defecto\n      act(() => {\n        jest.advanceTimersByTime(2800);\n      });\n\n      expect(onTransitionComplete).toHaveBeenCalled();\n\n      // Debe completarse con la duración personalizada\n      act(() => {\n        jest.advanceTimersByTime(1000);\n      });\n\n      await waitFor(() => {\n        expect(onTransitionComplete).toHaveBeenCalled();\n      });\n    });\n\n    it('debe deshabilitar animación cuando enableAnimation es false', () => {\n      const { result } = renderHook(() => \n        useCheckoutTransition({ enableAnimation: false })\n      );\n\n      expect(result.current.skipAnimation).toBe(true);\n    });\n  });\n\n  describe('Navegación y Cleanup', () => {\n    it('debe navegar a /checkout al completar la transición', async () => {\n      const { result } = renderHook(() => useCheckoutTransition());\n\n      act(() => {\n        result.current.startTransition();\n      });\n\n      act(() => {\n        jest.advanceTimersByTime(2800);\n      });\n\n      await waitFor(() => {\n        expect(mockPush).toHaveBeenCalledWith('/checkout');\n      });\n    });\n\n    it('debe limpiar timeouts en unmount', () => {\n      const { result, unmount } = renderHook(() => useCheckoutTransition());\n\n      act(() => {\n        result.current.startTransition();\n      });\n\n      // Unmount antes de que termine la animación\n      unmount();\n\n      // Avanzar tiempo - no debería causar errores\n      act(() => {\n        jest.advanceTimersByTime(5000);\n      });\n\n      // No debe haber navegación después del unmount\n      expect(mockPush).not.toHaveBeenCalled();\n    });\n  });\n});\n"],"names":["jest","mock","useRouter","fn","mockPerformance","now","Date","Object","defineProperty","global","value","writable","originalConsole","console","beforeAll","debug","warn","error","afterAll","assign","describe","mockPush","mockRouter","push","back","forward","refresh","replace","beforeEach","clearAllMocks","useFakeTimers","mockReturnValue","afterEach","runOnlyPendingTimers","useRealTimers","it","result","renderHook","useCheckoutTransition","expect","current","isTransitioning","toBe","isButtonDisabled","transitionProgress","skipAnimation","performanceMetrics","startTime","startTransition","act","advanceTimersByTime","waitFor","mockMatchMedia","window","mockMediaQuery","matches","addEventListener","removeEventListener","changeHandler","calls","addListener","removeListener","toHaveBeenCalled","onTransitionStart","toHaveBeenCalledTimes","onTransitionComplete","Error","onTransitionError","toHaveBeenCalledWith","any","enablePerformanceTracking","toBeGreaterThanOrEqual","endTime","toBeTruthy","duration","toBeGreaterThan","toBeLessThan","customDuration","enableAnimation","unmount","not"],"mappings":"AAAA,sCAAsC;AACtC,uEAAuE;AACvE,sCAAsC;;AAMtC,sBAAsB;AACtBA,KAAKC,IAAI,CAAC,mBAAmB,IAAO,CAAA;QAClCC,WAAWF,KAAKG,EAAE;IACpB,CAAA;;;;uBAPyC;4BACf;8EACQ;;;;;;AAOlC,2DAA2D;AAC3D,MAAMC,kBAAkB;IACtBC,KAAKL,KAAKG,EAAE,CAAC,IAAMG,KAAKD,GAAG;AAC7B;AAEAE,OAAOC,cAAc,CAACC,QAAQ,eAAe;IAC3CC,OAAON;IACPO,UAAU;AACZ;AAEA,0CAA0C;AAC1C,MAAMC,kBAAkB;IAAE,GAAGC,OAAO;AAAC;AACrCC,UAAU;IACRD,QAAQE,KAAK,GAAGf,KAAKG,EAAE;IACvBU,QAAQG,IAAI,GAAGhB,KAAKG,EAAE;IACtBU,QAAQI,KAAK,GAAGjB,KAAKG,EAAE;AACzB;AAEAe,SAAS;IACPX,OAAOY,MAAM,CAACN,SAASD;AACzB;AAEAQ,SAAS,gDAAgD;IACvD,MAAMC,WAAWrB,KAAKG,EAAE;IACxB,MAAMmB,aAAa;QACjBC,MAAMF;QACNG,MAAMxB,KAAKG,EAAE;QACbsB,SAASzB,KAAKG,EAAE;QAChBuB,SAAS1B,KAAKG,EAAE;QAChBwB,SAAS3B,KAAKG,EAAE;IAClB;IAEAyB,WAAW;QACT5B,KAAK6B,aAAa;QAClB7B,KAAK8B,aAAa;QACjB5B,qBAAS,CAAe6B,eAAe,CAACT;QACzClB,gBAAgBC,GAAG,CAAC0B,eAAe,CAAC;IACtC;IAEAC,UAAU;QACRhC,KAAKiC,oBAAoB;QACzBjC,KAAKkC,aAAa;IACpB;IAEAd,SAAS,4BAA4B;QACnCe,GAAG,sDAAsD;YACvD,MAAM,EAAEC,MAAM,EAAE,GAAGC,IAAAA,iBAAU,EAAC,IAAMC,IAAAA,8BAAqB;YAEzDC,OAAOH,OAAOI,OAAO,CAACC,eAAe,EAAEC,IAAI,CAAC;YAC5CH,OAAOH,OAAOI,OAAO,CAACG,gBAAgB,EAAED,IAAI,CAAC;YAC7CH,OAAOH,OAAOI,OAAO,CAACI,kBAAkB,EAAEF,IAAI,CAAC;YAC/CH,OAAOH,OAAOI,OAAO,CAACK,aAAa,EAAEH,IAAI,CAAC;YAC1CH,OAAOH,OAAOI,OAAO,CAACM,kBAAkB,CAACC,SAAS,EAAEL,IAAI,CAAC;YACzDH,OAAO,OAAOH,OAAOI,OAAO,CAACQ,eAAe,EAAEN,IAAI,CAAC;QACrD;QAEAP,GAAG,sEAAsE;YACvE,MAAM,EAAEC,MAAM,EAAE,GAAGC,IAAAA,iBAAU,EAAC,IAAMC,IAAAA,8BAAqB;YAEzDW,IAAAA,UAAG,EAAC;gBACFb,OAAOI,OAAO,CAACQ,eAAe;YAChC;YAEAT,OAAOH,OAAOI,OAAO,CAACC,eAAe,EAAEC,IAAI,CAAC;YAC5CH,OAAOH,OAAOI,OAAO,CAACG,gBAAgB,EAAED,IAAI,CAAC;QAC/C;QAEAP,GAAG,qEAAqE;YACtE,MAAM,EAAEC,MAAM,EAAE,GAAGC,IAAAA,iBAAU,EAAC,IAAMC,IAAAA,8BAAqB;YAEzDW,IAAAA,UAAG,EAAC;gBACFb,OAAOI,OAAO,CAACQ,eAAe;YAChC;YAEAT,OAAOH,OAAOI,OAAO,CAACC,eAAe,EAAEC,IAAI,CAAC;YAE5C,8CAA8C;YAC9CO,IAAAA,UAAG,EAAC;gBACFjD,KAAKkD,mBAAmB,CAAC;YAC3B;YAEA,MAAMC,IAAAA,cAAO,EAAC;gBACZZ,OAAOH,OAAOI,OAAO,CAACC,eAAe,EAAEC,IAAI,CAAC;YAC9C;QACF;IACF;IAEAtB,SAAS,uCAAuC;QAC9C,MAAMgC,iBAAiBpD,KAAKG,EAAE;QAE9ByB,WAAW;YACTrB,OAAOC,cAAc,CAAC6C,QAAQ,cAAc;gBAC1C1C,UAAU;gBACVD,OAAO0C;YACT;QACF;QAEAjB,GAAG,gDAAgD;YACjD,MAAMmB,iBAAiB;gBACrBC,SAAS;gBACTC,kBAAkBxD,KAAKG,EAAE;gBACzBsD,qBAAqBzD,KAAKG,EAAE;YAC9B;YACAiD,eAAerB,eAAe,CAACuB;YAE/B,MAAM,EAAElB,MAAM,EAAE,GAAGC,IAAAA,iBAAU,EAAC,IAAMC,IAAAA,8BAAqB;YAEzDC,OAAOH,OAAOI,OAAO,CAACK,aAAa,EAAEH,IAAI,CAAC;QAC5C;QAEAP,GAAG,2EAA2E;YAC5E,MAAMmB,iBAAiB;gBACrBC,SAAS;gBACTC,kBAAkBxD,KAAKG,EAAE;gBACzBsD,qBAAqBzD,KAAKG,EAAE;YAC9B;YACAiD,eAAerB,eAAe,CAACuB;YAE/B,MAAM,EAAElB,MAAM,EAAE,GAAGC,IAAAA,iBAAU,EAAC,IAAMC,IAAAA,8BAAqB;YAEzDC,OAAOH,OAAOI,OAAO,CAACK,aAAa,EAAEH,IAAI,CAAC;QAC5C;QAEAP,GAAG,4DAA4D;YAC7D,MAAMmB,iBAAiB;gBACrBC,SAAS;gBACTC,kBAAkBxD,KAAKG,EAAE;gBACzBsD,qBAAqBzD,KAAKG,EAAE;YAC9B;YACAiD,eAAerB,eAAe,CAACuB;YAE/B,MAAM,EAAElB,MAAM,EAAE,GAAGC,IAAAA,iBAAU,EAAC,IAAMC,IAAAA,8BAAqB;YAEzDC,OAAOH,OAAOI,OAAO,CAACK,aAAa,EAAEH,IAAI,CAAC;YAE1C,kCAAkC;YAClC,MAAMgB,gBAAgBJ,eAAeE,gBAAgB,CAACvD,IAAI,CAAC0D,KAAK,CAAC,EAAE,CAAC,EAAE;YACtEV,IAAAA,UAAG,EAAC;gBACFS,cAAc;oBAAEH,SAAS;gBAAK;YAChC;YAEAhB,OAAOH,OAAOI,OAAO,CAACK,aAAa,EAAEH,IAAI,CAAC;QAC5C;QAEAP,GAAG,8DAA8D;YAC/D,MAAMmB,iBAAiB;gBACrBC,SAAS;gBACTK,aAAa5D,KAAKG,EAAE;gBACpB0D,gBAAgB7D,KAAKG,EAAE;YACzB;YACAiD,eAAerB,eAAe,CAACuB;YAE/B,MAAM,EAAElB,MAAM,EAAE,GAAGC,IAAAA,iBAAU,EAAC,IAAMC,IAAAA,8BAAqB;YAEzDC,OAAOe,eAAeM,WAAW,EAAEE,gBAAgB;YACnDvB,OAAOH,OAAOI,OAAO,CAACK,aAAa,EAAEH,IAAI,CAAC;QAC5C;IACF;IAEAtB,SAAS,uBAAuB;QAC9Be,GAAG,kEAAkE;YACnE,MAAM4B,oBAAoB/D,KAAKG,EAAE;YACjC,MAAM,EAAEiC,MAAM,EAAE,GAAGC,IAAAA,iBAAU,EAAC,IAC5BC,IAAAA,8BAAqB,EAAC;oBAAEyB;gBAAkB;YAG5Cd,IAAAA,UAAG,EAAC;gBACFb,OAAOI,OAAO,CAACQ,eAAe;YAChC;YAEAT,OAAOwB,mBAAmBC,qBAAqB,CAAC;QAClD;QAEA7B,GAAG,mEAAmE;YACpE,MAAM8B,uBAAuBjE,KAAKG,EAAE;YACpC,MAAM,EAAEiC,MAAM,EAAE,GAAGC,IAAAA,iBAAU,EAAC,IAC5BC,IAAAA,8BAAqB,EAAC;oBAAE2B;gBAAqB;YAG/ChB,IAAAA,UAAG,EAAC;gBACFb,OAAOI,OAAO,CAACQ,eAAe;YAChC;YAEAC,IAAAA,UAAG,EAAC;gBACFjD,KAAKkD,mBAAmB,CAAC;YAC3B;YAEA,MAAMC,IAAAA,cAAO,EAAC;gBACZZ,OAAO0B,sBAAsBD,qBAAqB,CAAC;YACrD;QACF;QAEA7B,GAAG,kEAAkE;YACnE,MAAM4B,oBAAoB/D,KAAKG,EAAE,CAAC;gBAChC,MAAM,IAAI+D,MAAM;YAClB;YACA,MAAMC,oBAAoBnE,KAAKG,EAAE;YAEjC,MAAM,EAAEiC,MAAM,EAAE,GAAGC,IAAAA,iBAAU,EAAC,IAC5BC,IAAAA,8BAAqB,EAAC;oBAAEyB;oBAAmBI;gBAAkB;YAG/DlB,IAAAA,UAAG,EAAC;gBACFb,OAAOI,OAAO,CAACQ,eAAe;YAChC;YAEAT,OAAO4B,mBAAmBC,oBAAoB,CAAC7B,OAAO8B,GAAG,CAACH;QAC5D;IACF;IAEA9C,SAAS,wCAAwC;QAC/Ce,GAAG,qDAAqD;YACtD,MAAM4B,oBAAoB/D,KAAKG,EAAE;YACjC,MAAM,EAAEiC,MAAM,EAAE,GAAGC,IAAAA,iBAAU,EAAC,IAC5BC,IAAAA,8BAAqB,EAAC;oBAAEyB;gBAAkB;YAG5Cd,IAAAA,UAAG,EAAC;gBACFb,OAAOI,OAAO,CAACQ,eAAe;gBAC9BZ,OAAOI,OAAO,CAACQ,eAAe;gBAC9BZ,OAAOI,OAAO,CAACQ,eAAe;YAChC;YAEAT,OAAOwB,mBAAmBC,qBAAqB,CAAC;YAChDzB,OAAOH,OAAOI,OAAO,CAACC,eAAe,EAAEC,IAAI,CAAC;QAC9C;QAEAP,GAAG,mEAAmE;YACpE,MAAM4B,oBAAoB/D,KAAKG,EAAE;YACjC,MAAM,EAAEiC,MAAM,EAAE,GAAGC,IAAAA,iBAAU,EAAC,IAC5BC,IAAAA,8BAAqB,EAAC;oBAAEyB;gBAAkB;YAG5C,qBAAqB;YACrBd,IAAAA,UAAG,EAAC;gBACFb,OAAOI,OAAO,CAACQ,eAAe;YAChC;YAEA,+BAA+B;YAC/BC,IAAAA,UAAG,EAAC;gBACFjD,KAAKkD,mBAAmB,CAAC;YAC3B;YAEA,MAAMC,IAAAA,cAAO,EAAC;gBACZZ,OAAOH,OAAOI,OAAO,CAACC,eAAe,EAAEC,IAAI,CAAC;YAC9C;YAEA,oCAAoC;YACpCO,IAAAA,UAAG,EAAC;gBACFb,OAAOI,OAAO,CAACQ,eAAe;YAChC;YAEAT,OAAOwB,mBAAmBC,qBAAqB,CAAC;QAClD;IACF;IAEA5C,SAAS,wBAAwB;QAC/Be,GAAG,gEAAgE;YACjE,MAAM,EAAEC,MAAM,EAAE,GAAGC,IAAAA,iBAAU,EAAC,IAC5BC,IAAAA,8BAAqB,EAAC;oBAAEgC,2BAA2B;gBAAK;YAG1DrB,IAAAA,UAAG,EAAC;gBACFb,OAAOI,OAAO,CAACQ,eAAe;YAChC;YAEAT,OAAOH,OAAOI,OAAO,CAACM,kBAAkB,CAACC,SAAS,EAAEwB,sBAAsB,CAAC;YAE3EtB,IAAAA,UAAG,EAAC;gBACFjD,KAAKkD,mBAAmB,CAAC;YAC3B;YAEAX,OAAOH,OAAOI,OAAO,CAACM,kBAAkB,CAAC0B,OAAO,EAAEC,UAAU;YAC5DlC,OAAOH,OAAOI,OAAO,CAACM,kBAAkB,CAAC4B,QAAQ,EAAED,UAAU;QAC/D;QAEAtC,GAAG,2DAA2D;YAC5D,MAAM,EAAEC,MAAM,EAAE,GAAGC,IAAAA,iBAAU,EAAC,IAAMC,IAAAA,8BAAqB;YAEzDW,IAAAA,UAAG,EAAC;gBACFb,OAAOI,OAAO,CAACQ,eAAe;YAChC;YAEAT,OAAOH,OAAOI,OAAO,CAACI,kBAAkB,EAAEF,IAAI,CAAC;YAE/C,uBAAuB;YACvBO,IAAAA,UAAG,EAAC;gBACFjD,KAAKkD,mBAAmB,CAAC,OAAO,gBAAgB;YAClD;YAEAX,OAAOH,OAAOI,OAAO,CAACI,kBAAkB,EAAE+B,eAAe,CAAC;YAC1DpC,OAAOH,OAAOI,OAAO,CAACI,kBAAkB,EAAEgC,YAAY,CAAC;QACzD;IACF;IAEAxD,SAAS,kCAAkC;QACzCe,GAAG,0DAA0D;YAC3D,MAAM0C,iBAAiB;YACvB,MAAMZ,uBAAuBjE,KAAKG,EAAE;YAEpC,MAAM,EAAEiC,MAAM,EAAE,GAAGC,IAAAA,iBAAU,EAAC,IAC5BC,IAAAA,8BAAqB,EAAC;oBACpBuC;oBACAZ;gBACF;YAGFhB,IAAAA,UAAG,EAAC;gBACFb,OAAOI,OAAO,CAACQ,eAAe;YAChC;YAEA,kDAAkD;YAClDC,IAAAA,UAAG,EAAC;gBACFjD,KAAKkD,mBAAmB,CAAC;YAC3B;YAEAX,OAAO0B,sBAAsBH,gBAAgB;YAE7C,iDAAiD;YACjDb,IAAAA,UAAG,EAAC;gBACFjD,KAAKkD,mBAAmB,CAAC;YAC3B;YAEA,MAAMC,IAAAA,cAAO,EAAC;gBACZZ,OAAO0B,sBAAsBH,gBAAgB;YAC/C;QACF;QAEA3B,GAAG,+DAA+D;YAChE,MAAM,EAAEC,MAAM,EAAE,GAAGC,IAAAA,iBAAU,EAAC,IAC5BC,IAAAA,8BAAqB,EAAC;oBAAEwC,iBAAiB;gBAAM;YAGjDvC,OAAOH,OAAOI,OAAO,CAACK,aAAa,EAAEH,IAAI,CAAC;QAC5C;IACF;IAEAtB,SAAS,wBAAwB;QAC/Be,GAAG,uDAAuD;YACxD,MAAM,EAAEC,MAAM,EAAE,GAAGC,IAAAA,iBAAU,EAAC,IAAMC,IAAAA,8BAAqB;YAEzDW,IAAAA,UAAG,EAAC;gBACFb,OAAOI,OAAO,CAACQ,eAAe;YAChC;YAEAC,IAAAA,UAAG,EAAC;gBACFjD,KAAKkD,mBAAmB,CAAC;YAC3B;YAEA,MAAMC,IAAAA,cAAO,EAAC;gBACZZ,OAAOlB,UAAU+C,oBAAoB,CAAC;YACxC;QACF;QAEAjC,GAAG,oCAAoC;YACrC,MAAM,EAAEC,MAAM,EAAE2C,OAAO,EAAE,GAAG1C,IAAAA,iBAAU,EAAC,IAAMC,IAAAA,8BAAqB;YAElEW,IAAAA,UAAG,EAAC;gBACFb,OAAOI,OAAO,CAACQ,eAAe;YAChC;YAEA,4CAA4C;YAC5C+B;YAEA,6CAA6C;YAC7C9B,IAAAA,UAAG,EAAC;gBACFjD,KAAKkD,mBAAmB,CAAC;YAC3B;YAEA,+CAA+C;YAC/CX,OAAOlB,UAAU2D,GAAG,CAAClB,gBAAgB;QACvC;IACF;AACF"}