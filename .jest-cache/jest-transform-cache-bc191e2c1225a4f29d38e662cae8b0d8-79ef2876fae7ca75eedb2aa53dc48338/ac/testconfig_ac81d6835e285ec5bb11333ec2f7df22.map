{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\__tests__\\logistics\\setup\\test-config.ts"],"sourcesContent":["// =====================================================\n// CONFIGURACIÓN: TESTING SUITE LOGISTICS ENTERPRISE\n// Descripción: Configuración optimizada para testing del módulo de logística\n// Basado en: Jest + RTL + MSW + Testing Library\n// =====================================================\n\nimport '@testing-library/jest-dom';\nimport { configure } from '@testing-library/react';\n\n// =====================================================\n// CONFIGURACIÓN DE TESTING LIBRARY\n// =====================================================\n\nconfigure({\n  testIdAttribute: 'data-testid',\n  asyncUtilTimeout: 5000,\n  computedStyleSupportsPseudoElements: true\n});\n\n// =====================================================\n// CONFIGURACIÓN DE MOCKS SIMPLES (SIN MSW)\n// =====================================================\n\n// Mock global fetch para APIs\nglobal.fetch = jest.fn();\n\n// Configurar mocks antes de todos los tests\nbeforeAll(() => {\n  // Mock básico para APIs de logistics\n  (global.fetch as jest.Mock).mockImplementation((url: string) => {\n    if (url.includes('/api/admin/logistics')) {\n      return Promise.resolve({\n        ok: true,\n        json: () => Promise.resolve({\n          data: [],\n          success: true,\n          message: 'Mock response'\n        })\n      });\n    }\n    return Promise.resolve({\n      ok: true,\n      json: () => Promise.resolve({})\n    });\n  });\n});\n\n// Resetear mocks después de cada test\nafterEach(() => {\n  jest.clearAllMocks();\n});\n\n// Limpiar después de todos los tests\nafterAll(() => {\n  jest.restoreAllMocks();\n});\n\n// =====================================================\n// MOCKS GLOBALES\n// =====================================================\n\n// Mock de MapLibre GL JS\njest.mock('maplibre-gl', () => ({\n  Map: jest.fn(() => ({\n    on: jest.fn(),\n    off: jest.fn(),\n    addSource: jest.fn(),\n    addLayer: jest.fn(),\n    getSource: jest.fn(() => ({\n      setData: jest.fn()\n    })),\n    setStyle: jest.fn(),\n    fitBounds: jest.fn(),\n    remove: jest.fn(),\n    getCanvas: jest.fn(() => ({\n      style: {}\n    })),\n    readyState: 1\n  })),\n  LngLatBounds: jest.fn(() => ({\n    extend: jest.fn()\n  }))\n}));\n\n// Mock de WebSocket\nglobal.WebSocket = jest.fn(() => ({\n  addEventListener: jest.fn(),\n  removeEventListener: jest.fn(),\n  send: jest.fn(),\n  close: jest.fn(),\n  readyState: 1,\n  CONNECTING: 0,\n  OPEN: 1,\n  CLOSING: 2,\n  CLOSED: 3\n})) as any;\n\n// Mock de Notification API\nObject.defineProperty(window, 'Notification', {\n  writable: true,\n  value: jest.fn(() => ({\n    close: jest.fn()\n  }))\n});\n\nObject.defineProperty(Notification, 'permission', {\n  writable: true,\n  value: 'granted'\n});\n\n// Mock de geolocation\nObject.defineProperty(navigator, 'geolocation', {\n  writable: true,\n  value: {\n    getCurrentPosition: jest.fn((success) => \n      success({\n        coords: {\n          latitude: -34.6037,\n          longitude: -58.3816,\n          accuracy: 10\n        }\n      })\n    ),\n    watchPosition: jest.fn(),\n    clearWatch: jest.fn()\n  }\n});\n\n// Mock de IntersectionObserver\nglobal.IntersectionObserver = jest.fn(() => ({\n  observe: jest.fn(),\n  unobserve: jest.fn(),\n  disconnect: jest.fn()\n})) as any;\n\n// Mock de ResizeObserver\nglobal.ResizeObserver = jest.fn(() => ({\n  observe: jest.fn(),\n  unobserve: jest.fn(),\n  disconnect: jest.fn()\n})) as any;\n\n// =====================================================\n// UTILIDADES DE TESTING\n// =====================================================\n\nexport const mockShipment = {\n  id: 1,\n  shipment_number: 'SHP-001',\n  order_id: 1,\n  status: 'in_transit',\n  carrier_id: 1,\n  shipping_service: 'standard',\n  tracking_number: 'TRK-123456',\n  delivery_address: {\n    street: 'Av. Corrientes',\n    number: '1234',\n    apartment: '',\n    neighborhood: 'San Nicolás',\n    city: 'Buenos Aires',\n    state: 'Buenos Aires',\n    postal_code: '1043',\n    country: 'Argentina'\n  },\n  pickup_address: {\n    street: 'Av. Santa Fe',\n    number: '5678',\n    apartment: '',\n    neighborhood: 'Palermo',\n    city: 'Buenos Aires',\n    state: 'Buenos Aires',\n    postal_code: '1425',\n    country: 'Argentina'\n  },\n  weight_kg: 2.5,\n  dimensions_cm: '30x20x15',\n  total_cost: 1500,\n  estimated_delivery_date: '2024-02-15',\n  special_instructions: 'Llamar antes de entregar',\n  notes: 'Producto frágil',\n  created_at: '2024-02-10T10:00:00Z',\n  updated_at: '2024-02-10T10:00:00Z',\n  carrier: {\n    id: 1,\n    name: 'OCA',\n    code: 'OCA',\n    logo_url: '/logos/oca.png',\n    is_active: true\n  },\n  items: [{\n    id: 1,\n    product_id: 1,\n    quantity: 1,\n    weight_kg: 2.5\n  }]\n};\n\nexport const mockTrackingEvent = {\n  id: 1,\n  shipment_id: 1,\n  status: 'in_transit',\n  description: 'Paquete en tránsito hacia destino',\n  location: 'Buenos Aires, Argentina',\n  latitude: -34.6037,\n  longitude: -58.3816,\n  occurred_at: '2024-02-10T12:00:00Z',\n  created_at: '2024-02-10T12:00:00Z'\n};\n\nexport const mockCourier = {\n  id: 1,\n  name: 'OCA',\n  code: 'OCA',\n  logo_url: '/logos/oca.png',\n  website_url: 'https://oca.com.ar',\n  contact_phone: '+54 11 4000-0000',\n  contact_email: 'info@oca.com.ar',\n  is_active: true,\n  supported_services: ['standard', 'express'],\n  coverage_areas: ['Buenos Aires', 'Córdoba', 'Santa Fe'],\n  base_cost: 500,\n  cost_per_kg: 100,\n  api_config: {\n    base_url: 'https://api.oca.com.ar',\n    api_key: 'test-key',\n    environment: 'sandbox'\n  },\n  created_at: '2024-01-01T00:00:00Z',\n  updated_at: '2024-01-01T00:00:00Z'\n};\n\nexport const mockLogisticsStats = {\n  total_shipments: 150,\n  pending_shipments: 25,\n  confirmed_shipments: 30,\n  in_transit_shipments: 45,\n  delivered_shipments: 40,\n  exception_shipments: 5,\n  cancelled_shipments: 5,\n  average_delivery_time: 3.5,\n  on_time_delivery_rate: 92.5,\n  total_shipping_cost: 225000,\n  active_couriers: 4\n};\n\nexport const mockGeofenceZone = {\n  id: 'test-zone',\n  name: 'Zona de Prueba',\n  type: 'delivery_zone' as const,\n  coordinates: [\n    [-58.5, -34.5],\n    [-58.4, -34.5],\n    [-58.4, -34.6],\n    [-58.5, -34.6],\n    [-58.5, -34.5]\n  ] as [number, number][],\n  center: [-58.45, -34.55] as [number, number],\n  active: true,\n  created_at: '2024-01-01T00:00:00Z',\n  updated_at: '2024-01-01T00:00:00Z',\n  rules: [{\n    id: 'rule-1',\n    event_type: 'enter' as const,\n    action: 'notification' as const,\n    conditions: {\n      shipment_status: ['in_transit']\n    },\n    active: true\n  }],\n  stats: {\n    total_events: 50,\n    enter_events: 25,\n    exit_events: 25,\n    unique_shipments: 30,\n    avg_dwell_time: 45,\n    last_event: '2024-02-10T10:00:00Z'\n  }\n};\n\n// =====================================================\n// HELPERS DE TESTING\n// =====================================================\n\nexport const waitForLoadingToFinish = () => {\n  return new Promise(resolve => setTimeout(resolve, 100));\n};\n\nexport const mockIntersectionObserver = () => {\n  const mockIntersectionObserver = jest.fn();\n  mockIntersectionObserver.mockReturnValue({\n    observe: () => null,\n    unobserve: () => null,\n    disconnect: () => null\n  });\n  window.IntersectionObserver = mockIntersectionObserver;\n};\n\nexport const mockResizeObserver = () => {\n  const mockResizeObserver = jest.fn();\n  mockResizeObserver.mockReturnValue({\n    observe: () => null,\n    unobserve: () => null,\n    disconnect: () => null\n  });\n  window.ResizeObserver = mockResizeObserver;\n};\n\nexport const createMockWebSocket = () => {\n  const mockWebSocket = {\n    addEventListener: jest.fn(),\n    removeEventListener: jest.fn(),\n    send: jest.fn(),\n    close: jest.fn(),\n    readyState: 1,\n    CONNECTING: 0,\n    OPEN: 1,\n    CLOSING: 2,\n    CLOSED: 3,\n    onopen: null,\n    onclose: null,\n    onmessage: null,\n    onerror: null\n  };\n  \n  global.WebSocket = jest.fn(() => mockWebSocket) as any;\n  return mockWebSocket;\n};\n\n// =====================================================\n// CUSTOM MATCHERS\n// =====================================================\n\nexpect.extend({\n  toBeWithinRange(received: number, floor: number, ceiling: number) {\n    const pass = received >= floor && received <= ceiling;\n    if (pass) {\n      return {\n        message: () =>\n          `expected ${received} not to be within range ${floor} - ${ceiling}`,\n        pass: true,\n      };\n    } else {\n      return {\n        message: () =>\n          `expected ${received} to be within range ${floor} - ${ceiling}`,\n        pass: false,\n      };\n    }\n  },\n  \n  toHaveValidCoordinates(received: any) {\n    const isValid = Array.isArray(received) && \n                   received.length === 2 && \n                   typeof received[0] === 'number' && \n                   typeof received[1] === 'number' &&\n                   received[0] >= -180 && received[0] <= 180 &&\n                   received[1] >= -90 && received[1] <= 90;\n    \n    if (isValid) {\n      return {\n        message: () => `expected ${received} not to be valid coordinates`,\n        pass: true,\n      };\n    } else {\n      return {\n        message: () => `expected ${received} to be valid coordinates [lng, lat]`,\n        pass: false,\n      };\n    }\n  }\n});\n\n// =====================================================\n// TIPOS PARA CUSTOM MATCHERS\n// =====================================================\n\ndeclare global {\n  namespace jest {\n    interface Matchers<R> {\n      toBeWithinRange(floor: number, ceiling: number): R;\n      toHaveValidCoordinates(): R;\n    }\n  }\n}\n"],"names":["jest","mock","Map","fn","on","off","addSource","addLayer","getSource","setData","setStyle","fitBounds","remove","getCanvas","style","readyState","LngLatBounds","extend","createMockWebSocket","mockCourier","mockGeofenceZone","mockIntersectionObserver","mockLogisticsStats","mockResizeObserver","mockShipment","mockTrackingEvent","waitForLoadingToFinish","configure","testIdAttribute","asyncUtilTimeout","computedStyleSupportsPseudoElements","global","fetch","beforeAll","mockImplementation","url","includes","Promise","resolve","ok","json","data","success","message","afterEach","clearAllMocks","afterAll","restoreAllMocks","WebSocket","addEventListener","removeEventListener","send","close","CONNECTING","OPEN","CLOSING","CLOSED","Object","defineProperty","window","writable","value","Notification","navigator","getCurrentPosition","coords","latitude","longitude","accuracy","watchPosition","clearWatch","IntersectionObserver","observe","unobserve","disconnect","ResizeObserver","id","shipment_number","order_id","status","carrier_id","shipping_service","tracking_number","delivery_address","street","number","apartment","neighborhood","city","state","postal_code","country","pickup_address","weight_kg","dimensions_cm","total_cost","estimated_delivery_date","special_instructions","notes","created_at","updated_at","carrier","name","code","logo_url","is_active","items","product_id","quantity","shipment_id","description","location","occurred_at","website_url","contact_phone","contact_email","supported_services","coverage_areas","base_cost","cost_per_kg","api_config","base_url","api_key","environment","total_shipments","pending_shipments","confirmed_shipments","in_transit_shipments","delivered_shipments","exception_shipments","cancelled_shipments","average_delivery_time","on_time_delivery_rate","total_shipping_cost","active_couriers","type","coordinates","center","active","rules","event_type","action","conditions","shipment_status","stats","total_events","enter_events","exit_events","unique_shipments","avg_dwell_time","last_event","setTimeout","mockReturnValue","mockWebSocket","onopen","onclose","onmessage","onerror","expect","toBeWithinRange","received","floor","ceiling","pass","toHaveValidCoordinates","isValid","Array","isArray","length"],"mappings":"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"}