{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\admin\\logistics\\LogisticsAlerts.tsx"],"sourcesContent":["// =====================================================\n// COMPONENTE: LOGISTICS ALERTS ENTERPRISE\n// Descripción: Sistema de alertas para el dashboard de logística\n// Basado en: Patrones WooCommerce + shadcn/ui Alert\n// =====================================================\n\n'use client';\n\nimport { useState } from 'react';\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { ScrollArea } from '@/components/ui/scroll-area';\nimport { \n  AlertTriangle, \n  AlertCircle, \n  Info, \n  X, \n  Eye, \n  ExternalLink,\n  Clock,\n  Package,\n  Truck,\n  MapPin\n} from 'lucide-react';\nimport { LogisticsAlert } from '@/types/logistics';\nimport { cn } from '@/lib/utils';\nimport { formatDate, formatRelativeTime } from '@/lib/utils/format';\nimport Link from 'next/link';\n\n// =====================================================\n// INTERFACES\n// =====================================================\n\ninterface LogisticsAlertsProps {\n  alerts: LogisticsAlert[];\n  maxVisible?: number;\n  showAll?: boolean;\n  onDismiss?: (alertId: string) => void;\n  onMarkAsRead?: (alertId: string) => void;\n  className?: string;\n}\n\ninterface AlertItemProps {\n  alert: LogisticsAlert;\n  onDismiss?: (alertId: string) => void;\n  onMarkAsRead?: (alertId: string) => void;\n  compact?: boolean;\n}\n\n// =====================================================\n// CONFIGURACIÓN DE ALERTAS\n// =====================================================\n\nconst alertConfig = {\n  error: {\n    icon: AlertTriangle,\n    bgColor: 'bg-red-50 border-red-200',\n    iconColor: 'text-red-600',\n    titleColor: 'text-red-800',\n    descriptionColor: 'text-red-700'\n  },\n  warning: {\n    icon: AlertCircle,\n    bgColor: 'bg-yellow-50 border-yellow-200',\n    iconColor: 'text-yellow-600',\n    titleColor: 'text-yellow-800',\n    descriptionColor: 'text-yellow-700'\n  },\n  info: {\n    icon: Info,\n    bgColor: 'bg-blue-50 border-blue-200',\n    iconColor: 'text-blue-600',\n    titleColor: 'text-blue-800',\n    descriptionColor: 'text-blue-700'\n  }\n};\n\n// =====================================================\n// COMPONENTE PRINCIPAL\n// =====================================================\n\nexport function LogisticsAlerts({\n  alerts,\n  maxVisible = 5,\n  showAll = false,\n  onDismiss,\n  onMarkAsRead,\n  className\n}: LogisticsAlertsProps) {\n  \n  const [dismissedAlerts, setDismissedAlerts] = useState<Set<string>>(new Set());\n  \n  // Filtrar alertas no descartadas\n  const visibleAlerts = alerts.filter(alert => !dismissedAlerts.has(alert.id));\n  \n  // Limitar número de alertas visibles\n  const displayedAlerts = showAll \n    ? visibleAlerts \n    : visibleAlerts.slice(0, maxVisible);\n  \n  const remainingCount = visibleAlerts.length - displayedAlerts.length;\n  \n  // Categorizar alertas\n  const criticalAlerts = visibleAlerts.filter(alert => alert.type === 'error');\n  const warningAlerts = visibleAlerts.filter(alert => alert.type === 'warning');\n  const infoAlerts = visibleAlerts.filter(alert => alert.type === 'info');\n  \n  // Handler para descartar alerta\n  const handleDismiss = (alertId: string) => {\n    setDismissedAlerts(prev => new Set([...prev, alertId]));\n    onDismiss?.(alertId);\n  };\n  \n  // Handler para marcar como leída\n  const handleMarkAsRead = (alertId: string) => {\n    onMarkAsRead?.(alertId);\n  };\n  \n  if (visibleAlerts.length === 0) {\n    return null;\n  }\n  \n  return (\n    <div className={cn(\"space-y-4\", className)}>\n      {/* Resumen de alertas */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center gap-4\">\n          <h3 className=\"text-lg font-semibold\">Alertas del Sistema</h3>\n          <div className=\"flex items-center gap-2\">\n            {criticalAlerts.length > 0 && (\n              <Badge variant=\"destructive\" className=\"flex items-center gap-1\">\n                <AlertTriangle className=\"w-3 h-3\" />\n                {criticalAlerts.length} Críticas\n              </Badge>\n            )}\n            {warningAlerts.length > 0 && (\n              <Badge variant=\"secondary\" className=\"flex items-center gap-1\">\n                <AlertCircle className=\"w-3 h-3\" />\n                {warningAlerts.length} Advertencias\n              </Badge>\n            )}\n            {infoAlerts.length > 0 && (\n              <Badge variant=\"outline\" className=\"flex items-center gap-1\">\n                <Info className=\"w-3 h-3\" />\n                {infoAlerts.length} Informativas\n              </Badge>\n            )}\n          </div>\n        </div>\n        \n        {remainingCount > 0 && (\n          <Button variant=\"outline\" size=\"sm\">\n            Ver todas ({remainingCount} más)\n          </Button>\n        )}\n      </div>\n      \n      {/* Lista de alertas */}\n      <div className=\"space-y-3\">\n        {displayedAlerts.map((alert) => (\n          <AlertItem\n            key={alert.id}\n            alert={alert}\n            onDismiss={handleDismiss}\n            onMarkAsRead={handleMarkAsRead}\n          />\n        ))}\n      </div>\n      \n      {/* Alertas agrupadas por tipo */}\n      {showAll && (\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mt-6\">\n          {/* Alertas críticas */}\n          {criticalAlerts.length > 0 && (\n            <Card className=\"border-red-200\">\n              <CardHeader className=\"pb-3\">\n                <CardTitle className=\"text-sm text-red-800 flex items-center gap-2\">\n                  <AlertTriangle className=\"w-4 h-4\" />\n                  Críticas ({criticalAlerts.length})\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <ScrollArea className=\"h-32\">\n                  <div className=\"space-y-2\">\n                    {criticalAlerts.map((alert) => (\n                      <AlertItem\n                        key={alert.id}\n                        alert={alert}\n                        onDismiss={handleDismiss}\n                        onMarkAsRead={handleMarkAsRead}\n                        compact={true}\n                      />\n                    ))}\n                  </div>\n                </ScrollArea>\n              </CardContent>\n            </Card>\n          )}\n          \n          {/* Alertas de advertencia */}\n          {warningAlerts.length > 0 && (\n            <Card className=\"border-yellow-200\">\n              <CardHeader className=\"pb-3\">\n                <CardTitle className=\"text-sm text-yellow-800 flex items-center gap-2\">\n                  <AlertCircle className=\"w-4 h-4\" />\n                  Advertencias ({warningAlerts.length})\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <ScrollArea className=\"h-32\">\n                  <div className=\"space-y-2\">\n                    {warningAlerts.map((alert) => (\n                      <AlertItem\n                        key={alert.id}\n                        alert={alert}\n                        onDismiss={handleDismiss}\n                        onMarkAsRead={handleMarkAsRead}\n                        compact={true}\n                      />\n                    ))}\n                  </div>\n                </ScrollArea>\n              </CardContent>\n            </Card>\n          )}\n          \n          {/* Alertas informativas */}\n          {infoAlerts.length > 0 && (\n            <Card className=\"border-blue-200\">\n              <CardHeader className=\"pb-3\">\n                <CardTitle className=\"text-sm text-blue-800 flex items-center gap-2\">\n                  <Info className=\"w-4 h-4\" />\n                  Informativas ({infoAlerts.length})\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <ScrollArea className=\"h-32\">\n                  <div className=\"space-y-2\">\n                    {infoAlerts.map((alert) => (\n                      <AlertItem\n                        key={alert.id}\n                        alert={alert}\n                        onDismiss={handleDismiss}\n                        onMarkAsRead={handleMarkAsRead}\n                        compact={true}\n                      />\n                    ))}\n                  </div>\n                </ScrollArea>\n              </CardContent>\n            </Card>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\n// =====================================================\n// COMPONENTE ALERT ITEM\n// =====================================================\n\nfunction AlertItem({\n  alert,\n  onDismiss,\n  onMarkAsRead,\n  compact = false\n}: AlertItemProps) {\n  \n  const config = alertConfig[alert.type];\n  const Icon = config.icon;\n  \n  return (\n    <Alert className={cn(\n      config.bgColor,\n      !alert.is_read && \"ring-2 ring-offset-2\",\n      alert.type === 'error' && !alert.is_read && \"ring-red-200\",\n      alert.type === 'warning' && !alert.is_read && \"ring-yellow-200\",\n      alert.type === 'info' && !alert.is_read && \"ring-blue-200\",\n      compact && \"p-3\"\n    )}>\n      <div className=\"flex items-start justify-between\">\n        <div className=\"flex items-start gap-3 flex-1\">\n          <Icon className={cn(\"w-4 h-4 mt-0.5\", config.iconColor)} />\n          \n          <div className=\"flex-1 space-y-1\">\n            <AlertTitle className={cn(\n              \"text-sm font-medium\",\n              config.titleColor,\n              compact && \"text-xs\"\n            )}>\n              {alert.title}\n              {!alert.is_read && (\n                <Badge variant=\"outline\" className=\"ml-2 text-xs\">\n                  Nuevo\n                </Badge>\n              )}\n            </AlertTitle>\n            \n            <AlertDescription className={cn(\n              \"text-sm\",\n              config.descriptionColor,\n              compact && \"text-xs\"\n            )}>\n              {alert.description}\n            </AlertDescription>\n            \n            {!compact && (\n              <div className=\"flex items-center gap-4 mt-2 text-xs text-muted-foreground\">\n                <div className=\"flex items-center gap-1\">\n                  <Clock className=\"w-3 h-3\" />\n                  {formatRelativeTime(alert.created_at)}\n                </div>\n                \n                {alert.shipment_id && (\n                  <div className=\"flex items-center gap-1\">\n                    <Package className=\"w-3 h-3\" />\n                    Envío #{alert.shipment_id}\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n        \n        {/* Acciones */}\n        <div className=\"flex items-center gap-1 ml-2\">\n          {!alert.is_read && (\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => onMarkAsRead?.(alert.id)}\n              className=\"h-6 w-6 p-0\"\n              title=\"Marcar como leída\"\n            >\n              <Eye className=\"w-3 h-3\" />\n            </Button>\n          )}\n          \n          {alert.action_url && (\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              asChild\n              className=\"h-6 w-6 p-0\"\n              title=\"Ver detalles\"\n            >\n              <Link href={alert.action_url}>\n                <ExternalLink className=\"w-3 h-3\" />\n              </Link>\n            </Button>\n          )}\n          \n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={() => onDismiss?.(alert.id)}\n            className=\"h-6 w-6 p-0\"\n            title=\"Descartar\"\n          >\n            <X className=\"w-3 h-3\" />\n          </Button>\n        </div>\n      </div>\n    </Alert>\n  );\n}\n\n// =====================================================\n// COMPONENTE ALERT SUMMARY\n// =====================================================\n\nexport function LogisticsAlertsSummary({ alerts }: { alerts: LogisticsAlert[] }) {\n  const unreadAlerts = alerts.filter(alert => !alert.is_read);\n  const criticalCount = unreadAlerts.filter(alert => alert.type === 'error').length;\n  const warningCount = unreadAlerts.filter(alert => alert.type === 'warning').length;\n  \n  if (unreadAlerts.length === 0) {\n    return (\n      <div className=\"flex items-center gap-2 text-sm text-green-600\">\n        <CheckCircle className=\"w-4 h-4\" />\n        Sin alertas pendientes\n      </div>\n    );\n  }\n  \n  return (\n    <div className=\"flex items-center gap-3\">\n      {criticalCount > 0 && (\n        <Badge variant=\"destructive\" className=\"flex items-center gap-1\">\n          <AlertTriangle className=\"w-3 h-3\" />\n          {criticalCount}\n        </Badge>\n      )}\n      \n      {warningCount > 0 && (\n        <Badge variant=\"secondary\" className=\"flex items-center gap-1\">\n          <AlertCircle className=\"w-3 h-3\" />\n          {warningCount}\n        </Badge>\n      )}\n      \n      <span className=\"text-sm text-muted-foreground\">\n        {unreadAlerts.length} alertas pendientes\n      </span>\n    </div>\n  );\n}\n"],"names":["LogisticsAlerts","LogisticsAlertsSummary","alertConfig","error","icon","AlertTriangle","bgColor","iconColor","titleColor","descriptionColor","warning","AlertCircle","info","Info","alerts","maxVisible","showAll","onDismiss","onMarkAsRead","className","dismissedAlerts","setDismissedAlerts","useState","Set","visibleAlerts","filter","alert","has","id","displayedAlerts","slice","remainingCount","length","criticalAlerts","type","warningAlerts","infoAlerts","handleDismiss","alertId","prev","handleMarkAsRead","div","cn","h3","Badge","variant","Button","size","map","AlertItem","Card","CardHeader","CardTitle","CardContent","ScrollArea","compact","config","Icon","Alert","is_read","AlertTitle","title","AlertDescription","description","Clock","formatRelativeTime","created_at","shipment_id","Package","onClick","Eye","action_url","asChild","Link","href","ExternalLink","X","unreadAlerts","criticalCount","warningCount","CheckCircle","span"],"mappings":"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"}