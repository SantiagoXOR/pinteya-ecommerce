{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\api\\products.ts"],"sourcesContent":["// ===================================\r\n// PINTEYA E-COMMERCE - FUNCIONES DE API PARA PRODUCTOS\r\n// ===================================\r\n\r\nimport { ProductFilters, ProductWithCategory, ApiResponse, PaginatedResponse } from '@/types/api';\r\n\r\n// ===================================\r\n// FUNCIONES PARA EL FRONTEND\r\n// ===================================\r\n\r\n/**\r\n * Obtiene productos con filtros desde la API\r\n * @param filters - Filtros de productos\r\n * @returns Promise<PaginatedResponse<ProductWithCategory>>\r\n */\r\nexport async function getProducts(filters?: ProductFilters): Promise<PaginatedResponse<ProductWithCategory>> {\r\n  try {\r\n    const searchParams = new URLSearchParams();\r\n\r\n    if (filters) {\r\n      Object.entries(filters).forEach(([key, value]) => {\r\n        if (value !== undefined && value !== null) {\r\n          searchParams.append(key, value.toString());\r\n        }\r\n      });\r\n    }\r\n\r\n    const response = await fetch(`/api/products?${searchParams.toString()}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Error ${response.status}: ${response.statusText}`);\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error obteniendo productos:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n/**\r\n * Obtiene un producto por ID desde la API\r\n * @param id - ID del producto\r\n * @returns Promise<ApiResponse<ProductWithCategory>>\r\n */\r\nexport async function getProductById(id: number): Promise<ApiResponse<ProductWithCategory>> {\r\n  try {\r\n    const response = await fetch(`/api/products/${id}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Error ${response.status}: ${response.statusText}`);\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(`Error obteniendo producto ${id}:`, error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n/**\r\n * Busca productos por término de búsqueda\r\n * @param searchTerm - Término de búsqueda\r\n * @param limit - Límite de resultados\r\n * @returns Promise<PaginatedResponse<ProductWithCategory>>\r\n */\r\nexport async function searchProducts(\r\n  searchTerm: string, \r\n  limit: number = 12\r\n): Promise<PaginatedResponse<ProductWithCategory>> {\r\n  return getProducts({\r\n    search: searchTerm,\r\n    limit,\r\n    page: 1,\r\n  });\r\n}\r\n\r\n/**\r\n * Obtiene productos por categoría\r\n * @param categorySlug - Slug de la categoría\r\n * @param page - Página\r\n * @param limit - Límite de resultados\r\n * @returns Promise<PaginatedResponse<ProductWithCategory>>\r\n */\r\nexport async function getProductsByCategory(\r\n  categorySlug: string,\r\n  page: number = 1,\r\n  limit: number = 12\r\n): Promise<PaginatedResponse<ProductWithCategory>> {\r\n  return getProducts({\r\n    category: categorySlug,\r\n    page,\r\n    limit,\r\n  });\r\n}\r\n\r\n/**\r\n * Obtiene productos con descuento\r\n * @param page - Página\r\n * @param limit - Límite de resultados\r\n * @returns Promise<PaginatedResponse<ProductWithCategory>>\r\n */\r\nexport async function getDiscountedProducts(\r\n  page: number = 1,\r\n  limit: number = 12\r\n): Promise<PaginatedResponse<ProductWithCategory>> {\r\n  // Nota: Esto requeriría un filtro adicional en la API\r\n  // Por ahora, obtenemos todos los productos y filtramos en el frontend\r\n  const response = await getProducts({ page, limit });\r\n\r\n  // Filtrar productos con descuento\r\n  const discountedProducts = response.data.filter(\r\n    product => product.discounted_price && product.discounted_price < product.price\r\n  );\r\n\r\n  return {\r\n    ...response,\r\n    data: discountedProducts,\r\n  };\r\n}\r\n\r\n/**\r\n * Obtiene productos por marca\r\n * @param brandName - Nombre de la marca\r\n * @param page - Página\r\n * @param limit - Límite de resultados\r\n * @returns Promise<PaginatedResponse<ProductWithCategory>>\r\n */\r\nexport async function getProductsByBrand(\r\n  brandName: string,\r\n  page: number = 1,\r\n  limit: number = 12\r\n): Promise<PaginatedResponse<ProductWithCategory>> {\r\n  return getProducts({\r\n    brand: brandName,\r\n    page,\r\n    limit,\r\n  });\r\n}\r\n\r\n/**\r\n * Obtiene productos relacionados (misma categoría)\r\n * @param productId - ID del producto actual\r\n * @param categoryId - ID de la categoría\r\n * @param limit - Límite de resultados\r\n * @returns Promise<ProductWithCategory[]>\r\n */\r\nexport async function getRelatedProducts(\r\n  productId: number,\r\n  categoryId: number,\r\n  limit: number = 4\r\n): Promise<ProductWithCategory[]> {\r\n  try {\r\n    // Obtener productos de la misma categoría\r\n    const response = await fetch(`/api/products?category_id=${categoryId}&limit=${limit + 1}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Error ${response.status}: ${response.statusText}`);\r\n    }\r\n\r\n    const data: PaginatedResponse<ProductWithCategory> = await response.json();\r\n    \r\n    // Filtrar el producto actual y limitar resultados\r\n    return data.data\r\n      .filter(product => product.id !== productId)\r\n      .slice(0, limit);\r\n\r\n  } catch (error) {\r\n    console.error('Error obteniendo productos relacionados:', error);\r\n    return [];\r\n  }\r\n}\r\n\r\n// ===================================\r\n// FUNCIONES AUXILIARES\r\n// ===================================\r\n\r\n/**\r\n * Convierte un producto del formato antiguo al nuevo\r\n * @param oldProduct - Producto en formato antiguo\r\n * @returns ProductWithCategory\r\n */\r\nexport function convertLegacyProduct(oldProduct: any): ProductWithCategory {\r\n  return {\r\n    id: oldProduct.id,\r\n    name: oldProduct.title,\r\n    brand: oldProduct.brand || null, // Marca del producto legacy\r\n    slug: oldProduct.title.toLowerCase().replace(/[^a-z0-9]+/g, '-'),\r\n    description: `Producto ${oldProduct.title}`,\r\n    price: oldProduct.price,\r\n    discounted_price: oldProduct.discountedPrice,\r\n    stock: 50, // Stock por defecto\r\n    category_id: 1, // Categoría por defecto\r\n    images: oldProduct.imgs,\r\n    created_at: new Date().toISOString(),\r\n    updated_at: null, // Campo requerido por el tipo\r\n  };\r\n}\r\n\r\n/**\r\n * Calcula el porcentaje de descuento\r\n * @param originalPrice - Precio original\r\n * @param discountedPrice - Precio con descuento\r\n * @returns number\r\n */\r\nexport function calculateDiscountPercentage(\r\n  originalPrice: number,\r\n  discountedPrice: number\r\n): number {\r\n  if (!discountedPrice || discountedPrice >= originalPrice) {\r\n    return 0;\r\n  }\r\n  \r\n  return Math.round(((originalPrice - discountedPrice) / originalPrice) * 100);\r\n}\r\n\r\n/**\r\n * Formatea el precio para mostrar\r\n * @param price - Precio\r\n * @param currency - Moneda\r\n * @returns string\r\n */\r\nexport function formatPrice(price: number, currency: string = 'ARS'): string {\r\n  return new Intl.NumberFormat('es-AR', {\r\n    style: 'currency',\r\n    currency,\r\n    minimumFractionDigits: 0,\r\n    maximumFractionDigits: 2,\r\n  }).format(price);\r\n}\r\n\r\n/**\r\n * Verifica si un producto está en stock\r\n * @param product - Producto\r\n * @returns boolean\r\n */\r\nexport function isProductInStock(product: ProductWithCategory): boolean {\r\n  return product.stock > 0;\r\n}\r\n\r\n/**\r\n * Obtiene la URL de la imagen principal del producto\r\n * @param product - Producto\r\n * @returns string\r\n */\r\nexport function getProductMainImage(product: ProductWithCategory): string {\r\n  if (product.images?.previews?.[0]) {\r\n    return product.images.previews[0];\r\n  }\r\n  \r\n  if (product.images?.thumbnails?.[0]) {\r\n    return product.images.thumbnails[0];\r\n  }\r\n  \r\n  return '/images/products/placeholder.jpg';\r\n}\r\n"],"names":["calculateDiscountPercentage","convertLegacyProduct","formatPrice","getDiscountedProducts","getProductById","getProductMainImage","getProducts","getProductsByBrand","getProductsByCategory","getRelatedProducts","isProductInStock","searchProducts","filters","searchParams","URLSearchParams","Object","entries","forEach","key","value","undefined","append","toString","response","fetch","method","headers","ok","Error","status","statusText","json","error","console","id","searchTerm","limit","search","page","categorySlug","category","discountedProducts","data","filter","product","discounted_price","price","brandName","brand","productId","categoryId","slice","oldProduct","name","title","slug","toLowerCase","replace","description","discountedPrice","stock","category_id","images","imgs","created_at","Date","toISOString","updated_at","originalPrice","Math","round","currency","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","format","previews","thumbnails"],"mappings":"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"}