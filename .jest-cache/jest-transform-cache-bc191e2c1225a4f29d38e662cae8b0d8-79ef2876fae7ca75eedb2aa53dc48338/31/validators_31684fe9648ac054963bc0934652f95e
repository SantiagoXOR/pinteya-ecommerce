f638ec1021133bdf1de75b3808ef848b
// ===================================
// UTILIDADES DE VALIDACIÓN
// Funciones para validar datos críticos del sistema
// ===================================
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: Object.getOwnPropertyDescriptor(all, name).get
    });
}
_export(exports, {
    get sanitizeString () {
        return sanitizeString;
    },
    get validateAddress () {
        return validateAddress;
    },
    get validateCurrency () {
        return validateCurrency;
    },
    get validateDate () {
        return validateDate;
    },
    get validateDiscount () {
        return validateDiscount;
    },
    get validateEmail () {
        return validateEmail;
    },
    get validateNumberRange () {
        return validateNumberRange;
    },
    get validateOrderData () {
        return validateOrderData;
    },
    get validatePassword () {
        return validatePassword;
    },
    get validatePaymentData () {
        return validatePaymentData;
    },
    get validatePhone () {
        return validatePhone;
    },
    get validateProductData () {
        return validateProductData;
    },
    get validateQuantity () {
        return validateQuantity;
    },
    get validateRequiredFields () {
        return validateRequiredFields;
    },
    get validateURL () {
        return validateURL;
    }
});
function validateEmail(email) {
    if (!email || typeof email !== 'string') {
        return false;
    }
    // Validar longitud total del email
    if (email.length > 254) {
        return false;
    }
    // Validar que no empiece o termine con punto
    if (email.startsWith('.') || email.endsWith('.')) {
        return false;
    }
    // Validar que tenga exactamente un @
    if (email.split('@').length !== 2) {
        return false;
    }
    // Regex para validación de email
    const emailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;
    // Validar formato básico
    if (!emailRegex.test(email)) {
        return false;
    }
    // Validar longitud
    const [localPart, domain] = email.split('@');
    if (localPart.length > 64 || domain.length > 253) {
        return false;
    }
    // Validar que no tenga puntos consecutivos
    if (email.includes('..')) {
        return false;
    }
    return true;
}
function validatePassword(password) {
    const errors = [];
    let message = '';
    if (!password || typeof password !== 'string') {
        return {
            isValid: false,
            errors: [
                'invalid_type'
            ],
            message: 'La contraseña debe ser una cadena de texto'
        };
    }
    // Validar longitud mínima
    if (password.length < 8) {
        errors.push('length');
    }
    // Validar mayúscula
    if (!/[A-Z]/.test(password)) {
        errors.push('uppercase');
    }
    // Validar minúscula
    if (!/[a-z]/.test(password)) {
        errors.push('lowercase');
    }
    // Validar número
    if (!/\d/.test(password)) {
        errors.push('number');
    }
    // Validar carácter especial
    if (!/[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]/.test(password)) {
        errors.push('special');
    }
    // Generar mensaje de error
    if (errors.length > 0) {
        const errorMessages = {
            length: 'al menos 8 caracteres',
            uppercase: 'al menos una letra mayúscula',
            lowercase: 'al menos una letra minúscula',
            number: 'al menos un número',
            special: 'al menos un carácter especial'
        };
        message = `La contraseña debe contener: ${errors.map((e)=>errorMessages[e]).join(', ')}`;
    }
    return {
        isValid: errors.length === 0,
        errors,
        message
    };
}
function validatePhone(phone, country = 'AR') {
    if (!phone || typeof phone !== 'string') {
        return false;
    }
    // Limpiar el teléfono de espacios y caracteres especiales
    const cleanPhone = phone.replace(/[\s\-\(\)]/g, '');
    if (country === 'AR') {
        // Validar teléfonos argentinos
        // Formatos válidos: +541123456789, 1123456789, 01123456789
        const argPhoneRegex = /^(\+54)?0?11\d{8}$|^(\+54)?0?\d{10}$/;
        return argPhoneRegex.test(cleanPhone);
    }
    if (country === 'INTERNATIONAL') {
        // Validar formato internacional básico
        const intPhoneRegex = /^\+\d{10,15}$/;
        return intPhoneRegex.test(cleanPhone);
    }
    return false;
}
function validateProductData(product) {
    const errors = [];
    if (!product || typeof product !== 'object') {
        return {
            isValid: false,
            errors: [
                'invalid_type'
            ],
            message: 'Los datos del producto deben ser un objeto'
        };
    }
    // Validar nombre
    if (!product.name || typeof product.name !== 'string') {
        errors.push('name');
    } else if (product.name.length < 3 || product.name.length > 200) {
        errors.push('name_length');
    } else if (/<script|javascript:|on\w+=/i.test(product.name)) {
        errors.push('name_security');
    }
    // Validar precio
    if (typeof product.price !== 'number' || product.price <= 0) {
        errors.push('price');
    } else if (product.price > 9999999) {
        errors.push('price_too_high');
    }
    // Validar stock
    if (typeof product.stock !== 'number' || product.stock < 0) {
        errors.push('stock');
    }
    // Validar categoría
    if (!product.category_id || typeof product.category_id !== 'number') {
        errors.push('category_id');
    }
    // Validar marca
    if (!product.brand || typeof product.brand !== 'string') {
        errors.push('brand');
    }
    // Validar imágenes
    if (!Array.isArray(product.images) || product.images.length === 0) {
        errors.push('images');
    }
    return {
        isValid: errors.length === 0,
        errors
    };
}
function validateOrderData(order) {
    const errors = [];
    if (!order || typeof order !== 'object') {
        return {
            isValid: false,
            errors: [
                'invalid_type'
            ]
        };
    }
    // Validar user_id
    if (!order.user_id || typeof order.user_id !== 'string') {
        errors.push('user_id');
    }
    // Validar items
    if (!Array.isArray(order.items) || order.items.length === 0) {
        errors.push('items_empty');
    } else {
        // Validar cada item
        order.items.forEach((item, index)=>{
            if (!item.product_id || typeof item.product_id !== 'number') {
                errors.push(`item_${index}_product_id`);
            }
            if (!item.quantity || typeof item.quantity !== 'number' || item.quantity <= 0) {
                errors.push(`item_${index}_quantity`);
            }
            if (typeof item.price !== 'number' || item.price <= 0) {
                errors.push(`item_${index}_price`);
            }
        });
    }
    // Validar total
    if (typeof order.total !== 'number' || order.total <= 0) {
        errors.push('total');
    } else if (Array.isArray(order.items) && order.items.length > 0) {
        // Verificar que el total coincida con la suma de items
        const calculatedTotal = order.items.reduce((sum, item)=>{
            return sum + item.quantity * item.price;
        }, 0);
        if (Math.abs(calculatedTotal - order.total) > 0.01) {
            errors.push('total_mismatch');
        }
    }
    // Validar dirección de envío
    const addressValidation = validateAddress(order.shipping_address);
    if (!addressValidation.isValid) {
        errors.push('shipping_address');
    }
    // Validar método de pago
    if (!order.payment_method || typeof order.payment_method !== 'string') {
        errors.push('payment_method');
    }
    return {
        isValid: errors.length === 0,
        errors
    };
}
function validatePaymentData(payment) {
    const errors = [];
    if (!payment || typeof payment !== 'object') {
        return {
            isValid: false,
            errors: [
                'invalid_type'
            ]
        };
    }
    // Validar método
    if (!payment.method || typeof payment.method !== 'string') {
        errors.push('method');
    }
    // Validar monto
    if (typeof payment.amount !== 'number' || payment.amount <= 0) {
        errors.push('amount');
    }
    // Validar moneda
    if (!validateCurrency(payment.currency)) {
        errors.push('currency');
    }
    // Validaciones específicas para MercadoPago
    if (payment.method === 'mercadopago') {
        if (payment.payer && !validateEmail(payment.payer.email)) {
            errors.push('payer_email');
        }
    }
    return {
        isValid: errors.length === 0,
        errors
    };
}
function validateAddress(address) {
    const errors = [];
    if (!address || typeof address !== 'object') {
        return {
            isValid: false,
            errors: [
                'invalid_type'
            ]
        };
    }
    // Validar campos requeridos
    const requiredFields = [
        'street',
        'city',
        'state',
        'postal_code',
        'country'
    ];
    requiredFields.forEach((field)=>{
        if (!address[field] || typeof address[field] !== 'string' || address[field].trim() === '') {
            errors.push(field);
        }
    });
    // Validar código postal por país
    if (address.country && address.postal_code) {
        const postalCodeValid = validatePostalCode(address.postal_code, address.country);
        if (!postalCodeValid) {
            errors.push('postal_code_format');
        }
    }
    return {
        isValid: errors.length === 0,
        errors
    };
}
// ===================================
// VALIDACIÓN DE CÓDIGO POSTAL
// ===================================
function validatePostalCode(postalCode, country) {
    const patterns = {
        'Argentina': /^[A-Z]?\d{4}[A-Z]{3}$|^\d{4}$/,
        'USA': /^\d{5}(-\d{4})?$/,
        'Brazil': /^\d{5}-?\d{3}$/,
        'Chile': /^\d{7}$/,
        'Canada': /^[A-Za-z]\d[A-Za-z] \d[A-Za-z]\d$/,
        'UK': /^[A-Z]{1,2}\d[A-Z\d]? \d[A-Z]{2}$/i,
        'Germany': /^\d{5}$/,
        'France': /^\d{5}$/,
        'Spain': /^\d{5}$/,
        'Italy': /^\d{5}$/,
        'Mexico': /^\d{5}$/
    };
    const pattern = patterns[country];
    return pattern ? pattern.test(postalCode) : true; // Si no hay patrón, aceptar
}
function validateCurrency(currency) {
    if (!currency || typeof currency !== 'string') {
        return false;
    }
    const supportedCurrencies = [
        'ARS',
        'USD',
        'EUR',
        'BRL',
        'CLP',
        'UYU'
    ];
    return supportedCurrencies.includes(currency.toUpperCase());
}
function validateQuantity(quantity) {
    if (typeof quantity !== 'number') {
        return false;
    }
    // Debe ser un entero positivo
    if (!Number.isInteger(quantity) || quantity <= 0) {
        return false;
    }
    // Límite máximo de cantidad
    if (quantity > 999) {
        return false;
    }
    return true;
}
function validateDiscount(discount) {
    if (!discount || typeof discount !== 'object') {
        return false;
    }
    // Validar tipo
    if (![
        'percentage',
        'fixed'
    ].includes(discount.type)) {
        return false;
    }
    // Validar valor
    if (typeof discount.value !== 'number' || discount.value < 0) {
        return false;
    }
    // Validaciones específicas por tipo
    if (discount.type === 'percentage') {
        // Porcentaje no puede ser mayor a 100
        if (discount.value > 100) {
            return false;
        }
    }
    if (discount.type === 'fixed') {
        // Descuento fijo debe tener moneda
        if (!discount.currency || !validateCurrency(discount.currency)) {
            return false;
        }
    }
    return true;
}
function sanitizeString(input) {
    if (typeof input !== 'string') {
        return '';
    }
    return input.replace(/<script[^>]*>.*?<\/script>/gi, '') // Remover scripts
    .replace(/<[^>]*>/g, '') // Remover HTML tags
    .replace(/javascript:/gi, '') // Remover javascript:
    .replace(/on\w+=/gi, '') // Remover event handlers
    .trim();
}
function validateRequiredFields(obj, requiredFields) {
    const errors = [];
    if (!obj || typeof obj !== 'object') {
        return {
            isValid: false,
            errors: [
                'invalid_object'
            ]
        };
    }
    requiredFields.forEach((field)=>{
        if (!(field in obj) || obj[field] === null || obj[field] === undefined || obj[field] === '') {
            errors.push(field);
        }
    });
    return {
        isValid: errors.length === 0,
        errors
    };
}
function validateNumberRange(value, min, max) {
    if (typeof value !== 'number') {
        return false;
    }
    return value >= min && value <= max;
}
function validateDate(date) {
    if (!date) {
        return false;
    }
    const parsedDate = new Date(date);
    return !isNaN(parsedDate.getTime());
}
function validateURL(url) {
    if (!url || typeof url !== 'string') {
        return false;
    }
    try {
        new URL(url);
        return true;
    } catch  {
        return false;
    }
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbWFydGlcXERlc2t0b3BcXERFU0FSUk9MTE9TV1xcQk9JTEVSUExBVFRFIEUtQ09NTUVSQ0VcXHNyY1xcbGliXFx1dGlsc1xcdmFsaWRhdG9ycy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gVVRJTElEQURFUyBERSBWQUxJREFDScOTTlxuLy8gRnVuY2lvbmVzIHBhcmEgdmFsaWRhciBkYXRvcyBjcsOtdGljb3MgZGVsIHNpc3RlbWFcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbmV4cG9ydCBpbnRlcmZhY2UgVmFsaWRhdGlvblJlc3VsdCB7XG4gIGlzVmFsaWQ6IGJvb2xlYW47XG4gIGVycm9yczogc3RyaW5nW107XG4gIG1lc3NhZ2U/OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgUHJvZHVjdERhdGEge1xuICBuYW1lOiBzdHJpbmc7XG4gIGRlc2NyaXB0aW9uPzogc3RyaW5nO1xuICBwcmljZTogbnVtYmVyO1xuICBzdG9jazogbnVtYmVyO1xuICBjYXRlZ29yeV9pZDogbnVtYmVyO1xuICBicmFuZDogc3RyaW5nO1xuICBpbWFnZXM6IHN0cmluZ1tdO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIE9yZGVySXRlbSB7XG4gIHByb2R1Y3RfaWQ6IG51bWJlcjtcbiAgcXVhbnRpdHk6IG51bWJlcjtcbiAgcHJpY2U6IG51bWJlcjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBBZGRyZXNzIHtcbiAgc3RyZWV0OiBzdHJpbmc7XG4gIGNpdHk6IHN0cmluZztcbiAgc3RhdGU6IHN0cmluZztcbiAgcG9zdGFsX2NvZGU6IHN0cmluZztcbiAgY291bnRyeTogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIE9yZGVyRGF0YSB7XG4gIHVzZXJfaWQ6IHN0cmluZztcbiAgaXRlbXM6IE9yZGVySXRlbVtdO1xuICB0b3RhbDogbnVtYmVyO1xuICBzaGlwcGluZ19hZGRyZXNzOiBBZGRyZXNzO1xuICBwYXltZW50X21ldGhvZDogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFBheW1lbnREYXRhIHtcbiAgbWV0aG9kOiBzdHJpbmc7XG4gIGFtb3VudDogbnVtYmVyO1xuICBjdXJyZW5jeTogc3RyaW5nO1xuICBwYXltZW50X21ldGhvZF9pZD86IHN0cmluZztcbiAgaW5zdGFsbG1lbnRzPzogbnVtYmVyO1xuICBwYXllcj86IHtcbiAgICBlbWFpbDogc3RyaW5nO1xuICAgIGlkZW50aWZpY2F0aW9uPzoge1xuICAgICAgdHlwZTogc3RyaW5nO1xuICAgICAgbnVtYmVyOiBzdHJpbmc7XG4gICAgfTtcbiAgfTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBEaXNjb3VudERhdGEge1xuICB0eXBlOiAncGVyY2VudGFnZScgfCAnZml4ZWQnO1xuICB2YWx1ZTogbnVtYmVyO1xuICBjdXJyZW5jeT86IHN0cmluZztcbn1cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIFZBTElEQUNJw5NOIERFIEVNQUlMXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG5leHBvcnQgZnVuY3Rpb24gdmFsaWRhdGVFbWFpbChlbWFpbDogYW55KTogYm9vbGVhbiB7XG4gIGlmICghZW1haWwgfHwgdHlwZW9mIGVtYWlsICE9PSAnc3RyaW5nJykge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIC8vIFZhbGlkYXIgbG9uZ2l0dWQgdG90YWwgZGVsIGVtYWlsXG4gIGlmIChlbWFpbC5sZW5ndGggPiAyNTQpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICAvLyBWYWxpZGFyIHF1ZSBubyBlbXBpZWNlIG8gdGVybWluZSBjb24gcHVudG9cbiAgaWYgKGVtYWlsLnN0YXJ0c1dpdGgoJy4nKSB8fCBlbWFpbC5lbmRzV2l0aCgnLicpKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgLy8gVmFsaWRhciBxdWUgdGVuZ2EgZXhhY3RhbWVudGUgdW4gQFxuICBpZiAoZW1haWwuc3BsaXQoJ0AnKS5sZW5ndGggIT09IDIpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICAvLyBSZWdleCBwYXJhIHZhbGlkYWNpw7NuIGRlIGVtYWlsXG4gIGNvbnN0IGVtYWlsUmVnZXggPSAvXlthLXpBLVowLTkuISMkJSYnKisvPT9eX2B7fH1+LV0rQFthLXpBLVowLTldKD86W2EtekEtWjAtOS1dezAsNjF9W2EtekEtWjAtOV0pPyg/OlxcLlthLXpBLVowLTldKD86W2EtekEtWjAtOS1dezAsNjF9W2EtekEtWjAtOV0pPykqJC87XG4gIFxuICAvLyBWYWxpZGFyIGZvcm1hdG8gYsOhc2ljb1xuICBpZiAoIWVtYWlsUmVnZXgudGVzdChlbWFpbCkpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICAvLyBWYWxpZGFyIGxvbmdpdHVkXG4gIGNvbnN0IFtsb2NhbFBhcnQsIGRvbWFpbl0gPSBlbWFpbC5zcGxpdCgnQCcpO1xuICBpZiAobG9jYWxQYXJ0Lmxlbmd0aCA+IDY0IHx8IGRvbWFpbi5sZW5ndGggPiAyNTMpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICAvLyBWYWxpZGFyIHF1ZSBubyB0ZW5nYSBwdW50b3MgY29uc2VjdXRpdm9zXG4gIGlmIChlbWFpbC5pbmNsdWRlcygnLi4nKSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHJldHVybiB0cnVlO1xufVxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gVkFMSURBQ0nDk04gREUgQ09OVFJBU0XDkUFcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbmV4cG9ydCBmdW5jdGlvbiB2YWxpZGF0ZVBhc3N3b3JkKHBhc3N3b3JkOiBhbnkpOiBWYWxpZGF0aW9uUmVzdWx0IHtcbiAgY29uc3QgZXJyb3JzOiBzdHJpbmdbXSA9IFtdO1xuICBsZXQgbWVzc2FnZSA9ICcnO1xuXG4gIGlmICghcGFzc3dvcmQgfHwgdHlwZW9mIHBhc3N3b3JkICE9PSAnc3RyaW5nJykge1xuICAgIHJldHVybiB7XG4gICAgICBpc1ZhbGlkOiBmYWxzZSxcbiAgICAgIGVycm9yczogWydpbnZhbGlkX3R5cGUnXSxcbiAgICAgIG1lc3NhZ2U6ICdMYSBjb250cmFzZcOxYSBkZWJlIHNlciB1bmEgY2FkZW5hIGRlIHRleHRvJ1xuICAgIH07XG4gIH1cblxuICAvLyBWYWxpZGFyIGxvbmdpdHVkIG3DrW5pbWFcbiAgaWYgKHBhc3N3b3JkLmxlbmd0aCA8IDgpIHtcbiAgICBlcnJvcnMucHVzaCgnbGVuZ3RoJyk7XG4gIH1cblxuICAvLyBWYWxpZGFyIG1hecO6c2N1bGFcbiAgaWYgKCEvW0EtWl0vLnRlc3QocGFzc3dvcmQpKSB7XG4gICAgZXJyb3JzLnB1c2goJ3VwcGVyY2FzZScpO1xuICB9XG5cbiAgLy8gVmFsaWRhciBtaW7DunNjdWxhXG4gIGlmICghL1thLXpdLy50ZXN0KHBhc3N3b3JkKSkge1xuICAgIGVycm9ycy5wdXNoKCdsb3dlcmNhc2UnKTtcbiAgfVxuXG4gIC8vIFZhbGlkYXIgbsO6bWVyb1xuICBpZiAoIS9cXGQvLnRlc3QocGFzc3dvcmQpKSB7XG4gICAgZXJyb3JzLnB1c2goJ251bWJlcicpO1xuICB9XG5cbiAgLy8gVmFsaWRhciBjYXLDoWN0ZXIgZXNwZWNpYWxcbiAgaWYgKCEvWyFAIyQlXiYqKClfK1xcLT1cXFtcXF17fTsnOlwiXFxcXHwsLjw+XFwvP10vLnRlc3QocGFzc3dvcmQpKSB7XG4gICAgZXJyb3JzLnB1c2goJ3NwZWNpYWwnKTtcbiAgfVxuXG4gIC8vIEdlbmVyYXIgbWVuc2FqZSBkZSBlcnJvclxuICBpZiAoZXJyb3JzLmxlbmd0aCA+IDApIHtcbiAgICBjb25zdCBlcnJvck1lc3NhZ2VzID0ge1xuICAgICAgbGVuZ3RoOiAnYWwgbWVub3MgOCBjYXJhY3RlcmVzJyxcbiAgICAgIHVwcGVyY2FzZTogJ2FsIG1lbm9zIHVuYSBsZXRyYSBtYXnDunNjdWxhJyxcbiAgICAgIGxvd2VyY2FzZTogJ2FsIG1lbm9zIHVuYSBsZXRyYSBtaW7DunNjdWxhJyxcbiAgICAgIG51bWJlcjogJ2FsIG1lbm9zIHVuIG7Dum1lcm8nLFxuICAgICAgc3BlY2lhbDogJ2FsIG1lbm9zIHVuIGNhcsOhY3RlciBlc3BlY2lhbCdcbiAgICB9O1xuXG4gICAgbWVzc2FnZSA9IGBMYSBjb250cmFzZcOxYSBkZWJlIGNvbnRlbmVyOiAke2Vycm9ycy5tYXAoZSA9PiBlcnJvck1lc3NhZ2VzW2UgYXMga2V5b2YgdHlwZW9mIGVycm9yTWVzc2FnZXNdKS5qb2luKCcsICcpfWA7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIGlzVmFsaWQ6IGVycm9ycy5sZW5ndGggPT09IDAsXG4gICAgZXJyb3JzLFxuICAgIG1lc3NhZ2VcbiAgfTtcbn1cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIFZBTElEQUNJw5NOIERFIFRFTMOJRk9OT1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuZXhwb3J0IGZ1bmN0aW9uIHZhbGlkYXRlUGhvbmUocGhvbmU6IGFueSwgY291bnRyeTogJ0FSJyB8ICdJTlRFUk5BVElPTkFMJyA9ICdBUicpOiBib29sZWFuIHtcbiAgaWYgKCFwaG9uZSB8fCB0eXBlb2YgcGhvbmUgIT09ICdzdHJpbmcnKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgLy8gTGltcGlhciBlbCB0ZWzDqWZvbm8gZGUgZXNwYWNpb3MgeSBjYXJhY3RlcmVzIGVzcGVjaWFsZXNcbiAgY29uc3QgY2xlYW5QaG9uZSA9IHBob25lLnJlcGxhY2UoL1tcXHNcXC1cXChcXCldL2csICcnKTtcblxuICBpZiAoY291bnRyeSA9PT0gJ0FSJykge1xuICAgIC8vIFZhbGlkYXIgdGVsw6lmb25vcyBhcmdlbnRpbm9zXG4gICAgLy8gRm9ybWF0b3MgdsOhbGlkb3M6ICs1NDExMjM0NTY3ODksIDExMjM0NTY3ODksIDAxMTIzNDU2Nzg5XG4gICAgY29uc3QgYXJnUGhvbmVSZWdleCA9IC9eKFxcKzU0KT8wPzExXFxkezh9JHxeKFxcKzU0KT8wP1xcZHsxMH0kLztcbiAgICByZXR1cm4gYXJnUGhvbmVSZWdleC50ZXN0KGNsZWFuUGhvbmUpO1xuICB9XG5cbiAgaWYgKGNvdW50cnkgPT09ICdJTlRFUk5BVElPTkFMJykge1xuICAgIC8vIFZhbGlkYXIgZm9ybWF0byBpbnRlcm5hY2lvbmFsIGLDoXNpY29cbiAgICBjb25zdCBpbnRQaG9uZVJlZ2V4ID0gL15cXCtcXGR7MTAsMTV9JC87XG4gICAgcmV0dXJuIGludFBob25lUmVnZXgudGVzdChjbGVhblBob25lKTtcbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn1cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIFZBTElEQUNJw5NOIERFIERBVE9TIERFIFBST0RVQ1RPXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG5leHBvcnQgZnVuY3Rpb24gdmFsaWRhdGVQcm9kdWN0RGF0YShwcm9kdWN0OiBhbnkpOiBWYWxpZGF0aW9uUmVzdWx0IHtcbiAgY29uc3QgZXJyb3JzOiBzdHJpbmdbXSA9IFtdO1xuXG4gIGlmICghcHJvZHVjdCB8fCB0eXBlb2YgcHJvZHVjdCAhPT0gJ29iamVjdCcpIHtcbiAgICByZXR1cm4ge1xuICAgICAgaXNWYWxpZDogZmFsc2UsXG4gICAgICBlcnJvcnM6IFsnaW52YWxpZF90eXBlJ10sXG4gICAgICBtZXNzYWdlOiAnTG9zIGRhdG9zIGRlbCBwcm9kdWN0byBkZWJlbiBzZXIgdW4gb2JqZXRvJ1xuICAgIH07XG4gIH1cblxuICAvLyBWYWxpZGFyIG5vbWJyZVxuICBpZiAoIXByb2R1Y3QubmFtZSB8fCB0eXBlb2YgcHJvZHVjdC5uYW1lICE9PSAnc3RyaW5nJykge1xuICAgIGVycm9ycy5wdXNoKCduYW1lJyk7XG4gIH0gZWxzZSBpZiAocHJvZHVjdC5uYW1lLmxlbmd0aCA8IDMgfHwgcHJvZHVjdC5uYW1lLmxlbmd0aCA+IDIwMCkge1xuICAgIGVycm9ycy5wdXNoKCduYW1lX2xlbmd0aCcpO1xuICB9IGVsc2UgaWYgKC88c2NyaXB0fGphdmFzY3JpcHQ6fG9uXFx3Kz0vaS50ZXN0KHByb2R1Y3QubmFtZSkpIHtcbiAgICBlcnJvcnMucHVzaCgnbmFtZV9zZWN1cml0eScpO1xuICB9XG5cbiAgLy8gVmFsaWRhciBwcmVjaW9cbiAgaWYgKHR5cGVvZiBwcm9kdWN0LnByaWNlICE9PSAnbnVtYmVyJyB8fCBwcm9kdWN0LnByaWNlIDw9IDApIHtcbiAgICBlcnJvcnMucHVzaCgncHJpY2UnKTtcbiAgfSBlbHNlIGlmIChwcm9kdWN0LnByaWNlID4gOTk5OTk5OSkge1xuICAgIGVycm9ycy5wdXNoKCdwcmljZV90b29faGlnaCcpO1xuICB9XG5cbiAgLy8gVmFsaWRhciBzdG9ja1xuICBpZiAodHlwZW9mIHByb2R1Y3Quc3RvY2sgIT09ICdudW1iZXInIHx8IHByb2R1Y3Quc3RvY2sgPCAwKSB7XG4gICAgZXJyb3JzLnB1c2goJ3N0b2NrJyk7XG4gIH1cblxuICAvLyBWYWxpZGFyIGNhdGVnb3LDrWFcbiAgaWYgKCFwcm9kdWN0LmNhdGVnb3J5X2lkIHx8IHR5cGVvZiBwcm9kdWN0LmNhdGVnb3J5X2lkICE9PSAnbnVtYmVyJykge1xuICAgIGVycm9ycy5wdXNoKCdjYXRlZ29yeV9pZCcpO1xuICB9XG5cbiAgLy8gVmFsaWRhciBtYXJjYVxuICBpZiAoIXByb2R1Y3QuYnJhbmQgfHwgdHlwZW9mIHByb2R1Y3QuYnJhbmQgIT09ICdzdHJpbmcnKSB7XG4gICAgZXJyb3JzLnB1c2goJ2JyYW5kJyk7XG4gIH1cblxuICAvLyBWYWxpZGFyIGltw6FnZW5lc1xuICBpZiAoIUFycmF5LmlzQXJyYXkocHJvZHVjdC5pbWFnZXMpIHx8IHByb2R1Y3QuaW1hZ2VzLmxlbmd0aCA9PT0gMCkge1xuICAgIGVycm9ycy5wdXNoKCdpbWFnZXMnKTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgaXNWYWxpZDogZXJyb3JzLmxlbmd0aCA9PT0gMCxcbiAgICBlcnJvcnNcbiAgfTtcbn1cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIFZBTElEQUNJw5NOIERFIERBVE9TIERFIE9SREVOXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG5leHBvcnQgZnVuY3Rpb24gdmFsaWRhdGVPcmRlckRhdGEob3JkZXI6IGFueSk6IFZhbGlkYXRpb25SZXN1bHQge1xuICBjb25zdCBlcnJvcnM6IHN0cmluZ1tdID0gW107XG5cbiAgaWYgKCFvcmRlciB8fCB0eXBlb2Ygb3JkZXIgIT09ICdvYmplY3QnKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGlzVmFsaWQ6IGZhbHNlLFxuICAgICAgZXJyb3JzOiBbJ2ludmFsaWRfdHlwZSddXG4gICAgfTtcbiAgfVxuXG4gIC8vIFZhbGlkYXIgdXNlcl9pZFxuICBpZiAoIW9yZGVyLnVzZXJfaWQgfHwgdHlwZW9mIG9yZGVyLnVzZXJfaWQgIT09ICdzdHJpbmcnKSB7XG4gICAgZXJyb3JzLnB1c2goJ3VzZXJfaWQnKTtcbiAgfVxuXG4gIC8vIFZhbGlkYXIgaXRlbXNcbiAgaWYgKCFBcnJheS5pc0FycmF5KG9yZGVyLml0ZW1zKSB8fCBvcmRlci5pdGVtcy5sZW5ndGggPT09IDApIHtcbiAgICBlcnJvcnMucHVzaCgnaXRlbXNfZW1wdHknKTtcbiAgfSBlbHNlIHtcbiAgICAvLyBWYWxpZGFyIGNhZGEgaXRlbVxuICAgIG9yZGVyLml0ZW1zLmZvckVhY2goKGl0ZW06IGFueSwgaW5kZXg6IG51bWJlcikgPT4ge1xuICAgICAgaWYgKCFpdGVtLnByb2R1Y3RfaWQgfHwgdHlwZW9mIGl0ZW0ucHJvZHVjdF9pZCAhPT0gJ251bWJlcicpIHtcbiAgICAgICAgZXJyb3JzLnB1c2goYGl0ZW1fJHtpbmRleH1fcHJvZHVjdF9pZGApO1xuICAgICAgfVxuICAgICAgaWYgKCFpdGVtLnF1YW50aXR5IHx8IHR5cGVvZiBpdGVtLnF1YW50aXR5ICE9PSAnbnVtYmVyJyB8fCBpdGVtLnF1YW50aXR5IDw9IDApIHtcbiAgICAgICAgZXJyb3JzLnB1c2goYGl0ZW1fJHtpbmRleH1fcXVhbnRpdHlgKTtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YgaXRlbS5wcmljZSAhPT0gJ251bWJlcicgfHwgaXRlbS5wcmljZSA8PSAwKSB7XG4gICAgICAgIGVycm9ycy5wdXNoKGBpdGVtXyR7aW5kZXh9X3ByaWNlYCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICAvLyBWYWxpZGFyIHRvdGFsXG4gIGlmICh0eXBlb2Ygb3JkZXIudG90YWwgIT09ICdudW1iZXInIHx8IG9yZGVyLnRvdGFsIDw9IDApIHtcbiAgICBlcnJvcnMucHVzaCgndG90YWwnKTtcbiAgfSBlbHNlIGlmIChBcnJheS5pc0FycmF5KG9yZGVyLml0ZW1zKSAmJiBvcmRlci5pdGVtcy5sZW5ndGggPiAwKSB7XG4gICAgLy8gVmVyaWZpY2FyIHF1ZSBlbCB0b3RhbCBjb2luY2lkYSBjb24gbGEgc3VtYSBkZSBpdGVtc1xuICAgIGNvbnN0IGNhbGN1bGF0ZWRUb3RhbCA9IG9yZGVyLml0ZW1zLnJlZHVjZSgoc3VtOiBudW1iZXIsIGl0ZW06IGFueSkgPT4ge1xuICAgICAgcmV0dXJuIHN1bSArIChpdGVtLnF1YW50aXR5ICogaXRlbS5wcmljZSk7XG4gICAgfSwgMCk7XG4gICAgXG4gICAgaWYgKE1hdGguYWJzKGNhbGN1bGF0ZWRUb3RhbCAtIG9yZGVyLnRvdGFsKSA+IDAuMDEpIHtcbiAgICAgIGVycm9ycy5wdXNoKCd0b3RhbF9taXNtYXRjaCcpO1xuICAgIH1cbiAgfVxuXG4gIC8vIFZhbGlkYXIgZGlyZWNjacOzbiBkZSBlbnbDrW9cbiAgY29uc3QgYWRkcmVzc1ZhbGlkYXRpb24gPSB2YWxpZGF0ZUFkZHJlc3Mob3JkZXIuc2hpcHBpbmdfYWRkcmVzcyk7XG4gIGlmICghYWRkcmVzc1ZhbGlkYXRpb24uaXNWYWxpZCkge1xuICAgIGVycm9ycy5wdXNoKCdzaGlwcGluZ19hZGRyZXNzJyk7XG4gIH1cblxuICAvLyBWYWxpZGFyIG3DqXRvZG8gZGUgcGFnb1xuICBpZiAoIW9yZGVyLnBheW1lbnRfbWV0aG9kIHx8IHR5cGVvZiBvcmRlci5wYXltZW50X21ldGhvZCAhPT0gJ3N0cmluZycpIHtcbiAgICBlcnJvcnMucHVzaCgncGF5bWVudF9tZXRob2QnKTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgaXNWYWxpZDogZXJyb3JzLmxlbmd0aCA9PT0gMCxcbiAgICBlcnJvcnNcbiAgfTtcbn1cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIFZBTElEQUNJw5NOIERFIERBVE9TIERFIFBBR09cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbmV4cG9ydCBmdW5jdGlvbiB2YWxpZGF0ZVBheW1lbnREYXRhKHBheW1lbnQ6IGFueSk6IFZhbGlkYXRpb25SZXN1bHQge1xuICBjb25zdCBlcnJvcnM6IHN0cmluZ1tdID0gW107XG5cbiAgaWYgKCFwYXltZW50IHx8IHR5cGVvZiBwYXltZW50ICE9PSAnb2JqZWN0Jykge1xuICAgIHJldHVybiB7XG4gICAgICBpc1ZhbGlkOiBmYWxzZSxcbiAgICAgIGVycm9yczogWydpbnZhbGlkX3R5cGUnXVxuICAgIH07XG4gIH1cblxuICAvLyBWYWxpZGFyIG3DqXRvZG9cbiAgaWYgKCFwYXltZW50Lm1ldGhvZCB8fCB0eXBlb2YgcGF5bWVudC5tZXRob2QgIT09ICdzdHJpbmcnKSB7XG4gICAgZXJyb3JzLnB1c2goJ21ldGhvZCcpO1xuICB9XG5cbiAgLy8gVmFsaWRhciBtb250b1xuICBpZiAodHlwZW9mIHBheW1lbnQuYW1vdW50ICE9PSAnbnVtYmVyJyB8fCBwYXltZW50LmFtb3VudCA8PSAwKSB7XG4gICAgZXJyb3JzLnB1c2goJ2Ftb3VudCcpO1xuICB9XG5cbiAgLy8gVmFsaWRhciBtb25lZGFcbiAgaWYgKCF2YWxpZGF0ZUN1cnJlbmN5KHBheW1lbnQuY3VycmVuY3kpKSB7XG4gICAgZXJyb3JzLnB1c2goJ2N1cnJlbmN5Jyk7XG4gIH1cblxuICAvLyBWYWxpZGFjaW9uZXMgZXNwZWPDrWZpY2FzIHBhcmEgTWVyY2Fkb1BhZ29cbiAgaWYgKHBheW1lbnQubWV0aG9kID09PSAnbWVyY2Fkb3BhZ28nKSB7XG4gICAgaWYgKHBheW1lbnQucGF5ZXIgJiYgIXZhbGlkYXRlRW1haWwocGF5bWVudC5wYXllci5lbWFpbCkpIHtcbiAgICAgIGVycm9ycy5wdXNoKCdwYXllcl9lbWFpbCcpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB7XG4gICAgaXNWYWxpZDogZXJyb3JzLmxlbmd0aCA9PT0gMCxcbiAgICBlcnJvcnNcbiAgfTtcbn1cblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIFZBTElEQUNJw5NOIERFIERJUkVDQ0nDk05cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbmV4cG9ydCBmdW5jdGlvbiB2YWxpZGF0ZUFkZHJlc3MoYWRkcmVzczogYW55KTogVmFsaWRhdGlvblJlc3VsdCB7XG4gIGNvbnN0IGVycm9yczogc3RyaW5nW10gPSBbXTtcblxuICBpZiAoIWFkZHJlc3MgfHwgdHlwZW9mIGFkZHJlc3MgIT09ICdvYmplY3QnKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGlzVmFsaWQ6IGZhbHNlLFxuICAgICAgZXJyb3JzOiBbJ2ludmFsaWRfdHlwZSddXG4gICAgfTtcbiAgfVxuXG4gIC8vIFZhbGlkYXIgY2FtcG9zIHJlcXVlcmlkb3NcbiAgY29uc3QgcmVxdWlyZWRGaWVsZHMgPSBbJ3N0cmVldCcsICdjaXR5JywgJ3N0YXRlJywgJ3Bvc3RhbF9jb2RlJywgJ2NvdW50cnknXTtcbiAgcmVxdWlyZWRGaWVsZHMuZm9yRWFjaChmaWVsZCA9PiB7XG4gICAgaWYgKCFhZGRyZXNzW2ZpZWxkXSB8fCB0eXBlb2YgYWRkcmVzc1tmaWVsZF0gIT09ICdzdHJpbmcnIHx8IGFkZHJlc3NbZmllbGRdLnRyaW0oKSA9PT0gJycpIHtcbiAgICAgIGVycm9ycy5wdXNoKGZpZWxkKTtcbiAgICB9XG4gIH0pO1xuXG4gIC8vIFZhbGlkYXIgY8OzZGlnbyBwb3N0YWwgcG9yIHBhw61zXG4gIGlmIChhZGRyZXNzLmNvdW50cnkgJiYgYWRkcmVzcy5wb3N0YWxfY29kZSkge1xuICAgIGNvbnN0IHBvc3RhbENvZGVWYWxpZCA9IHZhbGlkYXRlUG9zdGFsQ29kZShhZGRyZXNzLnBvc3RhbF9jb2RlLCBhZGRyZXNzLmNvdW50cnkpO1xuICAgIGlmICghcG9zdGFsQ29kZVZhbGlkKSB7XG4gICAgICBlcnJvcnMucHVzaCgncG9zdGFsX2NvZGVfZm9ybWF0Jyk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBpc1ZhbGlkOiBlcnJvcnMubGVuZ3RoID09PSAwLFxuICAgIGVycm9yc1xuICB9O1xufVxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gVkFMSURBQ0nDk04gREUgQ8OTRElHTyBQT1NUQUxcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbmZ1bmN0aW9uIHZhbGlkYXRlUG9zdGFsQ29kZShwb3N0YWxDb2RlOiBzdHJpbmcsIGNvdW50cnk6IHN0cmluZyk6IGJvb2xlYW4ge1xuICBjb25zdCBwYXR0ZXJuczogeyBba2V5OiBzdHJpbmddOiBSZWdFeHAgfSA9IHtcbiAgICAnQXJnZW50aW5hJzogL15bQS1aXT9cXGR7NH1bQS1aXXszfSR8XlxcZHs0fSQvLFxuICAgICdVU0EnOiAvXlxcZHs1fSgtXFxkezR9KT8kLyxcbiAgICAnQnJhemlsJzogL15cXGR7NX0tP1xcZHszfSQvLFxuICAgICdDaGlsZSc6IC9eXFxkezd9JC8sXG4gICAgJ0NhbmFkYSc6IC9eW0EtWmEtel1cXGRbQS1aYS16XSBcXGRbQS1aYS16XVxcZCQvLFxuICAgICdVSyc6IC9eW0EtWl17MSwyfVxcZFtBLVpcXGRdPyBcXGRbQS1aXXsyfSQvaSxcbiAgICAnR2VybWFueSc6IC9eXFxkezV9JC8sXG4gICAgJ0ZyYW5jZSc6IC9eXFxkezV9JC8sXG4gICAgJ1NwYWluJzogL15cXGR7NX0kLyxcbiAgICAnSXRhbHknOiAvXlxcZHs1fSQvLFxuICAgICdNZXhpY28nOiAvXlxcZHs1fSQvXG4gIH07XG5cbiAgY29uc3QgcGF0dGVybiA9IHBhdHRlcm5zW2NvdW50cnldO1xuICByZXR1cm4gcGF0dGVybiA/IHBhdHRlcm4udGVzdChwb3N0YWxDb2RlKSA6IHRydWU7IC8vIFNpIG5vIGhheSBwYXRyw7NuLCBhY2VwdGFyXG59XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBWQUxJREFDScOTTiBERSBNT05FREFcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbmV4cG9ydCBmdW5jdGlvbiB2YWxpZGF0ZUN1cnJlbmN5KGN1cnJlbmN5OiBhbnkpOiBib29sZWFuIHtcbiAgaWYgKCFjdXJyZW5jeSB8fCB0eXBlb2YgY3VycmVuY3kgIT09ICdzdHJpbmcnKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgY29uc3Qgc3VwcG9ydGVkQ3VycmVuY2llcyA9IFsnQVJTJywgJ1VTRCcsICdFVVInLCAnQlJMJywgJ0NMUCcsICdVWVUnXTtcbiAgcmV0dXJuIHN1cHBvcnRlZEN1cnJlbmNpZXMuaW5jbHVkZXMoY3VycmVuY3kudG9VcHBlckNhc2UoKSk7XG59XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBWQUxJREFDScOTTiBERSBDQU5USURBRFxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuZXhwb3J0IGZ1bmN0aW9uIHZhbGlkYXRlUXVhbnRpdHkocXVhbnRpdHk6IGFueSk6IGJvb2xlYW4ge1xuICBpZiAodHlwZW9mIHF1YW50aXR5ICE9PSAnbnVtYmVyJykge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIC8vIERlYmUgc2VyIHVuIGVudGVybyBwb3NpdGl2b1xuICBpZiAoIU51bWJlci5pc0ludGVnZXIocXVhbnRpdHkpIHx8IHF1YW50aXR5IDw9IDApIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICAvLyBMw61taXRlIG3DoXhpbW8gZGUgY2FudGlkYWRcbiAgaWYgKHF1YW50aXR5ID4gOTk5KSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgcmV0dXJuIHRydWU7XG59XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBWQUxJREFDScOTTiBERSBERVNDVUVOVE9cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbmV4cG9ydCBmdW5jdGlvbiB2YWxpZGF0ZURpc2NvdW50KGRpc2NvdW50OiBhbnkpOiBib29sZWFuIHtcbiAgaWYgKCFkaXNjb3VudCB8fCB0eXBlb2YgZGlzY291bnQgIT09ICdvYmplY3QnKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgLy8gVmFsaWRhciB0aXBvXG4gIGlmICghWydwZXJjZW50YWdlJywgJ2ZpeGVkJ10uaW5jbHVkZXMoZGlzY291bnQudHlwZSkpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICAvLyBWYWxpZGFyIHZhbG9yXG4gIGlmICh0eXBlb2YgZGlzY291bnQudmFsdWUgIT09ICdudW1iZXInIHx8IGRpc2NvdW50LnZhbHVlIDwgMCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIC8vIFZhbGlkYWNpb25lcyBlc3BlY8OtZmljYXMgcG9yIHRpcG9cbiAgaWYgKGRpc2NvdW50LnR5cGUgPT09ICdwZXJjZW50YWdlJykge1xuICAgIC8vIFBvcmNlbnRhamUgbm8gcHVlZGUgc2VyIG1heW9yIGEgMTAwXG4gICAgaWYgKGRpc2NvdW50LnZhbHVlID4gMTAwKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgaWYgKGRpc2NvdW50LnR5cGUgPT09ICdmaXhlZCcpIHtcbiAgICAvLyBEZXNjdWVudG8gZmlqbyBkZWJlIHRlbmVyIG1vbmVkYVxuICAgIGlmICghZGlzY291bnQuY3VycmVuY3kgfHwgIXZhbGlkYXRlQ3VycmVuY3koZGlzY291bnQuY3VycmVuY3kpKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRydWU7XG59XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBVVElMSURBREVTIEFESUNJT05BTEVTXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vKipcbiAqIFNhbml0aXphIHVuYSBjYWRlbmEgZGUgdGV4dG8gcmVtb3ZpZW5kbyBjYXJhY3RlcmVzIHBlbGlncm9zb3NcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNhbml0aXplU3RyaW5nKGlucHV0OiBzdHJpbmcpOiBzdHJpbmcge1xuICBpZiAodHlwZW9mIGlucHV0ICE9PSAnc3RyaW5nJykge1xuICAgIHJldHVybiAnJztcbiAgfVxuXG4gIHJldHVybiBpbnB1dFxuICAgIC5yZXBsYWNlKC88c2NyaXB0W14+XSo+Lio/PFxcL3NjcmlwdD4vZ2ksICcnKSAvLyBSZW1vdmVyIHNjcmlwdHNcbiAgICAucmVwbGFjZSgvPFtePl0qPi9nLCAnJykgLy8gUmVtb3ZlciBIVE1MIHRhZ3NcbiAgICAucmVwbGFjZSgvamF2YXNjcmlwdDovZ2ksICcnKSAvLyBSZW1vdmVyIGphdmFzY3JpcHQ6XG4gICAgLnJlcGxhY2UoL29uXFx3Kz0vZ2ksICcnKSAvLyBSZW1vdmVyIGV2ZW50IGhhbmRsZXJzXG4gICAgLnRyaW0oKTtcbn1cblxuLyoqXG4gKiBWYWxpZGEgcXVlIHVuIG9iamV0byB0ZW5nYSB0b2RhcyBsYXMgcHJvcGllZGFkZXMgcmVxdWVyaWRhc1xuICovXG5leHBvcnQgZnVuY3Rpb24gdmFsaWRhdGVSZXF1aXJlZEZpZWxkcyhvYmo6IGFueSwgcmVxdWlyZWRGaWVsZHM6IHN0cmluZ1tdKTogVmFsaWRhdGlvblJlc3VsdCB7XG4gIGNvbnN0IGVycm9yczogc3RyaW5nW10gPSBbXTtcblxuICBpZiAoIW9iaiB8fCB0eXBlb2Ygb2JqICE9PSAnb2JqZWN0Jykge1xuICAgIHJldHVybiB7XG4gICAgICBpc1ZhbGlkOiBmYWxzZSxcbiAgICAgIGVycm9yczogWydpbnZhbGlkX29iamVjdCddXG4gICAgfTtcbiAgfVxuXG4gIHJlcXVpcmVkRmllbGRzLmZvckVhY2goZmllbGQgPT4ge1xuICAgIGlmICghKGZpZWxkIGluIG9iaikgfHwgb2JqW2ZpZWxkXSA9PT0gbnVsbCB8fCBvYmpbZmllbGRdID09PSB1bmRlZmluZWQgfHwgb2JqW2ZpZWxkXSA9PT0gJycpIHtcbiAgICAgIGVycm9ycy5wdXNoKGZpZWxkKTtcbiAgICB9XG4gIH0pO1xuXG4gIHJldHVybiB7XG4gICAgaXNWYWxpZDogZXJyb3JzLmxlbmd0aCA9PT0gMCxcbiAgICBlcnJvcnNcbiAgfTtcbn1cblxuLyoqXG4gKiBWYWxpZGEgdW4gcmFuZ28gbnVtw6lyaWNvXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB2YWxpZGF0ZU51bWJlclJhbmdlKHZhbHVlOiBhbnksIG1pbjogbnVtYmVyLCBtYXg6IG51bWJlcik6IGJvb2xlYW4ge1xuICBpZiAodHlwZW9mIHZhbHVlICE9PSAnbnVtYmVyJykge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHJldHVybiB2YWx1ZSA+PSBtaW4gJiYgdmFsdWUgPD0gbWF4O1xufVxuXG4vKipcbiAqIFZhbGlkYSB1bmEgZmVjaGFcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHZhbGlkYXRlRGF0ZShkYXRlOiBhbnkpOiBib29sZWFuIHtcbiAgaWYgKCFkYXRlKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgY29uc3QgcGFyc2VkRGF0ZSA9IG5ldyBEYXRlKGRhdGUpO1xuICByZXR1cm4gIWlzTmFOKHBhcnNlZERhdGUuZ2V0VGltZSgpKTtcbn1cblxuLyoqXG4gKiBWYWxpZGEgdW5hIFVSTFxuICovXG5leHBvcnQgZnVuY3Rpb24gdmFsaWRhdGVVUkwodXJsOiBhbnkpOiBib29sZWFuIHtcbiAgaWYgKCF1cmwgfHwgdHlwZW9mIHVybCAhPT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICB0cnkge1xuICAgIG5ldyBVUkwodXJsKTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSBjYXRjaCB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59Il0sIm5hbWVzIjpbInNhbml0aXplU3RyaW5nIiwidmFsaWRhdGVBZGRyZXNzIiwidmFsaWRhdGVDdXJyZW5jeSIsInZhbGlkYXRlRGF0ZSIsInZhbGlkYXRlRGlzY291bnQiLCJ2YWxpZGF0ZUVtYWlsIiwidmFsaWRhdGVOdW1iZXJSYW5nZSIsInZhbGlkYXRlT3JkZXJEYXRhIiwidmFsaWRhdGVQYXNzd29yZCIsInZhbGlkYXRlUGF5bWVudERhdGEiLCJ2YWxpZGF0ZVBob25lIiwidmFsaWRhdGVQcm9kdWN0RGF0YSIsInZhbGlkYXRlUXVhbnRpdHkiLCJ2YWxpZGF0ZVJlcXVpcmVkRmllbGRzIiwidmFsaWRhdGVVUkwiLCJlbWFpbCIsImxlbmd0aCIsInN0YXJ0c1dpdGgiLCJlbmRzV2l0aCIsInNwbGl0IiwiZW1haWxSZWdleCIsInRlc3QiLCJsb2NhbFBhcnQiLCJkb21haW4iLCJpbmNsdWRlcyIsInBhc3N3b3JkIiwiZXJyb3JzIiwibWVzc2FnZSIsImlzVmFsaWQiLCJwdXNoIiwiZXJyb3JNZXNzYWdlcyIsInVwcGVyY2FzZSIsImxvd2VyY2FzZSIsIm51bWJlciIsInNwZWNpYWwiLCJtYXAiLCJlIiwiam9pbiIsInBob25lIiwiY291bnRyeSIsImNsZWFuUGhvbmUiLCJyZXBsYWNlIiwiYXJnUGhvbmVSZWdleCIsImludFBob25lUmVnZXgiLCJwcm9kdWN0IiwibmFtZSIsInByaWNlIiwic3RvY2siLCJjYXRlZ29yeV9pZCIsImJyYW5kIiwiQXJyYXkiLCJpc0FycmF5IiwiaW1hZ2VzIiwib3JkZXIiLCJ1c2VyX2lkIiwiaXRlbXMiLCJmb3JFYWNoIiwiaXRlbSIsImluZGV4IiwicHJvZHVjdF9pZCIsInF1YW50aXR5IiwidG90YWwiLCJjYWxjdWxhdGVkVG90YWwiLCJyZWR1Y2UiLCJzdW0iLCJNYXRoIiwiYWJzIiwiYWRkcmVzc1ZhbGlkYXRpb24iLCJzaGlwcGluZ19hZGRyZXNzIiwicGF5bWVudF9tZXRob2QiLCJwYXltZW50IiwibWV0aG9kIiwiYW1vdW50IiwiY3VycmVuY3kiLCJwYXllciIsImFkZHJlc3MiLCJyZXF1aXJlZEZpZWxkcyIsImZpZWxkIiwidHJpbSIsInBvc3RhbF9jb2RlIiwicG9zdGFsQ29kZVZhbGlkIiwidmFsaWRhdGVQb3N0YWxDb2RlIiwicG9zdGFsQ29kZSIsInBhdHRlcm5zIiwicGF0dGVybiIsInN1cHBvcnRlZEN1cnJlbmNpZXMiLCJ0b1VwcGVyQ2FzZSIsIk51bWJlciIsImlzSW50ZWdlciIsImRpc2NvdW50IiwidHlwZSIsInZhbHVlIiwiaW5wdXQiLCJvYmoiLCJ1bmRlZmluZWQiLCJtaW4iLCJtYXgiLCJkYXRlIiwicGFyc2VkRGF0ZSIsIkRhdGUiLCJpc05hTiIsImdldFRpbWUiLCJ1cmwiLCJVUkwiXSwibWFwcGluZ3MiOiJBQUFBLHNDQUFzQztBQUN0QywyQkFBMkI7QUFDM0Isb0RBQW9EO0FBQ3BELHNDQUFzQzs7Ozs7Ozs7Ozs7O1FBcWZ0QkE7ZUFBQUE7O1FBdElBQztlQUFBQTs7UUEyREFDO2VBQUFBOztRQStIQUM7ZUFBQUE7O1FBNUZBQztlQUFBQTs7UUE1WUFDO2VBQUFBOztRQTZkQUM7ZUFBQUE7O1FBN1JBQztlQUFBQTs7UUFsSkFDO2VBQUFBOztRQXNOQUM7ZUFBQUE7O1FBekpBQztlQUFBQTs7UUE0QkFDO2VBQUFBOztRQStPQUM7ZUFBQUE7O1FBOEVBQztlQUFBQTs7UUFnREFDO2VBQUFBOzs7QUFwZlQsU0FBU1QsY0FBY1UsS0FBVTtJQUN0QyxJQUFJLENBQUNBLFNBQVMsT0FBT0EsVUFBVSxVQUFVO1FBQ3ZDLE9BQU87SUFDVDtJQUVBLG1DQUFtQztJQUNuQyxJQUFJQSxNQUFN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