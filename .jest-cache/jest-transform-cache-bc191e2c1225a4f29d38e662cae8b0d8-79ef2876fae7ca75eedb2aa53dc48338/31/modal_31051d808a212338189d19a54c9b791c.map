{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\ui\\modal.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { X, ShoppingCart, Heart, Eye, AlertTriangle, CheckCircle, Info } from \"lucide-react\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogDescription,\r\n  DialogHeader,\r\n  DialogTitle,\r\n  DialogTrigger,\r\n} from \"./dialog\"\r\nimport {\r\n  AlertDialog,\r\n  AlertDialogAction,\r\n  AlertDialogCancel,\r\n  AlertDialogContent,\r\n  AlertDialogDescription,\r\n  AlertDialogFooter,\r\n  AlertDialogHeader,\r\n  AlertDialogTitle,\r\n  AlertDialogTrigger,\r\n} from \"./alert-dialog\"\r\n\r\n// Modal básico para contenido general\r\nexport interface ModalProps {\r\n  children: React.ReactNode\r\n  trigger?: React.ReactNode\r\n  title?: string\r\n  description?: string\r\n  size?: \"sm\" | \"md\" | \"lg\" | \"xl\" | \"2xl\" | \"3xl\" | \"4xl\" | \"full\"\r\n  variant?: \"default\" | \"elevated\" | \"fullscreen\"\r\n  showCloseButton?: boolean\r\n  open?: boolean\r\n  onOpenChange?: (open: boolean) => void\r\n  className?: string\r\n}\r\n\r\nexport function Modal({\r\n  children,\r\n  trigger,\r\n  title,\r\n  description,\r\n  size = \"md\",\r\n  variant = \"default\",\r\n  showCloseButton = true,\r\n  open,\r\n  onOpenChange,\r\n  className,\r\n}: ModalProps) {\r\n  return (\r\n    <Dialog open={open} onOpenChange={onOpenChange}>\r\n      {trigger && <DialogTrigger asChild>{trigger}</DialogTrigger>}\r\n      <DialogContent\r\n        size={size}\r\n        variant={variant}\r\n        showCloseButton={showCloseButton}\r\n        className={className}\r\n      >\r\n        {(title || description) && (\r\n          <DialogHeader>\r\n            {title && <DialogTitle>{title}</DialogTitle>}\r\n            {description && <DialogDescription>{description}</DialogDescription>}\r\n          </DialogHeader>\r\n        )}\r\n        {children}\r\n      </DialogContent>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\n// Modal de confirmación con variantes semánticas\r\nexport interface ConfirmModalProps {\r\n  children?: React.ReactNode\r\n  trigger?: React.ReactNode\r\n  title: string\r\n  description?: string\r\n  confirmText?: string\r\n  cancelText?: string\r\n  variant?: \"default\" | \"destructive\" | \"warning\" | \"success\" | \"info\"\r\n  onConfirm?: () => void\r\n  onCancel?: () => void\r\n  open?: boolean\r\n  onOpenChange?: (open: boolean) => void\r\n  loading?: boolean\r\n}\r\n\r\nconst confirmModalIcons = {\r\n  default: Info,\r\n  destructive: AlertTriangle,\r\n  warning: AlertTriangle,\r\n  success: CheckCircle,\r\n  info: Info,\r\n}\r\n\r\nexport function ConfirmModal({\r\n  children,\r\n  trigger,\r\n  title,\r\n  description,\r\n  confirmText = \"Confirmar\",\r\n  cancelText = \"Cancelar\",\r\n  variant = \"default\",\r\n  onConfirm,\r\n  onCancel,\r\n  open,\r\n  onOpenChange,\r\n  loading = false,\r\n}: ConfirmModalProps) {\r\n  const Icon = confirmModalIcons[variant]\r\n\r\n  return (\r\n    <AlertDialog open={open} onOpenChange={onOpenChange}>\r\n      {trigger && <AlertDialogTrigger asChild>{trigger}</AlertDialogTrigger>}\r\n      <AlertDialogContent variant={variant}>\r\n        <AlertDialogHeader>\r\n          <div className=\"flex items-center gap-3\">\r\n            <div className={cn(\r\n              \"flex h-10 w-10 items-center justify-center rounded-full\",\r\n              {\r\n                \"bg-blue-100 text-blue-600\": variant === \"default\" || variant === \"info\",\r\n                \"bg-red-100 text-red-600\": variant === \"destructive\",\r\n                \"bg-yellow-100 text-yellow-600\": variant === \"warning\",\r\n                \"bg-green-100 text-green-600\": variant === \"success\",\r\n              }\r\n            )}>\r\n              <Icon className=\"h-5 w-5\" />\r\n            </div>\r\n            <AlertDialogTitle>{title}</AlertDialogTitle>\r\n          </div>\r\n          {description && (\r\n            <AlertDialogDescription className=\"mt-2\">\r\n              {description}\r\n            </AlertDialogDescription>\r\n          )}\r\n        </AlertDialogHeader>\r\n        {children}\r\n        <AlertDialogFooter>\r\n          <AlertDialogCancel onClick={onCancel} disabled={loading}>\r\n            {cancelText}\r\n          </AlertDialogCancel>\r\n          <AlertDialogAction\r\n            onClick={onConfirm}\r\n            disabled={loading}\r\n            className={cn({\r\n              \"bg-red-600 hover:bg-red-700\": variant === \"destructive\",\r\n              \"bg-yellow-600 hover:bg-yellow-700\": variant === \"warning\",\r\n              \"bg-green-600 hover:bg-green-700\": variant === \"success\",\r\n            })}\r\n          >\r\n            {loading ? (\r\n              <div className=\"flex items-center gap-2\">\r\n                <div className=\"h-4 w-4 animate-spin rounded-full border-2 border-white border-t-transparent\" />\r\n                Procesando...\r\n              </div>\r\n            ) : (\r\n              confirmText\r\n            )}\r\n          </AlertDialogAction>\r\n        </AlertDialogFooter>\r\n      </AlertDialogContent>\r\n    </AlertDialog>\r\n  )\r\n}\r\n\r\n// Modal específico para Quick View de productos\r\nexport interface QuickViewModalProps {\r\n  children: React.ReactNode\r\n  trigger?: React.ReactNode\r\n  open?: boolean\r\n  onOpenChange?: (open: boolean) => void\r\n}\r\n\r\nexport function QuickViewModal({\r\n  children,\r\n  trigger,\r\n  open,\r\n  onOpenChange,\r\n}: QuickViewModalProps) {\r\n  return (\r\n    <Modal\r\n      trigger={trigger}\r\n      size=\"4xl\"\r\n      variant=\"elevated\"\r\n      open={open}\r\n      onOpenChange={onOpenChange}\r\n      className=\"max-h-[90vh] overflow-y-auto\"\r\n    >\r\n      {children}\r\n    </Modal>\r\n  )\r\n}\r\n\r\n// Modal para agregar al carrito con animación\r\nexport interface AddToCartModalProps {\r\n  children?: React.ReactNode\r\n  trigger?: React.ReactNode\r\n  productName: string\r\n  productImage?: string\r\n  open?: boolean\r\n  onOpenChange?: (open: boolean) => void\r\n  onContinueShopping?: () => void\r\n  onGoToCart?: () => void\r\n}\r\n\r\nexport function AddToCartModal({\r\n  children,\r\n  trigger,\r\n  productName,\r\n  productImage,\r\n  open,\r\n  onOpenChange,\r\n  onContinueShopping,\r\n  onGoToCart,\r\n}: AddToCartModalProps) {\r\n  return (\r\n    <Modal\r\n      trigger={trigger}\r\n      size=\"md\"\r\n      variant=\"elevated\"\r\n      open={open}\r\n      onOpenChange={onOpenChange}\r\n      title=\"¡Producto agregado al carrito!\"\r\n    >\r\n      <div className=\"flex flex-col items-center gap-4 py-4\">\r\n        <div className=\"flex h-16 w-16 items-center justify-center rounded-full bg-green-100\">\r\n          <CheckCircle className=\"h-8 w-8 text-green-600\" />\r\n        </div>\r\n        \r\n        {productImage && (\r\n          <img\r\n            src={productImage}\r\n            alt={productName}\r\n            className=\"h-20 w-20 rounded-lg object-cover\"\r\n          />\r\n        )}\r\n        \r\n        <p className=\"text-center text-gray-600\">\r\n          <span className=\"font-medium\">{productName}</span> se agregó correctamente a tu carrito\r\n        </p>\r\n        \r\n        {children}\r\n        \r\n        <div className=\"flex w-full gap-3\">\r\n          <button\r\n            onClick={onContinueShopping}\r\n            className=\"flex-1 rounded-button border border-gray-200 bg-white px-4 py-2 text-sm font-medium text-gray-900 transition-colors hover:bg-gray-50\"\r\n          >\r\n            Seguir comprando\r\n          </button>\r\n          <button\r\n            onClick={onGoToCart}\r\n            className=\"flex-1 rounded-button bg-primary px-4 py-2 text-sm font-medium text-white transition-colors hover:bg-primary-hover\"\r\n          >\r\n            <ShoppingCart className=\"mr-2 h-4 w-4\" />\r\n            Ver carrito\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\n// Hook para manejar modales de forma más sencilla\r\nexport function useModal(defaultOpen = false) {\r\n  const [open, setOpen] = React.useState(defaultOpen)\r\n  \r\n  const openModal = React.useCallback(() => setOpen(true), [])\r\n  const closeModal = React.useCallback(() => setOpen(false), [])\r\n  const toggleModal = React.useCallback(() => setOpen(prev => !prev), [])\r\n  \r\n  return {\r\n    open,\r\n    openModal,\r\n    closeModal,\r\n    toggleModal,\r\n    setOpen,\r\n  }\r\n}\r\n"],"names":["AddToCartModal","ConfirmModal","Modal","QuickViewModal","useModal","children","trigger","title","description","size","variant","showCloseButton","open","onOpenChange","className","Dialog","DialogTrigger","asChild","DialogContent","DialogHeader","DialogTitle","DialogDescription","confirmModalIcons","default","Info","destructive","AlertTriangle","warning","success","CheckCircle","info","confirmText","cancelText","onConfirm","onCancel","loading","Icon","AlertDialog","AlertDialogTrigger","AlertDialogContent","AlertDialogHeader","div","cn","AlertDialogTitle","AlertDialogDescription","AlertDialogFooter","AlertDialogCancel","onClick","disabled","AlertDialogAction","productName","productImage","onContinueShopping","onGoToCart","img","src","alt","p","span","button","ShoppingCart","defaultOpen","setOpen","React","useState","openModal","useCallback","closeModal","toggleModal","prev"],"mappings":"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"}