17b1f8b0ade1db0982649ac00c810601
// ===================================
// COMPONENTE: Filtro de Marcas
// ===================================
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: Object.getOwnPropertyDescriptor(all, name).get
    });
}
_export(exports, {
    get BrandFilter () {
        return BrandFilter;
    },
    get BrandFilterCompact () {
        return BrandFilterCompact;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_default(require("react"));
const _badge = require("./badge");
const _button = require("./button");
const _card = require("./card");
const _checkbox = require("./checkbox");
const _input = require("./input");
const _separator = require("./separator");
const _lucidereact = require("lucide-react");
const _brands = require("../../lib/api/brands");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function BrandFilter({ brands, selectedBrands, onBrandChange, isLoading = false, showSearch = true, showProductCount = true, maxHeight = "300px", className = "" }) {
    const [searchTerm, setSearchTerm] = _react.default.useState('');
    // Filtrar marcas por término de búsqueda
    const filteredBrands = _react.default.useMemo(()=>{
        if (!searchTerm) return brands;
        return brands.filter((brand)=>brand.name.toLowerCase().includes(searchTerm.toLowerCase()));
    }, [
        brands,
        searchTerm
    ]);
    // Manejar selección de marca
    const handleBrandToggle = (brandName)=>{
        const newSelectedBrands = selectedBrands.includes(brandName) ? selectedBrands.filter((b)=>b !== brandName) : [
            ...selectedBrands,
            brandName
        ];
        onBrandChange(newSelectedBrands);
    };
    // Limpiar filtros
    const handleClearAll = ()=>{
        onBrandChange([]);
    };
    // Seleccionar todas las marcas visibles
    const handleSelectAll = ()=>{
        const allVisibleBrands = filteredBrands.map((b)=>b.name);
        onBrandChange(allVisibleBrands);
    };
    if (isLoading) {
        return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.Card, {
            className: className,
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardHeader, {
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardTitle, {
                        className: "text-sm",
                        children: "Marcas"
                    })
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardContent, {
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: "space-y-2",
                        children: [
                            ...Array(5)
                        ].map((_, i)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "flex items-center space-x-2",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                        className: "w-4 h-4 bg-gray-200 rounded animate-pulse"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                        className: "h-4 bg-gray-200 rounded flex-1 animate-pulse"
                                    })
                                ]
                            }, i))
                    })
                })
            ]
        });
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.Card, {
        className: className,
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardHeader, {
                className: "pb-3",
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "flex items-center justify-between",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardTitle, {
                            className: "text-sm",
                            children: "Marcas"
                        }),
                        selectedBrands.length > 0 && /*#__PURE__*/ (0, _jsxruntime.jsx)(_badge.Badge, {
                            variant: "secondary",
                            className: "text-xs",
                            children: selectedBrands.length
                        })
                    ]
                })
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.CardContent, {
                className: "space-y-4",
                children: [
                    showSearch && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "relative",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Search, {
                                className: "absolute left-2 top-2.5 h-4 w-4 text-muted-foreground"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_input.Input, {
                                placeholder: "Buscar marcas...",
                                value: searchTerm,
                                onChange: (e)=>setSearchTerm(e.target.value),
                                className: "pl-8 h-9"
                            }),
                            searchTerm && /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                variant: "ghost",
                                size: "sm",
                                className: "absolute right-1 top-1 h-7 w-7 p-0",
                                onClick: ()=>setSearchTerm(''),
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.X, {
                                    className: "h-3 w-3"
                                })
                            })
                        ]
                    }),
                    filteredBrands.length > 1 && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "flex gap-2",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                variant: "outline",
                                size: "sm",
                                onClick: handleSelectAll,
                                className: "text-xs h-7 px-2",
                                children: "Todas"
                            }),
                            selectedBrands.length > 0 && /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                variant: "outline",
                                size: "sm",
                                onClick: handleClearAll,
                                className: "text-xs h-7 px-2",
                                children: "Limpiar"
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_separator.Separator, {}),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        style: {
                            maxHeight,
                            overflowY: 'auto'
                        },
                        className: "pr-4",
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            className: "space-y-3",
                            children: filteredBrands.length === 0 ? /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                className: "text-sm text-muted-foreground text-center py-4",
                                children: "No se encontraron marcas"
                            }) : filteredBrands.map((brand)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "flex items-center space-x-2",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_checkbox.Checkbox, {
                                            id: `brand-${brand.name}`,
                                            checked: selectedBrands.includes(brand.name),
                                            onCheckedChange: ()=>handleBrandToggle(brand.name)
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("label", {
                                            htmlFor: `brand-${brand.name}`,
                                            className: "flex-1 cursor-pointer flex items-center justify-between text-sm font-medium",
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                    className: "text-sm font-medium",
                                                    children: (0, _brands.formatBrandName)(brand.name)
                                                }),
                                                showProductCount && /*#__PURE__*/ (0, _jsxruntime.jsx)(_badge.Badge, {
                                                    variant: "outline",
                                                    className: "text-xs ml-2",
                                                    style: {
                                                        borderColor: (0, _brands.getBrandColor)(brand.name),
                                                        color: (0, _brands.getBrandColor)(brand.name)
                                                    },
                                                    children: brand.products_count
                                                })
                                            ]
                                        })
                                    ]
                                }, brand.name))
                        })
                    }),
                    selectedBrands.length > 0 && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_separator.Separator, {}),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "space-y-2",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("label", {
                                        className: "text-xs font-medium text-muted-foreground",
                                        children: "Filtros activos:"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                        className: "flex flex-wrap gap-1",
                                        children: selectedBrands.map((brandName)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)(_badge.Badge, {
                                                variant: "secondary",
                                                className: "text-xs cursor-pointer hover:bg-destructive hover:text-destructive-foreground",
                                                onClick: ()=>handleBrandToggle(brandName),
                                                children: [
                                                    (0, _brands.formatBrandName)(brandName),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.X, {
                                                        className: "ml-1 h-3 w-3"
                                                    })
                                                ]
                                            }, brandName))
                                    })
                                ]
                            })
                        ]
                    })
                ]
            })
        ]
    });
}
function BrandFilterCompact({ brands, selectedBrands, onBrandChange, className = "" }) {
    const handleBrandToggle = (brandName)=>{
        const newSelectedBrands = selectedBrands.includes(brandName) ? selectedBrands.filter((b)=>b !== brandName) : [
            ...selectedBrands,
            brandName
        ];
        onBrandChange(newSelectedBrands);
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        className: `space-y-2 ${className}`,
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)("label", {
                className: "text-sm font-medium",
                children: "Marcas"
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "flex flex-wrap gap-2",
                children: brands.map((brand)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)(_badge.Badge, {
                        variant: selectedBrands.includes(brand.name) ? "default" : "outline",
                        className: "cursor-pointer hover:bg-primary hover:text-primary-foreground",
                        onClick: ()=>handleBrandToggle(brand.name),
                        style: selectedBrands.includes(brand.name) ? {
                            backgroundColor: (0, _brands.getBrandColor)(brand.name),
                            borderColor: (0, _brands.getBrandColor)(brand.name)
                        } : {
                            borderColor: (0, _brands.getBrandColor)(brand.name),
                            color: (0, _brands.getBrandColor)(brand.name)
                        },
                        children: [
                            (0, _brands.formatBrandName)(brand.name),
                            selectedBrands.includes(brand.name) && /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.X, {
                                className: "ml-1 h-3 w-3"
                            })
                        ]
                    }, brand.name))
            })
        ]
    });
}

//# sourceMappingURL=data:application/json;base64,