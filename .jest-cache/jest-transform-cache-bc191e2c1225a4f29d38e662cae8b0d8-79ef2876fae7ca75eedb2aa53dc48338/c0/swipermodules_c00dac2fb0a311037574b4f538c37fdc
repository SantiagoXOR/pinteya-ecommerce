e9614ac06be64331facfc8ec1ea654c4
/**
 * Mock para Swiper Modules
 * Resuelve problemas de ESM en testing
 */ // Mock de Navigation module
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: Object.getOwnPropertyDescriptor(all, name).get
    });
}
_export(exports, {
    get Autoplay () {
        return Autoplay;
    },
    get EffectFade () {
        return EffectFade;
    },
    get Navigation () {
        return Navigation;
    },
    get Pagination () {
        return Pagination;
    },
    get Thumbs () {
        return Thumbs;
    },
    get Virtual () {
        return Virtual;
    },
    get // Export default para compatibilidad
    default () {
        return _default;
    }
});
const Navigation = {
    name: 'navigation',
    params: {
        navigation: {
            nextEl: null,
            prevEl: null,
            hideOnClick: false,
            disabledClass: 'swiper-button-disabled',
            hiddenClass: 'swiper-button-hidden',
            lockClass: 'swiper-button-lock'
        }
    },
    create () {},
    on: {}
};
const Pagination = {
    name: 'pagination',
    params: {
        pagination: {
            el: null,
            bulletElement: 'span',
            clickable: false,
            hideOnClick: false,
            renderBullet: null,
            renderFraction: null,
            renderProgressbar: null,
            renderCustom: null,
            progressbarOpposite: false,
            type: 'bullets',
            dynamicBullets: false,
            dynamicMainBullets: 1,
            formatFractionCurrent: (number)=>number,
            formatFractionTotal: (number)=>number,
            bulletClass: 'swiper-pagination-bullet',
            bulletActiveClass: 'swiper-pagination-bullet-active',
            modifierClass: 'swiper-pagination-',
            currentClass: 'swiper-pagination-current',
            totalClass: 'swiper-pagination-total',
            hiddenClass: 'swiper-pagination-hidden',
            progressbarFillClass: 'swiper-pagination-progressbar-fill',
            progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',
            clickableClass: 'swiper-pagination-clickable',
            lockClass: 'swiper-pagination-lock'
        }
    },
    create () {},
    on: {}
};
const Autoplay = {
    name: 'autoplay',
    params: {
        autoplay: {
            delay: 3000,
            stopOnLastSlide: false,
            disableOnInteraction: true,
            reverseDirection: false,
            waitForTransition: true
        }
    },
    create () {},
    on: {}
};
const EffectFade = {
    name: 'effect-fade',
    params: {
        fadeEffect: {
            crossFade: false
        }
    },
    create () {},
    on: {}
};
const Thumbs = {
    name: 'thumbs',
    params: {
        thumbs: {
            swiper: null,
            multipleActiveThumbs: true,
            autoScrollOffset: 0,
            slideThumbActiveClass: 'swiper-slide-thumb-active',
            thumbsContainerClass: 'swiper-thumbs'
        }
    },
    create () {},
    on: {}
};
const Virtual = {
    name: 'virtual',
    params: {
        virtual: {
            enabled: false,
            slides: [],
            cache: true,
            renderSlide: null,
            renderExternal: null,
            renderExternalUpdate: true,
            addSlidesBefore: 0,
            addSlidesAfter: 0
        }
    },
    create () {},
    on: {}
};
const _default = {
    Navigation,
    Pagination,
    Autoplay,
    EffectFade,
    Thumbs,
    Virtual
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbWFydGlcXERlc2t0b3BcXERFU0FSUk9MTE9TV1xcQk9JTEVSUExBVFRFIEUtQ09NTUVSQ0VcXF9fbW9ja3NfX1xcc3dpcGVyLW1vZHVsZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBNb2NrIHBhcmEgU3dpcGVyIE1vZHVsZXNcbiAqIFJlc3VlbHZlIHByb2JsZW1hcyBkZSBFU00gZW4gdGVzdGluZ1xuICovXG5cbi8vIE1vY2sgZGUgTmF2aWdhdGlvbiBtb2R1bGVcbmV4cG9ydCBjb25zdCBOYXZpZ2F0aW9uID0ge1xuICBuYW1lOiAnbmF2aWdhdGlvbicsXG4gIHBhcmFtczoge1xuICAgIG5hdmlnYXRpb246IHtcbiAgICAgIG5leHRFbDogbnVsbCxcbiAgICAgIHByZXZFbDogbnVsbCxcbiAgICAgIGhpZGVPbkNsaWNrOiBmYWxzZSxcbiAgICAgIGRpc2FibGVkQ2xhc3M6ICdzd2lwZXItYnV0dG9uLWRpc2FibGVkJyxcbiAgICAgIGhpZGRlbkNsYXNzOiAnc3dpcGVyLWJ1dHRvbi1oaWRkZW4nLFxuICAgICAgbG9ja0NsYXNzOiAnc3dpcGVyLWJ1dHRvbi1sb2NrJyxcbiAgICB9LFxuICB9LFxuICBjcmVhdGUoKSB7fSxcbiAgb246IHt9LFxufTtcblxuLy8gTW9jayBkZSBQYWdpbmF0aW9uIG1vZHVsZVxuZXhwb3J0IGNvbnN0IFBhZ2luYXRpb24gPSB7XG4gIG5hbWU6ICdwYWdpbmF0aW9uJyxcbiAgcGFyYW1zOiB7XG4gICAgcGFnaW5hdGlvbjoge1xuICAgICAgZWw6IG51bGwsXG4gICAgICBidWxsZXRFbGVtZW50OiAnc3BhbicsXG4gICAgICBjbGlja2FibGU6IGZhbHNlLFxuICAgICAgaGlkZU9uQ2xpY2s6IGZhbHNlLFxuICAgICAgcmVuZGVyQnVsbGV0OiBudWxsLFxuICAgICAgcmVuZGVyRnJhY3Rpb246IG51bGwsXG4gICAgICByZW5kZXJQcm9ncmVzc2JhcjogbnVsbCxcbiAgICAgIHJlbmRlckN1c3RvbTogbnVsbCxcbiAgICAgIHByb2dyZXNzYmFyT3Bwb3NpdGU6IGZhbHNlLFxuICAgICAgdHlwZTogJ2J1bGxldHMnLFxuICAgICAgZHluYW1pY0J1bGxldHM6IGZhbHNlLFxuICAgICAgZHluYW1pY01haW5CdWxsZXRzOiAxLFxuICAgICAgZm9ybWF0RnJhY3Rpb25DdXJyZW50OiAobnVtYmVyKSA9PiBudW1iZXIsXG4gICAgICBmb3JtYXRGcmFjdGlvblRvdGFsOiAobnVtYmVyKSA9PiBudW1iZXIsXG4gICAgICBidWxsZXRDbGFzczogJ3N3aXBlci1wYWdpbmF0aW9uLWJ1bGxldCcsXG4gICAgICBidWxsZXRBY3RpdmVDbGFzczogJ3N3aXBlci1wYWdpbmF0aW9uLWJ1bGxldC1hY3RpdmUnLFxuICAgICAgbW9kaWZpZXJDbGFzczogJ3N3aXBlci1wYWdpbmF0aW9uLScsXG4gICAgICBjdXJyZW50Q2xhc3M6ICdzd2lwZXItcGFnaW5hdGlvbi1jdXJyZW50JyxcbiAgICAgIHRvdGFsQ2xhc3M6ICdzd2lwZXItcGFnaW5hdGlvbi10b3RhbCcsXG4gICAgICBoaWRkZW5DbGFzczogJ3N3aXBlci1wYWdpbmF0aW9uLWhpZGRlbicsXG4gICAgICBwcm9ncmVzc2JhckZpbGxDbGFzczogJ3N3aXBlci1wYWdpbmF0aW9uLXByb2dyZXNzYmFyLWZpbGwnLFxuICAgICAgcHJvZ3Jlc3NiYXJPcHBvc2l0ZUNsYXNzOiAnc3dpcGVyLXBhZ2luYXRpb24tcHJvZ3Jlc3NiYXItb3Bwb3NpdGUnLFxuICAgICAgY2xpY2thYmxlQ2xhc3M6ICdzd2lwZXItcGFnaW5hdGlvbi1jbGlja2FibGUnLFxuICAgICAgbG9ja0NsYXNzOiAnc3dpcGVyLXBhZ2luYXRpb24tbG9jaycsXG4gICAgfSxcbiAgfSxcbiAgY3JlYXRlKCkge30sXG4gIG9uOiB7fSxcbn07XG5cbi8vIE1vY2sgZGUgQXV0b3BsYXkgbW9kdWxlXG5leHBvcnQgY29uc3QgQXV0b3BsYXkgPSB7XG4gIG5hbWU6ICdhdXRvcGxheScsXG4gIHBhcmFtczoge1xuICAgIGF1dG9wbGF5OiB7XG4gICAgICBkZWxheTogMzAwMCxcbiAgICAgIHN0b3BPbkxhc3RTbGlkZTogZmFsc2UsXG4gICAgICBkaXNhYmxlT25JbnRlcmFjdGlvbjogdHJ1ZSxcbiAgICAgIHJldmVyc2VEaXJlY3Rpb246IGZhbHNlLFxuICAgICAgd2FpdEZvclRyYW5zaXRpb246IHRydWUsXG4gICAgfSxcbiAgfSxcbiAgY3JlYXRlKCkge30sXG4gIG9uOiB7fSxcbn07XG5cbi8vIE1vY2sgZGUgRWZmZWN0RmFkZSBtb2R1bGVcbmV4cG9ydCBjb25zdCBFZmZlY3RGYWRlID0ge1xuICBuYW1lOiAnZWZmZWN0LWZhZGUnLFxuICBwYXJhbXM6IHtcbiAgICBmYWRlRWZmZWN0OiB7XG4gICAgICBjcm9zc0ZhZGU6IGZhbHNlLFxuICAgIH0sXG4gIH0sXG4gIGNyZWF0ZSgpIHt9LFxuICBvbjoge30sXG59O1xuXG4vLyBNb2NrIGRlIFRodW1icyBtb2R1bGVcbmV4cG9ydCBjb25zdCBUaHVtYnMgPSB7XG4gIG5hbWU6ICd0aHVtYnMnLFxuICBwYXJhbXM6IHtcbiAgICB0aHVtYnM6IHtcbiAgICAgIHN3aXBlcjogbnVsbCxcbiAgICAgIG11bHRpcGxlQWN0aXZlVGh1bWJzOiB0cnVlLFxuICAgICAgYXV0b1Njcm9sbE9mZnNldDogMCxcbiAgICAgIHNsaWRlVGh1bWJBY3RpdmVDbGFzczogJ3N3aXBlci1zbGlkZS10aHVtYi1hY3RpdmUnLFxuICAgICAgdGh1bWJzQ29udGFpbmVyQ2xhc3M6ICdzd2lwZXItdGh1bWJzJyxcbiAgICB9LFxuICB9LFxuICBjcmVhdGUoKSB7fSxcbiAgb246IHt9LFxufTtcblxuLy8gTW9jayBkZSBWaXJ0dWFsIG1vZHVsZVxuZXhwb3J0IGNvbnN0IFZpcnR1YWwgPSB7XG4gIG5hbWU6ICd2aXJ0dWFsJyxcbiAgcGFyYW1zOiB7XG4gICAgdmlydHVhbDoge1xuICAgICAgZW5hYmxlZDogZmFsc2UsXG4gICAgICBzbGlkZXM6IFtdLFxuICAgICAgY2FjaGU6IHRydWUsXG4gICAgICByZW5kZXJTbGlkZTogbnVsbCxcbiAgICAgIHJlbmRlckV4dGVybmFsOiBudWxsLFxuICAgICAgcmVuZGVyRXh0ZXJuYWxVcGRhdGU6IHRydWUsXG4gICAgICBhZGRTbGlkZXNCZWZvcmU6IDAsXG4gICAgICBhZGRTbGlkZXNBZnRlcjogMCxcbiAgICB9LFxuICB9LFxuICBjcmVhdGUoKSB7fSxcbiAgb246IHt9LFxufTtcblxuLy8gRXhwb3J0IGRlZmF1bHQgcGFyYSBjb21wYXRpYmlsaWRhZFxuZXhwb3J0IGRlZmF1bHQge1xuICBOYXZpZ2F0aW9uLFxuICBQYWdpbmF0aW9uLFxuICBBdXRvcGxheSxcbiAgRWZmZWN0RmFkZSxcbiAgVGh1bWJzLFxuICBWaXJ0dWFsLFxufTtcbiJdLCJuYW1lcyI6WyJBdXRvcGxheSIsIkVmZmVjdEZhZGUiLCJOYXZpZ2F0aW9uIiwiUGFnaW5hdGlvbiIsIlRodW1icyIsIlZpcnR1YWwiLCJuYW1lIiwicGFyYW1zIiwibmF2aWdhdGlvbiIsIm5leHRFbCIsInByZXZFbCIsImhpZGVPbkNsaWNrIiwiZGlzYWJsZWRDbGFzcyIsImhpZGRlbkNsYXNzIiwibG9ja0NsYXNzIiwiY3JlYXRlIiwib24iLCJwYWdpbmF0aW9uIiwiZWwiLCJidWxsZXRFbGVtZW50IiwiY2xpY2thYmxlIiwicmVuZGVyQnVsbGV0IiwicmVuZGVyRnJhY3Rpb24iLCJyZW5kZXJQcm9ncmVzc2JhciIsInJlbmRlckN1c3RvbSIsInByb2dyZXNzYmFyT3Bwb3NpdGUiLCJ0eXBlIiwiZHluYW1pY0J1bGxldHMiLCJkeW5hbWljTWFpbkJ1bGxldHMiLCJmb3JtYXRGcmFjdGlvbkN1cnJlbnQiLCJudW1iZXIiLCJmb3JtYXRGcmFjdGlvblRvdGFsIiwiYnVsbGV0Q2xhc3MiLCJidWxsZXRBY3RpdmVDbGFzcyIsIm1vZGlmaWVyQ2xhc3MiLCJjdXJyZW50Q2xhc3MiLCJ0b3RhbENsYXNzIiwicHJvZ3Jlc3NiYXJGaWxsQ2xhc3MiLCJwcm9ncmVzc2Jhck9wcG9zaXRlQ2xhc3MiLCJjbGlja2FibGVDbGFzcyIsImF1dG9wbGF5IiwiZGVsYXkiLCJzdG9wT25MYXN0U2xpZGUiLCJkaXNhYmxlT25JbnRlcmFjdGlvbiIsInJldmVyc2VEaXJlY3Rpb24iLCJ3YWl0Rm9yVHJhbnNpdGlvbiIsImZhZGVFZmZlY3QiLCJjcm9zc0ZhZGUiLCJ0aHVtYnMiLCJzd2lwZXIiLCJtdWx0aXBsZUFjdGl2ZVRodW1icyIsImF1dG9TY3JvbGxPZmZzZXQiLCJzbGlkZVRodW1iQWN0aXZlQ2xhc3MiLCJ0aHVtYnNDb250YWluZXJDbGFzcyIsInZpcnR1YWwiLCJlbmFibGVkIiwic2xpZGVzIiwiY2FjaGUiLCJyZW5kZXJTbGlkZSIsInJlbmRlckV4dGVybmFsIiwicmVuZGVyRXh0ZXJuYWxVcGRhdGUiLCJhZGRTbGlkZXNCZWZvcmUiLCJhZGRTbGlkZXNBZnRlciJdLCJtYXBwaW5ncyI6IkFBQUE7OztDQUdDLEdBRUQsNEJBQTRCOzs7Ozs7Ozs7Ozs7UUFxRGZBO2VBQUFBOztRQWdCQUM7ZUFBQUE7O1FBcEVBQztlQUFBQTs7UUFpQkFDO2VBQUFBOztRQStEQUM7ZUFBQUE7O1FBZ0JBQztlQUFBQTs7UUFrQmIscUNBQXFDO0lBQ3JDO2VBQUE7OztBQW5ITyxNQUFNSCxhQUFhO0lBQ3hCSSxNQUFNO0lBQ05DLFFBQVE7UUFDTkMsWUFBWTtZQUNWQyxRQUFRO1lBQ1JDLFFBQVE7WUFDUkMsYUFBYTtZQUNiQyxlQUFlO1lBQ2ZDLGFBQWE7WUFDYkMsV0FBVztRQUNiO0lBQ0Y7SUFDQUMsV0FBVTtJQUNWQyxJQUFJLENBQUM7QUFDUDtBQUdPLE1BQU1iLGFBQWE7SUFDeEJHLE1BQU07SUFDTkMsUUFBUTtRQUNOVSxZQUFZO1lBQ1ZDLElBQUk7WUFDSkMsZUFBZTtZQUNmQyxXQUFXO1lBQ1hULGFBQWE7WUFDYlUsY0FBYztZQUNkQyxnQkFBZ0I7WUFDaEJDLG1CQUFtQjtZQUNuQkMsY0FBYztZQUNkQyxxQkFBcUI7WUFDckJDLE1BQU07WUFDTkMsZ0JBQWdCO1lBQ2hCQyxvQkFBb0I7WUFDcEJDLHVCQUF1QixDQUFDQyxTQUFXQTtZQUNuQ0MscUJBQXFCLENBQUNELFNBQVdBO1lBQ2pDRSxhQUFhO1lBQ2JDLG1CQUFtQjtZQUNuQkMsZUFBZTtZQUNmQyxjQUFjO1lBQ2RDLFlBQVk7WUFDWnZCLGFBQWE7WUFDYndCLHNCQUFzQjtZQUN0QkMsMEJBQTBCO1lBQzFCQyxnQkFBZ0I7WUFDaEJ6QixXQUFXO1FBQ2I7SUFDRjtJQUNBQyxXQUFVO0lBQ1ZDLElBQUksQ0FBQztBQUNQO0FBR08sTUFBTWhCLFdBQVc7SUFDdEJNLE1BQU07SUFDTkMsUUFBUTtRQUNOaUMsVUFBVTtZQUNSQyxPQUFPO1lBQ1BDLGlCQUFpQjtZQUNqQkMsc0JBQXNCO1lBQ3RCQyxrQkFBa0I7WUFDbEJDLG1CQUFtQjtRQUNyQjtJQUNGO0lBQ0E5QixXQUFVO0lBQ1ZDLElBQUksQ0FBQztBQUNQO0FBR08sTUFBTWYsYUFBYTtJQUN4QkssTUFBTTtJQUNOQyxRQUFRO1FBQ051QyxZQUFZO1lBQ1ZDLFdBQVc7UUFDYjtJQUNGO0lBQ0FoQyxXQUFVO0lBQ1ZDLElBQUksQ0FBQztBQUNQO0FBR08sTUFBTVosU0FBUztJQUNwQkUsTUFBTTtJQUNOQyxRQUFRO1FBQ055QyxRQUFRO1lBQ05DLFFBQVE7WUFDUkMsc0JBQXNCO1lBQ3RCQyxrQkFBa0I7WUFDbEJDLHVCQUF1QjtZQUN2QkMsc0JBQXNCO1FBQ3hCO0lBQ0Y7SUFDQXRDLFdBQVU7SUFDVkMsSUFBSSxDQUFDO0FBQ1A7QUFHTyxNQUFNWCxVQUFVO0lBQ3JCQyxNQUFNO0lBQ05DLFFBQVE7UUFDTitDLFNBQVM7WUFDUEMsU0FBUztZQUNUQyxRQUFRLEVBQUU7WUFDVkMsT0FBTztZQUNQQyxhQUFhO1lBQ2JDLGdCQUFnQjtZQUNoQkMsc0JBQXNCO1lBQ3RCQyxpQkFBaUI7WUFDakJDLGdCQUFnQjtRQUNsQjtJQUNGO0lBQ0EvQyxXQUFVO0lBQ1ZDLElBQUksQ0FBQztBQUNQO01BR0EsV0FBZTtJQUNiZDtJQUNBQztJQUNBSDtJQUNBQztJQUNBRztJQUNBQztBQUNGIn0=