65fe5e0acf80c3574da03dc778d907cd
"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    PriceDisplay: function() {
        return PriceDisplay;
    },
    priceDisplayVariants: function() {
        return priceDisplayVariants;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _classvarianceauthority = require("class-variance-authority");
const _utils = require("../../lib/utils");
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const priceDisplayVariants = (0, _classvarianceauthority.cva)("flex flex-col gap-0.5 w-full max-w-full", {
    variants: {
        variant: {
            default: "text-left",
            center: "text-center items-center",
            compact: "flex-col gap-0.5"
        },
        size: {
            sm: "text-sm",
            md: "text-base",
            lg: "text-lg",
            xl: "text-xl"
        }
    },
    defaultVariants: {
        variant: "default",
        size: "md"
    }
});
const priceVariants = (0, _classvarianceauthority.cva)("font-bold leading-tight", {
    variants: {
        size: {
            sm: "text-lg",
            md: "text-xl",
            lg: "text-2xl",
            xl: "text-3xl"
        }
    },
    defaultVariants: {
        size: "md"
    }
});
const originalPriceVariants = (0, _classvarianceauthority.cva)("line-through text-muted-foreground font-medium", {
    variants: {
        size: {
            sm: "text-xs",
            md: "text-sm",
            lg: "text-base",
            xl: "text-lg"
        }
    },
    defaultVariants: {
        size: "md"
    }
});
/**
 * Formatea un número como precio en pesos argentinos
 */ const formatPrice = (amount, currency = "ARS", currencySymbol)=>{
    const price = amount / 100;
    if (currencySymbol) {
        return `${currencySymbol}${price.toLocaleString('es-AR', {
            minimumFractionDigits: 2,
            maximumFractionDigits: 2
        })}`;
    }
    return price.toLocaleString('es-AR', {
        style: 'currency',
        currency: currency,
        minimumFractionDigits: 2
    });
};
/**
 * Calcula el porcentaje de descuento
 */ const calculateDiscountPercentage = (original, current)=>{
    return Math.round((original - current) / original * 100);
};
const PriceDisplay = /*#__PURE__*/ _react.forwardRef(({ className, variant, size, amount, originalAmount, currency = "ARS", currencySymbol, installments, showDiscountPercentage = true, installmentsText = "sin interés", showFreeShipping = false, priceColor, ...props }, ref)=>{
    const hasDiscount = originalAmount && originalAmount > amount;
    const discountPercentage = hasDiscount ? calculateDiscountPercentage(originalAmount, amount) : 0;
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        ref: ref,
        className: (0, _utils.cn)(priceDisplayVariants({
            variant,
            size,
            className
        })),
        ...props,
        children: [
            hasDiscount && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "flex items-center gap-2",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                        className: (0, _utils.cn)(originalPriceVariants({
                            size
                        })),
                        children: formatPrice(originalAmount, currency, currencySymbol)
                    }),
                    showDiscountPercentage && /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                        className: "bg-red-500 text-white text-xs font-bold px-2 py-1 rounded",
                        children: [
                            "-",
                            discountPercentage,
                            "%"
                        ]
                    })
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: (0, _utils.cn)(priceVariants({
                    size
                }), priceColor ? `text-[${priceColor}]` : "text-[#712F00]"),
                children: formatPrice(amount, currency, currencySymbol)
            }),
            installments && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "text-xs text-muted-foreground max-w-full overflow-hidden",
                children: variant === "compact" ? /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                    className: "text-fun-green-500 font-medium truncate block text-xs leading-tight",
                    children: [
                        installments.quantity,
                        "x de ",
                        formatPrice(installments.amount, currency, currencySymbol),
                        installments.interestFree && ` ${installmentsText}`
                    ]
                }) : /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                            className: "text-fun-green-500 font-medium truncate block text-xs leading-tight",
                            children: [
                                installments.quantity,
                                "x de ",
                                formatPrice(installments.amount, currency, currencySymbol)
                            ]
                        }),
                        installments.interestFree && /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                            className: "ml-1 text-green-600 truncate block",
                            children: installmentsText
                        })
                    ]
                })
            }),
            showFreeShipping && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "flex items-center gap-1 text-sm max-w-full mt-1",
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)("img", {
                    src: "/images/icons/icon-envio.svg",
                    alt: "Env\xedo gratis",
                    className: "h-6 w-auto"
                })
            })
        ]
    });
});
PriceDisplay.displayName = "PriceDisplay";

//# sourceMappingURL=data:application/json;base64,