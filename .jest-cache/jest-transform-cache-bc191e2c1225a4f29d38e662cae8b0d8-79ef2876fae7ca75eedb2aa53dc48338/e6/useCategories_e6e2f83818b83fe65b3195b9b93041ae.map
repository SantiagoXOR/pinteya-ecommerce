{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useCategories.ts"],"sourcesContent":["// ===================================\n// PINTEYA E-COMMERCE - HOOK PARA CATEGORÍAS\n// ===================================\n\nimport { useState, useEffect, useCallback } from 'react';\nimport { Category } from '@/types/database';\nimport { CategoryFilters, ApiResponse } from '@/types/api';\nimport { getCategories, getMainCategories } from '@/lib/api/categories';\n\ninterface UseCategoriesState {\n  categories: Category[];\n  loading: boolean;\n  error: string | null;\n}\n\ninterface UseCategoriesOptions {\n  initialFilters?: CategoryFilters;\n  autoFetch?: boolean;\n}\n\nexport function useCategories(options: UseCategoriesOptions = {}) {\n  const { initialFilters = {}, autoFetch = true } = options;\n\n  const [state, setState] = useState<UseCategoriesState>({\n    categories: [],\n    loading: false,\n    error: null,\n  });\n\n  const [filters, setFilters] = useState<CategoryFilters>(initialFilters);\n\n  /**\n   * Obtiene categorías desde la API\n   */\n  const fetchCategories = useCallback(async (newFilters?: CategoryFilters) => {\n    setState(prev => ({ ...prev, loading: true, error: null }));\n\n    try {\n      // Obtener categorías con filtros\n      const filtersToUse = newFilters || filters;\n      const response = await getCategories(filtersToUse);\n\n      if (response.success) {\n        setState(prev => ({\n          ...prev,\n          categories: response.data || [],\n          loading: false,\n        }));\n      } else {\n        setState(prev => ({\n          ...prev,\n          loading: false,\n          error: response.error || 'Error obteniendo categorías',\n        }));\n      }\n    } catch (error: any) {\n      setState(prev => ({\n        ...prev,\n        loading: false,\n        error: error.message || 'Error inesperado',\n      }));\n    }\n  }, [filters]);\n\n  /**\n   * Actualiza los filtros y obtiene categorías\n   */\n  const updateFilters = useCallback((newFilters: Partial<CategoryFilters>) => {\n    const updatedFilters = { ...filters, ...newFilters };\n    setFilters(updatedFilters);\n    fetchCategories(updatedFilters);\n  }, [filters, fetchCategories]);\n\n  /**\n   * Busca categorías por término\n   */\n  const searchCategories = useCallback((searchTerm: string) => {\n    updateFilters({ search: searchTerm });\n  }, [updateFilters]);\n\n  // Función removida ya que no hay jerarquía en la estructura actual\n\n  /**\n   * Refresca las categorías\n   */\n  const refreshCategories = useCallback(() => {\n    fetchCategories();\n  }, [fetchCategories]);\n\n  // Auto-fetch al montar el componente\n  useEffect(() => {\n    if (autoFetch) {\n      fetchCategories();\n    }\n  }, [autoFetch, fetchCategories]);\n\n  return {\n    // Estado\n    categories: state.categories,\n    loading: state.loading,\n    error: state.error,\n    \n    // Acciones\n    fetchCategories,\n    updateFilters,\n    searchCategories,\n    refreshCategories,\n  };\n}\n\n/**\n * Hook específico para obtener todas las categorías\n */\nexport function useMainCategories() {\n  return useCategories();\n}\n\n/**\n * Hook para obtener categorías con conteo de productos para filtros\n */\nexport function useCategoriesForFilters() {\n  const { categories, loading, error, refreshCategories } = useCategories();\n\n  // Transformar categorías para el formato esperado por los filtros\n  const categoriesForFilters = categories.map(category => ({\n    name: category.name,\n    products: category.products_count || 0,\n    isRefined: false, // Se manejará en el componente\n    slug: category.slug,\n    id: category.id,\n  }));\n\n  return {\n    categories: categoriesForFilters,\n    loading,\n    error,\n    refreshCategories,\n  };\n}\n"],"names":["useCategories","useCategoriesForFilters","useMainCategories","options","initialFilters","autoFetch","state","setState","useState","categories","loading","error","filters","setFilters","fetchCategories","useCallback","newFilters","prev","filtersToUse","response","getCategories","success","data","message","updateFilters","updatedFilters","searchCategories","searchTerm","search","refreshCategories","useEffect","categoriesForFilters","map","category","name","products","products_count","isRefined","slug","id"],"mappings":"AAAA,sCAAsC;AACtC,4CAA4C;AAC5C,sCAAsC;;;;;;;;;;;;QAkBtBA;eAAAA;;QAoGAC;eAAAA;;QAPAC;eAAAA;;;uBA7GiC;4BAGA;AAa1C,SAASF,cAAcG,UAAgC,CAAC,CAAC;IAC9D,MAAM,EAAEC,iBAAiB,CAAC,CAAC,EAAEC,YAAY,IAAI,EAAE,GAAGF;IAElD,MAAM,CAACG,OAAOC,SAAS,GAAGC,IAAAA,eAAQ,EAAqB;QACrDC,YAAY,EAAE;QACdC,SAAS;QACTC,OAAO;IACT;IAEA,MAAM,CAACC,SAASC,WAAW,GAAGL,IAAAA,eAAQ,EAAkBJ;IAExD;;GAEC,GACD,MAAMU,kBAAkBC,IAAAA,kBAAW,EAAC,OAAOC;QACzCT,SAASU,CAAAA,OAAS,CAAA;gBAAE,GAAGA,IAAI;gBAAEP,SAAS;gBAAMC,OAAO;YAAK,CAAA;QAExD,IAAI;YACF,iCAAiC;YACjC,MAAMO,eAAeF,cAAcJ;YACnC,MAAMO,WAAW,MAAMC,IAAAA,yBAAa,EAACF;YAErC,IAAIC,SAASE,OAAO,EAAE;gBACpBd,SAASU,CAAAA,OAAS,CAAA;wBAChB,GAAGA,IAAI;wBACPR,YAAYU,SAASG,IAAI,IAAI,EAAE;wBAC/BZ,SAAS;oBACX,CAAA;YACF,OAAO;gBACLH,SAASU,CAAAA,OAAS,CAAA;wBAChB,GAAGA,IAAI;wBACPP,SAAS;wBACTC,OAAOQ,SAASR,KAAK,IAAI;oBAC3B,CAAA;YACF;QACF,EAAE,OAAOA,OAAY;YACnBJ,SAASU,CAAAA,OAAS,CAAA;oBAChB,GAAGA,IAAI;oBACPP,SAAS;oBACTC,OAAOA,MAAMY,OAAO,IAAI;gBAC1B,CAAA;QACF;IACF,GAAG;QAACX;KAAQ;IAEZ;;GAEC,GACD,MAAMY,gBAAgBT,IAAAA,kBAAW,EAAC,CAACC;QACjC,MAAMS,iBAAiB;YAAE,GAAGb,OAAO;YAAE,GAAGI,UAAU;QAAC;QACnDH,WAAWY;QACXX,gBAAgBW;IAClB,GAAG;QAACb;QAASE;KAAgB;IAE7B;;GAEC,GACD,MAAMY,mBAAmBX,IAAAA,kBAAW,EAAC,CAACY;QACpCH,cAAc;YAAEI,QAAQD;QAAW;IACrC,GAAG;QAACH;KAAc;IAElB,mEAAmE;IAEnE;;GAEC,GACD,MAAMK,oBAAoBd,IAAAA,kBAAW,EAAC;QACpCD;IACF,GAAG;QAACA;KAAgB;IAEpB,qCAAqC;IACrCgB,IAAAA,gBAAS,EAAC;QACR,IAAIzB,WAAW;YACbS;QACF;IACF,GAAG;QAACT;QAAWS;KAAgB;IAE/B,OAAO;QACL,SAAS;QACTL,YAAYH,MAAMG,UAAU;QAC5BC,SAASJ,MAAMI,OAAO;QACtBC,OAAOL,MAAMK,KAAK;QAElB,WAAW;QACXG;QACAU;QACAE;QACAG;IACF;AACF;AAKO,SAAS3B;IACd,OAAOF;AACT;AAKO,SAASC;IACd,MAAM,EAAEQ,UAAU,EAAEC,OAAO,EAAEC,KAAK,EAAEkB,iBAAiB,EAAE,GAAG7B;IAE1D,kEAAkE;IAClE,MAAM+B,uBAAuBtB,WAAWuB,GAAG,CAACC,CAAAA,WAAa,CAAA;YACvDC,MAAMD,SAASC,IAAI;YACnBC,UAAUF,SAASG,cAAc,IAAI;YACrCC,WAAW;YACXC,MAAML,SAASK,IAAI;YACnBC,IAAIN,SAASM,EAAE;QACjB,CAAA;IAEA,OAAO;QACL9B,YAAYsB;QACZrB;QACAC;QACAkB;IACF;AACF"}