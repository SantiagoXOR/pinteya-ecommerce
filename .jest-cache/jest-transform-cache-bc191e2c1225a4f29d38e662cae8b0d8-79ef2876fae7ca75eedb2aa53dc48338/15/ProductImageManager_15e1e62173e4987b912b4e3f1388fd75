0c1337e76eac2bd57818939246aa99be
'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "ProductImageManager", {
    enumerable: true,
    get: function() {
        return ProductImageManager;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _image = /*#__PURE__*/ _interop_require_default(require("next/image"));
const _AdminCard = require("../ui/AdminCard");
const _lucidereact = require("lucide-react");
const _utils = require("../../../lib/utils");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function ProductImageManager({ productId, images = [], onChange, error, maxImages = 10, className }) {
    const [draggedIndex, setDraggedIndex] = (0, _react.useState)(null);
    const [editingIndex, setEditingIndex] = (0, _react.useState)(null);
    const [editingAlt, setEditingAlt] = (0, _react.useState)('');
    const [uploading, setUploading] = (0, _react.useState)(false);
    const fileInputRef = (0, _react.useRef)(null);
    // Handle file upload with Supabase Storage integration
    const handleFileUpload = async (files, productId)=>{
        if (files.length === 0) return;
        if (!productId) {
            console.error('Product ID is required for image upload');
            return;
        }
        const remainingSlots = maxImages - images.length;
        const filesToUpload = Array.from(files).slice(0, remainingSlots);
        setUploading(true);
        try {
            const uploadPromises = filesToUpload.map(async (file)=>{
                // TODO: Implement actual file upload to your storage service
                // For now, we'll create a local URL
                const url = URL.createObjectURL(file);
                return {
                    url,
                    alt: file.name.replace(/\.[^/.]+$/, ''),
                    is_primary: images.length === 0
                };
            });
            const newImages = await Promise.all(uploadPromises);
            onChange([
                ...images,
                ...newImages
            ]);
        } catch (error) {
            console.error('Error uploading images:', error);
        } finally{
            setUploading(false);
        }
    };
    // Handle drag and drop
    const handleDragStart = (index)=>{
        setDraggedIndex(index);
    };
    const handleDragOver = (e)=>{
        e.preventDefault();
    };
    const handleDrop = (e, dropIndex)=>{
        e.preventDefault();
        if (draggedIndex === null) return;
        const newImages = [
            ...images
        ];
        const draggedImage = newImages[draggedIndex];
        // Remove dragged item
        newImages.splice(draggedIndex, 1);
        // Insert at new position
        newImages.splice(dropIndex, 0, draggedImage);
        onChange(newImages);
        setDraggedIndex(null);
    };
    // Set primary image
    const setPrimaryImage = (index)=>{
        const newImages = images.map((img, i)=>({
                ...img,
                is_primary: i === index
            }));
        onChange(newImages);
    };
    // Remove image
    const removeImage = (index)=>{
        const newImages = images.filter((_, i)=>i !== index);
        // If we removed the primary image, make the first one primary
        if (images[index].is_primary && newImages.length > 0) {
            newImages[0].is_primary = true;
        }
        onChange(newImages);
    };
    // Edit alt text
    const startEditingAlt = (index)=>{
        setEditingIndex(index);
        setEditingAlt(images[index].alt || '');
    };
    const saveAltText = ()=>{
        if (editingIndex === null) return;
        const newImages = [
            ...images
        ];
        newImages[editingIndex] = {
            ...newImages[editingIndex],
            alt: editingAlt
        };
        onChange(newImages);
        setEditingIndex(null);
        setEditingAlt('');
    };
    const cancelEditingAlt = ()=>{
        setEditingIndex(null);
        setEditingAlt('');
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
        className: (0, _utils.cn)("space-y-6", className),
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_AdminCard.AdminCard, {
            title: "Gesti\xf3n de Im\xe1genes",
            className: "p-6",
            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "space-y-6",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: "border-2 border-dashed border-gray-300 rounded-lg p-6",
                        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "text-center",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Image, {
                                    className: "mx-auto h-12 w-12 text-gray-400"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "mt-4",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("label", {
                                            htmlFor: "file-upload",
                                            className: "cursor-pointer",
                                            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                                className: "mt-2 block text-sm font-medium text-gray-900",
                                                children: [
                                                    "Arrastra im\xe1genes aqu\xed o",
                                                    ' ',
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                        className: "text-blaze-orange-600 hover:text-blaze-orange-500",
                                                        children: "selecciona archivos"
                                                    })
                                                ]
                                            })
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                            ref: fileInputRef,
                                            id: "file-upload",
                                            name: "file-upload",
                                            type: "file",
                                            className: "sr-only",
                                            multiple: true,
                                            accept: "image/*",
                                            onChange: (e)=>e.target.files && handleFileUpload(e.target.files)
                                        })
                                    ]
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("p", {
                                    className: "mt-1 text-xs text-gray-500",
                                    children: [
                                        "PNG, JPG, GIF hasta 10MB. M\xe1ximo ",
                                        maxImages,
                                        " im\xe1genes."
                                    ]
                                }),
                                images.length >= maxImages && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "mt-3 flex items-center justify-center space-x-2 text-yellow-600",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.AlertCircle, {
                                            className: "w-4 h-4"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                            className: "text-sm",
                                            children: "L\xedmite de im\xe1genes alcanzado"
                                        })
                                    ]
                                })
                            ]
                        })
                    }),
                    error && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: "text-red-600 text-sm",
                        children: error
                    }),
                    images.length > 0 && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "space-y-4",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "flex items-center justify-between",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("h4", {
                                        className: "text-sm font-medium text-gray-900",
                                        children: [
                                            "Im\xe1genes del Producto (",
                                            images.length,
                                            "/",
                                            maxImages,
                                            ")"
                                        ]
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                        className: "text-xs text-gray-500",
                                        children: "Arrastra para reordenar"
                                    })
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4",
                                children: [
                                    images.map((image, index)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            draggable: true,
                                            onDragStart: ()=>handleDragStart(index),
                                            onDragOver: handleDragOver,
                                            onDrop: (e)=>handleDrop(e, index),
                                            className: (0, _utils.cn)("relative group border-2 rounded-lg overflow-hidden cursor-move transition-all", image.is_primary ? "border-blaze-orange-500 ring-2 ring-blaze-orange-200" : "border-gray-200 hover:border-gray-300", draggedIndex === index && "opacity-50"),
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                    className: "aspect-square relative",
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_image.default, {
                                                            src: image.url,
                                                            alt: image.alt || `Imagen ${index + 1}`,
                                                            fill: true,
                                                            className: "object-cover"
                                                        }),
                                                        image.is_primary && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                            className: "absolute top-2 left-2 bg-blaze-orange-600 text-white text-xs px-2 py-1 rounded",
                                                            children: "Principal"
                                                        }),
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                            className: "absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-50 transition-all flex items-center justify-center opacity-0 group-hover:opacity-100",
                                                            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                className: "flex space-x-2",
                                                                children: [
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                                                        type: "button",
                                                                        onClick: ()=>setPrimaryImage(index),
                                                                        className: "p-2 bg-white rounded-full hover:bg-gray-100 transition-colors",
                                                                        title: image.is_primary ? "Es imagen principal" : "Establecer como principal",
                                                                        children: image.is_primary ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Star, {
                                                                            className: "w-4 h-4 text-yellow-500 fill-current"
                                                                        }) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.StarOff, {
                                                                            className: "w-4 h-4 text-gray-600"
                                                                        })
                                                                    }),
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                                                        type: "button",
                                                                        onClick: ()=>startEditingAlt(index),
                                                                        className: "p-2 bg-white rounded-full hover:bg-gray-100 transition-colors",
                                                                        title: "Editar texto alternativo",
                                                                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Edit, {
                                                                            className: "w-4 h-4 text-gray-600"
                                                                        })
                                                                    }),
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                                                        type: "button",
                                                                        onClick: ()=>removeImage(index),
                                                                        className: "p-2 bg-white rounded-full hover:bg-red-100 transition-colors",
                                                                        title: "Eliminar imagen",
                                                                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Trash2, {
                                                                            className: "w-4 h-4 text-red-600"
                                                                        })
                                                                    })
                                                                ]
                                                            })
                                                        })
                                                    ]
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                    className: "p-2 bg-white",
                                                    children: editingIndex === index ? /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                        className: "space-y-2",
                                                        children: [
                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                                                type: "text",
                                                                value: editingAlt,
                                                                onChange: (e)=>setEditingAlt(e.target.value),
                                                                className: "w-full text-xs border border-gray-300 rounded px-2 py-1 focus:outline-none focus:ring-1 focus:ring-blaze-orange-500",
                                                                placeholder: "Texto alternativo"
                                                            }),
                                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                className: "flex space-x-1",
                                                                children: [
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                                                        type: "button",
                                                                        onClick: saveAltText,
                                                                        className: "flex-1 text-xs bg-blaze-orange-600 text-white px-2 py-1 rounded hover:bg-blaze-orange-700",
                                                                        children: "Guardar"
                                                                    }),
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                                                        type: "button",
                                                                        onClick: cancelEditingAlt,
                                                                        className: "flex-1 text-xs bg-gray-300 text-gray-700 px-2 py-1 rounded hover:bg-gray-400",
                                                                        children: "Cancelar"
                                                                    })
                                                                ]
                                                            })
                                                        ]
                                                    }) : /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                                        className: "text-xs text-gray-600 truncate",
                                                        children: image.alt || 'Sin texto alternativo'
                                                    })
                                                })
                                            ]
                                        }, index)),
                                    images.length < maxImages && /*#__PURE__*/ (0, _jsxruntime.jsxs)("button", {
                                        type: "button",
                                        onClick: ()=>fileInputRef.current?.click(),
                                        className: "aspect-square border-2 border-dashed border-gray-300 rounded-lg flex flex-col items-center justify-center hover:border-blaze-orange-400 hover:bg-blaze-orange-50 transition-colors",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Plus, {
                                                className: "w-8 h-8 text-gray-400"
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                className: "text-xs text-gray-500 mt-2",
                                                children: "Agregar m\xe1s"
                                            })
                                        ]
                                    })
                                ]
                            })
                        ]
                    }),
                    uploading && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "flex items-center space-x-2 text-sm text-gray-600",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                className: "animate-spin rounded-full h-4 w-4 border-b-2 border-blaze-orange-600"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                children: "Subiendo im\xe1genes..."
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "bg-blue-50 border border-blue-200 rounded-lg p-4",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("h5", {
                                className: "text-sm font-medium text-blue-800 mb-2",
                                children: "Consejos para mejores im\xe1genes:"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("ul", {
                                className: "text-xs text-blue-700 space-y-1",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("li", {
                                        children: "• Usa im\xe1genes de alta calidad (m\xednimo 800x800px)"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("li", {
                                        children: "• La primera imagen ser\xe1 la imagen principal del producto"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("li", {
                                        children: "• Incluye diferentes \xe1ngulos y detalles del producto"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("li", {
                                        children: "• Agrega texto alternativo para mejorar la accesibilidad"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("li", {
                                        children: "• Arrastra las im\xe1genes para cambiar el orden"
                                    })
                                ]
                            })
                        ]
                    })
                ]
            })
        })
    });
}

//# sourceMappingURL=data:application/json;base64,