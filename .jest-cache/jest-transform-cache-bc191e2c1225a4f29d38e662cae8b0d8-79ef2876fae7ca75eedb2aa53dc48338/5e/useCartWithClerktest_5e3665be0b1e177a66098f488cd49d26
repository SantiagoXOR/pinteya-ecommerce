c22205f98c18bf95a3445ef4276497cf
/**
 * Test simplificado para useCartWithClerk
 * Enfocado en validar la funcionalidad core sin complejidades
 */ "use strict";
// Mock para evitar problemas de dependencias
jest.mock('@/hooks/useAuth', ()=>({
        useAuth: jest.fn()
    }));
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _react = /*#__PURE__*/ _interop_require_default(require("react"));
const _react1 = require("@testing-library/react");
const _reactredux = require("react-redux");
const _toolkit = require("@reduxjs/toolkit");
const _useAuth = require("../../hooks/useAuth");
const _cartslice = /*#__PURE__*/ _interop_require_wildcard(require("../../redux/features/cart-slice"));
const _useCartWithClerk = require("../../hooks/useCartWithClerk");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
// Mock localStorage
const localStorageMock = {
    getItem: jest.fn(()=>null),
    setItem: jest.fn(),
    removeItem: jest.fn(),
    clear: jest.fn()
};
Object.defineProperty(window, 'localStorage', {
    value: localStorageMock
});
// Mock user data
const mockUser = {
    id: 'user_123',
    name: 'Juan Pérez',
    email: 'juan@example.com'
};
// Mock product data
const mockProduct = {
    id: 1,
    name: 'Pintura Latex Interior',
    price: 5000,
    category: 'Pinturas'
};
describe('useCartWithClerk Hook - Simplified', ()=>{
    let store;
    const mockUseAuth = _useAuth.useAuth;
    const renderHookWithStore = ()=>{
        store = (0, _toolkit.configureStore)({
            reducer: {
                cartReducer: _cartslice.default
            }
        });
        const wrapper = ({ children })=>_react.default.createElement(_reactredux.Provider, {
                store
            }, children);
        return (0, _react1.renderHook)(()=>(0, _useCartWithClerk.useCartWithClerk)(), {
            wrapper
        });
    };
    beforeEach(()=>{
        jest.clearAllMocks();
        localStorageMock.getItem.mockReturnValue(null);
    });
    describe('Unauthenticated User', ()=>{
        beforeEach(()=>{
            mockUseAuth.mockReturnValue({
                user: null,
                isLoaded: true,
                isSignedIn: false,
                signIn: jest.fn(),
                signOut: jest.fn(),
                session: null,
                status: 'unauthenticated'
            });
        });
        it('should handle unauthenticated user correctly', ()=>{
            const { result } = renderHookWithStore();
            expect(result.current.isAuthenticated).toBe(false);
            expect(result.current.userId).toBeUndefined();
            expect(Array.isArray(result.current.cartItems)).toBe(true);
        });
    });
    describe('Authenticated User', ()=>{
        beforeEach(()=>{
            mockUseAuth.mockReturnValue({
                user: mockUser,
                isLoaded: true,
                isSignedIn: true,
                signIn: jest.fn(),
                signOut: jest.fn(),
                session: {
                    user: mockUser
                },
                status: 'authenticated'
            });
        });
        it('should identify authenticated user correctly', ()=>{
            const { result } = renderHookWithStore();
            expect(result.current.isAuthenticated).toBe(true);
            expect(result.current.userId).toBe(mockUser.id);
            expect(Array.isArray(result.current.cartItems)).toBe(true);
        });
        it('should handle cart changes for authenticated user', ()=>{
            const { result } = renderHookWithStore();
            // Verificar estado inicial
            expect(result.current.isAuthenticated).toBe(true);
            expect(result.current.cartItems).toHaveLength(0);
            // Agregar item al carrito usando Redux dispatch
            (0, _react1.act)(()=>{
                store.dispatch((0, _cartslice.addItemToCart)(mockProduct));
            });
            // Verificar que el item se agregó correctamente
            expect(result.current.cartItems).toHaveLength(1);
            expect(result.current.cartItems[0]).toEqual(expect.objectContaining({
                id: mockProduct.id,
                price: mockProduct.price
            }));
        });
    });
    describe('Loading State', ()=>{
        beforeEach(()=>{
            mockUseAuth.mockReturnValue({
                user: null,
                isLoaded: false,
                isSignedIn: false,
                signIn: jest.fn(),
                signOut: jest.fn(),
                session: null,
                status: 'loading'
            });
        });
        it('should handle loading state correctly', ()=>{
            const { result } = renderHookWithStore();
            expect(result.current.isAuthenticated).toBe(false);
            expect(Array.isArray(result.current.cartItems)).toBe(true);
        });
    });
});

//# sourceMappingURL=data:application/json;base64,