{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\admin\\useAdminDashboardStats.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useSession } from 'next-auth/react';\n\ninterface DashboardStats {\n  totalProducts: number;\n  activeProducts: number;\n  lowStockProducts: number;\n  noStockProducts: number;\n  totalOrders: number;\n  pendingOrders: number;\n  completedOrders: number;\n  totalRevenue: number;\n  todayRevenue: number;\n  totalUsers: number;\n  activeUsers: number;\n}\n\ninterface QuickStat {\n  title: string;\n  value: string;\n  change: string;\n  changeType: 'positive' | 'negative' | 'neutral';\n  icon: any;\n}\n\nexport function useAdminDashboardStats() {\n  const [stats, setStats] = useState<DashboardStats | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const { data: session } = useSession();\n\n  useEffect(() => {\n    fetchDashboardStats();\n  }, []);\n\n  const fetchDashboardStats = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // NextAuth.js maneja las cookies de sesión automáticamente\n      // No necesitamos obtener token manualmente\n\n      // Hacer requests paralelos a diferentes APIs (con manejo de errores individual)\n      const [productsResponse, ordersResponse, usersResponse] = await Promise.allSettled([\n        fetch('/api/admin/products/stats', {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          credentials: 'include'\n        }),\n        fetch('/api/admin/orders/stats', {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          credentials: 'include'\n        }),\n        fetch('/api/admin/users/stats', {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          credentials: 'include'\n        })\n      ]);\n\n      // Procesar respuesta de productos\n      let productStats = {\n        totalProducts: 0,\n        activeProducts: 0,\n        lowStockProducts: 0,\n        noStockProducts: 0\n      };\n\n      if (productsResponse.status === 'fulfilled' && productsResponse.value.ok) {\n        const data = await productsResponse.value.json();\n        if (data.success && data.stats) {\n          productStats = {\n            totalProducts: data.stats.total_products || 0,\n            activeProducts: data.stats.active_products || 0,\n            lowStockProducts: data.stats.low_stock_products || 0,\n            noStockProducts: data.stats.no_stock_products || 0\n          };\n        }\n      }\n\n      // Procesar respuesta de órdenes (con fallback si no existe la API)\n      let orderStats = {\n        totalOrders: 0,\n        pendingOrders: 0,\n        completedOrders: 0,\n        totalRevenue: 0,\n        todayRevenue: 0\n      };\n\n      if (ordersResponse.status === 'fulfilled' && ordersResponse.value.ok) {\n        const data = await ordersResponse.value.json();\n        if (data.success && data.stats) {\n          orderStats = {\n            totalOrders: data.stats.total_orders || 0,\n            pendingOrders: data.stats.pending_orders || 0,\n            completedOrders: data.stats.completed_orders || 0,\n            totalRevenue: data.stats.total_revenue || 0,\n            todayRevenue: data.stats.today_revenue || 0\n          };\n        }\n      }\n\n      // Procesar respuesta de usuarios (con fallback si no existe la API)\n      let userStats = {\n        totalUsers: 0,\n        activeUsers: 0\n      };\n\n      if (usersResponse.status === 'fulfilled' && usersResponse.value.ok) {\n        const data = await usersResponse.value.json();\n        if (data.success && data.stats) {\n          userStats = {\n            totalUsers: data.stats.total_users || 0,\n            activeUsers: data.stats.active_users || 0\n          };\n        }\n      }\n\n      // Combinar todas las estadísticas\n      const combinedStats: DashboardStats = {\n        ...productStats,\n        ...orderStats,\n        ...userStats\n      };\n\n      setStats(combinedStats);\n    } catch (err) {\n      console.error('Error fetching dashboard stats:', err);\n      const errorMessage = err instanceof Error ? err.message : 'Error desconocido';\n\n      // No establecer error inmediatamente, intentar fallback primero\n      console.log('Intentando fallback con API pública de productos...');\n\n      // Fallback: obtener estadísticas básicas directamente de la API pública\n      try {\n        const response = await fetch('/api/products', {\n          credentials: 'include'\n        });\n\n        if (response.ok) {\n          const data = await response.json();\n          const products = data.data || [];\n\n          const totalProducts = products.length;\n          const withStock = products.filter((p: any) => p.stock && p.stock > 0).length;\n          const lowStock = products.filter((p: any) => p.stock && p.stock > 0 && p.stock <= 10).length;\n          const noStock = products.filter((p: any) => !p.stock || p.stock === 0).length;\n\n          setStats({\n            totalProducts,\n            activeProducts: withStock,\n            lowStockProducts: lowStock,\n            noStockProducts: noStock,\n            totalOrders: 0,\n            pendingOrders: 0,\n            completedOrders: 0,\n            totalRevenue: 0,\n            todayRevenue: 0,\n            totalUsers: 0,\n            activeUsers: 0\n          });\n\n          // Solo mostrar warning, no error completo\n          setError(`Usando datos básicos: ${errorMessage}`);\n          console.log('Fallback exitoso con API pública');\n        } else {\n          console.warn('API pública falló, usando datos estáticos');\n          // Fallback final con datos conocidos\n          setStats({\n            totalProducts: 53,\n            activeProducts: 53,\n            lowStockProducts: 4,\n            noStockProducts: 0,\n            totalOrders: 0,\n            pendingOrders: 0,\n            completedOrders: 0,\n            totalRevenue: 0,\n            todayRevenue: 0,\n            totalUsers: 0,\n            activeUsers: 0\n          });\n          setError(`Usando datos estáticos: ${errorMessage}`);\n        }\n      } catch (fallbackError) {\n        console.error('Error en fallback:', fallbackError);\n        // Fallback final con datos estáticos\n        setStats({\n          totalProducts: 53,\n          activeProducts: 53,\n          lowStockProducts: 4,\n          noStockProducts: 0,\n          totalOrders: 0,\n          pendingOrders: 0,\n          completedOrders: 0,\n          totalRevenue: 0,\n          todayRevenue: 0,\n          totalUsers: 0,\n          activeUsers: 0\n        });\n        setError(`Fallback completo falló: ${errorMessage}`);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const formatCurrency = (amount: number): string => {\n    return new Intl.NumberFormat('es-AR', {\n      style: 'currency',\n      currency: 'ARS',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(amount);\n  };\n\n  const calculateChange = (current: number, previous: number): { value: string; type: 'positive' | 'negative' | 'neutral' } => {\n    if (previous === 0) {\n      return { value: '+100%', type: 'positive' };\n    }\n    \n    const change = ((current - previous) / previous) * 100;\n    const absChange = Math.abs(change);\n    \n    if (absChange < 1) {\n      return { value: '0%', type: 'neutral' };\n    }\n    \n    return {\n      value: `${change > 0 ? '+' : ''}${change.toFixed(1)}%`,\n      type: change > 0 ? 'positive' : 'negative'\n    };\n  };\n\n  return {\n    stats,\n    loading,\n    error,\n    refetch: fetchDashboardStats,\n    formatCurrency,\n    calculateChange\n  };\n}\n"],"names":["useAdminDashboardStats","stats","setStats","useState","loading","setLoading","error","setError","data","session","useSession","useEffect","fetchDashboardStats","productsResponse","ordersResponse","usersResponse","Promise","allSettled","fetch","headers","credentials","productStats","totalProducts","activeProducts","lowStockProducts","noStockProducts","status","value","ok","json","success","total_products","active_products","low_stock_products","no_stock_products","orderStats","totalOrders","pendingOrders","completedOrders","totalRevenue","todayRevenue","total_orders","pending_orders","completed_orders","total_revenue","today_revenue","userStats","totalUsers","activeUsers","total_users","active_users","combinedStats","err","console","errorMessage","Error","message","log","response","products","length","withStock","filter","p","stock","lowStock","noStock","warn","fallbackError","formatCurrency","amount","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","calculateChange","current","previous","type","change","absChange","Math","abs","toFixed","refetch"],"mappings":"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"}