fc8f3ab081c584a4f9dcd6e4aeed3436
/**
 * Esquemas de Validación Enterprise Unificados
 * Extiende y mejora los esquemas existentes con validaciones enterprise
 */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: Object.getOwnPropertyDescriptor(all, name).get
    });
}
_export(exports, {
    get ENTERPRISE_VALIDATION_CONSTANTS () {
        return ENTERPRISE_VALIDATION_CONSTANTS;
    },
    get EnterpriseContactFormSchema () {
        return EnterpriseContactFormSchema;
    },
    get EnterpriseCreatePreferenceSchema () {
        return EnterpriseCreatePreferenceSchema;
    },
    get EnterpriseEmailSchema () {
        return EnterpriseEmailSchema;
    },
    get EnterpriseFileUploadSchema () {
        return EnterpriseFileUploadSchema;
    },
    get EnterpriseIdParamSchema () {
        return EnterpriseIdParamSchema;
    },
    get EnterpriseMercadoPagoItemSchema () {
        return EnterpriseMercadoPagoItemSchema;
    },
    get EnterpriseNewsletterSchema () {
        return EnterpriseNewsletterSchema;
    },
    get EnterpriseOrderFiltersSchema () {
        return EnterpriseOrderFiltersSchema;
    },
    get EnterpriseOrderItemSchema () {
        return EnterpriseOrderItemSchema;
    },
    get EnterpriseOrderSchema () {
        return EnterpriseOrderSchema;
    },
    get EnterprisePaginationSchema () {
        return EnterprisePaginationSchema;
    },
    get EnterprisePasswordSchema () {
        return EnterprisePasswordSchema;
    },
    get EnterprisePayerSchema () {
        return EnterprisePayerSchema;
    },
    get EnterprisePhoneSchema () {
        return EnterprisePhoneSchema;
    },
    get EnterprisePriceSchema () {
        return EnterprisePriceSchema;
    },
    get EnterpriseProductFiltersSchema () {
        return EnterpriseProductFiltersSchema;
    },
    get EnterpriseProductSchema () {
        return EnterpriseProductSchema;
    },
    get EnterpriseProductUpdateSchema () {
        return EnterpriseProductUpdateSchema;
    },
    get EnterpriseQuantitySchema () {
        return EnterpriseQuantitySchema;
    },
    get EnterpriseShippingAddressSchema () {
        return EnterpriseShippingAddressSchema;
    },
    get EnterpriseSlugParamSchema () {
        return EnterpriseSlugParamSchema;
    },
    get EnterpriseSlugSchema () {
        return EnterpriseSlugSchema;
    },
    get EnterpriseUUIDSchema () {
        return EnterpriseUUIDSchema;
    },
    get EnterpriseUserRegistrationSchema () {
        return EnterpriseUserRegistrationSchema;
    },
    get EnterpriseUserSchema () {
        return EnterpriseUserSchema;
    },
    get EnterpriseUserUpdateSchema () {
        return EnterpriseUserUpdateSchema;
    }
});
const _zod = require("zod");
const ENTERPRISE_VALIDATION_CONSTANTS = {
    // Longitudes de strings
    MIN_NAME_LENGTH: 2,
    MAX_NAME_LENGTH: 100,
    MIN_DESCRIPTION_LENGTH: 10,
    MAX_DESCRIPTION_LENGTH: 5000,
    MIN_PASSWORD_LENGTH: 8,
    MAX_PASSWORD_LENGTH: 128,
    // Límites numéricos
    MIN_PRICE: 0.01,
    MAX_PRICE: 999999.99,
    MIN_QUANTITY: 1,
    MAX_QUANTITY: 9999,
    MIN_STOCK: 0,
    MAX_STOCK: 999999,
    // Límites de arrays
    MAX_ARRAY_LENGTH: 1000,
    MAX_TAGS_LENGTH: 50,
    MAX_IMAGES_LENGTH: 20,
    // Patrones regex
    PHONE_REGEX: /^[\+]?[1-9][\d]{0,15}$/,
    SLUG_REGEX: /^[a-z0-9]+(?:-[a-z0-9]+)*$/,
    COLOR_HEX_REGEX: /^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/,
    UUID_REGEX: /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i,
    // Tipos de archivo permitidos
    ALLOWED_IMAGE_TYPES: [
        'image/jpeg',
        'image/png',
        'image/gif',
        'image/webp'
    ],
    ALLOWED_DOCUMENT_TYPES: [
        'application/pdf',
        'text/plain',
        'text/csv'
    ],
    // Tamaños de archivo
    MAX_IMAGE_SIZE: 5 * 1024 * 1024,
    MAX_DOCUMENT_SIZE: 10 * 1024 * 1024
};
const EnterpriseEmailSchema = _zod.z.string().email('Email inválido').min(5, 'Email muy corto').max(254, 'Email muy largo').refine((email)=>!email.includes('..'), 'Email no puede contener puntos consecutivos').refine((email)=>!/[<>()[\]\\.,;:\s@"]/.test(email.split('@')[0]), 'Caracteres no permitidos en email');
const EnterprisePasswordSchema = _zod.z.string().min(ENTERPRISE_VALIDATION_CONSTANTS.MIN_PASSWORD_LENGTH, 'Contraseña muy corta').max(ENTERPRISE_VALIDATION_CONSTANTS.MAX_PASSWORD_LENGTH, 'Contraseña muy larga').refine((password)=>/[A-Z]/.test(password), 'Debe contener al menos una mayúscula').refine((password)=>/[a-z]/.test(password), 'Debe contener al menos una minúscula').refine((password)=>/\d/.test(password), 'Debe contener al menos un número').refine((password)=>/[!@#$%^&*(),.?":{}|<>]/.test(password), 'Debe contener al menos un carácter especial');
const EnterprisePhoneSchema = _zod.z.string().regex(ENTERPRISE_VALIDATION_CONSTANTS.PHONE_REGEX, 'Formato de teléfono inválido').min(8, 'Teléfono muy corto').max(20, 'Teléfono muy largo');
const EnterpriseSlugSchema = _zod.z.string().regex(ENTERPRISE_VALIDATION_CONSTANTS.SLUG_REGEX, 'Slug debe contener solo letras minúsculas, números y guiones').min(3, 'Slug muy corto').max(100, 'Slug muy largo');
const EnterpriseUUIDSchema = _zod.z.string().regex(ENTERPRISE_VALIDATION_CONSTANTS.UUID_REGEX, 'UUID inválido');
const EnterprisePriceSchema = _zod.z.number().min(ENTERPRISE_VALIDATION_CONSTANTS.MIN_PRICE, 'Precio muy bajo').max(ENTERPRISE_VALIDATION_CONSTANTS.MAX_PRICE, 'Precio muy alto').multipleOf(0.01, 'Precio debe tener máximo 2 decimales');
const EnterpriseQuantitySchema = _zod.z.number().int('Cantidad debe ser un número entero').min(ENTERPRISE_VALIDATION_CONSTANTS.MIN_QUANTITY, 'Cantidad muy baja').max(ENTERPRISE_VALIDATION_CONSTANTS.MAX_QUANTITY, 'Cantidad muy alta');
const EnterpriseProductSchema = _zod.z.object({
    name: _zod.z.string().min(ENTERPRISE_VALIDATION_CONSTANTS.MIN_NAME_LENGTH, 'Nombre muy corto').max(ENTERPRISE_VALIDATION_CONSTANTS.MAX_NAME_LENGTH, 'Nombre muy largo').refine((name)=>!/[<>{}]/.test(name), 'Nombre contiene caracteres no permitidos'),
    brand: _zod.z.string().min(1, 'Marca requerida').max(50, 'Marca muy larga').optional(),
    slug: EnterpriseSlugSchema,
    description: _zod.z.string().min(ENTERPRISE_VALIDATION_CONSTANTS.MIN_DESCRIPTION_LENGTH, 'Descripción muy corta').max(ENTERPRISE_VALIDATION_CONSTANTS.MAX_DESCRIPTION_LENGTH, 'Descripción muy larga').optional(),
    short_description: _zod.z.string().max(500, 'Descripción corta muy larga').optional(),
    price: EnterprisePriceSchema,
    discounted_price: EnterprisePriceSchema.optional(),
    cost_price: EnterprisePriceSchema.optional(),
    stock: _zod.z.number().int('Stock debe ser un número entero').min(ENTERPRISE_VALIDATION_CONSTANTS.MIN_STOCK, 'Stock no puede ser negativo').max(ENTERPRISE_VALIDATION_CONSTANTS.MAX_STOCK, 'Stock muy alto'),
    low_stock_threshold: _zod.z.number().int().min(0).max(1000).optional(),
    category_id: EnterpriseUUIDSchema.optional(),
    status: _zod.z.enum([
        'active',
        'inactive',
        'draft'
    ]).default('draft'),
    tags: _zod.z.array(_zod.z.string().min(1).max(30)).max(ENTERPRISE_VALIDATION_CONSTANTS.MAX_TAGS_LENGTH, 'Demasiadas etiquetas').optional(),
    images: _zod.z.object({
        previews: _zod.z.array(_zod.z.string().url('URL de imagen inválida')).max(ENTERPRISE_VALIDATION_CONSTANTS.MAX_IMAGES_LENGTH, 'Demasiadas imágenes').optional(),
        main: _zod.z.string().url('URL de imagen principal inválida').optional(),
        gallery: _zod.z.array(_zod.z.string().url('URL de imagen inválida')).max(ENTERPRISE_VALIDATION_CONSTANTS.MAX_IMAGES_LENGTH, 'Demasiadas imágenes en galería').optional()
    }).optional(),
    specifications: _zod.z.record(_zod.z.string().max(200, 'Especificación muy larga')).optional(),
    seo: _zod.z.object({
        meta_title: _zod.z.string().max(60, 'Meta título muy largo').optional(),
        meta_description: _zod.z.string().max(160, 'Meta descripción muy larga').optional(),
        keywords: _zod.z.array(_zod.z.string().max(50)).max(20, 'Demasiadas keywords').optional()
    }).optional()
});
const EnterpriseProductUpdateSchema = EnterpriseProductSchema.partial();
const EnterpriseProductFiltersSchema = _zod.z.object({
    category_id: EnterpriseUUIDSchema.optional(),
    brand: _zod.z.string().max(50).optional(),
    min_price: _zod.z.coerce.number().min(0.01).optional(),
    max_price: _zod.z.coerce.number().min(0.01).optional(),
    status: _zod.z.enum([
        'active',
        'inactive',
        'draft'
    ]).optional(),
    in_stock: _zod.z.boolean().optional(),
    tags: _zod.z.array(_zod.z.string().max(30)).max(10).optional(),
    search: _zod.z.string().max(100).optional(),
    sort_by: _zod.z.enum([
        'name',
        'price',
        'created_at',
        'updated_at'
    ]).default('created_at'),
    sort_order: _zod.z.enum([
        'asc',
        'desc'
    ]).default('desc'),
    page: _zod.z.coerce.number().int().min(1).default(1),
    limit: _zod.z.coerce.number().int().min(1).max(100).default(20)
});
const EnterpriseUserSchema = _zod.z.object({
    clerk_id: _zod.z.string().min(1, 'ID de Clerk requerido'),
    email: EnterpriseEmailSchema,
    first_name: _zod.z.string().min(ENTERPRISE_VALIDATION_CONSTANTS.MIN_NAME_LENGTH, 'Nombre muy corto').max(ENTERPRISE_VALIDATION_CONSTANTS.MAX_NAME_LENGTH, 'Nombre muy largo').optional(),
    last_name: _zod.z.string().min(ENTERPRISE_VALIDATION_CONSTANTS.MIN_NAME_LENGTH, 'Apellido muy corto').max(ENTERPRISE_VALIDATION_CONSTANTS.MAX_NAME_LENGTH, 'Apellido muy largo').optional(),
    phone: EnterprisePhoneSchema.optional(),
    avatar_url: _zod.z.string().url('URL de avatar inválida').optional(),
    role: _zod.z.enum([
        'admin',
        'customer',
        'moderator'
    ]).default('customer'),
    is_active: _zod.z.boolean().default(true),
    preferences: _zod.z.object({
        newsletter: _zod.z.boolean().default(false),
        notifications: _zod.z.boolean().default(true),
        language: _zod.z.enum([
            'es',
            'en'
        ]).default('es'),
        currency: _zod.z.enum([
            'ARS',
            'USD'
        ]).default('ARS')
    }).optional(),
    metadata: _zod.z.record(_zod.z.any()).optional()
});
const EnterpriseUserUpdateSchema = EnterpriseUserSchema.partial().omit({
    clerk_id: true,
    role: true
});
const EnterpriseUserRegistrationSchema = _zod.z.object({
    email: EnterpriseEmailSchema,
    password: EnterprisePasswordSchema,
    first_name: _zod.z.string().min(ENTERPRISE_VALIDATION_CONSTANTS.MIN_NAME_LENGTH, 'Nombre muy corto').max(ENTERPRISE_VALIDATION_CONSTANTS.MAX_NAME_LENGTH, 'Nombre muy largo'),
    last_name: _zod.z.string().min(ENTERPRISE_VALIDATION_CONSTANTS.MIN_NAME_LENGTH, 'Apellido muy corto').max(ENTERPRISE_VALIDATION_CONSTANTS.MAX_NAME_LENGTH, 'Apellido muy largo'),
    phone: EnterprisePhoneSchema.optional(),
    terms_accepted: _zod.z.boolean().refine((val)=>val === true, 'Debe aceptar los términos y condiciones'),
    privacy_accepted: _zod.z.boolean().refine((val)=>val === true, 'Debe aceptar la política de privacidad')
});
const EnterpriseOrderItemSchema = _zod.z.object({
    product_id: EnterpriseUUIDSchema,
    quantity: EnterpriseQuantitySchema,
    unit_price: EnterprisePriceSchema,
    total_price: EnterprisePriceSchema,
    product_snapshot: _zod.z.object({
        name: _zod.z.string(),
        brand: _zod.z.string().optional(),
        image_url: _zod.z.string().url().optional()
    }).optional()
});
const EnterpriseShippingAddressSchema = _zod.z.object({
    first_name: _zod.z.string().min(ENTERPRISE_VALIDATION_CONSTANTS.MIN_NAME_LENGTH, 'Nombre muy corto').max(ENTERPRISE_VALIDATION_CONSTANTS.MAX_NAME_LENGTH, 'Nombre muy largo'),
    last_name: _zod.z.string().min(ENTERPRISE_VALIDATION_CONSTANTS.MIN_NAME_LENGTH, 'Apellido muy corto').max(ENTERPRISE_VALIDATION_CONSTANTS.MAX_NAME_LENGTH, 'Apellido muy largo'),
    street: _zod.z.string().min(5, 'Dirección muy corta').max(200, 'Dirección muy larga'),
    city: _zod.z.string().min(2, 'Ciudad muy corta').max(100, 'Ciudad muy larga'),
    state: _zod.z.string().min(2, 'Provincia muy corta').max(100, 'Provincia muy larga'),
    postal_code: _zod.z.string().min(4, 'Código postal muy corto').max(10, 'Código postal muy largo'),
    country: _zod.z.string().min(2, 'País muy corto').max(100, 'País muy largo').default('Argentina'),
    phone: EnterprisePhoneSchema.optional(),
    notes: _zod.z.string().max(500, 'Notas muy largas').optional()
});
const EnterpriseOrderSchema = _zod.z.object({
    items: _zod.z.array(EnterpriseOrderItemSchema).min(1, 'Debe incluir al menos un producto').max(50, 'Demasiados productos en la orden'),
    subtotal: EnterprisePriceSchema,
    shipping_cost: EnterprisePriceSchema.default(0),
    tax_amount: EnterprisePriceSchema.default(0),
    discount_amount: EnterprisePriceSchema.default(0),
    total: EnterprisePriceSchema,
    shipping_address: EnterpriseShippingAddressSchema,
    billing_address: EnterpriseShippingAddressSchema.optional(),
    payment_method: _zod.z.enum([
        'mercadopago',
        'transfer',
        'cash'
    ]).default('mercadopago'),
    notes: _zod.z.string().max(1000, 'Notas muy largas').optional(),
    metadata: _zod.z.record(_zod.z.any()).optional()
});
const EnterpriseOrderFiltersSchema = _zod.z.object({
    status: _zod.z.enum([
        'pending',
        'processing',
        'shipped',
        'delivered',
        'cancelled'
    ]).optional(),
    payment_status: _zod.z.enum([
        'pending',
        'paid',
        'failed',
        'refunded'
    ]).optional(),
    date_from: _zod.z.string().datetime().optional(),
    date_to: _zod.z.string().datetime().optional(),
    customer_id: EnterpriseUUIDSchema.optional(),
    min_total: EnterprisePriceSchema.optional(),
    max_total: EnterprisePriceSchema.optional(),
    search: _zod.z.string().max(100).optional(),
    sort_by: _zod.z.enum([
        'created_at',
        'total',
        'status'
    ]).default('created_at'),
    sort_order: _zod.z.enum([
        'asc',
        'desc'
    ]).default('desc'),
    page: _zod.z.number().int().min(1).default(1),
    limit: _zod.z.number().int().min(1).max(100).default(20)
});
const EnterpriseMercadoPagoItemSchema = _zod.z.object({
    id: _zod.z.string().min(1, 'ID de producto requerido'),
    title: _zod.z.string().min(1, 'Título requerido').max(256, 'Título muy largo'),
    description: _zod.z.string().max(600, 'Descripción muy larga').optional(),
    quantity: EnterpriseQuantitySchema,
    unit_price: EnterprisePriceSchema,
    currency_id: _zod.z.enum([
        'ARS',
        'USD'
    ]).default('ARS'),
    category_id: _zod.z.string().optional()
});
const EnterprisePayerSchema = _zod.z.object({
    name: _zod.z.string().min(ENTERPRISE_VALIDATION_CONSTANTS.MIN_NAME_LENGTH, 'Nombre muy corto').max(ENTERPRISE_VALIDATION_CONSTANTS.MAX_NAME_LENGTH, 'Nombre muy largo'),
    surname: _zod.z.string().min(ENTERPRISE_VALIDATION_CONSTANTS.MIN_NAME_LENGTH, 'Apellido muy corto').max(ENTERPRISE_VALIDATION_CONSTANTS.MAX_NAME_LENGTH, 'Apellido muy largo'),
    email: EnterpriseEmailSchema,
    phone: _zod.z.object({
        area_code: _zod.z.string().min(2).max(4),
        number: _zod.z.string().min(6).max(12)
    }).optional(),
    identification: _zod.z.object({
        type: _zod.z.enum([
            'DNI',
            'CI',
            'LC',
            'LE',
            'Otro'
        ]),
        number: _zod.z.string().min(7, 'Número de identificación muy corto').max(20, 'Número de identificación muy largo')
    }),
    address: _zod.z.object({
        street_name: _zod.z.string().min(5).max(200),
        street_number: _zod.z.number().int().min(1).max(99999),
        zip_code: _zod.z.string().min(4).max(10)
    }).optional()
});
const EnterpriseCreatePreferenceSchema = _zod.z.object({
    items: _zod.z.array(EnterpriseMercadoPagoItemSchema).min(1, 'Debe incluir al menos un item').max(50, 'Demasiados items'),
    payer: EnterprisePayerSchema,
    external_reference: _zod.z.string().min(1, 'Referencia externa requerida').max(256, 'Referencia muy larga'),
    back_urls: _zod.z.object({
        success: _zod.z.string().url('URL de éxito inválida'),
        failure: _zod.z.string().url('URL de fallo inválida'),
        pending: _zod.z.string().url('URL de pendiente inválida')
    }),
    auto_return: _zod.z.enum([
        'approved',
        'all'
    ]).default('approved'),
    payment_methods: _zod.z.object({
        excluded_payment_methods: _zod.z.array(_zod.z.object({
            id: _zod.z.string()
        })).optional(),
        excluded_payment_types: _zod.z.array(_zod.z.object({
            id: _zod.z.string()
        })).optional(),
        installments: _zod.z.number().int().min(1).max(24).optional()
    }).optional(),
    shipments: _zod.z.object({
        cost: EnterprisePriceSchema.optional(),
        mode: _zod.z.enum([
            'not_specified',
            'custom'
        ]).default('not_specified')
    }).optional(),
    notification_url: _zod.z.string().url('URL de notificación inválida').optional(),
    metadata: _zod.z.record(_zod.z.any()).optional()
});
const EnterpriseContactFormSchema = _zod.z.object({
    name: _zod.z.string().min(ENTERPRISE_VALIDATION_CONSTANTS.MIN_NAME_LENGTH, 'Nombre muy corto').max(ENTERPRISE_VALIDATION_CONSTANTS.MAX_NAME_LENGTH, 'Nombre muy largo'),
    email: EnterpriseEmailSchema,
    phone: EnterprisePhoneSchema.optional(),
    subject: _zod.z.string().min(5, 'Asunto muy corto').max(200, 'Asunto muy largo'),
    message: _zod.z.string().min(ENTERPRISE_VALIDATION_CONSTANTS.MIN_DESCRIPTION_LENGTH, 'Mensaje muy corto').max(2000, 'Mensaje muy largo'),
    company: _zod.z.string().max(100, 'Nombre de empresa muy largo').optional(),
    category: _zod.z.enum([
        'general',
        'support',
        'sales',
        'technical'
    ]).default('general'),
    priority: _zod.z.enum([
        'low',
        'medium',
        'high'
    ]).default('medium'),
    attachments: _zod.z.array(_zod.z.string().url()).max(5, 'Demasiados archivos adjuntos').optional()
});
const EnterpriseNewsletterSchema = _zod.z.object({
    email: EnterpriseEmailSchema,
    preferences: _zod.z.object({
        products: _zod.z.boolean().default(true),
        promotions: _zod.z.boolean().default(true),
        news: _zod.z.boolean().default(false)
    }).optional(),
    source: _zod.z.string().max(50).optional()
});
const EnterpriseIdParamSchema = _zod.z.object({
    id: _zod.z.string().transform((val)=>{
        // Intentar UUID primero
        if (ENTERPRISE_VALIDATION_CONSTANTS.UUID_REGEX.test(val)) {
            return val;
        }
        // Intentar número
        const num = parseInt(val, 10);
        if (!isNaN(num) && num > 0) {
            return num;
        }
        throw new Error('ID debe ser un UUID válido o un número positivo');
    })
});
const EnterpriseSlugParamSchema = _zod.z.object({
    slug: EnterpriseSlugSchema
});
const EnterprisePaginationSchema = _zod.z.object({
    page: _zod.z.coerce.number().int().min(1).default(1),
    limit: _zod.z.coerce.number().int().min(1).max(100).default(20),
    sort_by: _zod.z.string().max(50).optional(),
    sort_order: _zod.z.enum([
        'asc',
        'desc'
    ]).default('desc')
});
const EnterpriseFileUploadSchema = _zod.z.object({
    file: _zod.z.object({
        name: _zod.z.string().min(1, 'Nombre de archivo requerido'),
        size: _zod.z.number().int().min(1, 'Archivo vacío').max(ENTERPRISE_VALIDATION_CONSTANTS.MAX_IMAGE_SIZE, 'Archivo muy grande'),
        type: _zod.z.enum([
            ...ENTERPRISE_VALIDATION_CONSTANTS.ALLOWED_IMAGE_TYPES,
            ...ENTERPRISE_VALIDATION_CONSTANTS.ALLOWED_DOCUMENT_TYPES
        ], 'Tipo de archivo no permitido')
    }),
    category: _zod.z.enum([
        'product_image',
        'avatar',
        'document',
        'other'
    ]).default('other'),
    alt_text: _zod.z.string().max(200, 'Texto alternativo muy largo').optional(),
    metadata: _zod.z.record(_zod.z.any()).optional()
});

//# sourceMappingURL=data:application/json;base64,