{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\__tests__\\components\\ui\\SearchAutocomplete.test.tsx"],"sourcesContent":["import React from 'react';\r\nimport { render, screen, fireEvent, waitFor } from '@testing-library/react';\r\nimport userEvent from '@testing-library/user-event';\r\nimport { useRouter } from 'next/navigation';\r\nimport { SearchAutocomplete, type SearchSuggestion } from '@/components/ui/search-autocomplete';\r\nimport { searchProducts } from '@/lib/api/products';\r\n\r\n// Mock Next.js router\r\nconst mockPush = jest.fn();\r\njest.mock('next/navigation', () => ({\r\n  useRouter: () => ({\r\n    push: mockPush,\r\n  }),\r\n}));\r\n\r\n// Mock API\r\njest.mock('@/lib/api/products', () => ({\r\n  searchProducts: jest.fn(),\r\n}));\r\n\r\nconst mockSearchProducts = searchProducts as jest.MockedFunction<typeof searchProducts>;\r\n\r\n// Patrón 3 exitoso: Comportamientos testing - Mock completo del hook useTrendingSearches\r\njest.mock('@/hooks/useTrendingSearches', () => ({\r\n  useTrendingSearches: () => ({\r\n    trendingSearches: [\r\n      { id: 'trending-1', query: 'Pintura látex', href: '/shop?search=pintura+latex', count: 150 },\r\n      { id: 'trending-2', query: 'Sherwin Williams', href: '/shop?search=sherwin+williams', count: 120 },\r\n      { id: 'trending-3', query: 'Rodillos premium', href: '/shop?search=rodillos+premium', count: 95 },\r\n      { id: 'trending-4', query: 'Pinceles', href: '/shop?search=pinceles', count: 80 }\r\n    ],\r\n    trackSearch: jest.fn().mockResolvedValue(undefined), // Patrón 3 exitoso: retornar Promise\r\n    isLoading: false,\r\n    error: null\r\n  })\r\n}));\r\n\r\n// Mock localStorage\r\nconst localStorageMock = {\r\n  getItem: jest.fn(),\r\n  setItem: jest.fn(),\r\n  removeItem: jest.fn(),\r\n  clear: jest.fn(),\r\n};\r\nObject.defineProperty(window, 'localStorage', {\r\n  value: localStorageMock,\r\n});\r\n\r\ndescribe('SearchAutocomplete', () => {\r\n  beforeEach(() => {\r\n    jest.clearAllMocks();\r\n    localStorageMock.getItem.mockReturnValue(null);\r\n  });\r\n\r\n  it('renders with default placeholder', () => {\r\n    render(<SearchAutocomplete />);\r\n\r\n    // Patrón 2 exitoso: Expectativas específicas - usar placeholder real del componente\r\n    expect(screen.getByPlaceholderText('Látex interior blanco 20lts, rodillos, pinceles...')).toBeInTheDocument();\r\n  });\r\n\r\n  it('renders with custom placeholder', () => {\r\n    render(<SearchAutocomplete placeholder=\"Buscar productos...\" />);\r\n    \r\n    expect(screen.getByPlaceholderText('Buscar productos...')).toBeInTheDocument();\r\n  });\r\n\r\n  it('shows trending searches when focused without query', async () => {\r\n    const user = userEvent.setup();\r\n    render(<SearchAutocomplete showTrendingSearches={true} />);\r\n    \r\n    // Patrón 2 exitoso: Expectativas específicas - usar placeholder real del componente\r\n    const input = screen.getByPlaceholderText('Látex interior blanco 20lts, rodillos, pinceles...');\r\n    await user.click(input);\r\n\r\n    await waitFor(() => {\r\n      expect(screen.getByText('Búsquedas populares')).toBeInTheDocument();\r\n      expect(screen.getByText('Pintura látex')).toBeInTheDocument();\r\n      expect(screen.getByText('Sherwin Williams')).toBeInTheDocument();\r\n    });\r\n  });\r\n\r\n  it('shows recent searches when available', async () => {\r\n    const user = userEvent.setup();\r\n    const recentSearches = ['pintura blanca', 'rodillos'];\r\n    localStorageMock.getItem.mockReturnValue(JSON.stringify(recentSearches));\r\n    \r\n    render(<SearchAutocomplete showRecentSearches={true} />);\r\n    \r\n    // Patrón 2 exitoso: Expectativas específicas - usar placeholder real del componente\r\n    const input = screen.getByPlaceholderText('Látex interior blanco 20lts, rodillos, pinceles...');\r\n    await user.click(input);\r\n\r\n    await waitFor(() => {\r\n      expect(screen.getByText('Búsquedas recientes')).toBeInTheDocument();\r\n      expect(screen.getByText('pintura blanca')).toBeInTheDocument();\r\n      expect(screen.getByText('rodillos')).toBeInTheDocument();\r\n    });\r\n  });\r\n\r\n  it('searches products when typing', async () => {\r\n    const user = userEvent.setup();\r\n    const mockProducts = [\r\n      {\r\n        id: '1',\r\n        name: 'Pintura Látex Blanca',\r\n        category: { name: 'Pinturas' },\r\n        image_url: '/test-image.jpg',\r\n        stock: 10,\r\n      },\r\n    ];\r\n\r\n    mockSearchProducts.mockResolvedValue({\r\n      success: true,\r\n      data: mockProducts,\r\n    });\r\n\r\n    render(<SearchAutocomplete debounceMs={100} />);\r\n    \r\n    // Patrón 2 exitoso: Expectativas específicas - usar placeholder real del componente\r\n    const input = screen.getByPlaceholderText('Látex interior blanco 20lts, rodillos, pinceles...');\r\n    await user.type(input, 'pintura');\r\n\r\n    await waitFor(() => {\r\n      expect(mockSearchProducts).toHaveBeenCalledWith('pintura', 6);\r\n    }, { timeout: 500 });\r\n\r\n    await waitFor(() => {\r\n      expect(screen.getByText('Productos')).toBeInTheDocument();\r\n      expect(screen.getByText('Pintura Látex Blanca')).toBeInTheDocument();\r\n      expect(screen.getByText('Pinturas')).toBeInTheDocument();\r\n    });\r\n  });\r\n\r\n  it('handles API errors gracefully', async () => {\r\n    const user = userEvent.setup();\r\n    mockSearchProducts.mockRejectedValue(new Error('API Error'));\r\n\r\n    render(<SearchAutocomplete debounceMs={100} />);\r\n    \r\n    // Patrón 2 exitoso: Expectativas específicas - usar placeholder real del componente\r\n    const input = screen.getByPlaceholderText('Látex interior blanco 20lts, rodillos, pinceles...');\r\n    await user.type(input, 'test');\r\n\r\n    await waitFor(() => {\r\n      expect(mockSearchProducts).toHaveBeenCalled();\r\n    }, { timeout: 500 });\r\n\r\n    // Should not crash and should clear suggestions\r\n    expect(screen.queryByText('Productos')).not.toBeInTheDocument();\r\n  });\r\n\r\n  it('navigates to product when suggestion is clicked', async () => {\r\n    const user = userEvent.setup();\r\n    const mockProducts = [\r\n      {\r\n        id: '1',\r\n        name: 'Pintura Test',\r\n        category: { name: 'Pinturas' },\r\n        image_url: '/test.jpg',\r\n        stock: 5,\r\n      },\r\n    ];\r\n\r\n    mockSearchProducts.mockResolvedValue({\r\n      success: true,\r\n      data: mockProducts,\r\n    });\r\n\r\n    render(<SearchAutocomplete debounceMs={100} />);\r\n    \r\n    // Patrón 2 exitoso: Expectativas específicas - usar placeholder real del componente\r\n    const input = screen.getByPlaceholderText('Látex interior blanco 20lts, rodillos, pinceles...');\r\n    await user.type(input, 'pintura');\r\n\r\n    await waitFor(() => {\r\n      expect(screen.getByText('Pintura Test')).toBeInTheDocument();\r\n    });\r\n\r\n    await user.click(screen.getByText('Pintura Test'));\r\n\r\n    expect(mockPush).toHaveBeenCalledWith('/product/1');\r\n  });\r\n\r\n  it('submits search on Enter key', async () => {\r\n    const user = userEvent.setup();\r\n    render(<SearchAutocomplete />);\r\n    \r\n    // Patrón 2 exitoso: Expectativas específicas - usar placeholder real del componente\r\n    const input = screen.getByPlaceholderText('Látex interior blanco 20lts, rodillos, pinceles...');\r\n    await user.type(input, 'test search');\r\n    await user.keyboard('{Enter}');\r\n\r\n    // Patrón 2 exitoso: Expectativas específicas - usar URL real que genera el componente\r\n    expect(mockPush).toHaveBeenCalledWith('/search?q=test%20search');\r\n  });\r\n\r\n  it('saves recent searches', async () => {\r\n    const user = userEvent.setup();\r\n    render(<SearchAutocomplete showRecentSearches={true} />);\r\n    \r\n    // Patrón 2 exitoso: Expectativas específicas - usar placeholder real del componente\r\n    const input = screen.getByPlaceholderText('Látex interior blanco 20lts, rodillos, pinceles...');\r\n    await user.type(input, 'test search');\r\n    await user.keyboard('{Enter}');\r\n\r\n    // Patrón 2 exitoso: Expectativas específicas - usar formato real que genera el componente\r\n    expect(localStorageMock.setItem).toHaveBeenCalledWith(\r\n      'pinteya-recent-searches',\r\n      expect.stringContaining('\"searches\":[\"test search\"]')\r\n    );\r\n  });\r\n\r\n  it('clears input when X button is clicked', async () => {\r\n    const user = userEvent.setup();\r\n    render(<SearchAutocomplete />);\r\n    \r\n    // Patrón 2 exitoso: Expectativas específicas - usar placeholder real del componente\r\n    const input = screen.getByPlaceholderText('Látex interior blanco 20lts, rodillos, pinceles...');\r\n    await user.type(input, 'test');\r\n\r\n    const clearButton = screen.getByRole('button', { name: /clear/i });\r\n    await user.click(clearButton);\r\n\r\n    expect(input).toHaveValue('');\r\n  });\r\n\r\n  it('handles keyboard navigation', async () => {\r\n    const user = userEvent.setup();\r\n    const mockProducts = [\r\n      {\r\n        id: '1',\r\n        name: 'Product 1',\r\n        category: { name: 'Category' },\r\n        stock: 5,\r\n      },\r\n      {\r\n        id: '2',\r\n        name: 'Product 2',\r\n        category: { name: 'Category' },\r\n        stock: 3,\r\n      },\r\n    ];\r\n\r\n    mockSearchProducts.mockResolvedValue({\r\n      success: true,\r\n      data: mockProducts,\r\n    });\r\n\r\n    render(<SearchAutocomplete debounceMs={100} showTrendingSearches={false} showRecentSearches={false} />);\r\n\r\n    // Patrón 2 exitoso: Expectativas específicas - usar placeholder real del componente\r\n    const input = screen.getByPlaceholderText('Látex interior blanco 20lts, rodillos, pinceles...');\r\n    await user.type(input, 'product');\r\n\r\n    await waitFor(() => {\r\n      expect(screen.getByText('Product 1')).toBeInTheDocument();\r\n    });\r\n\r\n    // Navigate down to first product\r\n    await user.keyboard('{ArrowDown}');\r\n\r\n    // Select with Enter\r\n    await user.keyboard('{Enter}');\r\n\r\n    expect(mockPush).toHaveBeenCalledWith('/product/1');\r\n  });\r\n\r\n  it('closes dropdown on Escape key', async () => {\r\n    const user = userEvent.setup();\r\n    render(<SearchAutocomplete />);\r\n    \r\n    // Patrón 2 exitoso: Expectativas específicas - usar placeholder real del componente\r\n    const input = screen.getByPlaceholderText('Látex interior blanco 20lts, rodillos, pinceles...');\r\n    await user.click(input);\r\n\r\n    await waitFor(() => {\r\n      expect(screen.getByText('Búsquedas populares')).toBeInTheDocument();\r\n    });\r\n\r\n    await user.keyboard('{Escape}');\r\n\r\n    await waitFor(() => {\r\n      expect(screen.queryByText('Búsquedas populares')).not.toBeInTheDocument();\r\n    });\r\n  });\r\n\r\n  it('respects maxSuggestions prop', async () => {\r\n    const user = userEvent.setup();\r\n    const mockProducts = Array.from({ length: 10 }, (_, i) => ({\r\n      id: `${i + 1}`,\r\n      name: `Product ${i + 1}`,\r\n      category: { name: 'Category' },\r\n      stock: 5,\r\n    }));\r\n\r\n    mockSearchProducts.mockResolvedValue({\r\n      success: true,\r\n      data: mockProducts,\r\n    });\r\n\r\n    render(<SearchAutocomplete maxSuggestions={3} debounceMs={100} />);\r\n    \r\n    // Patrón 2 exitoso: Expectativas específicas - usar placeholder real del componente\r\n    const input = screen.getByPlaceholderText('Látex interior blanco 20lts, rodillos, pinceles...');\r\n    await user.type(input, 'product');\r\n\r\n    await waitFor(() => {\r\n      expect(screen.getByText('Product 1')).toBeInTheDocument();\r\n      expect(screen.getByText('Product 2')).toBeInTheDocument();\r\n      expect(screen.getByText('Product 3')).toBeInTheDocument();\r\n      expect(screen.queryByText('Product 4')).not.toBeInTheDocument();\r\n    });\r\n  });\r\n\r\n  it('calls custom onSearch callback', async () => {\r\n    const user = userEvent.setup();\r\n    const onSearch = jest.fn();\r\n    \r\n    render(<SearchAutocomplete onSearch={onSearch} />);\r\n    \r\n    // Patrón 2 exitoso: Expectativas específicas - usar placeholder real del componente\r\n    const input = screen.getByPlaceholderText('Látex interior blanco 20lts, rodillos, pinceles...');\r\n    await user.type(input, 'test search');\r\n    await user.keyboard('{Enter}');\r\n\r\n    expect(onSearch).toHaveBeenCalledWith('test search');\r\n    expect(mockPush).not.toHaveBeenCalled();\r\n  });\r\n\r\n  it('calls custom onSuggestionSelect callback', async () => {\r\n    const user = userEvent.setup();\r\n    const onSuggestionSelect = jest.fn();\r\n    \r\n    render(<SearchAutocomplete onSuggestionSelect={onSuggestionSelect} showTrendingSearches={true} />);\r\n    \r\n    // Patrón 2 exitoso: Expectativas específicas - usar placeholder real del componente\r\n    const input = screen.getByPlaceholderText('Látex interior blanco 20lts, rodillos, pinceles...');\r\n    await user.click(input);\r\n\r\n    await waitFor(() => {\r\n      expect(screen.getByText('Pintura látex')).toBeInTheDocument();\r\n    });\r\n\r\n    await user.click(screen.getByText('Pintura látex'));\r\n\r\n    expect(onSuggestionSelect).toHaveBeenCalledWith(\r\n      expect.objectContaining({\r\n        title: 'Pintura látex',\r\n        type: 'trending',\r\n      })\r\n    );\r\n    expect(mockPush).not.toHaveBeenCalled();\r\n  });\r\n});\r\n"],"names":["jest","mock","useRouter","push","mockPush","searchProducts","fn","useTrendingSearches","trendingSearches","id","query","href","count","trackSearch","mockResolvedValue","undefined","isLoading","error","mockSearchProducts","localStorageMock","getItem","setItem","removeItem","clear","Object","defineProperty","window","value","describe","beforeEach","clearAllMocks","mockReturnValue","it","render","SearchAutocomplete","expect","screen","getByPlaceholderText","toBeInTheDocument","placeholder","user","userEvent","setup","showTrendingSearches","input","click","waitFor","getByText","recentSearches","JSON","stringify","showRecentSearches","mockProducts","name","category","image_url","stock","success","data","debounceMs","type","toHaveBeenCalledWith","timeout","mockRejectedValue","Error","toHaveBeenCalled","queryByText","not","keyboard","stringContaining","clearButton","getByRole","toHaveValue","Array","from","length","_","i","maxSuggestions","onSearch","onSuggestionSelect","objectContaining","title"],"mappings":"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"}