{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\products\\[id]\\route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { checkCRUDPermissions, logAdminAction, getRequestInfo } from '@/lib/auth/admin-auth';\nimport { z } from 'zod';\n\n// Enterprise middleware imports\nimport { withErrorHandler } from '@/lib/api/error-handler';\nimport { withApiLogging } from '@/lib/api/api-logger';\nimport { withAdminAuth } from '@/lib/auth/api-auth-middleware';\nimport { withValidation } from '@/lib/validation/admin-schemas';\nimport { composeMiddlewares } from '@/lib/api/middleware-composer';\n\n// Validation schemas\nconst UpdateProductSchema = z.object({\n  name: z.string().min(1, 'El nombre es requerido').max(255, 'Máximo 255 caracteres').optional(),\n  description: z.string().optional(),\n  short_description: z.string().max(500, 'Máximo 500 caracteres').optional(),\n  price: z.number().min(0, 'El precio debe ser mayor a 0').optional(),\n  discounted_price: z.number().min(0).optional(),\n  stock: z.number().min(0, 'El stock debe ser mayor o igual a 0').optional(),\n  low_stock_threshold: z.number().min(0).optional(),\n  category_id: z.string().uuid('ID de categoría inválido').optional(),\n  brand: z.string().optional(),\n  images: z.array(z.object({\n    url: z.string().url(),\n    alt_text: z.string().optional(),\n    is_primary: z.boolean().default(false)\n  })).optional(),\n  is_active: z.boolean().optional(),\n  is_featured: z.boolean().optional(),\n  status: z.enum(['active', 'inactive', 'draft']).optional(),\n});\n\nconst ProductParamsSchema = z.object({\n  id: z.string().uuid('ID de producto inválido')\n});\n\n// Enterprise imports for error handling\nimport { ApiError, NotFoundError, ValidationError } from '@/lib/api/error-handler';\n\n// Helper function to get product by ID with enhanced error handling\nasync function getProductById(supabase: any, productId: string) {\n  const { data: product, error } = await supabase\n    .from('products')\n    .select(`\n      id,\n      name,\n      slug,\n      description,\n      short_description,\n      price,\n      discounted_price,\n      stock,\n      low_stock_threshold,\n      category_id,\n      brand,\n      images,\n      is_active,\n      is_featured,\n      status,\n      created_at,\n      updated_at,\n      categories (\n        id,\n        name\n      )\n    `)\n    .eq('id', productId)\n    .single();\n\n  if (error) {\n    throw new NotFoundError('Producto');\n  }\n\n  // Transform response with enhanced data\n  const transformedProduct = {\n    ...product,\n    category_name: product.categories?.name || null,\n    categories: undefined,\n  };\n\n  return transformedProduct;\n}\n\n// Helper function to generate unique slug\nfunction generateSlug(name: string): string {\n  return name\n    .toLowerCase()\n    .replace(/[^a-z0-9\\s-]/g, '')\n    .replace(/\\s+/g, '-')\n    .replace(/-+/g, '-')\n    .trim();\n}\n\n/**\n * GET /api/admin/products/[id] - Enterprise Handler\n * Obtener producto específico por ID con middleware enterprise\n */\nconst getHandler = async (request: NextRequest, { params }: { params: { id: string } }) => {\n  const { supabase } = request as any;\n  const productId = params.id;\n\n  // Validar parámetros\n  const paramsValidation = ProductParamsSchema.safeParse({ id: productId });\n  if (!paramsValidation.success) {\n    throw new ValidationError('ID de producto inválido', paramsValidation.error.errors);\n  }\n\n  const product = await getProductById(supabase, productId);\n\n  return NextResponse.json({\n    data: product,\n    success: true,\n    message: 'Producto obtenido exitosamente'\n  });\n};\n\n/**\n * PUT /api/admin/products/[id] - Enterprise Handler\n * Actualizar producto específico con middleware enterprise\n */\nconst putHandler = async (request: NextRequest, { params }: { params: { id: string } }) => {\n  const { supabase, user, validatedData } = request as any;\n  const productId = params.id;\n\n  // Validar parámetros\n  const paramsValidation = ProductParamsSchema.safeParse({ id: productId });\n  if (!paramsValidation.success) {\n    throw new ValidationError('ID de producto inválido', paramsValidation.error.errors);\n  }\n\n  // Verificar que el producto existe\n  const existingProduct = await getProductById(supabase, productId);\n\n  // Verificar categoría si se está actualizando\n  if (validatedData.category_id) {\n    const { data: category, error: categoryError } = await supabase\n      .from('categories')\n      .select('id')\n      .eq('id', validatedData.category_id)\n      .single();\n\n    if (categoryError || !category) {\n      throw new ValidationError('Categoría no encontrada');\n    }\n  }\n\n  // Generar slug si se actualiza el nombre\n  const updateData = {\n    ...validatedData,\n    updated_at: new Date().toISOString(),\n  };\n\n  if (validatedData.name) {\n    updateData.slug = generateSlug(validatedData.name);\n  }\n\n  // Actualizar producto\n  const { data: updatedProduct, error } = await supabase\n    .from('products')\n    .update(updateData)\n    .eq('id', productId)\n    .select(`\n      id,\n      name,\n      slug,\n      description,\n      short_description,\n      price,\n      discounted_price,\n      stock,\n      low_stock_threshold,\n      category_id,\n      brand,\n      images,\n      is_active,\n      is_featured,\n      status,\n      created_at,\n      updated_at,\n      categories (\n        id,\n        name\n      )\n    `)\n    .single();\n\n  if (error) {\n    throw new ApiError('Error al actualizar producto', 500, 'DATABASE_ERROR', error);\n  }\n\n  // Log de auditoría\n  await logAdminAction(user.id, 'UPDATE', 'product', productId, existingProduct, updatedProduct);\n\n  // Transform response\n  const transformedProduct = {\n    ...updatedProduct,\n    category_name: updatedProduct.categories?.name || null,\n    categories: undefined,\n  };\n\n  return NextResponse.json({\n    data: transformedProduct,\n    success: true,\n    message: 'Producto actualizado exitosamente'\n  });\n};\n\n/**\n * DELETE /api/admin/products/[id] - Enterprise Handler\n * Eliminar producto específico con middleware enterprise\n */\nconst deleteHandler = async (request: NextRequest, { params }: { params: { id: string } }) => {\n  const { supabase, user } = request as any;\n  const productId = params.id;\n\n  // Validar parámetros\n  const paramsValidation = ProductParamsSchema.safeParse({ id: productId });\n  if (!paramsValidation.success) {\n    throw new ValidationError('ID de producto inválido', paramsValidation.error.errors);\n  }\n\n  // Verificar que el producto existe\n  const existingProduct = await getProductById(supabase, productId);\n\n  // Verificar si el producto está referenciado en órdenes\n  const { data: orderItems, error: orderCheckError } = await supabase\n    .from('order_items')\n    .select('id')\n    .eq('product_id', productId)\n    .limit(1);\n\n  if (orderCheckError) {\n    console.warn('Error checking order references:', orderCheckError);\n    // Continuar con eliminación aunque falle la verificación\n  }\n\n  let deletionResult;\n  let isHardDelete = false;\n\n  if (orderItems && orderItems.length > 0) {\n    // Soft delete: marcar como inactivo\n    const { error: updateError } = await supabase\n      .from('products')\n      .update({\n        status: 'inactive',\n        is_active: false,\n        updated_at: new Date().toISOString()\n      })\n      .eq('id', productId);\n\n    if (updateError) {\n      throw new ApiError('Error al eliminar producto', 500, 'DATABASE_ERROR', updateError);\n    }\n\n    deletionResult = {\n      message: 'Producto marcado como inactivo (tiene órdenes asociadas)',\n      soft_delete: true\n    };\n  } else {\n    // Hard delete si no hay referencias\n    const { error } = await supabase\n      .from('products')\n      .delete()\n      .eq('id', productId);\n\n    if (error) {\n      throw new ApiError('Error al eliminar producto', 500, 'DATABASE_ERROR', error);\n    }\n\n    isHardDelete = true;\n    deletionResult = {\n      message: 'Producto eliminado exitosamente',\n      hard_delete: true\n    };\n  }\n\n  // Log de auditoría\n  await logAdminAction(\n    user.id,\n    isHardDelete ? 'DELETE' : 'SOFT_DELETE',\n    'product',\n    productId,\n    existingProduct,\n    null\n  );\n\n  return NextResponse.json({\n    ...deletionResult,\n    success: true\n  });\n};\n\n// Aplicar middlewares enterprise y exportar handlers\nexport const GET = composeMiddlewares(\n  withErrorHandler,\n  withApiLogging,\n  withAdminAuth(['products_read'])\n)(getHandler);\n\nexport const PUT = composeMiddlewares(\n  withErrorHandler,\n  withApiLogging,\n  withAdminAuth(['products_update']),\n  withValidation(UpdateProductSchema)\n)(putHandler);\n\nexport const DELETE = composeMiddlewares(\n  withErrorHandler,\n  withApiLogging,\n  withAdminAuth(['products_delete'])\n)(deleteHandler);\n"],"names":["DELETE","GET","PUT","UpdateProductSchema","z","object","name","string","min","max","optional","description","short_description","price","number","discounted_price","stock","low_stock_threshold","category_id","uuid","brand","images","array","url","alt_text","is_primary","boolean","default","is_active","is_featured","status","enum","ProductParamsSchema","id","getProductById","supabase","productId","data","product","error","from","select","eq","single","NotFoundError","transformedProduct","category_name","categories","undefined","generateSlug","toLowerCase","replace","trim","getHandler","request","params","paramsValidation","safeParse","success","ValidationError","errors","NextResponse","json","message","putHandler","user","validatedData","existingProduct","category","categoryError","updateData","updated_at","Date","toISOString","slug","updatedProduct","update","ApiError","logAdminAction","deleteHandler","orderItems","orderCheckError","limit","console","warn","deletionResult","isHardDelete","length","updateError","soft_delete","delete","hard_delete","composeMiddlewares","withErrorHandler","withApiLogging","withAdminAuth","withValidation"],"mappings":"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"}