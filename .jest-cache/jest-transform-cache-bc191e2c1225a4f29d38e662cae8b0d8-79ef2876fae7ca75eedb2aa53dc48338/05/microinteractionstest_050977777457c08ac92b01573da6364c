72d0605170282217671b6bdd8a15f3fd
/**
 * @jest-environment jsdom
 */ "use strict";
// Mock de Clerk
jest.mock('@clerk/nextjs', ()=>({
        SignedIn: ({ children })=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                "data-testid": "signed-in",
                children: children
            }),
        SignedOut: ({ children })=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                "data-testid": "signed-out",
                children: children
            }),
        UserButton: ()=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                "data-testid": "user-button",
                children: "User"
            }),
        useUser: ()=>({
                isLoaded: true
            })
    }));
// Mock de hooks
jest.mock('@/hooks/useGeolocation', ()=>({
        useGeolocation: ()=>({
                detectedZone: {
                    name: 'C贸rdoba Capital',
                    available: true
                },
                requestLocation: jest.fn(),
                permissionStatus: 'granted',
                isLoading: false,
                error: null,
                location: null,
                testLocation: jest.fn(),
                deliveryZones: [
                    {
                        id: 'cordoba-capital',
                        name: 'C贸rdoba Capital'
                    }
                ]
            })
    }));
jest.mock('@/hooks/useCartAnimation', ()=>({
        useCartAnimation: ()=>({
                isAnimating: false
            })
    }));
// Mock de componentes
jest.mock('@/components/ui/optimized-cart-icon', ()=>({
        OptimizedCartIcon: ()=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                "data-testid": "cart-icon",
                children: "Cart"
            })
    }));
jest.mock('@/components/ui/OptimizedLogo', ()=>({
        HeaderLogo: ({ className })=>/*#__PURE__*/ (0, _jsxruntime.jsx)("img", {
                "data-testid": "header-logo",
                className: className,
                alt: "Pinteya"
            })
    }));
jest.mock('@/components/ui/SearchAutocompleteIntegrated', ()=>({
        SearchAutocompleteIntegrated: ({ className })=>/*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                "data-testid": "search-input",
                className: className,
                placeholder: "Buscar productos..."
            })
    }));
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_default(require("react"));
const _react1 = require("@testing-library/react");
const _reactredux = require("react-redux");
const _toolkit = require("@reduxjs/toolkit");
const _index = /*#__PURE__*/ _interop_require_default(require("../index"));
const _CartSidebarModalContext = require("../../../app/context/CartSidebarModalContext");
const _cartslice = /*#__PURE__*/ _interop_require_default(require("../../../redux/features/cart-slice"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
// Store de prueba
const createTestStore = ()=>{
    return (0, _toolkit.configureStore)({
        reducer: {
            cartReducer: _cartslice.default
        },
        preloadedState: {
            cartReducer: {
                items: [
                    {
                        id: '1',
                        name: 'Producto Test',
                        price: 100,
                        quantity: 1
                    }
                ]
            }
        }
    });
};
const TestWrapper = ({ children })=>{
    const store = createTestStore();
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactredux.Provider, {
        store: store,
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_CartSidebarModalContext.CartSidebarModalProvider, {
            children: children
        })
    });
};
describe('Header Microinteractions', ()=>{
    beforeEach(()=>{
        // Mock de window.scrollY para sticky header
        Object.defineProperty(window, 'scrollY', {
            writable: true,
            value: 0
        });
        // Mock de addEventListener para scroll
        window.addEventListener = jest.fn();
        window.removeEventListener = jest.fn();
    });
    afterEach(()=>{
        jest.clearAllMocks();
    });
    describe('Sticky Header Behavior', ()=>{
        it('should apply sticky classes when scrolling', async ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            const header = _react1.screen.getByRole('banner');
            expect(header).toHaveClass('fixed');
            expect(header).toHaveClass('header-sticky-transition');
        });
        it('should register scroll event listener', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            expect(window.addEventListener).toHaveBeenCalledWith('scroll', expect.any(Function), {
                passive: true
            });
        });
    });
    describe('Button Animations', ()=>{
        it('should apply hover classes to cart button', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            const cartButton = _react1.screen.getByTestId('cart-icon').closest('button');
            expect(cartButton).toHaveClass('floating-button');
            expect(cartButton).toHaveClass('focus-ring');
        });
        it('should apply animation classes to logo', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            const logo = _react1.screen.getByTestId('header-logo');
            expect(logo).toHaveClass('transition-all');
            expect(logo).toHaveClass('duration-300');
        });
    });
    describe('Search Animations', ()=>{
        it('should apply search focus ring classes', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            const searchContainer = _react1.screen.getByTestId('search-input').closest('div');
            expect(searchContainer).toHaveClass('search-focus-ring');
        });
        it('should have transition classes on search input', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            const searchInput = _react1.screen.getByTestId('search-input');
            expect(searchInput.className).toContain('transition-all');
            expect(searchInput.className).toContain('duration-300');
        });
    });
    describe('Geolocation Animations', ()=>{
        it('should apply hover animations to location button', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            // Buscar el elemento de ubicaci贸n en el topbar
            const locationElements = _react1.screen.getAllByText(/C贸rdoba Capital/i);
            expect(locationElements.length).toBeGreaterThan(0);
        });
    });
    describe('Accessibility', ()=>{
        it('should have focus-ring classes for keyboard navigation', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            const cartButton = _react1.screen.getByTestId('cart-icon').closest('button');
            expect(cartButton).toHaveClass('focus-ring');
        });
        it('should maintain accessibility attributes', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            const header = _react1.screen.getByRole('banner');
            expect(header).toBeInTheDocument();
        });
    });
    describe('Performance', ()=>{
        it('should use CSS transitions instead of JavaScript animations', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            const cartButton = _react1.screen.getByTestId('cart-icon').closest('button');
            expect(cartButton?.className).toContain('transition-all');
            expect(cartButton?.className).toContain('duration-300');
        });
        it('should have passive scroll listeners', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            expect(window.addEventListener).toHaveBeenCalledWith('scroll', expect.any(Function), {
                passive: true
            });
        });
    });
    describe('Responsive Behavior', ()=>{
        it('should apply responsive classes', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            const logo = _react1.screen.getByTestId('header-logo');
            expect(logo.className).toContain('hidden sm:block');
        });
    });
});

//# sourceMappingURL=data:application/json;base64,