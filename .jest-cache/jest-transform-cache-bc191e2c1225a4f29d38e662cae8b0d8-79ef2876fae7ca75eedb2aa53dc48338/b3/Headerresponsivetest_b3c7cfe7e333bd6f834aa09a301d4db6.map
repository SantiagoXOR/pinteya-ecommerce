{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\Header\\__tests__\\responsive\\Header.responsive.test.tsx"],"sourcesContent":["/**\n * Tests Responsive - Header\n * Pruebas de comportamiento responsive en diferentes breakpoints\n */\n\nimport React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport { Provider } from 'react-redux';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport Header from '../../index';\nimport AuthSection from '../../AuthSection';\nimport { store } from '@/redux/store';\nimport { CartModalProvider } from '@/app/context/CartSidebarModalContext';\n\n// Mock de Next.js\njest.mock('next/navigation', () => ({\n  useRouter: () => ({\n    push: jest.fn(),\n    replace: jest.fn(),\n    prefetch: jest.fn(),\n  }),\n  useSearchParams: () => ({\n    get: jest.fn(),\n  }),\n}));\n\n// Mock de Clerk\njest.mock('@clerk/nextjs', () => ({\n  ClerkProvider: ({ children }: { children: React.ReactNode }) => <div>{children}</div>,\n  SignedIn: ({ children }: { children: React.ReactNode }) => <div data-testid=\"signed-in\">{children}</div>,\n  SignedOut: ({ children }: { children: React.ReactNode }) => <div data-testid=\"signed-out\">{children}</div>,\n  UserButton: () => <div data-testid=\"user-button\">UserButton</div>,\n  useUser: () => ({\n    isSignedIn: false,\n    user: null,\n    isLoaded: true,\n  }),\n}));\n\n// Mock de hooks\njest.mock('@/hooks/useGeolocation', () => ({\n  useGeolocation: () => ({\n    detectedZone: { id: 'cordoba-capital', name: 'Córdoba Capital' },\n    requestLocation: jest.fn(),\n    permissionStatus: 'granted',\n    isLoading: false,\n    error: null,\n    location: null,\n    testLocation: jest.fn(),\n    deliveryZones: [{ id: 'cordoba-capital', name: 'Córdoba Capital' }],\n  }),\n}));\n\njest.mock('@/hooks/useCartAnimation', () => ({\n  useCartAnimation: () => ({ isAnimating: false }),\n}));\n\n// Mock de componentes\njest.mock('@/components/ui/SearchAutocompleteIntegrated', () => ({\n  SearchAutocompleteIntegrated: ({ onSearch }: { onSearch: (query: string) => void }) => (\n    <input\n      data-testid=\"search-input\"\n      placeholder=\"latex interior blanco 20lts\"\n      className=\"w-full\"\n      onChange={(e) => onSearch(e.target.value)}\n    />\n  ),\n}));\n\njest.mock('@/components/ui/optimized-cart-icon', () => ({\n  OptimizedCartIcon: ({ className }: { className: string }) => (\n    <div data-testid=\"cart-icon\" className={className}>\n      Cart Icon\n    </div>\n  ),\n}));\n\njest.mock('@/components/ui/OptimizedLogo', () => ({\n  HeaderLogo: () => (\n    <img\n      src=\"/images/logo/LOGO POSITIVO.svg\"\n      alt=\"Pinteya - Tu Pinturería Online\"\n      data-testid=\"header-logo\"\n      className=\"h-8 w-auto sm:h-10\"\n    />\n  ),\n}));\n\n// Utilidad para simular diferentes viewports\nconst setViewport = (width: number, height: number = 768) => {\n  Object.defineProperty(window, 'innerWidth', {\n    writable: true,\n    configurable: true,\n    value: width,\n  });\n  Object.defineProperty(window, 'innerHeight', {\n    writable: true,\n    configurable: true,\n    value: height,\n  });\n  \n  // Disparar evento resize\n  window.dispatchEvent(new Event('resize'));\n};\n\n// Wrapper de pruebas\nconst TestWrapper = ({ children }: { children: React.ReactNode }) => {\n  const queryClient = new QueryClient({\n    defaultOptions: {\n      queries: { retry: false },\n      mutations: { retry: false },\n    },\n  });\n\n  return (\n    <Provider store={store}>\n      <QueryClientProvider client={queryClient}>\n        <CartModalProvider>\n          {children}\n        </CartModalProvider>\n      </QueryClientProvider>\n    </Provider>\n  );\n};\n\ndescribe('Header Responsive Tests', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  describe('Mobile (320px - 767px)', () => {\n    beforeEach(() => {\n      setViewport(375, 667); // iPhone SE\n    });\n\n    it('debe mostrar layout mobile correctamente', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      // Verificar elementos principales\n      expect(screen.getByTestId('header-logo')).toBeInTheDocument();\n      expect(screen.getByTestId('search-input')).toBeInTheDocument();\n      expect(screen.getByTestId('signed-out')).toBeInTheDocument();\n    });\n\n    it('debe ocultar el botón de carrito en mobile', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      const cartButton = screen.getByTestId('cart-icon').closest('button');\n      expect(cartButton).toHaveClass('hidden', 'sm:flex');\n    });\n\n    it('debe usar AuthSection variant mobile', () => {\n      render(\n        <TestWrapper>\n          <AuthSection variant=\"mobile\" />\n        </TestWrapper>\n      );\n\n      const authButton = screen.getByRole('button');\n      expect(authButton).toHaveClass('bg-white/20');\n    });\n\n    it('debe adaptar el tamaño del logo en mobile', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      const logo = screen.getByTestId('header-logo');\n      expect(logo).toHaveClass('h-8', 'w-auto', 'sm:h-10');\n    });\n\n    it('debe mantener funcionalidad de búsqueda en mobile', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      const searchInput = screen.getByTestId('search-input');\n      fireEvent.change(searchInput, { target: { value: 'test mobile' } });\n      expect(searchInput).toHaveValue('test mobile');\n    });\n\n    it('debe mostrar información de geolocalización compacta', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      expect(screen.getByText(/Envíos en/)).toBeInTheDocument();\n      expect(screen.getByText('Córdoba Capital')).toBeInTheDocument();\n    });\n  });\n\n  describe('Tablet (768px - 1023px)', () => {\n    beforeEach(() => {\n      setViewport(768, 1024); // iPad\n    });\n\n    it('debe mostrar layout tablet correctamente', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      // Verificar elementos principales\n      expect(screen.getByTestId('header-logo')).toBeInTheDocument();\n      expect(screen.getByTestId('search-input')).toBeInTheDocument();\n      expect(screen.getByTestId('signed-out')).toBeInTheDocument();\n    });\n\n    it('debe mostrar el botón de carrito en tablet', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      const cartButton = screen.getByTestId('cart-icon').closest('button');\n      expect(cartButton).toBeVisible();\n    });\n\n    it('debe usar tamaño de logo intermedio', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      const logo = screen.getByTestId('header-logo');\n      expect(logo).toHaveClass('sm:h-10');\n    });\n\n    it('debe mantener espaciado apropiado en tablet', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      const header = screen.getByRole('banner');\n      expect(header).toHaveClass('px-4'); // Padding horizontal\n    });\n  });\n\n  describe('Desktop (1024px+)', () => {\n    beforeEach(() => {\n      setViewport(1440, 900); // Desktop estándar\n    });\n\n    it('debe mostrar layout desktop completo', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      // Verificar todos los elementos\n      expect(screen.getByTestId('header-logo')).toBeInTheDocument();\n      expect(screen.getByTestId('search-input')).toBeInTheDocument();\n      expect(screen.getByTestId('signed-out')).toBeInTheDocument();\n      \n      const cartButton = screen.getByTestId('cart-icon').closest('button');\n      expect(cartButton).toBeVisible();\n    });\n\n    it('debe usar AuthSection variant desktop', () => {\n      render(\n        <TestWrapper>\n          <AuthSection variant=\"desktop\" />\n        </TestWrapper>\n      );\n\n      const authButton = screen.getByRole('button');\n      expect(authButton).toHaveClass('bg-white/20');\n    });\n\n    it('debe mostrar logo en tamaño completo', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      const logo = screen.getByTestId('header-logo');\n      expect(logo).toHaveClass('sm:h-10');\n    });\n\n    it('debe tener espaciado óptimo para desktop', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      const header = screen.getByRole('banner');\n      expect(header).toHaveClass('px-4');\n    });\n\n    it('debe mostrar todos los elementos del topbar', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      expect(screen.getByText(/Envíos en/)).toBeInTheDocument();\n      expect(screen.getByText('Córdoba Capital')).toBeInTheDocument();\n    });\n  });\n\n  describe('Breakpoints Específicos', () => {\n    const breakpoints = [\n      { name: 'xs', width: 320 },\n      { name: 'sm', width: 640 },\n      { name: 'md', width: 768 },\n      { name: 'lg', width: 1024 },\n      { name: 'xl', width: 1280 },\n      { name: '2xl', width: 1536 },\n    ];\n\n    breakpoints.forEach(({ name, width }) => {\n      it(`debe funcionar correctamente en breakpoint ${name} (${width}px)`, () => {\n        setViewport(width);\n\n        render(\n          <TestWrapper>\n            <Header />\n          </TestWrapper>\n        );\n\n        // Verificar elementos esenciales en todos los breakpoints\n        expect(screen.getByTestId('header-logo')).toBeInTheDocument();\n        expect(screen.getByTestId('search-input')).toBeInTheDocument();\n        expect(screen.getByTestId('signed-out')).toBeInTheDocument();\n      });\n    });\n  });\n\n  describe('Transiciones Responsive', () => {\n    it('debe manejar cambios de viewport dinámicamente', () => {\n      const { rerender } = render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      // Comenzar en mobile\n      setViewport(375);\n      rerender(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      const cartButtonMobile = screen.getByTestId('cart-icon').closest('button');\n      expect(cartButtonMobile).toHaveClass('hidden');\n\n      // Cambiar a desktop\n      setViewport(1024);\n      rerender(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      const cartButtonDesktop = screen.getByTestId('cart-icon').closest('button');\n      expect(cartButtonDesktop).toHaveClass('sm:flex');\n    });\n\n    it('debe mantener estado durante cambios de viewport', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      const searchInput = screen.getByTestId('search-input');\n      fireEvent.change(searchInput, { target: { value: 'test query' } });\n\n      // Cambiar viewport\n      setViewport(375);\n      \n      // El valor debe mantenerse\n      expect(searchInput).toHaveValue('test query');\n    });\n  });\n\n  describe('Touch Targets', () => {\n    it('debe tener touch targets apropiados en mobile', () => {\n      setViewport(375);\n\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      const buttons = screen.getAllByRole('button');\n      \n      // Los botones deben tener padding suficiente para touch\n      buttons.forEach(button => {\n        expect(button).toHaveClass(/p-2|px-3|py-2/);\n      });\n    });\n\n    it('debe mantener accesibilidad en touch devices', () => {\n      setViewport(375);\n\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      const searchInput = screen.getByTestId('search-input');\n      \n      // Simular touch\n      fireEvent.touchStart(searchInput);\n      fireEvent.touchEnd(searchInput);\n      \n      expect(searchInput).toBeInTheDocument();\n    });\n  });\n\n  describe('Orientación de Dispositivo', () => {\n    it('debe funcionar en orientación portrait', () => {\n      setViewport(375, 667); // Portrait\n\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      expect(screen.getByTestId('header-logo')).toBeInTheDocument();\n      expect(screen.getByTestId('search-input')).toBeInTheDocument();\n    });\n\n    it('debe funcionar en orientación landscape', () => {\n      setViewport(667, 375); // Landscape\n\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      expect(screen.getByTestId('header-logo')).toBeInTheDocument();\n      expect(screen.getByTestId('search-input')).toBeInTheDocument();\n    });\n  });\n\n  describe('Performance Responsive', () => {\n    it('debe renderizar eficientemente en diferentes tamaños', () => {\n      const renderTimes: number[] = [];\n\n      [320, 768, 1024, 1440].forEach(width => {\n        setViewport(width);\n        \n        const startTime = performance.now();\n        \n        const { unmount } = render(\n          <TestWrapper>\n            <Header />\n          </TestWrapper>\n        );\n        \n        const endTime = performance.now();\n        renderTimes.push(endTime - startTime);\n        \n        unmount();\n      });\n\n      // Todos los renders deben ser rápidos (< 50ms)\n      renderTimes.forEach(time => {\n        expect(time).toBeLessThan(50);\n      });\n    });\n  });\n\n  describe('Contenido Adaptativo', () => {\n    it('debe adaptar texto según el espacio disponible', () => {\n      // Mobile - texto más corto\n      setViewport(375);\n      const { rerender } = render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      expect(screen.getByText('Córdoba Capital')).toBeInTheDocument();\n\n      // Desktop - puede mostrar más información\n      setViewport(1440);\n      rerender(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      expect(screen.getByText('Córdoba Capital')).toBeInTheDocument();\n    });\n\n    it('debe priorizar elementos importantes en espacios reducidos', () => {\n      setViewport(320); // Muy pequeño\n\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      // Elementos esenciales deben estar presentes\n      expect(screen.getByTestId('header-logo')).toBeInTheDocument();\n      expect(screen.getByTestId('search-input')).toBeInTheDocument();\n      \n      // Carrito puede estar oculto\n      const cartButton = screen.getByTestId('cart-icon').closest('button');\n      expect(cartButton).toHaveClass('hidden');\n    });\n  });\n});\n"],"names":["jest","mock","useRouter","push","fn","replace","prefetch","useSearchParams","get","ClerkProvider","children","div","SignedIn","data-testid","SignedOut","UserButton","useUser","isSignedIn","user","isLoaded","useGeolocation","detectedZone","id","name","requestLocation","permissionStatus","isLoading","error","location","testLocation","deliveryZones","useCartAnimation","isAnimating","SearchAutocompleteIntegrated","onSearch","input","placeholder","className","onChange","e","target","value","OptimizedCartIcon","HeaderLogo","img","src","alt","setViewport","width","height","Object","defineProperty","window","writable","configurable","dispatchEvent","Event","TestWrapper","queryClient","QueryClient","defaultOptions","queries","retry","mutations","Provider","store","QueryClientProvider","client","CartModalProvider","describe","beforeEach","clearAllMocks","it","render","Header","expect","screen","getByTestId","toBeInTheDocument","cartButton","closest","toHaveClass","AuthSection","variant","authButton","getByRole","logo","searchInput","fireEvent","change","toHaveValue","getByText","toBeVisible","header","breakpoints","forEach","rerender","cartButtonMobile","cartButtonDesktop","buttons","getAllByRole","button","touchStart","touchEnd","renderTimes","startTime","performance","now","unmount","endTime","time","toBeLessThan"],"mappings":"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"}