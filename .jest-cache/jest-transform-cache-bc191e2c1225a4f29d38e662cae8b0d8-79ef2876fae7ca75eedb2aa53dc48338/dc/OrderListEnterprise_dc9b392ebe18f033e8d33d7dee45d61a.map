{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\admin\\orders\\OrderListEnterprise.tsx"],"sourcesContent":["// ===================================\n// PINTEYA E-COMMERCE - ORDER LIST ENTERPRISE COMPONENT\n// ===================================\n\n'use client';\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Badge } from '@/components/ui/badge';\nimport { \n  Select, \n  SelectContent, \n  SelectItem, \n  SelectTrigger, \n  SelectValue \n} from '@/components/ui/select';\nimport { \n  Table, \n  TableBody, \n  TableCell, \n  TableHead, \n  TableHeader, \n  TableRow \n} from '@/components/ui/table';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { \n  Search, \n  Filter, \n  Download, \n  RefreshCw, \n  Eye, \n  Edit,\n  MoreHorizontal,\n  ChevronLeft,\n  ChevronRight\n} from 'lucide-react';\nimport { \n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n  DropdownMenuSeparator\n} from '@/components/ui/dropdown-menu';\nimport { \n  OrderEnterprise, \n  OrderFilters, \n  OrderStatus,\n  PaymentStatus \n} from '@/types/orders-enterprise';\nimport { formatOrderStatus, formatPaymentStatus } from '@/lib/orders-enterprise';\nimport { useToast } from '@/hooks/use-toast';\n\n// ===================================\n// INTERFACES\n// ===================================\n\ninterface OrderListEnterpriseProps {\n  className?: string;\n  onOrderSelect?: (order: OrderEnterprise) => void;\n  onOrderEdit?: (order: OrderEnterprise) => void;\n  onBulkAction?: (action: string, orderIds: string[]) => void;\n  enableBulkActions?: boolean;\n  enableFilters?: boolean;\n  pageSize?: number;\n}\n\ninterface OrderListState {\n  orders: OrderEnterprise[];\n  loading: boolean;\n  error: string | null;\n  filters: OrderFilters;\n  selectedOrders: string[];\n  pagination: {\n    page: number;\n    limit: number;\n    total: number;\n    totalPages: number;\n    hasNextPage: boolean;\n    hasPreviousPage: boolean;\n  };\n}\n\n// ===================================\n// COMPONENTE PRINCIPAL\n// ===================================\n\nexport const OrderListEnterprise: React.FC<OrderListEnterpriseProps> = ({\n  className = '',\n  onOrderSelect,\n  onOrderEdit,\n  onBulkAction,\n  enableBulkActions = true,\n  enableFilters = true,\n  pageSize = 20,\n}) => {\n  const { toast } = useToast();\n  \n  // Estado del componente\n  const [state, setState] = useState<OrderListState>({\n    orders: [],\n    loading: true,\n    error: null,\n    filters: {\n      page: 1,\n      limit: pageSize,\n      sort_by: 'created_at',\n      sort_order: 'desc',\n    },\n    selectedOrders: [],\n    pagination: {\n      page: 1,\n      limit: pageSize,\n      total: 0,\n      totalPages: 0,\n      hasNextPage: false,\n      hasPreviousPage: false,\n    },\n  });\n\n  // ===================================\n  // FUNCIONES DE API\n  // ===================================\n\n  const fetchOrders = useCallback(async (filters: OrderFilters) => {\n    setState(prev => ({ ...prev, loading: true, error: null }));\n    \n    try {\n      const queryParams = new URLSearchParams();\n      Object.entries(filters).forEach(([key, value]) => {\n        if (value !== undefined && value !== null && value !== '') {\n          queryParams.append(key, value.toString());\n        }\n      });\n\n      const response = await fetch(`/api/admin/orders?${queryParams}`);\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.error || 'Error al cargar órdenes');\n      }\n\n      setState(prev => ({\n        ...prev,\n        orders: data.data.orders,\n        pagination: data.data.pagination,\n        loading: false,\n      }));\n    } catch (error) {\n      setState(prev => ({\n        ...prev,\n        error: error instanceof Error ? error.message : 'Error desconocido',\n        loading: false,\n      }));\n      \n      toast({\n        title: 'Error',\n        description: 'No se pudieron cargar las órdenes',\n        variant: 'destructive',\n      });\n    }\n  }, [toast]);\n\n  // ===================================\n  // EFECTOS\n  // ===================================\n\n  useEffect(() => {\n    fetchOrders(state.filters);\n  }, [fetchOrders, state.filters]);\n\n  // ===================================\n  // MANEJADORES DE EVENTOS\n  // ===================================\n\n  const handleFilterChange = (key: keyof OrderFilters, value: any) => {\n    setState(prev => ({\n      ...prev,\n      filters: {\n        ...prev.filters,\n        [key]: value,\n        page: 1, // Reset page when filters change\n      },\n    }));\n  };\n\n  const handlePageChange = (newPage: number) => {\n    setState(prev => ({\n      ...prev,\n      filters: {\n        ...prev.filters,\n        page: newPage,\n      },\n    }));\n  };\n\n  const handleSelectOrder = (orderId: string, selected: boolean) => {\n    setState(prev => ({\n      ...prev,\n      selectedOrders: selected\n        ? [...prev.selectedOrders, orderId]\n        : prev.selectedOrders.filter(id => id !== orderId),\n    }));\n  };\n\n  const handleSelectAll = (selected: boolean) => {\n    setState(prev => ({\n      ...prev,\n      selectedOrders: selected ? prev.orders.map(order => order.id) : [],\n    }));\n  };\n\n  const handleBulkAction = (action: string) => {\n    if (state.selectedOrders.length === 0) {\n      toast({\n        title: 'Advertencia',\n        description: 'Selecciona al menos una orden',\n        variant: 'destructive',\n      });\n      return;\n    }\n\n    onBulkAction?.(action, state.selectedOrders);\n  };\n\n  const handleRefresh = () => {\n    fetchOrders(state.filters);\n  };\n\n  // ===================================\n  // RENDER DE FILTROS\n  // ===================================\n\n  const renderFilters = () => {\n    if (!enableFilters) return null;\n\n    return (\n      <Card className=\"mb-6\">\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Filter className=\"w-5 h-5\" />\n            Filtros\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n            {/* Búsqueda */}\n            <div className=\"relative\">\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\" />\n              <Input\n                placeholder=\"Buscar órdenes...\"\n                value={state.filters.search || ''}\n                onChange={(e) => handleFilterChange('search', e.target.value)}\n                className=\"pl-10\"\n              />\n            </div>\n\n            {/* Estado */}\n            <Select\n              value={state.filters.status || 'all'}\n              onValueChange={(value) => handleFilterChange('status', value === 'all' ? undefined : value)}\n            >\n              <SelectTrigger>\n                <SelectValue placeholder=\"Estado\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">Todos los estados</SelectItem>\n                <SelectItem value=\"pending\">Pendiente</SelectItem>\n                <SelectItem value=\"confirmed\">Confirmada</SelectItem>\n                <SelectItem value=\"processing\">Procesando</SelectItem>\n                <SelectItem value=\"shipped\">Enviada</SelectItem>\n                <SelectItem value=\"delivered\">Entregada</SelectItem>\n                <SelectItem value=\"cancelled\">Cancelada</SelectItem>\n              </SelectContent>\n            </Select>\n\n            {/* Estado de Pago */}\n            <Select\n              value={state.filters.payment_status || 'all'}\n              onValueChange={(value) => handleFilterChange('payment_status', value === 'all' ? undefined : value)}\n            >\n              <SelectTrigger>\n                <SelectValue placeholder=\"Estado de Pago\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">Todos los pagos</SelectItem>\n                <SelectItem value=\"pending\">Pendiente</SelectItem>\n                <SelectItem value=\"paid\">Pagado</SelectItem>\n                <SelectItem value=\"failed\">Falló</SelectItem>\n                <SelectItem value=\"refunded\">Reembolsado</SelectItem>\n              </SelectContent>\n            </Select>\n\n            {/* Ordenamiento */}\n            <Select\n              value={`${state.filters.sort_by}_${state.filters.sort_order}`}\n              onValueChange={(value) => {\n                const [sortBy, sortOrder] = value.split('_');\n                handleFilterChange('sort_by', sortBy);\n                handleFilterChange('sort_order', sortOrder);\n              }}\n            >\n              <SelectTrigger>\n                <SelectValue placeholder=\"Ordenar por\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"created_at_desc\">Más recientes</SelectItem>\n                <SelectItem value=\"created_at_asc\">Más antiguos</SelectItem>\n                <SelectItem value=\"total_amount_desc\">Mayor monto</SelectItem>\n                <SelectItem value=\"total_amount_asc\">Menor monto</SelectItem>\n                <SelectItem value=\"order_number_asc\">Número de orden</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  };\n\n  // ===================================\n  // RENDER DE ACCIONES MASIVAS\n  // ===================================\n\n  const renderBulkActions = () => {\n    if (!enableBulkActions || state.selectedOrders.length === 0) return null;\n\n    return (\n      <div className=\"flex items-center gap-2 mb-4 p-3 bg-blue-50 rounded-lg\">\n        <span className=\"text-sm text-blue-700\">\n          {state.selectedOrders.length} orden(es) seleccionada(s)\n        </span>\n        <div className=\"flex gap-2 ml-auto\">\n          <Button\n            size=\"sm\"\n            variant=\"outline\"\n            onClick={() => handleBulkAction('export')}\n          >\n            <Download className=\"w-4 h-4 mr-1\" />\n            Exportar\n          </Button>\n          <Button\n            size=\"sm\"\n            variant=\"outline\"\n            onClick={() => handleBulkAction('status_update')}\n          >\n            Cambiar Estado\n          </Button>\n        </div>\n      </div>\n    );\n  };\n\n  // ===================================\n  // RENDER DE TABLA\n  // ===================================\n\n  const renderTable = () => {\n    if (state.loading) {\n      return (\n        <div className=\"flex items-center justify-center h-64\">\n          <RefreshCw className=\"w-8 h-8 animate-spin text-gray-400\" />\n        </div>\n      );\n    }\n\n    if (state.error) {\n      return (\n        <div className=\"text-center py-8\">\n          <p className=\"text-red-600 mb-4\">{state.error}</p>\n          <Button onClick={handleRefresh} variant=\"outline\">\n            <RefreshCw className=\"w-4 h-4 mr-2\" />\n            Reintentar\n          </Button>\n        </div>\n      );\n    }\n\n    if (state.orders.length === 0) {\n      return (\n        <div className=\"text-center py-8 text-gray-500\">\n          No se encontraron órdenes con los filtros aplicados\n        </div>\n      );\n    }\n\n    return (\n      <Table>\n        <TableHeader>\n          <TableRow>\n            {enableBulkActions && (\n              <TableHead className=\"w-12\">\n                <Checkbox\n                  checked={state.selectedOrders.length === state.orders.length}\n                  onCheckedChange={handleSelectAll}\n                />\n              </TableHead>\n            )}\n            <TableHead>Orden</TableHead>\n            <TableHead>Cliente</TableHead>\n            <TableHead>Estado</TableHead>\n            <TableHead>Pago</TableHead>\n            <TableHead>Total</TableHead>\n            <TableHead>Fecha</TableHead>\n            <TableHead className=\"w-12\">Acciones</TableHead>\n          </TableRow>\n        </TableHeader>\n        <TableBody>\n          {state.orders.map((order) => {\n            const statusInfo = formatOrderStatus(order.status);\n            const paymentInfo = formatPaymentStatus(order.payment_status);\n            \n            return (\n              <TableRow key={order.id}>\n                {enableBulkActions && (\n                  <TableCell>\n                    <Checkbox\n                      checked={state.selectedOrders.includes(order.id)}\n                      onCheckedChange={(checked) => handleSelectOrder(order.id, !!checked)}\n                    />\n                  </TableCell>\n                )}\n                <TableCell>\n                  <div>\n                    <div className=\"font-medium\">{order.order_number}</div>\n                    <div className=\"text-sm text-gray-500\">#{order.id.slice(0, 8)}</div>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <div>\n                    <div className=\"font-medium\">{order.user_profiles?.name || 'N/A'}</div>\n                    <div className=\"text-sm text-gray-500\">{order.user_profiles?.email}</div>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <Badge\n                    variant=\"secondary\"\n                    className={\n                      statusInfo.color === 'green' ? 'bg-green-100 text-green-800' :\n                      statusInfo.color === 'blue' ? 'bg-blue-100 text-blue-800' :\n                      statusInfo.color === 'yellow' ? 'bg-yellow-100 text-yellow-800' :\n                      statusInfo.color === 'red' ? 'bg-red-100 text-red-800' :\n                      statusInfo.color === 'purple' ? 'bg-purple-100 text-purple-800' :\n                      statusInfo.color === 'orange' ? 'bg-orange-100 text-orange-800' :\n                      'bg-gray-100 text-gray-800'\n                    }\n                  >\n                    {statusInfo.label}\n                  </Badge>\n                </TableCell>\n                <TableCell>\n                  <Badge\n                    variant=\"secondary\"\n                    className={\n                      paymentInfo.color === 'green' ? 'bg-green-100 text-green-800' :\n                      paymentInfo.color === 'yellow' ? 'bg-yellow-100 text-yellow-800' :\n                      paymentInfo.color === 'red' ? 'bg-red-100 text-red-800' :\n                      'bg-gray-100 text-gray-800'\n                    }\n                  >\n                    {paymentInfo.label}\n                  </Badge>\n                </TableCell>\n                <TableCell>\n                  <div className=\"font-medium\">\n                    ${order.total_amount.toLocaleString()} {order.currency}\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <div className=\"text-sm\">\n                    {new Date(order.created_at).toLocaleDateString()}\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <DropdownMenu>\n                    <DropdownMenuTrigger asChild>\n                      <Button variant=\"ghost\" size=\"sm\">\n                        <MoreHorizontal className=\"w-4 h-4\" />\n                      </Button>\n                    </DropdownMenuTrigger>\n                    <DropdownMenuContent align=\"end\">\n                      <DropdownMenuItem onClick={() => onOrderSelect?.(order)}>\n                        <Eye className=\"w-4 h-4 mr-2\" />\n                        Ver Detalles\n                      </DropdownMenuItem>\n                      <DropdownMenuItem onClick={() => onOrderEdit?.(order)}>\n                        <Edit className=\"w-4 h-4 mr-2\" />\n                        Editar\n                      </DropdownMenuItem>\n                      <DropdownMenuSeparator />\n                      <DropdownMenuItem onClick={() => handleBulkAction('export', [order.id])}>\n                        <Download className=\"w-4 h-4 mr-2\" />\n                        Exportar\n                      </DropdownMenuItem>\n                    </DropdownMenuContent>\n                  </DropdownMenu>\n                </TableCell>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    );\n  };\n\n  // ===================================\n  // RENDER DE PAGINACIÓN\n  // ===================================\n\n  const renderPagination = () => {\n    if (state.pagination.totalPages <= 1) return null;\n\n    return (\n      <div className=\"flex items-center justify-between mt-6\">\n        <div className=\"text-sm text-gray-500\">\n          Mostrando {((state.pagination.page - 1) * state.pagination.limit) + 1} a{' '}\n          {Math.min(state.pagination.page * state.pagination.limit, state.pagination.total)} de{' '}\n          {state.pagination.total} órdenes\n        </div>\n        <div className=\"flex items-center gap-2\">\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => handlePageChange(state.pagination.page - 1)}\n            disabled={!state.pagination.hasPreviousPage}\n          >\n            <ChevronLeft className=\"w-4 h-4\" />\n            Anterior\n          </Button>\n          <span className=\"text-sm\">\n            Página {state.pagination.page} de {state.pagination.totalPages}\n          </span>\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => handlePageChange(state.pagination.page + 1)}\n            disabled={!state.pagination.hasNextPage}\n          >\n            Siguiente\n            <ChevronRight className=\"w-4 h-4\" />\n          </Button>\n        </div>\n      </div>\n    );\n  };\n\n  // ===================================\n  // RENDER PRINCIPAL\n  // ===================================\n\n  return (\n    <div className={`space-y-6 ${className}`}>\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h2 className=\"text-2xl font-bold\">Gestión de Órdenes</h2>\n          <p className=\"text-gray-600\">\n            Administra y monitorea todas las órdenes del sistema\n          </p>\n        </div>\n        <Button onClick={handleRefresh} variant=\"outline\">\n          <RefreshCw className=\"w-4 h-4 mr-2\" />\n          Actualizar\n        </Button>\n      </div>\n\n      {/* Filtros */}\n      {renderFilters()}\n\n      {/* Acciones masivas */}\n      {renderBulkActions()}\n\n      {/* Tabla */}\n      <Card>\n        <CardContent className=\"p-0\">\n          {renderTable()}\n        </CardContent>\n      </Card>\n\n      {/* Paginación */}\n      {renderPagination()}\n    </div>\n  );\n};\n"],"names":["OrderListEnterprise","className","onOrderSelect","onOrderEdit","onBulkAction","enableBulkActions","enableFilters","pageSize","toast","useToast","state","setState","useState","orders","loading","error","filters","page","limit","sort_by","sort_order","selectedOrders","pagination","total","totalPages","hasNextPage","hasPreviousPage","fetchOrders","useCallback","prev","queryParams","URLSearchParams","Object","entries","forEach","key","value","undefined","append","toString","response","fetch","data","json","ok","Error","message","title","description","variant","useEffect","handleFilterChange","handlePageChange","newPage","handleSelectOrder","orderId","selected","filter","id","handleSelectAll","map","order","handleBulkAction","action","length","handleRefresh","renderFilters","Card","CardHeader","CardTitle","Filter","CardContent","div","Search","Input","placeholder","search","onChange","e","target","Select","status","onValueChange","SelectTrigger","SelectValue","SelectContent","SelectItem","payment_status","sortBy","sortOrder","split","renderBulkActions","span","Button","size","onClick","Download","renderTable","RefreshCw","p","Table","TableHeader","TableRow","TableHead","Checkbox","checked","onCheckedChange","TableBody","statusInfo","formatOrderStatus","paymentInfo","formatPaymentStatus","TableCell","includes","order_number","slice","user_profiles","name","email","Badge","color","label","total_amount","toLocaleString","currency","Date","created_at","toLocaleDateString","DropdownMenu","DropdownMenuTrigger","asChild","MoreHorizontal","DropdownMenuContent","align","DropdownMenuItem","Eye","Edit","DropdownMenuSeparator","renderPagination","Math","min","disabled","ChevronLeft","ChevronRight","h2"],"mappings":"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"}