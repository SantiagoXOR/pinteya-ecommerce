f958a049995f8a86c097eea445a9b207
"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: Object.getOwnPropertyDescriptor(all, name).get
    });
}
_export(exports, {
    get DropdownMenu () {
        return DropdownMenu;
    },
    get DropdownMenuCheckboxItem () {
        return DropdownMenuCheckboxItem;
    },
    get DropdownMenuContent () {
        return DropdownMenuContent;
    },
    get DropdownMenuGroup () {
        return DropdownMenuGroup;
    },
    get DropdownMenuItem () {
        return DropdownMenuItem;
    },
    get DropdownMenuLabel () {
        return DropdownMenuLabel;
    },
    get DropdownMenuPortal () {
        return DropdownMenuPortal;
    },
    get DropdownMenuRadioGroup () {
        return DropdownMenuRadioGroup;
    },
    get DropdownMenuRadioItem () {
        return DropdownMenuRadioItem;
    },
    get DropdownMenuSeparator () {
        return DropdownMenuSeparator;
    },
    get DropdownMenuShortcut () {
        return DropdownMenuShortcut;
    },
    get DropdownMenuSub () {
        return DropdownMenuSub;
    },
    get DropdownMenuSubContent () {
        return DropdownMenuSubContent;
    },
    get DropdownMenuSubTrigger () {
        return DropdownMenuSubTrigger;
    },
    get DropdownMenuTrigger () {
        return DropdownMenuTrigger;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _reactdropdownmenu = /*#__PURE__*/ _interop_require_wildcard(require("@radix-ui/react-dropdown-menu"));
const _lucidereact = require("lucide-react");
const _utils = require("../../lib/utils");
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const DropdownMenu = _reactdropdownmenu.Root;
const DropdownMenuTrigger = _reactdropdownmenu.Trigger;
const DropdownMenuGroup = _reactdropdownmenu.Group;
const DropdownMenuPortal = _reactdropdownmenu.Portal;
const DropdownMenuSub = _reactdropdownmenu.Sub;
const DropdownMenuRadioGroup = _reactdropdownmenu.RadioGroup;
const DropdownMenuSubTrigger = /*#__PURE__*/ _react.forwardRef(({ className, inset, children, ...props }, ref)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)(_reactdropdownmenu.SubTrigger, {
        ref: ref,
        className: (0, _utils.cn)("flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent", inset && "pl-8", className),
        ...props,
        children: [
            children,
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.ChevronRight, {
                className: "ml-auto h-4 w-4"
            })
        ]
    }));
DropdownMenuSubTrigger.displayName = _reactdropdownmenu.SubTrigger.displayName;
const DropdownMenuSubContent = /*#__PURE__*/ _react.forwardRef(({ className, ...props }, ref)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_reactdropdownmenu.SubContent, {
        ref: ref,
        className: (0, _utils.cn)("z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2", className),
        ...props
    }));
DropdownMenuSubContent.displayName = _reactdropdownmenu.SubContent.displayName;
const DropdownMenuContent = /*#__PURE__*/ _react.forwardRef(({ className, sideOffset = 4, ...props }, ref)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_reactdropdownmenu.Portal, {
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactdropdownmenu.Content, {
            ref: ref,
            sideOffset: sideOffset,
            className: (0, _utils.cn)("z-dropdown min-w-[8rem] overflow-hidden rounded-md border bg-white p-1 text-gray-950 shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2", className),
            ...props
        })
    }));
DropdownMenuContent.displayName = _reactdropdownmenu.Content.displayName;
const DropdownMenuItem = /*#__PURE__*/ _react.forwardRef(({ className, inset, ...props }, ref)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_reactdropdownmenu.Item, {
        ref: ref,
        className: (0, _utils.cn)("relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-gray-100 focus:text-gray-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50", inset && "pl-8", className),
        ...props
    }));
DropdownMenuItem.displayName = _reactdropdownmenu.Item.displayName;
const DropdownMenuCheckboxItem = /*#__PURE__*/ _react.forwardRef(({ className, children, checked, ...props }, ref)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)(_reactdropdownmenu.CheckboxItem, {
        ref: ref,
        className: (0, _utils.cn)("relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-gray-100 focus:text-gray-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50", className),
        checked: checked,
        ...props,
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                className: "absolute left-2 flex h-3.5 w-3.5 items-center justify-center",
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactdropdownmenu.ItemIndicator, {
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Check, {
                        className: "h-4 w-4"
                    })
                })
            }),
            children
        ]
    }));
DropdownMenuCheckboxItem.displayName = _reactdropdownmenu.CheckboxItem.displayName;
const DropdownMenuRadioItem = /*#__PURE__*/ _react.forwardRef(({ className, children, ...props }, ref)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)(_reactdropdownmenu.RadioItem, {
        ref: ref,
        className: (0, _utils.cn)("relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-gray-100 focus:text-gray-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50", className),
        ...props,
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                className: "absolute left-2 flex h-3.5 w-3.5 items-center justify-center",
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactdropdownmenu.ItemIndicator, {
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Circle, {
                        className: "h-2 w-2 fill-current"
                    })
                })
            }),
            children
        ]
    }));
DropdownMenuRadioItem.displayName = _reactdropdownmenu.RadioItem.displayName;
const DropdownMenuLabel = /*#__PURE__*/ _react.forwardRef(({ className, inset, ...props }, ref)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_reactdropdownmenu.Label, {
        ref: ref,
        className: (0, _utils.cn)("px-2 py-1.5 text-sm font-semibold", inset && "pl-8", className),
        ...props
    }));
DropdownMenuLabel.displayName = _reactdropdownmenu.Label.displayName;
const DropdownMenuSeparator = /*#__PURE__*/ _react.forwardRef(({ className, ...props }, ref)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_reactdropdownmenu.Separator, {
        ref: ref,
        className: (0, _utils.cn)("-mx-1 my-1 h-px bg-gray-200", className),
        ...props
    }));
DropdownMenuSeparator.displayName = _reactdropdownmenu.Separator.displayName;
const DropdownMenuShortcut = ({ className, ...props })=>{
    return /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
        className: (0, _utils.cn)("ml-auto text-xs tracking-widest opacity-60", className),
        ...props
    });
};
DropdownMenuShortcut.displayName = "DropdownMenuShortcut";

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbWFydGlcXERlc2t0b3BcXERFU0FSUk9MTE9TV1xcQk9JTEVSUExBVFRFIEUtQ09NTUVSQ0VcXHNyY1xcY29tcG9uZW50c1xcdWlcXGRyb3Bkb3duLW1lbnUudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiXHJcblxyXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIlxyXG5pbXBvcnQgKiBhcyBEcm9wZG93bk1lbnVQcmltaXRpdmUgZnJvbSBcIkByYWRpeC11aS9yZWFjdC1kcm9wZG93bi1tZW51XCJcclxuaW1wb3J0IHsgQ2hlY2ssIENoZXZyb25SaWdodCwgQ2lyY2xlIH0gZnJvbSBcImx1Y2lkZS1yZWFjdFwiXHJcblxyXG5pbXBvcnQgeyBjbiB9IGZyb20gXCJAL2xpYi91dGlsc1wiXHJcblxyXG5jb25zdCBEcm9wZG93bk1lbnUgPSBEcm9wZG93bk1lbnVQcmltaXRpdmUuUm9vdFxyXG5cclxuY29uc3QgRHJvcGRvd25NZW51VHJpZ2dlciA9IERyb3Bkb3duTWVudVByaW1pdGl2ZS5UcmlnZ2VyXHJcblxyXG5jb25zdCBEcm9wZG93bk1lbnVHcm91cCA9IERyb3Bkb3duTWVudVByaW1pdGl2ZS5Hcm91cFxyXG5cclxuY29uc3QgRHJvcGRvd25NZW51UG9ydGFsID0gRHJvcGRvd25NZW51UHJpbWl0aXZlLlBvcnRhbFxyXG5cclxuY29uc3QgRHJvcGRvd25NZW51U3ViID0gRHJvcGRvd25NZW51UHJpbWl0aXZlLlN1YlxyXG5cclxuY29uc3QgRHJvcGRvd25NZW51UmFkaW9Hcm91cCA9IERyb3Bkb3duTWVudVByaW1pdGl2ZS5SYWRpb0dyb3VwXHJcblxyXG5jb25zdCBEcm9wZG93bk1lbnVTdWJUcmlnZ2VyID0gUmVhY3QuZm9yd2FyZFJlZjxcclxuICBSZWFjdC5FbGVtZW50UmVmPHR5cGVvZiBEcm9wZG93bk1lbnVQcmltaXRpdmUuU3ViVHJpZ2dlcj4sXHJcbiAgUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPHR5cGVvZiBEcm9wZG93bk1lbnVQcmltaXRpdmUuU3ViVHJpZ2dlcj4gJiB7XHJcbiAgICBpbnNldD86IGJvb2xlYW5cclxuICB9XHJcbj4oKHsgY2xhc3NOYW1lLCBpbnNldCwgY2hpbGRyZW4sIC4uLnByb3BzIH0sIHJlZikgPT4gKFxyXG4gIDxEcm9wZG93bk1lbnVQcmltaXRpdmUuU3ViVHJpZ2dlclxyXG4gICAgcmVmPXtyZWZ9XHJcbiAgICBjbGFzc05hbWU9e2NuKFxyXG4gICAgICBcImZsZXggY3Vyc29yLWRlZmF1bHQgc2VsZWN0LW5vbmUgaXRlbXMtY2VudGVyIHJvdW5kZWQtc20gcHgtMiBweS0xLjUgdGV4dC1zbSBvdXRsaW5lLW5vbmUgZm9jdXM6YmctYWNjZW50IGRhdGEtW3N0YXRlPW9wZW5dOmJnLWFjY2VudFwiLFxyXG4gICAgICBpbnNldCAmJiBcInBsLThcIixcclxuICAgICAgY2xhc3NOYW1lXHJcbiAgICApfVxyXG4gICAgey4uLnByb3BzfVxyXG4gID5cclxuICAgIHtjaGlsZHJlbn1cclxuICAgIDxDaGV2cm9uUmlnaHQgY2xhc3NOYW1lPVwibWwtYXV0byBoLTQgdy00XCIgLz5cclxuICA8L0Ryb3Bkb3duTWVudVByaW1pdGl2ZS5TdWJUcmlnZ2VyPlxyXG4pKVxyXG5Ecm9wZG93bk1lbnVTdWJUcmlnZ2VyLmRpc3BsYXlOYW1lID1cclxuICBEcm9wZG93bk1lbnVQcmltaXRpdmUuU3ViVHJpZ2dlci5kaXNwbGF5TmFtZVxyXG5cclxuY29uc3QgRHJvcGRvd25NZW51U3ViQ29udGVudCA9IFJlYWN0LmZvcndhcmRSZWY8XHJcbiAgUmVhY3QuRWxlbWVudFJlZjx0eXBlb2YgRHJvcGRvd25NZW51UHJpbWl0aXZlLlN1YkNvbnRlbnQ+LFxyXG4gIFJlYWN0LkNvbXBvbmVudFByb3BzV2l0aG91dFJlZjx0eXBlb2YgRHJvcGRvd25NZW51UHJpbWl0aXZlLlN1YkNvbnRlbnQ+XHJcbj4oKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9LCByZWYpID0+IChcclxuICA8RHJvcGRvd25NZW51UHJpbWl0aXZlLlN1YkNvbnRlbnRcclxuICAgIHJlZj17cmVmfVxyXG4gICAgY2xhc3NOYW1lPXtjbihcclxuICAgICAgXCJ6LTUwIG1pbi13LVs4cmVtXSBvdmVyZmxvdy1oaWRkZW4gcm91bmRlZC1tZCBib3JkZXIgYmctcG9wb3ZlciBwLTEgdGV4dC1wb3BvdmVyLWZvcmVncm91bmQgc2hhZG93LWxnIGRhdGEtW3N0YXRlPW9wZW5dOmFuaW1hdGUtaW4gZGF0YS1bc3RhdGU9Y2xvc2VkXTphbmltYXRlLW91dCBkYXRhLVtzdGF0ZT1jbG9zZWRdOmZhZGUtb3V0LTAgZGF0YS1bc3RhdGU9b3Blbl06ZmFkZS1pbi0wIGRhdGEtW3N0YXRlPWNsb3NlZF06em9vbS1vdXQtOTUgZGF0YS1bc3RhdGU9b3Blbl06em9vbS1pbi05NSBkYXRhLVtzaWRlPWJvdHRvbV06c2xpZGUtaW4tZnJvbS10b3AtMiBkYXRhLVtzaWRlPWxlZnRdOnNsaWRlLWluLWZyb20tcmlnaHQtMiBkYXRhLVtzaWRlPXJpZ2h0XTpzbGlkZS1pbi1mcm9tLWxlZnQtMiBkYXRhLVtzaWRlPXRvcF06c2xpZGUtaW4tZnJvbS1ib3R0b20tMlwiLFxyXG4gICAgICBjbGFzc05hbWVcclxuICAgICl9XHJcbiAgICB7Li4ucHJvcHN9XHJcbiAgLz5cclxuKSlcclxuRHJvcGRvd25NZW51U3ViQ29udGVudC5kaXNwbGF5TmFtZSA9XHJcbiAgRHJvcGRvd25NZW51UHJpbWl0aXZlLlN1YkNvbnRlbnQuZGlzcGxheU5hbWVcclxuXHJcbmNvbnN0IERyb3Bkb3duTWVudUNvbnRlbnQgPSBSZWFjdC5mb3J3YXJkUmVmPFxyXG4gIFJlYWN0LkVsZW1lbnRSZWY8dHlwZW9mIERyb3Bkb3duTWVudVByaW1pdGl2ZS5Db250ZW50PixcclxuICBSZWFjdC5Db21wb25lbnRQcm9wc1dpdGhvdXRSZWY8dHlwZW9mIERyb3Bkb3duTWVudVByaW1pdGl2ZS5Db250ZW50PlxyXG4+KCh7IGNsYXNzTmFtZSwgc2lkZU9mZnNldCA9IDQsIC4uLnByb3BzIH0sIHJlZikgPT4gKFxyXG4gIDxEcm9wZG93bk1lbnVQcmltaXRpdmUuUG9ydGFsPlxyXG4gICAgPERyb3Bkb3duTWVudVByaW1pdGl2ZS5Db250ZW50XHJcbiAgICAgIHJlZj17cmVmfVxyXG4gICAgICBzaWRlT2Zmc2V0PXtzaWRlT2Zmc2V0fVxyXG4gICAgICBjbGFzc05hbWU9e2NuKFxyXG4gICAgICAgIFwiei1kcm9wZG93biBtaW4tdy1bOHJlbV0gb3ZlcmZsb3ctaGlkZGVuIHJvdW5kZWQtbWQgYm9yZGVyIGJnLXdoaXRlIHAtMSB0ZXh0LWdyYXktOTUwIHNoYWRvdy1tZCBkYXRhLVtzdGF0ZT1vcGVuXTphbmltYXRlLWluIGRhdGEtW3N0YXRlPWNsb3NlZF06YW5pbWF0ZS1vdXQgZGF0YS1bc3RhdGU9Y2xvc2VkXTpmYWRlLW91dC0wIGRhdGEtW3N0YXRlPW9wZW5dOmZhZGUtaW4tMCBkYXRhLVtzdGF0ZT1jbG9zZWRdOnpvb20tb3V0LTk1IGRhdGEtW3N0YXRlPW9wZW5dOnpvb20taW4tOTUgZGF0YS1bc2lkZT1ib3R0b21dOnNsaWRlLWluLWZyb20tdG9wLTIgZGF0YS1bc2lkZT1sZWZ0XTpzbGlkZS1pbi1mcm9tLXJpZ2h0LTIgZGF0YS1bc2lkZT1yaWdodF06c2xpZGUtaW4tZnJvbS1sZWZ0LTIgZGF0YS1bc2lkZT10b3BdOnNsaWRlLWluLWZyb20tYm90dG9tLTJcIixcclxuICAgICAgICBjbGFzc05hbWVcclxuICAgICAgKX1cclxuICAgICAgey4uLnByb3BzfVxyXG4gICAgLz5cclxuICA8L0Ryb3Bkb3duTWVudVByaW1pdGl2ZS5Qb3J0YWw+XHJcbikpXHJcbkRyb3Bkb3duTWVudUNvbnRlbnQuZGlzcGxheU5hbWUgPSBEcm9wZG93bk1lbnVQcmltaXRpdmUuQ29udGVudC5kaXNwbGF5TmFtZVxyXG5cclxuY29uc3QgRHJvcGRvd25NZW51SXRlbSA9IFJlYWN0LmZvcndhcmRSZWY8XHJcbiAgUmVhY3QuRWxlbWVudFJlZjx0eXBlb2YgRHJvcGRvd25NZW51UHJpbWl0aXZlLkl0ZW0+LFxyXG4gIFJlYWN0LkNvbXBvbmVudFByb3BzV2l0aG91dFJlZjx0eXBlb2YgRHJvcGRvd25NZW51UHJpbWl0aXZlLkl0ZW0+ICYge1xyXG4gICAgaW5zZXQ/OiBib29sZWFuXHJcbiAgfVxyXG4+KCh7IGNsYXNzTmFtZSwgaW5zZXQsIC4uLnByb3BzIH0sIHJlZikgPT4gKFxyXG4gIDxEcm9wZG93bk1lbnVQcmltaXRpdmUuSXRlbVxyXG4gICAgcmVmPXtyZWZ9XHJcbiAgICBjbGFzc05hbWU9e2NuKFxyXG4gICAgICBcInJlbGF0aXZlIGZsZXggY3Vyc29yLWRlZmF1bHQgc2VsZWN0LW5vbmUgaXRlbXMtY2VudGVyIHJvdW5kZWQtc20gcHgtMiBweS0xLjUgdGV4dC1zbSBvdXRsaW5lLW5vbmUgdHJhbnNpdGlvbi1jb2xvcnMgZm9jdXM6YmctZ3JheS0xMDAgZm9jdXM6dGV4dC1ncmF5LTkwMCBkYXRhLVtkaXNhYmxlZF06cG9pbnRlci1ldmVudHMtbm9uZSBkYXRhLVtkaXNhYmxlZF06b3BhY2l0eS01MFwiLFxyXG4gICAgICBpbnNldCAmJiBcInBsLThcIixcclxuICAgICAgY2xhc3NOYW1lXHJcbiAgICApfVxyXG4gICAgey4uLnByb3BzfVxyXG4gIC8+XHJcbikpXHJcbkRyb3Bkb3duTWVudUl0ZW0uZGlzcGxheU5hbWUgPSBEcm9wZG93bk1lbnVQcmltaXRpdmUuSXRlbS5kaXNwbGF5TmFtZVxyXG5cclxuY29uc3QgRHJvcGRvd25NZW51Q2hlY2tib3hJdGVtID0gUmVhY3QuZm9yd2FyZFJlZjxcclxuICBSZWFjdC5FbGVtZW50UmVmPHR5cGVvZiBEcm9wZG93bk1lbnVQcmltaXRpdmUuQ2hlY2tib3hJdGVtPixcclxuICBSZWFjdC5Db21wb25lbnRQcm9wc1dpdGhvdXRSZWY8dHlwZW9mIERyb3Bkb3duTWVudVByaW1pdGl2ZS5DaGVja2JveEl0ZW0+XHJcbj4oKHsgY2xhc3NOYW1lLCBjaGlsZHJlbiwgY2hlY2tlZCwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoXHJcbiAgPERyb3Bkb3duTWVudVByaW1pdGl2ZS5DaGVja2JveEl0ZW1cclxuICAgIHJlZj17cmVmfVxyXG4gICAgY2xhc3NOYW1lPXtjbihcclxuICAgICAgXCJyZWxhdGl2ZSBmbGV4IGN1cnNvci1kZWZhdWx0IHNlbGVjdC1ub25lIGl0ZW1zLWNlbnRlciByb3VuZGVkLXNtIHB5LTEuNSBwbC04IHByLTIgdGV4dC1zbSBvdXRsaW5lLW5vbmUgdHJhbnNpdGlvbi1jb2xvcnMgZm9jdXM6YmctZ3JheS0xMDAgZm9jdXM6dGV4dC1ncmF5LTkwMCBkYXRhLVtkaXNhYmxlZF06cG9pbnRlci1ldmVudHMtbm9uZSBkYXRhLVtkaXNhYmxlZF06b3BhY2l0eS01MFwiLFxyXG4gICAgICBjbGFzc05hbWVcclxuICAgICl9XHJcbiAgICBjaGVja2VkPXtjaGVja2VkfVxyXG4gICAgey4uLnByb3BzfVxyXG4gID5cclxuICAgIDxzcGFuIGNsYXNzTmFtZT1cImFic29sdXRlIGxlZnQtMiBmbGV4IGgtMy41IHctMy41IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlclwiPlxyXG4gICAgICA8RHJvcGRvd25NZW51UHJpbWl0aXZlLkl0ZW1JbmRpY2F0b3I+XHJcbiAgICAgICAgPENoZWNrIGNsYXNzTmFtZT1cImgtNCB3LTRcIiAvPlxyXG4gICAgICA8L0Ryb3Bkb3duTWVudVByaW1pdGl2ZS5JdGVtSW5kaWNhdG9yPlxyXG4gICAgPC9zcGFuPlxyXG4gICAge2NoaWxkcmVufVxyXG4gIDwvRHJvcGRvd25NZW51UHJpbWl0aXZlLkNoZWNrYm94SXRlbT5cclxuKSlcclxuRHJvcGRvd25NZW51Q2hlY2tib3hJdGVtLmRpc3BsYXlOYW1lID1cclxuICBEcm9wZG93bk1lbnVQcmltaXRpdmUuQ2hlY2tib3hJdGVtLmRpc3BsYXlOYW1lXHJcblxyXG5jb25zdCBEcm9wZG93bk1lbnVSYWRpb0l0ZW0gPSBSZWFjdC5mb3J3YXJkUmVmPFxyXG4gIFJlYWN0LkVsZW1lbnRSZWY8dHlwZW9mIERyb3Bkb3duTWVudVByaW1pdGl2ZS5SYWRpb0l0ZW0+LFxyXG4gIFJlYWN0LkNvbXBvbmVudFByb3BzV2l0aG91dFJlZjx0eXBlb2YgRHJvcGRvd25NZW51UHJpbWl0aXZlLlJhZGlvSXRlbT5cclxuPigoeyBjbGFzc05hbWUsIGNoaWxkcmVuLCAuLi5wcm9wcyB9LCByZWYpID0+IChcclxuICA8RHJvcGRvd25NZW51UHJpbWl0aXZlLlJhZGlvSXRlbVxyXG4gICAgcmVmPXtyZWZ9XHJcbiAgICBjbGFzc05hbWU9e2NuKFxyXG4gICAgICBcInJlbGF0aXZlIGZsZXggY3Vyc29yLWRlZmF1bHQgc2VsZWN0LW5vbmUgaXRlbXMtY2VudGVyIHJvdW5kZWQtc20gcHktMS41IHBsLTggcHItMiB0ZXh0LXNtIG91dGxpbmUtbm9uZSB0cmFuc2l0aW9uLWNvbG9ycyBmb2N1czpiZy1ncmF5LTEwMCBmb2N1czp0ZXh0LWdyYXktOTAwIGRhdGEtW2Rpc2FibGVkXTpwb2ludGVyLWV2ZW50cy1ub25lIGRhdGEtW2Rpc2FibGVkXTpvcGFjaXR5LTUwXCIsXHJcbiAgICAgIGNsYXNzTmFtZVxyXG4gICAgKX1cclxuICAgIHsuLi5wcm9wc31cclxuICA+XHJcbiAgICA8c3BhbiBjbGFzc05hbWU9XCJhYnNvbHV0ZSBsZWZ0LTIgZmxleCBoLTMuNSB3LTMuNSBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXJcIj5cclxuICAgICAgPERyb3Bkb3duTWVudVByaW1pdGl2ZS5JdGVtSW5kaWNhdG9yPlxyXG4gICAgICAgIDxDaXJjbGUgY2xhc3NOYW1lPVwiaC0yIHctMiBmaWxsLWN1cnJlbnRcIiAvPlxyXG4gICAgICA8L0Ryb3Bkb3duTWVudVByaW1pdGl2ZS5JdGVtSW5kaWNhdG9yPlxyXG4gICAgPC9zcGFuPlxyXG4gICAge2NoaWxkcmVufVxyXG4gIDwvRHJvcGRvd25NZW51UHJpbWl0aXZlLlJhZGlvSXRlbT5cclxuKSlcclxuRHJvcGRvd25NZW51UmFkaW9JdGVtLmRpc3BsYXlOYW1lID0gRHJvcGRvd25NZW51UHJpbWl0aXZlLlJhZGlvSXRlbS5kaXNwbGF5TmFtZVxyXG5cclxuY29uc3QgRHJvcGRvd25NZW51TGFiZWwgPSBSZWFjdC5mb3J3YXJkUmVmPFxyXG4gIFJlYWN0LkVsZW1lbnRSZWY8dHlwZW9mIERyb3Bkb3duTWVudVByaW1pdGl2ZS5MYWJlbD4sXHJcbiAgUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPHR5cGVvZiBEcm9wZG93bk1lbnVQcmltaXRpdmUuTGFiZWw+ICYge1xyXG4gICAgaW5zZXQ/OiBib29sZWFuXHJcbiAgfVxyXG4+KCh7IGNsYXNzTmFtZSwgaW5zZXQsIC4uLnByb3BzIH0sIHJlZikgPT4gKFxyXG4gIDxEcm9wZG93bk1lbnVQcmltaXRpdmUuTGFiZWxcclxuICAgIHJlZj17cmVmfVxyXG4gICAgY2xhc3NOYW1lPXtjbihcclxuICAgICAgXCJweC0yIHB5LTEuNSB0ZXh0LXNtIGZvbnQtc2VtaWJvbGRcIixcclxuICAgICAgaW5zZXQgJiYgXCJwbC04XCIsXHJcbiAgICAgIGNsYXNzTmFtZVxyXG4gICAgKX1cclxuICAgIHsuLi5wcm9wc31cclxuICAvPlxyXG4pKVxyXG5Ecm9wZG93bk1lbnVMYWJlbC5kaXNwbGF5TmFtZSA9IERyb3Bkb3duTWVudVByaW1pdGl2ZS5MYWJlbC5kaXNwbGF5TmFtZVxyXG5cclxuY29uc3QgRHJvcGRvd25NZW51U2VwYXJhdG9yID0gUmVhY3QuZm9yd2FyZFJlZjxcclxuICBSZWFjdC5FbGVtZW50UmVmPHR5cGVvZiBEcm9wZG93bk1lbnVQcmltaXRpdmUuU2VwYXJhdG9yPixcclxuICBSZWFjdC5Db21wb25lbnRQcm9wc1dpdGhvdXRSZWY8dHlwZW9mIERyb3Bkb3duTWVudVByaW1pdGl2ZS5TZXBhcmF0b3I+XHJcbj4oKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9LCByZWYpID0+IChcclxuICA8RHJvcGRvd25NZW51UHJpbWl0aXZlLlNlcGFyYXRvclxyXG4gICAgcmVmPXtyZWZ9XHJcbiAgICBjbGFzc05hbWU9e2NuKFwiLW14LTEgbXktMSBoLXB4IGJnLWdyYXktMjAwXCIsIGNsYXNzTmFtZSl9XHJcbiAgICB7Li4ucHJvcHN9XHJcbiAgLz5cclxuKSlcclxuRHJvcGRvd25NZW51U2VwYXJhdG9yLmRpc3BsYXlOYW1lID0gRHJvcGRvd25NZW51UHJpbWl0aXZlLlNlcGFyYXRvci5kaXNwbGF5TmFtZVxyXG5cclxuY29uc3QgRHJvcGRvd25NZW51U2hvcnRjdXQgPSAoe1xyXG4gIGNsYXNzTmFtZSxcclxuICAuLi5wcm9wc1xyXG59OiBSZWFjdC5IVE1MQXR0cmlidXRlczxIVE1MU3BhbkVsZW1lbnQ+KSA9PiB7XHJcbiAgcmV0dXJuIChcclxuICAgIDxzcGFuXHJcbiAgICAgIGNsYXNzTmFtZT17Y24oXCJtbC1hdXRvIHRleHQteHMgdHJhY2tpbmctd2lkZXN0IG9wYWNpdHktNjBcIiwgY2xhc3NOYW1lKX1cclxuICAgICAgey4uLnByb3BzfVxyXG4gICAgLz5cclxuICApXHJcbn1cclxuRHJvcGRvd25NZW51U2hvcnRjdXQuZGlzcGxheU5hbWUgPSBcIkRyb3Bkb3duTWVudVNob3J0Y3V0XCJcclxuXHJcbmV4cG9ydCB7XHJcbiAgRHJvcGRvd25NZW51LFxyXG4gIERyb3Bkb3duTWVudVRyaWdnZXIsXHJcbiAgRHJvcGRvd25NZW51Q29udGVudCxcclxuICBEcm9wZG93bk1lbnVJdGVtLFxyXG4gIERyb3Bkb3duTWVudUNoZWNrYm94SXRlbSxcclxuICBEcm9wZG93bk1lbnVSYWRpb0l0ZW0sXHJcbiAgRHJvcGRvd25NZW51TGFiZWwsXHJcbiAgRHJvcGRvd25NZW51U2VwYXJhdG9yLFxyXG4gIERyb3Bkb3duTWVudVNob3J0Y3V0LFxyXG4gIERyb3Bkb3duTWVudUdyb3VwLFxyXG4gIERyb3Bkb3duTWVudVBvcnRhbCxcclxuICBEcm9wZG93bk1lbnVTdWIsXHJcbiAgRHJvcGRvd25NZW51U3ViQ29udGVudCxcclxuICBEcm9wZG93bk1lbnVTdWJUcmlnZ2VyLFxyXG4gIERyb3Bkb3duTWVudVJhZGlvR3JvdXAsXHJcbn1cclxuIl0sIm5hbWVzIjpbIkRyb3Bkb3duTWVudSIsIkRyb3Bkb3duTWVudUNoZWNrYm94SXRlbSIsIkRyb3Bkb3duTWVudUNvbnRlbnQiLCJEcm9wZG93bk1lbnVHcm91cCIsIkRyb3Bkb3duTWVudUl0ZW0iLCJEcm9wZG93bk1lbnVMYWJlbCIsIkRyb3Bkb3duTWVudVBvcnRhbCIsIkRyb3Bkb3duTWVudVJhZGlvR3JvdXAiLCJEcm9wZG93bk1lbnVSYWRpb0l0ZW0iLCJEcm9wZG93bk1lbnVTZXBhcmF0b3IiLCJEcm9wZG93bk1lbnVTaG9ydGN1dCIsIkRyb3Bkb3duTWVudVN1YiIsIkRyb3Bkb3duTWVudVN1YkNvbnRlbnQiLCJEcm9wZG93bk1lbnVTdWJUcmlnZ2VyIiwiRHJvcGRvd25NZW51VHJpZ2dlciIsIkRyb3Bkb3duTWVudVByaW1pdGl2ZSIsIlJvb3QiLCJUcmlnZ2VyIiwiR3JvdXAiLCJQb3J0YWwiLCJTdWIiLCJSYWRpb0dyb3VwIiwiUmVhY3QiLCJmb3J3YXJkUmVmIiwiY2xhc3NOYW1lIiwiaW5zZXQiLCJjaGlsZHJlbiIsInByb3BzIiwicmVmIiwiU3ViVHJpZ2dlciIsImNuIiwiQ2hldnJvblJpZ2h0IiwiZGlzcGxheU5hbWUiLCJTdWJDb250ZW50Iiwic2lkZU9mZnNldCIsIkNvbnRlbnQiLCJJdGVtIiwiY2hlY2tlZCIsIkNoZWNrYm94SXRlbSIsInNwYW4iLCJJdGVtSW5kaWNhdG9yIiwiQ2hlY2siLCJSYWRpb0l0ZW0iLCJDaXJjbGUiLCJMYWJlbCIsIlNlcGFyYXRvciJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7OztRQXdMRUE7ZUFBQUE7O1FBSUFDO2VBQUFBOztRQUZBQztlQUFBQTs7UUFPQUM7ZUFBQUE7O1FBTkFDO2VBQUFBOztRQUdBQztlQUFBQTs7UUFJQUM7ZUFBQUE7O1FBSUFDO2VBQUFBOztRQVRBQztlQUFBQTs7UUFFQUM7ZUFBQUE7O1FBQ0FDO2VBQUFBOztRQUdBQztlQUFBQTs7UUFDQUM7ZUFBQUE7O1FBQ0FDO2VBQUFBOztRQVpBQztlQUFBQTs7OzsrREF2THFCOzJFQUNnQjs2QkFD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