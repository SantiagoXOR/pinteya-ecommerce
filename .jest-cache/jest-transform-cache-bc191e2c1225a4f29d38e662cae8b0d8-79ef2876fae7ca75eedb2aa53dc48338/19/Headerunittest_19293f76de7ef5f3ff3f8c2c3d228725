252df6cab6e0f18fb5578e2f311f6897
/**
 * Tests Unitarios - Header Principal
 * Pruebas enfocadas en el componente Header individual
 */ "use strict";
// Mock de Next.js
jest.mock('next/navigation', ()=>({
        useRouter: ()=>({
                push: jest.fn(),
                replace: jest.fn(),
                prefetch: jest.fn()
            }),
        useSearchParams: ()=>({
                get: jest.fn()
            })
    }));
// Mock de Clerk
jest.mock('@clerk/nextjs', ()=>({
        ClerkProvider: ({ children })=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                children: children
            }),
        SignedIn: ({ children })=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                "data-testid": "signed-in",
                children: children
            }),
        SignedOut: ({ children })=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                "data-testid": "signed-out",
                children: children
            }),
        UserButton: ()=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                "data-testid": "user-button",
                children: "UserButton"
            }),
        useUser: ()=>({
                isSignedIn: false,
                user: null,
                isLoaded: true
            })
    }));
// Mock de hooks personalizados
jest.mock('@/hooks/useGeolocation', ()=>({
        useGeolocation: ()=>({
                detectedZone: {
                    id: 'cordoba-capital',
                    name: 'Córdoba Capital'
                },
                requestLocation: jest.fn(),
                permissionStatus: 'granted',
                isLoading: false,
                error: null,
                location: null,
                testLocation: jest.fn(),
                deliveryZones: [
                    {
                        id: 'cordoba-capital',
                        name: 'Córdoba Capital'
                    }
                ]
            })
    }));
jest.mock('@/hooks/useCartAnimation', ()=>({
        useCartAnimation: ()=>({
                isAnimating: false
            })
    }));
// Mock de SearchAutocompleteIntegrated
jest.mock('@/components/ui/SearchAutocompleteIntegrated', ()=>({
        SearchAutocompleteIntegrated: ({ onSearch })=>/*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                "data-testid": "search-input",
                placeholder: "latex interior blanco 20lts",
                onChange: (e)=>onSearch(e.target.value)
            })
    }));
// Mock de OptimizedCartIcon
jest.mock('@/components/ui/optimized-cart-icon', ()=>({
        OptimizedCartIcon: ({ alt })=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                "data-testid": "cart-icon",
                "aria-label": alt,
                children: "Cart Icon"
            })
    }));
// Mock de HeaderLogo
jest.mock('@/components/ui/OptimizedLogo', ()=>({
        HeaderLogo: ()=>/*#__PURE__*/ (0, _jsxruntime.jsx)("img", {
                src: "/images/logo/LOGO POSITIVO.svg",
                alt: "Pinteya - Tu Pinturer\xeda Online",
                "data-testid": "header-logo"
            })
    }));
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_default(require("react"));
const _react1 = require("@testing-library/react");
const _reactredux = require("react-redux");
const _nextjs = require("@clerk/nextjs");
const _reactquery = require("@tanstack/react-query");
const _index = /*#__PURE__*/ _interop_require_default(require("../../index"));
const _store = require("../../../../redux/store");
const _CartSidebarModalContext = require("../../../../app/context/CartSidebarModalContext");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
// Wrapper de pruebas
const TestWrapper = ({ children })=>{
    const queryClient = new _reactquery.QueryClient({
        defaultOptions: {
            queries: {
                retry: false
            },
            mutations: {
                retry: false
            }
        }
    });
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactredux.Provider, {
        store: _store.store,
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactquery.QueryClientProvider, {
            client: queryClient,
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_nextjs.ClerkProvider, {
                publishableKey: "test-key",
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_CartSidebarModalContext.CartModalProvider, {
                    children: children
                })
            })
        })
    });
};
describe('Header - Tests Unitarios', ()=>{
    beforeEach(()=>{
        jest.clearAllMocks();
    });
    describe('Renderizado Básico', ()=>{
        it('debe renderizar el header con todos los elementos principales', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            // Verificar estructura principal
            expect(_react1.screen.getByRole('banner')).toBeInTheDocument();
            expect(_react1.screen.getByTestId('header-logo')).toBeInTheDocument();
            expect(_react1.screen.getByTestId('search-input')).toBeInTheDocument();
            expect(_react1.screen.getByTestId('cart-icon')).toBeInTheDocument();
        });
        it('debe tener las clases CSS correctas para el diseño', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            const header = _react1.screen.getByRole('banner');
            expect(header).toHaveClass('fixed', 'left-0', 'top-0', 'w-full', 'z-9999');
            expect(header).toHaveClass('bg-blaze-orange-600', 'rounded-b-3xl', 'shadow-lg');
        });
        it('debe renderizar el topbar con información de envíos', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            expect(_react1.screen.getByText(/Envíos en/)).toBeInTheDocument();
            expect(_react1.screen.getByText('Córdoba Capital')).toBeInTheDocument();
        });
    });
    describe('Logo y Navegación', ()=>{
        it('debe renderizar el logo con atributos correctos', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            const logo = _react1.screen.getByTestId('header-logo');
            expect(logo).toHaveAttribute('alt', 'Pinteya - Tu Pinturería Online');
            expect(logo).toHaveAttribute('src', '/images/logo/LOGO POSITIVO.svg');
        });
        it('debe tener un enlace al home en el logo', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            const logoLink = _react1.screen.getByTestId('header-logo').closest('a');
            expect(logoLink).toHaveAttribute('href', '/');
        });
    });
    describe('Sistema de Búsqueda', ()=>{
        it('debe renderizar el campo de búsqueda con placeholder correcto', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            const searchInput = _react1.screen.getByTestId('search-input');
            expect(searchInput).toHaveAttribute('placeholder', 'latex interior blanco 20lts');
        });
        it('debe manejar cambios en el input de búsqueda', async ()=>{
            const mockOnSearch = jest.fn();
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            const searchInput = _react1.screen.getByTestId('search-input');
            _react1.fireEvent.change(searchInput, {
                target: {
                    value: 'pintura blanca'
                }
            });
            await (0, _react1.waitFor)(()=>{
                expect(searchInput).toHaveValue('pintura blanca');
            });
        });
    });
    describe('Carrito de Compras', ()=>{
        it('debe renderizar el botón de carrito', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            const cartButton = _react1.screen.getByTestId('cart-icon');
            expect(cartButton).toBeInTheDocument();
        });
        it('debe tener las clases CSS correctas para el botón de carrito', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            const cartButton = _react1.screen.getByTestId('cart-icon').closest('button');
            expect(cartButton).toHaveClass('bg-yellow-400', 'hover:bg-yellow-500');
            expect(cartButton).toHaveClass('rounded-full', 'shadow-lg');
        });
        it('debe ser clickeable', ()=>{
            const mockOpenCartModal = jest.fn();
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            const cartButton = _react1.screen.getByTestId('cart-icon').closest('button');
            _react1.fireEvent.click(cartButton);
            // Verificar que el botón es clickeable (no debe lanzar error)
            expect(cartButton).toBeInTheDocument();
        });
    });
    describe('Geolocalización', ()=>{
        it('debe mostrar la zona detectada', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            expect(_react1.screen.getByText('Córdoba Capital')).toBeInTheDocument();
        });
        it('debe mostrar el icono de ubicación', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            // Buscar por el texto que acompaña al icono
            expect(_react1.screen.getByText(/Envíos en/)).toBeInTheDocument();
        });
    });
    describe('Autenticación', ()=>{
        it('debe renderizar el componente de autenticación', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            // Verificar que se renderiza el estado SignedOut por defecto
            expect(_react1.screen.getByTestId('signed-out')).toBeInTheDocument();
        });
    });
    describe('Responsive Design', ()=>{
        it('debe ocultar elementos específicos en mobile', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            const cartButton = _react1.screen.getByTestId('cart-icon').closest('button');
            expect(cartButton).toHaveClass('hidden', 'sm:flex');
        });
    });
    describe('Estados de Carga', ()=>{
        it('debe manejar el estado de carga de geolocalización', ()=>{
            // Mock del hook con estado de carga
            jest.mocked(require('@/hooks/useGeolocation').useGeolocation).mockReturnValue({
                detectedZone: null,
                requestLocation: jest.fn(),
                permissionStatus: 'prompt',
                isLoading: true,
                error: null,
                location: null,
                testLocation: jest.fn(),
                deliveryZones: []
            });
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            expect(_react1.screen.getByText('Detectando...')).toBeInTheDocument();
        });
    });
});

//# sourceMappingURL=data:application/json;base64,