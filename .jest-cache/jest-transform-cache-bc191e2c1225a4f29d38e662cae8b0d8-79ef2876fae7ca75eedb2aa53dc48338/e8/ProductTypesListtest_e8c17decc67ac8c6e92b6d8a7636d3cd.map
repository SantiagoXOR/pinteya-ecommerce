{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\__tests__\\components\\ProductTypesList.test.tsx"],"sourcesContent":["// ===================================\n// PINTEYA E-COMMERCE - TESTS PARA PRODUCT TYPES LIST\n// ===================================\n\nimport React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport ProductTypesList from '@/components/ShopWithSidebar/ProductTypesList';\nimport { PRODUCT_CATEGORIES } from '@/constants/shop';\n\nconst mockOnCategorySelect = jest.fn();\n\nconst defaultProps = {\n  onCategorySelect: mockOnCategorySelect,\n  selectedCategory: '',\n};\n\nbeforeEach(() => {\n  mockOnCategorySelect.mockClear();\n});\n\ndescribe('ProductTypesList', () => {\n  it('should render component title', () => {\n    render(<ProductTypesList {...defaultProps} />);\n    \n    expect(screen.getByText('Tipos de Productos')).toBeInTheDocument();\n  });\n\n  it('should render all product categories', () => {\n    render(<ProductTypesList {...defaultProps} />);\n    \n    Object.values(PRODUCT_CATEGORIES).forEach(category => {\n      expect(screen.getByText(category.name)).toBeInTheDocument();\n    });\n  });\n\n  it('should render category buttons', () => {\n    render(<ProductTypesList {...defaultProps} />);\n    \n    const buttons = screen.getAllByRole('button');\n    expect(buttons).toHaveLength(Object.keys(PRODUCT_CATEGORIES).length);\n  });\n\n  it('should call onCategorySelect when category is clicked', () => {\n    render(<ProductTypesList {...defaultProps} />);\n    \n    const pinturaButton = screen.getByText('Pinturas');\n    fireEvent.click(pinturaButton);\n    \n    expect(mockOnCategorySelect).toHaveBeenCalledWith('pinturas');\n  });\n\n  it('should highlight selected category', () => {\n    const propsWithSelected = {\n      ...defaultProps,\n      selectedCategory: 'pinturas',\n    };\n    \n    render(<ProductTypesList {...propsWithSelected} />);\n    \n    const pinturaButton = screen.getByText('Pinturas').closest('button');\n    expect(pinturaButton).toHaveClass('bg-primary', 'text-white');\n  });\n\n  it('should not highlight unselected categories', () => {\n    const propsWithSelected = {\n      ...defaultProps,\n      selectedCategory: 'pinturas',\n    };\n    \n    render(<ProductTypesList {...propsWithSelected} />);\n    \n    const herramientasButton = screen.getByText('Herramientas').closest('button');\n    expect(herramientasButton).not.toHaveClass('bg-primary', 'text-white');\n    expect(herramientasButton).toHaveClass('hover:bg-gray-100');\n  });\n\n  it('should show category descriptions in title attribute', () => {\n    render(<ProductTypesList {...defaultProps} />);\n    \n    Object.values(PRODUCT_CATEGORIES).forEach(category => {\n      const button = screen.getByText(category.name).closest('button');\n      expect(button).toHaveAttribute('title', category.description);\n    });\n  });\n\n  it('should handle multiple category selections', () => {\n    render(<ProductTypesList {...defaultProps} />);\n    \n    const pinturaButton = screen.getByText('Pinturas');\n    const herramientasButton = screen.getByText('Herramientas');\n    \n    fireEvent.click(pinturaButton);\n    expect(mockOnCategorySelect).toHaveBeenCalledWith('pinturas');\n    \n    fireEvent.click(herramientasButton);\n    expect(mockOnCategorySelect).toHaveBeenCalledWith('herramientas');\n    \n    expect(mockOnCategorySelect).toHaveBeenCalledTimes(2);\n  });\n\n  it('should render with proper accessibility attributes', () => {\n    render(<ProductTypesList {...defaultProps} />);\n    \n    const buttons = screen.getAllByRole('button');\n    buttons.forEach(button => {\n      expect(button).toBeInTheDocument();\n      expect(button).toHaveAttribute('title');\n    });\n  });\n\n  it('should handle empty selected category', () => {\n    const propsWithEmpty = {\n      ...defaultProps,\n      selectedCategory: '',\n    };\n    \n    render(<ProductTypesList {...propsWithEmpty} />);\n    \n    const buttons = screen.getAllByRole('button');\n    buttons.forEach(button => {\n      expect(button).not.toHaveClass('bg-primary', 'text-white');\n    });\n  });\n\n  it('should handle invalid selected category', () => {\n    const propsWithInvalid = {\n      ...defaultProps,\n      selectedCategory: 'invalid-category',\n    };\n    \n    render(<ProductTypesList {...propsWithInvalid} />);\n    \n    const buttons = screen.getAllByRole('button');\n    buttons.forEach(button => {\n      expect(button).not.toHaveClass('bg-primary', 'text-white');\n    });\n  });\n\n  it('should maintain consistent styling', () => {\n    render(<ProductTypesList {...defaultProps} />);\n    \n    const container = screen.getByText('Tipos de Productos').closest('div');\n    expect(container).toHaveClass('mb-7.5');\n    \n    const title = screen.getByText('Tipos de Productos');\n    expect(title).toHaveClass('font-medium', 'text-dark', 'text-lg', 'mb-4');\n    \n    const list = screen.getByRole('list', { hidden: true });\n    expect(list).toHaveClass('space-y-2');\n  });\n});\n"],"names":["mockOnCategorySelect","jest","fn","defaultProps","onCategorySelect","selectedCategory","beforeEach","mockClear","describe","it","render","ProductTypesList","expect","screen","getByText","toBeInTheDocument","Object","values","PRODUCT_CATEGORIES","forEach","category","name","buttons","getAllByRole","toHaveLength","keys","length","pinturaButton","fireEvent","click","toHaveBeenCalledWith","propsWithSelected","closest","toHaveClass","herramientasButton","not","button","toHaveAttribute","description","toHaveBeenCalledTimes","propsWithEmpty","propsWithInvalid","container","title","list","getByRole","hidden"],"mappings":"AAAA,sCAAsC;AACtC,qDAAqD;AACrD,sCAAsC;;;;;;8DAEpB;wBACwB;yEACb;sBACM;;;;;;AAEnC,MAAMA,uBAAuBC,KAAKC,EAAE;AAEpC,MAAMC,eAAe;IACnBC,kBAAkBJ;IAClBK,kBAAkB;AACpB;AAEAC,WAAW;IACTN,qBAAqBO,SAAS;AAChC;AAEAC,SAAS,oBAAoB;IAC3BC,GAAG,iCAAiC;QAClCC,IAAAA,cAAM,gBAAC,qBAACC,yBAAgB;YAAE,GAAGR,YAAY;;QAEzCS,OAAOC,cAAM,CAACC,SAAS,CAAC,uBAAuBC,iBAAiB;IAClE;IAEAN,GAAG,wCAAwC;QACzCC,IAAAA,cAAM,gBAAC,qBAACC,yBAAgB;YAAE,GAAGR,YAAY;;QAEzCa,OAAOC,MAAM,CAACC,wBAAkB,EAAEC,OAAO,CAACC,CAAAA;YACxCR,OAAOC,cAAM,CAACC,SAAS,CAACM,SAASC,IAAI,GAAGN,iBAAiB;QAC3D;IACF;IAEAN,GAAG,kCAAkC;QACnCC,IAAAA,cAAM,gBAAC,qBAACC,yBAAgB;YAAE,GAAGR,YAAY;;QAEzC,MAAMmB,UAAUT,cAAM,CAACU,YAAY,CAAC;QACpCX,OAAOU,SAASE,YAAY,CAACR,OAAOS,IAAI,CAACP,wBAAkB,EAAEQ,MAAM;IACrE;IAEAjB,GAAG,yDAAyD;QAC1DC,IAAAA,cAAM,gBAAC,qBAACC,yBAAgB;YAAE,GAAGR,YAAY;;QAEzC,MAAMwB,gBAAgBd,cAAM,CAACC,SAAS,CAAC;QACvCc,iBAAS,CAACC,KAAK,CAACF;QAEhBf,OAAOZ,sBAAsB8B,oBAAoB,CAAC;IACpD;IAEArB,GAAG,sCAAsC;QACvC,MAAMsB,oBAAoB;YACxB,GAAG5B,YAAY;YACfE,kBAAkB;QACpB;QAEAK,IAAAA,cAAM,gBAAC,qBAACC,yBAAgB;YAAE,GAAGoB,iBAAiB;;QAE9C,MAAMJ,gBAAgBd,cAAM,CAACC,SAAS,CAAC,YAAYkB,OAAO,CAAC;QAC3DpB,OAAOe,eAAeM,WAAW,CAAC,cAAc;IAClD;IAEAxB,GAAG,8CAA8C;QAC/C,MAAMsB,oBAAoB;YACxB,GAAG5B,YAAY;YACfE,kBAAkB;QACpB;QAEAK,IAAAA,cAAM,gBAAC,qBAACC,yBAAgB;YAAE,GAAGoB,iBAAiB;;QAE9C,MAAMG,qBAAqBrB,cAAM,CAACC,SAAS,CAAC,gBAAgBkB,OAAO,CAAC;QACpEpB,OAAOsB,oBAAoBC,GAAG,CAACF,WAAW,CAAC,cAAc;QACzDrB,OAAOsB,oBAAoBD,WAAW,CAAC;IACzC;IAEAxB,GAAG,wDAAwD;QACzDC,IAAAA,cAAM,gBAAC,qBAACC,yBAAgB;YAAE,GAAGR,YAAY;;QAEzCa,OAAOC,MAAM,CAACC,wBAAkB,EAAEC,OAAO,CAACC,CAAAA;YACxC,MAAMgB,SAASvB,cAAM,CAACC,SAAS,CAACM,SAASC,IAAI,EAAEW,OAAO,CAAC;YACvDpB,OAAOwB,QAAQC,eAAe,CAAC,SAASjB,SAASkB,WAAW;QAC9D;IACF;IAEA7B,GAAG,8CAA8C;QAC/CC,IAAAA,cAAM,gBAAC,qBAACC,yBAAgB;YAAE,GAAGR,YAAY;;QAEzC,MAAMwB,gBAAgBd,cAAM,CAACC,SAAS,CAAC;QACvC,MAAMoB,qBAAqBrB,cAAM,CAACC,SAAS,CAAC;QAE5Cc,iBAAS,CAACC,KAAK,CAACF;QAChBf,OAAOZ,sBAAsB8B,oBAAoB,CAAC;QAElDF,iBAAS,CAACC,KAAK,CAACK;QAChBtB,OAAOZ,sBAAsB8B,oBAAoB,CAAC;QAElDlB,OAAOZ,sBAAsBuC,qBAAqB,CAAC;IACrD;IAEA9B,GAAG,sDAAsD;QACvDC,IAAAA,cAAM,gBAAC,qBAACC,yBAAgB;YAAE,GAAGR,YAAY;;QAEzC,MAAMmB,UAAUT,cAAM,CAACU,YAAY,CAAC;QACpCD,QAAQH,OAAO,CAACiB,CAAAA;YACdxB,OAAOwB,QAAQrB,iBAAiB;YAChCH,OAAOwB,QAAQC,eAAe,CAAC;QACjC;IACF;IAEA5B,GAAG,yCAAyC;QAC1C,MAAM+B,iBAAiB;YACrB,GAAGrC,YAAY;YACfE,kBAAkB;QACpB;QAEAK,IAAAA,cAAM,gBAAC,qBAACC,yBAAgB;YAAE,GAAG6B,cAAc;;QAE3C,MAAMlB,UAAUT,cAAM,CAACU,YAAY,CAAC;QACpCD,QAAQH,OAAO,CAACiB,CAAAA;YACdxB,OAAOwB,QAAQD,GAAG,CAACF,WAAW,CAAC,cAAc;QAC/C;IACF;IAEAxB,GAAG,2CAA2C;QAC5C,MAAMgC,mBAAmB;YACvB,GAAGtC,YAAY;YACfE,kBAAkB;QACpB;QAEAK,IAAAA,cAAM,gBAAC,qBAACC,yBAAgB;YAAE,GAAG8B,gBAAgB;;QAE7C,MAAMnB,UAAUT,cAAM,CAACU,YAAY,CAAC;QACpCD,QAAQH,OAAO,CAACiB,CAAAA;YACdxB,OAAOwB,QAAQD,GAAG,CAACF,WAAW,CAAC,cAAc;QAC/C;IACF;IAEAxB,GAAG,sCAAsC;QACvCC,IAAAA,cAAM,gBAAC,qBAACC,yBAAgB;YAAE,GAAGR,YAAY;;QAEzC,MAAMuC,YAAY7B,cAAM,CAACC,SAAS,CAAC,sBAAsBkB,OAAO,CAAC;QACjEpB,OAAO8B,WAAWT,WAAW,CAAC;QAE9B,MAAMU,QAAQ9B,cAAM,CAACC,SAAS,CAAC;QAC/BF,OAAO+B,OAAOV,WAAW,CAAC,eAAe,aAAa,WAAW;QAEjE,MAAMW,OAAO/B,cAAM,CAACgC,SAAS,CAAC,QAAQ;YAAEC,QAAQ;QAAK;QACrDlC,OAAOgC,MAAMX,WAAW,CAAC;IAC3B;AACF"}