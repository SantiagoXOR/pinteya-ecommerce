{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useCheckout.ts"],"sourcesContent":["// ===================================\r\n// PINTEYA E-COMMERCE - CHECKOUT HOOK\r\n// ===================================\r\n\r\nimport { useState, useCallback, useEffect } from 'react';\r\nimport { useAppSelector, useAppDispatch } from '@/redux/store';\r\nimport { selectCartItems, selectTotalPrice, removeAllItemsFromCart } from '@/redux/features/cart-slice';\r\nimport { CheckoutFormData, CheckoutState, CreatePreferencePayload, PaymentPreferenceResponse } from '@/types/checkout';\r\nimport { ApiResponse } from '@/types/api';\r\nimport { useUser } from '@clerk/nextjs';\r\n\r\nconst initialFormData: CheckoutFormData = {\r\n  billing: {\r\n    firstName: '',\r\n    lastName: '',\r\n    companyName: '',\r\n    country: 'Argentina',\r\n    streetAddress: '',\r\n    apartment: '',\r\n    city: '',\r\n    state: '',\r\n    zipCode: '',\r\n    phone: '',\r\n    email: '',\r\n    orderNotes: '',\r\n  },\r\n  shipping: {\r\n    differentAddress: false,\r\n  },\r\n  paymentMethod: 'mercadopago',\r\n  shippingMethod: 'free',\r\n  couponCode: '',\r\n};\r\n\r\nexport const useCheckout = () => {\r\n  const dispatch = useAppDispatch();\r\n  const cartItems = useAppSelector(selectCartItems);\r\n  const totalPrice = useAppSelector(selectTotalPrice);\r\n  const { user, isLoaded } = useUser();\r\n\r\n  const [checkoutState, setCheckoutState] = useState<CheckoutState>({\r\n    formData: initialFormData,\r\n    isLoading: false,\r\n    errors: {},\r\n    step: 'form',\r\n    preferenceId: undefined,\r\n    initPoint: undefined,\r\n  });\r\n\r\n  // ===================================\r\n  // AUTO-COMPLETAR DATOS DEL USUARIO AUTENTICADO\r\n  // ===================================\r\n  useEffect(() => {\r\n    if (isLoaded && user) {\r\n      const userEmail = user.emailAddresses[0]?.emailAddress || '';\r\n      const firstName = user.firstName || '';\r\n      const lastName = user.lastName || '';\r\n      const fullName = user.fullName || `${firstName} ${lastName}`.trim();\r\n\r\n      // Auto-completar datos de facturación con información de Clerk\r\n      setCheckoutState(prev => ({\r\n        ...prev,\r\n        formData: {\r\n          ...prev.formData,\r\n          billing: {\r\n            ...prev.formData.billing,\r\n            firstName: firstName || prev.formData.billing.firstName,\r\n            lastName: lastName || prev.formData.billing.lastName,\r\n            email: userEmail || prev.formData.billing.email,\r\n          },\r\n        },\r\n      }));\r\n    }\r\n  }, [isLoaded, user]);\r\n\r\n  // Estado para cupones\r\n  const [appliedCoupon, setAppliedCoupon] = useState<{\r\n    code: string;\r\n    discount: number;\r\n    type: 'percentage' | 'fixed';\r\n  } | null>(null);\r\n\r\n  // Actualizar datos del formulario\r\n  const updateFormData = useCallback((updates: Partial<CheckoutFormData>) => {\r\n    setCheckoutState(prev => ({\r\n      ...prev,\r\n      formData: { ...prev.formData, ...updates },\r\n      errors: {}, // Limpiar errores al actualizar\r\n    }));\r\n  }, []);\r\n\r\n  // Actualizar datos de facturación\r\n  const updateBillingData = useCallback((billingData: Partial<CheckoutFormData['billing']>) => {\r\n    setCheckoutState(prev => ({\r\n      ...prev,\r\n      formData: {\r\n        ...prev.formData,\r\n        billing: { ...prev.formData.billing, ...billingData },\r\n      },\r\n      errors: {},\r\n    }));\r\n  }, []);\r\n\r\n  // Actualizar datos de envío\r\n  const updateShippingData = useCallback((shippingData: Partial<CheckoutFormData['shipping']>) => {\r\n    setCheckoutState(prev => ({\r\n      ...prev,\r\n      formData: {\r\n        ...prev.formData,\r\n        shipping: { ...prev.formData.shipping, ...shippingData },\r\n      },\r\n      errors: {},\r\n    }));\r\n  }, []);\r\n\r\n  // Validar formulario\r\n  const validateForm = useCallback((): boolean => {\r\n    const errors: Record<string, string> = {};\r\n    const { billing, shipping } = checkoutState.formData;\r\n\r\n    // Validaciones de facturación\r\n    if (!billing.firstName.trim()) errors.firstName = 'Nombre es requerido';\r\n    if (!billing.lastName.trim()) errors.lastName = 'Apellido es requerido';\r\n    if (!billing.email.trim()) errors.email = 'Email es requerido';\r\n    if (!billing.phone.trim()) errors.phone = 'Teléfono es requerido';\r\n    if (!billing.streetAddress.trim()) errors.streetAddress = 'Dirección es requerida';\r\n    if (!billing.city.trim()) errors.city = 'Ciudad es requerida';\r\n    if (!billing.state.trim()) errors.state = 'Provincia es requerida';\r\n    if (!billing.zipCode.trim()) errors.zipCode = 'Código postal es requerido';\r\n\r\n    // Validar email\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (billing.email && !emailRegex.test(billing.email)) {\r\n      errors.email = 'Email inválido';\r\n    }\r\n\r\n    // Validaciones de envío si es diferente\r\n    if (shipping.differentAddress) {\r\n      if (!shipping.firstName?.trim()) errors.shippingFirstName = 'Nombre de envío es requerido';\r\n      if (!shipping.lastName?.trim()) errors.shippingLastName = 'Apellido de envío es requerido';\r\n      if (!shipping.streetAddress?.trim()) errors.shippingStreetAddress = 'Dirección de envío es requerida';\r\n      if (!shipping.city?.trim()) errors.shippingCity = 'Ciudad de envío es requerida';\r\n      if (!shipping.state?.trim()) errors.shippingState = 'Provincia de envío es requerida';\r\n      if (!shipping.zipCode?.trim()) errors.shippingZipCode = 'Código postal de envío es requerido';\r\n    }\r\n\r\n    // Validar que hay items en el carrito\r\n    if (cartItems.length === 0) {\r\n      errors.cart = 'El carrito está vacío';\r\n    }\r\n\r\n    setCheckoutState(prev => ({ ...prev, errors }));\r\n    return Object.keys(errors).length === 0;\r\n  }, [checkoutState.formData, cartItems.length]);\r\n\r\n  // Manejar cupones\r\n  const applyCoupon = useCallback((couponCode: string, discount: number) => {\r\n    if (couponCode && discount > 0) {\r\n      // Determinar tipo de descuento basado en el valor\r\n      const type = discount <= 100 ? 'percentage' : 'fixed';\r\n      setAppliedCoupon({ code: couponCode, discount, type });\r\n    } else {\r\n      setAppliedCoupon(null);\r\n    }\r\n  }, []);\r\n\r\n  // Calcular descuento\r\n  const calculateDiscount = useCallback((): number => {\r\n    if (!appliedCoupon) return 0;\r\n\r\n    const price = Number(totalPrice);\r\n    if (isNaN(price)) return 0;\r\n\r\n    if (appliedCoupon.type === 'fixed') {\r\n      return appliedCoupon.discount;\r\n    } else {\r\n      return Math.round(price * (appliedCoupon.discount / 100));\r\n    }\r\n  }, [appliedCoupon, totalPrice]);\r\n\r\n  // Calcular costos\r\n  const calculateShippingCost = useCallback((): number => {\r\n    const { shippingMethod } = checkoutState.formData;\r\n    let shippingCost = 0;\r\n    const price = Number(totalPrice);\r\n\r\n    if (isNaN(price)) return 0;\r\n\r\n    switch (shippingMethod) {\r\n      case 'express':\r\n        shippingCost = 2500; // $25 ARS\r\n        break;\r\n      case 'pickup':\r\n        shippingCost = 0;\r\n        break;\r\n      case 'free':\r\n      default:\r\n        shippingCost = price > 50000 ? 0 : 1500; // Envío gratis por compras > $500 ARS\r\n        break;\r\n    }\r\n\r\n    // Si el cupón es de envío gratis, aplicar descuento\r\n    if (appliedCoupon?.code === 'ENVIOGRATIS') {\r\n      shippingCost = 0;\r\n    }\r\n\r\n    return shippingCost;\r\n  }, [checkoutState.formData, totalPrice, appliedCoupon]);\r\n\r\n  const calculateTotal = useCallback((): number => {\r\n    const price = Number(totalPrice);\r\n    if (isNaN(price)) return 0;\r\n\r\n    const shipping = calculateShippingCost();\r\n    const discount = calculateDiscount();\r\n\r\n    return Math.max(0, price + shipping - discount);\r\n  }, [totalPrice, calculateShippingCost, calculateDiscount]);\r\n\r\n  // Procesar checkout\r\n  const processCheckout = useCallback(async (): Promise<void> => {\r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    setCheckoutState(prev => ({ ...prev, isLoading: true, step: 'processing' }));\r\n\r\n    try {\r\n      const { billing, shipping } = checkoutState.formData;\r\n      const shippingCost = calculateShippingCost();\r\n\r\n      // Preparar datos para la API\r\n      const payload: CreatePreferencePayload = {\r\n        items: cartItems.map((item: any) => ({\r\n          id: item.id.toString(),\r\n          name: item.title,\r\n          price: item.discountedPrice,\r\n          quantity: item.quantity,\r\n          image: item.imgs?.previews?.[0] || '',\r\n        })),\r\n        payer: {\r\n          name: billing.firstName,\r\n          surname: billing.lastName,\r\n          email: billing.email,\r\n          phone: billing.phone,\r\n        },\r\n        shipping: shippingCost > 0 ? {\r\n          cost: shippingCost,\r\n          address: {\r\n            street_name: shipping.differentAddress ? shipping.streetAddress! : billing.streetAddress,\r\n            street_number: \"123\", // Número por defecto como string\r\n            zip_code: shipping.differentAddress ? shipping.zipCode! : billing.zipCode,\r\n            city_name: shipping.differentAddress ? shipping.city! : billing.city,\r\n            state_name: shipping.differentAddress ? shipping.state! : billing.state,\r\n          },\r\n        } : undefined,\r\n        external_reference: `checkout_${Date.now()}`,\r\n      };\r\n\r\n      // Llamar a la API\r\n      const response = await fetch('/api/payments/create-preference', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(payload),\r\n      });\r\n\r\n      const result: ApiResponse<PaymentPreferenceResponse> = await response.json();\r\n\r\n      if (!result.success) {\r\n        throw new Error(result.error || 'Error procesando el pago');\r\n      }\r\n\r\n      // Limpiar carrito\r\n      dispatch(removeAllItemsFromCart());\r\n\r\n      // ✅ MEJORADO: Usar Wallet Brick en lugar de redirección directa\r\n      setCheckoutState(prev => ({\r\n        ...prev,\r\n        step: 'payment',\r\n        preferenceId: result.data.preference_id,\r\n        initPoint: result.data.init_point\r\n      }));\r\n\r\n    } catch (error: any) {\r\n      console.error('Error en checkout:', error);\r\n      setCheckoutState(prev => ({\r\n        ...prev,\r\n        isLoading: false,\r\n        step: 'form',\r\n        errors: { general: error.message || 'Error procesando el pago' },\r\n      }));\r\n    }\r\n  }, [checkoutState.formData, cartItems, validateForm, calculateShippingCost, dispatch]);\r\n\r\n  // ===================================\r\n  // CALLBACKS PARA WALLET BRICK\r\n  // ===================================\r\n  const handleWalletReady = useCallback(() => {\r\n    console.log('Wallet Brick cargado correctamente');\r\n  }, []);\r\n\r\n  const handleWalletError = useCallback((error: any) => {\r\n    console.error('Error en Wallet Brick:', error);\r\n    setCheckoutState(prev => ({\r\n      ...prev,\r\n      errors: { payment: error.message || 'Error en el sistema de pagos' },\r\n      isLoading: false,\r\n    }));\r\n  }, []);\r\n\r\n  const handleWalletSubmit = useCallback((data: any) => {\r\n    console.log('Pago enviado desde Wallet Brick:', data);\r\n    setCheckoutState(prev => ({ ...prev, step: 'redirect' }));\r\n  }, []);\r\n\r\n  return {\r\n    // Estado\r\n    formData: checkoutState.formData,\r\n    isLoading: checkoutState.isLoading,\r\n    errors: checkoutState.errors,\r\n    step: checkoutState.step,\r\n\r\n    // ✅ NUEVO: Datos para Wallet Brick\r\n    preferenceId: checkoutState.preferenceId,\r\n    initPoint: checkoutState.initPoint,\r\n\r\n    // Datos calculados\r\n    cartItems,\r\n    totalPrice,\r\n    shippingCost: calculateShippingCost(),\r\n    discount: calculateDiscount(),\r\n    finalTotal: calculateTotal(),\r\n\r\n    // Cupones\r\n    appliedCoupon,\r\n    applyCoupon,\r\n\r\n    // Acciones\r\n    updateFormData,\r\n    updateBillingData,\r\n    updateShippingData,\r\n    validateForm,\r\n    processCheckout,\r\n\r\n    // ✅ NUEVO: Callbacks para Wallet Brick\r\n    handleWalletReady,\r\n    handleWalletError,\r\n    handleWalletSubmit,\r\n  };\r\n};\r\n"],"names":["useCheckout","initialFormData","billing","firstName","lastName","companyName","country","streetAddress","apartment","city","state","zipCode","phone","email","orderNotes","shipping","differentAddress","paymentMethod","shippingMethod","couponCode","dispatch","useAppDispatch","cartItems","useAppSelector","selectCartItems","totalPrice","selectTotalPrice","user","isLoaded","useUser","checkoutState","setCheckoutState","useState","formData","isLoading","errors","step","preferenceId","undefined","initPoint","useEffect","userEmail","emailAddresses","emailAddress","fullName","trim","prev","appliedCoupon","setAppliedCoupon","updateFormData","useCallback","updates","updateBillingData","billingData","updateShippingData","shippingData","validateForm","emailRegex","test","shippingFirstName","shippingLastName","shippingStreetAddress","shippingCity","shippingState","shippingZipCode","length","cart","Object","keys","applyCoupon","discount","type","code","calculateDiscount","price","Number","isNaN","Math","round","calculateShippingCost","shippingCost","calculateTotal","max","processCheckout","payload","items","map","item","id","toString","name","title","discountedPrice","quantity","image","imgs","previews","payer","surname","cost","address","street_name","street_number","zip_code","city_name","state_name","external_reference","Date","now","response","fetch","method","headers","body","JSON","stringify","result","json","success","Error","error","removeAllItemsFromCart","data","preference_id","init_point","console","general","message","handleWalletReady","log","handleWalletError","payment","handleWalletSubmit","finalTotal"],"mappings":"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"}