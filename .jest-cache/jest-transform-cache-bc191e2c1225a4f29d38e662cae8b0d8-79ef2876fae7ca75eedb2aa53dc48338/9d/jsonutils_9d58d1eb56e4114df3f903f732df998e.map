{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\json-utils.ts"],"sourcesContent":["/**\n * Utilidades para manejo seguro de JSON\n * Previene errores de parsing con datos corruptos o malformados\n */\n\nexport interface SafeJsonResult<T> {\n  success: boolean;\n  data: T | null;\n  error?: string;\n}\n\n/**\n * Parsea JSON de forma segura, manejando casos edge y datos corruptos\n */\nexport function safeJsonParse<T = any>(jsonString: string | null | undefined): SafeJsonResult<T> {\n  // Validaciones b√°sicas\n  if (!jsonString) {\n    return {\n      success: false,\n      data: null,\n      error: 'JSON string is null or undefined'\n    };\n  }\n\n  // Limpiar string\n  const trimmed = jsonString.trim();\n  \n  // Detectar casos problem√°ticos\n  if (trimmed === '' || trimmed === '\"\"' || trimmed === \"''\" || trimmed === 'null' || trimmed === 'undefined') {\n    return {\n      success: false,\n      data: null,\n      error: 'JSON string is empty or invalid'\n    };\n  }\n\n  // Detectar comillas dobles corruptas\n  if (trimmed.includes('\"\"') && trimmed.length < 5) {\n    return {\n      success: false,\n      data: null,\n      error: 'Detected corrupted JSON with empty quotes'\n    };\n  }\n\n  // Intentar parsear\n  try {\n    const parsed = JSON.parse(trimmed);\n    return {\n      success: true,\n      data: parsed,\n      error: undefined\n    };\n  } catch (error) {\n    return {\n      success: false,\n      data: null,\n      error: error instanceof Error ? error.message : 'Unknown JSON parse error'\n    };\n  }\n}\n\n/**\n * Stringify JSON de forma segura, manejando objetos circulares\n */\nexport function safeJsonStringify(data: any, space?: number): SafeJsonResult<string> {\n  try {\n    const result = JSON.stringify(data, null, space);\n    return {\n      success: true,\n      data: result,\n      error: undefined\n    };\n  } catch (error) {\n    // Intentar con replacer para objetos circulares\n    try {\n      const seen = new WeakSet();\n      const result = JSON.stringify(data, (key, value) => {\n        if (typeof value === 'object' && value !== null) {\n          if (seen.has(value)) {\n            return '[Circular Reference]';\n          }\n          seen.add(value);\n        }\n        return value;\n      }, space);\n      \n      return {\n        success: true,\n        data: result,\n        error: undefined\n      };\n    } catch (fallbackError) {\n      return {\n        success: false,\n        data: null,\n        error: fallbackError instanceof Error ? fallbackError.message : 'Unknown JSON stringify error'\n      };\n    }\n  }\n}\n\n/**\n * Carga datos de localStorage de forma segura\n */\nexport function safeLocalStorageGet<T = any>(key: string): SafeJsonResult<T> {\n  if (typeof window === 'undefined') {\n    return {\n      success: false,\n      data: null,\n      error: 'localStorage not available (SSR)'\n    };\n  }\n\n  try {\n    const stored = localStorage.getItem(key);\n    if (!stored) {\n      return {\n        success: false,\n        data: null,\n        error: 'No data found in localStorage'\n      };\n    }\n\n    return safeJsonParse<T>(stored);\n  } catch (error) {\n    return {\n      success: false,\n      data: null,\n      error: error instanceof Error ? error.message : 'localStorage access error'\n    };\n  }\n}\n\n/**\n * Guarda datos en localStorage de forma segura\n */\nexport function safeLocalStorageSet(key: string, data: any): SafeJsonResult<boolean> {\n  if (typeof window === 'undefined') {\n    return {\n      success: false,\n      data: false,\n      error: 'localStorage not available (SSR)'\n    };\n  }\n\n  try {\n    const stringifyResult = safeJsonStringify(data);\n    if (!stringifyResult.success) {\n      return {\n        success: false,\n        data: false,\n        error: `Failed to stringify data: ${stringifyResult.error}`\n      };\n    }\n\n    localStorage.setItem(key, stringifyResult.data!);\n    return {\n      success: true,\n      data: true,\n      error: undefined\n    };\n  } catch (error) {\n    return {\n      success: false,\n      data: false,\n      error: error instanceof Error ? error.message : 'localStorage write error'\n    };\n  }\n}\n\n/**\n * Limpia localStorage de datos corruptos\n */\nexport function cleanCorruptedLocalStorage(keys: string[]): number {\n  if (typeof window === 'undefined') {\n    return 0;\n  }\n\n  let cleanedCount = 0;\n\n  keys.forEach(key => {\n    try {\n      const stored = localStorage.getItem(key);\n      if (stored) {\n        const parseResult = safeJsonParse(stored);\n        if (!parseResult.success) {\n          console.warn(`Cleaning corrupted localStorage key: ${key}`, parseResult.error);\n          localStorage.removeItem(key);\n          cleanedCount++;\n        }\n      }\n    } catch (error) {\n      console.warn(`Error checking localStorage key ${key}:`, error);\n      localStorage.removeItem(key);\n      cleanedCount++;\n    }\n  });\n\n  return cleanedCount;\n}\n\n/**\n * Valida que una respuesta de API tenga JSON v√°lido\n */\nexport async function safeApiResponseJson<T = any>(response: Response): Promise<SafeJsonResult<T>> {\n  const DEBUG_MODE = process.env.NODE_ENV === 'development';\n\n  try {\n    if (DEBUG_MODE) {\n    }\n\n    // Verificar que la respuesta sea v√°lida\n    if (!response.ok) {\n      // Try to get error details from response body\n      let errorDetails = '';\n      try {\n        const errorText = await response.text();\n        if (DEBUG_MODE) {\n        }\n        errorDetails = errorText ? ` - ${errorText}` : '';\n      } catch (textError) {\n        if (DEBUG_MODE) {\n          console.warn('Could not read error response body:', textError);\n        }\n      }\n\n      return {\n        success: false,\n        data: null,\n        error: `HTTP ${response.status}: ${response.statusText}${errorDetails}`\n      };\n    }\n\n    // Obtener el texto primero\n    const text = await response.text();\n    if (DEBUG_MODE) {\n      console.log('üìÑ Response text preview:', text.substring(0, 200) + (text.length > 200 ? '...' : ''));\n    }\n\n    // Parsear de forma segura\n    const parseResult = safeJsonParse<T>(text);\n    if (DEBUG_MODE) {\n    }\n\n    return parseResult;\n  } catch (error) {\n    console.error('‚ùå safeApiResponseJson error:', error);\n    return {\n      success: false,\n      data: null,\n      error: error instanceof Error ? error.message : 'API response error'\n    };\n  }\n}\n\n/**\n * Constantes para keys de localStorage comunes\n */\nexport const STORAGE_KEYS = {\n  CART: 'pinteya-cart',\n  RECENT_SEARCHES: 'pinteya-recent-searches',\n  USER_PREFERENCES: 'pinteya-user-preferences',\n  ANALYTICS: 'pinteya-analytics',\n} as const;\n\n/**\n * Funci√≥n de inicializaci√≥n para limpiar localStorage corrupto al cargar la app\n */\nexport function initializeJsonSafety(): void {\n  if (typeof window === 'undefined') return;\n\n  const keysToCheck = Object.values(STORAGE_KEYS);\n  const cleanedCount = cleanCorruptedLocalStorage(keysToCheck);\n  \n  if (cleanedCount > 0) {\n  }\n}\n"],"names":["STORAGE_KEYS","cleanCorruptedLocalStorage","initializeJsonSafety","safeApiResponseJson","safeJsonParse","safeJsonStringify","safeLocalStorageGet","safeLocalStorageSet","jsonString","success","data","error","trimmed","trim","includes","length","parsed","JSON","parse","undefined","Error","message","space","result","stringify","seen","WeakSet","key","value","has","add","fallbackError","window","stored","localStorage","getItem","stringifyResult","setItem","keys","cleanedCount","forEach","parseResult","console","warn","removeItem","response","DEBUG_MODE","process","env","NODE_ENV","ok","errorDetails","errorText","text","textError","status","statusText","log","substring","CART","RECENT_SEARCHES","USER_PREFERENCES","ANALYTICS","keysToCheck","Object","values"],"mappings":"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"}