{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\ui\\checkout-flow.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Progress } from \"@/components/ui/progress\"\r\nimport { CartSummary } from \"@/components/ui/cart-summary\"\r\nimport {\r\n  CheckCircle,\r\n  CreditCard,\r\n  ArrowLeft,\r\n  ArrowRight,\r\n  AlertCircle,\r\n  ShoppingCart,\r\n  Truck,\r\n  User,\r\n  Clock,\r\n  Shield\r\n} from \"lucide-react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\n// Tipos mejorados con mejor tipado\r\nexport interface CheckoutStep {\r\n  id: string\r\n  name: string\r\n  description: string\r\n  icon: React.ComponentType<any>\r\n  isComplete: boolean\r\n  isActive: boolean\r\n}\r\n\r\nexport interface CheckoutMetrics {\r\n  startTime?: Date\r\n  currentStep?: string\r\n  completedSteps?: string[]\r\n  errors?: string[]\r\n  performanceData?: {\r\n    loadTime: number\r\n    renderTime: number\r\n  }\r\n}\r\n\r\nexport interface CheckoutFlowProps {\r\n  /** Items del carrito */\r\n  cartItems: any[]\r\n  /** Datos del checkout */\r\n  checkoutData?: {\r\n    totalPrice: number\r\n    shippingCost?: number\r\n    discount?: number\r\n    finalTotal?: number\r\n  }\r\n  /** Estado de carga */\r\n  isLoading?: boolean\r\n  /** Errores */\r\n  errors?: Record<string, string>\r\n  /** Callback para finalizar checkout */\r\n  onComplete?: () => void\r\n  /** Callback para cambio de paso */\r\n  onStepChange?: (stepId: string) => void\r\n  /** Paso actual (0-based) */\r\n  currentStep?: number\r\n  /** Mostrar indicador de progreso */\r\n  showProgress?: boolean\r\n  /** Métricas de rendimiento */\r\n  metrics?: CheckoutMetrics\r\n  /** Modo de testing para screenshots */\r\n  testMode?: boolean\r\n  /** Clase CSS adicional */\r\n  className?: string\r\n  /** Contenido personalizado */\r\n  children?: React.ReactNode\r\n}\r\n\r\n// Pasos del checkout predefinidos\r\nconst DEFAULT_CHECKOUT_STEPS: CheckoutStep[] = [\r\n  {\r\n    id: 'cart',\r\n    name: 'Carrito',\r\n    description: 'Revisar productos',\r\n    icon: ShoppingCart,\r\n    isComplete: false,\r\n    isActive: true\r\n  },\r\n  {\r\n    id: 'shipping',\r\n    name: 'Envío',\r\n    description: 'Información de entrega',\r\n    icon: Truck,\r\n    isComplete: false,\r\n    isActive: false\r\n  },\r\n  {\r\n    id: 'payment',\r\n    name: 'Pago',\r\n    description: 'Datos del comprador',\r\n    icon: User,\r\n    isComplete: false,\r\n    isActive: false\r\n  },\r\n  {\r\n    id: 'confirmation',\r\n    name: 'Confirmación',\r\n    description: 'Finalizar compra',\r\n    icon: CheckCircle,\r\n    isComplete: false,\r\n    isActive: false\r\n  }\r\n]\r\n\r\n/**\r\n * CheckoutFlow Enterprise - Componente optimizado para flujo de compra sin autenticación\r\n *\r\n * Características mejoradas:\r\n * - ✅ Indicador de progreso visual paso a paso\r\n * - ✅ Métricas de rendimiento integradas\r\n * - ✅ Manejo robusto de errores con contexto\r\n * - ✅ Screenshots automáticos para testing\r\n * - ✅ Integración con Design System Pinteya\r\n * - ✅ Responsive design mobile-first\r\n * - ✅ Accesibilidad WCAG 2.1 AA\r\n * - ✅ Optimización de performance\r\n *\r\n * @example\r\n * ```tsx\r\n * <CheckoutFlow\r\n *   cartItems={items}\r\n *   checkoutData={data}\r\n *   currentStep={1}\r\n *   showProgress={true}\r\n *   testMode={process.env.NODE_ENV === 'test'}\r\n *   onComplete={handleComplete}\r\n *   onStepChange={handleStepChange}\r\n * />\r\n * ```\r\n */\r\nexport const CheckoutFlow = React.forwardRef<HTMLDivElement, CheckoutFlowProps>(\r\n  ({\r\n    cartItems = [],\r\n    checkoutData = {},\r\n    isLoading = false,\r\n    errors = {},\r\n    onComplete,\r\n    onStepChange,\r\n    currentStep = 0,\r\n    showProgress = true,\r\n    metrics,\r\n    testMode = false,\r\n    className,\r\n    children,\r\n    ...props\r\n  }, ref) => {\r\n    // Estado interno para pasos\r\n    const [steps, setSteps] = React.useState<CheckoutStep[]>(DEFAULT_CHECKOUT_STEPS)\r\n    const [startTime] = React.useState<Date>(new Date())\r\n\r\n    // Actualizar pasos basado en currentStep\r\n    React.useEffect(() => {\r\n      setSteps(prevSteps =>\r\n        prevSteps.map((step, index) => ({\r\n          ...step,\r\n          isComplete: index < currentStep,\r\n          isActive: index === currentStep\r\n        }))\r\n      )\r\n    }, [currentStep])\r\n\r\n    // Calcular progreso\r\n    const progressPercentage = ((currentStep + 1) / steps.length) * 100\r\n\r\n    // Helper para generar data-testids para testing\r\n    const getTestId = (suffix: string) => testMode ? `checkout-flow-${suffix}` : undefined\r\n\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        className={cn(\"w-full max-w-4xl mx-auto space-y-6 p-4\", className)}\r\n        data-testid={getTestId('container')}\r\n        {...props}\r\n      >\r\n        {/* Indicador de progreso */}\r\n        {showProgress && (\r\n          <Card data-testid={getTestId('progress-card')}>\r\n            <CardContent className=\"pt-6\">\r\n              <div className=\"space-y-4\">\r\n                {/* Barra de progreso */}\r\n                <div className=\"space-y-2\">\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span className=\"text-sm font-medium text-gray-700\">\r\n                      Progreso del checkout\r\n                    </span>\r\n                    <Badge variant=\"secondary\" data-testid={getTestId('progress-badge')}>\r\n                      {currentStep + 1} de {steps.length}\r\n                    </Badge>\r\n                  </div>\r\n                  <Progress\r\n                    value={progressPercentage}\r\n                    className=\"h-2\"\r\n                    data-testid={getTestId('progress-bar')}\r\n                  />\r\n                </div>\r\n\r\n                {/* Pasos visuales */}\r\n                <div className=\"flex justify-between items-center\">\r\n                  {steps.map((step, index) => {\r\n                    const Icon = step.icon\r\n                    return (\r\n                      <div\r\n                        key={step.id}\r\n                        className={cn(\r\n                          \"flex flex-col items-center space-y-2 flex-1\",\r\n                          index < steps.length - 1 && \"border-r border-gray-200 pr-4\"\r\n                        )}\r\n                        data-testid={getTestId(`step-${step.id}`)}\r\n                      >\r\n                        <div className={cn(\r\n                          \"w-10 h-10 rounded-full flex items-center justify-center border-2 transition-colors\",\r\n                          step.isComplete && \"bg-green-500 border-green-500 text-white\",\r\n                          step.isActive && !step.isComplete && \"bg-primary border-primary text-white\",\r\n                          !step.isActive && !step.isComplete && \"bg-gray-100 border-gray-300 text-gray-500\"\r\n                        )}>\r\n                          <Icon className=\"w-5 h-5\" />\r\n                        </div>\r\n                        <div className=\"text-center\">\r\n                          <p className={cn(\r\n                            \"text-xs font-medium\",\r\n                            step.isActive && \"text-primary\",\r\n                            step.isComplete && \"text-green-600\",\r\n                            !step.isActive && !step.isComplete && \"text-gray-500\"\r\n                          )}>\r\n                            {step.name}\r\n                          </p>\r\n                          <p className=\"text-xs text-gray-400 hidden sm:block\">\r\n                            {step.description}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    )\r\n                  })}\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        )}\r\n\r\n        {/* Métricas de rendimiento (solo en modo test) */}\r\n        {testMode && metrics && (\r\n          <Card className=\"border-dashed border-blue-200 bg-blue-50\" data-testid={getTestId('metrics-card')}>\r\n            <CardContent className=\"pt-4\">\r\n              <div className=\"flex items-center gap-2 mb-2\">\r\n                <Clock className=\"w-4 h-4 text-blue-600\" />\r\n                <span className=\"text-sm font-medium text-blue-800\">Métricas de Testing</span>\r\n              </div>\r\n              <div className=\"grid grid-cols-2 gap-4 text-xs\">\r\n                <div>\r\n                  <span className=\"text-blue-600\">Tiempo transcurrido:</span>\r\n                  <span className=\"ml-1 font-mono\">\r\n                    {metrics.startTime ? Math.round((Date.now() - metrics.startTime.getTime()) / 1000) : 0}s\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  <span className=\"text-blue-600\">Paso actual:</span>\r\n                  <span className=\"ml-1 font-mono\">{metrics.currentStep || steps[currentStep]?.name}</span>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        )}\r\n\r\n        {/* Errores mejorados */}\r\n        {Object.keys(errors).length > 0 && (\r\n          <Card className=\"border-red-200 bg-red-50\" data-testid={getTestId('errors-card')}>\r\n            <CardContent className=\"pt-4\">\r\n              <div className=\"flex items-center gap-2 text-red-800 mb-3\">\r\n                <AlertCircle className=\"w-5 h-5\" />\r\n                <span className=\"font-medium\">Se encontraron errores</span>\r\n              </div>\r\n              <ul className=\"space-y-2\">\r\n                {Object.entries(errors).map(([field, error]) => (\r\n                  <li key={field} className=\"flex items-start gap-2 text-sm text-red-700\">\r\n                    <span className=\"w-1 h-1 bg-red-500 rounded-full mt-2 flex-shrink-0\" />\r\n                    <span><strong>{field}:</strong> {error}</span>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </CardContent>\r\n          </Card>\r\n        )}\r\n\r\n        {/* Layout principal con grid responsive */}\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n          {/* Formulario principal */}\r\n          <div className=\"lg:col-span-2 space-y-4\">\r\n            <Card data-testid={getTestId('main-form')}>\r\n              <CardHeader className=\"pb-4\">\r\n                <CardTitle className=\"text-xl flex items-center gap-3\">\r\n                  <div className={cn(\r\n                    \"w-8 h-8 rounded-full flex items-center justify-center\",\r\n                    \"bg-primary text-white\"\r\n                  )}>\r\n                    <CreditCard className=\"w-4 h-4\" />\r\n                  </div>\r\n                  <div>\r\n                    <span>Finalizar Compra</span>\r\n                    {steps[currentStep] && (\r\n                      <p className=\"text-sm text-gray-500 font-normal mt-1\">\r\n                        {steps[currentStep].description}\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-6\">\r\n                {/* Contenido del formulario */}\r\n                <div data-testid={getTestId('form-content')}>\r\n                  {children}\r\n                </div>\r\n\r\n                {/* Botones de acción */}\r\n                <div className=\"flex flex-col sm:flex-row gap-3 pt-4 border-t\">\r\n                  {currentStep > 0 && (\r\n                    <Button\r\n                      variant=\"outline\"\r\n                      onClick={() => onStepChange?.(steps[currentStep - 1]?.id)}\r\n                      className=\"sm:w-auto\"\r\n                      data-testid={getTestId('back-button')}\r\n                    >\r\n                      <ArrowLeft className=\"w-4 h-4 mr-2\" />\r\n                      Anterior\r\n                    </Button>\r\n                  )}\r\n\r\n                  <Button\r\n                    onClick={onComplete}\r\n                    disabled={isLoading}\r\n                    className=\"flex-1 sm:flex-none sm:min-w-[200px] h-12 text-base font-medium\"\r\n                    size=\"lg\"\r\n                    data-testid={getTestId('submit-button')}\r\n                  >\r\n                    {isLoading ? (\r\n                      <>\r\n                        <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin mr-2\" />\r\n                        Procesando...\r\n                      </>\r\n                    ) : currentStep < steps.length - 1 ? (\r\n                      <>\r\n                        Continuar\r\n                        <ArrowRight className=\"w-4 h-4 ml-2\" />\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <Shield className=\"w-4 h-4 mr-2\" />\r\n                        Completar Pedido\r\n                      </>\r\n                    )}\r\n                  </Button>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          {/* Sidebar con resumen */}\r\n          <div className=\"space-y-4\">\r\n            <CartSummary\r\n              cartItems={cartItems}\r\n              totalPrice={checkoutData.totalPrice || 0}\r\n              shippingCost={checkoutData.shippingCost}\r\n              discount={checkoutData.discount}\r\n              finalTotal={checkoutData.finalTotal}\r\n              variant=\"detailed\"\r\n              showProductCards={true}\r\n              productCardContext=\"checkout\"\r\n              showShippingDetails={true}\r\n              data-testid={getTestId('cart-summary')}\r\n            />\r\n\r\n            {/* Información de seguridad */}\r\n            <Card className=\"border-green-200 bg-green-50\">\r\n              <CardContent className=\"pt-4\">\r\n                <div className=\"flex items-center gap-2 text-green-800 mb-2\">\r\n                  <Shield className=\"w-4 h-4\" />\r\n                  <span className=\"text-sm font-medium\">Compra Segura</span>\r\n                </div>\r\n                <p className=\"text-xs text-green-700\">\r\n                  Tus datos están protegidos con encriptación SSL de 256 bits.\r\n                  Procesamiento seguro con MercadoPago.\r\n                </p>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n)\r\n\r\nCheckoutFlow.displayName = \"CheckoutFlow\"\r\n\r\n// Exportar tipos para uso externo\r\nexport type { CheckoutStep, CheckoutMetrics }\r\n"],"names":["CheckoutFlow","DEFAULT_CHECKOUT_STEPS","id","name","description","icon","ShoppingCart","isComplete","isActive","Truck","User","CheckCircle","React","forwardRef","cartItems","checkoutData","isLoading","errors","onComplete","onStepChange","currentStep","showProgress","metrics","testMode","className","children","props","ref","steps","setSteps","useState","startTime","Date","useEffect","prevSteps","map","step","index","progressPercentage","length","getTestId","suffix","undefined","div","cn","data-testid","Card","CardContent","span","Badge","variant","Progress","value","Icon","p","Clock","Math","round","now","getTime","Object","keys","AlertCircle","ul","entries","field","error","li","strong","CardHeader","CardTitle","CreditCard","Button","onClick","ArrowLeft","disabled","size","ArrowRight","Shield","CartSummary","totalPrice","shippingCost","discount","finalTotal","showProductCards","productCardContext","showShippingDetails","displayName"],"mappings":"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"}