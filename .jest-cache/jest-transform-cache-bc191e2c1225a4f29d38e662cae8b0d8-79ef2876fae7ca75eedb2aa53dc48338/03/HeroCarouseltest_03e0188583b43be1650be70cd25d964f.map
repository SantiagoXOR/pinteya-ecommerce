{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\__tests__\\components\\HeroCarousel.test.tsx"],"sourcesContent":["import React from 'react';\nimport { render, screen, fireEvent, waitFor } from '@testing-library/react';\nimport '@testing-library/jest-dom';\nimport HeroCarousel from '@/components/Home/Hero/HeroCarousel';\n\n// Mock de Swiper\njest.mock('swiper/react', () => ({\n  Swiper: ({ children, className, ...props }: any) => (\n    <div className={className} data-testid=\"swiper\" {...props}>\n      {children}\n    </div>\n  ),\n  SwiperSlide: ({ children }: any) => (\n    <div data-testid=\"swiper-slide\">{children}</div>\n  ),\n}));\n\n// Mock de módulos de Swiper\njest.mock('swiper/modules', () => ({\n  Autoplay: 'Autoplay',\n  Pagination: 'Pagination',\n  Navigation: 'Navigation',\n  EffectFade: 'EffectFade',\n}));\n\n// Mock de Next.js Image\njest.mock('next/image', () => {\n  return function MockImage({ src, alt, className, priority, ...props }: any) {\n    return (\n      <img \n        src={src} \n        alt={alt} \n        className={className}\n        data-priority={priority}\n        {...props}\n      />\n    );\n  };\n});\n\ndescribe('HeroCarousel', () => {\n  beforeEach(() => {\n    // Limpiar mocks antes de cada test\n    jest.clearAllMocks();\n  });\n\n  it('should render without crashing', () => {\n    render(<HeroCarousel />);\n    expect(screen.getByTestId('swiper')).toBeInTheDocument();\n  });\n\n  it('should render all hero images', () => {\n    render(<HeroCarousel />);\n    \n    const images = screen.getAllByRole('img');\n    expect(images).toHaveLength(4);\n    \n    // Verificar que las imágenes tienen las rutas correctas\n    expect(images[0]).toHaveAttribute('src', '/images/hero/hero-01.png');\n    expect(images[1]).toHaveAttribute('src', '/images/hero/hero-02.png');\n    expect(images[2]).toHaveAttribute('src', '/images/hero/hero-03.png');\n    expect(images[3]).toHaveAttribute('src', '/images/hero/hero-04.png');\n  });\n\n  it('should have correct alt texts for accessibility', () => {\n    render(<HeroCarousel />);\n    \n    expect(screen.getByAltText('Pintá rápido, fácil y cotiza al instante - Imagen 1')).toBeInTheDocument();\n    expect(screen.getByAltText('Pintá rápido, fácil y cotiza al instante - Imagen 2')).toBeInTheDocument();\n    expect(screen.getByAltText('Pintá rápido, fácil y cotiza al instante - Imagen 3')).toBeInTheDocument();\n    expect(screen.getByAltText('Pintá rápido, fácil y cotiza al instante - Imagen 4')).toBeInTheDocument();\n  });\n\n  it('should render navigation buttons', () => {\n    render(<HeroCarousel />);\n    \n    const prevButton = screen.getByLabelText('Imagen anterior');\n    const nextButton = screen.getByLabelText('Siguiente imagen');\n    \n    expect(prevButton).toBeInTheDocument();\n    expect(nextButton).toBeInTheDocument();\n  });\n\n  it('should have proper ARIA label for accessibility', () => {\n    render(<HeroCarousel />);\n    \n    const swiper = screen.getByTestId('swiper');\n    expect(swiper).toHaveAttribute('aria-label', 'Carrusel de imágenes principales de Pinteya');\n  });\n\n  it('should apply custom className when provided', () => {\n    const customClass = 'custom-carousel-class';\n    render(<HeroCarousel className={customClass} />);\n    \n    const container = screen.getByTestId('swiper').parentElement;\n    expect(container).toHaveClass(customClass);\n  });\n\n  it('should handle mouse enter and leave events', () => {\n    render(<HeroCarousel />);\n    \n    const container = screen.getByTestId('swiper').parentElement;\n    \n    // Simular mouse enter\n    fireEvent.mouseEnter(container!);\n    \n    // Simular mouse leave\n    fireEvent.mouseLeave(container!);\n    \n    // El test pasa si no hay errores\n    expect(container).toBeInTheDocument();\n  });\n\n  it('should have priority loading for first image only', () => {\n    render(<HeroCarousel />);\n    \n    const images = screen.getAllByRole('img');\n    \n    // Solo la primera imagen debe tener priority\n    expect(images[0]).toHaveAttribute('data-priority', 'true');\n    expect(images[1]).toHaveAttribute('data-priority', 'false');\n    expect(images[2]).toHaveAttribute('data-priority', 'false');\n    expect(images[3]).toHaveAttribute('data-priority', 'false');\n  });\n\n  it('should render swiper slides', () => {\n    render(<HeroCarousel />);\n    \n    const slides = screen.getAllByTestId('swiper-slide');\n    expect(slides).toHaveLength(4);\n  });\n\n  it('should have proper CSS classes for styling', () => {\n    render(<HeroCarousel />);\n    \n    const swiper = screen.getByTestId('swiper');\n    expect(swiper).toHaveClass('hero-carousel-swiper');\n    expect(swiper).toHaveClass('w-full');\n    expect(swiper).toHaveClass('h-full');\n  });\n\n  it('should render navigation buttons with correct classes', () => {\n    render(<HeroCarousel />);\n    \n    const prevButton = screen.getByLabelText('Imagen anterior');\n    const nextButton = screen.getByLabelText('Siguiente imagen');\n    \n    expect(prevButton).toHaveClass('hero-carousel-prev');\n    expect(nextButton).toHaveClass('hero-carousel-next');\n  });\n\n  it('should have responsive behavior classes', () => {\n    render(<HeroCarousel />);\n    \n    const prevButton = screen.getByLabelText('Imagen anterior');\n    const nextButton = screen.getByLabelText('Siguiente imagen');\n    \n    // Los botones deben estar ocultos en mobile\n    expect(prevButton).toHaveClass('hidden', 'lg:flex');\n    expect(nextButton).toHaveClass('hidden', 'lg:flex');\n  });\n});\n"],"names":["jest","mock","Swiper","children","className","props","div","data-testid","SwiperSlide","Autoplay","Pagination","Navigation","EffectFade","MockImage","src","alt","priority","img","data-priority","describe","beforeEach","clearAllMocks","it","render","HeroCarousel","expect","screen","getByTestId","toBeInTheDocument","images","getAllByRole","toHaveLength","toHaveAttribute","getByAltText","prevButton","getByLabelText","nextButton","swiper","customClass","container","parentElement","toHaveClass","fireEvent","mouseEnter","mouseLeave","slides","getAllByTestId"],"mappings":";AAKA,iBAAiB;AACjBA,KAAKC,IAAI,CAAC,gBAAgB,IAAO,CAAA;QAC/BC,QAAQ,CAAC,EAAEC,QAAQ,EAAEC,SAAS,EAAE,GAAGC,OAAY,iBAC7C,qBAACC;gBAAIF,WAAWA;gBAAWG,eAAY;gBAAU,GAAGF,KAAK;0BACtDF;;QAGLK,aAAa,CAAC,EAAEL,QAAQ,EAAO,iBAC7B,qBAACG;gBAAIC,eAAY;0BAAgBJ;;IAErC,CAAA;AAEA,4BAA4B;AAC5BH,KAAKC,IAAI,CAAC,kBAAkB,IAAO,CAAA;QACjCQ,UAAU;QACVC,YAAY;QACZC,YAAY;QACZC,YAAY;IACd,CAAA;AAEA,wBAAwB;AACxBZ,KAAKC,IAAI,CAAC,cAAc;IACtB,OAAO,SAASY,UAAU,EAAEC,GAAG,EAAEC,GAAG,EAAEX,SAAS,EAAEY,QAAQ,EAAE,GAAGX,OAAY;QACxE,qBACE,qBAACY;YACCH,KAAKA;YACLC,KAAKA;YACLX,WAAWA;YACXc,iBAAeF;YACd,GAAGX,KAAK;;IAGf;AACF;;;;;8DAtCkB;wBACiC;QAC5C;qEACkB;;;;;;AAqCzBc,SAAS,gBAAgB;IACvBC,WAAW;QACT,mCAAmC;QACnCpB,KAAKqB,aAAa;IACpB;IAEAC,GAAG,kCAAkC;QACnCC,IAAAA,cAAM,gBAAC,qBAACC,qBAAY;QACpBC,OAAOC,cAAM,CAACC,WAAW,CAAC,WAAWC,iBAAiB;IACxD;IAEAN,GAAG,iCAAiC;QAClCC,IAAAA,cAAM,gBAAC,qBAACC,qBAAY;QAEpB,MAAMK,SAASH,cAAM,CAACI,YAAY,CAAC;QACnCL,OAAOI,QAAQE,YAAY,CAAC;QAE5B,wDAAwD;QACxDN,OAAOI,MAAM,CAAC,EAAE,EAAEG,eAAe,CAAC,OAAO;QACzCP,OAAOI,MAAM,CAAC,EAAE,EAAEG,eAAe,CAAC,OAAO;QACzCP,OAAOI,MAAM,CAAC,EAAE,EAAEG,eAAe,CAAC,OAAO;QACzCP,OAAOI,MAAM,CAAC,EAAE,EAAEG,eAAe,CAAC,OAAO;IAC3C;IAEAV,GAAG,mDAAmD;QACpDC,IAAAA,cAAM,gBAAC,qBAACC,qBAAY;QAEpBC,OAAOC,cAAM,CAACO,YAAY,CAAC,wDAAwDL,iBAAiB;QACpGH,OAAOC,cAAM,CAACO,YAAY,CAAC,wDAAwDL,iBAAiB;QACpGH,OAAOC,cAAM,CAACO,YAAY,CAAC,wDAAwDL,iBAAiB;QACpGH,OAAOC,cAAM,CAACO,YAAY,CAAC,wDAAwDL,iBAAiB;IACtG;IAEAN,GAAG,oCAAoC;QACrCC,IAAAA,cAAM,gBAAC,qBAACC,qBAAY;QAEpB,MAAMU,aAAaR,cAAM,CAACS,cAAc,CAAC;QACzC,MAAMC,aAAaV,cAAM,CAACS,cAAc,CAAC;QAEzCV,OAAOS,YAAYN,iBAAiB;QACpCH,OAAOW,YAAYR,iBAAiB;IACtC;IAEAN,GAAG,mDAAmD;QACpDC,IAAAA,cAAM,gBAAC,qBAACC,qBAAY;QAEpB,MAAMa,SAASX,cAAM,CAACC,WAAW,CAAC;QAClCF,OAAOY,QAAQL,eAAe,CAAC,cAAc;IAC/C;IAEAV,GAAG,+CAA+C;QAChD,MAAMgB,cAAc;QACpBf,IAAAA,cAAM,gBAAC,qBAACC,qBAAY;YAACpB,WAAWkC;;QAEhC,MAAMC,YAAYb,cAAM,CAACC,WAAW,CAAC,UAAUa,aAAa;QAC5Df,OAAOc,WAAWE,WAAW,CAACH;IAChC;IAEAhB,GAAG,8CAA8C;QAC/CC,IAAAA,cAAM,gBAAC,qBAACC,qBAAY;QAEpB,MAAMe,YAAYb,cAAM,CAACC,WAAW,CAAC,UAAUa,aAAa;QAE5D,sBAAsB;QACtBE,iBAAS,CAACC,UAAU,CAACJ;QAErB,sBAAsB;QACtBG,iBAAS,CAACE,UAAU,CAACL;QAErB,iCAAiC;QACjCd,OAAOc,WAAWX,iBAAiB;IACrC;IAEAN,GAAG,qDAAqD;QACtDC,IAAAA,cAAM,gBAAC,qBAACC,qBAAY;QAEpB,MAAMK,SAASH,cAAM,CAACI,YAAY,CAAC;QAEnC,6CAA6C;QAC7CL,OAAOI,MAAM,CAAC,EAAE,EAAEG,eAAe,CAAC,iBAAiB;QACnDP,OAAOI,MAAM,CAAC,EAAE,EAAEG,eAAe,CAAC,iBAAiB;QACnDP,OAAOI,MAAM,CAAC,EAAE,EAAEG,eAAe,CAAC,iBAAiB;QACnDP,OAAOI,MAAM,CAAC,EAAE,EAAEG,eAAe,CAAC,iBAAiB;IACrD;IAEAV,GAAG,+BAA+B;QAChCC,IAAAA,cAAM,gBAAC,qBAACC,qBAAY;QAEpB,MAAMqB,SAASnB,cAAM,CAACoB,cAAc,CAAC;QACrCrB,OAAOoB,QAAQd,YAAY,CAAC;IAC9B;IAEAT,GAAG,8CAA8C;QAC/CC,IAAAA,cAAM,gBAAC,qBAACC,qBAAY;QAEpB,MAAMa,SAASX,cAAM,CAACC,WAAW,CAAC;QAClCF,OAAOY,QAAQI,WAAW,CAAC;QAC3BhB,OAAOY,QAAQI,WAAW,CAAC;QAC3BhB,OAAOY,QAAQI,WAAW,CAAC;IAC7B;IAEAnB,GAAG,yDAAyD;QAC1DC,IAAAA,cAAM,gBAAC,qBAACC,qBAAY;QAEpB,MAAMU,aAAaR,cAAM,CAACS,cAAc,CAAC;QACzC,MAAMC,aAAaV,cAAM,CAACS,cAAc,CAAC;QAEzCV,OAAOS,YAAYO,WAAW,CAAC;QAC/BhB,OAAOW,YAAYK,WAAW,CAAC;IACjC;IAEAnB,GAAG,2CAA2C;QAC5CC,IAAAA,cAAM,gBAAC,qBAACC,qBAAY;QAEpB,MAAMU,aAAaR,cAAM,CAACS,cAAc,CAAC;QACzC,MAAMC,aAAaV,cAAM,CAACS,cAAc,CAAC;QAEzC,4CAA4C;QAC5CV,OAAOS,YAAYO,WAAW,CAAC,UAAU;QACzChB,OAAOW,YAAYK,WAAW,CAAC,UAAU;IAC3C;AACF"}