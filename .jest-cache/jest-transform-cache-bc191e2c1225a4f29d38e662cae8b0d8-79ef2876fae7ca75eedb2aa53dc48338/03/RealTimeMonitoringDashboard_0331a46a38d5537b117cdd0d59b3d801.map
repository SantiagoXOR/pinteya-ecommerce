{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\admin\\monitoring\\RealTimeMonitoringDashboard.tsx"],"sourcesContent":["'use client';\n\n// ===================================\n// PINTEYA E-COMMERCE - REAL-TIME MONITORING DASHBOARD\n// ===================================\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\nimport { \n  Activity, \n  AlertTriangle, \n  CheckCircle, \n  Clock, \n  DollarSign, \n  Shield, \n  TrendingUp, \n  Users,\n  RefreshCw,\n  Pause,\n  Play\n} from 'lucide-react';\n\n// Tipos para el dashboard\ninterface DashboardMetrics {\n  performance: {\n    responseTime: number;\n    errorRate: number;\n    throughput: number;\n    uptime: number;\n  };\n  business: {\n    totalRevenue: number;\n    ordersToday: number;\n    conversionRate: number;\n    activeUsers: number;\n  };\n  security: {\n    securityEvents: number;\n    blockedRequests: number;\n    authFailures: number;\n    riskLevel: 'low' | 'medium' | 'high' | 'critical';\n  };\n  infrastructure: {\n    circuitBreakerStatus: 'closed' | 'open' | 'half-open';\n    cacheHitRate: number;\n    databaseConnections: number;\n    memoryUsage: number;\n  };\n}\n\ninterface ActiveAlert {\n  id: string;\n  level: 'info' | 'warning' | 'critical' | 'emergency';\n  message: string;\n  timestamp: string;\n  metric: string;\n  value: number;\n  threshold: number;\n}\n\ninterface MetricTrend {\n  timestamp: string;\n  value: number;\n}\n\n/**\n * Dashboard de Monitoreo en Tiempo Real Enterprise\n */\nexport default function RealTimeMonitoringDashboard() {\n  const [metrics, setMetrics] = useState<DashboardMetrics | null>(null);\n  const [alerts, setAlerts] = useState<ActiveAlert[]>([]);\n  const [trends, setTrends] = useState<Record<string, MetricTrend[]>>({});\n  const [isLoading, setIsLoading] = useState(true);\n  const [isPaused, setIsPaused] = useState(false);\n  const [lastUpdate, setLastUpdate] = useState<Date | null>(null);\n  const [error, setError] = useState<string | null>(null);\n\n  // Configuración de auto-refresh\n  const REFRESH_INTERVAL = 5000; // 5 segundos\n\n  /**\n   * Obtiene métricas del servidor\n   */\n  const fetchMetrics = useCallback(async () => {\n    if (isPaused) return;\n\n    try {\n      setError(null);\n      \n      const response = await fetch('/api/admin/monitoring/metrics', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      \n      if (data.success) {\n        setMetrics(data.data.metrics);\n        setAlerts(data.data.alerts || []);\n        setTrends(prev => ({\n          ...prev,\n          ...data.data.trends\n        }));\n        setLastUpdate(new Date());\n      } else {\n        throw new Error(data.error || 'Failed to fetch metrics');\n      }\n    } catch (err) {\n      console.error('Error fetching metrics:', err);\n      setError(err instanceof Error ? err.message : 'Unknown error');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [isPaused]);\n\n  /**\n   * Efecto para auto-refresh\n   */\n  useEffect(() => {\n    fetchMetrics(); // Carga inicial\n\n    const interval = setInterval(fetchMetrics, REFRESH_INTERVAL);\n\n    return () => clearInterval(interval);\n  }, [fetchMetrics]);\n\n  /**\n   * Maneja pausa/reanudación del auto-refresh\n   */\n  const togglePause = () => {\n    setIsPaused(!isPaused);\n  };\n\n  /**\n   * Refresh manual\n   */\n  const handleManualRefresh = () => {\n    setIsLoading(true);\n    fetchMetrics();\n  };\n\n  /**\n   * Obtiene color del badge según el nivel de alerta\n   */\n  const getAlertColor = (level: string) => {\n    switch (level) {\n      case 'emergency': return 'destructive';\n      case 'critical': return 'destructive';\n      case 'warning': return 'secondary';\n      case 'info': return 'default';\n      default: return 'default';\n    }\n  };\n\n  /**\n   * Obtiene color del indicador de estado\n   */\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'closed': return 'text-green-500';\n      case 'open': return 'text-red-500';\n      case 'half-open': return 'text-yellow-500';\n      default: return 'text-gray-500';\n    }\n  };\n\n  /**\n   * Formatea números para display\n   */\n  const formatNumber = (num: number, decimals: number = 0) => {\n    return new Intl.NumberFormat('es-AR', {\n      minimumFractionDigits: decimals,\n      maximumFractionDigits: decimals\n    }).format(num);\n  };\n\n  /**\n   * Formatea moneda\n   */\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('es-AR', {\n      style: 'currency',\n      currency: 'ARS'\n    }).format(amount);\n  };\n\n  if (isLoading && !metrics) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"flex items-center space-x-2\">\n          <RefreshCw className=\"h-4 w-4 animate-spin\" />\n          <span>Cargando métricas...</span>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header con controles */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold tracking-tight\">Dashboard de Monitoreo</h1>\n          <p className=\"text-muted-foreground\">\n            Métricas en tiempo real del sistema Pinteya E-commerce\n          </p>\n        </div>\n        \n        <div className=\"flex items-center space-x-2\">\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={togglePause}\n            className=\"flex items-center space-x-1\"\n          >\n            {isPaused ? <Play className=\"h-4 w-4\" /> : <Pause className=\"h-4 w-4\" />}\n            <span>{isPaused ? 'Reanudar' : 'Pausar'}</span>\n          </Button>\n          \n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={handleManualRefresh}\n            disabled={isLoading}\n            className=\"flex items-center space-x-1\"\n          >\n            <RefreshCw className={`h-4 w-4 ${isLoading ? 'animate-spin' : ''}`} />\n            <span>Actualizar</span>\n          </Button>\n          \n          {lastUpdate && (\n            <div className=\"text-sm text-muted-foreground\">\n              Última actualización: {lastUpdate.toLocaleTimeString('es-AR')}\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Error Alert */}\n      {error && (\n        <Alert variant=\"destructive\">\n          <AlertTriangle className=\"h-4 w-4\" />\n          <AlertTitle>Error de Conexión</AlertTitle>\n          <AlertDescription>{error}</AlertDescription>\n        </Alert>\n      )}\n\n      {/* Alertas Activas */}\n      {alerts.length > 0 && (\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center space-x-2\">\n              <AlertTriangle className=\"h-5 w-5 text-red-500\" />\n              <span>Alertas Activas ({alerts.length})</span>\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-2\">\n              {alerts.slice(0, 5).map((alert) => (\n                <div\n                  key={alert.id}\n                  className=\"flex items-center justify-between p-3 border rounded-lg\"\n                >\n                  <div className=\"flex items-center space-x-3\">\n                    <Badge variant={getAlertColor(alert.level)}>\n                      {alert.level.toUpperCase()}\n                    </Badge>\n                    <div>\n                      <p className=\"font-medium\">{alert.message}</p>\n                      <p className=\"text-sm text-muted-foreground\">\n                        {alert.metric}: {formatNumber(alert.value, 2)} / {formatNumber(alert.threshold, 2)}\n                      </p>\n                    </div>\n                  </div>\n                  <div className=\"text-sm text-muted-foreground\">\n                    {new Date(alert.timestamp).toLocaleTimeString('es-AR')}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Métricas Principales */}\n      {metrics && (\n        <>\n          {/* Performance Metrics */}\n          <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Tiempo de Respuesta</CardTitle>\n                <Clock className=\"h-4 w-4 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">{formatNumber(metrics.performance.responseTime)}ms</div>\n                <p className=\"text-xs text-muted-foreground\">\n                  Promedio últimos 5 minutos\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Tasa de Error</CardTitle>\n                <AlertTriangle className=\"h-4 w-4 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">\n                  {formatNumber(metrics.performance.errorRate * 100, 2)}%\n                </div>\n                <p className=\"text-xs text-muted-foreground\">\n                  Errores por solicitud\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Throughput</CardTitle>\n                <Activity className=\"h-4 w-4 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">{formatNumber(metrics.performance.throughput)}</div>\n                <p className=\"text-xs text-muted-foreground\">\n                  Requests por minuto\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Uptime</CardTitle>\n                <CheckCircle className=\"h-4 w-4 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">\n                  {formatNumber(metrics.performance.uptime * 100, 2)}%\n                </div>\n                <p className=\"text-xs text-muted-foreground\">\n                  Disponibilidad del sistema\n                </p>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Business Metrics */}\n          <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Ingresos Hoy</CardTitle>\n                <DollarSign className=\"h-4 w-4 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">\n                  {formatCurrency(metrics.business.totalRevenue)}\n                </div>\n                <p className=\"text-xs text-muted-foreground\">\n                  Ventas del día actual\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Órdenes Hoy</CardTitle>\n                <TrendingUp className=\"h-4 w-4 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">{formatNumber(metrics.business.ordersToday)}</div>\n                <p className=\"text-xs text-muted-foreground\">\n                  Pedidos completados\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Conversión</CardTitle>\n                <TrendingUp className=\"h-4 w-4 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">\n                  {formatNumber(metrics.business.conversionRate * 100, 1)}%\n                </div>\n                <p className=\"text-xs text-muted-foreground\">\n                  Tasa de conversión\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Usuarios Activos</CardTitle>\n                <Users className=\"h-4 w-4 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">{formatNumber(metrics.business.activeUsers)}</div>\n                <p className=\"text-xs text-muted-foreground\">\n                  Últimos 15 minutos\n                </p>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Security & Infrastructure */}\n          <div className=\"grid gap-4 md:grid-cols-2\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2\">\n                  <Shield className=\"h-5 w-5\" />\n                  <span>Seguridad</span>\n                </CardTitle>\n                <CardDescription>Estado de seguridad del sistema</CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"flex items-center justify-between\">\n                  <span>Nivel de Riesgo</span>\n                  <Badge variant={\n                    metrics.security.riskLevel === 'low' ? 'default' :\n                    metrics.security.riskLevel === 'medium' ? 'secondary' :\n                    metrics.security.riskLevel === 'high' ? 'destructive' : 'destructive'\n                  }>\n                    {metrics.security.riskLevel.toUpperCase()}\n                  </Badge>\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <span>Eventos de Seguridad</span>\n                  <span className=\"font-bold\">{formatNumber(metrics.security.securityEvents)}</span>\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <span>Requests Bloqueados</span>\n                  <span className=\"font-bold\">{formatNumber(metrics.security.blockedRequests)}</span>\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <span>Fallos de Auth</span>\n                  <span className=\"font-bold\">{formatNumber(metrics.security.authFailures)}</span>\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2\">\n                  <Activity className=\"h-5 w-5\" />\n                  <span>Infraestructura</span>\n                </CardTitle>\n                <CardDescription>Estado de los servicios</CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"flex items-center justify-between\">\n                  <span>Circuit Breaker</span>\n                  <span className={`font-bold ${getStatusColor(metrics.infrastructure.circuitBreakerStatus)}`}>\n                    {metrics.infrastructure.circuitBreakerStatus.toUpperCase()}\n                  </span>\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <span>Cache Hit Rate</span>\n                  <span className=\"font-bold\">\n                    {formatNumber(metrics.infrastructure.cacheHitRate * 100, 1)}%\n                  </span>\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <span>DB Connections</span>\n                  <span className=\"font-bold\">{formatNumber(metrics.infrastructure.databaseConnections)}</span>\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <span>Memory Usage</span>\n                  <span className=\"font-bold\">\n                    {formatNumber(metrics.infrastructure.memoryUsage * 100, 1)}%\n                  </span>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n"],"names":["RealTimeMonitoringDashboard","metrics","setMetrics","useState","alerts","setAlerts","trends","setTrends","isLoading","setIsLoading","isPaused","setIsPaused","lastUpdate","setLastUpdate","error","setError","REFRESH_INTERVAL","fetchMetrics","useCallback","response","fetch","method","headers","ok","Error","status","statusText","data","json","success","prev","Date","err","console","message","useEffect","interval","setInterval","clearInterval","togglePause","handleManualRefresh","getAlertColor","level","getStatusColor","formatNumber","num","decimals","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","format","formatCurrency","amount","style","currency","div","className","RefreshCw","span","h1","p","Button","variant","size","onClick","Play","Pause","disabled","toLocaleTimeString","Alert","AlertTriangle","AlertTitle","AlertDescription","length","Card","CardHeader","CardTitle","CardContent","slice","map","alert","Badge","toUpperCase","metric","value","threshold","timestamp","id","Clock","performance","responseTime","errorRate","Activity","throughput","CheckCircle","uptime","DollarSign","business","totalRevenue","TrendingUp","ordersToday","conversionRate","Users","activeUsers","Shield","CardDescription","security","riskLevel","securityEvents","blockedRequests","authFailures","infrastructure","circuitBreakerStatus","cacheHitRate","databaseConnections","memoryUsage"],"mappings":"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"}