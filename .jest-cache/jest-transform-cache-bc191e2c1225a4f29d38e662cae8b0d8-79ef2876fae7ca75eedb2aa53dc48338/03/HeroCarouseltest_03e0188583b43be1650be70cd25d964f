d3028f9ac78a346dd6c89cb6b332a2ae
"use strict";
// Mock de Swiper
jest.mock('swiper/react', ()=>({
        Swiper: ({ children, className, ...props })=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: className,
                "data-testid": "swiper",
                ...props,
                children: children
            }),
        SwiperSlide: ({ children })=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                "data-testid": "swiper-slide",
                children: children
            })
    }));
// Mock de módulos de Swiper
jest.mock('swiper/modules', ()=>({
        Autoplay: 'Autoplay',
        Pagination: 'Pagination',
        Navigation: 'Navigation',
        EffectFade: 'EffectFade'
    }));
// Mock de Next.js Image
jest.mock('next/image', ()=>{
    return function MockImage({ src, alt, className, priority, ...props }) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)("img", {
            src: src,
            alt: alt,
            className: className,
            "data-priority": priority,
            ...props
        });
    };
});
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_default(require("react"));
const _react1 = require("@testing-library/react");
require("@testing-library/jest-dom");
const _HeroCarousel = /*#__PURE__*/ _interop_require_default(require("../../components/Home/Hero/HeroCarousel"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
describe('HeroCarousel', ()=>{
    beforeEach(()=>{
        // Limpiar mocks antes de cada test
        jest.clearAllMocks();
    });
    it('should render without crashing', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_HeroCarousel.default, {}));
        expect(_react1.screen.getByTestId('swiper')).toBeInTheDocument();
    });
    it('should render all hero images', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_HeroCarousel.default, {}));
        const images = _react1.screen.getAllByRole('img');
        expect(images).toHaveLength(4);
        // Verificar que las imágenes tienen las rutas correctas
        expect(images[0]).toHaveAttribute('src', '/images/hero/hero-01.png');
        expect(images[1]).toHaveAttribute('src', '/images/hero/hero-02.png');
        expect(images[2]).toHaveAttribute('src', '/images/hero/hero-03.png');
        expect(images[3]).toHaveAttribute('src', '/images/hero/hero-04.png');
    });
    it('should have correct alt texts for accessibility', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_HeroCarousel.default, {}));
        expect(_react1.screen.getByAltText('Pintá rápido, fácil y cotiza al instante - Imagen 1')).toBeInTheDocument();
        expect(_react1.screen.getByAltText('Pintá rápido, fácil y cotiza al instante - Imagen 2')).toBeInTheDocument();
        expect(_react1.screen.getByAltText('Pintá rápido, fácil y cotiza al instante - Imagen 3')).toBeInTheDocument();
        expect(_react1.screen.getByAltText('Pintá rápido, fácil y cotiza al instante - Imagen 4')).toBeInTheDocument();
    });
    it('should render navigation buttons', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_HeroCarousel.default, {}));
        const prevButton = _react1.screen.getByLabelText('Imagen anterior');
        const nextButton = _react1.screen.getByLabelText('Siguiente imagen');
        expect(prevButton).toBeInTheDocument();
        expect(nextButton).toBeInTheDocument();
    });
    it('should have proper ARIA label for accessibility', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_HeroCarousel.default, {}));
        const swiper = _react1.screen.getByTestId('swiper');
        expect(swiper).toHaveAttribute('aria-label', 'Carrusel de imágenes principales de Pinteya');
    });
    it('should apply custom className when provided', ()=>{
        const customClass = 'custom-carousel-class';
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_HeroCarousel.default, {
            className: customClass
        }));
        const container = _react1.screen.getByTestId('swiper').parentElement;
        expect(container).toHaveClass(customClass);
    });
    it('should handle mouse enter and leave events', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_HeroCarousel.default, {}));
        const container = _react1.screen.getByTestId('swiper').parentElement;
        // Simular mouse enter
        _react1.fireEvent.mouseEnter(container);
        // Simular mouse leave
        _react1.fireEvent.mouseLeave(container);
        // El test pasa si no hay errores
        expect(container).toBeInTheDocument();
    });
    it('should have priority loading for first image only', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_HeroCarousel.default, {}));
        const images = _react1.screen.getAllByRole('img');
        // Solo la primera imagen debe tener priority
        expect(images[0]).toHaveAttribute('data-priority', 'true');
        expect(images[1]).toHaveAttribute('data-priority', 'false');
        expect(images[2]).toHaveAttribute('data-priority', 'false');
        expect(images[3]).toHaveAttribute('data-priority', 'false');
    });
    it('should render swiper slides', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_HeroCarousel.default, {}));
        const slides = _react1.screen.getAllByTestId('swiper-slide');
        expect(slides).toHaveLength(4);
    });
    it('should have proper CSS classes for styling', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_HeroCarousel.default, {}));
        const swiper = _react1.screen.getByTestId('swiper');
        expect(swiper).toHaveClass('hero-carousel-swiper');
        expect(swiper).toHaveClass('w-full');
        expect(swiper).toHaveClass('h-full');
    });
    it('should render navigation buttons with correct classes', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_HeroCarousel.default, {}));
        const prevButton = _react1.screen.getByLabelText('Imagen anterior');
        const nextButton = _react1.screen.getByLabelText('Siguiente imagen');
        expect(prevButton).toHaveClass('hero-carousel-prev');
        expect(nextButton).toHaveClass('hero-carousel-next');
    });
    it('should have responsive behavior classes', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_HeroCarousel.default, {}));
        const prevButton = _react1.screen.getByLabelText('Imagen anterior');
        const nextButton = _react1.screen.getByLabelText('Siguiente imagen');
        // Los botones deben estar ocultos en mobile
        expect(prevButton).toHaveClass('hidden', 'lg:flex');
        expect(nextButton).toHaveClass('hidden', 'lg:flex');
    });
});

//# sourceMappingURL=data:application/json;base64,