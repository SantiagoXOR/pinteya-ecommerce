db092feb6bb9404c24eb3c88523c7d51
"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: Object.getOwnPropertyDescriptor(all, name).get
    });
}
_export(exports, {
    get BottomNavigation () {
        return BottomNavigation;
    },
    get bottomNavigationVariants () {
        return bottomNavigationVariants;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _classvarianceauthority = require("class-variance-authority");
const _utils = require("../../lib/utils");
const _link = /*#__PURE__*/ _interop_require_default(require("next/link"));
const _navigation = require("next/navigation");
const _lucidereact = require("lucide-react");
const _store = require("../../redux/store");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const bottomNavigationVariants = (0, _classvarianceauthority.cva)("fixed bottom-0 left-0 right-0 z-bottom-nav border-t shadow-lg backdrop-blur-sm", {
    variants: {
        variant: {
            default: "bg-white/95 border-gray-200",
            warm: "bg-orange-50/95 border-orange-100",
            dark: "bg-gray-900/95 border-gray-700",
            primary: "bg-primary/5 border-primary/20"
        }
    },
    defaultVariants: {
        variant: "warm"
    }
});
const bottomNavigationItemVariants = (0, _classvarianceauthority.cva)("flex flex-col items-center justify-center py-3 px-2 min-h-[68px] transition-all duration-300 relative group", {
    variants: {
        active: {
            true: "text-primary-700",
            false: "text-gray-700 hover:text-gray-900"
        }
    },
    defaultVariants: {
        active: false
    }
});
// Items por defecto para Pinteya E-commerce
const defaultItems = [
    {
        id: "home",
        label: "Inicio",
        href: "/",
        icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Home, {
            className: "w-5 h-5 fill-current",
            strokeWidth: 1.5
        })
    },
    {
        id: "offers",
        label: "Ofertas",
        href: "/shop",
        icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Percent, {
            className: "w-5 h-5",
            strokeWidth: 2
        })
    },
    {
        id: "orders",
        label: "Órdenes",
        href: "/orders",
        icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.ClipboardList, {
            className: "w-5 h-5",
            strokeWidth: 1.5
        })
    },
    {
        id: "calculator",
        label: "Cotizador",
        href: "/calculator",
        icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Calculator, {
            className: "w-5 h-5",
            strokeWidth: 1.5
        })
    },
    {
        id: "menu",
        label: "Menú",
        href: "/menu",
        icon: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Menu, {
            className: "w-5 h-5",
            strokeWidth: 2
        })
    }
];
const BottomNavigation = /*#__PURE__*/ _react.forwardRef(({ className, variant, items = defaultItems, showLabels = true, maxItems = 5, ...props }, ref)=>{
    const pathname = (0, _navigation.usePathname)();
    const cartItems = (0, _store.useAppSelector)((state)=>state.cartReducer.items);
    // Limitar items al máximo especificado
    const displayItems = items.slice(0, maxItems);
    // Función para determinar si un item está activo
    const isActive = (href)=>{
        if (href === "/") {
            return pathname === "/";
        }
        // Evitar que /menu active otros paths y viceversa
        if (href === "/menu") {
            return pathname === "/menu";
        }
        // Para otros paths, verificar que no sea menu y que coincida
        if (pathname === "/menu") {
            return false;
        }
        return pathname.startsWith(href);
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsx)("nav", {
        ref: ref,
        className: (0, _utils.cn)(bottomNavigationVariants({
            variant
        }), className),
        ...props,
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
            className: "flex items-center justify-around max-w-md mx-auto w-full bottom-nav-container",
            children: displayItems.map((item)=>{
                const active = isActive(item.href);
                const badge = item.id === "orders" ? cartItems.length : item.badge;
                const showBadge = badge && badge > 0;
                const showDot = !showBadge && item.id === "orders" && cartItems.length === 0;
                return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_link.default, {
                    href: item.href,
                    className: (0, _utils.cn)(bottomNavigationItemVariants({
                        active
                    }), item.disabled && "opacity-50 pointer-events-none", "flex-1 max-w-[85px] bottom-nav-item", active && "bottom-nav-item-active"),
                    "aria-label": item.label,
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: (0, _utils.cn)("relative flex items-center justify-center transition-all duration-300", active ? "bg-primary/15 rounded-full p-2 mb-1 shadow-sm" : "mb-2 hover:bg-gray-100/50 rounded-full p-2"),
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                    className: (0, _utils.cn)("transition-all duration-300", active ? "scale-110" : "scale-100"),
                                    children: /*#__PURE__*/ _react.cloneElement(item.icon, {
                                        className: (0, _utils.cn)("transition-all duration-300", active ? "w-6 h-6 text-primary-700" : "w-5 h-5")
                                    })
                                }),
                                showBadge && /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                    className: (0, _utils.cn)("absolute -top-1 -right-1 bg-primary text-white text-xs font-bold rounded-full min-w-[18px] h-[18px] flex items-center justify-center px-1 shadow-sm", badge && badge > 0 && "bottom-nav-badge-pulse"),
                                    children: badge && badge > 99 ? "99+" : badge
                                }),
                                showDot && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                    className: "absolute -top-0.5 -right-0.5 w-1.5 h-1.5 bg-primary/60 rounded-full"
                                })
                            ]
                        }),
                        showLabels && /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                            className: (0, _utils.cn)("text-xs leading-tight font-medium transition-all duration-300 bottom-nav-text-shadow", active ? "text-primary-800 font-bold" // Texto más oscuro y bold para mejor contraste
                             : "text-gray-700 group-hover:text-gray-900"),
                            children: item.label
                        })
                    ]
                }, item.id);
            })
        })
    });
});
BottomNavigation.displayName = "BottomNavigation";

//# sourceMappingURL=data:application/json;base64,