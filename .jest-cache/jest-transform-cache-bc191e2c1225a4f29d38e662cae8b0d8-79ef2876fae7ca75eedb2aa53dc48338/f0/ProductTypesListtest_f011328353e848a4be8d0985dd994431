c7b06b0534d21f963823ef15c9df435b
// ===================================
// PINTEYA E-COMMERCE - TESTS PARA PRODUCT TYPES LIST
// ===================================
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_default(require("react"));
const _react1 = require("@testing-library/react");
const _ProductTypesList = /*#__PURE__*/ _interop_require_default(require("../../components/ShopWithSidebar/ProductTypesList"));
const _shop = require("../../constants/shop");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
const mockOnCategorySelect = jest.fn();
const defaultProps = {
    onCategorySelect: mockOnCategorySelect,
    selectedCategory: ''
};
beforeEach(()=>{
    mockOnCategorySelect.mockClear();
});
describe('ProductTypesList', ()=>{
    it('should render component title', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_ProductTypesList.default, {
            ...defaultProps
        }));
        expect(_react1.screen.getByText('Tipos de Productos')).toBeInTheDocument();
    });
    it('should render all product categories', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_ProductTypesList.default, {
            ...defaultProps
        }));
        Object.values(_shop.PRODUCT_CATEGORIES).forEach((category)=>{
            expect(_react1.screen.getByText(category.name)).toBeInTheDocument();
        });
    });
    it('should render category buttons', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_ProductTypesList.default, {
            ...defaultProps
        }));
        const buttons = _react1.screen.getAllByRole('button');
        expect(buttons).toHaveLength(Object.keys(_shop.PRODUCT_CATEGORIES).length);
    });
    it('should call onCategorySelect when category is clicked', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_ProductTypesList.default, {
            ...defaultProps
        }));
        const pinturaButton = _react1.screen.getByText('Pinturas');
        _react1.fireEvent.click(pinturaButton);
        expect(mockOnCategorySelect).toHaveBeenCalledWith('pinturas');
    });
    it('should highlight selected category', ()=>{
        const propsWithSelected = {
            ...defaultProps,
            selectedCategory: 'pinturas'
        };
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_ProductTypesList.default, {
            ...propsWithSelected
        }));
        const pinturaButton = _react1.screen.getByText('Pinturas').closest('button');
        expect(pinturaButton).toHaveClass('bg-primary', 'text-white');
    });
    it('should not highlight unselected categories', ()=>{
        const propsWithSelected = {
            ...defaultProps,
            selectedCategory: 'pinturas'
        };
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_ProductTypesList.default, {
            ...propsWithSelected
        }));
        const herramientasButton = _react1.screen.getByText('Herramientas').closest('button');
        expect(herramientasButton).not.toHaveClass('bg-primary', 'text-white');
        expect(herramientasButton).toHaveClass('hover:bg-gray-100');
    });
    it('should show category descriptions in title attribute', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_ProductTypesList.default, {
            ...defaultProps
        }));
        Object.values(_shop.PRODUCT_CATEGORIES).forEach((category)=>{
            const button = _react1.screen.getByText(category.name).closest('button');
            expect(button).toHaveAttribute('title', category.description);
        });
    });
    it('should handle multiple category selections', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_ProductTypesList.default, {
            ...defaultProps
        }));
        const pinturaButton = _react1.screen.getByText('Pinturas');
        const herramientasButton = _react1.screen.getByText('Herramientas');
        _react1.fireEvent.click(pinturaButton);
        expect(mockOnCategorySelect).toHaveBeenCalledWith('pinturas');
        _react1.fireEvent.click(herramientasButton);
        expect(mockOnCategorySelect).toHaveBeenCalledWith('herramientas');
        expect(mockOnCategorySelect).toHaveBeenCalledTimes(2);
    });
    it('should render with proper accessibility attributes', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_ProductTypesList.default, {
            ...defaultProps
        }));
        const buttons = _react1.screen.getAllByRole('button');
        buttons.forEach((button)=>{
            expect(button).toBeInTheDocument();
            expect(button).toHaveAttribute('title');
        });
    });
    it('should handle empty selected category', ()=>{
        const propsWithEmpty = {
            ...defaultProps,
            selectedCategory: ''
        };
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_ProductTypesList.default, {
            ...propsWithEmpty
        }));
        const buttons = _react1.screen.getAllByRole('button');
        buttons.forEach((button)=>{
            expect(button).not.toHaveClass('bg-primary', 'text-white');
        });
    });
    it('should handle invalid selected category', ()=>{
        const propsWithInvalid = {
            ...defaultProps,
            selectedCategory: 'invalid-category'
        };
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_ProductTypesList.default, {
            ...propsWithInvalid
        }));
        const buttons = _react1.screen.getAllByRole('button');
        buttons.forEach((button)=>{
            expect(button).not.toHaveClass('bg-primary', 'text-white');
        });
    });
    it('should maintain consistent styling', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_ProductTypesList.default, {
            ...defaultProps
        }));
        const container = _react1.screen.getByText('Tipos de Productos').closest('div');
        expect(container).toHaveClass('mb-7.5');
        const title = _react1.screen.getByText('Tipos de Productos');
        expect(title).toHaveClass('font-medium', 'text-dark', 'text-lg', 'mb-4');
        const list = _react1.screen.getByRole('list', {
            hidden: true
        });
        expect(list).toHaveClass('space-y-2');
    });
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbWFydGlcXERlc2t0b3BcXERFU0FSUk9MTE9TV1xcQk9JTEVSUExBVFRFIEUtQ09NTUVSQ0VcXHNyY1xcX190ZXN0c19fXFxjb21wb25lbnRzXFxQcm9kdWN0VHlwZXNMaXN0LnRlc3QudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBQSU5URVlBIEUtQ09NTUVSQ0UgLSBURVNUUyBQQVJBIFBST0RVQ1QgVFlQRVMgTElTVFxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHJlbmRlciwgc2NyZWVuLCBmaXJlRXZlbnQgfSBmcm9tICdAdGVzdGluZy1saWJyYXJ5L3JlYWN0JztcbmltcG9ydCBQcm9kdWN0VHlwZXNMaXN0IGZyb20gJ0AvY29tcG9uZW50cy9TaG9wV2l0aFNpZGViYXIvUHJvZHVjdFR5cGVzTGlzdCc7XG5pbXBvcnQgeyBQUk9EVUNUX0NBVEVHT1JJRVMgfSBmcm9tICdAL2NvbnN0YW50cy9zaG9wJztcblxuY29uc3QgbW9ja09uQ2F0ZWdvcnlTZWxlY3QgPSBqZXN0LmZuKCk7XG5cbmNvbnN0IGRlZmF1bHRQcm9wcyA9IHtcbiAgb25DYXRlZ29yeVNlbGVjdDogbW9ja09uQ2F0ZWdvcnlTZWxlY3QsXG4gIHNlbGVjdGVkQ2F0ZWdvcnk6ICcnLFxufTtcblxuYmVmb3JlRWFjaCgoKSA9PiB7XG4gIG1vY2tPbkNhdGVnb3J5U2VsZWN0Lm1vY2tDbGVhcigpO1xufSk7XG5cbmRlc2NyaWJlKCdQcm9kdWN0VHlwZXNMaXN0JywgKCkgPT4ge1xuICBpdCgnc2hvdWxkIHJlbmRlciBjb21wb25lbnQgdGl0bGUnLCAoKSA9PiB7XG4gICAgcmVuZGVyKDxQcm9kdWN0VHlwZXNMaXN0IHsuLi5kZWZhdWx0UHJvcHN9IC8+KTtcbiAgICBcbiAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGV4dCgnVGlwb3MgZGUgUHJvZHVjdG9zJykpLnRvQmVJblRoZURvY3VtZW50KCk7XG4gIH0pO1xuXG4gIGl0KCdzaG91bGQgcmVuZGVyIGFsbCBwcm9kdWN0IGNhdGVnb3JpZXMnLCAoKSA9PiB7XG4gICAgcmVuZGVyKDxQcm9kdWN0VHlwZXNMaXN0IHsuLi5kZWZhdWx0UHJvcHN9IC8+KTtcbiAgICBcbiAgICBPYmplY3QudmFsdWVzKFBST0RVQ1RfQ0FURUdPUklFUykuZm9yRWFjaChjYXRlZ29yeSA9PiB7XG4gICAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGV4dChjYXRlZ29yeS5uYW1lKSkudG9CZUluVGhlRG9jdW1lbnQoKTtcbiAgICB9KTtcbiAgfSk7XG5cbiAgaXQoJ3Nob3VsZCByZW5kZXIgY2F0ZWdvcnkgYnV0dG9ucycsICgpID0+IHtcbiAgICByZW5kZXIoPFByb2R1Y3RUeXBlc0xpc3Qgey4uLmRlZmF1bHRQcm9wc30gLz4pO1xuICAgIFxuICAgIGNvbnN0IGJ1dHRvbnMgPSBzY3JlZW4uZ2V0QWxsQnlSb2xlKCdidXR0b24nKTtcbiAgICBleHBlY3QoYnV0dG9ucykudG9IYXZlTGVuZ3RoKE9iamVjdC5rZXlzKFBST0RVQ1RfQ0FURUdPUklFUykubGVuZ3RoKTtcbiAgfSk7XG5cbiAgaXQoJ3Nob3VsZCBjYWxsIG9uQ2F0ZWdvcnlTZWxlY3Qgd2hlbiBjYXRlZ29yeSBpcyBjbGlja2VkJywgKCkgPT4ge1xuICAgIHJlbmRlcig8UHJvZHVjdFR5cGVzTGlzdCB7Li4uZGVmYXVsdFByb3BzfSAvPik7XG4gICAgXG4gICAgY29uc3QgcGludHVyYUJ1dHRvbiA9IHNjcmVlbi5nZXRCeVRleHQoJ1BpbnR1cmFzJyk7XG4gICAgZmlyZUV2ZW50LmNsaWNrKHBpbnR1cmFCdXR0b24pO1xuICAgIFxuICAgIGV4cGVjdChtb2NrT25DYXRlZ29yeVNlbGVjdCkudG9IYXZlQmVlbkNhbGxlZFdpdGgoJ3BpbnR1cmFzJyk7XG4gIH0pO1xuXG4gIGl0KCdzaG91bGQgaGlnaGxpZ2h0IHNlbGVjdGVkIGNhdGVnb3J5JywgKCkgPT4ge1xuICAgIGNvbnN0IHByb3BzV2l0aFNlbGVjdGVkID0ge1xuICAgICAgLi4uZGVmYXVsdFByb3BzLFxuICAgICAgc2VsZWN0ZWRDYXRlZ29yeTogJ3BpbnR1cmFzJyxcbiAgICB9O1xuICAgIFxuICAgIHJlbmRlcig8UHJvZHVjdFR5cGVzTGlzdCB7Li4ucHJvcHNXaXRoU2VsZWN0ZWR9IC8+KTtcbiAgICBcbiAgICBjb25zdCBwaW50dXJhQnV0dG9uID0gc2NyZWVuLmdldEJ5VGV4dCgnUGludHVyYXMnKS5jbG9zZXN0KCdidXR0b24nKTtcbiAgICBleHBlY3QocGludHVyYUJ1dHRvbikudG9IYXZlQ2xhc3MoJ2JnLXByaW1hcnknLCAndGV4dC13aGl0ZScpO1xuICB9KTtcblxuICBpdCgnc2hvdWxkIG5vdCBoaWdobGlnaHQgdW5zZWxlY3RlZCBjYXRlZ29yaWVzJywgKCkgPT4ge1xuICAgIGNvbnN0IHByb3BzV2l0aFNlbGVjdGVkID0ge1xuICAgICAgLi4uZGVmYXVsdFByb3BzLFxuICAgICAgc2VsZWN0ZWRDYXRlZ29yeTogJ3BpbnR1cmFzJyxcbiAgICB9O1xuICAgIFxuICAgIHJlbmRlcig8UHJvZHVjdFR5cGVzTGlzdCB7Li4ucHJvcHNXaXRoU2VsZWN0ZWR9IC8+KTtcbiAgICBcbiAgICBjb25zdCBoZXJyYW1pZW50YXNCdXR0b24gPSBzY3JlZW4uZ2V0QnlUZXh0KCdIZXJyYW1pZW50YXMnKS5jbG9zZXN0KCdidXR0b24nKTtcbiAgICBleHBlY3QoaGVycmFtaWVudGFzQnV0dG9uKS5ub3QudG9IYXZlQ2xhc3MoJ2JnLXByaW1hcnknLCAndGV4dC13aGl0ZScpO1xuICAgIGV4cGVjdChoZXJyYW1pZW50YXNCdXR0b24pLnRvSGF2ZUNsYXNzKCdob3ZlcjpiZy1ncmF5LTEwMCcpO1xuICB9KTtcblxuICBpdCgnc2hvdWxkIHNob3cgY2F0ZWdvcnkgZGVzY3JpcHRpb25zIGluIHRpdGxlIGF0dHJpYnV0ZScsICgpID0+IHtcbiAgICByZW5kZXIoPFByb2R1Y3RUeXBlc0xpc3Qgey4uLmRlZmF1bHRQcm9wc30gLz4pO1xuICAgIFxuICAgIE9iamVjdC52YWx1ZXMoUFJPRFVDVF9DQVRFR09SSUVTKS5mb3JFYWNoKGNhdGVnb3J5ID0+IHtcbiAgICAgIGNvbnN0IGJ1dHRvbiA9IHNjcmVlbi5nZXRCeVRleHQoY2F0ZWdvcnkubmFtZSkuY2xvc2VzdCgnYnV0dG9uJyk7XG4gICAgICBleHBlY3QoYnV0dG9uKS50b0hhdmVBdHRyaWJ1dGUoJ3RpdGxlJywgY2F0ZWdvcnkuZGVzY3JpcHRpb24pO1xuICAgIH0pO1xuICB9KTtcblxuICBpdCgnc2hvdWxkIGhhbmRsZSBtdWx0aXBsZSBjYXRlZ29yeSBzZWxlY3Rpb25zJywgKCkgPT4ge1xuICAgIHJlbmRlcig8UHJvZHVjdFR5cGVzTGlzdCB7Li4uZGVmYXVsdFByb3BzfSAvPik7XG4gICAgXG4gICAgY29uc3QgcGludHVyYUJ1dHRvbiA9IHNjcmVlbi5nZXRCeVRleHQoJ1BpbnR1cmFzJyk7XG4gICAgY29uc3QgaGVycmFtaWVudGFzQnV0dG9uID0gc2NyZWVuLmdldEJ5VGV4dCgnSGVycmFtaWVudGFzJyk7XG4gICAgXG4gICAgZmlyZUV2ZW50LmNsaWNrKHBpbnR1cmFCdXR0b24pO1xuICAgIGV4cGVjdChtb2NrT25DYXRlZ29yeVNlbGVjdCkudG9IYXZlQmVlbkNhbGxlZFdpdGgoJ3BpbnR1cmFzJyk7XG4gICAgXG4gICAgZmlyZUV2ZW50LmNsaWNrKGhlcnJhbWllbnRhc0J1dHRvbik7XG4gICAgZXhwZWN0KG1vY2tPbkNhdGVnb3J5U2VsZWN0KS50b0hhdmVCZWVuQ2FsbGVkV2l0aCgnaGVycmFtaWVudGFzJyk7XG4gICAgXG4gICAgZXhwZWN0KG1vY2tPbkNhdGVnb3J5U2VsZWN0KS50b0hhdmVCZWVuQ2FsbGVkVGltZXMoMik7XG4gIH0pO1xuXG4gIGl0KCdzaG91bGQgcmVuZGVyIHdpdGggcHJvcGVyIGFjY2Vzc2liaWxpdHkgYXR0cmlidXRlcycsICgpID0+IHtcbiAgICByZW5kZXIoPFByb2R1Y3RUeXBlc0xpc3Qgey4uLmRlZmF1bHRQcm9wc30gLz4pO1xuICAgIFxuICAgIGNvbnN0IGJ1dHRvbnMgPSBzY3JlZW4uZ2V0QWxsQnlSb2xlKCdidXR0b24nKTtcbiAgICBidXR0b25zLmZvckVhY2goYnV0dG9uID0+IHtcbiAgICAgIGV4cGVjdChidXR0b24pLnRvQmVJblRoZURvY3VtZW50KCk7XG4gICAgICBleHBlY3QoYnV0dG9uKS50b0hhdmVBdHRyaWJ1dGUoJ3RpdGxlJyk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIGl0KCdzaG91bGQgaGFuZGxlIGVtcHR5IHNlbGVjdGVkIGNhdGVnb3J5JywgKCkgPT4ge1xuICAgIGNvbnN0IHByb3BzV2l0aEVtcHR5ID0ge1xuICAgICAgLi4uZGVmYXVsdFByb3BzLFxuICAgICAgc2VsZWN0ZWRDYXRlZ29yeTogJycsXG4gICAgfTtcbiAgICBcbiAgICByZW5kZXIoPFByb2R1Y3RUeXBlc0xpc3Qgey4uLnByb3BzV2l0aEVtcHR5fSAvPik7XG4gICAgXG4gICAgY29uc3QgYnV0dG9ucyA9IHNjcmVlbi5nZXRBbGxCeVJvbGUoJ2J1dHRvbicpO1xuICAgIGJ1dHRvbnMuZm9yRWFjaChidXR0b24gPT4ge1xuICAgICAgZXhwZWN0KGJ1dHRvbikubm90LnRvSGF2ZUNsYXNzKCdiZy1wcmltYXJ5JywgJ3RleHQtd2hpdGUnKTtcbiAgICB9KTtcbiAgfSk7XG5cbiAgaXQoJ3Nob3VsZCBoYW5kbGUgaW52YWxpZCBzZWxlY3RlZCBjYXRlZ29yeScsICgpID0+IHtcbiAgICBjb25zdCBwcm9wc1dpdGhJbnZhbGlkID0ge1xuICAgICAgLi4uZGVmYXVsdFByb3BzLFxuICAgICAgc2VsZWN0ZWRDYXRlZ29yeTogJ2ludmFsaWQtY2F0ZWdvcnknLFxuICAgIH07XG4gICAgXG4gICAgcmVuZGVyKDxQcm9kdWN0VHlwZXNMaXN0IHsuLi5wcm9wc1dpdGhJbnZhbGlkfSAvPik7XG4gICAgXG4gICAgY29uc3QgYnV0dG9ucyA9IHNjcmVlbi5nZXRBbGxCeVJvbGUoJ2J1dHRvbicpO1xuICAgIGJ1dHRvbnMuZm9yRWFjaChidXR0b24gPT4ge1xuICAgICAgZXhwZWN0KGJ1dHRvbikubm90LnRvSGF2ZUNsYXNzKCdiZy1wcmltYXJ5JywgJ3RleHQtd2hpdGUnKTtcbiAgICB9KTtcbiAgfSk7XG5cbiAgaXQoJ3Nob3VsZCBtYWludGFpbiBjb25zaXN0ZW50IHN0eWxpbmcnLCAoKSA9PiB7XG4gICAgcmVuZGVyKDxQcm9kdWN0VHlwZXNMaXN0IHsuLi5kZWZhdWx0UHJvcHN9IC8+KTtcbiAgICBcbiAgICBjb25zdCBjb250YWluZXIgPSBzY3JlZW4uZ2V0QnlUZXh0KCdUaXBvcyBkZSBQcm9kdWN0b3MnKS5jbG9zZXN0KCdkaXYnKTtcbiAgICBleHBlY3QoY29udGFpbmVyKS50b0hhdmVDbGFzcygnbWItNy41Jyk7XG4gICAgXG4gICAgY29uc3QgdGl0bGUgPSBzY3JlZW4uZ2V0QnlUZXh0KCdUaXBvcyBkZSBQcm9kdWN0b3MnKTtcbiAgICBleHBlY3QodGl0bGUpLnRvSGF2ZUNsYXNzKCdmb250LW1lZGl1bScsICd0ZXh0LWRhcmsnLCAndGV4dC1sZycsICdtYi00Jyk7XG4gICAgXG4gICAgY29uc3QgbGlzdCA9IHNjcmVlbi5nZXRCeVJvbGUoJ2xpc3QnLCB7IGhpZGRlbjogdHJ1ZSB9KTtcbiAgICBleHBlY3QobGlzdCkudG9IYXZlQ2xhc3MoJ3NwYWNlLXktMicpO1xuICB9KTtcbn0pO1xuIl0sIm5hbWVzIjpbIm1vY2tPbkNhdGVnb3J5U2VsZWN0IiwiamVzdCIsImZuIiwiZGVmYXVsdFByb3BzIiwib25DYXRlZ29yeVNlbGVjdCIsInNlbGVjdGVkQ2F0ZWdvcnkiLCJiZWZvcmVFYWNoIiwibW9ja0NsZWFyIiwiZGVzY3JpYmUiLCJpdCIsInJlbmRlciIsIlByb2R1Y3RUeXBlc0xpc3QiLCJleHBlY3QiLCJzY3JlZW4iLCJnZXRCeVRleHQiLCJ0b0JlSW5UaGVEb2N1bWVudCIsIk9iamVjdCIsInZhbHVlcyIsIlBST0RVQ1RfQ0FURUdPUklFUyIsImZvckVhY2giLCJjYXRlZ29yeSIsIm5hbWUiLCJidXR0b25zIiwiZ2V0QWxsQnlSb2xlIiwidG9IYXZlTGVuZ3RoIiwia2V5cyIsImxlbmd0aCIsInBpbnR1cmFCdXR0b24iLCJmaXJlRXZlbnQiLCJjbGljayIsInRvSGF2ZUJlZW5DYWxsZWRXaXRoIiwicHJvcHNXaXRoU2VsZWN0ZWQiLCJjbG9zZXN0IiwidG9IYXZlQ2xhc3MiLCJoZXJyYW1pZW50YXNCdXR0b24iLCJub3QiLCJidXR0b24iLCJ0b0hhdmVBdHRyaWJ1dGUiLCJkZXNjcmlwdGlvbiIsInRvSGF2ZUJlZW5DYWxsZWRUaW1lcyIsInByb3BzV2l0aEVtcHR5IiwicHJvcHNXaXRoSW52YWxpZCIsImNvbnRhaW5lciIsInRpdGxlIiwibGlzdCIsImdldEJ5Um9sZSIsImhpZGRlbiJdLCJtYXBwaW5ncyI6IkFBQUEsc0NBQXNDO0FBQ3RDLHFEQUFxRDtBQUNyRCxzQ0FBc0M7Ozs7Ozs4REFFcEI7d0JBQ3dCO3lFQUNiO3NCQUNNOzs7Ozs7QUFFbkMsTUFBTUEsdUJBQXVCQyxLQUFLQyxFQUFFO0FBRXBDLE1BQU1DLGVBQWU7SUFDbkJDLGtCQUFrQko7SUFDbEJLLGtCQUFrQjtBQUNwQjtBQUVBQyxXQUFXO0lBQ1ROLHFCQUFxQk8sU0FBUztBQUNoQztBQUVBQyxTQUFTLG9CQUFvQjtJQUMzQkMsR0FBRyxpQ0FBaUM7UUFDbENDLElBQUFBLGNBQU0sZ0JBQUMscUJBQUNDLHlCQUFnQjtZQUFFLEdBQUdSLFlBQVk7O1FBRXpDUyxPQUFPQyxjQUFNLENBQUNDLFNBQVMsQ0FBQyx1QkFBdUJDLGlCQUFpQjtJQUNsRTtJQUVBTixHQUFHLHdDQUF3QztRQUN6Q0MsSUFBQUEsY0FBTSxnQkFBQyxxQkFBQ0MseUJBQWdCO1lBQUUsR0FBR1IsWUFBWTs7UUFFekNhLE9BQU9DLE1BQU0sQ0FBQ0Msd0JBQWtCLEVBQUVDLE9BQU8sQ0FBQ0MsQ0FBQUE7WUFDeENSLE9BQU9DLGNBQU0sQ0FBQ0MsU0FBUyxDQUFDTSxTQUFTQyxJQUFJLEdBQUdOLGlCQUFpQjtRQUMzRDtJ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