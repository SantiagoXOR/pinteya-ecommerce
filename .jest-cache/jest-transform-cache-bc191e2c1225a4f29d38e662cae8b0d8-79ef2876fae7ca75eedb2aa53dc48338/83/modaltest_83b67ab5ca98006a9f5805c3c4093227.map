{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\__tests__\\components\\ui\\modal.test.tsx"],"sourcesContent":["import { render, screen, fireEvent, waitFor } from '@testing-library/react'\r\nimport userEvent from '@testing-library/user-event'\r\nimport { Modal, ConfirmModal, QuickViewModal, AddToCartModal, useModal } from '@/components/ui/modal'\r\nimport { Button } from '@/components/ui/button'\r\n\r\n// Mock para Radix UI Portal\r\njest.mock('@radix-ui/react-dialog', () => ({\r\n  ...jest.requireActual('@radix-ui/react-dialog'),\r\n  Portal: ({ children }: { children: React.ReactNode }) => <div data-testid=\"portal\">{children}</div>,\r\n}))\r\n\r\njest.mock('@radix-ui/react-alert-dialog', () => ({\r\n  ...jest.requireActual('@radix-ui/react-alert-dialog'),\r\n  Portal: ({ children }: { children: React.ReactNode }) => <div data-testid=\"alert-portal\">{children}</div>,\r\n}))\r\n\r\ndescribe('Modal Components', () => {\r\n  describe('Modal', () => {\r\n    it('renders with title and description', () => {\r\n      render(\r\n        <Modal\r\n          open={true}\r\n          title=\"Test Modal\"\r\n          description=\"Test description\"\r\n        >\r\n          <div>Modal content</div>\r\n        </Modal>\r\n      )\r\n\r\n      expect(screen.getByText('Test Modal')).toBeInTheDocument()\r\n      expect(screen.getByText('Test description')).toBeInTheDocument()\r\n      expect(screen.getByText('Modal content')).toBeInTheDocument()\r\n    })\r\n\r\n    it('calls onOpenChange when close button is clicked', async () => {\r\n      const user = userEvent.setup()\r\n      const onOpenChange = jest.fn()\r\n\r\n      render(\r\n        <Modal\r\n          open={true}\r\n          onOpenChange={onOpenChange}\r\n          title=\"Test Modal\"\r\n        >\r\n          <div>Content</div>\r\n        </Modal>\r\n      )\r\n\r\n      const closeButton = screen.getByRole('button', { name: /cerrar/i })\r\n      await user.click(closeButton)\r\n\r\n      expect(onOpenChange).toHaveBeenCalledWith(false)\r\n    })\r\n\r\n    it('renders with different sizes', () => {\r\n      const { rerender } = render(\r\n        <Modal open={true} size=\"sm\" title=\"Small Modal\">\r\n          Content\r\n        </Modal>\r\n      )\r\n\r\n      expect(screen.getByRole('dialog')).toHaveClass('max-w-sm')\r\n\r\n      rerender(\r\n        <Modal open={true} size=\"lg\" title=\"Large Modal\">\r\n          Content\r\n        </Modal>\r\n      )\r\n\r\n      expect(screen.getByRole('dialog')).toHaveClass('max-w-lg')\r\n    })\r\n\r\n    it('renders with trigger', async () => {\r\n      const user = userEvent.setup()\r\n\r\n      render(\r\n        <Modal\r\n          trigger={<Button>Open Modal</Button>}\r\n          title=\"Triggered Modal\"\r\n        >\r\n          Modal content\r\n        </Modal>\r\n      )\r\n\r\n      const trigger = screen.getByRole('button', { name: /open modal/i })\r\n      await user.click(trigger)\r\n\r\n      await waitFor(() => {\r\n        expect(screen.getByText('Triggered Modal')).toBeInTheDocument()\r\n      })\r\n    })\r\n  })\r\n\r\n  describe('ConfirmModal', () => {\r\n    it('renders with correct variant styling', () => {\r\n      render(\r\n        <ConfirmModal\r\n          open={true}\r\n          title=\"Confirm Action\"\r\n          description=\"Are you sure?\"\r\n          variant=\"destructive\"\r\n          confirmText=\"Delete\"\r\n          cancelText=\"Cancel\"\r\n        />\r\n      )\r\n\r\n      expect(screen.getByText('Confirm Action')).toBeInTheDocument()\r\n      expect(screen.getByText('Are you sure?')).toBeInTheDocument()\r\n      expect(screen.getByRole('button', { name: /delete/i })).toBeInTheDocument()\r\n      expect(screen.getByRole('button', { name: /cancel/i })).toBeInTheDocument()\r\n    })\r\n\r\n    it('calls onConfirm when confirm button is clicked', async () => {\r\n      const user = userEvent.setup()\r\n      const onConfirm = jest.fn()\r\n\r\n      render(\r\n        <ConfirmModal\r\n          open={true}\r\n          title=\"Confirm\"\r\n          onConfirm={onConfirm}\r\n          confirmText=\"Confirm\"\r\n        />\r\n      )\r\n\r\n      const confirmButton = screen.getByRole('button', { name: /confirm/i })\r\n      await user.click(confirmButton)\r\n\r\n      expect(onConfirm).toHaveBeenCalled()\r\n    })\r\n\r\n    it('calls onCancel when cancel button is clicked', async () => {\r\n      const user = userEvent.setup()\r\n      const onCancel = jest.fn()\r\n\r\n      render(\r\n        <ConfirmModal\r\n          open={true}\r\n          title=\"Confirm\"\r\n          onCancel={onCancel}\r\n          cancelText=\"Cancel\"\r\n        />\r\n      )\r\n\r\n      const cancelButton = screen.getByRole('button', { name: /cancel/i })\r\n      await user.click(cancelButton)\r\n\r\n      expect(onCancel).toHaveBeenCalled()\r\n    })\r\n\r\n    it('shows loading state', () => {\r\n      render(\r\n        <ConfirmModal\r\n          open={true}\r\n          title=\"Confirm\"\r\n          loading={true}\r\n          confirmText=\"Confirm\"\r\n        />\r\n      )\r\n\r\n      expect(screen.getByText('Procesando...')).toBeInTheDocument()\r\n      expect(screen.getByRole('button', { name: /procesando/i })).toBeDisabled()\r\n    })\r\n\r\n    it('renders different variants with correct icons', () => {\r\n      const variants = ['destructive', 'warning', 'success', 'info'] as const\r\n\r\n      variants.forEach(variant => {\r\n        const { unmount } = render(\r\n          <ConfirmModal\r\n            open={true}\r\n            title={`${variant} modal`}\r\n            variant={variant}\r\n          />\r\n        )\r\n\r\n        // Verificar que el modal se renderiza (el ícono específico es difícil de testear)\r\n        expect(screen.getByText(`${variant} modal`)).toBeInTheDocument()\r\n        unmount()\r\n      })\r\n    })\r\n  })\r\n\r\n  describe('QuickViewModal', () => {\r\n    it('renders with large size by default', () => {\r\n      render(\r\n        <QuickViewModal open={true}>\r\n          <div>Product details</div>\r\n        </QuickViewModal>\r\n      )\r\n\r\n      expect(screen.getByText('Product details')).toBeInTheDocument()\r\n      expect(screen.getByRole('dialog')).toHaveClass('max-w-4xl')\r\n    })\r\n  })\r\n\r\n  describe('AddToCartModal', () => {\r\n    it('renders product information', () => {\r\n      render(\r\n        <AddToCartModal\r\n          open={true}\r\n          productName=\"Test Product\"\r\n          productImage=\"/test-image.jpg\"\r\n        />\r\n      )\r\n\r\n      expect(screen.getByText('¡Producto agregado al carrito!')).toBeInTheDocument()\r\n      expect(screen.getByText(/test product/i)).toBeInTheDocument()\r\n      expect(screen.getByRole('img')).toHaveAttribute('src', '/test-image.jpg')\r\n    })\r\n\r\n    it('calls action handlers', async () => {\r\n      const user = userEvent.setup()\r\n      const onContinueShopping = jest.fn()\r\n      const onGoToCart = jest.fn()\r\n\r\n      render(\r\n        <AddToCartModal\r\n          open={true}\r\n          productName=\"Test Product\"\r\n          onContinueShopping={onContinueShopping}\r\n          onGoToCart={onGoToCart}\r\n        />\r\n      )\r\n\r\n      const continueButton = screen.getByRole('button', { name: /seguir comprando/i })\r\n      const cartButton = screen.getByRole('button', { name: /ver carrito/i })\r\n\r\n      await user.click(continueButton)\r\n      expect(onContinueShopping).toHaveBeenCalled()\r\n\r\n      await user.click(cartButton)\r\n      expect(onGoToCart).toHaveBeenCalled()\r\n    })\r\n  })\r\n\r\n  describe('useModal hook', () => {\r\n    function TestComponent() {\r\n      const { open, openModal, closeModal, toggleModal } = useModal()\r\n\r\n      return (\r\n        <div>\r\n          <span data-testid=\"modal-state\">{open ? 'open' : 'closed'}</span>\r\n          <button onClick={openModal}>Open</button>\r\n          <button onClick={closeModal}>Close</button>\r\n          <button onClick={toggleModal}>Toggle</button>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    it('manages modal state correctly', async () => {\r\n      const user = userEvent.setup()\r\n      render(<TestComponent />)\r\n\r\n      const state = screen.getByTestId('modal-state')\r\n      const openButton = screen.getByRole('button', { name: /open/i })\r\n      const closeButton = screen.getByRole('button', { name: /close/i })\r\n      const toggleButton = screen.getByRole('button', { name: /toggle/i })\r\n\r\n      // Initial state\r\n      expect(state).toHaveTextContent('closed')\r\n\r\n      // Open modal\r\n      await user.click(openButton)\r\n      expect(state).toHaveTextContent('open')\r\n\r\n      // Close modal\r\n      await user.click(closeButton)\r\n      expect(state).toHaveTextContent('closed')\r\n\r\n      // Toggle modal\r\n      await user.click(toggleButton)\r\n      expect(state).toHaveTextContent('open')\r\n\r\n      await user.click(toggleButton)\r\n      expect(state).toHaveTextContent('closed')\r\n    })\r\n\r\n    it('accepts default open state', () => {\r\n      function TestComponentWithDefault() {\r\n        const { open } = useModal(true)\r\n        return <span data-testid=\"modal-state\">{open ? 'open' : 'closed'}</span>\r\n      }\r\n\r\n      render(<TestComponentWithDefault />)\r\n      expect(screen.getByTestId('modal-state')).toHaveTextContent('open')\r\n    })\r\n  })\r\n\r\n  describe('Accessibility', () => {\r\n    it('has proper ARIA attributes', () => {\r\n      render(\r\n        <Modal\r\n          open={true}\r\n          title=\"Accessible Modal\"\r\n          description=\"Modal description\"\r\n        >\r\n          Content\r\n        </Modal>\r\n      )\r\n\r\n      const dialog = screen.getByRole('dialog')\r\n      expect(dialog).toBeInTheDocument()\r\n      expect(dialog).toHaveAttribute('aria-describedby')\r\n    })\r\n\r\n    it('focuses close button when opened', () => {\r\n      render(\r\n        <Modal open={true} title=\"Test Modal\">\r\n          Content\r\n        </Modal>\r\n      )\r\n\r\n      // El foco debería estar en el modal o en el botón de cerrar\r\n      const closeButton = screen.getByRole('button', { name: /cerrar/i })\r\n      expect(closeButton).toBeInTheDocument()\r\n    })\r\n\r\n    it('supports keyboard navigation', async () => {\r\n      const user = userEvent.setup()\r\n      const onOpenChange = jest.fn()\r\n\r\n      render(\r\n        <Modal\r\n          open={true}\r\n          onOpenChange={onOpenChange}\r\n          title=\"Test Modal\"\r\n        >\r\n          Content\r\n        </Modal>\r\n      )\r\n\r\n      // Escape key should close modal\r\n      await user.keyboard('{Escape}')\r\n      expect(onOpenChange).toHaveBeenCalledWith(false)\r\n    })\r\n  })\r\n})\r\n"],"names":["jest","mock","requireActual","Portal","children","div","data-testid","describe","it","render","Modal","open","title","description","expect","screen","getByText","toBeInTheDocument","user","userEvent","setup","onOpenChange","fn","closeButton","getByRole","name","click","toHaveBeenCalledWith","rerender","size","toHaveClass","trigger","Button","waitFor","ConfirmModal","variant","confirmText","cancelText","onConfirm","confirmButton","toHaveBeenCalled","onCancel","cancelButton","loading","toBeDisabled","variants","forEach","unmount","QuickViewModal","AddToCartModal","productName","productImage","toHaveAttribute","onContinueShopping","onGoToCart","continueButton","cartButton","TestComponent","openModal","closeModal","toggleModal","useModal","span","button","onClick","state","getByTestId","openButton","toggleButton","toHaveTextContent","TestComponentWithDefault","dialog","keyboard"],"mappings":"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"}