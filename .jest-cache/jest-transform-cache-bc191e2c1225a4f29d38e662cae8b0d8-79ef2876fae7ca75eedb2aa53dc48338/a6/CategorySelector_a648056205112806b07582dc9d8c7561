94b68a0de93ac14a790d4084ca4d0bb1
'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "CategorySelector", {
    enumerable: true,
    get: function() {
        return CategorySelector;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _reactquery = require("@tanstack/react-query");
const _lucidereact = require("lucide-react");
const _utils = require("../../../lib/utils");
// API function to fetch categories
async function fetchCategories() {
    const response = await fetch('/api/categories');
    if (!response.ok) {
        throw new Error('Error fetching categories');
    }
    const data = await response.json();
    return data.data || [];
}
// Build category tree
function buildCategoryTree(categories) {
    const categoryMap = new Map();
    const rootCategories = [];
    // Create map of all categories
    categories.forEach((category)=>{
        categoryMap.set(category.id, {
            ...category,
            children: []
        });
    });
    // Build tree structure
    categories.forEach((category)=>{
        const categoryNode = categoryMap.get(category.id);
        if (category.parent_id) {
            const parent = categoryMap.get(category.parent_id);
            if (parent) {
                parent.children.push(categoryNode);
            }
        } else {
            rootCategories.push(categoryNode);
        }
    });
    return rootCategories;
}
// Flatten categories for search
function flattenCategories(categories, level = 0) {
    const flattened = [];
    categories.forEach((category)=>{
        flattened.push({
            ...category,
            level
        });
        if (category.children && category.children.length > 0) {
            flattened.push(...flattenCategories(category.children, level + 1));
        }
    });
    return flattened;
}
function CategorySelector({ value, onChange, error, placeholder = "Selecciona una categoría", allowCreate = false, className }) {
    const [isOpen, setIsOpen] = (0, _react.useState)(false);
    const [searchTerm, setSearchTerm] = (0, _react.useState)('');
    const [expandedCategories, setExpandedCategories] = (0, _react.useState)(new Set());
    // Fetch categories
    const { data: categories = [], isLoading, error: fetchError } = (0, _reactquery.useQuery)({
        queryKey: [
            'categories'
        ],
        queryFn: fetchCategories,
        staleTime: 5 * 60 * 1000
    });
    const categoryTree = buildCategoryTree(categories);
    const flatCategories = flattenCategories(categoryTree);
    // Find selected category
    const selectedCategory = flatCategories.find((cat)=>cat.id === value);
    // Filter categories based on search
    const filteredCategories = searchTerm ? flatCategories.filter((category)=>category.name.toLowerCase().includes(searchTerm.toLowerCase())) : categoryTree;
    const toggleExpanded = (categoryId)=>{
        const newExpanded = new Set(expandedCategories);
        if (newExpanded.has(categoryId)) {
            newExpanded.delete(categoryId);
        } else {
            newExpanded.add(categoryId);
        }
        setExpandedCategories(newExpanded);
    };
    const handleSelect = (categoryId)=>{
        onChange(categoryId);
        setIsOpen(false);
        setSearchTerm('');
    };
    const renderCategoryTree = (categories, level = 0)=>{
        return categories.map((category)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: (0, _utils.cn)("flex items-center justify-between px-3 py-2 hover:bg-gray-50 cursor-pointer", value === category.id && "bg-blaze-orange-50 text-blaze-orange-700"),
                        style: {
                            paddingLeft: `${12 + level * 20}px`
                        },
                        onClick: ()=>handleSelect(category.id),
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "flex items-center space-x-2 flex-1",
                                children: [
                                    category.children && category.children.length > 0 ? /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                        onClick: (e)=>{
                                            e.stopPropagation();
                                            toggleExpanded(category.id);
                                        },
                                        className: "p-1 hover:bg-gray-200 rounded",
                                        children: expandedCategories.has(category.id) ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.FolderOpen, {
                                            className: "w-4 h-4 text-gray-500"
                                        }) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Folder, {
                                            className: "w-4 h-4 text-gray-500"
                                        })
                                    }) : /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                        className: "w-6 h-6 flex items-center justify-center",
                                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                            className: "w-2 h-2 bg-gray-300 rounded-full"
                                        })
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                        className: "text-sm font-medium",
                                        children: category.name
                                    })
                                ]
                            }),
                            value === category.id && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                className: "w-2 h-2 bg-blaze-orange-600 rounded-full"
                            })
                        ]
                    }),
                    category.children && category.children.length > 0 && expandedCategories.has(category.id) && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        children: renderCategoryTree(category.children, level + 1)
                    })
                ]
            }, category.id));
    };
    const renderFlatList = (categories)=>{
        return categories.map((category)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: (0, _utils.cn)("flex items-center px-3 py-2 hover:bg-gray-50 cursor-pointer", value === category.id && "bg-blaze-orange-50 text-blaze-orange-700"),
                onClick: ()=>handleSelect(category.id),
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: "flex items-center space-x-2 flex-1",
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            style: {
                                marginLeft: `${category.level * 16}px`
                            },
                            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                className: "text-sm",
                                children: [
                                    '—'.repeat(category.level),
                                    " ",
                                    category.name
                                ]
                            })
                        })
                    }),
                    value === category.id && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: "w-2 h-2 bg-blaze-orange-600 rounded-full"
                    })
                ]
            }, category.id));
    };
    if (fetchError) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
            className: "text-red-600 text-sm",
            children: "Error al cargar categor\xedas"
        });
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        className: (0, _utils.cn)("relative", className),
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsxs)("button", {
                type: "button",
                onClick: ()=>setIsOpen(!isOpen),
                className: (0, _utils.cn)("w-full flex items-center justify-between px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blaze-orange-500 focus:border-transparent", error ? "border-red-300" : "border-gray-300", isLoading && "opacity-50 cursor-not-allowed"),
                disabled: isLoading,
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                        className: (0, _utils.cn)("text-sm", selectedCategory ? "text-gray-900" : "text-gray-500"),
                        children: isLoading ? 'Cargando...' : selectedCategory?.name || placeholder
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.ChevronDown, {
                        className: (0, _utils.cn)("w-4 h-4 text-gray-400 transition-transform", isOpen && "transform rotate-180")
                    })
                ]
            }),
            error && /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                className: "text-red-600 text-sm mt-1",
                children: error
            }),
            isOpen && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "absolute top-full left-0 right-0 mt-1 bg-white border border-gray-200 rounded-lg shadow-lg z-50 max-h-80 overflow-hidden",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: "p-3 border-b border-gray-200",
                        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "relative",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Search, {
                                    className: "absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                    type: "text",
                                    placeholder: "Buscar categor\xedas...",
                                    value: searchTerm,
                                    onChange: (e)=>setSearchTerm(e.target.value),
                                    className: "w-full pl-10 pr-4 py-2 text-sm border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blaze-orange-500 focus:border-transparent"
                                })
                            ]
                        })
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: "max-h-60 overflow-y-auto",
                        children: categories.length === 0 ? /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            className: "p-4 text-center text-gray-500 text-sm",
                            children: "No hay categor\xedas disponibles"
                        }) : searchTerm ? renderFlatList(filteredCategories) : renderCategoryTree(categoryTree)
                    }),
                    allowCreate && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: "border-t border-gray-200 p-3",
                        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("button", {
                            type: "button",
                            className: "flex items-center space-x-2 text-sm text-blaze-orange-600 hover:text-blaze-orange-700",
                            onClick: ()=>{
                                // TODO: Implement create category modal
                                console.log('Create new category');
                            },
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Plus, {
                                    className: "w-4 h-4"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                    children: "Crear nueva categor\xeda"
                                })
                            ]
                        })
                    })
                ]
            }),
            isOpen && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "fixed inset-0 z-40",
                onClick: ()=>setIsOpen(false)
            })
        ]
    });
}

//# sourceMappingURL=data:application/json;base64,