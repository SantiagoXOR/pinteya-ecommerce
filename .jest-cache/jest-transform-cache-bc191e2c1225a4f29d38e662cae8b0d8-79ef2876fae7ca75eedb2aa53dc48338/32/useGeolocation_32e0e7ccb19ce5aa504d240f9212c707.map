{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useGeolocation.ts"],"sourcesContent":["/**\r\n * Hook para geolocalizaci√≥n autom√°tica y detecci√≥n de zona de entrega\r\n * Detecta la ubicaci√≥n del usuario y determina la zona de entrega m√°s cercana\r\n */\r\n\r\n'use client';\r\n\r\nimport { useState, useEffect, useCallback } from 'react';\r\n\r\nexport interface DeliveryZone {\r\n  id: string;\r\n  name: string;\r\n  available: boolean;\r\n  coordinates?: {\r\n    lat: number;\r\n    lng: number;\r\n  };\r\n  radius?: number; // Radio en km\r\n}\r\n\r\nexport interface GeolocationState {\r\n  location: {\r\n    lat: number;\r\n    lng: number;\r\n  } | null;\r\n  isLoading: boolean;\r\n  error: string | null;\r\n  permissionStatus: 'granted' | 'denied' | 'prompt' | 'unknown';\r\n  detectedZone: DeliveryZone | null;\r\n}\r\n\r\n// Zonas de entrega con coordenadas aproximadas\r\nconst DELIVERY_ZONES: DeliveryZone[] = [\r\n  {\r\n    id: \"cordoba-capital\",\r\n    name: \"C√≥rdoba Capital\",\r\n    available: true,\r\n    coordinates: { lat: -31.4201, lng: -64.1888 },\r\n    radius: 15\r\n  },\r\n  {\r\n    id: \"cordoba-interior\",\r\n    name: \"Interior de C√≥rdoba\",\r\n    available: true,\r\n    coordinates: { lat: -31.4201, lng: -64.1888 },\r\n    radius: 100\r\n  },\r\n  {\r\n    id: \"buenos-aires\",\r\n    name: \"Buenos Aires\",\r\n    available: false,\r\n    coordinates: { lat: -34.6118, lng: -58.3960 },\r\n    radius: 50\r\n  },\r\n  {\r\n    id: \"rosario\",\r\n    name: \"Rosario\",\r\n    available: false,\r\n    coordinates: { lat: -32.9442, lng: -60.6505 },\r\n    radius: 30\r\n  },\r\n];\r\n\r\n// Funci√≥n para calcular distancia entre dos puntos (f√≥rmula de Haversine)\r\nfunction calculateDistance(lat1: number, lng1: number, lat2: number, lng2: number): number {\r\n  const R = 6371; // Radio de la Tierra en km\r\n  const dLat = (lat2 - lat1) * Math.PI / 180;\r\n  const dLng = (lng2 - lng1) * Math.PI / 180;\r\n  const a = \r\n    Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n    Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * \r\n    Math.sin(dLng/2) * Math.sin(dLng/2);\r\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\r\n  return R * c;\r\n}\r\n\r\n// Funci√≥n para detectar la zona m√°s cercana\r\nfunction detectNearestZone(userLat: number, userLng: number): DeliveryZone | null {\r\n  console.log('üó∫Ô∏è === DETECTING NEAREST ZONE ===');\r\n  console.log('üó∫Ô∏è User coordinates:', userLat, userLng);\r\n\r\n  let nearestZone: DeliveryZone | null = null;\r\n  let minDistance = Infinity;\r\n\r\n  for (const zone of DELIVERY_ZONES) {\r\n    console.log('üó∫Ô∏è Checking zone:', zone.name, zone.id);\r\n\r\n    if (zone.coordinates) {\r\n      const distance = calculateDistance(\r\n        userLat,\r\n        userLng,\r\n        zone.coordinates.lat,\r\n        zone.coordinates.lng\r\n      );\r\n\r\n      console.log(`üó∫Ô∏è Distance to ${zone.name}: ${distance.toFixed(2)}km (radius: ${zone.radius}km)`);\r\n\r\n      // Verificar si est√° dentro del radio de la zona\r\n      if (zone.radius && distance <= zone.radius && distance < minDistance) {\r\n        console.log(`üó∫Ô∏è ‚úÖ ${zone.name} is within range and closer!`);\r\n        nearestZone = zone;\r\n        minDistance = distance;\r\n      } else {\r\n        console.log(`üó∫Ô∏è ‚ùå ${zone.name} is out of range or farther`);\r\n      }\r\n    } else {\r\n      console.log(`üó∫Ô∏è ‚ö†Ô∏è ${zone.name} has no coordinates`);\r\n    }\r\n  }\r\n\r\n  // Si no encuentra una zona espec√≠fica, usar C√≥rdoba Interior como fallback\r\n  const fallbackZone = DELIVERY_ZONES.find(zone => zone.id === \"cordoba-interior\");\r\n  const result = nearestZone || fallbackZone || null;\r\n\r\n  console.log('üó∫Ô∏è Final result:', result?.name || 'null');\r\n  console.log('üó∫Ô∏è === ZONE DETECTION COMPLETE ===');\r\n\r\n  return result;\r\n}\r\n\r\nexport const useGeolocation = () => {\r\n  const [state, setState] = useState<GeolocationState>({\r\n    location: null,\r\n    isLoading: false,\r\n    error: null,\r\n    permissionStatus: 'unknown',\r\n    detectedZone: null\r\n  });\r\n\r\n  // Funci√≥n para solicitar geolocalizaci√≥n\r\n  const requestLocation = useCallback(() => {\r\n    console.log('üó∫Ô∏è ===== REQUEST LOCATION START =====');\r\n    console.log('üó∫Ô∏è Navigator geolocation available:', !!navigator.geolocation);\r\n\r\n    if (!navigator.geolocation) {\r\n      console.log('üó∫Ô∏è ‚ùå Geolocation not supported');\r\n      setState(prev => ({\r\n        ...prev,\r\n        error: 'Geolocalizaci√≥n no soportada por este navegador',\r\n        permissionStatus: 'denied'\r\n      }));\r\n      return;\r\n    }\r\n\r\n    console.log('üó∫Ô∏è ‚úÖ Starting geolocation request...');\r\n    console.log('üó∫Ô∏è Setting loading state to true...');\r\n\r\n    setState(prev => {\r\n      const newState = { ...prev, isLoading: true, error: null };\r\n      console.log('üó∫Ô∏è Loading state updated:', newState);\r\n      return newState;\r\n    });\r\n\r\n    // Usar Promise para mejor manejo de errores\r\n    const getCurrentPositionPromise = () => {\r\n      return new Promise<GeolocationPosition>((resolve, reject) => {\r\n        navigator.geolocation.getCurrentPosition(resolve, reject, {\r\n          enableHighAccuracy: false,\r\n          timeout: 30000,\r\n          maximumAge: 0\r\n        });\r\n      });\r\n    };\r\n\r\n    // Ejecutar con async/await para mejor control\r\n    getCurrentPositionPromise()\r\n      .then((position) => {\r\n        console.log('üó∫Ô∏è ===== GEOLOCATION SUCCESS =====');\r\n        console.log('üó∫Ô∏è Position object:', position);\r\n        console.log('üó∫Ô∏è Coordinates:', position.coords);\r\n\r\n        const { latitude, longitude, accuracy } = position.coords;\r\n        console.log('üó∫Ô∏è Lat:', latitude, 'Lng:', longitude, 'Accuracy:', accuracy, 'meters');\r\n\r\n        const detectedZone = detectNearestZone(latitude, longitude);\r\n        console.log('üó∫Ô∏è Detected zone result:', detectedZone);\r\n\r\n        console.log('üó∫Ô∏è Updating state with new location...');\r\n\r\n        // Usar setTimeout para asegurar que el setState se ejecute en el pr√≥ximo tick\r\n        setTimeout(() => {\r\n          setState(prev => {\r\n            const newState = {\r\n              ...prev,\r\n              location: { lat: latitude, lng: longitude },\r\n              detectedZone,\r\n              isLoading: false,\r\n              permissionStatus: 'granted' as const,\r\n              error: null\r\n            };\r\n            console.log('üó∫Ô∏è New state:', newState);\r\n            return newState;\r\n          });\r\n          console.log('üó∫Ô∏è ===== STATE UPDATE COMPLETE =====');\r\n        }, 0);\r\n      })\r\n      .catch((error) => {\r\n        console.log('üó∫Ô∏è Geolocation error:', error);\r\n        let errorMessage = 'Error al obtener ubicaci√≥n';\r\n        let permissionStatus: 'denied' | 'unknown' = 'unknown';\r\n\r\n        switch (error.code) {\r\n          case error.PERMISSION_DENIED:\r\n            errorMessage = 'Permisos de ubicaci√≥n denegados';\r\n            permissionStatus = 'denied';\r\n            console.log('üó∫Ô∏è Permission denied by user');\r\n            break;\r\n          case error.POSITION_UNAVAILABLE:\r\n            errorMessage = 'Ubicaci√≥n no disponible';\r\n            console.log('üó∫Ô∏è Position unavailable');\r\n            break;\r\n          case error.TIMEOUT:\r\n            errorMessage = 'Tiempo de espera agotado';\r\n            console.log('üó∫Ô∏è Geolocation timeout');\r\n            break;\r\n        }\r\n\r\n        // Tambi√©n usar setTimeout para el manejo de errores\r\n        setTimeout(() => {\r\n          setState(prev => ({\r\n            ...prev,\r\n            error: errorMessage,\r\n            isLoading: false,\r\n            permissionStatus\r\n          }));\r\n        }, 0);\r\n      });\r\n  }, []);\r\n\r\n  // Verificar permisos al montar el componente\r\n  useEffect(() => {\r\n    console.log('üó∫Ô∏è useGeolocation useEffect running');\r\n\r\n    if ('permissions' in navigator) {\r\n      console.log('üó∫Ô∏è Permissions API supported, checking permissions...');\r\n      navigator.permissions.query({ name: 'geolocation' }).then((result) => {\r\n        console.log('üó∫Ô∏è Permission status:', result.state);\r\n        setState(prev => ({ ...prev, permissionStatus: result.state as any }));\r\n\r\n        // Si ya tiene permisos, solicitar ubicaci√≥n autom√°ticamente\r\n        if (result.state === 'granted') {\r\n          console.log('üó∫Ô∏è Permission already granted, will request location on user interaction');\r\n          // No solicitar autom√°ticamente para evitar bucles infinitos\r\n        } else if (result.state === 'prompt') {\r\n          console.log('üó∫Ô∏è Permission prompt available, will request on user interaction');\r\n          // No solicitar autom√°ticamente si es 'prompt' para evitar popup inesperado\r\n        } else {\r\n          console.log('üó∫Ô∏è Permission denied or unavailable, status:', result.state);\r\n        }\r\n      }).catch((error) => {\r\n        console.log('üó∫Ô∏è Error checking geolocation permissions:', error);\r\n        setState(prev => ({ ...prev, permissionStatus: 'unknown' }));\r\n      });\r\n    } else {\r\n      console.log('üó∫Ô∏è Permissions API not supported, will try direct geolocation');\r\n      setState(prev => ({ ...prev, permissionStatus: 'unknown' }));\r\n    }\r\n  }, []); // Sin dependencias para evitar bucles\r\n\r\n  // Funci√≥n para obtener todas las zonas disponibles\r\n  const getAvailableZones = useCallback(() => {\r\n    return DELIVERY_ZONES;\r\n  }, []);\r\n\r\n  // Funci√≥n para seleccionar zona manualmente\r\n  const selectZone = useCallback((zoneId: string) => {\r\n    const zone = DELIVERY_ZONES.find(z => z.id === zoneId);\r\n    if (zone) {\r\n      setState(prev => ({ ...prev, detectedZone: zone }));\r\n    }\r\n  }, []);\r\n\r\n  // Funci√≥n de test para simular geolocalizaci√≥n exitosa\r\n  const testLocation = useCallback((lat: number = -31.4201, lng: number = -64.1888) => {\r\n    console.log('üß™ ===== TEST LOCATION SIMULATION =====');\r\n    console.log('üß™ Simulating location:', lat, lng);\r\n\r\n    const detectedZone = detectNearestZone(lat, lng);\r\n    console.log('üß™ Simulated detected zone:', detectedZone);\r\n\r\n    console.log('üß™ Updating state with simulated location...');\r\n    setState(prev => {\r\n      const newState = {\r\n        ...prev,\r\n        location: { lat, lng },\r\n        detectedZone,\r\n        isLoading: false,\r\n        permissionStatus: 'granted' as const,\r\n        error: null\r\n      };\r\n      console.log('üß™ Simulated new state:', newState);\r\n      return newState;\r\n    });\r\n\r\n    console.log('üß™ ===== TEST SIMULATION COMPLETE =====');\r\n  }, []);\r\n\r\n  return {\r\n    ...state,\r\n    requestLocation,\r\n    getAvailableZones,\r\n    selectZone,\r\n    deliveryZones: DELIVERY_ZONES,\r\n    testLocation // Funci√≥n de test para debugging\r\n  };\r\n};\r\n"],"names":["useGeolocation","DELIVERY_ZONES","id","name","available","coordinates","lat","lng","radius","calculateDistance","lat1","lng1","lat2","lng2","R","dLat","Math","PI","dLng","a","sin","cos","c","atan2","sqrt","detectNearestZone","userLat","userLng","console","log","nearestZone","minDistance","Infinity","zone","distance","toFixed","fallbackZone","find","result","state","setState","useState","location","isLoading","error","permissionStatus","detectedZone","requestLocation","useCallback","navigator","geolocation","prev","newState","getCurrentPositionPromise","Promise","resolve","reject","getCurrentPosition","enableHighAccuracy","timeout","maximumAge","then","position","coords","latitude","longitude","accuracy","setTimeout","catch","errorMessage","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","useEffect","permissions","query","getAvailableZones","selectZone","zoneId","z","testLocation","deliveryZones"],"mappings":"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"}