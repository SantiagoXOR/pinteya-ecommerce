26ba96e17e9dd143e880080b7dcedb71
"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _lucidereact = require("lucide-react");
const _button = require("../ui/button");
const _utils = require("../../lib/utils");
const _dropdownmenu = require("../ui/dropdown-menu");
const _SearchAutocompleteIntegrated = require("../ui/SearchAutocompleteIntegrated");
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
// Definición de categorías con iconos
const categories = [
    {
        id: "all",
        name: "Todas las Categorías",
        icon: _lucidereact.Package,
        placeholder: "Busco productos de pinturería..."
    },
    {
        id: "pinturas",
        name: "Pinturas",
        icon: _lucidereact.Palette,
        placeholder: "Busco pinturas..."
    },
    {
        id: "herramientas",
        name: "Herramientas",
        icon: _lucidereact.Wrench,
        placeholder: "Busco herramientas..."
    },
    {
        id: "accesorios",
        name: "Accesorios",
        icon: _lucidereact.Package,
        placeholder: "Busco accesorios..."
    },
    {
        id: "barnices",
        name: "Barnices",
        icon: _lucidereact.Sparkles,
        placeholder: "Busco barnices..."
    },
    {
        id: "esmaltes",
        name: "Esmaltes",
        icon: _lucidereact.Brush,
        placeholder: "Busco esmaltes..."
    }
];
const EnhancedSearchBar = ({ className, onSearch, onSuggestionSelect, size = "md", "data-testid": testId })=>{
    const [selectedCategory, setSelectedCategory] = (0, _react.useState)(categories[0]);
    const handleCategorySelect = (0, _react.useCallback)((category)=>{
        setSelectedCategory(category);
    }, []);
    const handleSearch = (0, _react.useCallback)((query)=>{
        // Llamar al callback externo (que manejará la búsqueda)
        onSearch?.(query, selectedCategory.id !== "all" ? selectedCategory.id : undefined);
    }, [
        onSearch,
        selectedCategory.id
    ]);
    const handleSuggestionSelect = (0, _react.useCallback)((suggestion)=>{
        // Llamar al callback externo (que manejará la selección)
        onSuggestionSelect?.(suggestion);
    }, [
        onSuggestionSelect
    ]);
    const sizeClasses = {
        sm: "h-10",
        md: "h-12",
        lg: "h-14"
    };
    const buttonSizeClasses = {
        sm: "h-10 px-4",
        md: "h-12 px-6",
        lg: "h-14 px-8"
    };
    const categorySizeClasses = {
        sm: "h-10 px-3 text-xs",
        md: "h-12 px-4 text-sm",
        lg: "h-14 px-5 text-base"
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
        className: (0, _utils.cn)("w-full max-w-2xl", className),
        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
            className: "flex items-center bg-white border-2 border-white/20 rounded-lg overflow-hidden focus-within:ring-2 focus-within:ring-white focus-within:border-white shadow-lg search-focus-ring",
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsxs)(_dropdownmenu.DropdownMenu, {
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_dropdownmenu.DropdownMenuTrigger, {
                            asChild: true,
                            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_button.Button, {
                                variant: "ghost",
                                className: (0, _utils.cn)("flex-shrink-0 border-0 rounded-none border-r border-gray-200 bg-gray-50 hover:bg-gray-100 text-gray-700 hover:text-gray-900 gap-2", categorySizeClasses[size]),
                                "aria-expanded": "false",
                                "aria-haspopup": "menu",
                                "data-testid": "category-selector",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(selectedCategory.icon, {
                                        className: "w-4 h-4"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                        className: "hidden sm:inline font-medium",
                                        children: selectedCategory.name
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                        className: "sm:hidden font-medium",
                                        children: selectedCategory.id === "all" ? "Todo" : selectedCategory.name
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.ChevronDown, {
                                        className: "w-3 h-3"
                                    })
                                ]
                            })
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_dropdownmenu.DropdownMenuContent, {
                            align: "start",
                            className: "w-56",
                            "data-testid": "category-dropdown",
                            children: categories.map((category)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)(_dropdownmenu.DropdownMenuItem, {
                                    onClick: ()=>handleCategorySelect(category),
                                    className: (0, _utils.cn)("flex items-center gap-3 py-2", selectedCategory.id === category.id && "bg-accent"),
                                    "data-testid": `category-${category.id}`,
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(category.icon, {
                                            className: "w-4 h-4"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                            children: category.name
                                        })
                                    ]
                                }, category.id))
                        })
                    ]
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                    className: "flex-1 relative",
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_SearchAutocompleteIntegrated.SearchAutocompleteIntegrated, {
                        // Props de configuración
                        placeholder: selectedCategory.placeholder,
                        onSearch: handleSearch,
                        onSuggestionSelect: handleSuggestionSelect,
                        size: size,
                        className: "w-full [&>div>div>input]:border-0 [&>div>div>input]:rounded-none [&>div>div>input]:bg-white [&>div>div>input]:focus:ring-0 [&>div>div>input]:focus:border-gray-300",
                        maxSuggestions: 6,
                        debounceMs: 150,
                        showRecentSearches: true,
                        showTrendingSearches: true,
                        "data-testid": testId || "search-input"
                    })
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                    type: "submit",
                    className: (0, _utils.cn)("rounded-l-none bg-bright-sun hover:bg-bright-sun-600 text-black border-bright-sun hover:border-bright-sun-600 flex-shrink-0 button-hover-lift font-bold transition-all duration-200", buttonSizeClasses[size]),
                    onClick: ()=>{
                        // Trigger search from SearchAutocomplete if needed
                        const searchInput = document.querySelector('[data-testid="search-input"]');
                        if (searchInput?.value) {
                            handleSearch(searchInput.value);
                        }
                    },
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                        className: "font-medium",
                        children: "Buscar"
                    })
                })
            ]
        })
    });
};
const _default = EnhancedSearchBar;

//# sourceMappingURL=data:application/json;base64,