{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\admin\\useOrdersApi.ts"],"sourcesContent":["// ===================================\n// PINTEYA E-COMMERCE - ORDERS API HOOK\n// Hook especializado para llamadas a la API de órdenes\n// ===================================\n\nimport { useCallback, useRef } from 'react';\nimport {\n  StrictOrdersListResponse,\n  ApiResult,\n  toStrictOrdersResponse,\n  createStrictApiError,\n  isStrictApiResponse\n} from '@/types/api-strict';\nimport { StrictOrderFilters } from './useOrdersEnterpriseStrict';\nimport { UseOrdersCacheReturn } from './useOrdersCache';\n\n// ===================================\n// TIPOS Y CONFIGURACIÓN\n// ===================================\n\ninterface ApiOptions {\n  timeout: number;\n  maxRetries: number;\n  enableCache: boolean;\n}\n\ninterface UseOrdersApiOptions extends ApiOptions {\n  cache: UseOrdersCacheReturn;\n}\n\nexport interface UseOrdersApiReturn {\n  fetchOrdersInternal: (filters: StrictOrderFilters, isRetry?: boolean) => Promise<ApiResult<StrictOrdersListResponse['data']>>;\n  abortCurrentRequest: () => void;\n  isRequestInProgress: () => boolean;\n}\n\n// ===================================\n// UTILIDADES DE API\n// ===================================\n\nfunction buildApiUrl(filters: StrictOrderFilters): string {\n  const searchParams = new URLSearchParams();\n  \n  // Agregar parámetros de filtros\n  Object.entries(filters).forEach(([key, value]) => {\n    // Siempre incluir parámetros requeridos por la API\n    if (key === 'page' || key === 'limit' || key === 'sort_by' || key === 'sort_order') {\n      if (value !== undefined && value !== null && value !== '') {\n        searchParams.append(key, String(value));\n      }\n    }\n    // Para otros parámetros, aplicar filtros normales\n    else if (value !== undefined && value !== null && value !== 'all' && value !== '') {\n      searchParams.append(key, String(value));\n    }\n  });\n  \n  // Asegurar que siempre tengamos los parámetros mínimos requeridos\n  if (!searchParams.has('page')) {\n    searchParams.append('page', '1');\n  }\n  if (!searchParams.has('limit')) {\n    searchParams.append('limit', '20');\n  }\n  if (!searchParams.has('sort_by')) {\n    searchParams.append('sort_by', 'created_at');\n  }\n  if (!searchParams.has('sort_order')) {\n    searchParams.append('sort_order', 'desc');\n  }\n  \n  return `/api/admin/orders?${searchParams.toString()}`;\n}\n\nasync function makeApiRequest(\n  url: string, \n  signal: AbortSignal, \n  timeout: number\n): Promise<Response> {\n  // Crear timeout promise\n  const timeoutPromise = new Promise<never>((_, reject) => {\n    setTimeout(() => reject(new Error(`Request timeout after ${timeout}ms`)), timeout);\n  });\n  \n  // Hacer la petición con timeout\n  const fetchPromise = fetch(url, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n    },\n    signal\n  });\n  \n  return Promise.race([fetchPromise, timeoutPromise]);\n}\n\n// ===================================\n// HOOK DE API\n// ===================================\n\nexport function useOrdersApi(options: UseOrdersApiOptions): UseOrdersApiReturn {\n  const abortControllerRef = useRef<AbortController | null>(null);\n  \n  const fetchOrdersInternal = useCallback(async (\n    filters: StrictOrderFilters,\n    isRetry: boolean = false\n  ): Promise<ApiResult<StrictOrdersListResponse['data']>> => {\n    try {\n      // Validar si la petición es demasiado reciente (anti-spam)\n      if (!isRetry && options.cache.isRequestTooRecent(filters)) {\n        if (process.env.NODE_ENV === 'development') {\n          console.log('[useOrdersApi] Request blocked - too recent');\n        }\n        return createStrictApiError('Request too recent', 'REQUEST_THROTTLED');\n      }\n      \n      // Verificar cache primero\n      if (options.enableCache) {\n        const cachedData = options.cache.getCachedData(filters);\n        if (cachedData) {\n          return { \n            success: true, \n            data: cachedData.data, \n            message: cachedData.message, \n            timestamp: cachedData.timestamp \n          };\n        }\n      }\n      \n      // Verificar si ya hay una petición pendiente\n      const pendingRequest = options.cache.getPendingRequest(filters);\n      if (pendingRequest) {\n        if (process.env.NODE_ENV === 'development') {\n          console.log('[useOrdersApi] Using pending request');\n        }\n        return await pendingRequest;\n      }\n      \n      // Gestión del AbortController - Solo abortar si es una petición diferente\n      // Crear un identificador único para esta petición\n      const requestId = JSON.stringify(filters);\n      \n      // Solo abortar si hay una petición anterior Y es diferente\n      if (abortControllerRef.current && !abortControllerRef.current.signal.aborted) {\n        // Solo abortar si los filtros son diferentes (nueva petición)\n        const currentRequestId = (abortControllerRef.current as any)._requestId;\n        if (currentRequestId && currentRequestId !== requestId) {\n          if (process.env.NODE_ENV === 'development') {\n            console.log('[useOrdersApi] Aborting previous different request');\n          }\n          abortControllerRef.current.abort();\n        } else if (!currentRequestId) {\n          // Abortar si no tiene ID (petición antigua)\n          abortControllerRef.current.abort();\n        }\n      }\n      \n      const controller = new AbortController();\n      (controller as any)._requestId = requestId;\n      abortControllerRef.current = controller;\n      \n      // Crear la promesa de la petición\n      const requestPromise = (async (): Promise<ApiResult<StrictOrdersListResponse['data']>> => {\n        try {\n          const url = buildApiUrl(filters);\n          \n          if (process.env.NODE_ENV === 'development') {\n            console.log('[useOrdersApi] Making request:', { url, filters });\n          }\n          \n          const response = await makeApiRequest(url, controller.signal, options.timeout);\n          \n          // Verificar si la petición fue cancelada\n          if (controller.signal.aborted) {\n            return createStrictApiError('Request cancelled', 'REQUEST_CANCELLED');\n          }\n          \n          // Verificar status de respuesta\n          if (!response.ok) {\n            const errorText = await response.text().catch(() => 'Unknown error');\n            throw new Error(`HTTP ${response.status}: ${errorText}`);\n          }\n          \n          // Parsear respuesta JSON\n          let jsonData: unknown;\n          try {\n            jsonData = await response.json();\n          } catch (parseError) {\n            throw new Error(`Failed to parse JSON response: ${parseError instanceof Error ? parseError.message : 'Unknown error'}`);\n          }\n          \n          // Validar y transformar respuesta\n          const validatedResponse = toStrictOrdersResponse(jsonData);\n          \n          if (!isStrictApiResponse(validatedResponse)) {\n            return validatedResponse; // Es un error\n          }\n          \n          // Guardar en cache si está habilitado\n          if (options.enableCache) {\n            options.cache.setCachedData(filters, validatedResponse);\n          }\n          \n          return { \n            success: true, \n            data: validatedResponse.data, \n            message: validatedResponse.message, \n            timestamp: validatedResponse.timestamp \n          };\n          \n        } catch (error) {\n          if (controller.signal.aborted) {\n            return createStrictApiError('Request cancelled', 'REQUEST_CANCELLED');\n          }\n          \n          const errorMessage = error instanceof Error ? error.message : 'Unknown error occurred';\n          console.error('[useOrdersApi] Request failed:', errorMessage);\n          \n          return createStrictApiError(errorMessage, 'FETCH_ERROR', { \n            originalError: error,\n            filters,\n            url: buildApiUrl(filters)\n          });\n        }\n      })();\n      \n      // Registrar la petición como pendiente\n      options.cache.setPendingRequest(filters, requestPromise);\n      \n      return await requestPromise;\n      \n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : 'Unexpected error in fetchOrdersInternal';\n      console.error('[useOrdersApi] Unexpected error:', errorMessage);\n      \n      return createStrictApiError(errorMessage, 'UNEXPECTED_ERROR', { \n        originalError: error,\n        filters \n      });\n    }\n  }, [options]);\n  \n  const abortCurrentRequest = useCallback((): void => {\n    if (abortControllerRef.current && !abortControllerRef.current.signal.aborted) {\n      abortControllerRef.current.abort();\n      \n      if (process.env.NODE_ENV === 'development') {\n        console.log('[useOrdersApi] Request aborted');\n      }\n    }\n  }, []);\n  \n  const isRequestInProgress = useCallback((): boolean => {\n    return abortControllerRef.current !== null && !abortControllerRef.current.signal.aborted;\n  }, []);\n  \n  return {\n    fetchOrdersInternal,\n    abortCurrentRequest,\n    isRequestInProgress\n  };\n}\n"],"names":["useOrdersApi","buildApiUrl","filters","searchParams","URLSearchParams","Object","entries","forEach","key","value","undefined","append","String","has","toString","makeApiRequest","url","signal","timeout","timeoutPromise","Promise","_","reject","setTimeout","Error","fetchPromise","fetch","method","headers","race","options","abortControllerRef","useRef","fetchOrdersInternal","useCallback","isRetry","cache","isRequestTooRecent","process","env","NODE_ENV","console","log","createStrictApiError","enableCache","cachedData","getCachedData","success","data","message","timestamp","pendingRequest","getPendingRequest","requestId","JSON","stringify","current","aborted","currentRequestId","_requestId","abort","controller","AbortController","requestPromise","response","ok","errorText","text","catch","status","jsonData","json","parseError","validatedResponse","toStrictOrdersResponse","isStrictApiResponse","setCachedData","error","errorMessage","originalError","setPendingRequest","abortCurrentRequest","isRequestInProgress"],"mappings":"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"}