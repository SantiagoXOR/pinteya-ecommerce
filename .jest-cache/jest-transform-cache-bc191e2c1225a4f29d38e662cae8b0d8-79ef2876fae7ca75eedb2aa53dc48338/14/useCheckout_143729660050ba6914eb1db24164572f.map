{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useCheckout.ts"],"sourcesContent":["\"use client\";\n\nimport { useState, useCallback, useEffect, useMemo } from 'react';\nimport { useAppDispatch, useAppSelector } from '@/redux/store';\nimport { selectCartItems, selectTotalPrice, removeAllItemsFromCart } from '@/redux/features/cart-slice';\nimport { CheckoutFormData, CheckoutState, CreatePreferencePayload, PaymentPreferenceResponse } from '@/types/checkout';\nimport { ApiResponse } from '@/types/api';\nimport { useAuth } from './useAuth';\nimport { validateEmail, validatePhoneNumber, validateDNI } from '@/lib/utils/validation';\n\nconst initialFormData: CheckoutFormData = {\n  billing: {\n    firstName: '',\n    lastName: '',\n    dni: '',\n    companyName: '',\n    country: 'Argentina',\n    streetAddress: '',\n    apartment: '',\n    city: '',\n    state: '',\n    zipCode: '',\n    phone: '',\n    email: '',\n    orderNotes: '',\n    observations: '',\n  },\n  shipping: {\n    differentAddress: false,\n  },\n  paymentMethod: 'mercadopago',\n  shippingMethod: 'free',\n  couponCode: '',\n};\n\nexport const useCheckout = () => {\n  const dispatch = useAppDispatch();\n  const cartItems = useAppSelector(selectCartItems);\n  const totalPrice = useAppSelector(selectTotalPrice);\n  const { user, isLoaded } = useAuth();\n\n  const [checkoutState, setCheckoutState] = useState<CheckoutState>({\n    formData: initialFormData,\n    isLoading: false,\n    errors: {},\n    step: 'form',\n    preferenceId: undefined,\n    initPoint: undefined,\n  });\n\n  // Estado para cupones\n  const [appliedCoupon, setAppliedCoupon] = useState<{\n    code: string;\n    discount: number;\n    type: 'percentage' | 'fixed';\n  } | null>(null);\n\n  // ===================================\n  // AUTO-COMPLETAR DATOS DEL USUARIO AUTENTICADO\n  // ===================================\n  useEffect(() => {\n    if (isLoaded && user) {\n      const userEmail = user.email || '';\n      const fullName = user.name || '';\n      const [firstName, ...lastNameParts] = fullName.split(' ');\n      const lastName = lastNameParts.join(' ');\n\n      // Solo actualizar si los datos han cambiado para evitar recursi√≥n\n      setCheckoutState(prev => {\n        const currentBilling = prev.formData.billing;\n        const needsUpdate = \n          (!currentBilling.firstName && firstName) ||\n          (!currentBilling.lastName && lastName) ||\n          (!currentBilling.email && userEmail);\n\n        if (!needsUpdate) {\n          return prev;\n        }\n\n        return {\n          ...prev,\n          formData: {\n            ...prev.formData,\n            billing: {\n              ...currentBilling,\n              firstName: firstName || currentBilling.firstName,\n              lastName: lastName || currentBilling.lastName,\n              email: userEmail || currentBilling.email,\n            },\n          },\n        };\n      });\n    }\n  }, [isLoaded, user]);\n\n  // ===================================\n  // FUNCIONES DE C√ÅLCULO\n  // ===================================\n  const calculateShippingCost = useCallback(() => {\n    const { shippingMethod } = checkoutState.formData;\n\n    switch (shippingMethod) {\n      case 'free':\n        return 0;\n      case 'standard':\n        return totalPrice > 50000 ? 0 : 5000; // Env√≠o gratis por compras mayores a $50,000\n      case 'express':\n        return 8000;\n      default:\n        return 0;\n    }\n  }, [checkoutState.formData.shippingMethod, totalPrice]);\n\n  const calculateDiscount = useCallback(() => {\n    if (!appliedCoupon) return 0;\n\n    if (appliedCoupon.type === 'percentage') {\n      return Math.round((totalPrice * appliedCoupon.discount) / 100);\n    } else {\n      return appliedCoupon.discount;\n    }\n  }, [appliedCoupon, totalPrice]);\n\n  const calculateTotal = useCallback(() => {\n    const shipping = calculateShippingCost();\n    const discount = calculateDiscount();\n    const total = Math.max(0, totalPrice + shipping - discount);\n    console.log('üîç calculateTotal:', { totalPrice, shipping, discount, total });\n    return total;\n  }, [totalPrice, calculateShippingCost, calculateDiscount]);\n\n  // Actualizar datos del formulario\n  const updateFormData = useCallback((updates: Partial<CheckoutFormData>) => {\n    setCheckoutState(prev => ({\n      ...prev,\n      formData: { ...prev.formData, ...updates },\n      errors: {}, // Limpiar errores al actualizar\n    }));\n  }, []);\n\n  // Actualizar datos de facturaci√≥n\n  const updateBillingData = useCallback((billingData: Partial<CheckoutFormData['billing']>) => {\n    setCheckoutState(prev => ({\n      ...prev,\n      formData: {\n        ...prev.formData,\n        billing: { ...prev.formData.billing, ...billingData },\n      },\n      errors: {}, // Limpiar errores al actualizar\n    }));\n  }, []);\n\n  // Actualizar datos de env√≠o\n  const updateShippingData = useCallback((shippingData: Partial<CheckoutFormData['shipping']>) => {\n    setCheckoutState(prev => ({\n      ...prev,\n      formData: {\n        ...prev.formData,\n        shipping: { ...prev.formData.shipping, ...shippingData },\n      },\n      errors: {}, // Limpiar errores al actualizar\n    }));\n  }, []);\n\n  // Aplicar cup√≥n de descuento\n  const applyCoupon = useCallback(async (couponCode: string) => {\n    if (!couponCode.trim()) {\n      setCheckoutState(prev => ({\n        ...prev,\n        errors: { ...prev.errors, coupon: 'Ingresa un c√≥digo de cup√≥n' }\n      }));\n      return;\n    }\n\n    try {\n      // Simular validaci√≥n de cup√≥n (aqu√≠ ir√≠a la llamada a la API)\n      const validCoupons = {\n        'DESCUENTO10': { discount: 10, type: 'percentage' as const },\n        'ENVIOGRATIS': { discount: 5000, type: 'fixed' as const },\n        'BIENVENIDO': { discount: 15, type: 'percentage' as const },\n      };\n\n      const coupon = validCoupons[couponCode.toUpperCase() as keyof typeof validCoupons];\n\n      if (coupon) {\n        setAppliedCoupon({\n          code: couponCode.toUpperCase(),\n          ...coupon\n        });\n        setCheckoutState(prev => ({\n          ...prev,\n          formData: { ...prev.formData, couponCode: couponCode.toUpperCase() },\n          errors: { ...prev.errors, coupon: undefined }\n        }));\n      } else {\n        setCheckoutState(prev => ({\n          ...prev,\n          errors: { ...prev.errors, coupon: 'C√≥digo de cup√≥n inv√°lido' }\n        }));\n      }\n    } catch (error) {\n      setCheckoutState(prev => ({\n        ...prev,\n        errors: { ...prev.errors, coupon: 'Error validando el cup√≥n' }\n      }));\n    }\n  }, []);\n\n  // ===================================\n  // FUNCIONES DE VALIDACI√ìN\n  // ===================================\n\n  // Validar formulario completo\n  const validateForm = useCallback(() => {\n    const { billing, shipping } = checkoutState.formData;\n    const errors: Record<string, string> = {};\n\n    // Validaciones b√°sicas\n    if (!billing.firstName?.trim()) errors.firstName = 'Nombre es requerido';\n    if (!billing.lastName?.trim()) errors.lastName = 'Apellido es requerido';\n    if (!billing.email?.trim()) errors.email = 'Email es requerido';\n    if (!billing.phone?.trim()) errors.phone = 'Tel√©fono es requerido';\n    if (!billing.streetAddress?.trim()) errors.streetAddress = 'Direcci√≥n es requerida';\n    if (!billing.city?.trim()) errors.city = 'Ciudad es requerida';\n    if (!billing.state?.trim()) errors.state = 'Provincia es requerida';\n    if (!billing.zipCode?.trim()) errors.zipCode = 'C√≥digo postal es requerido';\n\n    // Validaciones avanzadas\n    if (billing.email && !validateEmail(billing.email)) {\n      errors.email = 'Email inv√°lido';\n    }\n\n    if (billing.phone && !validatePhoneNumber(billing.phone)) {\n      errors.phone = 'Tel√©fono inv√°lido. Formato: +54 351 XXX XXXX';\n    }\n\n    if (billing.streetAddress && billing.streetAddress.length < 10) {\n      errors.streetAddress = 'La direcci√≥n debe tener al menos 10 caracteres';\n    }\n\n    // Validar c√≥digo postal argentino (formato XXXX o AXXXX)\n    if (billing.zipCode && !/^[A-Z]?\\d{4}$/.test(billing.zipCode.toUpperCase())) {\n      errors.zipCode = 'C√≥digo postal inv√°lido';\n    }\n\n    // Validar env√≠o si es direcci√≥n diferente\n    if (shipping.differentAddress) {\n      if (!shipping.streetAddress?.trim()) errors.shippingStreetAddress = 'Direcci√≥n de env√≠o es requerida';\n      if (!shipping.city?.trim()) errors.shippingCity = 'Ciudad de env√≠o es requerida';\n      if (!shipping.state?.trim()) errors.shippingState = 'Provincia de env√≠o es requerida';\n      if (!shipping.zipCode?.trim()) errors.shippingZipCode = 'C√≥digo postal de env√≠o es requerido';\n\n      if (shipping.zipCode && !/^[A-Z]?\\d{4}$/.test(shipping.zipCode.toUpperCase())) {\n        errors.shippingZipCode = 'C√≥digo postal de env√≠o inv√°lido';\n      }\n    }\n\n    // Validar que hay items en el carrito\n    if (cartItems.length === 0) {\n      errors.cart = 'El carrito est√° vac√≠o';\n    }\n\n    setCheckoutState(prev => ({ ...prev, errors }));\n    return Object.keys(errors).length === 0;\n  }, [checkoutState.formData, cartItems.length]);\n\n  // Validar formulario express (solo campos esenciales)\n  const validateExpressForm = useCallback(() => {\n    const { billing } = checkoutState.formData;\n    const errors: Record<string, string> = {};\n\n    console.log('üîç validateExpressForm - Datos del formulario:', {\n      firstName: billing.firstName,\n      lastName: billing.lastName,\n      dni: billing.dni,\n      email: billing.email,\n      phone: billing.phone,\n      streetAddress: billing.streetAddress,\n      paymentMethod: checkoutState.formData.paymentMethod,\n      cartItemsLength: cartItems.length,\n      currentStep: checkoutState.step // ‚úÖ NUEVO: Agregar step actual\n    });\n\n    // Validaciones esenciales para checkout express\n    if (!billing.firstName?.trim()) errors.firstName = 'Nombre es requerido';\n    if (!billing.lastName?.trim()) errors.lastName = 'Apellido es requerido';\n    if (!billing.dni?.trim()) errors.dni = 'DNI/CUIT es requerido';\n    if (!billing.email?.trim()) errors.email = 'Email es requerido';\n    if (!billing.phone?.trim()) errors.phone = 'Tel√©fono es requerido';\n    if (!billing.streetAddress?.trim()) errors.streetAddress = 'Direcci√≥n es requerida';\n\n    // Validaciones avanzadas\n    if (billing.email && !validateEmail(billing.email)) {\n      errors.email = 'Email inv√°lido';\n    }\n\n    if (billing.phone && !validatePhoneNumber(billing.phone)) {\n      errors.phone = 'Tel√©fono inv√°lido. Formato: +54 351 XXX XXXX';\n    }\n\n    // Validaci√≥n de DNI/CUIT argentino\n    if (billing.dni && !validateDNI(billing.dni)) {\n      errors.dni = 'DNI/CUIT inv√°lido. Formato: 12345678 o 20-12345678-9';\n    }\n\n    // Validar m√©todo de pago\n    if (!checkoutState.formData.paymentMethod) {\n      errors.paymentMethod = 'M√©todo de pago es requerido';\n    }\n\n    // ‚úÖ NUEVO: Solo validar carrito si NO estamos en el step de pago\n    // Durante el step 'payment', el carrito ya se vaci√≥ pero es normal\n    if (checkoutState.step !== 'payment' && cartItems.length === 0) {\n      errors.cart = 'El carrito est√° vac√≠o';\n    }\n\n    console.log('üîç validateExpressForm - Errores encontrados:', errors);\n    console.log('üîç validateExpressForm - Formulario v√°lido:', Object.keys(errors).length === 0);\n\n    setCheckoutState(prev => ({ ...prev, errors }));\n    return Object.keys(errors).length === 0;\n  }, [checkoutState.formData, checkoutState.step, cartItems.length]); // ‚úÖ NUEVO: Agregar step a dependencias\n\n  // ===================================\n  // FUNCIONES DE PROCESAMIENTO\n  // ===================================\n\n  // Procesar checkout express\n  const processExpressCheckout = useCallback(async (): Promise<void> => {\n    if (!validateExpressForm()) {\n      return;\n    }\n\n    // Marcar que el checkout est√° en progreso\n    sessionStorage.setItem('checkout-in-progress', 'true');\n\n    setCheckoutState(prev => ({ ...prev, isLoading: true, step: 'processing' }));\n\n    try {\n      const { billing } = checkoutState.formData;\n      const shippingCost = calculateShippingCost();\n\n      // Sanitizar tel√©fono para el backend (solo n√∫meros, formato argentino 10-11 d√≠gitos)\n      let sanitizedPhone = billing.phone?.replace(/\\D/g, '') || '';\n\n      // Si empieza con 54 (c√≥digo de Argentina), remover el c√≥digo de pa√≠s\n      if (sanitizedPhone.startsWith('54') && sanitizedPhone.length > 11) {\n        sanitizedPhone = sanitizedPhone.substring(2); // Remover \"54\"\n      }\n\n      // Si empieza con 9 (c√≥digo de celular), mantenerlo para que sea 11 d√≠gitos\n      // Si no empieza con 9, deber√≠a ser 10 d√≠gitos (tel√©fono fijo)\n\n      console.log('üîç processExpressCheckout - Tel√©fono original:', billing.phone);\n      console.log('üîç processExpressCheckout - Tel√©fono sanitizado:', sanitizedPhone);\n      console.log('üîç processExpressCheckout - Longitud del tel√©fono:', sanitizedPhone.length);\n\n      // Preparar datos para la API (Express Checkout - campos simplificados)\n      const payload: CreatePreferencePayload = {\n        items: cartItems.map((item: any) => ({\n          id: item.id.toString(),\n          name: item.title,\n          price: item.discountedPrice,\n          quantity: item.quantity,\n          image: item.imgs?.previews?.[0] || '',\n        })),\n        payer: {\n          name: billing.firstName || 'Cliente', // Valor por defecto para express checkout\n          surname: billing.lastName || 'Express', // Valor por defecto para express checkout\n          email: billing.email,\n          phone: sanitizedPhone, // Tel√©fono sanitizado (solo n√∫meros)\n        },\n        shipping: shippingCost > 0 ? {\n          cost: shippingCost,\n          address: {\n            street_name: billing.streetAddress,\n            street_number: \"123\", // N√∫mero por defecto\n            zip_code: billing.zipCode || \"5000\", // C√≥digo postal por defecto para C√≥rdoba\n            city_name: billing.city || \"C√≥rdoba\",\n            state_name: billing.state || \"C√≥rdoba\",\n          },\n        } : undefined,\n        external_reference: `express_checkout_${Date.now()}`,\n      };\n\n      console.log('üîç processExpressCheckout - Payload enviado:', payload);\n\n      // Llamar a la API\n      const response = await fetch('/api/payments/create-preference', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(payload),\n      });\n\n      const result: ApiResponse<PaymentPreferenceResponse> = await response.json();\n\n      if (!result.success) {\n        throw new Error(result.error || 'Error procesando el pago');\n      }\n\n      // ‚úÖ SOLUCI√ìN FINAL: Redirecci√≥n directa a MercadoPago\n      // Esto evita el problema de hooks con el Wallet Brick embebido\n      console.log('üîÑ Redirigiendo directamente a MercadoPago:', result.data.init_point);\n\n      // Cambiar a estado de redirecci√≥n inmediatamente\n      setCheckoutState(prev => ({\n        ...prev,\n        step: 'redirect',\n        preferenceId: result.data.preference_id,\n        initPoint: result.data.init_point,\n        isLoading: false\n      }));\n\n    } catch (error: any) {\n      console.error('Error en express checkout:', error);\n      setCheckoutState(prev => ({\n        ...prev,\n        isLoading: false,\n        step: 'form',\n        errors: { general: error.message || 'Error procesando el pago' },\n      }));\n    }\n  }, [checkoutState.formData, cartItems, validateExpressForm, calculateShippingCost, dispatch]);\n\n  // Procesar checkout completo\n  const processCheckout = useCallback(async (): Promise<void> => {\n    if (!validateForm()) {\n      return;\n    }\n\n    // Marcar que el checkout est√° en progreso\n    sessionStorage.setItem('checkout-in-progress', 'true');\n\n    setCheckoutState(prev => ({ ...prev, isLoading: true, step: 'processing' }));\n\n    try {\n      const { billing, shipping } = checkoutState.formData;\n      const shippingCost = calculateShippingCost();\n\n      // Preparar datos para la API\n      const payload: CreatePreferencePayload = {\n        items: cartItems.map((item: any) => ({\n          id: item.id.toString(),\n          name: item.title,\n          price: item.discountedPrice,\n          quantity: item.quantity,\n          image: item.imgs?.previews?.[0] || '',\n        })),\n        payer: {\n          name: billing.firstName,\n          surname: billing.lastName,\n          email: billing.email,\n          phone: billing.phone,\n        },\n        shipping: shippingCost > 0 ? {\n          cost: shippingCost,\n          address: {\n            street_name: shipping.differentAddress ? shipping.streetAddress! : billing.streetAddress,\n            street_number: \"123\", // N√∫mero por defecto como string\n            zip_code: shipping.differentAddress ? shipping.zipCode! : billing.zipCode,\n            city_name: shipping.differentAddress ? shipping.city! : billing.city,\n            state_name: shipping.differentAddress ? shipping.state! : billing.state,\n          },\n        } : undefined,\n        external_reference: `checkout_${Date.now()}`,\n      };\n\n      // Llamar a la API\n      const response = await fetch('/api/payments/create-preference', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(payload),\n      });\n\n      const result: ApiResponse<PaymentPreferenceResponse> = await response.json();\n\n      if (!result.success) {\n        throw new Error(result.error || 'Error procesando el pago');\n      }\n\n      // Procesar resultado exitoso - mostrar paso de pago manual\n      // NOTA: No limpiar el carrito aqu√≠, se limpiar√° cuando el pago se complete exitosamente\n\n      // Usar Wallet Brick embebido (comportamiento por defecto)\n      setCheckoutState(prev => ({\n        ...prev,\n        step: 'payment',\n        preferenceId: result.data.preference_id,\n        initPoint: result.data.init_point\n      }));\n\n    } catch (error: any) {\n      console.error('Error en checkout:', error);\n      setCheckoutState(prev => ({\n        ...prev,\n        isLoading: false,\n        step: 'form',\n        errors: { general: error.message || 'Error procesando el pago' },\n      }));\n    }\n  }, [checkoutState.formData, cartItems, validateForm, calculateShippingCost, dispatch]);\n\n  // ===================================\n  // CALLBACKS PARA WALLET BRICK\n  // ===================================\n  const handleWalletReady = useCallback(() => {\n    console.log('Wallet Brick est√° listo');\n  }, []);\n\n  const handleWalletError = useCallback((error: any) => {\n    console.error('Error en Wallet Brick:', error);\n    setCheckoutState(prev => ({\n      ...prev,\n      errors: { payment: error.message || 'Error en el sistema de pagos' },\n      isLoading: false,\n    }));\n  }, []);\n\n  const handleWalletSubmit = useCallback((data: any) => {\n    console.log('üí≥ Wallet Submit - Pago enviado desde Wallet Brick:', data);\n    console.log('üí≥ Wallet Submit - Cambiando a step redirect');\n\n    // IMPORTANTE: NO limpiar el carrito aqu√≠\n    // El carrito se limpiar√° solo cuando el pago sea confirmado como exitoso\n    setCheckoutState(prev => ({\n      ...prev,\n      step: 'redirect',\n      isLoading: false\n    }));\n  }, []);\n\n  // Memorizar valores calculados para evitar recursi√≥n infinita\n  const memoizedShippingCost = useMemo(() => {\n    try {\n      const cost = calculateShippingCost();\n      return typeof cost === 'number' && !isNaN(cost) ? cost : 0;\n    } catch (error) {\n      console.error('‚ùå Error calculating shippingCost:', error);\n      return 0;\n    }\n  }, [calculateShippingCost]);\n\n  const memoizedDiscount = useMemo(() => {\n    try {\n      const disc = calculateDiscount();\n      return typeof disc === 'number' && !isNaN(disc) ? disc : 0;\n    } catch (error) {\n      console.error('‚ùå Error calculating discount:', error);\n      return 0;\n    }\n  }, [calculateDiscount]);\n\n  const memoizedFinalTotal = useMemo(() => {\n    try {\n      const total = calculateTotal();\n      return typeof total === 'number' && !isNaN(total) ? total : 0;\n    } catch (error) {\n      console.error('‚ùå Error calculating finalTotal:', error);\n      return 0;\n    }\n  }, [calculateTotal]);\n\n  return {\n    // Estado\n    formData: checkoutState.formData,\n    isLoading: checkoutState.isLoading,\n    errors: checkoutState.errors,\n    step: checkoutState.step,\n\n    // Datos para Wallet Brick\n    preferenceId: checkoutState.preferenceId,\n    initPoint: checkoutState.initPoint,\n\n    // Datos calculados\n    cartItems,\n    totalPrice,\n    shippingCost: memoizedShippingCost,\n    discount: memoizedDiscount,\n    finalTotal: memoizedFinalTotal,\n\n    // Cupones\n    appliedCoupon,\n    applyCoupon,\n\n    // Acciones\n    updateFormData,\n    updateBillingData,\n    updateShippingData,\n    validateForm,\n    validateExpressForm,\n    processCheckout,\n    processExpressCheckout,\n\n    // Callbacks para Wallet Brick\n    handleWalletReady,\n    handleWalletError,\n    handleWalletSubmit,\n  };\n};\n"],"names":["useCheckout","initialFormData","billing","firstName","lastName","dni","companyName","country","streetAddress","apartment","city","state","zipCode","phone","email","orderNotes","observations","shipping","differentAddress","paymentMethod","shippingMethod","couponCode","dispatch","useAppDispatch","cartItems","useAppSelector","selectCartItems","totalPrice","selectTotalPrice","user","isLoaded","useAuth","checkoutState","setCheckoutState","useState","formData","isLoading","errors","step","preferenceId","undefined","initPoint","appliedCoupon","setAppliedCoupon","useEffect","userEmail","fullName","name","lastNameParts","split","join","prev","currentBilling","needsUpdate","calculateShippingCost","useCallback","calculateDiscount","type","Math","round","discount","calculateTotal","total","max","console","log","updateFormData","updates","updateBillingData","billingData","updateShippingData","shippingData","applyCoupon","trim","coupon","validCoupons","toUpperCase","code","error","validateForm","validateEmail","validatePhoneNumber","length","test","shippingStreetAddress","shippingCity","shippingState","shippingZipCode","cart","Object","keys","validateExpressForm","cartItemsLength","currentStep","validateDNI","processExpressCheckout","sessionStorage","setItem","shippingCost","sanitizedPhone","replace","startsWith","substring","payload","items","map","item","id","toString","title","price","discountedPrice","quantity","image","imgs","previews","payer","surname","cost","address","street_name","street_number","zip_code","city_name","state_name","external_reference","Date","now","response","fetch","method","headers","body","JSON","stringify","result","json","success","Error","data","init_point","preference_id","general","message","processCheckout","handleWalletReady","handleWalletError","payment","handleWalletSubmit","memoizedShippingCost","useMemo","isNaN","memoizedDiscount","disc","memoizedFinalTotal","finalTotal"],"mappings":"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"}