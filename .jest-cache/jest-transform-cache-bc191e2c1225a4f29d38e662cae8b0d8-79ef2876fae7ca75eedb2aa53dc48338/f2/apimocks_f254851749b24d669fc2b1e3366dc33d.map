{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\__tests__\\setup\\api-mocks.js"],"sourcesContent":["// ðŸ§ª Enterprise API Mocks for Testing\n\n// Mock Next.js API Route handlers\nexport const createMockApiHandler = (implementation) => {\n  return jest.fn().mockImplementation(async (request, context) => {\n    try {\n      return await implementation(request, context);\n    } catch (error) {\n      return {\n        status: 500,\n        json: () => Promise.resolve({\n          success: false,\n          error: error.message,\n          timestamp: new Date().toISOString(),\n        }),\n      };\n    }\n  });\n};\n\n// Mock Supabase client for API tests\nexport const createMockSupabaseClient = () => ({\n  from: jest.fn(() => ({\n    select: jest.fn(() => ({\n      eq: jest.fn(() => ({\n        single: jest.fn().mockResolvedValue({ data: null, error: null }),\n        limit: jest.fn().mockResolvedValue({ data: [], error: null }),\n        order: jest.fn(() => ({\n          order: jest.fn().mockResolvedValue({ data: [], error: null }),\n        })),\n      })),\n    })),\n    insert: jest.fn(() => ({\n      select: jest.fn(() => ({\n        single: jest.fn().mockResolvedValue({ data: null, error: null }),\n      })),\n    })),\n    update: jest.fn(() => ({\n      eq: jest.fn(() => ({\n        select: jest.fn(() => ({\n          single: jest.fn().mockResolvedValue({ data: null, error: null }),\n        })),\n        neq: jest.fn().mockResolvedValue({ error: null }),\n      })),\n    })),\n    delete: jest.fn(() => ({\n      eq: jest.fn().mockResolvedValue({ error: null }),\n    })),\n  })),\n  storage: {\n    from: jest.fn(() => ({\n      upload: jest.fn().mockResolvedValue({ data: { path: 'test-path' }, error: null }),\n      getPublicUrl: jest.fn().mockReturnValue({ data: { publicUrl: 'https://test.com/image.jpg' } }),\n      remove: jest.fn().mockResolvedValue({ error: null }),\n    })),\n  },\n});\n\n// Mock request with common properties\nexport const createMockRequest = (overrides = {}) => ({\n  url: 'http://localhost:3000/api/test',\n  method: 'GET',\n  headers: new Map(),\n  json: jest.fn().mockResolvedValue({}),\n  formData: jest.fn().mockResolvedValue(new FormData()),\n  text: jest.fn().mockResolvedValue(''),\n  supabase: createMockSupabaseClient(),\n  user: { id: 'test-user-id', email: 'test@example.com' },\n  validatedData: {},\n  ...overrides,\n});\n\n// Mock response helpers\nexport const createMockResponse = (data, status = 200) => ({\n  status,\n  ok: status >= 200 && status < 300,\n  json: () => Promise.resolve(data),\n  text: () => Promise.resolve(JSON.stringify(data)),\n});\n\n// Mock file for upload tests\nexport const createMockFile = (name = 'test.jpg', type = 'image/jpeg', size = 1024) => {\n  const file = new File(['test content'], name, { type });\n  Object.defineProperty(file, 'size', { value: size });\n  return file;\n};\n\n// Mock FormData for file uploads\nexport const createMockFormData = (files = {}, fields = {}) => {\n  const formData = new FormData();\n  \n  Object.entries(files).forEach(([key, file]) => {\n    formData.append(key, file);\n  });\n  \n  Object.entries(fields).forEach(([key, value]) => {\n    formData.append(key, value);\n  });\n  \n  return formData;\n};\n\n// Mock auth result\nexport const createMockAuthResult = (success = true, user = null) => ({\n  success,\n  user: user || { id: 'test-user-id', email: 'test@example.com' },\n  supabase: createMockSupabaseClient(),\n  status: success ? 200 : 401,\n  error: success ? null : 'Unauthorized',\n});\n\n// Helper to setup API test environment\nexport const setupApiTestEnvironment = () => {\n  // Mock auth functions\n  jest.doMock('@/lib/auth/admin-auth', () => ({\n    checkCRUDPermissions: jest.fn().mockResolvedValue(createMockAuthResult()),\n  }));\n\n  // Mock API logger\n  jest.doMock('@/lib/api/api-logger', () => ({\n    withApiLogging: jest.fn((handler) => handler),\n    logAdminAction: jest.fn(),\n  }));\n\n  // Mock error handler\n  jest.doMock('@/lib/api/error-handler', () => ({\n    withErrorHandler: jest.fn((handler) => handler),\n    ApiError: class ApiError extends Error {\n      constructor(message, statusCode = 500) {\n        super(message);\n        this.statusCode = statusCode;\n      }\n    },\n    NotFoundError: jest.fn((resource) => new Error(`${resource} no encontrado`)),\n    ValidationError: jest.fn((message) => new Error(message)),\n  }));\n\n  // Mock middleware composer\n  jest.doMock('@/lib/api/middleware-composer', () => ({\n    composeMiddlewares: jest.fn((...middlewares) => (handler) => handler),\n  }));\n\n  // Mock auth middleware\n  jest.doMock('@/lib/auth/api-auth-middleware', () => ({\n    withAdminAuth: jest.fn(() => (handler) => handler),\n  }));\n\n  // Mock validation middleware\n  jest.doMock('@/lib/validation/admin-schemas', () => ({\n    withValidation: jest.fn(() => (handler) => handler),\n  }));\n};\n\n// Cleanup function\nexport const cleanupApiTestEnvironment = () => {\n  jest.clearAllMocks();\n  jest.resetModules();\n};\n"],"names":["cleanupApiTestEnvironment","createMockApiHandler","createMockAuthResult","createMockFile","createMockFormData","createMockRequest","createMockResponse","createMockSupabaseClient","setupApiTestEnvironment","implementation","jest","fn","mockImplementation","request","context","error","status","json","Promise","resolve","success","message","timestamp","Date","toISOString","from","select","eq","single","mockResolvedValue","data","limit","order","insert","update","neq","delete","storage","upload","path","getPublicUrl","mockReturnValue","publicUrl","remove","overrides","url","method","headers","Map","formData","FormData","text","supabase","user","id","email","validatedData","ok","JSON","stringify","name","type","size","file","File","Object","defineProperty","value","files","fields","entries","forEach","key","append","doMock","checkCRUDPermissions","withApiLogging","handler","logAdminAction","withErrorHandler","ApiError","Error","constructor","statusCode","NotFoundError","resource","ValidationError","composeMiddlewares","middlewares","withAdminAuth","withValidation","clearAllMocks","resetModules"],"mappings":"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"}