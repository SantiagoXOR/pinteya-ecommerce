{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\admin\\orders\\OrderListEnterprise.tsx"],"sourcesContent":["// ===================================\n// PINTEYA E-COMMERCE - ORDER LIST ENTERPRISE COMPONENT\n// ===================================\n\n'use client';\n\nimport React, { useState, useEffect, useCallback, useRef, useMemo, memo } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Badge } from '@/components/ui/badge';\nimport { \n  Select, \n  SelectContent, \n  SelectItem, \n  SelectTrigger, \n  SelectValue \n} from '@/components/ui/select';\nimport { \n  Table, \n  TableBody, \n  TableCell, \n  TableHead, \n  TableHeader, \n  TableRow \n} from '@/components/ui/table';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { \n  Search, \n  Filter, \n  Download, \n  RefreshCw, \n  Eye, \n  Edit,\n  MoreHorizontal,\n  ChevronLeft,\n  ChevronRight\n} from 'lucide-react';\nimport { \n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n  DropdownMenuSeparator\n} from '@/components/ui/dropdown-menu';\nimport { \n  OrderEnterprise, \n  OrderFilters, \n  OrderStatus,\n  PaymentStatus \n} from '@/types/orders-enterprise';\nimport { formatOrderStatus, formatPaymentStatus } from '@/lib/orders-enterprise';\nimport { useToast } from '@/hooks/use-toast';\nimport { useRenderMonitoring } from '@/hooks/monitoring/useRenderMonitoring';\nimport { useOrdersEnterpriseStrict } from '@/hooks/admin/useOrdersEnterpriseStrict';\n\n// ===================================\n// INTERFACES\n// ===================================\n\ninterface OrderListEnterpriseProps {\n  className?: string;\n  onOrderSelect?: (order: OrderEnterprise) => void;\n  onOrderEdit?: (order: OrderEnterprise) => void;\n  onBulkAction?: (action: string, orderIds: string[]) => void;\n  enableBulkActions?: boolean;\n  enableFilters?: boolean;\n  pageSize?: number;\n}\n\n// ===================================\n// COMPONENTES MEMOIZADOS\n// ===================================\n\ninterface OrderFiltersProps {\n  filters: any;\n  onFilterChange: (key: string, value: any) => void;\n  enabled: boolean;\n}\n\nconst OrderFilters = memo<OrderFiltersProps>(({ filters, onFilterChange, enabled }) => {\n  if (!enabled) return null;\n\n  return (\n    <Card className=\"mb-6\">\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <Filter className=\"w-5 h-5\" />\n          Filtros\n        </CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n          {/* Búsqueda */}\n          <div className=\"relative\">\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\" />\n            <Input\n              placeholder=\"Buscar órdenes...\"\n              value={filters.search || ''}\n              onChange={(e) => onFilterChange('search', e.target.value)}\n              className=\"pl-10\"\n            />\n          </div>\n\n          {/* Estado */}\n          <Select\n            value={filters.status || 'all'}\n            onValueChange={(value) => onFilterChange('status', value === 'all' ? undefined : value)}\n          >\n            <SelectTrigger>\n              <SelectValue placeholder=\"Estado\" />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"all\">Todos los estados</SelectItem>\n              <SelectItem value=\"pending\">Pendiente</SelectItem>\n              <SelectItem value=\"confirmed\">Confirmada</SelectItem>\n              <SelectItem value=\"processing\">Procesando</SelectItem>\n              <SelectItem value=\"shipped\">Enviada</SelectItem>\n              <SelectItem value=\"delivered\">Entregada</SelectItem>\n              <SelectItem value=\"cancelled\">Cancelada</SelectItem>\n            </SelectContent>\n          </Select>\n\n          {/* Estado de Pago */}\n          <Select\n            value={filters.payment_status || 'all'}\n            onValueChange={(value) => onFilterChange('payment_status', value === 'all' ? undefined : value)}\n          >\n            <SelectTrigger>\n              <SelectValue placeholder=\"Estado de Pago\" />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"all\">Todos los pagos</SelectItem>\n              <SelectItem value=\"pending\">Pendiente</SelectItem>\n              <SelectItem value=\"paid\">Pagado</SelectItem>\n              <SelectItem value=\"failed\">Falló</SelectItem>\n              <SelectItem value=\"refunded\">Reembolsado</SelectItem>\n            </SelectContent>\n          </Select>\n\n          {/* Ordenamiento */}\n          <Select\n            value={`${filters.sort_by}_${filters.sort_order}`}\n            onValueChange={(value) => {\n              const [sortBy, sortOrder] = value.split('_');\n              onFilterChange('sort_by', sortBy);\n              onFilterChange('sort_order', sortOrder);\n            }}\n          >\n            <SelectTrigger>\n              <SelectValue placeholder=\"Ordenar por\" />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"created_at_desc\">Más recientes</SelectItem>\n              <SelectItem value=\"created_at_asc\">Más antiguos</SelectItem>\n              <SelectItem value=\"total_desc\">Mayor monto</SelectItem>\n              <SelectItem value=\"total_asc\">Menor monto</SelectItem>\n              <SelectItem value=\"order_number_asc\">Número de orden</SelectItem>\n            </SelectContent>\n          </Select>\n        </div>\n      </CardContent>\n    </Card>\n  );\n});\n\nOrderFilters.displayName = 'OrderFilters';\n\ninterface BulkActionsProps {\n  selectedCount: number;\n  onBulkAction: (action: string) => void;\n  enabled: boolean;\n}\n\nconst BulkActions = memo<BulkActionsProps>(({ selectedCount, onBulkAction, enabled }) => {\n  if (!enabled || selectedCount === 0) return null;\n\n  return (\n    <div className=\"flex items-center gap-2 mb-4 p-3 bg-blue-50 rounded-lg\">\n      <span className=\"text-sm text-blue-700\">\n        {selectedCount} orden(es) seleccionada(s)\n      </span>\n      <div className=\"flex gap-2 ml-auto\">\n        <Button\n          size=\"sm\"\n          variant=\"outline\"\n          onClick={() => onBulkAction('export')}\n        >\n          <Download className=\"w-4 h-4 mr-1\" />\n          Exportar\n        </Button>\n        <Button\n          size=\"sm\"\n          variant=\"outline\"\n          onClick={() => onBulkAction('update_status')}\n        >\n          Actualizar Estado\n        </Button>\n        <Button\n          size=\"sm\"\n          variant=\"destructive\"\n          onClick={() => onBulkAction('delete')}\n        >\n          Eliminar\n        </Button>\n      </div>\n    </div>\n  );\n});\n\nBulkActions.displayName = 'BulkActions';\n\n// Interfaces removidas - ahora se usan los tipos del hook estricto\n\n// ===================================\n// COMPONENTE PRINCIPAL\n// ===================================\n\nexport const OrderListEnterprise: React.FC<OrderListEnterpriseProps> = ({\n  className = '',\n  onOrderSelect,\n  onOrderEdit,\n  onBulkAction,\n  enableBulkActions = true,\n  enableFilters = true,\n  pageSize = 20,\n}) => {\n  console.log('🚀 OrderListEnterprise - Componente renderizándose con props:', {\n    className,\n    enableBulkActions,\n    enableFilters,\n    pageSize\n  });\n  \n  const { toast } = useToast();\n  \n  // Monitoreo de renderizado\n  const { trackError, metrics } = useRenderMonitoring({\n    componentName: 'OrderListEnterprise',\n    enabled: process.env.NODE_ENV === 'development',\n    enableToasts: false, // Evitar spam de toasts\n    enableConsoleLogging: true,\n    sampleRate: 0.1 // Monitorear solo 10% de los renders para performance\n  });\n  \n  // Hook con validación estricta de tipos\n  const {\n    orders,\n    pagination,\n    filters,\n    analytics,\n    isLoading,\n    error,\n    fetchOrders,\n    updateFilters,\n    refreshOrders,\n    clearError,\n    retryLastRequest\n  } = useOrdersEnterpriseStrict({\n    page: 1,\n    limit: pageSize,\n    sort_by: 'created_at',\n    sort_order: 'desc'\n  }, {\n    autoFetch: true,\n    maxRetries: 3,\n    timeout: 10000,\n    enableCache: true\n  });\n\n  // DEBUG: Logs para verificar datos del hook\n  console.log('🔍 OrderListEnterprise - Hook data:', {\n    orders: orders,\n    ordersLength: orders?.length,\n    pagination,\n    isLoading,\n    error,\n    filters\n  });\n\n  // Estado local para selecciones\n  const [selectedOrders, setSelectedOrders] = useState<string[]>([]);\n\n  // ===================================\n  // FUNCIONES DE MANEJO DE FILTROS\n  // ===================================\n\n  // ===================================\n  // MANEJADORES DE EVENTOS\n  // ===================================\n\n  // Usar useRef para evitar dependencias circulares\n  const filtersRef = useRef(filters);\n  filtersRef.current = filters;\n\n  const handleFilterChange = useCallback((key: keyof typeof filters, value: any) => {\n    try {\n      const currentFilters = filtersRef.current;\n      const updatedFilters = { ...currentFilters, [key]: value, page: 1 };\n      updateFilters(updatedFilters);\n      // REMOVIDO: fetchOrders duplicado que causaba refresco infinito\n      // El hook ya maneja el fetch automáticamente\n    } catch (error) {\n      trackError(error as Error, { action: 'filter_change', key, value });\n      toast({\n        title: 'Error al aplicar filtros',\n        description: 'No se pudieron aplicar los filtros seleccionados.',\n        variant: 'destructive'\n      });\n    }\n  }, [updateFilters, trackError, toast]); // Removido 'filters' de dependencias\n\n  const handlePageChange = useCallback((newPage: number) => {\n    try {\n      const currentFilters = filtersRef.current;\n      const updatedFilters = { ...currentFilters, page: newPage };\n      updateFilters(updatedFilters);\n      // REMOVIDO: fetchOrders duplicado que causaba refresco infinito\n      // El hook ya maneja el fetch automáticamente\n    } catch (error) {\n      trackError(error as Error, { action: 'page_change', page: newPage });\n      toast({\n        title: 'Error de paginación',\n        description: 'No se pudo cambiar de página.',\n        variant: 'destructive'\n      });\n    }\n  }, [updateFilters, trackError, toast]); // Removido 'filters' de dependencias\n\n  const handleSelectOrder = useCallback((orderId: string, selected: boolean) => {\n    setSelectedOrders(prev => \n      selected\n        ? [...prev, orderId]\n        : prev.filter(id => id !== orderId)\n    );\n  }, []);\n\n  const handleSelectAll = useCallback((selected: boolean) => {\n    setSelectedOrders(selected ? orders.map(order => order.id) : []);\n  }, [orders]);\n\n  const handleBulkAction = useCallback((action: string) => {\n    if (selectedOrders.length === 0) {\n      toast({\n        title: 'Advertencia',\n        description: 'Selecciona al menos una orden',\n        variant: 'destructive',\n      });\n      return;\n    }\n\n    onBulkAction?.(action, selectedOrders);\n  }, [selectedOrders, onBulkAction, toast]);\n\n  const handleRefresh = useCallback(() => {\n    refreshOrders();\n  }, [refreshOrders]);\n\n  // ===================================\n  // DATOS MEMOIZADOS\n  // ===================================\n\n  // Memoizar datos computados para evitar recálculos innecesarios\n  const memoizedData = useMemo(() => {\n    const allSelected = orders.length > 0 && selectedOrders.length === orders.length;\n    const someSelected = selectedOrders.length > 0;\n    const hasOrders = orders.length > 0;\n    const hasNextPage = pagination?.hasNextPage || false;\n    const hasPreviousPage = pagination?.hasPreviousPage || false;\n    const currentPage = pagination?.page || 1;\n    const totalPages = pagination?.totalPages || 1;\n\n    return {\n      allSelected,\n      someSelected,\n      hasOrders,\n      hasNextPage,\n      hasPreviousPage,\n      currentPage,\n      totalPages\n    };\n  }, [orders, selectedOrders, pagination]);\n\n  // Memoizar handlers que dependen de datos computados\n  const memoizedHandlers = useMemo(() => ({\n    onFilterChange: handleFilterChange,\n    onPageChange: handlePageChange,\n    onSelectOrder: handleSelectOrder,\n    onSelectAll: handleSelectAll,\n    onBulkAction: handleBulkAction,\n    onRefresh: handleRefresh\n  }), [\n    handleFilterChange,\n    handlePageChange,\n    handleSelectOrder,\n    handleSelectAll,\n    handleBulkAction,\n    handleRefresh\n  ]);\n\n  // ===================================\n  // FUNCIONES DE RENDER ELIMINADAS - AHORA USAN COMPONENTES MEMOIZADOS\n  // ===================================\n\n  // Función renderBulkActions eliminada - ahora usa componente BulkActions memoizado\n\n  // ===================================\n  // RENDER DE TABLA\n  // ===================================\n\n  const renderTable = () => {\n    if (isLoading) {\n      return (\n        <div className=\"flex items-center justify-center h-64\">\n          <RefreshCw className=\"w-8 h-8 animate-spin text-gray-400\" />\n        </div>\n      );\n    }\n\n    if (error) {\n      return (\n        <div className=\"text-center py-8\">\n          <p className=\"text-red-600 mb-4\">{error}</p>\n          <Button onClick={handleRefresh} variant=\"outline\">\n            <RefreshCw className=\"w-4 h-4 mr-2\" />\n            Reintentar\n          </Button>\n        </div>\n      );\n    }\n\n    if (orders.length === 0) {\n      return (\n        <div className=\"text-center py-8 text-gray-500\">\n          No se encontraron órdenes con los filtros aplicados\n        </div>\n      );\n    }\n\n    return (\n      <Table>\n        <TableHeader>\n          <TableRow>\n            {enableBulkActions && (\n              <TableHead className=\"w-12\">\n                <Checkbox\n                  checked={selectedOrders.length === orders.length}\n                  onCheckedChange={handleSelectAll}\n                />\n              </TableHead>\n            )}\n            <TableHead>Orden</TableHead>\n            <TableHead>Cliente</TableHead>\n            <TableHead>Estado</TableHead>\n            <TableHead>Pago</TableHead>\n            <TableHead>Total</TableHead>\n            <TableHead>Fecha</TableHead>\n            <TableHead className=\"w-12\">Acciones</TableHead>\n          </TableRow>\n        </TableHeader>\n        <TableBody>\n          {orders.map((order) => {\n            const statusInfo = formatOrderStatus(order.status);\n            const paymentInfo = formatPaymentStatus(order.payment_status);\n            \n            return (\n              <TableRow key={order.id}>\n                {enableBulkActions && (\n                  <TableCell>\n                    <Checkbox\n                      checked={selectedOrders.includes(order.id)}\n                      onCheckedChange={(checked) => handleSelectOrder(order.id, !!checked)}\n                    />\n                  </TableCell>\n                )}\n                <TableCell>\n                  <div>\n                    <div className=\"font-medium\">{order.order_number}</div>\n                    <div className=\"text-sm text-gray-500\">#{String(order.id).slice(0, 8)}</div>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <div>\n                    <div className=\"font-medium\">{order.user_profiles?.name || 'N/A'}</div>\n                    <div className=\"text-sm text-gray-500\">{order.user_profiles?.email}</div>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <Badge\n                    variant=\"secondary\"\n                    className={\n                      statusInfo.color === 'green' ? 'bg-green-100 text-green-800' :\n                      statusInfo.color === 'blue' ? 'bg-blue-100 text-blue-800' :\n                      statusInfo.color === 'yellow' ? 'bg-yellow-100 text-yellow-800' :\n                      statusInfo.color === 'red' ? 'bg-red-100 text-red-800' :\n                      statusInfo.color === 'purple' ? 'bg-purple-100 text-purple-800' :\n                      statusInfo.color === 'orange' ? 'bg-orange-100 text-orange-800' :\n                      'bg-gray-100 text-gray-800'\n                    }\n                  >\n                    {statusInfo.label}\n                  </Badge>\n                </TableCell>\n                <TableCell>\n                  <Badge\n                    variant=\"secondary\"\n                    className={\n                      paymentInfo.color === 'green' ? 'bg-green-100 text-green-800' :\n                      paymentInfo.color === 'yellow' ? 'bg-yellow-100 text-yellow-800' :\n                      paymentInfo.color === 'red' ? 'bg-red-100 text-red-800' :\n                      'bg-gray-100 text-gray-800'\n                    }\n                  >\n                    {paymentInfo.label}\n                  </Badge>\n                </TableCell>\n                <TableCell>\n                  <div className=\"font-medium\">\n                    ${(order.total || 0).toLocaleString()} {order.currency}\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <div className=\"text-sm\">\n                    {new Date(order.created_at).toLocaleDateString()}\n                  </div>\n                </TableCell>\n                <TableCell>\n                  <DropdownMenu>\n                    <DropdownMenuTrigger asChild>\n                      <Button variant=\"ghost\" size=\"sm\">\n                        <MoreHorizontal className=\"w-4 h-4\" />\n                      </Button>\n                    </DropdownMenuTrigger>\n                    <DropdownMenuContent align=\"end\">\n                      <DropdownMenuItem onClick={() => onOrderSelect?.(order)}>\n                        <Eye className=\"w-4 h-4 mr-2\" />\n                        Ver Detalles\n                      </DropdownMenuItem>\n                      <DropdownMenuItem onClick={() => onOrderEdit?.(order)}>\n                        <Edit className=\"w-4 h-4 mr-2\" />\n                        Editar\n                      </DropdownMenuItem>\n                      <DropdownMenuSeparator />\n                      <DropdownMenuItem onClick={() => handleBulkAction('export', [order.id])}>\n                        <Download className=\"w-4 h-4 mr-2\" />\n                        Exportar\n                      </DropdownMenuItem>\n                    </DropdownMenuContent>\n                  </DropdownMenu>\n                </TableCell>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    );\n  };\n\n  // ===================================\n  // RENDER DE PAGINACIÓN\n  // ===================================\n\n  const renderPagination = () => {\n    if (!pagination || pagination.totalPages <= 1) return null;\n\n    return (\n      <div className=\"flex items-center justify-between mt-6\">\n        <div className=\"text-sm text-gray-500\">\n          Mostrando {((pagination.page - 1) * pagination.limit) + 1} a{' '}\n          {Math.min(pagination.page * pagination.limit, pagination.total)} de{' '}\n          {pagination.total} órdenes\n        </div>\n        <div className=\"flex items-center gap-2\">\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => handlePageChange(pagination.page - 1)}\n            disabled={!pagination.hasPreviousPage}\n          >\n            <ChevronLeft className=\"w-4 h-4\" />\n            Anterior\n          </Button>\n          <span className=\"text-sm\">\n            Página {pagination.page} de {pagination.totalPages}\n          </span>\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => handlePageChange(pagination.page + 1)}\n            disabled={!pagination.hasNextPage}\n          >\n            Siguiente\n            <ChevronRight className=\"w-4 h-4\" />\n          </Button>\n        </div>\n      </div>\n    );\n  };\n\n  // ===================================\n  // RENDER PRINCIPAL\n  // ===================================\n\n  return (\n    <div className={`space-y-6 ${className}`}>\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h2 className=\"text-2xl font-bold\">Gestión de Órdenes</h2>\n          <p className=\"text-gray-600\">\n            Administra y monitorea todas las órdenes del sistema\n          </p>\n        </div>\n        <Button onClick={handleRefresh} variant=\"outline\">\n          <RefreshCw className=\"w-4 h-4 mr-2\" />\n          Actualizar\n        </Button>\n      </div>\n\n      {/* Filtros */}\n      <OrderFilters\n        filters={filters}\n        onFilterChange={memoizedHandlers.onFilterChange}\n        enabled={enableFilters}\n      />\n\n      {/* Acciones masivas */}\n      <BulkActions\n        selectedCount={selectedOrders.length}\n        onBulkAction={memoizedHandlers.onBulkAction}\n        enabled={enableBulkActions}\n      />\n\n      {/* Tabla */}\n      <Card>\n        <CardContent className=\"p-0\">\n          {renderTable()}\n        </CardContent>\n      </Card>\n\n      {/* Paginación */}\n      {renderPagination()}\n    </div>\n  );\n};\n"],"names":["OrderListEnterprise","OrderFilters","memo","filters","onFilterChange","enabled","Card","className","CardHeader","CardTitle","Filter","CardContent","div","Search","Input","placeholder","value","search","onChange","e","target","Select","status","onValueChange","undefined","SelectTrigger","SelectValue","SelectContent","SelectItem","payment_status","sort_by","sort_order","sortBy","sortOrder","split","displayName","BulkActions","selectedCount","onBulkAction","span","Button","size","variant","onClick","Download","onOrderSelect","onOrderEdit","enableBulkActions","enableFilters","pageSize","console","log","toast","useToast","trackError","metrics","useRenderMonitoring","componentName","process","env","NODE_ENV","enableToasts","enableConsoleLogging","sampleRate","orders","pagination","analytics","isLoading","error","fetchOrders","updateFilters","refreshOrders","clearError","retryLastRequest","useOrdersEnterpriseStrict","page","limit","autoFetch","maxRetries","timeout","enableCache","ordersLength","length","selectedOrders","setSelectedOrders","useState","filtersRef","useRef","current","handleFilterChange","useCallback","key","currentFilters","updatedFilters","action","title","description","handlePageChange","newPage","handleSelectOrder","orderId","selected","prev","filter","id","handleSelectAll","map","order","handleBulkAction","handleRefresh","memoizedData","useMemo","allSelected","someSelected","hasOrders","hasNextPage","hasPreviousPage","currentPage","totalPages","memoizedHandlers","onPageChange","onSelectOrder","onSelectAll","onRefresh","renderTable","RefreshCw","p","Table","TableHeader","TableRow","TableHead","Checkbox","checked","onCheckedChange","TableBody","statusInfo","formatOrderStatus","paymentInfo","formatPaymentStatus","TableCell","includes","order_number","String","slice","user_profiles","name","email","Badge","color","label","total","toLocaleString","currency","Date","created_at","toLocaleDateString","DropdownMenu","DropdownMenuTrigger","asChild","MoreHorizontal","DropdownMenuContent","align","DropdownMenuItem","Eye","Edit","DropdownMenuSeparator","renderPagination","Math","min","disabled","ChevronLeft","ChevronRight","h2"],"mappings":"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"}