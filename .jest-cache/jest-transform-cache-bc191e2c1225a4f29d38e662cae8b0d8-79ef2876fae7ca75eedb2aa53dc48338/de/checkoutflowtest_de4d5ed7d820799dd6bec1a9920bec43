b028d7b05a674a79e8f886d15b2b04d1
"use strict";
// Mock de los componentes del Design System
jest.mock('../shipping-info', ()=>({
        ShippingInfo: ({ options, selectedOption })=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                "data-testid": "shipping-info",
                children: [
                    "Shipping options for: ",
                    selectedOption
                ]
            })
    }));
jest.mock('../cart-summary', ()=>({
        CartSummary: ({ cartItems, variant })=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                "data-testid": "cart-summary",
                children: [
                    "Cart Summary - ",
                    cartItems.length,
                    " items - ",
                    variant
                ]
            })
    }));
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_default(require("react"));
const _react1 = require("@testing-library/react");
require("@testing-library/jest-dom");
const _checkoutflow = require("../checkout-flow");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
const mockCartItems = [
    {
        id: 1,
        title: 'Pintura Sherwin Williams 4L',
        price: 10000,
        discountedPrice: 8500,
        quantity: 2
    }
];
const mockCheckoutData = {
    totalPrice: 17000,
    shippingCost: 2500,
    discount: 0,
    finalTotal: 19500,
    shippingMethod: 'standard'
};
describe('CheckoutFlow', ()=>{
    const defaultProps = {
        cartItems: mockCartItems,
        checkoutData: mockCheckoutData
    };
    it('renders checkout flow with basic elements', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_checkoutflow.CheckoutFlow, {
            ...defaultProps
        }));
        expect(_react1.screen.getByText('Finalizar Compra')).toBeInTheDocument();
        expect(_react1.screen.getByRole('button', {
            name: /completar pedido/i
        })).toBeInTheDocument();
        expect(_react1.screen.getByTestId('cart-summary')).toBeInTheDocument();
    });
    it('renders without errors when no errors provided', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_checkoutflow.CheckoutFlow, {
            ...defaultProps
        }));
        // No debería mostrar sección de errores
        expect(_react1.screen.queryByText('Errores:')).not.toBeInTheDocument();
    });
    it('displays cart summary correctly', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_checkoutflow.CheckoutFlow, {
            ...defaultProps
        }));
        // Verificar que CartSummary se renderiza con los datos correctos
        expect(_react1.screen.getByTestId('cart-summary')).toBeInTheDocument();
    });
    it('renders with proper accessibility', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_checkoutflow.CheckoutFlow, {
            ...defaultProps
        }));
        // Verificar elementos accesibles
        expect(_react1.screen.getByRole('button', {
            name: /completar pedido/i
        })).toBeInTheDocument();
    });
    it('renders with custom className', ()=>{
        const customClass = 'custom-checkout-class';
        const { container } = (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_checkoutflow.CheckoutFlow, {
            ...defaultProps,
            className: customClass
        }));
        // Verificar que la clase se aplica al contenedor principal
        expect(container.firstChild).toHaveClass(customClass);
    });
    it('shows cart summary by default', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_checkoutflow.CheckoutFlow, {
            ...defaultProps
        }));
        expect(_react1.screen.getByTestId('cart-summary')).toBeInTheDocument();
        expect(_react1.screen.getByText('Cart Summary - 1 items - compact')).toBeInTheDocument();
    });
    it('renders with empty cart items', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_checkoutflow.CheckoutFlow, {
            ...defaultProps,
            cartItems: []
        }));
        expect(_react1.screen.getByTestId('cart-summary')).toBeInTheDocument();
        expect(_react1.screen.getByText('Cart Summary - 0 items - compact')).toBeInTheDocument();
    });
    it('calls onComplete when complete button is clicked', ()=>{
        const mockOnComplete = jest.fn();
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_checkoutflow.CheckoutFlow, {
            ...defaultProps,
            onComplete: mockOnComplete
        }));
        const completeButton = _react1.screen.getByRole('button', {
            name: /completar pedido/i
        });
        _react1.fireEvent.click(completeButton);
        expect(mockOnComplete).toHaveBeenCalledTimes(1);
    });
    it('disables complete button when loading', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_checkoutflow.CheckoutFlow, {
            ...defaultProps,
            isLoading: true
        }));
        const completeButton = _react1.screen.getByRole('button', {
            name: /procesando/i
        });
        expect(completeButton).toBeDisabled();
    });
    it('shows complete button by default', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_checkoutflow.CheckoutFlow, {
            ...defaultProps
        }));
        expect(_react1.screen.getByText('Finalizar Compra')).toBeInTheDocument();
        expect(_react1.screen.getByRole('button', {
            name: /completar pedido/i
        })).toBeInTheDocument();
    });
    it('calls onComplete when finish button is clicked', ()=>{
        const mockOnComplete = jest.fn();
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_checkoutflow.CheckoutFlow, {
            ...defaultProps,
            onComplete: mockOnComplete
        }));
        const finishButton = _react1.screen.getByRole('button', {
            name: /completar pedido/i
        });
        _react1.fireEvent.click(finishButton);
        expect(mockOnComplete).toHaveBeenCalledTimes(1);
    });
    it('shows loading state', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_checkoutflow.CheckoutFlow, {
            ...defaultProps,
            isLoading: true
        }));
        expect(_react1.screen.getByText('Procesando...')).toBeInTheDocument();
    });
    it('displays errors when present', ()=>{
        const errors = {
            email: 'Email es requerido',
            address: 'Dirección es requerida'
        };
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_checkoutflow.CheckoutFlow, {
            ...defaultProps,
            errors: errors
        }));
        expect(_react1.screen.getByText('Errores:')).toBeInTheDocument();
        expect(_react1.screen.getByText('• Email es requerido')).toBeInTheDocument();
        expect(_react1.screen.getByText('• Dirección es requerida')).toBeInTheDocument();
    });
    it('renders with custom children content', ()=>{
        const customContent = /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
            children: "Custom checkout content"
        });
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_checkoutflow.CheckoutFlow, {
            ...defaultProps,
            children: customContent
        }));
        expect(_react1.screen.getByText('Custom checkout content')).toBeInTheDocument();
        expect(_react1.screen.getByText('Finalizar Compra')).toBeInTheDocument();
    });
    it('renders cart summary with correct data', ()=>{
        const checkoutData = {
            totalPrice: 100,
            shippingCost: 10,
            discount: 5,
            finalTotal: 105
        };
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_checkoutflow.CheckoutFlow, {
            ...defaultProps,
            checkoutData: checkoutData
        }));
        // Verificar que el componente se renderiza (CartSummary está presente)
        expect(_react1.screen.getByText('Finalizar Compra')).toBeInTheDocument();
    });
    it('shows loading state correctly', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_checkoutflow.CheckoutFlow, {
            ...defaultProps,
            isLoading: true
        }));
        // Verificar que muestra el estado de carga
        expect(_react1.screen.getByText('Procesando...')).toBeInTheDocument();
        // Verificar que el botón está deshabilitado
        const button = _react1.screen.getByRole('button', {
            name: /procesando/i
        });
        expect(button).toBeDisabled();
    });
    it('renders children content', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_checkoutflow.CheckoutFlow, {
            ...defaultProps,
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                "data-testid": "custom-content",
                children: "Custom step content"
            })
        }));
        expect(_react1.screen.getByTestId('custom-content')).toBeInTheDocument();
        expect(_react1.screen.getByText('Custom step content')).toBeInTheDocument();
    });
});

//# sourceMappingURL=data:application/json;base64,