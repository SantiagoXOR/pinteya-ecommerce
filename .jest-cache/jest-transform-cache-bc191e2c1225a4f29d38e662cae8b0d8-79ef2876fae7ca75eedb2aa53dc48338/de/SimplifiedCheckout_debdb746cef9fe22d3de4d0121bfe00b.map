{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\Checkout\\SimplifiedCheckout.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { Card, CardHeader, CardTitle, CardContent } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Separator } from \"@/components/ui/separator\";\r\nimport { useCheckout } from \"@/hooks/useCheckout\";\r\nimport {\r\n  ShoppingCart,\r\n  CreditCard,\r\n  MapPin,\r\n  User,\r\n  Phone,\r\n  Mail,\r\n  Package,\r\n  Truck,\r\n  CheckCircle,\r\n  AlertCircle,\r\n  Loader2\r\n} from \"lucide-react\";\r\nimport Image from \"next/image\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { CommercialProductCard } from \"@/components/ui/product-card-commercial\";\r\n\r\nconst SimplifiedCheckout = () => {\r\n  const router = useRouter();\r\n  const {\r\n    formData,\r\n    isLoading,\r\n    errors,\r\n    step,\r\n    cartItems,\r\n    totalPrice,\r\n    shippingCost,\r\n    discount,\r\n    finalTotal,\r\n    appliedCoupon,\r\n    updateBillingData,\r\n    updateFormData,\r\n    processCheckout,\r\n  } = useCheckout();\r\n\r\n  const [currentStep, setCurrentStep] = useState<'form' | 'confirmation' | 'processing'>('form');\r\n  const [formErrors, setFormErrors] = useState<Record<string, string>>({});\r\n\r\n  // Redirigir si el carrito está vacío\r\n  useEffect(() => {\r\n    if (cartItems.length === 0 && currentStep === 'form') {\r\n      router.push('/cart');\r\n    }\r\n  }, [cartItems.length, currentStep, router]);\r\n\r\n  // Validación del formulario\r\n  const validateForm = () => {\r\n    const newErrors: Record<string, string> = {};\r\n\r\n    if (!formData.billing.firstName.trim()) {\r\n      newErrors.firstName = 'El nombre es requerido';\r\n    }\r\n    if (!formData.billing.lastName.trim()) {\r\n      newErrors.lastName = 'El apellido es requerido';\r\n    }\r\n    if (!formData.billing.email.trim()) {\r\n      newErrors.email = 'El email es requerido';\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.billing.email)) {\r\n      newErrors.email = 'Email inválido';\r\n    }\r\n    if (!formData.billing.phone.trim()) {\r\n      newErrors.phone = 'El teléfono es requerido';\r\n    }\r\n    if (!formData.billing.streetAddress.trim()) {\r\n      newErrors.streetAddress = 'La dirección es requerida';\r\n    }\r\n    if (!formData.billing.city.trim()) {\r\n      newErrors.city = 'La ciudad es requerida';\r\n    }\r\n    if (!formData.billing.state.trim()) {\r\n      newErrors.state = 'La provincia es requerida';\r\n    }\r\n    if (!formData.billing.zipCode.trim()) {\r\n      newErrors.zipCode = 'El código postal es requerido';\r\n    }\r\n\r\n    setFormErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleInputChange = (field: string, value: string) => {\r\n    updateBillingData({ [field]: value });\r\n    // Limpiar error del campo cuando el usuario empiece a escribir\r\n    if (formErrors[field]) {\r\n      setFormErrors(prev => ({ ...prev, [field]: '' }));\r\n    }\r\n  };\r\n\r\n  const handleContinueToConfirmation = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (validateForm()) {\r\n      setCurrentStep('confirmation');\r\n    }\r\n  };\r\n\r\n  const handleConfirmOrder = async () => {\r\n    setCurrentStep('processing');\r\n    await processCheckout();\r\n  };\r\n\r\n  const handleBackToForm = () => {\r\n    setCurrentStep('form');\r\n  };\r\n\r\n  // Renderizar paso del formulario\r\n  const renderFormStep = () => (\r\n    <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\r\n      {/* Formulario Principal */}\r\n      <div className=\"lg:col-span-2\">\r\n        <form onSubmit={handleContinueToConfirmation} className=\"space-y-6\">\r\n          {/* Información Personal */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <User className=\"w-5 h-5 text-primary\" />\r\n                Información Personal\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                    Nombre *\r\n                  </label>\r\n                  <Input\r\n                    value={formData.billing.firstName}\r\n                    onChange={(e) => handleInputChange('firstName', e.target.value)}\r\n                    placeholder=\"Tu nombre\"\r\n                    className={cn(formErrors.firstName && \"border-red-500\")}\r\n                  />\r\n                  {formErrors.firstName && (\r\n                    <p className=\"text-red-500 text-xs mt-1\">{formErrors.firstName}</p>\r\n                  )}\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                    Apellido *\r\n                  </label>\r\n                  <Input\r\n                    value={formData.billing.lastName}\r\n                    onChange={(e) => handleInputChange('lastName', e.target.value)}\r\n                    placeholder=\"Tu apellido\"\r\n                    className={cn(formErrors.lastName && \"border-red-500\")}\r\n                  />\r\n                  {formErrors.lastName && (\r\n                    <p className=\"text-red-500 text-xs mt-1\">{formErrors.lastName}</p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                    Email *\r\n                  </label>\r\n                  <Input\r\n                    type=\"email\"\r\n                    value={formData.billing.email}\r\n                    onChange={(e) => handleInputChange('email', e.target.value)}\r\n                    placeholder=\"tu@email.com\"\r\n                    className={cn(formErrors.email && \"border-red-500\")}\r\n                  />\r\n                  {formErrors.email && (\r\n                    <p className=\"text-red-500 text-xs mt-1\">{formErrors.email}</p>\r\n                  )}\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                    Teléfono *\r\n                  </label>\r\n                  <Input\r\n                    type=\"tel\"\r\n                    value={formData.billing.phone}\r\n                    onChange={(e) => handleInputChange('phone', e.target.value)}\r\n                    placeholder=\"11 1234-5678\"\r\n                    className={cn(formErrors.phone && \"border-red-500\")}\r\n                  />\r\n                  {formErrors.phone && (\r\n                    <p className=\"text-red-500 text-xs mt-1\">{formErrors.phone}</p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Dirección de Entrega */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <MapPin className=\"w-5 h-5 text-primary\" />\r\n                Dirección de Entrega\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Dirección *\r\n                </label>\r\n                <Input\r\n                  value={formData.billing.streetAddress}\r\n                  onChange={(e) => handleInputChange('streetAddress', e.target.value)}\r\n                  placeholder=\"Calle y número\"\r\n                  className={cn(formErrors.streetAddress && \"border-red-500\")}\r\n                />\r\n                {formErrors.streetAddress && (\r\n                  <p className=\"text-red-500 text-xs mt-1\">{formErrors.streetAddress}</p>\r\n                )}\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Departamento/Piso (opcional)\r\n                </label>\r\n                <Input\r\n                  value={formData.billing.apartment}\r\n                  onChange={(e) => handleInputChange('apartment', e.target.value)}\r\n                  placeholder=\"Depto, piso, etc.\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                    Ciudad *\r\n                  </label>\r\n                  <Input\r\n                    value={formData.billing.city}\r\n                    onChange={(e) => handleInputChange('city', e.target.value)}\r\n                    placeholder=\"Ciudad\"\r\n                    className={cn(formErrors.city && \"border-red-500\")}\r\n                  />\r\n                  {formErrors.city && (\r\n                    <p className=\"text-red-500 text-xs mt-1\">{formErrors.city}</p>\r\n                  )}\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                    Provincia *\r\n                  </label>\r\n                  <Input\r\n                    value={formData.billing.state}\r\n                    onChange={(e) => handleInputChange('state', e.target.value)}\r\n                    placeholder=\"Provincia\"\r\n                    className={cn(formErrors.state && \"border-red-500\")}\r\n                  />\r\n                  {formErrors.state && (\r\n                    <p className=\"text-red-500 text-xs mt-1\">{formErrors.state}</p>\r\n                  )}\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                    Código Postal *\r\n                  </label>\r\n                  <Input\r\n                    value={formData.billing.zipCode}\r\n                    onChange={(e) => handleInputChange('zipCode', e.target.value)}\r\n                    placeholder=\"CP\"\r\n                    className={cn(formErrors.zipCode && \"border-red-500\")}\r\n                  />\r\n                  {formErrors.zipCode && (\r\n                    <p className=\"text-red-500 text-xs mt-1\">{formErrors.zipCode}</p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Método de Envío */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <Truck className=\"w-5 h-5 text-primary\" />\r\n                Método de Envío\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-3\">\r\n                <label className=\"flex items-center gap-3 p-3 border rounded-lg cursor-pointer hover:bg-gray-50\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"shipping\"\r\n                    value=\"free\"\r\n                    checked={formData.shippingMethod === 'free'}\r\n                    onChange={(e) => updateFormData({ shippingMethod: e.target.value as 'free' | 'express' | 'pickup' })}\r\n                    className=\"text-primary\"\r\n                  />\r\n                  <div className=\"flex-1\">\r\n                    <div className=\"font-medium\">Envío Estándar</div>\r\n                    <div className=\"text-sm text-gray-600\">5-7 días hábiles</div>\r\n                  </div>\r\n                  <div className=\"font-semibold\">\r\n                    {totalPrice >= 25000 ? 'Gratis' : '$2.500'}\r\n                  </div>\r\n                </label>\r\n                \r\n                <label className=\"flex items-center gap-3 p-3 border rounded-lg cursor-pointer hover:bg-gray-50\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"shipping\"\r\n                    value=\"express\"\r\n                    checked={formData.shippingMethod === 'express'}\r\n                    onChange={(e) => updateFormData({ shippingMethod: e.target.value as 'free' | 'express' | 'pickup' })}\r\n                    className=\"text-primary\"\r\n                  />\r\n                  <div className=\"flex-1\">\r\n                    <div className=\"font-medium\">Envío Express</div>\r\n                    <div className=\"text-sm text-gray-600\">1-2 días hábiles</div>\r\n                  </div>\r\n                  <div className=\"font-semibold\">$5.000</div>\r\n                </label>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Método de Pago */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <CreditCard className=\"w-5 h-5 text-primary\" />\r\n                Método de Pago\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"flex items-center gap-3 p-4 border rounded-lg bg-primary/5\">\r\n                <div className=\"w-10 h-10 bg-primary rounded-lg flex items-center justify-center\">\r\n                  <span className=\"text-white font-bold text-sm\">MP</span>\r\n                </div>\r\n                <div className=\"flex-1\">\r\n                  <div className=\"font-medium\">MercadoPago</div>\r\n                  <div className=\"text-sm text-gray-600\">Tarjetas, efectivo, transferencias</div>\r\n                </div>\r\n                <CheckCircle className=\"w-5 h-5 text-green-500\" />\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Botón Continuar */}\r\n          <div className=\"flex justify-end\">\r\n            <Button type=\"submit\" size=\"lg\" className=\"min-w-[200px]\">\r\n              Revisar Pedido\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n      {/* Resumen del Pedido */}\r\n      <div className=\"lg:col-span-1\">\r\n        {renderOrderSummary()}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  // Renderizar resumen del pedido\r\n  const renderOrderSummary = () => (\r\n    <Card className=\"sticky top-4\">\r\n      <CardHeader>\r\n        <CardTitle className=\"flex items-center gap-2\">\r\n          <ShoppingCart className=\"w-5 h-5 text-primary\" />\r\n          Resumen del Pedido\r\n          <Badge variant=\"outline\" size=\"sm\">\r\n            {cartItems.length} {cartItems.length === 1 ? 'item' : 'items'}\r\n          </Badge>\r\n        </CardTitle>\r\n      </CardHeader>\r\n      <CardContent className=\"space-y-4\">\r\n        {/* Items del carrito con ProductCard */}\r\n        <div className=\"max-h-80 overflow-y-auto space-y-4\">\r\n          {cartItems.map((item: any, index: number) => (\r\n            <div key={index} className=\"border-b border-gray-100 pb-4 last:border-b-0\">\r\n              <CommercialProductCard\r\n                image={item.imgs?.thumbnails?.[0] || item.imgs?.previews?.[0] || '/images/products/placeholder.svg'}\r\n                title={item.title}\r\n                brand={item.brand || \"Marca\"}\r\n                price={item.discountedPrice}\r\n                originalPrice={item.discountedPrice < item.price ? item.price : undefined}\r\n                discount={item.discountedPrice < item.price ?\r\n                  `${Math.round(((item.price - item.discountedPrice) / item.price) * 100)}%` : undefined}\r\n                stock={item.quantity} // Mostrar cantidad en el carrito como stock\r\n                productId={item.id}\r\n                cta={`Total: $${(item.discountedPrice * item.quantity).toLocaleString()}`}\r\n                onAddToCart={() => {\r\n                  // En checkout, no necesitamos agregar más al carrito\r\n                }}\r\n                showCartAnimation={false}\r\n                freeShipping={item.discountedPrice >= 15000}\r\n                shippingText={item.discountedPrice >= 15000 ? \"Envío gratis\" : \"En carrito\"}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <Separator />\r\n\r\n        {/* Totales */}\r\n        <div className=\"space-y-2\">\r\n          <div className=\"flex justify-between text-sm\">\r\n            <span>Subtotal</span>\r\n            <span>${totalPrice.toLocaleString()}</span>\r\n          </div>\r\n          <div className=\"flex justify-between text-sm\">\r\n            <span>Envío</span>\r\n            <span>\r\n              {shippingCost === 0 ? (\r\n                <span className=\"text-green-600 font-medium\">Gratis</span>\r\n              ) : (\r\n                `$${shippingCost.toLocaleString()}`\r\n              )}\r\n            </span>\r\n          </div>\r\n          {discount > 0 && (\r\n            <div className=\"flex justify-between text-sm text-green-600\">\r\n              <span>Descuento</span>\r\n              <span>-${discount.toLocaleString()}</span>\r\n            </div>\r\n          )}\r\n          <Separator />\r\n          <div className=\"flex justify-between font-semibold text-lg\">\r\n            <span>Total</span>\r\n            <span className=\"text-primary\">${finalTotal.toLocaleString()}</span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Beneficios */}\r\n        <div className=\"bg-green-50 p-3 rounded-lg\">\r\n          <div className=\"flex items-center gap-2 text-green-700 text-sm\">\r\n            <CheckCircle className=\"w-4 h-4\" />\r\n            <span className=\"font-medium\">Compra protegida</span>\r\n          </div>\r\n          <p className=\"text-xs text-green-600 mt-1\">\r\n            Tu dinero está protegido con MercadoPago\r\n          </p>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n\r\n  // Renderizar paso de confirmación\r\n  const renderConfirmationStep = () => (\r\n    <div className=\"max-w-4xl mx-auto\">\r\n      <div className=\"text-center mb-8\">\r\n        <CheckCircle className=\"w-16 h-16 text-green-500 mx-auto mb-4\" />\r\n        <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\r\n          ¡Confirma tu Pedido!\r\n        </h2>\r\n        <p className=\"text-gray-600\">\r\n          Revisa todos los datos antes de proceder al pago\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n        {/* Datos del pedido */}\r\n        <div className=\"space-y-6\">\r\n          {/* Información personal */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"text-lg\">Información Personal</CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-2\">\r\n              <p><strong>Nombre:</strong> {formData.billing.firstName} {formData.billing.lastName}</p>\r\n              <p><strong>Email:</strong> {formData.billing.email}</p>\r\n              <p><strong>Teléfono:</strong> {formData.billing.phone}</p>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Dirección de entrega */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"text-lg\">Dirección de Entrega</CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-2\">\r\n              <p>{formData.billing.streetAddress}</p>\r\n              {formData.billing.apartment && <p>{formData.billing.apartment}</p>}\r\n              <p>{formData.billing.city}, {formData.billing.state}</p>\r\n              <p>CP: {formData.billing.zipCode}</p>\r\n              <p>{formData.billing.country}</p>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Método de envío y pago */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"text-lg\">Métodos Seleccionados</CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-3\">\r\n              <div className=\"flex items-center gap-2\">\r\n                <Truck className=\"w-4 h-4 text-primary\" />\r\n                <span>\r\n                  {formData.shippingMethod === 'free' ? 'Envío Estándar (5-7 días)' : 'Envío Express (1-2 días)'}\r\n                </span>\r\n              </div>\r\n              <div className=\"flex items-center gap-2\">\r\n                <CreditCard className=\"w-4 h-4 text-primary\" />\r\n                <span>MercadoPago</span>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n\r\n        {/* Resumen del pedido */}\r\n        <div>\r\n          {renderOrderSummary()}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Botones de acción */}\r\n      <div className=\"flex justify-between mt-8\">\r\n        <Button variant=\"outline\" onClick={handleBackToForm} size=\"lg\">\r\n          Volver a Editar\r\n        </Button>\r\n        <Button \r\n          onClick={handleConfirmOrder} \r\n          size=\"lg\" \r\n          className=\"min-w-[200px]\"\r\n          disabled={isLoading}\r\n        >\r\n          {isLoading ? (\r\n            <>\r\n              <Loader2 className=\"w-4 h-4 mr-2 animate-spin\" />\r\n              Procesando...\r\n            </>\r\n          ) : (\r\n            'Confirmar y Pagar'\r\n          )}\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  // Renderizar paso de procesamiento\r\n  const renderProcessingStep = () => (\r\n    <div className=\"text-center py-12\">\r\n      <Loader2 className=\"w-16 h-16 text-primary mx-auto mb-4 animate-spin\" />\r\n      <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\r\n        Procesando tu Pedido\r\n      </h2>\r\n      <p className=\"text-gray-600 mb-4\">\r\n        Te estamos redirigiendo a MercadoPago para completar el pago...\r\n      </p>\r\n      <div className=\"max-w-md mx-auto bg-blue-50 p-4 rounded-lg\">\r\n        <p className=\"text-sm text-blue-700\">\r\n          No cierres esta ventana. Serás redirigido automáticamente.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  // Mostrar errores generales\r\n  if (errors.general) {\r\n    return (\r\n      <div className=\"max-w-2xl mx-auto text-center py-12\">\r\n        <AlertCircle className=\"w-16 h-16 text-red-500 mx-auto mb-4\" />\r\n        <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\r\n          Error en el Checkout\r\n        </h2>\r\n        <p className=\"text-red-600 mb-4\">{errors.general}</p>\r\n        <Button onClick={() => window.location.reload()}>\r\n          Intentar Nuevamente\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 py-8\">\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        {/* Header */}\r\n        <div className=\"text-center mb-8\">\r\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">\r\n            Finalizar Compra\r\n          </h1>\r\n          <div className=\"flex items-center justify-center gap-4 text-sm text-gray-600\">\r\n            <span className={cn(\r\n              \"flex items-center gap-1\",\r\n              currentStep === 'form' && \"text-primary font-medium\"\r\n            )}>\r\n              <span className={cn(\r\n                \"w-6 h-6 rounded-full flex items-center justify-center text-xs\",\r\n                currentStep === 'form' ? \"bg-primary text-white\" : \"bg-gray-200\"\r\n              )}>\r\n                1\r\n              </span>\r\n              Datos\r\n            </span>\r\n            <div className=\"w-8 h-px bg-gray-300\" />\r\n            <span className={cn(\r\n              \"flex items-center gap-1\",\r\n              currentStep === 'confirmation' && \"text-primary font-medium\"\r\n            )}>\r\n              <span className={cn(\r\n                \"w-6 h-6 rounded-full flex items-center justify-center text-xs\",\r\n                currentStep === 'confirmation' ? \"bg-primary text-white\" : \"bg-gray-200\"\r\n              )}>\r\n                2\r\n              </span>\r\n              Confirmación\r\n            </span>\r\n            <div className=\"w-8 h-px bg-gray-300\" />\r\n            <span className={cn(\r\n              \"flex items-center gap-1\",\r\n              currentStep === 'processing' && \"text-primary font-medium\"\r\n            )}>\r\n              <span className={cn(\r\n                \"w-6 h-6 rounded-full flex items-center justify-center text-xs\",\r\n                currentStep === 'processing' ? \"bg-primary text-white\" : \"bg-gray-200\"\r\n              )}>\r\n                3\r\n              </span>\r\n              Pago\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Contenido según el paso */}\r\n        {currentStep === 'form' && renderFormStep()}\r\n        {currentStep === 'confirmation' && renderConfirmationStep()}\r\n        {currentStep === 'processing' && renderProcessingStep()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimplifiedCheckout;\r\n"],"names":["SimplifiedCheckout","router","useRouter","formData","isLoading","errors","step","cartItems","totalPrice","shippingCost","discount","finalTotal","appliedCoupon","updateBillingData","updateFormData","processCheckout","useCheckout","currentStep","setCurrentStep","useState","formErrors","setFormErrors","useEffect","length","push","validateForm","newErrors","billing","firstName","trim","lastName","email","test","phone","streetAddress","city","state","zipCode","Object","keys","handleInputChange","field","value","prev","handleContinueToConfirmation","e","preventDefault","handleConfirmOrder","handleBackToForm","renderFormStep","div","className","form","onSubmit","Card","CardHeader","CardTitle","User","CardContent","label","Input","onChange","target","placeholder","cn","p","type","MapPin","apartment","Truck","input","name","checked","shippingMethod","CreditCard","span","CheckCircle","Button","size","renderOrderSummary","ShoppingCart","Badge","variant","map","item","index","CommercialProductCard","image","imgs","thumbnails","previews","title","brand","price","discountedPrice","originalPrice","undefined","Math","round","stock","quantity","productId","id","cta","toLocaleString","onAddToCart","showCartAnimation","freeShipping","shippingText","Separator","renderConfirmationStep","h2","strong","country","onClick","disabled","Loader2","renderProcessingStep","general","AlertCircle","window","location","reload","h1"],"mappings":"AAAA;;;;;+BAunBA;;;eAAA;;;;+DArnB2C;4BACjB;sBAC+B;wBAClC;uBACD;uBACA;2BACI;6BACE;6BAarB;uBAEY;uCACmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEtC,MAAMA,qBAAqB;IACzB,MAAMC,SAASC,IAAAA,qBAAS;IACxB,MAAM,EACJC,QAAQ,EACRC,SAAS,EACTC,MAAM,EACNC,IAAI,EACJC,SAAS,EACTC,UAAU,EACVC,YAAY,EACZC,QAAQ,EACRC,UAAU,EACVC,aAAa,EACbC,iBAAiB,EACjBC,cAAc,EACdC,eAAe,EAChB,GAAGC,IAAAA,wBAAW;IAEf,MAAM,CAACC,aAAaC,eAAe,GAAGC,IAAAA,eAAQ,EAAyC;IACvF,MAAM,CAACC,YAAYC,cAAc,GAAGF,IAAAA,eAAQ,EAAyB,CAAC;IAEtE,qCAAqC;IACrCG,IAAAA,gBAAS,EAAC;QACR,IAAIf,UAAUgB,MAAM,KAAK,KAAKN,gBAAgB,QAAQ;YACpDhB,OAAOuB,IAAI,CAAC;QACd;IACF,GAAG;QAACjB,UAAUgB,MAAM;QAAEN;QAAahB;KAAO;IAE1C,4BAA4B;IAC5B,MAAMwB,eAAe;QACnB,MAAMC,YAAoC,CAAC;QAE3C,IAAI,CAACvB,SAASwB,OAAO,CAACC,SAAS,CAACC,IAAI,IAAI;YACtCH,UAAUE,SAAS,GAAG;QACxB;QACA,IAAI,CAACzB,SAASwB,OAAO,CAACG,QAAQ,CAACD,IAAI,IAAI;YACrCH,UAAUI,QAAQ,GAAG;QACvB;QACA,IAAI,CAAC3B,SAASwB,OAAO,CAACI,KAAK,CAACF,IAAI,IAAI;YAClCH,UAAUK,KAAK,GAAG;QACpB,OAAO,IAAI,CAAC,eAAeC,IAAI,CAAC7B,SAASwB,OAAO,CAACI,KAAK,GAAG;YACvDL,UAAUK,KAAK,GAAG;QACpB;QACA,IAAI,CAAC5B,SAASwB,OAAO,CAACM,KAAK,CAACJ,IAAI,IAAI;YAClCH,UAAUO,KAAK,GAAG;QACpB;QACA,IAAI,CAAC9B,SAASwB,OAAO,CAACO,aAAa,CAACL,IAAI,IAAI;YAC1CH,UAAUQ,aAAa,GAAG;QAC5B;QACA,IAAI,CAAC/B,SAASwB,OAAO,CAACQ,IAAI,CAACN,IAAI,IAAI;YACjCH,UAAUS,IAAI,GAAG;QACnB;QACA,IAAI,CAAChC,SAASwB,OAAO,CAACS,KAAK,CAACP,IAAI,IAAI;YAClCH,UAAUU,KAAK,GAAG;QACpB;QACA,IAAI,CAACjC,SAASwB,OAAO,CAACU,OAAO,CAACR,IAAI,IAAI;YACpCH,UAAUW,OAAO,GAAG;QACtB;QAEAhB,cAAcK;QACd,OAAOY,OAAOC,IAAI,CAACb,WAAWH,MAAM,KAAK;IAC3C;IAEA,MAAMiB,oBAAoB,CAACC,OAAeC;QACxC7B,kBAAkB;YAAE,CAAC4B,MAAM,EAAEC;QAAM;QACnC,+DAA+D;QAC/D,IAAItB,UAAU,CAACqB,MAAM,EAAE;YACrBpB,cAAcsB,CAAAA,OAAS,CAAA;oBAAE,GAAGA,IAAI;oBAAE,CAACF,MAAM,EAAE;gBAAG,CAAA;QAChD;IACF;IAEA,MAAMG,+BAA+B,CAACC;QACpCA,EAAEC,cAAc;QAChB,IAAIrB,gBAAgB;YAClBP,eAAe;QACjB;IACF;IAEA,MAAM6B,qBAAqB;QACzB7B,eAAe;QACf,MAAMH;IACR;IAEA,MAAMiC,mBAAmB;QACvB9B,eAAe;IACjB;IAEA,iCAAiC;IACjC,MAAM+B,iBAAiB,kBACrB,sBAACC;YAAIC,WAAU;;8BAEb,qBAACD;oBAAIC,WAAU;8BACb,cAAA,sBAACC;wBAAKC,UAAUT;wBAA8BO,WAAU;;0CAEtD,sBAACG,UAAI;;kDACH,qBAACC,gBAAU;kDACT,cAAA,sBAACC,eAAS;4CAACL,WAAU;;8DACnB,qBAACM,iBAAI;oDAACN,WAAU;;gDAAyB;;;;kDAI7C,sBAACO,iBAAW;wCAACP,WAAU;;0DACrB,sBAACD;gDAAIC,WAAU;;kEACb,sBAACD;;0EACC,qBAACS;gEAAMR,WAAU;0EAA+C;;0EAGhE,qBAACS,YAAK;gEACJlB,OAAOvC,SAASwB,OAAO,CAACC,SAAS;gEACjCiC,UAAU,CAAChB,IAAML,kBAAkB,aAAaK,EAAEiB,MAAM,CAACpB,KAAK;gEAC9DqB,aAAY;gEACZZ,WAAWa,IAAAA,SAAE,EAAC5C,WAAWQ,SAAS,IAAI;;4DAEvCR,WAAWQ,SAAS,kBACnB,qBAACqC;gEAAEd,WAAU;0EAA6B/B,WAAWQ,SAAS;;;;kEAGlE,sBAACsB;;0EACC,qBAACS;gEAAMR,WAAU;0EAA+C;;0EAGhE,qBAACS,YAAK;gEACJlB,OAAOvC,SAASwB,OAAO,CAACG,QAAQ;gEAChC+B,UAAU,CAAChB,IAAML,kBAAkB,YAAYK,EAAEiB,MAAM,CAACpB,KAAK;gEAC7DqB,aAAY;gEACZZ,WAAWa,IAAAA,SAAE,EAAC5C,WAAWU,QAAQ,IAAI;;4DAEtCV,WAAWU,QAAQ,kBAClB,qBAACmC;gEAAEd,WAAU;0EAA6B/B,WAAWU,QAAQ;;;;;;0DAKnE,sBAACoB;gDAAIC,WAAU;;kEACb,sBAACD;;0EACC,qBAACS;gEAAMR,WAAU;0EAA+C;;0EAGhE,qBAACS,YAAK;gEACJM,MAAK;gEACLxB,OAAOvC,SAASwB,OAAO,CAACI,KAAK;gEAC7B8B,UAAU,CAAChB,IAAML,kBAAkB,SAASK,EAAEiB,MAAM,CAACpB,KAAK;gEAC1DqB,aAAY;gEACZZ,WAAWa,IAAAA,SAAE,EAAC5C,WAAWW,KAAK,IAAI;;4DAEnCX,WAAWW,KAAK,kBACf,qBAACkC;gEAAEd,WAAU;0EAA6B/B,WAAWW,KAAK;;;;kEAG9D,sBAACmB;;0EACC,qBAACS;gEAAMR,WAAU;0EAA+C;;0EAGhE,qBAACS,YAAK;gEACJM,MAAK;gEACLxB,OAAOvC,SAASwB,OAAO,CAACM,KAAK;gEAC7B4B,UAAU,CAAChB,IAAML,kBAAkB,SAASK,EAAEiB,MAAM,CAACpB,KAAK;gEAC1DqB,aAAY;gEACZZ,WAAWa,IAAAA,SAAE,EAAC5C,WAAWa,KAAK,IAAI;;4DAEnCb,WAAWa,KAAK,kBACf,qBAACgC;gEAAEd,WAAU;0EAA6B/B,WAAWa,KAAK;;;;;;;;;;0CAQpE,sBAACqB,UAAI;;kDACH,qBAACC,gBAAU;kDACT,cAAA,sBAACC,eAAS;4CAACL,WAAU;;8DACnB,qBAACgB,mBAAM;oDAAChB,WAAU;;gDAAyB;;;;kDAI/C,sBAACO,iBAAW;wCAACP,WAAU;;0DACrB,sBAACD;;kEACC,qBAACS;wDAAMR,WAAU;kEAA+C;;kEAGhE,qBAACS,YAAK;wDACJlB,OAAOvC,SAASwB,OAAO,CAACO,aAAa;wDACrC2B,UAAU,CAAChB,IAAML,kBAAkB,iBAAiBK,EAAEiB,MAAM,CAACpB,KAAK;wDAClEqB,aAAY;wDACZZ,WAAWa,IAAAA,SAAE,EAAC5C,WAAWc,aAAa,IAAI;;oDAE3Cd,WAAWc,aAAa,kBACvB,qBAAC+B;wDAAEd,WAAU;kEAA6B/B,WAAWc,aAAa;;;;0DAItE,sBAACgB;;kEACC,qBAACS;wDAAMR,WAAU;kEAA+C;;kEAGhE,qBAACS,YAAK;wDACJlB,OAAOvC,SAASwB,OAAO,CAACyC,SAAS;wDACjCP,UAAU,CAAChB,IAAML,kBAAkB,aAAaK,EAAEiB,MAAM,CAACpB,KAAK;wDAC9DqB,aAAY;;;;0DAIhB,sBAACb;gDAAIC,WAAU;;kEACb,sBAACD;;0EACC,qBAACS;gEAAMR,WAAU;0EAA+C;;0EAGhE,qBAACS,YAAK;gEACJlB,OAAOvC,SAASwB,OAAO,CAACQ,IAAI;gEAC5B0B,UAAU,CAAChB,IAAML,kBAAkB,QAAQK,EAAEiB,MAAM,CAACpB,KAAK;gEACzDqB,aAAY;gEACZZ,WAAWa,IAAAA,SAAE,EAAC5C,WAAWe,IAAI,IAAI;;4DAElCf,WAAWe,IAAI,kBACd,qBAAC8B;gEAAEd,WAAU;0EAA6B/B,WAAWe,IAAI;;;;kEAG7D,sBAACe;;0EACC,qBAACS;gEAAMR,WAAU;0EAA+C;;0EAGhE,qBAACS,YAAK;gEACJlB,OAAOvC,SAASwB,OAAO,CAACS,KAAK;gEAC7ByB,UAAU,CAAChB,IAAML,kBAAkB,SAASK,EAAEiB,MAAM,CAACpB,KAAK;gEAC1DqB,aAAY;gEACZZ,WAAWa,IAAAA,SAAE,EAAC5C,WAAWgB,KAAK,IAAI;;4DAEnChB,WAAWgB,KAAK,kBACf,qBAAC6B;gEAAEd,WAAU;0EAA6B/B,WAAWgB,KAAK;;;;kEAG9D,sBAACc;;0EACC,qBAACS;gEAAMR,WAAU;0EAA+C;;0EAGhE,qBAACS,YAAK;gEACJlB,OAAOvC,SAASwB,OAAO,CAACU,OAAO;gEAC/BwB,UAAU,CAAChB,IAAML,kBAAkB,WAAWK,EAAEiB,MAAM,CAACpB,KAAK;gEAC5DqB,aAAY;gEACZZ,WAAWa,IAAAA,SAAE,EAAC5C,WAAWiB,OAAO,IAAI;;4DAErCjB,WAAWiB,OAAO,kBACjB,qBAAC4B;gEAAEd,WAAU;0EAA6B/B,WAAWiB,OAAO;;;;;;;;;;0CAQtE,sBAACiB,UAAI;;kDACH,qBAACC,gBAAU;kDACT,cAAA,sBAACC,eAAS;4CAACL,WAAU;;8DACnB,qBAACkB,kBAAK;oDAAClB,WAAU;;gDAAyB;;;;kDAI9C,qBAACO,iBAAW;kDACV,cAAA,sBAACR;4CAAIC,WAAU;;8DACb,sBAACQ;oDAAMR,WAAU;;sEACf,qBAACmB;4DACCJ,MAAK;4DACLK,MAAK;4DACL7B,OAAM;4DACN8B,SAASrE,SAASsE,cAAc,KAAK;4DACrCZ,UAAU,CAAChB,IAAM/B,eAAe;oEAAE2D,gBAAgB5B,EAAEiB,MAAM,CAACpB,KAAK;gEAAkC;4DAClGS,WAAU;;sEAEZ,sBAACD;4DAAIC,WAAU;;8EACb,qBAACD;oEAAIC,WAAU;8EAAc;;8EAC7B,qBAACD;oEAAIC,WAAU;8EAAwB;;;;sEAEzC,qBAACD;4DAAIC,WAAU;sEACZ3C,cAAc,QAAQ,WAAW;;;;8DAItC,sBAACmD;oDAAMR,WAAU;;sEACf,qBAACmB;4DACCJ,MAAK;4DACLK,MAAK;4DACL7B,OAAM;4DACN8B,SAASrE,SAASsE,cAAc,KAAK;4DACrCZ,UAAU,CAAChB,IAAM/B,eAAe;oEAAE2D,gBAAgB5B,EAAEiB,MAAM,CAACpB,KAAK;gEAAkC;4DAClGS,WAAU;;sEAEZ,sBAACD;4DAAIC,WAAU;;8EACb,qBAACD;oEAAIC,WAAU;8EAAc;;8EAC7B,qBAACD;oEAAIC,WAAU;8EAAwB;;;;sEAEzC,qBAACD;4DAAIC,WAAU;sEAAgB;;;;;;;;;0CAOvC,sBAACG,UAAI;;kDACH,qBAACC,gBAAU;kDACT,cAAA,sBAACC,eAAS;4CAACL,WAAU;;8DACnB,qBAACuB,uBAAU;oDAACvB,WAAU;;gDAAyB;;;;kDAInD,qBAACO,iBAAW;kDACV,cAAA,sBAACR;4CAAIC,WAAU;;8DACb,qBAACD;oDAAIC,WAAU;8DACb,cAAA,qBAACwB;wDAAKxB,WAAU;kEAA+B;;;8DAEjD,sBAACD;oDAAIC,WAAU;;sEACb,qBAACD;4DAAIC,WAAU;sEAAc;;sEAC7B,qBAACD;4DAAIC,WAAU;sEAAwB;;;;8DAEzC,qBAACyB,wBAAW;oDAACzB,WAAU;;;;;;;0CAM7B,qBAACD;gCAAIC,WAAU;0CACb,cAAA,qBAAC0B,cAAM;oCAACX,MAAK;oCAASY,MAAK;oCAAK3B,WAAU;8CAAgB;;;;;;8BAQhE,qBAACD;oBAAIC,WAAU;8BACZ4B;;;;IAKP,gCAAgC;IAChC,MAAMA,qBAAqB,kBACzB,sBAACzB,UAAI;YAACH,WAAU;;8BACd,qBAACI,gBAAU;8BACT,cAAA,sBAACC,eAAS;wBAACL,WAAU;;0CACnB,qBAAC6B,yBAAY;gCAAC7B,WAAU;;4BAAyB;0CAEjD,sBAAC8B,YAAK;gCAACC,SAAQ;gCAAUJ,MAAK;;oCAC3BvE,UAAUgB,MAAM;oCAAC;oCAAEhB,UAAUgB,MAAM,KAAK,IAAI,SAAS;;;;;;8BAI5D,sBAACmC,iBAAW;oBAACP,WAAU;;sCAErB,qBAACD;4BAAIC,WAAU;sCACZ5C,UAAU4E,GAAG,CAAC,CAACC,MAAWC,sBACzB,qBAACnC;oCAAgBC,WAAU;8CACzB,cAAA,qBAACmC,4CAAqB;wCACpBC,OAAOH,KAAKI,IAAI,EAAEC,YAAY,CAAC,EAAE,IAAIL,KAAKI,IAAI,EAAEE,UAAU,CAAC,EAAE,IAAI;wCACjEC,OAAOP,KAAKO,KAAK;wCACjBC,OAAOR,KAAKQ,KAAK,IAAI;wCACrBC,OAAOT,KAAKU,eAAe;wCAC3BC,eAAeX,KAAKU,eAAe,GAAGV,KAAKS,KAAK,GAAGT,KAAKS,KAAK,GAAGG;wCAChEtF,UAAU0E,KAAKU,eAAe,GAAGV,KAAKS,KAAK,GACzC,GAAGI,KAAKC,KAAK,CAAC,AAAEd,CAAAA,KAAKS,KAAK,GAAGT,KAAKU,eAAe,AAAD,IAAKV,KAAKS,KAAK,GAAI,KAAK,CAAC,CAAC,GAAGG;wCAC/EG,OAAOf,KAAKgB,QAAQ;wCACpBC,WAAWjB,KAAKkB,EAAE;wCAClBC,KAAK,CAAC,QAAQ,EAAE,AAACnB,CAAAA,KAAKU,eAAe,GAAGV,KAAKgB,QAAQ,AAAD,EAAGI,cAAc,IAAI;wCACzEC,aAAa;wCACX,qDAAqD;wCACvD;wCACAC,mBAAmB;wCACnBC,cAAcvB,KAAKU,eAAe,IAAI;wCACtCc,cAAcxB,KAAKU,eAAe,IAAI,QAAQ,iBAAiB;;mCAjBzDT;;sCAuBd,qBAACwB,oBAAS;sCAGV,sBAAC3D;4BAAIC,WAAU;;8CACb,sBAACD;oCAAIC,WAAU;;sDACb,qBAACwB;sDAAK;;sDACN,sBAACA;;gDAAK;gDAAEnE,WAAWgG,cAAc;;;;;8CAEnC,sBAACtD;oCAAIC,WAAU;;sDACb,qBAACwB;sDAAK;;sDACN,qBAACA;sDACElE,iBAAiB,kBAChB,qBAACkE;gDAAKxB,WAAU;0DAA6B;iDAE7C,CAAC,CAAC,EAAE1C,aAAa+F,cAAc,IAAI;;;;gCAIxC9F,WAAW,mBACV,sBAACwC;oCAAIC,WAAU;;sDACb,qBAACwB;sDAAK;;sDACN,sBAACA;;gDAAK;gDAAGjE,SAAS8F,cAAc;;;;;8CAGpC,qBAACK,oBAAS;8CACV,sBAAC3D;oCAAIC,WAAU;;sDACb,qBAACwB;sDAAK;;sDACN,sBAACA;4CAAKxB,WAAU;;gDAAe;gDAAExC,WAAW6F,cAAc;;;;;;;sCAK9D,sBAACtD;4BAAIC,WAAU;;8CACb,sBAACD;oCAAIC,WAAU;;sDACb,qBAACyB,wBAAW;4CAACzB,WAAU;;sDACvB,qBAACwB;4CAAKxB,WAAU;sDAAc;;;;8CAEhC,qBAACc;oCAAEd,WAAU;8CAA8B;;;;;;;;IAQnD,kCAAkC;IAClC,MAAM2D,yBAAyB,kBAC7B,sBAAC5D;YAAIC,WAAU;;8BACb,sBAACD;oBAAIC,WAAU;;sCACb,qBAACyB,wBAAW;4BAACzB,WAAU;;sCACvB,qBAAC4D;4BAAG5D,WAAU;sCAAwC;;sCAGtD,qBAACc;4BAAEd,WAAU;sCAAgB;;;;8BAK/B,sBAACD;oBAAIC,WAAU;;sCAEb,sBAACD;4BAAIC,WAAU;;8CAEb,sBAACG,UAAI;;sDACH,qBAACC,gBAAU;sDACT,cAAA,qBAACC,eAAS;gDAACL,WAAU;0DAAU;;;sDAEjC,sBAACO,iBAAW;4CAACP,WAAU;;8DACrB,sBAACc;;sEAAE,qBAAC+C;sEAAO;;wDAAgB;wDAAE7G,SAASwB,OAAO,CAACC,SAAS;wDAAC;wDAAEzB,SAASwB,OAAO,CAACG,QAAQ;;;8DACnF,sBAACmC;;sEAAE,qBAAC+C;sEAAO;;wDAAe;wDAAE7G,SAASwB,OAAO,CAACI,KAAK;;;8DAClD,sBAACkC;;sEAAE,qBAAC+C;sEAAO;;wDAAkB;wDAAE7G,SAASwB,OAAO,CAACM,KAAK;;;;;;;8CAKzD,sBAACqB,UAAI;;sDACH,qBAACC,gBAAU;sDACT,cAAA,qBAACC,eAAS;gDAACL,WAAU;0DAAU;;;sDAEjC,sBAACO,iBAAW;4CAACP,WAAU;;8DACrB,qBAACc;8DAAG9D,SAASwB,OAAO,CAACO,aAAa;;gDACjC/B,SAASwB,OAAO,CAACyC,SAAS,kBAAI,qBAACH;8DAAG9D,SAASwB,OAAO,CAACyC,SAAS;;8DAC7D,sBAACH;;wDAAG9D,SAASwB,OAAO,CAACQ,IAAI;wDAAC;wDAAGhC,SAASwB,OAAO,CAACS,KAAK;;;8DACnD,sBAAC6B;;wDAAE;wDAAK9D,SAASwB,OAAO,CAACU,OAAO;;;8DAChC,qBAAC4B;8DAAG9D,SAASwB,OAAO,CAACsF,OAAO;;;;;;8CAKhC,sBAAC3D,UAAI;;sDACH,qBAACC,gBAAU;sDACT,cAAA,qBAACC,eAAS;gDAACL,WAAU;0DAAU;;;sDAEjC,sBAACO,iBAAW;4CAACP,WAAU;;8DACrB,sBAACD;oDAAIC,WAAU;;sEACb,qBAACkB,kBAAK;4DAAClB,WAAU;;sEACjB,qBAACwB;sEACExE,SAASsE,cAAc,KAAK,SAAS,8BAA8B;;;;8DAGxE,sBAACvB;oDAAIC,WAAU;;sEACb,qBAACuB,uBAAU;4DAACvB,WAAU;;sEACtB,qBAACwB;sEAAK;;;;;;;;;;sCAOd,qBAACzB;sCACE6B;;;;8BAKL,sBAAC7B;oBAAIC,WAAU;;sCACb,qBAAC0B,cAAM;4BAACK,SAAQ;4BAAUgC,SAASlE;4BAAkB8B,MAAK;sCAAK;;sCAG/D,qBAACD,cAAM;4BACLqC,SAASnE;4BACT+B,MAAK;4BACL3B,WAAU;4BACVgE,UAAU/G;sCAETA,0BACC;;kDACE,qBAACgH,oBAAO;wCAACjE,WAAU;;oCAA8B;;iCAInD;;;;;;IAOV,mCAAmC;IACnC,MAAMkE,uBAAuB,kBAC3B,sBAACnE;YAAIC,WAAU;;8BACb,qBAACiE,oBAAO;oBAACjE,WAAU;;8BACnB,qBAAC4D;oBAAG5D,WAAU;8BAAwC;;8BAGtD,qBAACc;oBAAEd,WAAU;8BAAqB;;8BAGlC,qBAACD;oBAAIC,WAAU;8BACb,cAAA,qBAACc;wBAAEd,WAAU;kCAAwB;;;;;IAO3C,4BAA4B;IAC5B,IAAI9C,OAAOiH,OAAO,EAAE;QAClB,qBACE,sBAACpE;YAAIC,WAAU;;8BACb,qBAACoE,wBAAW;oBAACpE,WAAU;;8BACvB,qBAAC4D;oBAAG5D,WAAU;8BAAwC;;8BAGtD,qBAACc;oBAAEd,WAAU;8BAAqB9C,OAAOiH,OAAO;;8BAChD,qBAACzC,cAAM;oBAACqC,SAAS,IAAMM,OAAOC,QAAQ,CAACC,MAAM;8BAAI;;;;IAKvD;IAEA,qBACE,qBAACxE;QAAIC,WAAU;kBACb,cAAA,sBAACD;YAAIC,WAAU;;8BAEb,sBAACD;oBAAIC,WAAU;;sCACb,qBAACwE;4BAAGxE,WAAU;sCAAwC;;sCAGtD,sBAACD;4BAAIC,WAAU;;8CACb,sBAACwB;oCAAKxB,WAAWa,IAAAA,SAAE,EACjB,2BACA/C,gBAAgB,UAAU;;sDAE1B,qBAAC0D;4CAAKxB,WAAWa,IAAAA,SAAE,EACjB,iEACA/C,gBAAgB,SAAS,0BAA0B;sDAClD;;wCAEI;;;8CAGT,qBAACiC;oCAAIC,WAAU;;8CACf,sBAACwB;oCAAKxB,WAAWa,IAAAA,SAAE,EACjB,2BACA/C,gBAAgB,kBAAkB;;sDAElC,qBAAC0D;4CAAKxB,WAAWa,IAAAA,SAAE,EACjB,iEACA/C,gBAAgB,iBAAiB,0BAA0B;sDAC1D;;wCAEI;;;8CAGT,qBAACiC;oCAAIC,WAAU;;8CACf,sBAACwB;oCAAKxB,WAAWa,IAAAA,SAAE,EACjB,2BACA/C,gBAAgB,gBAAgB;;sDAEhC,qBAAC0D;4CAAKxB,WAAWa,IAAAA,SAAE,EACjB,iEACA/C,gBAAgB,eAAe,0BAA0B;sDACxD;;wCAEI;;;;;;;gBAOZA,gBAAgB,UAAUgC;gBAC1BhC,gBAAgB,kBAAkB6F;gBAClC7F,gBAAgB,gBAAgBoG;;;;AAIzC;MAEA,WAAerH"}