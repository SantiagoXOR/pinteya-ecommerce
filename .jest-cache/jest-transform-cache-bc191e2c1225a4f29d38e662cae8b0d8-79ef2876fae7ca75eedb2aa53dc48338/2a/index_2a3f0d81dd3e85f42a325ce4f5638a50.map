{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\Home\\Categories\\index.tsx"],"sourcesContent":["\"use client\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport { useCallback, useRef, useEffect } from \"react\";\r\nimport { useCategoriesWithDynamicCounts } from \"@/hooks/useCategoriesWithDynamicCounts\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { ChevronLeft, ChevronRight, Tag } from \"lucide-react\";\r\n\r\n// Import Swiper styles\r\nimport \"swiper/css/navigation\";\r\nimport \"swiper/css\";\r\nimport SingleItem from \"./SingleItem\";\r\n\r\nconst Categories = () => {\r\n  const sliderRef = useRef<any>(null);\r\n\r\n  // Hook para obtener categorías con conteos dinámicos\r\n  const { categories, loading, error } = useCategoriesWithDynamicCounts({\r\n    enableDynamicCounts: true,\r\n    baseFilters: {},\r\n  });\r\n\r\n  const handlePrev = useCallback(() => {\r\n    if (!sliderRef.current) return;\r\n    sliderRef.current.swiper.slidePrev();\r\n  }, []);\r\n\r\n  const handleNext = useCallback(() => {\r\n    if (!sliderRef.current) return;\r\n    sliderRef.current.swiper.slideNext();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (sliderRef.current) {\r\n      sliderRef.current.swiper.init();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"overflow-hidden pt-17.5\">\r\n      <div className=\"max-w-[1170px] w-full mx-auto px-4 sm:px-8 xl:px-0 pb-15 border-b border-gray-3\">\r\n        <div className=\"swiper categories-carousel common-carousel\">\r\n          {/* <!-- section title --> */}\r\n          <div className=\"mb-10 flex items-center justify-between\">\r\n            <div>\r\n              <div className=\"flex items-center gap-2.5 font-medium text-gray-700 mb-1.5\">\r\n                <div className=\"w-5 h-5 rounded-full bg-primary/10 flex items-center justify-center\">\r\n                  <Tag className=\"w-3 h-3 text-primary\" />\r\n                </div>\r\n                <span>Categorías</span>\r\n                <Badge variant=\"info\" size=\"sm\">\r\n                  {categories.length}\r\n                </Badge>\r\n              </div>\r\n              <h2 className=\"font-semibold text-xl xl:text-heading-5 text-gray-900\">\r\n                Explorar por Categoría\r\n              </h2>\r\n            </div>\r\n\r\n            <div className=\"flex items-center gap-2\">\r\n              <Button\r\n                variant=\"outline\"\r\n                size=\"icon\"\r\n                onClick={handlePrev}\r\n                className=\"swiper-button-prev hover:bg-primary hover:text-white transition-colors duration-200\"\r\n                aria-label=\"Categoría anterior\"\r\n              >\r\n                <ChevronLeft className=\"w-4 h-4\" />\r\n              </Button>\r\n\r\n              <Button\r\n                variant=\"outline\"\r\n                size=\"icon\"\r\n                onClick={handleNext}\r\n                className=\"swiper-button-next hover:bg-primary hover:text-white transition-colors duration-200\"\r\n                aria-label=\"Siguiente categoría\"\r\n              >\r\n                <ChevronRight className=\"w-4 h-4\" />\r\n              </Button>\r\n            </div>\r\n          </div>\r\n\r\n          {loading ? (\r\n            /* Loading State mejorado */\r\n            <div className=\"flex gap-4 overflow-hidden\">\r\n              {[...Array(6)].map((_, index) => (\r\n                <div key={index} className=\"flex flex-col items-center animate-pulse min-w-[130px]\">\r\n                  <div className=\"w-[130px] h-[130px] bg-gray-200 rounded-full mb-4\"></div>\r\n                  <div className=\"bg-gray-200 h-4 rounded w-20\"></div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ) : error ? (\r\n            /* Error State mejorado */\r\n            <Card variant=\"outlined\" className=\"border-red-200 bg-red-50\">\r\n              <CardContent className=\"p-8 text-center\">\r\n                <div className=\"flex flex-col items-center gap-3\">\r\n                  <div className=\"w-12 h-12 rounded-full bg-red-100 flex items-center justify-center\">\r\n                    <span className=\"text-red-600 text-xl\">⚠️</span>\r\n                  </div>\r\n                  <div>\r\n                    <h3 className=\"font-semibold text-red-900 mb-1\">\r\n                      Error al cargar categorías\r\n                    </h3>\r\n                    <p className=\"text-red-700 text-sm\">{error}</p>\r\n                  </div>\r\n                  <Button\r\n                    variant=\"outline\"\r\n                    size=\"sm\"\r\n                    onClick={() => window.location.reload()}\r\n                    className=\"border-red-300 text-red-700 hover:bg-red-100\"\r\n                  >\r\n                    Reintentar\r\n                  </Button>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          ) : categories.length === 0 ? (\r\n            /* Empty State */\r\n            <Card variant=\"outlined\" className=\"border-gray-200\">\r\n              <CardContent className=\"p-12 text-center\">\r\n                <div className=\"flex flex-col items-center gap-4\">\r\n                  <div className=\"w-16 h-16 rounded-full bg-gray-100 flex items-center justify-center\">\r\n                    <Tag className=\"w-8 h-8 text-gray-400\" />\r\n                  </div>\r\n                  <div>\r\n                    <h3 className=\"font-semibold text-gray-900 mb-2\">\r\n                      No hay categorías disponibles\r\n                    </h3>\r\n                    <p className=\"text-gray-600 text-sm\">\r\n                      Pronto agregaremos nuevas categorías de productos\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          ) : (\r\n            <Swiper\r\n              ref={sliderRef}\r\n              slidesPerView={6}\r\n              breakpoints={{\r\n                // when window width is >= 640px\r\n                0: {\r\n                  slidesPerView: 2,\r\n                },\r\n                1000: {\r\n                  slidesPerView: 4,\r\n                  // spaceBetween: 4,\r\n                },\r\n                // when window width is >= 768px\r\n                1200: {\r\n                  slidesPerView: 6,\r\n                },\r\n              }}\r\n            >\r\n              {categories.map((item, key) => (\r\n                <SwiperSlide key={key}>\r\n                  <SingleItem item={item} />\r\n                </SwiperSlide>\r\n              ))}\r\n            </Swiper>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n"],"names":["Categories","sliderRef","useRef","categories","loading","error","useCategoriesWithDynamicCounts","enableDynamicCounts","baseFilters","handlePrev","useCallback","current","swiper","slidePrev","handleNext","slideNext","useEffect","init","section","className","div","Tag","span","Badge","variant","size","length","h2","Button","onClick","aria-label","ChevronLeft","ChevronRight","Array","map","_","index","Card","CardContent","h3","p","window","location","reload","Swiper","ref","slidesPerView","breakpoints","item","key","SwiperSlide","SingleItem"],"mappings":"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"}