76708c261c3045ac54134e86618f3cb6
/**
 * NextAuth.js v5 Configuration for Pinteya E-commerce
 * Integración con Supabase y Google OAuth
 */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: Object.getOwnPropertyDescriptor(all, name).get
    });
}
_export(exports, {
    get auth () {
        return auth;
    },
    get handlers () {
        return handlers;
    },
    get signIn () {
        return signIn;
    },
    get signOut () {
        return signOut;
    }
});
const _nextauth = /*#__PURE__*/ _interop_require_default(require("next-auth"));
const _google = /*#__PURE__*/ _interop_require_default(require("next-auth/providers/google"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
const { handlers, auth, signIn, signOut } = (0, _nextauth.default)({
    // Configuración de providers
    providers: [
        (0, _google.default)({
            clientId: process.env.AUTH_GOOGLE_ID,
            clientSecret: process.env.AUTH_GOOGLE_SECRET
        })
    ],
    // Usar JWT strategy en lugar de adaptador de base de datos
    // adapter: SupabaseAdapter({
    //   url: process.env.NEXT_PUBLIC_SUPABASE_URL!,
    //   secret: process.env.SUPABASE_SERVICE_ROLE_KEY!,
    // }),
    // Configuración de páginas personalizadas
    pages: {
        signIn: "/auth/signin",
        signOut: "/auth/signout",
        error: "/auth/error"
    },
    // Configuración de callbacks
    callbacks: {
        // Callback de sesión - JWT strategy simplificado
        async session ({ session, token }) {
            // Agregar información adicional del usuario desde el token
            if (token.sub) {
                session.user.id = token.sub;
            }
            return session;
        },
        // Callback de JWT
        async jwt ({ token, user, account }) {
            if (user) {
                token.sub = user.id;
                token.email = user.email;
            }
            return token;
        },
        // Callback de autorización
        async signIn ({ user, account, profile }) {
            // Permitir todos los sign-ins por ahora
            // Aquí se pueden agregar validaciones adicionales
            return true;
        }
    },
    // Configuración de eventos
    events: {
        async signIn ({ user, account, profile, isNewUser }) {
            console.log(`[NextAuth] Usuario autenticado: ${user.email}`);
            // Si es un nuevo usuario, crear entrada en tabla pública
            if (isNewUser) {
                console.log(`[NextAuth] Nuevo usuario registrado: ${user.email}`);
            }
        },
        async signOut ({ session, token }) {
            console.log(`[NextAuth] Usuario desconectado`);
        }
    },
    // Configuración de sesión con JWT
    session: {
        strategy: "jwt",
        maxAge: 30 * 24 * 60 * 60,
        updateAge: 24 * 60 * 60
    },
    // Configuración de JWT para evitar problemas con Edge Runtime
    jwt: {
        maxAge: 30 * 24 * 60 * 60
    },
    // Configuración de debug
    debug: process.env.NODE_ENV === "development"
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbWFydGlcXERlc2t0b3BcXERFU0FSUk9MTE9TV1xcQk9JTEVSUExBVFRFIEUtQ09NTUVSQ0VcXHNyY1xcYXV0aC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIE5leHRBdXRoLmpzIHY1IENvbmZpZ3VyYXRpb24gZm9yIFBpbnRleWEgRS1jb21tZXJjZVxuICogSW50ZWdyYWNpw7NuIGNvbiBTdXBhYmFzZSB5IEdvb2dsZSBPQXV0aFxuICovXG5cbmltcG9ydCBOZXh0QXV0aCBmcm9tIFwibmV4dC1hdXRoXCJcbmltcG9ydCBHb29nbGVQcm92aWRlciBmcm9tIFwibmV4dC1hdXRoL3Byb3ZpZGVycy9nb29nbGVcIlxuXG4vLyBDb25maWd1cmFjacOzbiBkZSBOZXh0QXV0aC5qcyB2NVxuZXhwb3J0IGNvbnN0IHsgaGFuZGxlcnMsIGF1dGgsIHNpZ25Jbiwgc2lnbk91dCB9ID0gTmV4dEF1dGgoe1xuICAvLyBDb25maWd1cmFjacOzbiBkZSBwcm92aWRlcnNcbiAgcHJvdmlkZXJzOiBbXG4gICAgR29vZ2xlUHJvdmlkZXIoe1xuICAgICAgY2xpZW50SWQ6IHByb2Nlc3MuZW52LkFVVEhfR09PR0xFX0lEISxcbiAgICAgIGNsaWVudFNlY3JldDogcHJvY2Vzcy5lbnYuQVVUSF9HT09HTEVfU0VDUkVUISxcbiAgICB9KSxcbiAgXSxcblxuICAvLyBVc2FyIEpXVCBzdHJhdGVneSBlbiBsdWdhciBkZSBhZGFwdGFkb3IgZGUgYmFzZSBkZSBkYXRvc1xuICAvLyBhZGFwdGVyOiBTdXBhYmFzZUFkYXB0ZXIoe1xuICAvLyAgIHVybDogcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMISxcbiAgLy8gICBzZWNyZXQ6IHByb2Nlc3MuZW52LlNVUEFCQVNFX1NFUlZJQ0VfUk9MRV9LRVkhLFxuICAvLyB9KSxcblxuICAvLyBDb25maWd1cmFjacOzbiBkZSBww6FnaW5hcyBwZXJzb25hbGl6YWRhc1xuICBwYWdlczoge1xuICAgIHNpZ25JbjogXCIvYXV0aC9zaWduaW5cIixcbiAgICBzaWduT3V0OiBcIi9hdXRoL3NpZ25vdXRcIixcbiAgICBlcnJvcjogXCIvYXV0aC9lcnJvclwiLFxuICB9LFxuXG4gIC8vIENvbmZpZ3VyYWNpw7NuIGRlIGNhbGxiYWNrc1xuICBjYWxsYmFja3M6IHtcbiAgICAvLyBDYWxsYmFjayBkZSBzZXNpw7NuIC0gSldUIHN0cmF0ZWd5IHNpbXBsaWZpY2Fkb1xuICAgIGFzeW5jIHNlc3Npb24oeyBzZXNzaW9uLCB0b2tlbiB9KSB7XG4gICAgICAvLyBBZ3JlZ2FyIGluZm9ybWFjacOzbiBhZGljaW9uYWwgZGVsIHVzdWFyaW8gZGVzZGUgZWwgdG9rZW5cbiAgICAgIGlmICh0b2tlbi5zdWIpIHtcbiAgICAgICAgc2Vzc2lvbi51c2VyLmlkID0gdG9rZW4uc3ViXG4gICAgICB9XG5cbiAgICAgIHJldHVybiBzZXNzaW9uXG4gICAgfSxcblxuICAgIC8vIENhbGxiYWNrIGRlIEpXVFxuICAgIGFzeW5jIGp3dCh7IHRva2VuLCB1c2VyLCBhY2NvdW50IH0pIHtcbiAgICAgIGlmICh1c2VyKSB7XG4gICAgICAgIHRva2VuLnN1YiA9IHVzZXIuaWRcbiAgICAgICAgdG9rZW4uZW1haWwgPSB1c2VyLmVtYWlsXG4gICAgICB9XG4gICAgICByZXR1cm4gdG9rZW5cbiAgICB9LFxuXG4gICAgLy8gQ2FsbGJhY2sgZGUgYXV0b3JpemFjacOzblxuICAgIGFzeW5jIHNpZ25Jbih7IHVzZXIsIGFjY291bnQsIHByb2ZpbGUgfSkge1xuICAgICAgLy8gUGVybWl0aXIgdG9kb3MgbG9zIHNpZ24taW5zIHBvciBhaG9yYVxuICAgICAgLy8gQXF1w60gc2UgcHVlZGVuIGFncmVnYXIgdmFsaWRhY2lvbmVzIGFkaWNpb25hbGVzXG4gICAgICByZXR1cm4gdHJ1ZVxuICAgIH0sXG4gIH0sXG5cbiAgLy8gQ29uZmlndXJhY2nDs24gZGUgZXZlbnRvc1xuICBldmVudHM6IHtcbiAgICBhc3luYyBzaWduSW4oeyB1c2VyLCBhY2NvdW50LCBwcm9maWxlLCBpc05ld1VzZXIgfSkge1xuICAgICAgY29uc29sZS5sb2coYFtOZXh0QXV0aF0gVXN1YXJpbyBhdXRlbnRpY2FkbzogJHt1c2VyLmVtYWlsfWApXG4gICAgICBcbiAgICAgIC8vIFNpIGVzIHVuIG51ZXZvIHVzdWFyaW8sIGNyZWFyIGVudHJhZGEgZW4gdGFibGEgcMO6YmxpY2FcbiAgICAgIGlmIChpc05ld1VzZXIpIHtcbiAgICAgICAgY29uc29sZS5sb2coYFtOZXh0QXV0aF0gTnVldm8gdXN1YXJpbyByZWdpc3RyYWRvOiAke3VzZXIuZW1haWx9YClcbiAgICAgIH1cbiAgICB9LFxuICAgIFxuICAgIGFzeW5jIHNpZ25PdXQoeyBzZXNzaW9uLCB0b2tlbiB9KSB7XG4gICAgICBjb25zb2xlLmxvZyhgW05leHRBdXRoXSBVc3VhcmlvIGRlc2NvbmVjdGFkb2ApXG4gICAgfSxcbiAgfSxcblxuICAvLyBDb25maWd1cmFjacOzbiBkZSBzZXNpw7NuIGNvbiBKV1RcbiAgc2Vzc2lvbjoge1xuICAgIHN0cmF0ZWd5OiBcImp3dFwiLFxuICAgIG1heEFnZTogMzAgKiAyNCAqIDYwICogNjAsIC8vIDMwIGTDrWFzXG4gICAgdXBkYXRlQWdlOiAyNCAqIDYwICogNjAsIC8vIDI0IGhvcmFzXG4gIH0sXG5cbiAgLy8gQ29uZmlndXJhY2nDs24gZGUgSldUIHBhcmEgZXZpdGFyIHByb2JsZW1hcyBjb24gRWRnZSBSdW50aW1lXG4gIGp3dDoge1xuICAgIG1heEFnZTogMzAgKiAyNCAqIDYwICogNjAsIC8vIDMwIGTDrWFzXG4gIH0sXG5cbiAgLy8gQ29uZmlndXJhY2nDs24gZGUgZGVidWdcbiAgZGVidWc6IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSBcImRldmVsb3BtZW50XCIsXG59KVxuXG4vLyBUaXBvcyBUeXBlU2NyaXB0IHBhcmEgZXh0ZW5kZXIgbGEgc2VzacOzblxuZGVjbGFyZSBtb2R1bGUgXCJuZXh0LWF1dGhcIiB7XG4gIGludGVyZmFjZSBTZXNzaW9uIHtcbiAgICBzdXBhYmFzZUFjY2Vzc1Rva2VuPzogc3RyaW5nXG4gICAgdXNlcjoge1xuICAgICAgaWQ6IHN0cmluZ1xuICAgICAgbmFtZT86IHN0cmluZyB8IG51bGxcbiAgICAgIGVtYWlsPzogc3RyaW5nIHwgbnVsbFxuICAgICAgaW1hZ2U/OiBzdHJpbmcgfCBudWxsXG4gICAgfVxuICB9XG59XG5cbmRlY2xhcmUgbW9kdWxlIFwibmV4dC1hdXRoL2p3dFwiIHtcbiAgaW50ZXJmYWNlIEpXVCB7XG4gICAgc3ViOiBzdHJpbmdcbiAgfVxufVxuIl0sIm5hbWVzIjpbImF1dGgiLCJoYW5kbGVycyIsInNpZ25JbiIsInNpZ25PdXQiLCJOZXh0QXV0aCIsInByb3ZpZGVycyIsIkdvb2dsZVByb3ZpZGVyIiwiY2xpZW50SWQiLCJwcm9jZXNzIiwiZW52IiwiQVVUSF9HT09HTEVfSUQiLCJjbGllbnRTZWNyZXQiLCJBVVRIX0dPT0dMRV9TRUNSRVQiLCJwYWdlcyIsImVycm9yIiwiY2FsbGJhY2tzIiwic2Vzc2lvbiIsInRva2VuIiwic3ViIiwidXNlciIsImlkIiwiand0IiwiYWNjb3VudCIsImVtYWlsIiwicHJvZmlsZSIsImV2ZW50cyIsImlzTmV3VXNlciIsImNvbnNvbGUiLCJsb2ciLCJzdHJhdGVneSIsIm1heEFnZSIsInVwZGF0ZUFnZSIsImRlYnVnIiwiTk9ERV9FTlYiXSwibWFwcGluZ3MiOiJBQUFBOzs7Q0FHQzs7Ozs7Ozs7Ozs7UUFNd0JBO2VBQUFBOztRQUFWQztlQUFBQTs7UUFBZ0JDO2VBQUFBOztRQUFRQztlQUFBQTs7O2lFQUpsQjsrREFDTTs7Ozs7O0FBR3BCLE1BQU0sRUFBRUYsUUFBUSxFQUFFRCxJQUFJLEVBQUVFLE1BQU0sRUFBRUMsT0FBTyxFQUFFLEdBQUdDLElBQUFBLGlCQUFRLEVBQUM7SUFDMUQsNkJBQTZCO0lBQzdCQyxXQUFXO1FBQ1RDLElBQUFBLGVBQWMsRUFBQztZQUNiQyxVQUFVQyxRQUFRQyxHQUFHLENBQUNDLGNBQWM7WUFDcENDLGNBQWNILFFBQVFDLEdBQUcsQ0FBQ0csa0JBQWtCO1FBQzlDO0tBQ0Q7SUFFRCwyREFBMkQ7SUFDM0QsNkJBQTZCO0lBQzdCLGdEQUFnRDtJQUNoRCxvREFBb0Q7SUFDcEQsTUFBTTtJQUVOLDBDQUEwQztJQUMxQ0MsT0FBTztRQUNMWCxRQUFRO1FBQ1JDLFNBQVM7UUFDVFcsT0FBTztJQUNUO0lBRUEsNkJBQTZCO0lBQzdCQyxXQUFXO1FBQ1QsaURBQWlEO1FBQ2pELE1BQU1DLFNBQVEsRUFBRUEsT0FBTyxFQUFFQyxLQUFLLEVBQUU7WUFDOUIsMkRBQTJEO1lBQzNELElBQUlBLE1BQU1DLEdBQUcsRUFBRTtnQkFDYkYsUUFBUUcsSUFBSSxDQUFDQyxFQUFFLEdBQUdILE1BQU1DLEdBQUc7WUFDN0I7WUFFQSxPQUFPRjtRQUNUO1FBRUEsa0JBQWtCO1FBQ2xCLE1BQU1LLEtBQUksRUFBRUosS0FBSyxFQUFFRSxJQUFJLEVBQUVHLE9BQU8sRUFBRTtZQUNoQyxJQUFJSCxNQUFNO2dCQUNSRixNQUFNQyxHQUFHLEdBQUdDLEtBQUtDLEVBQUU7Z0JBQ25CSCxNQUFNTSxLQUFLLEdBQUdKLEtBQUtJLEtBQUs7WUFDMUI7WUFDQSxPQUFPTjtRQUNUO1FBRUEsMkJBQTJCO1FBQzNCLE1BQU1mLFFBQU8sRUFBRWlCLElBQUksRUFBRUcsT0FBTyxFQUFFRSxPQUFPLEVBQUU7WUFDckMsd0NBQXdDO1lBQ3hDLGtEQUFrRDtZQUNsRCxPQUFPO1FBQ1Q7SUFDRjtJQUVBLDJCQUEyQjtJQUMzQkMsUUFBUTtRQUNOLE1BQU12QixRQUFPLEVBQUVpQixJQUFJLEVBQUVHLE9BQU8sRUFBRUUsT0FBTyxFQUFFRSxTQUFTLEVBQUU7WUFDaERDLFFBQVFDLEdBQUcsQ0FBQyxDQUFDLGdDQUFnQyxFQUFFVCxLQUFLSSxLQUFLLEVBQUU7WUFFM0QseURBQXlEO1lBQ3pELElBQUlHLFdBQVc7Z0JBQ2JDLFFBQVFDLEdBQUcsQ0FBQyxDQUFDLHFDQUFxQyxFQUFFVCxLQUFLSSxLQUFLLEVBQUU7WUFDbEU7UUFDRjtRQUVBLE1BQU1wQixTQUFRLEVBQUVhLE9BQU8sRUFBRUMsS0FBSyxFQUFFO1lBQzlCVSxRQUFRQyxHQUFHLENBQUMsQ0FBQywrQkFBK0IsQ0FBQztRQUMvQztJQUNGO0lBRUEsa0NBQWtDO0lBQ2xDWixTQUFTO1FBQ1BhLFVBQVU7UUFDVkMsUUFBUSxLQUFLLEtBQUssS0FBSztRQUN2QkMsV0FBVyxLQUFLLEtBQUs7SUFDdkI7SUFFQSw4REFBOEQ7SUFDOURWLEtBQUs7UUFDSFMsUUFBUSxLQUFLLEtBQUssS0FBSztJQUN6QjtJQUVBLHlCQUF5QjtJQUN6QkUsT0FBT3hCLFFBQVFDLEdBQUcsQ0FBQ3dCLFFBQVEsS0FBSztBQUNsQyJ9