{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\search\\trending\\route.ts"],"sourcesContent":["// ===================================\n// API: /api/search/trending - B√∫squedas populares/trending\n// ===================================\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { getSupabaseClient } from '@/lib/supabase';\nimport { ApiResponse } from '@/types/api';\n\nexport interface TrendingSearch {\n  id: string;\n  query: string;\n  count: number;\n  category?: string;\n  href: string;\n  type: 'trending';\n}\n\nexport interface TrendingSearchesResponse {\n  trending: TrendingSearch[];\n  lastUpdated: string;\n}\n\n// B√∫squedas trending por defecto (fallback)\nconst defaultTrendingSearches: TrendingSearch[] = [\n  {\n    id: \"trending-1\",\n    query: \"Pintura l√°tex\",\n    count: 156,\n    category: \"pinturas\",\n    href: \"/search?q=pintura+latex\",\n    type: \"trending\"\n  },\n  {\n    id: \"trending-2\", \n    query: \"Sherwin Williams\",\n    count: 142,\n    category: \"marcas\",\n    href: \"/search?q=sherwin+williams\",\n    type: \"trending\"\n  },\n  {\n    id: \"trending-3\",\n    query: \"Rodillos premium\",\n    count: 98,\n    category: \"herramientas\",\n    href: \"/search?q=rodillos+premium\",\n    type: \"trending\"\n  },\n  {\n    id: \"trending-4\",\n    query: \"Pinceles\",\n    count: 87,\n    category: \"herramientas\", \n    href: \"/search?q=pinceles\",\n    type: \"trending\"\n  },\n  {\n    id: \"trending-5\",\n    query: \"Impermeabilizante\",\n    count: 76,\n    category: \"pinturas\",\n    href: \"/search?q=impermeabilizante\",\n    type: \"trending\"\n  },\n  {\n    id: \"trending-6\",\n    query: \"Petrilac\",\n    count: 65,\n    category: \"marcas\",\n    href: \"/search?q=petrilac\",\n    type: \"trending\"\n  }\n];\n\nexport async function GET(request: NextRequest) {\n  try {\n    const { searchParams } = new URL(request.url);\n    const limit = parseInt(searchParams.get('limit') || '6');\n    const days = parseInt(searchParams.get('days') || '7');\n    const category = searchParams.get('category');\n\n    console.log('üî• API /api/search/trending: Obteniendo b√∫squedas trending', {\n      limit,\n      days,\n      category\n    });\n\n    const supabase = getSupabaseClient();\n\n    let trendingSearches: TrendingSearch[] = [];\n\n    // Intentar obtener b√∫squedas trending reales del sistema de analytics\n    if (supabase) {\n      try {\n        const startDate = new Date();\n        startDate.setDate(startDate.getDate() - days);\n\n        // Query para obtener b√∫squedas m√°s populares de analytics_events\n        let query = supabase\n          .from('analytics_events')\n          .select('label, metadata')\n          .eq('category', 'search')\n          .eq('action', 'search_query')\n          .gte('created_at', startDate.toISOString())\n          .not('label', 'is', null);\n\n        if (category) {\n          query = query.eq('metadata->>category', category);\n        }\n\n        const { data: analyticsData, error } = await query;\n\n        if (!error && analyticsData && analyticsData.length > 0) {\n          // Procesar datos de analytics para obtener trending\n          const searchCounts = new Map<string, number>();\n          const searchCategories = new Map<string, string>();\n\n          analyticsData.forEach((event) => {\n            if (event.label) {\n              const query = event.label.toLowerCase().trim();\n              if (query.length > 2) { // Solo queries de m√°s de 2 caracteres\n                searchCounts.set(query, (searchCounts.get(query) || 0) + 1);\n                \n                // Extraer categor√≠a del metadata si existe\n                if (event.metadata && event.metadata.category) {\n                  searchCategories.set(query, event.metadata.category);\n                }\n              }\n            }\n          });\n\n          // Convertir a array y ordenar por popularidad\n          const sortedSearches = Array.from(searchCounts.entries())\n            .sort((a, b) => b[1] - a[1])\n            .slice(0, limit);\n\n          trendingSearches = sortedSearches.map(([query, count], index) => ({\n            id: `trending-real-${index + 1}`,\n            query: query.charAt(0).toUpperCase() + query.slice(1),\n            count,\n            category: searchCategories.get(query),\n            href: `/search?q=${encodeURIComponent(query)}`,\n            type: 'trending' as const\n          }));\n\n          console.log('‚úÖ B√∫squedas trending obtenidas de analytics:', trendingSearches.length);\n        }\n      } catch (analyticsError) {\n        console.warn('‚ö†Ô∏è Error obteniendo trending de analytics, usando fallback:', analyticsError);\n      }\n    }\n\n    // Si no hay datos reales o hay pocos, usar datos por defecto\n    if (trendingSearches.length < 3) {\n      console.log('üìã Usando b√∫squedas trending por defecto');\n      \n      let filteredDefaults = defaultTrendingSearches;\n      \n      // Filtrar por categor√≠a si se especifica\n      if (category) {\n        filteredDefaults = defaultTrendingSearches.filter(\n          search => search.category === category\n        );\n      }\n      \n      // Combinar datos reales con defaults si es necesario\n      const needed = limit - trendingSearches.length;\n      const additionalSearches = filteredDefaults.slice(0, needed);\n      \n      trendingSearches = [...trendingSearches, ...additionalSearches];\n    }\n\n    // Limitar al n√∫mero solicitado\n    trendingSearches = trendingSearches.slice(0, limit);\n\n    const response: ApiResponse<TrendingSearchesResponse> = {\n      data: {\n        trending: trendingSearches,\n        lastUpdated: new Date().toISOString()\n      },\n      success: true\n    };\n\n    console.log('üî• Trending searches response:', {\n      count: trendingSearches.length,\n      hasRealData: trendingSearches.some(s => s.id.includes('real')),\n      categories: [...new Set(trendingSearches.map(s => s.category).filter(Boolean))]\n    });\n\n    return NextResponse.json(response);\n\n  } catch (error) {\n    console.error('‚ùå Error en /api/search/trending:', error);\n\n    // En caso de error, devolver b√∫squedas por defecto\n    const fallbackResponse: ApiResponse<TrendingSearchesResponse> = {\n      data: {\n        trending: defaultTrendingSearches.slice(0, parseInt(request.nextUrl.searchParams.get('limit') || '6')),\n        lastUpdated: new Date().toISOString()\n      },\n      success: true\n    };\n\n    return NextResponse.json(fallbackResponse);\n  }\n}\n\n// M√©todo POST para registrar una b√∫squeda (para analytics)\nexport async function POST(request: NextRequest) {\n  try {\n    // Validar que el request tenga contenido\n    const contentType = request.headers.get('content-type');\n    if (!contentType || !contentType.includes('application/json')) {\n      return NextResponse.json(\n        { error: 'Content-Type debe ser application/json' },\n        { status: 400 }\n      );\n    }\n\n    // Obtener el texto del body primero para validar\n    const bodyText = await request.text();\n    if (!bodyText || bodyText.trim() === '' || bodyText === '\"\"' || bodyText === \"''\") {\n      return NextResponse.json(\n        { error: 'Body de la request no puede estar vac√≠o' },\n        { status: 400 }\n      );\n    }\n\n    // Parsear JSON de forma segura\n    let requestData;\n    try {\n      requestData = JSON.parse(bodyText);\n    } catch (parseError) {\n      console.error('Error parsing JSON in POST /api/search/trending:', parseError);\n      return NextResponse.json(\n        { error: 'JSON inv√°lido en el body de la request' },\n        { status: 400 }\n      );\n    }\n\n    const { query, category, userId, sessionId } = requestData;\n\n    if (!query || typeof query !== 'string') {\n      return NextResponse.json(\n        { error: 'Query de b√∫squeda requerida' },\n        { status: 400 }\n      );\n    }\n\n    const supabase = getSupabaseClient();\n\n    if (supabase) {\n      // Registrar la b√∫squeda en analytics\n      const { error } = await supabase\n        .from('analytics_events')\n        .insert({\n          event_name: 'search_query',\n          category: 'search',\n          action: 'search_query',\n          label: query.toLowerCase().trim(),\n          user_id: userId,\n          session_id: sessionId || 'anonymous',\n          page: '/search',\n          metadata: {\n            category: category,\n            timestamp: new Date().toISOString()\n          }\n        });\n\n      if (error) {\n        console.error('Error registrando b√∫squeda en analytics:', error);\n      } else {\n        console.log('‚úÖ B√∫squeda registrada en analytics:', query);\n      }\n    }\n\n    return NextResponse.json({ success: true });\n\n  } catch (error) {\n    console.error('‚ùå Error registrando b√∫squeda:', error);\n    return NextResponse.json(\n      { error: 'Error interno del servidor' },\n      { status: 500 }\n    );\n  }\n}\n"],"names":["GET","POST","defaultTrendingSearches","id","query","count","category","href","type","request","searchParams","URL","url","limit","parseInt","get","days","console","log","supabase","getSupabaseClient","trendingSearches","startDate","Date","setDate","getDate","from","select","eq","gte","toISOString","not","data","analyticsData","error","length","searchCounts","Map","searchCategories","forEach","event","label","toLowerCase","trim","set","metadata","sortedSearches","Array","entries","sort","a","b","slice","map","index","charAt","toUpperCase","encodeURIComponent","analyticsError","warn","filteredDefaults","filter","search","needed","additionalSearches","response","trending","lastUpdated","success","hasRealData","some","s","includes","categories","Set","Boolean","NextResponse","json","fallbackResponse","nextUrl","contentType","headers","status","bodyText","text","requestData","JSON","parse","parseError","userId","sessionId","insert","event_name","action","user_id","session_id","page","timestamp"],"mappings":"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"}