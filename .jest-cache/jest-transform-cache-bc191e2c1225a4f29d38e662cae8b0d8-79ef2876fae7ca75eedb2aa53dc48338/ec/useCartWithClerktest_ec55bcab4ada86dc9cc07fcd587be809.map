{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\__tests__\\hooks\\useCartWithClerk.test.ts"],"sourcesContent":["/**\n * Test simplificado para useCartWithClerk\n * Enfocado en validar la funcionalidad core sin complejidades\n */\n\nimport React from 'react'\nimport { renderHook, act } from '@testing-library/react'\nimport { Provider } from 'react-redux'\nimport { configureStore } from '@reduxjs/toolkit'\nimport { useAuth } from '@/hooks/useAuth'\nimport cartReducer, { addItemToCart } from '@/redux/features/cart-slice'\nimport { useCartWithClerk } from '@/hooks/useCartWithClerk'\n\n// Mock para evitar problemas de dependencias\njest.mock('@/hooks/useAuth', () => ({\n  useAuth: jest.fn()\n}))\n\n// Mock localStorage\nconst localStorageMock = {\n  getItem: jest.fn(() => null),\n  setItem: jest.fn(),\n  removeItem: jest.fn(),\n  clear: jest.fn()\n}\nObject.defineProperty(window, 'localStorage', { value: localStorageMock })\n\n// Mock user data\nconst mockUser = {\n  id: 'user_123',\n  name: 'Juan Pérez',\n  email: 'juan@example.com'\n}\n\n// Mock product data\nconst mockProduct = {\n  id: 1,\n  name: 'Pintura Latex Interior',\n  price: 5000,\n  category: 'Pinturas'\n}\n\ndescribe('useCartWithClerk Hook - Simplified', () => {\n  let store: any\n  const mockUseAuth = useAuth as jest.MockedFunction<typeof useAuth>\n\n  const renderHookWithStore = () => {\n    store = configureStore({\n      reducer: {\n        cartReducer\n      }\n    })\n\n    const wrapper = ({ children }: { children: React.ReactNode }) =>\n      React.createElement(Provider, { store }, children)\n\n    return renderHook(() => useCartWithClerk(), { wrapper })\n  }\n\n  beforeEach(() => {\n    jest.clearAllMocks()\n    localStorageMock.getItem.mockReturnValue(null)\n  })\n\n  describe('Unauthenticated User', () => {\n    beforeEach(() => {\n      mockUseAuth.mockReturnValue({\n        user: null,\n        isLoaded: true,\n        isSignedIn: false,\n        signIn: jest.fn(),\n        signOut: jest.fn(),\n        session: null,\n        status: 'unauthenticated'\n      } as any)\n    })\n\n    it('should handle unauthenticated user correctly', () => {\n      const { result } = renderHookWithStore()\n\n      expect(result.current.isAuthenticated).toBe(false)\n      expect(result.current.userId).toBeUndefined()\n      expect(Array.isArray(result.current.cartItems)).toBe(true)\n    })\n  })\n\n  describe('Authenticated User', () => {\n    beforeEach(() => {\n      mockUseAuth.mockReturnValue({\n        user: mockUser,\n        isLoaded: true,\n        isSignedIn: true,\n        signIn: jest.fn(),\n        signOut: jest.fn(),\n        session: { user: mockUser },\n        status: 'authenticated'\n      } as any)\n    })\n\n    it('should identify authenticated user correctly', () => {\n      const { result } = renderHookWithStore()\n\n      expect(result.current.isAuthenticated).toBe(true)\n      expect(result.current.userId).toBe(mockUser.id)\n      expect(Array.isArray(result.current.cartItems)).toBe(true)\n    })\n\n    it('should handle cart changes for authenticated user', () => {\n      const { result } = renderHookWithStore()\n\n      // Verificar estado inicial\n      expect(result.current.isAuthenticated).toBe(true)\n      expect(result.current.cartItems).toHaveLength(0)\n\n      // Agregar item al carrito usando Redux dispatch\n      act(() => {\n        store.dispatch(addItemToCart(mockProduct))\n      })\n\n      // Verificar que el item se agregó correctamente\n      expect(result.current.cartItems).toHaveLength(1)\n      expect(result.current.cartItems[0]).toEqual(expect.objectContaining({\n        id: mockProduct.id,\n        price: mockProduct.price\n      }))\n    })\n  })\n\n  describe('Loading State', () => {\n    beforeEach(() => {\n      mockUseAuth.mockReturnValue({\n        user: null,\n        isLoaded: false,\n        isSignedIn: false,\n        signIn: jest.fn(),\n        signOut: jest.fn(),\n        session: null,\n        status: 'loading'\n      } as any)\n    })\n\n    it('should handle loading state correctly', () => {\n      const { result } = renderHookWithStore()\n\n      expect(result.current.isAuthenticated).toBe(false)\n      expect(Array.isArray(result.current.cartItems)).toBe(true)\n    })\n  })\n})\n"],"names":["jest","mock","useAuth","fn","localStorageMock","getItem","setItem","removeItem","clear","Object","defineProperty","window","value","mockUser","id","name","email","mockProduct","price","category","describe","store","mockUseAuth","renderHookWithStore","configureStore","reducer","cartReducer","wrapper","children","React","createElement","Provider","renderHook","useCartWithClerk","beforeEach","clearAllMocks","mockReturnValue","user","isLoaded","isSignedIn","signIn","signOut","session","status","it","result","expect","current","isAuthenticated","toBe","userId","toBeUndefined","Array","isArray","cartItems","toHaveLength","act","dispatch","addItemToCart","toEqual","objectContaining"],"mappings":"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"}