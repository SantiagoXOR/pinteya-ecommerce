e0a21b6ca04f88d42a9a000769af1001
// ===================================
// TESTS DE OPTIMIZACIÓN UI COMPONENTS
// Tests para verificar optimizaciones de performance
// ===================================
"use strict";
// Mock de hooks
jest.mock('@/hooks/useSearchOptimized', ()=>({
        useSearchOptimized: ()=>({
                searchTerm: '',
                suggestions: [],
                isLoading: false,
                error: null,
                handleSearch: jest.fn(),
                handleSuggestionSelect: jest.fn(),
                searchWithDebounce: jest.fn(),
                handleClear: jest.fn()
            })
    }));
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_default(require("react"));
const _react1 = require("@testing-library/react");
const _card = require("../../components/ui/card");
const _SearchAutocompleteIntegrated = require("../../components/ui/SearchAutocompleteIntegrated");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
describe('UI Components Optimization', ()=>{
    describe('ProductCard Optimization', ()=>{
        const mockProps = {
            title: 'Test Product',
            price: 100,
            image: '/test-image.jpg',
            productId: '1'
        };
        it('debe renderizar ProductCard correctamente', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_card.ProductCard, {
                ...mockProps
            }));
            expect(_react1.screen.getByText('Test Product')).toBeInTheDocument();
        });
        it('debe ser memoizado (React.memo)', ()=>{
            // Verificar que el componente tiene displayName (indicativo de memo)
            expect(_card.ProductCard.displayName).toBe('ProductCard');
        });
        it('debe manejar props opcionales sin errores', ()=>{
            const minimalProps = {
                title: 'Minimal Product',
                price: 50,
                productId: '2'
            };
            expect(()=>{
                (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_card.ProductCard, {
                    ...minimalProps
                }));
            }).not.toThrow();
        });
    });
    describe('SearchAutocompleteIntegrated Optimization', ()=>{
        it('debe renderizar SearchAutocompleteIntegrated correctamente', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_SearchAutocompleteIntegrated.SearchAutocompleteIntegrated, {}));
            // Verificar que el componente se renderiza sin errores
            const searchInput = _react1.screen.getByRole('searchbox');
            expect(searchInput).toBeInTheDocument();
        });
        it('debe ser memoizado (React.memo)', ()=>{
            // Verificar que el componente tiene displayName (indicativo de memo)
            expect(_SearchAutocompleteIntegrated.SearchAutocompleteIntegrated.displayName).toBe('SearchAutocompleteIntegrated');
        });
        it('debe manejar props vacías sin errores', ()=>{
            expect(()=>{
                (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_SearchAutocompleteIntegrated.SearchAutocompleteIntegrated, {}));
            }).not.toThrow();
        });
    });
    describe('Performance Optimizations', ()=>{
        it('debe cargar componentes sin errores de performance', ()=>{
            const startTime = performance.now();
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.ProductCard, {
                        title: "Performance Test",
                        price: 100,
                        productId: "perf-1"
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_SearchAutocompleteIntegrated.SearchAutocompleteIntegrated, {})
                ]
            }));
            const endTime = performance.now();
            const renderTime = endTime - startTime;
            // El render no debería tomar más de 100ms
            expect(renderTime).toBeLessThan(100);
        });
        it('debe manejar múltiples instancias eficientemente', ()=>{
            const products = Array.from({
                length: 10
            }, (_, i)=>({
                    title: `Product ${i}`,
                    price: 100 + i,
                    productId: `prod-${i}`
                }));
            const startTime = performance.now();
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                children: products.map((product)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_card.ProductCard, {
                        ...product
                    }, product.productId))
            }));
            const endTime = performance.now();
            const renderTime = endTime - startTime;
            // Renderizar 10 productos no debería tomar más de 200ms
            expect(renderTime).toBeLessThan(200);
        });
    });
    describe('Accessibility Optimizations', ()=>{
        it('debe tener atributos de accesibilidad básicos', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_card.ProductCard, {
                title: "Accessible Product",
                price: 100,
                productId: "acc-1"
            }));
            // Verificar que el título es accesible
            expect(_react1.screen.getByText('Accessible Product')).toBeInTheDocument();
        });
        it('debe manejar navegación por teclado', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_SearchAutocompleteIntegrated.SearchAutocompleteIntegrated, {}));
            const searchInput = _react1.screen.getByRole('searchbox');
            expect(searchInput).toHaveAttribute('type', 'search');
        });
    });
    describe('Responsive Optimizations', ()=>{
        it('debe renderizar sin errores en diferentes tamaños', ()=>{
            // Simular diferentes tamaños de ventana
            const originalInnerWidth = window.innerWidth;
            try {
                // Mobile
                Object.defineProperty(window, 'innerWidth', {
                    writable: true,
                    configurable: true,
                    value: 375
                });
                (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_card.ProductCard, {
                    title: "Responsive Product",
                    price: 100,
                    productId: "resp-1"
                }));
                expect(_react1.screen.getByText('Responsive Product')).toBeInTheDocument();
                // Desktop
                Object.defineProperty(window, 'innerWidth', {
                    writable: true,
                    configurable: true,
                    value: 1024
                });
                (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_card.ProductCard, {
                    title: "Desktop Product",
                    price: 100,
                    productId: "resp-2"
                }));
                expect(_react1.screen.getByText('Desktop Product')).toBeInTheDocument();
            } finally{
                // Restaurar valor original
                Object.defineProperty(window, 'innerWidth', {
                    writable: true,
                    configurable: true,
                    value: originalInnerWidth
                });
            }
        });
    });
});

//# sourceMappingURL=data:application/json;base64,