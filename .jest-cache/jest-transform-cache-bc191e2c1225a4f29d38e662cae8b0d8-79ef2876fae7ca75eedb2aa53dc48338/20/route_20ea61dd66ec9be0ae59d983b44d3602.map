{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\auth\\webhook\\route.ts"],"sourcesContent":["// ===================================\n// PINTEYA E-COMMERCE - WEBHOOK ROBUSTO DE CLERK\n// Versión mejorada con validación de firma, retry logic y auditoría\n// ===================================\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { Webhook } from 'svix';\nimport {\n  syncUserToSupabase,\n  deleteUserFromSupabase,\n  type ClerkUserData\n} from '@/lib/auth/user-sync-service';\nimport {\n  logSecurityEvent,\n  logAdminAction\n} from '@/lib/auth/security-audit';\n\n// ===================================\n// TIPOS Y INTERFACES\n// ===================================\n\ninterface WebhookEventData {\n  data: ClerkUserData;\n  object: string;\n  type: string;\n  timestamp?: number;\n}\n\ninterface WebhookProcessingResult {\n  success: boolean;\n  eventType: string;\n  userId?: string;\n  action?: string;\n  error?: string;\n  processingTime?: number;\n}\n\ninterface WebhookMetrics {\n  totalEvents: number;\n  successfulEvents: number;\n  failedEvents: number;\n  eventTypes: Record<string, number>;\n  averageProcessingTime: number;\n}\n\n// ===================================\n// FUNCIONES DE UTILIDAD\n// ===================================\n\n/**\n * Valida los headers del webhook de Clerk\n */\nfunction validateWebhookHeaders(request: NextRequest): {\n  valid: boolean;\n  headers?: {\n    svix_id: string;\n    svix_timestamp: string;\n    svix_signature: string;\n  };\n  error?: string;\n} {\n  const svix_id = request.headers.get('svix-id');\n  const svix_timestamp = request.headers.get('svix-timestamp');\n  const svix_signature = request.headers.get('svix-signature');\n\n  if (!svix_id || !svix_timestamp || !svix_signature) {\n    return {\n      valid: false,\n      error: 'Headers de webhook faltantes (svix-id, svix-timestamp, svix-signature)'\n    };\n  }\n\n  return {\n    valid: true,\n    headers: {\n      svix_id,\n      svix_timestamp,\n      svix_signature\n    }\n  };\n}\n\n/**\n * Verifica la firma del webhook usando svix\n */\nasync function verifyWebhookSignature(\n  payload: string,\n  headers: { svix_id: string; svix_timestamp: string; svix_signature: string },\n  secret: string\n): Promise<{ valid: boolean; event?: WebhookEventData; error?: string }> {\n  try {\n    const wh = new Webhook(secret);\n\n    const evt = wh.verify(payload, {\n      'svix-id': headers.svix_id,\n      'svix-timestamp': headers.svix_timestamp,\n      'svix-signature': headers.svix_signature,\n    }) as WebhookEventData;\n\n    return { valid: true, event: evt };\n  } catch (error) {\n    console.error('[WEBHOOK] Error verificando firma:', error);\n    return {\n      valid: false,\n      error: `Error verificando firma: ${error.message}`\n    };\n  }\n}\n\n/**\n * Procesa un evento de webhook específico\n */\nasync function processWebhookEvent(event: WebhookEventData): Promise<WebhookProcessingResult> {\n  const startTime = Date.now();\n  const eventType = event.type;\n  const userData = event.data;\n\n  console.log(`[WEBHOOK] Procesando evento: ${eventType} para usuario ${userData.id}`);\n\n  try {\n    switch (eventType) {\n      case 'user.created':\n        const createResult = await syncUserToSupabase(userData, {\n          retryAttempts: 2,\n          retryDelay: 1000,\n          validateData: true,\n          createMissingRole: true,\n          logEvents: true\n        });\n\n        if (createResult.success) {\n          await logAdminAction(\n            userData.id,\n            'USER_CREATED_VIA_WEBHOOK',\n            'user_profile',\n            {\n              userId: userData.id,\n              userRole: 'customer',\n              permissions: {},\n              metadata: { source: 'clerk_webhook' }\n            },\n            {\n              action: createResult.action,\n              email: userData.email_addresses[0]?.email_address,\n              webhook_event: eventType\n            }\n          );\n\n          return {\n            success: true,\n            eventType,\n            userId: userData.id,\n            action: createResult.action,\n            processingTime: Date.now() - startTime\n          };\n        } else {\n          throw new Error(createResult.error || 'Error creando usuario');\n        }\n\n      case 'user.updated':\n        const updateResult = await syncUserToSupabase(userData, {\n          retryAttempts: 2,\n          retryDelay: 1000,\n          validateData: true,\n          createMissingRole: false,\n          logEvents: true\n        });\n\n        if (updateResult.success) {\n          await logAdminAction(\n            userData.id,\n            'USER_UPDATED_VIA_WEBHOOK',\n            'user_profile',\n            {\n              userId: userData.id,\n              userRole: 'customer',\n              permissions: {},\n              metadata: { source: 'clerk_webhook' }\n            },\n            {\n              action: updateResult.action,\n              email: userData.email_addresses[0]?.email_address,\n              webhook_event: eventType\n            }\n          );\n\n          return {\n            success: true,\n            eventType,\n            userId: userData.id,\n            action: updateResult.action,\n            processingTime: Date.now() - startTime\n          };\n        } else {\n          throw new Error(updateResult.error || 'Error actualizando usuario');\n        }\n\n      case 'user.deleted':\n        const deleteResult = await deleteUserFromSupabase(userData.id, {\n          retryAttempts: 2,\n          retryDelay: 1000,\n          logEvents: true\n        });\n\n        if (deleteResult.success) {\n          await logAdminAction(\n            userData.id,\n            'USER_DELETED_VIA_WEBHOOK',\n            'user_profile',\n            {\n              userId: userData.id,\n              userRole: 'customer',\n              permissions: {},\n              metadata: { source: 'clerk_webhook' }\n            },\n            {\n              action: deleteResult.action,\n              webhook_event: eventType\n            }\n          );\n\n          return {\n            success: true,\n            eventType,\n            userId: userData.id,\n            action: deleteResult.action,\n            processingTime: Date.now() - startTime\n          };\n        } else {\n          throw new Error(deleteResult.error || 'Error eliminando usuario');\n        }\n\n      default:\n        console.log(`[WEBHOOK] Evento no manejado: ${eventType}`);\n        return {\n          success: true,\n          eventType,\n          userId: userData.id,\n          action: 'ignored',\n          processingTime: Date.now() - startTime\n        };\n    }\n  } catch (error) {\n    console.error(`[WEBHOOK] Error procesando evento ${eventType}:`, error);\n\n    // Log evento de error\n    await logSecurityEvent({\n      user_id: userData.id,\n      event_type: 'SECURITY_VIOLATION',\n      event_category: 'data_access',\n      severity: 'medium',\n      description: `Error procesando webhook ${eventType}`,\n      metadata: {\n        eventType,\n        error: error.message,\n        webhook_event: true\n      }\n    });\n\n    return {\n      success: false,\n      eventType,\n      userId: userData.id,\n      error: error.message,\n      processingTime: Date.now() - startTime\n    };\n  }\n}\n\n// ===================================\n// ENDPOINT PRINCIPAL DEL WEBHOOK\n// ===================================\n/**\n * POST /api/auth/webhook - Webhook robusto de Clerk\n * Maneja eventos de usuario con validación de firma, retry logic y auditoría\n */\nexport async function POST(request: NextRequest) {\n  console.log('[WEBHOOK] 🚫 TEMPORALMENTE DESHABILITADO PARA EVITAR RECURSIÓN');\n\n  // RESPUESTA TEMPORAL PARA EVITAR ERRORES\n  return NextResponse.json(\n    {\n      success: false,\n      message: 'Webhook temporalmente deshabilitado para evitar recursión',\n      timestamp: new Date().toISOString()\n    },\n    { status: 503 }\n  );\n\n}\n"],"names":["POST","validateWebhookHeaders","request","svix_id","headers","get","svix_timestamp","svix_signature","valid","error","verifyWebhookSignature","payload","secret","wh","Webhook","evt","verify","event","console","message","processWebhookEvent","startTime","Date","now","eventType","type","userData","data","log","id","createResult","syncUserToSupabase","retryAttempts","retryDelay","validateData","createMissingRole","logEvents","success","logAdminAction","userId","userRole","permissions","metadata","source","action","email","email_addresses","email_address","webhook_event","processingTime","Error","updateResult","deleteResult","deleteUserFromSupabase","logSecurityEvent","user_id","event_type","event_category","severity","description","NextResponse","json","timestamp","toISOString","status"],"mappings":"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"}