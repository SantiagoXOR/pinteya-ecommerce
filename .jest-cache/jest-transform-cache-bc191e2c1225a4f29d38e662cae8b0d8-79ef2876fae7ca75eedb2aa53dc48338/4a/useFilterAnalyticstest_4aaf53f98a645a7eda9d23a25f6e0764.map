{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\__tests__\\useFilterAnalytics.test.ts"],"sourcesContent":["// ===================================\n// TESTS: useFilterAnalytics - Hook de Analytics para Filtros\n// ===================================\n\nimport { renderHook, act } from '@testing-library/react';\nimport { useFilterAnalytics } from '../useFilterAnalytics';\n\n// ===================================\n// MOCKS\n// ===================================\n\n// Mock fetch global\nglobal.fetch = jest.fn();\n\n// Mock window.gtag\nObject.defineProperty(window, 'gtag', {\n  value: jest.fn(),\n  writable: true,\n});\n\n// Mock sessionStorage\nconst mockSessionStorage = {\n  getItem: jest.fn(),\n  setItem: jest.fn(),\n  removeItem: jest.fn(),\n  clear: jest.fn(),\n};\n\nObject.defineProperty(window, 'sessionStorage', {\n  value: mockSessionStorage,\n  writable: true,\n});\n\n// Mock window.location\nObject.defineProperty(window, 'location', {\n  value: {\n    href: 'http://localhost:3000/test',\n    pathname: '/test',\n    search: '?categories=Exterior',\n  },\n  writable: true,\n});\n\n// Mock document.title\nObject.defineProperty(document, 'title', {\n  value: 'Test Page - Pinteya',\n  writable: true,\n});\n\n// ===================================\n// SETUP Y HELPERS\n// ===================================\n\nconst mockFetchResponse = (success = true, data = {}) => {\n  (global.fetch as jest.Mock).mockResolvedValueOnce({\n    ok: success,\n    json: async () => data,\n  });\n};\n\n// ===================================\n// TESTS PRINCIPALES\n// ===================================\n\ndescribe('useFilterAnalytics', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n    mockSessionStorage.getItem.mockReturnValue(null);\n    console.log = jest.fn();\n    console.warn = jest.fn();\n  });\n\n  // ===================================\n  // TESTS DE INICIALIZACIÓN\n  // ===================================\n\n  describe('Inicialización', () => {\n    it('inicializa con configuración por defecto', () => {\n      const { result } = renderHook(() => useFilterAnalytics());\n      \n      expect(result.current.enabled).toBe(true);\n      expect(result.current.sessionId).toMatch(/^session_\\d+_[a-z0-9]+$/);\n      expect(result.current.userId).toBeUndefined();\n    });\n\n    it('acepta configuración personalizada', () => {\n      const { result } = renderHook(() => \n        useFilterAnalytics({\n          enabled: false,\n          debug: true,\n          sessionId: 'custom-session-123',\n          userId: 'user-456',\n        })\n      );\n      \n      expect(result.current.enabled).toBe(false);\n      expect(result.current.sessionId).toBe('custom-session-123');\n      expect(result.current.userId).toBe('user-456');\n    });\n\n    it('genera sessionId único cuando no se proporciona', () => {\n      const { result: result1 } = renderHook(() => useFilterAnalytics());\n      const { result: result2 } = renderHook(() => useFilterAnalytics());\n      \n      expect(result1.current.sessionId).not.toBe(result2.current.sessionId);\n    });\n\n    it('usa sessionId del sessionStorage si existe', () => {\n      mockSessionStorage.getItem.mockReturnValue('existing-session-789');\n      \n      const { result } = renderHook(() => useFilterAnalytics());\n      \n      expect(result.current.sessionId).toBe('existing-session-789');\n    });\n  });\n\n  // ===================================\n  // TESTS DE TRACKING DE FILTROS\n  // ===================================\n\n  describe('Tracking de Filtros', () => {\n    it('trackea aplicación de filtro correctamente', async () => {\n      mockFetchResponse(true);\n      \n      const { result } = renderHook(() => useFilterAnalytics());\n      \n      await act(async () => {\n        result.current.trackFilterApplied('category', 'Exterior', 12);\n      });\n      \n      expect(global.fetch).toHaveBeenCalledWith('/api/analytics/events', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: expect.stringContaining('\"event\":\"filter_applied\"'),\n      });\n      \n      expect(window.gtag).toHaveBeenCalledWith('event', 'applied', expect.any(Object));\n    });\n\n    it('trackea remoción de filtro correctamente', async () => {\n      mockFetchResponse(true);\n      \n      const { result } = renderHook(() => useFilterAnalytics());\n      \n      await act(async () => {\n        result.current.trackFilterRemoved('brand', 'Sherwin Williams', 2);\n      });\n      \n      expect(global.fetch).toHaveBeenCalledWith('/api/analytics/events', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: expect.stringContaining('\"event\":\"filter_removed\"'),\n      });\n    });\n\n    it('trackea limpieza de filtros correctamente', async () => {\n      mockFetchResponse(true);\n      \n      const { result } = renderHook(() => useFilterAnalytics());\n      \n      await act(async () => {\n        result.current.trackFiltersCleared(3, ['category', 'brand', 'price_range']);\n      });\n      \n      expect(global.fetch).toHaveBeenCalledWith('/api/analytics/events', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: expect.stringContaining('\"event\":\"filter_cleared\"'),\n      });\n    });\n\n    it('trackea búsqueda correctamente', async () => {\n      mockFetchResponse(true);\n      \n      const { result } = renderHook(() => useFilterAnalytics());\n      \n      await act(async () => {\n        result.current.trackSearchPerformed('pintura exterior', 15, true, 2);\n      });\n      \n      expect(global.fetch).toHaveBeenCalledWith('/api/analytics/events', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: expect.stringContaining('\"event\":\"filter_search\"'),\n      });\n    });\n\n    it('trackea paginación correctamente', async () => {\n      mockFetchResponse(true);\n      \n      const { result } = renderHook(() => useFilterAnalytics());\n      \n      await act(async () => {\n        result.current.trackPaginationUsed(1, 2, 5, 12);\n      });\n      \n      expect(global.fetch).toHaveBeenCalledWith('/api/analytics/events', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: expect.stringContaining('\"event\":\"filter_pagination\"'),\n      });\n    });\n\n    it('trackea cambio de ordenamiento correctamente', async () => {\n      mockFetchResponse(true);\n      \n      const { result } = renderHook(() => useFilterAnalytics());\n      \n      await act(async () => {\n        result.current.trackSortChanged('created_at', 'price_asc', 20);\n      });\n      \n      expect(global.fetch).toHaveBeenCalledWith('/api/analytics/events', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: expect.stringContaining('\"event\":\"filter_sort_changed\"'),\n      });\n    });\n  });\n\n  // ===================================\n  // TESTS DE TRACKING AUTOMÁTICO\n  // ===================================\n\n  describe('Tracking Automático de Cambios', () => {\n    it('detecta y trackea filtros añadidos', async () => {\n      mockFetchResponse(true);\n      \n      const { result } = renderHook(() => useFilterAnalytics());\n      \n      const previousFilters = {\n        categories: [],\n        brands: [],\n        priceMin: undefined,\n        priceMax: undefined,\n        search: '',\n        sortBy: 'created_at',\n        page: 1,\n        limit: 12,\n      };\n      \n      const currentFilters = {\n        categories: ['Exterior'],\n        brands: [],\n        priceMin: undefined,\n        priceMax: undefined,\n        search: '',\n        sortBy: 'created_at',\n        page: 1,\n        limit: 12,\n      };\n      \n      await act(async () => {\n        result.current.trackFilterChanges(previousFilters, currentFilters, 12);\n      });\n      \n      expect(global.fetch).toHaveBeenCalledWith('/api/analytics/events', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: expect.stringContaining('\"event\":\"filter_applied\"'),\n      });\n    });\n\n    it('detecta y trackea filtros removidos', async () => {\n      mockFetchResponse(true);\n      \n      const { result } = renderHook(() => useFilterAnalytics());\n      \n      const previousFilters = {\n        categories: ['Exterior', 'Interior'],\n        brands: ['Sherwin Williams'],\n        priceMin: undefined,\n        priceMax: undefined,\n        search: '',\n        sortBy: 'created_at',\n        page: 1,\n        limit: 12,\n      };\n      \n      const currentFilters = {\n        categories: ['Exterior'],\n        brands: [],\n        priceMin: undefined,\n        priceMax: undefined,\n        search: '',\n        sortBy: 'created_at',\n        page: 1,\n        limit: 12,\n      };\n      \n      await act(async () => {\n        result.current.trackFilterChanges(previousFilters, currentFilters, 8);\n      });\n      \n      // Debe trackear remoción de 'Interior' y 'Sherwin Williams'\n      expect(global.fetch).toHaveBeenCalledTimes(2);\n    });\n\n    it('detecta cambios de precio', async () => {\n      mockFetchResponse(true);\n      \n      const { result } = renderHook(() => useFilterAnalytics());\n      \n      const previousFilters = {\n        categories: [],\n        brands: [],\n        priceMin: undefined,\n        priceMax: undefined,\n        search: '',\n        sortBy: 'created_at',\n        page: 1,\n        limit: 12,\n      };\n      \n      const currentFilters = {\n        categories: [],\n        brands: [],\n        priceMin: 1000,\n        priceMax: 5000,\n        search: '',\n        sortBy: 'created_at',\n        page: 1,\n        limit: 12,\n      };\n      \n      await act(async () => {\n        result.current.trackFilterChanges(previousFilters, currentFilters, 5);\n      });\n      \n      expect(global.fetch).toHaveBeenCalledWith('/api/analytics/events', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: expect.stringContaining('\"filter_value\":\"1000-5000\"'),\n      });\n    });\n  });\n\n  // ===================================\n  // TESTS DE MANEJO DE ERRORES\n  // ===================================\n\n  describe('Manejo de Errores', () => {\n    it('maneja errores de fetch gracefully', async () => {\n      (global.fetch as jest.Mock).mockRejectedValueOnce(new Error('Network error'));\n      \n      const { result } = renderHook(() => useFilterAnalytics());\n      \n      await act(async () => {\n        result.current.trackFilterApplied('category', 'Exterior', 12);\n      });\n      \n      expect(console.warn).toHaveBeenCalledWith(\n        'Analytics tracking error:',\n        expect.any(Error)\n      );\n    });\n\n    it('continúa funcionando cuando gtag no está disponible', async () => {\n      delete (window as any).gtag;\n      mockFetchResponse(true);\n      \n      const { result } = renderHook(() => useFilterAnalytics());\n      \n      await act(async () => {\n        result.current.trackFilterApplied('category', 'Exterior', 12);\n      });\n      \n      // Debe seguir enviando a Supabase\n      expect(global.fetch).toHaveBeenCalled();\n    });\n  });\n\n  // ===================================\n  // TESTS DE CONFIGURACIÓN\n  // ===================================\n\n  describe('Configuración', () => {\n    it('no trackea cuando está deshabilitado', async () => {\n      const { result } = renderHook(() => \n        useFilterAnalytics({ enabled: false })\n      );\n      \n      await act(async () => {\n        result.current.trackFilterApplied('category', 'Exterior', 12);\n      });\n      \n      expect(global.fetch).not.toHaveBeenCalled();\n      expect(window.gtag).not.toHaveBeenCalled();\n    });\n\n    it('muestra logs en modo debug', async () => {\n      mockFetchResponse(true);\n      \n      const { result } = renderHook(() => \n        useFilterAnalytics({ debug: true })\n      );\n      \n      await act(async () => {\n        result.current.trackFilterApplied('category', 'Exterior', 12);\n      });\n      \n      expect(console.log).toHaveBeenCalledWith(\n        '🔍 Filter Analytics Event:',\n        expect.any(Object)\n      );\n    });\n  });\n\n  // ===================================\n  // TESTS DE EVENTOS DE SESIÓN\n  // ===================================\n\n  describe('Eventos de Sesión', () => {\n    it('trackea inicio de sesión al montar', () => {\n      mockFetchResponse(true);\n      \n      renderHook(() => useFilterAnalytics());\n      \n      expect(global.fetch).toHaveBeenCalledWith('/api/analytics/events', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: expect.stringContaining('\"event\":\"filter_session_started\"'),\n      });\n    });\n\n    it('trackea fin de sesión al desmontar', () => {\n      mockFetchResponse(true);\n      \n      const { unmount } = renderHook(() => useFilterAnalytics());\n      \n      jest.clearAllMocks();\n      \n      unmount();\n      \n      expect(global.fetch).toHaveBeenCalledWith('/api/analytics/events', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: expect.stringContaining('\"event\":\"filter_session_ended\"'),\n      });\n    });\n  });\n});\n"],"names":["global","fetch","jest","fn","Object","defineProperty","window","value","writable","mockSessionStorage","getItem","setItem","removeItem","clear","href","pathname","search","document","mockFetchResponse","success","data","mockResolvedValueOnce","ok","json","describe","beforeEach","clearAllMocks","mockReturnValue","console","log","warn","it","result","renderHook","useFilterAnalytics","expect","current","enabled","toBe","sessionId","toMatch","userId","toBeUndefined","debug","result1","result2","not","act","trackFilterApplied","toHaveBeenCalledWith","method","headers","body","stringContaining","gtag","any","trackFilterRemoved","trackFiltersCleared","trackSearchPerformed","trackPaginationUsed","trackSortChanged","previousFilters","categories","brands","priceMin","undefined","priceMax","sortBy","page","limit","currentFilters","trackFilterChanges","toHaveBeenCalledTimes","mockRejectedValueOnce","Error","toHaveBeenCalled","unmount"],"mappings":"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"}