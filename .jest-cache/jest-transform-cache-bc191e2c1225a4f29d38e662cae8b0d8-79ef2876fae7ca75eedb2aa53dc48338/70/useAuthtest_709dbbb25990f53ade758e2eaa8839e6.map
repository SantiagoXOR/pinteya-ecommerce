{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\__tests__\\hooks\\useAuth.test.tsx"],"sourcesContent":["// ===================================\n// TESTS PARA HOOK DE AUTENTICACIÓN\n// Tests unitarios e integración para useAuth\n// ===================================\n\nimport { renderHook, act, waitFor } from '@testing-library/react';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { useAuth } from '@/hooks/useAuth';\nimport { useSession, signIn, signOut } from 'next-auth/react';\nimport { toast } from 'sonner';\nimport { useRouter } from 'next/navigation';\nimport React from 'react';\n\n// Mocks\njest.mock('next-auth/react');\njest.mock('sonner', () => ({\n  toast: {\n    success: jest.fn(),\n    error: jest.fn(),\n    loading: jest.fn()\n  }\n}));\n\njest.mock('next/navigation', () => ({\n  useRouter: jest.fn()\n}));\n\nconst mockRouter = {\n  push: jest.fn(),\n  replace: jest.fn(),\n  refresh: jest.fn()\n};\n\n// Wrapper para React Query\nconst createWrapper = () => {\n  const queryClient = new QueryClient({\n    defaultOptions: {\n      queries: {\n        retry: false,\n      },\n    },\n  });\n  \n  return ({ children }: { children: React.ReactNode }) => (\n    <QueryClientProvider client={queryClient}>{children}</QueryClientProvider>\n  );\n};\n\ndescribe('useAuth Hook', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n    (useRouter as jest.Mock).mockReturnValue(mockRouter);\n    \n    // Mock default NextAuth session\n    (useSession as jest.Mock).mockReturnValue({\n      data: {\n        user: {\n          id: 'test-user-id',\n          email: 'test@example.com',\n          name: 'Test User',\n          image: 'https://example.com/avatar.jpg',\n        },\n        expires: new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString(),\n      },\n      status: 'authenticated',\n    });\n  });\n\n  describe('Autenticación con NextAuth', () => {\n    it('debe iniciar sesión exitosamente', async () => {\n      (signIn as jest.Mock).mockResolvedValue({ ok: true, error: null });\n\n      const { result } = renderHook(() => useAuth(), {\n        wrapper: createWrapper()\n      });\n\n      await act(async () => {\n        await result.current.signIn('google', { callbackUrl: '/dashboard' });\n      });\n\n      expect(signIn).toHaveBeenCalledWith('google', {\n        callbackUrl: '/dashboard',\n      });\n    });\n\n    it('debe cerrar sesión exitosamente', async () => {\n      (signOut as jest.Mock).mockResolvedValue({ url: '/api/auth/signin' });\n\n      const { result } = renderHook(() => useAuth(), {\n        wrapper: createWrapper()\n      });\n\n      await act(async () => {\n        await result.current.signOut({ callbackUrl: '/' });\n      });\n\n      expect(signOut).toHaveBeenCalledWith({\n        callbackUrl: '/',\n      });\n    });\n\n    it('debe retornar información del usuario autenticado', () => {\n      const { result } = renderHook(() => useAuth(), {\n        wrapper: createWrapper()\n      });\n\n      expect(result.current.user).toEqual({\n        id: 'test-user-id',\n        email: 'test@example.com',\n        name: 'Test User',\n        image: 'https://example.com/avatar.jpg',\n      });\n      expect(result.current.isSignedIn).toBe(true);\n      expect(result.current.isLoaded).toBe(true);\n    });\n\n    it('debe manejar estado de carga', () => {\n      (useSession as jest.Mock).mockReturnValue({\n        data: null,\n        status: 'loading',\n      });\n\n      const { result } = renderHook(() => useAuth(), {\n        wrapper: createWrapper()\n      });\n\n      expect(result.current.isLoaded).toBe(false);\n      expect(result.current.isSignedIn).toBe(false);\n      expect(result.current.user).toBeNull();\n    });\n\n    it('debe manejar estado no autenticado', () => {\n      (useSession as jest.Mock).mockReturnValue({\n        data: null,\n        status: 'unauthenticated',\n      });\n\n      const { result } = renderHook(() => useAuth(), {\n        wrapper: createWrapper()\n      });\n\n      expect(result.current.isLoaded).toBe(true);\n      expect(result.current.isSignedIn).toBe(false);\n      expect(result.current.user).toBeNull();\n    });\n  });\n\n  describe('Hooks de utilidad', () => {\n    it('useIsAdmin debe retornar false para usuario normal', () => {\n      const { result } = renderHook(() => useAuth(), {\n        wrapper: createWrapper()\n      });\n\n      // useIsAdmin está incluido en el hook useAuth\n      expect(result.current.user?.email).toBe('test@example.com');\n    });\n\n    it('useRequireAuth debe redirigir si no está autenticado', async () => {\n      (useSession as jest.Mock).mockReturnValue({\n        data: null,\n        status: 'unauthenticated',\n      });\n\n      const { result } = renderHook(() => useAuth(), {\n        wrapper: createWrapper()\n      });\n\n      expect(result.current.isSignedIn).toBe(false);\n    });\n  });\n\n  describe('Manejo de errores', () => {\n    it('debe manejar error en signIn', async () => {\n      (signIn as jest.Mock).mockResolvedValue({ ok: false, error: 'Authentication failed' });\n\n      const { result } = renderHook(() => useAuth(), {\n        wrapper: createWrapper()\n      });\n\n      await act(async () => {\n        await result.current.signIn('google');\n      });\n\n      expect(signIn).toHaveBeenCalledWith('google', {\n        callbackUrl: '/',\n      });\n    });\n\n    it('debe manejar error en signOut', async () => {\n      (signOut as jest.Mock).mockRejectedValue(new Error('Sign out failed'));\n\n      const { result } = renderHook(() => useAuth(), {\n        wrapper: createWrapper()\n      });\n\n      await act(async () => {\n        try {\n          await result.current.signOut();\n        } catch (error) {\n          expect(error).toBeInstanceOf(Error);\n        }\n      });\n\n      expect(signOut).toHaveBeenCalled();\n    });\n  });\n\n  describe('Integración con Router', () => {\n    it('debe usar el router correctamente', () => {\n      const { result } = renderHook(() => useAuth(), {\n        wrapper: createWrapper()\n      });\n\n      // El hook debe tener acceso al router\n      expect(result.current).toBeDefined();\n      expect(typeof result.current.signIn).toBe('function');\n      expect(typeof result.current.signOut).toBe('function');\n    });\n  });\n});"],"names":["jest","mock","toast","success","fn","error","loading","useRouter","mockRouter","push","replace","refresh","createWrapper","queryClient","QueryClient","defaultOptions","queries","retry","children","QueryClientProvider","client","describe","beforeEach","clearAllMocks","mockReturnValue","useSession","data","user","id","email","name","image","expires","Date","now","toISOString","status","it","signIn","mockResolvedValue","ok","result","renderHook","useAuth","wrapper","act","current","callbackUrl","expect","toHaveBeenCalledWith","signOut","url","toEqual","isSignedIn","toBe","isLoaded","toBeNull","mockRejectedValue","Error","toBeInstanceOf","toHaveBeenCalled","toBeDefined"],"mappings":"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"}