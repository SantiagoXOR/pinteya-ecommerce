{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\redux\\middleware\\cartPersistence.ts"],"sourcesContent":["// ===================================\r\n// PINTEYA E-COMMERCE - CART PERSISTENCE MIDDLEWARE\r\n// ===================================\r\n\r\nimport { Middleware } from '@reduxjs/toolkit';\r\nimport { RootState } from '../store';\r\n\r\n// Clave para localStorage\r\nconst CART_STORAGE_KEY = 'pinteya-cart';\r\n\r\n// Tipos para el estado persistido\r\ninterface PersistedCartState {\r\n  items: any[];\r\n  timestamp: number;\r\n  version: string;\r\n}\r\n\r\n// Función para cargar el carrito desde localStorage\r\nexport const loadCartFromStorage = (): any[] => {\r\n  // Solo ejecutar en el cliente\r\n  if (typeof window === 'undefined') {\r\n    return [];\r\n  }\r\n\r\n  try {\r\n    const stored = localStorage.getItem(CART_STORAGE_KEY);\r\n    if (!stored || stored.trim() === '' || stored === '\"\"' || stored === \"''\") {\r\n      return [];\r\n    }\r\n\r\n    // Validar que el string no esté corrupto\r\n    if (stored.includes('\"\"') && stored.length < 5) {\r\n      console.warn('Detected corrupted cart localStorage data, cleaning up');\r\n      localStorage.removeItem(CART_STORAGE_KEY);\r\n      return [];\r\n    }\r\n\r\n    const parsed: PersistedCartState = JSON.parse(stored);\r\n\r\n    // Verificar estructura válida\r\n    if (!parsed || typeof parsed !== 'object') {\r\n      console.warn('Invalid cart data structure, cleaning up');\r\n      localStorage.removeItem(CART_STORAGE_KEY);\r\n      return [];\r\n    }\r\n\r\n    // Verificar que no sea muy antiguo (7 días)\r\n    const maxAge = 7 * 24 * 60 * 60 * 1000; // 7 días en ms\r\n    const isExpired = parsed.timestamp && (Date.now() - parsed.timestamp > maxAge);\r\n\r\n    if (isExpired) {\r\n      localStorage.removeItem(CART_STORAGE_KEY);\r\n      return [];\r\n    }\r\n\r\n    return parsed.items || [];\r\n  } catch (error) {\r\n    console.warn('Error loading cart from localStorage:', error);\r\n    // Limpiar localStorage corrupto\r\n    localStorage.removeItem(CART_STORAGE_KEY);\r\n    return [];\r\n  }\r\n};\r\n\r\n// Función para guardar el carrito en localStorage\r\nconst saveCartToStorage = (cartItems: any[]): void => {\r\n  // Solo ejecutar en el cliente\r\n  if (typeof window === 'undefined') {\r\n    return;\r\n  }\r\n\r\n  try {\r\n    // Si el carrito está vacío, limpiar localStorage\r\n    if (cartItems.length === 0) {\r\n      localStorage.removeItem(CART_STORAGE_KEY);\r\n      return;\r\n    }\r\n\r\n    const dataToStore: PersistedCartState = {\r\n      items: cartItems,\r\n      timestamp: Date.now(),\r\n      version: '1.0.0'\r\n    };\r\n\r\n    localStorage.setItem(CART_STORAGE_KEY, JSON.stringify(dataToStore));\r\n  } catch (error) {\r\n    console.warn('Error saving cart to localStorage:', error);\r\n  }\r\n};\r\n\r\n// Función para limpiar el carrito del localStorage\r\nexport const clearCartFromStorage = (): void => {\r\n  if (typeof window === 'undefined') {\r\n    return;\r\n  }\r\n\r\n  try {\r\n    localStorage.removeItem(CART_STORAGE_KEY);\r\n  } catch (error) {\r\n    console.warn('Error clearing cart from localStorage:', error);\r\n  }\r\n};\r\n\r\n// Variable para manejar debounce\r\nlet saveTimeout: NodeJS.Timeout | null = null;\r\n\r\n// Middleware para persistir el carrito automáticamente\r\nexport const cartPersistenceMiddleware: Middleware =\r\n  (store) => (next) => (action: any) => {\r\n    // Ejecutar la acción primero\r\n    const result = next(action);\r\n\r\n    // Solo persistir acciones relacionadas con el carrito\r\n    if (action.type?.startsWith('cart/')) {\r\n      const state = store.getState() as RootState;\r\n      const cartItems = state.cartReducer.items;\r\n\r\n      // Limpiar timeout anterior si existe\r\n      if (saveTimeout) {\r\n        clearTimeout(saveTimeout);\r\n      }\r\n\r\n      // Guardar en localStorage con debounce más largo para evitar escrituras excesivas\r\n      saveTimeout = setTimeout(() => {\r\n        // Solo guardar si hay items o si se está vaciando el carrito\r\n        if (cartItems.length > 0 || action.type === 'cart/removeAllItemsFromCart') {\r\n          saveCartToStorage(cartItems);\r\n        }\r\n        saveTimeout = null;\r\n      }, 500); // Aumentado de 100ms a 500ms\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n// Hook personalizado para manejar la persistencia del carrito\r\nexport const useCartPersistence = () => {\r\n  const loadCart = () => loadCartFromStorage();\r\n  const clearCart = () => clearCartFromStorage();\r\n\r\n  return {\r\n    loadCart,\r\n    clearCart\r\n  };\r\n};\r\n\r\n// Función para migrar carrito temporal a usuario autenticado\r\nexport const migrateTemporaryCart = async (\r\n  temporaryCartItems: any[],\r\n  userId: string\r\n): Promise<boolean> => {\r\n  try {\r\n    // Aquí se podría implementar la lógica para guardar el carrito\r\n    // en la base de datos asociado al usuario\r\n    // Por ahora, simplemente limpiamos el localStorage\r\n    // ya que el carrito se mantendrá en Redux\r\n    \r\n    console.log(`Migrating ${temporaryCartItems.length} items for user ${userId}`);\r\n    \r\n    // En una implementación completa, aquí haríamos:\r\n    // 1. Enviar los items al backend para asociarlos al usuario\r\n    // 2. Limpiar el localStorage\r\n    // 3. Cargar el carrito del usuario desde el backend\r\n    \r\n    return true;\r\n  } catch (error) {\r\n    console.error('Error migrating temporary cart:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Función para cargar carrito de usuario autenticado\r\nexport const loadUserCart = async (userId: string): Promise<any[]> => {\r\n  try {\r\n    // Aquí se implementaría la lógica para cargar el carrito\r\n    // del usuario desde la base de datos\r\n    \r\n    console.log(`Loading cart for user ${userId}`);\r\n    \r\n    // En una implementación completa, aquí haríamos:\r\n    // 1. Hacer una petición al backend para obtener el carrito del usuario\r\n    // 2. Retornar los items del carrito\r\n    \r\n    // Por ahora, retornamos un array vacío\r\n    return [];\r\n  } catch (error) {\r\n    console.error('Error loading user cart:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\n// Función para guardar carrito de usuario autenticado\r\nexport const saveUserCart = async (\r\n  userId: string, \r\n  cartItems: any[]\r\n): Promise<boolean> => {\r\n  try {\r\n    // Aquí se implementaría la lógica para guardar el carrito\r\n    // del usuario en la base de datos\r\n    \r\n    console.log(`Saving ${cartItems.length} items for user ${userId}`);\r\n    \r\n    // En una implementación completa, aquí haríamos:\r\n    // 1. Enviar los items al backend para guardarlos asociados al usuario\r\n    // 2. Manejar la respuesta del backend\r\n    \r\n    return true;\r\n  } catch (error) {\r\n    console.error('Error saving user cart:', error);\r\n    return false;\r\n  }\r\n};\r\n"],"names":["cartPersistenceMiddleware","clearCartFromStorage","loadCartFromStorage","loadUserCart","migrateTemporaryCart","saveUserCart","useCartPersistence","CART_STORAGE_KEY","window","stored","localStorage","getItem","trim","includes","length","console","warn","removeItem","parsed","JSON","parse","maxAge","isExpired","timestamp","Date","now","items","error","saveCartToStorage","cartItems","dataToStore","version","setItem","stringify","saveTimeout","store","next","action","result","type","startsWith","state","getState","cartReducer","clearTimeout","setTimeout","loadCart","clearCart","temporaryCartItems","userId","log"],"mappings":"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"}