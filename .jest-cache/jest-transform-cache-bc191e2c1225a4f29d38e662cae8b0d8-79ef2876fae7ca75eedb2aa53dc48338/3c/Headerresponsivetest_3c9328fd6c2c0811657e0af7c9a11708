c4ce28ad6e6ad787022723872251e0c3
/**
 * Tests Responsive - Header
 * Pruebas de comportamiento responsive en diferentes breakpoints
 */ "use strict";
// Mock de Next.js
jest.mock('next/navigation', ()=>({
        useRouter: ()=>({
                push: jest.fn(),
                replace: jest.fn(),
                prefetch: jest.fn()
            }),
        useSearchParams: ()=>({
                get: jest.fn()
            })
    }));
// Mock de Clerk
jest.mock('@clerk/nextjs', ()=>({
        ClerkProvider: ({ children })=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                children: children
            }),
        SignedIn: ({ children })=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                "data-testid": "signed-in",
                children: children
            }),
        SignedOut: ({ children })=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                "data-testid": "signed-out",
                children: children
            }),
        UserButton: ()=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                "data-testid": "user-button",
                children: "UserButton"
            }),
        useUser: ()=>({
                isSignedIn: false,
                user: null,
                isLoaded: true
            })
    }));
// Mock de hooks
jest.mock('@/hooks/useGeolocation', ()=>({
        useGeolocation: ()=>({
                detectedZone: {
                    id: 'cordoba-capital',
                    name: 'Córdoba Capital'
                },
                requestLocation: jest.fn(),
                permissionStatus: 'granted',
                isLoading: false,
                error: null,
                location: null,
                testLocation: jest.fn(),
                deliveryZones: [
                    {
                        id: 'cordoba-capital',
                        name: 'Córdoba Capital'
                    }
                ]
            })
    }));
jest.mock('@/hooks/useCartAnimation', ()=>({
        useCartAnimation: ()=>({
                isAnimating: false
            })
    }));
// Mock de componentes
jest.mock('@/components/ui/SearchAutocompleteIntegrated', ()=>({
        SearchAutocompleteIntegrated: ({ onSearch })=>/*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                "data-testid": "search-input",
                placeholder: "latex interior blanco 20lts",
                className: "w-full",
                onChange: (e)=>onSearch(e.target.value)
            })
    }));
jest.mock('@/components/ui/optimized-cart-icon', ()=>({
        OptimizedCartIcon: ({ className })=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                "data-testid": "cart-icon",
                className: className,
                children: "Cart Icon"
            })
    }));
jest.mock('@/components/ui/OptimizedLogo', ()=>({
        HeaderLogo: ()=>/*#__PURE__*/ (0, _jsxruntime.jsx)("img", {
                src: "/images/logo/LOGO POSITIVO.svg",
                alt: "Pinteya - Tu Pinturer\xeda Online",
                "data-testid": "header-logo",
                className: "h-8 w-auto sm:h-10"
            })
    }));
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_default(require("react"));
const _react1 = require("@testing-library/react");
const _reactredux = require("react-redux");
const _reactquery = require("@tanstack/react-query");
const _index = /*#__PURE__*/ _interop_require_default(require("../../index"));
const _AuthSection = /*#__PURE__*/ _interop_require_default(require("../../AuthSection"));
const _store = require("../../../../redux/store");
const _CartSidebarModalContext = require("../../../../app/context/CartSidebarModalContext");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
// Utilidad para simular diferentes viewports
const setViewport = (width, height = 768)=>{
    Object.defineProperty(window, 'innerWidth', {
        writable: true,
        configurable: true,
        value: width
    });
    Object.defineProperty(window, 'innerHeight', {
        writable: true,
        configurable: true,
        value: height
    });
    // Disparar evento resize
    window.dispatchEvent(new Event('resize'));
};
// Wrapper de pruebas
const TestWrapper = ({ children })=>{
    const queryClient = new _reactquery.QueryClient({
        defaultOptions: {
            queries: {
                retry: false
            },
            mutations: {
                retry: false
            }
        }
    });
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactredux.Provider, {
        store: _store.store,
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactquery.QueryClientProvider, {
            client: queryClient,
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_CartSidebarModalContext.CartModalProvider, {
                children: children
            })
        })
    });
};
describe('Header Responsive Tests', ()=>{
    beforeEach(()=>{
        jest.clearAllMocks();
    });
    describe('Mobile (320px - 767px)', ()=>{
        beforeEach(()=>{
            setViewport(375, 667); // iPhone SE
        });
        it('debe mostrar layout mobile correctamente', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            // Verificar elementos principales
            expect(_react1.screen.getByTestId('header-logo')).toBeInTheDocument();
            expect(_react1.screen.getByTestId('search-input')).toBeInTheDocument();
            expect(_react1.screen.getByTestId('signed-out')).toBeInTheDocument();
        });
        it('debe ocultar el botón de carrito en mobile', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            const cartButton = _react1.screen.getByTestId('cart-icon').closest('button');
            expect(cartButton).toHaveClass('hidden', 'sm:flex');
        });
        it('debe usar AuthSection variant mobile', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_AuthSection.default, {
                    variant: "mobile"
                })
            }));
            const authButton = _react1.screen.getByRole('button');
            expect(authButton).toHaveClass('bg-white/20');
        });
        it('debe adaptar el tamaño del logo en mobile', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            const logo = _react1.screen.getByTestId('header-logo');
            expect(logo).toHaveClass('h-8', 'w-auto', 'sm:h-10');
        });
        it('debe mantener funcionalidad de búsqueda en mobile', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            const searchInput = _react1.screen.getByTestId('search-input');
            _react1.fireEvent.change(searchInput, {
                target: {
                    value: 'test mobile'
                }
            });
            expect(searchInput).toHaveValue('test mobile');
        });
        it('debe mostrar información de geolocalización compacta', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            expect(_react1.screen.getByText(/Envíos en/)).toBeInTheDocument();
            expect(_react1.screen.getByText('Córdoba Capital')).toBeInTheDocument();
        });
    });
    describe('Tablet (768px - 1023px)', ()=>{
        beforeEach(()=>{
            setViewport(768, 1024); // iPad
        });
        it('debe mostrar layout tablet correctamente', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            // Verificar elementos principales
            expect(_react1.screen.getByTestId('header-logo')).toBeInTheDocument();
            expect(_react1.screen.getByTestId('search-input')).toBeInTheDocument();
            expect(_react1.screen.getByTestId('signed-out')).toBeInTheDocument();
        });
        it('debe mostrar el botón de carrito en tablet', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            const cartButton = _react1.screen.getByTestId('cart-icon').closest('button');
            expect(cartButton).toBeVisible();
        });
        it('debe usar tamaño de logo intermedio', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            const logo = _react1.screen.getByTestId('header-logo');
            expect(logo).toHaveClass('sm:h-10');
        });
        it('debe mantener espaciado apropiado en tablet', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            const header = _react1.screen.getByRole('banner');
            expect(header).toHaveClass('px-4'); // Padding horizontal
        });
    });
    describe('Desktop (1024px+)', ()=>{
        beforeEach(()=>{
            setViewport(1440, 900); // Desktop estándar
        });
        it('debe mostrar layout desktop completo', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            // Verificar todos los elementos
            expect(_react1.screen.getByTestId('header-logo')).toBeInTheDocument();
            expect(_react1.screen.getByTestId('search-input')).toBeInTheDocument();
            expect(_react1.screen.getByTestId('signed-out')).toBeInTheDocument();
            const cartButton = _react1.screen.getByTestId('cart-icon').closest('button');
            expect(cartButton).toBeVisible();
        });
        it('debe usar AuthSection variant desktop', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_AuthSection.default, {
                    variant: "desktop"
                })
            }));
            const authButton = _react1.screen.getByRole('button');
            expect(authButton).toHaveClass('bg-white/20');
        });
        it('debe mostrar logo en tamaño completo', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            const logo = _react1.screen.getByTestId('header-logo');
            expect(logo).toHaveClass('sm:h-10');
        });
        it('debe tener espaciado óptimo para desktop', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            const header = _react1.screen.getByRole('banner');
            expect(header).toHaveClass('px-4');
        });
        it('debe mostrar todos los elementos del topbar', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            expect(_react1.screen.getByText(/Envíos en/)).toBeInTheDocument();
            expect(_react1.screen.getByText('Córdoba Capital')).toBeInTheDocument();
        });
    });
    describe('Breakpoints Específicos', ()=>{
        const breakpoints = [
            {
                name: 'xs',
                width: 320
            },
            {
                name: 'sm',
                width: 640
            },
            {
                name: 'md',
                width: 768
            },
            {
                name: 'lg',
                width: 1024
            },
            {
                name: 'xl',
                width: 1280
            },
            {
                name: '2xl',
                width: 1536
            }
        ];
        breakpoints.forEach(({ name, width })=>{
            it(`debe funcionar correctamente en breakpoint ${name} (${width}px)`, ()=>{
                setViewport(width);
                (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
                }));
                // Verificar elementos esenciales en todos los breakpoints
                expect(_react1.screen.getByTestId('header-logo')).toBeInTheDocument();
                expect(_react1.screen.getByTestId('search-input')).toBeInTheDocument();
                expect(_react1.screen.getByTestId('signed-out')).toBeInTheDocument();
            });
        });
    });
    describe('Transiciones Responsive', ()=>{
        it('debe manejar cambios de viewport dinámicamente', ()=>{
            const { rerender } = (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            // Comenzar en mobile
            setViewport(375);
            rerender(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            const cartButtonMobile = _react1.screen.getByTestId('cart-icon').closest('button');
            expect(cartButtonMobile).toHaveClass('hidden');
            // Cambiar a desktop
            setViewport(1024);
            rerender(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            const cartButtonDesktop = _react1.screen.getByTestId('cart-icon').closest('button');
            expect(cartButtonDesktop).toHaveClass('sm:flex');
        });
        it('debe mantener estado durante cambios de viewport', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            const searchInput = _react1.screen.getByTestId('search-input');
            _react1.fireEvent.change(searchInput, {
                target: {
                    value: 'test query'
                }
            });
            // Cambiar viewport
            setViewport(375);
            // El valor debe mantenerse
            expect(searchInput).toHaveValue('test query');
        });
    });
    describe('Touch Targets', ()=>{
        it('debe tener touch targets apropiados en mobile', ()=>{
            setViewport(375);
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            const buttons = _react1.screen.getAllByRole('button');
            // Los botones deben tener padding suficiente para touch
            buttons.forEach((button)=>{
                expect(button).toHaveClass(/p-2|px-3|py-2/);
            });
        });
        it('debe mantener accesibilidad en touch devices', ()=>{
            setViewport(375);
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            const searchInput = _react1.screen.getByTestId('search-input');
            // Simular touch
            _react1.fireEvent.touchStart(searchInput);
            _react1.fireEvent.touchEnd(searchInput);
            expect(searchInput).toBeInTheDocument();
        });
    });
    describe('Orientación de Dispositivo', ()=>{
        it('debe funcionar en orientación portrait', ()=>{
            setViewport(375, 667); // Portrait
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            expect(_react1.screen.getByTestId('header-logo')).toBeInTheDocument();
            expect(_react1.screen.getByTestId('search-input')).toBeInTheDocument();
        });
        it('debe funcionar en orientación landscape', ()=>{
            setViewport(667, 375); // Landscape
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            expect(_react1.screen.getByTestId('header-logo')).toBeInTheDocument();
            expect(_react1.screen.getByTestId('search-input')).toBeInTheDocument();
        });
    });
    describe('Performance Responsive', ()=>{
        it('debe renderizar eficientemente en diferentes tamaños', ()=>{
            const renderTimes = [];
            [
                320,
                768,
                1024,
                1440
            ].forEach((width)=>{
                setViewport(width);
                const startTime = performance.now();
                const { unmount } = (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
                }));
                const endTime = performance.now();
                renderTimes.push(endTime - startTime);
                unmount();
            });
            // Todos los renders deben ser rápidos (< 50ms)
            renderTimes.forEach((time)=>{
                expect(time).toBeLessThan(50);
            });
        });
    });
    describe('Contenido Adaptativo', ()=>{
        it('debe adaptar texto según el espacio disponible', ()=>{
            // Mobile - texto más corto
            setViewport(375);
            const { rerender } = (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            expect(_react1.screen.getByText('Córdoba Capital')).toBeInTheDocument();
            // Desktop - puede mostrar más información
            setViewport(1440);
            rerender(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            expect(_react1.screen.getByText('Córdoba Capital')).toBeInTheDocument();
        });
        it('debe priorizar elementos importantes en espacios reducidos', ()=>{
            setViewport(320); // Muy pequeño
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {})
            }));
            // Elementos esenciales deben estar presentes
            expect(_react1.screen.getByTestId('header-logo')).toBeInTheDocument();
            expect(_react1.screen.getByTestId('search-input')).toBeInTheDocument();
            // Carrito puede estar oculto
            const cartButton = _react1.screen.getByTestId('cart-icon').closest('button');
            expect(cartButton).toHaveClass('hidden');
        });
    });
});

//# sourceMappingURL=data:application/json;base64,