{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\ui\\tabs.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\ninterface TabsProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  defaultValue?: string;\r\n  value?: string;\r\n  onValueChange?: (value: string) => void;\r\n}\r\n\r\ninterface TabsListProps extends React.HTMLAttributes<HTMLDivElement> {}\r\n\r\ninterface TabsTriggerProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n  value: string;\r\n}\r\n\r\ninterface TabsContentProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  value: string;\r\n}\r\n\r\nconst TabsContext = React.createContext<{\r\n  value?: string;\r\n  onValueChange?: (value: string) => void;\r\n}>({});\r\n\r\nconst Tabs = React.forwardRef<HTMLDivElement, TabsProps>(\r\n  ({ className, defaultValue, value, onValueChange, children, ...props }, ref) => {\r\n    const [internalValue, setInternalValue] = React.useState(defaultValue || \"\");\r\n    const currentValue = value !== undefined ? value : internalValue;\r\n\r\n    const handleValueChange = (newValue: string) => {\r\n      if (value === undefined) {\r\n        setInternalValue(newValue);\r\n      }\r\n      onValueChange?.(newValue);\r\n    };\r\n\r\n    return (\r\n      <TabsContext.Provider value={{ value: currentValue, onValueChange: handleValueChange }}>\r\n        <div ref={ref} className={cn(\"\", className)} {...props}>\r\n          {children}\r\n        </div>\r\n      </TabsContext.Provider>\r\n    );\r\n  }\r\n);\r\nTabs.displayName = \"Tabs\";\r\n\r\nconst TabsList = React.forwardRef<HTMLDivElement, TabsListProps>(\r\n  ({ className, ...props }, ref) => (\r\n    <div\r\n      ref={ref}\r\n      className={cn(\r\n        \"inline-flex h-10 items-center justify-center rounded-md bg-gray-100 p-1 text-gray-500\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n);\r\nTabsList.displayName = \"TabsList\";\r\n\r\nconst TabsTrigger = React.forwardRef<HTMLButtonElement, TabsTriggerProps>(\r\n  ({ className, value, children, ...props }, ref) => {\r\n    const { value: currentValue, onValueChange } = React.useContext(TabsContext);\r\n    const isActive = currentValue === value;\r\n\r\n    return (\r\n      <button\r\n        ref={ref}\r\n        className={cn(\r\n          \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\r\n          isActive\r\n            ? \"bg-white text-gray-900 shadow-sm\"\r\n            : \"text-gray-500 hover:text-gray-900\",\r\n          className\r\n        )}\r\n        onClick={() => onValueChange?.(value)}\r\n        {...props}\r\n      >\r\n        {children}\r\n      </button>\r\n    );\r\n  }\r\n);\r\nTabsTrigger.displayName = \"TabsTrigger\";\r\n\r\nconst TabsContent = React.forwardRef<HTMLDivElement, TabsContentProps>(\r\n  ({ className, value, children, ...props }, ref) => {\r\n    const { value: currentValue } = React.useContext(TabsContext);\r\n\r\n    if (currentValue !== value) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        className={cn(\r\n          \"mt-2 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2\",\r\n          className\r\n        )}\r\n        {...props}\r\n      >\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n);\r\nTabsContent.displayName = \"TabsContent\";\r\n\r\nexport { Tabs, TabsList, TabsTrigger, TabsContent };\r\n"],"names":["Tabs","TabsContent","TabsList","TabsTrigger","TabsContext","React","createContext","forwardRef","className","defaultValue","value","onValueChange","children","props","ref","internalValue","setInternalValue","useState","currentValue","undefined","handleValueChange","newValue","Provider","div","cn","displayName","useContext","isActive","button","onClick"],"mappings":"AAAA;;;;;;;;;;;;QAgHSA;eAAAA;;QAA6BC;eAAAA;;QAAvBC;eAAAA;;QAAUC;eAAAA;;;;+DA9GF;uBACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBnB,MAAMC,4BAAcC,OAAMC,aAAa,CAGpC,CAAC;AAEJ,MAAMN,qBAAOK,OAAME,UAAU,CAC3B,CAAC,EAAEC,SAAS,EAAEC,YAAY,EAAEC,KAAK,EAAEC,aAAa,EAAEC,QAAQ,EAAE,GAAGC,OAAO,EAAEC;IACtE,MAAM,CAACC,eAAeC,iBAAiB,GAAGX,OAAMY,QAAQ,CAACR,gBAAgB;IACzE,MAAMS,eAAeR,UAAUS,YAAYT,QAAQK;IAEnD,MAAMK,oBAAoB,CAACC;QACzB,IAAIX,UAAUS,WAAW;YACvBH,iBAAiBK;QACnB;QACAV,gBAAgBU;IAClB;IAEA,qBACE,qBAACjB,YAAYkB,QAAQ;QAACZ,OAAO;YAAEA,OAAOQ;YAAcP,eAAeS;QAAkB;kBACnF,cAAA,qBAACG;YAAIT,KAAKA;YAAKN,WAAWgB,IAAAA,SAAE,EAAC,IAAIhB;YAAa,GAAGK,KAAK;sBACnDD;;;AAIT;AAEFZ,KAAKyB,WAAW,GAAG;AAEnB,MAAMvB,yBAAWG,OAAME,UAAU,CAC/B,CAAC,EAAEC,SAAS,EAAE,GAAGK,OAAO,EAAEC,oBACxB,qBAACS;QACCT,KAAKA;QACLN,WAAWgB,IAAAA,SAAE,EACX,yFACAhB;QAED,GAAGK,KAAK;;AAIfX,SAASuB,WAAW,GAAG;AAEvB,MAAMtB,4BAAcE,OAAME,UAAU,CAClC,CAAC,EAAEC,SAAS,EAAEE,KAAK,EAAEE,QAAQ,EAAE,GAAGC,OAAO,EAAEC;IACzC,MAAM,EAAEJ,OAAOQ,YAAY,EAAEP,aAAa,EAAE,GAAGN,OAAMqB,UAAU,CAACtB;IAChE,MAAMuB,WAAWT,iBAAiBR;IAElC,qBACE,qBAACkB;QACCd,KAAKA;QACLN,WAAWgB,IAAAA,SAAE,EACX,+QACAG,WACI,qCACA,qCACJnB;QAEFqB,SAAS,IAAMlB,gBAAgBD;QAC9B,GAAGG,KAAK;kBAERD;;AAGP;AAEFT,YAAYsB,WAAW,GAAG;AAE1B,MAAMxB,4BAAcI,OAAME,UAAU,CAClC,CAAC,EAAEC,SAAS,EAAEE,KAAK,EAAEE,QAAQ,EAAE,GAAGC,OAAO,EAAEC;IACzC,MAAM,EAAEJ,OAAOQ,YAAY,EAAE,GAAGb,OAAMqB,UAAU,CAACtB;IAEjD,IAAIc,iBAAiBR,OAAO;QAC1B,OAAO;IACT;IAEA,qBACE,qBAACa;QACCT,KAAKA;QACLN,WAAWgB,IAAAA,SAAE,EACX,+GACAhB;QAED,GAAGK,KAAK;kBAERD;;AAGP;AAEFX,YAAYwB,WAAW,GAAG"}