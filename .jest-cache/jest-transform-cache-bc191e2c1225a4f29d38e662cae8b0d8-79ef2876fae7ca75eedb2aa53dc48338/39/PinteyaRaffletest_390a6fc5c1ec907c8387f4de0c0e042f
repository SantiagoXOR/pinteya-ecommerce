33dc3a93ab03ad9205a1fcbd1ccab11d
"use strict";
// Mock de Next.js Image
jest.mock('next/image', ()=>({
        __esModule: true,
        default: ({ src, alt, ...props })=>/*#__PURE__*/ (0, _jsxruntime.jsx)("img", {
                src: src,
                alt: alt,
                ...props
            })
    }));
// Mock de los iconos de Lucide
jest.mock('lucide-react', ()=>({
        Gift: ()=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                "data-testid": "gift-icon"
            }),
        Sparkles: ()=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                "data-testid": "sparkles-icon"
            }),
        Palette: ()=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                "data-testid": "palette-icon"
            }),
        Trophy: ()=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                "data-testid": "trophy-icon"
            }),
        Clock: ()=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                "data-testid": "clock-icon"
            }),
        Star: ()=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                "data-testid": "star-icon"
            })
    }));
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_default(require("react"));
const _react1 = require("@testing-library/react");
require("@testing-library/jest-dom");
const _PinteyaRaffle = /*#__PURE__*/ _interop_require_default(require("../../components/Home/PinteyaRaffle"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
describe('PinteyaRaffle', ()=>{
    beforeEach(()=>{
        // Mock de Date.now para tener un tiempo consistente en las pruebas
        jest.spyOn(Date, 'now').mockImplementation(()=>new Date('2024-01-01T00:00:00Z').getTime());
    });
    afterEach(()=>{
        jest.restoreAllMocks();
    });
    test('renderiza el componente correctamente', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_PinteyaRaffle.default, {}));
        // Verificar que el título principal está presente
        expect(_react1.screen.getByText('Ganá un Kit Completo de Pinturería')).toBeInTheDocument();
        // Verificar que los badges están presentes
        expect(_react1.screen.getByText('¡GRAN SORTEO!')).toBeInTheDocument();
        expect(_react1.screen.getByText('GRATIS')).toBeInTheDocument();
    });
    test('muestra la información del premio correctamente', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_PinteyaRaffle.default, {}));
        // Verificar el valor del premio (hay múltiples instancias, usar getAllByText)
        const priceElements = _react1.screen.getAllByText('$150.000');
        expect(priceElements.length).toBeGreaterThan(0);
        // Verificar la descripción del premio
        expect(_react1.screen.getByText(/productos premium de las mejores marcas/)).toBeInTheDocument();
    });
    test('muestra los productos incluidos en el kit', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_PinteyaRaffle.default, {}));
        // Verificar que se muestran los tipos de productos
        expect(_react1.screen.getByText('Látex Premium')).toBeInTheDocument();
        expect(_react1.screen.getByText('Esmaltes')).toBeInTheDocument();
        expect(_react1.screen.getByText('Herramientas')).toBeInTheDocument();
        expect(_react1.screen.getByText('Accesorios')).toBeInTheDocument();
    });
    test('muestra el contador regresivo', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_PinteyaRaffle.default, {}));
        // Verificar que las etiquetas del contador están presentes
        expect(_react1.screen.getByText('Días')).toBeInTheDocument();
        expect(_react1.screen.getByText('Horas')).toBeInTheDocument();
        expect(_react1.screen.getByText('Minutos')).toBeInTheDocument();
        expect(_react1.screen.getByText('Segundos')).toBeInTheDocument();
        // Verificar que el texto del contador está presente
        expect(_react1.screen.getByText('Tiempo restante para participar:')).toBeInTheDocument();
    });
    test('muestra el botón de participación', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_PinteyaRaffle.default, {}));
        const participateButton = _react1.screen.getByRole('button', {
            name: /participar ahora/i
        });
        expect(participateButton).toBeInTheDocument();
        expect(participateButton).toHaveClass('bg-bright-sun-400');
    });
    test('muestra las instrucciones de participación', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_PinteyaRaffle.default, {}));
        // Verificar el título de las instrucciones
        expect(_react1.screen.getByText('Cómo participar:')).toBeInTheDocument();
        // Verificar los pasos de participación
        expect(_react1.screen.getByText('Seguinos en Instagram @pinteya')).toBeInTheDocument();
        expect(_react1.screen.getByText('Compartí esta publicación en tu historia')).toBeInTheDocument();
        expect(_react1.screen.getByText('Etiquetá a 3 amigos en los comentarios')).toBeInTheDocument();
    });
    test('muestra las imágenes de productos', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_PinteyaRaffle.default, {}));
        // Verificar que la imagen principal está presente
        const mainImage = _react1.screen.getByAltText('Kit de Pinturería Pinteya');
        expect(mainImage).toBeInTheDocument();
        // Verificar que hay elementos decorativos (los círculos animados)
        const decorativeElements = document.querySelectorAll('.animate-bounce, .animate-pulse, .animate-ping');
        expect(decorativeElements.length).toBeGreaterThan(0);
    });
    test('actualiza el contador cada segundo', async ()=>{
        jest.useFakeTimers();
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_PinteyaRaffle.default, {}));
        // Avanzar el tiempo 1 segundo
        (0, _react1.act)(()=>{
            jest.advanceTimersByTime(1000);
        });
        // Verificar que el componente sigue funcionando
        expect(_react1.screen.getByText('Días')).toBeInTheDocument();
        jest.useRealTimers();
    });
    test('muestra los iconos correctamente', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_PinteyaRaffle.default, {}));
        // Verificar que los iconos están presentes (algunos aparecen múltiples veces)
        expect(_react1.screen.getAllByTestId('gift-icon')).toHaveLength(2); // Badge y botón
        expect(_react1.screen.getByTestId('sparkles-icon')).toBeInTheDocument();
        expect(_react1.screen.getAllByTestId('palette-icon')).toHaveLength(3); // 3 iconos de paleta
        expect(_react1.screen.getByTestId('trophy-icon')).toBeInTheDocument();
        expect(_react1.screen.getByTestId('clock-icon')).toBeInTheDocument();
        expect(_react1.screen.getByTestId('star-icon')).toBeInTheDocument();
    });
    test('tiene las clases de estilo de Pinteya correctas', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_PinteyaRaffle.default, {}));
        // Verificar que usa los colores de la marca Pinteya
        const card = _react1.screen.getByRole('button', {
            name: /participar ahora/i
        }).closest('section');
        expect(card).toBeInTheDocument();
        // Verificar que el botón tiene los estilos correctos
        const button = _react1.screen.getByRole('button', {
            name: /participar ahora/i
        });
        expect(button).toHaveClass('bg-bright-sun-400');
    });
    test('muestra el disclaimer correctamente', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_PinteyaRaffle.default, {}));
        expect(_react1.screen.getByText('* Solo necesitás seguirnos en redes sociales. Sin compra mínima.')).toBeInTheDocument();
    });
});

//# sourceMappingURL=data:application/json;base64,