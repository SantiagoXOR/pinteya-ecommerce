{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\Header\\__tests__\\dropdown-functionality.test.tsx"],"sourcesContent":["/**\r\n * Test para verificar la funcionalidad de los dropdowns en el header mejorado\r\n */\r\n\r\nimport React from 'react';\r\nimport { render, screen, fireEvent, waitFor } from '@testing-library/react';\r\nimport { Provider } from 'react-redux';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport '@testing-library/jest-dom';\r\n\r\n// Componentes a testear\r\nimport TopBar from '../TopBar';\r\nimport EnhancedSearchBar from '../EnhancedSearchBar';\r\nimport ActionButtons from '../ActionButtons';\r\n\r\n// Mock del store de Redux\r\nconst mockStore = configureStore({\r\n  reducer: {\r\n    cartReducer: () => ({\r\n      items: [],\r\n      totalPrice: 0\r\n    })\r\n  }\r\n});\r\n\r\n// Mock del contexto del carrito\r\nconst mockCartContext = {\r\n  openCartModal: jest.fn(),\r\n  closeCartModal: jest.fn(),\r\n  isCartModalOpen: false\r\n};\r\n\r\n// Mock de Radix UI DropdownMenu para testing\r\njest.mock('@/components/ui/dropdown-menu', () => ({\r\n  DropdownMenu: ({ children }: { children: React.ReactNode }) => <div data-testid=\"dropdown-menu\">{children}</div>,\r\n  DropdownMenuTrigger: ({ children, asChild, ...props }: any) => {\r\n    const Component = asChild ? 'div' : 'button';\r\n    return (\r\n      <Component\r\n        {...props}\r\n        onClick={(e: any) => {\r\n          // Simular apertura del dropdown\r\n          const content = document.querySelector('[data-testid=\"dropdown-content\"]');\r\n          if (content) {\r\n            content.setAttribute('data-state', 'open');\r\n            content.style.display = 'block';\r\n          }\r\n          props.onClick?.(e);\r\n        }}\r\n      >\r\n        {children}\r\n      </Component>\r\n    );\r\n  },\r\n  DropdownMenuContent: ({ children, ...props }: any) => (\r\n    <div\r\n      {...props}\r\n      data-testid=\"dropdown-content\"\r\n      data-state=\"closed\"\r\n      style={{ display: 'none' }}\r\n    >\r\n      {children}\r\n    </div>\r\n  ),\r\n  DropdownMenuItem: ({ children, onClick, ...props }: any) => (\r\n    <div\r\n      {...props}\r\n      role=\"menuitem\"\r\n      onClick={onClick}\r\n      style={{ cursor: 'pointer' }}\r\n    >\r\n      {children}\r\n    </div>\r\n  ),\r\n  DropdownMenuSeparator: () => <div data-testid=\"dropdown-separator\" />\r\n}));\r\n\r\njest.mock('@/app/context/CartSidebarModalContext', () => ({\r\n  useCartModalContext: () => mockCartContext\r\n}));\r\n\r\n// Mock de Next.js Link\r\njest.mock('next/link', () => {\r\n  return ({ children, href, ...props }: any) => (\r\n    <a href={href} {...props}>\r\n      {children}\r\n    </a>\r\n  );\r\n});\r\n\r\ndescribe('Header Dropdown Functionality', () => {\r\n  beforeEach(() => {\r\n    jest.clearAllMocks();\r\n  });\r\n\r\n  describe('TopBar Dropdown', () => {\r\n    test('should render delivery zone selector', () => {\r\n      render(<TopBar />);\r\n      \r\n      expect(screen.getByText(/Envíos en Córdoba Capital/i)).toBeInTheDocument();\r\n    });\r\n\r\n    test('should open dropdown when clicked', async () => {\r\n      render(<TopBar />);\r\n\r\n      const trigger = screen.getByTestId('delivery-zone-selector');\r\n      fireEvent.click(trigger);\r\n\r\n      await waitFor(() => {\r\n        // Verificar que el dropdown se abre (mock simula esto)\r\n        const content = screen.getByTestId('dropdown-content');\r\n        expect(content).toBeInTheDocument();\r\n      });\r\n    });\r\n\r\n    test('should show available and unavailable zones', async () => {\r\n      render(<TopBar />);\r\n\r\n      const trigger = screen.getByTestId('delivery-zone-selector');\r\n      fireEvent.click(trigger);\r\n\r\n      await waitFor(() => {\r\n        // Verificar que las zonas están renderizadas en el componente usando getAllByText\r\n        expect(screen.getAllByText(/Córdoba Capital/i)).toHaveLength(2); // Una en trigger, otra en dropdown\r\n        expect(screen.getByText(/Interior de Córdoba/i)).toBeInTheDocument();\r\n        expect(screen.getByText(/Buenos Aires/i)).toBeInTheDocument();\r\n      });\r\n    });\r\n  });\r\n\r\n  describe('EnhancedSearchBar Dropdown', () => {\r\n    const mockOnSearch = jest.fn();\r\n\r\n    test('should render category selector', () => {\r\n      render(<EnhancedSearchBar onSearch={mockOnSearch} />);\r\n\r\n      expect(screen.getAllByText(/Todas las Categorías/i)).toHaveLength(2); // Una visible, otra en dropdown\r\n    });\r\n\r\n    test('should open category dropdown when clicked', async () => {\r\n      render(<EnhancedSearchBar onSearch={mockOnSearch} />);\r\n\r\n      const trigger = screen.getByTestId('category-selector');\r\n      fireEvent.click(trigger);\r\n\r\n      await waitFor(() => {\r\n        // Verificar que las categorías están renderizadas\r\n        expect(screen.getByText(/Pinturas/i)).toBeInTheDocument();\r\n        expect(screen.getByText(/Herramientas/i)).toBeInTheDocument();\r\n        expect(screen.getByText(/Accesorios/i)).toBeInTheDocument();\r\n      });\r\n    });\r\n\r\n    test('should update placeholder when category changes', async () => {\r\n      render(<EnhancedSearchBar onSearch={mockOnSearch} />);\r\n      \r\n      const trigger = screen.getByRole('button', { name: /Todas las Categorías/i });\r\n      fireEvent.click(trigger);\r\n\r\n      await waitFor(() => {\r\n        const paintCategory = screen.getByText(/Pinturas/i);\r\n        fireEvent.click(paintCategory);\r\n      });\r\n\r\n      // Verificar que el placeholder cambió\r\n      const searchInput = screen.getByPlaceholderText(/Busco pinturas.../i);\r\n      expect(searchInput).toBeInTheDocument();\r\n    });\r\n\r\n    test('should show category icons', async () => {\r\n      render(<EnhancedSearchBar onSearch={mockOnSearch} />);\r\n      \r\n      const trigger = screen.getByRole('button', { name: /Todas las Categorías/i });\r\n      fireEvent.click(trigger);\r\n\r\n      await waitFor(() => {\r\n        // Los iconos SVG deberían estar presentes (no emojis)\r\n        const paletteIcons = document.querySelectorAll('.lucide-palette');\r\n        const wrenchIcons = document.querySelectorAll('.lucide-wrench');\r\n        expect(paletteIcons.length).toBeGreaterThan(0);\r\n        expect(wrenchIcons.length).toBeGreaterThan(0);\r\n      });\r\n    });\r\n  });\r\n\r\n  describe('ActionButtons Dropdown', () => {\r\n    test('should render cart button with counter', () => {\r\n      render(\r\n        <Provider store={mockStore}>\r\n          <ActionButtons variant=\"header\" />\r\n        </Provider>\r\n      );\r\n      \r\n      expect(screen.getByTestId('cart-icon')).toBeInTheDocument();\r\n    });\r\n\r\n    test('should show login buttons when not authenticated', () => {\r\n      render(\r\n        <Provider store={mockStore}>\r\n          <ActionButtons variant=\"header\" />\r\n        </Provider>\r\n      );\r\n      \r\n      expect(screen.getByText(/Iniciar con Google/i)).toBeInTheDocument();\r\n      expect(screen.getByText(/Registrarse/i)).toBeInTheDocument();\r\n    });\r\n\r\n    test('should open cart modal when cart button is clicked', () => {\r\n      render(\r\n        <Provider store={mockStore}>\r\n          <ActionButtons variant=\"header\" />\r\n        </Provider>\r\n      );\r\n      \r\n      const cartButton = screen.getByRole('button', { name: /carrito/i });\r\n      fireEvent.click(cartButton);\r\n\r\n      expect(mockCartContext.openCartModal).toHaveBeenCalledTimes(1);\r\n    });\r\n  });\r\n\r\n  describe('Mobile Variant', () => {\r\n    test('should render mobile action buttons', () => {\r\n      render(\r\n        <Provider store={mockStore}>\r\n          <ActionButtons variant=\"mobile\" />\r\n        </Provider>\r\n      );\r\n      \r\n      // En mobile, los botones deberían ser más compactos\r\n      const cartButton = screen.getByTestId('cart-icon');\r\n      expect(cartButton).toHaveClass('p-2');\r\n    });\r\n  });\r\n\r\n  describe('Accessibility', () => {\r\n    test('dropdowns should be keyboard accessible', async () => {\r\n      render(<TopBar />);\r\n      \r\n      const trigger = screen.getByRole('button', { name: /Envíos a/i });\r\n      \r\n      // Simular navegación por teclado\r\n      trigger.focus();\r\n      fireEvent.keyDown(trigger, { key: 'Enter' });\r\n\r\n      await waitFor(() => {\r\n        expect(screen.getByText(/Interior de Córdoba/i)).toBeInTheDocument();\r\n      });\r\n    });\r\n\r\n    test('should have proper ARIA attributes', () => {\r\n      render(<EnhancedSearchBar onSearch={jest.fn()} />);\r\n      \r\n      const trigger = screen.getByRole('button', { name: /Todas las Categorías/i });\r\n      expect(trigger).toHaveAttribute('aria-expanded');\r\n    });\r\n  });\r\n\r\n  describe('Responsive Behavior', () => {\r\n    test('should hide certain elements on mobile', () => {\r\n      render(<TopBar />);\r\n\r\n      // TopBar debería estar oculto en mobile - buscar el contenedor principal\r\n      const topBarContainer = screen.getByText(/Asesoramiento 24\\/7/i).closest('.bg-blaze-orange-600');\r\n      expect(topBarContainer).toHaveClass('hidden', 'lg:block');\r\n    });\r\n  });\r\n});\r\n\r\ndescribe('Dropdown Integration', () => {\r\n  test('all dropdown components should work together', async () => {\r\n    const mockOnSearch = jest.fn();\r\n    \r\n    render(\r\n      <Provider store={mockStore}>\r\n        <div>\r\n          <TopBar />\r\n          <EnhancedSearchBar onSearch={mockOnSearch} />\r\n          <ActionButtons variant=\"header\" />\r\n        </div>\r\n      </Provider>\r\n    );\r\n\r\n    // Verificar que todos los dropdowns están presentes\r\n    expect(screen.getByText(/Envíos en Córdoba Capital/i)).toBeInTheDocument();\r\n    expect(screen.getAllByText(/Todas las Categorías/i)).toHaveLength(2);\r\n    expect(screen.getByText(/Iniciar con Google/i)).toBeInTheDocument();\r\n\r\n    // Verificar que no hay conflictos entre dropdowns\r\n    const deliveryTrigger = screen.getByRole('button', { name: /Envíos en/i });\r\n    const categoryTrigger = screen.getByRole('button', { name: /Todas las Categorías/i });\r\n\r\n    fireEvent.click(deliveryTrigger);\r\n    await waitFor(() => {\r\n      expect(screen.getByText(/Interior de Córdoba/i)).toBeInTheDocument();\r\n    });\r\n\r\n    fireEvent.click(categoryTrigger);\r\n    await waitFor(() => {\r\n      expect(screen.getByText(/Pinturas/i)).toBeInTheDocument();\r\n    });\r\n  });\r\n});\r\n"],"names":["jest","mock","DropdownMenu","children","div","data-testid","DropdownMenuTrigger","asChild","props","Component","onClick","e","content","document","querySelector","setAttribute","style","display","DropdownMenuContent","data-state","DropdownMenuItem","role","cursor","DropdownMenuSeparator","useCartModalContext","mockCartContext","href","a","mockStore","configureStore","reducer","cartReducer","items","totalPrice","openCartModal","fn","closeCartModal","isCartModalOpen","describe","beforeEach","clearAllMocks","test","render","TopBar","expect","screen","getByText","toBeInTheDocument","trigger","getByTestId","fireEvent","click","waitFor","getAllByText","toHaveLength","mockOnSearch","EnhancedSearchBar","onSearch","getByRole","name","paintCategory","searchInput","getByPlaceholderText","paletteIcons","querySelectorAll","wrenchIcons","length","toBeGreaterThan","Provider","store","ActionButtons","variant","cartButton","toHaveBeenCalledTimes","toHaveClass","focus","keyDown","key","toHaveAttribute","topBarContainer","closest","deliveryTrigger","categoryTrigger"],"mappings":"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"}