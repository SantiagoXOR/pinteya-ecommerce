c1680f267ea4a0cd814d85ef3e7a20df
"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _image = /*#__PURE__*/ _interop_require_default(require("next/image"));
const _react1 = require("swiper/react");
const _modules = require("swiper/modules");
require("swiper/css");
require("swiper/css/pagination");
require("swiper/css/navigation");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const HeroCarousel = ({ images, autoplayDelay = 5000, className = "", showNavigation = true, showPagination = true, onSlideChange })=>{
    const [currentSlide, setCurrentSlide] = (0, _react.useState)(0);
    const [isAutoplayPaused, setIsAutoplayPaused] = (0, _react.useState)(false);
    const swiperRef = (0, _react.useRef)(null);
    // Handle slide change
    const handleSlideChange = (swiper)=>{
        const newIndex = swiper.realIndex;
        setCurrentSlide(newIndex);
        onSlideChange?.(newIndex);
    };
    // Handle mouse enter/leave for autoplay pause
    const handleMouseEnter = ()=>{
        setIsAutoplayPaused(true);
        if (swiperRef.current?.autoplay) {
            swiperRef.current.autoplay.stop();
        }
    };
    const handleMouseLeave = ()=>{
        setIsAutoplayPaused(false);
        if (swiperRef.current?.autoplay) {
            swiperRef.current.autoplay.start();
        }
    };
    // Keyboard navigation
    (0, _react.useEffect)(()=>{
        const handleKeyDown = (event)=>{
            if (!swiperRef.current) return;
            switch(event.key){
                case "ArrowLeft":
                    event.preventDefault();
                    swiperRef.current.slidePrev();
                    break;
                case "ArrowRight":
                    event.preventDefault();
                    swiperRef.current.slideNext();
                    break;
                case "Escape":
                    event.preventDefault();
                    if (isAutoplayPaused) {
                        handleMouseLeave();
                    } else {
                        handleMouseEnter();
                    }
                    break;
            }
        };
        document.addEventListener("keydown", handleKeyDown);
        return ()=>document.removeEventListener("keydown", handleKeyDown);
    }, [
        isAutoplayPaused
    ]);
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        role: "region",
        "aria-label": "Carrusel de im\xe1genes principales",
        "aria-live": "polite",
        className: `hero-carousel relative w-full h-full ${className}`,
        onMouseEnter: handleMouseEnter,
        onMouseLeave: handleMouseLeave,
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_react1.Swiper, {
                modules: [
                    _modules.Autoplay,
                    _modules.Pagination,
                    _modules.Navigation,
                    _modules.Keyboard,
                    _modules.A11y
                ],
                autoplay: {
                    delay: autoplayDelay,
                    disableOnInteraction: false,
                    pauseOnMouseEnter: true
                },
                pagination: showPagination ? {
                    clickable: true,
                    bulletClass: "hero-carousel-bullet",
                    bulletActiveClass: "hero-carousel-bullet-active",
                    dynamicBullets: false,
                    renderBullet: function(index, className) {
                        return `<span class="${className}" data-index="${index}" role="button" aria-label="Ir a imagen ${index + 1}" tabindex="0"></span>`;
                    }
                } : false,
                navigation: showNavigation ? {
                    nextEl: ".hero-carousel-button-next",
                    prevEl: ".hero-carousel-button-prev"
                } : false,
                keyboard: {
                    enabled: true,
                    onlyInViewport: true
                },
                a11y: {
                    enabled: true
                },
                loop: true,
                speed: 800,
                effect: "slide",
                spaceBetween: 0,
                slidesPerView: 1,
                centeredSlides: true,
                onSlideChange: handleSlideChange,
                onSwiper: (swiper)=>{
                    swiperRef.current = swiper;
                },
                "aria-label": "Galer\xeda de im\xe1genes de productos",
                className: "w-full h-full",
                children: images.map((image, index)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_react1.SwiperSlide, {
                        role: "group",
                        "aria-label": `${index + 1} de ${images.length}`,
                        className: "flex items-center justify-center",
                        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "relative w-full h-full",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_image.default, {
                                    src: image.src,
                                    alt: image.alt,
                                    fill: true,
                                    className: "object-contain transition-all duration-500 ease-in-out",
                                    priority: image.priority || index === 0,
                                    sizes: "(max-width: 768px) 100vw, (max-width: 1200px) 80vw, 60vw",
                                    quality: 95,
                                    unoptimized: image.unoptimized || true,
                                    "aria-describedby": `slide-description-${index}`
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                    id: `slide-description-${index}`,
                                    className: "sr-only",
                                    children: image.alt
                                })
                            ]
                        })
                    }, `${image.src}-${index}`))
            }),
            showNavigation && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                        className: "hero-carousel-button-prev absolute left-4 top-1/2 -translate-y-1/2 z-10 w-10 h-10 md:w-12 md:h-12 bg-white/80 hover:bg-white rounded-full shadow-lg flex items-center justify-center text-blaze-orange-600 hover:text-blaze-orange-700 transition-all duration-300 focus:outline-none focus:ring-2 focus:ring-yellow-400 focus:ring-offset-2",
                        "aria-label": "Imagen anterior",
                        type: "button",
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)("svg", {
                            className: "w-5 h-5 md:w-6 md:h-6",
                            fill: "none",
                            stroke: "currentColor",
                            viewBox: "0 0 24 24",
                            "aria-hidden": "true",
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)("path", {
                                strokeLinecap: "round",
                                strokeLinejoin: "round",
                                strokeWidth: 2,
                                d: "M15 19l-7-7 7-7"
                            })
                        })
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                        className: "hero-carousel-button-next absolute right-4 top-1/2 -translate-y-1/2 z-10 w-10 h-10 md:w-12 md:h-12 bg-white/80 hover:bg-white rounded-full shadow-lg flex items-center justify-center text-blaze-orange-600 hover:text-blaze-orange-700 transition-all duration-300 focus:outline-none focus:ring-2 focus:ring-yellow-400 focus:ring-offset-2",
                        "aria-label": "Imagen siguiente",
                        type: "button",
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)("svg", {
                            className: "w-5 h-5 md:w-6 md:h-6",
                            fill: "none",
                            stroke: "currentColor",
                            viewBox: "0 0 24 24",
                            "aria-hidden": "true",
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)("path", {
                                strokeLinecap: "round",
                                strokeLinejoin: "round",
                                strokeWidth: 2,
                                d: "M9 5l7 7-7 7"
                            })
                        })
                    })
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "sr-only",
                "aria-live": "polite",
                "aria-atomic": "true",
                children: [
                    "Imagen ",
                    currentSlide + 1,
                    " de ",
                    images.length,
                    isAutoplayPaused ? " - Reproducción automática pausada" : " - Reproducción automática activa"
                ]
            })
        ]
    });
};
const _default = HeroCarousel;

//# sourceMappingURL=data:application/json;base64,