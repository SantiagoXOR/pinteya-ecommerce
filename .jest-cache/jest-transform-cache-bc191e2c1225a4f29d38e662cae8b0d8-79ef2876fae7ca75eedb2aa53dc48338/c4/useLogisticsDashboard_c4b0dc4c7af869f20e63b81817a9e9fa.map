{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\admin\\useLogisticsDashboard.ts"],"sourcesContent":["// =====================================================\n// HOOK: LOGISTICS DASHBOARD ENTERPRISE\n// Descripción: Hook para dashboard de logística con métricas tiempo real\n// Basado en: Patrones WooCommerce Activity Panels + TanStack Query\n// =====================================================\n\n'use client';\n\nimport { useQuery, useQueryClient } from '@tanstack/react-query';\nimport { useState, useCallback } from 'react';\nimport { \n  LogisticsDashboardResponse,\n  UseLogisticsDashboardReturn \n} from '@/types/logistics';\n\n// =====================================================\n// CONFIGURACIÓN DE QUERY\n// =====================================================\n\nconst QUERY_KEY = ['admin', 'logistics', 'dashboard'];\nconst REFETCH_INTERVAL = 30000; // 30 segundos\nconst STALE_TIME = 20000; // 20 segundos\n\n// =====================================================\n// FUNCIÓN DE FETCH\n// =====================================================\n\nasync function fetchLogisticsDashboard(): Promise<LogisticsDashboardResponse['data']> {\n  const response = await fetch('/api/admin/logistics', {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    cache: 'no-store'\n  });\n  \n  if (!response.ok) {\n    const errorData = await response.json().catch(() => ({}));\n    throw new Error(errorData.error || `HTTP ${response.status}: ${response.statusText}`);\n  }\n  \n  const data = await response.json();\n  return data.data;\n}\n\n// =====================================================\n// HOOK PRINCIPAL\n// =====================================================\n\nexport function useLogisticsDashboard(options?: {\n  enabled?: boolean;\n  refetchInterval?: number;\n  onError?: (error: Error) => void;\n}): UseLogisticsDashboardReturn {\n  const queryClient = useQueryClient();\n  const [isRefreshing, setIsRefreshing] = useState(false);\n  \n  const {\n    data,\n    isLoading,\n    error,\n    refetch: queryRefetch,\n    isRefetching\n  } = useQuery({\n    queryKey: QUERY_KEY,\n    queryFn: fetchLogisticsDashboard,\n    enabled: options?.enabled ?? true,\n    refetchInterval: options?.refetchInterval ?? REFETCH_INTERVAL,\n    staleTime: STALE_TIME,\n    retry: 3,\n    retryDelay: (attemptIndex) => Math.min(1000 * 2 ** attemptIndex, 30000),\n    onError: options?.onError\n  });\n  \n  // =====================================================\n  // FUNCIONES AUXILIARES\n  // =====================================================\n  \n  const refetch = useCallback(async () => {\n    setIsRefreshing(true);\n    try {\n      await queryRefetch();\n    } finally {\n      setIsRefreshing(false);\n    }\n  }, [queryRefetch]);\n  \n  const invalidateCache = useCallback(() => {\n    queryClient.invalidateQueries({ queryKey: QUERY_KEY });\n  }, [queryClient]);\n  \n  const updateCache = useCallback((updater: (oldData: LogisticsDashboardResponse['data'] | undefined) => LogisticsDashboardResponse['data']) => {\n    queryClient.setQueryData(QUERY_KEY, updater);\n  }, [queryClient]);\n  \n  // =====================================================\n  // MÉTRICAS DERIVADAS\n  // =====================================================\n  \n  const derivedMetrics = data ? {\n    // Tasa de envíos activos\n    active_shipments_rate: data.stats.total_shipments > 0 \n      ? ((data.stats.in_transit_shipments + data.stats.pending_shipments) / data.stats.total_shipments) * 100 \n      : 0,\n    \n    // Tasa de excepciones\n    exception_rate: data.stats.total_shipments > 0 \n      ? (data.stats.exception_shipments / data.stats.total_shipments) * 100 \n      : 0,\n    \n    // Costo promedio por envío\n    average_shipping_cost: data.stats.total_shipments > 0 \n      ? data.stats.total_shipping_cost / data.stats.total_shipments \n      : 0,\n    \n    // Tendencia de envíos (últimos 7 días vs anteriores)\n    shipments_trend: data.performance_metrics.length >= 14 ? (() => {\n      const last7Days = data.performance_metrics.slice(-7);\n      const previous7Days = data.performance_metrics.slice(-14, -7);\n      \n      const last7Total = last7Days.reduce((acc, day) => acc + day.shipments_count, 0);\n      const previous7Total = previous7Days.reduce((acc, day) => acc + day.shipments_count, 0);\n      \n      return previous7Total > 0 \n        ? ((last7Total - previous7Total) / previous7Total) * 100 \n        : 0;\n    })() : 0,\n    \n    // Mejor courier por performance\n    best_performing_courier: data.carrier_performance.length > 0 \n      ? data.carrier_performance.reduce((best, current) => \n          current.on_time_rate > best.on_time_rate ? current : best\n        )\n      : null\n  } : null;\n  \n  // =====================================================\n  // ALERTAS CRÍTICAS\n  // =====================================================\n  \n  const criticalAlerts = data?.alerts.filter(alert => alert.type === 'error') || [];\n  const warningAlerts = data?.alerts.filter(alert => alert.type === 'warning') || [];\n  \n  // =====================================================\n  // ESTADO DE SALUD DEL SISTEMA\n  // =====================================================\n  \n  const systemHealth = data ? {\n    status: (() => {\n      if (criticalAlerts.length > 0) return 'critical';\n      if (warningAlerts.length > 3) return 'warning';\n      if (data.stats.on_time_delivery_rate < 80) return 'warning';\n      return 'healthy';\n    })(),\n    score: Math.round(\n      (data.stats.on_time_delivery_rate * 0.4) + \n      ((100 - (derivedMetrics?.exception_rate || 0)) * 0.3) +\n      (data.stats.active_couriers > 0 ? 20 : 0) +\n      (criticalAlerts.length === 0 ? 10 : 0)\n    )\n  } : null;\n  \n  return {\n    // Datos principales\n    data,\n    isLoading: isLoading || isRefreshing,\n    error: error as Error | null,\n    refetch,\n    \n    // Estados adicionales\n    isRefetching: isRefetching || isRefreshing,\n    \n    // Funciones de cache\n    invalidateCache,\n    updateCache,\n    \n    // Métricas derivadas\n    derivedMetrics,\n    \n    // Alertas categorizadas\n    criticalAlerts,\n    warningAlerts,\n    \n    // Estado de salud\n    systemHealth\n  };\n}\n\n// =====================================================\n// HOOK PARA MÉTRICAS EN TIEMPO REAL\n// =====================================================\n\nexport function useLogisticsRealTimeMetrics() {\n  const { data, refetch } = useLogisticsDashboard({\n    refetchInterval: 10000 // 10 segundos para tiempo real\n  });\n  \n  return {\n    metrics: data?.stats,\n    recentShipments: data?.recent_shipments,\n    alerts: data?.alerts,\n    refetch\n  };\n}\n\n// =====================================================\n// HOOK PARA PERFORMANCE DE COURIERS\n// =====================================================\n\nexport function useCarrierPerformance() {\n  const { data } = useLogisticsDashboard();\n  \n  const sortedCarriers = data?.carrier_performance.sort((a, b) => \n    b.on_time_rate - a.on_time_rate\n  ) || [];\n  \n  const topPerformer = sortedCarriers[0];\n  const worstPerformer = sortedCarriers[sortedCarriers.length - 1];\n  \n  return {\n    carriers: sortedCarriers,\n    topPerformer,\n    worstPerformer,\n    averageOnTimeRate: sortedCarriers.length > 0 \n      ? sortedCarriers.reduce((acc, carrier) => acc + carrier.on_time_rate, 0) / sortedCarriers.length \n      : 0\n  };\n}\n\n// =====================================================\n// HOOK PARA ALERTAS\n// =====================================================\n\nexport function useLogisticsAlerts() {\n  const { data, refetch } = useLogisticsDashboard();\n  \n  const unreadAlerts = data?.alerts.filter(alert => !alert.is_read) || [];\n  const criticalCount = unreadAlerts.filter(alert => alert.type === 'error').length;\n  const warningCount = unreadAlerts.filter(alert => alert.type === 'warning').length;\n  \n  return {\n    alerts: data?.alerts || [],\n    unreadAlerts,\n    criticalCount,\n    warningCount,\n    totalUnread: unreadAlerts.length,\n    refetch\n  };\n}\n\n// =====================================================\n// TIPOS EXTENDIDOS PARA EL HOOK\n// =====================================================\n\nexport interface UseLogisticsDashboardExtendedReturn extends UseLogisticsDashboardReturn {\n  isRefetching: boolean;\n  invalidateCache: () => void;\n  updateCache: (updater: (oldData: LogisticsDashboardResponse['data'] | undefined) => LogisticsDashboardResponse['data']) => void;\n  derivedMetrics: {\n    active_shipments_rate: number;\n    exception_rate: number;\n    average_shipping_cost: number;\n    shipments_trend: number;\n    best_performing_courier: any;\n  } | null;\n  criticalAlerts: any[];\n  warningAlerts: any[];\n  systemHealth: {\n    status: 'healthy' | 'warning' | 'critical';\n    score: number;\n  } | null;\n}\n"],"names":["useCarrierPerformance","useLogisticsAlerts","useLogisticsDashboard","useLogisticsRealTimeMetrics","QUERY_KEY","REFETCH_INTERVAL","STALE_TIME","fetchLogisticsDashboard","response","fetch","method","headers","cache","ok","errorData","json","catch","Error","error","status","statusText","data","options","queryClient","useQueryClient","isRefreshing","setIsRefreshing","useState","isLoading","refetch","queryRefetch","isRefetching","useQuery","queryKey","queryFn","enabled","refetchInterval","staleTime","retry","retryDelay","attemptIndex","Math","min","onError","useCallback","invalidateCache","invalidateQueries","updateCache","updater","setQueryData","derivedMetrics","active_shipments_rate","stats","total_shipments","in_transit_shipments","pending_shipments","exception_rate","exception_shipments","average_shipping_cost","total_shipping_cost","shipments_trend","performance_metrics","length","last7Days","slice","previous7Days","last7Total","reduce","acc","day","shipments_count","previous7Total","best_performing_courier","carrier_performance","best","current","on_time_rate","criticalAlerts","alerts","filter","alert","type","warningAlerts","systemHealth","on_time_delivery_rate","score","round","active_couriers","metrics","recentShipments","recent_shipments","sortedCarriers","sort","a","b","topPerformer","worstPerformer","carriers","averageOnTimeRate","carrier","unreadAlerts","is_read","criticalCount","warningCount","totalUnread"],"mappings":"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"}