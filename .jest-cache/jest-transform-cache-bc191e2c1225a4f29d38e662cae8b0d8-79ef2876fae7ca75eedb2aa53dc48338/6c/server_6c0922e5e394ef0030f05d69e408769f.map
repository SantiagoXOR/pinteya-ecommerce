{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\Header\\__tests__\\mocks\\server.ts"],"sourcesContent":["/**\n * Mock Service Worker - Servidor para tests del Header\n */\n\nimport { setupServer } from 'msw/node';\nimport { rest } from 'msw';\n\n// Datos de prueba\nconst mockTrendingSearches = [\n  { query: 'pintura blanca', count: 150, category: 'Pinturas' },\n  { query: 'latex interior', count: 120, category: 'Pinturas' },\n  { query: 'esmalte sintético', count: 100, category: 'Esmaltes' },\n  { query: 'barniz marino', count: 80, category: 'Barnices' },\n  { query: 'rodillo 23cm', count: 75, category: 'Accesorios' },\n];\n\nconst mockSearchSuggestions = [\n  { id: 1, name: 'Pintura Latex Blanca 20L Sherwin Williams', category: 'Pinturas', price: 15000 },\n  { id: 2, name: 'Pintura Latex Interior Premium Petrilac', category: 'Pinturas', price: 12000 },\n  { id: 3, name: 'Esmalte Sintético Blanco Sinteplast', category: 'Esmaltes', price: 8500 },\n  { id: 4, name: 'Barniz Marino Transparente Plavicon', category: 'Barnices', price: 6500 },\n  { id: 5, name: 'Rodillo Antigota 23cm Akapol', category: 'Accesorios', price: 2500 },\n];\n\nconst mockProducts = [\n  {\n    id: 1,\n    name: 'Pintura Latex Blanca 20L',\n    description: 'Pintura latex interior de alta calidad',\n    price: 15000,\n    category: 'Pinturas',\n    brand: 'Sherwin Williams',\n    stock: 25,\n    image_url: 'https://example.com/pintura-blanca.jpg',\n    created_at: '2024-01-01T00:00:00Z',\n  },\n  {\n    id: 2,\n    name: 'Esmalte Sintético Azul',\n    description: 'Esmalte sintético para exteriores',\n    price: 8500,\n    category: 'Esmaltes',\n    brand: 'Sinteplast',\n    stock: 15,\n    image_url: 'https://example.com/esmalte-azul.jpg',\n    created_at: '2024-01-02T00:00:00Z',\n  },\n];\n\nconst mockCategories = [\n  { id: 1, name: 'Pinturas', slug: 'pinturas', description: 'Pinturas para interior y exterior' },\n  { id: 2, name: 'Esmaltes', slug: 'esmaltes', description: 'Esmaltes sintéticos y al agua' },\n  { id: 3, name: 'Barnices', slug: 'barnices', description: 'Barnices y protectores de madera' },\n  { id: 4, name: 'Accesorios', slug: 'accesorios', description: 'Rodillos, pinceles y herramientas' },\n];\n\nconst mockDeliveryZones = [\n  {\n    id: 'cordoba-capital',\n    name: 'Córdoba Capital',\n    coordinates: { lat: -31.4201, lng: -64.1888 },\n    delivery_fee: 0,\n    free_shipping_threshold: 15000,\n  },\n  {\n    id: 'villa-carlos-paz',\n    name: 'Villa Carlos Paz',\n    coordinates: { lat: -31.4241, lng: -64.4978 },\n    delivery_fee: 500,\n    free_shipping_threshold: 20000,\n  },\n];\n\n// Configuración del servidor MSW\nexport const server = setupServer(\n  // API de búsquedas trending\n  rest.get('/api/search/trending', (req, res, ctx) => {\n    const limit = parseInt(req.url.searchParams.get('limit') || '10');\n    const days = parseInt(req.url.searchParams.get('days') || '7');\n    const category = req.url.searchParams.get('category');\n\n    let filteredSearches = mockTrendingSearches;\n    \n    if (category) {\n      filteredSearches = mockTrendingSearches.filter(\n        search => search.category.toLowerCase() === category.toLowerCase()\n      );\n    }\n\n    const limitedSearches = filteredSearches.slice(0, limit);\n\n    return res(\n      ctx.status(200),\n      ctx.json({\n        success: true,\n        data: limitedSearches,\n        count: limitedSearches.length,\n        total: filteredSearches.length,\n        params: { limit, days, category },\n      })\n    );\n  }),\n\n  // API de sugerencias de búsqueda\n  rest.get('/api/search/suggestions', (req, res, ctx) => {\n    const query = req.url.searchParams.get('q') || '';\n    const limit = parseInt(req.url.searchParams.get('limit') || '5');\n\n    if (!query || query.length < 2) {\n      return res(\n        ctx.status(200),\n        ctx.json({\n          success: true,\n          data: [],\n          count: 0,\n          message: 'Query too short',\n        })\n      );\n    }\n\n    const filteredSuggestions = mockSearchSuggestions.filter(item =>\n      item.name.toLowerCase().includes(query.toLowerCase()) ||\n      item.category.toLowerCase().includes(query.toLowerCase())\n    );\n\n    const limitedSuggestions = filteredSuggestions.slice(0, limit);\n\n    return res(\n      ctx.status(200),\n      ctx.json({\n        success: true,\n        data: limitedSuggestions,\n        count: limitedSuggestions.length,\n        query,\n      })\n    );\n  }),\n\n  // API de productos\n  rest.get('/api/products', (req, res, ctx) => {\n    const search = req.url.searchParams.get('search') || req.url.searchParams.get('q');\n    const category = req.url.searchParams.get('category');\n    const limit = parseInt(req.url.searchParams.get('limit') || '10');\n    const page = parseInt(req.url.searchParams.get('page') || '1');\n    const sortBy = req.url.searchParams.get('sortBy') || 'created_at';\n    const sortOrder = req.url.searchParams.get('sortOrder') || 'desc';\n\n    let filteredProducts = [...mockProducts];\n\n    // Filtrar por búsqueda\n    if (search) {\n      filteredProducts = filteredProducts.filter(product =>\n        product.name.toLowerCase().includes(search.toLowerCase()) ||\n        product.description.toLowerCase().includes(search.toLowerCase()) ||\n        product.brand.toLowerCase().includes(search.toLowerCase())\n      );\n    }\n\n    // Filtrar por categoría\n    if (category) {\n      filteredProducts = filteredProducts.filter(product =>\n        product.category.toLowerCase() === category.toLowerCase()\n      );\n    }\n\n    // Ordenar\n    filteredProducts.sort((a, b) => {\n      let aValue = a[sortBy as keyof typeof a];\n      let bValue = b[sortBy as keyof typeof b];\n\n      if (typeof aValue === 'string') {\n        aValue = aValue.toLowerCase();\n        bValue = (bValue as string).toLowerCase();\n      }\n\n      if (sortOrder === 'desc') {\n        return aValue > bValue ? -1 : 1;\n      } else {\n        return aValue < bValue ? -1 : 1;\n      }\n    });\n\n    // Paginación\n    const startIndex = (page - 1) * limit;\n    const endIndex = startIndex + limit;\n    const paginatedProducts = filteredProducts.slice(startIndex, endIndex);\n\n    return res(\n      ctx.status(200),\n      ctx.json({\n        success: true,\n        data: paginatedProducts,\n        pagination: {\n          total: filteredProducts.length,\n          page,\n          limit,\n          totalPages: Math.ceil(filteredProducts.length / limit),\n        },\n        filters: { search, category, sortBy, sortOrder },\n      })\n    );\n  }),\n\n  // API de categorías\n  rest.get('/api/categories', (req, res, ctx) => {\n    return res(\n      ctx.status(200),\n      ctx.json({\n        success: true,\n        data: mockCategories,\n        count: mockCategories.length,\n      })\n    );\n  }),\n\n  // API de zonas de entrega\n  rest.get('/api/delivery/zones', (req, res, ctx) => {\n    return res(\n      ctx.status(200),\n      ctx.json({\n        success: true,\n        data: mockDeliveryZones,\n        count: mockDeliveryZones.length,\n      })\n    );\n  }),\n\n  // API de geolocalización reversa\n  rest.post('/api/geolocation/reverse', (req, res, ctx) => {\n    return res(\n      ctx.status(200),\n      ctx.json({\n        success: true,\n        data: {\n          zone: mockDeliveryZones[0], // Córdoba Capital por defecto\n          address: 'Córdoba, Argentina',\n        },\n      })\n    );\n  }),\n\n  // API de autenticación (mock)\n  rest.post('/api/auth/signin', (req, res, ctx) => {\n    return res(\n      ctx.status(200),\n      ctx.json({\n        success: true,\n        data: {\n          user: {\n            id: 'user_test_123',\n            email: 'test@example.com',\n            firstName: 'Test',\n            lastName: 'User',\n          },\n          token: 'mock_jwt_token',\n        },\n      })\n    );\n  }),\n\n  // Manejo de errores - API no encontrada\n  rest.get('*', (req, res, ctx) => {\n    console.warn(`Unhandled GET request to ${req.url.pathname}`);\n    return res(\n      ctx.status(404),\n      ctx.json({\n        success: false,\n        error: 'API endpoint not found',\n        path: req.url.pathname,\n      })\n    );\n  }),\n\n  rest.post('*', (req, res, ctx) => {\n    console.warn(`Unhandled POST request to ${req.url.pathname}`);\n    return res(\n      ctx.status(404),\n      ctx.json({\n        success: false,\n        error: 'API endpoint not found',\n        path: req.url.pathname,\n      })\n    );\n  }),\n);\n\n// Handlers para casos de error específicos\nexport const errorHandlers = [\n  // Error 500 en trending searches\n  rest.get('/api/search/trending', (req, res, ctx) => {\n    return res(\n      ctx.status(500),\n      ctx.json({\n        success: false,\n        error: 'Internal server error',\n        message: 'Failed to fetch trending searches',\n      })\n    );\n  }),\n\n  // Error 429 - Rate limit\n  rest.get('/api/search/suggestions', (req, res, ctx) => {\n    return res(\n      ctx.status(429),\n      ctx.json({\n        success: false,\n        error: 'Rate limit exceeded',\n        message: 'Too many requests',\n        retryAfter: 60,\n      })\n    );\n  }),\n\n  // Error de timeout\n  rest.get('/api/products', (req, res, ctx) => {\n    return res(\n      ctx.delay('infinite')\n    );\n  }),\n];\n\n// Handlers para casos de éxito específicos\nexport const successHandlers = [\n  // Respuesta vacía para trending searches\n  rest.get('/api/search/trending', (req, res, ctx) => {\n    return res(\n      ctx.status(200),\n      ctx.json({\n        success: true,\n        data: [],\n        count: 0,\n        message: 'No trending searches found',\n      })\n    );\n  }),\n\n  // Respuesta con muchos resultados\n  rest.get('/api/search/suggestions', (req, res, ctx) => {\n    const manyResults = Array.from({ length: 50 }, (_, i) => ({\n      id: i + 1,\n      name: `Producto ${i + 1}`,\n      category: 'Test Category',\n      price: 1000 + i * 100,\n    }));\n\n    return res(\n      ctx.status(200),\n      ctx.json({\n        success: true,\n        data: manyResults,\n        count: manyResults.length,\n      })\n    );\n  }),\n];\n\nexport { mockTrendingSearches, mockSearchSuggestions, mockProducts, mockCategories, mockDeliveryZones };\n"],"names":["errorHandlers","mockCategories","mockDeliveryZones","mockProducts","mockSearchSuggestions","mockTrendingSearches","server","successHandlers","query","count","category","id","name","price","description","brand","stock","image_url","created_at","slug","coordinates","lat","lng","delivery_fee","free_shipping_threshold","setupServer","rest","get","req","res","ctx","limit","parseInt","url","searchParams","days","filteredSearches","filter","search","toLowerCase","limitedSearches","slice","status","json","success","data","length","total","params","message","filteredSuggestions","item","includes","limitedSuggestions","page","sortBy","sortOrder","filteredProducts","product","sort","a","b","aValue","bValue","startIndex","endIndex","paginatedProducts","pagination","totalPages","Math","ceil","filters","post","zone","address","user","email","firstName","lastName","token","console","warn","pathname","error","path","retryAfter","delay","manyResults","Array","from","_","i"],"mappings":"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"}