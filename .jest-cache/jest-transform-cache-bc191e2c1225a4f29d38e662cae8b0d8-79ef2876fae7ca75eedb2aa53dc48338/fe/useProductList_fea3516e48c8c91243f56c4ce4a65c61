549ff748bc62d7e274204de59eb9402a
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "useProductList", {
    enumerable: true,
    get: function() {
        return useProductList;
    }
});
const _react = require("react");
function useProductList() {
    console.log('üîß useProductList: Hook iniciado');
    const [products, setProducts] = (0, _react.useState)([]);
    const [isLoading, setIsLoading] = (0, _react.useState)(true);
    const [error, setError] = (0, _react.useState)(null);
    (0, _react.useEffect)(()=>{
        const fetchProducts = async ()=>{
            try {
                console.log('üîß useProductList: Iniciando fetch...');
                setIsLoading(true);
                setError(null);
                const response = await fetch('/api/admin/products-direct?limit=25');
                console.log('üîß useProductList: Response status:', response.status);
                if (!response.ok) {
                    throw new Error(`Error ${response.status}: ${response.statusText}`);
                }
                const data = await response.json();
                console.log('üîß useProductList: Respuesta completa:', data);
                console.log('üîß useProductList: data.success:', data.success);
                console.log('üîß useProductList: data.data:', data.data);
                console.log('üîß useProductList: data.data.products:', data.data?.products);
                if (data.success && data.data && Array.isArray(data.data.products)) {
                    setProducts(data.data.products);
                    console.log('üîß useProductList: ‚úÖ Productos cargados:', data.data.products.length);
                } else {
                    throw new Error('Estructura de respuesta inv√°lida');
                }
            } catch (err) {
                console.error('üîß useProductList: ‚ùå Error:', err);
                setError(err instanceof Error ? err.message : 'Error desconocido');
                setProducts([]);
            } finally{
                setIsLoading(false);
            }
        };
        fetchProducts();
    }, []);
    return {
        products,
        isLoading,
        error
    };
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbWFydGlcXERlc2t0b3BcXERFU0FSUk9MTE9TV1xcQk9JTEVSUExBVFRFIEUtQ09NTUVSQ0VcXHNyY1xcaG9va3NcXGFkbWluXFx1c2VQcm9kdWN0TGlzdC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xyXG5cclxuaW50ZXJmYWNlIFByb2R1Y3Qge1xyXG4gIGlkOiBudW1iZXI7XHJcbiAgbmFtZTogc3RyaW5nO1xyXG4gIGRlc2NyaXB0aW9uOiBzdHJpbmc7XHJcbiAgcHJpY2U6IG51bWJlcjtcclxuICBzdG9jazogbnVtYmVyO1xyXG4gIGNhdGVnb3J5X2lkOiBudW1iZXI7XHJcbiAgaW1hZ2VzOiB7XHJcbiAgICBtYWluOiBzdHJpbmc7XHJcbiAgICBnYWxsZXJ5OiBzdHJpbmdbXTtcclxuICAgIHByZXZpZXdzOiBzdHJpbmdbXTtcclxuICAgIHRodW1ibmFpbHM6IHN0cmluZ1tdO1xyXG4gIH07XHJcbiAgY3JlYXRlZF9hdDogc3RyaW5nO1xyXG4gIHVwZGF0ZWRfYXQ6IHN0cmluZztcclxuICBjYXRlZ29yeV9uYW1lOiBzdHJpbmc7XHJcbn1cclxuXHJcbmludGVyZmFjZSBQcm9kdWN0TGlzdFJlc3BvbnNlIHtcclxuICBzdWNjZXNzOiBib29sZWFuO1xyXG4gIGRhdGE6IHtcclxuICAgIHByb2R1Y3RzOiBQcm9kdWN0W107XHJcbiAgICB0b3RhbDogbnVtYmVyO1xyXG4gICAgcGFnaW5hdGlvbjoge1xyXG4gICAgICBwYWdlOiBudW1iZXI7XHJcbiAgICAgIGxpbWl0OiBudW1iZXI7XHJcbiAgICAgIG9mZnNldDogbnVtYmVyO1xyXG4gICAgICB0b3RhbFBhZ2VzOiBudW1iZXI7XHJcbiAgICAgIGhhc01vcmU6IGJvb2xlYW47XHJcbiAgICAgIGhhc1ByZXZpb3VzOiBib29sZWFuO1xyXG4gICAgfTtcclxuICB9O1xyXG4gIG1ldGE6IHtcclxuICAgIHRpbWVzdGFtcDogc3RyaW5nO1xyXG4gICAgbWV0aG9kOiBzdHJpbmc7XHJcbiAgICB1c2VyOiBzdHJpbmc7XHJcbiAgICByb2xlOiBzdHJpbmc7XHJcbiAgfTtcclxufVxyXG5cclxuLyoqXHJcbiAqIEhvb2sgZXN0w6FuZGFyIHBhcmEgZ2VzdGnDs24gZGUgcHJvZHVjdG9zIGVuIGVsIHBhbmVsIGFkbWluaXN0cmF0aXZvXHJcbiAqXHJcbiAqIEZ1bmNpb25hbGlkYWRlczpcclxuICogLSBDb25zdWx0YSByZWFsIGEgbGEgQVBJIC9hcGkvYWRtaW4vcHJvZHVjdHMtZGlyZWN0XHJcbiAqIC0gQ2FyZ2EgZGUgMjUgcHJvZHVjdG9zIHJlYWxlcyBkZSBTdXBhYmFzZSBwb3IgcMOhZ2luYVxyXG4gKiAtIEluZm9ybWFjacOzbiBkZSBwYWdpbmFjacOzbiBjb21wbGV0YVxyXG4gKiAtIERhdG9zIGNvbXBsZXRvcyAobm9tYnJlcywgcHJlY2lvcywgc3RvY2ssIGNhdGVnb3LDrWFzLCBpbcOhZ2VuZXMpXHJcbiAqXHJcbiAqIEByZXR1cm5zIHtPYmplY3R9IEVzdGFkbyBkZWwgaG9vayBjb24gcHJvZHVjdG9zLCBsb2FkaW5nIHkgZXJyb3JcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiB1c2VQcm9kdWN0TGlzdCgpIHtcclxuICBjb25zb2xlLmxvZygn8J+UpyB1c2VQcm9kdWN0TGlzdDogSG9vayBpbmljaWFkbycpO1xyXG4gIGNvbnN0IFtwcm9kdWN0cywgc2V0UHJvZHVjdHNdID0gdXNlU3RhdGU8UHJvZHVjdFtdPihbXSk7XHJcbiAgY29uc3QgW2lzTG9hZGluZywgc2V0SXNMb2FkaW5nXSA9IHVzZVN0YXRlKHRydWUpO1xyXG4gIGNvbnN0IFtlcnJvciwgc2V0RXJyb3JdID0gdXNlU3RhdGU8c3RyaW5nIHwgbnVsbD4obnVsbCk7XHJcblxyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICBjb25zdCBmZXRjaFByb2R1Y3RzID0gYXN5bmMgKCkgPT4ge1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCfwn5SnIHVzZVByb2R1Y3RMaXN0OiBJbmljaWFuZG8gZmV0Y2guLi4nKTtcclxuICAgICAgICBzZXRJc0xvYWRpbmcodHJ1ZSk7XHJcbiAgICAgICAgc2V0RXJyb3IobnVsbCk7XHJcblxyXG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJy9hcGkvYWRtaW4vcHJvZHVjdHMtZGlyZWN0P2xpbWl0PTI1Jyk7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ/CflKcgdXNlUHJvZHVjdExpc3Q6IFJlc3BvbnNlIHN0YXR1czonLCByZXNwb25zZS5zdGF0dXMpO1xyXG5cclxuICAgICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XHJcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEVycm9yICR7cmVzcG9uc2Uuc3RhdHVzfTogJHtyZXNwb25zZS5zdGF0dXNUZXh0fWApO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgY29uc3QgZGF0YTogUHJvZHVjdExpc3RSZXNwb25zZSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcclxuICAgICAgICBjb25zb2xlLmxvZygn8J+UpyB1c2VQcm9kdWN0TGlzdDogUmVzcHVlc3RhIGNvbXBsZXRhOicsIGRhdGEpO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCfwn5SnIHVzZVByb2R1Y3RMaXN0OiBkYXRhLnN1Y2Nlc3M6JywgZGF0YS5zdWNjZXNzKTtcclxuICAgICAgICBjb25zb2xlLmxvZygn8J+UpyB1c2VQcm9kdWN0TGlzdDogZGF0YS5kYXRhOicsIGRhdGEuZGF0YSk7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ/CflKcgdXNlUHJvZHVjdExpc3Q6IGRhdGEuZGF0YS5wcm9kdWN0czonLCBkYXRhLmRhdGE/LnByb2R1Y3RzKTtcclxuXHJcbiAgICAgICAgaWYgKGRhdGEuc3VjY2VzcyAmJiBkYXRhLmRhdGEgJiYgQXJyYXkuaXNBcnJheShkYXRhLmRhdGEucHJvZHVjdHMpKSB7XHJcbiAgICAgICAgICBzZXRQcm9kdWN0cyhkYXRhLmRhdGEucHJvZHVjdHMpO1xyXG4gICAgICAgICAgY29uc29sZS5sb2coJ/CflKcgdXNlUHJvZHVjdExpc3Q6IOKchSBQcm9kdWN0b3MgY2FyZ2Fkb3M6JywgZGF0YS5kYXRhLnByb2R1Y3RzLmxlbmd0aCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHRocm93IG5ldyBFcnJvcignRXN0cnVjdHVyYSBkZSByZXNwdWVzdGEgaW52w6FsaWRhJyk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9IGNhdGNoIChlcnIpIHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKCfwn5SnIHVzZVByb2R1Y3RMaXN0OiDinYwgRXJyb3I6JywgZXJyKTtcclxuICAgICAgICBzZXRFcnJvcihlcnIgaW5zdGFuY2VvZiBFcnJvciA/IGVyci5tZXNzYWdlIDogJ0Vycm9yIGRlc2Nvbm9jaWRvJyk7XHJcbiAgICAgICAgc2V0UHJvZHVjdHMoW10pO1xyXG4gICAgICB9IGZpbmFsbHkge1xyXG4gICAgICAgIHNldElzTG9hZGluZyhmYWxzZSk7XHJcbiAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgZmV0Y2hQcm9kdWN0cygpO1xyXG4gIH0sIFtdKTtcclxuXHJcbiAgcmV0dXJuIHtcclxuICAgIHByb2R1Y3RzLFxyXG4gICAgaXNMb2FkaW5nLFxyXG4gICAgZXJyb3JcclxuICB9O1xyXG59XHJcblxyXG5leHBvcnQgdHlwZSB7IFByb2R1Y3QsIFByb2R1Y3RMaXN0UmVzcG9uc2UgfTtcclxuIl0sIm5hbWVzIjpbInVzZVByb2R1Y3RMaXN0IiwiY29uc29sZSIsImxvZyIsInByb2R1Y3RzIiwic2V0UHJvZHVjdHMiLCJ1c2VTdGF0ZSIsImlzTG9hZGluZyIsInNldElzTG9hZGluZyIsImVycm9yIiwic2V0RXJyb3IiLCJ1c2VFZmZlY3QiLCJmZXRjaFByb2R1Y3RzIiwicmVzcG9uc2UiLCJmZXRjaCIsInN0YXR1cyIsIm9rIiwiRXJyb3IiLCJzdGF0dXNUZXh0IiwiZGF0YSIsImpzb24iLCJzdWNjZXNzIiwiQXJyYXkiLCJpc0FycmF5IiwibGVuZ3RoIiwiZXJyIiwibWVzc2FnZSJdLCJtYXBwaW5ncyI6Ijs7OzsrQkFxRGdCQTs7O2VBQUFBOzs7dUJBckRvQjtBQXFEN0IsU0FBU0E7SUFDZEMsUUFBUUMsR0FBRyxDQUFDO0lBQ1osTUFBTSxDQUFDQyxVQUFVQyxZQUFZLEdBQUdDLElBQUFBLGVBQVEsRUFBWSxFQUFFO0lBQ3RELE1BQU0sQ0FBQ0MsV0FBV0MsYUFBYSxHQUFHRixJQUFBQSxlQUFRLEVBQUM7SUFDM0MsTUFBTSxDQUFDRyxPQUFPQyxTQUFTLEdBQUdKLElBQUFBLGVBQVEsRUFBZ0I7SUFFbERLLElBQUFBLGdCQUFTLEVBQUM7UUFDUixNQUFNQyxnQkFBZ0I7WUFDcEIsSUFBSTtnQkFDRlYsUUFBUUMsR0FBRyxDQUFDO2dCQUNaSyxhQUFhO2dCQUNiRSxTQUFTO2dCQUVULE1BQU1HLFdBQVcsTUFBTUMsTUFBTTtnQkFDN0JaLFFBQVFDLEdBQUcsQ0FBQyx1Q0FBdUNVLFNBQVNFLE1BQU07Z0JBRWxFLElBQUksQ0FBQ0YsU0FBU0csRUFBRSxFQUFFO29CQUNoQixNQUFNLElBQUlDLE1BQU0sQ0FBQyxNQUFNLEVBQUVKLFNBQVNFLE1BQU0sQ0FBQyxFQUFFLEVBQUVGLFNBQVNLLFVBQVUsRUFBRTtnQkFDcEU7Z0JBRUEsTUFBTUMsT0FBNEIsTUFBTU4sU0FBU08sSUFBSTtnQkFDckRsQixRQUFRQyxHQUFHLENBQUMsMENBQTBDZ0I7Z0JBQ3REakIsUUFBUUMsR0FBRyxDQUFDLG9DQUFvQ2dCLEtBQUtFLE9BQU87Z0JBQzVEbkIsUUFBUUMsR0FBRyxDQUFDLGlDQUFpQ2dCLEtBQUtBLElBQUk7Z0JBQ3REakIsUUFBUUMsR0FBRyxDQUFDLDBDQUEwQ2dCLEtBQUtBLElBQUksRUFBRWY7Z0JBRWpFLElBQUllLEtBQUtFLE9BQU8sSUFBSUYsS0FBS0EsSUFBSSxJQUFJRyxNQUFNQyxPQUFPLENBQUNKLEtBQUtBLElBQUksQ0FBQ2YsUUFBUSxHQUFHO29CQUNsRUMsWUFBWWMsS0FBS0EsSUFBSSxDQUFDZixRQUFRO29CQUM5QkYsUUFBUUMsR0FBRyxDQUFDLDRDQUE0Q2dCLEtBQUtBLElBQUksQ0FBQ2YsUUFBUSxDQUFDb0IsTUFBTTtnQkFDbkYsT0FBTztvQkFDTCxNQUFNLElBQUlQLE1BQU07Z0JBQ2xCO1lBQ0YsRUFBRSxPQUFPUSxLQUFLO2dCQUNadkIsUUFBUU8sS0FBSyxDQUFDLCtCQUErQmdCO2dCQUM3Q2YsU0FBU2UsZUFBZVIsUUFBUVEsSUFBSUMsT0FBTyxHQUFHO2dCQUM5Q3JCLFlBQVksRUFBRTtZQUNoQixTQUFVO2dCQUNSRyxhQUFhO1lBQ2Y7UUFDRjtRQUVBSTtJQUNGLEdBQUcsRUFBRTtJQUVMLE9BQU87UUFDTFI7UUFDQUc7UUFDQUU7SUFDRjtBQUNGIn0=