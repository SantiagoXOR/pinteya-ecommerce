{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\jest.setup.js"],"sourcesContent":["// ===================================\r\n// PINTEYA E-COMMERCE - SETUP DE JEST\r\n// ===================================\r\n\r\nimport '@testing-library/jest-dom'\r\n\r\n// Mock TanStack Query para tests - Versión completa con QueryCache\r\njest.mock('@tanstack/react-query', () => {\r\n  const actual = jest.requireActual('@tanstack/react-query');\r\n\r\n  // Mock completo del QueryCache\r\n  const mockQueryCache = {\r\n    clear: jest.fn(),\r\n    get: jest.fn(() => null),\r\n    getAll: jest.fn(() => []),\r\n    find: jest.fn(() => null),\r\n    findAll: jest.fn(() => []),\r\n    notify: jest.fn(),\r\n    onFocus: jest.fn(),\r\n    onOnline: jest.fn(),\r\n    subscribe: jest.fn(() => jest.fn()),\r\n    build: jest.fn(),\r\n  };\r\n\r\n  // Mock completo del MutationCache\r\n  const mockMutationCache = {\r\n    clear: jest.fn(),\r\n    getAll: jest.fn(() => []),\r\n    find: jest.fn(() => null),\r\n    findAll: jest.fn(() => []),\r\n    notify: jest.fn(),\r\n    subscribe: jest.fn(() => jest.fn()),\r\n    build: jest.fn(),\r\n  };\r\n\r\n  // Mock del QueryClient con todos los métodos necesarios\r\n  const mockQueryClient = {\r\n    clear: jest.fn(),\r\n    getQueryCache: jest.fn(() => mockQueryCache),\r\n    getMutationCache: jest.fn(() => mockMutationCache),\r\n    setQueryData: jest.fn(),\r\n    getQueryData: jest.fn(),\r\n    invalidateQueries: jest.fn(),\r\n    removeQueries: jest.fn(),\r\n    prefetchQuery: jest.fn(),\r\n    defaultQueryOptions: jest.fn(() => ({})),\r\n    getDefaultOptions: jest.fn(() => ({\r\n      queries: {},\r\n      mutations: {},\r\n    })),\r\n    mount: jest.fn(),\r\n    unmount: jest.fn(),\r\n    isFetching: jest.fn(() => 0),\r\n    isMutating: jest.fn(() => 0),\r\n  };\r\n\r\n  return {\r\n    ...actual,\r\n    QueryClient: jest.fn().mockImplementation(() => mockQueryClient),\r\n    useQuery: jest.fn(() => ({\r\n      data: null,\r\n      error: null,\r\n      isLoading: false,\r\n      isError: false,\r\n      isSuccess: true,\r\n      isFetching: false,\r\n      isStale: false,\r\n      dataUpdatedAt: Date.now(),\r\n      refetch: jest.fn(),\r\n    })),\r\n    useQueryClient: jest.fn(() => mockQueryClient),\r\n    QueryClientProvider: ({ children }) => children,\r\n  };\r\n});\r\n\r\n// Mock Next.js router\r\njest.mock('next/router', () => ({\r\n  useRouter() {\r\n    return {\r\n      route: '/',\r\n      pathname: '/',\r\n      query: {},\r\n      asPath: '/',\r\n      push: jest.fn(),\r\n      pop: jest.fn(),\r\n      reload: jest.fn(),\r\n      back: jest.fn(),\r\n      prefetch: jest.fn(),\r\n      beforePopState: jest.fn(),\r\n      events: {\r\n        on: jest.fn(),\r\n        off: jest.fn(),\r\n        emit: jest.fn(),\r\n      },\r\n      isFallback: false,\r\n    }\r\n  },\r\n}))\r\n\r\n// Mock Next.js navigation\r\njest.mock('next/navigation', () => ({\r\n  useRouter() {\r\n    return {\r\n      push: jest.fn(),\r\n      replace: jest.fn(),\r\n      prefetch: jest.fn(),\r\n      back: jest.fn(),\r\n      forward: jest.fn(),\r\n      refresh: jest.fn(),\r\n    }\r\n  },\r\n  useSearchParams: jest.fn(() => ({\r\n    get: jest.fn((key) => {\r\n      if (key === 'q') return 'test-query';\r\n      return null;\r\n    }),\r\n    getAll: jest.fn(),\r\n    has: jest.fn(),\r\n    keys: jest.fn(),\r\n    values: jest.fn(),\r\n    entries: jest.fn(),\r\n    forEach: jest.fn(),\r\n    toString: jest.fn(() => 'q=test-query'),\r\n  })),\r\n  usePathname() {\r\n    return '/'\r\n  },\r\n}))\r\n\r\n// Mock Next.js Image component\r\njest.mock('next/image', () => ({\r\n  __esModule: true,\r\n  default: (props) => {\r\n    // eslint-disable-next-line @next/next/no-img-element\r\n    return <img {...props} />\r\n  },\r\n}))\r\n\r\n// Mock Next.js Link component\r\njest.mock('next/link', () => ({\r\n  __esModule: true,\r\n  default: ({ children, href, ...props }) => {\r\n    return <a href={href} {...props}>{children}</a>\r\n  },\r\n}))\r\n\r\n// Mock environment variables\r\nprocess.env.NEXT_PUBLIC_SUPABASE_URL = 'https://test.supabase.co'\r\nprocess.env.NEXT_PUBLIC_SUPABASE_ANON_KEY = 'test-anon-key'\r\nprocess.env.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY = 'test-clerk-key'\r\nprocess.env.CLERK_SECRET_KEY = 'test-clerk-secret'\r\nprocess.env.MERCADOPAGO_ACCESS_TOKEN = 'test-mp-token'\r\nprocess.env.NEXT_PUBLIC_MERCADOPAGO_PUBLIC_KEY = 'test-mp-public-key'\r\n\r\n// Mock window.matchMedia\r\nObject.defineProperty(window, 'matchMedia', {\r\n  writable: true,\r\n  value: jest.fn().mockImplementation(query => ({\r\n    matches: false,\r\n    media: query,\r\n    onchange: null,\r\n    addListener: jest.fn(), // deprecated\r\n    removeListener: jest.fn(), // deprecated\r\n    addEventListener: jest.fn(),\r\n    removeEventListener: jest.fn(),\r\n    dispatchEvent: jest.fn(),\r\n  })),\r\n})\r\n\r\n// Mock IntersectionObserver\r\nglobal.IntersectionObserver = class IntersectionObserver {\r\n  constructor() {}\r\n  observe() {\r\n    return null\r\n  }\r\n  disconnect() {\r\n    return null\r\n  }\r\n  unobserve() {\r\n    return null\r\n  }\r\n}\r\n\r\n// Mock ResizeObserver\r\nglobal.ResizeObserver = class ResizeObserver {\r\n  constructor() {}\r\n  observe() {\r\n    return null\r\n  }\r\n  disconnect() {\r\n    return null\r\n  }\r\n  unobserve() {\r\n    return null\r\n  }\r\n}\r\n\r\n// Mock localStorage\r\nconst localStorageMock = {\r\n  getItem: jest.fn(),\r\n  setItem: jest.fn(),\r\n  removeItem: jest.fn(),\r\n  clear: jest.fn(),\r\n}\r\nglobal.localStorage = localStorageMock\r\n\r\n// Mock sessionStorage\r\nconst sessionStorageMock = {\r\n  getItem: jest.fn(),\r\n  setItem: jest.fn(),\r\n  removeItem: jest.fn(),\r\n  clear: jest.fn(),\r\n}\r\nglobal.sessionStorage = sessionStorageMock\r\n\r\n// Mock fetch\r\nglobal.fetch = jest.fn()\r\n\r\n// Mock Request and Response for Next.js API tests\r\nglobal.Request = class Request {\r\n  constructor(input, init = {}) {\r\n    // Use defineProperty to handle read-only properties\r\n    Object.defineProperty(this, 'url', {\r\n      value: input,\r\n      writable: false,\r\n      enumerable: true,\r\n      configurable: true\r\n    })\r\n    this.method = init.method || 'GET'\r\n    this.headers = new Headers(init.headers)\r\n    this.body = init.body\r\n  }\r\n\r\n  async json() {\r\n    return JSON.parse(this.body || '{}')\r\n  }\r\n\r\n  async text() {\r\n    return this.body || ''\r\n  }\r\n}\r\n\r\nglobal.Response = class Response {\r\n  constructor(body, init = {}) {\r\n    this.body = body\r\n    this.status = init.status || 200\r\n    this.statusText = init.statusText || 'OK'\r\n    this.headers = new Headers(init.headers)\r\n    this.ok = this.status >= 200 && this.status < 300\r\n  }\r\n\r\n  static json(data, init = {}) {\r\n    return new Response(JSON.stringify(data), {\r\n      ...init,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        ...init.headers,\r\n      },\r\n    })\r\n  }\r\n\r\n  async json() {\r\n    return JSON.parse(this.body || '{}')\r\n  }\r\n\r\n  async text() {\r\n    return this.body || ''\r\n  }\r\n}\r\n\r\nglobal.Headers = class Headers {\r\n  constructor(init = {}) {\r\n    this.headers = new Map()\r\n    if (init) {\r\n      Object.entries(init).forEach(([key, value]) => {\r\n        this.headers.set(key.toLowerCase(), value)\r\n      })\r\n    }\r\n  }\r\n\r\n  get(name) {\r\n    return this.headers.get(name.toLowerCase())\r\n  }\r\n\r\n  set(name, value) {\r\n    this.headers.set(name.toLowerCase(), value)\r\n  }\r\n\r\n  has(name) {\r\n    return this.headers.has(name.toLowerCase())\r\n  }\r\n\r\n  delete(name) {\r\n    this.headers.delete(name.toLowerCase())\r\n  }\r\n\r\n  // Método entries() requerido por NextRequest\r\n  entries() {\r\n    return this.headers.entries()\r\n  }\r\n\r\n  // Métodos adicionales para compatibilidad completa\r\n  keys() {\r\n    return this.headers.keys()\r\n  }\r\n\r\n  values() {\r\n    return this.headers.values()\r\n  }\r\n\r\n  forEach(callback, thisArg) {\r\n    this.headers.forEach(callback, thisArg)\r\n  }\r\n\r\n  // Symbol.iterator para hacer Headers iterable\r\n  [Symbol.iterator]() {\r\n    return this.headers.entries()\r\n  }\r\n}\r\n\r\n// Suppress console errors in tests unless explicitly needed\r\nconst originalError = console.error\r\nbeforeAll(() => {\r\n  console.error = (...args) => {\r\n    if (\r\n      typeof args[0] === 'string' &&\r\n      args[0].includes('Warning: ReactDOM.render is no longer supported')\r\n    ) {\r\n      return\r\n    }\r\n    originalError.call(console, ...args)\r\n  }\r\n})\r\n\r\nafterAll(() => {\r\n  console.error = originalError\r\n})\r\n\r\n// Mock Context Providers\r\njest.mock('@/app/context/CartSidebarModalContext', () => ({\r\n  useCartModalContext: () => ({\r\n    isOpen: false,\r\n    openModal: jest.fn(),\r\n    closeModal: jest.fn(),\r\n  }),\r\n  CartModalProvider: ({ children }) => children,\r\n}))\r\n\r\njest.mock('@/app/context/QuickViewModalContext', () => ({\r\n  useModalContext: () => ({\r\n    isOpen: false,\r\n    openModal: jest.fn(),\r\n    closeModal: jest.fn(),\r\n    selectedProduct: null,\r\n  }),\r\n  ModalProvider: ({ children }) => children,\r\n}))\r\n\r\n// Mock Clerk components y server functions\r\njest.mock('@clerk/nextjs', () => ({\r\n  SignedIn: ({ children }) => <div data-testid=\"signed-in\">{children}</div>,\r\n  SignedOut: ({ children }) => <div data-testid=\"signed-out\">{children}</div>,\r\n  UserButton: () => <div data-testid=\"user-button\">User Button</div>,\r\n  useAuth: () => ({\r\n    isSignedIn: false,\r\n    userId: null,\r\n  }),\r\n  useUser: () => ({\r\n    user: null,\r\n    isLoaded: true,\r\n  }),\r\n}))\r\n\r\n// Mock Clerk server functions\r\njest.mock('@clerk/nextjs/server', () => ({\r\n  auth: jest.fn(() => ({\r\n    userId: 'test-user-id',\r\n    sessionId: 'test-session-id',\r\n    getToken: jest.fn(() => Promise.resolve('test-token')),\r\n  })),\r\n  currentUser: jest.fn(() => Promise.resolve({\r\n    id: 'test-user-id',\r\n    emailAddresses: [{ emailAddress: 'test@example.com' }],\r\n    firstName: 'Test',\r\n    lastName: 'User',\r\n  })),\r\n  clerkClient: {\r\n    users: {\r\n      getUser: jest.fn(() => Promise.resolve({\r\n        id: 'test-user-id',\r\n        emailAddresses: [{ emailAddress: 'test@example.com' }],\r\n        firstName: 'Test',\r\n        lastName: 'User',\r\n      })),\r\n    },\r\n  },\r\n}))\r\n\r\n// Mock Supabase - Configuración completa y robusta\r\nconst mockSupabaseResponse = {\r\n  data: [\r\n    {\r\n      id: 1,\r\n      name: 'Test Product 1',\r\n      slug: 'test-product-1',\r\n      description: 'Test description',\r\n      price: 1000,\r\n      discounted_price: 900,\r\n      stock: 10,\r\n      category_id: 1,\r\n      brand: 'Test Brand',\r\n      images: ['test1.jpg'],\r\n      created_at: '2024-01-01T00:00:00Z',\r\n      category: { id: 1, name: 'Test Category', slug: 'test-category' },\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Test Product 2',\r\n      slug: 'test-product-2',\r\n      description: 'Test description 2',\r\n      price: 2000,\r\n      discounted_price: 2000,\r\n      stock: 5,\r\n      category_id: 2,\r\n      brand: 'Test Brand 2',\r\n      images: ['test2.jpg'],\r\n      created_at: '2024-01-01T00:00:00Z',\r\n      category: { id: 2, name: 'Test Category 2', slug: 'test-category-2' },\r\n    },\r\n  ],\r\n  error: null,\r\n  count: 2,\r\n}\r\n\r\n// Función para crear un mock robusto de query builder\r\nconst createMockQueryBuilder = () => {\r\n  const builder = {}\r\n\r\n  // Métodos que retornan el builder para chaining\r\n  const chainableMethods = [\r\n    'select', 'eq', 'gte', 'lte', 'gt', 'lt', 'or', 'and',\r\n    'ilike', 'like', 'in', 'order', 'neq', 'is', 'not'\r\n  ]\r\n\r\n  chainableMethods.forEach(method => {\r\n    builder[method] = jest.fn(() => builder)\r\n  })\r\n\r\n  // Métodos que retornan promesas\r\n  builder.range = jest.fn(() => Promise.resolve(mockSupabaseResponse))\r\n  builder.single = jest.fn(() => Promise.resolve({\r\n    data: { id: 1, name: 'Test Category', slug: 'test-category' },\r\n    error: null,\r\n  }))\r\n\r\n  // Agregar soporte para Promise (then/catch) para casos donde no se llama a range()\r\n  builder.then = jest.fn((callback) => {\r\n    return Promise.resolve(callback(mockSupabaseResponse))\r\n  })\r\n  builder.catch = jest.fn((callback) => {\r\n    return Promise.resolve()\r\n  })\r\n\r\n  // Métodos especiales\r\n  builder.insert = jest.fn((data) => {\r\n    // Para inserts que no necesitan select (como order_items)\r\n    if (Array.isArray(data) && data[0]?.order_id) {\r\n      return Promise.resolve({ data: null, error: null });\r\n    }\r\n\r\n    return {\r\n      select: jest.fn((columns) => ({\r\n        single: jest.fn(() => {\r\n          // Crear un objeto de usuario válido para inserts de usuarios (array)\r\n          if (Array.isArray(data) && data[0]?.clerk_id) {\r\n            return Promise.resolve({\r\n              data: {\r\n                id: 'test-user-id',\r\n                clerk_id: data[0].clerk_id,\r\n                email: data[0].email || 'test@example.com',\r\n                name: data[0].name || 'Test User'\r\n              },\r\n              error: null,\r\n            });\r\n          }\r\n          // Para inserts de usuarios sin array (objeto directo)\r\n          if (data?.clerk_id) {\r\n            return Promise.resolve({\r\n              data: {\r\n                id: 'test-user-id',\r\n                clerk_id: data.clerk_id,\r\n                email: data.email || 'test@example.com',\r\n                name: data.name || 'Test User'\r\n              },\r\n              error: null,\r\n            });\r\n          }\r\n          // Para otros tipos de insert, usar el mock por defecto\r\n          return Promise.resolve({\r\n            data: { id: 1, ...mockSupabaseResponse.data[0] },\r\n            error: null,\r\n          });\r\n        }),\r\n      }))\r\n    };\r\n  })\r\n\r\n  builder.update = jest.fn(() => ({\r\n    eq: jest.fn(() => Promise.resolve({ error: null })),\r\n  }))\r\n\r\n  builder.delete = jest.fn(() => ({\r\n    eq: jest.fn(() => Promise.resolve({ error: null })),\r\n  }))\r\n\r\n  // Método para consultas con IN (productos)\r\n  builder.in = jest.fn(() => Promise.resolve({\r\n    data: [\r\n      {\r\n        id: 1,\r\n        name: 'Test Product 1',\r\n        price: 1000,\r\n        discounted_price: null,\r\n        stock: 10,\r\n        images: { previews: ['test1.jpg'] },\r\n        category: { name: 'Test Category', slug: 'test-category' }\r\n      },\r\n      {\r\n        id: 2,\r\n        name: 'Test Product 2',\r\n        price: 2000,\r\n        discounted_price: 1800,\r\n        stock: 5,\r\n        images: { previews: ['test2.jpg'] },\r\n        category: { name: 'Test Category', slug: 'test-category' }\r\n      }\r\n    ],\r\n    error: null\r\n  }))\r\n\r\n  return builder\r\n}\r\n\r\n// Mock principal de Supabase - Versión mejorada\r\njest.mock('@/lib/supabase', () => {\r\n  // Mock completo del query builder con todos los métodos\r\n  const createMockQueryBuilder = () => {\r\n    const mockData = {\r\n      data: [\r\n        { brand: 'El Galgo', product_count: 3 },\r\n        { brand: 'Plavicon', product_count: 5 },\r\n        { brand: 'Akapol', product_count: 2 },\r\n      ],\r\n      error: null\r\n    };\r\n\r\n    const mockQueryBuilder = {\r\n      select: jest.fn(() => mockQueryBuilder),\r\n      from: jest.fn(() => mockQueryBuilder),\r\n      insert: jest.fn(() => mockQueryBuilder),\r\n      update: jest.fn(() => mockQueryBuilder),\r\n      delete: jest.fn(() => mockQueryBuilder),\r\n      eq: jest.fn(() => mockQueryBuilder),\r\n      neq: jest.fn(() => mockQueryBuilder),\r\n      gt: jest.fn(() => mockQueryBuilder),\r\n      gte: jest.fn(() => mockQueryBuilder),\r\n      lt: jest.fn(() => mockQueryBuilder),\r\n      lte: jest.fn(() => mockQueryBuilder),\r\n      like: jest.fn(() => mockQueryBuilder),\r\n      ilike: jest.fn(() => mockQueryBuilder),\r\n      is: jest.fn(() => mockQueryBuilder),\r\n      in: jest.fn(() => mockQueryBuilder),\r\n      not: jest.fn(() => mockQueryBuilder),\r\n      or: jest.fn(() => mockQueryBuilder),\r\n      and: jest.fn(() => mockQueryBuilder),\r\n      order: jest.fn(() => mockQueryBuilder),\r\n      limit: jest.fn(() => mockQueryBuilder),\r\n      range: jest.fn(() => mockQueryBuilder),\r\n      single: jest.fn(() => Promise.resolve(mockData)),\r\n      maybeSingle: jest.fn(() => Promise.resolve(mockData)),\r\n      then: jest.fn((callback) => Promise.resolve(callback(mockData))),\r\n      catch: jest.fn(() => Promise.resolve()),\r\n    };\r\n\r\n    return mockQueryBuilder;\r\n  };\r\n\r\n  const mockClient = {\r\n    from: jest.fn(() => createMockQueryBuilder()),\r\n    auth: {\r\n      getUser: jest.fn(() => Promise.resolve({\r\n        data: { user: null },\r\n        error: null,\r\n      })),\r\n    },\r\n  }\r\n\r\n  return {\r\n    getSupabaseClient: jest.fn(() => mockClient),\r\n    supabase: mockClient,\r\n    supabaseAdmin: mockClient,\r\n    handleSupabaseError: jest.fn((error, context) => {\r\n      if (error?.message) {\r\n        throw new Error(error.message)\r\n      }\r\n      throw new Error('Supabase error')\r\n    }),\r\n    isAuthenticated: jest.fn(() => Promise.resolve(false)),\r\n    getCurrentUser: jest.fn(() => Promise.resolve(null)),\r\n  }\r\n})\r\n\r\n// Mock adicional para importaciones directas\r\njest.mock('@/lib/supabase/client', () => ({\r\n  createClient: jest.fn(() => mockSupabaseClient),\r\n}))\r\n\r\n// Mock Clerk para tests de API\r\njest.mock('@clerk/nextjs/server', () => ({\r\n  currentUser: jest.fn(() => Promise.resolve(null)),\r\n  auth: jest.fn(() => ({\r\n    userId: null,\r\n    user: null,\r\n  })),\r\n}))\r\n\r\njest.mock('@/lib/clerk', () => ({\r\n  getAuthUser: jest.fn(() => Promise.resolve(null)),\r\n  getAuthUserId: jest.fn(() => Promise.resolve(null)),\r\n}))\r\n\r\n// Mock MercadoPago - Versión completa\r\njest.mock('@/lib/mercadopago', () => ({\r\n  preference: {\r\n    create: jest.fn(() => Promise.resolve({\r\n      id: 'test-preference-id',\r\n      init_point: 'https://test-mercadopago.com/checkout',\r\n    })),\r\n  },\r\n  payment: {\r\n    get: jest.fn(() => Promise.resolve({\r\n      id: 'test-payment-id',\r\n      status: 'approved',\r\n      external_reference: 'test-order-id',\r\n    })),\r\n  },\r\n  getPaymentInfo: jest.fn(() => Promise.resolve({\r\n    success: true,\r\n    data: {\r\n      id: 'test-payment-id',\r\n      status: 'approved',\r\n      external_reference: 'test-order-id',\r\n    },\r\n  })),\r\n  validateWebhookSignature: jest.fn(() => true),\r\n  createPaymentPreference: jest.fn(() => Promise.resolve({\r\n    success: true,\r\n    data: {\r\n      id: 'test-preference-id',\r\n      init_point: 'https://test-mercadopago.com/checkout',\r\n      sandbox_init_point: 'https://test-mercadopago.com/checkout',\r\n    },\r\n  })),\r\n  mercadopago: {\r\n    preferences: {\r\n      create: jest.fn(() => Promise.resolve({\r\n        body: {\r\n          id: 'test-preference-id',\r\n          init_point: 'https://test-mercadopago.com/checkout',\r\n        },\r\n      })),\r\n    },\r\n  },\r\n}))\r\n\r\n// Mock Redis para tests\r\njest.mock('@/lib/redis', () => ({\r\n  redis: {\r\n    get: jest.fn(() => Promise.resolve(null)),\r\n    set: jest.fn(() => Promise.resolve('OK')),\r\n    del: jest.fn(() => Promise.resolve(1)),\r\n    incr: jest.fn(() => Promise.resolve(1)),\r\n    expire: jest.fn(() => Promise.resolve(1)),\r\n    ping: jest.fn(() => Promise.resolve('PONG')),\r\n    disconnect: jest.fn(() => Promise.resolve()),\r\n  },\r\n  RedisCache: jest.fn().mockImplementation(() => ({\r\n    get: jest.fn(() => Promise.resolve(null)),\r\n    set: jest.fn(() => Promise.resolve(true)),\r\n    del: jest.fn(() => Promise.resolve(true)),\r\n    incr: jest.fn(() => Promise.resolve(1)),\r\n    expire: jest.fn(() => Promise.resolve(true)),\r\n    ping: jest.fn(() => Promise.resolve(true)),\r\n  })),\r\n  isRedisAvailable: jest.fn(() => false),\r\n}))\r\n\r\n// Mock Rate Limiter\r\njest.mock('@/lib/rate-limiter', () => ({\r\n  checkRateLimit: jest.fn(() => Promise.resolve({\r\n    success: true,\r\n    remaining: 100,\r\n    reset: Date.now() + 60000,\r\n  })),\r\n  RateLimiter: jest.fn().mockImplementation(() => ({\r\n    check: jest.fn(() => Promise.resolve({\r\n      success: true,\r\n      remaining: 100,\r\n      reset: Date.now() + 60000,\r\n    })),\r\n  })),\r\n}))\r\n\r\n// Clean up after each test\r\nafterEach(() => {\r\n  jest.clearAllMocks()\r\n  localStorageMock.clear()\r\n  sessionStorageMock.clear()\r\n})\r\n"],"names":["jest","mock","actual","requireActual","mockQueryCache","clear","fn","get","getAll","find","findAll","notify","onFocus","onOnline","subscribe","build","mockMutationCache","mockQueryClient","getQueryCache","getMutationCache","setQueryData","getQueryData","invalidateQueries","removeQueries","prefetchQuery","defaultQueryOptions","getDefaultOptions","queries","mutations","mount","unmount","isFetching","isMutating","QueryClient","mockImplementation","useQuery","data","error","isLoading","isError","isSuccess","isStale","dataUpdatedAt","Date","now","refetch","useQueryClient","QueryClientProvider","children","useRouter","route","pathname","query","asPath","push","pop","reload","back","prefetch","beforePopState","events","on","off","emit","isFallback","replace","forward","refresh","useSearchParams","key","has","keys","values","entries","forEach","toString","usePathname","__esModule","default","props","img","href","a","useCartModalContext","isOpen","openModal","closeModal","CartModalProvider","useModalContext","selectedProduct","ModalProvider","SignedIn","div","data-testid","SignedOut","UserButton","useAuth","isSignedIn","userId","useUser","user","isLoaded","auth","sessionId","getToken","Promise","resolve","currentUser","id","emailAddresses","emailAddress","firstName","lastName","clerkClient","users","getUser","createMockQueryBuilder","mockData","brand","product_count","mockQueryBuilder","select","from","insert","update","delete","eq","neq","gt","gte","lt","lte","like","ilike","is","in","not","or","and","order","limit","range","single","maybeSingle","then","callback","catch","mockClient","getSupabaseClient","supabase","supabaseAdmin","handleSupabaseError","context","message","Error","isAuthenticated","getCurrentUser","createClient","mockSupabaseClient","getAuthUser","getAuthUserId","preference","create","init_point","payment","status","external_reference","getPaymentInfo","success","validateWebhookSignature","createPaymentPreference","sandbox_init_point","mercadopago","preferences","body","redis","set","del","incr","expire","ping","disconnect","RedisCache","isRedisAvailable","checkRateLimit","remaining","reset","RateLimiter","check","process","env","NEXT_PUBLIC_SUPABASE_URL","NEXT_PUBLIC_SUPABASE_ANON_KEY","NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY","CLERK_SECRET_KEY","MERCADOPAGO_ACCESS_TOKEN","NEXT_PUBLIC_MERCADOPAGO_PUBLIC_KEY","Object","defineProperty","window","writable","value","matches","media","onchange","addListener","removeListener","addEventListener","removeEventListener","dispatchEvent","global","IntersectionObserver","constructor","observe","unobserve","ResizeObserver","localStorageMock","getItem","setItem","removeItem","localStorage","sessionStorageMock","sessionStorage","fetch","Request","input","init","enumerable","configurable","method","headers","Headers","json","JSON","parse","text","Response","statusText","ok","stringify","Map","toLowerCase","name","thisArg","Symbol","iterator","originalError","console","beforeAll","args","includes","call","afterAll","mockSupabaseResponse","slug","description","price","discounted_price","stock","category_id","images","created_at","category","count","builder","chainableMethods","Array","isArray","order_id","columns","clerk_id","email","previews","afterEach","clearAllMocks"],"mappings":"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"}