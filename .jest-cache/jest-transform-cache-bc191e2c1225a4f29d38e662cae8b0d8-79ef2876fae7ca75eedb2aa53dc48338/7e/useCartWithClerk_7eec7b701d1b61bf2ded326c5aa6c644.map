{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useCartWithClerk.ts"],"sourcesContent":["// ===================================\r\n// PINTEYA E-COMMERCE - CART HOOK WITH CLERK INTEGRATION\r\n// ===================================\r\n\r\nimport { useEffect, useCallback } from 'react';\r\nimport { useAuth } from './useAuth';\r\nimport { useAppDispatch, useAppSelector } from '@/redux/store';\r\nimport { \r\n  selectCartItems, \r\n  hydrateCart, \r\n  replaceCart,\r\n  removeAllItemsFromCart \r\n} from '@/redux/features/cart-slice';\r\nimport { \r\n  loadCartFromStorage, \r\n  clearCartFromStorage,\r\n  migrateTemporaryCart,\r\n  loadUserCart,\r\n  saveUserCart \r\n} from '@/redux/middleware/cartPersistence';\r\n\r\n// Hook personalizado para manejar el carrito con integración NextAuth\r\nexport const useCartWithClerk = () => {\r\n  const { user, isLoaded } = useAuth();\r\n  const dispatch = useAppDispatch();\r\n  const cartItems = useAppSelector(selectCartItems);\r\n\r\n  // Función para migrar carrito temporal a usuario autenticado\r\n  const migrateCart = useCallback(async (userId: string) => {\r\n    try {\r\n      // Obtener items del localStorage\r\n      const temporaryItems = loadCartFromStorage();\r\n      \r\n      if (temporaryItems.length > 0) {\r\n        \r\n        // Migrar items al backend (implementación futura)\r\n        const migrationSuccess = await migrateTemporaryCart(temporaryItems, userId);\r\n        \r\n        if (migrationSuccess) {\r\n          // Limpiar localStorage después de migración exitosa\r\n          clearCartFromStorage();\r\n        }\r\n      }\r\n      \r\n      // Cargar carrito del usuario desde el backend (implementación futura)\r\n      const userCartItems = await loadUserCart(userId);\r\n      \r\n      // Si hay items del usuario, reemplazar el carrito actual\r\n      if (userCartItems.length > 0) {\r\n        dispatch(replaceCart(userCartItems));\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('Error during cart migration:', error);\r\n    }\r\n  }, [dispatch]);\r\n\r\n  // Función para guardar carrito del usuario autenticado\r\n  const saveCart = useCallback(async (userId: string) => {\r\n    try {\r\n      if (cartItems.length > 0) {\r\n        await saveUserCart(userId, cartItems);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error saving user cart:', error);\r\n    }\r\n  }, [cartItems]);\r\n\r\n  // Efecto para manejar cambios en el estado de autenticación\r\n  useEffect(() => {\r\n    if (!isLoaded) return;\r\n\r\n    if (user) {\r\n      // Usuario autenticado - migrar carrito temporal si existe\r\n      migrateCart(user.id);\r\n    } else {\r\n      // Usuario no autenticado - cargar desde localStorage\r\n      const persistedItems = loadCartFromStorage();\r\n      if (persistedItems.length > 0) {\r\n        dispatch(hydrateCart(persistedItems));\r\n      }\r\n    }\r\n  }, [user, isLoaded, dispatch, migrateCart]);\r\n\r\n  // Efecto para guardar carrito de usuario autenticado cuando cambie\r\n  useEffect(() => {\r\n    if (!isLoaded || !user) return;\r\n\r\n    // Debounce para evitar guardados excesivos\r\n    const timeoutId = setTimeout(() => {\r\n      saveCart(user.id);\r\n    }, 1000);\r\n\r\n    return () => clearTimeout(timeoutId);\r\n  }, [cartItems, user, isLoaded, saveCart]);\r\n\r\n  // Función para limpiar carrito al cerrar sesión\r\n  const handleSignOut = useCallback(() => {\r\n    dispatch(removeAllItemsFromCart());\r\n    clearCartFromStorage();\r\n  }, [dispatch]);\r\n\r\n  return {\r\n    isAuthenticated: !!user,\r\n    userId: user?.id,\r\n    cartItems,\r\n    migrateCart,\r\n    saveCart,\r\n    handleSignOut,\r\n  };\r\n};\r\n\r\n// Hook simplificado para componentes que solo necesitan el estado del carrito\r\nexport const useCart = () => {\r\n  const cartItems = useAppSelector(selectCartItems);\r\n  const dispatch = useAppDispatch();\r\n\r\n  return {\r\n    cartItems,\r\n    dispatch,\r\n  };\r\n};\r\n"],"names":["useCart","useCartWithClerk","user","isLoaded","useAuth","dispatch","useAppDispatch","cartItems","useAppSelector","selectCartItems","migrateCart","useCallback","userId","temporaryItems","loadCartFromStorage","length","migrationSuccess","migrateTemporaryCart","clearCartFromStorage","userCartItems","loadUserCart","replaceCart","error","console","saveCart","saveUserCart","useEffect","id","persistedItems","hydrateCart","timeoutId","setTimeout","clearTimeout","handleSignOut","removeAllItemsFromCart","isAuthenticated"],"mappings":"AAAA,sCAAsC;AACtC,wDAAwD;AACxD,sCAAsC;;;;;;;;;;;;QA+GzBA;eAAAA;;QA3FAC;eAAAA;;;uBAlB0B;yBACf;uBACuB;2BAMxC;iCAOA;AAGA,MAAMA,mBAAmB;IAC9B,MAAM,EAAEC,IAAI,EAAEC,QAAQ,EAAE,GAAGC,IAAAA,gBAAO;IAClC,MAAMC,WAAWC,IAAAA,qBAAc;IAC/B,MAAMC,YAAYC,IAAAA,qBAAc,EAACC,0BAAe;IAEhD,6DAA6D;IAC7D,MAAMC,cAAcC,IAAAA,kBAAW,EAAC,OAAOC;QACrC,IAAI;YACF,iCAAiC;YACjC,MAAMC,iBAAiBC,IAAAA,oCAAmB;YAE1C,IAAID,eAAeE,MAAM,GAAG,GAAG;gBAE7B,kDAAkD;gBAClD,MAAMC,mBAAmB,MAAMC,IAAAA,qCAAoB,EAACJ,gBAAgBD;gBAEpE,IAAII,kBAAkB;oBACpB,oDAAoD;oBACpDE,IAAAA,qCAAoB;gBACtB;YACF;YAEA,sEAAsE;YACtE,MAAMC,gBAAgB,MAAMC,IAAAA,6BAAY,EAACR;YAEzC,yDAAyD;YACzD,IAAIO,cAAcJ,MAAM,GAAG,GAAG;gBAC5BV,SAASgB,IAAAA,sBAAW,EAACF;YACvB;QAEF,EAAE,OAAOG,OAAO;YACdC,QAAQD,KAAK,CAAC,gCAAgCA;QAChD;IACF,GAAG;QAACjB;KAAS;IAEb,uDAAuD;IACvD,MAAMmB,WAAWb,IAAAA,kBAAW,EAAC,OAAOC;QAClC,IAAI;YACF,IAAIL,UAAUQ,MAAM,GAAG,GAAG;gBACxB,MAAMU,IAAAA,6BAAY,EAACb,QAAQL;YAC7B;QACF,EAAE,OAAOe,OAAO;YACdC,QAAQD,KAAK,CAAC,2BAA2BA;QAC3C;IACF,GAAG;QAACf;KAAU;IAEd,4DAA4D;IAC5DmB,IAAAA,gBAAS,EAAC;QACR,IAAI,CAACvB,UAAU;QAEf,IAAID,MAAM;YACR,0DAA0D;YAC1DQ,YAAYR,KAAKyB,EAAE;QACrB,OAAO;YACL,qDAAqD;YACrD,MAAMC,iBAAiBd,IAAAA,oCAAmB;YAC1C,IAAIc,eAAeb,MAAM,GAAG,GAAG;gBAC7BV,SAASwB,IAAAA,sBAAW,EAACD;YACvB;QACF;IACF,GAAG;QAAC1B;QAAMC;QAAUE;QAAUK;KAAY;IAE1C,mEAAmE;IACnEgB,IAAAA,gBAAS,EAAC;QACR,IAAI,CAACvB,YAAY,CAACD,MAAM;QAExB,2CAA2C;QAC3C,MAAM4B,YAAYC,WAAW;YAC3BP,SAAStB,KAAKyB,EAAE;QAClB,GAAG;QAEH,OAAO,IAAMK,aAAaF;IAC5B,GAAG;QAACvB;QAAWL;QAAMC;QAAUqB;KAAS;IAExC,gDAAgD;IAChD,MAAMS,gBAAgBtB,IAAAA,kBAAW,EAAC;QAChCN,SAAS6B,IAAAA,iCAAsB;QAC/BhB,IAAAA,qCAAoB;IACtB,GAAG;QAACb;KAAS;IAEb,OAAO;QACL8B,iBAAiB,CAAC,CAACjC;QACnBU,QAAQV,MAAMyB;QACdpB;QACAG;QACAc;QACAS;IACF;AACF;AAGO,MAAMjC,UAAU;IACrB,MAAMO,YAAYC,IAAAA,qBAAc,EAACC,0BAAe;IAChD,MAAMJ,WAAWC,IAAAA,qBAAc;IAE/B,OAAO;QACLC;QACAF;IACF;AACF"}