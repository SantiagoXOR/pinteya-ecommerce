{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\admin\\LazyAdminDashboard.tsx"],"sourcesContent":["// ===================================\n// PINTEYA E-COMMERCE - LAZY ADMIN DASHBOARD\n// Componente con lazy loading para el dashboard principal de admin\n// ===================================\n\n\"use client\";\n\nimport React, { lazy, Suspense } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { \n  Package, \n  ShoppingCart, \n  Users, \n  BarChart3,\n  Settings,\n  Monitor,\n  Truck,\n  AlertTriangle\n} from 'lucide-react';\n\n// ===================================\n// LAZY IMPORTS\n// ===================================\n\n// Lazy loading del dashboard principal\nconst AdminDashboard = lazy(() => import('@/app/admin/page'));\n\n// Lazy loading de componentes pesados\nconst MonitoringEnterprise = lazy(() => import('@/app/admin/monitoring/enterprise/page'));\nconst LogisticsDashboard = lazy(() => import('@/app/admin/logistics/page'));\n\n// ===================================\n// SKELETON COMPONENTS\n// ===================================\n\nfunction AdminDashboardSkeleton() {\n  return (\n    <div className=\"min-h-screen bg-gray-50 p-6\">\n      {/* Header Skeleton */}\n      <div className=\"mb-8\">\n        <Skeleton className=\"h-8 w-64 mb-2\" />\n        <Skeleton className=\"h-4 w-96\" />\n      </div>\n\n      {/* Stats Cards Skeleton */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n        {Array.from({ length: 4 }).map((_, i) => (\n          <Card key={i}>\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <Skeleton className=\"h-4 w-24\" />\n              <Skeleton className=\"h-4 w-4 rounded\" />\n            </CardHeader>\n            <CardContent>\n              <Skeleton className=\"h-8 w-16 mb-2\" />\n              <Skeleton className=\"h-3 w-32\" />\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n\n      {/* Navigation Cards Skeleton */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {Array.from({ length: 6 }).map((_, i) => (\n          <Card key={i} className=\"hover:shadow-lg transition-shadow\">\n            <CardHeader>\n              <div className=\"flex items-center space-x-3\">\n                <Skeleton className=\"h-10 w-10 rounded\" />\n                <div className=\"space-y-2\">\n                  <Skeleton className=\"h-5 w-24\" />\n                  <Skeleton className=\"h-3 w-32\" />\n                </div>\n              </div>\n            </CardHeader>\n            <CardContent>\n              <Skeleton className=\"h-4 w-20\" />\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nfunction MonitoringSkeleton() {\n  return (\n    <div className=\"space-y-6 p-6\">\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        {Array.from({ length: 4 }).map((_, i) => (\n          <Card key={i}>\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <Skeleton className=\"h-4 w-20\" />\n              <Monitor className=\"h-4 w-4 text-muted-foreground\" />\n            </CardHeader>\n            <CardContent>\n              <Skeleton className=\"h-8 w-16 mb-2\" />\n              <Skeleton className=\"h-3 w-24\" />\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n      \n      {/* Charts Skeleton */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <Card>\n          <CardHeader>\n            <Skeleton className=\"h-6 w-32\" />\n          </CardHeader>\n          <CardContent>\n            <Skeleton className=\"h-64 w-full\" />\n          </CardContent>\n        </Card>\n        <Card>\n          <CardHeader>\n            <Skeleton className=\"h-6 w-32\" />\n          </CardHeader>\n          <CardContent>\n            <Skeleton className=\"h-64 w-full\" />\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n\nfunction LogisticsSkeleton() {\n  return (\n    <div className=\"space-y-6 p-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <Skeleton className=\"h-8 w-48 mb-2\" />\n          <Skeleton className=\"h-4 w-64\" />\n        </div>\n        <Skeleton className=\"h-10 w-32\" />\n      </div>\n\n      {/* Metrics Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        {Array.from({ length: 4 }).map((_, i) => (\n          <Card key={i}>\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <Skeleton className=\"h-4 w-20\" />\n              <Truck className=\"h-4 w-4 text-muted-foreground\" />\n            </CardHeader>\n            <CardContent>\n              <Skeleton className=\"h-8 w-16 mb-2\" />\n              <Skeleton className=\"h-3 w-24\" />\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n\n      {/* Map and Table */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <Card>\n          <CardHeader>\n            <Skeleton className=\"h-6 w-32\" />\n          </CardHeader>\n          <CardContent>\n            <Skeleton className=\"h-96 w-full\" />\n          </CardContent>\n        </Card>\n        <Card>\n          <CardHeader>\n            <Skeleton className=\"h-6 w-32\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-3\">\n              {Array.from({ length: 5 }).map((_, i) => (\n                <div key={i} className=\"flex items-center space-x-3\">\n                  <Skeleton className=\"h-4 w-4 rounded\" />\n                  <Skeleton className=\"h-4 w-24\" />\n                  <Skeleton className=\"h-4 w-16\" />\n                  <Skeleton className=\"h-4 w-20\" />\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n\n// ===================================\n// ERROR BOUNDARY\n// ===================================\n\ninterface ErrorBoundaryState {\n  hasError: boolean;\n  error?: Error;\n}\n\nclass LazyLoadErrorBoundary extends React.Component<\n  React.PropsWithChildren<{}>,\n  ErrorBoundaryState\n> {\n  constructor(props: React.PropsWithChildren<{}>) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error: Error): ErrorBoundaryState {\n    return { hasError: true, error };\n  }\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n    console.error('Lazy loading error:', error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div className=\"flex items-center justify-center min-h-[400px]\">\n          <Card className=\"w-full max-w-md\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2 text-red-600\">\n                <AlertTriangle className=\"h-5 w-5\" />\n                Error de Carga\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <p className=\"text-sm text-gray-600 mb-4\">\n                No se pudo cargar el componente. Por favor, recarga la página.\n              </p>\n              <button\n                onClick={() => window.location.reload()}\n                className=\"w-full px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n              >\n                Recargar Página\n              </button>\n            </CardContent>\n          </Card>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\n// ===================================\n// LAZY COMPONENTS\n// ===================================\n\nexport function LazyAdminDashboard() {\n  return (\n    <Suspense fallback={<AdminDashboardSkeleton />}>\n      <LazyLoadErrorBoundary>\n        <AdminDashboard />\n      </LazyLoadErrorBoundary>\n    </Suspense>\n  );\n}\n\nexport function LazyMonitoringEnterprise() {\n  return (\n    <Suspense fallback={<MonitoringSkeleton />}>\n      <LazyLoadErrorBoundary>\n        <MonitoringEnterprise />\n      </LazyLoadErrorBoundary>\n    </Suspense>\n  );\n}\n\nexport function LazyLogisticsDashboard() {\n  return (\n    <Suspense fallback={<LogisticsSkeleton />}>\n      <LazyLoadErrorBoundary>\n        <LogisticsDashboard />\n      </LazyLoadErrorBoundary>\n    </Suspense>\n  );\n}\n\n// ===================================\n// PRELOADING HOOKS\n// ===================================\n\nexport function usePreloadAdminComponents() {\n  const preloadAdmin = React.useCallback(() => {\n    import('@/app/admin/page');\n  }, []);\n\n  const preloadMonitoring = React.useCallback(() => {\n    import('@/app/admin/monitoring/enterprise/page');\n  }, []);\n\n  const preloadLogistics = React.useCallback(() => {\n    import('@/app/admin/logistics/page');\n  }, []);\n\n  return {\n    preloadAdmin,\n    preloadMonitoring,\n    preloadLogistics\n  };\n}\n\n// ===================================\n// PREFETCH COMPONENT\n// ===================================\n\nexport function AdminComponentsPrefetch() {\n  const { preloadAdmin, preloadMonitoring, preloadLogistics } = usePreloadAdminComponents();\n\n  React.useEffect(() => {\n    // Precargar componentes después de un delay\n    const timer = setTimeout(() => {\n      preloadAdmin();\n      preloadMonitoring();\n      preloadLogistics();\n    }, 2000);\n\n    return () => clearTimeout(timer);\n  }, [preloadAdmin, preloadMonitoring, preloadLogistics]);\n\n  return null;\n}\n"],"names":["AdminComponentsPrefetch","LazyAdminDashboard","LazyLogisticsDashboard","LazyMonitoringEnterprise","usePreloadAdminComponents","AdminDashboard","lazy","MonitoringEnterprise","LogisticsDashboard","AdminDashboardSkeleton","div","className","Skeleton","Array","from","length","map","_","i","Card","CardHeader","CardContent","MonitoringSkeleton","Monitor","LogisticsSkeleton","Truck","LazyLoadErrorBoundary","React","Component","props","state","hasError","getDerivedStateFromError","error","componentDidCatch","errorInfo","console","render","CardTitle","AlertTriangle","p","button","onClick","window","location","reload","children","Suspense","fallback","preloadAdmin","useCallback","preloadMonitoring","preloadLogistics","useEffect","timer","setTimeout","clearTimeout"],"mappings":"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"}