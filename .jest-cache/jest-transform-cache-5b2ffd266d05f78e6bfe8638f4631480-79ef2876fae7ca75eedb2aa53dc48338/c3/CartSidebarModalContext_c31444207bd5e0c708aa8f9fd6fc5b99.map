{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\context\\CartSidebarModalContext.tsx"],"sourcesContent":["\"use client\";\nimport React, { createContext, useContext, useState } from \"react\";\n\ninterface CartModalContextType {\n  isCartModalOpen: boolean;\n  openCartModal: () => void;\n  closeCartModal: () => void;\n}\n\nconst CartModalContext = createContext<CartModalContextType | undefined>(\n  undefined\n);\n\nexport const useCartModalContext = () => {\n  const context = useContext(CartModalContext);\n  if (!context) {\n    throw new Error(\"useModalContext must be used within a ModalProvider\");\n  }\n  return context;\n};\n\nexport const CartModalProvider = ({ children }: { children: React.ReactNode }) => {\n  const [isCartModalOpen, setIsCartModalOpen] = useState(false);\n\n  const openCartModal = () => {\n    setIsCartModalOpen(true);\n  };\n\n  const closeCartModal = () => {\n    setIsCartModalOpen(false);\n  };\n\n  return (\n    <CartModalContext.Provider\n      value={{ isCartModalOpen, openCartModal, closeCartModal }}\n    >\n      {children}\n    </CartModalContext.Provider>\n  );\n};\n"],"names":["CartModalProvider","useCartModalContext","CartModalContext","createContext","undefined","context","useContext","Error","children","isCartModalOpen","setIsCartModalOpen","useState","openCartModal","closeCartModal","Provider","value"],"mappings":"AAAA;;;;;;;;;;;;IAqBaA,iBAAiB;eAAjBA;;IARAC,mBAAmB;eAAnBA;;;;+DAZ8C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQ3D,MAAMC,iCAAmBC,IAAAA,oBAAa,EACpCC;AAGK,MAAMH,sBAAsB;IACjC,MAAMI,UAAUC,IAAAA,iBAAU,EAACJ;IAC3B,IAAI,CAACG,SAAS;QACZ,MAAM,IAAIE,MAAM;IAClB;IACA,OAAOF;AACT;AAEO,MAAML,oBAAoB,CAAC,EAAEQ,QAAQ,EAAiC;IAC3E,MAAM,CAACC,iBAAiBC,mBAAmB,GAAGC,IAAAA,eAAQ,EAAC;IAEvD,MAAMC,gBAAgB;QACpBF,mBAAmB;IACrB;IAEA,MAAMG,iBAAiB;QACrBH,mBAAmB;IACrB;IAEA,qBACE,qBAACR,iBAAiBY,QAAQ;QACxBC,OAAO;YAAEN;YAAiBG;YAAeC;QAAe;kBAEvDL;;AAGP"}