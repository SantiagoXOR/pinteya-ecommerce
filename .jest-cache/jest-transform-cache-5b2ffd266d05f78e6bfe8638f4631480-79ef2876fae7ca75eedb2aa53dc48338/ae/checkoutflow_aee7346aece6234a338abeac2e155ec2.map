{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\ui\\checkout-flow.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\n// Progress component inline (simple implementation)\r\nimport { Separator } from \"@/components/ui/separator\"\r\nimport { ShippingInfo } from \"@/components/ui/shipping-info\"\r\nimport { CartSummary } from \"@/components/ui/cart-summary\"\r\nimport { \r\n  CheckCircle, \r\n  CreditCard, \r\n  MapPin, \r\n  Package, \r\n  Truck, \r\n  User,\r\n  ArrowLeft,\r\n  ArrowRight,\r\n  AlertCircle\r\n} from \"lucide-react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nexport interface CheckoutStep {\r\n  id: string\r\n  title: string\r\n  description: string\r\n  icon: React.ComponentType<{ className?: string }>\r\n  isCompleted?: boolean\r\n  isActive?: boolean\r\n  isDisabled?: boolean\r\n}\r\n\r\nexport interface CheckoutFlowProps {\r\n  /** Paso actual del checkout */\r\n  currentStep: number\r\n  /** Pasos del checkout */\r\n  steps?: CheckoutStep[]\r\n  /** Items del carrito */\r\n  cartItems: any[]\r\n  /** Datos del checkout */\r\n  checkoutData?: {\r\n    totalPrice: number\r\n    shippingCost?: number\r\n    discount?: number\r\n    finalTotal?: number\r\n    shippingMethod?: 'free' | 'standard' | 'express'\r\n    appliedCoupon?: any\r\n  }\r\n  /** Estado de carga */\r\n  isLoading?: boolean\r\n  /** Errores */\r\n  errors?: Record<string, string>\r\n  /** Callback para cambiar paso */\r\n  onStepChange?: (step: number) => void\r\n  /** Callback para continuar */\r\n  onContinue?: () => void\r\n  /** Callback para retroceder */\r\n  onGoBack?: () => void\r\n  /** Callback para finalizar checkout */\r\n  onComplete?: () => void\r\n  /** Mostrar resumen del carrito */\r\n  showCartSummary?: boolean\r\n  /** Variante del componente */\r\n  variant?: 'default' | 'compact' | 'detailed'\r\n  /** Clase CSS adicional */\r\n  className?: string\r\n  /** Contenido personalizado para cada paso */\r\n  children?: React.ReactNode\r\n}\r\n\r\nconst defaultSteps: CheckoutStep[] = [\r\n  {\r\n    id: 'cart',\r\n    title: 'Carrito',\r\n    description: 'Revisar productos',\r\n    icon: Package,\r\n  },\r\n  {\r\n    id: 'shipping',\r\n    title: 'Envío',\r\n    description: 'Dirección y método',\r\n    icon: Truck,\r\n  },\r\n  {\r\n    id: 'billing',\r\n    title: 'Facturación',\r\n    description: 'Datos personales',\r\n    icon: User,\r\n  },\r\n  {\r\n    id: 'payment',\r\n    title: 'Pago',\r\n    description: 'Método de pago',\r\n    icon: CreditCard,\r\n  },\r\n  {\r\n    id: 'confirmation',\r\n    title: 'Confirmación',\r\n    description: 'Revisar pedido',\r\n    icon: CheckCircle,\r\n  },\r\n]\r\n\r\n/**\r\n * CheckoutFlow avanzado con integración del Design System\r\n * \r\n * Características:\r\n * - Flujo paso a paso con indicador de progreso\r\n * - Integra ShippingInfo para opciones de envío\r\n * - Integra CartSummary para resumen del pedido\r\n * - Manejo de estados (loading, errores, validación)\r\n * - Navegación entre pasos\r\n * - Responsive design\r\n */\r\nexport const CheckoutFlow = React.forwardRef<HTMLDivElement, CheckoutFlowProps>(\r\n  ({\r\n    currentStep = 0,\r\n    steps = defaultSteps,\r\n    cartItems = [],\r\n    checkoutData = {},\r\n    isLoading = false,\r\n    errors = {},\r\n    onStepChange,\r\n    onContinue,\r\n    onGoBack,\r\n    onComplete,\r\n    showCartSummary = true,\r\n    variant = 'default',\r\n    className,\r\n    children,\r\n    ...props\r\n  }, ref) => {\r\n    const isCompact = variant === 'compact'\r\n    const isDetailed = variant === 'detailed'\r\n    \r\n    // Calcular progreso\r\n    const progress = ((currentStep + 1) / steps.length) * 100\r\n    \r\n    // Paso actual\r\n    const activeStep = steps[currentStep]\r\n    \r\n    // Marcar pasos como completados/activos\r\n    const stepsWithStatus = steps.map((step, index) => ({\r\n      ...step,\r\n      isCompleted: index < currentStep,\r\n      isActive: index === currentStep,\r\n      isDisabled: index > currentStep,\r\n    }))\r\n\r\n    const handleStepClick = (stepIndex: number) => {\r\n      if (onStepChange && stepIndex <= currentStep) {\r\n        onStepChange(stepIndex)\r\n      }\r\n    }\r\n\r\n    const canGoBack = currentStep > 0\r\n    const canContinue = currentStep < steps.length - 1\r\n    const isLastStep = currentStep === steps.length - 1\r\n\r\n    return (\r\n      <div ref={ref} className={cn(\"w-full space-y-6\", className)} {...props}>\r\n        {/* Indicador de progreso */}\r\n        {!isCompact && (\r\n          <Card>\r\n            <CardHeader className=\"pb-4\">\r\n              <div className=\"flex items-center justify-between mb-2\">\r\n                <CardTitle className=\"text-lg\">Proceso de Compra</CardTitle>\r\n                <Badge variant=\"outline\">\r\n                  Paso {currentStep + 1} de {steps.length}\r\n                </Badge>\r\n              </div>\r\n              {/* Progress bar simple */}\r\n              <div className=\"w-full bg-gray-200 rounded-full h-2\">\r\n                <div\r\n                  className=\"bg-primary h-2 rounded-full transition-all duration-300\"\r\n                  style={{ width: `${progress}%` }}\r\n                />\r\n              </div>\r\n            </CardHeader>\r\n            <CardContent>\r\n              {/* Pasos */}\r\n              <div className=\"flex items-center justify-between\">\r\n                {stepsWithStatus.map((step, index) => {\r\n                  const Icon = step.icon\r\n                  return (\r\n                    <div\r\n                      key={step.id}\r\n                      className={cn(\r\n                        \"flex flex-col items-center cursor-pointer transition-colors\",\r\n                        step.isActive && \"text-primary\",\r\n                        step.isCompleted && \"text-green-600\",\r\n                        step.isDisabled && \"text-gray-400 cursor-not-allowed\"\r\n                      )}\r\n                      onClick={() => handleStepClick(index)}\r\n                    >\r\n                      <div\r\n                        className={cn(\r\n                          \"w-10 h-10 rounded-full border-2 flex items-center justify-center mb-2 transition-colors\",\r\n                          step.isActive && \"border-primary bg-primary text-white\",\r\n                          step.isCompleted && \"border-green-600 bg-green-600 text-white\",\r\n                          step.isDisabled && \"border-gray-300\"\r\n                        )}\r\n                      >\r\n                        {step.isCompleted ? (\r\n                          <CheckCircle className=\"w-5 h-5\" />\r\n                        ) : (\r\n                          <Icon className=\"w-5 h-5\" />\r\n                        )}\r\n                      </div>\r\n                      <div className=\"text-center\">\r\n                        <p className={cn(\r\n                          \"text-sm font-medium\",\r\n                          step.isActive && \"text-primary\",\r\n                          step.isCompleted && \"text-green-600\"\r\n                        )}>\r\n                          {step.title}\r\n                        </p>\r\n                        <p className=\"text-xs text-gray-500 hidden sm:block\">\r\n                          {step.description}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  )\r\n                })}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        )}\r\n\r\n        {/* Contenido principal */}\r\n        <div className={cn(\r\n          \"grid gap-6\",\r\n          showCartSummary ? \"lg:grid-cols-3\" : \"lg:grid-cols-1\"\r\n        )}>\r\n          {/* Contenido del paso actual */}\r\n          <div className={cn(showCartSummary ? \"lg:col-span-2\" : \"lg:col-span-1\")}>\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center gap-2\">\r\n                  {activeStep && (\r\n                    <>\r\n                      <activeStep.icon className=\"w-5 h-5 text-primary\" />\r\n                      {activeStep.title}\r\n                    </>\r\n                  )}\r\n                </CardTitle>\r\n                {activeStep?.description && (\r\n                  <p className=\"text-gray-600\">{activeStep.description}</p>\r\n                )}\r\n              </CardHeader>\r\n              <CardContent>\r\n                {/* Errores */}\r\n                {Object.keys(errors).length > 0 && (\r\n                  <div className=\"mb-4 p-4 bg-red-50 border border-red-200 rounded-md\">\r\n                    <div className=\"flex items-center gap-2 text-red-800 mb-2\">\r\n                      <AlertCircle className=\"w-4 h-4\" />\r\n                      <span className=\"font-medium\">Hay errores que corregir:</span>\r\n                    </div>\r\n                    <ul className=\"text-sm text-red-700 space-y-1\">\r\n                      {Object.entries(errors).map(([field, error]) => (\r\n                        <li key={field}>• {error}</li>\r\n                      ))}\r\n                    </ul>\r\n                  </div>\r\n                )}\r\n\r\n                {/* Contenido específico del paso */}\r\n                {children}\r\n\r\n                {/* Información de envío en el paso correspondiente */}\r\n                {activeStep?.id === 'shipping' && (\r\n                  <div className=\"mt-6\">\r\n                    <h3 className=\"text-lg font-semibold mb-4\">Opciones de Envío</h3>\r\n                    <ShippingInfo\r\n                      variant={isDetailed ? \"card\" : \"default\"}\r\n                      options={[\r\n                        {\r\n                          id: 'free',\r\n                          name: 'Envío gratis',\r\n                          price: 0,\r\n                          estimatedDays: { min: 5, max: 7 },\r\n                          isFree: true,\r\n                          description: 'En compras mayores a $50.000'\r\n                        },\r\n                        {\r\n                          id: 'standard',\r\n                          name: 'Envío estándar',\r\n                          price: 2500,\r\n                          estimatedDays: { min: 3, max: 5 },\r\n                          description: 'Entrega a domicilio'\r\n                        },\r\n                        {\r\n                          id: 'express',\r\n                          name: 'Envío express',\r\n                          price: 4500,\r\n                          estimatedDays: { min: 1, max: 2 },\r\n                          isExpress: true,\r\n                          description: 'Entrega prioritaria'\r\n                        }\r\n                      ]}\r\n                      selectedOption={checkoutData.shippingMethod}\r\n                      showCalculator={true}\r\n                      showGuarantees={true}\r\n                    />\r\n                  </div>\r\n                )}\r\n\r\n                {/* Navegación */}\r\n                <div className=\"flex items-center justify-between mt-8 pt-6 border-t\">\r\n                  <Button\r\n                    variant=\"outline\"\r\n                    onClick={onGoBack}\r\n                    disabled={!canGoBack || isLoading}\r\n                    className=\"flex items-center gap-2\"\r\n                  >\r\n                    <ArrowLeft className=\"w-4 h-4\" />\r\n                    Anterior\r\n                  </Button>\r\n\r\n                  {isLastStep ? (\r\n                    <Button\r\n                      onClick={onComplete}\r\n                      disabled={isLoading}\r\n                      className=\"flex items-center gap-2\"\r\n                      size=\"lg\"\r\n                    >\r\n                      {isLoading ? (\r\n                        <>\r\n                          <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\" />\r\n                          Procesando...\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <CheckCircle className=\"w-4 h-4\" />\r\n                          Finalizar Compra\r\n                        </>\r\n                      )}\r\n                    </Button>\r\n                  ) : (\r\n                    <Button\r\n                      onClick={onContinue}\r\n                      disabled={!canContinue || isLoading}\r\n                      className=\"flex items-center gap-2\"\r\n                    >\r\n                      Continuar\r\n                      <ArrowRight className=\"w-4 h-4\" />\r\n                    </Button>\r\n                  )}\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          {/* Resumen del carrito */}\r\n          {showCartSummary && (\r\n            <div className=\"lg:col-span-1\">\r\n              <div className=\"sticky top-4\">\r\n                <CartSummary\r\n                  cartItems={cartItems}\r\n                  totalPrice={checkoutData.totalPrice || 0}\r\n                  shippingCost={checkoutData.shippingCost}\r\n                  discount={checkoutData.discount}\r\n                  finalTotal={checkoutData.finalTotal}\r\n                  shippingMethod={checkoutData.shippingMethod}\r\n                  appliedCoupon={checkoutData.appliedCoupon}\r\n                  variant={isCompact ? \"compact\" : \"default\"}\r\n                  showProductCards={isDetailed}\r\n                  productCardContext=\"checkout\"\r\n                  showShippingDetails={activeStep?.id === 'shipping'}\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n)\r\n\r\nCheckoutFlow.displayName = \"CheckoutFlow\"\r\n"],"names":["CheckoutFlow","defaultSteps","id","title","description","icon","Package","Truck","User","CreditCard","CheckCircle","React","forwardRef","currentStep","steps","cartItems","checkoutData","isLoading","errors","onStepChange","onContinue","onGoBack","onComplete","showCartSummary","variant","className","children","props","ref","isCompact","isDetailed","progress","length","activeStep","stepsWithStatus","map","step","index","isCompleted","isActive","isDisabled","handleStepClick","stepIndex","canGoBack","canContinue","isLastStep","div","cn","Card","CardHeader","CardTitle","Badge","style","width","CardContent","Icon","onClick","p","Object","keys","AlertCircle","span","ul","entries","field","error","li","h3","ShippingInfo","options","name","price","estimatedDays","min","max","isFree","isExpress","selectedOption","shippingMethod","showCalculator","showGuarantees","Button","disabled","ArrowLeft","size","ArrowRight","CartSummary","totalPrice","shippingCost","discount","finalTotal","appliedCoupon","showProductCards","productCardContext","showShippingDetails","displayName"],"mappings":"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"}