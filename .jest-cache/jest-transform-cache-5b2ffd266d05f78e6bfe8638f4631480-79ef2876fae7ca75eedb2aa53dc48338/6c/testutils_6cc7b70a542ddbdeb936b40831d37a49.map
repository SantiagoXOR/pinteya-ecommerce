{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\__tests__\\utils\\test-utils.tsx"],"sourcesContent":["// ===================================\n// PINTEYA E-COMMERCE - TEST UTILITIES\n// ===================================\n\nimport React, { ReactElement } from 'react';\nimport { render, RenderOptions } from '@testing-library/react';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\n\n// ===================================\n// QUERY CLIENT PARA TESTS\n// ===================================\n\n/**\n * Crear QueryClient optimizado para tests\n * - Sin retry para tests más rápidos\n * - Sin cache para tests aislados\n * - Sin DevTools para evitar warnings\n */\nexport const createTestQueryClient = () => new QueryClient({\n  defaultOptions: {\n    queries: {\n      retry: false,\n      gcTime: 0,\n      staleTime: 0,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n  logger: {\n    log: () => {},\n    warn: () => {},\n    error: () => {},\n  },\n});\n\n// ===================================\n// WRAPPER PROVIDERS PARA TESTS\n// ===================================\n\ninterface AllTheProvidersProps {\n  children: React.ReactNode;\n  queryClient?: QueryClient;\n}\n\n/**\n * Wrapper que incluye todos los providers necesarios para tests\n */\nexport const AllTheProviders: React.FC<AllTheProvidersProps> = ({ \n  children, \n  queryClient = createTestQueryClient() \n}) => {\n  return (\n    <QueryClientProvider client={queryClient}>\n      {children}\n    </QueryClientProvider>\n  );\n};\n\n// ===================================\n// CUSTOM RENDER FUNCTION\n// ===================================\n\ninterface CustomRenderOptions extends Omit<RenderOptions, 'wrapper'> {\n  queryClient?: QueryClient;\n}\n\n/**\n * Custom render function que incluye automáticamente los providers\n */\nexport const renderWithProviders = (\n  ui: ReactElement,\n  options: CustomRenderOptions = {}\n) => {\n  const { queryClient, ...renderOptions } = options;\n  \n  const Wrapper: React.FC<{ children: React.ReactNode }> = ({ children }) => (\n    <AllTheProviders queryClient={queryClient}>\n      {children}\n    </AllTheProviders>\n  );\n\n  return render(ui, { wrapper: Wrapper, ...renderOptions });\n};\n\n// ===================================\n// HOOK TESTING UTILITIES\n// ===================================\n\n/**\n * Wrapper para testing de hooks que requieren QueryClient\n */\nexport const createHookWrapper = (queryClient?: QueryClient) => {\n  const client = queryClient || createTestQueryClient();\n  \n  return ({ children }: { children: React.ReactNode }) => (\n    <QueryClientProvider client={client}>\n      {children}\n    </QueryClientProvider>\n  );\n};\n\n// ===================================\n// MOCK UTILITIES\n// ===================================\n\n/**\n * Mock de localStorage para tests\n */\nexport const createMockLocalStorage = () => {\n  const store: Record<string, string> = {};\n  \n  return {\n    getItem: jest.fn((key: string) => store[key] || null),\n    setItem: jest.fn((key: string, value: string) => {\n      store[key] = value;\n    }),\n    removeItem: jest.fn((key: string) => {\n      delete store[key];\n    }),\n    clear: jest.fn(() => {\n      Object.keys(store).forEach(key => delete store[key]);\n    }),\n    length: Object.keys(store).length,\n    key: jest.fn((index: number) => Object.keys(store)[index] || null),\n  };\n};\n\n/**\n * Mock de sessionStorage para tests\n */\nexport const createMockSessionStorage = () => createMockLocalStorage();\n\n// ===================================\n// ASYNC UTILITIES\n// ===================================\n\n/**\n * Utility para esperar a que TanStack Query complete las operaciones\n */\nexport const waitForQueryToSettle = async (queryClient: QueryClient) => {\n  await queryClient.getQueryCache().clear();\n  await queryClient.getMutationCache().clear();\n};\n\n/**\n * Utility para limpiar el estado de TanStack Query entre tests\n */\nexport const cleanupQueryClient = (queryClient: QueryClient) => {\n  queryClient.clear();\n  queryClient.getQueryCache().clear();\n  queryClient.getMutationCache().clear();\n};\n\n// ===================================\n// EXPORTS\n// ===================================\n\n// Re-export everything from React Testing Library\nexport * from '@testing-library/react';\n\n// Override render method\nexport { renderWithProviders as render };\n"],"names":["AllTheProviders","cleanupQueryClient","createHookWrapper","createMockLocalStorage","createMockSessionStorage","createTestQueryClient","render","renderWithProviders","waitForQueryToSettle","QueryClient","defaultOptions","queries","retry","gcTime","staleTime","mutations","logger","log","warn","error","children","queryClient","QueryClientProvider","client","ui","options","renderOptions","Wrapper","wrapper","store","getItem","jest","fn","key","setItem","value","removeItem","clear","Object","keys","forEach","length","index","getQueryCache","getMutationCache"],"mappings":"AAAA,sCAAsC;AACtC,sCAAsC;AACtC,sCAAsC;;;;;;;;;;;;IA8CzBA,eAAe;eAAfA;;IAoGAC,kBAAkB;eAAlBA;;IAxDAC,iBAAiB;eAAjBA;;IAiBAC,sBAAsB;eAAtBA;;IAsBAC,wBAAwB;eAAxBA;;IAjHAC,qBAAqB;eAArBA;;IAgJmBC,MAAM;eAA7BC;;IA5FIA,mBAAmB;eAAnBA;;IAsEAC,oBAAoB;eAApBA;;;;8DAxIuB;qCACE;4BACW;;;;;;;;;;;;;;;;;;;AAY1C,MAAMH,wBAAwB,IAAM,IAAII,uBAAW,CAAC;QACzDC,gBAAgB;YACdC,SAAS;gBACPC,OAAO;gBACPC,QAAQ;gBACRC,WAAW;YACb;YACAC,WAAW;gBACTH,OAAO;YACT;QACF;QACAI,QAAQ;YACNC,KAAK,KAAO;YACZC,MAAM,KAAO;YACbC,OAAO,KAAO;QAChB;IACF;AAcO,MAAMnB,kBAAkD,CAAC,EAC9DoB,QAAQ,EACRC,cAAchB,uBAAuB,EACtC;IACC,qBACE,qBAACiB,+BAAmB;QAACC,QAAQF;kBAC1BD;;AAGP;AAaO,MAAMb,sBAAsB,CACjCiB,IACAC,UAA+B,CAAC,CAAC;IAEjC,MAAM,EAAEJ,WAAW,EAAE,GAAGK,eAAe,GAAGD;IAE1C,MAAME,UAAmD,CAAC,EAAEP,QAAQ,EAAE,iBACpE,qBAACpB;YAAgBqB,aAAaA;sBAC3BD;;IAIL,OAAOd,IAAAA,cAAM,EAACkB,IAAI;QAAEI,SAASD;QAAS,GAAGD,aAAa;IAAC;AACzD;AASO,MAAMxB,oBAAoB,CAACmB;IAChC,MAAME,SAASF,eAAehB;IAE9B,OAAO,CAAC,EAAEe,QAAQ,EAAiC,iBACjD,qBAACE,+BAAmB;YAACC,QAAQA;sBAC1BH;;AAGP;AASO,MAAMjB,yBAAyB;IACpC,MAAM0B,QAAgC,CAAC;IAEvC,OAAO;QACLC,SAASC,KAAKC,EAAE,CAAC,CAACC,MAAgBJ,KAAK,CAACI,IAAI,IAAI;QAChDC,SAASH,KAAKC,EAAE,CAAC,CAACC,KAAaE;YAC7BN,KAAK,CAACI,IAAI,GAAGE;QACf;QACAC,YAAYL,KAAKC,EAAE,CAAC,CAACC;YACnB,OAAOJ,KAAK,CAACI,IAAI;QACnB;QACAI,OAAON,KAAKC,EAAE,CAAC;YACbM,OAAOC,IAAI,CAACV,OAAOW,OAAO,CAACP,CAAAA,MAAO,OAAOJ,KAAK,CAACI,IAAI;QACrD;QACAQ,QAAQH,OAAOC,IAAI,CAACV,OAAOY,MAAM;QACjCR,KAAKF,KAAKC,EAAE,CAAC,CAACU,QAAkBJ,OAAOC,IAAI,CAACV,MAAM,CAACa,MAAM,IAAI;IAC/D;AACF;AAKO,MAAMtC,2BAA2B,IAAMD;AASvC,MAAMK,uBAAuB,OAAOa;IACzC,MAAMA,YAAYsB,aAAa,GAAGN,KAAK;IACvC,MAAMhB,YAAYuB,gBAAgB,GAAGP,KAAK;AAC5C;AAKO,MAAMpC,qBAAqB,CAACoB;IACjCA,YAAYgB,KAAK;IACjBhB,YAAYsB,aAAa,GAAGN,KAAK;IACjChB,YAAYuB,gBAAgB,GAAGP,KAAK;AACtC"}