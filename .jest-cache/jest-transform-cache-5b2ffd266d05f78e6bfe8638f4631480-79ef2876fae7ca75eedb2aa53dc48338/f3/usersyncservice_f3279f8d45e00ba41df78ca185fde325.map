{"version":3,"names":["cov_198xhq8jfh","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","bulkSyncUsersFromClerk","deleteUserFromSupabase","syncUserFromClerk","syncUserToSupabase","DEFAULT_SYNC_OPTIONS","retryAttempts","retryDelay","validateData","createMissingRole","logEvents","DEFAULT_ROLE_NAME","delay","ms","Promise","resolve","setTimeout","validateClerkUserData","userData","errors","id","push","email_addresses","length","primaryEmail","email_address","includes","valid","ensureDefaultRole","_supabase","supabaseAdmin","Error","data","role","error","from","select","eq","single","code","console","log","newRole","createError","insert","role_name","display_name","description","permissions","orders","create","read","update","delete","profile","is_active","is_system_role","clerkUserData","options","opts","lastError","validation","join","success","action","attempt","result","performUserSync","_securityaudit","logSecurityEvent","user_id","event_type","event_category","severity","metadata","email","delayMs","message","attempts","isEmailVerified","verification","status","existingUser","fetchError","or","clerk_user_id","first_name","last_name","is_verified","clerk_created_at","created_at","clerk_updated_at","updated_at","image_url","phone_numbers","public_metadata","last_sync","Date","toISOString","updatedUser","updateError","userId","details","previousData","newData","roleId","newUserData","role_id","newUser","insertError","existingUserRetry","retryError","clerkUserId","deletedUser","deleteError","deleted_at","deleted_by","original_clerk_id","user_email","client","_server","clerkClient","clerkUser","users","getUser","emailAddresses","map","emailAddress","strategy","firstName","lastName","createdAt","updatedAt","imageUrl","phoneNumbers","phone","phone_number","phoneNumber","publicMetadata","private_metadata","privateMetadata","batchSize","maxUsers","results","offset","totalProcessed","successful","failed","limit","Math","min","clerkUsers","getUserList","batchPromises","batchResults","allSettled","forEach","index","value","reason"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\auth\\user-sync-service.ts"],"sourcesContent":["/**\n * Servicio de Sincronización Automática de Usuarios\n * Maneja la sincronización robusta entre Clerk y Supabase con retry logic y manejo de errores\n */\n\nimport { clerkClient } from '@clerk/nextjs/server';\nimport { supabaseAdmin } from '@/lib/supabase';\nimport { logSecurityEvent, logAdminAction } from './security-audit';\n\n// =====================================================\n// TIPOS Y INTERFACES\n// =====================================================\n\nexport interface ClerkUserData {\n  id: string;\n  email_addresses: {\n    email_address: string;\n    id: string;\n    verification: {\n      status: string;\n      strategy: string;\n    };\n  }[];\n  first_name: string | null;\n  last_name: string | null;\n  created_at: number;\n  updated_at: number;\n  image_url?: string;\n  phone_numbers?: {\n    phone_number: string;\n    id: string;\n    verification: {\n      status: string;\n    };\n  }[];\n  public_metadata?: Record<string, any>;\n  private_metadata?: Record<string, any>;\n}\n\nexport interface UserSyncResult {\n  success: boolean;\n  action: 'created' | 'updated' | 'found_existing' | 'deleted' | 'error';\n  userId?: string;\n  error?: string;\n  details?: Record<string, any>;\n}\n\nexport interface SyncOptions {\n  retryAttempts?: number;\n  retryDelay?: number;\n  validateData?: boolean;\n  createMissingRole?: boolean;\n  logEvents?: boolean;\n}\n\n// =====================================================\n// CONFIGURACIÓN Y CONSTANTES\n// =====================================================\n\nconst DEFAULT_SYNC_OPTIONS: Required<SyncOptions> = {\n  retryAttempts: 3,\n  retryDelay: 1000, // 1 segundo\n  validateData: true,\n  createMissingRole: true,\n  logEvents: true\n};\n\nconst DEFAULT_ROLE_NAME = 'customer';\n\n// =====================================================\n// FUNCIONES DE UTILIDAD\n// =====================================================\n\n/**\n * Espera un tiempo determinado (para retry logic)\n */\nfunction delay(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n/**\n * Valida los datos del usuario de Clerk\n */\nfunction validateClerkUserData(userData: ClerkUserData): { valid: boolean; errors: string[] } {\n  const errors: string[] = [];\n\n  if (!userData.id) {\n    errors.push('ID de usuario de Clerk es requerido');\n  }\n\n  if (!userData.email_addresses || userData.email_addresses.length === 0) {\n    errors.push('Al menos un email es requerido');\n  } else {\n    const primaryEmail = userData.email_addresses[0]?.email_address;\n    if (!primaryEmail || !primaryEmail.includes('@')) {\n      errors.push('Email primario inválido');\n    }\n  }\n\n  return {\n    valid: errors.length === 0,\n    errors\n  };\n}\n\n/**\n * Obtiene o crea el rol por defecto\n */\nasync function ensureDefaultRole(): Promise<number | null> {\n  try {\n    if (!supabaseAdmin) {\n      throw new Error('Supabase admin client no disponible');\n    }\n\n    // Intentar obtener el rol customer\n    const { data: role, error } = await supabaseAdmin\n      .from('user_roles')\n      .select('id')\n      .eq('role_name', DEFAULT_ROLE_NAME)\n      .eq('is_active', true)\n      .single();\n\n    if (error && error.code !== 'PGRST116') {\n      throw error;\n    }\n\n    if (role) {\n      return role.id;\n    }\n\n    // Si no existe, crear el rol customer\n    console.log('[USER_SYNC] Creando rol customer por defecto...');\n    const { data: newRole, error: createError } = await supabaseAdmin\n      .from('user_roles')\n      .insert({\n        role_name: DEFAULT_ROLE_NAME,\n        display_name: 'Cliente',\n        description: 'Cliente regular del e-commerce',\n        permissions: {\n          orders: { create: true, read: true, update: false, delete: false },\n          profile: { read: true, update: true }\n        },\n        is_active: true,\n        is_system_role: true\n      })\n      .select('id')\n      .single();\n\n    if (createError) {\n      console.error('[USER_SYNC] Error creando rol por defecto:', createError);\n      return null;\n    }\n\n    return newRole.id;\n  } catch (error) {\n    console.error('[USER_SYNC] Error en ensureDefaultRole:', error);\n    return null;\n  }\n}\n\n// =====================================================\n// FUNCIONES PRINCIPALES DE SINCRONIZACIÓN\n// =====================================================\n\n/**\n * Sincroniza un usuario de Clerk con Supabase\n */\nexport async function syncUserToSupabase(\n  clerkUserData: ClerkUserData,\n  options: SyncOptions = {}\n): Promise<UserSyncResult> {\n  const opts = { ...DEFAULT_SYNC_OPTIONS, ...options };\n  let lastError: Error | null = null;\n\n  // Validar datos si está habilitado\n  if (opts.validateData) {\n    const validation = validateClerkUserData(clerkUserData);\n    if (!validation.valid) {\n      const error = `Datos de usuario inválidos: ${validation.errors.join(', ')}`;\n      console.error('[USER_SYNC]', error);\n      return { success: false, action: 'error', error };\n    }\n  }\n\n  // Retry logic\n  for (let attempt = 1; attempt <= opts.retryAttempts; attempt++) {\n    try {\n      console.log(`[USER_SYNC] Intento ${attempt}/${opts.retryAttempts} para usuario ${clerkUserData.id}`);\n\n      const result = await performUserSync(clerkUserData, opts);\n\n      // Log evento de éxito si está habilitado\n      if (opts.logEvents && result.success) {\n        await logSecurityEvent({\n          user_id: clerkUserData.id,\n          event_type: 'DATA_ACCESS',\n          event_category: 'data_access',\n          severity: 'low',\n          description: `Usuario sincronizado: ${result.action}`,\n          metadata: {\n            action: result.action,\n            email: clerkUserData.email_addresses[0]?.email_address,\n            attempt\n          }\n        });\n      }\n\n      return result;\n    } catch (error) {\n      lastError = error as Error;\n      console.error(`[USER_SYNC] Error en intento ${attempt}:`, error);\n\n      // Si no es el último intento, esperar antes de reintentar\n      if (attempt < opts.retryAttempts) {\n        const delayMs = opts.retryDelay * attempt; // Backoff exponencial\n        console.log(`[USER_SYNC] Esperando ${delayMs}ms antes del siguiente intento...`);\n        await delay(delayMs);\n      }\n    }\n  }\n\n  // Log evento de error si está habilitado\n  if (opts.logEvents) {\n    await logSecurityEvent({\n      user_id: clerkUserData.id,\n      event_type: 'SECURITY_VIOLATION',\n      event_category: 'data_access',\n      severity: 'medium',\n      description: `Error sincronizando usuario después de ${opts.retryAttempts} intentos`,\n      metadata: {\n        error: lastError?.message,\n        email: clerkUserData.email_addresses[0]?.email_address,\n        attempts: opts.retryAttempts\n      }\n    });\n  }\n\n  return {\n    success: false,\n    action: 'error',\n    error: `Error después de ${opts.retryAttempts} intentos: ${lastError?.message}`\n  };\n}\n\n/**\n * Realiza la sincronización real del usuario\n */\nasync function performUserSync(\n  clerkUserData: ClerkUserData,\n  options: Required<SyncOptions>\n): Promise<UserSyncResult> {\n  if (!supabaseAdmin) {\n    throw new Error('Supabase admin client no disponible');\n  }\n\n  const primaryEmail = clerkUserData.email_addresses[0]?.email_address;\n  const isEmailVerified = clerkUserData.email_addresses[0]?.verification?.status === 'verified';\n\n  // Verificar si el usuario ya existe\n  const { data: existingUser, error: fetchError } = await supabaseAdmin\n    .from('user_profiles')\n    .select('*')\n    .or(`email.eq.${primaryEmail},clerk_user_id.eq.${clerkUserData.id}`)\n    .single();\n\n  if (fetchError && fetchError.code !== 'PGRST116') {\n    throw new Error(`Error verificando usuario existente: ${fetchError.message}`);\n  }\n\n  // Preparar datos del usuario\n  const userData = {\n    clerk_user_id: clerkUserData.id,\n    email: primaryEmail,\n    first_name: clerkUserData.first_name,\n    last_name: clerkUserData.last_name,\n    is_verified: isEmailVerified,\n    is_active: true,\n    metadata: {\n      clerk_created_at: clerkUserData.created_at,\n      clerk_updated_at: clerkUserData.updated_at,\n      image_url: clerkUserData.image_url,\n      phone_numbers: clerkUserData.phone_numbers,\n      public_metadata: clerkUserData.public_metadata,\n      last_sync: new Date().toISOString()\n    },\n    updated_at: new Date().toISOString()\n  };\n\n  if (existingUser) {\n    // Actualizar usuario existente\n    const { data: updatedUser, error: updateError } = await supabaseAdmin\n      .from('user_profiles')\n      .update(userData)\n      .eq('id', existingUser.id)\n      .select('*')\n      .single();\n\n    if (updateError) {\n      throw new Error(`Error actualizando usuario: ${updateError.message}`);\n    }\n\n    return {\n      success: true,\n      action: 'updated',\n      userId: updatedUser.id,\n      details: { previousData: existingUser, newData: updatedUser }\n    };\n  } else {\n    // Crear nuevo usuario\n    let roleId: number | null = null;\n\n    if (options.createMissingRole) {\n      roleId = await ensureDefaultRole();\n    }\n\n    const newUserData = {\n      ...userData,\n      role_id: roleId\n    };\n\n    const { data: newUser, error: insertError } = await supabaseAdmin\n      .from('user_profiles')\n      .insert(newUserData)\n      .select('*')\n      .single();\n\n    if (insertError) {\n      // Manejar error de clave duplicada\n      if (insertError.code === '23505') {\n        console.log('[USER_SYNC] Usuario ya existe (clave duplicada), obteniendo usuario...');\n        const { data: existingUserRetry, error: retryError } = await supabaseAdmin\n          .from('user_profiles')\n          .select('*')\n          .or(`email.eq.${primaryEmail},clerk_user_id.eq.${clerkUserData.id}`)\n          .single();\n\n        if (!retryError && existingUserRetry) {\n          return {\n            success: true,\n            action: 'found_existing',\n            userId: existingUserRetry.id,\n            details: { userData: existingUserRetry }\n          };\n        }\n      }\n\n      throw new Error(`Error creando usuario: ${insertError.message}`);\n    }\n\n    return {\n      success: true,\n      action: 'created',\n      userId: newUser.id,\n      details: { userData: newUser }\n    };\n  }\n}\n\n/**\n * Elimina un usuario de Supabase (soft delete)\n */\nexport async function deleteUserFromSupabase(\n  clerkUserId: string,\n  options: SyncOptions = {}\n): Promise<UserSyncResult> {\n  const opts = { ...DEFAULT_SYNC_OPTIONS, ...options };\n  let lastError: Error | null = null;\n\n  // Retry logic\n  for (let attempt = 1; attempt <= opts.retryAttempts; attempt++) {\n    try {\n      console.log(`[USER_SYNC] Eliminando usuario ${clerkUserId} - Intento ${attempt}/${opts.retryAttempts}`);\n\n      if (!supabaseAdmin) {\n        throw new Error('Supabase admin client no disponible');\n      }\n\n      // Soft delete: marcar como inactivo en lugar de eliminar\n      const { data: deletedUser, error: deleteError } = await supabaseAdmin\n        .from('user_profiles')\n        .update({\n          is_active: false,\n          clerk_user_id: null, // Limpiar referencia a Clerk\n          metadata: {\n            deleted_at: new Date().toISOString(),\n            deleted_by: 'clerk_webhook',\n            original_clerk_id: clerkUserId\n          },\n          updated_at: new Date().toISOString()\n        })\n        .eq('clerk_user_id', clerkUserId)\n        .select('*')\n        .single();\n\n      if (deleteError && deleteError.code !== 'PGRST116') {\n        throw new Error(`Error eliminando usuario: ${deleteError.message}`);\n      }\n\n      if (!deletedUser) {\n        console.log(`[USER_SYNC] Usuario ${clerkUserId} no encontrado en Supabase`);\n        return {\n          success: true,\n          action: 'deleted',\n          details: { message: 'Usuario no encontrado en Supabase' }\n        };\n      }\n\n      // Log evento si está habilitado\n      if (opts.logEvents) {\n        await logSecurityEvent({\n          user_id: clerkUserId,\n          event_type: 'ADMIN_ACTION',\n          event_category: 'admin_operations',\n          severity: 'medium',\n          description: 'Usuario eliminado de Supabase',\n          metadata: {\n            action: 'soft_delete',\n            user_email: deletedUser.email,\n            attempt\n          }\n        });\n      }\n\n      return {\n        success: true,\n        action: 'deleted',\n        userId: deletedUser.id,\n        details: { deletedUser }\n      };\n    } catch (error) {\n      lastError = error as Error;\n      console.error(`[USER_SYNC] Error en intento ${attempt}:`, error);\n\n      if (attempt < opts.retryAttempts) {\n        const delayMs = opts.retryDelay * attempt;\n        await delay(delayMs);\n      }\n    }\n  }\n\n  return {\n    success: false,\n    action: 'error',\n    error: `Error después de ${opts.retryAttempts} intentos: ${lastError?.message}`\n  };\n}\n\n/**\n * Sincroniza un usuario desde Clerk usando su ID\n */\nexport async function syncUserFromClerk(\n  clerkUserId: string,\n  options: SyncOptions = {}\n): Promise<UserSyncResult> {\n  try {\n    console.log(`[USER_SYNC] Obteniendo usuario ${clerkUserId} desde Clerk...`);\n\n    const client = await clerkClient();\n    const clerkUser = await client.users.getUser(clerkUserId);\n\n    if (!clerkUser) {\n      return {\n        success: false,\n        action: 'error',\n        error: 'Usuario no encontrado en Clerk'\n      };\n    }\n\n    // Convertir datos de Clerk al formato esperado\n    const clerkUserData: ClerkUserData = {\n      id: clerkUser.id,\n      email_addresses: clerkUser.emailAddresses.map(email => ({\n        email_address: email.emailAddress,\n        id: email.id,\n        verification: {\n          status: email.verification?.status || 'unverified',\n          strategy: email.verification?.strategy || 'unknown'\n        }\n      })),\n      first_name: clerkUser.firstName,\n      last_name: clerkUser.lastName,\n      created_at: clerkUser.createdAt,\n      updated_at: clerkUser.updatedAt,\n      image_url: clerkUser.imageUrl,\n      phone_numbers: clerkUser.phoneNumbers?.map(phone => ({\n        phone_number: phone.phoneNumber,\n        id: phone.id,\n        verification: {\n          status: phone.verification?.status || 'unverified'\n        }\n      })),\n      public_metadata: clerkUser.publicMetadata,\n      private_metadata: clerkUser.privateMetadata\n    };\n\n    return await syncUserToSupabase(clerkUserData, options);\n  } catch (error) {\n    console.error('[USER_SYNC] Error obteniendo usuario de Clerk:', error);\n    return {\n      success: false,\n      action: 'error',\n      error: `Error obteniendo usuario de Clerk: ${error.message}`\n    };\n  }\n}\n\n/**\n * Sincronización masiva de usuarios desde Clerk\n */\nexport async function bulkSyncUsersFromClerk(\n  options: SyncOptions & { batchSize?: number; maxUsers?: number } = {}\n): Promise<{\n  success: boolean;\n  totalProcessed: number;\n  successful: number;\n  failed: number;\n  results: UserSyncResult[];\n}> {\n  const opts = {\n    ...DEFAULT_SYNC_OPTIONS,\n    batchSize: 10,\n    maxUsers: 100,\n    ...options\n  };\n\n  console.log('[USER_SYNC] Iniciando sincronización masiva de usuarios...');\n\n  try {\n    const client = await clerkClient();\n    const results: UserSyncResult[] = [];\n    let offset = 0;\n    let totalProcessed = 0;\n    let successful = 0;\n    let failed = 0;\n\n    while (totalProcessed < opts.maxUsers) {\n      const limit = Math.min(opts.batchSize, opts.maxUsers - totalProcessed);\n\n      console.log(`[USER_SYNC] Obteniendo batch ${offset}-${offset + limit}...`);\n\n      const clerkUsers = await client.users.getUserList({\n        limit,\n        offset\n      });\n\n      if (!clerkUsers || clerkUsers.length === 0) {\n        console.log('[USER_SYNC] No hay más usuarios para procesar');\n        break;\n      }\n\n      // Procesar usuarios en paralelo (con límite)\n      const batchPromises = clerkUsers.map(async (clerkUser) => {\n        const clerkUserData: ClerkUserData = {\n          id: clerkUser.id,\n          email_addresses: clerkUser.emailAddresses.map(email => ({\n            email_address: email.emailAddress,\n            id: email.id,\n            verification: {\n              status: email.verification?.status || 'unverified',\n              strategy: email.verification?.strategy || 'unknown'\n            }\n          })),\n          first_name: clerkUser.firstName,\n          last_name: clerkUser.lastName,\n          created_at: clerkUser.createdAt,\n          updated_at: clerkUser.updatedAt,\n          image_url: clerkUser.imageUrl,\n          phone_numbers: clerkUser.phoneNumbers?.map(phone => ({\n            phone_number: phone.phoneNumber,\n            id: phone.id,\n            verification: {\n              status: phone.verification?.status || 'unverified'\n            }\n          })),\n          public_metadata: clerkUser.publicMetadata,\n          private_metadata: clerkUser.privateMetadata\n        };\n\n        return await syncUserToSupabase(clerkUserData, {\n          ...opts,\n          logEvents: false // Evitar spam de logs en sync masivo\n        });\n      });\n\n      const batchResults = await Promise.allSettled(batchPromises);\n\n      batchResults.forEach((result, index) => {\n        if (result.status === 'fulfilled') {\n          results.push(result.value);\n          if (result.value.success) {\n            successful++;\n          } else {\n            failed++;\n          }\n        } else {\n          console.error(`[USER_SYNC] Error procesando usuario ${index}:`, result.reason);\n          results.push({\n            success: false,\n            action: 'error',\n            error: result.reason?.message || 'Error desconocido'\n          });\n          failed++;\n        }\n      });\n\n      totalProcessed += clerkUsers.length;\n      offset += limit;\n\n      // Pequeña pausa entre batches para no sobrecargar\n      if (totalProcessed < opts.maxUsers) {\n        await delay(500);\n      }\n    }\n\n    console.log(`[USER_SYNC] Sincronización masiva completada: ${successful} exitosos, ${failed} fallidos`);\n\n    return {\n      success: failed === 0,\n      totalProcessed,\n      successful,\n      failed,\n      results\n    };\n  } catch (error) {\n    console.error('[USER_SYNC] Error en sincronización masiva:', error);\n    return {\n      success: false,\n      totalProcessed: 0,\n      successful: 0,\n      failed: 1,\n      results: [{\n        success: false,\n        action: 'error',\n        error: `Error en sincronización masiva: ${error.message}`\n      }]\n    };\n  }\n}\n"],"mappings":"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","ignoreList":[]}