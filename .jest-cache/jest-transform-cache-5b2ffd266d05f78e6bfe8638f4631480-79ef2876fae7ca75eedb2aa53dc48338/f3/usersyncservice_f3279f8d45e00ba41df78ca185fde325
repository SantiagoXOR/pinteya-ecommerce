46441eaada08b1841c32efc9d6bb9340
/**
 * Servicio de Sincronización Automática de Usuarios
 * Maneja la sincronización robusta entre Clerk y Supabase con retry logic y manejo de errores
 */"use strict";

/* istanbul ignore next */
function cov_198xhq8jfh() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\auth\\user-sync-service.ts";
  var hash = "25e7ba22c1253d48f7e3ae76c54c7ee1b7f28e76";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\auth\\user-sync-service.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "2": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "3": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 27,
          column: 3
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 38
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 38
        }
      },
      "6": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 33
        }
      },
      "7": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 34
        }
      },
      "8": {
        start: {
          line: 28,
          column: 16
        },
        end: {
          line: 28,
          column: 47
        }
      },
      "9": {
        start: {
          line: 29,
          column: 18
        },
        end: {
          line: 29,
          column: 40
        }
      },
      "10": {
        start: {
          line: 30,
          column: 23
        },
        end: {
          line: 30,
          column: 50
        }
      },
      "11": {
        start: {
          line: 34,
          column: 29
        },
        end: {
          line: 40,
          column: 1
        }
      },
      "12": {
        start: {
          line: 41,
          column: 26
        },
        end: {
          line: 41,
          column: 36
        }
      },
      "13": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 48,
          column: 59
        }
      },
      "14": {
        start: {
          line: 48,
          column: 34
        },
        end: {
          line: 48,
          column: 57
        }
      },
      "15": {
        start: {
          line: 53,
          column: 19
        },
        end: {
          line: 53,
          column: 21
        }
      },
      "16": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 56,
          column: 5
        }
      },
      "17": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 59
        }
      },
      "18": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 64,
          column: 5
        }
      },
      "19": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 54
        }
      },
      "20": {
        start: {
          line: 60,
          column: 29
        },
        end: {
          line: 60,
          column: 71
        }
      },
      "21": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 63,
          column: 9
        }
      },
      "22": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 51
        }
      },
      "23": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 68,
          column: 6
        }
      },
      "24": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 114,
          column: 5
        }
      },
      "25": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 76,
          column: 9
        }
      },
      "26": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 67
        }
      },
      "27": {
        start: {
          line: 78,
          column: 38
        },
        end: {
          line: 78,
          column: 165
        }
      },
      "28": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 81,
          column: 9
        }
      },
      "29": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 24
        }
      },
      "30": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 84,
          column: 9
        }
      },
      "31": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 27
        }
      },
      "32": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 71
        }
      },
      "33": {
        start: {
          line: 87,
          column: 54
        },
        end: {
          line: 105,
          column: 32
        }
      },
      "34": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 109,
          column: 9
        }
      },
      "35": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 85
        }
      },
      "36": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 24
        }
      },
      "37": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 110,
          column: 26
        }
      },
      "38": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 72
        }
      },
      "39": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 113,
          column: 20
        }
      },
      "40": {
        start: {
          line: 117,
          column: 17
        },
        end: {
          line: 120,
          column: 5
        }
      },
      "41": {
        start: {
          line: 121,
          column: 20
        },
        end: {
          line: 121,
          column: 24
        }
      },
      "42": {
        start: {
          line: 123,
          column: 4
        },
        end: {
          line: 134,
          column: 5
        }
      },
      "43": {
        start: {
          line: 124,
          column: 27
        },
        end: {
          line: 124,
          column: 63
        }
      },
      "44": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 133,
          column: 9
        }
      },
      "45": {
        start: {
          line: 126,
          column: 26
        },
        end: {
          line: 126,
          column: 87
        }
      },
      "46": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 127,
          column: 48
        }
      },
      "47": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 132,
          column: 14
        }
      },
      "48": {
        start: {
          line: 136,
          column: 4
        },
        end: {
          line: 166,
          column: 5
        }
      },
      "49": {
        start: {
          line: 136,
          column: 22
        },
        end: {
          line: 136,
          column: 23
        }
      },
      "50": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 165,
          column: 9
        }
      },
      "51": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 138,
          column: 113
        }
      },
      "52": {
        start: {
          line: 139,
          column: 27
        },
        end: {
          line: 139,
          column: 69
        }
      },
      "53": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 154,
          column: 13
        }
      },
      "54": {
        start: {
          line: 142,
          column: 16
        },
        end: {
          line: 153,
          column: 19
        }
      },
      "55": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 155,
          column: 26
        }
      },
      "56": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 157,
          column: 30
        }
      },
      "57": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 158,
          column: 77
        }
      },
      "58": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 164,
          column: 13
        }
      },
      "59": {
        start: {
          line: 161,
          column: 32
        },
        end: {
          line: 161,
          column: 57
        }
      },
      "60": {
        start: {
          line: 162,
          column: 16
        },
        end: {
          line: 162,
          column: 97
        }
      },
      "61": {
        start: {
          line: 163,
          column: 16
        },
        end: {
          line: 163,
          column: 37
        }
      },
      "62": {
        start: {
          line: 168,
          column: 4
        },
        end: {
          line: 181,
          column: 5
        }
      },
      "63": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 180,
          column: 11
        }
      },
      "64": {
        start: {
          line: 182,
          column: 4
        },
        end: {
          line: 186,
          column: 6
        }
      },
      "65": {
        start: {
          line: 191,
          column: 4
        },
        end: {
          line: 193,
          column: 5
        }
      },
      "66": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 192,
          column: 63
        }
      },
      "67": {
        start: {
          line: 194,
          column: 25
        },
        end: {
          line: 194,
          column: 72
        }
      },
      "68": {
        start: {
          line: 195,
          column: 28
        },
        end: {
          line: 195,
          column: 97
        }
      },
      "69": {
        start: {
          line: 197,
          column: 54
        },
        end: {
          line: 197,
          column: 194
        }
      },
      "70": {
        start: {
          line: 198,
          column: 4
        },
        end: {
          line: 200,
          column: 5
        }
      },
      "71": {
        start: {
          line: 199,
          column: 8
        },
        end: {
          line: 199,
          column: 86
        }
      },
      "72": {
        start: {
          line: 202,
          column: 21
        },
        end: {
          line: 218,
          column: 5
        }
      },
      "73": {
        start: {
          line: 219,
          column: 4
        },
        end: {
          line: 271,
          column: 5
        }
      },
      "74": {
        start: {
          line: 221,
          column: 58
        },
        end: {
          line: 221,
          column: 173
        }
      },
      "75": {
        start: {
          line: 222,
          column: 8
        },
        end: {
          line: 224,
          column: 9
        }
      },
      "76": {
        start: {
          line: 223,
          column: 12
        },
        end: {
          line: 223,
          column: 82
        }
      },
      "77": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 233,
          column: 10
        }
      },
      "78": {
        start: {
          line: 236,
          column: 21
        },
        end: {
          line: 236,
          column: 25
        }
      },
      "79": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 239,
          column: 9
        }
      },
      "80": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 238,
          column: 47
        }
      },
      "81": {
        start: {
          line: 240,
          column: 28
        },
        end: {
          line: 243,
          column: 9
        }
      },
      "82": {
        start: {
          line: 244,
          column: 54
        },
        end: {
          line: 244,
          column: 146
        }
      },
      "83": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 262,
          column: 9
        }
      },
      "84": {
        start: {
          line: 247,
          column: 12
        },
        end: {
          line: 260,
          column: 13
        }
      },
      "85": {
        start: {
          line: 248,
          column: 16
        },
        end: {
          line: 248,
          column: 102
        }
      },
      "86": {
        start: {
          line: 249,
          column: 71
        },
        end: {
          line: 249,
          column: 211
        }
      },
      "87": {
        start: {
          line: 250,
          column: 16
        },
        end: {
          line: 259,
          column: 17
        }
      },
      "88": {
        start: {
          line: 251,
          column: 20
        },
        end: {
          line: 258,
          column: 22
        }
      },
      "89": {
        start: {
          line: 261,
          column: 12
        },
        end: {
          line: 261,
          column: 77
        }
      },
      "90": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 270,
          column: 10
        }
      },
      "91": {
        start: {
          line: 274,
          column: 17
        },
        end: {
          line: 277,
          column: 5
        }
      },
      "92": {
        start: {
          line: 278,
          column: 20
        },
        end: {
          line: 278,
          column: 24
        }
      },
      "93": {
        start: {
          line: 280,
          column: 4
        },
        end: {
          line: 341,
          column: 5
        }
      },
      "94": {
        start: {
          line: 280,
          column: 22
        },
        end: {
          line: 280,
          column: 23
        }
      },
      "95": {
        start: {
          line: 281,
          column: 8
        },
        end: {
          line: 340,
          column: 9
        }
      },
      "96": {
        start: {
          line: 282,
          column: 12
        },
        end: {
          line: 282,
          column: 116
        }
      },
      "97": {
        start: {
          line: 283,
          column: 12
        },
        end: {
          line: 285,
          column: 13
        }
      },
      "98": {
        start: {
          line: 284,
          column: 16
        },
        end: {
          line: 284,
          column: 71
        }
      },
      "99": {
        start: {
          line: 287,
          column: 62
        },
        end: {
          line: 296,
          column: 68
        }
      },
      "100": {
        start: {
          line: 297,
          column: 12
        },
        end: {
          line: 299,
          column: 13
        }
      },
      "101": {
        start: {
          line: 298,
          column: 16
        },
        end: {
          line: 298,
          column: 84
        }
      },
      "102": {
        start: {
          line: 300,
          column: 12
        },
        end: {
          line: 309,
          column: 13
        }
      },
      "103": {
        start: {
          line: 301,
          column: 16
        },
        end: {
          line: 301,
          column: 92
        }
      },
      "104": {
        start: {
          line: 302,
          column: 16
        },
        end: {
          line: 308,
          column: 18
        }
      },
      "105": {
        start: {
          line: 311,
          column: 12
        },
        end: {
          line: 324,
          column: 13
        }
      },
      "106": {
        start: {
          line: 312,
          column: 16
        },
        end: {
          line: 323,
          column: 19
        }
      },
      "107": {
        start: {
          line: 325,
          column: 12
        },
        end: {
          line: 332,
          column: 14
        }
      },
      "108": {
        start: {
          line: 334,
          column: 12
        },
        end: {
          line: 334,
          column: 30
        }
      },
      "109": {
        start: {
          line: 335,
          column: 12
        },
        end: {
          line: 335,
          column: 77
        }
      },
      "110": {
        start: {
          line: 336,
          column: 12
        },
        end: {
          line: 339,
          column: 13
        }
      },
      "111": {
        start: {
          line: 337,
          column: 32
        },
        end: {
          line: 337,
          column: 57
        }
      },
      "112": {
        start: {
          line: 338,
          column: 16
        },
        end: {
          line: 338,
          column: 37
        }
      },
      "113": {
        start: {
          line: 342,
          column: 4
        },
        end: {
          line: 346,
          column: 6
        }
      },
      "114": {
        start: {
          line: 349,
          column: 4
        },
        end: {
          line: 394,
          column: 5
        }
      },
      "115": {
        start: {
          line: 350,
          column: 8
        },
        end: {
          line: 350,
          column: 84
        }
      },
      "116": {
        start: {
          line: 351,
          column: 23
        },
        end: {
          line: 351,
          column: 55
        }
      },
      "117": {
        start: {
          line: 352,
          column: 26
        },
        end: {
          line: 352,
          column: 65
        }
      },
      "118": {
        start: {
          line: 353,
          column: 8
        },
        end: {
          line: 359,
          column: 9
        }
      },
      "119": {
        start: {
          line: 354,
          column: 12
        },
        end: {
          line: 358,
          column: 14
        }
      },
      "120": {
        start: {
          line: 361,
          column: 30
        },
        end: {
          line: 385,
          column: 9
        }
      },
      "121": {
        start: {
          line: 363,
          column: 68
        },
        end: {
          line: 370,
          column: 17
        }
      },
      "122": {
        start: {
          line: 376,
          column: 65
        },
        end: {
          line: 382,
          column: 17
        }
      },
      "123": {
        start: {
          line: 386,
          column: 8
        },
        end: {
          line: 386,
          column: 64
        }
      },
      "124": {
        start: {
          line: 388,
          column: 8
        },
        end: {
          line: 388,
          column: 79
        }
      },
      "125": {
        start: {
          line: 389,
          column: 8
        },
        end: {
          line: 393,
          column: 10
        }
      },
      "126": {
        start: {
          line: 397,
          column: 17
        },
        end: {
          line: 402,
          column: 5
        }
      },
      "127": {
        start: {
          line: 403,
          column: 4
        },
        end: {
          line: 403,
          column: 78
        }
      },
      "128": {
        start: {
          line: 404,
          column: 4
        },
        end: {
          line: 503,
          column: 5
        }
      },
      "129": {
        start: {
          line: 405,
          column: 23
        },
        end: {
          line: 405,
          column: 55
        }
      },
      "130": {
        start: {
          line: 406,
          column: 24
        },
        end: {
          line: 406,
          column: 26
        }
      },
      "131": {
        start: {
          line: 407,
          column: 21
        },
        end: {
          line: 407,
          column: 22
        }
      },
      "132": {
        start: {
          line: 408,
          column: 29
        },
        end: {
          line: 408,
          column: 30
        }
      },
      "133": {
        start: {
          line: 409,
          column: 25
        },
        end: {
          line: 409,
          column: 26
        }
      },
      "134": {
        start: {
          line: 410,
          column: 21
        },
        end: {
          line: 410,
          column: 22
        }
      },
      "135": {
        start: {
          line: 411,
          column: 8
        },
        end: {
          line: 479,
          column: 9
        }
      },
      "136": {
        start: {
          line: 412,
          column: 26
        },
        end: {
          line: 412,
          column: 82
        }
      },
      "137": {
        start: {
          line: 413,
          column: 12
        },
        end: {
          line: 413,
          column: 87
        }
      },
      "138": {
        start: {
          line: 414,
          column: 31
        },
        end: {
          line: 417,
          column: 14
        }
      },
      "139": {
        start: {
          line: 418,
          column: 12
        },
        end: {
          line: 421,
          column: 13
        }
      },
      "140": {
        start: {
          line: 419,
          column: 16
        },
        end: {
          line: 419,
          column: 77
        }
      },
      "141": {
        start: {
          line: 420,
          column: 16
        },
        end: {
          line: 420,
          column: 22
        }
      },
      "142": {
        start: {
          line: 423,
          column: 34
        },
        end: {
          line: 453,
          column: 14
        }
      },
      "143": {
        start: {
          line: 424,
          column: 38
        },
        end: {
          line: 448,
          column: 17
        }
      },
      "144": {
        start: {
          line: 426,
          column: 76
        },
        end: {
          line: 433,
          column: 25
        }
      },
      "145": {
        start: {
          line: 439,
          column: 73
        },
        end: {
          line: 445,
          column: 25
        }
      },
      "146": {
        start: {
          line: 449,
          column: 16
        },
        end: {
          line: 452,
          column: 19
        }
      },
      "147": {
        start: {
          line: 454,
          column: 33
        },
        end: {
          line: 454,
          column: 72
        }
      },
      "148": {
        start: {
          line: 455,
          column: 12
        },
        end: {
          line: 472,
          column: 15
        }
      },
      "149": {
        start: {
          line: 456,
          column: 16
        },
        end: {
          line: 471,
          column: 17
        }
      },
      "150": {
        start: {
          line: 457,
          column: 20
        },
        end: {
          line: 457,
          column: 47
        }
      },
      "151": {
        start: {
          line: 458,
          column: 20
        },
        end: {
          line: 462,
          column: 21
        }
      },
      "152": {
        start: {
          line: 459,
          column: 24
        },
        end: {
          line: 459,
          column: 37
        }
      },
      "153": {
        start: {
          line: 461,
          column: 24
        },
        end: {
          line: 461,
          column: 33
        }
      },
      "154": {
        start: {
          line: 464,
          column: 20
        },
        end: {
          line: 464,
          column: 99
        }
      },
      "155": {
        start: {
          line: 465,
          column: 20
        },
        end: {
          line: 469,
          column: 23
        }
      },
      "156": {
        start: {
          line: 470,
          column: 20
        },
        end: {
          line: 470,
          column: 29
        }
      },
      "157": {
        start: {
          line: 473,
          column: 12
        },
        end: {
          line: 473,
          column: 48
        }
      },
      "158": {
        start: {
          line: 474,
          column: 12
        },
        end: {
          line: 474,
          column: 28
        }
      },
      "159": {
        start: {
          line: 476,
          column: 12
        },
        end: {
          line: 478,
          column: 13
        }
      },
      "160": {
        start: {
          line: 477,
          column: 16
        },
        end: {
          line: 477,
          column: 33
        }
      },
      "161": {
        start: {
          line: 480,
          column: 8
        },
        end: {
          line: 480,
          column: 112
        }
      },
      "162": {
        start: {
          line: 481,
          column: 8
        },
        end: {
          line: 487,
          column: 10
        }
      },
      "163": {
        start: {
          line: 489,
          column: 8
        },
        end: {
          line: 489,
          column: 76
        }
      },
      "164": {
        start: {
          line: 490,
          column: 8
        },
        end: {
          line: 502,
          column: 10
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 16
          }
        },
        loc: {
          start: {
            line: 8,
            column: 30
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 28
          },
          end: {
            line: 15,
            column: 29
          }
        },
        loc: {
          start: {
            line: 15,
            column: 39
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 29
          }
        },
        loc: {
          start: {
            line: 18,
            column: 39
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 23
          },
          end: {
            line: 21,
            column: 24
          }
        },
        loc: {
          start: {
            line: 21,
            column: 34
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 24,
            column: 24
          },
          end: {
            line: 24,
            column: 25
          }
        },
        loc: {
          start: {
            line: 24,
            column: 35
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "5": {
        name: "delay",
        decl: {
          start: {
            line: 47,
            column: 13
          },
          end: {
            line: 47,
            column: 18
          }
        },
        loc: {
          start: {
            line: 47,
            column: 23
          },
          end: {
            line: 49,
            column: 1
          }
        },
        line: 47
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 48,
            column: 23
          },
          end: {
            line: 48,
            column: 24
          }
        },
        loc: {
          start: {
            line: 48,
            column: 34
          },
          end: {
            line: 48,
            column: 57
          }
        },
        line: 48
      },
      "7": {
        name: "validateClerkUserData",
        decl: {
          start: {
            line: 52,
            column: 13
          },
          end: {
            line: 52,
            column: 34
          }
        },
        loc: {
          start: {
            line: 52,
            column: 45
          },
          end: {
            line: 69,
            column: 1
          }
        },
        line: 52
      },
      "8": {
        name: "ensureDefaultRole",
        decl: {
          start: {
            line: 72,
            column: 19
          },
          end: {
            line: 72,
            column: 36
          }
        },
        loc: {
          start: {
            line: 72,
            column: 39
          },
          end: {
            line: 115,
            column: 1
          }
        },
        line: 72
      },
      "9": {
        name: "syncUserToSupabase",
        decl: {
          start: {
            line: 116,
            column: 15
          },
          end: {
            line: 116,
            column: 33
          }
        },
        loc: {
          start: {
            line: 116,
            column: 63
          },
          end: {
            line: 187,
            column: 1
          }
        },
        line: 116
      },
      "10": {
        name: "performUserSync",
        decl: {
          start: {
            line: 190,
            column: 19
          },
          end: {
            line: 190,
            column: 34
          }
        },
        loc: {
          start: {
            line: 190,
            column: 59
          },
          end: {
            line: 272,
            column: 1
          }
        },
        line: 190
      },
      "11": {
        name: "deleteUserFromSupabase",
        decl: {
          start: {
            line: 273,
            column: 15
          },
          end: {
            line: 273,
            column: 37
          }
        },
        loc: {
          start: {
            line: 273,
            column: 65
          },
          end: {
            line: 347,
            column: 1
          }
        },
        line: 273
      },
      "12": {
        name: "syncUserFromClerk",
        decl: {
          start: {
            line: 348,
            column: 15
          },
          end: {
            line: 348,
            column: 32
          }
        },
        loc: {
          start: {
            line: 348,
            column: 60
          },
          end: {
            line: 395,
            column: 1
          }
        },
        line: 348
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 363,
            column: 58
          },
          end: {
            line: 363,
            column: 59
          }
        },
        loc: {
          start: {
            line: 363,
            column: 68
          },
          end: {
            line: 370,
            column: 17
          }
        },
        line: 363
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 376,
            column: 55
          },
          end: {
            line: 376,
            column: 56
          }
        },
        loc: {
          start: {
            line: 376,
            column: 65
          },
          end: {
            line: 382,
            column: 17
          }
        },
        line: 376
      },
      "15": {
        name: "bulkSyncUsersFromClerk",
        decl: {
          start: {
            line: 396,
            column: 15
          },
          end: {
            line: 396,
            column: 37
          }
        },
        loc: {
          start: {
            line: 396,
            column: 52
          },
          end: {
            line: 504,
            column: 1
          }
        },
        line: 396
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 423,
            column: 49
          },
          end: {
            line: 423,
            column: 50
          }
        },
        loc: {
          start: {
            line: 423,
            column: 68
          },
          end: {
            line: 453,
            column: 13
          }
        },
        line: 423
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 426,
            column: 66
          },
          end: {
            line: 426,
            column: 67
          }
        },
        loc: {
          start: {
            line: 426,
            column: 76
          },
          end: {
            line: 433,
            column: 25
          }
        },
        line: 426
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 439,
            column: 63
          },
          end: {
            line: 439,
            column: 64
          }
        },
        loc: {
          start: {
            line: 439,
            column: 73
          },
          end: {
            line: 445,
            column: 25
          }
        },
        line: 439
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 455,
            column: 33
          },
          end: {
            line: 455,
            column: 34
          }
        },
        loc: {
          start: {
            line: 455,
            column: 50
          },
          end: {
            line: 472,
            column: 13
          }
        },
        line: 455
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "1": {
        loc: {
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 64,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 64,
            column: 5
          }
        }, {
          start: {
            line: 59,
            column: 11
          },
          end: {
            line: 64,
            column: 5
          }
        }],
        line: 57
      },
      "2": {
        loc: {
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 57,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 57,
            column: 33
          }
        }, {
          start: {
            line: 57,
            column: 37
          },
          end: {
            line: 57,
            column: 74
          }
        }],
        line: 57
      },
      "3": {
        loc: {
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "4": {
        loc: {
          start: {
            line: 61,
            column: 12
          },
          end: {
            line: 61,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 61,
            column: 12
          },
          end: {
            line: 61,
            column: 25
          }
        }, {
          start: {
            line: 61,
            column: 29
          },
          end: {
            line: 61,
            column: 56
          }
        }],
        line: 61
      },
      "5": {
        loc: {
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "6": {
        loc: {
          start: {
            line: 79,
            column: 8
          },
          end: {
            line: 81,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 79,
            column: 8
          },
          end: {
            line: 81,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 79
      },
      "7": {
        loc: {
          start: {
            line: 79,
            column: 12
          },
          end: {
            line: 79,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 79,
            column: 12
          },
          end: {
            line: 79,
            column: 17
          }
        }, {
          start: {
            line: 79,
            column: 21
          },
          end: {
            line: 79,
            column: 46
          }
        }],
        line: 79
      },
      "8": {
        loc: {
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "9": {
        loc: {
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "10": {
        loc: {
          start: {
            line: 116,
            column: 49
          },
          end: {
            line: 116,
            column: 61
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 116,
            column: 59
          },
          end: {
            line: 116,
            column: 61
          }
        }],
        line: 116
      },
      "11": {
        loc: {
          start: {
            line: 123,
            column: 4
          },
          end: {
            line: 134,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 123,
            column: 4
          },
          end: {
            line: 134,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 123
      },
      "12": {
        loc: {
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 133,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 133,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "13": {
        loc: {
          start: {
            line: 141,
            column: 12
          },
          end: {
            line: 154,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 141,
            column: 12
          },
          end: {
            line: 154,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 141
      },
      "14": {
        loc: {
          start: {
            line: 141,
            column: 16
          },
          end: {
            line: 141,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 141,
            column: 16
          },
          end: {
            line: 141,
            column: 30
          }
        }, {
          start: {
            line: 141,
            column: 34
          },
          end: {
            line: 141,
            column: 48
          }
        }],
        line: 141
      },
      "15": {
        loc: {
          start: {
            line: 160,
            column: 12
          },
          end: {
            line: 164,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 160,
            column: 12
          },
          end: {
            line: 164,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 160
      },
      "16": {
        loc: {
          start: {
            line: 168,
            column: 4
          },
          end: {
            line: 181,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 168,
            column: 4
          },
          end: {
            line: 181,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 168
      },
      "17": {
        loc: {
          start: {
            line: 191,
            column: 4
          },
          end: {
            line: 193,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 191,
            column: 4
          },
          end: {
            line: 193,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 191
      },
      "18": {
        loc: {
          start: {
            line: 198,
            column: 4
          },
          end: {
            line: 200,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 198,
            column: 4
          },
          end: {
            line: 200,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 198
      },
      "19": {
        loc: {
          start: {
            line: 198,
            column: 8
          },
          end: {
            line: 198,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 198,
            column: 8
          },
          end: {
            line: 198,
            column: 18
          }
        }, {
          start: {
            line: 198,
            column: 22
          },
          end: {
            line: 198,
            column: 52
          }
        }],
        line: 198
      },
      "20": {
        loc: {
          start: {
            line: 219,
            column: 4
          },
          end: {
            line: 271,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 219,
            column: 4
          },
          end: {
            line: 271,
            column: 5
          }
        }, {
          start: {
            line: 234,
            column: 11
          },
          end: {
            line: 271,
            column: 5
          }
        }],
        line: 219
      },
      "21": {
        loc: {
          start: {
            line: 222,
            column: 8
          },
          end: {
            line: 224,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 222,
            column: 8
          },
          end: {
            line: 224,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 222
      },
      "22": {
        loc: {
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 239,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 239,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 237
      },
      "23": {
        loc: {
          start: {
            line: 245,
            column: 8
          },
          end: {
            line: 262,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 245,
            column: 8
          },
          end: {
            line: 262,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 245
      },
      "24": {
        loc: {
          start: {
            line: 247,
            column: 12
          },
          end: {
            line: 260,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 247,
            column: 12
          },
          end: {
            line: 260,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 247
      },
      "25": {
        loc: {
          start: {
            line: 250,
            column: 16
          },
          end: {
            line: 259,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 250,
            column: 16
          },
          end: {
            line: 259,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 250
      },
      "26": {
        loc: {
          start: {
            line: 250,
            column: 20
          },
          end: {
            line: 250,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 250,
            column: 20
          },
          end: {
            line: 250,
            column: 31
          }
        }, {
          start: {
            line: 250,
            column: 35
          },
          end: {
            line: 250,
            column: 52
          }
        }],
        line: 250
      },
      "27": {
        loc: {
          start: {
            line: 273,
            column: 51
          },
          end: {
            line: 273,
            column: 63
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 273,
            column: 61
          },
          end: {
            line: 273,
            column: 63
          }
        }],
        line: 273
      },
      "28": {
        loc: {
          start: {
            line: 283,
            column: 12
          },
          end: {
            line: 285,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 283,
            column: 12
          },
          end: {
            line: 285,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 283
      },
      "29": {
        loc: {
          start: {
            line: 297,
            column: 12
          },
          end: {
            line: 299,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 297,
            column: 12
          },
          end: {
            line: 299,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 297
      },
      "30": {
        loc: {
          start: {
            line: 297,
            column: 16
          },
          end: {
            line: 297,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 297,
            column: 16
          },
          end: {
            line: 297,
            column: 27
          }
        }, {
          start: {
            line: 297,
            column: 31
          },
          end: {
            line: 297,
            column: 62
          }
        }],
        line: 297
      },
      "31": {
        loc: {
          start: {
            line: 300,
            column: 12
          },
          end: {
            line: 309,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 300,
            column: 12
          },
          end: {
            line: 309,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 300
      },
      "32": {
        loc: {
          start: {
            line: 311,
            column: 12
          },
          end: {
            line: 324,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 311,
            column: 12
          },
          end: {
            line: 324,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 311
      },
      "33": {
        loc: {
          start: {
            line: 336,
            column: 12
          },
          end: {
            line: 339,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 336,
            column: 12
          },
          end: {
            line: 339,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 336
      },
      "34": {
        loc: {
          start: {
            line: 348,
            column: 46
          },
          end: {
            line: 348,
            column: 58
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 348,
            column: 56
          },
          end: {
            line: 348,
            column: 58
          }
        }],
        line: 348
      },
      "35": {
        loc: {
          start: {
            line: 353,
            column: 8
          },
          end: {
            line: 359,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 353,
            column: 8
          },
          end: {
            line: 359,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 353
      },
      "36": {
        loc: {
          start: {
            line: 367,
            column: 32
          },
          end: {
            line: 367,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 367,
            column: 32
          },
          end: {
            line: 367,
            column: 58
          }
        }, {
          start: {
            line: 367,
            column: 62
          },
          end: {
            line: 367,
            column: 74
          }
        }],
        line: 367
      },
      "37": {
        loc: {
          start: {
            line: 368,
            column: 34
          },
          end: {
            line: 368,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 368,
            column: 34
          },
          end: {
            line: 368,
            column: 62
          }
        }, {
          start: {
            line: 368,
            column: 66
          },
          end: {
            line: 368,
            column: 75
          }
        }],
        line: 368
      },
      "38": {
        loc: {
          start: {
            line: 380,
            column: 32
          },
          end: {
            line: 380,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 380,
            column: 32
          },
          end: {
            line: 380,
            column: 58
          }
        }, {
          start: {
            line: 380,
            column: 62
          },
          end: {
            line: 380,
            column: 74
          }
        }],
        line: 380
      },
      "39": {
        loc: {
          start: {
            line: 396,
            column: 38
          },
          end: {
            line: 396,
            column: 50
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 396,
            column: 48
          },
          end: {
            line: 396,
            column: 50
          }
        }],
        line: 396
      },
      "40": {
        loc: {
          start: {
            line: 418,
            column: 12
          },
          end: {
            line: 421,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 418,
            column: 12
          },
          end: {
            line: 421,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 418
      },
      "41": {
        loc: {
          start: {
            line: 418,
            column: 16
          },
          end: {
            line: 418,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 418,
            column: 16
          },
          end: {
            line: 418,
            column: 27
          }
        }, {
          start: {
            line: 418,
            column: 31
          },
          end: {
            line: 418,
            column: 54
          }
        }],
        line: 418
      },
      "42": {
        loc: {
          start: {
            line: 430,
            column: 40
          },
          end: {
            line: 430,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 430,
            column: 40
          },
          end: {
            line: 430,
            column: 66
          }
        }, {
          start: {
            line: 430,
            column: 70
          },
          end: {
            line: 430,
            column: 82
          }
        }],
        line: 430
      },
      "43": {
        loc: {
          start: {
            line: 431,
            column: 42
          },
          end: {
            line: 431,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 431,
            column: 42
          },
          end: {
            line: 431,
            column: 70
          }
        }, {
          start: {
            line: 431,
            column: 74
          },
          end: {
            line: 431,
            column: 83
          }
        }],
        line: 431
      },
      "44": {
        loc: {
          start: {
            line: 443,
            column: 40
          },
          end: {
            line: 443,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 443,
            column: 40
          },
          end: {
            line: 443,
            column: 66
          }
        }, {
          start: {
            line: 443,
            column: 70
          },
          end: {
            line: 443,
            column: 82
          }
        }],
        line: 443
      },
      "45": {
        loc: {
          start: {
            line: 456,
            column: 16
          },
          end: {
            line: 471,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 456,
            column: 16
          },
          end: {
            line: 471,
            column: 17
          }
        }, {
          start: {
            line: 463,
            column: 23
          },
          end: {
            line: 471,
            column: 17
          }
        }],
        line: 456
      },
      "46": {
        loc: {
          start: {
            line: 458,
            column: 20
          },
          end: {
            line: 462,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 458,
            column: 20
          },
          end: {
            line: 462,
            column: 21
          }
        }, {
          start: {
            line: 460,
            column: 27
          },
          end: {
            line: 462,
            column: 21
          }
        }],
        line: 458
      },
      "47": {
        loc: {
          start: {
            line: 468,
            column: 31
          },
          end: {
            line: 468,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 468,
            column: 31
          },
          end: {
            line: 468,
            column: 53
          }
        }, {
          start: {
            line: 468,
            column: 57
          },
          end: {
            line: 468,
            column: 76
          }
        }],
        line: 468
      },
      "48": {
        loc: {
          start: {
            line: 476,
            column: 12
          },
          end: {
            line: 478,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 476,
            column: 12
          },
          end: {
            line: 478,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 476
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\auth\\user-sync-service.ts"],
      sourcesContent: ["/**\n * Servicio de Sincronizaci\xF3n Autom\xE1tica de Usuarios\n * Maneja la sincronizaci\xF3n robusta entre Clerk y Supabase con retry logic y manejo de errores\n */\n\nimport { clerkClient } from '@clerk/nextjs/server';\nimport { supabaseAdmin } from '@/lib/supabase';\nimport { logSecurityEvent, logAdminAction } from './security-audit';\n\n// =====================================================\n// TIPOS Y INTERFACES\n// =====================================================\n\nexport interface ClerkUserData {\n  id: string;\n  email_addresses: {\n    email_address: string;\n    id: string;\n    verification: {\n      status: string;\n      strategy: string;\n    };\n  }[];\n  first_name: string | null;\n  last_name: string | null;\n  created_at: number;\n  updated_at: number;\n  image_url?: string;\n  phone_numbers?: {\n    phone_number: string;\n    id: string;\n    verification: {\n      status: string;\n    };\n  }[];\n  public_metadata?: Record<string, any>;\n  private_metadata?: Record<string, any>;\n}\n\nexport interface UserSyncResult {\n  success: boolean;\n  action: 'created' | 'updated' | 'found_existing' | 'deleted' | 'error';\n  userId?: string;\n  error?: string;\n  details?: Record<string, any>;\n}\n\nexport interface SyncOptions {\n  retryAttempts?: number;\n  retryDelay?: number;\n  validateData?: boolean;\n  createMissingRole?: boolean;\n  logEvents?: boolean;\n}\n\n// =====================================================\n// CONFIGURACI\xD3N Y CONSTANTES\n// =====================================================\n\nconst DEFAULT_SYNC_OPTIONS: Required<SyncOptions> = {\n  retryAttempts: 3,\n  retryDelay: 1000, // 1 segundo\n  validateData: true,\n  createMissingRole: true,\n  logEvents: true\n};\n\nconst DEFAULT_ROLE_NAME = 'customer';\n\n// =====================================================\n// FUNCIONES DE UTILIDAD\n// =====================================================\n\n/**\n * Espera un tiempo determinado (para retry logic)\n */\nfunction delay(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n/**\n * Valida los datos del usuario de Clerk\n */\nfunction validateClerkUserData(userData: ClerkUserData): { valid: boolean; errors: string[] } {\n  const errors: string[] = [];\n\n  if (!userData.id) {\n    errors.push('ID de usuario de Clerk es requerido');\n  }\n\n  if (!userData.email_addresses || userData.email_addresses.length === 0) {\n    errors.push('Al menos un email es requerido');\n  } else {\n    const primaryEmail = userData.email_addresses[0]?.email_address;\n    if (!primaryEmail || !primaryEmail.includes('@')) {\n      errors.push('Email primario inv\xE1lido');\n    }\n  }\n\n  return {\n    valid: errors.length === 0,\n    errors\n  };\n}\n\n/**\n * Obtiene o crea el rol por defecto\n */\nasync function ensureDefaultRole(): Promise<number | null> {\n  try {\n    if (!supabaseAdmin) {\n      throw new Error('Supabase admin client no disponible');\n    }\n\n    // Intentar obtener el rol customer\n    const { data: role, error } = await supabaseAdmin\n      .from('user_roles')\n      .select('id')\n      .eq('role_name', DEFAULT_ROLE_NAME)\n      .eq('is_active', true)\n      .single();\n\n    if (error && error.code !== 'PGRST116') {\n      throw error;\n    }\n\n    if (role) {\n      return role.id;\n    }\n\n    // Si no existe, crear el rol customer\n    console.log('[USER_SYNC] Creando rol customer por defecto...');\n    const { data: newRole, error: createError } = await supabaseAdmin\n      .from('user_roles')\n      .insert({\n        role_name: DEFAULT_ROLE_NAME,\n        display_name: 'Cliente',\n        description: 'Cliente regular del e-commerce',\n        permissions: {\n          orders: { create: true, read: true, update: false, delete: false },\n          profile: { read: true, update: true }\n        },\n        is_active: true,\n        is_system_role: true\n      })\n      .select('id')\n      .single();\n\n    if (createError) {\n      console.error('[USER_SYNC] Error creando rol por defecto:', createError);\n      return null;\n    }\n\n    return newRole.id;\n  } catch (error) {\n    console.error('[USER_SYNC] Error en ensureDefaultRole:', error);\n    return null;\n  }\n}\n\n// =====================================================\n// FUNCIONES PRINCIPALES DE SINCRONIZACI\xD3N\n// =====================================================\n\n/**\n * Sincroniza un usuario de Clerk con Supabase\n */\nexport async function syncUserToSupabase(\n  clerkUserData: ClerkUserData,\n  options: SyncOptions = {}\n): Promise<UserSyncResult> {\n  const opts = { ...DEFAULT_SYNC_OPTIONS, ...options };\n  let lastError: Error | null = null;\n\n  // Validar datos si est\xE1 habilitado\n  if (opts.validateData) {\n    const validation = validateClerkUserData(clerkUserData);\n    if (!validation.valid) {\n      const error = `Datos de usuario inv\xE1lidos: ${validation.errors.join(', ')}`;\n      console.error('[USER_SYNC]', error);\n      return { success: false, action: 'error', error };\n    }\n  }\n\n  // Retry logic\n  for (let attempt = 1; attempt <= opts.retryAttempts; attempt++) {\n    try {\n      console.log(`[USER_SYNC] Intento ${attempt}/${opts.retryAttempts} para usuario ${clerkUserData.id}`);\n\n      const result = await performUserSync(clerkUserData, opts);\n\n      // Log evento de \xE9xito si est\xE1 habilitado\n      if (opts.logEvents && result.success) {\n        await logSecurityEvent({\n          user_id: clerkUserData.id,\n          event_type: 'DATA_ACCESS',\n          event_category: 'data_access',\n          severity: 'low',\n          description: `Usuario sincronizado: ${result.action}`,\n          metadata: {\n            action: result.action,\n            email: clerkUserData.email_addresses[0]?.email_address,\n            attempt\n          }\n        });\n      }\n\n      return result;\n    } catch (error) {\n      lastError = error as Error;\n      console.error(`[USER_SYNC] Error en intento ${attempt}:`, error);\n\n      // Si no es el \xFAltimo intento, esperar antes de reintentar\n      if (attempt < opts.retryAttempts) {\n        const delayMs = opts.retryDelay * attempt; // Backoff exponencial\n        console.log(`[USER_SYNC] Esperando ${delayMs}ms antes del siguiente intento...`);\n        await delay(delayMs);\n      }\n    }\n  }\n\n  // Log evento de error si est\xE1 habilitado\n  if (opts.logEvents) {\n    await logSecurityEvent({\n      user_id: clerkUserData.id,\n      event_type: 'SECURITY_VIOLATION',\n      event_category: 'data_access',\n      severity: 'medium',\n      description: `Error sincronizando usuario despu\xE9s de ${opts.retryAttempts} intentos`,\n      metadata: {\n        error: lastError?.message,\n        email: clerkUserData.email_addresses[0]?.email_address,\n        attempts: opts.retryAttempts\n      }\n    });\n  }\n\n  return {\n    success: false,\n    action: 'error',\n    error: `Error despu\xE9s de ${opts.retryAttempts} intentos: ${lastError?.message}`\n  };\n}\n\n/**\n * Realiza la sincronizaci\xF3n real del usuario\n */\nasync function performUserSync(\n  clerkUserData: ClerkUserData,\n  options: Required<SyncOptions>\n): Promise<UserSyncResult> {\n  if (!supabaseAdmin) {\n    throw new Error('Supabase admin client no disponible');\n  }\n\n  const primaryEmail = clerkUserData.email_addresses[0]?.email_address;\n  const isEmailVerified = clerkUserData.email_addresses[0]?.verification?.status === 'verified';\n\n  // Verificar si el usuario ya existe\n  const { data: existingUser, error: fetchError } = await supabaseAdmin\n    .from('user_profiles')\n    .select('*')\n    .or(`email.eq.${primaryEmail},clerk_user_id.eq.${clerkUserData.id}`)\n    .single();\n\n  if (fetchError && fetchError.code !== 'PGRST116') {\n    throw new Error(`Error verificando usuario existente: ${fetchError.message}`);\n  }\n\n  // Preparar datos del usuario\n  const userData = {\n    clerk_user_id: clerkUserData.id,\n    email: primaryEmail,\n    first_name: clerkUserData.first_name,\n    last_name: clerkUserData.last_name,\n    is_verified: isEmailVerified,\n    is_active: true,\n    metadata: {\n      clerk_created_at: clerkUserData.created_at,\n      clerk_updated_at: clerkUserData.updated_at,\n      image_url: clerkUserData.image_url,\n      phone_numbers: clerkUserData.phone_numbers,\n      public_metadata: clerkUserData.public_metadata,\n      last_sync: new Date().toISOString()\n    },\n    updated_at: new Date().toISOString()\n  };\n\n  if (existingUser) {\n    // Actualizar usuario existente\n    const { data: updatedUser, error: updateError } = await supabaseAdmin\n      .from('user_profiles')\n      .update(userData)\n      .eq('id', existingUser.id)\n      .select('*')\n      .single();\n\n    if (updateError) {\n      throw new Error(`Error actualizando usuario: ${updateError.message}`);\n    }\n\n    return {\n      success: true,\n      action: 'updated',\n      userId: updatedUser.id,\n      details: { previousData: existingUser, newData: updatedUser }\n    };\n  } else {\n    // Crear nuevo usuario\n    let roleId: number | null = null;\n\n    if (options.createMissingRole) {\n      roleId = await ensureDefaultRole();\n    }\n\n    const newUserData = {\n      ...userData,\n      role_id: roleId\n    };\n\n    const { data: newUser, error: insertError } = await supabaseAdmin\n      .from('user_profiles')\n      .insert(newUserData)\n      .select('*')\n      .single();\n\n    if (insertError) {\n      // Manejar error de clave duplicada\n      if (insertError.code === '23505') {\n        console.log('[USER_SYNC] Usuario ya existe (clave duplicada), obteniendo usuario...');\n        const { data: existingUserRetry, error: retryError } = await supabaseAdmin\n          .from('user_profiles')\n          .select('*')\n          .or(`email.eq.${primaryEmail},clerk_user_id.eq.${clerkUserData.id}`)\n          .single();\n\n        if (!retryError && existingUserRetry) {\n          return {\n            success: true,\n            action: 'found_existing',\n            userId: existingUserRetry.id,\n            details: { userData: existingUserRetry }\n          };\n        }\n      }\n\n      throw new Error(`Error creando usuario: ${insertError.message}`);\n    }\n\n    return {\n      success: true,\n      action: 'created',\n      userId: newUser.id,\n      details: { userData: newUser }\n    };\n  }\n}\n\n/**\n * Elimina un usuario de Supabase (soft delete)\n */\nexport async function deleteUserFromSupabase(\n  clerkUserId: string,\n  options: SyncOptions = {}\n): Promise<UserSyncResult> {\n  const opts = { ...DEFAULT_SYNC_OPTIONS, ...options };\n  let lastError: Error | null = null;\n\n  // Retry logic\n  for (let attempt = 1; attempt <= opts.retryAttempts; attempt++) {\n    try {\n      console.log(`[USER_SYNC] Eliminando usuario ${clerkUserId} - Intento ${attempt}/${opts.retryAttempts}`);\n\n      if (!supabaseAdmin) {\n        throw new Error('Supabase admin client no disponible');\n      }\n\n      // Soft delete: marcar como inactivo en lugar de eliminar\n      const { data: deletedUser, error: deleteError } = await supabaseAdmin\n        .from('user_profiles')\n        .update({\n          is_active: false,\n          clerk_user_id: null, // Limpiar referencia a Clerk\n          metadata: {\n            deleted_at: new Date().toISOString(),\n            deleted_by: 'clerk_webhook',\n            original_clerk_id: clerkUserId\n          },\n          updated_at: new Date().toISOString()\n        })\n        .eq('clerk_user_id', clerkUserId)\n        .select('*')\n        .single();\n\n      if (deleteError && deleteError.code !== 'PGRST116') {\n        throw new Error(`Error eliminando usuario: ${deleteError.message}`);\n      }\n\n      if (!deletedUser) {\n        console.log(`[USER_SYNC] Usuario ${clerkUserId} no encontrado en Supabase`);\n        return {\n          success: true,\n          action: 'deleted',\n          details: { message: 'Usuario no encontrado en Supabase' }\n        };\n      }\n\n      // Log evento si est\xE1 habilitado\n      if (opts.logEvents) {\n        await logSecurityEvent({\n          user_id: clerkUserId,\n          event_type: 'ADMIN_ACTION',\n          event_category: 'admin_operations',\n          severity: 'medium',\n          description: 'Usuario eliminado de Supabase',\n          metadata: {\n            action: 'soft_delete',\n            user_email: deletedUser.email,\n            attempt\n          }\n        });\n      }\n\n      return {\n        success: true,\n        action: 'deleted',\n        userId: deletedUser.id,\n        details: { deletedUser }\n      };\n    } catch (error) {\n      lastError = error as Error;\n      console.error(`[USER_SYNC] Error en intento ${attempt}:`, error);\n\n      if (attempt < opts.retryAttempts) {\n        const delayMs = opts.retryDelay * attempt;\n        await delay(delayMs);\n      }\n    }\n  }\n\n  return {\n    success: false,\n    action: 'error',\n    error: `Error despu\xE9s de ${opts.retryAttempts} intentos: ${lastError?.message}`\n  };\n}\n\n/**\n * Sincroniza un usuario desde Clerk usando su ID\n */\nexport async function syncUserFromClerk(\n  clerkUserId: string,\n  options: SyncOptions = {}\n): Promise<UserSyncResult> {\n  try {\n    console.log(`[USER_SYNC] Obteniendo usuario ${clerkUserId} desde Clerk...`);\n\n    const client = await clerkClient();\n    const clerkUser = await client.users.getUser(clerkUserId);\n\n    if (!clerkUser) {\n      return {\n        success: false,\n        action: 'error',\n        error: 'Usuario no encontrado en Clerk'\n      };\n    }\n\n    // Convertir datos de Clerk al formato esperado\n    const clerkUserData: ClerkUserData = {\n      id: clerkUser.id,\n      email_addresses: clerkUser.emailAddresses.map(email => ({\n        email_address: email.emailAddress,\n        id: email.id,\n        verification: {\n          status: email.verification?.status || 'unverified',\n          strategy: email.verification?.strategy || 'unknown'\n        }\n      })),\n      first_name: clerkUser.firstName,\n      last_name: clerkUser.lastName,\n      created_at: clerkUser.createdAt,\n      updated_at: clerkUser.updatedAt,\n      image_url: clerkUser.imageUrl,\n      phone_numbers: clerkUser.phoneNumbers?.map(phone => ({\n        phone_number: phone.phoneNumber,\n        id: phone.id,\n        verification: {\n          status: phone.verification?.status || 'unverified'\n        }\n      })),\n      public_metadata: clerkUser.publicMetadata,\n      private_metadata: clerkUser.privateMetadata\n    };\n\n    return await syncUserToSupabase(clerkUserData, options);\n  } catch (error) {\n    console.error('[USER_SYNC] Error obteniendo usuario de Clerk:', error);\n    return {\n      success: false,\n      action: 'error',\n      error: `Error obteniendo usuario de Clerk: ${error.message}`\n    };\n  }\n}\n\n/**\n * Sincronizaci\xF3n masiva de usuarios desde Clerk\n */\nexport async function bulkSyncUsersFromClerk(\n  options: SyncOptions & { batchSize?: number; maxUsers?: number } = {}\n): Promise<{\n  success: boolean;\n  totalProcessed: number;\n  successful: number;\n  failed: number;\n  results: UserSyncResult[];\n}> {\n  const opts = {\n    ...DEFAULT_SYNC_OPTIONS,\n    batchSize: 10,\n    maxUsers: 100,\n    ...options\n  };\n\n  console.log('[USER_SYNC] Iniciando sincronizaci\xF3n masiva de usuarios...');\n\n  try {\n    const client = await clerkClient();\n    const results: UserSyncResult[] = [];\n    let offset = 0;\n    let totalProcessed = 0;\n    let successful = 0;\n    let failed = 0;\n\n    while (totalProcessed < opts.maxUsers) {\n      const limit = Math.min(opts.batchSize, opts.maxUsers - totalProcessed);\n\n      console.log(`[USER_SYNC] Obteniendo batch ${offset}-${offset + limit}...`);\n\n      const clerkUsers = await client.users.getUserList({\n        limit,\n        offset\n      });\n\n      if (!clerkUsers || clerkUsers.length === 0) {\n        console.log('[USER_SYNC] No hay m\xE1s usuarios para procesar');\n        break;\n      }\n\n      // Procesar usuarios en paralelo (con l\xEDmite)\n      const batchPromises = clerkUsers.map(async (clerkUser) => {\n        const clerkUserData: ClerkUserData = {\n          id: clerkUser.id,\n          email_addresses: clerkUser.emailAddresses.map(email => ({\n            email_address: email.emailAddress,\n            id: email.id,\n            verification: {\n              status: email.verification?.status || 'unverified',\n              strategy: email.verification?.strategy || 'unknown'\n            }\n          })),\n          first_name: clerkUser.firstName,\n          last_name: clerkUser.lastName,\n          created_at: clerkUser.createdAt,\n          updated_at: clerkUser.updatedAt,\n          image_url: clerkUser.imageUrl,\n          phone_numbers: clerkUser.phoneNumbers?.map(phone => ({\n            phone_number: phone.phoneNumber,\n            id: phone.id,\n            verification: {\n              status: phone.verification?.status || 'unverified'\n            }\n          })),\n          public_metadata: clerkUser.publicMetadata,\n          private_metadata: clerkUser.privateMetadata\n        };\n\n        return await syncUserToSupabase(clerkUserData, {\n          ...opts,\n          logEvents: false // Evitar spam de logs en sync masivo\n        });\n      });\n\n      const batchResults = await Promise.allSettled(batchPromises);\n\n      batchResults.forEach((result, index) => {\n        if (result.status === 'fulfilled') {\n          results.push(result.value);\n          if (result.value.success) {\n            successful++;\n          } else {\n            failed++;\n          }\n        } else {\n          console.error(`[USER_SYNC] Error procesando usuario ${index}:`, result.reason);\n          results.push({\n            success: false,\n            action: 'error',\n            error: result.reason?.message || 'Error desconocido'\n          });\n          failed++;\n        }\n      });\n\n      totalProcessed += clerkUsers.length;\n      offset += limit;\n\n      // Peque\xF1a pausa entre batches para no sobrecargar\n      if (totalProcessed < opts.maxUsers) {\n        await delay(500);\n      }\n    }\n\n    console.log(`[USER_SYNC] Sincronizaci\xF3n masiva completada: ${successful} exitosos, ${failed} fallidos`);\n\n    return {\n      success: failed === 0,\n      totalProcessed,\n      successful,\n      failed,\n      results\n    };\n  } catch (error) {\n    console.error('[USER_SYNC] Error en sincronizaci\xF3n masiva:', error);\n    return {\n      success: false,\n      totalProcessed: 0,\n      successful: 0,\n      failed: 1,\n      results: [{\n        success: false,\n        action: 'error',\n        error: `Error en sincronizaci\xF3n masiva: ${error.message}`\n      }]\n    };\n  }\n}\n"],
      names: ["bulkSyncUsersFromClerk", "deleteUserFromSupabase", "syncUserFromClerk", "syncUserToSupabase", "DEFAULT_SYNC_OPTIONS", "retryAttempts", "retryDelay", "validateData", "createMissingRole", "logEvents", "DEFAULT_ROLE_NAME", "delay", "ms", "Promise", "resolve", "setTimeout", "validateClerkUserData", "userData", "errors", "id", "push", "email_addresses", "length", "primaryEmail", "email_address", "includes", "valid", "ensureDefaultRole", "supabaseAdmin", "Error", "data", "role", "error", "from", "select", "eq", "single", "code", "console", "log", "newRole", "createError", "insert", "role_name", "display_name", "description", "permissions", "orders", "create", "read", "update", "delete", "profile", "is_active", "is_system_role", "clerkUserData", "options", "opts", "lastError", "validation", "join", "success", "action", "attempt", "result", "performUserSync", "logSecurityEvent", "user_id", "event_type", "event_category", "severity", "metadata", "email", "delayMs", "message", "attempts", "isEmailVerified", "verification", "status", "existingUser", "fetchError", "or", "clerk_user_id", "first_name", "last_name", "is_verified", "clerk_created_at", "created_at", "clerk_updated_at", "updated_at", "image_url", "phone_numbers", "public_metadata", "last_sync", "Date", "toISOString", "updatedUser", "updateError", "userId", "details", "previousData", "newData", "roleId", "newUserData", "role_id", "newUser", "insertError", "existingUserRetry", "retryError", "clerkUserId", "deletedUser", "deleteError", "deleted_at", "deleted_by", "original_clerk_id", "user_email", "client", "clerkClient", "clerkUser", "users", "getUser", "emailAddresses", "map", "emailAddress", "strategy", "firstName", "lastName", "createdAt", "updatedAt", "imageUrl", "phoneNumbers", "phone", "phone_number", "phoneNumber", "publicMetadata", "private_metadata", "privateMetadata", "batchSize", "maxUsers", "results", "offset", "totalProcessed", "successful", "failed", "limit", "Math", "min", "clerkUsers", "getUserList", "batchPromises", "batchResults", "allSettled", "forEach", "index", "value", "reason"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "25e7ba22c1253d48f7e3ae76c54c7ee1b7f28e76"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_198xhq8jfh = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_198xhq8jfh();
cov_198xhq8jfh().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_198xhq8jfh().f[0]++;
  cov_198xhq8jfh().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_198xhq8jfh().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_198xhq8jfh().s[3]++;
_export(exports, {
  bulkSyncUsersFromClerk: function () {
    /* istanbul ignore next */
    cov_198xhq8jfh().f[1]++;
    cov_198xhq8jfh().s[4]++;
    return bulkSyncUsersFromClerk;
  },
  deleteUserFromSupabase: function () {
    /* istanbul ignore next */
    cov_198xhq8jfh().f[2]++;
    cov_198xhq8jfh().s[5]++;
    return deleteUserFromSupabase;
  },
  syncUserFromClerk: function () {
    /* istanbul ignore next */
    cov_198xhq8jfh().f[3]++;
    cov_198xhq8jfh().s[6]++;
    return syncUserFromClerk;
  },
  syncUserToSupabase: function () {
    /* istanbul ignore next */
    cov_198xhq8jfh().f[4]++;
    cov_198xhq8jfh().s[7]++;
    return syncUserToSupabase;
  }
});
const _server =
/* istanbul ignore next */
(cov_198xhq8jfh().s[8]++, require("@clerk/nextjs/server"));
const _supabase =
/* istanbul ignore next */
(cov_198xhq8jfh().s[9]++, require("../supabase"));
const _securityaudit =
/* istanbul ignore next */
(cov_198xhq8jfh().s[10]++, require("./security-audit"));
// =====================================================
// CONFIGURACIÓN Y CONSTANTES
// =====================================================
const DEFAULT_SYNC_OPTIONS =
/* istanbul ignore next */
(cov_198xhq8jfh().s[11]++, {
  retryAttempts: 3,
  retryDelay: 1000,
  validateData: true,
  createMissingRole: true,
  logEvents: true
});
const DEFAULT_ROLE_NAME =
/* istanbul ignore next */
(cov_198xhq8jfh().s[12]++, 'customer');
// =====================================================
// FUNCIONES DE UTILIDAD
// =====================================================
/**
 * Espera un tiempo determinado (para retry logic)
 */
function delay(ms) {
  /* istanbul ignore next */
  cov_198xhq8jfh().f[5]++;
  cov_198xhq8jfh().s[13]++;
  return new Promise(resolve => {
    /* istanbul ignore next */
    cov_198xhq8jfh().f[6]++;
    cov_198xhq8jfh().s[14]++;
    return setTimeout(resolve, ms);
  });
}
/**
 * Valida los datos del usuario de Clerk
 */
function validateClerkUserData(userData) {
  /* istanbul ignore next */
  cov_198xhq8jfh().f[7]++;
  const errors =
  /* istanbul ignore next */
  (cov_198xhq8jfh().s[15]++, []);
  /* istanbul ignore next */
  cov_198xhq8jfh().s[16]++;
  if (!userData.id) {
    /* istanbul ignore next */
    cov_198xhq8jfh().b[0][0]++;
    cov_198xhq8jfh().s[17]++;
    errors.push('ID de usuario de Clerk es requerido');
  } else
  /* istanbul ignore next */
  {
    cov_198xhq8jfh().b[0][1]++;
  }
  cov_198xhq8jfh().s[18]++;
  if (
  /* istanbul ignore next */
  (cov_198xhq8jfh().b[2][0]++, !userData.email_addresses) ||
  /* istanbul ignore next */
  (cov_198xhq8jfh().b[2][1]++, userData.email_addresses.length === 0)) {
    /* istanbul ignore next */
    cov_198xhq8jfh().b[1][0]++;
    cov_198xhq8jfh().s[19]++;
    errors.push('Al menos un email es requerido');
  } else {
    /* istanbul ignore next */
    cov_198xhq8jfh().b[1][1]++;
    const primaryEmail =
    /* istanbul ignore next */
    (cov_198xhq8jfh().s[20]++, userData.email_addresses[0]?.email_address);
    /* istanbul ignore next */
    cov_198xhq8jfh().s[21]++;
    if (
    /* istanbul ignore next */
    (cov_198xhq8jfh().b[4][0]++, !primaryEmail) ||
    /* istanbul ignore next */
    (cov_198xhq8jfh().b[4][1]++, !primaryEmail.includes('@'))) {
      /* istanbul ignore next */
      cov_198xhq8jfh().b[3][0]++;
      cov_198xhq8jfh().s[22]++;
      errors.push('Email primario inválido');
    } else
    /* istanbul ignore next */
    {
      cov_198xhq8jfh().b[3][1]++;
    }
  }
  /* istanbul ignore next */
  cov_198xhq8jfh().s[23]++;
  return {
    valid: errors.length === 0,
    errors
  };
}
/**
 * Obtiene o crea el rol por defecto
 */
async function ensureDefaultRole() {
  /* istanbul ignore next */
  cov_198xhq8jfh().f[8]++;
  cov_198xhq8jfh().s[24]++;
  try {
    /* istanbul ignore next */
    cov_198xhq8jfh().s[25]++;
    if (!_supabase.supabaseAdmin) {
      /* istanbul ignore next */
      cov_198xhq8jfh().b[5][0]++;
      cov_198xhq8jfh().s[26]++;
      throw new Error('Supabase admin client no disponible');
    } else
    /* istanbul ignore next */
    {
      cov_198xhq8jfh().b[5][1]++;
    }
    // Intentar obtener el rol customer
    const {
      data: role,
      error
    } =
    /* istanbul ignore next */
    (cov_198xhq8jfh().s[27]++, await _supabase.supabaseAdmin.from('user_roles').select('id').eq('role_name', DEFAULT_ROLE_NAME).eq('is_active', true).single());
    /* istanbul ignore next */
    cov_198xhq8jfh().s[28]++;
    if (
    /* istanbul ignore next */
    (cov_198xhq8jfh().b[7][0]++, error) &&
    /* istanbul ignore next */
    (cov_198xhq8jfh().b[7][1]++, error.code !== 'PGRST116')) {
      /* istanbul ignore next */
      cov_198xhq8jfh().b[6][0]++;
      cov_198xhq8jfh().s[29]++;
      throw error;
    } else
    /* istanbul ignore next */
    {
      cov_198xhq8jfh().b[6][1]++;
    }
    cov_198xhq8jfh().s[30]++;
    if (role) {
      /* istanbul ignore next */
      cov_198xhq8jfh().b[8][0]++;
      cov_198xhq8jfh().s[31]++;
      return role.id;
    } else
    /* istanbul ignore next */
    {
      cov_198xhq8jfh().b[8][1]++;
    }
    // Si no existe, crear el rol customer
    cov_198xhq8jfh().s[32]++;
    console.log('[USER_SYNC] Creando rol customer por defecto...');
    const {
      data: newRole,
      error: createError
    } =
    /* istanbul ignore next */
    (cov_198xhq8jfh().s[33]++, await _supabase.supabaseAdmin.from('user_roles').insert({
      role_name: DEFAULT_ROLE_NAME,
      display_name: 'Cliente',
      description: 'Cliente regular del e-commerce',
      permissions: {
        orders: {
          create: true,
          read: true,
          update: false,
          delete: false
        },
        profile: {
          read: true,
          update: true
        }
      },
      is_active: true,
      is_system_role: true
    }).select('id').single());
    /* istanbul ignore next */
    cov_198xhq8jfh().s[34]++;
    if (createError) {
      /* istanbul ignore next */
      cov_198xhq8jfh().b[9][0]++;
      cov_198xhq8jfh().s[35]++;
      console.error('[USER_SYNC] Error creando rol por defecto:', createError);
      /* istanbul ignore next */
      cov_198xhq8jfh().s[36]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_198xhq8jfh().b[9][1]++;
    }
    cov_198xhq8jfh().s[37]++;
    return newRole.id;
  } catch (error) {
    /* istanbul ignore next */
    cov_198xhq8jfh().s[38]++;
    console.error('[USER_SYNC] Error en ensureDefaultRole:', error);
    /* istanbul ignore next */
    cov_198xhq8jfh().s[39]++;
    return null;
  }
}
async function syncUserToSupabase(clerkUserData, options =
/* istanbul ignore next */
(cov_198xhq8jfh().b[10][0]++, {})) {
  /* istanbul ignore next */
  cov_198xhq8jfh().f[9]++;
  const opts =
  /* istanbul ignore next */
  (cov_198xhq8jfh().s[40]++, {
    ...DEFAULT_SYNC_OPTIONS,
    ...options
  });
  let lastError =
  /* istanbul ignore next */
  (cov_198xhq8jfh().s[41]++, null);
  // Validar datos si está habilitado
  /* istanbul ignore next */
  cov_198xhq8jfh().s[42]++;
  if (opts.validateData) {
    /* istanbul ignore next */
    cov_198xhq8jfh().b[11][0]++;
    const validation =
    /* istanbul ignore next */
    (cov_198xhq8jfh().s[43]++, validateClerkUserData(clerkUserData));
    /* istanbul ignore next */
    cov_198xhq8jfh().s[44]++;
    if (!validation.valid) {
      /* istanbul ignore next */
      cov_198xhq8jfh().b[12][0]++;
      const error =
      /* istanbul ignore next */
      (cov_198xhq8jfh().s[45]++, `Datos de usuario inválidos: ${validation.errors.join(', ')}`);
      /* istanbul ignore next */
      cov_198xhq8jfh().s[46]++;
      console.error('[USER_SYNC]', error);
      /* istanbul ignore next */
      cov_198xhq8jfh().s[47]++;
      return {
        success: false,
        action: 'error',
        error
      };
    } else
    /* istanbul ignore next */
    {
      cov_198xhq8jfh().b[12][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_198xhq8jfh().b[11][1]++;
  }
  // Retry logic
  cov_198xhq8jfh().s[48]++;
  for (let attempt =
  /* istanbul ignore next */
  (cov_198xhq8jfh().s[49]++, 1); attempt <= opts.retryAttempts; attempt++) {
    /* istanbul ignore next */
    cov_198xhq8jfh().s[50]++;
    try {
      /* istanbul ignore next */
      cov_198xhq8jfh().s[51]++;
      console.log(`[USER_SYNC] Intento ${attempt}/${opts.retryAttempts} para usuario ${clerkUserData.id}`);
      const result =
      /* istanbul ignore next */
      (cov_198xhq8jfh().s[52]++, await performUserSync(clerkUserData, opts));
      // Log evento de éxito si está habilitado
      /* istanbul ignore next */
      cov_198xhq8jfh().s[53]++;
      if (
      /* istanbul ignore next */
      (cov_198xhq8jfh().b[14][0]++, opts.logEvents) &&
      /* istanbul ignore next */
      (cov_198xhq8jfh().b[14][1]++, result.success)) {
        /* istanbul ignore next */
        cov_198xhq8jfh().b[13][0]++;
        cov_198xhq8jfh().s[54]++;
        await (0, _securityaudit.logSecurityEvent)({
          user_id: clerkUserData.id,
          event_type: 'DATA_ACCESS',
          event_category: 'data_access',
          severity: 'low',
          description: `Usuario sincronizado: ${result.action}`,
          metadata: {
            action: result.action,
            email: clerkUserData.email_addresses[0]?.email_address,
            attempt
          }
        });
      } else
      /* istanbul ignore next */
      {
        cov_198xhq8jfh().b[13][1]++;
      }
      cov_198xhq8jfh().s[55]++;
      return result;
    } catch (error) {
      /* istanbul ignore next */
      cov_198xhq8jfh().s[56]++;
      lastError = error;
      /* istanbul ignore next */
      cov_198xhq8jfh().s[57]++;
      console.error(`[USER_SYNC] Error en intento ${attempt}:`, error);
      // Si no es el último intento, esperar antes de reintentar
      /* istanbul ignore next */
      cov_198xhq8jfh().s[58]++;
      if (attempt < opts.retryAttempts) {
        /* istanbul ignore next */
        cov_198xhq8jfh().b[15][0]++;
        const delayMs =
        /* istanbul ignore next */
        (cov_198xhq8jfh().s[59]++, opts.retryDelay * attempt); // Backoff exponencial
        /* istanbul ignore next */
        cov_198xhq8jfh().s[60]++;
        console.log(`[USER_SYNC] Esperando ${delayMs}ms antes del siguiente intento...`);
        /* istanbul ignore next */
        cov_198xhq8jfh().s[61]++;
        await delay(delayMs);
      } else
      /* istanbul ignore next */
      {
        cov_198xhq8jfh().b[15][1]++;
      }
    }
  }
  // Log evento de error si está habilitado
  /* istanbul ignore next */
  cov_198xhq8jfh().s[62]++;
  if (opts.logEvents) {
    /* istanbul ignore next */
    cov_198xhq8jfh().b[16][0]++;
    cov_198xhq8jfh().s[63]++;
    await (0, _securityaudit.logSecurityEvent)({
      user_id: clerkUserData.id,
      event_type: 'SECURITY_VIOLATION',
      event_category: 'data_access',
      severity: 'medium',
      description: `Error sincronizando usuario después de ${opts.retryAttempts} intentos`,
      metadata: {
        error: lastError?.message,
        email: clerkUserData.email_addresses[0]?.email_address,
        attempts: opts.retryAttempts
      }
    });
  } else
  /* istanbul ignore next */
  {
    cov_198xhq8jfh().b[16][1]++;
  }
  cov_198xhq8jfh().s[64]++;
  return {
    success: false,
    action: 'error',
    error: `Error después de ${opts.retryAttempts} intentos: ${lastError?.message}`
  };
}
/**
 * Realiza la sincronización real del usuario
 */
async function performUserSync(clerkUserData, options) {
  /* istanbul ignore next */
  cov_198xhq8jfh().f[10]++;
  cov_198xhq8jfh().s[65]++;
  if (!_supabase.supabaseAdmin) {
    /* istanbul ignore next */
    cov_198xhq8jfh().b[17][0]++;
    cov_198xhq8jfh().s[66]++;
    throw new Error('Supabase admin client no disponible');
  } else
  /* istanbul ignore next */
  {
    cov_198xhq8jfh().b[17][1]++;
  }
  const primaryEmail =
  /* istanbul ignore next */
  (cov_198xhq8jfh().s[67]++, clerkUserData.email_addresses[0]?.email_address);
  const isEmailVerified =
  /* istanbul ignore next */
  (cov_198xhq8jfh().s[68]++, clerkUserData.email_addresses[0]?.verification?.status === 'verified');
  // Verificar si el usuario ya existe
  const {
    data: existingUser,
    error: fetchError
  } =
  /* istanbul ignore next */
  (cov_198xhq8jfh().s[69]++, await _supabase.supabaseAdmin.from('user_profiles').select('*').or(`email.eq.${primaryEmail},clerk_user_id.eq.${clerkUserData.id}`).single());
  /* istanbul ignore next */
  cov_198xhq8jfh().s[70]++;
  if (
  /* istanbul ignore next */
  (cov_198xhq8jfh().b[19][0]++, fetchError) &&
  /* istanbul ignore next */
  (cov_198xhq8jfh().b[19][1]++, fetchError.code !== 'PGRST116')) {
    /* istanbul ignore next */
    cov_198xhq8jfh().b[18][0]++;
    cov_198xhq8jfh().s[71]++;
    throw new Error(`Error verificando usuario existente: ${fetchError.message}`);
  } else
  /* istanbul ignore next */
  {
    cov_198xhq8jfh().b[18][1]++;
  }
  // Preparar datos del usuario
  const userData =
  /* istanbul ignore next */
  (cov_198xhq8jfh().s[72]++, {
    clerk_user_id: clerkUserData.id,
    email: primaryEmail,
    first_name: clerkUserData.first_name,
    last_name: clerkUserData.last_name,
    is_verified: isEmailVerified,
    is_active: true,
    metadata: {
      clerk_created_at: clerkUserData.created_at,
      clerk_updated_at: clerkUserData.updated_at,
      image_url: clerkUserData.image_url,
      phone_numbers: clerkUserData.phone_numbers,
      public_metadata: clerkUserData.public_metadata,
      last_sync: new Date().toISOString()
    },
    updated_at: new Date().toISOString()
  });
  /* istanbul ignore next */
  cov_198xhq8jfh().s[73]++;
  if (existingUser) {
    /* istanbul ignore next */
    cov_198xhq8jfh().b[20][0]++;
    // Actualizar usuario existente
    const {
      data: updatedUser,
      error: updateError
    } =
    /* istanbul ignore next */
    (cov_198xhq8jfh().s[74]++, await _supabase.supabaseAdmin.from('user_profiles').update(userData).eq('id', existingUser.id).select('*').single());
    /* istanbul ignore next */
    cov_198xhq8jfh().s[75]++;
    if (updateError) {
      /* istanbul ignore next */
      cov_198xhq8jfh().b[21][0]++;
      cov_198xhq8jfh().s[76]++;
      throw new Error(`Error actualizando usuario: ${updateError.message}`);
    } else
    /* istanbul ignore next */
    {
      cov_198xhq8jfh().b[21][1]++;
    }
    cov_198xhq8jfh().s[77]++;
    return {
      success: true,
      action: 'updated',
      userId: updatedUser.id,
      details: {
        previousData: existingUser,
        newData: updatedUser
      }
    };
  } else {
    /* istanbul ignore next */
    cov_198xhq8jfh().b[20][1]++;
    // Crear nuevo usuario
    let roleId =
    /* istanbul ignore next */
    (cov_198xhq8jfh().s[78]++, null);
    /* istanbul ignore next */
    cov_198xhq8jfh().s[79]++;
    if (options.createMissingRole) {
      /* istanbul ignore next */
      cov_198xhq8jfh().b[22][0]++;
      cov_198xhq8jfh().s[80]++;
      roleId = await ensureDefaultRole();
    } else
    /* istanbul ignore next */
    {
      cov_198xhq8jfh().b[22][1]++;
    }
    const newUserData =
    /* istanbul ignore next */
    (cov_198xhq8jfh().s[81]++, {
      ...userData,
      role_id: roleId
    });
    const {
      data: newUser,
      error: insertError
    } =
    /* istanbul ignore next */
    (cov_198xhq8jfh().s[82]++, await _supabase.supabaseAdmin.from('user_profiles').insert(newUserData).select('*').single());
    /* istanbul ignore next */
    cov_198xhq8jfh().s[83]++;
    if (insertError) {
      /* istanbul ignore next */
      cov_198xhq8jfh().b[23][0]++;
      cov_198xhq8jfh().s[84]++;
      // Manejar error de clave duplicada
      if (insertError.code === '23505') {
        /* istanbul ignore next */
        cov_198xhq8jfh().b[24][0]++;
        cov_198xhq8jfh().s[85]++;
        console.log('[USER_SYNC] Usuario ya existe (clave duplicada), obteniendo usuario...');
        const {
          data: existingUserRetry,
          error: retryError
        } =
        /* istanbul ignore next */
        (cov_198xhq8jfh().s[86]++, await _supabase.supabaseAdmin.from('user_profiles').select('*').or(`email.eq.${primaryEmail},clerk_user_id.eq.${clerkUserData.id}`).single());
        /* istanbul ignore next */
        cov_198xhq8jfh().s[87]++;
        if (
        /* istanbul ignore next */
        (cov_198xhq8jfh().b[26][0]++, !retryError) &&
        /* istanbul ignore next */
        (cov_198xhq8jfh().b[26][1]++, existingUserRetry)) {
          /* istanbul ignore next */
          cov_198xhq8jfh().b[25][0]++;
          cov_198xhq8jfh().s[88]++;
          return {
            success: true,
            action: 'found_existing',
            userId: existingUserRetry.id,
            details: {
              userData: existingUserRetry
            }
          };
        } else
        /* istanbul ignore next */
        {
          cov_198xhq8jfh().b[25][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_198xhq8jfh().b[24][1]++;
      }
      cov_198xhq8jfh().s[89]++;
      throw new Error(`Error creando usuario: ${insertError.message}`);
    } else
    /* istanbul ignore next */
    {
      cov_198xhq8jfh().b[23][1]++;
    }
    cov_198xhq8jfh().s[90]++;
    return {
      success: true,
      action: 'created',
      userId: newUser.id,
      details: {
        userData: newUser
      }
    };
  }
}
async function deleteUserFromSupabase(clerkUserId, options =
/* istanbul ignore next */
(cov_198xhq8jfh().b[27][0]++, {})) {
  /* istanbul ignore next */
  cov_198xhq8jfh().f[11]++;
  const opts =
  /* istanbul ignore next */
  (cov_198xhq8jfh().s[91]++, {
    ...DEFAULT_SYNC_OPTIONS,
    ...options
  });
  let lastError =
  /* istanbul ignore next */
  (cov_198xhq8jfh().s[92]++, null);
  // Retry logic
  /* istanbul ignore next */
  cov_198xhq8jfh().s[93]++;
  for (let attempt =
  /* istanbul ignore next */
  (cov_198xhq8jfh().s[94]++, 1); attempt <= opts.retryAttempts; attempt++) {
    /* istanbul ignore next */
    cov_198xhq8jfh().s[95]++;
    try {
      /* istanbul ignore next */
      cov_198xhq8jfh().s[96]++;
      console.log(`[USER_SYNC] Eliminando usuario ${clerkUserId} - Intento ${attempt}/${opts.retryAttempts}`);
      /* istanbul ignore next */
      cov_198xhq8jfh().s[97]++;
      if (!_supabase.supabaseAdmin) {
        /* istanbul ignore next */
        cov_198xhq8jfh().b[28][0]++;
        cov_198xhq8jfh().s[98]++;
        throw new Error('Supabase admin client no disponible');
      } else
      /* istanbul ignore next */
      {
        cov_198xhq8jfh().b[28][1]++;
      }
      // Soft delete: marcar como inactivo en lugar de eliminar
      const {
        data: deletedUser,
        error: deleteError
      } =
      /* istanbul ignore next */
      (cov_198xhq8jfh().s[99]++, await _supabase.supabaseAdmin.from('user_profiles').update({
        is_active: false,
        clerk_user_id: null,
        metadata: {
          deleted_at: new Date().toISOString(),
          deleted_by: 'clerk_webhook',
          original_clerk_id: clerkUserId
        },
        updated_at: new Date().toISOString()
      }).eq('clerk_user_id', clerkUserId).select('*').single());
      /* istanbul ignore next */
      cov_198xhq8jfh().s[100]++;
      if (
      /* istanbul ignore next */
      (cov_198xhq8jfh().b[30][0]++, deleteError) &&
      /* istanbul ignore next */
      (cov_198xhq8jfh().b[30][1]++, deleteError.code !== 'PGRST116')) {
        /* istanbul ignore next */
        cov_198xhq8jfh().b[29][0]++;
        cov_198xhq8jfh().s[101]++;
        throw new Error(`Error eliminando usuario: ${deleteError.message}`);
      } else
      /* istanbul ignore next */
      {
        cov_198xhq8jfh().b[29][1]++;
      }
      cov_198xhq8jfh().s[102]++;
      if (!deletedUser) {
        /* istanbul ignore next */
        cov_198xhq8jfh().b[31][0]++;
        cov_198xhq8jfh().s[103]++;
        console.log(`[USER_SYNC] Usuario ${clerkUserId} no encontrado en Supabase`);
        /* istanbul ignore next */
        cov_198xhq8jfh().s[104]++;
        return {
          success: true,
          action: 'deleted',
          details: {
            message: 'Usuario no encontrado en Supabase'
          }
        };
      } else
      /* istanbul ignore next */
      {
        cov_198xhq8jfh().b[31][1]++;
      }
      // Log evento si está habilitado
      cov_198xhq8jfh().s[105]++;
      if (opts.logEvents) {
        /* istanbul ignore next */
        cov_198xhq8jfh().b[32][0]++;
        cov_198xhq8jfh().s[106]++;
        await (0, _securityaudit.logSecurityEvent)({
          user_id: clerkUserId,
          event_type: 'ADMIN_ACTION',
          event_category: 'admin_operations',
          severity: 'medium',
          description: 'Usuario eliminado de Supabase',
          metadata: {
            action: 'soft_delete',
            user_email: deletedUser.email,
            attempt
          }
        });
      } else
      /* istanbul ignore next */
      {
        cov_198xhq8jfh().b[32][1]++;
      }
      cov_198xhq8jfh().s[107]++;
      return {
        success: true,
        action: 'deleted',
        userId: deletedUser.id,
        details: {
          deletedUser
        }
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_198xhq8jfh().s[108]++;
      lastError = error;
      /* istanbul ignore next */
      cov_198xhq8jfh().s[109]++;
      console.error(`[USER_SYNC] Error en intento ${attempt}:`, error);
      /* istanbul ignore next */
      cov_198xhq8jfh().s[110]++;
      if (attempt < opts.retryAttempts) {
        /* istanbul ignore next */
        cov_198xhq8jfh().b[33][0]++;
        const delayMs =
        /* istanbul ignore next */
        (cov_198xhq8jfh().s[111]++, opts.retryDelay * attempt);
        /* istanbul ignore next */
        cov_198xhq8jfh().s[112]++;
        await delay(delayMs);
      } else
      /* istanbul ignore next */
      {
        cov_198xhq8jfh().b[33][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_198xhq8jfh().s[113]++;
  return {
    success: false,
    action: 'error',
    error: `Error después de ${opts.retryAttempts} intentos: ${lastError?.message}`
  };
}
async function syncUserFromClerk(clerkUserId, options =
/* istanbul ignore next */
(cov_198xhq8jfh().b[34][0]++, {})) {
  /* istanbul ignore next */
  cov_198xhq8jfh().f[12]++;
  cov_198xhq8jfh().s[114]++;
  try {
    /* istanbul ignore next */
    cov_198xhq8jfh().s[115]++;
    console.log(`[USER_SYNC] Obteniendo usuario ${clerkUserId} desde Clerk...`);
    const client =
    /* istanbul ignore next */
    (cov_198xhq8jfh().s[116]++, await (0, _server.clerkClient)());
    const clerkUser =
    /* istanbul ignore next */
    (cov_198xhq8jfh().s[117]++, await client.users.getUser(clerkUserId));
    /* istanbul ignore next */
    cov_198xhq8jfh().s[118]++;
    if (!clerkUser) {
      /* istanbul ignore next */
      cov_198xhq8jfh().b[35][0]++;
      cov_198xhq8jfh().s[119]++;
      return {
        success: false,
        action: 'error',
        error: 'Usuario no encontrado en Clerk'
      };
    } else
    /* istanbul ignore next */
    {
      cov_198xhq8jfh().b[35][1]++;
    }
    // Convertir datos de Clerk al formato esperado
    const clerkUserData =
    /* istanbul ignore next */
    (cov_198xhq8jfh().s[120]++, {
      id: clerkUser.id,
      email_addresses: clerkUser.emailAddresses.map(email => {
        /* istanbul ignore next */
        cov_198xhq8jfh().f[13]++;
        cov_198xhq8jfh().s[121]++;
        return {
          email_address: email.emailAddress,
          id: email.id,
          verification: {
            status:
            /* istanbul ignore next */
            (cov_198xhq8jfh().b[36][0]++, email.verification?.status) ||
            /* istanbul ignore next */
            (cov_198xhq8jfh().b[36][1]++, 'unverified'),
            strategy:
            /* istanbul ignore next */
            (cov_198xhq8jfh().b[37][0]++, email.verification?.strategy) ||
            /* istanbul ignore next */
            (cov_198xhq8jfh().b[37][1]++, 'unknown')
          }
        };
      }),
      first_name: clerkUser.firstName,
      last_name: clerkUser.lastName,
      created_at: clerkUser.createdAt,
      updated_at: clerkUser.updatedAt,
      image_url: clerkUser.imageUrl,
      phone_numbers: clerkUser.phoneNumbers?.map(phone => {
        /* istanbul ignore next */
        cov_198xhq8jfh().f[14]++;
        cov_198xhq8jfh().s[122]++;
        return {
          phone_number: phone.phoneNumber,
          id: phone.id,
          verification: {
            status:
            /* istanbul ignore next */
            (cov_198xhq8jfh().b[38][0]++, phone.verification?.status) ||
            /* istanbul ignore next */
            (cov_198xhq8jfh().b[38][1]++, 'unverified')
          }
        };
      }),
      public_metadata: clerkUser.publicMetadata,
      private_metadata: clerkUser.privateMetadata
    });
    /* istanbul ignore next */
    cov_198xhq8jfh().s[123]++;
    return await syncUserToSupabase(clerkUserData, options);
  } catch (error) {
    /* istanbul ignore next */
    cov_198xhq8jfh().s[124]++;
    console.error('[USER_SYNC] Error obteniendo usuario de Clerk:', error);
    /* istanbul ignore next */
    cov_198xhq8jfh().s[125]++;
    return {
      success: false,
      action: 'error',
      error: `Error obteniendo usuario de Clerk: ${error.message}`
    };
  }
}
async function bulkSyncUsersFromClerk(options =
/* istanbul ignore next */
(cov_198xhq8jfh().b[39][0]++, {})) {
  /* istanbul ignore next */
  cov_198xhq8jfh().f[15]++;
  const opts =
  /* istanbul ignore next */
  (cov_198xhq8jfh().s[126]++, {
    ...DEFAULT_SYNC_OPTIONS,
    batchSize: 10,
    maxUsers: 100,
    ...options
  });
  /* istanbul ignore next */
  cov_198xhq8jfh().s[127]++;
  console.log('[USER_SYNC] Iniciando sincronización masiva de usuarios...');
  /* istanbul ignore next */
  cov_198xhq8jfh().s[128]++;
  try {
    const client =
    /* istanbul ignore next */
    (cov_198xhq8jfh().s[129]++, await (0, _server.clerkClient)());
    const results =
    /* istanbul ignore next */
    (cov_198xhq8jfh().s[130]++, []);
    let offset =
    /* istanbul ignore next */
    (cov_198xhq8jfh().s[131]++, 0);
    let totalProcessed =
    /* istanbul ignore next */
    (cov_198xhq8jfh().s[132]++, 0);
    let successful =
    /* istanbul ignore next */
    (cov_198xhq8jfh().s[133]++, 0);
    let failed =
    /* istanbul ignore next */
    (cov_198xhq8jfh().s[134]++, 0);
    /* istanbul ignore next */
    cov_198xhq8jfh().s[135]++;
    while (totalProcessed < opts.maxUsers) {
      const limit =
      /* istanbul ignore next */
      (cov_198xhq8jfh().s[136]++, Math.min(opts.batchSize, opts.maxUsers - totalProcessed));
      /* istanbul ignore next */
      cov_198xhq8jfh().s[137]++;
      console.log(`[USER_SYNC] Obteniendo batch ${offset}-${offset + limit}...`);
      const clerkUsers =
      /* istanbul ignore next */
      (cov_198xhq8jfh().s[138]++, await client.users.getUserList({
        limit,
        offset
      }));
      /* istanbul ignore next */
      cov_198xhq8jfh().s[139]++;
      if (
      /* istanbul ignore next */
      (cov_198xhq8jfh().b[41][0]++, !clerkUsers) ||
      /* istanbul ignore next */
      (cov_198xhq8jfh().b[41][1]++, clerkUsers.length === 0)) {
        /* istanbul ignore next */
        cov_198xhq8jfh().b[40][0]++;
        cov_198xhq8jfh().s[140]++;
        console.log('[USER_SYNC] No hay más usuarios para procesar');
        /* istanbul ignore next */
        cov_198xhq8jfh().s[141]++;
        break;
      } else
      /* istanbul ignore next */
      {
        cov_198xhq8jfh().b[40][1]++;
      }
      // Procesar usuarios en paralelo (con límite)
      const batchPromises =
      /* istanbul ignore next */
      (cov_198xhq8jfh().s[142]++, clerkUsers.map(async clerkUser => {
        /* istanbul ignore next */
        cov_198xhq8jfh().f[16]++;
        const clerkUserData =
        /* istanbul ignore next */
        (cov_198xhq8jfh().s[143]++, {
          id: clerkUser.id,
          email_addresses: clerkUser.emailAddresses.map(email => {
            /* istanbul ignore next */
            cov_198xhq8jfh().f[17]++;
            cov_198xhq8jfh().s[144]++;
            return {
              email_address: email.emailAddress,
              id: email.id,
              verification: {
                status:
                /* istanbul ignore next */
                (cov_198xhq8jfh().b[42][0]++, email.verification?.status) ||
                /* istanbul ignore next */
                (cov_198xhq8jfh().b[42][1]++, 'unverified'),
                strategy:
                /* istanbul ignore next */
                (cov_198xhq8jfh().b[43][0]++, email.verification?.strategy) ||
                /* istanbul ignore next */
                (cov_198xhq8jfh().b[43][1]++, 'unknown')
              }
            };
          }),
          first_name: clerkUser.firstName,
          last_name: clerkUser.lastName,
          created_at: clerkUser.createdAt,
          updated_at: clerkUser.updatedAt,
          image_url: clerkUser.imageUrl,
          phone_numbers: clerkUser.phoneNumbers?.map(phone => {
            /* istanbul ignore next */
            cov_198xhq8jfh().f[18]++;
            cov_198xhq8jfh().s[145]++;
            return {
              phone_number: phone.phoneNumber,
              id: phone.id,
              verification: {
                status:
                /* istanbul ignore next */
                (cov_198xhq8jfh().b[44][0]++, phone.verification?.status) ||
                /* istanbul ignore next */
                (cov_198xhq8jfh().b[44][1]++, 'unverified')
              }
            };
          }),
          public_metadata: clerkUser.publicMetadata,
          private_metadata: clerkUser.privateMetadata
        });
        /* istanbul ignore next */
        cov_198xhq8jfh().s[146]++;
        return await syncUserToSupabase(clerkUserData, {
          ...opts,
          logEvents: false // Evitar spam de logs en sync masivo
        });
      }));
      const batchResults =
      /* istanbul ignore next */
      (cov_198xhq8jfh().s[147]++, await Promise.allSettled(batchPromises));
      /* istanbul ignore next */
      cov_198xhq8jfh().s[148]++;
      batchResults.forEach((result, index) => {
        /* istanbul ignore next */
        cov_198xhq8jfh().f[19]++;
        cov_198xhq8jfh().s[149]++;
        if (result.status === 'fulfilled') {
          /* istanbul ignore next */
          cov_198xhq8jfh().b[45][0]++;
          cov_198xhq8jfh().s[150]++;
          results.push(result.value);
          /* istanbul ignore next */
          cov_198xhq8jfh().s[151]++;
          if (result.value.success) {
            /* istanbul ignore next */
            cov_198xhq8jfh().b[46][0]++;
            cov_198xhq8jfh().s[152]++;
            successful++;
          } else {
            /* istanbul ignore next */
            cov_198xhq8jfh().b[46][1]++;
            cov_198xhq8jfh().s[153]++;
            failed++;
          }
        } else {
          /* istanbul ignore next */
          cov_198xhq8jfh().b[45][1]++;
          cov_198xhq8jfh().s[154]++;
          console.error(`[USER_SYNC] Error procesando usuario ${index}:`, result.reason);
          /* istanbul ignore next */
          cov_198xhq8jfh().s[155]++;
          results.push({
            success: false,
            action: 'error',
            error:
            /* istanbul ignore next */
            (cov_198xhq8jfh().b[47][0]++, result.reason?.message) ||
            /* istanbul ignore next */
            (cov_198xhq8jfh().b[47][1]++, 'Error desconocido')
          });
          /* istanbul ignore next */
          cov_198xhq8jfh().s[156]++;
          failed++;
        }
      });
      /* istanbul ignore next */
      cov_198xhq8jfh().s[157]++;
      totalProcessed += clerkUsers.length;
      /* istanbul ignore next */
      cov_198xhq8jfh().s[158]++;
      offset += limit;
      // Pequeña pausa entre batches para no sobrecargar
      /* istanbul ignore next */
      cov_198xhq8jfh().s[159]++;
      if (totalProcessed < opts.maxUsers) {
        /* istanbul ignore next */
        cov_198xhq8jfh().b[48][0]++;
        cov_198xhq8jfh().s[160]++;
        await delay(500);
      } else
      /* istanbul ignore next */
      {
        cov_198xhq8jfh().b[48][1]++;
      }
    }
    /* istanbul ignore next */
    cov_198xhq8jfh().s[161]++;
    console.log(`[USER_SYNC] Sincronización masiva completada: ${successful} exitosos, ${failed} fallidos`);
    /* istanbul ignore next */
    cov_198xhq8jfh().s[162]++;
    return {
      success: failed === 0,
      totalProcessed,
      successful,
      failed,
      results
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_198xhq8jfh().s[163]++;
    console.error('[USER_SYNC] Error en sincronización masiva:', error);
    /* istanbul ignore next */
    cov_198xhq8jfh().s[164]++;
    return {
      success: false,
      totalProcessed: 0,
      successful: 0,
      failed: 1,
      results: [{
        success: false,
        action: 'error',
        error: `Error en sincronización masiva: ${error.message}`
      }]
    };
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,