{"version":3,"names":["cov_7gur7wk6","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","validateJWTIntegrity","validateJWTPermissions","withJWTValidation","JWT_SECURITY_CONFIG","maxTokenAge","minTimeBeforeExpiry","expectedIssuer","process","env","NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY","split","expectedAudience","allowedAlgorithms","requiredClaims","request","token","payload","getToken","_server","getAuth","error","valid","code","severity","auth","parts","length","header","JSON","parse","atob","includes","alg","decodeError","securityChecks","performTokenSecurityChecks","signatureValid","notExpired","issuerValid","details","issuer","iss","audience","aud","expiresAt","exp","issuedAt","iat","notBefore","nbf","subject","sub","sessionId","sid","metadata","console","now","Math","floor","Date","notBeforeValid","audienceValid","subjectValid","metadataValid","sessionValid","requiredRole","requiredPermissions","jwtValidation","userRole","role","userPermissions","permissions","hasAllPermissions","every","permission","join","handler","args","errorResponse","success","res","status","json","Response","stringify","headers","permissionValidation","jwtPayload","jwtDetails"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\auth\\jwt-validation.ts"],"sourcesContent":["/**\n * Validaciones Avanzadas de JWT para Seguridad\n * Implementa verificación de integridad, autenticidad y validez de tokens\n */\n\nimport { auth, getAuth } from '@clerk/nextjs/server';\nimport { NextRequest } from 'next/server';\nimport type { NextApiRequest } from 'next';\n\n// =====================================================\n// TIPOS Y INTERFACES\n// =====================================================\n\nexport interface JWTValidationResult {\n  valid: boolean;\n  payload?: any;\n  error?: string;\n  code?: string;\n  severity?: 'low' | 'medium' | 'high' | 'critical';\n  details?: {\n    issuer?: string;\n    audience?: string;\n    expiresAt?: number;\n    issuedAt?: number;\n    notBefore?: number;\n    subject?: string;\n    sessionId?: string;\n    metadata?: any;\n  };\n}\n\nexport interface TokenSecurityChecks {\n  signatureValid: boolean;\n  notExpired: boolean;\n  notBeforeValid: boolean;\n  issuerValid: boolean;\n  audienceValid: boolean;\n  subjectValid: boolean;\n  metadataValid: boolean;\n  sessionValid: boolean;\n}\n\n// =====================================================\n// CONFIGURACIÓN DE SEGURIDAD\n// =====================================================\n\nconst JWT_SECURITY_CONFIG = {\n  // Tiempo máximo de vida del token (24 horas)\n  maxTokenAge: 24 * 60 * 60 * 1000,\n  \n  // Tiempo mínimo antes de expiración para considerar válido (5 minutos)\n  minTimeBeforeExpiry: 5 * 60 * 1000,\n  \n  // Issuer esperado de Clerk\n  expectedIssuer: process.env.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY?.split('_')[1] || 'clerk',\n  \n  // Audience esperada\n  expectedAudience: process.env.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY || '',\n  \n  // Algoritmos permitidos\n  allowedAlgorithms: ['RS256', 'HS256'],\n  \n  // Claims requeridos\n  requiredClaims: ['sub', 'iat', 'exp', 'iss', 'aud']\n};\n\n// =====================================================\n// FUNCIONES DE VALIDACIÓN DE JWT\n// =====================================================\n\n/**\n * Valida la integridad y autenticidad de un token JWT\n */\nexport async function validateJWTIntegrity(\n  request?: NextRequest | NextApiRequest\n): Promise<JWTValidationResult> {\n  try {\n    let token: string | null = null;\n    let payload: any = null;\n\n    // Obtener token usando métodos oficiales de Clerk\n    if (request && 'query' in request) {\n      // Pages Router\n      const { getToken } = getAuth(request as NextApiRequest);\n      try {\n        token = await getToken();\n      } catch (error) {\n        return {\n          valid: false,\n          error: 'Error obteniendo token desde Pages Router',\n          code: 'TOKEN_RETRIEVAL_ERROR',\n          severity: 'medium'\n        };\n      }\n    } else {\n      // App Router\n      try {\n        const { getToken } = await auth();\n        if (getToken) {\n          token = await getToken();\n        }\n      } catch (error) {\n        return {\n          valid: false,\n          error: 'Error obteniendo token desde App Router',\n          code: 'TOKEN_RETRIEVAL_ERROR',\n          severity: 'medium'\n        };\n      }\n    }\n\n    if (!token) {\n      return {\n        valid: false,\n        error: 'Token JWT no encontrado',\n        code: 'TOKEN_NOT_FOUND',\n        severity: 'high'\n      };\n    }\n\n    // Decodificar token (sin verificar firma - solo para inspección)\n    try {\n      const parts = token.split('.');\n      if (parts.length !== 3) {\n        return {\n          valid: false,\n          error: 'Formato de token JWT inválido',\n          code: 'INVALID_TOKEN_FORMAT',\n          severity: 'high'\n        };\n      }\n\n      const header = JSON.parse(atob(parts[0]));\n      payload = JSON.parse(atob(parts[1]));\n\n      // Validar algoritmo\n      if (!JWT_SECURITY_CONFIG.allowedAlgorithms.includes(header.alg)) {\n        return {\n          valid: false,\n          error: `Algoritmo de token no permitido: ${header.alg}`,\n          code: 'INVALID_ALGORITHM',\n          severity: 'critical'\n        };\n      }\n\n    } catch (decodeError) {\n      return {\n        valid: false,\n        error: 'Error decodificando token JWT',\n        code: 'TOKEN_DECODE_ERROR',\n        severity: 'high'\n      };\n    }\n\n    // Ejecutar verificaciones de seguridad\n    const securityChecks = await performTokenSecurityChecks(payload, token);\n    \n    if (!securityChecks.signatureValid) {\n      return {\n        valid: false,\n        error: 'Firma del token inválida',\n        code: 'INVALID_SIGNATURE',\n        severity: 'critical'\n      };\n    }\n\n    if (!securityChecks.notExpired) {\n      return {\n        valid: false,\n        error: 'Token expirado',\n        code: 'TOKEN_EXPIRED',\n        severity: 'high'\n      };\n    }\n\n    if (!securityChecks.issuerValid) {\n      return {\n        valid: false,\n        error: 'Issuer del token inválido',\n        code: 'INVALID_ISSUER',\n        severity: 'high'\n      };\n    }\n\n    // Token válido\n    return {\n      valid: true,\n      payload,\n      details: {\n        issuer: payload.iss,\n        audience: payload.aud,\n        expiresAt: payload.exp,\n        issuedAt: payload.iat,\n        notBefore: payload.nbf,\n        subject: payload.sub,\n        sessionId: payload.sid,\n        metadata: payload.metadata\n      }\n    };\n\n  } catch (error) {\n    console.error('[JWT] Error en validación de integridad:', error);\n    return {\n      valid: false,\n      error: 'Error interno en validación de JWT',\n      code: 'VALIDATION_ERROR',\n      severity: 'critical'\n    };\n  }\n}\n\n/**\n * Realiza verificaciones de seguridad específicas del token\n */\nasync function performTokenSecurityChecks(\n  payload: any,\n  token: string\n): Promise<TokenSecurityChecks> {\n  const now = Math.floor(Date.now() / 1000);\n\n  return {\n    // Verificar que el token no esté expirado\n    notExpired: payload.exp && payload.exp > now,\n    \n    // Verificar notBefore si existe\n    notBeforeValid: !payload.nbf || payload.nbf <= now,\n    \n    // Verificar issuer\n    issuerValid: payload.iss && payload.iss.includes('clerk'),\n    \n    // Verificar audience\n    audienceValid: payload.aud && typeof payload.aud === 'string',\n    \n    // Verificar subject (userId)\n    subjectValid: payload.sub && typeof payload.sub === 'string',\n    \n    // Verificar metadata básica\n    metadataValid: true, // Clerk maneja esto internamente\n    \n    // Verificar sesión\n    sessionValid: payload.sid && typeof payload.sid === 'string',\n    \n    // Nota: La verificación de firma la hace Clerk internamente\n    signatureValid: true\n  };\n}\n\n/**\n * Valida permisos específicos en el token JWT\n */\nexport async function validateJWTPermissions(\n  requiredRole: string,\n  requiredPermissions: string[] = [],\n  request?: NextRequest | NextApiRequest\n): Promise<JWTValidationResult> {\n  try {\n    const jwtValidation = await validateJWTIntegrity(request);\n    \n    if (!jwtValidation.valid) {\n      return jwtValidation;\n    }\n\n    const payload = jwtValidation.payload;\n    \n    // Verificar rol en metadata\n    const userRole = payload.metadata?.role || payload.role;\n    if (requiredRole && userRole !== requiredRole) {\n      return {\n        valid: false,\n        error: `Rol requerido: ${requiredRole}, rol actual: ${userRole}`,\n        code: 'INSUFFICIENT_ROLE',\n        severity: 'high'\n      };\n    }\n\n    // Verificar permisos específicos si se proporcionan\n    if (requiredPermissions.length > 0) {\n      const userPermissions = payload.metadata?.permissions || [];\n      const hasAllPermissions = requiredPermissions.every(\n        permission => userPermissions.includes(permission)\n      );\n      \n      if (!hasAllPermissions) {\n        return {\n          valid: false,\n          error: `Permisos insuficientes. Requeridos: ${requiredPermissions.join(', ')}`,\n          code: 'INSUFFICIENT_PERMISSIONS',\n          severity: 'high'\n        };\n      }\n    }\n\n    return {\n      valid: true,\n      payload,\n      details: jwtValidation.details\n    };\n\n  } catch (error) {\n    console.error('[JWT] Error en validación de permisos:', error);\n    return {\n      valid: false,\n      error: 'Error interno en validación de permisos JWT',\n      code: 'PERMISSION_VALIDATION_ERROR',\n      severity: 'critical'\n    };\n  }\n}\n\n/**\n * Middleware para validación automática de JWT\n */\nexport function withJWTValidation(\n  requiredRole?: string,\n  requiredPermissions?: string[]\n) {\n  return function (handler: Function) {\n    return async (request: NextRequest | NextApiRequest, ...args: any[]) => {\n      try {\n        // Validar integridad del JWT\n        const jwtValidation = await validateJWTIntegrity(request);\n        \n        if (!jwtValidation.valid) {\n          const errorResponse = {\n            success: false,\n            error: jwtValidation.error,\n            code: jwtValidation.code,\n            severity: jwtValidation.severity\n          };\n\n          if ('query' in request) {\n            // Pages Router\n            const res = args[0] as any;\n            return res.status(401).json(errorResponse);\n          } else {\n            // App Router\n            return new Response(JSON.stringify(errorResponse), {\n              status: 401,\n              headers: { 'Content-Type': 'application/json' }\n            });\n          }\n        }\n\n        // Validar permisos si se especifican\n        if (requiredRole || requiredPermissions) {\n          const permissionValidation = await validateJWTPermissions(\n            requiredRole || '',\n            requiredPermissions || [],\n            request\n          );\n          \n          if (!permissionValidation.valid) {\n            const errorResponse = {\n              success: false,\n              error: permissionValidation.error,\n              code: permissionValidation.code,\n              severity: permissionValidation.severity\n            };\n\n            if ('query' in request) {\n              // Pages Router\n              const res = args[0] as any;\n              return res.status(403).json(errorResponse);\n            } else {\n              // App Router\n              return new Response(JSON.stringify(errorResponse), {\n                status: 403,\n                headers: { 'Content-Type': 'application/json' }\n              });\n            }\n          }\n        }\n\n        // Añadir información del JWT al request\n        (request as any).jwtPayload = jwtValidation.payload;\n        (request as any).jwtDetails = jwtValidation.details;\n\n        return handler(request, ...args);\n\n      } catch (error) {\n        console.error('[JWT] Error en middleware de validación:', error);\n        \n        const errorResponse = {\n          success: false,\n          error: 'Error interno en validación JWT',\n          code: 'JWT_MIDDLEWARE_ERROR'\n        };\n\n        if ('query' in request) {\n          // Pages Router\n          const res = args[0] as any;\n          return res.status(500).json(errorResponse);\n        } else {\n          // App Router\n          return new Response(JSON.stringify(errorResponse), {\n            status: 500,\n            headers: { 'Content-Type': 'application/json' }\n          });\n        }\n      }\n    };\n  };\n}\n"],"mappings":"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","ignoreList":[]}