{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\context\\QuickViewModalContext.tsx"],"sourcesContent":["\"use client\";\r\nimport React, { createContext, useContext, useState } from \"react\";\r\n\r\ninterface ModalContextType {\r\n  isModalOpen: boolean;\r\n  openModal: () => void;\r\n  closeModal: () => void;\r\n}\r\n\r\nconst ModalContext = createContext<ModalContextType | undefined>(undefined);\r\n\r\nexport const useModalContext = () => {\r\n  const context = useContext(ModalContext);\r\n  if (!context) {\r\n    throw new Error(\"useModalContext must be used within a ModalProvider\");\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const ModalProvider = ({ children }: { children: React.ReactNode }) => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const openModal = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <ModalContext.Provider value={{ isModalOpen, openModal, closeModal }}>\r\n      {children}\r\n    </ModalContext.Provider>\r\n  );\r\n};\r\n"],"names":["ModalProvider","useModalContext","ModalContext","createContext","undefined","context","useContext","Error","children","isModalOpen","setIsModalOpen","useState","openModal","closeModal","Provider","value"],"mappings":"AAAA;;;;;;;;;;;;IAmBaA,aAAa;eAAbA;;IARAC,eAAe;eAAfA;;;;+DAV8C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQ3D,MAAMC,6BAAeC,IAAAA,oBAAa,EAA+BC;AAE1D,MAAMH,kBAAkB;IAC7B,MAAMI,UAAUC,IAAAA,iBAAU,EAACJ;IAC3B,IAAI,CAACG,SAAS;QACZ,MAAM,IAAIE,MAAM;IAClB;IACA,OAAOF;AACT;AAEO,MAAML,gBAAgB,CAAC,EAAEQ,QAAQ,EAAiC;IACvE,MAAM,CAACC,aAAaC,eAAe,GAAGC,IAAAA,eAAQ,EAAC;IAE/C,MAAMC,YAAY;QAChBF,eAAe;IACjB;IAEA,MAAMG,aAAa;QACjBH,eAAe;IACjB;IAEA,qBACE,qBAACR,aAAaY,QAAQ;QAACC,OAAO;YAAEN;YAAaG;YAAWC;QAAW;kBAChEL;;AAGP"}