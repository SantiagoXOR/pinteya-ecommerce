{"version":3,"names":["cov_1w00p3fycr","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","getPermissionsByRole","getSecurityContext","hasAllPermissions","hasAnyPermission","hasPermission","isValidAdminRole","validateAnalyticsPermissions","validateOrderManagementPermissions","validateProductPermissions","validateSecurityContext","validateUserManagementPermissions","withAnalyticsSecurity","withOrderManagementSecurity","withProductSecurity","withSecurityValidation","withUserManagementSecurity","role","rolePermissions","admin","canReadProducts","canWriteProducts","canDeleteProducts","canManageUsers","canViewAnalytics","canManageOrders","canAccessAdmin","isAdmin","isModerator","moderator","manager","user","validAdminRoles","includes","permissions","permission","requiredPermissions","some","every","userId","request","client","_server","clerkClient","users","getUser","metadata","publicMetadata","userRole","ipAddress","userAgent","headers","get","req","department","lastLogin","loginCount","isActive","emailVerified","emailAddresses","verification","status","error","console","operation","context","valid","code","severity","criticalOperations","op","action","permissionMap","read","create","update","delete","toUpperCase","handler","args","errorResponse","success","json","Response","JSON","stringify","validation","statusCode","securityContext"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\auth\\security-validations.ts"],"sourcesContent":["/**\n * Validaciones de Seguridad Avanzadas\n * Implementa verificaciones granulares de permisos y roles\n */\n\nimport { clerkClient } from '@clerk/nextjs/server';\nimport type { NextRequest, NextApiRequest } from 'next';\n\n// =====================================================\n// TIPOS Y INTERFACES\n// =====================================================\n\nexport interface SecurityContext {\n  userId: string;\n  sessionId?: string;\n  userRole: string;\n  permissions: UserPermissions;\n  metadata: UserMetadata;\n  ipAddress?: string;\n  userAgent?: string;\n}\n\nexport interface UserPermissions {\n  canReadProducts: boolean;\n  canWriteProducts: boolean;\n  canDeleteProducts: boolean;\n  canManageUsers: boolean;\n  canViewAnalytics: boolean;\n  canManageOrders: boolean;\n  canAccessAdmin: boolean;\n  isAdmin: boolean;\n  isModerator: boolean;\n}\n\nexport interface UserMetadata {\n  role: string;\n  department?: string;\n  permissions?: Record<string, any>;\n  lastLogin?: string;\n  loginCount?: number;\n  isActive: boolean;\n  emailVerified: boolean;\n}\n\nexport interface SecurityValidationResult {\n  valid: boolean;\n  context?: SecurityContext;\n  error?: string;\n  code?: string;\n  severity?: 'low' | 'medium' | 'high' | 'critical';\n}\n\n// =====================================================\n// FUNCIONES DE VALIDACIÓN DE ROLES\n// =====================================================\n\n/**\n * Obtiene permisos detallados basados en el rol del usuario\n */\nexport function getPermissionsByRole(role: string): UserPermissions {\n  const rolePermissions: Record<string, UserPermissions> = {\n    admin: {\n      canReadProducts: true,\n      canWriteProducts: true,\n      canDeleteProducts: true,\n      canManageUsers: true,\n      canViewAnalytics: true,\n      canManageOrders: true,\n      canAccessAdmin: true,\n      isAdmin: true,\n      isModerator: true\n    },\n    moderator: {\n      canReadProducts: true,\n      canWriteProducts: true,\n      canDeleteProducts: false,\n      canManageUsers: false,\n      canViewAnalytics: true,\n      canManageOrders: true,\n      canAccessAdmin: true,\n      isAdmin: false,\n      isModerator: true\n    },\n    manager: {\n      canReadProducts: true,\n      canWriteProducts: true,\n      canDeleteProducts: false,\n      canManageUsers: false,\n      canViewAnalytics: true,\n      canManageOrders: true,\n      canAccessAdmin: true,\n      isAdmin: false,\n      isModerator: false\n    },\n    user: {\n      canReadProducts: false,\n      canWriteProducts: false,\n      canDeleteProducts: false,\n      canManageUsers: false,\n      canViewAnalytics: false,\n      canManageOrders: false,\n      canAccessAdmin: false,\n      isAdmin: false,\n      isModerator: false\n    }\n  };\n\n  return rolePermissions[role] || rolePermissions.user;\n}\n\n/**\n * Valida si un rol es válido para operaciones administrativas\n */\nexport function isValidAdminRole(role: string): boolean {\n  const validAdminRoles = ['admin', 'moderator', 'manager'];\n  return validAdminRoles.includes(role);\n}\n\n/**\n * Verifica si un usuario tiene un permiso específico\n */\nexport function hasPermission(\n  permissions: UserPermissions,\n  permission: keyof UserPermissions\n): boolean {\n  return permissions[permission] === true;\n}\n\n/**\n * Verifica múltiples permisos (OR logic)\n */\nexport function hasAnyPermission(\n  permissions: UserPermissions,\n  requiredPermissions: (keyof UserPermissions)[]\n): boolean {\n  return requiredPermissions.some(permission => hasPermission(permissions, permission));\n}\n\n/**\n * Verifica múltiples permisos (AND logic)\n */\nexport function hasAllPermissions(\n  permissions: UserPermissions,\n  requiredPermissions: (keyof UserPermissions)[]\n): boolean {\n  return requiredPermissions.every(permission => hasPermission(permissions, permission));\n}\n\n// =====================================================\n// FUNCIONES DE VALIDACIÓN DE CONTEXTO\n// =====================================================\n\n/**\n * Obtiene el contexto de seguridad completo del usuario\n */\nexport async function getSecurityContext(\n  userId: string,\n  request?: NextRequest | NextApiRequest\n): Promise<SecurityContext | null> {\n  try {\n    const client = await clerkClient();\n    const user = await client.users.getUser(userId);\n    \n    if (!user) {\n      return null;\n    }\n\n    // Extraer metadata del usuario\n    const metadata = user.publicMetadata as UserMetadata;\n    const userRole = metadata?.role || 'user';\n    \n    // Obtener permisos basados en el rol\n    const permissions = getPermissionsByRole(userRole);\n    \n    // Extraer información de la request\n    let ipAddress: string | undefined;\n    let userAgent: string | undefined;\n    \n    if (request) {\n      if ('headers' in request && typeof request.headers.get === 'function') {\n        // NextRequest\n        ipAddress = request.headers.get('x-forwarded-for') || \n                   request.headers.get('x-real-ip') || \n                   'unknown';\n        userAgent = request.headers.get('user-agent') || 'unknown';\n      } else if ('headers' in request) {\n        // NextApiRequest\n        const req = request as NextApiRequest;\n        ipAddress = req.headers['x-forwarded-for'] as string || \n                   req.headers['x-real-ip'] as string || \n                   'unknown';\n        userAgent = req.headers['user-agent'] || 'unknown';\n      }\n    }\n\n    return {\n      userId,\n      userRole,\n      permissions,\n      metadata: {\n        role: userRole,\n        department: metadata?.department,\n        permissions: metadata?.permissions,\n        lastLogin: metadata?.lastLogin,\n        loginCount: metadata?.loginCount,\n        isActive: metadata?.isActive !== false,\n        emailVerified: user.emailAddresses?.[0]?.verification?.status === 'verified'\n      },\n      ipAddress,\n      userAgent\n    };\n  } catch (error) {\n    console.error('[SECURITY] Error obteniendo contexto de seguridad:', error);\n    return null;\n  }\n}\n\n/**\n * Valida el contexto de seguridad para operaciones específicas\n */\nexport async function validateSecurityContext(\n  userId: string,\n  operation: string,\n  requiredPermissions: (keyof UserPermissions)[],\n  request?: NextRequest | NextApiRequest\n): Promise<SecurityValidationResult> {\n  try {\n    // Obtener contexto de seguridad\n    const context = await getSecurityContext(userId, request);\n    \n    if (!context) {\n      return {\n        valid: false,\n        error: 'No se pudo obtener el contexto de seguridad del usuario',\n        code: 'SECURITY_CONTEXT_ERROR',\n        severity: 'high'\n      };\n    }\n\n    // Validar que el usuario esté activo\n    if (!context.metadata.isActive) {\n      return {\n        valid: false,\n        error: 'Usuario inactivo',\n        code: 'USER_INACTIVE',\n        severity: 'medium'\n      };\n    }\n\n    // Validar que el email esté verificado para operaciones críticas\n    const criticalOperations = ['DELETE', 'MANAGE_USERS', 'MANAGE_ORDERS'];\n    if (criticalOperations.some(op => operation.includes(op)) && !context.metadata.emailVerified) {\n      return {\n        valid: false,\n        error: 'Email no verificado para operaciones críticas',\n        code: 'EMAIL_NOT_VERIFIED',\n        severity: 'medium'\n      };\n    }\n\n    // Validar permisos requeridos\n    if (!hasAllPermissions(context.permissions, requiredPermissions)) {\n      return {\n        valid: false,\n        error: `Permisos insuficientes para la operación: ${operation}`,\n        code: 'INSUFFICIENT_PERMISSIONS',\n        severity: 'high'\n      };\n    }\n\n    // Validar rol para acceso admin\n    if (requiredPermissions.includes('canAccessAdmin') && !isValidAdminRole(context.userRole)) {\n      return {\n        valid: false,\n        error: 'Rol insuficiente para acceso administrativo',\n        code: 'INVALID_ADMIN_ROLE',\n        severity: 'high'\n      };\n    }\n\n    return {\n      valid: true,\n      context\n    };\n  } catch (error) {\n    console.error('[SECURITY] Error en validación de contexto:', error);\n    return {\n      valid: false,\n      error: 'Error interno en validación de seguridad',\n      code: 'VALIDATION_ERROR',\n      severity: 'critical'\n    };\n  }\n}\n\n// =====================================================\n// FUNCIONES DE VALIDACIÓN ESPECÍFICAS\n// =====================================================\n\n/**\n * Valida permisos para operaciones CRUD en productos\n */\nexport async function validateProductPermissions(\n  userId: string,\n  action: 'read' | 'create' | 'update' | 'delete',\n  request?: NextRequest | NextApiRequest\n): Promise<SecurityValidationResult> {\n  const permissionMap = {\n    read: ['canReadProducts'] as (keyof UserPermissions)[],\n    create: ['canWriteProducts'] as (keyof UserPermissions)[],\n    update: ['canWriteProducts'] as (keyof UserPermissions)[],\n    delete: ['canDeleteProducts'] as (keyof UserPermissions)[]\n  };\n\n  return validateSecurityContext(\n    userId,\n    `PRODUCT_${action.toUpperCase()}`,\n    permissionMap[action],\n    request\n  );\n}\n\n/**\n * Valida permisos para gestión de usuarios\n */\nexport async function validateUserManagementPermissions(\n  userId: string,\n  request?: NextRequest | NextApiRequest\n): Promise<SecurityValidationResult> {\n  return validateSecurityContext(\n    userId,\n    'MANAGE_USERS',\n    ['canManageUsers', 'canAccessAdmin'],\n    request\n  );\n}\n\n/**\n * Valida permisos para acceso a analytics\n */\nexport async function validateAnalyticsPermissions(\n  userId: string,\n  request?: NextRequest | NextApiRequest\n): Promise<SecurityValidationResult> {\n  return validateSecurityContext(\n    userId,\n    'VIEW_ANALYTICS',\n    ['canViewAnalytics', 'canAccessAdmin'],\n    request\n  );\n}\n\n/**\n * Valida permisos para gestión de órdenes\n */\nexport async function validateOrderManagementPermissions(\n  userId: string,\n  request?: NextRequest | NextApiRequest\n): Promise<SecurityValidationResult> {\n  return validateSecurityContext(\n    userId,\n    'MANAGE_ORDERS',\n    ['canManageOrders', 'canAccessAdmin'],\n    request\n  );\n}\n\n// =====================================================\n// MIDDLEWARE DE SEGURIDAD\n// =====================================================\n\n/**\n * Middleware de validación de seguridad para APIs\n */\nexport function withSecurityValidation(\n  requiredPermissions: (keyof UserPermissions)[],\n  operation: string\n) {\n  return function (handler: Function) {\n    return async (request: NextRequest | NextApiRequest, ...args: any[]) => {\n      try {\n        // Obtener userId del request (debe ser añadido por middleware de autenticación)\n        const userId = (request as any).userId ||\n                      request.headers?.get?.('x-clerk-user-id') ||\n                      (request.headers as any)?.['x-clerk-user-id'];\n\n        if (!userId) {\n          const errorResponse = {\n            success: false,\n            error: 'Usuario no autenticado',\n            code: 'AUTH_REQUIRED'\n          };\n\n          if ('json' in args[0]) {\n            // NextApiResponse\n            return args[0].status(401).json(errorResponse);\n          } else {\n            // NextResponse\n            return new Response(JSON.stringify(errorResponse), {\n              status: 401,\n              headers: { 'Content-Type': 'application/json' }\n            });\n          }\n        }\n\n        // Validar contexto de seguridad\n        const validation = await validateSecurityContext(\n          userId,\n          operation,\n          requiredPermissions,\n          request\n        );\n\n        if (!validation.valid) {\n          const errorResponse = {\n            success: false,\n            error: validation.error,\n            code: validation.code,\n            severity: validation.severity\n          };\n\n          const statusCode = validation.code === 'AUTH_REQUIRED' ? 401 : 403;\n\n          if ('json' in args[0]) {\n            // NextApiResponse\n            return args[0].status(statusCode).json(errorResponse);\n          } else {\n            // NextResponse\n            return new Response(JSON.stringify(errorResponse), {\n              status: statusCode,\n              headers: { 'Content-Type': 'application/json' }\n            });\n          }\n        }\n\n        // Añadir contexto de seguridad al request\n        (request as any).securityContext = validation.context;\n\n        // Ejecutar handler original\n        return handler(request, ...args);\n      } catch (error) {\n        console.error('[SECURITY] Error en middleware de seguridad:', error);\n\n        const errorResponse = {\n          success: false,\n          error: 'Error interno de seguridad',\n          code: 'SECURITY_ERROR'\n        };\n\n        if ('json' in args[0]) {\n          // NextApiResponse\n          return args[0].status(500).json(errorResponse);\n        } else {\n          // NextResponse\n          return new Response(JSON.stringify(errorResponse), {\n            status: 500,\n            headers: { 'Content-Type': 'application/json' }\n          });\n        }\n      }\n    };\n  };\n}\n\n/**\n * Wrapper específico para validación de productos\n */\nexport function withProductSecurity(action: 'read' | 'create' | 'update' | 'delete') {\n  const permissionMap = {\n    read: ['canReadProducts'] as (keyof UserPermissions)[],\n    create: ['canWriteProducts'] as (keyof UserPermissions)[],\n    update: ['canWriteProducts'] as (keyof UserPermissions)[],\n    delete: ['canDeleteProducts'] as (keyof UserPermissions)[]\n  };\n\n  return withSecurityValidation(\n    permissionMap[action],\n    `PRODUCT_${action.toUpperCase()}`\n  );\n}\n\n/**\n * Wrapper específico para validación de usuarios\n */\nexport function withUserManagementSecurity() {\n  return withSecurityValidation(\n    ['canManageUsers', 'canAccessAdmin'],\n    'MANAGE_USERS'\n  );\n}\n\n/**\n * Wrapper específico para validación de analytics\n */\nexport function withAnalyticsSecurity() {\n  return withSecurityValidation(\n    ['canViewAnalytics', 'canAccessAdmin'],\n    'VIEW_ANALYTICS'\n  );\n}\n\n/**\n * Wrapper específico para validación de órdenes\n */\nexport function withOrderManagementSecurity() {\n  return withSecurityValidation(\n    ['canManageOrders', 'canAccessAdmin'],\n    'MANAGE_ORDERS'\n  );\n}\n"],"mappings":"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","ignoreList":[]}