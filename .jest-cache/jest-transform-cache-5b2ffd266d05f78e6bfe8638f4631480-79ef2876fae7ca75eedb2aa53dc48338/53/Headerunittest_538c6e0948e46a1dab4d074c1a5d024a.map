{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\Header\\__tests__\\unit\\Header.unit.test.tsx"],"sourcesContent":["/**\n * Tests Unitarios - Header Principal\n * Pruebas enfocadas en el componente Header individual\n */\n\nimport React from 'react';\nimport { render, screen, fireEvent, waitFor } from '@testing-library/react';\nimport { Provider } from 'react-redux';\nimport { ClerkProvider } from '@clerk/nextjs';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport Header from '../../index';\nimport { store } from '@/redux/store';\nimport { CartModalProvider } from '@/app/context/CartSidebarModalContext';\n\n// Mock de Next.js\njest.mock('next/navigation', () => ({\n  useRouter: () => ({\n    push: jest.fn(),\n    replace: jest.fn(),\n    prefetch: jest.fn(),\n  }),\n  useSearchParams: () => ({\n    get: jest.fn(),\n  }),\n}));\n\n// Mock de Clerk\njest.mock('@clerk/nextjs', () => ({\n  ClerkProvider: ({ children }: { children: React.ReactNode }) => <div>{children}</div>,\n  SignedIn: ({ children }: { children: React.ReactNode }) => <div data-testid=\"signed-in\">{children}</div>,\n  SignedOut: ({ children }: { children: React.ReactNode }) => <div data-testid=\"signed-out\">{children}</div>,\n  UserButton: () => <div data-testid=\"user-button\">UserButton</div>,\n  useUser: () => ({\n    isSignedIn: false,\n    user: null,\n    isLoaded: true,\n  }),\n}));\n\n// Mock de hooks personalizados\njest.mock('@/hooks/useGeolocation', () => ({\n  useGeolocation: () => ({\n    detectedZone: { id: 'cordoba-capital', name: 'Córdoba Capital' },\n    requestLocation: jest.fn(),\n    permissionStatus: 'granted',\n    isLoading: false,\n    error: null,\n    location: null,\n    testLocation: jest.fn(),\n    deliveryZones: [\n      { id: 'cordoba-capital', name: 'Córdoba Capital' }\n    ],\n  }),\n}));\n\njest.mock('@/hooks/useCartAnimation', () => ({\n  useCartAnimation: () => ({\n    isAnimating: false,\n  }),\n}));\n\n// Mock de SearchAutocompleteIntegrated\njest.mock('@/components/ui/SearchAutocompleteIntegrated', () => ({\n  SearchAutocompleteIntegrated: ({ onSearch }: { onSearch: (query: string) => void }) => (\n    <input\n      data-testid=\"search-input\"\n      placeholder=\"latex interior blanco 20lts\"\n      onChange={(e) => onSearch(e.target.value)}\n    />\n  ),\n}));\n\n// Mock de OptimizedCartIcon\njest.mock('@/components/ui/optimized-cart-icon', () => ({\n  OptimizedCartIcon: ({ alt }: { alt: string }) => (\n    <div data-testid=\"cart-icon\" aria-label={alt}>Cart Icon</div>\n  ),\n}));\n\n// Mock de HeaderLogo\njest.mock('@/components/ui/OptimizedLogo', () => ({\n  HeaderLogo: () => (\n    <img\n      src=\"/images/logo/LOGO POSITIVO.svg\"\n      alt=\"Pinteya - Tu Pinturería Online\"\n      data-testid=\"header-logo\"\n    />\n  ),\n}));\n\n// Wrapper de pruebas\nconst TestWrapper = ({ children }: { children: React.ReactNode }) => {\n  const queryClient = new QueryClient({\n    defaultOptions: {\n      queries: { retry: false },\n      mutations: { retry: false },\n    },\n  });\n\n  return (\n    <Provider store={store}>\n      <QueryClientProvider client={queryClient}>\n        <ClerkProvider publishableKey=\"test-key\">\n          <CartModalProvider>\n            {children}\n          </CartModalProvider>\n        </ClerkProvider>\n      </QueryClientProvider>\n    </Provider>\n  );\n};\n\ndescribe('Header - Tests Unitarios', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  describe('Renderizado Básico', () => {\n    it('debe renderizar el header con todos los elementos principales', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      // Verificar estructura principal\n      expect(screen.getByRole('banner')).toBeInTheDocument();\n      expect(screen.getByTestId('header-logo')).toBeInTheDocument();\n      expect(screen.getByTestId('search-input')).toBeInTheDocument();\n      expect(screen.getByTestId('cart-icon')).toBeInTheDocument();\n    });\n\n    it('debe tener las clases CSS correctas para el diseño', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      const header = screen.getByRole('banner');\n      expect(header).toHaveClass('fixed', 'left-0', 'top-0', 'w-full', 'z-9999');\n      expect(header).toHaveClass('bg-blaze-orange-600', 'rounded-b-3xl', 'shadow-lg');\n    });\n\n    it('debe renderizar el topbar con información de envíos', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      expect(screen.getByText(/Envíos en/)).toBeInTheDocument();\n      expect(screen.getByText('Córdoba Capital')).toBeInTheDocument();\n    });\n  });\n\n  describe('Logo y Navegación', () => {\n    it('debe renderizar el logo con atributos correctos', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      const logo = screen.getByTestId('header-logo');\n      expect(logo).toHaveAttribute('alt', 'Pinteya - Tu Pinturería Online');\n      expect(logo).toHaveAttribute('src', '/images/logo/LOGO POSITIVO.svg');\n    });\n\n    it('debe tener un enlace al home en el logo', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      const logoLink = screen.getByTestId('header-logo').closest('a');\n      expect(logoLink).toHaveAttribute('href', '/');\n    });\n  });\n\n  describe('Sistema de Búsqueda', () => {\n    it('debe renderizar el campo de búsqueda con placeholder correcto', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      const searchInput = screen.getByTestId('search-input');\n      expect(searchInput).toHaveAttribute('placeholder', 'latex interior blanco 20lts');\n    });\n\n    it('debe manejar cambios en el input de búsqueda', async () => {\n      const mockOnSearch = jest.fn();\n      \n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      const searchInput = screen.getByTestId('search-input');\n      fireEvent.change(searchInput, { target: { value: 'pintura blanca' } });\n\n      await waitFor(() => {\n        expect(searchInput).toHaveValue('pintura blanca');\n      });\n    });\n  });\n\n  describe('Carrito de Compras', () => {\n    it('debe renderizar el botón de carrito', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      const cartButton = screen.getByTestId('cart-icon');\n      expect(cartButton).toBeInTheDocument();\n    });\n\n    it('debe tener las clases CSS correctas para el botón de carrito', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      const cartButton = screen.getByTestId('cart-icon').closest('button');\n      expect(cartButton).toHaveClass('bg-yellow-400', 'hover:bg-yellow-500');\n      expect(cartButton).toHaveClass('rounded-full', 'shadow-lg');\n    });\n\n    it('debe ser clickeable', () => {\n      const mockOpenCartModal = jest.fn();\n      \n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      const cartButton = screen.getByTestId('cart-icon').closest('button');\n      fireEvent.click(cartButton!);\n      \n      // Verificar que el botón es clickeable (no debe lanzar error)\n      expect(cartButton).toBeInTheDocument();\n    });\n  });\n\n  describe('Geolocalización', () => {\n    it('debe mostrar la zona detectada', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      expect(screen.getByText('Córdoba Capital')).toBeInTheDocument();\n    });\n\n    it('debe mostrar el icono de ubicación', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      // Buscar por el texto que acompaña al icono\n      expect(screen.getByText(/Envíos en/)).toBeInTheDocument();\n    });\n  });\n\n  describe('Autenticación', () => {\n    it('debe renderizar el componente de autenticación', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      // Verificar que se renderiza el estado SignedOut por defecto\n      expect(screen.getByTestId('signed-out')).toBeInTheDocument();\n    });\n  });\n\n  describe('Responsive Design', () => {\n    it('debe ocultar elementos específicos en mobile', () => {\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      const cartButton = screen.getByTestId('cart-icon').closest('button');\n      expect(cartButton).toHaveClass('hidden', 'sm:flex');\n    });\n  });\n\n  describe('Estados de Carga', () => {\n    it('debe manejar el estado de carga de geolocalización', () => {\n      // Mock del hook con estado de carga\n      jest.mocked(require('@/hooks/useGeolocation').useGeolocation).mockReturnValue({\n        detectedZone: null,\n        requestLocation: jest.fn(),\n        permissionStatus: 'prompt',\n        isLoading: true,\n        error: null,\n        location: null,\n        testLocation: jest.fn(),\n        deliveryZones: [],\n      });\n\n      render(\n        <TestWrapper>\n          <Header />\n        </TestWrapper>\n      );\n\n      expect(screen.getByText('Detectando...')).toBeInTheDocument();\n    });\n  });\n});\n"],"names":["jest","mock","useRouter","push","fn","replace","prefetch","useSearchParams","get","ClerkProvider","children","div","SignedIn","data-testid","SignedOut","UserButton","useUser","isSignedIn","user","isLoaded","useGeolocation","detectedZone","id","name","requestLocation","permissionStatus","isLoading","error","location","testLocation","deliveryZones","useCartAnimation","isAnimating","SearchAutocompleteIntegrated","onSearch","input","placeholder","onChange","e","target","value","OptimizedCartIcon","alt","aria-label","HeaderLogo","img","src","TestWrapper","queryClient","QueryClient","defaultOptions","queries","retry","mutations","Provider","store","QueryClientProvider","client","publishableKey","CartModalProvider","describe","beforeEach","clearAllMocks","it","render","Header","expect","screen","getByRole","toBeInTheDocument","getByTestId","header","toHaveClass","getByText","logo","toHaveAttribute","logoLink","closest","searchInput","mockOnSearch","fireEvent","change","waitFor","toHaveValue","cartButton","mockOpenCartModal","click","mocked","require","mockReturnValue"],"mappings":"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"}