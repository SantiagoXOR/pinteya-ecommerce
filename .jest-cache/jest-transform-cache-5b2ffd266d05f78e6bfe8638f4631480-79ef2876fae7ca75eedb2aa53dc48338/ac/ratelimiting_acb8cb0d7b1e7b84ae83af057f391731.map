{"version":3,"names":["cov_1aym79rmb9","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","RATE_LIMIT_CONFIGS","checkRateLimit","clearRateLimit","getRateLimitStats","withAdminRateLimit","withAuthRateLimit","withPaymentRateLimit","withProductRateLimit","withRateLimit","auth","windowMs","maxRequests","message","admin","products","payments","general","rateLimitStore","Map","setInterval","process","env","NODE_ENV","now","Date","key","entry","entries","resetTime","delete","generateRateLimitKey","request","prefix","clientIP","ip","forwarded","getHeader","realIP","cfIP","split","userAgent","userAgentHash","hashString","headerName","headers","get","header","Array","isArray","str","i","length","char","charCodeAt","Math","abs","toString","config","keyPrefix","keyGenerator","count","firstRequest","set","allowed","limit","remaining","retryAfter","ceil","error","code","console","configName","customConfig","baseConfig","handler","args","rateLimitResult","errorResponse","success","rateLimit","res","Object","forEach","value","setHeader","status","json","Response","JSON","stringify","response","from","values","activeEntries","filter","totalKeys","size","oldestEntry","min","map","e","newestEntry","max"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\auth\\rate-limiting.ts"],"sourcesContent":["/**\n * Sistema de Rate Limiting para APIs\n * Implementa límites de velocidad para prevenir ataques de fuerza bruta\n */\n\nimport { NextRequest } from 'next/server';\nimport type { NextApiRequest } from 'next';\n\n// =====================================================\n// TIPOS Y INTERFACES\n// =====================================================\n\nexport interface RateLimitResult {\n  allowed: boolean;\n  limit: number;\n  remaining: number;\n  resetTime: number;\n  retryAfter?: number;\n  error?: string;\n  code?: string;\n}\n\nexport interface RateLimitConfig {\n  windowMs: number;  // Ventana de tiempo en milisegundos\n  maxRequests: number;  // Máximo número de requests por ventana\n  keyGenerator?: (request: NextRequest | NextApiRequest) => string;\n  skipSuccessfulRequests?: boolean;\n  skipFailedRequests?: boolean;\n  message?: string;\n}\n\nexport interface RateLimitEntry {\n  count: number;\n  resetTime: number;\n  firstRequest: number;\n}\n\n// =====================================================\n// CONFIGURACIONES DE RATE LIMITING\n// =====================================================\n\nexport const RATE_LIMIT_CONFIGS = {\n  // APIs de autenticación - muy restrictivo\n  auth: {\n    windowMs: 15 * 60 * 1000, // 15 minutos\n    maxRequests: 5, // 5 intentos por 15 minutos\n    message: 'Demasiados intentos de autenticación. Intenta de nuevo en 15 minutos.'\n  },\n  \n  // APIs admin - restrictivo\n  admin: {\n    windowMs: 5 * 60 * 1000, // 5 minutos\n    maxRequests: 30, // 30 requests por 5 minutos\n    message: 'Demasiadas requests administrativas. Intenta de nuevo en 5 minutos.'\n  },\n  \n  // APIs de productos - moderado\n  products: {\n    windowMs: 1 * 60 * 1000, // 1 minuto\n    maxRequests: 60, // 60 requests por minuto\n    message: 'Demasiadas requests de productos. Intenta de nuevo en 1 minuto.'\n  },\n  \n  // APIs de pagos - muy restrictivo\n  payments: {\n    windowMs: 10 * 60 * 1000, // 10 minutos\n    maxRequests: 10, // 10 requests por 10 minutos\n    message: 'Demasiadas requests de pagos. Intenta de nuevo en 10 minutos.'\n  },\n  \n  // APIs generales - permisivo\n  general: {\n    windowMs: 1 * 60 * 1000, // 1 minuto\n    maxRequests: 100, // 100 requests por minuto\n    message: 'Demasiadas requests. Intenta de nuevo en 1 minuto.'\n  }\n};\n\n// =====================================================\n// ALMACENAMIENTO EN MEMORIA (Compatible con Edge Runtime)\n// =====================================================\n\nconst rateLimitStore = new Map<string, RateLimitEntry>();\n\n// Limpiar entradas expiradas cada 5 minutos\n// Solo en Node.js runtime, no en Edge Runtime\nif (typeof setInterval !== 'undefined' && typeof process !== 'undefined' && process.env.NODE_ENV !== 'production') {\n  setInterval(() => {\n    const now = Date.now();\n    for (const [key, entry] of rateLimitStore.entries()) {\n      if (entry.resetTime < now) {\n        rateLimitStore.delete(key);\n      }\n    }\n  }, 5 * 60 * 1000);\n}\n\n// =====================================================\n// FUNCIONES DE RATE LIMITING\n// =====================================================\n\n/**\n * Genera una clave única para el rate limiting\n */\nfunction generateRateLimitKey(\n  request: NextRequest | NextApiRequest,\n  prefix: string = 'default'\n): string {\n  // Obtener IP del cliente\n  let clientIP = 'unknown';\n  \n  if ('ip' in request && request.ip) {\n    clientIP = request.ip;\n  } else if ('headers' in request) {\n    // Intentar obtener IP de headers\n    const forwarded = getHeader(request, 'x-forwarded-for');\n    const realIP = getHeader(request, 'x-real-ip');\n    const cfIP = getHeader(request, 'cf-connecting-ip');\n    \n    clientIP = forwarded?.split(',')[0] || realIP || cfIP || 'unknown';\n  }\n\n  // Obtener User-Agent para mayor especificidad\n  const userAgent = getHeader(request, 'user-agent') || 'unknown';\n  const userAgentHash = hashString(userAgent);\n\n  return `${prefix}:${clientIP}:${userAgentHash}`;\n}\n\n/**\n * Obtiene un header de manera compatible\n */\nfunction getHeader(\n  request: NextRequest | NextApiRequest,\n  headerName: string\n): string | null {\n  if ('headers' in request && typeof request.headers.get === 'function') {\n    return (request as NextRequest).headers.get(headerName);\n  } else if ('headers' in request) {\n    const header = (request as NextApiRequest).headers[headerName];\n    return Array.isArray(header) ? header[0] : header || null;\n  }\n  return null;\n}\n\n/**\n * Hash simple para User-Agent\n */\nfunction hashString(str: string): string {\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    const char = str.charCodeAt(i);\n    hash = ((hash << 5) - hash) + char;\n    hash = hash & hash; // Convertir a 32-bit integer\n  }\n  return Math.abs(hash).toString(36);\n}\n\n/**\n * Verifica si una request está dentro de los límites\n */\nexport async function checkRateLimit(\n  request: NextRequest | NextApiRequest,\n  config: RateLimitConfig,\n  keyPrefix: string = 'api'\n): Promise<RateLimitResult> {\n  try {\n    const now = Date.now();\n    const key = config.keyGenerator \n      ? config.keyGenerator(request)\n      : generateRateLimitKey(request, keyPrefix);\n\n    // Obtener entrada actual o crear nueva\n    let entry = rateLimitStore.get(key);\n    \n    if (!entry || entry.resetTime < now) {\n      // Crear nueva entrada\n      entry = {\n        count: 1,\n        resetTime: now + config.windowMs,\n        firstRequest: now\n      };\n      rateLimitStore.set(key, entry);\n      \n      return {\n        allowed: true,\n        limit: config.maxRequests,\n        remaining: config.maxRequests - 1,\n        resetTime: entry.resetTime\n      };\n    }\n\n    // Incrementar contador\n    entry.count++;\n    rateLimitStore.set(key, entry);\n\n    // Verificar si excede el límite\n    if (entry.count > config.maxRequests) {\n      const retryAfter = Math.ceil((entry.resetTime - now) / 1000);\n      \n      return {\n        allowed: false,\n        limit: config.maxRequests,\n        remaining: 0,\n        resetTime: entry.resetTime,\n        retryAfter,\n        error: config.message || 'Rate limit exceeded',\n        code: 'RATE_LIMIT_EXCEEDED'\n      };\n    }\n\n    return {\n      allowed: true,\n      limit: config.maxRequests,\n      remaining: config.maxRequests - entry.count,\n      resetTime: entry.resetTime\n    };\n\n  } catch (error) {\n    console.error('[RATE_LIMIT] Error en verificación:', error);\n    \n    // En caso de error, permitir la request pero loggear\n    return {\n      allowed: true,\n      limit: config.maxRequests,\n      remaining: config.maxRequests,\n      resetTime: Date.now() + config.windowMs,\n      error: 'Error interno en rate limiting'\n    };\n  }\n}\n\n/**\n * Middleware de rate limiting\n */\nexport function withRateLimit(\n  configName: keyof typeof RATE_LIMIT_CONFIGS,\n  customConfig?: Partial<RateLimitConfig>\n) {\n  const baseConfig = RATE_LIMIT_CONFIGS[configName];\n  const config = { ...baseConfig, ...customConfig };\n\n  return function (handler: Function) {\n    return async (request: NextRequest | NextApiRequest, ...args: any[]) => {\n      try {\n        const rateLimitResult = await checkRateLimit(request, config, configName);\n        \n        // Añadir headers de rate limiting\n        const headers = {\n          'X-RateLimit-Limit': rateLimitResult.limit.toString(),\n          'X-RateLimit-Remaining': rateLimitResult.remaining.toString(),\n          'X-RateLimit-Reset': Math.ceil(rateLimitResult.resetTime / 1000).toString()\n        };\n\n        if (rateLimitResult.retryAfter) {\n          headers['Retry-After'] = rateLimitResult.retryAfter.toString();\n        }\n\n        if (!rateLimitResult.allowed) {\n          const errorResponse = {\n            success: false,\n            error: rateLimitResult.error,\n            code: rateLimitResult.code,\n            rateLimit: {\n              limit: rateLimitResult.limit,\n              remaining: rateLimitResult.remaining,\n              resetTime: rateLimitResult.resetTime,\n              retryAfter: rateLimitResult.retryAfter\n            }\n          };\n\n          if ('query' in request) {\n            // Pages Router\n            const res = args[0] as any;\n            Object.entries(headers).forEach(([key, value]) => {\n              res.setHeader(key, value);\n            });\n            return res.status(429).json(errorResponse);\n          } else {\n            // App Router\n            return new Response(JSON.stringify(errorResponse), {\n              status: 429,\n              headers: {\n                'Content-Type': 'application/json',\n                ...headers\n              }\n            });\n          }\n        }\n\n        // Añadir información de rate limiting al request\n        (request as any).rateLimit = rateLimitResult;\n\n        // Ejecutar handler original\n        const response = await handler(request, ...args);\n\n        // Añadir headers a la respuesta si es posible\n        if (response && typeof response.headers?.set === 'function') {\n          Object.entries(headers).forEach(([key, value]) => {\n            response.headers.set(key, value);\n          });\n        }\n\n        return response;\n\n      } catch (error) {\n        console.error('[RATE_LIMIT] Error en middleware:', error);\n        return handler(request, ...args);\n      }\n    };\n  };\n}\n\n/**\n * Rate limiting específico para APIs de autenticación\n */\nexport function withAuthRateLimit() {\n  return withRateLimit('auth');\n}\n\n/**\n * Rate limiting específico para APIs admin\n */\nexport function withAdminRateLimit() {\n  return withRateLimit('admin');\n}\n\n/**\n * Rate limiting específico para APIs de productos\n */\nexport function withProductRateLimit() {\n  return withRateLimit('products');\n}\n\n/**\n * Rate limiting específico para APIs de pagos\n */\nexport function withPaymentRateLimit() {\n  return withRateLimit('payments');\n}\n\n/**\n * Función para limpiar manualmente el rate limit de una clave\n */\nexport function clearRateLimit(key: string): boolean {\n  return rateLimitStore.delete(key);\n}\n\n/**\n * Función para obtener estadísticas de rate limiting\n */\nexport function getRateLimitStats(): {\n  totalKeys: number;\n  activeEntries: number;\n  oldestEntry: number | null;\n  newestEntry: number | null;\n} {\n  const now = Date.now();\n  const entries = Array.from(rateLimitStore.values());\n  const activeEntries = entries.filter(entry => entry.resetTime > now);\n  \n  return {\n    totalKeys: rateLimitStore.size,\n    activeEntries: activeEntries.length,\n    oldestEntry: entries.length > 0 ? Math.min(...entries.map(e => e.firstRequest)) : null,\n    newestEntry: entries.length > 0 ? Math.max(...entries.map(e => e.firstRequest)) : null\n  };\n}\n"],"mappings":"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","ignoreList":[]}