b67a68b167c7ad19c60392536a0f2132
// 🖼️ Enterprise Product Images API
"use strict";

/* istanbul ignore next */
function cov_2a4mqo9dj1() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\products\\[id]\\images\\route.ts";
  var hash = "0712261a4b7494f7554fea74a846a2e4fcbce5fe";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\products\\[id]\\images\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 20
        }
      },
      "6": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 38
        }
      },
      "7": {
        start: {
          line: 21,
          column: 13
        },
        end: {
          line: 21,
          column: 27
        }
      },
      "8": {
        start: {
          line: 22,
          column: 28
        },
        end: {
          line: 22,
          column: 84
        }
      },
      "9": {
        start: {
          line: 23,
          column: 22
        },
        end: {
          line: 23,
          column: 72
        }
      },
      "10": {
        start: {
          line: 24,
          column: 19
        },
        end: {
          line: 24,
          column: 66
        }
      },
      "11": {
        start: {
          line: 25,
          column: 27
        },
        end: {
          line: 25,
          column: 84
        }
      },
      "12": {
        start: {
          line: 26,
          column: 20
        },
        end: {
          line: 26,
          column: 52
        }
      },
      "13": {
        start: {
          line: 28,
          column: 26
        },
        end: {
          line: 32,
          column: 2
        }
      },
      "14": {
        start: {
          line: 33,
          column: 26
        },
        end: {
          line: 37,
          column: 2
        }
      },
      "15": {
        start: {
          line: 38,
          column: 28
        },
        end: {
          line: 40,
          column: 2
        }
      },
      "16": {
        start: {
          line: 41,
          column: 26
        },
        end: {
          line: 44,
          column: 2
        }
      },
      "17": {
        start: {
          line: 47,
          column: 24
        },
        end: {
          line: 47,
          column: 60
        }
      },
      "18": {
        start: {
          line: 48,
          column: 31
        },
        end: {
          line: 48,
          column: 68
        }
      },
      "19": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 49,
          column: 74
        }
      },
      "20": {
        start: {
          line: 53,
          column: 25
        },
        end: {
          line: 58,
          column: 5
        }
      },
      "21": {
        start: {
          line: 59,
          column: 20
        },
        end: {
          line: 59,
          column: 35
        }
      },
      "22": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 62,
          column: 5
        }
      },
      "23": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 101
        }
      },
      "24": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 65,
          column: 5
        }
      },
      "25": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 94
        }
      },
      "26": {
        start: {
          line: 69,
          column: 22
        },
        end: {
          line: 69,
          column: 32
        }
      },
      "27": {
        start: {
          line: 70,
          column: 22
        },
        end: {
          line: 70,
          column: 51
        }
      },
      "28": {
        start: {
          line: 71,
          column: 22
        },
        end: {
          line: 71,
          column: 66
        }
      },
      "29": {
        start: {
          line: 72,
          column: 4
        },
        end: {
          line: 72,
          column: 61
        }
      },
      "30": {
        start: {
          line: 76,
          column: 21
        },
        end: {
          line: 76,
          column: 39
        }
      },
      "31": {
        start: {
          line: 77,
          column: 28
        },
        end: {
          line: 80,
          column: 6
        }
      },
      "32": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 83,
          column: 5
        }
      },
      "33": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 95
        }
      },
      "34": {
        start: {
          line: 85,
          column: 30
        },
        end: {
          line: 85,
          column: 92
        }
      },
      "35": {
        start: {
          line: 86,
          column: 4
        },
        end: {
          line: 89,
          column: 6
        }
      },
      "36": {
        start: {
          line: 93,
          column: 21
        },
        end: {
          line: 93,
          column: 39
        }
      },
      "37": {
        start: {
          line: 94,
          column: 22
        },
        end: {
          line: 96,
          column: 6
        }
      },
      "38": {
        start: {
          line: 97,
          column: 4
        },
        end: {
          line: 100,
          column: 5
        }
      },
      "39": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 98,
          column: 66
        }
      },
      "40": {
        start: {
          line: 105,
          column: 24
        },
        end: {
          line: 165,
          column: 1
        }
      },
      "41": {
        start: {
          line: 106,
          column: 31
        },
        end: {
          line: 106,
          column: 38
        }
      },
      "42": {
        start: {
          line: 107,
          column: 22
        },
        end: {
          line: 107,
          column: 31
        }
      },
      "43": {
        start: {
          line: 109,
          column: 29
        },
        end: {
          line: 111,
          column: 6
        }
      },
      "44": {
        start: {
          line: 112,
          column: 4
        },
        end: {
          line: 114,
          column: 5
        }
      },
      "45": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 113,
          column: 106
        }
      },
      "46": {
        start: {
          line: 116,
          column: 51
        },
        end: {
          line: 116,
          column: 130
        }
      },
      "47": {
        start: {
          line: 117,
          column: 4
        },
        end: {
          line: 119,
          column: 5
        }
      },
      "48": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 118,
          column: 58
        }
      },
      "49": {
        start: {
          line: 121,
          column: 21
        },
        end: {
          line: 121,
          column: 45
        }
      },
      "50": {
        start: {
          line: 122,
          column: 17
        },
        end: {
          line: 122,
          column: 37
        }
      },
      "51": {
        start: {
          line: 123,
          column: 20
        },
        end: {
          line: 123,
          column: 44
        }
      },
      "52": {
        start: {
          line: 124,
          column: 22
        },
        end: {
          line: 124,
          column: 59
        }
      },
      "53": {
        start: {
          line: 125,
          column: 4
        },
        end: {
          line: 127,
          column: 5
        }
      },
      "54": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 126,
          column: 77
        }
      },
      "55": {
        start: {
          line: 129,
          column: 4
        },
        end: {
          line: 129,
          column: 28
        }
      },
      "56": {
        start: {
          line: 131,
          column: 21
        },
        end: {
          line: 131,
          column: 64
        }
      },
      "57": {
        start: {
          line: 132,
          column: 25
        },
        end: {
          line: 132,
          column: 67
        }
      },
      "58": {
        start: {
          line: 134,
          column: 50
        },
        end: {
          line: 144,
          column: 24
        }
      },
      "59": {
        start: {
          line: 145,
          column: 4
        },
        end: {
          line: 149,
          column: 5
        }
      },
      "60": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 147,
          column: 56
        }
      },
      "61": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 148,
          column: 117
        }
      },
      "62": {
        start: {
          line: 151,
          column: 4
        },
        end: {
          line: 155,
          column: 5
        }
      },
      "63": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 154,
          column: 65
        }
      },
      "64": {
        start: {
          line: 157,
          column: 4
        },
        end: {
          line: 157,
          column: 112
        }
      },
      "65": {
        start: {
          line: 158,
          column: 4
        },
        end: {
          line: 164,
          column: 7
        }
      },
      "66": {
        start: {
          line: 169,
          column: 23
        },
        end: {
          line: 193,
          column: 1
        }
      },
      "67": {
        start: {
          line: 170,
          column: 25
        },
        end: {
          line: 170,
          column: 32
        }
      },
      "68": {
        start: {
          line: 171,
          column: 22
        },
        end: {
          line: 171,
          column: 31
        }
      },
      "69": {
        start: {
          line: 173,
          column: 29
        },
        end: {
          line: 175,
          column: 6
        }
      },
      "70": {
        start: {
          line: 176,
          column: 4
        },
        end: {
          line: 178,
          column: 5
        }
      },
      "71": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 177,
          column: 106
        }
      },
      "72": {
        start: {
          line: 180,
          column: 36
        },
        end: {
          line: 184,
          column: 6
        }
      },
      "73": {
        start: {
          line: 185,
          column: 4
        },
        end: {
          line: 187,
          column: 5
        }
      },
      "74": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 186,
          column: 100
        }
      },
      "75": {
        start: {
          line: 188,
          column: 4
        },
        end: {
          line: 192,
          column: 7
        }
      },
      "76": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 196,
          column: 15
        }
      },
      "77": {
        start: {
          line: 197,
          column: 13
        },
        end: {
          line: 199,
          column: 16
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 9
          },
          end: {
            line: 13,
            column: 10
          }
        },
        loc: {
          start: {
            line: 13,
            column: 20
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 10
          },
          end: {
            line: 16,
            column: 11
          }
        },
        loc: {
          start: {
            line: 16,
            column: 21
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "getStorageClient",
        decl: {
          start: {
            line: 46,
            column: 9
          },
          end: {
            line: 46,
            column: 25
          }
        },
        loc: {
          start: {
            line: 46,
            column: 28
          },
          end: {
            line: 50,
            column: 1
          }
        },
        line: 46
      },
      "4": {
        name: "validateImageFile",
        decl: {
          start: {
            line: 52,
            column: 9
          },
          end: {
            line: 52,
            column: 26
          }
        },
        loc: {
          start: {
            line: 52,
            column: 33
          },
          end: {
            line: 66,
            column: 1
          }
        },
        line: 52
      },
      "5": {
        name: "generateImageFilename",
        decl: {
          start: {
            line: 68,
            column: 9
          },
          end: {
            line: 68,
            column: 30
          }
        },
        loc: {
          start: {
            line: 68,
            column: 56
          },
          end: {
            line: 73,
            column: 1
          }
        },
        line: 68
      },
      "6": {
        name: "uploadImageToStorage",
        decl: {
          start: {
            line: 75,
            column: 15
          },
          end: {
            line: 75,
            column: 35
          }
        },
        loc: {
          start: {
            line: 75,
            column: 52
          },
          end: {
            line: 90,
            column: 1
          }
        },
        line: 75
      },
      "7": {
        name: "deleteImageFromStorage",
        decl: {
          start: {
            line: 92,
            column: 15
          },
          end: {
            line: 92,
            column: 37
          }
        },
        loc: {
          start: {
            line: 92,
            column: 44
          },
          end: {
            line: 101,
            column: 1
          }
        },
        line: 92
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 105,
            column: 24
          },
          end: {
            line: 105,
            column: 25
          }
        },
        loc: {
          start: {
            line: 105,
            column: 53
          },
          end: {
            line: 165,
            column: 1
          }
        },
        line: 105
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 169,
            column: 23
          },
          end: {
            line: 169,
            column: 24
          }
        },
        loc: {
          start: {
            line: 169,
            column: 52
          },
          end: {
            line: 193,
            column: 1
          }
        },
        line: 169
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "1": {
        loc: {
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "2": {
        loc: {
          start: {
            line: 81,
            column: 4
          },
          end: {
            line: 83,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 4
          },
          end: {
            line: 83,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 81
      },
      "3": {
        loc: {
          start: {
            line: 97,
            column: 4
          },
          end: {
            line: 100,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 4
          },
          end: {
            line: 100,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "4": {
        loc: {
          start: {
            line: 112,
            column: 4
          },
          end: {
            line: 114,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 112,
            column: 4
          },
          end: {
            line: 114,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 112
      },
      "5": {
        loc: {
          start: {
            line: 117,
            column: 4
          },
          end: {
            line: 119,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 117,
            column: 4
          },
          end: {
            line: 119,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 117
      },
      "6": {
        loc: {
          start: {
            line: 117,
            column: 8
          },
          end: {
            line: 117,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 117,
            column: 8
          },
          end: {
            line: 117,
            column: 20
          }
        }, {
          start: {
            line: 117,
            column: 24
          },
          end: {
            line: 117,
            column: 32
          }
        }],
        line: 117
      },
      "7": {
        loc: {
          start: {
            line: 125,
            column: 4
          },
          end: {
            line: 127,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 4
          },
          end: {
            line: 127,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "8": {
        loc: {
          start: {
            line: 138,
            column: 18
          },
          end: {
            line: 138,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 138,
            column: 18
          },
          end: {
            line: 138,
            column: 25
          }
        }, {
          start: {
            line: 138,
            column: 29
          },
          end: {
            line: 138,
            column: 33
          }
        }],
        line: 138
      },
      "9": {
        loc: {
          start: {
            line: 145,
            column: 4
          },
          end: {
            line: 149,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 145,
            column: 4
          },
          end: {
            line: 149,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 145
      },
      "10": {
        loc: {
          start: {
            line: 151,
            column: 4
          },
          end: {
            line: 155,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 151,
            column: 4
          },
          end: {
            line: 155,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 151
      },
      "11": {
        loc: {
          start: {
            line: 176,
            column: 4
          },
          end: {
            line: 178,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 4
          },
          end: {
            line: 178,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 176
      },
      "12": {
        loc: {
          start: {
            line: 185,
            column: 4
          },
          end: {
            line: 187,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 185,
            column: 4
          },
          end: {
            line: 187,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 185
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\products\\[id]\\images\\route.ts"],
      sourcesContent: ["// \uD83D\uDDBC\uFE0F Enterprise Product Images API\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { z } from 'zod';\nimport { composeMiddlewares } from '@/lib/api/middleware-composer';\nimport { withErrorHandler, ApiError, ValidationError, NotFoundError } from '@/lib/api/error-handler';\nimport { withApiLogging, logAdminAction } from '@/lib/api/api-logger';\nimport { withAdminAuth } from '@/lib/auth/api-auth-middleware';\nimport { withValidation } from '@/lib/validation/admin-schemas';\nimport { createClient } from '@supabase/supabase-js';\n\n// Validation schemas\nconst ImageUploadSchema = z.object({\n  file: z.any(), // File object\n  alt_text: z.string().optional(),\n  is_primary: z.boolean().default(false)\n});\n\nconst ImageUpdateSchema = z.object({\n  alt_text: z.string().optional(),\n  is_primary: z.boolean().optional(),\n  display_order: z.number().int().min(0).optional()\n});\n\nconst ProductParamsSchema = z.object({\n  id: z.string().uuid('ID de producto inv\xE1lido')\n});\n\nconst ImageParamsSchema = z.object({\n  id: z.string().uuid('ID de producto inv\xE1lido'),\n  imageId: z.string().uuid('ID de imagen inv\xE1lido')\n});\n\n// Helper function to get Supabase Storage client\nfunction getStorageClient() {\n  const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;\n  const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY!;\n  \n  return createClient(supabaseUrl, supabaseServiceKey);\n}\n\n// Helper function to validate file\nfunction validateImageFile(file: File) {\n  const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/webp'];\n  const maxSize = 5 * 1024 * 1024; // 5MB\n\n  if (!allowedTypes.includes(file.type)) {\n    throw new ValidationError('Tipo de archivo no permitido. Use JPG, PNG o WebP');\n  }\n\n  if (file.size > maxSize) {\n    throw new ValidationError('El archivo es demasiado grande. M\xE1ximo 5MB');\n  }\n}\n\n// Helper function to generate unique filename\nfunction generateImageFilename(originalName: string, productId: string): string {\n  const timestamp = Date.now();\n  const extension = originalName.split('.').pop();\n  const cleanName = originalName.replace(/[^a-zA-Z0-9.-]/g, '_');\n  return `products/${productId}/${timestamp}_${cleanName}`;\n}\n\n// Helper function to upload image to Supabase Storage\nasync function uploadImageToStorage(file: File, filename: string) {\n  const supabase = getStorageClient();\n  \n  const { data, error } = await supabase.storage\n    .from('product-images')\n    .upload(filename, file, {\n      cacheControl: '3600',\n      upsert: false\n    });\n\n  if (error) {\n    throw new ApiError('Error al subir imagen', 500, 'STORAGE_ERROR', error);\n  }\n\n  // Get public URL\n  const { data: urlData } = supabase.storage\n    .from('product-images')\n    .getPublicUrl(filename);\n\n  return {\n    path: data.path,\n    url: urlData.publicUrl\n  };\n}\n\n// Helper function to delete image from storage\nasync function deleteImageFromStorage(path: string) {\n  const supabase = getStorageClient();\n  \n  const { error } = await supabase.storage\n    .from('product-images')\n    .remove([path]);\n\n  if (error) {\n    console.warn('Error deleting image from storage:', error);\n    // Don't throw error, just log warning\n  }\n}\n\n/**\n * POST /api/admin/products/[id]/images\n * Upload new image for product\n */\nconst postHandler = async (request: NextRequest, { params }: { params: { id: string } }) => {\n  const { supabase, user } = request as any;\n  const productId = params.id;\n\n  // Validate params\n  const paramsValidation = ProductParamsSchema.safeParse({ id: productId });\n  if (!paramsValidation.success) {\n    throw new ValidationError('ID de producto inv\xE1lido', paramsValidation.error.errors);\n  }\n\n  // Check if product exists\n  const { data: product, error: productError } = await supabase\n    .from('products')\n    .select('id, name')\n    .eq('id', productId)\n    .single();\n\n  if (productError || !product) {\n    throw new NotFoundError('Producto');\n  }\n\n  // Parse form data\n  const formData = await request.formData();\n  const file = formData.get('file') as File;\n  const altText = formData.get('alt_text') as string;\n  const isPrimary = formData.get('is_primary') === 'true';\n\n  if (!file) {\n    throw new ValidationError('No se proporcion\xF3 archivo');\n  }\n\n  // Validate file\n  validateImageFile(file);\n\n  // Generate filename and upload\n  const filename = generateImageFilename(file.name, productId);\n  const uploadResult = await uploadImageToStorage(file, filename);\n\n  // Save image record to database\n  const { data: imageRecord, error: dbError } = await supabase\n    .from('product_images')\n    .insert({\n      product_id: productId,\n      url: uploadResult.url,\n      storage_path: uploadResult.path,\n      alt_text: altText || null,\n      is_primary: isPrimary,\n      file_size: file.size,\n      file_type: file.type,\n      original_filename: file.name,\n      created_at: new Date().toISOString()\n    })\n    .select()\n    .single();\n\n  if (dbError) {\n    // Clean up uploaded file if database insert fails\n    await deleteImageFromStorage(uploadResult.path);\n    throw new ApiError('Error al guardar imagen en base de datos', 500, 'DATABASE_ERROR', dbError);\n  }\n\n  // If this is set as primary, update other images\n  if (isPrimary) {\n    await supabase\n      .from('product_images')\n      .update({ is_primary: false })\n      .eq('product_id', productId)\n      .neq('id', imageRecord.id);\n  }\n\n  // Log action\n  await logAdminAction(user.id, 'CREATE', 'product_image', imageRecord.id, null, imageRecord);\n\n  return NextResponse.json({\n    data: imageRecord,\n    success: true,\n    message: 'Imagen subida exitosamente'\n  }, { status: 201 });\n};\n\n/**\n * GET /api/admin/products/[id]/images\n * Get all images for product\n */\nconst getHandler = async (request: NextRequest, { params }: { params: { id: string } }) => {\n  const { supabase } = request as any;\n  const productId = params.id;\n\n  // Validate params\n  const paramsValidation = ProductParamsSchema.safeParse({ id: productId });\n  if (!paramsValidation.success) {\n    throw new ValidationError('ID de producto inv\xE1lido', paramsValidation.error.errors);\n  }\n\n  // Get images\n  const { data: images, error } = await supabase\n    .from('product_images')\n    .select('*')\n    .eq('product_id', productId)\n    .order('display_order', { ascending: true })\n    .order('created_at', { ascending: true });\n\n  if (error) {\n    throw new ApiError('Error al obtener im\xE1genes', 500, 'DATABASE_ERROR', error);\n  }\n\n  return NextResponse.json({\n    data: images,\n    success: true,\n    message: 'Im\xE1genes obtenidas exitosamente'\n  });\n};\n\n// Apply enterprise middlewares and export handlers\nexport const GET = composeMiddlewares(\n  withErrorHandler,\n  withApiLogging,\n  withAdminAuth(['products_read'])\n)(getHandler);\n\nexport const POST = composeMiddlewares(\n  withErrorHandler,\n  withApiLogging,\n  withAdminAuth(['products_update'])\n)(postHandler);\n"],
      names: ["GET", "POST", "ImageUploadSchema", "z", "object", "file", "any", "alt_text", "string", "optional", "is_primary", "boolean", "default", "ImageUpdateSchema", "display_order", "number", "int", "min", "ProductParamsSchema", "id", "uuid", "ImageParamsSchema", "imageId", "getStorageClient", "supabaseUrl", "process", "env", "NEXT_PUBLIC_SUPABASE_URL", "supabaseServiceKey", "SUPABASE_SERVICE_ROLE_KEY", "createClient", "validateImageFile", "allowedTypes", "maxSize", "includes", "type", "ValidationError", "size", "generateImageFilename", "originalName", "productId", "timestamp", "Date", "now", "extension", "split", "pop", "cleanName", "replace", "uploadImageToStorage", "filename", "supabase", "data", "error", "storage", "from", "upload", "cacheControl", "upsert", "ApiError", "urlData", "getPublicUrl", "path", "url", "publicUrl", "deleteImageFromStorage", "remove", "console", "warn", "postHandler", "request", "params", "user", "paramsValidation", "safeParse", "success", "errors", "product", "productError", "select", "eq", "single", "NotFoundError", "formData", "get", "altText", "isPrimary", "name", "uploadResult", "imageRecord", "dbError", "insert", "product_id", "storage_path", "file_size", "file_type", "original_filename", "created_at", "toISOString", "update", "neq", "logAdminAction", "NextResponse", "json", "message", "status", "getHandler", "images", "order", "ascending", "composeMiddlewares", "withErrorHandler", "withApiLogging", "withAdminAuth"],
      mappings: "AAAA,oCAAoC;;;;;;;;;;;;IA6NvBA,GAAG;eAAHA;;IAMAC,IAAI;eAAJA;;;wBAjO6B;qBACxB;oCACiB;8BACwC;2BAC5B;mCACjB;4BAED;AAE7B,qBAAqB;AACrB,MAAMC,oBAAoBC,MAAC,CAACC,MAAM,CAAC;IACjCC,MAAMF,MAAC,CAACG,GAAG;IACXC,UAAUJ,MAAC,CAACK,MAAM,GAAGC,QAAQ;IAC7BC,YAAYP,MAAC,CAACQ,OAAO,GAAGC,OAAO,CAAC;AAClC;AAEA,MAAMC,oBAAoBV,MAAC,CAACC,MAAM,CAAC;IACjCG,UAAUJ,MAAC,CAACK,MAAM,GAAGC,QAAQ;IAC7BC,YAAYP,MAAC,CAACQ,OAAO,GAAGF,QAAQ;IAChCK,eAAeX,MAAC,CAACY,MAAM,GAAGC,GAAG,GAAGC,GAAG,CAAC,GAAGR,QAAQ;AACjD;AAEA,MAAMS,sBAAsBf,MAAC,CAACC,MAAM,CAAC;IACnCe,IAAIhB,MAAC,CAACK,MAAM,GAAGY,IAAI,CAAC;AACtB;AAEA,MAAMC,oBAAoBlB,MAAC,CAACC,MAAM,CAAC;IACjCe,IAAIhB,MAAC,CAACK,MAAM,GAAGY,IAAI,CAAC;IACpBE,SAASnB,MAAC,CAACK,MAAM,GAAGY,IAAI,CAAC;AAC3B;AAEA,iDAAiD;AACjD,SAASG;IACP,MAAMC,cAAcC,QAAQC,GAAG,CAACC,wBAAwB;IACxD,MAAMC,qBAAqBH,QAAQC,GAAG,CAACG,yBAAyB;IAEhE,OAAOC,IAAAA,wBAAY,EAACN,aAAaI;AACnC;AAEA,mCAAmC;AACnC,SAASG,kBAAkB1B,IAAU;IACnC,MAAM2B,eAAe;QAAC;QAAc;QAAa;QAAa;KAAa;IAC3E,MAAMC,UAAU,IAAI,OAAO,MAAM,MAAM;IAEvC,IAAI,CAACD,aAAaE,QAAQ,CAAC7B,KAAK8B,IAAI,GAAG;QACrC,MAAM,IAAIC,6BAAe,CAAC;IAC5B;IAEA,IAAI/B,KAAKgC,IAAI,GAAGJ,SAAS;QACvB,MAAM,IAAIG,6BAAe,CAAC;IAC5B;AACF;AAEA,8CAA8C;AAC9C,SAASE,sBAAsBC,YAAoB,EAAEC,SAAiB;IACpE,MAAMC,YAAYC,KAAKC,GAAG;IAC1B,MAAMC,YAAYL,aAAaM,KAAK,CAAC,KAAKC,GAAG;IAC7C,MAAMC,YAAYR,aAAaS,OAAO,CAAC,mBAAmB;IAC1D,OAAO,CAAC,SAAS,EAAER,UAAU,CAAC,EAAEC,UAAU,CAAC,EAAEM,WAAW;AAC1D;AAEA,sDAAsD;AACtD,eAAeE,qBAAqB5C,IAAU,EAAE6C,QAAgB;IAC9D,MAAMC,WAAW5B;IAEjB,MAAM,EAAE6B,IAAI,EAAEC,KAAK,EAAE,GAAG,MAAMF,SAASG,OAAO,CAC3CC,IAAI,CAAC,kBACLC,MAAM,CAACN,UAAU7C,MAAM;QACtBoD,cAAc;QACdC,QAAQ;IACV;IAEF,IAAIL,OAAO;QACT,MAAM,IAAIM,sBAAQ,CAAC,yBAAyB,KAAK,iBAAiBN;IACpE;IAEA,iBAAiB;IACjB,MAAM,EAAED,MAAMQ,OAAO,EAAE,GAAGT,SAASG,OAAO,CACvCC,IAAI,CAAC,kBACLM,YAAY,CAACX;IAEhB,OAAO;QACLY,MAAMV,KAAKU,IAAI;QACfC,KAAKH,QAAQI,SAAS;IACxB;AACF;AAEA,+CAA+C;AAC/C,eAAeC,uBAAuBH,IAAY;IAChD,MAAMX,WAAW5B;IAEjB,MAAM,EAAE8B,KAAK,EAAE,GAAG,MAAMF,SAASG,OAAO,CACrCC,IAAI,CAAC,kBACLW,MAAM,CAAC;QAACJ;KAAK;IAEhB,IAAIT,OAAO;QACTc,QAAQC,IAAI,CAAC,sCAAsCf;IACnD,sCAAsC;IACxC;AACF;AAEA;;;CAGC,GACD,MAAMgB,cAAc,OAAOC,SAAsB,EAAEC,MAAM,EAA8B;IACrF,MAAM,EAAEpB,QAAQ,EAAEqB,IAAI,EAAE,GAAGF;IAC3B,MAAM9B,YAAY+B,OAAOpD,EAAE;IAE3B,kBAAkB;IAClB,MAAMsD,mBAAmBvD,oBAAoBwD,SAAS,CAAC;QAAEvD,IAAIqB;IAAU;IACvE,IAAI,CAACiC,iBAAiBE,OAAO,EAAE;QAC7B,MAAM,IAAIvC,6BAAe,CAAC,2BAA2BqC,iBAAiBpB,KAAK,CAACuB,MAAM;IACpF;IAEA,0BAA0B;IAC1B,MAAM,EAAExB,MAAMyB,OAAO,EAAExB,OAAOyB,YAAY,EAAE,GAAG,MAAM3B,SAClDI,IAAI,CAAC,YACLwB,MAAM,CAAC,YACPC,EAAE,CAAC,MAAMxC,WACTyC,MAAM;IAET,IAAIH,gBAAgB,CAACD,SAAS;QAC5B,MAAM,IAAIK,2BAAa,CAAC;IAC1B;IAEA,kBAAkB;IAClB,MAAMC,WAAW,MAAMb,QAAQa,QAAQ;IACvC,MAAM9E,OAAO8E,SAASC,GAAG,CAAC;IAC1B,MAAMC,UAAUF,SAASC,GAAG,CAAC;IAC7B,MAAME,YAAYH,SAASC,GAAG,CAAC,kBAAkB;IAEjD,IAAI,CAAC/E,MAAM;QACT,MAAM,IAAI+B,6BAAe,CAAC;IAC5B;IAEA,gBAAgB;IAChBL,kBAAkB1B;IAElB,+BAA+B;IAC/B,MAAM6C,WAAWZ,sBAAsBjC,KAAKkF,IAAI,EAAE/C;IAClD,MAAMgD,eAAe,MAAMvC,qBAAqB5C,MAAM6C;IAEtD,gCAAgC;IAChC,MAAM,EAAEE,MAAMqC,WAAW,EAAEpC,OAAOqC,OAAO,EAAE,GAAG,MAAMvC,SACjDI,IAAI,CAAC,kBACLoC,MAAM,CAAC;QACNC,YAAYpD;QACZuB,KAAKyB,aAAazB,GAAG;QACrB8B,cAAcL,aAAa1B,IAAI;QAC/BvD,UAAU8E,WAAW;QACrB3E,YAAY4E;QACZQ,WAAWzF,KAAKgC,IAAI;QACpB0D,WAAW1F,KAAK8B,IAAI;QACpB6D,mBAAmB3F,KAAKkF,IAAI;QAC5BU,YAAY,IAAIvD,OAAOwD,WAAW;IACpC,GACCnB,MAAM,GACNE,MAAM;IAET,IAAIS,SAAS;QACX,kDAAkD;QAClD,MAAMzB,uBAAuBuB,aAAa1B,IAAI;QAC9C,MAAM,IAAIH,sBAAQ,CAAC,4CAA4C,KAAK,kBAAkB+B;IACxF;IAEA,iDAAiD;IACjD,IAAIJ,WAAW;QACb,MAAMnC,SACHI,IAAI,CAAC,kBACL4C,MAAM,CAAC;YAAEzF,YAAY;QAAM,GAC3BsE,EAAE,CAAC,cAAcxC,WACjB4D,GAAG,CAAC,MAAMX,YAAYtE,EAAE;IAC7B;IAEA,aAAa;IACb,MAAMkF,IAAAA,yBAAc,EAAC7B,KAAKrD,EAAE,EAAE,UAAU,iBAAiBsE,YAAYtE,EAAE,EAAE,MAAMsE;IAE/E,OAAOa,oBAAY,CAACC,IAAI,CAAC;QACvBnD,MAAMqC;QACNd,SAAS;QACT6B,SAAS;IACX,GAAG;QAAEC,QAAQ;IAAI;AACnB;AAEA;;;CAGC,GACD,MAAMC,aAAa,OAAOpC,SAAsB,EAAEC,MAAM,EAA8B;IACpF,MAAM,EAAEpB,QAAQ,EAAE,GAAGmB;IACrB,MAAM9B,YAAY+B,OAAOpD,EAAE;IAE3B,kBAAkB;IAClB,MAAMsD,mBAAmBvD,oBAAoBwD,SAAS,CAAC;QAAEvD,IAAIqB;IAAU;IACvE,IAAI,CAACiC,iBAAiBE,OAAO,EAAE;QAC7B,MAAM,IAAIvC,6BAAe,CAAC,2BAA2BqC,iBAAiBpB,KAAK,CAACuB,MAAM;IACpF;IAEA,aAAa;IACb,MAAM,EAAExB,MAAMuD,MAAM,EAAEtD,KAAK,EAAE,GAAG,MAAMF,SACnCI,IAAI,CAAC,kBACLwB,MAAM,CAAC,KACPC,EAAE,CAAC,cAAcxC,WACjBoE,KAAK,CAAC,iBAAiB;QAAEC,WAAW;IAAK,GACzCD,KAAK,CAAC,cAAc;QAAEC,WAAW;IAAK;IAEzC,IAAIxD,OAAO;QACT,MAAM,IAAIM,sBAAQ,CAAC,6BAA6B,KAAK,kBAAkBN;IACzE;IAEA,OAAOiD,oBAAY,CAACC,IAAI,CAAC;QACvBnD,MAAMuD;QACNhC,SAAS;QACT6B,SAAS;IACX;AACF;AAGO,MAAMxG,MAAM8G,IAAAA,sCAAkB,EACnCC,8BAAgB,EAChBC,yBAAc,EACdC,IAAAA,gCAAa,EAAC;IAAC;CAAgB,GAC/BP;AAEK,MAAMzG,OAAO6G,IAAAA,sCAAkB,EACpCC,8BAAgB,EAChBC,yBAAc,EACdC,IAAAA,gCAAa,EAAC;IAAC;CAAkB,GACjC5C"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0712261a4b7494f7554fea74a846a2e4fcbce5fe"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2a4mqo9dj1 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2a4mqo9dj1();
cov_2a4mqo9dj1().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2a4mqo9dj1().f[0]++;
  cov_2a4mqo9dj1().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2a4mqo9dj1().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_2a4mqo9dj1().s[3]++;
_export(exports, {
  GET: function () {
    /* istanbul ignore next */
    cov_2a4mqo9dj1().f[1]++;
    cov_2a4mqo9dj1().s[4]++;
    return GET;
  },
  POST: function () {
    /* istanbul ignore next */
    cov_2a4mqo9dj1().f[2]++;
    cov_2a4mqo9dj1().s[5]++;
    return POST;
  }
});
const _server =
/* istanbul ignore next */
(cov_2a4mqo9dj1().s[6]++, require("next/server"));
const _zod =
/* istanbul ignore next */
(cov_2a4mqo9dj1().s[7]++, require("zod"));
const _middlewarecomposer =
/* istanbul ignore next */
(cov_2a4mqo9dj1().s[8]++, require("../../../../../../lib/api/middleware-composer"));
const _errorhandler =
/* istanbul ignore next */
(cov_2a4mqo9dj1().s[9]++, require("../../../../../../lib/api/error-handler"));
const _apilogger =
/* istanbul ignore next */
(cov_2a4mqo9dj1().s[10]++, require("../../../../../../lib/api/api-logger"));
const _apiauthmiddleware =
/* istanbul ignore next */
(cov_2a4mqo9dj1().s[11]++, require("../../../../../../lib/auth/api-auth-middleware"));
const _supabasejs =
/* istanbul ignore next */
(cov_2a4mqo9dj1().s[12]++, require("@supabase/supabase-js"));
// Validation schemas
const ImageUploadSchema =
/* istanbul ignore next */
(cov_2a4mqo9dj1().s[13]++, _zod.z.object({
  file: _zod.z.any(),
  alt_text: _zod.z.string().optional(),
  is_primary: _zod.z.boolean().default(false)
}));
const ImageUpdateSchema =
/* istanbul ignore next */
(cov_2a4mqo9dj1().s[14]++, _zod.z.object({
  alt_text: _zod.z.string().optional(),
  is_primary: _zod.z.boolean().optional(),
  display_order: _zod.z.number().int().min(0).optional()
}));
const ProductParamsSchema =
/* istanbul ignore next */
(cov_2a4mqo9dj1().s[15]++, _zod.z.object({
  id: _zod.z.string().uuid('ID de producto inválido')
}));
const ImageParamsSchema =
/* istanbul ignore next */
(cov_2a4mqo9dj1().s[16]++, _zod.z.object({
  id: _zod.z.string().uuid('ID de producto inválido'),
  imageId: _zod.z.string().uuid('ID de imagen inválido')
}));
// Helper function to get Supabase Storage client
function getStorageClient() {
  /* istanbul ignore next */
  cov_2a4mqo9dj1().f[3]++;
  const supabaseUrl =
  /* istanbul ignore next */
  (cov_2a4mqo9dj1().s[17]++, process.env.NEXT_PUBLIC_SUPABASE_URL);
  const supabaseServiceKey =
  /* istanbul ignore next */
  (cov_2a4mqo9dj1().s[18]++, process.env.SUPABASE_SERVICE_ROLE_KEY);
  /* istanbul ignore next */
  cov_2a4mqo9dj1().s[19]++;
  return (0, _supabasejs.createClient)(supabaseUrl, supabaseServiceKey);
}
// Helper function to validate file
function validateImageFile(file) {
  /* istanbul ignore next */
  cov_2a4mqo9dj1().f[4]++;
  const allowedTypes =
  /* istanbul ignore next */
  (cov_2a4mqo9dj1().s[20]++, ['image/jpeg', 'image/jpg', 'image/png', 'image/webp']);
  const maxSize =
  /* istanbul ignore next */
  (cov_2a4mqo9dj1().s[21]++, 5 * 1024 * 1024); // 5MB
  /* istanbul ignore next */
  cov_2a4mqo9dj1().s[22]++;
  if (!allowedTypes.includes(file.type)) {
    /* istanbul ignore next */
    cov_2a4mqo9dj1().b[0][0]++;
    cov_2a4mqo9dj1().s[23]++;
    throw new _errorhandler.ValidationError('Tipo de archivo no permitido. Use JPG, PNG o WebP');
  } else
  /* istanbul ignore next */
  {
    cov_2a4mqo9dj1().b[0][1]++;
  }
  cov_2a4mqo9dj1().s[24]++;
  if (file.size > maxSize) {
    /* istanbul ignore next */
    cov_2a4mqo9dj1().b[1][0]++;
    cov_2a4mqo9dj1().s[25]++;
    throw new _errorhandler.ValidationError('El archivo es demasiado grande. Máximo 5MB');
  } else
  /* istanbul ignore next */
  {
    cov_2a4mqo9dj1().b[1][1]++;
  }
}
// Helper function to generate unique filename
function generateImageFilename(originalName, productId) {
  /* istanbul ignore next */
  cov_2a4mqo9dj1().f[5]++;
  const timestamp =
  /* istanbul ignore next */
  (cov_2a4mqo9dj1().s[26]++, Date.now());
  const extension =
  /* istanbul ignore next */
  (cov_2a4mqo9dj1().s[27]++, originalName.split('.').pop());
  const cleanName =
  /* istanbul ignore next */
  (cov_2a4mqo9dj1().s[28]++, originalName.replace(/[^a-zA-Z0-9.-]/g, '_'));
  /* istanbul ignore next */
  cov_2a4mqo9dj1().s[29]++;
  return `products/${productId}/${timestamp}_${cleanName}`;
}
// Helper function to upload image to Supabase Storage
async function uploadImageToStorage(file, filename) {
  /* istanbul ignore next */
  cov_2a4mqo9dj1().f[6]++;
  const supabase =
  /* istanbul ignore next */
  (cov_2a4mqo9dj1().s[30]++, getStorageClient());
  const {
    data,
    error
  } =
  /* istanbul ignore next */
  (cov_2a4mqo9dj1().s[31]++, await supabase.storage.from('product-images').upload(filename, file, {
    cacheControl: '3600',
    upsert: false
  }));
  /* istanbul ignore next */
  cov_2a4mqo9dj1().s[32]++;
  if (error) {
    /* istanbul ignore next */
    cov_2a4mqo9dj1().b[2][0]++;
    cov_2a4mqo9dj1().s[33]++;
    throw new _errorhandler.ApiError('Error al subir imagen', 500, 'STORAGE_ERROR', error);
  } else
  /* istanbul ignore next */
  {
    cov_2a4mqo9dj1().b[2][1]++;
  }
  // Get public URL
  const {
    data: urlData
  } =
  /* istanbul ignore next */
  (cov_2a4mqo9dj1().s[34]++, supabase.storage.from('product-images').getPublicUrl(filename));
  /* istanbul ignore next */
  cov_2a4mqo9dj1().s[35]++;
  return {
    path: data.path,
    url: urlData.publicUrl
  };
}
// Helper function to delete image from storage
async function deleteImageFromStorage(path) {
  /* istanbul ignore next */
  cov_2a4mqo9dj1().f[7]++;
  const supabase =
  /* istanbul ignore next */
  (cov_2a4mqo9dj1().s[36]++, getStorageClient());
  const {
    error
  } =
  /* istanbul ignore next */
  (cov_2a4mqo9dj1().s[37]++, await supabase.storage.from('product-images').remove([path]));
  /* istanbul ignore next */
  cov_2a4mqo9dj1().s[38]++;
  if (error) {
    /* istanbul ignore next */
    cov_2a4mqo9dj1().b[3][0]++;
    cov_2a4mqo9dj1().s[39]++;
    console.warn('Error deleting image from storage:', error);
    // Don't throw error, just log warning
  } else
  /* istanbul ignore next */
  {
    cov_2a4mqo9dj1().b[3][1]++;
  }
}
/**
 * POST /api/admin/products/[id]/images
 * Upload new image for product
 */
/* istanbul ignore next */
cov_2a4mqo9dj1().s[40]++;
const postHandler = async (request, {
  params
}) => {
  /* istanbul ignore next */
  cov_2a4mqo9dj1().f[8]++;
  const {
    supabase,
    user
  } =
  /* istanbul ignore next */
  (cov_2a4mqo9dj1().s[41]++, request);
  const productId =
  /* istanbul ignore next */
  (cov_2a4mqo9dj1().s[42]++, params.id);
  // Validate params
  const paramsValidation =
  /* istanbul ignore next */
  (cov_2a4mqo9dj1().s[43]++, ProductParamsSchema.safeParse({
    id: productId
  }));
  /* istanbul ignore next */
  cov_2a4mqo9dj1().s[44]++;
  if (!paramsValidation.success) {
    /* istanbul ignore next */
    cov_2a4mqo9dj1().b[4][0]++;
    cov_2a4mqo9dj1().s[45]++;
    throw new _errorhandler.ValidationError('ID de producto inválido', paramsValidation.error.errors);
  } else
  /* istanbul ignore next */
  {
    cov_2a4mqo9dj1().b[4][1]++;
  }
  // Check if product exists
  const {
    data: product,
    error: productError
  } =
  /* istanbul ignore next */
  (cov_2a4mqo9dj1().s[46]++, await supabase.from('products').select('id, name').eq('id', productId).single());
  /* istanbul ignore next */
  cov_2a4mqo9dj1().s[47]++;
  if (
  /* istanbul ignore next */
  (cov_2a4mqo9dj1().b[6][0]++, productError) ||
  /* istanbul ignore next */
  (cov_2a4mqo9dj1().b[6][1]++, !product)) {
    /* istanbul ignore next */
    cov_2a4mqo9dj1().b[5][0]++;
    cov_2a4mqo9dj1().s[48]++;
    throw new _errorhandler.NotFoundError('Producto');
  } else
  /* istanbul ignore next */
  {
    cov_2a4mqo9dj1().b[5][1]++;
  }
  // Parse form data
  const formData =
  /* istanbul ignore next */
  (cov_2a4mqo9dj1().s[49]++, await request.formData());
  const file =
  /* istanbul ignore next */
  (cov_2a4mqo9dj1().s[50]++, formData.get('file'));
  const altText =
  /* istanbul ignore next */
  (cov_2a4mqo9dj1().s[51]++, formData.get('alt_text'));
  const isPrimary =
  /* istanbul ignore next */
  (cov_2a4mqo9dj1().s[52]++, formData.get('is_primary') === 'true');
  /* istanbul ignore next */
  cov_2a4mqo9dj1().s[53]++;
  if (!file) {
    /* istanbul ignore next */
    cov_2a4mqo9dj1().b[7][0]++;
    cov_2a4mqo9dj1().s[54]++;
    throw new _errorhandler.ValidationError('No se proporcionó archivo');
  } else
  /* istanbul ignore next */
  {
    cov_2a4mqo9dj1().b[7][1]++;
  }
  // Validate file
  cov_2a4mqo9dj1().s[55]++;
  validateImageFile(file);
  // Generate filename and upload
  const filename =
  /* istanbul ignore next */
  (cov_2a4mqo9dj1().s[56]++, generateImageFilename(file.name, productId));
  const uploadResult =
  /* istanbul ignore next */
  (cov_2a4mqo9dj1().s[57]++, await uploadImageToStorage(file, filename));
  // Save image record to database
  const {
    data: imageRecord,
    error: dbError
  } =
  /* istanbul ignore next */
  (cov_2a4mqo9dj1().s[58]++, await supabase.from('product_images').insert({
    product_id: productId,
    url: uploadResult.url,
    storage_path: uploadResult.path,
    alt_text:
    /* istanbul ignore next */
    (cov_2a4mqo9dj1().b[8][0]++, altText) ||
    /* istanbul ignore next */
    (cov_2a4mqo9dj1().b[8][1]++, null),
    is_primary: isPrimary,
    file_size: file.size,
    file_type: file.type,
    original_filename: file.name,
    created_at: new Date().toISOString()
  }).select().single());
  /* istanbul ignore next */
  cov_2a4mqo9dj1().s[59]++;
  if (dbError) {
    /* istanbul ignore next */
    cov_2a4mqo9dj1().b[9][0]++;
    cov_2a4mqo9dj1().s[60]++;
    // Clean up uploaded file if database insert fails
    await deleteImageFromStorage(uploadResult.path);
    /* istanbul ignore next */
    cov_2a4mqo9dj1().s[61]++;
    throw new _errorhandler.ApiError('Error al guardar imagen en base de datos', 500, 'DATABASE_ERROR', dbError);
  } else
  /* istanbul ignore next */
  {
    cov_2a4mqo9dj1().b[9][1]++;
  }
  // If this is set as primary, update other images
  cov_2a4mqo9dj1().s[62]++;
  if (isPrimary) {
    /* istanbul ignore next */
    cov_2a4mqo9dj1().b[10][0]++;
    cov_2a4mqo9dj1().s[63]++;
    await supabase.from('product_images').update({
      is_primary: false
    }).eq('product_id', productId).neq('id', imageRecord.id);
  } else
  /* istanbul ignore next */
  {
    cov_2a4mqo9dj1().b[10][1]++;
  }
  // Log action
  cov_2a4mqo9dj1().s[64]++;
  await (0, _apilogger.logAdminAction)(user.id, 'CREATE', 'product_image', imageRecord.id, null, imageRecord);
  /* istanbul ignore next */
  cov_2a4mqo9dj1().s[65]++;
  return _server.NextResponse.json({
    data: imageRecord,
    success: true,
    message: 'Imagen subida exitosamente'
  }, {
    status: 201
  });
};
/**
 * GET /api/admin/products/[id]/images
 * Get all images for product
 */
/* istanbul ignore next */
cov_2a4mqo9dj1().s[66]++;
const getHandler = async (request, {
  params
}) => {
  /* istanbul ignore next */
  cov_2a4mqo9dj1().f[9]++;
  const {
    supabase
  } =
  /* istanbul ignore next */
  (cov_2a4mqo9dj1().s[67]++, request);
  const productId =
  /* istanbul ignore next */
  (cov_2a4mqo9dj1().s[68]++, params.id);
  // Validate params
  const paramsValidation =
  /* istanbul ignore next */
  (cov_2a4mqo9dj1().s[69]++, ProductParamsSchema.safeParse({
    id: productId
  }));
  /* istanbul ignore next */
  cov_2a4mqo9dj1().s[70]++;
  if (!paramsValidation.success) {
    /* istanbul ignore next */
    cov_2a4mqo9dj1().b[11][0]++;
    cov_2a4mqo9dj1().s[71]++;
    throw new _errorhandler.ValidationError('ID de producto inválido', paramsValidation.error.errors);
  } else
  /* istanbul ignore next */
  {
    cov_2a4mqo9dj1().b[11][1]++;
  }
  // Get images
  const {
    data: images,
    error
  } =
  /* istanbul ignore next */
  (cov_2a4mqo9dj1().s[72]++, await supabase.from('product_images').select('*').eq('product_id', productId).order('display_order', {
    ascending: true
  }).order('created_at', {
    ascending: true
  }));
  /* istanbul ignore next */
  cov_2a4mqo9dj1().s[73]++;
  if (error) {
    /* istanbul ignore next */
    cov_2a4mqo9dj1().b[12][0]++;
    cov_2a4mqo9dj1().s[74]++;
    throw new _errorhandler.ApiError('Error al obtener imágenes', 500, 'DATABASE_ERROR', error);
  } else
  /* istanbul ignore next */
  {
    cov_2a4mqo9dj1().b[12][1]++;
  }
  cov_2a4mqo9dj1().s[75]++;
  return _server.NextResponse.json({
    data: images,
    success: true,
    message: 'Imágenes obtenidas exitosamente'
  });
};
const GET =
/* istanbul ignore next */
(cov_2a4mqo9dj1().s[76]++, (0, _middlewarecomposer.composeMiddlewares)(_errorhandler.withErrorHandler, _apilogger.withApiLogging, (0, _apiauthmiddleware.withAdminAuth)(['products_read']))(getHandler));
const POST =
/* istanbul ignore next */
(cov_2a4mqo9dj1().s[77]++, (0, _middlewarecomposer.composeMiddlewares)(_errorhandler.withErrorHandler, _apilogger.withApiLogging, (0, _apiauthmiddleware.withAdminAuth)(['products_update']))(postHandler));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,