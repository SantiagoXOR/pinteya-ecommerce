bfa4995634bf47f25040161ad6608169
/**
 * Sistema de AuditorÃ­a de Seguridad
 * Registra eventos de seguridad y detecta patrones sospechosos
 */"use strict";

/* istanbul ignore next */
function cov_26udbz71vy() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\auth\\security-audit.ts";
  var hash = "602e91c9fbea9a1d71902b1a7d9fcaa05f2909d8";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\auth\\security-audit.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "2": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "3": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 42,
          column: 3
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 42
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 38
        }
      },
      "6": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 30
        }
      },
      "7": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 30
        }
      },
      "8": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 30
        }
      },
      "9": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 29
        }
      },
      "10": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 35
        }
      },
      "11": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 32
        }
      },
      "12": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 36
        }
      },
      "13": {
        start: {
          line: 43,
          column: 18
        },
        end: {
          line: 43,
          column: 40
        }
      },
      "14": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 65,
          column: 5
        }
      },
      "15": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 49,
          column: 9
        }
      },
      "16": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 81
        }
      },
      "17": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 19
        }
      },
      "18": {
        start: {
          line: 50,
          column: 30
        },
        end: {
          line: 54,
          column: 9
        }
      },
      "19": {
        start: {
          line: 55,
          column: 26
        },
        end: {
          line: 55,
          column: 101
        }
      },
      "20": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 60,
          column: 9
        }
      },
      "21": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 84
        }
      },
      "22": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 59,
          column: 100
        }
      },
      "23": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 80
        }
      },
      "24": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 70
        }
      },
      "25": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 81,
          column: 7
        }
      },
      "26": {
        start: {
          line: 86,
          column: 4
        },
        end: {
          line: 95,
          column: 5
        }
      },
      "27": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 94,
          column: 9
        }
      },
      "28": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 76
        }
      },
      "29": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 71
        }
      },
      "30": {
        start: {
          line: 90,
          column: 15
        },
        end: {
          line: 94,
          column: 9
        }
      },
      "31": {
        start: {
          line: 91,
          column: 24
        },
        end: {
          line: 91,
          column: 31
        }
      },
      "32": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 68
        }
      },
      "33": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 63
        }
      },
      "34": {
        start: {
          line: 96,
          column: 4
        },
        end: {
          line: 107,
          column: 7
        }
      },
      "35": {
        start: {
          line: 110,
          column: 4
        },
        end: {
          line: 124,
          column: 7
        }
      },
      "36": {
        start: {
          line: 127,
          column: 4
        },
        end: {
          line: 141,
          column: 7
        }
      },
      "37": {
        start: {
          line: 144,
          column: 4
        },
        end: {
          line: 158,
          column: 7
        }
      },
      "38": {
        start: {
          line: 161,
          column: 4
        },
        end: {
          line: 189,
          column: 5
        }
      },
      "39": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 162,
          column: 51
        }
      },
      "40": {
        start: {
          line: 162,
          column: 38
        },
        end: {
          line: 162,
          column: 51
        }
      },
      "41": {
        start: {
          line: 163,
          column: 30
        },
        end: {
          line: 163,
          column: 96
        }
      },
      "42": {
        start: {
          line: 164,
          column: 32
        },
        end: {
          line: 164,
          column: 185
        }
      },
      "43": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 168,
          column: 9
        }
      },
      "44": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 166,
          column: 80
        }
      },
      "45": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 167,
          column: 25
        }
      },
      "46": {
        start: {
          line: 169,
          column: 29
        },
        end: {
          line: 169,
          column: 46
        }
      },
      "47": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 184,
          column: 9
        }
      },
      "48": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 182,
          column: 15
        }
      },
      "49": {
        start: {
          line: 183,
          column: 12
        },
        end: {
          line: 183,
          column: 24
        }
      },
      "50": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 185,
          column: 21
        }
      },
      "51": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 187,
          column: 80
        }
      },
      "52": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 188,
          column: 21
        }
      },
      "53": {
        start: {
          line: 192,
          column: 4
        },
        end: {
          line: 222,
          column: 5
        }
      },
      "54": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 193,
          column: 51
        }
      },
      "55": {
        start: {
          line: 193,
          column: 38
        },
        end: {
          line: 193,
          column: 51
        }
      },
      "56": {
        start: {
          line: 194,
          column: 30
        },
        end: {
          line: 194,
          column: 99
        }
      },
      "57": {
        start: {
          line: 195,
          column: 32
        },
        end: {
          line: 195,
          column: 223
        }
      },
      "58": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 199,
          column: 9
        }
      },
      "59": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 197,
          column: 79
        }
      },
      "60": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 198,
          column: 25
        }
      },
      "61": {
        start: {
          line: 200,
          column: 26
        },
        end: {
          line: 200,
          column: 71
        }
      },
      "62": {
        start: {
          line: 200,
          column: 53
        },
        end: {
          line: 200,
          column: 69
        }
      },
      "63": {
        start: {
          line: 201,
          column: 24
        },
        end: {
          line: 201,
          column: 38
        }
      },
      "64": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 217,
          column: 9
        }
      },
      "65": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 215,
          column: 15
        }
      },
      "66": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 216,
          column: 24
        }
      },
      "67": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 218,
          column: 21
        }
      },
      "68": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 220,
          column: 76
        }
      },
      "69": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 221,
          column: 21
        }
      },
      "70": {
        start: {
          line: 225,
          column: 4
        },
        end: {
          line: 232,
          column: 5
        }
      },
      "71": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 229,
          column: 11
        }
      },
      "72": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 231,
          column: 74
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 16
          }
        },
        loc: {
          start: {
            line: 8,
            column: 30
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 32
          },
          end: {
            line: 15,
            column: 33
          }
        },
        loc: {
          start: {
            line: 15,
            column: 43
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 29
          }
        },
        loc: {
          start: {
            line: 18,
            column: 39
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 20
          },
          end: {
            line: 21,
            column: 21
          }
        },
        loc: {
          start: {
            line: 21,
            column: 31
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 24,
            column: 20
          },
          end: {
            line: 24,
            column: 21
          }
        },
        loc: {
          start: {
            line: 24,
            column: 31
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 27,
            column: 20
          },
          end: {
            line: 27,
            column: 21
          }
        },
        loc: {
          start: {
            line: 27,
            column: 31
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 30,
            column: 19
          },
          end: {
            line: 30,
            column: 20
          }
        },
        loc: {
          start: {
            line: 30,
            column: 30
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 33,
            column: 25
          },
          end: {
            line: 33,
            column: 26
          }
        },
        loc: {
          start: {
            line: 33,
            column: 36
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 33
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 36,
            column: 22
          },
          end: {
            line: 36,
            column: 23
          }
        },
        loc: {
          start: {
            line: 36,
            column: 33
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 36
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 39,
            column: 26
          },
          end: {
            line: 39,
            column: 27
          }
        },
        loc: {
          start: {
            line: 39,
            column: 37
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 39
      },
      "10": {
        name: "logSecurityEvent",
        decl: {
          start: {
            line: 44,
            column: 15
          },
          end: {
            line: 44,
            column: 31
          }
        },
        loc: {
          start: {
            line: 44,
            column: 39
          },
          end: {
            line: 66,
            column: 1
          }
        },
        line: 44
      },
      "11": {
        name: "logAuthSuccess",
        decl: {
          start: {
            line: 67,
            column: 15
          },
          end: {
            line: 67,
            column: 29
          }
        },
        loc: {
          start: {
            line: 67,
            column: 56
          },
          end: {
            line: 82,
            column: 1
          }
        },
        line: 67
      },
      "12": {
        name: "logAuthFailure",
        decl: {
          start: {
            line: 83,
            column: 15
          },
          end: {
            line: 83,
            column: 29
          }
        },
        loc: {
          start: {
            line: 83,
            column: 55
          },
          end: {
            line: 108,
            column: 1
          }
        },
        line: 83
      },
      "13": {
        name: "logPermissionDenied",
        decl: {
          start: {
            line: 109,
            column: 15
          },
          end: {
            line: 109,
            column: 34
          }
        },
        loc: {
          start: {
            line: 109,
            column: 84
          },
          end: {
            line: 125,
            column: 1
          }
        },
        line: 109
      },
      "14": {
        name: "logDataAccess",
        decl: {
          start: {
            line: 126,
            column: 15
          },
          end: {
            line: 126,
            column: 28
          }
        },
        loc: {
          start: {
            line: 126,
            column: 74
          },
          end: {
            line: 142,
            column: 1
          }
        },
        line: 126
      },
      "15": {
        name: "logAdminAction",
        decl: {
          start: {
            line: 143,
            column: 15
          },
          end: {
            line: 143,
            column: 29
          }
        },
        loc: {
          start: {
            line: 143,
            column: 73
          },
          end: {
            line: 159,
            column: 1
          }
        },
        line: 143
      },
      "16": {
        name: "detectMultipleAuthFailures",
        decl: {
          start: {
            line: 160,
            column: 15
          },
          end: {
            line: 160,
            column: 41
          }
        },
        loc: {
          start: {
            line: 160,
            column: 91
          },
          end: {
            line: 190,
            column: 1
          }
        },
        line: 160
      },
      "17": {
        name: "detectMultipleIPAccess",
        decl: {
          start: {
            line: 191,
            column: 15
          },
          end: {
            line: 191,
            column: 37
          }
        },
        loc: {
          start: {
            line: 191,
            column: 79
          },
          end: {
            line: 223,
            column: 1
          }
        },
        line: 191
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 200,
            column: 44
          },
          end: {
            line: 200,
            column: 45
          }
        },
        loc: {
          start: {
            line: 200,
            column: 53
          },
          end: {
            line: 200,
            column: 69
          }
        },
        line: 200
      },
      "19": {
        name: "runSecurityDetection",
        decl: {
          start: {
            line: 224,
            column: 15
          },
          end: {
            line: 224,
            column: 35
          }
        },
        loc: {
          start: {
            line: 224,
            column: 44
          },
          end: {
            line: 233,
            column: 1
          }
        },
        line: 224
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "1": {
        loc: {
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        }, {
          start: {
            line: 58,
            column: 15
          },
          end: {
            line: 60,
            column: 9
          }
        }],
        line: 56
      },
      "2": {
        loc: {
          start: {
            line: 86,
            column: 4
          },
          end: {
            line: 95,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 4
          },
          end: {
            line: 95,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "3": {
        loc: {
          start: {
            line: 87,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        }, {
          start: {
            line: 90,
            column: 15
          },
          end: {
            line: 94,
            column: 9
          }
        }],
        line: 87
      },
      "4": {
        loc: {
          start: {
            line: 87,
            column: 12
          },
          end: {
            line: 87,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 87,
            column: 12
          },
          end: {
            line: 87,
            column: 32
          }
        }, {
          start: {
            line: 87,
            column: 36
          },
          end: {
            line: 87,
            column: 77
          }
        }],
        line: 87
      },
      "5": {
        loc: {
          start: {
            line: 88,
            column: 24
          },
          end: {
            line: 88,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 88,
            column: 24
          },
          end: {
            line: 88,
            column: 62
          }
        }, {
          start: {
            line: 88,
            column: 66
          },
          end: {
            line: 88,
            column: 75
          }
        }],
        line: 88
      },
      "6": {
        loc: {
          start: {
            line: 89,
            column: 24
          },
          end: {
            line: 89,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 89,
            column: 24
          },
          end: {
            line: 89,
            column: 57
          }
        }, {
          start: {
            line: 89,
            column: 61
          },
          end: {
            line: 89,
            column: 70
          }
        }],
        line: 89
      },
      "7": {
        loc: {
          start: {
            line: 90,
            column: 15
          },
          end: {
            line: 94,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 15
          },
          end: {
            line: 94,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "8": {
        loc: {
          start: {
            line: 92,
            column: 24
          },
          end: {
            line: 92,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 92,
            column: 24
          },
          end: {
            line: 92,
            column: 54
          }
        }, {
          start: {
            line: 92,
            column: 58
          },
          end: {
            line: 92,
            column: 67
          }
        }],
        line: 92
      },
      "9": {
        loc: {
          start: {
            line: 93,
            column: 24
          },
          end: {
            line: 93,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 93,
            column: 24
          },
          end: {
            line: 93,
            column: 49
          }
        }, {
          start: {
            line: 93,
            column: 53
          },
          end: {
            line: 93,
            column: 62
          }
        }],
        line: 93
      },
      "10": {
        loc: {
          start: {
            line: 97,
            column: 17
          },
          end: {
            line: 97,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 97,
            column: 17
          },
          end: {
            line: 97,
            column: 23
          }
        }, {
          start: {
            line: 97,
            column: 27
          },
          end: {
            line: 97,
            column: 36
          }
        }],
        line: 97
      },
      "11": {
        loc: {
          start: {
            line: 160,
            column: 50
          },
          end: {
            line: 160,
            column: 72
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 160,
            column: 70
          },
          end: {
            line: 160,
            column: 72
          }
        }],
        line: 160
      },
      "12": {
        loc: {
          start: {
            line: 160,
            column: 74
          },
          end: {
            line: 160,
            column: 89
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 160,
            column: 88
          },
          end: {
            line: 160,
            column: 89
          }
        }],
        line: 160
      },
      "13": {
        loc: {
          start: {
            line: 162,
            column: 8
          },
          end: {
            line: 162,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 162,
            column: 8
          },
          end: {
            line: 162,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 162
      },
      "14": {
        loc: {
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 168,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 168,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 165
      },
      "15": {
        loc: {
          start: {
            line: 169,
            column: 29
          },
          end: {
            line: 169,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 169,
            column: 29
          },
          end: {
            line: 169,
            column: 41
          }
        }, {
          start: {
            line: 169,
            column: 45
          },
          end: {
            line: 169,
            column: 46
          }
        }],
        line: 169
      },
      "16": {
        loc: {
          start: {
            line: 170,
            column: 8
          },
          end: {
            line: 184,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 170,
            column: 8
          },
          end: {
            line: 184,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 170
      },
      "17": {
        loc: {
          start: {
            line: 191,
            column: 46
          },
          end: {
            line: 191,
            column: 65
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 191,
            column: 64
          },
          end: {
            line: 191,
            column: 65
          }
        }],
        line: 191
      },
      "18": {
        loc: {
          start: {
            line: 191,
            column: 67
          },
          end: {
            line: 191,
            column: 77
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 191,
            column: 76
          },
          end: {
            line: 191,
            column: 77
          }
        }],
        line: 191
      },
      "19": {
        loc: {
          start: {
            line: 193,
            column: 8
          },
          end: {
            line: 193,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 193,
            column: 8
          },
          end: {
            line: 193,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 193
      },
      "20": {
        loc: {
          start: {
            line: 196,
            column: 8
          },
          end: {
            line: 199,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 196,
            column: 8
          },
          end: {
            line: 199,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 196
      },
      "21": {
        loc: {
          start: {
            line: 202,
            column: 8
          },
          end: {
            line: 217,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 202,
            column: 8
          },
          end: {
            line: 217,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 202
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0],
      "12": [0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0],
      "18": [0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\auth\\security-audit.ts"],
      sourcesContent: ["/**\n * Sistema de Auditor\xEDa de Seguridad\n * Registra eventos de seguridad y detecta patrones sospechosos\n */\n\nimport { supabaseAdmin } from '@/lib/supabase';\nimport type { NextRequest, NextApiRequest } from 'next';\nimport type { SecurityContext } from './security-validations';\n\n// =====================================================\n// TIPOS Y INTERFACES\n// =====================================================\n\nexport interface SecurityEvent {\n  id?: string;\n  user_id: string;\n  event_type: SecurityEventType;\n  event_category: SecurityEventCategory;\n  severity: SecuritySeverity;\n  description: string;\n  metadata?: Record<string, any>;\n  ip_address?: string;\n  user_agent?: string;\n  timestamp: string;\n  resolved: boolean;\n}\n\nexport type SecurityEventType = \n  | 'AUTH_SUCCESS'\n  | 'AUTH_FAILURE'\n  | 'PERMISSION_DENIED'\n  | 'SUSPICIOUS_ACTIVITY'\n  | 'ROLE_CHANGE'\n  | 'DATA_ACCESS'\n  | 'ADMIN_ACTION'\n  | 'SECURITY_VIOLATION';\n\nexport type SecurityEventCategory = \n  | 'authentication'\n  | 'authorization'\n  | 'data_access'\n  | 'admin_operations'\n  | 'suspicious_behavior';\n\nexport type SecuritySeverity = 'low' | 'medium' | 'high' | 'critical';\n\nexport interface SecurityAlert {\n  id?: string;\n  user_id: string;\n  alert_type: string;\n  severity: SecuritySeverity;\n  description: string;\n  event_count: number;\n  first_occurrence: string;\n  last_occurrence: string;\n  resolved: boolean;\n  metadata?: Record<string, any>;\n}\n\n// =====================================================\n// FUNCIONES DE LOGGING DE EVENTOS\n// =====================================================\n\n/**\n * Registra un evento de seguridad\n */\nexport async function logSecurityEvent(\n  event: Omit<SecurityEvent, 'id' | 'timestamp' | 'resolved'>\n): Promise<void> {\n  try {\n    if (!supabaseAdmin) {\n      console.warn('[SECURITY] Supabase admin no disponible para logging');\n      return;\n    }\n\n    const securityEvent: SecurityEvent = {\n      ...event,\n      timestamp: new Date().toISOString(),\n      resolved: false\n    };\n\n    const { error } = await supabaseAdmin\n      .from('security_events')\n      .insert(securityEvent);\n\n    if (error) {\n      console.error('[SECURITY] Error guardando evento de seguridad:', error);\n    } else {\n      console.log(`[SECURITY] Evento registrado: ${event.event_type} - ${event.description}`);\n    }\n\n    // Tambi\xE9n log en consola para desarrollo\n    console.log('[SECURITY EVENT]', JSON.stringify(securityEvent, null, 2));\n  } catch (error) {\n    console.error('[SECURITY] Error en logSecurityEvent:', error);\n  }\n}\n\n/**\n * Registra autenticaci\xF3n exitosa\n */\nexport async function logAuthSuccess(\n  userId: string,\n  context: SecurityContext,\n  request?: NextRequest | NextApiRequest\n): Promise<void> {\n  await logSecurityEvent({\n    user_id: userId,\n    event_type: 'AUTH_SUCCESS',\n    event_category: 'authentication',\n    severity: 'low',\n    description: `Usuario autenticado exitosamente con rol: ${context.userRole}`,\n    metadata: {\n      role: context.userRole,\n      permissions: context.permissions,\n      emailVerified: context.metadata.emailVerified\n    },\n    ip_address: context.ipAddress,\n    user_agent: context.userAgent\n  });\n}\n\n/**\n * Registra fallo de autenticaci\xF3n\n */\nexport async function logAuthFailure(\n  userId: string | null,\n  reason: string,\n  request?: NextRequest | NextApiRequest\n): Promise<void> {\n  let ipAddress: string | undefined;\n  let userAgent: string | undefined;\n\n  if (request) {\n    if ('headers' in request && typeof request.headers.get === 'function') {\n      ipAddress = request.headers.get('x-forwarded-for') || 'unknown';\n      userAgent = request.headers.get('user-agent') || 'unknown';\n    } else if ('headers' in request) {\n      const req = request as NextApiRequest;\n      ipAddress = req.headers['x-forwarded-for'] as string || 'unknown';\n      userAgent = req.headers['user-agent'] || 'unknown';\n    }\n  }\n\n  await logSecurityEvent({\n    user_id: userId || 'unknown',\n    event_type: 'AUTH_FAILURE',\n    event_category: 'authentication',\n    severity: 'medium',\n    description: `Fallo de autenticaci\xF3n: ${reason}`,\n    metadata: { reason },\n    ip_address: ipAddress,\n    user_agent: userAgent\n  });\n}\n\n/**\n * Registra denegaci\xF3n de permisos\n */\nexport async function logPermissionDenied(\n  userId: string,\n  operation: string,\n  requiredPermissions: string[],\n  context: SecurityContext\n): Promise<void> {\n  await logSecurityEvent({\n    user_id: userId,\n    event_type: 'PERMISSION_DENIED',\n    event_category: 'authorization',\n    severity: 'medium',\n    description: `Acceso denegado a operaci\xF3n: ${operation}`,\n    metadata: {\n      operation,\n      requiredPermissions,\n      userRole: context.userRole,\n      userPermissions: context.permissions\n    },\n    ip_address: context.ipAddress,\n    user_agent: context.userAgent\n  });\n}\n\n/**\n * Registra acceso a datos sensibles\n */\nexport async function logDataAccess(\n  userId: string,\n  resource: string,\n  action: string,\n  context: SecurityContext,\n  metadata?: Record<string, any>\n): Promise<void> {\n  await logSecurityEvent({\n    user_id: userId,\n    event_type: 'DATA_ACCESS',\n    event_category: 'data_access',\n    severity: 'low',\n    description: `Acceso a ${resource} - Acci\xF3n: ${action}`,\n    metadata: {\n      resource,\n      action,\n      userRole: context.userRole,\n      ...metadata\n    },\n    ip_address: context.ipAddress,\n    user_agent: context.userAgent\n  });\n}\n\n/**\n * Registra acci\xF3n administrativa\n */\nexport async function logAdminAction(\n  userId: string,\n  action: string,\n  target: string,\n  context: SecurityContext,\n  metadata?: Record<string, any>\n): Promise<void> {\n  await logSecurityEvent({\n    user_id: userId,\n    event_type: 'ADMIN_ACTION',\n    event_category: 'admin_operations',\n    severity: 'medium',\n    description: `Acci\xF3n administrativa: ${action} en ${target}`,\n    metadata: {\n      action,\n      target,\n      userRole: context.userRole,\n      ...metadata\n    },\n    ip_address: context.ipAddress,\n    user_agent: context.userAgent\n  });\n}\n\n// =====================================================\n// DETECCI\xD3N DE ACTIVIDAD SOSPECHOSA\n// =====================================================\n\n/**\n * Detecta m\xFAltiples fallos de autenticaci\xF3n\n */\nexport async function detectMultipleAuthFailures(\n  userId: string,\n  timeWindowMinutes: number = 15,\n  maxAttempts: number = 5\n): Promise<boolean> {\n  try {\n    if (!supabaseAdmin) return false;\n\n    const timeThreshold = new Date(Date.now() - timeWindowMinutes * 60 * 1000).toISOString();\n\n    const { data, error } = await supabaseAdmin\n      .from('security_events')\n      .select('id')\n      .eq('user_id', userId)\n      .eq('event_type', 'AUTH_FAILURE')\n      .gte('timestamp', timeThreshold);\n\n    if (error) {\n      console.error('[SECURITY] Error detectando fallos de auth:', error);\n      return false;\n    }\n\n    const failureCount = data?.length || 0;\n    \n    if (failureCount >= maxAttempts) {\n      await logSecurityEvent({\n        user_id: userId,\n        event_type: 'SUSPICIOUS_ACTIVITY',\n        event_category: 'suspicious_behavior',\n        severity: 'high',\n        description: `M\xFAltiples fallos de autenticaci\xF3n detectados: ${failureCount} intentos en ${timeWindowMinutes} minutos`,\n        metadata: {\n          failureCount,\n          timeWindowMinutes,\n          threshold: maxAttempts\n        }\n      });\n      return true;\n    }\n\n    return false;\n  } catch (error) {\n    console.error('[SECURITY] Error en detectMultipleAuthFailures:', error);\n    return false;\n  }\n}\n\n/**\n * Detecta acceso desde m\xFAltiples IPs\n */\nexport async function detectMultipleIPAccess(\n  userId: string,\n  timeWindowHours: number = 1,\n  maxIPs: number = 3\n): Promise<boolean> {\n  try {\n    if (!supabaseAdmin) return false;\n\n    const timeThreshold = new Date(Date.now() - timeWindowHours * 60 * 60 * 1000).toISOString();\n\n    const { data, error } = await supabaseAdmin\n      .from('security_events')\n      .select('ip_address')\n      .eq('user_id', userId)\n      .eq('event_type', 'AUTH_SUCCESS')\n      .gte('timestamp', timeThreshold)\n      .not('ip_address', 'is', null);\n\n    if (error) {\n      console.error('[SECURITY] Error detectando m\xFAltiples IPs:', error);\n      return false;\n    }\n\n    const uniqueIPs = new Set(data?.map(event => event.ip_address));\n    const ipCount = uniqueIPs.size;\n\n    if (ipCount >= maxIPs) {\n      await logSecurityEvent({\n        user_id: userId,\n        event_type: 'SUSPICIOUS_ACTIVITY',\n        event_category: 'suspicious_behavior',\n        severity: 'medium',\n        description: `Acceso desde m\xFAltiples IPs detectado: ${ipCount} IPs diferentes en ${timeWindowHours} horas`,\n        metadata: {\n          ipCount,\n          timeWindowHours,\n          threshold: maxIPs,\n          ips: Array.from(uniqueIPs)\n        }\n      });\n      return true;\n    }\n\n    return false;\n  } catch (error) {\n    console.error('[SECURITY] Error en detectMultipleIPAccess:', error);\n    return false;\n  }\n}\n\n/**\n * Ejecuta todas las detecciones de seguridad para un usuario\n */\nexport async function runSecurityDetection(userId: string): Promise<void> {\n  try {\n    await Promise.all([\n      detectMultipleAuthFailures(userId),\n      detectMultipleIPAccess(userId)\n    ]);\n  } catch (error) {\n    console.error('[SECURITY] Error en runSecurityDetection:', error);\n  }\n}\n"],
      names: ["detectMultipleAuthFailures", "detectMultipleIPAccess", "logAdminAction", "logAuthFailure", "logAuthSuccess", "logDataAccess", "logPermissionDenied", "logSecurityEvent", "runSecurityDetection", "event", "supabaseAdmin", "console", "warn", "securityEvent", "timestamp", "Date", "toISOString", "resolved", "error", "from", "insert", "log", "event_type", "description", "JSON", "stringify", "userId", "context", "request", "user_id", "event_category", "severity", "userRole", "metadata", "role", "permissions", "emailVerified", "ip_address", "ipAddress", "user_agent", "userAgent", "reason", "headers", "get", "req", "operation", "requiredPermissions", "userPermissions", "resource", "action", "target", "timeWindowMinutes", "maxAttempts", "timeThreshold", "now", "data", "select", "eq", "gte", "failureCount", "length", "threshold", "timeWindowHours", "maxIPs", "not", "uniqueIPs", "Set", "map", "ipCount", "size", "ips", "Array", "Promise", "all"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "602e91c9fbea9a1d71902b1a7d9fcaa05f2909d8"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_26udbz71vy = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_26udbz71vy();
cov_26udbz71vy().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_26udbz71vy().f[0]++;
  cov_26udbz71vy().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_26udbz71vy().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_26udbz71vy().s[3]++;
_export(exports, {
  detectMultipleAuthFailures: function () {
    /* istanbul ignore next */
    cov_26udbz71vy().f[1]++;
    cov_26udbz71vy().s[4]++;
    return detectMultipleAuthFailures;
  },
  detectMultipleIPAccess: function () {
    /* istanbul ignore next */
    cov_26udbz71vy().f[2]++;
    cov_26udbz71vy().s[5]++;
    return detectMultipleIPAccess;
  },
  logAdminAction: function () {
    /* istanbul ignore next */
    cov_26udbz71vy().f[3]++;
    cov_26udbz71vy().s[6]++;
    return logAdminAction;
  },
  logAuthFailure: function () {
    /* istanbul ignore next */
    cov_26udbz71vy().f[4]++;
    cov_26udbz71vy().s[7]++;
    return logAuthFailure;
  },
  logAuthSuccess: function () {
    /* istanbul ignore next */
    cov_26udbz71vy().f[5]++;
    cov_26udbz71vy().s[8]++;
    return logAuthSuccess;
  },
  logDataAccess: function () {
    /* istanbul ignore next */
    cov_26udbz71vy().f[6]++;
    cov_26udbz71vy().s[9]++;
    return logDataAccess;
  },
  logPermissionDenied: function () {
    /* istanbul ignore next */
    cov_26udbz71vy().f[7]++;
    cov_26udbz71vy().s[10]++;
    return logPermissionDenied;
  },
  logSecurityEvent: function () {
    /* istanbul ignore next */
    cov_26udbz71vy().f[8]++;
    cov_26udbz71vy().s[11]++;
    return logSecurityEvent;
  },
  runSecurityDetection: function () {
    /* istanbul ignore next */
    cov_26udbz71vy().f[9]++;
    cov_26udbz71vy().s[12]++;
    return runSecurityDetection;
  }
});
const _supabase =
/* istanbul ignore next */
(cov_26udbz71vy().s[13]++, require("../supabase"));
async function logSecurityEvent(event) {
  /* istanbul ignore next */
  cov_26udbz71vy().f[10]++;
  cov_26udbz71vy().s[14]++;
  try {
    /* istanbul ignore next */
    cov_26udbz71vy().s[15]++;
    if (!_supabase.supabaseAdmin) {
      /* istanbul ignore next */
      cov_26udbz71vy().b[0][0]++;
      cov_26udbz71vy().s[16]++;
      console.warn('[SECURITY] Supabase admin no disponible para logging');
      /* istanbul ignore next */
      cov_26udbz71vy().s[17]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_26udbz71vy().b[0][1]++;
    }
    const securityEvent =
    /* istanbul ignore next */
    (cov_26udbz71vy().s[18]++, {
      ...event,
      timestamp: new Date().toISOString(),
      resolved: false
    });
    const {
      error
    } =
    /* istanbul ignore next */
    (cov_26udbz71vy().s[19]++, await _supabase.supabaseAdmin.from('security_events').insert(securityEvent));
    /* istanbul ignore next */
    cov_26udbz71vy().s[20]++;
    if (error) {
      /* istanbul ignore next */
      cov_26udbz71vy().b[1][0]++;
      cov_26udbz71vy().s[21]++;
      console.error('[SECURITY] Error guardando evento de seguridad:', error);
    } else {
      /* istanbul ignore next */
      cov_26udbz71vy().b[1][1]++;
      cov_26udbz71vy().s[22]++;
      console.log(`[SECURITY] Evento registrado: ${event.event_type} - ${event.description}`);
    }
    // TambiÃ©n log en consola para desarrollo
    /* istanbul ignore next */
    cov_26udbz71vy().s[23]++;
    console.log('[SECURITY EVENT]', JSON.stringify(securityEvent, null, 2));
  } catch (error) {
    /* istanbul ignore next */
    cov_26udbz71vy().s[24]++;
    console.error('[SECURITY] Error en logSecurityEvent:', error);
  }
}
async function logAuthSuccess(userId, context, request) {
  /* istanbul ignore next */
  cov_26udbz71vy().f[11]++;
  cov_26udbz71vy().s[25]++;
  await logSecurityEvent({
    user_id: userId,
    event_type: 'AUTH_SUCCESS',
    event_category: 'authentication',
    severity: 'low',
    description: `Usuario autenticado exitosamente con rol: ${context.userRole}`,
    metadata: {
      role: context.userRole,
      permissions: context.permissions,
      emailVerified: context.metadata.emailVerified
    },
    ip_address: context.ipAddress,
    user_agent: context.userAgent
  });
}
async function logAuthFailure(userId, reason, request) {
  /* istanbul ignore next */
  cov_26udbz71vy().f[12]++;
  let ipAddress;
  let userAgent;
  /* istanbul ignore next */
  cov_26udbz71vy().s[26]++;
  if (request) {
    /* istanbul ignore next */
    cov_26udbz71vy().b[2][0]++;
    cov_26udbz71vy().s[27]++;
    if (
    /* istanbul ignore next */
    (cov_26udbz71vy().b[4][0]++, 'headers' in request) &&
    /* istanbul ignore next */
    (cov_26udbz71vy().b[4][1]++, typeof request.headers.get === 'function')) {
      /* istanbul ignore next */
      cov_26udbz71vy().b[3][0]++;
      cov_26udbz71vy().s[28]++;
      ipAddress =
      /* istanbul ignore next */
      (cov_26udbz71vy().b[5][0]++, request.headers.get('x-forwarded-for')) ||
      /* istanbul ignore next */
      (cov_26udbz71vy().b[5][1]++, 'unknown');
      /* istanbul ignore next */
      cov_26udbz71vy().s[29]++;
      userAgent =
      /* istanbul ignore next */
      (cov_26udbz71vy().b[6][0]++, request.headers.get('user-agent')) ||
      /* istanbul ignore next */
      (cov_26udbz71vy().b[6][1]++, 'unknown');
    } else {
      /* istanbul ignore next */
      cov_26udbz71vy().b[3][1]++;
      cov_26udbz71vy().s[30]++;
      if ('headers' in request) {
        /* istanbul ignore next */
        cov_26udbz71vy().b[7][0]++;
        const req =
        /* istanbul ignore next */
        (cov_26udbz71vy().s[31]++, request);
        /* istanbul ignore next */
        cov_26udbz71vy().s[32]++;
        ipAddress =
        /* istanbul ignore next */
        (cov_26udbz71vy().b[8][0]++, req.headers['x-forwarded-for']) ||
        /* istanbul ignore next */
        (cov_26udbz71vy().b[8][1]++, 'unknown');
        /* istanbul ignore next */
        cov_26udbz71vy().s[33]++;
        userAgent =
        /* istanbul ignore next */
        (cov_26udbz71vy().b[9][0]++, req.headers['user-agent']) ||
        /* istanbul ignore next */
        (cov_26udbz71vy().b[9][1]++, 'unknown');
      } else
      /* istanbul ignore next */
      {
        cov_26udbz71vy().b[7][1]++;
      }
    }
  } else
  /* istanbul ignore next */
  {
    cov_26udbz71vy().b[2][1]++;
  }
  cov_26udbz71vy().s[34]++;
  await logSecurityEvent({
    user_id:
    /* istanbul ignore next */
    (cov_26udbz71vy().b[10][0]++, userId) ||
    /* istanbul ignore next */
    (cov_26udbz71vy().b[10][1]++, 'unknown'),
    event_type: 'AUTH_FAILURE',
    event_category: 'authentication',
    severity: 'medium',
    description: `Fallo de autenticaciÃ³n: ${reason}`,
    metadata: {
      reason
    },
    ip_address: ipAddress,
    user_agent: userAgent
  });
}
async function logPermissionDenied(userId, operation, requiredPermissions, context) {
  /* istanbul ignore next */
  cov_26udbz71vy().f[13]++;
  cov_26udbz71vy().s[35]++;
  await logSecurityEvent({
    user_id: userId,
    event_type: 'PERMISSION_DENIED',
    event_category: 'authorization',
    severity: 'medium',
    description: `Acceso denegado a operaciÃ³n: ${operation}`,
    metadata: {
      operation,
      requiredPermissions,
      userRole: context.userRole,
      userPermissions: context.permissions
    },
    ip_address: context.ipAddress,
    user_agent: context.userAgent
  });
}
async function logDataAccess(userId, resource, action, context, metadata) {
  /* istanbul ignore next */
  cov_26udbz71vy().f[14]++;
  cov_26udbz71vy().s[36]++;
  await logSecurityEvent({
    user_id: userId,
    event_type: 'DATA_ACCESS',
    event_category: 'data_access',
    severity: 'low',
    description: `Acceso a ${resource} - AcciÃ³n: ${action}`,
    metadata: {
      resource,
      action,
      userRole: context.userRole,
      ...metadata
    },
    ip_address: context.ipAddress,
    user_agent: context.userAgent
  });
}
async function logAdminAction(userId, action, target, context, metadata) {
  /* istanbul ignore next */
  cov_26udbz71vy().f[15]++;
  cov_26udbz71vy().s[37]++;
  await logSecurityEvent({
    user_id: userId,
    event_type: 'ADMIN_ACTION',
    event_category: 'admin_operations',
    severity: 'medium',
    description: `AcciÃ³n administrativa: ${action} en ${target}`,
    metadata: {
      action,
      target,
      userRole: context.userRole,
      ...metadata
    },
    ip_address: context.ipAddress,
    user_agent: context.userAgent
  });
}
async function detectMultipleAuthFailures(userId, timeWindowMinutes =
/* istanbul ignore next */
(cov_26udbz71vy().b[11][0]++, 15), maxAttempts =
/* istanbul ignore next */
(cov_26udbz71vy().b[12][0]++, 5)) {
  /* istanbul ignore next */
  cov_26udbz71vy().f[16]++;
  cov_26udbz71vy().s[38]++;
  try {
    /* istanbul ignore next */
    cov_26udbz71vy().s[39]++;
    if (!_supabase.supabaseAdmin) {
      /* istanbul ignore next */
      cov_26udbz71vy().b[13][0]++;
      cov_26udbz71vy().s[40]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_26udbz71vy().b[13][1]++;
    }
    const timeThreshold =
    /* istanbul ignore next */
    (cov_26udbz71vy().s[41]++, new Date(Date.now() - timeWindowMinutes * 60 * 1000).toISOString());
    const {
      data,
      error
    } =
    /* istanbul ignore next */
    (cov_26udbz71vy().s[42]++, await _supabase.supabaseAdmin.from('security_events').select('id').eq('user_id', userId).eq('event_type', 'AUTH_FAILURE').gte('timestamp', timeThreshold));
    /* istanbul ignore next */
    cov_26udbz71vy().s[43]++;
    if (error) {
      /* istanbul ignore next */
      cov_26udbz71vy().b[14][0]++;
      cov_26udbz71vy().s[44]++;
      console.error('[SECURITY] Error detectando fallos de auth:', error);
      /* istanbul ignore next */
      cov_26udbz71vy().s[45]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_26udbz71vy().b[14][1]++;
    }
    const failureCount =
    /* istanbul ignore next */
    (cov_26udbz71vy().s[46]++,
    /* istanbul ignore next */
    (cov_26udbz71vy().b[15][0]++, data?.length) ||
    /* istanbul ignore next */
    (cov_26udbz71vy().b[15][1]++, 0));
    /* istanbul ignore next */
    cov_26udbz71vy().s[47]++;
    if (failureCount >= maxAttempts) {
      /* istanbul ignore next */
      cov_26udbz71vy().b[16][0]++;
      cov_26udbz71vy().s[48]++;
      await logSecurityEvent({
        user_id: userId,
        event_type: 'SUSPICIOUS_ACTIVITY',
        event_category: 'suspicious_behavior',
        severity: 'high',
        description: `MÃºltiples fallos de autenticaciÃ³n detectados: ${failureCount} intentos en ${timeWindowMinutes} minutos`,
        metadata: {
          failureCount,
          timeWindowMinutes,
          threshold: maxAttempts
        }
      });
      /* istanbul ignore next */
      cov_26udbz71vy().s[49]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_26udbz71vy().b[16][1]++;
    }
    cov_26udbz71vy().s[50]++;
    return false;
  } catch (error) {
    /* istanbul ignore next */
    cov_26udbz71vy().s[51]++;
    console.error('[SECURITY] Error en detectMultipleAuthFailures:', error);
    /* istanbul ignore next */
    cov_26udbz71vy().s[52]++;
    return false;
  }
}
async function detectMultipleIPAccess(userId, timeWindowHours =
/* istanbul ignore next */
(cov_26udbz71vy().b[17][0]++, 1), maxIPs =
/* istanbul ignore next */
(cov_26udbz71vy().b[18][0]++, 3)) {
  /* istanbul ignore next */
  cov_26udbz71vy().f[17]++;
  cov_26udbz71vy().s[53]++;
  try {
    /* istanbul ignore next */
    cov_26udbz71vy().s[54]++;
    if (!_supabase.supabaseAdmin) {
      /* istanbul ignore next */
      cov_26udbz71vy().b[19][0]++;
      cov_26udbz71vy().s[55]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_26udbz71vy().b[19][1]++;
    }
    const timeThreshold =
    /* istanbul ignore next */
    (cov_26udbz71vy().s[56]++, new Date(Date.now() - timeWindowHours * 60 * 60 * 1000).toISOString());
    const {
      data,
      error
    } =
    /* istanbul ignore next */
    (cov_26udbz71vy().s[57]++, await _supabase.supabaseAdmin.from('security_events').select('ip_address').eq('user_id', userId).eq('event_type', 'AUTH_SUCCESS').gte('timestamp', timeThreshold).not('ip_address', 'is', null));
    /* istanbul ignore next */
    cov_26udbz71vy().s[58]++;
    if (error) {
      /* istanbul ignore next */
      cov_26udbz71vy().b[20][0]++;
      cov_26udbz71vy().s[59]++;
      console.error('[SECURITY] Error detectando mÃºltiples IPs:', error);
      /* istanbul ignore next */
      cov_26udbz71vy().s[60]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_26udbz71vy().b[20][1]++;
    }
    const uniqueIPs =
    /* istanbul ignore next */
    (cov_26udbz71vy().s[61]++, new Set(data?.map(event => {
      /* istanbul ignore next */
      cov_26udbz71vy().f[18]++;
      cov_26udbz71vy().s[62]++;
      return event.ip_address;
    })));
    const ipCount =
    /* istanbul ignore next */
    (cov_26udbz71vy().s[63]++, uniqueIPs.size);
    /* istanbul ignore next */
    cov_26udbz71vy().s[64]++;
    if (ipCount >= maxIPs) {
      /* istanbul ignore next */
      cov_26udbz71vy().b[21][0]++;
      cov_26udbz71vy().s[65]++;
      await logSecurityEvent({
        user_id: userId,
        event_type: 'SUSPICIOUS_ACTIVITY',
        event_category: 'suspicious_behavior',
        severity: 'medium',
        description: `Acceso desde mÃºltiples IPs detectado: ${ipCount} IPs diferentes en ${timeWindowHours} horas`,
        metadata: {
          ipCount,
          timeWindowHours,
          threshold: maxIPs,
          ips: Array.from(uniqueIPs)
        }
      });
      /* istanbul ignore next */
      cov_26udbz71vy().s[66]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_26udbz71vy().b[21][1]++;
    }
    cov_26udbz71vy().s[67]++;
    return false;
  } catch (error) {
    /* istanbul ignore next */
    cov_26udbz71vy().s[68]++;
    console.error('[SECURITY] Error en detectMultipleIPAccess:', error);
    /* istanbul ignore next */
    cov_26udbz71vy().s[69]++;
    return false;
  }
}
async function runSecurityDetection(userId) {
  /* istanbul ignore next */
  cov_26udbz71vy().f[19]++;
  cov_26udbz71vy().s[70]++;
  try {
    /* istanbul ignore next */
    cov_26udbz71vy().s[71]++;
    await Promise.all([detectMultipleAuthFailures(userId), detectMultipleIPAccess(userId)]);
  } catch (error) {
    /* istanbul ignore next */
    cov_26udbz71vy().s[72]++;
    console.error('[SECURITY] Error en runSecurityDetection:', error);
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,