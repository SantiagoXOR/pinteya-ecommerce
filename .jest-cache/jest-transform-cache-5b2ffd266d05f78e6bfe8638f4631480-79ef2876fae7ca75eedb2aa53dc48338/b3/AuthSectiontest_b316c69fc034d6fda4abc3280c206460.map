{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\Header\\__tests__\\AuthSection.test.tsx"],"sourcesContent":["/**\n * Tests para el componente AuthSection\n * Verifica la funcionalidad de autenticación con Clerk\n */\n\nimport React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport { useUser } from '@clerk/nextjs';\nimport AuthSection from '../AuthSection';\n\n// Mock de Clerk\njest.mock('@clerk/nextjs', () => ({\n  SignedIn: ({ children }: { children: React.ReactNode }) => {\n    const { isSignedIn } = useUser();\n    return isSignedIn ? <div data-testid=\"signed-in-content\">{children}</div> : null;\n  },\n  SignedOut: ({ children }: { children: React.ReactNode }) => {\n    const { isSignedIn } = useUser();\n    return !isSignedIn ? <div data-testid=\"signed-out-content\">{children}</div> : null;\n  },\n  UserButton: () => <div data-testid=\"user-button\">UserButton</div>,\n  useUser: jest.fn(),\n}));\n\n// Mock de Next.js Link\njest.mock('next/link', () => {\n  return ({ children, href, ...props }: any) => (\n    <a href={href} {...props}>\n      {children}\n    </a>\n  );\n});\n\nconst mockUseUser = useUser as jest.MockedFunction<typeof useUser>;\n\ndescribe('AuthSection Component', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  describe('Versión Desktop - Usuario no autenticado', () => {\n    beforeEach(() => {\n      mockUseUser.mockReturnValue({\n        isSignedIn: false,\n        user: null,\n        isLoaded: true,\n      });\n    });\n\n    it('debe mostrar botones de iniciar sesión y registrarse', () => {\n      render(<AuthSection variant=\"desktop\" />);\n\n      expect(screen.getByText('Iniciar Sesión')).toBeInTheDocument();\n      expect(screen.getByText('Registrarse')).toBeInTheDocument();\n    });\n\n    it('debe tener los enlaces correctos', () => {\n      render(<AuthSection variant=\"desktop\" />);\n\n      const signinLink = screen.getByText('Iniciar Sesión').closest('a');\n      const signupLink = screen.getByText('Registrarse').closest('a');\n\n      expect(signinLink).toHaveAttribute('href', '/signin');\n      expect(signupLink).toHaveAttribute('href', '/signup');\n    });\n\n    it('debe mostrar iconos en los botones', () => {\n      render(<AuthSection variant=\"desktop\" />);\n\n      // Verificar que los iconos están presentes (por clases CSS)\n      const signinButton = screen.getByText('Iniciar Sesión').closest('a');\n      const signupButton = screen.getByText('Registrarse').closest('a');\n\n      expect(signinButton).toBeInTheDocument();\n      expect(signupButton).toBeInTheDocument();\n    });\n  });\n\n  describe('Versión Desktop - Usuario autenticado', () => {\n    beforeEach(() => {\n      mockUseUser.mockReturnValue({\n        isSignedIn: true,\n        user: {\n          id: 'user_123',\n          firstName: 'Juan',\n          lastName: 'Pérez',\n          emailAddresses: [{ emailAddress: 'juan@example.com' }],\n        } as any,\n        isLoaded: true,\n      });\n    });\n\n    it('debe mostrar el UserButton cuando está autenticado', () => {\n      render(<AuthSection variant=\"desktop\" />);\n\n      expect(screen.getByTestId('user-button')).toBeInTheDocument();\n      expect(screen.queryByText('Iniciar Sesión')).not.toBeInTheDocument();\n      expect(screen.queryByText('Registrarse')).not.toBeInTheDocument();\n    });\n  });\n\n  describe('Versión Mobile - Usuario no autenticado', () => {\n    beforeEach(() => {\n      mockUseUser.mockReturnValue({\n        isSignedIn: false,\n        user: null,\n        isLoaded: true,\n      });\n    });\n\n    it('debe mostrar solo botón de iniciar sesión en mobile', () => {\n      render(<AuthSection variant=\"mobile\" />);\n\n      expect(screen.getByText('Iniciar Sesión')).toBeInTheDocument();\n      expect(screen.queryByText('Registrarse')).not.toBeInTheDocument();\n    });\n\n    it('debe tener estilos mobile específicos', () => {\n      render(<AuthSection variant=\"mobile\" />);\n\n      const signinButton = screen.getByText('Iniciar Sesión').closest('a');\n      expect(signinButton).toHaveClass('text-xs', 'px-3', 'py-1');\n    });\n\n    it('debe tener el enlace correcto en mobile', () => {\n      render(<AuthSection variant=\"mobile\" />);\n\n      const signinLink = screen.getByText('Iniciar Sesión').closest('a');\n      expect(signinLink).toHaveAttribute('href', '/signin');\n    });\n  });\n\n  describe('Versión Mobile - Usuario autenticado', () => {\n    beforeEach(() => {\n      mockUseUser.mockReturnValue({\n        isSignedIn: true,\n        user: {\n          id: 'user_123',\n          firstName: 'Juan',\n          lastName: 'Pérez',\n          emailAddresses: [{ emailAddress: 'juan@example.com' }],\n        } as any,\n        isLoaded: true,\n      });\n    });\n\n    it('debe mostrar el UserButton en mobile cuando está autenticado', () => {\n      render(<AuthSection variant=\"mobile\" />);\n\n      expect(screen.getByTestId('user-button')).toBeInTheDocument();\n      expect(screen.queryByText('Iniciar Sesión')).not.toBeInTheDocument();\n    });\n  });\n\n  describe('Estados de carga', () => {\n    it('debe manejar estado de carga de Clerk', () => {\n      mockUseUser.mockReturnValue({\n        isSignedIn: false,\n        user: null,\n        isLoaded: false,\n      });\n\n      render(<AuthSection variant=\"desktop\" />);\n\n      // Cuando isLoaded es false, Clerk maneja el estado de carga internamente\n      // El componente debería renderizar normalmente\n      expect(screen.getByTestId('signed-out-content')).toBeInTheDocument();\n    });\n  });\n\n  describe('Variantes del componente', () => {\n    beforeEach(() => {\n      mockUseUser.mockReturnValue({\n        isSignedIn: false,\n        user: null,\n        isLoaded: true,\n      });\n    });\n\n    it('debe usar desktop como variante por defecto', () => {\n      render(<AuthSection />);\n\n      expect(screen.getByText('Iniciar Sesión')).toBeInTheDocument();\n      expect(screen.getByText('Registrarse')).toBeInTheDocument();\n    });\n\n    it('debe aplicar estilos diferentes según la variante', () => {\n      const { rerender } = render(<AuthSection variant=\"desktop\" />);\n\n      // En desktop debe mostrar ambos botones\n      expect(screen.getByText('Iniciar Sesión')).toBeInTheDocument();\n      expect(screen.getByText('Registrarse')).toBeInTheDocument();\n\n      rerender(<AuthSection variant=\"mobile\" />);\n\n      // En mobile solo debe mostrar iniciar sesión\n      expect(screen.getByText('Iniciar Sesión')).toBeInTheDocument();\n      expect(screen.queryByText('Registrarse')).not.toBeInTheDocument();\n\n      const mobileSignin = screen.getByText('Iniciar Sesión').closest('a');\n      expect(mobileSignin).toHaveClass('text-xs');\n    });\n  });\n\n  describe('Accesibilidad', () => {\n    beforeEach(() => {\n      mockUseUser.mockReturnValue({\n        isSignedIn: false,\n        user: null,\n        isLoaded: true,\n      });\n    });\n\n    it('debe tener elementos accesibles', () => {\n      render(<AuthSection variant=\"desktop\" />);\n\n      const signinButton = screen.getByText('Iniciar Sesión');\n      const signupButton = screen.getByText('Registrarse');\n\n      expect(signinButton).toBeInTheDocument();\n      expect(signupButton).toBeInTheDocument();\n\n      // Los botones deben ser navegables por teclado\n      expect(signinButton.closest('a')).toHaveAttribute('href');\n      expect(signupButton.closest('a')).toHaveAttribute('href');\n    });\n  });\n\n  describe('Integración con Clerk', () => {\n    it('debe usar los componentes de Clerk correctamente', () => {\n      mockUseUser.mockReturnValue({\n        isSignedIn: true,\n        user: { id: 'user_123' } as any,\n        isLoaded: true,\n      });\n\n      render(<AuthSection variant=\"desktop\" />);\n\n      expect(screen.getByTestId('signed-in-content')).toBeInTheDocument();\n      expect(screen.getByTestId('user-button')).toBeInTheDocument();\n    });\n\n    it('debe manejar cambios de estado de autenticación', () => {\n      const { rerender } = render(<AuthSection variant=\"desktop\" />);\n\n      // Inicialmente no autenticado\n      mockUseUser.mockReturnValue({\n        isSignedIn: false,\n        user: null,\n        isLoaded: true,\n      });\n\n      rerender(<AuthSection variant=\"desktop\" />);\n      expect(screen.getByTestId('signed-out-content')).toBeInTheDocument();\n\n      // Cambiar a autenticado\n      mockUseUser.mockReturnValue({\n        isSignedIn: true,\n        user: { id: 'user_123' } as any,\n        isLoaded: true,\n      });\n\n      rerender(<AuthSection variant=\"desktop\" />);\n      expect(screen.getByTestId('signed-in-content')).toBeInTheDocument();\n    });\n  });\n});\n"],"names":["jest","mock","SignedIn","children","isSignedIn","useUser","div","data-testid","SignedOut","UserButton","fn","href","props","a","mockUseUser","describe","beforeEach","clearAllMocks","mockReturnValue","user","isLoaded","it","render","AuthSection","variant","expect","screen","getByText","toBeInTheDocument","signinLink","closest","signupLink","toHaveAttribute","signinButton","signupButton","id","firstName","lastName","emailAddresses","emailAddress","getByTestId","queryByText","not","toHaveClass","rerender","mobileSignin"],"mappings":"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"}