{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\error-boundary\\error-boundary-manager.ts"],"sourcesContent":["// ===================================\r\n// ERROR BOUNDARY MANAGER\r\n// ===================================\r\n// Sistema centralizado de gestión de Error Boundaries\r\n\r\nimport { ErrorInfo } from 'react';\r\n\r\n// ===================================\r\n// INTERFACES Y TIPOS\r\n// ===================================\r\n\r\nexport interface ErrorBoundaryConfig {\r\n  level: 'page' | 'section' | 'component';\r\n  enableRetry: boolean;\r\n  maxRetries: number;\r\n  retryDelay: number;\r\n  enableAutoRecovery: boolean;\r\n  recoveryTimeout: number;\r\n  enableReporting: boolean;\r\n  fallbackComponent?: React.ComponentType<any>;\r\n}\r\n\r\nexport interface ErrorMetrics {\r\n  errorId: string;\r\n  timestamp: number;\r\n  errorType: string;\r\n  component: string;\r\n  level: string;\r\n  retryCount: number;\r\n  resolved: boolean;\r\n  resolutionTime?: number;\r\n  userImpact: 'low' | 'medium' | 'high' | 'critical';\r\n  vercelRequestId?: string;\r\n  correlationId?: string;\r\n  buildId?: string;\r\n  nextjsVersion?: string;\r\n  metadataErrors?: string[];\r\n}\r\n\r\nexport interface ErrorPattern {\r\n  pattern: string;\r\n  frequency: number;\r\n  lastOccurrence: number;\r\n  affectedComponents: string[];\r\n  suggestedFix?: string;\r\n}\r\n\r\n// ===================================\r\n// ERROR BOUNDARY MANAGER\r\n// ===================================\r\n\r\nclass ErrorBoundaryManager {\r\n  private static instance: ErrorBoundaryManager;\r\n  private errors: Map<string, ErrorMetrics> = new Map();\r\n  private patterns: Map<string, ErrorPattern> = new Map();\r\n  private configs: Map<string, ErrorBoundaryConfig> = new Map();\r\n  private listeners: Array<(error: ErrorMetrics) => void> = [];\r\n\r\n  private constructor() {\r\n    this.initializeDefaultConfigs();\r\n    this.setupGlobalErrorHandlers();\r\n  }\r\n\r\n  static getInstance(): ErrorBoundaryManager {\r\n    if (!ErrorBoundaryManager.instance) {\r\n      ErrorBoundaryManager.instance = new ErrorBoundaryManager();\r\n    }\r\n    return ErrorBoundaryManager.instance;\r\n  }\r\n\r\n  // ===================================\r\n  // CONFIGURACIÓN\r\n  // ===================================\r\n\r\n  private initializeDefaultConfigs() {\r\n    // Configuración para páginas\r\n    this.configs.set('page', {\r\n      level: 'page',\r\n      enableRetry: true,\r\n      maxRetries: 2,\r\n      retryDelay: 2000,\r\n      enableAutoRecovery: true,\r\n      recoveryTimeout: 5000,\r\n      enableReporting: true\r\n    });\r\n\r\n    // Configuración para secciones\r\n    this.configs.set('section', {\r\n      level: 'section',\r\n      enableRetry: true,\r\n      maxRetries: 3,\r\n      retryDelay: 1000,\r\n      enableAutoRecovery: true,\r\n      recoveryTimeout: 3000,\r\n      enableReporting: true\r\n    });\r\n\r\n    // Configuración para componentes\r\n    this.configs.set('component', {\r\n      level: 'component',\r\n      enableRetry: true,\r\n      maxRetries: 5,\r\n      retryDelay: 500,\r\n      enableAutoRecovery: true,\r\n      recoveryTimeout: 2000,\r\n      enableReporting: false // Solo reportar errores críticos\r\n    });\r\n  }\r\n\r\n  getConfig(level: string): ErrorBoundaryConfig {\r\n    return this.configs.get(level) || this.configs.get('component')!;\r\n  }\r\n\r\n  updateConfig(level: string, config: Partial<ErrorBoundaryConfig>) {\r\n    const currentConfig = this.getConfig(level);\r\n    this.configs.set(level, { ...currentConfig, ...config });\r\n  }\r\n\r\n  // ===================================\r\n  // GESTIÓN DE ERRORES\r\n  // ===================================\r\n\r\n  reportError(\r\n    error: Error,\r\n    errorInfo: ErrorInfo,\r\n    context: {\r\n      errorId: string;\r\n      level: string;\r\n      component: string;\r\n      retryCount: number;\r\n      vercelRequestId?: string;\r\n      buildId?: string;\r\n    }\r\n  ) {\r\n    const errorType = this.classifyError(error);\r\n    const userImpact = this.assessUserImpact(context.level, error);\r\n    \r\n    // Extraer Vercel Request ID de headers si está disponible\r\n    const vercelRequestId = context.vercelRequestId || this.extractVercelRequestId();\r\n    \r\n    // Generar correlation ID para vincular errores relacionados\r\n    const correlationId = this.generateCorrelationId(error, context.component);\r\n\r\n    const errorMetrics: ErrorMetrics = {\r\n      errorId: context.errorId,\r\n      timestamp: Date.now(),\r\n      errorType,\r\n      component: context.component,\r\n      level: context.level,\r\n      retryCount: context.retryCount,\r\n      resolved: false,\r\n      userImpact,\r\n      vercelRequestId,\r\n      correlationId,\r\n      buildId: context.buildId || process.env.VERCEL_GIT_COMMIT_SHA,\r\n      nextjsVersion: this.getNextJSVersion(),\r\n      metadataErrors: this.extractMetadataErrors(error)\r\n    };\r\n\r\n    this.errors.set(context.errorId, errorMetrics);\r\n    this.detectErrorPattern(error, context.component);\r\n    this.notifyListeners(errorMetrics);\r\n\r\n    // Reportar a sistemas externos si es necesario\r\n    if (this.shouldReportExternally(errorMetrics)) {\r\n      this.reportToExternalSystems(errorMetrics, error, errorInfo);\r\n    }\r\n  }\r\n\r\n  private extractVercelRequestId(): string | undefined {\r\n    if (typeof window !== 'undefined') {\r\n      // En el cliente, intentar obtener de headers de respuesta\r\n      return undefined;\r\n    }\r\n    \r\n    // En el servidor, obtener de headers de request\r\n    try {\r\n      const headers = require('next/headers');\r\n      const headersList = headers.headers();\r\n      return headersList.get('x-vercel-id') || headersList.get('x-request-id');\r\n    } catch {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  private generateCorrelationId(error: Error, component: string): string {\r\n    const errorSignature = `${error.name}_${component}_${error.message.substring(0, 50)}`;\r\n    return Buffer.from(errorSignature).toString('base64').substring(0, 16);\r\n  }\r\n\r\n  private getNextJSVersion(): string {\r\n    try {\r\n      const packageJson = require('../../../package.json');\r\n      return packageJson.dependencies?.next || 'unknown';\r\n    } catch {\r\n      return 'unknown';\r\n    }\r\n  }\r\n\r\n  private extractMetadataErrors(error: Error): string[] {\r\n    const metadataErrors: string[] = [];\r\n    const errorMessage = error.message.toLowerCase();\r\n    \r\n    if (errorMessage.includes('metadata') || errorMessage.includes('viewport') || errorMessage.includes('themecolor')) {\r\n      if (errorMessage.includes('viewport')) {\r\n        metadataErrors.push('metadata_viewport');\r\n      }\r\n      if (errorMessage.includes('themecolor')) {\r\n        metadataErrors.push('metadata_themeColor');\r\n      }\r\n      if (errorMessage.includes('unsupported')) {\r\n        metadataErrors.push('unsupported_metadata');\r\n      }\r\n    }\r\n    \r\n    return metadataErrors;\r\n  }\r\n\r\n  markErrorResolved(errorId: string, resolutionTime?: number) {\r\n    const error = this.errors.get(errorId);\r\n    if (error) {\r\n      error.resolved = true;\r\n      error.resolutionTime = resolutionTime || Date.now() - error.timestamp;\r\n      this.errors.set(errorId, error);\r\n    }\r\n  }\r\n\r\n  // ===================================\r\n  // CLASIFICACIÓN Y ANÁLISIS\r\n  // ===================================\r\n\r\n  private classifyError(error: Error): string {\r\n    const message = error.message.toLowerCase();\r\n    const stack = error.stack?.toLowerCase() || '';\r\n\r\n    // Errores de chunk loading\r\n    if (message.includes('loading chunk') || message.includes('loading css chunk')) {\r\n      return 'ChunkLoadError';\r\n    }\r\n\r\n    // Errores de red\r\n    if (message.includes('network') || message.includes('fetch') || message.includes('timeout')) {\r\n      return 'NetworkError';\r\n    }\r\n\r\n    // Errores de React\r\n    if (stack.includes('react') || message.includes('render')) {\r\n      return 'ReactError';\r\n    }\r\n\r\n    // Errores de JavaScript\r\n    if (error.name === 'TypeError') {return 'TypeError';}\r\n    if (error.name === 'ReferenceError') {return 'ReferenceError';}\r\n    if (error.name === 'SyntaxError') {return 'SyntaxError';}\r\n\r\n    return 'UnknownError';\r\n  }\r\n\r\n  private assessUserImpact(level: string, error: Error): ErrorMetrics['userImpact'] {\r\n    // Impacto crítico para errores de página\r\n    if (level === 'page') {return 'critical';}\r\n\r\n    // Impacto alto para errores de sección\r\n    if (level === 'section') {return 'high';}\r\n\r\n    // Evaluar por tipo de error\r\n    const errorType = this.classifyError(error);\r\n    switch (errorType) {\r\n      case 'ChunkLoadError':\r\n        return 'high'; // Impide la carga de funcionalidad\r\n      case 'NetworkError':\r\n        return 'medium'; // Puede afectar datos\r\n      case 'ReactError':\r\n        return level === 'component' ? 'low' : 'medium';\r\n      default:\r\n        return 'low';\r\n    }\r\n  }\r\n\r\n  private detectErrorPattern(error: Error, component: string) {\r\n    const patternKey = `${error.name}:${component}`;\r\n    const existing = this.patterns.get(patternKey);\r\n\r\n    if (existing) {\r\n      existing.frequency++;\r\n      existing.lastOccurrence = Date.now();\r\n      if (!existing.affectedComponents.includes(component)) {\r\n        existing.affectedComponents.push(component);\r\n      }\r\n    } else {\r\n      this.patterns.set(patternKey, {\r\n        pattern: patternKey,\r\n        frequency: 1,\r\n        lastOccurrence: Date.now(),\r\n        affectedComponents: [component],\r\n        suggestedFix: this.getSuggestedFix(error)\r\n      });\r\n    }\r\n  }\r\n\r\n  private getSuggestedFix(error: Error): string | undefined {\r\n    const errorType = this.classifyError(error);\r\n    \r\n    switch (errorType) {\r\n      case 'ChunkLoadError':\r\n        return 'Consider implementing chunk retry logic or reducing bundle size';\r\n      case 'NetworkError':\r\n        return 'Implement network retry with exponential backoff';\r\n      case 'TypeError':\r\n        return 'Add null/undefined checks and proper type validation';\r\n      case 'ReactError':\r\n        return 'Review component lifecycle and state management';\r\n      default:\r\n        return undefined;\r\n    }\r\n  }\r\n\r\n  // ===================================\r\n  // REPORTE EXTERNO\r\n  // ===================================\r\n\r\n  private shouldReportExternally(errorMetrics: ErrorMetrics): boolean {\r\n    // Reportar errores críticos y de alto impacto\r\n    if (errorMetrics.userImpact === 'critical' || errorMetrics.userImpact === 'high') {\r\n      return true;\r\n    }\r\n\r\n    // Reportar errores frecuentes\r\n    const pattern = Array.from(this.patterns.values())\r\n      .find(p => p.pattern.includes(errorMetrics.errorType));\r\n    \r\n    if (pattern && pattern.frequency >= 5) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  private async reportToExternalSystems(\r\n    errorMetrics: ErrorMetrics,\r\n    error: Error,\r\n    errorInfo: ErrorInfo\r\n  ) {\r\n    try {\r\n      // Importar logger de forma dinámica para evitar dependencias circulares\r\n      const { logger, LogLevel, LogCategory, logVercel, logNextJS } = await import('../enterprise/logger');\r\n      \r\n      // Log específico para errores de Next.js/Vercel\r\n      if (errorMetrics.metadataErrors && errorMetrics.metadataErrors.length > 0) {\r\n        logNextJS(LogLevel.ERROR, 'Next.js Metadata Error Detected', {\r\n          errorType: errorMetrics.metadataErrors[0] as any,\r\n          route: typeof window !== 'undefined' ? window.location.pathname : undefined,\r\n          requestId: errorMetrics.errorId,\r\n          vercelRequestId: errorMetrics.vercelRequestId,\r\n          correlationId: errorMetrics.correlationId,\r\n          buildId: errorMetrics.buildId,\r\n          nextjsVersion: errorMetrics.nextjsVersion,\r\n          buildWarnings: errorMetrics.metadataErrors\r\n        }, {\r\n          userId: errorMetrics.errorId.split('_')[0],\r\n          sessionId: this.getSessionId()\r\n        });\r\n      }\r\n\r\n      // Log para Vercel si tenemos Request ID\r\n      if (errorMetrics.vercelRequestId) {\r\n        logVercel(LogLevel.ERROR, 'Vercel Request Error Correlation', {\r\n          errorType: 'runtime_error',\r\n          requestId: errorMetrics.errorId,\r\n          vercelRequestId: errorMetrics.vercelRequestId,\r\n          correlationId: errorMetrics.correlationId,\r\n          buildId: errorMetrics.buildId\r\n        });\r\n      }\r\n\r\n      // Log general del error\r\n      logger.error(LogCategory.SECURITY, `Error Boundary Triggered: ${error.message}`, error, {\r\n        requestId: errorMetrics.errorId,\r\n        userId: errorMetrics.correlationId\r\n      });\r\n\r\n      // Reportar a Supabase Analytics si está disponible\r\n      if (typeof window !== 'undefined' && (window as any).supabase) {\r\n        await this.reportToSupabaseAnalytics(errorMetrics, error);\r\n      }\r\n\r\n    } catch (reportError) {\r\n      console.error('❌ Failed to report to external systems:', reportError);\r\n    }\r\n  }\r\n\r\n  private async reportToSupabaseAnalytics(errorMetrics: ErrorMetrics, error: Error) {\r\n    try {\r\n      const { supabase } = await import('../integrations/supabase/client');\r\n      \r\n      await supabase.from('analytics_events').insert({\r\n        event_name: 'error_boundary_triggered',\r\n        category: 'error',\r\n        action: 'error_caught',\r\n        label: errorMetrics.component,\r\n        value: errorMetrics.retryCount,\r\n        metadata: {\r\n          errorId: errorMetrics.errorId,\r\n          errorType: errorMetrics.errorType,\r\n          userImpact: errorMetrics.userImpact,\r\n          vercelRequestId: errorMetrics.vercelRequestId,\r\n          correlationId: errorMetrics.correlationId,\r\n          buildId: errorMetrics.buildId,\r\n          nextjsVersion: errorMetrics.nextjsVersion,\r\n          metadataErrors: errorMetrics.metadataErrors,\r\n          errorMessage: error.message,\r\n          errorStack: error.stack?.substring(0, 1000) // Limitar tamaño del stack\r\n        },\r\n        page: typeof window !== 'undefined' ? window.location.pathname : undefined,\r\n        user_agent: typeof window !== 'undefined' ? window.navigator.userAgent : undefined\r\n      });\r\n    } catch (analyticsError) {\r\n      console.error('Failed to report to Supabase Analytics:', analyticsError);\r\n    }\r\n  }\r\n\r\n  private getSessionId(): string {\r\n    if (typeof window !== 'undefined') {\r\n      let sessionId = sessionStorage.getItem('error_session_id');\r\n      if (!sessionId) {\r\n        sessionId = `session_${Date.now()}_${Math.random().toString(36).substring(2, 15)}`;\r\n        sessionStorage.setItem('error_session_id', sessionId);\r\n      }\r\n      return sessionId;\r\n    }\r\n    return `server_session_${Date.now()}`;\r\n  }\r\n\r\n  // ===================================\r\n  // MANEJO GLOBAL DE ERRORES\r\n  // ===================================\r\n\r\n  private setupGlobalErrorHandlers() {\r\n    if (typeof window === 'undefined') {return;}\r\n\r\n    // Manejar errores JavaScript no capturados\r\n    window.addEventListener('error', (event) => {\r\n      this.handleGlobalError(event.error, 'global_javascript_error');\r\n    });\r\n\r\n    // Manejar promesas rechazadas no capturadas\r\n    window.addEventListener('unhandledrejection', (event) => {\r\n      this.handleGlobalError(event.reason, 'unhandled_promise_rejection');\r\n    });\r\n\r\n    // Manejar errores de recursos (imágenes, scripts, etc.)\r\n    window.addEventListener('error', (event) => {\r\n      if (event.target !== window) {\r\n        this.handleResourceError(event);\r\n      }\r\n    }, true);\r\n  }\r\n\r\n  private handleGlobalError(error: any, type: string) {\r\n    const errorId = `global_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n    \r\n    const errorMetrics: ErrorMetrics = {\r\n      errorId,\r\n      timestamp: Date.now(),\r\n      errorType: type,\r\n      component: 'global',\r\n      level: 'page',\r\n      retryCount: 0,\r\n      resolved: false,\r\n      userImpact: 'high'\r\n    };\r\n\r\n    this.errors.set(errorId, errorMetrics);\r\n    this.notifyListeners(errorMetrics);\r\n\r\n    console.error(`🌐 Global error (${type}):`, error);\r\n  }\r\n\r\n  private handleResourceError(event: Event) {\r\n    const target = event.target as HTMLElement;\r\n    const resourceType = target.tagName?.toLowerCase() || 'unknown';\r\n    const src = (target as any).src || (target as any).href || 'unknown';\r\n\r\n    console.warn(`📦 Resource loading error (${resourceType}):`, src);\r\n\r\n    // Intentar recargar recursos críticos\r\n    if (resourceType === 'script' && src.includes('chunk')) {\r\n      setTimeout(() => {\r\n        window.location.reload();\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  // ===================================\r\n  // LISTENERS Y MÉTRICAS\r\n  // ===================================\r\n\r\n  addErrorListener(listener: (error: ErrorMetrics) => void) {\r\n    this.listeners.push(listener);\r\n  }\r\n\r\n  removeErrorListener(listener: (error: ErrorMetrics) => void) {\r\n    const index = this.listeners.indexOf(listener);\r\n    if (index > -1) {\r\n      this.listeners.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  private notifyListeners(error: ErrorMetrics) {\r\n    this.listeners.forEach(listener => {\r\n      try {\r\n        listener(error);\r\n      } catch (listenerError) {\r\n        console.error('❌ Error in error listener:', listenerError);\r\n      }\r\n    });\r\n  }\r\n\r\n  // ===================================\r\n  // MÉTRICAS Y REPORTES\r\n  // ===================================\r\n\r\n  getErrorMetrics(): {\r\n    totalErrors: number;\r\n    errorsByType: Record<string, number>;\r\n    errorsByComponent: Record<string, number>;\r\n    errorsByImpact: Record<string, number>;\r\n    patterns: ErrorPattern[];\r\n    recentErrors: ErrorMetrics[];\r\n  } {\r\n    const errors = Array.from(this.errors.values());\r\n    const patterns = Array.from(this.patterns.values());\r\n\r\n    return {\r\n      totalErrors: errors.length,\r\n      errorsByType: this.groupBy(errors, 'errorType'),\r\n      errorsByComponent: this.groupBy(errors, 'component'),\r\n      errorsByImpact: this.groupBy(errors, 'userImpact'),\r\n      patterns: patterns.sort((a, b) => b.frequency - a.frequency),\r\n      recentErrors: errors\r\n        .sort((a, b) => b.timestamp - a.timestamp)\r\n        .slice(0, 10)\r\n    };\r\n  }\r\n\r\n  private groupBy<T>(array: T[], key: keyof T): Record<string, number> {\r\n    return array.reduce((acc, item) => {\r\n      const value = String(item[key]);\r\n      acc[value] = (acc[value] || 0) + 1;\r\n      return acc;\r\n    }, {} as Record<string, number>);\r\n  }\r\n\r\n  clearOldErrors(maxAge: number = 24 * 60 * 60 * 1000) { // 24 horas por defecto\r\n    const cutoff = Date.now() - maxAge;\r\n    \r\n    for (const [errorId, error] of this.errors.entries()) {\r\n      if (error.timestamp < cutoff) {\r\n        this.errors.delete(errorId);\r\n      }\r\n    }\r\n\r\n    for (const [patternKey, pattern] of this.patterns.entries()) {\r\n      if (pattern.lastOccurrence < cutoff) {\r\n        this.patterns.delete(patternKey);\r\n      }\r\n    }\r\n  }\r\n\r\n  // ===================================\r\n  // UTILIDADES\r\n  // ===================================\r\n\r\n  getHealthStatus(): {\r\n    status: 'healthy' | 'degraded' | 'critical';\r\n    errorRate: number;\r\n    criticalErrors: number;\r\n    recommendations: string[];\r\n  } {\r\n    const errors = Array.from(this.errors.values());\r\n    const recentErrors = errors.filter(e => e.timestamp > Date.now() - 60000); // Últimos 60 segundos\r\n    const criticalErrors = errors.filter(e => e.userImpact === 'critical').length;\r\n    \r\n    const errorRate = recentErrors.length;\r\n    let status: 'healthy' | 'degraded' | 'critical' = 'healthy';\r\n    const recommendations: string[] = [];\r\n\r\n    if (criticalErrors > 0) {\r\n      status = 'critical';\r\n      recommendations.push('Resolver errores críticos inmediatamente');\r\n    } else if (errorRate > 5) {\r\n      status = 'degraded';\r\n      recommendations.push('Alta tasa de errores detectada');\r\n    }\r\n\r\n    // Analizar patrones frecuentes\r\n    const frequentPatterns = Array.from(this.patterns.values())\r\n      .filter(p => p.frequency >= 3);\r\n    \r\n    if (frequentPatterns.length > 0) {\r\n      recommendations.push('Revisar patrones de errores frecuentes');\r\n      if (status === 'healthy') {status = 'degraded';}\r\n    }\r\n\r\n    return {\r\n      status,\r\n      errorRate,\r\n      criticalErrors,\r\n      recommendations\r\n    };\r\n  }\r\n}\r\n\r\n// ===================================\r\n// EXPORT\r\n// ===================================\r\n\r\nexport const errorBoundaryManager = ErrorBoundaryManager.getInstance();\r\nexport default ErrorBoundaryManager;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["errorBoundaryManager","ErrorBoundaryManager","errors","Map","patterns","configs","listeners","initializeDefaultConfigs","setupGlobalErrorHandlers","getInstance","instance","set","level","enableRetry","maxRetries","retryDelay","enableAutoRecovery","recoveryTimeout","enableReporting","getConfig","get","updateConfig","config","currentConfig","reportError","error","errorInfo","context","errorType","classifyError","userImpact","assessUserImpact","vercelRequestId","extractVercelRequestId","correlationId","generateCorrelationId","component","errorMetrics","errorId","timestamp","Date","now","retryCount","resolved","buildId","process","env","VERCEL_GIT_COMMIT_SHA","nextjsVersion","getNextJSVersion","metadataErrors","extractMetadataErrors","detectErrorPattern","notifyListeners","shouldReportExternally","reportToExternalSystems","window","undefined","headers","require","headersList","errorSignature","name","message","substring","Buffer","from","toString","packageJson","dependencies","next","errorMessage","toLowerCase","includes","push","markErrorResolved","resolutionTime","stack","patternKey","existing","frequency","lastOccurrence","affectedComponents","pattern","suggestedFix","getSuggestedFix","Array","values","find","p","logger","LogLevel","LogCategory","logVercel","logNextJS","length","ERROR","route","location","pathname","requestId","buildWarnings","userId","split","sessionId","getSessionId","SECURITY","supabase","reportToSupabaseAnalytics","console","insert","event_name","category","action","label","value","metadata","errorStack","page","user_agent","navigator","userAgent","analyticsError","sessionStorage","getItem","Math","random","setItem","addEventListener","event","handleGlobalError","reason","target","handleResourceError","type","substr","resourceType","tagName","src","href","warn","setTimeout","reload","addErrorListener","listener","removeErrorListener","index","indexOf","splice","forEach","listenerError","getErrorMetrics","totalErrors","errorsByType","groupBy","errorsByComponent","errorsByImpact","sort","a","b","recentErrors","slice","array","key","reduce","acc","item","String","clearOldErrors","maxAge","cutoff","entries","delete","getHealthStatus","filter","e","criticalErrors","errorRate","status","recommendations","frequentPatterns"],"mappings":"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"}