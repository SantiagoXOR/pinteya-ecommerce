19b2088ebb9becd2b88e1b29cf9c777e
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_1160av427q() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\debug\\unified\\route.ts";
  var hash = "19eca5012d14c47300090656559498e595948980";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\debug\\unified\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 20
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 23
        }
      },
      "7": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "8": {
        start: {
          line: 24,
          column: 13
        },
        end: {
          line: 24,
          column: 27
        }
      },
      "9": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 54
        }
      },
      "10": {
        start: {
          line: 26,
          column: 20
        },
        end: {
          line: 26,
          column: 52
        }
      },
      "11": {
        start: {
          line: 27,
          column: 19
        },
        end: {
          line: 27,
          column: 61
        }
      },
      "12": {
        start: {
          line: 28,
          column: 29
        },
        end: {
          line: 28,
          column: 82
        }
      },
      "13": {
        start: {
          line: 29,
          column: 27
        },
        end: {
          line: 29,
          column: 78
        }
      },
      "14": {
        start: {
          line: 30,
          column: 16
        },
        end: {
          line: 30,
          column: 24
        }
      },
      "15": {
        start: {
          line: 32,
          column: 20
        },
        end: {
          line: 32,
          column: 56
        }
      },
      "16": {
        start: {
          line: 33,
          column: 27
        },
        end: {
          line: 33,
          column: 64
        }
      },
      "17": {
        start: {
          line: 34,
          column: 22
        },
        end: {
          line: 39,
          column: 2
        }
      },
      "18": {
        start: {
          line: 41,
          column: 27
        },
        end: {
          line: 57,
          column: 2
        }
      },
      "19": {
        start: {
          line: 61,
          column: 20
        },
        end: {
          line: 65,
          column: 5
        }
      },
      "20": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 129,
          column: 5
        }
      },
      "21": {
        start: {
          line: 68,
          column: 27
        },
        end: {
          line: 68,
          column: 78
        }
      },
      "22": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 77,
          column: 9
        }
      },
      "23": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 57
        }
      },
      "24": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 76,
          column: 14
        }
      },
      "25": {
        start: {
          line: 79,
          column: 34
        },
        end: {
          line: 79,
          column: 83
        }
      },
      "26": {
        start: {
          line: 81,
          column: 24
        },
        end: {
          line: 81,
          column: 39
        }
      },
      "27": {
        start: {
          line: 82,
          column: 30
        },
        end: {
          line: 82,
          column: 54
        }
      },
      "28": {
        start: {
          line: 83,
          column: 35
        },
        end: {
          line: 83,
          column: 65
        }
      },
      "29": {
        start: {
          line: 84,
          column: 25
        },
        end: {
          line: 109,
          column: 9
        }
      },
      "30": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 117,
          column: 9
        }
      },
      "31": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 112,
          column: 39
        }
      },
      "32": {
        start: {
          line: 113,
          column: 15
        },
        end: {
          line: 117,
          column: 9
        }
      },
      "33": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 114,
          column: 39
        }
      },
      "34": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 38
        }
      },
      "35": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 121,
          column: 10
        }
      },
      "36": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 128,
          column: 10
        }
      },
      "37": {
        start: {
          line: 134,
          column: 20
        },
        end: {
          line: 138,
          column: 5
        }
      },
      "38": {
        start: {
          line: 139,
          column: 4
        },
        end: {
          line: 175,
          column: 5
        }
      },
      "39": {
        start: {
          line: 140,
          column: 42
        },
        end: {
          line: 140,
          column: 61
        }
      },
      "40": {
        start: {
          line: 142,
          column: 30
        },
        end: {
          line: 148,
          column: 9
        }
      },
      "41": {
        start: {
          line: 149,
          column: 26
        },
        end: {
          line: 162,
          column: 9
        }
      },
      "42": {
        start: {
          line: 158,
          column: 68
        },
        end: {
          line: 158,
          column: 84
        }
      },
      "43": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 163,
          column: 55
        }
      },
      "44": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 167,
          column: 10
        }
      },
      "45": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 174,
          column: 10
        }
      },
      "46": {
        start: {
          line: 180,
          column: 20
        },
        end: {
          line: 184,
          column: 5
        }
      },
      "47": {
        start: {
          line: 185,
          column: 4
        },
        end: {
          line: 239,
          column: 5
        }
      },
      "48": {
        start: {
          line: 186,
          column: 28
        },
        end: {
          line: 200,
          column: 9
        }
      },
      "49": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 218,
          column: 9
        }
      },
      "50": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 203,
          column: 68
        }
      },
      "51": {
        start: {
          line: 204,
          column: 12
        },
        end: {
          line: 204,
          column: 93
        }
      },
      "52": {
        start: {
          line: 207,
          column: 61
        },
        end: {
          line: 207,
          column: 119
        }
      },
      "53": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 214,
          column: 13
        }
      },
      "54": {
        start: {
          line: 209,
          column: 16
        },
        end: {
          line: 209,
          column: 61
        }
      },
      "55": {
        start: {
          line: 210,
          column: 16
        },
        end: {
          line: 210,
          column: 67
        }
      },
      "56": {
        start: {
          line: 212,
          column: 16
        },
        end: {
          line: 212,
          column: 66
        }
      },
      "57": {
        start: {
          line: 213,
          column: 16
        },
        end: {
          line: 213,
          column: 60
        }
      },
      "58": {
        start: {
          line: 216,
          column: 65
        },
        end: {
          line: 216,
          column: 125
        }
      },
      "59": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 217,
          column: 92
        }
      },
      "60": {
        start: {
          line: 220,
          column: 30
        },
        end: {
          line: 220,
          column: 162
        }
      },
      "61": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 227,
          column: 9
        }
      },
      "62": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 222,
          column: 39
        }
      },
      "63": {
        start: {
          line: 223,
          column: 15
        },
        end: {
          line: 227,
          column: 9
        }
      },
      "64": {
        start: {
          line: 224,
          column: 12
        },
        end: {
          line: 224,
          column: 39
        }
      },
      "65": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 226,
          column: 38
        }
      },
      "66": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 231,
          column: 10
        }
      },
      "67": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 238,
          column: 10
        }
      },
      "68": {
        start: {
          line: 244,
          column: 20
        },
        end: {
          line: 248,
          column: 5
        }
      },
      "69": {
        start: {
          line: 249,
          column: 4
        },
        end: {
          line: 312,
          column: 5
        }
      },
      "70": {
        start: {
          line: 250,
          column: 28
        },
        end: {
          line: 261,
          column: 9
        }
      },
      "71": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 268,
          column: 9
        }
      },
      "72": {
        start: {
          line: 264,
          column: 33
        },
        end: {
          line: 264,
          column: 95
        }
      },
      "73": {
        start: {
          line: 265,
          column: 12
        },
        end: {
          line: 265,
          column: 89
        }
      },
      "74": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 267,
          column: 71
        }
      },
      "75": {
        start: {
          line: 270,
          column: 8
        },
        end: {
          line: 277,
          column: 9
        }
      },
      "76": {
        start: {
          line: 271,
          column: 37
        },
        end: {
          line: 273,
          column: 14
        }
      },
      "77": {
        start: {
          line: 274,
          column: 12
        },
        end: {
          line: 274,
          column: 97
        }
      },
      "78": {
        start: {
          line: 276,
          column: 12
        },
        end: {
          line: 276,
          column: 75
        }
      },
      "79": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 284,
          column: 9
        }
      },
      "80": {
        start: {
          line: 280,
          column: 33
        },
        end: {
          line: 280,
          column: 107
        }
      },
      "81": {
        start: {
          line: 281,
          column: 12
        },
        end: {
          line: 281,
          column: 89
        }
      },
      "82": {
        start: {
          line: 283,
          column: 12
        },
        end: {
          line: 283,
          column: 71
        }
      },
      "83": {
        start: {
          line: 286,
          column: 8
        },
        end: {
          line: 291,
          column: 9
        }
      },
      "84": {
        start: {
          line: 287,
          column: 65
        },
        end: {
          line: 287,
          column: 136
        }
      },
      "85": {
        start: {
          line: 288,
          column: 12
        },
        end: {
          line: 288,
          column: 135
        }
      },
      "86": {
        start: {
          line: 290,
          column: 12
        },
        end: {
          line: 290,
          column: 67
        }
      },
      "87": {
        start: {
          line: 293,
          column: 29
        },
        end: {
          line: 293,
          column: 103
        }
      },
      "88": {
        start: {
          line: 293,
          column: 80
        },
        end: {
          line: 293,
          column: 95
        }
      },
      "89": {
        start: {
          line: 294,
          column: 8
        },
        end: {
          line: 300,
          column: 9
        }
      },
      "90": {
        start: {
          line: 295,
          column: 12
        },
        end: {
          line: 295,
          column: 39
        }
      },
      "91": {
        start: {
          line: 296,
          column: 15
        },
        end: {
          line: 300,
          column: 9
        }
      },
      "92": {
        start: {
          line: 297,
          column: 12
        },
        end: {
          line: 297,
          column: 39
        }
      },
      "93": {
        start: {
          line: 299,
          column: 12
        },
        end: {
          line: 299,
          column: 38
        }
      },
      "94": {
        start: {
          line: 301,
          column: 8
        },
        end: {
          line: 304,
          column: 10
        }
      },
      "95": {
        start: {
          line: 306,
          column: 8
        },
        end: {
          line: 311,
          column: 10
        }
      },
      "96": {
        start: {
          line: 317,
          column: 20
        },
        end: {
          line: 327,
          column: 5
        }
      },
      "97": {
        start: {
          line: 328,
          column: 4
        },
        end: {
          line: 371,
          column: 5
        }
      },
      "98": {
        start: {
          line: 330,
          column: 71
        },
        end: {
          line: 335,
          column: 10
        }
      },
      "99": {
        start: {
          line: 336,
          column: 27
        },
        end: {
          line: 341,
          column: 9
        }
      },
      "100": {
        start: {
          line: 343,
          column: 8
        },
        end: {
          line: 351,
          column: 11
        }
      },
      "101": {
        start: {
          line: 344,
          column: 12
        },
        end: {
          line: 350,
          column: 13
        }
      },
      "102": {
        start: {
          line: 345,
          column: 16
        },
        end: {
          line: 345,
          column: 48
        }
      },
      "103": {
        start: {
          line: 346,
          column: 19
        },
        end: {
          line: 350,
          column: 13
        }
      },
      "104": {
        start: {
          line: 347,
          column: 16
        },
        end: {
          line: 347,
          column: 48
        }
      },
      "105": {
        start: {
          line: 349,
          column: 16
        },
        end: {
          line: 349,
          column: 47
        }
      },
      "106": {
        start: {
          line: 353,
          column: 8
        },
        end: {
          line: 359,
          column: 9
        }
      },
      "107": {
        start: {
          line: 354,
          column: 12
        },
        end: {
          line: 354,
          column: 39
        }
      },
      "108": {
        start: {
          line: 355,
          column: 15
        },
        end: {
          line: 359,
          column: 9
        }
      },
      "109": {
        start: {
          line: 356,
          column: 12
        },
        end: {
          line: 356,
          column: 39
        }
      },
      "110": {
        start: {
          line: 358,
          column: 12
        },
        end: {
          line: 358,
          column: 38
        }
      },
      "111": {
        start: {
          line: 360,
          column: 8
        },
        end: {
          line: 363,
          column: 10
        }
      },
      "112": {
        start: {
          line: 365,
          column: 8
        },
        end: {
          line: 370,
          column: 10
        }
      },
      "113": {
        start: {
          line: 374,
          column: 4
        },
        end: {
          line: 433,
          column: 5
        }
      },
      "114": {
        start: {
          line: 375,
          column: 20
        },
        end: {
          line: 375,
          column: 40
        }
      },
      "115": {
        start: {
          line: 376,
          column: 26
        },
        end: {
          line: 376,
          column: 72
        }
      },
      "116": {
        start: {
          line: 378,
          column: 23
        },
        end: {
          line: 378,
          column: 58
        }
      },
      "117": {
        start: {
          line: 379,
          column: 65
        },
        end: {
          line: 379,
          column: 71
        }
      },
      "118": {
        start: {
          line: 380,
          column: 8
        },
        end: {
          line: 380,
          column: 85
        }
      },
      "119": {
        start: {
          line: 383,
          column: 8
        },
        end: {
          line: 400,
          column: 9
        }
      },
      "120": {
        start: {
          line: 385,
          column: 16
        },
        end: {
          line: 385,
          column: 60
        }
      },
      "121": {
        start: {
          line: 386,
          column: 16
        },
        end: {
          line: 386,
          column: 22
        }
      },
      "122": {
        start: {
          line: 388,
          column: 16
        },
        end: {
          line: 388,
          column: 52
        }
      },
      "123": {
        start: {
          line: 389,
          column: 16
        },
        end: {
          line: 389,
          column: 22
        }
      },
      "124": {
        start: {
          line: 391,
          column: 16
        },
        end: {
          line: 391,
          column: 52
        }
      },
      "125": {
        start: {
          line: 392,
          column: 16
        },
        end: {
          line: 392,
          column: 22
        }
      },
      "126": {
        start: {
          line: 394,
          column: 16
        },
        end: {
          line: 394,
          column: 73
        }
      },
      "127": {
        start: {
          line: 395,
          column: 16
        },
        end: {
          line: 395,
          column: 22
        }
      },
      "128": {
        start: {
          line: 398,
          column: 16
        },
        end: {
          line: 398,
          column: 59
        }
      },
      "129": {
        start: {
          line: 399,
          column: 16
        },
        end: {
          line: 399,
          column: 22
        }
      },
      "130": {
        start: {
          line: 402,
          column: 8
        },
        end: {
          line: 409,
          column: 9
        }
      },
      "131": {
        start: {
          line: 404,
          column: 12
        },
        end: {
          line: 408,
          column: 13
        }
      },
      "132": {
        start: {
          line: 405,
          column: 34
        },
        end: {
          line: 405,
          column: 73
        }
      },
      "133": {
        start: {
          line: 407,
          column: 16
        },
        end: {
          line: 407,
          column: 40
        }
      },
      "134": {
        start: {
          line: 410,
          column: 8
        },
        end: {
          line: 410,
          column: 96
        }
      },
      "135": {
        start: {
          line: 411,
          column: 8
        },
        end: {
          line: 422,
          column: 11
        }
      },
      "136": {
        start: {
          line: 424,
          column: 8
        },
        end: {
          line: 424,
          column: 59
        }
      },
      "137": {
        start: {
          line: 425,
          column: 8
        },
        end: {
          line: 432,
          column: 11
        }
      },
      "138": {
        start: {
          line: 436,
          column: 4
        },
        end: {
          line: 456,
          column: 5
        }
      },
      "139": {
        start: {
          line: 437,
          column: 21
        },
        end: {
          line: 437,
          column: 41
        }
      },
      "140": {
        start: {
          line: 438,
          column: 65
        },
        end: {
          line: 438,
          column: 69
        }
      },
      "141": {
        start: {
          line: 439,
          column: 8
        },
        end: {
          line: 439,
          column: 78
        }
      },
      "142": {
        start: {
          line: 442,
          column: 8
        },
        end: {
          line: 447,
          column: 11
        }
      },
      "143": {
        start: {
          line: 449,
          column: 8
        },
        end: {
          line: 449,
          column: 60
        }
      },
      "144": {
        start: {
          line: 450,
          column: 8
        },
        end: {
          line: 455,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "debugAuth",
        decl: {
          start: {
            line: 60,
            column: 19
          },
          end: {
            line: 60,
            column: 28
          }
        },
        loc: {
          start: {
            line: 60,
            column: 56
          },
          end: {
            line: 130,
            column: 1
          }
        },
        line: 60
      },
      "5": {
        name: "debugClerk",
        decl: {
          start: {
            line: 133,
            column: 19
          },
          end: {
            line: 133,
            column: 29
          }
        },
        loc: {
          start: {
            line: 133,
            column: 48
          },
          end: {
            line: 176,
            column: 1
          }
        },
        line: 133
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 158,
            column: 60
          },
          end: {
            line: 158,
            column: 61
          }
        },
        loc: {
          start: {
            line: 158,
            column: 68
          },
          end: {
            line: 158,
            column: 84
          }
        },
        line: 158
      },
      "7": {
        name: "debugAdmin",
        decl: {
          start: {
            line: 179,
            column: 19
          },
          end: {
            line: 179,
            column: 29
          }
        },
        loc: {
          start: {
            line: 179,
            column: 48
          },
          end: {
            line: 240,
            column: 1
          }
        },
        line: 179
      },
      "8": {
        name: "debugProducts",
        decl: {
          start: {
            line: 243,
            column: 19
          },
          end: {
            line: 243,
            column: 32
          }
        },
        loc: {
          start: {
            line: 243,
            column: 68
          },
          end: {
            line: 313,
            column: 1
          }
        },
        line: 243
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 293,
            column: 75
          },
          end: {
            line: 293,
            column: 76
          }
        },
        loc: {
          start: {
            line: 293,
            column: 80
          },
          end: {
            line: 293,
            column: 95
          }
        },
        line: 293
      },
      "10": {
        name: "debugAll",
        decl: {
          start: {
            line: 316,
            column: 19
          },
          end: {
            line: 316,
            column: 27
          }
        },
        loc: {
          start: {
            line: 316,
            column: 55
          },
          end: {
            line: 372,
            column: 1
          }
        },
        line: 316
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 343,
            column: 42
          },
          end: {
            line: 343,
            column: 43
          }
        },
        loc: {
          start: {
            line: 343,
            column: 52
          },
          end: {
            line: 351,
            column: 9
          }
        },
        line: 343
      },
      "12": {
        name: "GET",
        decl: {
          start: {
            line: 373,
            column: 15
          },
          end: {
            line: 373,
            column: 18
          }
        },
        loc: {
          start: {
            line: 373,
            column: 28
          },
          end: {
            line: 434,
            column: 1
          }
        },
        line: 373
      },
      "13": {
        name: "POST",
        decl: {
          start: {
            line: 435,
            column: 15
          },
          end: {
            line: 435,
            column: 19
          }
        },
        loc: {
          start: {
            line: 435,
            column: 29
          },
          end: {
            line: 457,
            column: 1
          }
        },
        line: 435
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 60,
            column: 38
          },
          end: {
            line: 60,
            column: 54
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 60,
            column: 49
          },
          end: {
            line: 60,
            column: 54
          }
        }],
        line: 60
      },
      "1": {
        loc: {
          start: {
            line: 96,
            column: 32
          },
          end: {
            line: 102,
            column: 13
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 96,
            column: 43
          },
          end: {
            line: 100,
            column: 13
          }
        }, {
          start: {
            line: 100,
            column: 16
          },
          end: {
            line: 102,
            column: 13
          }
        }],
        line: 96
      },
      "2": {
        loc: {
          start: {
            line: 106,
            column: 30
          },
          end: {
            line: 106,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 106,
            column: 41
          },
          end: {
            line: 106,
            column: 61
          }
        }, {
          start: {
            line: 106,
            column: 64
          },
          end: {
            line: 106,
            column: 72
          }
        }],
        line: 106
      },
      "3": {
        loc: {
          start: {
            line: 107,
            column: 28
          },
          end: {
            line: 107,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 107,
            column: 39
          },
          end: {
            line: 107,
            column: 64
          }
        }, {
          start: {
            line: 107,
            column: 67
          },
          end: {
            line: 107,
            column: 75
          }
        }],
        line: 107
      },
      "4": {
        loc: {
          start: {
            line: 111,
            column: 8
          },
          end: {
            line: 117,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 111,
            column: 8
          },
          end: {
            line: 117,
            column: 9
          }
        }, {
          start: {
            line: 113,
            column: 15
          },
          end: {
            line: 117,
            column: 9
          }
        }],
        line: 111
      },
      "5": {
        loc: {
          start: {
            line: 111,
            column: 12
          },
          end: {
            line: 111,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 111,
            column: 12
          },
          end: {
            line: 111,
            column: 29
          }
        }, {
          start: {
            line: 111,
            column: 33
          },
          end: {
            line: 111,
            column: 57
          }
        }],
        line: 111
      },
      "6": {
        loc: {
          start: {
            line: 113,
            column: 15
          },
          end: {
            line: 117,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 15
          },
          end: {
            line: 117,
            column: 9
          }
        }, {
          start: {
            line: 115,
            column: 15
          },
          end: {
            line: 117,
            column: 9
          }
        }],
        line: 113
      },
      "7": {
        loc: {
          start: {
            line: 113,
            column: 19
          },
          end: {
            line: 113,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 113,
            column: 19
          },
          end: {
            line: 113,
            column: 36
          }
        }, {
          start: {
            line: 113,
            column: 40
          },
          end: {
            line: 113,
            column: 64
          }
        }],
        line: 113
      },
      "8": {
        loc: {
          start: {
            line: 133,
            column: 30
          },
          end: {
            line: 133,
            column: 46
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 133,
            column: 41
          },
          end: {
            line: 133,
            column: 46
          }
        }],
        line: 133
      },
      "9": {
        loc: {
          start: {
            line: 152,
            column: 31
          },
          end: {
            line: 152,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 152,
            column: 47
          },
          end: {
            line: 152,
            column: 73
          }
        }, {
          start: {
            line: 152,
            column: 76
          },
          end: {
            line: 152,
            column: 78
          }
        }],
        line: 152
      },
      "10": {
        loc: {
          start: {
            line: 154,
            column: 22
          },
          end: {
            line: 156,
            column: 13
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 154,
            column: 33
          },
          end: {
            line: 154,
            column: 56
          }
        }, {
          start: {
            line: 154,
            column: 59
          },
          end: {
            line: 156,
            column: 13
          }
        }],
        line: 154
      },
      "11": {
        loc: {
          start: {
            line: 158,
            column: 26
          },
          end: {
            line: 158,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 158,
            column: 26
          },
          end: {
            line: 158,
            column: 85
          }
        }, {
          start: {
            line: 158,
            column: 89
          },
          end: {
            line: 158,
            column: 95
          }
        }],
        line: 158
      },
      "12": {
        loc: {
          start: {
            line: 159,
            column: 27
          },
          end: {
            line: 161,
            column: 13
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 159,
            column: 38
          },
          end: {
            line: 159,
            column: 51
          }
        }, {
          start: {
            line: 159,
            column: 54
          },
          end: {
            line: 161,
            column: 13
          }
        }],
        line: 159
      },
      "13": {
        loc: {
          start: {
            line: 163,
            column: 25
          },
          end: {
            line: 163,
            column: 54
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 163,
            column: 34
          },
          end: {
            line: 163,
            column: 43
          }
        }, {
          start: {
            line: 163,
            column: 46
          },
          end: {
            line: 163,
            column: 54
          }
        }],
        line: 163
      },
      "14": {
        loc: {
          start: {
            line: 179,
            column: 30
          },
          end: {
            line: 179,
            column: 46
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 179,
            column: 41
          },
          end: {
            line: 179,
            column: 46
          }
        }],
        line: 179
      },
      "15": {
        loc: {
          start: {
            line: 202,
            column: 8
          },
          end: {
            line: 218,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 202,
            column: 8
          },
          end: {
            line: 218,
            column: 9
          }
        }, {
          start: {
            line: 205,
            column: 15
          },
          end: {
            line: 218,
            column: 9
          }
        }],
        line: 202
      },
      "16": {
        loc: {
          start: {
            line: 202,
            column: 12
          },
          end: {
            line: 202,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 202,
            column: 12
          },
          end: {
            line: 202,
            column: 24
          }
        }, {
          start: {
            line: 202,
            column: 28
          },
          end: {
            line: 202,
            column: 47
          }
        }],
        line: 202
      },
      "17": {
        loc: {
          start: {
            line: 208,
            column: 12
          },
          end: {
            line: 214,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 208,
            column: 12
          },
          end: {
            line: 214,
            column: 13
          }
        }, {
          start: {
            line: 211,
            column: 19
          },
          end: {
            line: 214,
            column: 13
          }
        }],
        line: 208
      },
      "18": {
        loc: {
          start: {
            line: 217,
            column: 51
          },
          end: {
            line: 217,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 217,
            column: 69
          },
          end: {
            line: 217,
            column: 76
          }
        }, {
          start: {
            line: 217,
            column: 79
          },
          end: {
            line: 217,
            column: 91
          }
        }],
        line: 217
      },
      "19": {
        loc: {
          start: {
            line: 220,
            column: 30
          },
          end: {
            line: 220,
            column: 162
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 220,
            column: 30
          },
          end: {
            line: 220,
            column: 68
          }
        }, {
          start: {
            line: 220,
            column: 72
          },
          end: {
            line: 220,
            column: 117
          }
        }, {
          start: {
            line: 220,
            column: 121
          },
          end: {
            line: 220,
            column: 162
          }
        }],
        line: 220
      },
      "20": {
        loc: {
          start: {
            line: 221,
            column: 8
          },
          end: {
            line: 227,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 221,
            column: 8
          },
          end: {
            line: 227,
            column: 9
          }
        }, {
          start: {
            line: 223,
            column: 15
          },
          end: {
            line: 227,
            column: 9
          }
        }],
        line: 221
      },
      "21": {
        loc: {
          start: {
            line: 221,
            column: 12
          },
          end: {
            line: 221,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 221,
            column: 12
          },
          end: {
            line: 221,
            column: 25
          }
        }, {
          start: {
            line: 221,
            column: 29
          },
          end: {
            line: 221,
            column: 74
          }
        }],
        line: 221
      },
      "22": {
        loc: {
          start: {
            line: 223,
            column: 15
          },
          end: {
            line: 227,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 223,
            column: 15
          },
          end: {
            line: 227,
            column: 9
          }
        }, {
          start: {
            line: 225,
            column: 15
          },
          end: {
            line: 227,
            column: 9
          }
        }],
        line: 223
      },
      "23": {
        loc: {
          start: {
            line: 223,
            column: 19
          },
          end: {
            line: 223,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 223,
            column: 19
          },
          end: {
            line: 223,
            column: 32
          }
        }, {
          start: {
            line: 223,
            column: 36
          },
          end: {
            line: 223,
            column: 81
          }
        }],
        line: 223
      },
      "24": {
        loc: {
          start: {
            line: 243,
            column: 50
          },
          end: {
            line: 243,
            column: 66
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 243,
            column: 61
          },
          end: {
            line: 243,
            column: 66
          }
        }],
        line: 243
      },
      "25": {
        loc: {
          start: {
            line: 265,
            column: 45
          },
          end: {
            line: 265,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 265,
            column: 68
          },
          end: {
            line: 265,
            column: 77
          }
        }, {
          start: {
            line: 265,
            column: 80
          },
          end: {
            line: 265,
            column: 88
          }
        }],
        line: 265
      },
      "26": {
        loc: {
          start: {
            line: 274,
            column: 49
          },
          end: {
            line: 274,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 274,
            column: 76
          },
          end: {
            line: 274,
            column: 85
          }
        }, {
          start: {
            line: 274,
            column: 88
          },
          end: {
            line: 274,
            column: 96
          }
        }],
        line: 274
      },
      "27": {
        loc: {
          start: {
            line: 281,
            column: 45
          },
          end: {
            line: 281,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 281,
            column: 68
          },
          end: {
            line: 281,
            column: 77
          }
        }, {
          start: {
            line: 281,
            column: 80
          },
          end: {
            line: 281,
            column: 88
          }
        }],
        line: 281
      },
      "28": {
        loc: {
          start: {
            line: 288,
            column: 41
          },
          end: {
            line: 288,
            column: 134
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 288,
            column: 55
          },
          end: {
            line: 288,
            column: 86
          }
        }, {
          start: {
            line: 288,
            column: 89
          },
          end: {
            line: 288,
            column: 134
          }
        }],
        line: 288
      },
      "29": {
        loc: {
          start: {
            line: 294,
            column: 8
          },
          end: {
            line: 300,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 294,
            column: 8
          },
          end: {
            line: 300,
            column: 9
          }
        }, {
          start: {
            line: 296,
            column: 15
          },
          end: {
            line: 300,
            column: 9
          }
        }],
        line: 294
      },
      "30": {
        loc: {
          start: {
            line: 296,
            column: 15
          },
          end: {
            line: 300,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 296,
            column: 15
          },
          end: {
            line: 300,
            column: 9
          }
        }, {
          start: {
            line: 298,
            column: 15
          },
          end: {
            line: 300,
            column: 9
          }
        }],
        line: 296
      },
      "31": {
        loc: {
          start: {
            line: 316,
            column: 37
          },
          end: {
            line: 316,
            column: 53
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 316,
            column: 48
          },
          end: {
            line: 316,
            column: 53
          }
        }],
        line: 316
      },
      "32": {
        loc: {
          start: {
            line: 344,
            column: 12
          },
          end: {
            line: 350,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 344,
            column: 12
          },
          end: {
            line: 350,
            column: 13
          }
        }, {
          start: {
            line: 346,
            column: 19
          },
          end: {
            line: 350,
            column: 13
          }
        }],
        line: 344
      },
      "33": {
        loc: {
          start: {
            line: 346,
            column: 19
          },
          end: {
            line: 350,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 346,
            column: 19
          },
          end: {
            line: 350,
            column: 13
          }
        }, {
          start: {
            line: 348,
            column: 19
          },
          end: {
            line: 350,
            column: 13
          }
        }],
        line: 346
      },
      "34": {
        loc: {
          start: {
            line: 353,
            column: 8
          },
          end: {
            line: 359,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 353,
            column: 8
          },
          end: {
            line: 359,
            column: 9
          }
        }, {
          start: {
            line: 355,
            column: 15
          },
          end: {
            line: 359,
            column: 9
          }
        }],
        line: 353
      },
      "35": {
        loc: {
          start: {
            line: 355,
            column: 15
          },
          end: {
            line: 359,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 355,
            column: 15
          },
          end: {
            line: 359,
            column: 9
          }
        }, {
          start: {
            line: 357,
            column: 15
          },
          end: {
            line: 359,
            column: 9
          }
        }],
        line: 355
      },
      "36": {
        loc: {
          start: {
            line: 383,
            column: 8
          },
          end: {
            line: 400,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 384,
            column: 12
          },
          end: {
            line: 386,
            column: 22
          }
        }, {
          start: {
            line: 387,
            column: 12
          },
          end: {
            line: 389,
            column: 22
          }
        }, {
          start: {
            line: 390,
            column: 12
          },
          end: {
            line: 392,
            column: 22
          }
        }, {
          start: {
            line: 393,
            column: 12
          },
          end: {
            line: 395,
            column: 22
          }
        }, {
          start: {
            line: 396,
            column: 12
          },
          end: {
            line: 396,
            column: 23
          }
        }, {
          start: {
            line: 397,
            column: 12
          },
          end: {
            line: 399,
            column: 22
          }
        }],
        line: 383
      },
      "37": {
        loc: {
          start: {
            line: 402,
            column: 8
          },
          end: {
            line: 409,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 402,
            column: 8
          },
          end: {
            line: 409,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 402
      },
      "38": {
        loc: {
          start: {
            line: 402,
            column: 12
          },
          end: {
            line: 402,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 402,
            column: 12
          },
          end: {
            line: 402,
            column: 30
          }
        }, {
          start: {
            line: 402,
            column: 34
          },
          end: {
            line: 402,
            column: 45
          }
        }],
        line: 402
      },
      "39": {
        loc: {
          start: {
            line: 404,
            column: 12
          },
          end: {
            line: 408,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 404,
            column: 12
          },
          end: {
            line: 408,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 404
      },
      "40": {
        loc: {
          start: {
            line: 438,
            column: 44
          },
          end: {
            line: 438,
            column: 60
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 438,
            column: 55
          },
          end: {
            line: 438,
            column: 60
          }
        }],
        line: 438
      },
      "41": {
        loc: {
          start: {
            line: 445,
            column: 23
          },
          end: {
            line: 445,
            column: 54
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 445,
            column: 34
          },
          end: {
            line: 445,
            column: 43
          }
        }, {
          start: {
            line: 445,
            column: 46
          },
          end: {
            line: 445,
            column: 54
          }
        }],
        line: 445
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0, 0, 0, 0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0],
      "41": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\debug\\unified\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - API UNIFICADA DE DEBUG\r\n// Consolida todas las funcionalidades de debug dispersas\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { z } from 'zod';\r\nimport { auth } from '@/lib/auth/config';\r\nimport { createClient } from '@supabase/supabase-js';\r\nimport { getAuthenticatedUser, getAuthFromHeaders } from '@/lib/auth/admin-auth';\r\nimport { checkCRUDPermissions } from '@/lib/auth/admin-auth';\r\nimport { requireAdminAuth } from '@/lib/auth/enterprise-auth-utils';\r\nimport { checkPermission } from '@/lib/auth/supabase-auth-utils';\r\n\r\n// Configuraci\xF3n de Supabase\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;\r\nconst supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY!;\r\n\r\nconst supabaseAdmin = createClient(supabaseUrl, supabaseServiceKey, {\r\n  auth: {\r\n    autoRefreshToken: false,\r\n    persistSession: false\r\n  }\r\n});\r\n\r\n// Schema de validaci\xF3n para debug\r\nconst DebugRequestSchema = z.object({\r\n  module: z.enum([\r\n    'auth',           // Autenticaci\xF3n general\r\n    'clerk',          // Clerk espec\xEDfico\r\n    'admin',          // Panel administrativo\r\n    'products',       // Productos y permisos\r\n    'user-profile',   // Perfiles de usuario\r\n    'user-status',    // Estado de usuario\r\n    'permissions',    // Sistema de permisos\r\n    'supabase',       // Conexi\xF3n Supabase\r\n    'environment',    // Variables de entorno\r\n    'all'            // Diagn\xF3stico completo\r\n  ]).default('all'),\r\n  user_id: z.string().optional(),\r\n  detailed: z.boolean().default(false),\r\n  include_sensitive: z.boolean().default(false)\r\n});\r\n\r\n/**\r\n * Diagn\xF3stico de autenticaci\xF3n unificado\r\n */\r\nasync function debugAuth(request: NextRequest, detailed: boolean = false) {\r\n  const results = {\r\n    timestamp: new Date().toISOString(),\r\n    module: 'auth',\r\n    status: 'unknown' as 'success' | 'partial' | 'failed' | 'unknown'\r\n  };\r\n\r\n  try {\r\n    // M\xE9todo 1: getAuthenticatedUser (migrado)\r\n    const authResult = await getAuthenticatedUser(request);\r\n    \r\n    // M\xE9todo 2: auth() directo\r\n    let directAuthResult;\r\n    try {\r\n      directAuthResult = await auth();\r\n    } catch (directAuthError: any) {\r\n      directAuthResult = { error: directAuthError.message };\r\n    }\r\n    \r\n    // M\xE9todo 3: Headers (deprecado)\r\n    const deprecatedHeaders = await getAuthFromHeaders(request);\r\n    \r\n    // Cookies para an\xE1lisis\r\n    const cookies = request.cookies;\r\n    const sessionCookie = cookies.get('__session');\r\n    const clerkSessionCookie = cookies.get('__clerk_session');\r\n    \r\n    const authData = {\r\n      migrated_method: {\r\n        userId: authResult.userId,\r\n        sessionId: authResult.sessionId,\r\n        isAdmin: authResult.isAdmin,\r\n        error: authResult.error\r\n      },\r\n      direct_method: {\r\n        userId: directAuthResult?.userId,\r\n        sessionId: directAuthResult?.sessionId,\r\n        error: directAuthResult?.error\r\n      },\r\n      deprecated_headers: detailed ? {\r\n        userId: deprecatedHeaders.userId,\r\n        sessionId: deprecatedHeaders.sessionId,\r\n        error: deprecatedHeaders.error\r\n      } : { status: 'hidden' },\r\n      cookies: {\r\n        hasSession: !!sessionCookie,\r\n        hasClerkSession: !!clerkSessionCookie,\r\n        sessionValue: detailed ? sessionCookie?.value : 'hidden',\r\n        clerkValue: detailed ? clerkSessionCookie?.value : 'hidden'\r\n      }\r\n    };\r\n    \r\n    // Determinar estado general\r\n    if (authResult.userId && directAuthResult?.userId) {\r\n      results.status = 'success';\r\n    } else if (authResult.userId || directAuthResult?.userId) {\r\n      results.status = 'partial';\r\n    } else {\r\n      results.status = 'failed';\r\n    }\r\n    \r\n    return { ...results, data: authData };\r\n    \r\n  } catch (error: any) {\r\n    return {\r\n      ...results,\r\n      status: 'failed' as const,\r\n      error: error.message,\r\n      data: null\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Diagn\xF3stico espec\xEDfico de Clerk\r\n */\r\nasync function debugClerk(detailed: boolean = false) {\r\n  const results = {\r\n    timestamp: new Date().toISOString(),\r\n    module: 'clerk',\r\n    status: 'unknown' as 'success' | 'partial' | 'failed' | 'unknown'\r\n  };\r\n\r\n  try {\r\n    const { userId, sessionClaims } = auth();\r\n    \r\n    // Verificar todas las posibles ubicaciones del rol\r\n    const possibleRoles = {\r\n      'sessionClaims.publicMetadata.role': sessionClaims?.publicMetadata?.role,\r\n      'sessionClaims.metadata.role': sessionClaims?.metadata?.role,\r\n      'sessionClaims.role': sessionClaims?.role,\r\n      'sessionClaims.public_metadata.role': sessionClaims?.public_metadata?.role,\r\n      'sessionClaims.user_metadata.role': sessionClaims?.user_metadata?.role\r\n    };\r\n    \r\n    const clerkData = {\r\n      userId,\r\n      hasSessionClaims: !!sessionClaims,\r\n      sessionClaimsKeys: sessionClaims ? Object.keys(sessionClaims) : [],\r\n      publicMetadata: sessionClaims?.publicMetadata,\r\n      metadata: detailed ? sessionClaims?.metadata : { status: 'hidden' },\r\n      possibleRoleLocations: possibleRoles,\r\n      detectedRole: Object.values(possibleRoles).find(role => role === 'admin') || 'none',\r\n      fullStructure: detailed ? sessionClaims : { status: 'hidden' }\r\n    };\r\n    \r\n    results.status = userId ? 'success' : 'failed';\r\n    return { ...results, data: clerkData };\r\n    \r\n  } catch (error: any) {\r\n    return {\r\n      ...results,\r\n      status: 'failed' as const,\r\n      error: error.message,\r\n      data: null\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Diagn\xF3stico del panel administrativo\r\n */\r\nasync function debugAdmin(detailed: boolean = false) {\r\n  const results = {\r\n    timestamp: new Date().toISOString(),\r\n    module: 'admin',\r\n    status: 'unknown' as 'success' | 'partial' | 'failed' | 'unknown'\r\n  };\r\n\r\n  try {\r\n    const diagnostics = {\r\n      environment: {\r\n        nodeEnv: process.env.NODE_ENV,\r\n        hasSupabaseUrl: !!process.env.NEXT_PUBLIC_SUPABASE_URL,\r\n        hasSupabaseServiceKey: !!process.env.SUPABASE_SERVICE_ROLE_KEY,\r\n        hasClerkSecretKey: !!process.env.CLERK_SECRET_KEY,\r\n        hasClerkPublishableKey: !!process.env.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY,\r\n      },\r\n      supabase: {\r\n        connection: 'unknown',\r\n        productsTable: 'unknown',\r\n        categoriesTable: 'unknown',\r\n        error: null\r\n      }\r\n    };\r\n\r\n    // Test Supabase connection\r\n    if (!supabaseUrl || !supabaseServiceKey) {\r\n      diagnostics.supabase.connection = 'missing_credentials';\r\n      diagnostics.supabase.error = 'Missing SUPABASE_URL or SUPABASE_SERVICE_ROLE_KEY';\r\n    } else {\r\n      // Test products table\r\n      const { data: products, error: productsError } = await supabaseAdmin\r\n        .from('products')\r\n        .select('id')\r\n        .limit(1);\r\n\r\n      if (productsError) {\r\n        diagnostics.supabase.productsTable = 'error';\r\n        diagnostics.supabase.error = productsError.message;\r\n      } else {\r\n        diagnostics.supabase.productsTable = 'accessible';\r\n        diagnostics.supabase.connection = 'success';\r\n      }\r\n\r\n      // Test categories table\r\n      const { data: categories, error: categoriesError } = await supabaseAdmin\r\n        .from('categories')\r\n        .select('id')\r\n        .limit(1);\r\n\r\n      diagnostics.supabase.categoriesTable = categoriesError ? 'error' : 'accessible';\r\n    }\r\n\r\n    // Determinar estado general\r\n    const hasAllEnvVars = diagnostics.environment.hasSupabaseUrl && \r\n                         diagnostics.environment.hasSupabaseServiceKey &&\r\n                         diagnostics.environment.hasClerkSecretKey;\r\n    \r\n    if (hasAllEnvVars && diagnostics.supabase.connection === 'success') {\r\n      results.status = 'success';\r\n    } else if (hasAllEnvVars || diagnostics.supabase.connection === 'success') {\r\n      results.status = 'partial';\r\n    } else {\r\n      results.status = 'failed';\r\n    }\r\n\r\n    return { ...results, data: diagnostics };\r\n    \r\n  } catch (error: any) {\r\n    return {\r\n      ...results,\r\n      status: 'failed' as const,\r\n      error: error.message,\r\n      data: null\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Diagn\xF3stico de productos y permisos\r\n */\r\nasync function debugProducts(request: NextRequest, userId?: string, detailed: boolean = false) {\r\n  const results = {\r\n    timestamp: new Date().toISOString(),\r\n    module: 'products',\r\n    status: 'unknown' as 'success' | 'partial' | 'failed' | 'unknown'\r\n  };\r\n\r\n  try {\r\n    const productData = {\r\n      permissions: {\r\n        simple: 'unknown',\r\n        enterprise: 'unknown',\r\n        secure: 'unknown'\r\n      },\r\n      queries: {\r\n        direct: 'unknown',\r\n        withAuth: 'unknown'\r\n      },\r\n      comparison: null as any\r\n    };\r\n\r\n    // Test 1: Simple permissions\r\n    try {\r\n      const simpleResult = await checkCRUDPermissions('read', 'products');\r\n      productData.permissions.simple = simpleResult.success ? 'allowed' : 'denied';\r\n    } catch (error: any) {\r\n      productData.permissions.simple = `error: ${error.message}`;\r\n    }\r\n\r\n    // Test 2: Enterprise permissions\r\n    try {\r\n      const enterpriseResult = await requireAdminAuth(request, ['products_read']);\r\n      productData.permissions.enterprise = enterpriseResult.success ? 'allowed' : 'denied';\r\n    } catch (error: any) {\r\n      productData.permissions.enterprise = `error: ${error.message}`;\r\n    }\r\n\r\n    // Test 3: Secure permissions\r\n    try {\r\n      const secureResult = await checkPermission(request, 'products', 'read');\r\n      productData.permissions.secure = secureResult.allowed ? 'allowed' : 'denied';\r\n    } catch (error: any) {\r\n      productData.permissions.secure = `error: ${error.message}`;\r\n    }\r\n\r\n    // Test 4: Direct query\r\n    try {\r\n      const { data: directProducts, error: directError } = await supabaseAdmin\r\n        .from('products')\r\n        .select('id, name, price')\r\n        .limit(3);\r\n      \r\n      productData.queries.direct = directError ? `error: ${directError.message}` : `success: ${directProducts?.length} products`;\r\n    } catch (error: any) {\r\n      productData.queries.direct = `error: ${error.message}`;\r\n    }\r\n\r\n    // Determinar estado general\r\n    const successCount = Object.values(productData.permissions).filter(p => p === 'allowed').length;\r\n    if (successCount >= 2) {\r\n      results.status = 'success';\r\n    } else if (successCount >= 1) {\r\n      results.status = 'partial';\r\n    } else {\r\n      results.status = 'failed';\r\n    }\r\n\r\n    return { ...results, data: productData };\r\n    \r\n  } catch (error: any) {\r\n    return {\r\n      ...results,\r\n      status: 'failed' as const,\r\n      error: error.message,\r\n      data: null\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Diagn\xF3stico completo del sistema\r\n */\r\nasync function debugAll(request: NextRequest, detailed: boolean = false) {\r\n  const results = {\r\n    timestamp: new Date().toISOString(),\r\n    module: 'all',\r\n    status: 'unknown' as 'success' | 'partial' | 'failed' | 'unknown',\r\n    summary: {\r\n      total_modules: 4,\r\n      success_count: 0,\r\n      partial_count: 0,\r\n      failed_count: 0\r\n    }\r\n  };\r\n\r\n  try {\r\n    // Ejecutar todos los diagn\xF3sticos\r\n    const [authResult, clerkResult, adminResult, productsResult] = await Promise.all([\r\n      debugAuth(request, detailed),\r\n      debugClerk(detailed),\r\n      debugAdmin(detailed),\r\n      debugProducts(request, undefined, detailed)\r\n    ]);\r\n\r\n    const allResults = {\r\n      auth: authResult,\r\n      clerk: clerkResult,\r\n      admin: adminResult,\r\n      products: productsResult\r\n    };\r\n\r\n    // Calcular resumen\r\n    Object.values(allResults).forEach(result => {\r\n      if (result.status === 'success') {results.summary.success_count++;}\r\n      else if (result.status === 'partial') {results.summary.partial_count++;}\r\n      else {results.summary.failed_count++;}\r\n    });\r\n\r\n    // Determinar estado general\r\n    if (results.summary.success_count >= 3) {\r\n      results.status = 'success';\r\n    } else if (results.summary.success_count + results.summary.partial_count >= 2) {\r\n      results.status = 'partial';\r\n    } else {\r\n      results.status = 'failed';\r\n    }\r\n\r\n    return { ...results, data: allResults };\r\n    \r\n  } catch (error: any) {\r\n    return {\r\n      ...results,\r\n      status: 'failed' as const,\r\n      error: error.message,\r\n      data: null\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * GET /api/debug/unified\r\n * API unificada de debug con m\xFAltiples m\xF3dulos\r\n */\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    const url = new URL(request.url);\r\n    const rawParams = Object.fromEntries(url.searchParams.entries());\r\n    \r\n    // Validar par\xE1metros\r\n    const params = DebugRequestSchema.parse(rawParams);\r\n    const { module, user_id, detailed, include_sensitive } = params;\r\n    \r\n    console.log(`\uD83D\uDD0D Unified Debug API: Module ${module}, Detailed: ${detailed}`);\r\n    \r\n    let result;\r\n    \r\n    // Ejecutar diagn\xF3stico seg\xFAn el m\xF3dulo solicitado\r\n    switch (module) {\r\n      case 'auth':\r\n        result = await debugAuth(request, detailed);\r\n        break;\r\n      case 'clerk':\r\n        result = await debugClerk(detailed);\r\n        break;\r\n      case 'admin':\r\n        result = await debugAdmin(detailed);\r\n        break;\r\n      case 'products':\r\n        result = await debugProducts(request, user_id, detailed);\r\n        break;\r\n      case 'all':\r\n      default:\r\n        result = await debugAll(request, detailed);\r\n        break;\r\n    }\r\n    \r\n    // Filtrar informaci\xF3n sensible si no est\xE1 autorizada\r\n    if (!include_sensitive && result.data) {\r\n      // Remover informaci\xF3n sensible de la respuesta\r\n      if (typeof result.data === 'object') {\r\n        const sanitized = JSON.parse(JSON.stringify(result.data));\r\n        // Aqu\xED se pueden agregar m\xE1s filtros de seguridad\r\n        result.data = sanitized;\r\n      }\r\n    }\r\n    \r\n    console.log(`\u2705 Unified Debug: Module ${module} completed with status ${result.status}`);\r\n    \r\n    return NextResponse.json({\r\n      ...result,\r\n      meta: {\r\n        api_version: '1.0.0',\r\n        unified: true,\r\n        parameters: {\r\n          module,\r\n          detailed,\r\n          include_sensitive\r\n        }\r\n      }\r\n    });\r\n    \r\n  } catch (error: any) {\r\n    console.error('\u274C Unified Debug API error:', error);\r\n    return NextResponse.json(\r\n      { \r\n        error: 'Error interno del servidor de debug',\r\n        details: error.message,\r\n        module: 'unified',\r\n        status: 'failed'\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * POST /api/debug/unified\r\n * Ejecutar diagn\xF3sticos espec\xEDficos con datos de entrada\r\n */\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    const body = await request.json();\r\n    const { module, user_id, test_data, detailed = false } = body;\r\n    \r\n    console.log(`\uD83D\uDD27 Unified Debug POST: Module ${module} with test data`);\r\n    \r\n    // Aqu\xED se pueden agregar diagn\xF3sticos espec\xEDficos que requieren datos de entrada\r\n    // Por ejemplo, probar autenticaci\xF3n con credenciales espec\xEDficas\r\n    \r\n    return NextResponse.json({\r\n      message: 'Diagn\xF3stico POST completado',\r\n      module,\r\n      test_data: detailed ? test_data : 'hidden',\r\n      timestamp: new Date().toISOString()\r\n    });\r\n    \r\n  } catch (error: any) {\r\n    console.error('\u274C Unified Debug POST error:', error);\r\n    return NextResponse.json(\r\n      { \r\n        error: 'Error en diagn\xF3stico POST',\r\n        details: error.message\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "POST", "runtime", "supabaseUrl", "process", "env", "NEXT_PUBLIC_SUPABASE_URL", "supabaseServiceKey", "SUPABASE_SERVICE_ROLE_KEY", "supabaseAdmin", "createClient", "auth", "autoRefreshToken", "persistSession", "DebugRequestSchema", "z", "object", "module", "enum", "default", "user_id", "string", "optional", "detailed", "boolean", "include_sensitive", "debugAuth", "request", "results", "timestamp", "Date", "toISOString", "status", "authResult", "getAuthenticatedUser", "directAuthResult", "directAuthError", "error", "message", "deprecatedHeaders", "getAuthFromHeaders", "cookies", "sessionCookie", "get", "clerkSessionCookie", "authData", "migrated_method", "userId", "sessionId", "isAdmin", "direct_method", "deprecated_headers", "hasSession", "hasClerkSession", "sessionValue", "value", "clerkValue", "data", "debugClerk", "sessionClaims", "possibleRoles", "publicMetadata", "role", "metadata", "public_metadata", "user_metadata", "clerkData", "hasSessionClaims", "sessionClaimsKeys", "Object", "keys", "possibleRoleLocations", "detectedRole", "values", "find", "fullStructure", "debugAdmin", "diagnostics", "environment", "nodeEnv", "NODE_ENV", "hasSupabaseUrl", "hasSupabaseServiceKey", "hasClerkSecretKey", "CLERK_SECRET_KEY", "hasClerkPublishableKey", "NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY", "supabase", "connection", "productsTable", "categoriesTable", "products", "productsError", "from", "select", "limit", "categories", "categoriesError", "hasAllEnvVars", "debugProducts", "productData", "permissions", "simple", "enterprise", "secure", "queries", "direct", "withAuth", "comparison", "simpleResult", "checkCRUDPermissions", "success", "enterpriseResult", "requireAdminAuth", "secureResult", "checkPermission", "allowed", "directProducts", "directError", "length", "successCount", "filter", "p", "debugAll", "summary", "total_modules", "success_count", "partial_count", "failed_count", "clerkResult", "adminResult", "productsResult", "Promise", "all", "undefined", "allResults", "clerk", "admin", "forEach", "result", "url", "URL", "rawParams", "fromEntries", "searchParams", "entries", "params", "parse", "console", "log", "sanitized", "JSON", "stringify", "NextResponse", "json", "meta", "api_version", "unified", "parameters", "details", "body", "test_data"],
      mappings: "AAAA,qCAAqC;;;;;;;;;;;;QA2YfA;eAAAA;;QA4EAC;eAAAA;;QAtdTC;eAAAA;;;wBAO6B;qBACxB;wBACG;4BACQ;2BAC4B;qCAExB;mCACD;AAdzB,MAAMA,UAAU;AAgBvB,4BAA4B;AAC5B,MAAMC,cAAcC,QAAQC,GAAG,CAACC,wBAAwB;AACxD,MAAMC,qBAAqBH,QAAQC,GAAG,CAACG,yBAAyB;AAEhE,MAAMC,gBAAgBC,IAAAA,wBAAY,EAACP,aAAaI,oBAAoB;IAClEI,MAAM;QACJC,kBAAkB;QAClBC,gBAAgB;IAClB;AACF;AAEA,kCAAkC;AAClC,MAAMC,qBAAqBC,MAAC,CAACC,MAAM,CAAC;IAClCC,QAAQF,MAAC,CAACG,IAAI,CAAC;QACb;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,MAAiB,uBAAuB;KACzC,EAAEC,OAAO,CAAC;IACXC,SAASL,MAAC,CAACM,MAAM,GAAGC,QAAQ;IAC5BC,UAAUR,MAAC,CAACS,OAAO,GAAGL,OAAO,CAAC;IAC9BM,mBAAmBV,MAAC,CAACS,OAAO,GAAGL,OAAO,CAAC;AACzC;AAEA;;CAEC,GACD,eAAeO,UAAUC,OAAoB,EAAEJ,WAAoB,KAAK;IACtE,MAAMK,UAAU;QACdC,WAAW,IAAIC,OAAOC,WAAW;QACjCd,QAAQ;QACRe,QAAQ;IACV;IAEA,IAAI;QACF,2CAA2C;QAC3C,MAAMC,aAAa,MAAMC,IAAAA,+BAAoB,EAACP;QAE9C,2BAA2B;QAC3B,IAAIQ;QACJ,IAAI;YACFA,mBAAmB,MAAMxB,IAAAA,YAAI;QAC/B,EAAE,OAAOyB,iBAAsB;YAC7BD,mBAAmB;gBAAEE,OAAOD,gBAAgBE,OAAO;YAAC;QACtD;QAEA,gCAAgC;QAChC,MAAMC,oBAAoB,MAAMC,IAAAA,6BAAkB,EAACb;QAEnD,wBAAwB;QACxB,MAAMc,UAAUd,QAAQc,OAAO;QAC/B,MAAMC,gBAAgBD,QAAQE,GAAG,CAAC;QAClC,MAAMC,qBAAqBH,QAAQE,GAAG,CAAC;QAEvC,MAAME,WAAW;YACfC,iBAAiB;gBACfC,QAAQd,WAAWc,MAAM;gBACzBC,WAAWf,WAAWe,SAAS;gBAC/BC,SAAShB,WAAWgB,OAAO;gBAC3BZ,OAAOJ,WAAWI,KAAK;YACzB;YACAa,eAAe;gBACbH,QAAQZ,kBAAkBY;gBAC1BC,WAAWb,kBAAkBa;gBAC7BX,OAAOF,kBAAkBE;YAC3B;YACAc,oBAAoB5B,WAAW;gBAC7BwB,QAAQR,kBAAkBQ,MAAM;gBAChCC,WAAWT,kBAAkBS,SAAS;gBACtCX,OAAOE,kBAAkBF,KAAK;YAChC,IAAI;gBAAEL,QAAQ;YAAS;YACvBS,SAAS;gBACPW,YAAY,CAAC,CAACV;gBACdW,iBAAiB,CAAC,CAACT;gBACnBU,cAAc/B,WAAWmB,eAAea,QAAQ;gBAChDC,YAAYjC,WAAWqB,oBAAoBW,QAAQ;YACrD;QACF;QAEA,4BAA4B;QAC5B,IAAItB,WAAWc,MAAM,IAAIZ,kBAAkBY,QAAQ;YACjDnB,QAAQI,MAAM,GAAG;QACnB,OAAO,IAAIC,WAAWc,MAAM,IAAIZ,kBAAkBY,QAAQ;YACxDnB,QAAQI,MAAM,GAAG;QACnB,OAAO;YACLJ,QAAQI,MAAM,GAAG;QACnB;QAEA,OAAO;YAAE,GAAGJ,OAAO;YAAE6B,MAAMZ;QAAS;IAEtC,EAAE,OAAOR,OAAY;QACnB,OAAO;YACL,GAAGT,OAAO;YACVI,QAAQ;YACRK,OAAOA,MAAMC,OAAO;YACpBmB,MAAM;QACR;IACF;AACF;AAEA;;CAEC,GACD,eAAeC,WAAWnC,WAAoB,KAAK;IACjD,MAAMK,UAAU;QACdC,WAAW,IAAIC,OAAOC,WAAW;QACjCd,QAAQ;QACRe,QAAQ;IACV;IAEA,IAAI;QACF,MAAM,EAAEe,MAAM,EAAEY,aAAa,EAAE,GAAGhD,IAAAA,YAAI;QAEtC,mDAAmD;QACnD,MAAMiD,gBAAgB;YACpB,qCAAqCD,eAAeE,gBAAgBC;YACpE,+BAA+BH,eAAeI,UAAUD;YACxD,sBAAsBH,eAAeG;YACrC,sCAAsCH,eAAeK,iBAAiBF;YACtE,oCAAoCH,eAAeM,eAAeH;QACpE;QAEA,MAAMI,YAAY;YAChBnB;YACAoB,kBAAkB,CAAC,CAACR;YACpBS,mBAAmBT,gBAAgBU,OAAOC,IAAI,CAACX,iBAAiB,EAAE;YAClEE,gBAAgBF,eAAeE;YAC/BE,UAAUxC,WAAWoC,eAAeI,WAAW;gBAAE/B,QAAQ;YAAS;YAClEuC,uBAAuBX;YACvBY,cAAcH,OAAOI,MAAM,CAACb,eAAec,IAAI,CAACZ,CAAAA,OAAQA,SAAS,YAAY;YAC7Ea,eAAepD,WAAWoC,gBAAgB;gBAAE3B,QAAQ;YAAS;QAC/D;QAEAJ,QAAQI,MAAM,GAAGe,SAAS,YAAY;QACtC,OAAO;YAAE,GAAGnB,OAAO;YAAE6B,MAAMS;QAAU;IAEvC,EAAE,OAAO7B,OAAY;QACnB,OAAO;YACL,GAAGT,OAAO;YACVI,QAAQ;YACRK,OAAOA,MAAMC,OAAO;YACpBmB,MAAM;QACR;IACF;AACF;AAEA;;CAEC,GACD,eAAemB,WAAWrD,WAAoB,KAAK;IACjD,MAAMK,UAAU;QACdC,WAAW,IAAIC,OAAOC,WAAW;QACjCd,QAAQ;QACRe,QAAQ;IACV;IAEA,IAAI;QACF,MAAM6C,cAAc;YAClBC,aAAa;gBACXC,SAAS3E,QAAQC,GAAG,CAAC2E,QAAQ;gBAC7BC,gBAAgB,CAAC,CAAC7E,QAAQC,GAAG,CAACC,wBAAwB;gBACtD4E,uBAAuB,CAAC,CAAC9E,QAAQC,GAAG,CAACG,yBAAyB;gBAC9D2E,mBAAmB,CAAC,CAAC/E,QAAQC,GAAG,CAAC+E,gBAAgB;gBACjDC,wBAAwB,CAAC,CAACjF,QAAQC,GAAG,CAACiF,iCAAiC;YACzE;YACAC,UAAU;gBACRC,YAAY;gBACZC,eAAe;gBACfC,iBAAiB;gBACjBrD,OAAO;YACT;QACF;QAEA,2BAA2B;QAC3B,IAAI,CAAClC,eAAe,CAACI,oBAAoB;YACvCsE,YAAYU,QAAQ,CAACC,UAAU,GAAG;YAClCX,YAAYU,QAAQ,CAAClD,KAAK,GAAG;QAC/B,OAAO;YACL,sBAAsB;YACtB,MAAM,EAAEoB,MAAMkC,QAAQ,EAAEtD,OAAOuD,aAAa,EAAE,GAAG,MAAMnF,cACpDoF,IAAI,CAAC,YACLC,MAAM,CAAC,MACPC,KAAK,CAAC;YAET,IAAIH,eAAe;gBACjBf,YAAYU,QAAQ,CAACE,aAAa,GAAG;gBACrCZ,YAAYU,QAAQ,CAAClD,KAAK,GAAGuD,cAActD,OAAO;YACpD,OAAO;gBACLuC,YAAYU,QAAQ,CAACE,aAAa,GAAG;gBACrCZ,YAAYU,QAAQ,CAACC,UAAU,GAAG;YACpC;YAEA,wBAAwB;YACxB,MAAM,EAAE/B,MAAMuC,UAAU,EAAE3D,OAAO4D,eAAe,EAAE,GAAG,MAAMxF,cACxDoF,IAAI,CAAC,cACLC,MAAM,CAAC,MACPC,KAAK,CAAC;YAETlB,YAAYU,QAAQ,CAACG,eAAe,GAAGO,kBAAkB,UAAU;QACrE;QAEA,4BAA4B;QAC5B,MAAMC,gBAAgBrB,YAAYC,WAAW,CAACG,cAAc,IACvCJ,YAAYC,WAAW,CAACI,qBAAqB,IAC7CL,YAAYC,WAAW,CAACK,iBAAiB;QAE9D,IAAIe,iBAAiBrB,YAAYU,QAAQ,CAACC,UAAU,KAAK,WAAW;YAClE5D,QAAQI,MAAM,GAAG;QACnB,OAAO,IAAIkE,iBAAiBrB,YAAYU,QAAQ,CAACC,UAAU,KAAK,WAAW;YACzE5D,QAAQI,MAAM,GAAG;QACnB,OAAO;YACLJ,QAAQI,MAAM,GAAG;QACnB;QAEA,OAAO;YAAE,GAAGJ,OAAO;YAAE6B,MAAMoB;QAAY;IAEzC,EAAE,OAAOxC,OAAY;QACnB,OAAO;YACL,GAAGT,OAAO;YACVI,QAAQ;YACRK,OAAOA,MAAMC,OAAO;YACpBmB,MAAM;QACR;IACF;AACF;AAEA;;CAEC,GACD,eAAe0C,cAAcxE,OAAoB,EAAEoB,MAAe,EAAExB,WAAoB,KAAK;IAC3F,MAAMK,UAAU;QACdC,WAAW,IAAIC,OAAOC,WAAW;QACjCd,QAAQ;QACRe,QAAQ;IACV;IAEA,IAAI;QACF,MAAMoE,cAAc;YAClBC,aAAa;gBACXC,QAAQ;gBACRC,YAAY;gBACZC,QAAQ;YACV;YACAC,SAAS;gBACPC,QAAQ;gBACRC,UAAU;YACZ;YACAC,YAAY;QACd;QAEA,6BAA6B;QAC7B,IAAI;YACF,MAAMC,eAAe,MAAMC,IAAAA,+BAAoB,EAAC,QAAQ;YACxDV,YAAYC,WAAW,CAACC,MAAM,GAAGO,aAAaE,OAAO,GAAG,YAAY;QACtE,EAAE,OAAO1E,OAAY;YACnB+D,YAAYC,WAAW,CAACC,MAAM,GAAG,CAAC,OAAO,EAAEjE,MAAMC,OAAO,EAAE;QAC5D;QAEA,iCAAiC;QACjC,IAAI;YACF,MAAM0E,mBAAmB,MAAMC,IAAAA,qCAAgB,EAACtF,SAAS;gBAAC;aAAgB;YAC1EyE,YAAYC,WAAW,CAACE,UAAU,GAAGS,iBAAiBD,OAAO,GAAG,YAAY;QAC9E,EAAE,OAAO1E,OAAY;YACnB+D,YAAYC,WAAW,CAACE,UAAU,GAAG,CAAC,OAAO,EAAElE,MAAMC,OAAO,EAAE;QAChE;QAEA,6BAA6B;QAC7B,IAAI;YACF,MAAM4E,eAAe,MAAMC,IAAAA,kCAAe,EAACxF,SAAS,YAAY;YAChEyE,YAAYC,WAAW,CAACG,MAAM,GAAGU,aAAaE,OAAO,GAAG,YAAY;QACtE,EAAE,OAAO/E,OAAY;YACnB+D,YAAYC,WAAW,CAACG,MAAM,GAAG,CAAC,OAAO,EAAEnE,MAAMC,OAAO,EAAE;QAC5D;QAEA,uBAAuB;QACvB,IAAI;YACF,MAAM,EAAEmB,MAAM4D,cAAc,EAAEhF,OAAOiF,WAAW,EAAE,GAAG,MAAM7G,cACxDoF,IAAI,CAAC,YACLC,MAAM,CAAC,mBACPC,KAAK,CAAC;YAETK,YAAYK,OAAO,CAACC,MAAM,GAAGY,cAAc,CAAC,OAAO,EAAEA,YAAYhF,OAAO,EAAE,GAAG,CAAC,SAAS,EAAE+E,gBAAgBE,OAAO,SAAS,CAAC;QAC5H,EAAE,OAAOlF,OAAY;YACnB+D,YAAYK,OAAO,CAACC,MAAM,GAAG,CAAC,OAAO,EAAErE,MAAMC,OAAO,EAAE;QACxD;QAEA,4BAA4B;QAC5B,MAAMkF,eAAenD,OAAOI,MAAM,CAAC2B,YAAYC,WAAW,EAAEoB,MAAM,CAACC,CAAAA,IAAKA,MAAM,WAAWH,MAAM;QAC/F,IAAIC,gBAAgB,GAAG;YACrB5F,QAAQI,MAAM,GAAG;QACnB,OAAO,IAAIwF,gBAAgB,GAAG;YAC5B5F,QAAQI,MAAM,GAAG;QACnB,OAAO;YACLJ,QAAQI,MAAM,GAAG;QACnB;QAEA,OAAO;YAAE,GAAGJ,OAAO;YAAE6B,MAAM2C;QAAY;IAEzC,EAAE,OAAO/D,OAAY;QACnB,OAAO;YACL,GAAGT,OAAO;YACVI,QAAQ;YACRK,OAAOA,MAAMC,OAAO;YACpBmB,MAAM;QACR;IACF;AACF;AAEA;;CAEC,GACD,eAAekE,SAAShG,OAAoB,EAAEJ,WAAoB,KAAK;IACrE,MAAMK,UAAU;QACdC,WAAW,IAAIC,OAAOC,WAAW;QACjCd,QAAQ;QACRe,QAAQ;QACR4F,SAAS;YACPC,eAAe;YACfC,eAAe;YACfC,eAAe;YACfC,cAAc;QAChB;IACF;IAEA,IAAI;QACF,kCAAkC;QAClC,MAAM,CAAC/F,YAAYgG,aAAaC,aAAaC,eAAe,GAAG,MAAMC,QAAQC,GAAG,CAAC;YAC/E3G,UAAUC,SAASJ;YACnBmC,WAAWnC;YACXqD,WAAWrD;YACX4E,cAAcxE,SAAS2G,WAAW/G;SACnC;QAED,MAAMgH,aAAa;YACjB5H,MAAMsB;YACNuG,OAAOP;YACPQ,OAAOP;YACPvC,UAAUwC;QACZ;QAEA,mBAAmB;QACnB9D,OAAOI,MAAM,CAAC8D,YAAYG,OAAO,CAACC,CAAAA;YAChC,IAAIA,OAAO3G,MAAM,KAAK,WAAW;gBAACJ,QAAQgG,OAAO,CAACE,aAAa;YAAG,OAC7D,IAAIa,OAAO3G,MAAM,KAAK,WAAW;gBAACJ,QAAQgG,OAAO,CAACG,aAAa;YAAG,OAClE;gBAACnG,QAAQgG,OAAO,CAACI,YAAY;YAAG;QACvC;QAEA,4BAA4B;QAC5B,IAAIpG,QAAQgG,OAAO,CAACE,aAAa,IAAI,GAAG;YACtClG,QAAQI,MAAM,GAAG;QACnB,OAAO,IAAIJ,QAAQgG,OAAO,CAACE,aAAa,GAAGlG,QAAQgG,OAAO,CAACG,aAAa,IAAI,GAAG;YAC7EnG,QAAQI,MAAM,GAAG;QACnB,OAAO;YACLJ,QAAQI,MAAM,GAAG;QACnB;QAEA,OAAO;YAAE,GAAGJ,OAAO;YAAE6B,MAAM8E;QAAW;IAExC,EAAE,OAAOlG,OAAY;QACnB,OAAO;YACL,GAAGT,OAAO;YACVI,QAAQ;YACRK,OAAOA,MAAMC,OAAO;YACpBmB,MAAM;QACR;IACF;AACF;AAMO,eAAezD,IAAI2B,OAAoB;IAC5C,IAAI;QACF,MAAMiH,MAAM,IAAIC,IAAIlH,QAAQiH,GAAG;QAC/B,MAAME,YAAYzE,OAAO0E,WAAW,CAACH,IAAII,YAAY,CAACC,OAAO;QAE7D,qBAAqB;QACrB,MAAMC,SAASpI,mBAAmBqI,KAAK,CAACL;QACxC,MAAM,EAAE7H,MAAM,EAAEG,OAAO,EAAEG,QAAQ,EAAEE,iBAAiB,EAAE,GAAGyH;QAEzDE,QAAQC,GAAG,CAAC,CAAC,6BAA6B,EAAEpI,OAAO,YAAY,EAAEM,UAAU;QAE3E,IAAIoH;QAEJ,kDAAkD;QAClD,OAAQ1H;YACN,KAAK;gBACH0H,SAAS,MAAMjH,UAAUC,SAASJ;gBAClC;YACF,KAAK;gBACHoH,SAAS,MAAMjF,WAAWnC;gBAC1B;YACF,KAAK;gBACHoH,SAAS,MAAM/D,WAAWrD;gBAC1B;YACF,KAAK;gBACHoH,SAAS,MAAMxC,cAAcxE,SAASP,SAASG;gBAC/C;YACF,KAAK;YACL;gBACEoH,SAAS,MAAMhB,SAAShG,SAASJ;gBACjC;QACJ;QAEA,qDAAqD;QACrD,IAAI,CAACE,qBAAqBkH,OAAOlF,IAAI,EAAE;YACrC,+CAA+C;YAC/C,IAAI,OAAOkF,OAAOlF,IAAI,KAAK,UAAU;gBACnC,MAAM6F,YAAYC,KAAKJ,KAAK,CAACI,KAAKC,SAAS,CAACb,OAAOlF,IAAI;gBACvD,kDAAkD;gBAClDkF,OAAOlF,IAAI,GAAG6F;YAChB;QACF;QAEAF,QAAQC,GAAG,CAAC,CAAC,wBAAwB,EAAEpI,OAAO,uBAAuB,EAAE0H,OAAO3G,MAAM,EAAE;QAEtF,OAAOyH,oBAAY,CAACC,IAAI,CAAC;YACvB,GAAGf,MAAM;YACTgB,MAAM;gBACJC,aAAa;gBACbC,SAAS;gBACTC,YAAY;oBACV7I;oBACAM;oBACAE;gBACF;YACF;QACF;IAEF,EAAE,OAAOY,OAAY;QACnB+G,QAAQ/G,KAAK,CAAC,8BAA8BA;QAC5C,OAAOoH,oBAAY,CAACC,IAAI,CACtB;YACErH,OAAO;YACP0H,SAAS1H,MAAMC,OAAO;YACtBrB,QAAQ;YACRe,QAAQ;QACV,GACA;YAAEA,QAAQ;QAAI;IAElB;AACF;AAMO,eAAe/B,KAAK0B,OAAoB;IAC7C,IAAI;QACF,MAAMqI,OAAO,MAAMrI,QAAQ+H,IAAI;QAC/B,MAAM,EAAEzI,MAAM,EAAEG,OAAO,EAAE6I,SAAS,EAAE1I,WAAW,KAAK,EAAE,GAAGyI;QAEzDZ,QAAQC,GAAG,CAAC,CAAC,8BAA8B,EAAEpI,OAAO,eAAe,CAAC;QAEpE,iFAAiF;QACjF,iEAAiE;QAEjE,OAAOwI,oBAAY,CAACC,IAAI,CAAC;YACvBpH,SAAS;YACTrB;YACAgJ,WAAW1I,WAAW0I,YAAY;YAClCpI,WAAW,IAAIC,OAAOC,WAAW;QACnC;IAEF,EAAE,OAAOM,OAAY;QACnB+G,QAAQ/G,KAAK,CAAC,+BAA+BA;QAC7C,OAAOoH,oBAAY,CAACC,IAAI,CACtB;YACErH,OAAO;YACP0H,SAAS1H,MAAMC,OAAO;QACxB,GACA;YAAEN,QAAQ;QAAI;IAElB;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "19eca5012d14c47300090656559498e595948980"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1160av427q = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1160av427q();
cov_1160av427q().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1160av427q().f[0]++;
  cov_1160av427q().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1160av427q().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1160av427q().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_1160av427q().f[1]++;
    cov_1160av427q().s[4]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_1160av427q().f[2]++;
    cov_1160av427q().s[5]++;
    return POST;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_1160av427q().f[3]++;
    cov_1160av427q().s[6]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_1160av427q().s[7]++, require("next/server"));
const _zod =
/* istanbul ignore next */
(cov_1160av427q().s[8]++, require("zod"));
const _config =
/* istanbul ignore next */
(cov_1160av427q().s[9]++, require("../../../../lib/auth/config"));
const _supabasejs =
/* istanbul ignore next */
(cov_1160av427q().s[10]++, require("@supabase/supabase-js"));
const _adminauth =
/* istanbul ignore next */
(cov_1160av427q().s[11]++, require("../../../../lib/auth/admin-auth"));
const _enterpriseauthutils =
/* istanbul ignore next */
(cov_1160av427q().s[12]++, require("../../../../lib/auth/enterprise-auth-utils"));
const _supabaseauthutils =
/* istanbul ignore next */
(cov_1160av427q().s[13]++, require("../../../../lib/auth/supabase-auth-utils"));
const runtime =
/* istanbul ignore next */
(cov_1160av427q().s[14]++, 'nodejs');
// ConfiguraciÃ³n de Supabase
const supabaseUrl =
/* istanbul ignore next */
(cov_1160av427q().s[15]++, process.env.NEXT_PUBLIC_SUPABASE_URL);
const supabaseServiceKey =
/* istanbul ignore next */
(cov_1160av427q().s[16]++, process.env.SUPABASE_SERVICE_ROLE_KEY);
const supabaseAdmin =
/* istanbul ignore next */
(cov_1160av427q().s[17]++, (0, _supabasejs.createClient)(supabaseUrl, supabaseServiceKey, {
  auth: {
    autoRefreshToken: false,
    persistSession: false
  }
}));
// Schema de validaciÃ³n para debug
const DebugRequestSchema =
/* istanbul ignore next */
(cov_1160av427q().s[18]++, _zod.z.object({
  module: _zod.z.enum(['auth', 'clerk', 'admin', 'products', 'user-profile', 'user-status', 'permissions', 'supabase', 'environment', 'all' // DiagnÃ³stico completo
  ]).default('all'),
  user_id: _zod.z.string().optional(),
  detailed: _zod.z.boolean().default(false),
  include_sensitive: _zod.z.boolean().default(false)
}));
/**
 * DiagnÃ³stico de autenticaciÃ³n unificado
 */
async function debugAuth(request, detailed =
/* istanbul ignore next */
(cov_1160av427q().b[0][0]++, false)) {
  /* istanbul ignore next */
  cov_1160av427q().f[4]++;
  const results =
  /* istanbul ignore next */
  (cov_1160av427q().s[19]++, {
    timestamp: new Date().toISOString(),
    module: 'auth',
    status: 'unknown'
  });
  /* istanbul ignore next */
  cov_1160av427q().s[20]++;
  try {
    // MÃ©todo 1: getAuthenticatedUser (migrado)
    const authResult =
    /* istanbul ignore next */
    (cov_1160av427q().s[21]++, await (0, _adminauth.getAuthenticatedUser)(request));
    // MÃ©todo 2: auth() directo
    let directAuthResult;
    /* istanbul ignore next */
    cov_1160av427q().s[22]++;
    try {
      /* istanbul ignore next */
      cov_1160av427q().s[23]++;
      directAuthResult = await (0, _config.auth)();
    } catch (directAuthError) {
      /* istanbul ignore next */
      cov_1160av427q().s[24]++;
      directAuthResult = {
        error: directAuthError.message
      };
    }
    // MÃ©todo 3: Headers (deprecado)
    const deprecatedHeaders =
    /* istanbul ignore next */
    (cov_1160av427q().s[25]++, await (0, _adminauth.getAuthFromHeaders)(request));
    // Cookies para anÃ¡lisis
    const cookies =
    /* istanbul ignore next */
    (cov_1160av427q().s[26]++, request.cookies);
    const sessionCookie =
    /* istanbul ignore next */
    (cov_1160av427q().s[27]++, cookies.get('__session'));
    const clerkSessionCookie =
    /* istanbul ignore next */
    (cov_1160av427q().s[28]++, cookies.get('__clerk_session'));
    const authData =
    /* istanbul ignore next */
    (cov_1160av427q().s[29]++, {
      migrated_method: {
        userId: authResult.userId,
        sessionId: authResult.sessionId,
        isAdmin: authResult.isAdmin,
        error: authResult.error
      },
      direct_method: {
        userId: directAuthResult?.userId,
        sessionId: directAuthResult?.sessionId,
        error: directAuthResult?.error
      },
      deprecated_headers: detailed ?
      /* istanbul ignore next */
      (cov_1160av427q().b[1][0]++, {
        userId: deprecatedHeaders.userId,
        sessionId: deprecatedHeaders.sessionId,
        error: deprecatedHeaders.error
      }) :
      /* istanbul ignore next */
      (cov_1160av427q().b[1][1]++, {
        status: 'hidden'
      }),
      cookies: {
        hasSession: !!sessionCookie,
        hasClerkSession: !!clerkSessionCookie,
        sessionValue: detailed ?
        /* istanbul ignore next */
        (cov_1160av427q().b[2][0]++, sessionCookie?.value) :
        /* istanbul ignore next */
        (cov_1160av427q().b[2][1]++, 'hidden'),
        clerkValue: detailed ?
        /* istanbul ignore next */
        (cov_1160av427q().b[3][0]++, clerkSessionCookie?.value) :
        /* istanbul ignore next */
        (cov_1160av427q().b[3][1]++, 'hidden')
      }
    });
    // Determinar estado general
    /* istanbul ignore next */
    cov_1160av427q().s[30]++;
    if (
    /* istanbul ignore next */
    (cov_1160av427q().b[5][0]++, authResult.userId) &&
    /* istanbul ignore next */
    (cov_1160av427q().b[5][1]++, directAuthResult?.userId)) {
      /* istanbul ignore next */
      cov_1160av427q().b[4][0]++;
      cov_1160av427q().s[31]++;
      results.status = 'success';
    } else {
      /* istanbul ignore next */
      cov_1160av427q().b[4][1]++;
      cov_1160av427q().s[32]++;
      if (
      /* istanbul ignore next */
      (cov_1160av427q().b[7][0]++, authResult.userId) ||
      /* istanbul ignore next */
      (cov_1160av427q().b[7][1]++, directAuthResult?.userId)) {
        /* istanbul ignore next */
        cov_1160av427q().b[6][0]++;
        cov_1160av427q().s[33]++;
        results.status = 'partial';
      } else {
        /* istanbul ignore next */
        cov_1160av427q().b[6][1]++;
        cov_1160av427q().s[34]++;
        results.status = 'failed';
      }
    }
    /* istanbul ignore next */
    cov_1160av427q().s[35]++;
    return {
      ...results,
      data: authData
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1160av427q().s[36]++;
    return {
      ...results,
      status: 'failed',
      error: error.message,
      data: null
    };
  }
}
/**
 * DiagnÃ³stico especÃ­fico de Clerk
 */
async function debugClerk(detailed =
/* istanbul ignore next */
(cov_1160av427q().b[8][0]++, false)) {
  /* istanbul ignore next */
  cov_1160av427q().f[5]++;
  const results =
  /* istanbul ignore next */
  (cov_1160av427q().s[37]++, {
    timestamp: new Date().toISOString(),
    module: 'clerk',
    status: 'unknown'
  });
  /* istanbul ignore next */
  cov_1160av427q().s[38]++;
  try {
    const {
      userId,
      sessionClaims
    } =
    /* istanbul ignore next */
    (cov_1160av427q().s[39]++, (0, _config.auth)());
    // Verificar todas las posibles ubicaciones del rol
    const possibleRoles =
    /* istanbul ignore next */
    (cov_1160av427q().s[40]++, {
      'sessionClaims.publicMetadata.role': sessionClaims?.publicMetadata?.role,
      'sessionClaims.metadata.role': sessionClaims?.metadata?.role,
      'sessionClaims.role': sessionClaims?.role,
      'sessionClaims.public_metadata.role': sessionClaims?.public_metadata?.role,
      'sessionClaims.user_metadata.role': sessionClaims?.user_metadata?.role
    });
    const clerkData =
    /* istanbul ignore next */
    (cov_1160av427q().s[41]++, {
      userId,
      hasSessionClaims: !!sessionClaims,
      sessionClaimsKeys: sessionClaims ?
      /* istanbul ignore next */
      (cov_1160av427q().b[9][0]++, Object.keys(sessionClaims)) :
      /* istanbul ignore next */
      (cov_1160av427q().b[9][1]++, []),
      publicMetadata: sessionClaims?.publicMetadata,
      metadata: detailed ?
      /* istanbul ignore next */
      (cov_1160av427q().b[10][0]++, sessionClaims?.metadata) :
      /* istanbul ignore next */
      (cov_1160av427q().b[10][1]++, {
        status: 'hidden'
      }),
      possibleRoleLocations: possibleRoles,
      detectedRole:
      /* istanbul ignore next */
      (cov_1160av427q().b[11][0]++, Object.values(possibleRoles).find(role => {
        /* istanbul ignore next */
        cov_1160av427q().f[6]++;
        cov_1160av427q().s[42]++;
        return role === 'admin';
      })) ||
      /* istanbul ignore next */
      (cov_1160av427q().b[11][1]++, 'none'),
      fullStructure: detailed ?
      /* istanbul ignore next */
      (cov_1160av427q().b[12][0]++, sessionClaims) :
      /* istanbul ignore next */
      (cov_1160av427q().b[12][1]++, {
        status: 'hidden'
      })
    });
    /* istanbul ignore next */
    cov_1160av427q().s[43]++;
    results.status = userId ?
    /* istanbul ignore next */
    (cov_1160av427q().b[13][0]++, 'success') :
    /* istanbul ignore next */
    (cov_1160av427q().b[13][1]++, 'failed');
    /* istanbul ignore next */
    cov_1160av427q().s[44]++;
    return {
      ...results,
      data: clerkData
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1160av427q().s[45]++;
    return {
      ...results,
      status: 'failed',
      error: error.message,
      data: null
    };
  }
}
/**
 * DiagnÃ³stico del panel administrativo
 */
async function debugAdmin(detailed =
/* istanbul ignore next */
(cov_1160av427q().b[14][0]++, false)) {
  /* istanbul ignore next */
  cov_1160av427q().f[7]++;
  const results =
  /* istanbul ignore next */
  (cov_1160av427q().s[46]++, {
    timestamp: new Date().toISOString(),
    module: 'admin',
    status: 'unknown'
  });
  /* istanbul ignore next */
  cov_1160av427q().s[47]++;
  try {
    const diagnostics =
    /* istanbul ignore next */
    (cov_1160av427q().s[48]++, {
      environment: {
        nodeEnv: process.env.NODE_ENV,
        hasSupabaseUrl: !!process.env.NEXT_PUBLIC_SUPABASE_URL,
        hasSupabaseServiceKey: !!process.env.SUPABASE_SERVICE_ROLE_KEY,
        hasClerkSecretKey: !!process.env.CLERK_SECRET_KEY,
        hasClerkPublishableKey: !!process.env.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY
      },
      supabase: {
        connection: 'unknown',
        productsTable: 'unknown',
        categoriesTable: 'unknown',
        error: null
      }
    });
    // Test Supabase connection
    /* istanbul ignore next */
    cov_1160av427q().s[49]++;
    if (
    /* istanbul ignore next */
    (cov_1160av427q().b[16][0]++, !supabaseUrl) ||
    /* istanbul ignore next */
    (cov_1160av427q().b[16][1]++, !supabaseServiceKey)) {
      /* istanbul ignore next */
      cov_1160av427q().b[15][0]++;
      cov_1160av427q().s[50]++;
      diagnostics.supabase.connection = 'missing_credentials';
      /* istanbul ignore next */
      cov_1160av427q().s[51]++;
      diagnostics.supabase.error = 'Missing SUPABASE_URL or SUPABASE_SERVICE_ROLE_KEY';
    } else {
      /* istanbul ignore next */
      cov_1160av427q().b[15][1]++;
      // Test products table
      const {
        data: products,
        error: productsError
      } =
      /* istanbul ignore next */
      (cov_1160av427q().s[52]++, await supabaseAdmin.from('products').select('id').limit(1));
      /* istanbul ignore next */
      cov_1160av427q().s[53]++;
      if (productsError) {
        /* istanbul ignore next */
        cov_1160av427q().b[17][0]++;
        cov_1160av427q().s[54]++;
        diagnostics.supabase.productsTable = 'error';
        /* istanbul ignore next */
        cov_1160av427q().s[55]++;
        diagnostics.supabase.error = productsError.message;
      } else {
        /* istanbul ignore next */
        cov_1160av427q().b[17][1]++;
        cov_1160av427q().s[56]++;
        diagnostics.supabase.productsTable = 'accessible';
        /* istanbul ignore next */
        cov_1160av427q().s[57]++;
        diagnostics.supabase.connection = 'success';
      }
      // Test categories table
      const {
        data: categories,
        error: categoriesError
      } =
      /* istanbul ignore next */
      (cov_1160av427q().s[58]++, await supabaseAdmin.from('categories').select('id').limit(1));
      /* istanbul ignore next */
      cov_1160av427q().s[59]++;
      diagnostics.supabase.categoriesTable = categoriesError ?
      /* istanbul ignore next */
      (cov_1160av427q().b[18][0]++, 'error') :
      /* istanbul ignore next */
      (cov_1160av427q().b[18][1]++, 'accessible');
    }
    // Determinar estado general
    const hasAllEnvVars =
    /* istanbul ignore next */
    (cov_1160av427q().s[60]++,
    /* istanbul ignore next */
    (cov_1160av427q().b[19][0]++, diagnostics.environment.hasSupabaseUrl) &&
    /* istanbul ignore next */
    (cov_1160av427q().b[19][1]++, diagnostics.environment.hasSupabaseServiceKey) &&
    /* istanbul ignore next */
    (cov_1160av427q().b[19][2]++, diagnostics.environment.hasClerkSecretKey));
    /* istanbul ignore next */
    cov_1160av427q().s[61]++;
    if (
    /* istanbul ignore next */
    (cov_1160av427q().b[21][0]++, hasAllEnvVars) &&
    /* istanbul ignore next */
    (cov_1160av427q().b[21][1]++, diagnostics.supabase.connection === 'success')) {
      /* istanbul ignore next */
      cov_1160av427q().b[20][0]++;
      cov_1160av427q().s[62]++;
      results.status = 'success';
    } else {
      /* istanbul ignore next */
      cov_1160av427q().b[20][1]++;
      cov_1160av427q().s[63]++;
      if (
      /* istanbul ignore next */
      (cov_1160av427q().b[23][0]++, hasAllEnvVars) ||
      /* istanbul ignore next */
      (cov_1160av427q().b[23][1]++, diagnostics.supabase.connection === 'success')) {
        /* istanbul ignore next */
        cov_1160av427q().b[22][0]++;
        cov_1160av427q().s[64]++;
        results.status = 'partial';
      } else {
        /* istanbul ignore next */
        cov_1160av427q().b[22][1]++;
        cov_1160av427q().s[65]++;
        results.status = 'failed';
      }
    }
    /* istanbul ignore next */
    cov_1160av427q().s[66]++;
    return {
      ...results,
      data: diagnostics
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1160av427q().s[67]++;
    return {
      ...results,
      status: 'failed',
      error: error.message,
      data: null
    };
  }
}
/**
 * DiagnÃ³stico de productos y permisos
 */
async function debugProducts(request, userId, detailed =
/* istanbul ignore next */
(cov_1160av427q().b[24][0]++, false)) {
  /* istanbul ignore next */
  cov_1160av427q().f[8]++;
  const results =
  /* istanbul ignore next */
  (cov_1160av427q().s[68]++, {
    timestamp: new Date().toISOString(),
    module: 'products',
    status: 'unknown'
  });
  /* istanbul ignore next */
  cov_1160av427q().s[69]++;
  try {
    const productData =
    /* istanbul ignore next */
    (cov_1160av427q().s[70]++, {
      permissions: {
        simple: 'unknown',
        enterprise: 'unknown',
        secure: 'unknown'
      },
      queries: {
        direct: 'unknown',
        withAuth: 'unknown'
      },
      comparison: null
    });
    // Test 1: Simple permissions
    /* istanbul ignore next */
    cov_1160av427q().s[71]++;
    try {
      const simpleResult =
      /* istanbul ignore next */
      (cov_1160av427q().s[72]++, await (0, _adminauth.checkCRUDPermissions)('read', 'products'));
      /* istanbul ignore next */
      cov_1160av427q().s[73]++;
      productData.permissions.simple = simpleResult.success ?
      /* istanbul ignore next */
      (cov_1160av427q().b[25][0]++, 'allowed') :
      /* istanbul ignore next */
      (cov_1160av427q().b[25][1]++, 'denied');
    } catch (error) {
      /* istanbul ignore next */
      cov_1160av427q().s[74]++;
      productData.permissions.simple = `error: ${error.message}`;
    }
    // Test 2: Enterprise permissions
    /* istanbul ignore next */
    cov_1160av427q().s[75]++;
    try {
      const enterpriseResult =
      /* istanbul ignore next */
      (cov_1160av427q().s[76]++, await (0, _enterpriseauthutils.requireAdminAuth)(request, ['products_read']));
      /* istanbul ignore next */
      cov_1160av427q().s[77]++;
      productData.permissions.enterprise = enterpriseResult.success ?
      /* istanbul ignore next */
      (cov_1160av427q().b[26][0]++, 'allowed') :
      /* istanbul ignore next */
      (cov_1160av427q().b[26][1]++, 'denied');
    } catch (error) {
      /* istanbul ignore next */
      cov_1160av427q().s[78]++;
      productData.permissions.enterprise = `error: ${error.message}`;
    }
    // Test 3: Secure permissions
    /* istanbul ignore next */
    cov_1160av427q().s[79]++;
    try {
      const secureResult =
      /* istanbul ignore next */
      (cov_1160av427q().s[80]++, await (0, _supabaseauthutils.checkPermission)(request, 'products', 'read'));
      /* istanbul ignore next */
      cov_1160av427q().s[81]++;
      productData.permissions.secure = secureResult.allowed ?
      /* istanbul ignore next */
      (cov_1160av427q().b[27][0]++, 'allowed') :
      /* istanbul ignore next */
      (cov_1160av427q().b[27][1]++, 'denied');
    } catch (error) {
      /* istanbul ignore next */
      cov_1160av427q().s[82]++;
      productData.permissions.secure = `error: ${error.message}`;
    }
    // Test 4: Direct query
    /* istanbul ignore next */
    cov_1160av427q().s[83]++;
    try {
      const {
        data: directProducts,
        error: directError
      } =
      /* istanbul ignore next */
      (cov_1160av427q().s[84]++, await supabaseAdmin.from('products').select('id, name, price').limit(3));
      /* istanbul ignore next */
      cov_1160av427q().s[85]++;
      productData.queries.direct = directError ?
      /* istanbul ignore next */
      (cov_1160av427q().b[28][0]++, `error: ${directError.message}`) :
      /* istanbul ignore next */
      (cov_1160av427q().b[28][1]++, `success: ${directProducts?.length} products`);
    } catch (error) {
      /* istanbul ignore next */
      cov_1160av427q().s[86]++;
      productData.queries.direct = `error: ${error.message}`;
    }
    // Determinar estado general
    const successCount =
    /* istanbul ignore next */
    (cov_1160av427q().s[87]++, Object.values(productData.permissions).filter(p => {
      /* istanbul ignore next */
      cov_1160av427q().f[9]++;
      cov_1160av427q().s[88]++;
      return p === 'allowed';
    }).length);
    /* istanbul ignore next */
    cov_1160av427q().s[89]++;
    if (successCount >= 2) {
      /* istanbul ignore next */
      cov_1160av427q().b[29][0]++;
      cov_1160av427q().s[90]++;
      results.status = 'success';
    } else {
      /* istanbul ignore next */
      cov_1160av427q().b[29][1]++;
      cov_1160av427q().s[91]++;
      if (successCount >= 1) {
        /* istanbul ignore next */
        cov_1160av427q().b[30][0]++;
        cov_1160av427q().s[92]++;
        results.status = 'partial';
      } else {
        /* istanbul ignore next */
        cov_1160av427q().b[30][1]++;
        cov_1160av427q().s[93]++;
        results.status = 'failed';
      }
    }
    /* istanbul ignore next */
    cov_1160av427q().s[94]++;
    return {
      ...results,
      data: productData
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1160av427q().s[95]++;
    return {
      ...results,
      status: 'failed',
      error: error.message,
      data: null
    };
  }
}
/**
 * DiagnÃ³stico completo del sistema
 */
async function debugAll(request, detailed =
/* istanbul ignore next */
(cov_1160av427q().b[31][0]++, false)) {
  /* istanbul ignore next */
  cov_1160av427q().f[10]++;
  const results =
  /* istanbul ignore next */
  (cov_1160av427q().s[96]++, {
    timestamp: new Date().toISOString(),
    module: 'all',
    status: 'unknown',
    summary: {
      total_modules: 4,
      success_count: 0,
      partial_count: 0,
      failed_count: 0
    }
  });
  /* istanbul ignore next */
  cov_1160av427q().s[97]++;
  try {
    // Ejecutar todos los diagnÃ³sticos
    const [authResult, clerkResult, adminResult, productsResult] =
    /* istanbul ignore next */
    (cov_1160av427q().s[98]++, await Promise.all([debugAuth(request, detailed), debugClerk(detailed), debugAdmin(detailed), debugProducts(request, undefined, detailed)]));
    const allResults =
    /* istanbul ignore next */
    (cov_1160av427q().s[99]++, {
      auth: authResult,
      clerk: clerkResult,
      admin: adminResult,
      products: productsResult
    });
    // Calcular resumen
    /* istanbul ignore next */
    cov_1160av427q().s[100]++;
    Object.values(allResults).forEach(result => {
      /* istanbul ignore next */
      cov_1160av427q().f[11]++;
      cov_1160av427q().s[101]++;
      if (result.status === 'success') {
        /* istanbul ignore next */
        cov_1160av427q().b[32][0]++;
        cov_1160av427q().s[102]++;
        results.summary.success_count++;
      } else {
        /* istanbul ignore next */
        cov_1160av427q().b[32][1]++;
        cov_1160av427q().s[103]++;
        if (result.status === 'partial') {
          /* istanbul ignore next */
          cov_1160av427q().b[33][0]++;
          cov_1160av427q().s[104]++;
          results.summary.partial_count++;
        } else {
          /* istanbul ignore next */
          cov_1160av427q().b[33][1]++;
          cov_1160av427q().s[105]++;
          results.summary.failed_count++;
        }
      }
    });
    // Determinar estado general
    /* istanbul ignore next */
    cov_1160av427q().s[106]++;
    if (results.summary.success_count >= 3) {
      /* istanbul ignore next */
      cov_1160av427q().b[34][0]++;
      cov_1160av427q().s[107]++;
      results.status = 'success';
    } else {
      /* istanbul ignore next */
      cov_1160av427q().b[34][1]++;
      cov_1160av427q().s[108]++;
      if (results.summary.success_count + results.summary.partial_count >= 2) {
        /* istanbul ignore next */
        cov_1160av427q().b[35][0]++;
        cov_1160av427q().s[109]++;
        results.status = 'partial';
      } else {
        /* istanbul ignore next */
        cov_1160av427q().b[35][1]++;
        cov_1160av427q().s[110]++;
        results.status = 'failed';
      }
    }
    /* istanbul ignore next */
    cov_1160av427q().s[111]++;
    return {
      ...results,
      data: allResults
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1160av427q().s[112]++;
    return {
      ...results,
      status: 'failed',
      error: error.message,
      data: null
    };
  }
}
async function GET(request) {
  /* istanbul ignore next */
  cov_1160av427q().f[12]++;
  cov_1160av427q().s[113]++;
  try {
    const url =
    /* istanbul ignore next */
    (cov_1160av427q().s[114]++, new URL(request.url));
    const rawParams =
    /* istanbul ignore next */
    (cov_1160av427q().s[115]++, Object.fromEntries(url.searchParams.entries()));
    // Validar parÃ¡metros
    const params =
    /* istanbul ignore next */
    (cov_1160av427q().s[116]++, DebugRequestSchema.parse(rawParams));
    const {
      module,
      user_id,
      detailed,
      include_sensitive
    } =
    /* istanbul ignore next */
    (cov_1160av427q().s[117]++, params);
    /* istanbul ignore next */
    cov_1160av427q().s[118]++;
    console.log(`ğ Unified Debug API: Module ${module}, Detailed: ${detailed}`);
    let result;
    // Ejecutar diagnÃ³stico segÃºn el mÃ³dulo solicitado
    /* istanbul ignore next */
    cov_1160av427q().s[119]++;
    switch (module) {
      case 'auth':
        /* istanbul ignore next */
        cov_1160av427q().b[36][0]++;
        cov_1160av427q().s[120]++;
        result = await debugAuth(request, detailed);
        /* istanbul ignore next */
        cov_1160av427q().s[121]++;
        break;
      case 'clerk':
        /* istanbul ignore next */
        cov_1160av427q().b[36][1]++;
        cov_1160av427q().s[122]++;
        result = await debugClerk(detailed);
        /* istanbul ignore next */
        cov_1160av427q().s[123]++;
        break;
      case 'admin':
        /* istanbul ignore next */
        cov_1160av427q().b[36][2]++;
        cov_1160av427q().s[124]++;
        result = await debugAdmin(detailed);
        /* istanbul ignore next */
        cov_1160av427q().s[125]++;
        break;
      case 'products':
        /* istanbul ignore next */
        cov_1160av427q().b[36][3]++;
        cov_1160av427q().s[126]++;
        result = await debugProducts(request, user_id, detailed);
        /* istanbul ignore next */
        cov_1160av427q().s[127]++;
        break;
      case 'all':
        /* istanbul ignore next */
        cov_1160av427q().b[36][4]++;
      default:
        /* istanbul ignore next */
        cov_1160av427q().b[36][5]++;
        cov_1160av427q().s[128]++;
        result = await debugAll(request, detailed);
        /* istanbul ignore next */
        cov_1160av427q().s[129]++;
        break;
    }
    // Filtrar informaciÃ³n sensible si no estÃ¡ autorizada
    /* istanbul ignore next */
    cov_1160av427q().s[130]++;
    if (
    /* istanbul ignore next */
    (cov_1160av427q().b[38][0]++, !include_sensitive) &&
    /* istanbul ignore next */
    (cov_1160av427q().b[38][1]++, result.data)) {
      /* istanbul ignore next */
      cov_1160av427q().b[37][0]++;
      cov_1160av427q().s[131]++;
      // Remover informaciÃ³n sensible de la respuesta
      if (typeof result.data === 'object') {
        /* istanbul ignore next */
        cov_1160av427q().b[39][0]++;
        const sanitized =
        /* istanbul ignore next */
        (cov_1160av427q().s[132]++, JSON.parse(JSON.stringify(result.data)));
        // AquÃ­ se pueden agregar mÃ¡s filtros de seguridad
        /* istanbul ignore next */
        cov_1160av427q().s[133]++;
        result.data = sanitized;
      } else
      /* istanbul ignore next */
      {
        cov_1160av427q().b[39][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1160av427q().b[37][1]++;
    }
    cov_1160av427q().s[134]++;
    console.log(`â Unified Debug: Module ${module} completed with status ${result.status}`);
    /* istanbul ignore next */
    cov_1160av427q().s[135]++;
    return _server.NextResponse.json({
      ...result,
      meta: {
        api_version: '1.0.0',
        unified: true,
        parameters: {
          module,
          detailed,
          include_sensitive
        }
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1160av427q().s[136]++;
    console.error('â Unified Debug API error:', error);
    /* istanbul ignore next */
    cov_1160av427q().s[137]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor de debug',
      details: error.message,
      module: 'unified',
      status: 'failed'
    }, {
      status: 500
    });
  }
}
async function POST(request) {
  /* istanbul ignore next */
  cov_1160av427q().f[13]++;
  cov_1160av427q().s[138]++;
  try {
    const body =
    /* istanbul ignore next */
    (cov_1160av427q().s[139]++, await request.json());
    const {
      module,
      user_id,
      test_data,
      detailed =
      /* istanbul ignore next */
      (cov_1160av427q().b[40][0]++, false)
    } =
    /* istanbul ignore next */
    (cov_1160av427q().s[140]++, body);
    /* istanbul ignore next */
    cov_1160av427q().s[141]++;
    console.log(`ğ§ Unified Debug POST: Module ${module} with test data`);
    // AquÃ­ se pueden agregar diagnÃ³sticos especÃ­ficos que requieren datos de entrada
    // Por ejemplo, probar autenticaciÃ³n con credenciales especÃ­ficas
    /* istanbul ignore next */
    cov_1160av427q().s[142]++;
    return _server.NextResponse.json({
      message: 'DiagnÃ³stico POST completado',
      module,
      test_data: detailed ?
      /* istanbul ignore next */
      (cov_1160av427q().b[41][0]++, test_data) :
      /* istanbul ignore next */
      (cov_1160av427q().b[41][1]++, 'hidden'),
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1160av427q().s[143]++;
    console.error('â Unified Debug POST error:', error);
    /* istanbul ignore next */
    cov_1160av427q().s[144]++;
    return _server.NextResponse.json({
      error: 'Error en diagnÃ³stico POST',
      details: error.message
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,