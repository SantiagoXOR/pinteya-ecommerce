990b64784af6508add2a09b5b042ad40
"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: Object.getOwnPropertyDescriptor(all, name).get
    });
}
_export(exports, {
    get CheckoutTransitionAnimation () {
        return CheckoutTransitionAnimation;
    },
    get default () {
        return _default;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _framermotion = require("framer-motion");
const _image = /*#__PURE__*/ _interop_require_default(require("next/image"));
const _navigation = require("next/navigation");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const CheckoutTransitionAnimation = ({ isActive, onComplete, skipAnimation = false, enablePerformanceMode = false, customDuration, onAnimationStart, onAnimationProgress })=>{
    const router = (0, _navigation.useRouter)();
    const animationControls = (0, _framermotion.useAnimation)();
    const progressValue = (0, _framermotion.useMotionValue)(0);
    const timeoutRef = (0, _react.useRef)(null);
    const animationStartTimeRef = (0, _react.useRef)(null);
    // Configuración de duración optimizada
    const animationDuration = (0, _react.useMemo)(()=>{
        if (customDuration) {
            return customDuration;
        }
        if (skipAnimation) {
            return 100;
        }
        if (enablePerformanceMode) {
            return 1500;
        } // Versión más rápida para dispositivos lentos
        return 2500; // Duración completa
    }, [
        customDuration,
        skipAnimation,
        enablePerformanceMode
    ]);
    // Secuencia de animaciones optimizada
    const animationSequence = (0, _react.useMemo)(()=>{
        if (skipAnimation) {
            return [];
        }
        const baseSequence = [
            {
                name: "wave",
                delay: 0.3,
                duration: 1.5,
                element: "wave"
            },
            {
                name: "logo",
                delay: 0.8,
                duration: 1.8,
                element: "logo"
            },
            {
                name: "particles",
                delay: 1.2,
                duration: 1.2,
                element: "particles"
            },
            {
                name: "text",
                delay: 1.5,
                duration: 1.5,
                element: "text"
            }
        ];
        // Optimizar para modo performance
        if (enablePerformanceMode) {
            return baseSequence.map((seq)=>({
                    ...seq,
                    duration: seq.duration * 0.6,
                    delay: seq.delay * 0.6
                }));
        }
        return baseSequence;
    }, [
        skipAnimation,
        enablePerformanceMode
    ]);
    // Callback optimizado para progreso
    const handleProgress = (0, _react.useCallback)((progress)=>{
        progressValue.set(progress);
        onAnimationProgress?.(progress);
    }, [
        progressValue,
        onAnimationProgress
    ]);
    // Cleanup mejorado
    (0, _react.useEffect)(()=>{
        return ()=>{
            if (timeoutRef.current) {
                clearTimeout(timeoutRef.current);
            }
            animationControls.stop();
        };
    }, [
        animationControls
    ]);
    (0, _react.useEffect)(()=>{
        if (isActive) {
            animationStartTimeRef.current = performance.now();
            onAnimationStart?.();
            if (skipAnimation) {
                // Navegación inmediata para skip
                timeoutRef.current = setTimeout(()=>{
                    router.push("/checkout");
                    onComplete?.();
                }, 100);
            } else {
                // Iniciar secuencia de animación
                animationControls.start("animate");
                // Progress tracking
                const progressInterval = setInterval(()=>{
                    if (animationStartTimeRef.current) {
                        const elapsed = performance.now() - animationStartTimeRef.current;
                        const progress = Math.min(elapsed / animationDuration * 100, 100);
                        handleProgress(progress);
                    }
                }, 16); // 60fps
                // Secuencia completa de animación
                timeoutRef.current = setTimeout(()=>{
                    clearInterval(progressInterval);
                    handleProgress(100);
                    router.push("/checkout");
                    onComplete?.();
                }, animationDuration);
                return ()=>{
                    clearInterval(progressInterval);
                    if (timeoutRef.current) {
                        clearTimeout(timeoutRef.current);
                    }
                };
            }
        }
    }, [
        isActive,
        skipAnimation,
        router,
        onComplete,
        animationDuration,
        animationControls,
        handleProgress,
        onAnimationStart
    ]);
    // Variantes de animación optimizadas
    const containerVariants = (0, _react.useMemo)(()=>({
            initial: {
                opacity: 0
            },
            animate: {
                opacity: 1,
                transition: {
                    duration: 0.3,
                    ease: "easeOut"
                }
            },
            exit: {
                opacity: 0,
                transition: {
                    duration: 0.2,
                    ease: "easeIn"
                }
            }
        }), []);
    const waveVariants = (0, _react.useMemo)(()=>({
            initial: {
                scale: 0,
                opacity: 0
            },
            animate: {
                scale: enablePerformanceMode ? [
                    0,
                    6,
                    8
                ] : [
                    0,
                    8,
                    12
                ],
                opacity: [
                    0,
                    0.8,
                    0.6,
                    0
                ]
            }
        }), [
        enablePerformanceMode
    ]);
    const logoVariants = (0, _react.useMemo)(()=>({
            initial: {
                scale: 0,
                opacity: 0,
                rotate: -180
            },
            animate: {
                scale: enablePerformanceMode ? [
                    0,
                    2,
                    1
                ] : [
                    0,
                    2.5,
                    1
                ],
                opacity: [
                    0,
                    1,
                    1,
                    0
                ],
                rotate: [
                    180,
                    0,
                    0
                ]
            }
        }), [
        enablePerformanceMode
    ]);
    if (!isActive || skipAnimation) {
        return null;
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_framermotion.AnimatePresence, {
        mode: "wait",
        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_framermotion.motion.div, {
            className: "fixed inset-0 z-[99999] pointer-events-none checkout-transition-container",
            variants: containerVariants,
            initial: "initial",
            animate: "animate",
            exit: "exit",
            style: {
                willChange: "opacity",
                backfaceVisibility: "hidden",
                transform: "translateZ(0)"
            },
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_framermotion.motion.div, {
                    className: "absolute inset-0 flex items-center justify-center",
                    variants: waveVariants,
                    initial: "initial",
                    animate: "animate",
                    transition: {
                        duration: animationSequence.find((seq)=>seq.name === "wave")?.duration || 1.5,
                        delay: animationSequence.find((seq)=>seq.name === "wave")?.delay || 0.3,
                        times: [
                            0,
                            0.6,
                            0.8,
                            1
                        ],
                        ease: "easeOut"
                    },
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: `w-32 h-32 rounded-full checkout-transition-wave ${enablePerformanceMode ? '' : 'checkout-transition-overlay'}`,
                        style: {
                            background: "radial-gradient(circle, #fbbf24 0%, #f59e0b 50%, transparent 70%)",
                            filter: enablePerformanceMode ? "none" : "blur(2px)"
                        }
                    })
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_framermotion.motion.div, {
                    className: "absolute inset-0 flex items-center justify-center",
                    variants: logoVariants,
                    initial: "initial",
                    animate: "animate",
                    transition: {
                        duration: animationSequence.find((seq)=>seq.name === "logo")?.duration || 1.8,
                        delay: animationSequence.find((seq)=>seq.name === "logo")?.delay || 0.8,
                        times: [
                            0,
                            0.3,
                            0.7,
                            1
                        ],
                        ease: [
                            0.68,
                            -0.55,
                            0.265,
                            1.55
                        ] // Bounce effect
                    },
                    children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "relative",
                        children: [
                            !enablePerformanceMode && /*#__PURE__*/ (0, _jsxruntime.jsx)(_framermotion.motion.div, {
                                className: "absolute inset-0 rounded-full css-logo-glow",
                                style: {
                                    background: "radial-gradient(circle, #fbbf24 0%, transparent 70%)",
                                    filter: "blur(20px)"
                                },
                                animate: {
                                    scale: [
                                        1,
                                        1.5,
                                        1
                                    ],
                                    opacity: [
                                        0.5,
                                        0.8,
                                        0.3
                                    ]
                                },
                                transition: {
                                    duration: 1,
                                    delay: 1,
                                    repeat: 1,
                                    ease: "easeInOut"
                                }
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_image.default, {
                                src: "/images/logo/LOGO POSITIVO.svg",
                                alt: "Pinteya Logo",
                                width: enablePerformanceMode ? 80 : 120,
                                height: enablePerformanceMode ? 80 : 120,
                                className: "relative z-10 checkout-transition-logo",
                                priority: true,
                                style: {
                                    willChange: "transform",
                                    backfaceVisibility: "hidden"
                                }
                            })
                        ]
                    })
                }),
                !enablePerformanceMode && [
                    ...Array(8)
                ].map((_, i)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_framermotion.motion.div, {
                        className: "absolute w-2 h-2 bg-yellow-400 rounded-full",
                        style: {
                            left: "50%",
                            top: "50%",
                            willChange: "transform, opacity"
                        },
                        initial: {
                            scale: 0,
                            x: 0,
                            y: 0,
                            opacity: 0
                        },
                        animate: {
                            scale: [
                                0,
                                1,
                                0
                            ],
                            x: Math.cos(i * Math.PI * 2 / 8) * (enablePerformanceMode ? 150 : 200),
                            y: Math.sin(i * Math.PI * 2 / 8) * (enablePerformanceMode ? 150 : 200),
                            opacity: [
                                0,
                                1,
                                0
                            ]
                        },
                        transition: {
                            duration: animationSequence.find((seq)=>seq.name === "particles")?.duration || 1.2,
                            delay: (animationSequence.find((seq)=>seq.name === "particles")?.delay || 1.2) + i * 0.1,
                            ease: "easeOut"
                        }
                    }, i)),
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_framermotion.motion.div, {
                    className: "absolute inset-0 flex items-center justify-center",
                    initial: {
                        opacity: 0,
                        y: 50
                    },
                    animate: {
                        opacity: [
                            0,
                            1,
                            1,
                            0
                        ],
                        y: [
                            50,
                            0,
                            0,
                            -20
                        ]
                    },
                    transition: {
                        duration: animationSequence.find((seq)=>seq.name === "text")?.duration || 1.5,
                        delay: animationSequence.find((seq)=>seq.name === "text")?.delay || 1.5,
                        times: [
                            0,
                            0.3,
                            0.7,
                            1
                        ],
                        ease: "easeOut"
                    },
                    children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "text-center",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("h3", {
                                className: `font-bold text-gray-800 mb-2 ${enablePerformanceMode ? 'text-xl' : 'text-2xl'}`,
                                children: "\xa1Procesando tu compra!"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                className: "text-gray-600",
                                children: "Te llevamos al checkout..."
                            })
                        ]
                    })
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_framermotion.motion.div, {
                    className: "absolute inset-0 bg-white",
                    initial: {
                        opacity: 0
                    },
                    animate: {
                        opacity: [
                            0,
                            0.3,
                            0.5,
                            0.8
                        ]
                    },
                    transition: {
                        duration: animationDuration / 1000,
                        ease: "easeInOut"
                    }
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_framermotion.motion.button, {
                    className: "checkout-transition-skip-button",
                    initial: {
                        opacity: 0
                    },
                    animate: {
                        opacity: 1
                    },
                    transition: {
                        delay: 0.5
                    },
                    onClick: ()=>{
                        if (timeoutRef.current) {
                            clearTimeout(timeoutRef.current);
                        }
                        router.push("/checkout");
                        onComplete?.();
                    },
                    "aria-label": "Saltar animaci\xf3n e ir al checkout",
                    children: "Saltar animaci\xf3n"
                })
            ]
        })
    });
};
const _default = CheckoutTransitionAnimation;

//# sourceMappingURL=data:application/json;base64,