bc8dc982ca80fcd266b43d390f2117b8
'use client';
"use strict";

/* istanbul ignore next */
function cov_3nx7pz3e9() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useUserSessions.ts";
  var hash = "86ae5b1b595adee4753220af83a89852f798070f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useUserSessions.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 38
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 31
        }
      },
      "6": {
        start: {
          line: 20,
          column: 15
        },
        end: {
          line: 20,
          column: 31
        }
      },
      "7": {
        start: {
          line: 21,
          column: 16
        },
        end: {
          line: 21,
          column: 33
        }
      },
      "8": {
        start: {
          line: 22,
          column: 26
        },
        end: {
          line: 22,
          column: 69
        }
      },
      "9": {
        start: {
          line: 24,
          column: 36
        },
        end: {
          line: 24,
          column: 60
        }
      },
      "10": {
        start: {
          line: 25,
          column: 38
        },
        end: {
          line: 25,
          column: 65
        }
      },
      "11": {
        start: {
          line: 26,
          column: 30
        },
        end: {
          line: 26,
          column: 56
        }
      },
      "12": {
        start: {
          line: 28,
          column: 26
        },
        end: {
          line: 54,
          column: 10
        }
      },
      "13": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 27
        }
      },
      "14": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 23
        }
      },
      "15": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 53,
          column: 9
        }
      },
      "16": {
        start: {
          line: 32,
          column: 29
        },
        end: {
          line: 37,
          column: 14
        }
      },
      "17": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 40,
          column: 13
        }
      },
      "18": {
        start: {
          line: 39,
          column: 16
        },
        end: {
          line: 39,
          column: 61
        }
      },
      "19": {
        start: {
          line: 41,
          column: 25
        },
        end: {
          line: 41,
          column: 46
        }
      },
      "20": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 46,
          column: 13
        }
      },
      "21": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 43,
          column: 43
        }
      },
      "22": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 45,
          column: 70
        }
      },
      "23": {
        start: {
          line: 48,
          column: 33
        },
        end: {
          line: 48,
          column: 89
        }
      },
      "24": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 35
        }
      },
      "25": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 50,
          column: 77
        }
      },
      "26": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 32
        }
      },
      "27": {
        start: {
          line: 56,
          column: 26
        },
        end: {
          line: 82,
          column: 10
        }
      },
      "28": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 81,
          column: 9
        }
      },
      "29": {
        start: {
          line: 58,
          column: 29
        },
        end: {
          line: 63,
          column: 14
        }
      },
      "30": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 67,
          column: 13
        }
      },
      "31": {
        start: {
          line: 65,
          column: 34
        },
        end: {
          line: 65,
          column: 55
        }
      },
      "32": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 66,
          column: 77
        }
      },
      "33": {
        start: {
          line: 68,
          column: 25
        },
        end: {
          line: 68,
          column: 46
        }
      },
      "34": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 76,
          column: 13
        }
      },
      "35": {
        start: {
          line: 71,
          column: 16
        },
        end: {
          line: 71,
          column: 86
        }
      },
      "36": {
        start: {
          line: 71,
          column: 36
        },
        end: {
          line: 71,
          column: 84
        }
      },
      "37": {
        start: {
          line: 71,
          column: 59
        },
        end: {
          line: 71,
          column: 83
        }
      },
      "38": {
        start: {
          line: 72,
          column: 16
        },
        end: {
          line: 72,
          column: 69
        }
      },
      "39": {
        start: {
          line: 73,
          column: 16
        },
        end: {
          line: 73,
          column: 28
        }
      },
      "40": {
        start: {
          line: 75,
          column: 16
        },
        end: {
          line: 75,
          column: 72
        }
      },
      "41": {
        start: {
          line: 78,
          column: 33
        },
        end: {
          line: 78,
          column: 89
        }
      },
      "42": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 75
        }
      },
      "43": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 25
        }
      },
      "44": {
        start: {
          line: 84,
          column: 30
        },
        end: {
          line: 110,
          column: 10
        }
      },
      "45": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 109,
          column: 9
        }
      },
      "46": {
        start: {
          line: 86,
          column: 29
        },
        end: {
          line: 91,
          column: 14
        }
      },
      "47": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 95,
          column: 13
        }
      },
      "48": {
        start: {
          line: 93,
          column: 34
        },
        end: {
          line: 93,
          column: 55
        }
      },
      "49": {
        start: {
          line: 94,
          column: 16
        },
        end: {
          line: 94,
          column: 79
        }
      },
      "50": {
        start: {
          line: 96,
          column: 25
        },
        end: {
          line: 96,
          column: 46
        }
      },
      "51": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 104,
          column: 13
        }
      },
      "52": {
        start: {
          line: 99,
          column: 16
        },
        end: {
          line: 99,
          column: 80
        }
      },
      "53": {
        start: {
          line: 99,
          column: 36
        },
        end: {
          line: 99,
          column: 78
        }
      },
      "54": {
        start: {
          line: 99,
          column: 59
        },
        end: {
          line: 99,
          column: 77
        }
      },
      "55": {
        start: {
          line: 100,
          column: 16
        },
        end: {
          line: 100,
          column: 86
        }
      },
      "56": {
        start: {
          line: 101,
          column: 16
        },
        end: {
          line: 101,
          column: 28
        }
      },
      "57": {
        start: {
          line: 103,
          column: 16
        },
        end: {
          line: 103,
          column: 74
        }
      },
      "58": {
        start: {
          line: 106,
          column: 33
        },
        end: {
          line: 106,
          column: 89
        }
      },
      "59": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 77
        }
      },
      "60": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 25
        }
      },
      "61": {
        start: {
          line: 112,
          column: 24
        },
        end: {
          line: 144,
          column: 10
        }
      },
      "62": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 143,
          column: 9
        }
      },
      "63": {
        start: {
          line: 114,
          column: 29
        },
        end: {
          line: 122,
          column: 14
        }
      },
      "64": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 126,
          column: 13
        }
      },
      "65": {
        start: {
          line: 124,
          column: 34
        },
        end: {
          line: 124,
          column: 55
        }
      },
      "66": {
        start: {
          line: 125,
          column: 16
        },
        end: {
          line: 125,
          column: 97
        }
      },
      "67": {
        start: {
          line: 127,
          column: 25
        },
        end: {
          line: 127,
          column: 46
        }
      },
      "68": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 138,
          column: 13
        }
      },
      "69": {
        start: {
          line: 130,
          column: 16
        },
        end: {
          line: 133,
          column: 38
        }
      },
      "70": {
        start: {
          line: 130,
          column: 36
        },
        end: {
          line: 133,
          column: 36
        }
      },
      "71": {
        start: {
          line: 130,
          column: 56
        },
        end: {
          line: 133,
          column: 35
        }
      },
      "72": {
        start: {
          line: 134,
          column: 16
        },
        end: {
          line: 134,
          column: 76
        }
      },
      "73": {
        start: {
          line: 135,
          column: 16
        },
        end: {
          line: 135,
          column: 28
        }
      },
      "74": {
        start: {
          line: 137,
          column: 16
        },
        end: {
          line: 137,
          column: 92
        }
      },
      "75": {
        start: {
          line: 140,
          column: 33
        },
        end: {
          line: 140,
          column: 89
        }
      },
      "76": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 141,
          column: 80
        }
      },
      "77": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 142,
          column: 25
        }
      },
      "78": {
        start: {
          line: 146,
          column: 28
        },
        end: {
          line: 150,
          column: 6
        }
      },
      "79": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 147,
          column: 30
        }
      },
      "80": {
        start: {
          line: 152,
          column: 4
        },
        end: {
          line: 156,
          column: 7
        }
      },
      "81": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 153,
          column: 24
        }
      },
      "82": {
        start: {
          line: 158,
          column: 4
        },
        end: {
          line: 165,
          column: 7
        }
      },
      "83": {
        start: {
          line: 159,
          column: 25
        },
        end: {
          line: 161,
          column: 17
        }
      },
      "84": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 160,
          column: 28
        }
      },
      "85": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 162,
          column: 43
        }
      },
      "86": {
        start: {
          line: 162,
          column: 19
        },
        end: {
          line: 162,
          column: 42
        }
      },
      "87": {
        start: {
          line: 167,
          column: 26
        },
        end: {
          line: 167,
          column: 41
        }
      },
      "88": {
        start: {
          line: 168,
          column: 27
        },
        end: {
          line: 168,
          column: 79
        }
      },
      "89": {
        start: {
          line: 168,
          column: 52
        },
        end: {
          line: 168,
          column: 70
        }
      },
      "90": {
        start: {
          line: 169,
          column: 27
        },
        end: {
          line: 169,
          column: 74
        }
      },
      "91": {
        start: {
          line: 169,
          column: 54
        },
        end: {
          line: 169,
          column: 73
        }
      },
      "92": {
        start: {
          line: 170,
          column: 4
        },
        end: {
          line: 185,
          column: 6
        }
      },
      "93": {
        start: {
          line: 188,
          column: 44
        },
        end: {
          line: 188,
          column: 71
        }
      },
      "94": {
        start: {
          line: 189,
          column: 28
        },
        end: {
          line: 227,
          column: 6
        }
      },
      "95": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 190,
          column: 33
        }
      },
      "96": {
        start: {
          line: 190,
          column: 26
        },
        end: {
          line: 190,
          column: 33
        }
      },
      "97": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 224,
          column: 9
        }
      },
      "98": {
        start: {
          line: 192,
          column: 29
        },
        end: {
          line: 200,
          column: 14
        }
      },
      "99": {
        start: {
          line: 201,
          column: 12
        },
        end: {
          line: 221,
          column: 13
        }
      },
      "100": {
        start: {
          line: 202,
          column: 29
        },
        end: {
          line: 202,
          column: 50
        }
      },
      "101": {
        start: {
          line: 203,
          column: 16
        },
        end: {
          line: 203,
          column: 38
        }
      },
      "102": {
        start: {
          line: 204,
          column: 16
        },
        end: {
          line: 204,
          column: 64
        }
      },
      "103": {
        start: {
          line: 206,
          column: 16
        },
        end: {
          line: 220,
          column: 17
        }
      },
      "104": {
        start: {
          line: 207,
          column: 20
        },
        end: {
          line: 219,
          column: 21
        }
      },
      "105": {
        start: {
          line: 208,
          column: 24
        },
        end: {
          line: 216,
          column: 27
        }
      },
      "106": {
        start: {
          line: 218,
          column: 24
        },
        end: {
          line: 218,
          column: 87
        }
      },
      "107": {
        start: {
          line: 223,
          column: 12
        },
        end: {
          line: 223,
          column: 63
        }
      },
      "108": {
        start: {
          line: 229,
          column: 4
        },
        end: {
          line: 233,
          column: 7
        }
      },
      "109": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 230,
          column: 26
        }
      },
      "110": {
        start: {
          line: 234,
          column: 4
        },
        end: {
          line: 237,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 27
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "useUserSessions",
        decl: {
          start: {
            line: 23,
            column: 9
          },
          end: {
            line: 23,
            column: 24
          }
        },
        loc: {
          start: {
            line: 23,
            column: 27
          },
          end: {
            line: 186,
            column: 1
          }
        },
        line: 23
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 28,
            column: 50
          },
          end: {
            line: 28,
            column: 51
          }
        },
        loc: {
          start: {
            line: 28,
            column: 60
          },
          end: {
            line: 54,
            column: 5
          }
        },
        line: 28
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 56,
            column: 50
          },
          end: {
            line: 56,
            column: 51
          }
        },
        loc: {
          start: {
            line: 56,
            column: 69
          },
          end: {
            line: 82,
            column: 5
          }
        },
        line: 56
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 71,
            column: 28
          },
          end: {
            line: 71,
            column: 29
          }
        },
        loc: {
          start: {
            line: 71,
            column: 36
          },
          end: {
            line: 71,
            column: 84
          }
        },
        line: 71
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 71,
            column: 48
          },
          end: {
            line: 71,
            column: 49
          }
        },
        loc: {
          start: {
            line: 71,
            column: 59
          },
          end: {
            line: 71,
            column: 83
          }
        },
        line: 71
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 84,
            column: 54
          },
          end: {
            line: 84,
            column: 55
          }
        },
        loc: {
          start: {
            line: 84,
            column: 64
          },
          end: {
            line: 110,
            column: 5
          }
        },
        line: 84
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 99,
            column: 28
          },
          end: {
            line: 99,
            column: 29
          }
        },
        loc: {
          start: {
            line: 99,
            column: 36
          },
          end: {
            line: 99,
            column: 78
          }
        },
        line: 99
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 99,
            column: 48
          },
          end: {
            line: 99,
            column: 49
          }
        },
        loc: {
          start: {
            line: 99,
            column: 59
          },
          end: {
            line: 99,
            column: 77
          }
        },
        line: 99
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 112,
            column: 48
          },
          end: {
            line: 112,
            column: 49
          }
        },
        loc: {
          start: {
            line: 112,
            column: 67
          },
          end: {
            line: 144,
            column: 5
          }
        },
        line: 112
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 130,
            column: 28
          },
          end: {
            line: 130,
            column: 29
          }
        },
        loc: {
          start: {
            line: 130,
            column: 36
          },
          end: {
            line: 133,
            column: 36
          }
        },
        line: 130
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 130,
            column: 45
          },
          end: {
            line: 130,
            column: 46
          }
        },
        loc: {
          start: {
            line: 130,
            column: 56
          },
          end: {
            line: 133,
            column: 35
          }
        },
        line: 130
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 146,
            column: 52
          },
          end: {
            line: 146,
            column: 53
          }
        },
        loc: {
          start: {
            line: 146,
            column: 62
          },
          end: {
            line: 148,
            column: 5
          }
        },
        line: 146
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 152,
            column: 26
          },
          end: {
            line: 152,
            column: 27
          }
        },
        loc: {
          start: {
            line: 152,
            column: 30
          },
          end: {
            line: 154,
            column: 5
          }
        },
        line: 152
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 158,
            column: 26
          },
          end: {
            line: 158,
            column: 27
          }
        },
        loc: {
          start: {
            line: 158,
            column: 30
          },
          end: {
            line: 163,
            column: 5
          }
        },
        line: 158
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 159,
            column: 37
          },
          end: {
            line: 159,
            column: 38
          }
        },
        loc: {
          start: {
            line: 159,
            column: 41
          },
          end: {
            line: 161,
            column: 9
          }
        },
        line: 159
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 162,
            column: 15
          },
          end: {
            line: 162,
            column: 16
          }
        },
        loc: {
          start: {
            line: 162,
            column: 19
          },
          end: {
            line: 162,
            column: 42
          }
        },
        line: 162
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 168,
            column: 41
          },
          end: {
            line: 168,
            column: 42
          }
        },
        loc: {
          start: {
            line: 168,
            column: 52
          },
          end: {
            line: 168,
            column: 70
          }
        },
        line: 168
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 169,
            column: 43
          },
          end: {
            line: 169,
            column: 44
          }
        },
        loc: {
          start: {
            line: 169,
            column: 54
          },
          end: {
            line: 169,
            column: 73
          }
        },
        line: 169
      },
      "21": {
        name: "useSessionRegistration",
        decl: {
          start: {
            line: 187,
            column: 9
          },
          end: {
            line: 187,
            column: 31
          }
        },
        loc: {
          start: {
            line: 187,
            column: 34
          },
          end: {
            line: 238,
            column: 1
          }
        },
        line: 187
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 189,
            column: 52
          },
          end: {
            line: 189,
            column: 53
          }
        },
        loc: {
          start: {
            line: 189,
            column: 62
          },
          end: {
            line: 225,
            column: 5
          }
        },
        line: 189
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 229,
            column: 26
          },
          end: {
            line: 229,
            column: 27
          }
        },
        loc: {
          start: {
            line: 229,
            column: 30
          },
          end: {
            line: 231,
            column: 5
          }
        },
        line: 229
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 40,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 40,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "1": {
        loc: {
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 46,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 46,
            column: 13
          }
        }, {
          start: {
            line: 44,
            column: 19
          },
          end: {
            line: 46,
            column: 13
          }
        }],
        line: 42
      },
      "2": {
        loc: {
          start: {
            line: 48,
            column: 33
          },
          end: {
            line: 48,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 48,
            column: 56
          },
          end: {
            line: 48,
            column: 67
          }
        }, {
          start: {
            line: 48,
            column: 70
          },
          end: {
            line: 48,
            column: 89
          }
        }],
        line: 48
      },
      "3": {
        loc: {
          start: {
            line: 64,
            column: 12
          },
          end: {
            line: 67,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 12
          },
          end: {
            line: 67,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "4": {
        loc: {
          start: {
            line: 66,
            column: 32
          },
          end: {
            line: 66,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 66,
            column: 32
          },
          end: {
            line: 66,
            column: 47
          }
        }, {
          start: {
            line: 66,
            column: 51
          },
          end: {
            line: 66,
            column: 75
          }
        }],
        line: 66
      },
      "5": {
        loc: {
          start: {
            line: 69,
            column: 12
          },
          end: {
            line: 76,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 12
          },
          end: {
            line: 76,
            column: 13
          }
        }, {
          start: {
            line: 74,
            column: 19
          },
          end: {
            line: 76,
            column: 13
          }
        }],
        line: 69
      },
      "6": {
        loc: {
          start: {
            line: 75,
            column: 32
          },
          end: {
            line: 75,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 75,
            column: 32
          },
          end: {
            line: 75,
            column: 42
          }
        }, {
          start: {
            line: 75,
            column: 46
          },
          end: {
            line: 75,
            column: 70
          }
        }],
        line: 75
      },
      "7": {
        loc: {
          start: {
            line: 78,
            column: 33
          },
          end: {
            line: 78,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 78,
            column: 56
          },
          end: {
            line: 78,
            column: 67
          }
        }, {
          start: {
            line: 78,
            column: 70
          },
          end: {
            line: 78,
            column: 89
          }
        }],
        line: 78
      },
      "8": {
        loc: {
          start: {
            line: 92,
            column: 12
          },
          end: {
            line: 95,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 12
          },
          end: {
            line: 95,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 92
      },
      "9": {
        loc: {
          start: {
            line: 94,
            column: 32
          },
          end: {
            line: 94,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 94,
            column: 32
          },
          end: {
            line: 94,
            column: 47
          }
        }, {
          start: {
            line: 94,
            column: 51
          },
          end: {
            line: 94,
            column: 77
          }
        }],
        line: 94
      },
      "10": {
        loc: {
          start: {
            line: 97,
            column: 12
          },
          end: {
            line: 104,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 12
          },
          end: {
            line: 104,
            column: 13
          }
        }, {
          start: {
            line: 102,
            column: 19
          },
          end: {
            line: 104,
            column: 13
          }
        }],
        line: 97
      },
      "11": {
        loc: {
          start: {
            line: 103,
            column: 32
          },
          end: {
            line: 103,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 103,
            column: 32
          },
          end: {
            line: 103,
            column: 42
          }
        }, {
          start: {
            line: 103,
            column: 46
          },
          end: {
            line: 103,
            column: 72
          }
        }],
        line: 103
      },
      "12": {
        loc: {
          start: {
            line: 106,
            column: 33
          },
          end: {
            line: 106,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 106,
            column: 56
          },
          end: {
            line: 106,
            column: 67
          }
        }, {
          start: {
            line: 106,
            column: 70
          },
          end: {
            line: 106,
            column: 89
          }
        }],
        line: 106
      },
      "13": {
        loc: {
          start: {
            line: 123,
            column: 12
          },
          end: {
            line: 126,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 123,
            column: 12
          },
          end: {
            line: 126,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 123
      },
      "14": {
        loc: {
          start: {
            line: 125,
            column: 32
          },
          end: {
            line: 125,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 125,
            column: 32
          },
          end: {
            line: 125,
            column: 47
          }
        }, {
          start: {
            line: 125,
            column: 51
          },
          end: {
            line: 125,
            column: 95
          }
        }],
        line: 125
      },
      "15": {
        loc: {
          start: {
            line: 128,
            column: 12
          },
          end: {
            line: 138,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 128,
            column: 12
          },
          end: {
            line: 138,
            column: 13
          }
        }, {
          start: {
            line: 136,
            column: 19
          },
          end: {
            line: 138,
            column: 13
          }
        }],
        line: 128
      },
      "16": {
        loc: {
          start: {
            line: 130,
            column: 56
          },
          end: {
            line: 133,
            column: 35
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 130,
            column: 83
          },
          end: {
            line: 133,
            column: 25
          }
        }, {
          start: {
            line: 133,
            column: 28
          },
          end: {
            line: 133,
            column: 35
          }
        }],
        line: 130
      },
      "17": {
        loc: {
          start: {
            line: 137,
            column: 32
          },
          end: {
            line: 137,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 137,
            column: 32
          },
          end: {
            line: 137,
            column: 42
          }
        }, {
          start: {
            line: 137,
            column: 46
          },
          end: {
            line: 137,
            column: 90
          }
        }],
        line: 137
      },
      "18": {
        loc: {
          start: {
            line: 140,
            column: 33
          },
          end: {
            line: 140,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 140,
            column: 56
          },
          end: {
            line: 140,
            column: 67
          }
        }, {
          start: {
            line: 140,
            column: 70
          },
          end: {
            line: 140,
            column: 89
          }
        }],
        line: 140
      },
      "19": {
        loc: {
          start: {
            line: 168,
            column: 27
          },
          end: {
            line: 168,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 168,
            column: 27
          },
          end: {
            line: 168,
            column: 71
          }
        }, {
          start: {
            line: 168,
            column: 75
          },
          end: {
            line: 168,
            column: 79
          }
        }],
        line: 168
      },
      "20": {
        loc: {
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 190,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 190,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 190
      },
      "21": {
        loc: {
          start: {
            line: 201,
            column: 12
          },
          end: {
            line: 221,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 201,
            column: 12
          },
          end: {
            line: 221,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 201
      },
      "22": {
        loc: {
          start: {
            line: 206,
            column: 16
          },
          end: {
            line: 220,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 206,
            column: 16
          },
          end: {
            line: 220,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 206
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useUserSessions.ts"],
      sourcesContent: ["'use client';\r\n\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport { toast } from 'sonner';\r\nimport { analyzeSessionForAnomalies } from '@/lib/security/anomalyDetection';\r\n\r\n// Tipos para sesiones\r\nexport interface UserSession {\r\n  id: string;\r\n  user_id: string;\r\n  device_type: string;\r\n  device_name: string;\r\n  browser: string;\r\n  os: string;\r\n  ip_address: string;\r\n  location?: string;\r\n  is_current: boolean;\r\n  is_trusted?: boolean;\r\n  last_activity: string;\r\n  created_at: string;\r\n  user_agent: string;\r\n}\r\n\r\ninterface SessionsResponse {\r\n  success: boolean;\r\n  sessions: UserSession[];\r\n  total: number;\r\n}\r\n\r\ninterface UseUserSessionsReturn {\r\n  // Estado\r\n  sessions: UserSession[];\r\n  isLoading: boolean;\r\n  error: string | null;\r\n  \r\n  // Funciones\r\n  fetchSessions: () => Promise<void>;\r\n  revokeSession: (sessionId: string) => Promise<boolean>;\r\n  revokeAllSessions: () => Promise<boolean>;\r\n  trustDevice: (sessionId: string) => Promise<boolean>;\r\n  refreshSessions: () => Promise<void>;\r\n  \r\n  // Estad\xEDsticas\r\n  totalSessions: number;\r\n  currentSession: UserSession | null;\r\n  remoteSessions: UserSession[];\r\n}\r\n\r\nexport function useUserSessions(): UseUserSessionsReturn {\r\n  const [sessions, setSessions] = useState<UserSession[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // Funci\xF3n para obtener sesiones\r\n  const fetchSessions = useCallback(async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await fetch('/api/user/sessions', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error al obtener sesiones');\r\n      }\r\n\r\n      const data: SessionsResponse = await response.json();\r\n      \r\n      if (data.success) {\r\n        setSessions(data.sessions);\r\n      } else {\r\n        throw new Error('Error en la respuesta del servidor');\r\n      }\r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Error desconocido';\r\n      setError(errorMessage);\r\n      toast.error('Error al cargar sesiones: ' + errorMessage);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // Funci\xF3n para cerrar una sesi\xF3n espec\xEDfica\r\n  const revokeSession = useCallback(async (sessionId: string): Promise<boolean> => {\r\n    try {\r\n      const response = await fetch(`/api/user/sessions/${sessionId}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || 'Error al cerrar sesi\xF3n');\r\n      }\r\n\r\n      const data = await response.json();\r\n      \r\n      if (data.success) {\r\n        // Actualizar estado local\r\n        setSessions(prev => prev.filter(session => session.id !== sessionId));\r\n        toast.success('Sesi\xF3n cerrada exitosamente');\r\n        return true;\r\n      } else {\r\n        throw new Error(data.error || 'Error al cerrar sesi\xF3n');\r\n      }\r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Error desconocido';\r\n      toast.error('Error al cerrar sesi\xF3n: ' + errorMessage);\r\n      return false;\r\n    }\r\n  }, []);\r\n\r\n  // Funci\xF3n para cerrar todas las sesiones remotas\r\n  const revokeAllSessions = useCallback(async (): Promise<boolean> => {\r\n    try {\r\n      const response = await fetch('/api/user/sessions', {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || 'Error al cerrar sesiones');\r\n      }\r\n\r\n      const data = await response.json();\r\n      \r\n      if (data.success) {\r\n        // Actualizar estado local - mantener solo la sesi\xF3n actual\r\n        setSessions(prev => prev.filter(session => session.is_current));\r\n        toast.success('Todas las sesiones remotas han sido cerradas');\r\n        return true;\r\n      } else {\r\n        throw new Error(data.error || 'Error al cerrar sesiones');\r\n      }\r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Error desconocido';\r\n      toast.error('Error al cerrar sesiones: ' + errorMessage);\r\n      return false;\r\n    }\r\n  }, []);\r\n\r\n  // Funci\xF3n para marcar dispositivo como confiable\r\n  const trustDevice = useCallback(async (sessionId: string): Promise<boolean> => {\r\n    try {\r\n      const response = await fetch(`/api/user/sessions/${sessionId}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          is_trusted: true,\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || 'Error al marcar dispositivo como confiable');\r\n      }\r\n\r\n      const data = await response.json();\r\n      \r\n      if (data.success) {\r\n        // Actualizar estado local\r\n        setSessions(prev => prev.map(session => \r\n          session.id === sessionId \r\n            ? { ...session, is_trusted: true }\r\n            : session\r\n        ));\r\n        toast.success('Dispositivo marcado como confiable');\r\n        return true;\r\n      } else {\r\n        throw new Error(data.error || 'Error al marcar dispositivo como confiable');\r\n      }\r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Error desconocido';\r\n      toast.error('Error al marcar dispositivo: ' + errorMessage);\r\n      return false;\r\n    }\r\n  }, []);\r\n\r\n  // Funci\xF3n para refrescar sesiones\r\n  const refreshSessions = useCallback(async () => {\r\n    await fetchSessions();\r\n  }, [fetchSessions]);\r\n\r\n  // Cargar sesiones al montar el componente\r\n  useEffect(() => {\r\n    fetchSessions();\r\n  }, [fetchSessions]);\r\n\r\n  // Auto-refresh cada 30 segundos\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      fetchSessions();\r\n    }, 30000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [fetchSessions]);\r\n\r\n  // Calcular estad\xEDsticas\r\n  const totalSessions = sessions.length;\r\n  const currentSession = sessions.find(session => session.is_current) || null;\r\n  const remoteSessions = sessions.filter(session => !session.is_current);\r\n\r\n  return {\r\n    // Estado\r\n    sessions,\r\n    isLoading,\r\n    error,\r\n    \r\n    // Funciones\r\n    fetchSessions,\r\n    revokeSession,\r\n    revokeAllSessions,\r\n    trustDevice,\r\n    refreshSessions,\r\n    \r\n    // Estad\xEDsticas\r\n    totalSessions,\r\n    currentSession,\r\n    remoteSessions,\r\n  };\r\n}\r\n\r\n// Hook auxiliar para registrar nueva sesi\xF3n\r\nexport function useSessionRegistration() {\r\n  const [isRegistered, setIsRegistered] = useState(false);\r\n\r\n  const registerSession = useCallback(async () => {\r\n    if (isRegistered) return;\r\n\r\n    try {\r\n      const response = await fetch('/api/user/sessions', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          register_current: true,\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setIsRegistered(true);\r\n        console.log('Sesi\xF3n registrada:', data.session);\r\n\r\n        // Analizar sesi\xF3n para detectar anomal\xEDas\r\n        if (data.session) {\r\n          try {\r\n            await analyzeSessionForAnomalies({\r\n              userId: data.session.user_id,\r\n              sessionId: data.session.id,\r\n              ipAddress: data.session.ip_address,\r\n              userAgent: data.session.user_agent,\r\n              deviceType: data.session.device_type,\r\n              location: data.session.location,\r\n              timestamp: data.session.created_at,\r\n            });\r\n          } catch (anomalyError) {\r\n            console.error('Error en an\xE1lisis de anomal\xEDas:', anomalyError);\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al registrar sesi\xF3n:', error);\r\n    }\r\n  }, [isRegistered]);\r\n\r\n  // Registrar sesi\xF3n al cargar la p\xE1gina\r\n  useEffect(() => {\r\n    registerSession();\r\n  }, [registerSession]);\r\n\r\n  return { registerSession, isRegistered };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["useSessionRegistration", "useUserSessions", "sessions", "setSessions", "useState", "isLoading", "setIsLoading", "error", "setError", "fetchSessions", "useCallback", "response", "fetch", "method", "headers", "ok", "Error", "data", "json", "success", "err", "errorMessage", "message", "toast", "revokeSession", "sessionId", "errorData", "prev", "filter", "session", "id", "revokeAllSessions", "is_current", "trustDevice", "body", "JSON", "stringify", "is_trusted", "map", "refreshSessions", "useEffect", "interval", "setInterval", "clearInterval", "totalSessions", "length", "currentSession", "find", "remoteSessions", "isRegistered", "setIsRegistered", "registerSession", "register_current", "console", "log", "analyzeSessionForAnomalies", "userId", "user_id", "ipAddress", "ip_address", "userAgent", "user_agent", "deviceType", "device_type", "location", "timestamp", "created_at", "anomalyError"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "86ae5b1b595adee4753220af83a89852f798070f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_3nx7pz3e9 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_3nx7pz3e9();
cov_3nx7pz3e9().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_3nx7pz3e9().f[0]++;
  cov_3nx7pz3e9().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_3nx7pz3e9().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_3nx7pz3e9().s[3]++;
_export(exports, {
  get useSessionRegistration() {
    /* istanbul ignore next */
    cov_3nx7pz3e9().f[1]++;
    cov_3nx7pz3e9().s[4]++;
    return useSessionRegistration;
  },
  get useUserSessions() {
    /* istanbul ignore next */
    cov_3nx7pz3e9().f[2]++;
    cov_3nx7pz3e9().s[5]++;
    return useUserSessions;
  }
});
const _react =
/* istanbul ignore next */
(cov_3nx7pz3e9().s[6]++, require("react"));
const _sonner =
/* istanbul ignore next */
(cov_3nx7pz3e9().s[7]++, require("sonner"));
const _anomalyDetection =
/* istanbul ignore next */
(cov_3nx7pz3e9().s[8]++, require("../lib/security/anomalyDetection"));
function useUserSessions() {
  /* istanbul ignore next */
  cov_3nx7pz3e9().f[3]++;
  const [sessions, setSessions] =
  /* istanbul ignore next */
  (cov_3nx7pz3e9().s[9]++, (0, _react.useState)([]));
  const [isLoading, setIsLoading] =
  /* istanbul ignore next */
  (cov_3nx7pz3e9().s[10]++, (0, _react.useState)(false));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_3nx7pz3e9().s[11]++, (0, _react.useState)(null));
  // Función para obtener sesiones
  const fetchSessions =
  /* istanbul ignore next */
  (cov_3nx7pz3e9().s[12]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_3nx7pz3e9().f[4]++;
    cov_3nx7pz3e9().s[13]++;
    setIsLoading(true);
    /* istanbul ignore next */
    cov_3nx7pz3e9().s[14]++;
    setError(null);
    /* istanbul ignore next */
    cov_3nx7pz3e9().s[15]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_3nx7pz3e9().s[16]++, await fetch('/api/user/sessions', {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json'
        }
      }));
      /* istanbul ignore next */
      cov_3nx7pz3e9().s[17]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_3nx7pz3e9().b[0][0]++;
        cov_3nx7pz3e9().s[18]++;
        throw new Error('Error al obtener sesiones');
      } else
      /* istanbul ignore next */
      {
        cov_3nx7pz3e9().b[0][1]++;
      }
      const data =
      /* istanbul ignore next */
      (cov_3nx7pz3e9().s[19]++, await response.json());
      /* istanbul ignore next */
      cov_3nx7pz3e9().s[20]++;
      if (data.success) {
        /* istanbul ignore next */
        cov_3nx7pz3e9().b[1][0]++;
        cov_3nx7pz3e9().s[21]++;
        setSessions(data.sessions);
      } else {
        /* istanbul ignore next */
        cov_3nx7pz3e9().b[1][1]++;
        cov_3nx7pz3e9().s[22]++;
        throw new Error('Error en la respuesta del servidor');
      }
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_3nx7pz3e9().s[23]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_3nx7pz3e9().b[2][0]++, err.message) :
      /* istanbul ignore next */
      (cov_3nx7pz3e9().b[2][1]++, 'Error desconocido'));
      /* istanbul ignore next */
      cov_3nx7pz3e9().s[24]++;
      setError(errorMessage);
      /* istanbul ignore next */
      cov_3nx7pz3e9().s[25]++;
      _sonner.toast.error('Error al cargar sesiones: ' + errorMessage);
    } finally {
      /* istanbul ignore next */
      cov_3nx7pz3e9().s[26]++;
      setIsLoading(false);
    }
  }, []));
  // Función para cerrar una sesión específica
  const revokeSession =
  /* istanbul ignore next */
  (cov_3nx7pz3e9().s[27]++, (0, _react.useCallback)(async sessionId => {
    /* istanbul ignore next */
    cov_3nx7pz3e9().f[5]++;
    cov_3nx7pz3e9().s[28]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_3nx7pz3e9().s[29]++, await fetch(`/api/user/sessions/${sessionId}`, {
        method: 'DELETE',
        headers: {
          'Content-Type': 'application/json'
        }
      }));
      /* istanbul ignore next */
      cov_3nx7pz3e9().s[30]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_3nx7pz3e9().b[3][0]++;
        const errorData =
        /* istanbul ignore next */
        (cov_3nx7pz3e9().s[31]++, await response.json());
        /* istanbul ignore next */
        cov_3nx7pz3e9().s[32]++;
        throw new Error(
        /* istanbul ignore next */
        (cov_3nx7pz3e9().b[4][0]++, errorData.error) ||
        /* istanbul ignore next */
        (cov_3nx7pz3e9().b[4][1]++, 'Error al cerrar sesión'));
      } else
      /* istanbul ignore next */
      {
        cov_3nx7pz3e9().b[3][1]++;
      }
      const data =
      /* istanbul ignore next */
      (cov_3nx7pz3e9().s[33]++, await response.json());
      /* istanbul ignore next */
      cov_3nx7pz3e9().s[34]++;
      if (data.success) {
        /* istanbul ignore next */
        cov_3nx7pz3e9().b[5][0]++;
        cov_3nx7pz3e9().s[35]++;
        // Actualizar estado local
        setSessions(prev => {
          /* istanbul ignore next */
          cov_3nx7pz3e9().f[6]++;
          cov_3nx7pz3e9().s[36]++;
          return prev.filter(session => {
            /* istanbul ignore next */
            cov_3nx7pz3e9().f[7]++;
            cov_3nx7pz3e9().s[37]++;
            return session.id !== sessionId;
          });
        });
        /* istanbul ignore next */
        cov_3nx7pz3e9().s[38]++;
        _sonner.toast.success('Sesión cerrada exitosamente');
        /* istanbul ignore next */
        cov_3nx7pz3e9().s[39]++;
        return true;
      } else {
        /* istanbul ignore next */
        cov_3nx7pz3e9().b[5][1]++;
        cov_3nx7pz3e9().s[40]++;
        throw new Error(
        /* istanbul ignore next */
        (cov_3nx7pz3e9().b[6][0]++, data.error) ||
        /* istanbul ignore next */
        (cov_3nx7pz3e9().b[6][1]++, 'Error al cerrar sesión'));
      }
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_3nx7pz3e9().s[41]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_3nx7pz3e9().b[7][0]++, err.message) :
      /* istanbul ignore next */
      (cov_3nx7pz3e9().b[7][1]++, 'Error desconocido'));
      /* istanbul ignore next */
      cov_3nx7pz3e9().s[42]++;
      _sonner.toast.error('Error al cerrar sesión: ' + errorMessage);
      /* istanbul ignore next */
      cov_3nx7pz3e9().s[43]++;
      return false;
    }
  }, []));
  // Función para cerrar todas las sesiones remotas
  const revokeAllSessions =
  /* istanbul ignore next */
  (cov_3nx7pz3e9().s[44]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_3nx7pz3e9().f[8]++;
    cov_3nx7pz3e9().s[45]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_3nx7pz3e9().s[46]++, await fetch('/api/user/sessions', {
        method: 'DELETE',
        headers: {
          'Content-Type': 'application/json'
        }
      }));
      /* istanbul ignore next */
      cov_3nx7pz3e9().s[47]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_3nx7pz3e9().b[8][0]++;
        const errorData =
        /* istanbul ignore next */
        (cov_3nx7pz3e9().s[48]++, await response.json());
        /* istanbul ignore next */
        cov_3nx7pz3e9().s[49]++;
        throw new Error(
        /* istanbul ignore next */
        (cov_3nx7pz3e9().b[9][0]++, errorData.error) ||
        /* istanbul ignore next */
        (cov_3nx7pz3e9().b[9][1]++, 'Error al cerrar sesiones'));
      } else
      /* istanbul ignore next */
      {
        cov_3nx7pz3e9().b[8][1]++;
      }
      const data =
      /* istanbul ignore next */
      (cov_3nx7pz3e9().s[50]++, await response.json());
      /* istanbul ignore next */
      cov_3nx7pz3e9().s[51]++;
      if (data.success) {
        /* istanbul ignore next */
        cov_3nx7pz3e9().b[10][0]++;
        cov_3nx7pz3e9().s[52]++;
        // Actualizar estado local - mantener solo la sesión actual
        setSessions(prev => {
          /* istanbul ignore next */
          cov_3nx7pz3e9().f[9]++;
          cov_3nx7pz3e9().s[53]++;
          return prev.filter(session => {
            /* istanbul ignore next */
            cov_3nx7pz3e9().f[10]++;
            cov_3nx7pz3e9().s[54]++;
            return session.is_current;
          });
        });
        /* istanbul ignore next */
        cov_3nx7pz3e9().s[55]++;
        _sonner.toast.success('Todas las sesiones remotas han sido cerradas');
        /* istanbul ignore next */
        cov_3nx7pz3e9().s[56]++;
        return true;
      } else {
        /* istanbul ignore next */
        cov_3nx7pz3e9().b[10][1]++;
        cov_3nx7pz3e9().s[57]++;
        throw new Error(
        /* istanbul ignore next */
        (cov_3nx7pz3e9().b[11][0]++, data.error) ||
        /* istanbul ignore next */
        (cov_3nx7pz3e9().b[11][1]++, 'Error al cerrar sesiones'));
      }
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_3nx7pz3e9().s[58]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_3nx7pz3e9().b[12][0]++, err.message) :
      /* istanbul ignore next */
      (cov_3nx7pz3e9().b[12][1]++, 'Error desconocido'));
      /* istanbul ignore next */
      cov_3nx7pz3e9().s[59]++;
      _sonner.toast.error('Error al cerrar sesiones: ' + errorMessage);
      /* istanbul ignore next */
      cov_3nx7pz3e9().s[60]++;
      return false;
    }
  }, []));
  // Función para marcar dispositivo como confiable
  const trustDevice =
  /* istanbul ignore next */
  (cov_3nx7pz3e9().s[61]++, (0, _react.useCallback)(async sessionId => {
    /* istanbul ignore next */
    cov_3nx7pz3e9().f[11]++;
    cov_3nx7pz3e9().s[62]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_3nx7pz3e9().s[63]++, await fetch(`/api/user/sessions/${sessionId}`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          is_trusted: true
        })
      }));
      /* istanbul ignore next */
      cov_3nx7pz3e9().s[64]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_3nx7pz3e9().b[13][0]++;
        const errorData =
        /* istanbul ignore next */
        (cov_3nx7pz3e9().s[65]++, await response.json());
        /* istanbul ignore next */
        cov_3nx7pz3e9().s[66]++;
        throw new Error(
        /* istanbul ignore next */
        (cov_3nx7pz3e9().b[14][0]++, errorData.error) ||
        /* istanbul ignore next */
        (cov_3nx7pz3e9().b[14][1]++, 'Error al marcar dispositivo como confiable'));
      } else
      /* istanbul ignore next */
      {
        cov_3nx7pz3e9().b[13][1]++;
      }
      const data =
      /* istanbul ignore next */
      (cov_3nx7pz3e9().s[67]++, await response.json());
      /* istanbul ignore next */
      cov_3nx7pz3e9().s[68]++;
      if (data.success) {
        /* istanbul ignore next */
        cov_3nx7pz3e9().b[15][0]++;
        cov_3nx7pz3e9().s[69]++;
        // Actualizar estado local
        setSessions(prev => {
          /* istanbul ignore next */
          cov_3nx7pz3e9().f[12]++;
          cov_3nx7pz3e9().s[70]++;
          return prev.map(session => {
            /* istanbul ignore next */
            cov_3nx7pz3e9().f[13]++;
            cov_3nx7pz3e9().s[71]++;
            return session.id === sessionId ?
            /* istanbul ignore next */
            (cov_3nx7pz3e9().b[16][0]++, {
              ...session,
              is_trusted: true
            }) :
            /* istanbul ignore next */
            (cov_3nx7pz3e9().b[16][1]++, session);
          });
        });
        /* istanbul ignore next */
        cov_3nx7pz3e9().s[72]++;
        _sonner.toast.success('Dispositivo marcado como confiable');
        /* istanbul ignore next */
        cov_3nx7pz3e9().s[73]++;
        return true;
      } else {
        /* istanbul ignore next */
        cov_3nx7pz3e9().b[15][1]++;
        cov_3nx7pz3e9().s[74]++;
        throw new Error(
        /* istanbul ignore next */
        (cov_3nx7pz3e9().b[17][0]++, data.error) ||
        /* istanbul ignore next */
        (cov_3nx7pz3e9().b[17][1]++, 'Error al marcar dispositivo como confiable'));
      }
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_3nx7pz3e9().s[75]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_3nx7pz3e9().b[18][0]++, err.message) :
      /* istanbul ignore next */
      (cov_3nx7pz3e9().b[18][1]++, 'Error desconocido'));
      /* istanbul ignore next */
      cov_3nx7pz3e9().s[76]++;
      _sonner.toast.error('Error al marcar dispositivo: ' + errorMessage);
      /* istanbul ignore next */
      cov_3nx7pz3e9().s[77]++;
      return false;
    }
  }, []));
  // Función para refrescar sesiones
  const refreshSessions =
  /* istanbul ignore next */
  (cov_3nx7pz3e9().s[78]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_3nx7pz3e9().f[14]++;
    cov_3nx7pz3e9().s[79]++;
    await fetchSessions();
  }, [fetchSessions]));
  // Cargar sesiones al montar el componente
  /* istanbul ignore next */
  cov_3nx7pz3e9().s[80]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_3nx7pz3e9().f[15]++;
    cov_3nx7pz3e9().s[81]++;
    fetchSessions();
  }, [fetchSessions]);
  // Auto-refresh cada 30 segundos
  /* istanbul ignore next */
  cov_3nx7pz3e9().s[82]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_3nx7pz3e9().f[16]++;
    const interval =
    /* istanbul ignore next */
    (cov_3nx7pz3e9().s[83]++, setInterval(() => {
      /* istanbul ignore next */
      cov_3nx7pz3e9().f[17]++;
      cov_3nx7pz3e9().s[84]++;
      fetchSessions();
    }, 30000));
    /* istanbul ignore next */
    cov_3nx7pz3e9().s[85]++;
    return () => {
      /* istanbul ignore next */
      cov_3nx7pz3e9().f[18]++;
      cov_3nx7pz3e9().s[86]++;
      return clearInterval(interval);
    };
  }, [fetchSessions]);
  // Calcular estadísticas
  const totalSessions =
  /* istanbul ignore next */
  (cov_3nx7pz3e9().s[87]++, sessions.length);
  const currentSession =
  /* istanbul ignore next */
  (cov_3nx7pz3e9().s[88]++,
  /* istanbul ignore next */
  (cov_3nx7pz3e9().b[19][0]++, sessions.find(session => {
    /* istanbul ignore next */
    cov_3nx7pz3e9().f[19]++;
    cov_3nx7pz3e9().s[89]++;
    return session.is_current;
  })) ||
  /* istanbul ignore next */
  (cov_3nx7pz3e9().b[19][1]++, null));
  const remoteSessions =
  /* istanbul ignore next */
  (cov_3nx7pz3e9().s[90]++, sessions.filter(session => {
    /* istanbul ignore next */
    cov_3nx7pz3e9().f[20]++;
    cov_3nx7pz3e9().s[91]++;
    return !session.is_current;
  }));
  /* istanbul ignore next */
  cov_3nx7pz3e9().s[92]++;
  return {
    // Estado
    sessions,
    isLoading,
    error,
    // Funciones
    fetchSessions,
    revokeSession,
    revokeAllSessions,
    trustDevice,
    refreshSessions,
    // Estadísticas
    totalSessions,
    currentSession,
    remoteSessions
  };
}
function useSessionRegistration() {
  /* istanbul ignore next */
  cov_3nx7pz3e9().f[21]++;
  const [isRegistered, setIsRegistered] =
  /* istanbul ignore next */
  (cov_3nx7pz3e9().s[93]++, (0, _react.useState)(false));
  const registerSession =
  /* istanbul ignore next */
  (cov_3nx7pz3e9().s[94]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_3nx7pz3e9().f[22]++;
    cov_3nx7pz3e9().s[95]++;
    if (isRegistered) {
      /* istanbul ignore next */
      cov_3nx7pz3e9().b[20][0]++;
      cov_3nx7pz3e9().s[96]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_3nx7pz3e9().b[20][1]++;
    }
    cov_3nx7pz3e9().s[97]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_3nx7pz3e9().s[98]++, await fetch('/api/user/sessions', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          register_current: true
        })
      }));
      /* istanbul ignore next */
      cov_3nx7pz3e9().s[99]++;
      if (response.ok) {
        /* istanbul ignore next */
        cov_3nx7pz3e9().b[21][0]++;
        const data =
        /* istanbul ignore next */
        (cov_3nx7pz3e9().s[100]++, await response.json());
        /* istanbul ignore next */
        cov_3nx7pz3e9().s[101]++;
        setIsRegistered(true);
        /* istanbul ignore next */
        cov_3nx7pz3e9().s[102]++;
        console.log('Sesión registrada:', data.session);
        // Analizar sesión para detectar anomalías
        /* istanbul ignore next */
        cov_3nx7pz3e9().s[103]++;
        if (data.session) {
          /* istanbul ignore next */
          cov_3nx7pz3e9().b[22][0]++;
          cov_3nx7pz3e9().s[104]++;
          try {
            /* istanbul ignore next */
            cov_3nx7pz3e9().s[105]++;
            await (0, _anomalyDetection.analyzeSessionForAnomalies)({
              userId: data.session.user_id,
              sessionId: data.session.id,
              ipAddress: data.session.ip_address,
              userAgent: data.session.user_agent,
              deviceType: data.session.device_type,
              location: data.session.location,
              timestamp: data.session.created_at
            });
          } catch (anomalyError) {
            /* istanbul ignore next */
            cov_3nx7pz3e9().s[106]++;
            console.error('Error en análisis de anomalías:', anomalyError);
          }
        } else
        /* istanbul ignore next */
        {
          cov_3nx7pz3e9().b[22][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_3nx7pz3e9().b[21][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_3nx7pz3e9().s[107]++;
      console.error('Error al registrar sesión:', error);
    }
  }, [isRegistered]));
  // Registrar sesión al cargar la página
  /* istanbul ignore next */
  cov_3nx7pz3e9().s[108]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_3nx7pz3e9().f[23]++;
    cov_3nx7pz3e9().s[109]++;
    registerSession();
  }, [registerSession]);
  /* istanbul ignore next */
  cov_3nx7pz3e9().s[110]++;
  return {
    registerSession,
    isRegistered
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,