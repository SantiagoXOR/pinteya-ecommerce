82167cfa4e256ef03414d61a33f4af1c
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_1cel840kw9() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\user\\trusted-devices\\route.ts";
  var hash = "247af908b83d9001298b0f2029d359e3dfa34a62";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\user\\trusted-devices\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 20
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 23
        }
      },
      "7": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "8": {
        start: {
          line: 24,
          column: 16
        },
        end: {
          line: 24,
          column: 54
        }
      },
      "9": {
        start: {
          line: 25,
          column: 18
        },
        end: {
          line: 25,
          column: 66
        }
      },
      "10": {
        start: {
          line: 26,
          column: 24
        },
        end: {
          line: 26,
          column: 74
        }
      },
      "11": {
        start: {
          line: 27,
          column: 16
        },
        end: {
          line: 27,
          column: 24
        }
      },
      "12": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 79,
          column: 5
        }
      },
      "13": {
        start: {
          line: 30,
          column: 24
        },
        end: {
          line: 30,
          column: 49
        }
      },
      "14": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 37,
          column: 9
        }
      },
      "15": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 36,
          column: 15
        }
      },
      "16": {
        start: {
          line: 38,
          column: 23
        },
        end: {
          line: 38,
          column: 38
        }
      },
      "17": {
        start: {
          line: 40,
          column: 48
        },
        end: {
          line: 53,
          column: 10
        }
      },
      "18": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 61,
          column: 9
        }
      },
      "19": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 80
        }
      },
      "20": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 60,
          column: 15
        }
      },
      "21": {
        start: {
          line: 63,
          column: 38
        },
        end: {
          line: 66,
          column: 21
        }
      },
      "22": {
        start: {
          line: 63,
          column: 69
        },
        end: {
          line: 66,
          column: 13
        }
      },
      "23": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 71,
          column: 11
        }
      },
      "24": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 72
        }
      },
      "25": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 78,
          column: 11
        }
      },
      "26": {
        start: {
          line: 82,
          column: 4
        },
        end: {
          line: 137,
          column: 5
        }
      },
      "27": {
        start: {
          line: 83,
          column: 24
        },
        end: {
          line: 83,
          column: 49
        }
      },
      "28": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 90,
          column: 9
        }
      },
      "29": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 89,
          column: 15
        }
      },
      "30": {
        start: {
          line: 91,
          column: 23
        },
        end: {
          line: 91,
          column: 38
        }
      },
      "31": {
        start: {
          line: 92,
          column: 21
        },
        end: {
          line: 92,
          column: 41
        }
      },
      "32": {
        start: {
          line: 93,
          column: 44
        },
        end: {
          line: 93,
          column: 48
        }
      },
      "33": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 100,
          column: 9
        }
      },
      "34": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 99,
          column: 15
        }
      },
      "35": {
        start: {
          line: 102,
          column: 48
        },
        end: {
          line: 105,
          column: 71
        }
      },
      "36": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 113,
          column: 9
        }
      },
      "37": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 80
        }
      },
      "38": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 112,
          column: 15
        }
      },
      "39": {
        start: {
          line: 115,
          column: 28
        },
        end: {
          line: 115,
          column: 72
        }
      },
      "40": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 121,
          column: 24
        }
      },
      "41": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 129,
          column: 11
        }
      },
      "42": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 131,
          column: 73
        }
      },
      "43": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 136,
          column: 11
        }
      },
      "44": {
        start: {
          line: 141,
          column: 21
        },
        end: {
          line: 141,
          column: 23
        }
      },
      "45": {
        start: {
          line: 143,
          column: 16
        },
        end: {
          line: 143,
          column: 26
        }
      },
      "46": {
        start: {
          line: 144,
          column: 25
        },
        end: {
          line: 144,
          column: 55
        }
      },
      "47": {
        start: {
          line: 145,
          column: 22
        },
        end: {
          line: 145,
          column: 49
        }
      },
      "48": {
        start: {
          line: 147,
          column: 22
        },
        end: {
          line: 147,
          column: 95
        }
      },
      "49": {
        start: {
          line: 148,
          column: 4
        },
        end: {
          line: 150,
          column: 45
        }
      },
      "50": {
        start: {
          line: 148,
          column: 24
        },
        end: {
          line: 148,
          column: 41
        }
      },
      "51": {
        start: {
          line: 149,
          column: 9
        },
        end: {
          line: 150,
          column: 45
        }
      },
      "52": {
        start: {
          line: 149,
          column: 28
        },
        end: {
          line: 149,
          column: 45
        }
      },
      "53": {
        start: {
          line: 150,
          column: 9
        },
        end: {
          line: 150,
          column: 45
        }
      },
      "54": {
        start: {
          line: 150,
          column: 28
        },
        end: {
          line: 150,
          column: 45
        }
      },
      "55": {
        start: {
          line: 152,
          column: 26
        },
        end: {
          line: 152,
          column: 97
        }
      },
      "56": {
        start: {
          line: 153,
          column: 4
        },
        end: {
          line: 156,
          column: 50
        }
      },
      "57": {
        start: {
          line: 153,
          column: 27
        },
        end: {
          line: 153,
          column: 44
        }
      },
      "58": {
        start: {
          line: 154,
          column: 9
        },
        end: {
          line: 156,
          column: 50
        }
      },
      "59": {
        start: {
          line: 154,
          column: 33
        },
        end: {
          line: 154,
          column: 50
        }
      },
      "60": {
        start: {
          line: 155,
          column: 9
        },
        end: {
          line: 156,
          column: 50
        }
      },
      "61": {
        start: {
          line: 155,
          column: 34
        },
        end: {
          line: 155,
          column: 51
        }
      },
      "62": {
        start: {
          line: 156,
          column: 9
        },
        end: {
          line: 156,
          column: 50
        }
      },
      "63": {
        start: {
          line: 156,
          column: 34
        },
        end: {
          line: 156,
          column: 50
        }
      },
      "64": {
        start: {
          line: 158,
          column: 4
        },
        end: {
          line: 159,
          column: 62
        }
      },
      "65": {
        start: {
          line: 158,
          column: 42
        },
        end: {
          line: 158,
          column: 58
        }
      },
      "66": {
        start: {
          line: 159,
          column: 9
        },
        end: {
          line: 159,
          column: 62
        }
      },
      "67": {
        start: {
          line: 159,
          column: 46
        },
        end: {
          line: 159,
          column: 62
        }
      },
      "68": {
        start: {
          line: 161,
          column: 4
        },
        end: {
          line: 161,
          column: 41
        }
      },
      "69": {
        start: {
          line: 161,
          column: 25
        },
        end: {
          line: 161,
          column: 41
        }
      },
      "70": {
        start: {
          line: 163,
          column: 4
        },
        end: {
          line: 163,
          column: 50
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "GET",
        decl: {
          start: {
            line: 28,
            column: 15
          },
          end: {
            line: 28,
            column: 18
          }
        },
        loc: {
          start: {
            line: 28,
            column: 28
          },
          end: {
            line: 80,
            column: 1
          }
        },
        line: 28
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 63,
            column: 58
          },
          end: {
            line: 63,
            column: 59
          }
        },
        loc: {
          start: {
            line: 63,
            column: 69
          },
          end: {
            line: 66,
            column: 13
          }
        },
        line: 63
      },
      "6": {
        name: "POST",
        decl: {
          start: {
            line: 81,
            column: 15
          },
          end: {
            line: 81,
            column: 19
          }
        },
        loc: {
          start: {
            line: 81,
            column: 29
          },
          end: {
            line: 138,
            column: 1
          }
        },
        line: 81
      },
      "7": {
        name: "calculateTrustLevel",
        decl: {
          start: {
            line: 140,
            column: 9
          },
          end: {
            line: 140,
            column: 28
          }
        },
        loc: {
          start: {
            line: 140,
            column: 37
          },
          end: {
            line: 164,
            column: 1
          }
        },
        line: 140
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "1": {
        loc: {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 61,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 61,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "2": {
        loc: {
          start: {
            line: 63,
            column: 38
          },
          end: {
            line: 66,
            column: 21
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 38
          },
          end: {
            line: 66,
            column: 15
          }
        }, {
          start: {
            line: 66,
            column: 19
          },
          end: {
            line: 66,
            column: 21
          }
        }],
        line: 63
      },
      "3": {
        loc: {
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 90,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 90,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 84
      },
      "4": {
        loc: {
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 100,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 100,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "5": {
        loc: {
          start: {
            line: 104,
            column: 25
          },
          end: {
            line: 104,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 104,
            column: 25
          },
          end: {
            line: 104,
            column: 36
          }
        }, {
          start: {
            line: 104,
            column: 40
          },
          end: {
            line: 104,
            column: 66
          }
        }],
        line: 104
      },
      "6": {
        loc: {
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 113,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 113,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "7": {
        loc: {
          start: {
            line: 148,
            column: 4
          },
          end: {
            line: 150,
            column: 45
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 148,
            column: 4
          },
          end: {
            line: 150,
            column: 45
          }
        }, {
          start: {
            line: 149,
            column: 9
          },
          end: {
            line: 150,
            column: 45
          }
        }],
        line: 148
      },
      "8": {
        loc: {
          start: {
            line: 149,
            column: 9
          },
          end: {
            line: 150,
            column: 45
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 149,
            column: 9
          },
          end: {
            line: 150,
            column: 45
          }
        }, {
          start: {
            line: 150,
            column: 9
          },
          end: {
            line: 150,
            column: 45
          }
        }],
        line: 149
      },
      "9": {
        loc: {
          start: {
            line: 150,
            column: 9
          },
          end: {
            line: 150,
            column: 45
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 9
          },
          end: {
            line: 150,
            column: 45
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 150
      },
      "10": {
        loc: {
          start: {
            line: 153,
            column: 4
          },
          end: {
            line: 156,
            column: 50
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 153,
            column: 4
          },
          end: {
            line: 156,
            column: 50
          }
        }, {
          start: {
            line: 154,
            column: 9
          },
          end: {
            line: 156,
            column: 50
          }
        }],
        line: 153
      },
      "11": {
        loc: {
          start: {
            line: 154,
            column: 9
          },
          end: {
            line: 156,
            column: 50
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 154,
            column: 9
          },
          end: {
            line: 156,
            column: 50
          }
        }, {
          start: {
            line: 155,
            column: 9
          },
          end: {
            line: 156,
            column: 50
          }
        }],
        line: 154
      },
      "12": {
        loc: {
          start: {
            line: 155,
            column: 9
          },
          end: {
            line: 156,
            column: 50
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 155,
            column: 9
          },
          end: {
            line: 156,
            column: 50
          }
        }, {
          start: {
            line: 156,
            column: 9
          },
          end: {
            line: 156,
            column: 50
          }
        }],
        line: 155
      },
      "13": {
        loc: {
          start: {
            line: 156,
            column: 9
          },
          end: {
            line: 156,
            column: 50
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 156,
            column: 9
          },
          end: {
            line: 156,
            column: 50
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 156
      },
      "14": {
        loc: {
          start: {
            line: 158,
            column: 4
          },
          end: {
            line: 159,
            column: 62
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 158,
            column: 4
          },
          end: {
            line: 159,
            column: 62
          }
        }, {
          start: {
            line: 159,
            column: 9
          },
          end: {
            line: 159,
            column: 62
          }
        }],
        line: 158
      },
      "15": {
        loc: {
          start: {
            line: 159,
            column: 9
          },
          end: {
            line: 159,
            column: 62
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 159,
            column: 9
          },
          end: {
            line: 159,
            column: 62
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 159
      },
      "16": {
        loc: {
          start: {
            line: 161,
            column: 4
          },
          end: {
            line: 161,
            column: 41
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 161,
            column: 4
          },
          end: {
            line: 161,
            column: 41
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 161
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\user\\trusted-devices\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - API DE DISPOSITIVOS DE CONFIANZA\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { auth } from '@/lib/auth/config';\r\nimport { supabaseAdmin } from '@/lib/integrations/supabase';\r\nimport { logSecurityActivity, getRequestInfo } from '@/lib/activity/activityLogger';\r\n\r\n// GET - Obtener dispositivos de confianza del usuario\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    const session = await auth();\r\n    if (!session?.user?.id) {\r\n      return NextResponse.json(\r\n        { error: 'No autorizado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    const userId = session.user.id;\r\n\r\n    // Obtener dispositivos de confianza\r\n    const { data: trustedDevices, error } = await supabaseAdmin\r\n      .from('user_sessions')\r\n      .select(`\r\n        id,\r\n        device_type,\r\n        device_name,\r\n        browser,\r\n        os,\r\n        ip_address,\r\n        location,\r\n        is_trusted,\r\n        last_activity,\r\n        created_at\r\n      `)\r\n      .eq('user_id', userId)\r\n      .eq('is_trusted', true)\r\n      .order('last_activity', { ascending: false });\r\n\r\n    if (error) {\r\n      console.error('Error al obtener dispositivos de confianza:', error);\r\n      return NextResponse.json(\r\n        { error: 'Error al obtener dispositivos de confianza' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Calcular nivel de confianza para cada dispositivo\r\n    const devicesWithTrustLevel = trustedDevices?.map(device => ({\r\n      ...device,\r\n      trust_level: calculateTrustLevel(device),\r\n    })) || [];\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      devices: devicesWithTrustLevel,\r\n      total: devicesWithTrustLevel.length,\r\n    });\r\n  } catch (error) {\r\n    console.error('Error en GET /api/user/trusted-devices:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// POST - Marcar dispositivo actual como confiable\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    const session = await auth();\r\n    if (!session?.user?.id) {\r\n      return NextResponse.json(\r\n        { error: 'No autorizado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    const userId = session.user.id;\r\n    const body = await request.json();\r\n    const { session_id, device_name } = body;\r\n\r\n    if (!session_id) {\r\n      return NextResponse.json(\r\n        { error: 'ID de sesi\xF3n requerido' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Marcar sesi\xF3n como confiable\r\n    const { data: updatedSession, error } = await supabaseAdmin\r\n      .from('user_sessions')\r\n      .update({\r\n        is_trusted: true,\r\n        device_name: device_name || 'Dispositivo de confianza',\r\n      })\r\n      .eq('id', session_id)\r\n      .eq('user_id', userId)\r\n      .select()\r\n      .single();\r\n\r\n    if (error) {\r\n      console.error('Error al marcar dispositivo como confiable:', error);\r\n      return NextResponse.json(\r\n        { error: 'Error al marcar dispositivo como confiable' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Registrar actividad de seguridad\r\n    const requestInfo = getRequestInfo(request);\r\n    await logSecurityActivity(\r\n      userId,\r\n      'trust_device',\r\n      {\r\n        session_id,\r\n        device_name: updatedSession.device_name,\r\n        device_type: updatedSession.device_type,\r\n        ip_address: updatedSession.ip_address,\r\n      },\r\n      requestInfo\r\n    );\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      device: {\r\n        ...updatedSession,\r\n        trust_level: calculateTrustLevel(updatedSession),\r\n      },\r\n      message: 'Dispositivo marcado como confiable',\r\n    });\r\n  } catch (error) {\r\n    console.error('Error en POST /api/user/trusted-devices:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// Funci\xF3n para calcular nivel de confianza\r\nfunction calculateTrustLevel(device: any): number {\r\n  let trustLevel = 50; // Base\r\n\r\n  // Factores que aumentan la confianza\r\n  const now = new Date();\r\n  const lastActivity = new Date(device.last_activity);\r\n  const createdAt = new Date(device.created_at);\r\n  \r\n  // Antig\xFCedad del dispositivo (m\xE1ximo +30 puntos)\r\n  const ageInDays = Math.floor((now.getTime() - createdAt.getTime()) / (1000 * 60 * 60 * 24));\r\n  if (ageInDays > 30) trustLevel += 30;\r\n  else if (ageInDays > 7) trustLevel += 20;\r\n  else if (ageInDays > 1) trustLevel += 10;\r\n\r\n  // Actividad reciente (m\xE1ximo +20 puntos)\r\n  const inactiveHours = Math.floor((now.getTime() - lastActivity.getTime()) / (1000 * 60 * 60));\r\n  if (inactiveHours < 1) trustLevel += 20;\r\n  else if (inactiveHours < 24) trustLevel += 15;\r\n  else if (inactiveHours < 168) trustLevel += 10; // 1 semana\r\n  else if (inactiveHours < 720) trustLevel += 5; // 1 mes\r\n\r\n  // Tipo de dispositivo\r\n  if (device.device_type === 'desktop') trustLevel += 5;\r\n  else if (device.device_type === 'mobile') trustLevel += 3;\r\n\r\n  // Ubicaci\xF3n conocida (si est\xE1 disponible)\r\n  if (device.location) trustLevel += 5;\r\n\r\n  // Asegurar que est\xE9 en el rango 0-100\r\n  return Math.min(100, Math.max(0, trustLevel));\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "POST", "runtime", "request", "session", "auth", "user", "id", "NextResponse", "json", "error", "status", "userId", "data", "trustedDevices", "supabaseAdmin", "from", "select", "eq", "order", "ascending", "console", "devicesWithTrustLevel", "map", "device", "trust_level", "calculateTrustLevel", "success", "devices", "total", "length", "body", "session_id", "device_name", "updatedSession", "update", "is_trusted", "single", "requestInfo", "getRequestInfo", "logSecurityActivity", "device_type", "ip_address", "message", "trustLevel", "now", "Date", "lastActivity", "last_activity", "createdAt", "created_at", "ageInDays", "Math", "floor", "getTime", "inactiveHours", "location", "min", "max"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "247af908b83d9001298b0f2029d359e3dfa34a62"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1cel840kw9 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1cel840kw9();
cov_1cel840kw9().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1cel840kw9().f[0]++;
  cov_1cel840kw9().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1cel840kw9().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1cel840kw9().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_1cel840kw9().f[1]++;
    cov_1cel840kw9().s[4]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_1cel840kw9().f[2]++;
    cov_1cel840kw9().s[5]++;
    return POST;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_1cel840kw9().f[3]++;
    cov_1cel840kw9().s[6]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_1cel840kw9().s[7]++, require("next/server"));
const _config =
/* istanbul ignore next */
(cov_1cel840kw9().s[8]++, require("../../../../lib/auth/config"));
const _supabase =
/* istanbul ignore next */
(cov_1cel840kw9().s[9]++, require("../../../../lib/integrations/supabase"));
const _activityLogger =
/* istanbul ignore next */
(cov_1cel840kw9().s[10]++, require("../../../../lib/activity/activityLogger"));
const runtime =
/* istanbul ignore next */
(cov_1cel840kw9().s[11]++, 'nodejs');
async function GET(request) {
  /* istanbul ignore next */
  cov_1cel840kw9().f[4]++;
  cov_1cel840kw9().s[12]++;
  try {
    const session =
    /* istanbul ignore next */
    (cov_1cel840kw9().s[13]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_1cel840kw9().s[14]++;
    if (!session?.user?.id) {
      /* istanbul ignore next */
      cov_1cel840kw9().b[0][0]++;
      cov_1cel840kw9().s[15]++;
      return _server.NextResponse.json({
        error: 'No autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_1cel840kw9().b[0][1]++;
    }
    const userId =
    /* istanbul ignore next */
    (cov_1cel840kw9().s[16]++, session.user.id);
    // Obtener dispositivos de confianza
    const {
      data: trustedDevices,
      error
    } =
    /* istanbul ignore next */
    (cov_1cel840kw9().s[17]++, await _supabase.supabaseAdmin.from('user_sessions').select(`
        id,
        device_type,
        device_name,
        browser,
        os,
        ip_address,
        location,
        is_trusted,
        last_activity,
        created_at
      `).eq('user_id', userId).eq('is_trusted', true).order('last_activity', {
      ascending: false
    }));
    /* istanbul ignore next */
    cov_1cel840kw9().s[18]++;
    if (error) {
      /* istanbul ignore next */
      cov_1cel840kw9().b[1][0]++;
      cov_1cel840kw9().s[19]++;
      console.error('Error al obtener dispositivos de confianza:', error);
      /* istanbul ignore next */
      cov_1cel840kw9().s[20]++;
      return _server.NextResponse.json({
        error: 'Error al obtener dispositivos de confianza'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_1cel840kw9().b[1][1]++;
    }
    // Calcular nivel de confianza para cada dispositivo
    const devicesWithTrustLevel =
    /* istanbul ignore next */
    (cov_1cel840kw9().s[21]++,
    /* istanbul ignore next */
    (cov_1cel840kw9().b[2][0]++, trustedDevices?.map(device => {
      /* istanbul ignore next */
      cov_1cel840kw9().f[5]++;
      cov_1cel840kw9().s[22]++;
      return {
        ...device,
        trust_level: calculateTrustLevel(device)
      };
    })) ||
    /* istanbul ignore next */
    (cov_1cel840kw9().b[2][1]++, []));
    /* istanbul ignore next */
    cov_1cel840kw9().s[23]++;
    return _server.NextResponse.json({
      success: true,
      devices: devicesWithTrustLevel,
      total: devicesWithTrustLevel.length
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1cel840kw9().s[24]++;
    console.error('Error en GET /api/user/trusted-devices:', error);
    /* istanbul ignore next */
    cov_1cel840kw9().s[25]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
async function POST(request) {
  /* istanbul ignore next */
  cov_1cel840kw9().f[6]++;
  cov_1cel840kw9().s[26]++;
  try {
    const session =
    /* istanbul ignore next */
    (cov_1cel840kw9().s[27]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_1cel840kw9().s[28]++;
    if (!session?.user?.id) {
      /* istanbul ignore next */
      cov_1cel840kw9().b[3][0]++;
      cov_1cel840kw9().s[29]++;
      return _server.NextResponse.json({
        error: 'No autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_1cel840kw9().b[3][1]++;
    }
    const userId =
    /* istanbul ignore next */
    (cov_1cel840kw9().s[30]++, session.user.id);
    const body =
    /* istanbul ignore next */
    (cov_1cel840kw9().s[31]++, await request.json());
    const {
      session_id,
      device_name
    } =
    /* istanbul ignore next */
    (cov_1cel840kw9().s[32]++, body);
    /* istanbul ignore next */
    cov_1cel840kw9().s[33]++;
    if (!session_id) {
      /* istanbul ignore next */
      cov_1cel840kw9().b[4][0]++;
      cov_1cel840kw9().s[34]++;
      return _server.NextResponse.json({
        error: 'ID de sesiÃ³n requerido'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_1cel840kw9().b[4][1]++;
    }
    // Marcar sesiÃ³n como confiable
    const {
      data: updatedSession,
      error
    } =
    /* istanbul ignore next */
    (cov_1cel840kw9().s[35]++, await _supabase.supabaseAdmin.from('user_sessions').update({
      is_trusted: true,
      device_name:
      /* istanbul ignore next */
      (cov_1cel840kw9().b[5][0]++, device_name) ||
      /* istanbul ignore next */
      (cov_1cel840kw9().b[5][1]++, 'Dispositivo de confianza')
    }).eq('id', session_id).eq('user_id', userId).select().single());
    /* istanbul ignore next */
    cov_1cel840kw9().s[36]++;
    if (error) {
      /* istanbul ignore next */
      cov_1cel840kw9().b[6][0]++;
      cov_1cel840kw9().s[37]++;
      console.error('Error al marcar dispositivo como confiable:', error);
      /* istanbul ignore next */
      cov_1cel840kw9().s[38]++;
      return _server.NextResponse.json({
        error: 'Error al marcar dispositivo como confiable'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_1cel840kw9().b[6][1]++;
    }
    // Registrar actividad de seguridad
    const requestInfo =
    /* istanbul ignore next */
    (cov_1cel840kw9().s[39]++, (0, _activityLogger.getRequestInfo)(request));
    /* istanbul ignore next */
    cov_1cel840kw9().s[40]++;
    await (0, _activityLogger.logSecurityActivity)(userId, 'trust_device', {
      session_id,
      device_name: updatedSession.device_name,
      device_type: updatedSession.device_type,
      ip_address: updatedSession.ip_address
    }, requestInfo);
    /* istanbul ignore next */
    cov_1cel840kw9().s[41]++;
    return _server.NextResponse.json({
      success: true,
      device: {
        ...updatedSession,
        trust_level: calculateTrustLevel(updatedSession)
      },
      message: 'Dispositivo marcado como confiable'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1cel840kw9().s[42]++;
    console.error('Error en POST /api/user/trusted-devices:', error);
    /* istanbul ignore next */
    cov_1cel840kw9().s[43]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
// FunciÃ³n para calcular nivel de confianza
function calculateTrustLevel(device) {
  /* istanbul ignore next */
  cov_1cel840kw9().f[7]++;
  let trustLevel =
  /* istanbul ignore next */
  (cov_1cel840kw9().s[44]++, 50); // Base
  // Factores que aumentan la confianza
  const now =
  /* istanbul ignore next */
  (cov_1cel840kw9().s[45]++, new Date());
  const lastActivity =
  /* istanbul ignore next */
  (cov_1cel840kw9().s[46]++, new Date(device.last_activity));
  const createdAt =
  /* istanbul ignore next */
  (cov_1cel840kw9().s[47]++, new Date(device.created_at));
  // AntigÃ¼edad del dispositivo (mÃ¡ximo +30 puntos)
  const ageInDays =
  /* istanbul ignore next */
  (cov_1cel840kw9().s[48]++, Math.floor((now.getTime() - createdAt.getTime()) / (1000 * 60 * 60 * 24)));
  /* istanbul ignore next */
  cov_1cel840kw9().s[49]++;
  if (ageInDays > 30) {
    /* istanbul ignore next */
    cov_1cel840kw9().b[7][0]++;
    cov_1cel840kw9().s[50]++;
    trustLevel += 30;
  } else {
    /* istanbul ignore next */
    cov_1cel840kw9().b[7][1]++;
    cov_1cel840kw9().s[51]++;
    if (ageInDays > 7) {
      /* istanbul ignore next */
      cov_1cel840kw9().b[8][0]++;
      cov_1cel840kw9().s[52]++;
      trustLevel += 20;
    } else {
      /* istanbul ignore next */
      cov_1cel840kw9().b[8][1]++;
      cov_1cel840kw9().s[53]++;
      if (ageInDays > 1) {
        /* istanbul ignore next */
        cov_1cel840kw9().b[9][0]++;
        cov_1cel840kw9().s[54]++;
        trustLevel += 10;
      } else
      /* istanbul ignore next */
      {
        cov_1cel840kw9().b[9][1]++;
      }
    }
  }
  // Actividad reciente (mÃ¡ximo +20 puntos)
  const inactiveHours =
  /* istanbul ignore next */
  (cov_1cel840kw9().s[55]++, Math.floor((now.getTime() - lastActivity.getTime()) / (1000 * 60 * 60)));
  /* istanbul ignore next */
  cov_1cel840kw9().s[56]++;
  if (inactiveHours < 1) {
    /* istanbul ignore next */
    cov_1cel840kw9().b[10][0]++;
    cov_1cel840kw9().s[57]++;
    trustLevel += 20;
  } else {
    /* istanbul ignore next */
    cov_1cel840kw9().b[10][1]++;
    cov_1cel840kw9().s[58]++;
    if (inactiveHours < 24) {
      /* istanbul ignore next */
      cov_1cel840kw9().b[11][0]++;
      cov_1cel840kw9().s[59]++;
      trustLevel += 15;
    } else {
      /* istanbul ignore next */
      cov_1cel840kw9().b[11][1]++;
      cov_1cel840kw9().s[60]++;
      if (inactiveHours < 168) {
        /* istanbul ignore next */
        cov_1cel840kw9().b[12][0]++;
        cov_1cel840kw9().s[61]++;
        trustLevel += 10;
      } // 1 semana
      else {
        /* istanbul ignore next */
        cov_1cel840kw9().b[12][1]++;
        cov_1cel840kw9().s[62]++;
        if (inactiveHours < 720) {
          /* istanbul ignore next */
          cov_1cel840kw9().b[13][0]++;
          cov_1cel840kw9().s[63]++;
          trustLevel += 5;
        } else
        /* istanbul ignore next */
        {
          cov_1cel840kw9().b[13][1]++;
        }
      }
    }
  } // 1 mes
  // Tipo de dispositivo
  /* istanbul ignore next */
  cov_1cel840kw9().s[64]++;
  if (device.device_type === 'desktop') {
    /* istanbul ignore next */
    cov_1cel840kw9().b[14][0]++;
    cov_1cel840kw9().s[65]++;
    trustLevel += 5;
  } else {
    /* istanbul ignore next */
    cov_1cel840kw9().b[14][1]++;
    cov_1cel840kw9().s[66]++;
    if (device.device_type === 'mobile') {
      /* istanbul ignore next */
      cov_1cel840kw9().b[15][0]++;
      cov_1cel840kw9().s[67]++;
      trustLevel += 3;
    } else
    /* istanbul ignore next */
    {
      cov_1cel840kw9().b[15][1]++;
    }
  }
  // UbicaciÃ³n conocida (si estÃ¡ disponible)
  /* istanbul ignore next */
  cov_1cel840kw9().s[68]++;
  if (device.location) {
    /* istanbul ignore next */
    cov_1cel840kw9().b[16][0]++;
    cov_1cel840kw9().s[69]++;
    trustLevel += 5;
  } else
  /* istanbul ignore next */
  {
    cov_1cel840kw9().b[16][1]++;
  }
  // Asegurar que estÃ© en el rango 0-100
  cov_1cel840kw9().s[70]++;
  return Math.min(100, Math.max(0, trustLevel));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,