657d3380bea7ce665412b33ad75fb8c4
// ===================================
// PINTEYA E-COMMERCE - ACTIVITY LOGGER UTILITY
// ===================================
"use strict";

/* istanbul ignore next */
function cov_1lzxodwomw() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\activity\\activityLogger.ts";
  var hash = "86482bd09407f87bbdcdb1dfcfe88992037dfdb6";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\activity\\activityLogger.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "2": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "3": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 45,
          column: 3
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 30
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 37
        }
      },
      "6": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 31
        }
      },
      "7": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 31
        }
      },
      "8": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 32
        }
      },
      "9": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 37
        }
      },
      "10": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 34
        }
      },
      "11": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 35
        }
      },
      "12": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 34
        }
      },
      "13": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 31
        }
      },
      "14": {
        start: {
          line: 46,
          column: 18
        },
        end: {
          line: 46,
          column: 53
        }
      },
      "15": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 79,
          column: 5
        }
      },
      "16": {
        start: {
          line: 49,
          column: 64
        },
        end: {
          line: 49,
          column: 71
        }
      },
      "17": {
        start: {
          line: 51,
          column: 24
        },
        end: {
          line: 62,
          column: 9
        }
      },
      "18": {
        start: {
          line: 64,
          column: 26
        },
        end: {
          line: 64,
          column: 93
        }
      },
      "19": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 71,
          column: 9
        }
      },
      "20": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 66,
          column: 66
        }
      },
      "21": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 69,
          column: 13
        }
      },
      "22": {
        start: {
          line: 68,
          column: 16
        },
        end: {
          line: 68,
          column: 28
        }
      },
      "23": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 70,
          column: 25
        }
      },
      "24": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 20
        }
      },
      "25": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 58
        }
      },
      "26": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 77,
          column: 9
        }
      },
      "27": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 24
        }
      },
      "28": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 21
        }
      },
      "29": {
        start: {
          line: 82,
          column: 4
        },
        end: {
          line: 92,
          column: 7
        }
      },
      "30": {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 102,
          column: 7
        }
      },
      "31": {
        start: {
          line: 105,
          column: 4
        },
        end: {
          line: 115,
          column: 7
        }
      },
      "32": {
        start: {
          line: 118,
          column: 4
        },
        end: {
          line: 129,
          column: 7
        }
      },
      "33": {
        start: {
          line: 132,
          column: 4
        },
        end: {
          line: 142,
          column: 7
        }
      },
      "34": {
        start: {
          line: 145,
          column: 4
        },
        end: {
          line: 152,
          column: 7
        }
      },
      "35": {
        start: {
          line: 155,
          column: 4
        },
        end: {
          line: 168,
          column: 5
        }
      },
      "36": {
        start: {
          line: 156,
          column: 19
        },
        end: {
          line: 156,
          column: 149
        }
      },
      "37": {
        start: {
          line: 157,
          column: 26
        },
        end: {
          line: 157,
          column: 75
        }
      },
      "38": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 161,
          column: 10
        }
      },
      "39": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 163,
          column: 74
        }
      },
      "40": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 167,
          column: 10
        }
      },
      "41": {
        start: {
          line: 171,
          column: 4
        },
        end: {
          line: 193,
          column: 5
        }
      },
      "42": {
        start: {
          line: 172,
          column: 25
        },
        end: {
          line: 183,
          column: 10
        }
      },
      "43": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 187,
          column: 9
        }
      },
      "44": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 185,
          column: 94
        }
      },
      "45": {
        start: {
          line: 186,
          column: 12
        },
        end: {
          line: 186,
          column: 25
        }
      },
      "46": {
        start: {
          line: 188,
          column: 21
        },
        end: {
          line: 188,
          column: 42
        }
      },
      "47": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 189,
          column: 37
        }
      },
      "48": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 191,
          column: 64
        }
      },
      "49": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 192,
          column: 21
        }
      },
      "50": {
        start: {
          line: 196,
          column: 18
        },
        end: {
          line: 196,
          column: 19
        }
      },
      "51": {
        start: {
          line: 197,
          column: 17
        },
        end: {
          line: 197,
          column: 18
        }
      },
      "52": {
        start: {
          line: 198,
          column: 4
        },
        end: {
          line: 205,
          column: 5
        }
      },
      "53": {
        start: {
          line: 199,
          column: 23
        },
        end: {
          line: 199,
          column: 75
        }
      },
      "54": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 204,
          column: 9
        }
      },
      "55": {
        start: {
          line: 201,
          column: 12
        },
        end: {
          line: 201,
          column: 22
        }
      },
      "56": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 203,
          column: 21
        }
      },
      "57": {
        start: {
          line: 206,
          column: 4
        },
        end: {
          line: 209,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 16
          }
        },
        loc: {
          start: {
            line: 8,
            column: 30
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 26
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 33
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 27
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 27
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 28
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 33
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        loc: {
          start: {
            line: 33,
            column: 30
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 33
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        loc: {
          start: {
            line: 36,
            column: 31
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 36
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        loc: {
          start: {
            line: 39,
            column: 30
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 39
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        loc: {
          start: {
            line: 42,
            column: 27
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 42
      },
      "11": {
        name: "logUserActivity",
        decl: {
          start: {
            line: 47,
            column: 15
          },
          end: {
            line: 47,
            column: 30
          }
        },
        loc: {
          start: {
            line: 47,
            column: 67
          },
          end: {
            line: 80,
            column: 1
          }
        },
        line: 47
      },
      "12": {
        name: "logAuthActivity",
        decl: {
          start: {
            line: 81,
            column: 15
          },
          end: {
            line: 81,
            column: 30
          }
        },
        loc: {
          start: {
            line: 81,
            column: 66
          },
          end: {
            line: 93,
            column: 1
          }
        },
        line: 81
      },
      "13": {
        name: "logProfileActivity",
        decl: {
          start: {
            line: 94,
            column: 15
          },
          end: {
            line: 94,
            column: 33
          }
        },
        loc: {
          start: {
            line: 94,
            column: 69
          },
          end: {
            line: 103,
            column: 1
          }
        },
        line: 94
      },
      "14": {
        name: "logSecurityActivity",
        decl: {
          start: {
            line: 104,
            column: 15
          },
          end: {
            line: 104,
            column: 34
          }
        },
        loc: {
          start: {
            line: 104,
            column: 70
          },
          end: {
            line: 116,
            column: 1
          }
        },
        line: 104
      },
      "15": {
        name: "logSessionActivity",
        decl: {
          start: {
            line: 117,
            column: 15
          },
          end: {
            line: 117,
            column: 33
          }
        },
        loc: {
          start: {
            line: 117,
            column: 69
          },
          end: {
            line: 130,
            column: 1
          }
        },
        line: 117
      },
      "16": {
        name: "logOrderActivity",
        decl: {
          start: {
            line: 131,
            column: 15
          },
          end: {
            line: 131,
            column: 31
          }
        },
        loc: {
          start: {
            line: 131,
            column: 76
          },
          end: {
            line: 143,
            column: 1
          }
        },
        line: 131
      },
      "17": {
        name: "logPreferenceActivity",
        decl: {
          start: {
            line: 144,
            column: 15
          },
          end: {
            line: 144,
            column: 36
          }
        },
        loc: {
          start: {
            line: 144,
            column: 72
          },
          end: {
            line: 153,
            column: 1
          }
        },
        line: 144
      },
      "18": {
        name: "getRequestInfo",
        decl: {
          start: {
            line: 154,
            column: 9
          },
          end: {
            line: 154,
            column: 23
          }
        },
        loc: {
          start: {
            line: 154,
            column: 33
          },
          end: {
            line: 169,
            column: 1
          }
        },
        line: 154
      },
      "19": {
        name: "logActivityFromClient",
        decl: {
          start: {
            line: 170,
            column: 15
          },
          end: {
            line: 170,
            column: 36
          }
        },
        loc: {
          start: {
            line: 170,
            column: 78
          },
          end: {
            line: 194,
            column: 1
          }
        },
        line: 170
      },
      "20": {
        name: "logBulkActivity",
        decl: {
          start: {
            line: 195,
            column: 15
          },
          end: {
            line: 195,
            column: 30
          }
        },
        loc: {
          start: {
            line: 195,
            column: 57
          },
          end: {
            line: 210,
            column: 1
          }
        },
        line: 195
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 47,
            column: 53
          },
          end: {
            line: 47,
            column: 65
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 47,
            column: 63
          },
          end: {
            line: 47,
            column: 65
          }
        }],
        line: 47
      },
      "1": {
        loc: {
          start: {
            line: 49,
            column: 16
          },
          end: {
            line: 49,
            column: 34
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 49,
            column: 30
          },
          end: {
            line: 49,
            column: 34
          }
        }],
        line: 49
      },
      "2": {
        loc: {
          start: {
            line: 49,
            column: 36
          },
          end: {
            line: 49,
            column: 59
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 49,
            column: 55
          },
          end: {
            line: 49,
            column: 59
          }
        }],
        line: 49
      },
      "3": {
        loc: {
          start: {
            line: 59,
            column: 15
          },
          end: {
            line: 61,
            column: 13
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 15
          },
          end: {
            line: 59,
            column: 31
          }
        }, {
          start: {
            line: 59,
            column: 35
          },
          end: {
            line: 61,
            column: 13
          }
        }],
        line: 59
      },
      "4": {
        loc: {
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "5": {
        loc: {
          start: {
            line: 67,
            column: 12
          },
          end: {
            line: 69,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 12
          },
          end: {
            line: 69,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "6": {
        loc: {
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 77,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 77,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 75
      },
      "7": {
        loc: {
          start: {
            line: 110,
            column: 22
          },
          end: {
            line: 110,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 110,
            column: 57
          },
          end: {
            line: 110,
            column: 63
          }
        }, {
          start: {
            line: 110,
            column: 66
          },
          end: {
            line: 110,
            column: 74
          }
        }],
        line: 110
      },
      "8": {
        loc: {
          start: {
            line: 156,
            column: 19
          },
          end: {
            line: 156,
            column: 149
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 156,
            column: 19
          },
          end: {
            line: 156,
            column: 83
          }
        }, {
          start: {
            line: 156,
            column: 87
          },
          end: {
            line: 156,
            column: 122
          }
        }, {
          start: {
            line: 156,
            column: 126
          },
          end: {
            line: 156,
            column: 136
          }
        }, {
          start: {
            line: 156,
            column: 140
          },
          end: {
            line: 156,
            column: 149
          }
        }],
        line: 156
      },
      "9": {
        loc: {
          start: {
            line: 157,
            column: 26
          },
          end: {
            line: 157,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 157,
            column: 26
          },
          end: {
            line: 157,
            column: 62
          }
        }, {
          start: {
            line: 157,
            column: 66
          },
          end: {
            line: 157,
            column: 75
          }
        }],
        line: 157
      },
      "10": {
        loc: {
          start: {
            line: 184,
            column: 8
          },
          end: {
            line: 187,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 184,
            column: 8
          },
          end: {
            line: 187,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 184
      },
      "11": {
        loc: {
          start: {
            line: 189,
            column: 15
          },
          end: {
            line: 189,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 189,
            column: 15
          },
          end: {
            line: 189,
            column: 27
          }
        }, {
          start: {
            line: 189,
            column: 31
          },
          end: {
            line: 189,
            column: 36
          }
        }],
        line: 189
      },
      "12": {
        loc: {
          start: {
            line: 195,
            column: 43
          },
          end: {
            line: 195,
            column: 55
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 195,
            column: 53
          },
          end: {
            line: 195,
            column: 55
          }
        }],
        line: 195
      },
      "13": {
        loc: {
          start: {
            line: 200,
            column: 8
          },
          end: {
            line: 204,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 200,
            column: 8
          },
          end: {
            line: 204,
            column: 9
          }
        }, {
          start: {
            line: 202,
            column: 15
          },
          end: {
            line: 204,
            column: 9
          }
        }],
        line: 200
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0],
      "13": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\activity\\activityLogger.ts"],
      sourcesContent: ["// ===================================\r\n// PINTEYA E-COMMERCE - ACTIVITY LOGGER UTILITY\r\n// ===================================\r\n\r\nimport { supabaseAdmin } from '@/lib/integrations/supabase';\r\n\r\n// Tipos para actividad\r\nexport interface ActivityLogData {\r\n  action: string;\r\n  category: 'auth' | 'profile' | 'order' | 'security' | 'session' | 'preference';\r\n  description?: string;\r\n  metadata?: Record<string, any>;\r\n  ip_address?: string;\r\n  user_agent?: string;\r\n}\r\n\r\nexport interface ActivityLogOptions {\r\n  skipIfError?: boolean;\r\n  includeTimestamp?: boolean;\r\n}\r\n\r\n/**\r\n * Funci\xF3n utilitaria centralizada para registrar actividad de usuario\r\n * Puede ser usada desde APIs del servidor o desde el cliente\r\n */\r\nexport async function logUserActivity(\r\n  userId: string,\r\n  activityData: ActivityLogData,\r\n  options: ActivityLogOptions = {}\r\n): Promise<boolean> {\r\n  try {\r\n    const { skipIfError = true, includeTimestamp = true } = options;\r\n\r\n    // Preparar datos de actividad\r\n    const logData = {\r\n      user_id: userId,\r\n      action: activityData.action,\r\n      category: activityData.category,\r\n      description: activityData.description,\r\n      metadata: activityData.metadata,\r\n      ip_address: activityData.ip_address,\r\n      user_agent: activityData.user_agent,\r\n      ...(includeTimestamp && { created_at: new Date().toISOString() })\r\n    };\r\n\r\n    // Insertar en base de datos\r\n    const { error } = await supabaseAdmin\r\n      .from('user_activity')\r\n      .insert(logData);\r\n\r\n    if (error) {\r\n      console.error('Error al registrar actividad:', error);\r\n      if (!skipIfError) {\r\n        throw error;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Error en logUserActivity:', error);\r\n    if (!options.skipIfError) {\r\n      throw error;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Funci\xF3n espec\xEDfica para logging de autenticaci\xF3n\r\n */\r\nexport async function logAuthActivity(\r\n  userId: string,\r\n  action: 'login' | 'logout' | 'register' | 'password_reset' | 'email_verification',\r\n  metadata?: Record<string, any>,\r\n  request?: { ip?: string; userAgent?: string }\r\n): Promise<boolean> {\r\n  return logUserActivity(userId, {\r\n    action,\r\n    category: 'auth',\r\n    description: `Usuario ${action}`,\r\n    metadata: {\r\n      timestamp: new Date().toISOString(),\r\n      ...metadata\r\n    },\r\n    ip_address: request?.ip,\r\n    user_agent: request?.userAgent\r\n  });\r\n}\r\n\r\n/**\r\n * Funci\xF3n espec\xEDfica para logging de perfil\r\n */\r\nexport async function logProfileActivity(\r\n  userId: string,\r\n  action: 'update_profile' | 'upload_avatar' | 'delete_avatar' | 'add_address' | 'update_address' | 'delete_address',\r\n  metadata?: Record<string, any>,\r\n  request?: { ip?: string; userAgent?: string }\r\n): Promise<boolean> {\r\n  return logUserActivity(userId, {\r\n    action,\r\n    category: 'profile',\r\n    description: `Perfil: ${action.replace('_', ' ')}`,\r\n    metadata,\r\n    ip_address: request?.ip,\r\n    user_agent: request?.userAgent\r\n  });\r\n}\r\n\r\n/**\r\n * Funci\xF3n espec\xEDfica para logging de seguridad\r\n */\r\nexport async function logSecurityActivity(\r\n  userId: string,\r\n  action: 'enable_2fa' | 'disable_2fa' | 'update_security_settings' | 'suspicious_activity' | 'password_change',\r\n  metadata?: Record<string, any>,\r\n  request?: { ip?: string; userAgent?: string }\r\n): Promise<boolean> {\r\n  return logUserActivity(userId, {\r\n    action,\r\n    category: 'security',\r\n    description: `Seguridad: ${action.replace('_', ' ')}`,\r\n    metadata: {\r\n      severity: action === 'suspicious_activity' ? 'high' : 'medium',\r\n      ...metadata\r\n    },\r\n    ip_address: request?.ip,\r\n    user_agent: request?.userAgent\r\n  });\r\n}\r\n\r\n/**\r\n * Funci\xF3n espec\xEDfica para logging de sesiones\r\n */\r\nexport async function logSessionActivity(\r\n  userId: string,\r\n  action: 'session_start' | 'session_end' | 'session_timeout' | 'revoke_session' | 'trust_device',\r\n  metadata?: Record<string, any>,\r\n  request?: { ip?: string; userAgent?: string }\r\n): Promise<boolean> {\r\n  return logUserActivity(userId, {\r\n    action,\r\n    category: 'session',\r\n    description: `Sesi\xF3n: ${action.replace('_', ' ')}`,\r\n    metadata: {\r\n      device_info: metadata?.device_info,\r\n      session_id: metadata?.session_id,\r\n      ...metadata\r\n    },\r\n    ip_address: request?.ip,\r\n    user_agent: request?.userAgent\r\n  });\r\n}\r\n\r\n/**\r\n * Funci\xF3n espec\xEDfica para logging de \xF3rdenes\r\n */\r\nexport async function logOrderActivity(\r\n  userId: string,\r\n  action: 'create_order' | 'update_order' | 'cancel_order' | 'payment_completed' | 'order_shipped' | 'order_delivered',\r\n  orderId: string,\r\n  metadata?: Record<string, any>,\r\n  request?: { ip?: string; userAgent?: string }\r\n): Promise<boolean> {\r\n  return logUserActivity(userId, {\r\n    action,\r\n    category: 'order',\r\n    description: `Orden ${orderId}: ${action.replace('_', ' ')}`,\r\n    metadata: {\r\n      order_id: orderId,\r\n      ...metadata\r\n    },\r\n    ip_address: request?.ip,\r\n    user_agent: request?.userAgent\r\n  });\r\n}\r\n\r\n/**\r\n * Funci\xF3n espec\xEDfica para logging de preferencias\r\n */\r\nexport async function logPreferenceActivity(\r\n  userId: string,\r\n  action: 'update_notifications' | 'update_display' | 'update_privacy' | 'update_theme',\r\n  metadata?: Record<string, any>,\r\n  request?: { ip?: string; userAgent?: string }\r\n): Promise<boolean> {\r\n  return logUserActivity(userId, {\r\n    action,\r\n    category: 'preference',\r\n    description: `Preferencias: ${action.replace('_', ' ')}`,\r\n    metadata,\r\n    ip_address: request?.ip,\r\n    user_agent: request?.userAgent\r\n  });\r\n}\r\n\r\n/**\r\n * Funci\xF3n para obtener informaci\xF3n del request (para usar en APIs)\r\n */\r\nexport function getRequestInfo(request: Request | any): { ip?: string; userAgent?: string } {\r\n  try {\r\n    const ip = request.headers?.get?.('x-forwarded-for')?.split(',')[0]?.trim() ||\r\n              request.headers?.get?.('x-real-ip') ||\r\n              request.ip ||\r\n              'unknown';\r\n    \r\n    const userAgent = request.headers?.get?.('user-agent') || 'unknown';\r\n    \r\n    return { ip, userAgent };\r\n  } catch (error) {\r\n    console.error('Error obteniendo informaci\xF3n del request:', error);\r\n    return { ip: 'unknown', userAgent: 'unknown' };\r\n  }\r\n}\r\n\r\n/**\r\n * Funci\xF3n para logging desde el cliente (usando fetch a la API)\r\n */\r\nexport async function logActivityFromClient(\r\n  action: string,\r\n  category: ActivityLogData['category'],\r\n  description?: string,\r\n  metadata?: Record<string, any>\r\n): Promise<boolean> {\r\n  try {\r\n    const response = await fetch('/api/user/activity', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        action,\r\n        category,\r\n        description,\r\n        metadata,\r\n      }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      console.error('Error al registrar actividad desde cliente:', response.statusText);\r\n      return false;\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data.success || false;\r\n  } catch (error) {\r\n    console.error('Error en logActivityFromClient:', error);\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Funci\xF3n para logging masivo (\xFAtil para migraciones o importaciones)\r\n */\r\nexport async function logBulkActivity(\r\n  activities: Array<{ userId: string; activityData: ActivityLogData }>,\r\n  options: ActivityLogOptions = {}\r\n): Promise<{ success: number; failed: number }> {\r\n  let success = 0;\r\n  let failed = 0;\r\n\r\n  for (const { userId, activityData } of activities) {\r\n    const result = await logUserActivity(userId, activityData, options);\r\n    if (result) {\r\n      success++;\r\n    } else {\r\n      failed++;\r\n    }\r\n  }\r\n\r\n  return { success, failed };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["getRequestInfo", "logActivityFromClient", "logAuthActivity", "logBulkActivity", "logOrderActivity", "logPreferenceActivity", "logProfileActivity", "logSecurityActivity", "logSessionActivity", "logUserActivity", "userId", "activityData", "options", "skipIfError", "includeTimestamp", "logData", "user_id", "action", "category", "description", "metadata", "ip_address", "user_agent", "created_at", "Date", "toISOString", "error", "supabaseAdmin", "from", "insert", "console", "request", "timestamp", "ip", "userAgent", "replace", "severity", "device_info", "session_id", "orderId", "order_id", "headers", "get", "split", "trim", "response", "fetch", "method", "body", "JSON", "stringify", "ok", "statusText", "data", "json", "success", "activities", "failed", "result"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "86482bd09407f87bbdcdb1dfcfe88992037dfdb6"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1lzxodwomw = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1lzxodwomw();
cov_1lzxodwomw().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1lzxodwomw().f[0]++;
  cov_1lzxodwomw().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1lzxodwomw().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1lzxodwomw().s[3]++;
_export(exports, {
  get getRequestInfo() {
    /* istanbul ignore next */
    cov_1lzxodwomw().f[1]++;
    cov_1lzxodwomw().s[4]++;
    return getRequestInfo;
  },
  get logActivityFromClient() {
    /* istanbul ignore next */
    cov_1lzxodwomw().f[2]++;
    cov_1lzxodwomw().s[5]++;
    return logActivityFromClient;
  },
  get logAuthActivity() {
    /* istanbul ignore next */
    cov_1lzxodwomw().f[3]++;
    cov_1lzxodwomw().s[6]++;
    return logAuthActivity;
  },
  get logBulkActivity() {
    /* istanbul ignore next */
    cov_1lzxodwomw().f[4]++;
    cov_1lzxodwomw().s[7]++;
    return logBulkActivity;
  },
  get logOrderActivity() {
    /* istanbul ignore next */
    cov_1lzxodwomw().f[5]++;
    cov_1lzxodwomw().s[8]++;
    return logOrderActivity;
  },
  get logPreferenceActivity() {
    /* istanbul ignore next */
    cov_1lzxodwomw().f[6]++;
    cov_1lzxodwomw().s[9]++;
    return logPreferenceActivity;
  },
  get logProfileActivity() {
    /* istanbul ignore next */
    cov_1lzxodwomw().f[7]++;
    cov_1lzxodwomw().s[10]++;
    return logProfileActivity;
  },
  get logSecurityActivity() {
    /* istanbul ignore next */
    cov_1lzxodwomw().f[8]++;
    cov_1lzxodwomw().s[11]++;
    return logSecurityActivity;
  },
  get logSessionActivity() {
    /* istanbul ignore next */
    cov_1lzxodwomw().f[9]++;
    cov_1lzxodwomw().s[12]++;
    return logSessionActivity;
  },
  get logUserActivity() {
    /* istanbul ignore next */
    cov_1lzxodwomw().f[10]++;
    cov_1lzxodwomw().s[13]++;
    return logUserActivity;
  }
});
const _supabase =
/* istanbul ignore next */
(cov_1lzxodwomw().s[14]++, require("../integrations/supabase"));
async function logUserActivity(userId, activityData, options =
/* istanbul ignore next */
(cov_1lzxodwomw().b[0][0]++, {})) {
  /* istanbul ignore next */
  cov_1lzxodwomw().f[11]++;
  cov_1lzxodwomw().s[15]++;
  try {
    const {
      skipIfError =
      /* istanbul ignore next */
      (cov_1lzxodwomw().b[1][0]++, true),
      includeTimestamp =
      /* istanbul ignore next */
      (cov_1lzxodwomw().b[2][0]++, true)
    } =
    /* istanbul ignore next */
    (cov_1lzxodwomw().s[16]++, options);
    // Preparar datos de actividad
    const logData =
    /* istanbul ignore next */
    (cov_1lzxodwomw().s[17]++, {
      user_id: userId,
      action: activityData.action,
      category: activityData.category,
      description: activityData.description,
      metadata: activityData.metadata,
      ip_address: activityData.ip_address,
      user_agent: activityData.user_agent,
      ...(
      /* istanbul ignore next */
      (cov_1lzxodwomw().b[3][0]++, includeTimestamp) &&
      /* istanbul ignore next */
      (cov_1lzxodwomw().b[3][1]++, {
        created_at: new Date().toISOString()
      }))
    });
    // Insertar en base de datos
    const {
      error
    } =
    /* istanbul ignore next */
    (cov_1lzxodwomw().s[18]++, await _supabase.supabaseAdmin.from('user_activity').insert(logData));
    /* istanbul ignore next */
    cov_1lzxodwomw().s[19]++;
    if (error) {
      /* istanbul ignore next */
      cov_1lzxodwomw().b[4][0]++;
      cov_1lzxodwomw().s[20]++;
      console.error('Error al registrar actividad:', error);
      /* istanbul ignore next */
      cov_1lzxodwomw().s[21]++;
      if (!skipIfError) {
        /* istanbul ignore next */
        cov_1lzxodwomw().b[5][0]++;
        cov_1lzxodwomw().s[22]++;
        throw error;
      } else
      /* istanbul ignore next */
      {
        cov_1lzxodwomw().b[5][1]++;
      }
      cov_1lzxodwomw().s[23]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_1lzxodwomw().b[4][1]++;
    }
    cov_1lzxodwomw().s[24]++;
    return true;
  } catch (error) {
    /* istanbul ignore next */
    cov_1lzxodwomw().s[25]++;
    console.error('Error en logUserActivity:', error);
    /* istanbul ignore next */
    cov_1lzxodwomw().s[26]++;
    if (!options.skipIfError) {
      /* istanbul ignore next */
      cov_1lzxodwomw().b[6][0]++;
      cov_1lzxodwomw().s[27]++;
      throw error;
    } else
    /* istanbul ignore next */
    {
      cov_1lzxodwomw().b[6][1]++;
    }
    cov_1lzxodwomw().s[28]++;
    return false;
  }
}
async function logAuthActivity(userId, action, metadata, request) {
  /* istanbul ignore next */
  cov_1lzxodwomw().f[12]++;
  cov_1lzxodwomw().s[29]++;
  return logUserActivity(userId, {
    action,
    category: 'auth',
    description: `Usuario ${action}`,
    metadata: {
      timestamp: new Date().toISOString(),
      ...metadata
    },
    ip_address: request?.ip,
    user_agent: request?.userAgent
  });
}
async function logProfileActivity(userId, action, metadata, request) {
  /* istanbul ignore next */
  cov_1lzxodwomw().f[13]++;
  cov_1lzxodwomw().s[30]++;
  return logUserActivity(userId, {
    action,
    category: 'profile',
    description: `Perfil: ${action.replace('_', ' ')}`,
    metadata,
    ip_address: request?.ip,
    user_agent: request?.userAgent
  });
}
async function logSecurityActivity(userId, action, metadata, request) {
  /* istanbul ignore next */
  cov_1lzxodwomw().f[14]++;
  cov_1lzxodwomw().s[31]++;
  return logUserActivity(userId, {
    action,
    category: 'security',
    description: `Seguridad: ${action.replace('_', ' ')}`,
    metadata: {
      severity: action === 'suspicious_activity' ?
      /* istanbul ignore next */
      (cov_1lzxodwomw().b[7][0]++, 'high') :
      /* istanbul ignore next */
      (cov_1lzxodwomw().b[7][1]++, 'medium'),
      ...metadata
    },
    ip_address: request?.ip,
    user_agent: request?.userAgent
  });
}
async function logSessionActivity(userId, action, metadata, request) {
  /* istanbul ignore next */
  cov_1lzxodwomw().f[15]++;
  cov_1lzxodwomw().s[32]++;
  return logUserActivity(userId, {
    action,
    category: 'session',
    description: `Sesión: ${action.replace('_', ' ')}`,
    metadata: {
      device_info: metadata?.device_info,
      session_id: metadata?.session_id,
      ...metadata
    },
    ip_address: request?.ip,
    user_agent: request?.userAgent
  });
}
async function logOrderActivity(userId, action, orderId, metadata, request) {
  /* istanbul ignore next */
  cov_1lzxodwomw().f[16]++;
  cov_1lzxodwomw().s[33]++;
  return logUserActivity(userId, {
    action,
    category: 'order',
    description: `Orden ${orderId}: ${action.replace('_', ' ')}`,
    metadata: {
      order_id: orderId,
      ...metadata
    },
    ip_address: request?.ip,
    user_agent: request?.userAgent
  });
}
async function logPreferenceActivity(userId, action, metadata, request) {
  /* istanbul ignore next */
  cov_1lzxodwomw().f[17]++;
  cov_1lzxodwomw().s[34]++;
  return logUserActivity(userId, {
    action,
    category: 'preference',
    description: `Preferencias: ${action.replace('_', ' ')}`,
    metadata,
    ip_address: request?.ip,
    user_agent: request?.userAgent
  });
}
function getRequestInfo(request) {
  /* istanbul ignore next */
  cov_1lzxodwomw().f[18]++;
  cov_1lzxodwomw().s[35]++;
  try {
    const ip =
    /* istanbul ignore next */
    (cov_1lzxodwomw().s[36]++,
    /* istanbul ignore next */
    (cov_1lzxodwomw().b[8][0]++, request.headers?.get?.('x-forwarded-for')?.split(',')[0]?.trim()) ||
    /* istanbul ignore next */
    (cov_1lzxodwomw().b[8][1]++, request.headers?.get?.('x-real-ip')) ||
    /* istanbul ignore next */
    (cov_1lzxodwomw().b[8][2]++, request.ip) ||
    /* istanbul ignore next */
    (cov_1lzxodwomw().b[8][3]++, 'unknown'));
    const userAgent =
    /* istanbul ignore next */
    (cov_1lzxodwomw().s[37]++,
    /* istanbul ignore next */
    (cov_1lzxodwomw().b[9][0]++, request.headers?.get?.('user-agent')) ||
    /* istanbul ignore next */
    (cov_1lzxodwomw().b[9][1]++, 'unknown'));
    /* istanbul ignore next */
    cov_1lzxodwomw().s[38]++;
    return {
      ip,
      userAgent
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1lzxodwomw().s[39]++;
    console.error('Error obteniendo información del request:', error);
    /* istanbul ignore next */
    cov_1lzxodwomw().s[40]++;
    return {
      ip: 'unknown',
      userAgent: 'unknown'
    };
  }
}
async function logActivityFromClient(action, category, description, metadata) {
  /* istanbul ignore next */
  cov_1lzxodwomw().f[19]++;
  cov_1lzxodwomw().s[41]++;
  try {
    const response =
    /* istanbul ignore next */
    (cov_1lzxodwomw().s[42]++, await fetch('/api/user/activity', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        action,
        category,
        description,
        metadata
      })
    }));
    /* istanbul ignore next */
    cov_1lzxodwomw().s[43]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_1lzxodwomw().b[10][0]++;
      cov_1lzxodwomw().s[44]++;
      console.error('Error al registrar actividad desde cliente:', response.statusText);
      /* istanbul ignore next */
      cov_1lzxodwomw().s[45]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_1lzxodwomw().b[10][1]++;
    }
    const data =
    /* istanbul ignore next */
    (cov_1lzxodwomw().s[46]++, await response.json());
    /* istanbul ignore next */
    cov_1lzxodwomw().s[47]++;
    return /* istanbul ignore next */(cov_1lzxodwomw().b[11][0]++, data.success) ||
    /* istanbul ignore next */
    (cov_1lzxodwomw().b[11][1]++, false);
  } catch (error) {
    /* istanbul ignore next */
    cov_1lzxodwomw().s[48]++;
    console.error('Error en logActivityFromClient:', error);
    /* istanbul ignore next */
    cov_1lzxodwomw().s[49]++;
    return false;
  }
}
async function logBulkActivity(activities, options =
/* istanbul ignore next */
(cov_1lzxodwomw().b[12][0]++, {})) {
  /* istanbul ignore next */
  cov_1lzxodwomw().f[20]++;
  let success =
  /* istanbul ignore next */
  (cov_1lzxodwomw().s[50]++, 0);
  let failed =
  /* istanbul ignore next */
  (cov_1lzxodwomw().s[51]++, 0);
  /* istanbul ignore next */
  cov_1lzxodwomw().s[52]++;
  for (const {
    userId,
    activityData
  } of activities) {
    const result =
    /* istanbul ignore next */
    (cov_1lzxodwomw().s[53]++, await logUserActivity(userId, activityData, options));
    /* istanbul ignore next */
    cov_1lzxodwomw().s[54]++;
    if (result) {
      /* istanbul ignore next */
      cov_1lzxodwomw().b[13][0]++;
      cov_1lzxodwomw().s[55]++;
      success++;
    } else {
      /* istanbul ignore next */
      cov_1lzxodwomw().b[13][1]++;
      cov_1lzxodwomw().s[56]++;
      failed++;
    }
  }
  /* istanbul ignore next */
  cov_1lzxodwomw().s[57]++;
  return {
    success,
    failed
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,