{"version":3,"names":["cov_1bys3teigz","actualCoverage","s","GET","f","OPTIONS","POST","runtime","request","searchParams","URL","url","timeRange","b","get","includeEvents","stats","_securitymonitor","getSecurityStats","response","success","data","timestamp","Date","toISOString","recentEvents","securityMonitor","slice","map","event","type","severity","source","ip","substring","undefined","userAgent","_logger","logger","info","LogLevel","INFO","statsCount","totalEvents","origin","headers","corsHeaders","_corsconfig","generateCorsHeaders","_server","NextResponse","json","error","ERROR","Error","message","status","body","details","logSecurityEvent","reportedBy"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\security\\monitor\\route.ts"],"sourcesContent":["// Configuración para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n/**\r\n * API de monitoreo de seguridad\r\n * Proporciona estadísticas y eventos de seguridad para el dashboard\r\n */\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { getSecurityStats, securityMonitor } from '@/lib/security/security-monitor';\r\nimport { generateCorsHeaders } from '@/lib/security/cors-config';\r\nimport { logger, LogLevel } from '@/lib/enterprise/logger';\r\n\r\n// ===================================\r\n// GET - Obtener estadísticas de seguridad\r\n// ===================================\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    const { searchParams } = new URL(request.url);\r\n    const timeRange = searchParams.get('timeRange') as 'hour' | 'day' | 'week' || 'day';\r\n    const includeEvents = searchParams.get('includeEvents') === 'true';\r\n    \r\n    // Obtener estadísticas\r\n    const stats = getSecurityStats(timeRange);\r\n    \r\n    // Respuesta base\r\n    const response: any = {\r\n      success: true,\r\n      data: {\r\n        stats,\r\n        timestamp: new Date().toISOString(),\r\n        timeRange\r\n      }\r\n    };\r\n    \r\n    // Incluir eventos recientes si se solicita\r\n    if (includeEvents) {\r\n      const recentEvents = securityMonitor['eventBuffer']\r\n        .slice(-50) // Últimos 50 eventos\r\n        .map(event => ({\r\n          type: event.type,\r\n          severity: event.severity,\r\n          source: event.source,\r\n          timestamp: event.timestamp,\r\n          ip: event.ip ? event.ip.substring(0, 8) + '***' : undefined, // Ofuscar IP\r\n          userAgent: event.userAgent ? event.userAgent.substring(0, 50) + '...' : undefined\r\n        }));\r\n      \r\n      response.data.recentEvents = recentEvents;\r\n    }\r\n    \r\n    // Log del acceso al monitoreo\r\n    logger.info(LogLevel.INFO, 'Security monitoring accessed', {\r\n      timeRange,\r\n      includeEvents,\r\n      statsCount: stats.totalEvents\r\n    });\r\n    \r\n    const origin = request.headers.get('origin');\r\n    const corsHeaders = generateCorsHeaders(origin, 'admin');\r\n    \r\n    return NextResponse.json(response, {\r\n      headers: corsHeaders\r\n    });\r\n    \r\n  } catch (error) {\r\n    logger.error(LogLevel.ERROR, 'Error accessing security monitoring', {\r\n      error: error instanceof Error ? error.message : 'Unknown error'\r\n    });\r\n    \r\n    const origin = request.headers.get('origin');\r\n    const corsHeaders = generateCorsHeaders(origin, 'admin');\r\n    \r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Error accessing security monitoring'\r\n    }, { \r\n      status: 500,\r\n      headers: corsHeaders\r\n    });\r\n  }\r\n}\r\n\r\n// ===================================\r\n// POST - Reportar evento de seguridad manual\r\n// ===================================\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    const body = await request.json();\r\n    const { type, severity, details, source = 'manual_report' } = body;\r\n    \r\n    // Validar datos requeridos\r\n    if (!type || !severity || !details) {\r\n      const origin = request.headers.get('origin');\r\n      const corsHeaders = generateCorsHeaders(origin, 'admin');\r\n      \r\n      return NextResponse.json({\r\n        success: false,\r\n        error: 'Missing required fields: type, severity, details'\r\n      }, { \r\n        status: 400,\r\n        headers: corsHeaders\r\n      });\r\n    }\r\n    \r\n    // Registrar evento de seguridad\r\n    securityMonitor.logSecurityEvent({\r\n      type,\r\n      severity,\r\n      source,\r\n      details,\r\n      ip: request.headers.get('x-forwarded-for') || request.headers.get('x-real-ip') || 'unknown',\r\n      userAgent: request.headers.get('user-agent') || 'unknown'\r\n    });\r\n    \r\n    logger.info(LogLevel.INFO, 'Manual security event reported', {\r\n      type,\r\n      severity,\r\n      source,\r\n      reportedBy: 'admin_user' // En un caso real, obtener del token de auth\r\n    });\r\n    \r\n    const origin = request.headers.get('origin');\r\n    const corsHeaders = generateCorsHeaders(origin, 'admin');\r\n    \r\n    return NextResponse.json({\r\n      success: true,\r\n      message: 'Security event reported successfully'\r\n    }, {\r\n      headers: corsHeaders\r\n    });\r\n    \r\n  } catch (error) {\r\n    logger.error(LogLevel.ERROR, 'Error reporting security event', {\r\n      error: error instanceof Error ? error.message : 'Unknown error'\r\n    });\r\n    \r\n    const origin = request.headers.get('origin');\r\n    const corsHeaders = generateCorsHeaders(origin, 'admin');\r\n    \r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Error reporting security event'\r\n    }, { \r\n      status: 500,\r\n      headers: corsHeaders\r\n    });\r\n  }\r\n}\r\n\r\n// ===================================\r\n// OPTIONS - CORS\r\n// ===================================\r\nexport async function OPTIONS(request: NextRequest) {\r\n  const origin = request.headers.get('origin');\r\n  const corsHeaders = generateCorsHeaders(origin, 'admin');\r\n  \r\n  return new NextResponse(null, {\r\n    status: 200,\r\n    headers: corsHeaders,\r\n  });\r\n}\r\n"],"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","ignoreList":[]}