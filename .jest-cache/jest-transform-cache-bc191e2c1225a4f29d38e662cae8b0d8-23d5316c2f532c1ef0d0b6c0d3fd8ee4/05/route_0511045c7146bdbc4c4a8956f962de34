5b372b8ebad03dc0bf0b8987a7e45e36
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_2cvybq20zr() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\test-simple-user\\route.ts";
  var hash = "f2adb1fc767de4dac5f2be041c41ce8e37861944";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\test-simple-user\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 23
        }
      },
      "6": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 38
        }
      },
      "7": {
        start: {
          line: 21,
          column: 18
        },
        end: {
          line: 21,
          column: 63
        }
      },
      "8": {
        start: {
          line: 22,
          column: 19
        },
        end: {
          line: 22,
          column: 58
        }
      },
      "9": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 24
        }
      },
      "10": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 98,
          column: 5
        }
      },
      "11": {
        start: {
          line: 27,
          column: 27
        },
        end: {
          line: 27,
          column: 78
        }
      },
      "12": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 41,
          column: 9
        }
      },
      "13": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 40,
          column: 15
        }
      },
      "14": {
        start: {
          line: 42,
          column: 28
        },
        end: {
          line: 42,
          column: 45
        }
      },
      "15": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 77
        }
      },
      "16": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 51,
          column: 9
        }
      },
      "17": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 50,
          column: 15
        }
      },
      "18": {
        start: {
          line: 53,
          column: 38
        },
        end: {
          line: 53,
          column: 186
        }
      },
      "19": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 67,
          column: 9
        }
      },
      "20": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 64
        }
      },
      "21": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 66,
          column: 15
        }
      },
      "22": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 78,
          column: 9
        }
      },
      "23": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 77,
          column: 15
        }
      },
      "24": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 86,
          column: 11
        }
      },
      "25": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 88,
          column: 71
        }
      },
      "26": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 97,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 19
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "GET",
        decl: {
          start: {
            line: 24,
            column: 15
          },
          end: {
            line: 24,
            column: 18
          }
        },
        loc: {
          start: {
            line: 24,
            column: 28
          },
          end: {
            line: 99,
            column: 1
          }
        },
        line: 24
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 41,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 41,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "1": {
        loc: {
          start: {
            line: 31,
            column: 23
          },
          end: {
            line: 31,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 23
          },
          end: {
            line: 31,
            column: 39
          }
        }, {
          start: {
            line: 31,
            column: 43
          },
          end: {
            line: 31,
            column: 67
          }
        }],
        line: 31
      },
      "2": {
        loc: {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 51,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 51,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "3": {
        loc: {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 67,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 67,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "4": {
        loc: {
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 78,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 78,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "5": {
        loc: {
          start: {
            line: 93,
            column: 30
          },
          end: {
            line: 93,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 93,
            column: 55
          },
          end: {
            line: 93,
            column: 68
          }
        }, {
          start: {
            line: 93,
            column: 71
          },
          end: {
            line: 93,
            column: 86
          }
        }],
        line: 93
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\test-simple-user\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { supabaseAdmin } from '@/lib/integrations/supabase';\r\nimport { getAuthenticatedUser } from '@/lib/auth/admin-auth';\r\n\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    // MIGRADO: Usar getAuthenticatedUser en lugar de headers\r\n    const authResult = await getAuthenticatedUser(request);\r\n\r\n    if (!authResult.userId) {\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: authResult.error || 'Usuario no autenticado',\r\n        migration: {\r\n          status: 'MIGRATED',\r\n          oldMethod: 'headers x-clerk-user-id',\r\n          newMethod: 'getAuthenticatedUser()',\r\n          note: 'Ya no usa headers directamente'\r\n        }\r\n      }, { status: 401 });\r\n    }\r\n\r\n    const clerkUserId = authResult.userId;\r\n\r\n    console.log('\uD83D\uDD0D Test Simple User: Searching for user:', clerkUserId);\r\n\r\n    if (!supabaseAdmin) {\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: 'Supabase admin client not available'\r\n      }, { status: 500 });\r\n    }\r\n\r\n    // Consulta muy simple sin joins\r\n    const { data: user, error } = await supabaseAdmin\r\n      .from('user_profiles')\r\n      .select('id, clerk_user_id, email, role_id, is_active')\r\n      .eq('clerk_user_id', clerkUserId)\r\n      .single();\r\n\r\n    if (error) {\r\n      console.error('\uD83D\uDD0D Test Simple User: Error:', error);\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: 'Database error',\r\n        debug: {\r\n          clerkUserId,\r\n          errorMessage: error.message,\r\n          errorCode: error.code\r\n        }\r\n      }, { status: 500 });\r\n    }\r\n\r\n    if (!user) {\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: 'User not found',\r\n        debug: {\r\n          clerkUserId\r\n        }\r\n      }, { status: 404 });\r\n    }\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      user: user,\r\n      debug: {\r\n        clerkUserId,\r\n        found: true\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('\uD83D\uDD0D Test Simple User: Unexpected error:', error);\r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Unexpected error',\r\n      debug: {\r\n        errorMessage: error instanceof Error ? error.message : 'Unknown error'\r\n      }\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "runtime", "request", "authResult", "getAuthenticatedUser", "userId", "NextResponse", "json", "success", "error", "migration", "status", "oldMethod", "newMethod", "note", "clerkUserId", "console", "log", "supabaseAdmin", "data", "user", "from", "select", "eq", "single", "debug", "errorMessage", "message", "errorCode", "code", "found", "Error"],
      mappings: "AAAA,qCAAqC;;;;;;;;;;;;QAOfA;eAAAA;;QANTC;eAAAA;;;wBAE6B;0BACZ;2BACO;AAJ9B,MAAMA,UAAU;AAMhB,eAAeD,IAAIE,OAAoB;IAC5C,IAAI;QACF,yDAAyD;QACzD,MAAMC,aAAa,MAAMC,IAAAA,+BAAoB,EAACF;QAE9C,IAAI,CAACC,WAAWE,MAAM,EAAE;YACtB,OAAOC,oBAAY,CAACC,IAAI,CAAC;gBACvBC,SAAS;gBACTC,OAAON,WAAWM,KAAK,IAAI;gBAC3BC,WAAW;oBACTC,QAAQ;oBACRC,WAAW;oBACXC,WAAW;oBACXC,MAAM;gBACR;YACF,GAAG;gBAAEH,QAAQ;YAAI;QACnB;QAEA,MAAMI,cAAcZ,WAAWE,MAAM;QAErCW,QAAQC,GAAG,CAAC,4CAA4CF;QAExD,IAAI,CAACG,uBAAa,EAAE;YAClB,OAAOZ,oBAAY,CAACC,IAAI,CAAC;gBACvBC,SAAS;gBACTC,OAAO;YACT,GAAG;gBAAEE,QAAQ;YAAI;QACnB;QAEA,gCAAgC;QAChC,MAAM,EAAEQ,MAAMC,IAAI,EAAEX,KAAK,EAAE,GAAG,MAAMS,uBAAa,CAC9CG,IAAI,CAAC,iBACLC,MAAM,CAAC,gDACPC,EAAE,CAAC,iBAAiBR,aACpBS,MAAM;QAET,IAAIf,OAAO;YACTO,QAAQP,KAAK,CAAC,+BAA+BA;YAC7C,OAAOH,oBAAY,CAACC,IAAI,CAAC;gBACvBC,SAAS;gBACTC,OAAO;gBACPgB,OAAO;oBACLV;oBACAW,cAAcjB,MAAMkB,OAAO;oBAC3BC,WAAWnB,MAAMoB,IAAI;gBACvB;YACF,GAAG;gBAAElB,QAAQ;YAAI;QACnB;QAEA,IAAI,CAACS,MAAM;YACT,OAAOd,oBAAY,CAACC,IAAI,CAAC;gBACvBC,SAAS;gBACTC,OAAO;gBACPgB,OAAO;oBACLV;gBACF;YACF,GAAG;gBAAEJ,QAAQ;YAAI;QACnB;QAEA,OAAOL,oBAAY,CAACC,IAAI,CAAC;YACvBC,SAAS;YACTY,MAAMA;YACNK,OAAO;gBACLV;gBACAe,OAAO;YACT;QACF;IAEF,EAAE,OAAOrB,OAAO;QACdO,QAAQP,KAAK,CAAC,0CAA0CA;QACxD,OAAOH,oBAAY,CAACC,IAAI,CAAC;YACvBC,SAAS;YACTC,OAAO;YACPgB,OAAO;gBACLC,cAAcjB,iBAAiBsB,QAAQtB,MAAMkB,OAAO,GAAG;YACzD;QACF,GAAG;YAAEhB,QAAQ;QAAI;IACnB;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f2adb1fc767de4dac5f2be041c41ce8e37861944"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2cvybq20zr = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2cvybq20zr();
cov_2cvybq20zr().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2cvybq20zr().f[0]++;
  cov_2cvybq20zr().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2cvybq20zr().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_2cvybq20zr().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_2cvybq20zr().f[1]++;
    cov_2cvybq20zr().s[4]++;
    return GET;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_2cvybq20zr().f[2]++;
    cov_2cvybq20zr().s[5]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_2cvybq20zr().s[6]++, require("next/server"));
const _supabase =
/* istanbul ignore next */
(cov_2cvybq20zr().s[7]++, require("../../../lib/integrations/supabase"));
const _adminauth =
/* istanbul ignore next */
(cov_2cvybq20zr().s[8]++, require("../../../lib/auth/admin-auth"));
const runtime =
/* istanbul ignore next */
(cov_2cvybq20zr().s[9]++, 'nodejs');
async function GET(request) {
  /* istanbul ignore next */
  cov_2cvybq20zr().f[3]++;
  cov_2cvybq20zr().s[10]++;
  try {
    // MIGRADO: Usar getAuthenticatedUser en lugar de headers
    const authResult =
    /* istanbul ignore next */
    (cov_2cvybq20zr().s[11]++, await (0, _adminauth.getAuthenticatedUser)(request));
    /* istanbul ignore next */
    cov_2cvybq20zr().s[12]++;
    if (!authResult.userId) {
      /* istanbul ignore next */
      cov_2cvybq20zr().b[0][0]++;
      cov_2cvybq20zr().s[13]++;
      return _server.NextResponse.json({
        success: false,
        error:
        /* istanbul ignore next */
        (cov_2cvybq20zr().b[1][0]++, authResult.error) ||
        /* istanbul ignore next */
        (cov_2cvybq20zr().b[1][1]++, 'Usuario no autenticado'),
        migration: {
          status: 'MIGRATED',
          oldMethod: 'headers x-clerk-user-id',
          newMethod: 'getAuthenticatedUser()',
          note: 'Ya no usa headers directamente'
        }
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_2cvybq20zr().b[0][1]++;
    }
    const clerkUserId =
    /* istanbul ignore next */
    (cov_2cvybq20zr().s[14]++, authResult.userId);
    /* istanbul ignore next */
    cov_2cvybq20zr().s[15]++;
    console.log('ğ Test Simple User: Searching for user:', clerkUserId);
    /* istanbul ignore next */
    cov_2cvybq20zr().s[16]++;
    if (!_supabase.supabaseAdmin) {
      /* istanbul ignore next */
      cov_2cvybq20zr().b[2][0]++;
      cov_2cvybq20zr().s[17]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Supabase admin client not available'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_2cvybq20zr().b[2][1]++;
    }
    // Consulta muy simple sin joins
    const {
      data: user,
      error
    } =
    /* istanbul ignore next */
    (cov_2cvybq20zr().s[18]++, await _supabase.supabaseAdmin.from('user_profiles').select('id, clerk_user_id, email, role_id, is_active').eq('clerk_user_id', clerkUserId).single());
    /* istanbul ignore next */
    cov_2cvybq20zr().s[19]++;
    if (error) {
      /* istanbul ignore next */
      cov_2cvybq20zr().b[3][0]++;
      cov_2cvybq20zr().s[20]++;
      console.error('ğ Test Simple User: Error:', error);
      /* istanbul ignore next */
      cov_2cvybq20zr().s[21]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Database error',
        debug: {
          clerkUserId,
          errorMessage: error.message,
          errorCode: error.code
        }
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_2cvybq20zr().b[3][1]++;
    }
    cov_2cvybq20zr().s[22]++;
    if (!user) {
      /* istanbul ignore next */
      cov_2cvybq20zr().b[4][0]++;
      cov_2cvybq20zr().s[23]++;
      return _server.NextResponse.json({
        success: false,
        error: 'User not found',
        debug: {
          clerkUserId
        }
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_2cvybq20zr().b[4][1]++;
    }
    cov_2cvybq20zr().s[24]++;
    return _server.NextResponse.json({
      success: true,
      user: user,
      debug: {
        clerkUserId,
        found: true
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2cvybq20zr().s[25]++;
    console.error('ğ Test Simple User: Unexpected error:', error);
    /* istanbul ignore next */
    cov_2cvybq20zr().s[26]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Unexpected error',
      debug: {
        errorMessage: error instanceof Error ?
        /* istanbul ignore next */
        (cov_2cvybq20zr().b[5][0]++, error.message) :
        /* istanbul ignore next */
        (cov_2cvybq20zr().b[5][1]++, 'Unknown error')
      }
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMmN2eWJxMjB6ciIsImFjdHVhbENvdmVyYWdlIiwicyIsIkdFVCIsImYiLCJydW50aW1lIiwicmVxdWVzdCIsImF1dGhSZXN1bHQiLCJfYWRtaW5hdXRoIiwiZ2V0QXV0aGVudGljYXRlZFVzZXIiLCJ1c2VySWQiLCJiIiwiX3NlcnZlciIsIk5leHRSZXNwb25zZSIsImpzb24iLCJzdWNjZXNzIiwiZXJyb3IiLCJtaWdyYXRpb24iLCJzdGF0dXMiLCJvbGRNZXRob2QiLCJuZXdNZXRob2QiLCJub3RlIiwiY2xlcmtVc2VySWQiLCJjb25zb2xlIiwibG9nIiwiX3N1cGFiYXNlIiwic3VwYWJhc2VBZG1pbiIsImRhdGEiLCJ1c2VyIiwiZnJvbSIsInNlbGVjdCIsImVxIiwic2luZ2xlIiwiZGVidWciLCJlcnJvck1lc3NhZ2UiLCJtZXNzYWdlIiwiZXJyb3JDb2RlIiwiY29kZSIsImZvdW5kIiwiRXJyb3IiXSwic291cmNlcyI6WyJDOlxcVXNlcnNcXG1hcnRpXFxEZXNrdG9wXFxERVNBUlJPTExPU1dcXEJPSUxFUlBMQVRURSBFLUNPTU1FUkNFXFxzcmNcXGFwcFxcYXBpXFx0ZXN0LXNpbXBsZS11c2VyXFxyb3V0ZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb25maWd1cmFjacOzbiBwYXJhIE5vZGUuanMgUnVudGltZVxyXG5leHBvcnQgY29uc3QgcnVudGltZSA9ICdub2RlanMnO1xyXG5cclxuaW1wb3J0IHsgTmV4dFJlcXVlc3QsIE5leHRSZXNwb25zZSB9IGZyb20gJ25leHQvc2VydmVyJztcclxuaW1wb3J0IHsgc3VwYWJhc2VBZG1pbiB9IGZyb20gJ0AvbGliL2ludGVncmF0aW9ucy9zdXBhYmFzZSc7XHJcbmltcG9ydCB7IGdldEF1dGhlbnRpY2F0ZWRVc2VyIH0gZnJvbSAnQC9saWIvYXV0aC9hZG1pbi1hdXRoJztcclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBHRVQocmVxdWVzdDogTmV4dFJlcXVlc3QpIHtcclxuICB0cnkge1xyXG4gICAgLy8gTUlHUkFETzogVXNhciBnZXRBdXRoZW50aWNhdGVkVXNlciBlbiBsdWdhciBkZSBoZWFkZXJzXHJcbiAgICBjb25zdCBhdXRoUmVzdWx0ID0gYXdhaXQgZ2V0QXV0aGVudGljYXRlZFVzZXIocmVxdWVzdCk7XHJcblxyXG4gICAgaWYgKCFhdXRoUmVzdWx0LnVzZXJJZCkge1xyXG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xyXG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxyXG4gICAgICAgIGVycm9yOiBhdXRoUmVzdWx0LmVycm9yIHx8ICdVc3VhcmlvIG5vIGF1dGVudGljYWRvJyxcclxuICAgICAgICBtaWdyYXRpb246IHtcclxuICAgICAgICAgIHN0YXR1czogJ01JR1JBVEVEJyxcclxuICAgICAgICAgIG9sZE1ldGhvZDogJ2hlYWRlcnMgeC1jbGVyay11c2VyLWlkJyxcclxuICAgICAgICAgIG5ld01ldGhvZDogJ2dldEF1dGhlbnRpY2F0ZWRVc2VyKCknLFxyXG4gICAgICAgICAgbm90ZTogJ1lhIG5vIHVzYSBoZWFkZXJzIGRpcmVjdGFtZW50ZSdcclxuICAgICAgICB9XHJcbiAgICAgIH0sIHsgc3RhdHVzOiA0MDEgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgY2xlcmtVc2VySWQgPSBhdXRoUmVzdWx0LnVzZXJJZDtcclxuXHJcbiAgICBjb25zb2xlLmxvZygn8J+UjSBUZXN0IFNpbXBsZSBVc2VyOiBTZWFyY2hpbmcgZm9yIHVzZXI6JywgY2xlcmtVc2VySWQpO1xyXG5cclxuICAgIGlmICghc3VwYWJhc2VBZG1pbikge1xyXG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xyXG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxyXG4gICAgICAgIGVycm9yOiAnU3VwYWJhc2UgYWRtaW4gY2xpZW50IG5vdCBhdmFpbGFibGUnXHJcbiAgICAgIH0sIHsgc3RhdHVzOiA1MDAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gQ29uc3VsdGEgbXV5IHNpbXBsZSBzaW4gam9pbnNcclxuICAgIGNvbnN0IHsgZGF0YTogdXNlciwgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlQWRtaW5cclxuICAgICAgLmZyb20oJ3VzZXJfcHJvZmlsZXMnKVxyXG4gICAgICAuc2VsZWN0KCdpZCwgY2xlcmtfdXNlcl9pZCwgZW1haWwsIHJvbGVfaWQsIGlzX2FjdGl2ZScpXHJcbiAgICAgIC5lcSgnY2xlcmtfdXNlcl9pZCcsIGNsZXJrVXNlcklkKVxyXG4gICAgICAuc2luZ2xlKCk7XHJcblxyXG4gICAgaWYgKGVycm9yKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ/CflI0gVGVzdCBTaW1wbGUgVXNlcjogRXJyb3I6JywgZXJyb3IpO1xyXG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xyXG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxyXG4gICAgICAgIGVycm9yOiAnRGF0YWJhc2UgZXJyb3InLFxyXG4gICAgICAgIGRlYnVnOiB7XHJcbiAgICAgICAgICBjbGVya1VzZXJJZCxcclxuICAgICAgICAgIGVycm9yTWVzc2FnZTogZXJyb3IubWVzc2FnZSxcclxuICAgICAgICAgIGVycm9yQ29kZTogZXJyb3IuY29kZVxyXG4gICAgICAgIH1cclxuICAgICAgfSwgeyBzdGF0dXM6IDUwMCB9KTtcclxuICAgIH1cclxuXHJcbiAgICBpZiAoIXVzZXIpIHtcclxuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHtcclxuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcclxuICAgICAgICBlcnJvcjogJ1VzZXIgbm90IGZvdW5kJyxcclxuICAgICAgICBkZWJ1Zzoge1xyXG4gICAgICAgICAgY2xlcmtVc2VySWRcclxuICAgICAgICB9XHJcbiAgICAgIH0sIHsgc3RhdHVzOiA0MDQgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHtcclxuICAgICAgc3VjY2VzczogdHJ1ZSxcclxuICAgICAgdXNlcjogdXNlcixcclxuICAgICAgZGVidWc6IHtcclxuICAgICAgICBjbGVya1VzZXJJZCxcclxuICAgICAgICBmb3VuZDogdHJ1ZVxyXG4gICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ/CflI0gVGVzdCBTaW1wbGUgVXNlcjogVW5leHBlY3RlZCBlcnJvcjonLCBlcnJvcik7XHJcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xyXG4gICAgICBzdWNjZXNzOiBmYWxzZSxcclxuICAgICAgZXJyb3I6ICdVbmV4cGVjdGVkIGVycm9yJyxcclxuICAgICAgZGVidWc6IHtcclxuICAgICAgICBlcnJvck1lc3NhZ2U6IGVycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5tZXNzYWdlIDogJ1Vua25vd24gZXJyb3InXHJcbiAgICAgIH1cclxuICAgIH0sIHsgc3RhdHVzOiA1MDAgfSk7XHJcbiAgfVxyXG59XHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG4iXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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