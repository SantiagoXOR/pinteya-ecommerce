bb02de1eac2e2882a112ab37a8397f54
// ===================================
// PINTEYA E-COMMERCE - MIDDLEWARE DE SEGURIDAD
// ===================================
"use strict";

/* istanbul ignore next */
function cov_11ar75xfl0() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\middleware\\security.ts";
  var hash = "10cb8c84a6548b90c841b69f4904cbe62bc19c8e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\middleware\\security.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "2": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "3": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 24,
          column: 3
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 32
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 33
        }
      },
      "6": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 34
        }
      },
      "7": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 38
        }
      },
      "8": {
        start: {
          line: 26,
          column: 18
        },
        end: {
          line: 26,
          column: 54
        }
      },
      "9": {
        start: {
          line: 27,
          column: 20
        },
        end: {
          line: 48,
          column: 1
        }
      },
      "10": {
        start: {
          line: 50,
          column: 22
        },
        end: {
          line: 50,
          column: 31
        }
      },
      "11": {
        start: {
          line: 54,
          column: 15
        },
        end: {
          line: 54,
          column: 102
        }
      },
      "12": {
        start: {
          line: 55,
          column: 21
        },
        end: {
          line: 55,
          column: 45
        }
      },
      "13": {
        start: {
          line: 57,
          column: 17
        },
        end: {
          line: 57,
          column: 36
        }
      },
      "14": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 63,
          column: 5
        }
      },
      "15": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 62,
          column: 9
        }
      },
      "16": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 60,
          column: 32
        }
      },
      "17": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 18
        }
      },
      "18": {
        start: {
          line: 64,
          column: 16
        },
        end: {
          line: 64,
          column: 35
        }
      },
      "19": {
        start: {
          line: 65,
          column: 16
        },
        end: {
          line: 65,
          column: 26
        }
      },
      "20": {
        start: {
          line: 66,
          column: 24
        },
        end: {
          line: 66,
          column: 45
        }
      },
      "21": {
        start: {
          line: 67,
          column: 20
        },
        end: {
          line: 67,
          column: 42
        }
      },
      "22": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 75,
          column: 5
        }
      },
      "23": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 73,
          column: 11
        }
      },
      "24": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 20
        }
      },
      "25": {
        start: {
          line: 76,
          column: 4
        },
        end: {
          line: 78,
          column: 5
        }
      },
      "26": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 21
        }
      },
      "27": {
        start: {
          line: 80,
          column: 4
        },
        end: {
          line: 80,
          column: 20
        }
      },
      "28": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 81,
          column: 16
        }
      },
      "29": {
        start: {
          line: 90,
          column: 19
        },
        end: {
          line: 90,
          column: 50
        }
      },
      "30": {
        start: {
          line: 92,
          column: 16
        },
        end: {
          line: 92,
          column: 138
        }
      },
      "31": {
        start: {
          line: 93,
          column: 4
        },
        end: {
          line: 93,
          column: 57
        }
      },
      "32": {
        start: {
          line: 95,
          column: 25
        },
        end: {
          line: 95,
          column: 66
        }
      },
      "33": {
        start: {
          line: 96,
          column: 4
        },
        end: {
          line: 98,
          column: 7
        }
      },
      "34": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 97,
          column: 41
        }
      },
      "35": {
        start: {
          line: 100,
          column: 4
        },
        end: {
          line: 100,
          column: 52
        }
      },
      "36": {
        start: {
          line: 101,
          column: 4
        },
        end: {
          line: 101,
          column: 62
        }
      },
      "37": {
        start: {
          line: 102,
          column: 4
        },
        end: {
          line: 102,
          column: 79
        }
      },
      "38": {
        start: {
          line: 103,
          column: 4
        },
        end: {
          line: 103,
          column: 91
        }
      },
      "39": {
        start: {
          line: 105,
          column: 4
        },
        end: {
          line: 107,
          column: 5
        }
      },
      "40": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 106,
          column: 97
        }
      },
      "41": {
        start: {
          line: 108,
          column: 4
        },
        end: {
          line: 108,
          column: 20
        }
      },
      "42": {
        start: {
          line: 116,
          column: 25
        },
        end: {
          line: 116,
          column: 40
        }
      },
      "43": {
        start: {
          line: 118,
          column: 22
        },
        end: {
          line: 118,
          column: 55
        }
      },
      "44": {
        start: {
          line: 119,
          column: 4
        },
        end: {
          line: 124,
          column: 5
        }
      },
      "45": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 123,
          column: 10
        }
      },
      "46": {
        start: {
          line: 126,
          column: 4
        },
        end: {
          line: 149,
          column: 5
        }
      },
      "47": {
        start: {
          line: 131,
          column: 28
        },
        end: {
          line: 131,
          column: 63
        }
      },
      "48": {
        start: {
          line: 132,
          column: 30
        },
        end: {
          line: 132,
          column: 67
        }
      },
      "49": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 148,
          column: 9
        }
      },
      "50": {
        start: {
          line: 136,
          column: 38
        },
        end: {
          line: 141,
          column: 13
        }
      },
      "51": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 147,
          column: 13
        }
      },
      "52": {
        start: {
          line: 142,
          column: 64
        },
        end: {
          line: 142,
          column: 90
        }
      },
      "53": {
        start: {
          line: 143,
          column: 16
        },
        end: {
          line: 146,
          column: 18
        }
      },
      "54": {
        start: {
          line: 151,
          column: 26
        },
        end: {
          line: 151,
          column: 63
        }
      },
      "55": {
        start: {
          line: 152,
          column: 4
        },
        end: {
          line: 157,
          column: 5
        }
      },
      "56": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 156,
          column: 10
        }
      },
      "57": {
        start: {
          line: 158,
          column: 4
        },
        end: {
          line: 160,
          column: 6
        }
      },
      "58": {
        start: {
          line: 168,
          column: 15
        },
        end: {
          line: 168,
          column: 102
        }
      },
      "59": {
        start: {
          line: 169,
          column: 22
        },
        end: {
          line: 169,
          column: 68
        }
      },
      "60": {
        start: {
          line: 170,
          column: 4
        },
        end: {
          line: 177,
          column: 7
        }
      },
      "61": {
        start: {
          line: 180,
          column: 25
        },
        end: {
          line: 180,
          column: 40
        }
      },
      "62": {
        start: {
          line: 182,
          column: 4
        },
        end: {
          line: 184,
          column: 5
        }
      },
      "63": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 183,
          column: 20
        }
      },
      "64": {
        start: {
          line: 186,
          column: 23
        },
        end: {
          line: 186,
          column: 47
        }
      },
      "65": {
        start: {
          line: 187,
          column: 4
        },
        end: {
          line: 192,
          column: 5
        }
      },
      "66": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 188,
          column: 71
        }
      },
      "67": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 191,
          column: 11
        }
      },
      "68": {
        start: {
          line: 194,
          column: 4
        },
        end: {
          line: 204,
          column: 5
        }
      },
      "69": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 203,
          column: 9
        }
      },
      "70": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 196,
          column: 52
        }
      },
      "71": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 202,
          column: 15
        }
      },
      "72": {
        start: {
          line: 206,
          column: 21
        },
        end: {
          line: 206,
          column: 48
        }
      },
      "73": {
        start: {
          line: 207,
          column: 4
        },
        end: {
          line: 207,
          column: 40
        }
      },
      "74": {
        start: {
          line: 210,
          column: 16
        },
        end: {
          line: 210,
          column: 26
        }
      },
      "75": {
        start: {
          line: 211,
          column: 4
        },
        end: {
          line: 215,
          column: 5
        }
      },
      "76": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 214,
          column: 9
        }
      },
      "77": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 213,
          column: 38
        }
      },
      "78": {
        start: {
          line: 218,
          column: 4
        },
        end: {
          line: 225,
          column: 6
        }
      },
      "79": {
        start: {
          line: 220,
          column: 73
        },
        end: {
          line: 224,
          column: 13
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 16
          }
        },
        loc: {
          start: {
            line: 8,
            column: 30
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 28
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 29
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 30
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "4": {
        name: "checkRateLimit",
        decl: {
          start: {
            line: 53,
            column: 13
          },
          end: {
            line: 53,
            column: 27
          }
        },
        loc: {
          start: {
            line: 53,
            column: 37
          },
          end: {
            line: 82,
            column: 1
          }
        },
        line: 53
      },
      "5": {
        name: "addSecurityHeaders",
        decl: {
          start: {
            line: 88,
            column: 13
          },
          end: {
            line: 88,
            column: 31
          }
        },
        loc: {
          start: {
            line: 88,
            column: 42
          },
          end: {
            line: 109,
            column: 1
          }
        },
        line: 88
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 96,
            column: 41
          },
          end: {
            line: 96,
            column: 42
          }
        },
        loc: {
          start: {
            line: 96,
            column: 57
          },
          end: {
            line: 98,
            column: 5
          }
        },
        line: 96
      },
      "7": {
        name: "validateRequest",
        decl: {
          start: {
            line: 115,
            column: 13
          },
          end: {
            line: 115,
            column: 28
          }
        },
        loc: {
          start: {
            line: 115,
            column: 38
          },
          end: {
            line: 161,
            column: 1
          }
        },
        line: 115
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 142,
            column: 56
          },
          end: {
            line: 142,
            column: 57
          }
        },
        loc: {
          start: {
            line: 142,
            column: 64
          },
          end: {
            line: 142,
            column: 90
          }
        },
        line: 142
      },
      "9": {
        name: "logSecurityEvent",
        decl: {
          start: {
            line: 167,
            column: 13
          },
          end: {
            line: 167,
            column: 29
          }
        },
        loc: {
          start: {
            line: 167,
            column: 55
          },
          end: {
            line: 178,
            column: 1
          }
        },
        line: 167
      },
      "10": {
        name: "securityMiddleware",
        decl: {
          start: {
            line: 179,
            column: 9
          },
          end: {
            line: 179,
            column: 27
          }
        },
        loc: {
          start: {
            line: 179,
            column: 37
          },
          end: {
            line: 208,
            column: 1
          }
        },
        line: 179
      },
      "11": {
        name: "cleanupRateLimit",
        decl: {
          start: {
            line: 209,
            column: 9
          },
          end: {
            line: 209,
            column: 25
          }
        },
        loc: {
          start: {
            line: 209,
            column: 28
          },
          end: {
            line: 216,
            column: 1
          }
        },
        line: 209
      },
      "12": {
        name: "getRateLimitStats",
        decl: {
          start: {
            line: 217,
            column: 9
          },
          end: {
            line: 217,
            column: 26
          }
        },
        loc: {
          start: {
            line: 217,
            column: 29
          },
          end: {
            line: 226,
            column: 1
          }
        },
        line: 217
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 220,
            column: 57
          },
          end: {
            line: 220,
            column: 58
          }
        },
        loc: {
          start: {
            line: 220,
            column: 73
          },
          end: {
            line: 224,
            column: 13
          }
        },
        line: 220
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 54,
            column: 15
          },
          end: {
            line: 54,
            column: 102
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 15
          },
          end: {
            line: 54,
            column: 53
          }
        }, {
          start: {
            line: 54,
            column: 57
          },
          end: {
            line: 54,
            column: 89
          }
        }, {
          start: {
            line: 54,
            column: 93
          },
          end: {
            line: 54,
            column: 102
          }
        }],
        line: 54
      },
      "1": {
        loc: {
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "2": {
        loc: {
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 75,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 75,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "3": {
        loc: {
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 68,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 68,
            column: 16
          }
        }, {
          start: {
            line: 68,
            column: 20
          },
          end: {
            line: 68,
            column: 51
          }
        }],
        line: 68
      },
      "4": {
        loc: {
          start: {
            line: 76,
            column: 4
          },
          end: {
            line: 78,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 76,
            column: 4
          },
          end: {
            line: 78,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 76
      },
      "5": {
        loc: {
          start: {
            line: 92,
            column: 16
          },
          end: {
            line: 92,
            column: 138
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 92,
            column: 56
          },
          end: {
            line: 92,
            column: 93
          }
        }, {
          start: {
            line: 92,
            column: 96
          },
          end: {
            line: 92,
            column: 138
          }
        }],
        line: 92
      },
      "6": {
        loc: {
          start: {
            line: 105,
            column: 4
          },
          end: {
            line: 107,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 4
          },
          end: {
            line: 107,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 105
      },
      "7": {
        loc: {
          start: {
            line: 119,
            column: 4
          },
          end: {
            line: 124,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 4
          },
          end: {
            line: 124,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 119
      },
      "8": {
        loc: {
          start: {
            line: 119,
            column: 8
          },
          end: {
            line: 119,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 119,
            column: 8
          },
          end: {
            line: 119,
            column: 18
          }
        }, {
          start: {
            line: 119,
            column: 22
          },
          end: {
            line: 119,
            column: 43
          }
        }],
        line: 119
      },
      "9": {
        loc: {
          start: {
            line: 126,
            column: 4
          },
          end: {
            line: 149,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 4
          },
          end: {
            line: 149,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 126
      },
      "10": {
        loc: {
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 130,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 130,
            column: 30
          }
        }, {
          start: {
            line: 130,
            column: 34
          },
          end: {
            line: 130,
            column: 62
          }
        }],
        line: 126
      },
      "11": {
        loc: {
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 148,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 148,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      },
      "12": {
        loc: {
          start: {
            line: 134,
            column: 12
          },
          end: {
            line: 134,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 134,
            column: 12
          },
          end: {
            line: 134,
            column: 25
          }
        }, {
          start: {
            line: 134,
            column: 29
          },
          end: {
            line: 134,
            column: 56
          }
        }],
        line: 134
      },
      "13": {
        loc: {
          start: {
            line: 142,
            column: 12
          },
          end: {
            line: 147,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 12
          },
          end: {
            line: 147,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "14": {
        loc: {
          start: {
            line: 142,
            column: 16
          },
          end: {
            line: 142,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 142,
            column: 16
          },
          end: {
            line: 142,
            column: 28
          }
        }, {
          start: {
            line: 142,
            column: 32
          },
          end: {
            line: 142,
            column: 91
          }
        }],
        line: 142
      },
      "15": {
        loc: {
          start: {
            line: 152,
            column: 4
          },
          end: {
            line: 157,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 4
          },
          end: {
            line: 157,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 152
      },
      "16": {
        loc: {
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 152,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 152,
            column: 21
          }
        }, {
          start: {
            line: 152,
            column: 25
          },
          end: {
            line: 152,
            column: 67
          }
        }],
        line: 152
      },
      "17": {
        loc: {
          start: {
            line: 168,
            column: 15
          },
          end: {
            line: 168,
            column: 102
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 168,
            column: 15
          },
          end: {
            line: 168,
            column: 53
          }
        }, {
          start: {
            line: 168,
            column: 57
          },
          end: {
            line: 168,
            column: 89
          }
        }, {
          start: {
            line: 168,
            column: 93
          },
          end: {
            line: 168,
            column: 102
          }
        }],
        line: 168
      },
      "18": {
        loc: {
          start: {
            line: 169,
            column: 22
          },
          end: {
            line: 169,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 169,
            column: 22
          },
          end: {
            line: 169,
            column: 55
          }
        }, {
          start: {
            line: 169,
            column: 59
          },
          end: {
            line: 169,
            column: 68
          }
        }],
        line: 169
      },
      "19": {
        loc: {
          start: {
            line: 182,
            column: 4
          },
          end: {
            line: 184,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 182,
            column: 4
          },
          end: {
            line: 184,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 182
      },
      "20": {
        loc: {
          start: {
            line: 182,
            column: 8
          },
          end: {
            line: 182,
            column: 159
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 182,
            column: 8
          },
          end: {
            line: 182,
            column: 37
          }
        }, {
          start: {
            line: 182,
            column: 41
          },
          end: {
            line: 182,
            column: 72
          }
        }, {
          start: {
            line: 182,
            column: 76
          },
          end: {
            line: 182,
            column: 98
          }
        }, {
          start: {
            line: 182,
            column: 102
          },
          end: {
            line: 182,
            column: 128
          }
        }, {
          start: {
            line: 182,
            column: 132
          },
          end: {
            line: 182,
            column: 159
          }
        }],
        line: 182
      },
      "21": {
        loc: {
          start: {
            line: 187,
            column: 4
          },
          end: {
            line: 192,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 187,
            column: 4
          },
          end: {
            line: 192,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 187
      },
      "22": {
        loc: {
          start: {
            line: 194,
            column: 4
          },
          end: {
            line: 204,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 194,
            column: 4
          },
          end: {
            line: 204,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 194
      },
      "23": {
        loc: {
          start: {
            line: 195,
            column: 8
          },
          end: {
            line: 203,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 195,
            column: 8
          },
          end: {
            line: 203,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 195
      },
      "24": {
        loc: {
          start: {
            line: 212,
            column: 8
          },
          end: {
            line: 214,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 212,
            column: 8
          },
          end: {
            line: 214,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 212
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0, 0, 0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\middleware\\security.ts"],
      sourcesContent: ["// ===================================\r\n// PINTEYA E-COMMERCE - MIDDLEWARE DE SEGURIDAD\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { generateNonces, buildStrictCSP, buildDevelopmentCSP, createNonceHeaders } from '@/lib/security/csp-nonce';\r\n\r\n// ===================================\r\n// CONFIGURACI\xD3N DE RATE LIMITING\r\n// ===================================\r\n\r\ninterface RateLimitConfig {\r\n  windowMs: number;\r\n  maxRequests: number;\r\n}\r\n\r\nconst RATE_LIMITS: Record<string, RateLimitConfig> = {\r\n  '/api/payments': { windowMs: 60000, maxRequests: 10 }, // 10 requests per minute\r\n  '/api/user': { windowMs: 60000, maxRequests: 30 }, // 30 requests per minute\r\n  '/api/orders': { windowMs: 60000, maxRequests: 20 }, // 20 requests per minute\r\n  '/api/products': { windowMs: 60000, maxRequests: 100 }, // 100 requests per minute\r\n  default: { windowMs: 60000, maxRequests: 60 }, // 60 requests per minute\r\n};\r\n\r\n// Store para rate limiting (en producci\xF3n usar Redis)\r\nconst requestCounts = new Map<string, { count: number; resetTime: number }>();\r\n\r\n/**\r\n * Implementa rate limiting b\xE1sico\r\n */\r\nfunction checkRateLimit(request: NextRequest): boolean {\r\n  const ip = request.headers.get('x-forwarded-for') || request.headers.get('x-real-ip') || 'unknown';\r\n  const pathname = request.nextUrl.pathname;\r\n  \r\n  // Encontrar configuraci\xF3n de rate limit\r\n  let config = RATE_LIMITS.default;\r\n  for (const [path, pathConfig] of Object.entries(RATE_LIMITS)) {\r\n    if (pathname.startsWith(path)) {\r\n      config = pathConfig;\r\n      break;\r\n    }\r\n  }\r\n  \r\n  const key = `${ip}:${pathname}`;\r\n  const now = Date.now();\r\n  const windowStart = now - config.windowMs;\r\n  \r\n  const current = requestCounts.get(key);\r\n  \r\n  if (!current || current.resetTime < windowStart) {\r\n    // Nueva ventana o primera request\r\n    requestCounts.set(key, { count: 1, resetTime: now });\r\n    return true;\r\n  }\r\n  \r\n  if (current.count >= config.maxRequests) {\r\n    return false; // Rate limit excedido\r\n  }\r\n  \r\n  // Incrementar contador\r\n  current.count++;\r\n  return true;\r\n}\r\n\r\n// ===================================\r\n// HEADERS DE SEGURIDAD\r\n// ===================================\r\n\r\n/**\r\n * Agrega headers de seguridad a la respuesta\r\n */\r\nfunction addSecurityHeaders(response: NextResponse): NextResponse {\r\n  // Generar nonces para CSP\r\n  const nonces = generateNonces();\r\n  \r\n  // Content Security Policy con nonces\r\n  const csp = process.env.NODE_ENV === 'production' \r\n    ? buildStrictCSP(nonces)\r\n    : buildDevelopmentCSP(nonces);\r\n  \r\n  response.headers.set('Content-Security-Policy', csp);\r\n  \r\n  // Agregar nonces a los headers para que est\xE9n disponibles en la aplicaci\xF3n\r\n  const nonceHeaders = createNonceHeaders(nonces);\r\n  Object.entries(nonceHeaders).forEach(([key, value]) => {\r\n    response.headers.set(key, value);\r\n  });\r\n  \r\n  // Otros headers de seguridad\r\n  response.headers.set('X-Frame-Options', 'DENY');\r\n  response.headers.set('X-Content-Type-Options', 'nosniff');\r\n  response.headers.set('Referrer-Policy', 'strict-origin-when-cross-origin');\r\n  response.headers.set('Permissions-Policy', 'camera=(), microphone=(), geolocation=()');\r\n  \r\n  // HSTS (solo en HTTPS)\r\n  if (process.env.NODE_ENV === 'production') {\r\n    response.headers.set('Strict-Transport-Security', 'max-age=31536000; includeSubDomains');\r\n  }\r\n  \r\n  return response;\r\n}\r\n\r\n// ===================================\r\n// VALIDACI\xD3N DE REQUESTS\r\n// ===================================\r\n\r\n/**\r\n * Valida que el request sea seguro\r\n */\r\nfunction validateRequest(request: NextRequest): { isValid: boolean; error?: string } {\r\n  const { pathname } = request.nextUrl;\r\n  \r\n  // Validar User-Agent (b\xE1sico)\r\n  const userAgent = request.headers.get('user-agent');\r\n  if (!userAgent || userAgent.length < 10) {\r\n    return { isValid: false, error: 'Invalid User-Agent' };\r\n  }\r\n  \r\n  // Validar Content-Type para requests con body (solo para APIs que requieren JSON)\r\n  if (['POST', 'PUT', 'PATCH'].includes(request.method) && pathname.startsWith('/api/')) {\r\n    const contentType = request.headers.get('content-type');\r\n    const contentLength = request.headers.get('content-length');\r\n\r\n    // Solo validar Content-Type si hay contenido en el body\r\n    if (contentLength && parseInt(contentLength) > 0) {\r\n      // Permitir tipos de contenido v\xE1lidos\r\n      const validContentTypes = [\r\n        'application/json',\r\n        'application/x-www-form-urlencoded',\r\n        'multipart/form-data',\r\n        'text/plain'\r\n      ];\r\n\r\n      if (!contentType || !validContentTypes.some(type => contentType.includes(type))) {\r\n        return { isValid: false, error: 'Invalid Content-Type' };\r\n      }\r\n    }\r\n  }\r\n  \r\n  // Validar tama\xF1o del request (b\xE1sico)\r\n  const contentLength = request.headers.get('content-length');\r\n  if (contentLength && parseInt(contentLength) > 10 * 1024 * 1024) { // 10MB max\r\n    return { isValid: false, error: 'Request too large' };\r\n  }\r\n  \r\n  return { isValid: true };\r\n}\r\n\r\n// ===================================\r\n// LOGGING DE SEGURIDAD\r\n// ===================================\r\n\r\n/**\r\n * Log de eventos de seguridad\r\n */\r\nfunction logSecurityEvent(\r\n  event: 'RATE_LIMIT' | 'INVALID_REQUEST' | 'SUSPICIOUS_ACTIVITY',\r\n  request: NextRequest,\r\n  details?: string\r\n) {\r\n  const ip = request.headers.get('x-forwarded-for') || request.headers.get('x-real-ip') || 'unknown';\r\n  const userAgent = request.headers.get('user-agent') || 'unknown';\r\n  \r\n  console.warn(`[SECURITY] ${event}`, {\r\n    ip,\r\n    pathname: request.nextUrl.pathname,\r\n    method: request.method,\r\n    userAgent,\r\n    timestamp: new Date().toISOString(),\r\n    details,\r\n  });\r\n}\r\n\r\n// ===================================\r\n// MIDDLEWARE PRINCIPAL\r\n// ===================================\r\n\r\n/**\r\n * Middleware de seguridad principal\r\n */\r\nexport function securityMiddleware(request: NextRequest): NextResponse | null {\r\n  const { pathname } = request.nextUrl;\r\n  \r\n  // Skip para archivos est\xE1ticos\r\n  if (\r\n    pathname.startsWith('/_next') ||\r\n    pathname.startsWith('/favicon') ||\r\n    pathname.includes('.') ||\r\n    pathname === '/robots.txt' ||\r\n    pathname === '/sitemap.xml'\r\n  ) {\r\n    return null; // Continuar sin procesar\r\n  }\r\n  \r\n  // Validar request\r\n  const validation = validateRequest(request);\r\n  if (!validation.isValid) {\r\n    logSecurityEvent('INVALID_REQUEST', request, validation.error);\r\n    return new NextResponse('Bad Request', { status: 400 });\r\n  }\r\n  \r\n  // Verificar rate limiting para APIs\r\n  if (pathname.startsWith('/api/')) {\r\n    if (!checkRateLimit(request)) {\r\n      logSecurityEvent('RATE_LIMIT', request);\r\n      return new NextResponse('Too Many Requests', { \r\n        status: 429,\r\n        headers: {\r\n          'Retry-After': '60'\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  // Crear respuesta con headers de seguridad\r\n  const response = NextResponse.next();\r\n  return addSecurityHeaders(response);\r\n}\r\n\r\n// ===================================\r\n// UTILIDADES ADICIONALES\r\n// ===================================\r\n\r\n/**\r\n * Limpia el store de rate limiting (llamar peri\xF3dicamente)\r\n */\r\nexport function cleanupRateLimit() {\r\n  const now = Date.now();\r\n  for (const [key, data] of Array.from(requestCounts.entries())) {\r\n    if (now - data.resetTime > 300000) { // 5 minutos\r\n      requestCounts.delete(key);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Obtiene estad\xEDsticas de rate limiting\r\n */\r\nexport function getRateLimitStats() {\r\n  return {\r\n    totalKeys: requestCounts.size,\r\n    entries: Array.from(requestCounts.entries()).map(([key, data]) => ({\r\n      key,\r\n      count: data.count,\r\n      resetTime: new Date(data.resetTime).toISOString(),\r\n    })),\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["cleanupRateLimit", "getRateLimitStats", "securityMiddleware", "RATE_LIMITS", "windowMs", "maxRequests", "default", "requestCounts", "Map", "checkRateLimit", "request", "ip", "headers", "get", "pathname", "nextUrl", "config", "path", "pathConfig", "Object", "entries", "startsWith", "key", "now", "Date", "windowStart", "current", "resetTime", "set", "count", "addSecurityHeaders", "response", "nonces", "generateNonces", "csp", "process", "env", "NODE_ENV", "buildStrictCSP", "buildDevelopmentCSP", "nonceHeaders", "createNonceHeaders", "forEach", "value", "validateRequest", "userAgent", "length", "isValid", "error", "includes", "method", "contentType", "contentLength", "parseInt", "validContentTypes", "some", "type", "logSecurityEvent", "event", "details", "console", "warn", "timestamp", "toISOString", "validation", "NextResponse", "status", "next", "data", "Array", "from", "delete", "totalKeys", "size", "map"],
      mappings: "AAAA,sCAAsC;AACtC,+CAA+C;AAC/C,sCAAsC;;;;;;;;;;;;QAgOtBA;eAAAA;;QAYAC;eAAAA;;QA1DAC;eAAAA;;;wBAhL0B;0BAC8C;AAWxF,MAAMC,cAA+C;IACnD,iBAAiB;QAAEC,UAAU;QAAOC,aAAa;IAAG;IACpD,aAAa;QAAED,UAAU;QAAOC,aAAa;IAAG;IAChD,eAAe;QAAED,UAAU;QAAOC,aAAa;IAAG;IAClD,iBAAiB;QAAED,UAAU;QAAOC,aAAa;IAAI;IACrDC,SAAS;QAAEF,UAAU;QAAOC,aAAa;IAAG;AAC9C;AAEA,sDAAsD;AACtD,MAAME,gBAAgB,IAAIC;AAE1B;;CAEC,GACD,SAASC,eAAeC,OAAoB;IAC1C,MAAMC,KAAKD,QAAQE,OAAO,CAACC,GAAG,CAAC,sBAAsBH,QAAQE,OAAO,CAACC,GAAG,CAAC,gBAAgB;IACzF,MAAMC,WAAWJ,QAAQK,OAAO,CAACD,QAAQ;IAEzC,wCAAwC;IACxC,IAAIE,SAASb,YAAYG,OAAO;IAChC,KAAK,MAAM,CAACW,MAAMC,WAAW,IAAIC,OAAOC,OAAO,CAACjB,aAAc;QAC5D,IAAIW,SAASO,UAAU,CAACJ,OAAO;YAC7BD,SAASE;YACT;QACF;IACF;IAEA,MAAMI,MAAM,GAAGX,GAAG,CAAC,EAAEG,UAAU;IAC/B,MAAMS,MAAMC,KAAKD,GAAG;IACpB,MAAME,cAAcF,MAAMP,OAAOZ,QAAQ;IAEzC,MAAMsB,UAAUnB,cAAcM,GAAG,CAACS;IAElC,IAAI,CAACI,WAAWA,QAAQC,SAAS,GAAGF,aAAa;QAC/C,kCAAkC;QAClClB,cAAcqB,GAAG,CAACN,KAAK;YAAEO,OAAO;YAAGF,WAAWJ;QAAI;QAClD,OAAO;IACT;IAEA,IAAIG,QAAQG,KAAK,IAAIb,OAAOX,WAAW,EAAE;QACvC,OAAO,OAAO,sBAAsB;IACtC;IAEA,uBAAuB;IACvBqB,QAAQG,KAAK;IACb,OAAO;AACT;AAEA,sCAAsC;AACtC,uBAAuB;AACvB,sCAAsC;AAEtC;;CAEC,GACD,SAASC,mBAAmBC,QAAsB;IAChD,0BAA0B;IAC1B,MAAMC,SAASC,IAAAA,wBAAc;IAE7B,qCAAqC;IACrC,MAAMC,MAAMC,QAAQC,GAAG,CAACC,QAAQ,KAAK,eACjCC,IAAAA,wBAAc,EAACN,UACfO,IAAAA,6BAAmB,EAACP;IAExBD,SAASnB,OAAO,CAACgB,GAAG,CAAC,2BAA2BM;IAEhD,2EAA2E;IAC3E,MAAMM,eAAeC,IAAAA,4BAAkB,EAACT;IACxCb,OAAOC,OAAO,CAACoB,cAAcE,OAAO,CAAC,CAAC,CAACpB,KAAKqB,MAAM;QAChDZ,SAASnB,OAAO,CAACgB,GAAG,CAACN,KAAKqB;IAC5B;IAEA,6BAA6B;IAC7BZ,SAASnB,OAAO,CAACgB,GAAG,CAAC,mBAAmB;IACxCG,SAASnB,OAAO,CAACgB,GAAG,CAAC,0BAA0B;IAC/CG,SAASnB,OAAO,CAACgB,GAAG,CAAC,mBAAmB;IACxCG,SAASnB,OAAO,CAACgB,GAAG,CAAC,sBAAsB;IAE3C,uBAAuB;IACvB,IAAIO,QAAQC,GAAG,CAACC,QAAQ,KAAK,cAAc;QACzCN,SAASnB,OAAO,CAACgB,GAAG,CAAC,6BAA6B;IACpD;IAEA,OAAOG;AACT;AAEA,sCAAsC;AACtC,yBAAyB;AACzB,sCAAsC;AAEtC;;CAEC,GACD,SAASa,gBAAgBlC,OAAoB;IAC3C,MAAM,EAAEI,QAAQ,EAAE,GAAGJ,QAAQK,OAAO;IAEpC,8BAA8B;IAC9B,MAAM8B,YAAYnC,QAAQE,OAAO,CAACC,GAAG,CAAC;IACtC,IAAI,CAACgC,aAAaA,UAAUC,MAAM,GAAG,IAAI;QACvC,OAAO;YAAEC,SAAS;YAAOC,OAAO;QAAqB;IACvD;IAEA,kFAAkF;IAClF,IAAI;QAAC;QAAQ;QAAO;KAAQ,CAACC,QAAQ,CAACvC,QAAQwC,MAAM,KAAKpC,SAASO,UAAU,CAAC,UAAU;QACrF,MAAM8B,cAAczC,QAAQE,OAAO,CAACC,GAAG,CAAC;QACxC,MAAMuC,gBAAgB1C,QAAQE,OAAO,CAACC,GAAG,CAAC;QAE1C,wDAAwD;QACxD,IAAIuC,iBAAiBC,SAASD,iBAAiB,GAAG;YAChD,sCAAsC;YACtC,MAAME,oBAAoB;gBACxB;gBACA;gBACA;gBACA;aACD;YAED,IAAI,CAACH,eAAe,CAACG,kBAAkBC,IAAI,CAACC,CAAAA,OAAQL,YAAYF,QAAQ,CAACO,QAAQ;gBAC/E,OAAO;oBAAET,SAAS;oBAAOC,OAAO;gBAAuB;YACzD;QACF;IACF;IAEA,sCAAsC;IACtC,MAAMI,gBAAgB1C,QAAQE,OAAO,CAACC,GAAG,CAAC;IAC1C,IAAIuC,iBAAiBC,SAASD,iBAAiB,KAAK,OAAO,MAAM;QAC/D,OAAO;YAAEL,SAAS;YAAOC,OAAO;QAAoB;IACtD;IAEA,OAAO;QAAED,SAAS;IAAK;AACzB;AAEA,sCAAsC;AACtC,uBAAuB;AACvB,sCAAsC;AAEtC;;CAEC,GACD,SAASU,iBACPC,KAA+D,EAC/DhD,OAAoB,EACpBiD,OAAgB;IAEhB,MAAMhD,KAAKD,QAAQE,OAAO,CAACC,GAAG,CAAC,sBAAsBH,QAAQE,OAAO,CAACC,GAAG,CAAC,gBAAgB;IACzF,MAAMgC,YAAYnC,QAAQE,OAAO,CAACC,GAAG,CAAC,iBAAiB;IAEvD+C,QAAQC,IAAI,CAAC,CAAC,WAAW,EAAEH,OAAO,EAAE;QAClC/C;QACAG,UAAUJ,QAAQK,OAAO,CAACD,QAAQ;QAClCoC,QAAQxC,QAAQwC,MAAM;QACtBL;QACAiB,WAAW,IAAItC,OAAOuC,WAAW;QACjCJ;IACF;AACF;AASO,SAASzD,mBAAmBQ,OAAoB;IACrD,MAAM,EAAEI,QAAQ,EAAE,GAAGJ,QAAQK,OAAO;IAEpC,+BAA+B;IAC/B,IACED,SAASO,UAAU,CAAC,aACpBP,SAASO,UAAU,CAAC,eACpBP,SAASmC,QAAQ,CAAC,QAClBnC,aAAa,iBACbA,aAAa,gBACb;QACA,OAAO,MAAM,yBAAyB;IACxC;IAEA,kBAAkB;IAClB,MAAMkD,aAAapB,gBAAgBlC;IACnC,IAAI,CAACsD,WAAWjB,OAAO,EAAE;QACvBU,iBAAiB,mBAAmB/C,SAASsD,WAAWhB,KAAK;QAC7D,OAAO,IAAIiB,oBAAY,CAAC,eAAe;YAAEC,QAAQ;QAAI;IACvD;IAEA,oCAAoC;IACpC,IAAIpD,SAASO,UAAU,CAAC,UAAU;QAChC,IAAI,CAACZ,eAAeC,UAAU;YAC5B+C,iBAAiB,cAAc/C;YAC/B,OAAO,IAAIuD,oBAAY,CAAC,qBAAqB;gBAC3CC,QAAQ;gBACRtD,SAAS;oBACP,eAAe;gBACjB;YACF;QACF;IACF;IAEA,2CAA2C;IAC3C,MAAMmB,WAAWkC,oBAAY,CAACE,IAAI;IAClC,OAAOrC,mBAAmBC;AAC5B;AASO,SAAS/B;IACd,MAAMuB,MAAMC,KAAKD,GAAG;IACpB,KAAK,MAAM,CAACD,KAAK8C,KAAK,IAAIC,MAAMC,IAAI,CAAC/D,cAAca,OAAO,IAAK;QAC7D,IAAIG,MAAM6C,KAAKzC,SAAS,GAAG,QAAQ;YACjCpB,cAAcgE,MAAM,CAACjD;QACvB;IACF;AACF;AAKO,SAASrB;IACd,OAAO;QACLuE,WAAWjE,cAAckE,IAAI;QAC7BrD,SAASiD,MAAMC,IAAI,CAAC/D,cAAca,OAAO,IAAIsD,GAAG,CAAC,CAAC,CAACpD,KAAK8C,KAAK,GAAM,CAAA;gBACjE9C;gBACAO,OAAOuC,KAAKvC,KAAK;gBACjBF,WAAW,IAAIH,KAAK4C,KAAKzC,SAAS,EAAEoC,WAAW;YACjD,CAAA;IACF;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "10cb8c84a6548b90c841b69f4904cbe62bc19c8e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_11ar75xfl0 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_11ar75xfl0();
cov_11ar75xfl0().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_11ar75xfl0().f[0]++;
  cov_11ar75xfl0().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_11ar75xfl0().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_11ar75xfl0().s[3]++;
_export(exports, {
  get cleanupRateLimit() {
    /* istanbul ignore next */
    cov_11ar75xfl0().f[1]++;
    cov_11ar75xfl0().s[4]++;
    return cleanupRateLimit;
  },
  get getRateLimitStats() {
    /* istanbul ignore next */
    cov_11ar75xfl0().f[2]++;
    cov_11ar75xfl0().s[5]++;
    return getRateLimitStats;
  },
  get securityMiddleware() {
    /* istanbul ignore next */
    cov_11ar75xfl0().f[3]++;
    cov_11ar75xfl0().s[6]++;
    return securityMiddleware;
  }
});
const _server =
/* istanbul ignore next */
(cov_11ar75xfl0().s[7]++, require("next/server"));
const _cspnonce =
/* istanbul ignore next */
(cov_11ar75xfl0().s[8]++, require("../lib/security/csp-nonce"));
const RATE_LIMITS =
/* istanbul ignore next */
(cov_11ar75xfl0().s[9]++, {
  '/api/payments': {
    windowMs: 60000,
    maxRequests: 10
  },
  '/api/user': {
    windowMs: 60000,
    maxRequests: 30
  },
  '/api/orders': {
    windowMs: 60000,
    maxRequests: 20
  },
  '/api/products': {
    windowMs: 60000,
    maxRequests: 100
  },
  default: {
    windowMs: 60000,
    maxRequests: 60
  }
});
// Store para rate limiting (en producción usar Redis)
const requestCounts =
/* istanbul ignore next */
(cov_11ar75xfl0().s[10]++, new Map());
/**
 * Implementa rate limiting básico
 */
function checkRateLimit(request) {
  /* istanbul ignore next */
  cov_11ar75xfl0().f[4]++;
  const ip =
  /* istanbul ignore next */
  (cov_11ar75xfl0().s[11]++,
  /* istanbul ignore next */
  (cov_11ar75xfl0().b[0][0]++, request.headers.get('x-forwarded-for')) ||
  /* istanbul ignore next */
  (cov_11ar75xfl0().b[0][1]++, request.headers.get('x-real-ip')) ||
  /* istanbul ignore next */
  (cov_11ar75xfl0().b[0][2]++, 'unknown'));
  const pathname =
  /* istanbul ignore next */
  (cov_11ar75xfl0().s[12]++, request.nextUrl.pathname);
  // Encontrar configuración de rate limit
  let config =
  /* istanbul ignore next */
  (cov_11ar75xfl0().s[13]++, RATE_LIMITS.default);
  /* istanbul ignore next */
  cov_11ar75xfl0().s[14]++;
  for (const [path, pathConfig] of Object.entries(RATE_LIMITS)) {
    /* istanbul ignore next */
    cov_11ar75xfl0().s[15]++;
    if (pathname.startsWith(path)) {
      /* istanbul ignore next */
      cov_11ar75xfl0().b[1][0]++;
      cov_11ar75xfl0().s[16]++;
      config = pathConfig;
      /* istanbul ignore next */
      cov_11ar75xfl0().s[17]++;
      break;
    } else
    /* istanbul ignore next */
    {
      cov_11ar75xfl0().b[1][1]++;
    }
  }
  const key =
  /* istanbul ignore next */
  (cov_11ar75xfl0().s[18]++, `${ip}:${pathname}`);
  const now =
  /* istanbul ignore next */
  (cov_11ar75xfl0().s[19]++, Date.now());
  const windowStart =
  /* istanbul ignore next */
  (cov_11ar75xfl0().s[20]++, now - config.windowMs);
  const current =
  /* istanbul ignore next */
  (cov_11ar75xfl0().s[21]++, requestCounts.get(key));
  /* istanbul ignore next */
  cov_11ar75xfl0().s[22]++;
  if (
  /* istanbul ignore next */
  (cov_11ar75xfl0().b[3][0]++, !current) ||
  /* istanbul ignore next */
  (cov_11ar75xfl0().b[3][1]++, current.resetTime < windowStart)) {
    /* istanbul ignore next */
    cov_11ar75xfl0().b[2][0]++;
    cov_11ar75xfl0().s[23]++;
    // Nueva ventana o primera request
    requestCounts.set(key, {
      count: 1,
      resetTime: now
    });
    /* istanbul ignore next */
    cov_11ar75xfl0().s[24]++;
    return true;
  } else
  /* istanbul ignore next */
  {
    cov_11ar75xfl0().b[2][1]++;
  }
  cov_11ar75xfl0().s[25]++;
  if (current.count >= config.maxRequests) {
    /* istanbul ignore next */
    cov_11ar75xfl0().b[4][0]++;
    cov_11ar75xfl0().s[26]++;
    return false; // Rate limit excedido
  } else
  /* istanbul ignore next */
  {
    cov_11ar75xfl0().b[4][1]++;
  }
  // Incrementar contador
  cov_11ar75xfl0().s[27]++;
  current.count++;
  /* istanbul ignore next */
  cov_11ar75xfl0().s[28]++;
  return true;
}
// ===================================
// HEADERS DE SEGURIDAD
// ===================================
/**
 * Agrega headers de seguridad a la respuesta
 */
function addSecurityHeaders(response) {
  /* istanbul ignore next */
  cov_11ar75xfl0().f[5]++;
  // Generar nonces para CSP
  const nonces =
  /* istanbul ignore next */
  (cov_11ar75xfl0().s[29]++, (0, _cspnonce.generateNonces)());
  // Content Security Policy con nonces
  const csp =
  /* istanbul ignore next */
  (cov_11ar75xfl0().s[30]++, process.env.NODE_ENV === 'production' ?
  /* istanbul ignore next */
  (cov_11ar75xfl0().b[5][0]++, (0, _cspnonce.buildStrictCSP)(nonces)) :
  /* istanbul ignore next */
  (cov_11ar75xfl0().b[5][1]++, (0, _cspnonce.buildDevelopmentCSP)(nonces)));
  /* istanbul ignore next */
  cov_11ar75xfl0().s[31]++;
  response.headers.set('Content-Security-Policy', csp);
  // Agregar nonces a los headers para que estén disponibles en la aplicación
  const nonceHeaders =
  /* istanbul ignore next */
  (cov_11ar75xfl0().s[32]++, (0, _cspnonce.createNonceHeaders)(nonces));
  /* istanbul ignore next */
  cov_11ar75xfl0().s[33]++;
  Object.entries(nonceHeaders).forEach(([key, value]) => {
    /* istanbul ignore next */
    cov_11ar75xfl0().f[6]++;
    cov_11ar75xfl0().s[34]++;
    response.headers.set(key, value);
  });
  // Otros headers de seguridad
  /* istanbul ignore next */
  cov_11ar75xfl0().s[35]++;
  response.headers.set('X-Frame-Options', 'DENY');
  /* istanbul ignore next */
  cov_11ar75xfl0().s[36]++;
  response.headers.set('X-Content-Type-Options', 'nosniff');
  /* istanbul ignore next */
  cov_11ar75xfl0().s[37]++;
  response.headers.set('Referrer-Policy', 'strict-origin-when-cross-origin');
  /* istanbul ignore next */
  cov_11ar75xfl0().s[38]++;
  response.headers.set('Permissions-Policy', 'camera=(), microphone=(), geolocation=()');
  // HSTS (solo en HTTPS)
  /* istanbul ignore next */
  cov_11ar75xfl0().s[39]++;
  if (process.env.NODE_ENV === 'production') {
    /* istanbul ignore next */
    cov_11ar75xfl0().b[6][0]++;
    cov_11ar75xfl0().s[40]++;
    response.headers.set('Strict-Transport-Security', 'max-age=31536000; includeSubDomains');
  } else
  /* istanbul ignore next */
  {
    cov_11ar75xfl0().b[6][1]++;
  }
  cov_11ar75xfl0().s[41]++;
  return response;
}
// ===================================
// VALIDACIÓN DE REQUESTS
// ===================================
/**
 * Valida que el request sea seguro
 */
function validateRequest(request) {
  /* istanbul ignore next */
  cov_11ar75xfl0().f[7]++;
  const {
    pathname
  } =
  /* istanbul ignore next */
  (cov_11ar75xfl0().s[42]++, request.nextUrl);
  // Validar User-Agent (básico)
  const userAgent =
  /* istanbul ignore next */
  (cov_11ar75xfl0().s[43]++, request.headers.get('user-agent'));
  /* istanbul ignore next */
  cov_11ar75xfl0().s[44]++;
  if (
  /* istanbul ignore next */
  (cov_11ar75xfl0().b[8][0]++, !userAgent) ||
  /* istanbul ignore next */
  (cov_11ar75xfl0().b[8][1]++, userAgent.length < 10)) {
    /* istanbul ignore next */
    cov_11ar75xfl0().b[7][0]++;
    cov_11ar75xfl0().s[45]++;
    return {
      isValid: false,
      error: 'Invalid User-Agent'
    };
  } else
  /* istanbul ignore next */
  {
    cov_11ar75xfl0().b[7][1]++;
  }
  // Validar Content-Type para requests con body (solo para APIs que requieren JSON)
  cov_11ar75xfl0().s[46]++;
  if (
  /* istanbul ignore next */
  (cov_11ar75xfl0().b[10][0]++, ['POST', 'PUT', 'PATCH'].includes(request.method)) &&
  /* istanbul ignore next */
  (cov_11ar75xfl0().b[10][1]++, pathname.startsWith('/api/'))) {
    /* istanbul ignore next */
    cov_11ar75xfl0().b[9][0]++;
    const contentType =
    /* istanbul ignore next */
    (cov_11ar75xfl0().s[47]++, request.headers.get('content-type'));
    const contentLength =
    /* istanbul ignore next */
    (cov_11ar75xfl0().s[48]++, request.headers.get('content-length'));
    // Solo validar Content-Type si hay contenido en el body
    /* istanbul ignore next */
    cov_11ar75xfl0().s[49]++;
    if (
    /* istanbul ignore next */
    (cov_11ar75xfl0().b[12][0]++, contentLength) &&
    /* istanbul ignore next */
    (cov_11ar75xfl0().b[12][1]++, parseInt(contentLength) > 0)) {
      /* istanbul ignore next */
      cov_11ar75xfl0().b[11][0]++;
      // Permitir tipos de contenido válidos
      const validContentTypes =
      /* istanbul ignore next */
      (cov_11ar75xfl0().s[50]++, ['application/json', 'application/x-www-form-urlencoded', 'multipart/form-data', 'text/plain']);
      /* istanbul ignore next */
      cov_11ar75xfl0().s[51]++;
      if (
      /* istanbul ignore next */
      (cov_11ar75xfl0().b[14][0]++, !contentType) ||
      /* istanbul ignore next */
      (cov_11ar75xfl0().b[14][1]++, !validContentTypes.some(type => {
        /* istanbul ignore next */
        cov_11ar75xfl0().f[8]++;
        cov_11ar75xfl0().s[52]++;
        return contentType.includes(type);
      }))) {
        /* istanbul ignore next */
        cov_11ar75xfl0().b[13][0]++;
        cov_11ar75xfl0().s[53]++;
        return {
          isValid: false,
          error: 'Invalid Content-Type'
        };
      } else
      /* istanbul ignore next */
      {
        cov_11ar75xfl0().b[13][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_11ar75xfl0().b[11][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_11ar75xfl0().b[9][1]++;
  }
  // Validar tamaño del request (básico)
  const contentLength =
  /* istanbul ignore next */
  (cov_11ar75xfl0().s[54]++, request.headers.get('content-length'));
  /* istanbul ignore next */
  cov_11ar75xfl0().s[55]++;
  if (
  /* istanbul ignore next */
  (cov_11ar75xfl0().b[16][0]++, contentLength) &&
  /* istanbul ignore next */
  (cov_11ar75xfl0().b[16][1]++, parseInt(contentLength) > 10 * 1024 * 1024)) {
    /* istanbul ignore next */
    cov_11ar75xfl0().b[15][0]++;
    cov_11ar75xfl0().s[56]++;
    return {
      isValid: false,
      error: 'Request too large'
    };
  } else
  /* istanbul ignore next */
  {
    cov_11ar75xfl0().b[15][1]++;
  }
  cov_11ar75xfl0().s[57]++;
  return {
    isValid: true
  };
}
// ===================================
// LOGGING DE SEGURIDAD
// ===================================
/**
 * Log de eventos de seguridad
 */
function logSecurityEvent(event, request, details) {
  /* istanbul ignore next */
  cov_11ar75xfl0().f[9]++;
  const ip =
  /* istanbul ignore next */
  (cov_11ar75xfl0().s[58]++,
  /* istanbul ignore next */
  (cov_11ar75xfl0().b[17][0]++, request.headers.get('x-forwarded-for')) ||
  /* istanbul ignore next */
  (cov_11ar75xfl0().b[17][1]++, request.headers.get('x-real-ip')) ||
  /* istanbul ignore next */
  (cov_11ar75xfl0().b[17][2]++, 'unknown'));
  const userAgent =
  /* istanbul ignore next */
  (cov_11ar75xfl0().s[59]++,
  /* istanbul ignore next */
  (cov_11ar75xfl0().b[18][0]++, request.headers.get('user-agent')) ||
  /* istanbul ignore next */
  (cov_11ar75xfl0().b[18][1]++, 'unknown'));
  /* istanbul ignore next */
  cov_11ar75xfl0().s[60]++;
  console.warn(`[SECURITY] ${event}`, {
    ip,
    pathname: request.nextUrl.pathname,
    method: request.method,
    userAgent,
    timestamp: new Date().toISOString(),
    details
  });
}
function securityMiddleware(request) {
  /* istanbul ignore next */
  cov_11ar75xfl0().f[10]++;
  const {
    pathname
  } =
  /* istanbul ignore next */
  (cov_11ar75xfl0().s[61]++, request.nextUrl);
  // Skip para archivos estáticos
  /* istanbul ignore next */
  cov_11ar75xfl0().s[62]++;
  if (
  /* istanbul ignore next */
  (cov_11ar75xfl0().b[20][0]++, pathname.startsWith('/_next')) ||
  /* istanbul ignore next */
  (cov_11ar75xfl0().b[20][1]++, pathname.startsWith('/favicon')) ||
  /* istanbul ignore next */
  (cov_11ar75xfl0().b[20][2]++, pathname.includes('.')) ||
  /* istanbul ignore next */
  (cov_11ar75xfl0().b[20][3]++, pathname === '/robots.txt') ||
  /* istanbul ignore next */
  (cov_11ar75xfl0().b[20][4]++, pathname === '/sitemap.xml')) {
    /* istanbul ignore next */
    cov_11ar75xfl0().b[19][0]++;
    cov_11ar75xfl0().s[63]++;
    return null; // Continuar sin procesar
  } else
  /* istanbul ignore next */
  {
    cov_11ar75xfl0().b[19][1]++;
  }
  // Validar request
  const validation =
  /* istanbul ignore next */
  (cov_11ar75xfl0().s[64]++, validateRequest(request));
  /* istanbul ignore next */
  cov_11ar75xfl0().s[65]++;
  if (!validation.isValid) {
    /* istanbul ignore next */
    cov_11ar75xfl0().b[21][0]++;
    cov_11ar75xfl0().s[66]++;
    logSecurityEvent('INVALID_REQUEST', request, validation.error);
    /* istanbul ignore next */
    cov_11ar75xfl0().s[67]++;
    return new _server.NextResponse('Bad Request', {
      status: 400
    });
  } else
  /* istanbul ignore next */
  {
    cov_11ar75xfl0().b[21][1]++;
  }
  // Verificar rate limiting para APIs
  cov_11ar75xfl0().s[68]++;
  if (pathname.startsWith('/api/')) {
    /* istanbul ignore next */
    cov_11ar75xfl0().b[22][0]++;
    cov_11ar75xfl0().s[69]++;
    if (!checkRateLimit(request)) {
      /* istanbul ignore next */
      cov_11ar75xfl0().b[23][0]++;
      cov_11ar75xfl0().s[70]++;
      logSecurityEvent('RATE_LIMIT', request);
      /* istanbul ignore next */
      cov_11ar75xfl0().s[71]++;
      return new _server.NextResponse('Too Many Requests', {
        status: 429,
        headers: {
          'Retry-After': '60'
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_11ar75xfl0().b[23][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_11ar75xfl0().b[22][1]++;
  }
  // Crear respuesta con headers de seguridad
  const response =
  /* istanbul ignore next */
  (cov_11ar75xfl0().s[72]++, _server.NextResponse.next());
  /* istanbul ignore next */
  cov_11ar75xfl0().s[73]++;
  return addSecurityHeaders(response);
}
function cleanupRateLimit() {
  /* istanbul ignore next */
  cov_11ar75xfl0().f[11]++;
  const now =
  /* istanbul ignore next */
  (cov_11ar75xfl0().s[74]++, Date.now());
  /* istanbul ignore next */
  cov_11ar75xfl0().s[75]++;
  for (const [key, data] of Array.from(requestCounts.entries())) {
    /* istanbul ignore next */
    cov_11ar75xfl0().s[76]++;
    if (now - data.resetTime > 300000) {
      /* istanbul ignore next */
      cov_11ar75xfl0().b[24][0]++;
      cov_11ar75xfl0().s[77]++;
      requestCounts.delete(key);
    } else
    /* istanbul ignore next */
    {
      cov_11ar75xfl0().b[24][1]++;
    }
  }
}
function getRateLimitStats() {
  /* istanbul ignore next */
  cov_11ar75xfl0().f[12]++;
  cov_11ar75xfl0().s[78]++;
  return {
    totalKeys: requestCounts.size,
    entries: Array.from(requestCounts.entries()).map(([key, data]) => {
      /* istanbul ignore next */
      cov_11ar75xfl0().f[13]++;
      cov_11ar75xfl0().s[79]++;
      return {
        key,
        count: data.count,
        resetTime: new Date(data.resetTime).toISOString()
      };
    })
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,