938b0eb627ddd65b108274e421741f43
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_2b6bzihqo() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\analytics\\events\\optimized\\route.ts";
  var hash = "ccaf1c3f0f9768c7476217a1281fd86862d822dd";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\analytics\\events\\optimized\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 25,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 22
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 19
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 20
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 23
        }
      },
      "8": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 38
        }
      },
      "9": {
        start: {
          line: 27,
          column: 18
        },
        end: {
          line: 27,
          column: 69
        }
      },
      "10": {
        start: {
          line: 28,
          column: 16
        },
        end: {
          line: 28,
          column: 24
        }
      },
      "11": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 82,
          column: 5
        }
      },
      "12": {
        start: {
          line: 31,
          column: 22
        },
        end: {
          line: 31,
          column: 42
        }
      },
      "13": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 38,
          column: 9
        }
      },
      "14": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 37,
          column: 15
        }
      },
      "15": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 46,
          column: 9
        }
      },
      "16": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 45,
          column: 15
        }
      },
      "17": {
        start: {
          line: 47,
          column: 25
        },
        end: {
          line: 47,
          column: 59
        }
      },
      "18": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 54,
          column: 9
        }
      },
      "19": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 53,
          column: 15
        }
      },
      "20": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 62,
          column: 11
        }
      },
      "21": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 61,
          column: 13
        }
      },
      "22": {
        start: {
          line: 58,
          column: 16
        },
        end: {
          line: 58,
          column: 65
        }
      },
      "23": {
        start: {
          line: 60,
          column: 16
        },
        end: {
          line: 60,
          column: 85
        }
      },
      "24": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 74,
          column: 11
        }
      },
      "25": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 70
        }
      },
      "26": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 81,
          column: 11
        }
      },
      "27": {
        start: {
          line: 87,
          column: 4
        },
        end: {
          line: 113,
          column: 5
        }
      },
      "28": {
        start: {
          line: 89,
          column: 31
        },
        end: {
          line: 99,
          column: 15
        }
      },
      "29": {
        start: {
          line: 89,
          column: 51
        },
        end: {
          line: 99,
          column: 14
        }
      },
      "30": {
        start: {
          line: 101,
          column: 24
        },
        end: {
          line: 101,
          column: 64
        }
      },
      "31": {
        start: {
          line: 103,
          column: 27
        },
        end: {
          line: 103,
          column: 79
        }
      },
      "32": {
        start: {
          line: 103,
          column: 47
        },
        end: {
          line: 103,
          column: 71
        }
      },
      "33": {
        start: {
          line: 104,
          column: 23
        },
        end: {
          line: 104,
          column: 74
        }
      },
      "34": {
        start: {
          line: 104,
          column: 43
        },
        end: {
          line: 104,
          column: 66
        }
      },
      "35": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 105,
          column: 93
        }
      },
      "36": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 110,
          column: 9
        }
      },
      "37": {
        start: {
          line: 108,
          column: 27
        },
        end: {
          line: 108,
          column: 90
        }
      },
      "38": {
        start: {
          line: 108,
          column: 47
        },
        end: {
          line: 108,
          column: 70
        }
      },
      "39": {
        start: {
          line: 108,
          column: 81
        },
        end: {
          line: 108,
          column: 89
        }
      },
      "40": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 61
        }
      },
      "41": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 61
        }
      },
      "42": {
        start: {
          line: 116,
          column: 4
        },
        end: {
          line: 177,
          column: 5
        }
      },
      "43": {
        start: {
          line: 117,
          column: 33
        },
        end: {
          line: 117,
          column: 53
        }
      },
      "44": {
        start: {
          line: 118,
          column: 26
        },
        end: {
          line: 118,
          column: 55
        }
      },
      "45": {
        start: {
          line: 119,
          column: 24
        },
        end: {
          line: 119,
          column: 51
        }
      },
      "46": {
        start: {
          line: 120,
          column: 26
        },
        end: {
          line: 120,
          column: 55
        }
      },
      "47": {
        start: {
          line: 121,
          column: 25
        },
        end: {
          line: 121,
          column: 53
        }
      },
      "48": {
        start: {
          line: 122,
          column: 22
        },
        end: {
          line: 122,
          column: 66
        }
      },
      "49": {
        start: {
          line: 123,
          column: 21
        },
        end: {
          line: 123,
          column: 62
        }
      },
      "50": {
        start: {
          line: 124,
          column: 25
        },
        end: {
          line: 124,
          column: 59
        }
      },
      "51": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 131,
          column: 9
        }
      },
      "52": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 130,
          column: 15
        }
      },
      "53": {
        start: {
          line: 133,
          column: 20
        },
        end: {
          line: 137,
          column: 54
        }
      },
      "54": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 141,
          column: 9
        }
      },
      "55": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 140,
          column: 55
        }
      },
      "56": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 144,
          column: 9
        }
      },
      "57": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 143,
          column: 53
        }
      },
      "58": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 147,
          column: 9
        }
      },
      "59": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 146,
          column: 54
        }
      },
      "60": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 150,
          column: 9
        }
      },
      "61": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 149,
          column: 51
        }
      },
      "62": {
        start: {
          line: 151,
          column: 39
        },
        end: {
          line: 151,
          column: 50
        }
      },
      "63": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 159,
          column: 9
        }
      },
      "64": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 153,
          column: 74
        }
      },
      "65": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 158,
          column: 15
        }
      },
      "66": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 169,
          column: 11
        }
      },
      "67": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 171,
          column: 67
        }
      },
      "68": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 176,
          column: 11
        }
      },
      "69": {
        start: {
          line: 180,
          column: 4
        },
        end: {
          line: 239,
          column: 5
        }
      },
      "70": {
        start: {
          line: 181,
          column: 33
        },
        end: {
          line: 181,
          column: 53
        }
      },
      "71": {
        start: {
          line: 182,
          column: 24
        },
        end: {
          line: 182,
          column: 69
        }
      },
      "72": {
        start: {
          line: 183,
          column: 23
        },
        end: {
          line: 183,
          column: 60
        }
      },
      "73": {
        start: {
          line: 184,
          column: 25
        },
        end: {
          line: 184,
          column: 63
        }
      },
      "74": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 191,
          column: 9
        }
      },
      "75": {
        start: {
          line: 186,
          column: 12
        },
        end: {
          line: 190,
          column: 15
        }
      },
      "76": {
        start: {
          line: 192,
          column: 27
        },
        end: {
          line: 192,
          column: 37
        }
      },
      "77": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 193,
          column: 59
        }
      },
      "78": {
        start: {
          line: 194,
          column: 32
        },
        end: {
          line: 194,
          column: 71
        }
      },
      "79": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 215,
          column: 9
        }
      },
      "80": {
        start: {
          line: 197,
          column: 37
        },
        end: {
          line: 200,
          column: 48
        }
      },
      "81": {
        start: {
          line: 201,
          column: 12
        },
        end: {
          line: 208,
          column: 13
        }
      },
      "82": {
        start: {
          line: 202,
          column: 16
        },
        end: {
          line: 202,
          column: 70
        }
      },
      "83": {
        start: {
          line: 203,
          column: 16
        },
        end: {
          line: 207,
          column: 19
        }
      },
      "84": {
        start: {
          line: 209,
          column: 12
        },
        end: {
          line: 214,
          column: 15
        }
      },
      "85": {
        start: {
          line: 217,
          column: 26
        },
        end: {
          line: 217,
          column: 118
        }
      },
      "86": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 225,
          column: 9
        }
      },
      "87": {
        start: {
          line: 219,
          column: 12
        },
        end: {
          line: 219,
          column: 71
        }
      },
      "88": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 224,
          column: 15
        }
      },
      "89": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 231,
          column: 11
        }
      },
      "90": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 233,
          column: 70
        }
      },
      "91": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 238,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 18
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 15
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 16
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 19
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "POST",
        decl: {
          start: {
            line: 29,
            column: 15
          },
          end: {
            line: 29,
            column: 19
          }
        },
        loc: {
          start: {
            line: 29,
            column: 29
          },
          end: {
            line: 83,
            column: 1
          }
        },
        line: 29
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 56,
            column: 21
          },
          end: {
            line: 56,
            column: 22
          }
        },
        loc: {
          start: {
            line: 56,
            column: 31
          },
          end: {
            line: 62,
            column: 9
          }
        },
        line: 56
      },
      "7": {
        name: "processEventsBatch",
        decl: {
          start: {
            line: 86,
            column: 19
          },
          end: {
            line: 86,
            column: 37
          }
        },
        loc: {
          start: {
            line: 86,
            column: 56
          },
          end: {
            line: 114,
            column: 1
          }
        },
        line: 86
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 89,
            column: 42
          },
          end: {
            line: 89,
            column: 43
          }
        },
        loc: {
          start: {
            line: 89,
            column: 51
          },
          end: {
            line: 99,
            column: 14
          }
        },
        line: 89
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 103,
            column: 42
          },
          end: {
            line: 103,
            column: 43
          }
        },
        loc: {
          start: {
            line: 103,
            column: 47
          },
          end: {
            line: 103,
            column: 71
          }
        },
        line: 103
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 104,
            column: 38
          },
          end: {
            line: 104,
            column: 39
          }
        },
        loc: {
          start: {
            line: 104,
            column: 43
          },
          end: {
            line: 104,
            column: 66
          }
        },
        line: 104
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 108,
            column: 42
          },
          end: {
            line: 108,
            column: 43
          }
        },
        loc: {
          start: {
            line: 108,
            column: 47
          },
          end: {
            line: 108,
            column: 70
          }
        },
        line: 108
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 108,
            column: 76
          },
          end: {
            line: 108,
            column: 77
          }
        },
        loc: {
          start: {
            line: 108,
            column: 81
          },
          end: {
            line: 108,
            column: 89
          }
        },
        line: 108
      },
      "13": {
        name: "GET",
        decl: {
          start: {
            line: 115,
            column: 15
          },
          end: {
            line: 115,
            column: 18
          }
        },
        loc: {
          start: {
            line: 115,
            column: 28
          },
          end: {
            line: 178,
            column: 1
          }
        },
        line: 115
      },
      "14": {
        name: "DELETE",
        decl: {
          start: {
            line: 179,
            column: 15
          },
          end: {
            line: 179,
            column: 21
          }
        },
        loc: {
          start: {
            line: 179,
            column: 31
          },
          end: {
            line: 240,
            column: 1
          }
        },
        line: 179
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "1": {
        loc: {
          start: {
            line: 32,
            column: 12
          },
          end: {
            line: 32,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 12
          },
          end: {
            line: 32,
            column: 25
          }
        }, {
          start: {
            line: 32,
            column: 29
          },
          end: {
            line: 32,
            column: 57
          }
        }, {
          start: {
            line: 32,
            column: 61
          },
          end: {
            line: 32,
            column: 86
          }
        }],
        line: 32
      },
      "2": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "3": {
        loc: {
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "4": {
        loc: {
          start: {
            line: 93,
            column: 25
          },
          end: {
            line: 93,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 93,
            column: 25
          },
          end: {
            line: 93,
            column: 36
          }
        }, {
          start: {
            line: 93,
            column: 40
          },
          end: {
            line: 93,
            column: 44
          }
        }],
        line: 93
      },
      "5": {
        loc: {
          start: {
            line: 94,
            column: 25
          },
          end: {
            line: 94,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 94,
            column: 25
          },
          end: {
            line: 94,
            column: 36
          }
        }, {
          start: {
            line: 94,
            column: 40
          },
          end: {
            line: 94,
            column: 44
          }
        }],
        line: 94
      },
      "6": {
        loc: {
          start: {
            line: 95,
            column: 27
          },
          end: {
            line: 95,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 95,
            column: 27
          },
          end: {
            line: 95,
            column: 39
          }
        }, {
          start: {
            line: 95,
            column: 43
          },
          end: {
            line: 95,
            column: 47
          }
        }],
        line: 95
      },
      "7": {
        loc: {
          start: {
            line: 98,
            column: 30
          },
          end: {
            line: 98,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 98,
            column: 30
          },
          end: {
            line: 98,
            column: 45
          }
        }, {
          start: {
            line: 98,
            column: 49
          },
          end: {
            line: 98,
            column: 53
          }
        }],
        line: 98
      },
      "8": {
        loc: {
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "9": {
        loc: {
          start: {
            line: 122,
            column: 31
          },
          end: {
            line: 122,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 122,
            column: 31
          },
          end: {
            line: 122,
            column: 56
          }
        }, {
          start: {
            line: 122,
            column: 60
          },
          end: {
            line: 122,
            column: 65
          }
        }],
        line: 122
      },
      "10": {
        loc: {
          start: {
            line: 123,
            column: 30
          },
          end: {
            line: 123,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 123,
            column: 30
          },
          end: {
            line: 123,
            column: 54
          }
        }, {
          start: {
            line: 123,
            column: 58
          },
          end: {
            line: 123,
            column: 61
          }
        }],
        line: 123
      },
      "11": {
        loc: {
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 131,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 131,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "12": {
        loc: {
          start: {
            line: 139,
            column: 8
          },
          end: {
            line: 141,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 139,
            column: 8
          },
          end: {
            line: 141,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 139
      },
      "13": {
        loc: {
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 144,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 144,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "14": {
        loc: {
          start: {
            line: 145,
            column: 8
          },
          end: {
            line: 147,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 145,
            column: 8
          },
          end: {
            line: 147,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 145
      },
      "15": {
        loc: {
          start: {
            line: 148,
            column: 8
          },
          end: {
            line: 150,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 148,
            column: 8
          },
          end: {
            line: 150,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 148
      },
      "16": {
        loc: {
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 159,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 159,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 152
      },
      "17": {
        loc: {
          start: {
            line: 162,
            column: 18
          },
          end: {
            line: 162,
            column: 28
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 162,
            column: 18
          },
          end: {
            line: 162,
            column: 22
          }
        }, {
          start: {
            line: 162,
            column: 26
          },
          end: {
            line: 162,
            column: 28
          }
        }],
        line: 162
      },
      "18": {
        loc: {
          start: {
            line: 166,
            column: 23
          },
          end: {
            line: 166,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 166,
            column: 23
          },
          end: {
            line: 166,
            column: 28
          }
        }, {
          start: {
            line: 166,
            column: 32
          },
          end: {
            line: 166,
            column: 33
          }
        }],
        line: 166
      },
      "19": {
        loc: {
          start: {
            line: 167,
            column: 39
          },
          end: {
            line: 167,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 167,
            column: 39
          },
          end: {
            line: 167,
            column: 44
          }
        }, {
          start: {
            line: 167,
            column: 48
          },
          end: {
            line: 167,
            column: 49
          }
        }],
        line: 167
      },
      "20": {
        loc: {
          start: {
            line: 182,
            column: 33
          },
          end: {
            line: 182,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 182,
            column: 33
          },
          end: {
            line: 182,
            column: 60
          }
        }, {
          start: {
            line: 182,
            column: 64
          },
          end: {
            line: 182,
            column: 68
          }
        }],
        line: 182
      },
      "21": {
        loc: {
          start: {
            line: 185,
            column: 8
          },
          end: {
            line: 191,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 185,
            column: 8
          },
          end: {
            line: 191,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 185
      },
      "22": {
        loc: {
          start: {
            line: 195,
            column: 8
          },
          end: {
            line: 215,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 195,
            column: 8
          },
          end: {
            line: 215,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 195
      },
      "23": {
        loc: {
          start: {
            line: 201,
            column: 12
          },
          end: {
            line: 208,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 201,
            column: 12
          },
          end: {
            line: 208,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 201
      },
      "24": {
        loc: {
          start: {
            line: 212,
            column: 29
          },
          end: {
            line: 212,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 212,
            column: 29
          },
          end: {
            line: 212,
            column: 34
          }
        }, {
          start: {
            line: 212,
            column: 38
          },
          end: {
            line: 212,
            column: 39
          }
        }],
        line: 212
      },
      "25": {
        loc: {
          start: {
            line: 218,
            column: 8
          },
          end: {
            line: 225,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 218,
            column: 8
          },
          end: {
            line: 225,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 218
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\analytics\\events\\optimized\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n/**\r\n * API OPTIMIZADA PARA ANALYTICS - PINTEYA E-COMMERCE\r\n * Procesamiento en lotes con inserci\xF3n masiva optimizada\r\n */\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { getSupabaseClient } from '@/lib/integrations/supabase';\r\n\r\ninterface OptimizedAnalyticsEvent {\r\n  event: string;\r\n  category: string;\r\n  action: string;\r\n  label?: string;\r\n  value?: number;\r\n  userId?: string;\r\n  sessionId: string;\r\n  page: string;\r\n  userAgent?: string;\r\n}\r\n\r\ninterface AnalyticsBatch {\r\n  events: OptimizedAnalyticsEvent[];\r\n  timestamp: number;\r\n  compressed: boolean;\r\n}\r\n\r\n/**\r\n * POST /api/analytics/events/optimized\r\n * Procesar lotes de eventos de analytics de forma optimizada\r\n */\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    const batch: AnalyticsBatch = await request.json();\r\n\r\n    if (!batch.events || !Array.isArray(batch.events) || batch.events.length === 0) {\r\n      return NextResponse.json(\r\n        { error: 'Batch de eventos inv\xE1lido' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Limitar tama\xF1o del batch para evitar timeouts\r\n    if (batch.events.length > 100) {\r\n      return NextResponse.json(\r\n        { error: 'Batch demasiado grande (m\xE1ximo 100 eventos)' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    const supabase = getSupabaseClient();\r\n    if (!supabase) {\r\n      return NextResponse.json(\r\n        { error: 'Servicio de base de datos no disponible' },\r\n        { status: 503 }\r\n      );\r\n    }\r\n\r\n    // Procesar eventos de forma as\xEDncrona para respuesta r\xE1pida\r\n    setImmediate(async () => {\r\n      try {\r\n        await processEventsBatch(batch.events, supabase);\r\n      } catch (error) {\r\n        console.error('Error procesando batch de analytics (async):', error);\r\n      }\r\n    });\r\n\r\n    // Respuesta inmediata\r\n    return NextResponse.json(\r\n      { \r\n        success: true, \r\n        processed: batch.events.length,\r\n        timestamp: Date.now()\r\n      },\r\n      {\r\n        status: 200,\r\n        headers: {\r\n          'Cache-Control': 'no-cache, no-store, must-revalidate',\r\n          'Content-Type': 'application/json'\r\n        }\r\n      }\r\n    );\r\n\r\n  } catch (error) {\r\n    console.error('Error en API de analytics optimizada:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Procesar batch de eventos usando funci\xF3n optimizada de Supabase\r\n */\r\nasync function processEventsBatch(events: OptimizedAnalyticsEvent[], supabase: any) {\r\n  try {\r\n    // Preparar datos para inserci\xF3n masiva usando funci\xF3n optimizada\r\n    const insertPromises = events.map(event => \r\n      supabase.rpc('insert_analytics_event_optimized', {\r\n        p_event_name: event.event,\r\n        p_category: event.category,\r\n        p_action: event.action,\r\n        p_label: event.label || null,\r\n        p_value: event.value || null,\r\n        p_user_id: event.userId || null,\r\n        p_session_id: event.sessionId,\r\n        p_page: event.page,\r\n        p_user_agent: event.userAgent || null\r\n      })\r\n    );\r\n\r\n    // Ejecutar todas las inserciones en paralelo\r\n    const results = await Promise.allSettled(insertPromises);\r\n\r\n    // Contar \xE9xitos y errores\r\n    const successful = results.filter(r => r.status === 'fulfilled').length;\r\n    const failed = results.filter(r => r.status === 'rejected').length;\r\n\r\n    console.log(`Analytics batch processed: ${successful} successful, ${failed} failed`);\r\n\r\n    // Log errores para debugging\r\n    if (failed > 0) {\r\n      const errors = results\r\n        .filter(r => r.status === 'rejected')\r\n        .map(r => (r as PromiseRejectedResult).reason);\r\n      \r\n      console.error('Analytics batch errors:', errors);\r\n    }\r\n\r\n  } catch (error) {\r\n    console.error('Error en processEventsBatch:', error);\r\n  }\r\n}\r\n\r\n/**\r\n * GET /api/analytics/events/optimized\r\n * Obtener eventos optimizados con filtros\r\n */\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    const { searchParams } = new URL(request.url);\r\n    const startDate = searchParams.get('startDate');\r\n    const endDate = searchParams.get('endDate');\r\n    const eventType = searchParams.get('eventType');\r\n    const category = searchParams.get('category');\r\n    const limit = parseInt(searchParams.get('limit') || '100');\r\n    const page = parseInt(searchParams.get('page') || '1');\r\n\r\n    const supabase = getSupabaseClient();\r\n    if (!supabase) {\r\n      return NextResponse.json(\r\n        { error: 'Servicio de base de datos no disponible' },\r\n        { status: 503 }\r\n      );\r\n    }\r\n\r\n    // Usar vista optimizada para compatibilidad\r\n    let query = supabase\r\n      .from('analytics_events_view')\r\n      .select('*', { count: 'exact' })\r\n      .order('created_at', { ascending: false })\r\n      .range((page - 1) * limit, page * limit - 1);\r\n\r\n    // Aplicar filtros\r\n    if (startDate) {\r\n      query = query.gte('created_at', startDate);\r\n    }\r\n\r\n    if (endDate) {\r\n      query = query.lte('created_at', endDate);\r\n    }\r\n\r\n    if (eventType) {\r\n      query = query.eq('event_name', eventType);\r\n    }\r\n\r\n    if (category) {\r\n      query = query.eq('category', category);\r\n    }\r\n\r\n    const { data, error, count } = await query;\r\n\r\n    if (error) {\r\n      console.error('Error obteniendo eventos optimizados:', error);\r\n      return NextResponse.json(\r\n        { error: 'Error obteniendo eventos' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: data || [],\r\n      pagination: {\r\n        page,\r\n        limit,\r\n        total: count || 0,\r\n        totalPages: Math.ceil((count || 0) / limit)\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Error en GET analytics optimizada:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * DELETE /api/analytics/events/optimized\r\n * Limpiar eventos antiguos (solo admins)\r\n */\r\nexport async function DELETE(request: NextRequest) {\r\n  try {\r\n    const { searchParams } = new URL(request.url);\r\n    const daysOld = parseInt(searchParams.get('daysOld') || '30');\r\n    const dryRun = searchParams.get('dryRun') === 'true';\r\n\r\n    const supabase = getSupabaseClient(true); // Usar cliente admin\r\n    if (!supabase) {\r\n      return NextResponse.json(\r\n        { error: 'Servicio administrativo no disponible' },\r\n        { status: 503 }\r\n      );\r\n    }\r\n\r\n    const cutoffDate = new Date();\r\n    cutoffDate.setDate(cutoffDate.getDate() - daysOld);\r\n    const cutoffTimestamp = Math.floor(cutoffDate.getTime() / 1000);\r\n\r\n    if (dryRun) {\r\n      // Solo contar cu\xE1ntos registros se eliminar\xEDan\r\n      const { count, error } = await supabase\r\n        .from('analytics_events_optimized')\r\n        .select('*', { count: 'exact', head: true })\r\n        .lt('created_at', cutoffTimestamp);\r\n\r\n      if (error) {\r\n        console.error('Error en dry run de limpieza:', error);\r\n        return NextResponse.json(\r\n          { error: 'Error en simulaci\xF3n de limpieza' },\r\n          { status: 500 }\r\n        );\r\n      }\r\n\r\n      return NextResponse.json({\r\n        success: true,\r\n        dryRun: true,\r\n        wouldDelete: count || 0,\r\n        cutoffDate: cutoffDate.toISOString()\r\n      });\r\n    }\r\n\r\n    // Eliminar registros antiguos\r\n    const { error } = await supabase\r\n      .from('analytics_events_optimized')\r\n      .delete()\r\n      .lt('created_at', cutoffTimestamp);\r\n\r\n    if (error) {\r\n      console.error('Error eliminando eventos antiguos:', error);\r\n      return NextResponse.json(\r\n        { error: 'Error eliminando eventos antiguos' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      deleted: true,\r\n      cutoffDate: cutoffDate.toISOString(),\r\n      message: `Eventos anteriores a ${daysOld} d\xEDas eliminados`\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Error en DELETE analytics optimizada:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["DELETE", "GET", "POST", "runtime", "request", "batch", "json", "events", "Array", "isArray", "length", "NextResponse", "error", "status", "supabase", "getSupabaseClient", "setImmediate", "processEventsBatch", "console", "success", "processed", "timestamp", "Date", "now", "headers", "insertPromises", "map", "event", "rpc", "p_event_name", "p_category", "category", "p_action", "action", "p_label", "label", "p_value", "value", "p_user_id", "userId", "p_session_id", "sessionId", "p_page", "page", "p_user_agent", "userAgent", "results", "Promise", "allSettled", "successful", "filter", "r", "failed", "log", "errors", "reason", "searchParams", "URL", "url", "startDate", "get", "endDate", "eventType", "limit", "parseInt", "query", "from", "select", "count", "order", "ascending", "range", "gte", "lte", "eq", "data", "pagination", "total", "totalPages", "Math", "ceil", "daysOld", "dryRun", "cutoffDate", "setDate", "getDate", "cutoffTimestamp", "floor", "getTime", "head", "lt", "wouldDelete", "toISOString", "delete", "deleted", "message"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ccaf1c3f0f9768c7476217a1281fd86862d822dd"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2b6bzihqo = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2b6bzihqo();
cov_2b6bzihqo().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2b6bzihqo().f[0]++;
  cov_2b6bzihqo().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2b6bzihqo().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_2b6bzihqo().s[3]++;
_export(exports, {
  get DELETE() {
    /* istanbul ignore next */
    cov_2b6bzihqo().f[1]++;
    cov_2b6bzihqo().s[4]++;
    return DELETE;
  },
  get GET() {
    /* istanbul ignore next */
    cov_2b6bzihqo().f[2]++;
    cov_2b6bzihqo().s[5]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_2b6bzihqo().f[3]++;
    cov_2b6bzihqo().s[6]++;
    return POST;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_2b6bzihqo().f[4]++;
    cov_2b6bzihqo().s[7]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_2b6bzihqo().s[8]++, require("next/server"));
const _supabase =
/* istanbul ignore next */
(cov_2b6bzihqo().s[9]++, require("../../../../../lib/integrations/supabase"));
const runtime =
/* istanbul ignore next */
(cov_2b6bzihqo().s[10]++, 'nodejs');
async function POST(request) {
  /* istanbul ignore next */
  cov_2b6bzihqo().f[5]++;
  cov_2b6bzihqo().s[11]++;
  try {
    const batch =
    /* istanbul ignore next */
    (cov_2b6bzihqo().s[12]++, await request.json());
    /* istanbul ignore next */
    cov_2b6bzihqo().s[13]++;
    if (
    /* istanbul ignore next */
    (cov_2b6bzihqo().b[1][0]++, !batch.events) ||
    /* istanbul ignore next */
    (cov_2b6bzihqo().b[1][1]++, !Array.isArray(batch.events)) ||
    /* istanbul ignore next */
    (cov_2b6bzihqo().b[1][2]++, batch.events.length === 0)) {
      /* istanbul ignore next */
      cov_2b6bzihqo().b[0][0]++;
      cov_2b6bzihqo().s[14]++;
      return _server.NextResponse.json({
        error: 'Batch de eventos invÃ¡lido'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_2b6bzihqo().b[0][1]++;
    }
    // Limitar tamaÃ±o del batch para evitar timeouts
    cov_2b6bzihqo().s[15]++;
    if (batch.events.length > 100) {
      /* istanbul ignore next */
      cov_2b6bzihqo().b[2][0]++;
      cov_2b6bzihqo().s[16]++;
      return _server.NextResponse.json({
        error: 'Batch demasiado grande (mÃ¡ximo 100 eventos)'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_2b6bzihqo().b[2][1]++;
    }
    const supabase =
    /* istanbul ignore next */
    (cov_2b6bzihqo().s[17]++, (0, _supabase.getSupabaseClient)());
    /* istanbul ignore next */
    cov_2b6bzihqo().s[18]++;
    if (!supabase) {
      /* istanbul ignore next */
      cov_2b6bzihqo().b[3][0]++;
      cov_2b6bzihqo().s[19]++;
      return _server.NextResponse.json({
        error: 'Servicio de base de datos no disponible'
      }, {
        status: 503
      });
    } else
    /* istanbul ignore next */
    {
      cov_2b6bzihqo().b[3][1]++;
    }
    // Procesar eventos de forma asÃ­ncrona para respuesta rÃ¡pida
    cov_2b6bzihqo().s[20]++;
    setImmediate(async () => {
      /* istanbul ignore next */
      cov_2b6bzihqo().f[6]++;
      cov_2b6bzihqo().s[21]++;
      try {
        /* istanbul ignore next */
        cov_2b6bzihqo().s[22]++;
        await processEventsBatch(batch.events, supabase);
      } catch (error) {
        /* istanbul ignore next */
        cov_2b6bzihqo().s[23]++;
        console.error('Error procesando batch de analytics (async):', error);
      }
    });
    // Respuesta inmediata
    /* istanbul ignore next */
    cov_2b6bzihqo().s[24]++;
    return _server.NextResponse.json({
      success: true,
      processed: batch.events.length,
      timestamp: Date.now()
    }, {
      status: 200,
      headers: {
        'Cache-Control': 'no-cache, no-store, must-revalidate',
        'Content-Type': 'application/json'
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2b6bzihqo().s[25]++;
    console.error('Error en API de analytics optimizada:', error);
    /* istanbul ignore next */
    cov_2b6bzihqo().s[26]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
/**
 * Procesar batch de eventos usando funciÃ³n optimizada de Supabase
 */
async function processEventsBatch(events, supabase) {
  /* istanbul ignore next */
  cov_2b6bzihqo().f[7]++;
  cov_2b6bzihqo().s[27]++;
  try {
    // Preparar datos para inserciÃ³n masiva usando funciÃ³n optimizada
    const insertPromises =
    /* istanbul ignore next */
    (cov_2b6bzihqo().s[28]++, events.map(event => {
      /* istanbul ignore next */
      cov_2b6bzihqo().f[8]++;
      cov_2b6bzihqo().s[29]++;
      return supabase.rpc('insert_analytics_event_optimized', {
        p_event_name: event.event,
        p_category: event.category,
        p_action: event.action,
        p_label:
        /* istanbul ignore next */
        (cov_2b6bzihqo().b[4][0]++, event.label) ||
        /* istanbul ignore next */
        (cov_2b6bzihqo().b[4][1]++, null),
        p_value:
        /* istanbul ignore next */
        (cov_2b6bzihqo().b[5][0]++, event.value) ||
        /* istanbul ignore next */
        (cov_2b6bzihqo().b[5][1]++, null),
        p_user_id:
        /* istanbul ignore next */
        (cov_2b6bzihqo().b[6][0]++, event.userId) ||
        /* istanbul ignore next */
        (cov_2b6bzihqo().b[6][1]++, null),
        p_session_id: event.sessionId,
        p_page: event.page,
        p_user_agent:
        /* istanbul ignore next */
        (cov_2b6bzihqo().b[7][0]++, event.userAgent) ||
        /* istanbul ignore next */
        (cov_2b6bzihqo().b[7][1]++, null)
      });
    }));
    // Ejecutar todas las inserciones en paralelo
    const results =
    /* istanbul ignore next */
    (cov_2b6bzihqo().s[30]++, await Promise.allSettled(insertPromises));
    // Contar Ã©xitos y errores
    const successful =
    /* istanbul ignore next */
    (cov_2b6bzihqo().s[31]++, results.filter(r => {
      /* istanbul ignore next */
      cov_2b6bzihqo().f[9]++;
      cov_2b6bzihqo().s[32]++;
      return r.status === 'fulfilled';
    }).length);
    const failed =
    /* istanbul ignore next */
    (cov_2b6bzihqo().s[33]++, results.filter(r => {
      /* istanbul ignore next */
      cov_2b6bzihqo().f[10]++;
      cov_2b6bzihqo().s[34]++;
      return r.status === 'rejected';
    }).length);
    /* istanbul ignore next */
    cov_2b6bzihqo().s[35]++;
    console.log(`Analytics batch processed: ${successful} successful, ${failed} failed`);
    // Log errores para debugging
    /* istanbul ignore next */
    cov_2b6bzihqo().s[36]++;
    if (failed > 0) {
      /* istanbul ignore next */
      cov_2b6bzihqo().b[8][0]++;
      const errors =
      /* istanbul ignore next */
      (cov_2b6bzihqo().s[37]++, results.filter(r => {
        /* istanbul ignore next */
        cov_2b6bzihqo().f[11]++;
        cov_2b6bzihqo().s[38]++;
        return r.status === 'rejected';
      }).map(r => {
        /* istanbul ignore next */
        cov_2b6bzihqo().f[12]++;
        cov_2b6bzihqo().s[39]++;
        return r.reason;
      }));
      /* istanbul ignore next */
      cov_2b6bzihqo().s[40]++;
      console.error('Analytics batch errors:', errors);
    } else
    /* istanbul ignore next */
    {
      cov_2b6bzihqo().b[8][1]++;
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_2b6bzihqo().s[41]++;
    console.error('Error en processEventsBatch:', error);
  }
}
async function GET(request) {
  /* istanbul ignore next */
  cov_2b6bzihqo().f[13]++;
  cov_2b6bzihqo().s[42]++;
  try {
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_2b6bzihqo().s[43]++, new URL(request.url));
    const startDate =
    /* istanbul ignore next */
    (cov_2b6bzihqo().s[44]++, searchParams.get('startDate'));
    const endDate =
    /* istanbul ignore next */
    (cov_2b6bzihqo().s[45]++, searchParams.get('endDate'));
    const eventType =
    /* istanbul ignore next */
    (cov_2b6bzihqo().s[46]++, searchParams.get('eventType'));
    const category =
    /* istanbul ignore next */
    (cov_2b6bzihqo().s[47]++, searchParams.get('category'));
    const limit =
    /* istanbul ignore next */
    (cov_2b6bzihqo().s[48]++, parseInt(
    /* istanbul ignore next */
    (cov_2b6bzihqo().b[9][0]++, searchParams.get('limit')) ||
    /* istanbul ignore next */
    (cov_2b6bzihqo().b[9][1]++, '100')));
    const page =
    /* istanbul ignore next */
    (cov_2b6bzihqo().s[49]++, parseInt(
    /* istanbul ignore next */
    (cov_2b6bzihqo().b[10][0]++, searchParams.get('page')) ||
    /* istanbul ignore next */
    (cov_2b6bzihqo().b[10][1]++, '1')));
    const supabase =
    /* istanbul ignore next */
    (cov_2b6bzihqo().s[50]++, (0, _supabase.getSupabaseClient)());
    /* istanbul ignore next */
    cov_2b6bzihqo().s[51]++;
    if (!supabase) {
      /* istanbul ignore next */
      cov_2b6bzihqo().b[11][0]++;
      cov_2b6bzihqo().s[52]++;
      return _server.NextResponse.json({
        error: 'Servicio de base de datos no disponible'
      }, {
        status: 503
      });
    } else
    /* istanbul ignore next */
    {
      cov_2b6bzihqo().b[11][1]++;
    }
    // Usar vista optimizada para compatibilidad
    let query =
    /* istanbul ignore next */
    (cov_2b6bzihqo().s[53]++, supabase.from('analytics_events_view').select('*', {
      count: 'exact'
    }).order('created_at', {
      ascending: false
    }).range((page - 1) * limit, page * limit - 1));
    // Aplicar filtros
    /* istanbul ignore next */
    cov_2b6bzihqo().s[54]++;
    if (startDate) {
      /* istanbul ignore next */
      cov_2b6bzihqo().b[12][0]++;
      cov_2b6bzihqo().s[55]++;
      query = query.gte('created_at', startDate);
    } else
    /* istanbul ignore next */
    {
      cov_2b6bzihqo().b[12][1]++;
    }
    cov_2b6bzihqo().s[56]++;
    if (endDate) {
      /* istanbul ignore next */
      cov_2b6bzihqo().b[13][0]++;
      cov_2b6bzihqo().s[57]++;
      query = query.lte('created_at', endDate);
    } else
    /* istanbul ignore next */
    {
      cov_2b6bzihqo().b[13][1]++;
    }
    cov_2b6bzihqo().s[58]++;
    if (eventType) {
      /* istanbul ignore next */
      cov_2b6bzihqo().b[14][0]++;
      cov_2b6bzihqo().s[59]++;
      query = query.eq('event_name', eventType);
    } else
    /* istanbul ignore next */
    {
      cov_2b6bzihqo().b[14][1]++;
    }
    cov_2b6bzihqo().s[60]++;
    if (category) {
      /* istanbul ignore next */
      cov_2b6bzihqo().b[15][0]++;
      cov_2b6bzihqo().s[61]++;
      query = query.eq('category', category);
    } else
    /* istanbul ignore next */
    {
      cov_2b6bzihqo().b[15][1]++;
    }
    const {
      data,
      error,
      count
    } =
    /* istanbul ignore next */
    (cov_2b6bzihqo().s[62]++, await query);
    /* istanbul ignore next */
    cov_2b6bzihqo().s[63]++;
    if (error) {
      /* istanbul ignore next */
      cov_2b6bzihqo().b[16][0]++;
      cov_2b6bzihqo().s[64]++;
      console.error('Error obteniendo eventos optimizados:', error);
      /* istanbul ignore next */
      cov_2b6bzihqo().s[65]++;
      return _server.NextResponse.json({
        error: 'Error obteniendo eventos'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_2b6bzihqo().b[16][1]++;
    }
    cov_2b6bzihqo().s[66]++;
    return _server.NextResponse.json({
      success: true,
      data:
      /* istanbul ignore next */
      (cov_2b6bzihqo().b[17][0]++, data) ||
      /* istanbul ignore next */
      (cov_2b6bzihqo().b[17][1]++, []),
      pagination: {
        page,
        limit,
        total:
        /* istanbul ignore next */
        (cov_2b6bzihqo().b[18][0]++, count) ||
        /* istanbul ignore next */
        (cov_2b6bzihqo().b[18][1]++, 0),
        totalPages: Math.ceil((
        /* istanbul ignore next */
        (cov_2b6bzihqo().b[19][0]++, count) ||
        /* istanbul ignore next */
        (cov_2b6bzihqo().b[19][1]++, 0)) / limit)
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2b6bzihqo().s[67]++;
    console.error('Error en GET analytics optimizada:', error);
    /* istanbul ignore next */
    cov_2b6bzihqo().s[68]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
async function DELETE(request) {
  /* istanbul ignore next */
  cov_2b6bzihqo().f[14]++;
  cov_2b6bzihqo().s[69]++;
  try {
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_2b6bzihqo().s[70]++, new URL(request.url));
    const daysOld =
    /* istanbul ignore next */
    (cov_2b6bzihqo().s[71]++, parseInt(
    /* istanbul ignore next */
    (cov_2b6bzihqo().b[20][0]++, searchParams.get('daysOld')) ||
    /* istanbul ignore next */
    (cov_2b6bzihqo().b[20][1]++, '30')));
    const dryRun =
    /* istanbul ignore next */
    (cov_2b6bzihqo().s[72]++, searchParams.get('dryRun') === 'true');
    const supabase =
    /* istanbul ignore next */
    (cov_2b6bzihqo().s[73]++, (0, _supabase.getSupabaseClient)(true)); // Usar cliente admin
    /* istanbul ignore next */
    cov_2b6bzihqo().s[74]++;
    if (!supabase) {
      /* istanbul ignore next */
      cov_2b6bzihqo().b[21][0]++;
      cov_2b6bzihqo().s[75]++;
      return _server.NextResponse.json({
        error: 'Servicio administrativo no disponible'
      }, {
        status: 503
      });
    } else
    /* istanbul ignore next */
    {
      cov_2b6bzihqo().b[21][1]++;
    }
    const cutoffDate =
    /* istanbul ignore next */
    (cov_2b6bzihqo().s[76]++, new Date());
    /* istanbul ignore next */
    cov_2b6bzihqo().s[77]++;
    cutoffDate.setDate(cutoffDate.getDate() - daysOld);
    const cutoffTimestamp =
    /* istanbul ignore next */
    (cov_2b6bzihqo().s[78]++, Math.floor(cutoffDate.getTime() / 1000));
    /* istanbul ignore next */
    cov_2b6bzihqo().s[79]++;
    if (dryRun) {
      /* istanbul ignore next */
      cov_2b6bzihqo().b[22][0]++;
      // Solo contar cuÃ¡ntos registros se eliminarÃ­an
      const {
        count,
        error
      } =
      /* istanbul ignore next */
      (cov_2b6bzihqo().s[80]++, await supabase.from('analytics_events_optimized').select('*', {
        count: 'exact',
        head: true
      }).lt('created_at', cutoffTimestamp));
      /* istanbul ignore next */
      cov_2b6bzihqo().s[81]++;
      if (error) {
        /* istanbul ignore next */
        cov_2b6bzihqo().b[23][0]++;
        cov_2b6bzihqo().s[82]++;
        console.error('Error en dry run de limpieza:', error);
        /* istanbul ignore next */
        cov_2b6bzihqo().s[83]++;
        return _server.NextResponse.json({
          error: 'Error en simulaciÃ³n de limpieza'
        }, {
          status: 500
        });
      } else
      /* istanbul ignore next */
      {
        cov_2b6bzihqo().b[23][1]++;
      }
      cov_2b6bzihqo().s[84]++;
      return _server.NextResponse.json({
        success: true,
        dryRun: true,
        wouldDelete:
        /* istanbul ignore next */
        (cov_2b6bzihqo().b[24][0]++, count) ||
        /* istanbul ignore next */
        (cov_2b6bzihqo().b[24][1]++, 0),
        cutoffDate: cutoffDate.toISOString()
      });
    } else
    /* istanbul ignore next */
    {
      cov_2b6bzihqo().b[22][1]++;
    }
    // Eliminar registros antiguos
    const {
      error
    } =
    /* istanbul ignore next */
    (cov_2b6bzihqo().s[85]++, await supabase.from('analytics_events_optimized').delete().lt('created_at', cutoffTimestamp));
    /* istanbul ignore next */
    cov_2b6bzihqo().s[86]++;
    if (error) {
      /* istanbul ignore next */
      cov_2b6bzihqo().b[25][0]++;
      cov_2b6bzihqo().s[87]++;
      console.error('Error eliminando eventos antiguos:', error);
      /* istanbul ignore next */
      cov_2b6bzihqo().s[88]++;
      return _server.NextResponse.json({
        error: 'Error eliminando eventos antiguos'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_2b6bzihqo().b[25][1]++;
    }
    cov_2b6bzihqo().s[89]++;
    return _server.NextResponse.json({
      success: true,
      deleted: true,
      cutoffDate: cutoffDate.toISOString(),
      message: `Eventos anteriores a ${daysOld} dÃ­as eliminados`
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2b6bzihqo().s[90]++;
    console.error('Error en DELETE analytics optimizada:', error);
    /* istanbul ignore next */
    cov_2b6bzihqo().s[91]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,