{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\admin\\logistics\\GeofenceManager.tsx"],"sourcesContent":["// =====================================================\n// COMPONENTE: GEOFENCE MANAGER ENTERPRISE\n// Descripción: Gestión de zonas geográficas con alertas automáticas\n// Basado en: MapLibre GL JS + React + Geospatial APIs\n// =====================================================\n\n'use client'\n\nimport { useState, useEffect, useCallback } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Badge } from '@/components/ui/badge'\nimport { Input } from '@/components/ui/input'\nimport { Label } from '@/components/ui/label'\nimport { Switch } from '@/components/ui/switch'\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select'\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table'\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from '@/components/ui/dialog'\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'\nimport {\n  MapPin,\n  Plus,\n  Edit,\n  Trash2,\n  Eye,\n  AlertTriangle,\n  CheckCircle,\n  Clock,\n  BarChart3,\n  Settings,\n  Zap,\n} from 'lucide-react'\nimport { useLogisticsWebSocket } from '@/hooks/admin/useLogisticsWebSocket'\nimport { cn } from '@/lib/core/utils'\nimport { formatDate } from '@/lib/utils/consolidated-utils'\n\n// =====================================================\n// INTERFACES\n// =====================================================\n\ninterface GeofenceZone {\n  id: string\n  name: string\n  type: 'delivery_zone' | 'restricted' | 'priority' | 'warehouse'\n  coordinates: [number, number][]\n  center: [number, number]\n  radius?: number\n  active: boolean\n  created_at: string\n  updated_at: string\n  rules: GeofenceRule[]\n  stats?: GeofenceStats\n}\n\ninterface GeofenceRule {\n  id: string\n  event_type: 'enter' | 'exit' | 'dwell'\n  action: 'alert' | 'notification' | 'status_change' | 'route_optimization'\n  conditions: {\n    min_dwell_time?: number\n    shipment_status?: string[]\n    courier_ids?: number[]\n    time_windows?: { start: string; end: string }[]\n  }\n  active: boolean\n}\n\ninterface GeofenceStats {\n  total_events: number\n  enter_events: number\n  exit_events: number\n  unique_shipments: number\n  avg_dwell_time: number\n  last_event: string\n}\n\ninterface GeofenceManagerProps {\n  className?: string\n}\n\n// =====================================================\n// DATOS DE EJEMPLO\n// =====================================================\n\nconst SAMPLE_GEOFENCES: GeofenceZone[] = [\n  {\n    id: 'caba_priority',\n    name: 'CABA - Zona Prioritaria',\n    type: 'priority',\n    coordinates: [\n      [-58.5315, -34.5264],\n      [-58.3354, -34.5264],\n      [-58.3354, -34.7051],\n      [-58.5315, -34.7051],\n      [-58.5315, -34.5264],\n    ],\n    center: [-58.4335, -34.6158],\n    active: true,\n    created_at: '2024-01-15T10:00:00Z',\n    updated_at: '2024-01-20T15:30:00Z',\n    rules: [\n      {\n        id: 'rule_1',\n        event_type: 'enter',\n        action: 'notification',\n        conditions: {\n          shipment_status: ['in_transit', 'out_for_delivery'],\n        },\n        active: true,\n      },\n    ],\n    stats: {\n      total_events: 245,\n      enter_events: 123,\n      exit_events: 122,\n      unique_shipments: 89,\n      avg_dwell_time: 45,\n      last_event: '2024-01-20T14:30:00Z',\n    },\n  },\n  {\n    id: 'gba_norte',\n    name: 'GBA Norte - Zona de Entrega',\n    type: 'delivery_zone',\n    coordinates: [\n      [-58.6, -34.4],\n      [-58.4, -34.4],\n      [-58.4, -34.55],\n      [-58.6, -34.55],\n      [-58.6, -34.4],\n    ],\n    center: [-58.5, -34.475],\n    active: true,\n    created_at: '2024-01-10T09:00:00Z',\n    updated_at: '2024-01-18T11:15:00Z',\n    rules: [\n      {\n        id: 'rule_2',\n        event_type: 'dwell',\n        action: 'alert',\n        conditions: {\n          min_dwell_time: 30,\n          shipment_status: ['out_for_delivery'],\n        },\n        active: true,\n      },\n    ],\n    stats: {\n      total_events: 156,\n      enter_events: 78,\n      exit_events: 78,\n      unique_shipments: 67,\n      avg_dwell_time: 28,\n      last_event: '2024-01-19T16:45:00Z',\n    },\n  },\n  {\n    id: 'warehouse_central',\n    name: 'Depósito Central',\n    type: 'warehouse',\n    coordinates: [\n      [-58.42, -34.61],\n      [-58.415, -34.61],\n      [-58.415, -34.615],\n      [-58.42, -34.615],\n      [-58.42, -34.61],\n    ],\n    center: [-58.4175, -34.6125],\n    radius: 500,\n    active: true,\n    created_at: '2024-01-05T08:00:00Z',\n    updated_at: '2024-01-15T12:00:00Z',\n    rules: [\n      {\n        id: 'rule_3',\n        event_type: 'exit',\n        action: 'status_change',\n        conditions: {\n          shipment_status: ['confirmed'],\n        },\n        active: true,\n      },\n    ],\n    stats: {\n      total_events: 89,\n      enter_events: 45,\n      exit_events: 44,\n      unique_shipments: 89,\n      avg_dwell_time: 120,\n      last_event: '2024-01-20T10:15:00Z',\n    },\n  },\n]\n\n// =====================================================\n// CONFIGURACIÓN DE TIPOS\n// =====================================================\n\nconst GEOFENCE_TYPES = {\n  delivery_zone: {\n    label: 'Zona de Entrega',\n    color: 'bg-blue-100 text-blue-800',\n    icon: MapPin,\n  },\n  restricted: {\n    label: 'Zona Restringida',\n    color: 'bg-red-100 text-red-800',\n    icon: AlertTriangle,\n  },\n  priority: {\n    label: 'Zona Prioritaria',\n    color: 'bg-yellow-100 text-yellow-800',\n    icon: Zap,\n  },\n  warehouse: {\n    label: 'Depósito',\n    color: 'bg-green-100 text-green-800',\n    icon: CheckCircle,\n  },\n}\n\n// =====================================================\n// COMPONENTE PRINCIPAL\n// =====================================================\n\nexport function GeofenceManager({ className }: GeofenceManagerProps) {\n  const [geofences, setGeofences] = useState<GeofenceZone[]>(SAMPLE_GEOFENCES)\n  const [selectedGeofence, setSelectedGeofence] = useState<GeofenceZone | null>(null)\n  const [filterType, setFilterType] = useState<string>('all')\n  const [searchTerm, setSearchTerm] = useState('')\n\n  // WebSocket para eventos en tiempo real\n  const { isConnected, subscribeToGeofence, lastGeofenceEvent, alerts } = useLogisticsWebSocket({\n    simulateInDevelopment: false, // Deshabilitado para evitar notificaciones persistentes\n  })\n\n  // Filtrar geofences\n  const filteredGeofences = geofences.filter(zone => {\n    const matchesType = filterType === 'all' || zone.type === filterType\n    const matchesSearch = zone.name.toLowerCase().includes(searchTerm.toLowerCase())\n    return matchesType && matchesSearch\n  })\n\n  // Estadísticas generales\n  const totalZones = geofences.length\n  const activeZones = geofences.filter(z => z.active).length\n  const totalEvents = geofences.reduce((acc, z) => acc + (z.stats?.total_events || 0), 0)\n  const recentEvents = alerts.filter(\n    alert =>\n      alert.type === 'geofence_event' &&\n      new Date(alert.timestamp) > new Date(Date.now() - 24 * 60 * 60 * 1000)\n  ).length\n\n  // =====================================================\n  // EFECTOS\n  // =====================================================\n\n  useEffect(() => {\n    // Suscribirse a eventos de todas las zonas activas\n    if (isConnected) {\n      geofences\n        .filter(z => z.active)\n        .forEach(zone => {\n          subscribeToGeofence(zone.id)\n        })\n    }\n  }, [isConnected, geofences, subscribeToGeofence])\n\n  useEffect(() => {\n    // Procesar eventos de geofence en tiempo real\n    if (lastGeofenceEvent) {\n      console.log('Nuevo evento de geofence:', lastGeofenceEvent)\n      // Aquí se podría actualizar las estadísticas en tiempo real\n    }\n  }, [lastGeofenceEvent])\n\n  // =====================================================\n  // HANDLERS\n  // =====================================================\n\n  const handleToggleZone = useCallback((zoneId: string) => {\n    setGeofences(prev =>\n      prev.map(zone =>\n        zone.id === zoneId\n          ? { ...zone, active: !zone.active, updated_at: new Date().toISOString() }\n          : zone\n      )\n    )\n  }, [])\n\n  const handleDeleteZone = useCallback((zoneId: string) => {\n    setGeofences(prev => prev.filter(zone => zone.id !== zoneId))\n  }, [])\n\n  const handleEditZone = useCallback((zone: GeofenceZone) => {\n    setSelectedGeofence(zone)\n  }, [])\n\n  return (\n    <div className={cn('space-y-6', className)}>\n      {/* Header */}\n      <div className='flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4'>\n        <div>\n          <h2 className='text-2xl font-bold tracking-tight'>Gestión de Geofences</h2>\n          <p className='text-muted-foreground'>\n            Administra zonas geográficas y reglas de automatización\n          </p>\n        </div>\n\n        <div className='flex items-center gap-3'>\n          <Badge\n            variant={isConnected ? 'default' : 'secondary'}\n            className='flex items-center gap-1'\n          >\n            {isConnected ? <CheckCircle className='w-3 h-3' /> : <Clock className='w-3 h-3' />}\n            {isConnected ? 'Tiempo Real' : 'Desconectado'}\n          </Badge>\n\n          <Dialog>\n            <DialogTrigger asChild>\n              <Button className='flex items-center gap-2'>\n                <Plus className='w-4 h-4' />\n                Nueva Zona\n              </Button>\n            </DialogTrigger>\n            <DialogContent className='max-w-2xl'>\n              <DialogHeader>\n                <DialogTitle>Crear Nueva Zona Geográfica</DialogTitle>\n                <DialogDescription>\n                  Define una nueva zona con reglas de automatización\n                </DialogDescription>\n              </DialogHeader>\n              <div className='p-4 text-center text-muted-foreground'>\n                Formulario de geofence en desarrollo\n              </div>\n            </DialogContent>\n          </Dialog>\n        </div>\n      </div>\n\n      {/* Métricas resumen */}\n      <div className='grid grid-cols-1 md:grid-cols-4 gap-4'>\n        <Card>\n          <CardContent className='p-4'>\n            <div className='flex items-center justify-between'>\n              <div>\n                <p className='text-sm font-medium text-muted-foreground'>Total Zonas</p>\n                <p className='text-2xl font-bold'>{totalZones}</p>\n              </div>\n              <MapPin className='w-8 h-8 text-blue-500' />\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className='p-4'>\n            <div className='flex items-center justify-between'>\n              <div>\n                <p className='text-sm font-medium text-muted-foreground'>Zonas Activas</p>\n                <p className='text-2xl font-bold'>{activeZones}</p>\n              </div>\n              <CheckCircle className='w-8 h-8 text-green-500' />\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className='p-4'>\n            <div className='flex items-center justify-between'>\n              <div>\n                <p className='text-sm font-medium text-muted-foreground'>Eventos Totales</p>\n                <p className='text-2xl font-bold'>{totalEvents}</p>\n              </div>\n              <BarChart3 className='w-8 h-8 text-purple-500' />\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className='p-4'>\n            <div className='flex items-center justify-between'>\n              <div>\n                <p className='text-sm font-medium text-muted-foreground'>Eventos Hoy</p>\n                <p className='text-2xl font-bold'>{recentEvents}</p>\n              </div>\n              <Zap className='w-8 h-8 text-yellow-500' />\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Filtros */}\n      <div className='flex flex-col sm:flex-row gap-4'>\n        <div className='flex-1'>\n          <Input\n            placeholder='Buscar zonas...'\n            value={searchTerm}\n            onChange={e => setSearchTerm(e.target.value)}\n          />\n        </div>\n\n        <Select value={filterType} onValueChange={setFilterType}>\n          <SelectTrigger className='w-48'>\n            <SelectValue placeholder='Filtrar por tipo' />\n          </SelectTrigger>\n          <SelectContent>\n            <SelectItem value='all'>Todos los tipos</SelectItem>\n            <SelectItem value='delivery_zone'>Zona de Entrega</SelectItem>\n            <SelectItem value='restricted'>Zona Restringida</SelectItem>\n            <SelectItem value='priority'>Zona Prioritaria</SelectItem>\n            <SelectItem value='warehouse'>Depósito</SelectItem>\n          </SelectContent>\n        </Select>\n      </div>\n\n      {/* Contenido principal */}\n      <Tabs defaultValue='list' className='space-y-4'>\n        <TabsList>\n          <TabsTrigger value='list'>Lista de Zonas</TabsTrigger>\n          <TabsTrigger value='map'>Vista de Mapa</TabsTrigger>\n          <TabsTrigger value='events'>Eventos Recientes</TabsTrigger>\n        </TabsList>\n\n        {/* Tab: Lista */}\n        <TabsContent value='list'>\n          <Card>\n            <CardHeader>\n              <CardTitle>Zonas Geográficas</CardTitle>\n              <CardDescription>Gestiona zonas y sus reglas de automatización</CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className='rounded-md border'>\n                <Table>\n                  <TableHeader>\n                    <TableRow>\n                      <TableHead>Zona</TableHead>\n                      <TableHead>Tipo</TableHead>\n                      <TableHead>Estado</TableHead>\n                      <TableHead>Eventos</TableHead>\n                      <TableHead>Última Actividad</TableHead>\n                      <TableHead>Reglas</TableHead>\n                      <TableHead className='w-12'></TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {filteredGeofences.map(zone => (\n                      <GeofenceRow\n                        key={zone.id}\n                        zone={zone}\n                        onToggle={handleToggleZone}\n                        onEdit={handleEditZone}\n                        onDelete={handleDeleteZone}\n                      />\n                    ))}\n                  </TableBody>\n                </Table>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        {/* Tab: Mapa */}\n        <TabsContent value='map'>\n          <Card>\n            <CardHeader>\n              <CardTitle>Vista de Mapa</CardTitle>\n              <CardDescription>Visualización geográfica de las zonas</CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className='h-96 bg-gray-100 rounded-lg flex items-center justify-center'>\n                <div className='text-center'>\n                  <MapPin className='w-8 h-8 text-gray-400 mx-auto mb-2' />\n                  <p className='text-gray-500'>Mapa de geofences en desarrollo</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        {/* Tab: Eventos */}\n        <TabsContent value='events'>\n          <Card>\n            <CardHeader>\n              <CardTitle>Eventos Recientes</CardTitle>\n              <CardDescription>Actividad en tiempo real de las zonas</CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className='space-y-4'>\n                {alerts.slice(0, 10).map((alert, index) => (\n                  <div key={index} className='flex items-center gap-3 p-3 border rounded-lg'>\n                    <div className='w-2 h-2 rounded-full bg-blue-500'></div>\n                    <div className='flex-1'>\n                      <div className='font-medium'>{alert.message}</div>\n                      <div className='text-sm text-muted-foreground'>\n                        {formatDate(alert.timestamp)}\n                      </div>\n                    </div>\n                    <Badge variant='outline'>{alert.type}</Badge>\n                  </div>\n                ))}\n\n                {alerts.length === 0 && (\n                  <div className='text-center py-8'>\n                    <Clock className='w-8 h-8 text-gray-400 mx-auto mb-2' />\n                    <p className='text-gray-500'>No hay eventos recientes</p>\n                  </div>\n                )}\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  )\n}\n\n// =====================================================\n// COMPONENTE GEOFENCE ROW\n// =====================================================\n\ninterface GeofenceRowProps {\n  zone: GeofenceZone\n  onToggle: (zoneId: string) => void\n  onEdit: (zone: GeofenceZone) => void\n  onDelete: (zoneId: string) => void\n}\n\nfunction GeofenceRow({ zone, onToggle, onEdit, onDelete }: GeofenceRowProps) {\n  const typeConfig = GEOFENCE_TYPES[zone.type]\n  const Icon = typeConfig.icon\n\n  return (\n    <TableRow>\n      <TableCell>\n        <div className='flex items-center gap-2'>\n          <Icon className='w-4 h-4 text-muted-foreground' />\n          <div>\n            <div className='font-medium'>{zone.name}</div>\n            <div className='text-sm text-muted-foreground'>\n              {zone.center[1].toFixed(4)}, {zone.center[0].toFixed(4)}\n            </div>\n          </div>\n        </div>\n      </TableCell>\n\n      <TableCell>\n        <Badge variant='outline' className={typeConfig.color}>\n          {typeConfig.label}\n        </Badge>\n      </TableCell>\n\n      <TableCell>\n        <div className='flex items-center gap-2'>\n          <Switch checked={zone.active} onCheckedChange={() => onToggle(zone.id)} size='sm' />\n          <span className='text-sm'>{zone.active ? 'Activa' : 'Inactiva'}</span>\n        </div>\n      </TableCell>\n\n      <TableCell>\n        <div className='text-sm'>\n          <div className='font-medium'>{zone.stats?.total_events || 0}</div>\n          <div className='text-muted-foreground'>\n            {zone.stats?.unique_shipments || 0} envíos únicos\n          </div>\n        </div>\n      </TableCell>\n\n      <TableCell>\n        <div className='text-sm'>\n          {zone.stats?.last_event ? formatDate(zone.stats.last_event) : 'Sin actividad'}\n        </div>\n      </TableCell>\n\n      <TableCell>\n        <div className='flex items-center gap-1'>\n          <Badge variant='secondary' className='text-xs'>\n            {zone.rules.filter(r => r.active).length} activas\n          </Badge>\n          <Badge variant='outline' className='text-xs'>\n            {zone.rules.length} total\n          </Badge>\n        </div>\n      </TableCell>\n\n      <TableCell>\n        <div className='flex items-center gap-1'>\n          <Button variant='ghost' size='sm' onClick={() => onEdit(zone)}>\n            <Edit className='w-4 h-4' />\n          </Button>\n\n          <Button\n            variant='ghost'\n            size='sm'\n            onClick={() => onDelete(zone.id)}\n            className='text-red-600 hover:text-red-700'\n          >\n            <Trash2 className='w-4 h-4' />\n          </Button>\n        </div>\n      </TableCell>\n    </TableRow>\n  )\n}\n"],"names":["GeofenceManager","SAMPLE_GEOFENCES","id","name","type","coordinates","center","active","created_at","updated_at","rules","event_type","action","conditions","shipment_status","stats","total_events","enter_events","exit_events","unique_shipments","avg_dwell_time","last_event","min_dwell_time","radius","GEOFENCE_TYPES","delivery_zone","label","color","icon","MapPin","restricted","AlertTriangle","priority","Zap","warehouse","CheckCircle","className","geofences","setGeofences","useState","selectedGeofence","setSelectedGeofence","filterType","setFilterType","searchTerm","setSearchTerm","isConnected","subscribeToGeofence","lastGeofenceEvent","alerts","useLogisticsWebSocket","simulateInDevelopment","filteredGeofences","filter","zone","matchesType","matchesSearch","toLowerCase","includes","totalZones","length","activeZones","z","totalEvents","reduce","acc","recentEvents","alert","Date","timestamp","now","useEffect","forEach","console","log","handleToggleZone","useCallback","zoneId","prev","map","toISOString","handleDeleteZone","handleEditZone","div","cn","h2","p","Badge","variant","Clock","Dialog","DialogTrigger","asChild","Button","Plus","DialogContent","DialogHeader","DialogTitle","DialogDescription","Card","CardContent","BarChart3","Input","placeholder","value","onChange","e","target","Select","onValueChange","SelectTrigger","SelectValue","SelectContent","SelectItem","Tabs","defaultValue","TabsList","TabsTrigger","TabsContent","CardHeader","CardTitle","CardDescription","Table","TableHeader","TableRow","TableHead","TableBody","GeofenceRow","onToggle","onEdit","onDelete","slice","index","message","formatDate","typeConfig","Icon","TableCell","toFixed","Switch","checked","onCheckedChange","size","span","r","onClick","Edit","Trash2"],"mappings":"AAAA,wDAAwD;AACxD,0CAA0C;AAC1C,oEAAoE;AACpE,sDAAsD;AACtD,wDAAwD;AAExD;;;;;+BA+OgBA;;;eAAAA;;;;uBA7OiC;sBACyB;wBACnD;uBACD;uBACA;wBAEC;wBAOhB;uBAQA;wBAQA;sBACkD;6BAalD;uCAC+B;uBACnB;mCACQ;AA8C3B,wDAAwD;AACxD,mBAAmB;AACnB,wDAAwD;AAExD,MAAMC,mBAAmC;IACvC;QACEC,IAAI;QACJC,MAAM;QACNC,MAAM;QACNC,aAAa;YACX;gBAAC,CAAC;gBAAS,CAAC;aAAQ;YACpB;gBAAC,CAAC;gBAAS,CAAC;aAAQ;YACpB;gBAAC,CAAC;gBAAS,CAAC;aAAQ;YACpB;gBAAC,CAAC;gBAAS,CAAC;aAAQ;YACpB;gBAAC,CAAC;gBAAS,CAAC;aAAQ;SACrB;QACDC,QAAQ;YAAC,CAAC;YAAS,CAAC;SAAQ;QAC5BC,QAAQ;QACRC,YAAY;QACZC,YAAY;QACZC,OAAO;YACL;gBACER,IAAI;gBACJS,YAAY;gBACZC,QAAQ;gBACRC,YAAY;oBACVC,iBAAiB;wBAAC;wBAAc;qBAAmB;gBACrD;gBACAP,QAAQ;YACV;SACD;QACDQ,OAAO;YACLC,cAAc;YACdC,cAAc;YACdC,aAAa;YACbC,kBAAkB;YAClBC,gBAAgB;YAChBC,YAAY;QACd;IACF;IACA;QACEnB,IAAI;QACJC,MAAM;QACNC,MAAM;QACNC,aAAa;YACX;gBAAC,CAAC;gBAAM,CAAC;aAAK;YACd;gBAAC,CAAC;gBAAM,CAAC;aAAK;YACd;gBAAC,CAAC;gBAAM,CAAC;aAAM;YACf;gBAAC,CAAC;gBAAM,CAAC;aAAM;YACf;gBAAC,CAAC;gBAAM,CAAC;aAAK;SACf;QACDC,QAAQ;YAAC,CAAC;YAAM,CAAC;SAAO;QACxBC,QAAQ;QACRC,YAAY;QACZC,YAAY;QACZC,OAAO;YACL;gBACER,IAAI;gBACJS,YAAY;gBACZC,QAAQ;gBACRC,YAAY;oBACVS,gBAAgB;oBAChBR,iBAAiB;wBAAC;qBAAmB;gBACvC;gBACAP,QAAQ;YACV;SACD;QACDQ,OAAO;YACLC,cAAc;YACdC,cAAc;YACdC,aAAa;YACbC,kBAAkB;YAClBC,gBAAgB;YAChBC,YAAY;QACd;IACF;IACA;QACEnB,IAAI;QACJC,MAAM;QACNC,MAAM;QACNC,aAAa;YACX;gBAAC,CAAC;gBAAO,CAAC;aAAM;YAChB;gBAAC,CAAC;gBAAQ,CAAC;aAAM;YACjB;gBAAC,CAAC;gBAAQ,CAAC;aAAO;YAClB;gBAAC,CAAC;gBAAO,CAAC;aAAO;YACjB;gBAAC,CAAC;gBAAO,CAAC;aAAM;SACjB;QACDC,QAAQ;YAAC,CAAC;YAAS,CAAC;SAAQ;QAC5BiB,QAAQ;QACRhB,QAAQ;QACRC,YAAY;QACZC,YAAY;QACZC,OAAO;YACL;gBACER,IAAI;gBACJS,YAAY;gBACZC,QAAQ;gBACRC,YAAY;oBACVC,iBAAiB;wBAAC;qBAAY;gBAChC;gBACAP,QAAQ;YACV;SACD;QACDQ,OAAO;YACLC,cAAc;YACdC,cAAc;YACdC,aAAa;YACbC,kBAAkB;YAClBC,gBAAgB;YAChBC,YAAY;QACd;IACF;CACD;AAED,wDAAwD;AACxD,yBAAyB;AACzB,wDAAwD;AAExD,MAAMG,iBAAiB;IACrBC,eAAe;QACbC,OAAO;QACPC,OAAO;QACPC,MAAMC,mBAAM;IACd;IACAC,YAAY;QACVJ,OAAO;QACPC,OAAO;QACPC,MAAMG,0BAAa;IACrB;IACAC,UAAU;QACRN,OAAO;QACPC,OAAO;QACPC,MAAMK,gBAAG;IACX;IACAC,WAAW;QACTR,OAAO;QACPC,OAAO;QACPC,MAAMO,wBAAW;IACnB;AACF;AAMO,SAASnC,gBAAgB,EAAEoC,SAAS,EAAwB;IACjE,MAAM,CAACC,WAAWC,aAAa,GAAGC,IAAAA,eAAQ,EAAiBtC;IAC3D,MAAM,CAACuC,kBAAkBC,oBAAoB,GAAGF,IAAAA,eAAQ,EAAsB;IAC9E,MAAM,CAACG,YAAYC,cAAc,GAAGJ,IAAAA,eAAQ,EAAS;IACrD,MAAM,CAACK,YAAYC,cAAc,GAAGN,IAAAA,eAAQ,EAAC;IAE7C,wCAAwC;IACxC,MAAM,EAAEO,WAAW,EAAEC,mBAAmB,EAAEC,iBAAiB,EAAEC,MAAM,EAAE,GAAGC,IAAAA,4CAAqB,EAAC;QAC5FC,uBAAuB;IACzB;IAEA,oBAAoB;IACpB,MAAMC,oBAAoBf,UAAUgB,MAAM,CAACC,CAAAA;QACzC,MAAMC,cAAcb,eAAe,SAASY,KAAKlD,IAAI,KAAKsC;QAC1D,MAAMc,gBAAgBF,KAAKnD,IAAI,CAACsD,WAAW,GAAGC,QAAQ,CAACd,WAAWa,WAAW;QAC7E,OAAOF,eAAeC;IACxB;IAEA,yBAAyB;IACzB,MAAMG,aAAatB,UAAUuB,MAAM;IACnC,MAAMC,cAAcxB,UAAUgB,MAAM,CAACS,CAAAA,IAAKA,EAAEvD,MAAM,EAAEqD,MAAM;IAC1D,MAAMG,cAAc1B,UAAU2B,MAAM,CAAC,CAACC,KAAKH,IAAMG,MAAOH,CAAAA,EAAE/C,KAAK,EAAEC,gBAAgB,CAAA,GAAI;IACrF,MAAMkD,eAAejB,OAAOI,MAAM,CAChCc,CAAAA,QACEA,MAAM/D,IAAI,KAAK,oBACf,IAAIgE,KAAKD,MAAME,SAAS,IAAI,IAAID,KAAKA,KAAKE,GAAG,KAAK,KAAK,KAAK,KAAK,OACnEV,MAAM;IAER,wDAAwD;IACxD,UAAU;IACV,wDAAwD;IAExDW,IAAAA,gBAAS,EAAC;QACR,mDAAmD;QACnD,IAAIzB,aAAa;YACfT,UACGgB,MAAM,CAACS,CAAAA,IAAKA,EAAEvD,MAAM,EACpBiE,OAAO,CAAClB,CAAAA;gBACPP,oBAAoBO,KAAKpD,EAAE;YAC7B;QACJ;IACF,GAAG;QAAC4C;QAAaT;QAAWU;KAAoB;IAEhDwB,IAAAA,gBAAS,EAAC;QACR,8CAA8C;QAC9C,IAAIvB,mBAAmB;YACrByB,QAAQC,GAAG,CAAC,6BAA6B1B;QACzC,4DAA4D;QAC9D;IACF,GAAG;QAACA;KAAkB;IAEtB,wDAAwD;IACxD,WAAW;IACX,wDAAwD;IAExD,MAAM2B,mBAAmBC,IAAAA,kBAAW,EAAC,CAACC;QACpCvC,aAAawC,CAAAA,OACXA,KAAKC,GAAG,CAACzB,CAAAA,OACPA,KAAKpD,EAAE,KAAK2E,SACR;oBAAE,GAAGvB,IAAI;oBAAE/C,QAAQ,CAAC+C,KAAK/C,MAAM;oBAAEE,YAAY,IAAI2D,OAAOY,WAAW;gBAAG,IACtE1B;IAGV,GAAG,EAAE;IAEL,MAAM2B,mBAAmBL,IAAAA,kBAAW,EAAC,CAACC;QACpCvC,aAAawC,CAAAA,OAAQA,KAAKzB,MAAM,CAACC,CAAAA,OAAQA,KAAKpD,EAAE,KAAK2E;IACvD,GAAG,EAAE;IAEL,MAAMK,iBAAiBN,IAAAA,kBAAW,EAAC,CAACtB;QAClCb,oBAAoBa;IACtB,GAAG,EAAE;IAEL,qBACE,sBAAC6B;QAAI/C,WAAWgD,IAAAA,SAAE,EAAC,aAAahD;;0BAE9B,sBAAC+C;gBAAI/C,WAAU;;kCACb,sBAAC+C;;0CACC,qBAACE;gCAAGjD,WAAU;0CAAoC;;0CAClD,qBAACkD;gCAAElD,WAAU;0CAAwB;;;;kCAKvC,sBAAC+C;wBAAI/C,WAAU;;0CACb,sBAACmD,YAAK;gCACJC,SAAS1C,cAAc,YAAY;gCACnCV,WAAU;;oCAETU,4BAAc,qBAACX,wBAAW;wCAACC,WAAU;uDAAe,qBAACqD,kBAAK;wCAACrD,WAAU;;oCACrEU,cAAc,gBAAgB;;;0CAGjC,sBAAC4C,cAAM;;kDACL,qBAACC,qBAAa;wCAACC,OAAO;kDACpB,cAAA,sBAACC,cAAM;4CAACzD,WAAU;;8DAChB,qBAAC0D,iBAAI;oDAAC1D,WAAU;;gDAAY;;;;kDAIhC,sBAAC2D,qBAAa;wCAAC3D,WAAU;;0DACvB,sBAAC4D,oBAAY;;kEACX,qBAACC,mBAAW;kEAAC;;kEACb,qBAACC,yBAAiB;kEAAC;;;;0DAIrB,qBAACf;gDAAI/C,WAAU;0DAAwC;;;;;;;;;;0BAS/D,sBAAC+C;gBAAI/C,WAAU;;kCACb,qBAAC+D,UAAI;kCACH,cAAA,qBAACC,iBAAW;4BAAChE,WAAU;sCACrB,cAAA,sBAAC+C;gCAAI/C,WAAU;;kDACb,sBAAC+C;;0DACC,qBAACG;gDAAElD,WAAU;0DAA4C;;0DACzD,qBAACkD;gDAAElD,WAAU;0DAAsBuB;;;;kDAErC,qBAAC9B,mBAAM;wCAACO,WAAU;;;;;;kCAKxB,qBAAC+D,UAAI;kCACH,cAAA,qBAACC,iBAAW;4BAAChE,WAAU;sCACrB,cAAA,sBAAC+C;gCAAI/C,WAAU;;kDACb,sBAAC+C;;0DACC,qBAACG;gDAAElD,WAAU;0DAA4C;;0DACzD,qBAACkD;gDAAElD,WAAU;0DAAsByB;;;;kDAErC,qBAAC1B,wBAAW;wCAACC,WAAU;;;;;;kCAK7B,qBAAC+D,UAAI;kCACH,cAAA,qBAACC,iBAAW;4BAAChE,WAAU;sCACrB,cAAA,sBAAC+C;gCAAI/C,WAAU;;kDACb,sBAAC+C;;0DACC,qBAACG;gDAAElD,WAAU;0DAA4C;;0DACzD,qBAACkD;gDAAElD,WAAU;0DAAsB2B;;;;kDAErC,qBAACsC,sBAAS;wCAACjE,WAAU;;;;;;kCAK3B,qBAAC+D,UAAI;kCACH,cAAA,qBAACC,iBAAW;4BAAChE,WAAU;sCACrB,cAAA,sBAAC+C;gCAAI/C,WAAU;;kDACb,sBAAC+C;;0DACC,qBAACG;gDAAElD,WAAU;0DAA4C;;0DACzD,qBAACkD;gDAAElD,WAAU;0DAAsB8B;;;;kDAErC,qBAACjC,gBAAG;wCAACG,WAAU;;;;;;;;0BAOvB,sBAAC+C;gBAAI/C,WAAU;;kCACb,qBAAC+C;wBAAI/C,WAAU;kCACb,cAAA,qBAACkE,YAAK;4BACJC,aAAY;4BACZC,OAAO5D;4BACP6D,UAAUC,CAAAA,IAAK7D,cAAc6D,EAAEC,MAAM,CAACH,KAAK;;;kCAI/C,sBAACI,cAAM;wBAACJ,OAAO9D;wBAAYmE,eAAelE;;0CACxC,qBAACmE,qBAAa;gCAAC1E,WAAU;0CACvB,cAAA,qBAAC2E,mBAAW;oCAACR,aAAY;;;0CAE3B,sBAACS,qBAAa;;kDACZ,qBAACC,kBAAU;wCAACT,OAAM;kDAAM;;kDACxB,qBAACS,kBAAU;wCAACT,OAAM;kDAAgB;;kDAClC,qBAACS,kBAAU;wCAACT,OAAM;kDAAa;;kDAC/B,qBAACS,kBAAU;wCAACT,OAAM;kDAAW;;kDAC7B,qBAACS,kBAAU;wCAACT,OAAM;kDAAY;;;;;;;;0BAMpC,sBAACU,UAAI;gBAACC,cAAa;gBAAO/E,WAAU;;kCAClC,sBAACgF,cAAQ;;0CACP,qBAACC,iBAAW;gCAACb,OAAM;0CAAO;;0CAC1B,qBAACa,iBAAW;gCAACb,OAAM;0CAAM;;0CACzB,qBAACa,iBAAW;gCAACb,OAAM;0CAAS;;;;kCAI9B,qBAACc,iBAAW;wBAACd,OAAM;kCACjB,cAAA,sBAACL,UAAI;;8CACH,sBAACoB,gBAAU;;sDACT,qBAACC,eAAS;sDAAC;;sDACX,qBAACC,qBAAe;sDAAC;;;;8CAEnB,qBAACrB,iBAAW;8CACV,cAAA,qBAACjB;wCAAI/C,WAAU;kDACb,cAAA,sBAACsF,YAAK;;8DACJ,qBAACC,kBAAW;8DACV,cAAA,sBAACC,eAAQ;;0EACP,qBAACC,gBAAS;0EAAC;;0EACX,qBAACA,gBAAS;0EAAC;;0EACX,qBAACA,gBAAS;0EAAC;;0EACX,qBAACA,gBAAS;0EAAC;;0EACX,qBAACA,gBAAS;0EAAC;;0EACX,qBAACA,gBAAS;0EAAC;;0EACX,qBAACA,gBAAS;gEAACzF,WAAU;;;;;8DAGzB,qBAAC0F,gBAAS;8DACP1E,kBAAkB2B,GAAG,CAACzB,CAAAA,qBACrB,qBAACyE;4DAECzE,MAAMA;4DACN0E,UAAUrD;4DACVsD,QAAQ/C;4DACRgD,UAAUjD;2DAJL3B,KAAKpD,EAAE;;;;;;;;;kCAe5B,qBAACoH,iBAAW;wBAACd,OAAM;kCACjB,cAAA,sBAACL,UAAI;;8CACH,sBAACoB,gBAAU;;sDACT,qBAACC,eAAS;sDAAC;;sDACX,qBAACC,qBAAe;sDAAC;;;;8CAEnB,qBAACrB,iBAAW;8CACV,cAAA,qBAACjB;wCAAI/C,WAAU;kDACb,cAAA,sBAAC+C;4CAAI/C,WAAU;;8DACb,qBAACP,mBAAM;oDAACO,WAAU;;8DAClB,qBAACkD;oDAAElD,WAAU;8DAAgB;;;;;;;;;kCAQvC,qBAACkF,iBAAW;wBAACd,OAAM;kCACjB,cAAA,sBAACL,UAAI;;8CACH,sBAACoB,gBAAU;;sDACT,qBAACC,eAAS;sDAAC;;sDACX,qBAACC,qBAAe;sDAAC;;;;8CAEnB,qBAACrB,iBAAW;8CACV,cAAA,sBAACjB;wCAAI/C,WAAU;;4CACZa,OAAOkF,KAAK,CAAC,GAAG,IAAIpD,GAAG,CAAC,CAACZ,OAAOiE,sBAC/B,sBAACjD;oDAAgB/C,WAAU;;sEACzB,qBAAC+C;4DAAI/C,WAAU;;sEACf,sBAAC+C;4DAAI/C,WAAU;;8EACb,qBAAC+C;oEAAI/C,WAAU;8EAAe+B,MAAMkE,OAAO;;8EAC3C,qBAAClD;oEAAI/C,WAAU;8EACZkG,IAAAA,6BAAU,EAACnE,MAAME,SAAS;;;;sEAG/B,qBAACkB,YAAK;4DAACC,SAAQ;sEAAWrB,MAAM/D,IAAI;;;mDAR5BgI;4CAYXnF,OAAOW,MAAM,KAAK,mBACjB,sBAACuB;gDAAI/C,WAAU;;kEACb,qBAACqD,kBAAK;wDAACrD,WAAU;;kEACjB,qBAACkD;wDAAElD,WAAU;kEAAgB;;;;;;;;;;;;;;AAUjD;AAaA,SAAS2F,YAAY,EAAEzE,IAAI,EAAE0E,QAAQ,EAAEC,MAAM,EAAEC,QAAQ,EAAoB;IACzE,MAAMK,aAAa/G,cAAc,CAAC8B,KAAKlD,IAAI,CAAC;IAC5C,MAAMoI,OAAOD,WAAW3G,IAAI;IAE5B,qBACE,sBAACgG,eAAQ;;0BACP,qBAACa,gBAAS;0BACR,cAAA,sBAACtD;oBAAI/C,WAAU;;sCACb,qBAACoG;4BAAKpG,WAAU;;sCAChB,sBAAC+C;;8CACC,qBAACA;oCAAI/C,WAAU;8CAAekB,KAAKnD,IAAI;;8CACvC,sBAACgF;oCAAI/C,WAAU;;wCACZkB,KAAKhD,MAAM,CAAC,EAAE,CAACoI,OAAO,CAAC;wCAAG;wCAAGpF,KAAKhD,MAAM,CAAC,EAAE,CAACoI,OAAO,CAAC;;;;;;;;0BAM7D,qBAACD,gBAAS;0BACR,cAAA,qBAAClD,YAAK;oBAACC,SAAQ;oBAAUpD,WAAWmG,WAAW5G,KAAK;8BACjD4G,WAAW7G,KAAK;;;0BAIrB,qBAAC+G,gBAAS;0BACR,cAAA,sBAACtD;oBAAI/C,WAAU;;sCACb,qBAACuG,cAAM;4BAACC,SAAStF,KAAK/C,MAAM;4BAAEsI,iBAAiB,IAAMb,SAAS1E,KAAKpD,EAAE;4BAAG4I,MAAK;;sCAC7E,qBAACC;4BAAK3G,WAAU;sCAAWkB,KAAK/C,MAAM,GAAG,WAAW;;;;;0BAIxD,qBAACkI,gBAAS;0BACR,cAAA,sBAACtD;oBAAI/C,WAAU;;sCACb,qBAAC+C;4BAAI/C,WAAU;sCAAekB,KAAKvC,KAAK,EAAEC,gBAAgB;;sCAC1D,sBAACmE;4BAAI/C,WAAU;;gCACZkB,KAAKvC,KAAK,EAAEI,oBAAoB;gCAAE;;;;;;0BAKzC,qBAACsH,gBAAS;0BACR,cAAA,qBAACtD;oBAAI/C,WAAU;8BACZkB,KAAKvC,KAAK,EAAEM,aAAaiH,IAAAA,6BAAU,EAAChF,KAAKvC,KAAK,CAACM,UAAU,IAAI;;;0BAIlE,qBAACoH,gBAAS;0BACR,cAAA,sBAACtD;oBAAI/C,WAAU;;sCACb,sBAACmD,YAAK;4BAACC,SAAQ;4BAAYpD,WAAU;;gCAClCkB,KAAK5C,KAAK,CAAC2C,MAAM,CAAC2F,CAAAA,IAAKA,EAAEzI,MAAM,EAAEqD,MAAM;gCAAC;;;sCAE3C,sBAAC2B,YAAK;4BAACC,SAAQ;4BAAUpD,WAAU;;gCAChCkB,KAAK5C,KAAK,CAACkD,MAAM;gCAAC;;;;;;0BAKzB,qBAAC6E,gBAAS;0BACR,cAAA,sBAACtD;oBAAI/C,WAAU;;sCACb,qBAACyD,cAAM;4BAACL,SAAQ;4BAAQsD,MAAK;4BAAKG,SAAS,IAAMhB,OAAO3E;sCACtD,cAAA,qBAAC4F,iBAAI;gCAAC9G,WAAU;;;sCAGlB,qBAACyD,cAAM;4BACLL,SAAQ;4BACRsD,MAAK;4BACLG,SAAS,IAAMf,SAAS5E,KAAKpD,EAAE;4BAC/BkC,WAAU;sCAEV,cAAA,qBAAC+G,mBAAM;gCAAC/G,WAAU;;;;;;;;AAM9B"}