{"version":3,"names":["cov_1wkjx0iwyp","actualCoverage","s","MonitoringProvider","f","MonitoringStatus","useErrorReporting","useMonitoring","useMonitoringStats","MonitoringContext","_react","createContext","isInitialized","isMonitoring","error","context","useContext","b","Error","children","autoStart","enableErrorBoundary","setIsInitialized","useState","setIsMonitoring","setError","useEffect","initializeMonitoring","_logger","logger","info","LogLevel","INFO","LogCategory","SYSTEM","_proactivemonitoring","proactiveMonitoring","updateConfig","enabled","checkInterval","errorThreshold","responseTimeThreshold","memoryThreshold","cpuThreshold","enableAutoRecovery","notificationChannels","startMonitoring","window","addEventListener","handleGlobalError","handleUnhandledRejection","handleResourceError","err","errorMessage","message","ERROR","removeEventListener","event","reportError","source","filename","lineno","colno","timestamp","Date","toISOString","url","location","href","userAgent","navigator","reportingError","originalError","reason","String","originalReason","target","tagName","toLowerCase","src","includes","resourceType","resourceUrl","contextValue","content","_jsxruntime","jsx","Provider","value","_ErrorBoundary","ErrorBoundaryWrapper","showDetails","process","env","NODE_ENV","enableReporting","default","useCallback","warn","WARN","stats","setStats","loading","setLoading","refreshStats","newStats","getMonitoringStats","interval","setInterval","clearInterval","jsxs","className","toString"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\providers\\MonitoringProvider.tsx"],"sourcesContent":["'use client'\r\n\r\nimport React, { createContext, useContext, useEffect, useState, ReactNode } from 'react'\r\nimport { proactiveMonitoring, startMonitoring } from '../lib/monitoring/proactive-monitoring'\r\nimport { logger, LogLevel, LogCategory } from '@/lib/enterprise/logger'\r\nimport { ErrorBoundaryWrapper } from '../components/ErrorBoundary'\r\n\r\ninterface MonitoringContextType {\r\n  isInitialized: boolean\r\n  isMonitoring: boolean\r\n  error: string | null\r\n}\r\n\r\nconst MonitoringContext = createContext<MonitoringContextType>({\r\n  isInitialized: false,\r\n  isMonitoring: false,\r\n  error: null\r\n})\r\n\r\nexport const useMonitoring = () => {\r\n  const context = useContext(MonitoringContext)\r\n  if (!context) {\r\n    throw new Error('useMonitoring must be used within a MonitoringProvider')\r\n  }\r\n  return context\r\n}\r\n\r\ninterface MonitoringProviderProps {\r\n  children: ReactNode\r\n  autoStart?: boolean\r\n  enableErrorBoundary?: boolean\r\n}\r\n\r\nexport function MonitoringProvider({\r\n  children,\r\n  autoStart = true,\r\n  enableErrorBoundary = true\r\n}: MonitoringProviderProps) {\r\n  const [isInitialized, setIsInitialized] = useState(false)\r\n  const [isMonitoring, setIsMonitoring] = useState(false)\r\n  const [error, setError] = useState<string | null>(null)\r\n\r\n  useEffect(() => {\r\n    const initializeMonitoring = async () => {\r\n      try {\r\n        logger.info(LogLevel.INFO, 'Initializing proactive monitoring system', {}, LogCategory.SYSTEM)\r\n        \r\n        // Configurar el sistema de monitoreo\r\n        proactiveMonitoring.updateConfig({\r\n          enabled: true,\r\n          checkInterval: 30, // 30 segundos\r\n          errorThreshold: 5, // 5% de errores\r\n          responseTimeThreshold: 2000, // 2 segundos\r\n          memoryThreshold: 80, // 80% de memoria\r\n          cpuThreshold: 80, // 80% de CPU\r\n          enableAutoRecovery: false, // Deshabilitado por seguridad\r\n          notificationChannels: ['email', 'slack']\r\n        })\r\n\r\n        // Iniciar monitoreo automáticamente si está habilitado\r\n        if (autoStart) {\r\n          startMonitoring()\r\n          setIsMonitoring(true)\r\n          logger.info(LogLevel.INFO, 'Proactive monitoring started automatically', {}, LogCategory.SYSTEM)\r\n        }\r\n\r\n        // Configurar listeners para errores no capturados\r\n        if (typeof window !== 'undefined') {\r\n          // Errores de JavaScript no capturados\r\n          window.addEventListener('error', handleGlobalError)\r\n          \r\n          // Promesas rechazadas no capturadas\r\n          window.addEventListener('unhandledrejection', handleUnhandledRejection)\r\n          \r\n          // Errores de recursos (imágenes, scripts, etc.)\r\n          window.addEventListener('error', handleResourceError, true)\r\n        }\r\n\r\n        setIsInitialized(true)\r\n        setError(null)\r\n        \r\n        logger.info(LogLevel.INFO, 'Proactive monitoring system initialized successfully', {\r\n          autoStart,\r\n          enableErrorBoundary\r\n        }, LogCategory.SYSTEM)\r\n        \r\n      } catch (err) {\r\n        const errorMessage = err instanceof Error ? err.message : 'Failed to initialize monitoring'\r\n        setError(errorMessage)\r\n        logger.error(LogLevel.ERROR, 'Failed to initialize monitoring system', {\r\n          error: errorMessage\r\n        }, LogCategory.SYSTEM)\r\n      }\r\n    }\r\n\r\n    initializeMonitoring()\r\n\r\n    // Cleanup\r\n    return () => {\r\n      if (typeof window !== 'undefined') {\r\n        window.removeEventListener('error', handleGlobalError)\r\n        window.removeEventListener('unhandledrejection', handleUnhandledRejection)\r\n        window.removeEventListener('error', handleResourceError, true)\r\n      }\r\n    }\r\n  }, [autoStart])\r\n\r\n  const handleGlobalError = async (event: ErrorEvent) => {\r\n    try {\r\n      await proactiveMonitoring.reportError(event.error || new Error(event.message), {\r\n        source: 'global_error_handler',\r\n        filename: event.filename,\r\n        lineno: event.lineno,\r\n        colno: event.colno,\r\n        timestamp: new Date().toISOString(),\r\n        url: window.location.href,\r\n        userAgent: navigator.userAgent\r\n      })\r\n    } catch (reportingError) {\r\n      logger.error(LogLevel.ERROR, 'Failed to report global error', {\r\n        originalError: event.message,\r\n        reportingError: reportingError instanceof Error ? reportingError.message : 'Unknown error'\r\n      }, LogCategory.SYSTEM)\r\n    }\r\n  }\r\n\r\n  const handleUnhandledRejection = async (event: PromiseRejectionEvent) => {\r\n    try {\r\n      const error = event.reason instanceof Error ? event.reason : new Error(String(event.reason))\r\n      await proactiveMonitoring.reportError(error, {\r\n        source: 'unhandled_promise_rejection',\r\n        timestamp: new Date().toISOString(),\r\n        url: window.location.href,\r\n        userAgent: navigator.userAgent,\r\n        reason: String(event.reason)\r\n      })\r\n    } catch (reportingError) {\r\n      logger.error(LogLevel.ERROR, 'Failed to report unhandled promise rejection', {\r\n        originalReason: String(event.reason),\r\n        reportingError: reportingError instanceof Error ? reportingError.message : 'Unknown error'\r\n      }, LogCategory.SYSTEM)\r\n    }\r\n  }\r\n\r\n  const handleResourceError = async (event: Event) => {\r\n    if (event.target && event.target !== window) {\r\n      const target = event.target as HTMLElement\r\n      const tagName = target.tagName?.toLowerCase()\r\n      const src = (target as any).src || (target as any).href\r\n      \r\n      if (src && ['img', 'script', 'link', 'iframe'].includes(tagName)) {\r\n        try {\r\n          await proactiveMonitoring.reportError(\r\n            new Error(`Resource loading failed: ${tagName} - ${src}`),\r\n            {\r\n              source: 'resource_error',\r\n              resourceType: tagName,\r\n              resourceUrl: src,\r\n              timestamp: new Date().toISOString(),\r\n              url: window.location.href\r\n            }\r\n          )\r\n        } catch (reportingError) {\r\n          logger.error(LogLevel.ERROR, 'Failed to report resource error', {\r\n            resourceUrl: src,\r\n            resourceType: tagName,\r\n            reportingError: reportingError instanceof Error ? reportingError.message : 'Unknown error'\r\n          }, LogCategory.SYSTEM)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const contextValue: MonitoringContextType = {\r\n    isInitialized,\r\n    isMonitoring,\r\n    error\r\n  }\r\n\r\n  const content = (\r\n    <MonitoringContext.Provider value={contextValue}>\r\n      {children}\r\n    </MonitoringContext.Provider>\r\n  )\r\n\r\n  // Envolver con Error Boundary si está habilitado\r\n  if (enableErrorBoundary) {\r\n    return (\r\n      <ErrorBoundaryWrapper\r\n        showDetails={process.env.NODE_ENV === 'development'}\r\n        enableReporting={true}\r\n      >\r\n        {content}\r\n      </ErrorBoundaryWrapper>\r\n    )\r\n  }\r\n\r\n  return content\r\n}\r\n\r\n/**\r\n * Hook para reportar errores manualmente desde componentes\r\n */\r\nexport function useErrorReporting() {\r\n  const { isInitialized } = useMonitoring()\r\n\r\n  const reportError = React.useCallback(async (error: Error | string, context?: Record<string, any>) => {\r\n    if (!isInitialized) {\r\n      logger.warn(LogLevel.WARN, 'Monitoring not initialized, error not reported', {\r\n        error: error instanceof Error ? error.message : error\r\n      }, LogCategory.SYSTEM)\r\n      return\r\n    }\r\n\r\n    try {\r\n      await proactiveMonitoring.reportError(error, {\r\n        ...context,\r\n        source: 'manual_report',\r\n        timestamp: new Date().toISOString(),\r\n        url: typeof window !== 'undefined' ? window.location.href : 'unknown'\r\n      })\r\n    } catch (reportingError) {\r\n      logger.error(LogLevel.ERROR, 'Failed to report error manually', {\r\n        originalError: error instanceof Error ? error.message : error,\r\n        reportingError: reportingError instanceof Error ? reportingError.message : 'Unknown error'\r\n      }, LogCategory.SYSTEM)\r\n    }\r\n  }, [isInitialized])\r\n\r\n  return { reportError, isInitialized }\r\n}\r\n\r\n/**\r\n * Hook para obtener estadísticas de monitoreo\r\n */\r\nexport function useMonitoringStats() {\r\n  const { isInitialized } = useMonitoring()\r\n  const [stats, setStats] = useState<any>(null)\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const refreshStats = React.useCallback(async () => {\r\n    if (!isInitialized) {return}\r\n\r\n    try {\r\n      setLoading(true)\r\n      const newStats = await proactiveMonitoring.getMonitoringStats()\r\n      setStats(newStats)\r\n    } catch (error) {\r\n      logger.error(LogLevel.ERROR, 'Failed to fetch monitoring stats', {\r\n        error: error instanceof Error ? error.message : 'Unknown error'\r\n      }, LogCategory.SYSTEM)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }, [isInitialized])\r\n\r\n  React.useEffect(() => {\r\n    if (isInitialized) {\r\n      refreshStats()\r\n      \r\n      // Actualizar estadísticas cada 30 segundos\r\n      const interval = setInterval(refreshStats, 30000)\r\n      return () => clearInterval(interval)\r\n    }\r\n  }, [isInitialized, refreshStats])\r\n\r\n  return { stats, loading, refreshStats }\r\n}\r\n\r\n/**\r\n * Componente de estado del monitoreo (para debugging)\r\n */\r\nexport function MonitoringStatus() {\r\n  const { isInitialized, isMonitoring, error } = useMonitoring()\r\n\r\n  if (process.env.NODE_ENV !== 'development') {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"fixed bottom-4 right-4 z-50 bg-black text-white text-xs p-2 rounded shadow-lg\">\r\n      <div>Monitoring: {isInitialized ? '✅' : '❌'}</div>\r\n      <div>Active: {isMonitoring ? '✅' : '❌'}</div>\r\n      {error && <div className=\"text-red-300\">Error: {error instanceof Error ? error.message : error?.toString() || 'Error desconocido'}</div>}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}