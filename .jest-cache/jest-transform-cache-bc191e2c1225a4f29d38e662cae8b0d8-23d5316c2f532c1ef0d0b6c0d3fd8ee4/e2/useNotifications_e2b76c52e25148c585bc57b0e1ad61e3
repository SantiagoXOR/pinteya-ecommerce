d72b14d7aa775a3f5c55e8da5d201c58
'use client';
"use strict";

/* istanbul ignore next */
function cov_zr5ikw6jn() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useNotifications.ts";
  var hash = "988b90c846f43c938d130040e810307e01b0773f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useNotifications.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 32
        }
      },
      "3": {
        start: {
          line: 12,
          column: 15
        },
        end: {
          line: 12,
          column: 31
        }
      },
      "4": {
        start: {
          line: 13,
          column: 16
        },
        end: {
          line: 13,
          column: 33
        }
      },
      "5": {
        start: {
          line: 16,
          column: 34
        },
        end: {
          line: 34,
          column: 10
        }
      },
      "6": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 33,
          column: 9
        }
      },
      "7": {
        start: {
          line: 18,
          column: 29
        },
        end: {
          line: 24,
          column: 14
        }
      },
      "8": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 27,
          column: 13
        }
      },
      "9": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 74
        }
      },
      "10": {
        start: {
          line: 28,
          column: 27
        },
        end: {
          line: 28,
          column: 48
        }
      },
      "11": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 34
        }
      },
      "12": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 31,
          column: 76
        }
      },
      "13": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 32,
          column: 25
        }
      },
      "14": {
        start: {
          line: 36,
          column: 22
        },
        end: {
          line: 54,
          column: 10
        }
      },
      "15": {
        start: {
          line: 37,
          column: 29
        },
        end: {
          line: 39,
          column: 21
        }
      },
      "16": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 53,
          column: 9
        }
      },
      "17": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 42,
          column: 61
        }
      },
      "18": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 43,
          column: 22
        }
      },
      "19": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 45,
          column: 59
        }
      },
      "20": {
        start: {
          line: 46,
          column: 16
        },
        end: {
          line: 46,
          column: 22
        }
      },
      "21": {
        start: {
          line: 48,
          column: 16
        },
        end: {
          line: 48,
          column: 58
        }
      },
      "22": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 49,
          column: 22
        }
      },
      "23": {
        start: {
          line: 51,
          column: 16
        },
        end: {
          line: 51,
          column: 61
        }
      },
      "24": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 52,
          column: 22
        }
      },
      "25": {
        start: {
          line: 56,
          column: 32
        },
        end: {
          line: 78,
          column: 6
        }
      },
      "26": {
        start: {
          line: 57,
          column: 111
        },
        end: {
          line: 57,
          column: 118
        }
      },
      "27": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 61,
          column: 9
        }
      },
      "28": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 60,
          column: 57
        }
      },
      "29": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 74,
          column: 9
        }
      },
      "30": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 73,
          column: 13
        }
      },
      "31": {
        start: {
          line: 65,
          column: 34
        },
        end: {
          line: 65,
          column: 72
        }
      },
      "32": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 70,
          column: 17
        }
      },
      "33": {
        start: {
          line: 67,
          column: 20
        },
        end: {
          line: 67,
          column: 80
        }
      },
      "34": {
        start: {
          line: 69,
          column: 20
        },
        end: {
          line: 69,
          column: 92
        }
      },
      "35": {
        start: {
          line: 72,
          column: 16
        },
        end: {
          line: 72,
          column: 76
        }
      },
      "36": {
        start: {
          line: 80,
          column: 31
        },
        end: {
          line: 87,
          column: 6
        }
      },
      "37": {
        start: {
          line: 81,
          column: 92
        },
        end: {
          line: 81,
          column: 99
        }
      },
      "38": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 84,
          column: 9
        }
      },
      "39": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 57
        }
      },
      "40": {
        start: {
          line: 89,
          column: 32
        },
        end: {
          line: 96,
          column: 6
        }
      },
      "41": {
        start: {
          line: 90,
          column: 92
        },
        end: {
          line: 90,
          column: 99
        }
      },
      "42": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 93,
          column: 9
        }
      },
      "43": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 57
        }
      },
      "44": {
        start: {
          line: 98,
          column: 32
        },
        end: {
          line: 120,
          column: 6
        }
      },
      "45": {
        start: {
          line: 99,
          column: 117
        },
        end: {
          line: 99,
          column: 124
        }
      },
      "46": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 103,
          column: 9
        }
      },
      "47": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 57
        }
      },
      "48": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 116,
          column: 9
        }
      },
      "49": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 115,
          column: 13
        }
      },
      "50": {
        start: {
          line: 107,
          column: 34
        },
        end: {
          line: 107,
          column: 72
        }
      },
      "51": {
        start: {
          line: 108,
          column: 16
        },
        end: {
          line: 112,
          column: 17
        }
      },
      "52": {
        start: {
          line: 109,
          column: 20
        },
        end: {
          line: 109,
          column: 63
        }
      },
      "53": {
        start: {
          line: 111,
          column: 20
        },
        end: {
          line: 111,
          column: 75
        }
      },
      "54": {
        start: {
          line: 114,
          column: 16
        },
        end: {
          line: 114,
          column: 78
        }
      },
      "55": {
        start: {
          line: 121,
          column: 4
        },
        end: {
          line: 127,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "useNotifications",
        decl: {
          start: {
            line: 14,
            column: 9
          },
          end: {
            line: 14,
            column: 25
          }
        },
        loc: {
          start: {
            line: 14,
            column: 28
          },
          end: {
            line: 128,
            column: 1
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 58
          },
          end: {
            line: 16,
            column: 59
          }
        },
        loc: {
          start: {
            line: 16,
            column: 72
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 36,
            column: 46
          },
          end: {
            line: 36,
            column: 47
          }
        },
        loc: {
          start: {
            line: 36,
            column: 85
          },
          end: {
            line: 54,
            column: 5
          }
        },
        line: 36
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 56,
            column: 56
          },
          end: {
            line: 56,
            column: 57
          }
        },
        loc: {
          start: {
            line: 56,
            column: 98
          },
          end: {
            line: 75,
            column: 5
          }
        },
        line: 56
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 80,
            column: 55
          },
          end: {
            line: 80,
            column: 56
          }
        },
        loc: {
          start: {
            line: 80,
            column: 86
          },
          end: {
            line: 85,
            column: 5
          }
        },
        line: 80
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 89,
            column: 56
          },
          end: {
            line: 89,
            column: 57
          }
        },
        loc: {
          start: {
            line: 89,
            column: 87
          },
          end: {
            line: 94,
            column: 5
          }
        },
        line: 89
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 98,
            column: 56
          },
          end: {
            line: 98,
            column: 57
          }
        },
        loc: {
          start: {
            line: 98,
            column: 98
          },
          end: {
            line: 117,
            column: 5
          }
        },
        line: 98
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 25,
            column: 12
          },
          end: {
            line: 27,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 12
          },
          end: {
            line: 27,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "1": {
        loc: {
          start: {
            line: 36,
            column: 56
          },
          end: {
            line: 36,
            column: 72
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 36,
            column: 63
          },
          end: {
            line: 36,
            column: 72
          }
        }],
        line: 36
      },
      "2": {
        loc: {
          start: {
            line: 37,
            column: 29
          },
          end: {
            line: 39,
            column: 21
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 37,
            column: 40
          },
          end: {
            line: 39,
            column: 9
          }
        }, {
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 39,
            column: 21
          }
        }],
        line: 37
      },
      "3": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 43,
            column: 22
          }
        }, {
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 46,
            column: 22
          }
        }, {
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 49,
            column: 22
          }
        }, {
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 52,
            column: 22
          }
        }],
        line: 40
      },
      "4": {
        loc: {
          start: {
            line: 56,
            column: 83
          },
          end: {
            line: 56,
            column: 95
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 56,
            column: 93
          },
          end: {
            line: 56,
            column: 95
          }
        }],
        line: 56
      },
      "5": {
        loc: {
          start: {
            line: 57,
            column: 27
          },
          end: {
            line: 57,
            column: 49
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 57,
            column: 45
          },
          end: {
            line: 57,
            column: 49
          }
        }],
        line: 57
      },
      "6": {
        loc: {
          start: {
            line: 57,
            column: 51
          },
          end: {
            line: 57,
            column: 68
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 57,
            column: 63
          },
          end: {
            line: 57,
            column: 68
          }
        }],
        line: 57
      },
      "7": {
        loc: {
          start: {
            line: 57,
            column: 70
          },
          end: {
            line: 57,
            column: 91
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 57,
            column: 82
          },
          end: {
            line: 57,
            column: 91
          }
        }],
        line: 57
      },
      "8": {
        loc: {
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 61,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 61,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "9": {
        loc: {
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 74,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 74,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "10": {
        loc: {
          start: {
            line: 63,
            column: 12
          },
          end: {
            line: 63,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 12
          },
          end: {
            line: 63,
            column: 21
          }
        }, {
          start: {
            line: 63,
            column: 25
          },
          end: {
            line: 63,
            column: 34
          }
        }],
        line: 63
      },
      "11": {
        loc: {
          start: {
            line: 66,
            column: 16
          },
          end: {
            line: 70,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 16
          },
          end: {
            line: 70,
            column: 17
          }
        }, {
          start: {
            line: 68,
            column: 23
          },
          end: {
            line: 70,
            column: 17
          }
        }],
        line: 66
      },
      "12": {
        loc: {
          start: {
            line: 80,
            column: 71
          },
          end: {
            line: 80,
            column: 83
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 80,
            column: 81
          },
          end: {
            line: 80,
            column: 83
          }
        }],
        line: 80
      },
      "13": {
        loc: {
          start: {
            line: 81,
            column: 27
          },
          end: {
            line: 81,
            column: 49
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 81,
            column: 45
          },
          end: {
            line: 81,
            column: 49
          }
        }],
        line: 81
      },
      "14": {
        loc: {
          start: {
            line: 81,
            column: 51
          },
          end: {
            line: 81,
            column: 72
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 81,
            column: 63
          },
          end: {
            line: 81,
            column: 72
          }
        }],
        line: 81
      },
      "15": {
        loc: {
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "16": {
        loc: {
          start: {
            line: 89,
            column: 72
          },
          end: {
            line: 89,
            column: 84
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 89,
            column: 82
          },
          end: {
            line: 89,
            column: 84
          }
        }],
        line: 89
      },
      "17": {
        loc: {
          start: {
            line: 90,
            column: 27
          },
          end: {
            line: 90,
            column: 49
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 90,
            column: 45
          },
          end: {
            line: 90,
            column: 49
          }
        }],
        line: 90
      },
      "18": {
        loc: {
          start: {
            line: 90,
            column: 51
          },
          end: {
            line: 90,
            column: 72
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 90,
            column: 63
          },
          end: {
            line: 90,
            column: 72
          }
        }],
        line: 90
      },
      "19": {
        loc: {
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 93,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 93,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 91
      },
      "20": {
        loc: {
          start: {
            line: 98,
            column: 83
          },
          end: {
            line: 98,
            column: 95
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 98,
            column: 93
          },
          end: {
            line: 98,
            column: 95
          }
        }],
        line: 98
      },
      "21": {
        loc: {
          start: {
            line: 99,
            column: 27
          },
          end: {
            line: 99,
            column: 49
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 99,
            column: 45
          },
          end: {
            line: 99,
            column: 49
          }
        }],
        line: 99
      },
      "22": {
        loc: {
          start: {
            line: 99,
            column: 51
          },
          end: {
            line: 99,
            column: 67
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 99,
            column: 63
          },
          end: {
            line: 99,
            column: 67
          }
        }],
        line: 99
      },
      "23": {
        loc: {
          start: {
            line: 99,
            column: 69
          },
          end: {
            line: 99,
            column: 90
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 99,
            column: 81
          },
          end: {
            line: 99,
            column: 90
          }
        }],
        line: 99
      },
      "24": {
        loc: {
          start: {
            line: 99,
            column: 92
          },
          end: {
            line: 99,
            column: 112
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 99,
            column: 108
          },
          end: {
            line: 99,
            column: 112
          }
        }],
        line: 99
      },
      "25": {
        loc: {
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 103,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 103,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 101
      },
      "26": {
        loc: {
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 116,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 116,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 105
      },
      "27": {
        loc: {
          start: {
            line: 105,
            column: 12
          },
          end: {
            line: 105,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 105,
            column: 12
          },
          end: {
            line: 105,
            column: 21
          }
        }, {
          start: {
            line: 105,
            column: 25
          },
          end: {
            line: 105,
            column: 34
          }
        }],
        line: 105
      },
      "28": {
        loc: {
          start: {
            line: 108,
            column: 16
          },
          end: {
            line: 112,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 108,
            column: 16
          },
          end: {
            line: 112,
            column: 17
          }
        }, {
          start: {
            line: 110,
            column: 23
          },
          end: {
            line: 112,
            column: 17
          }
        }],
        line: 108
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0, 0, 0],
      "4": [0],
      "5": [0],
      "6": [0],
      "7": [0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0],
      "13": [0],
      "14": [0],
      "15": [0, 0],
      "16": [0],
      "17": [0],
      "18": [0],
      "19": [0, 0],
      "20": [0],
      "21": [0],
      "22": [0],
      "23": [0],
      "24": [0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useNotifications.ts"],
      sourcesContent: ["'use client';\r\n\r\nimport { useCallback } from 'react';\r\nimport { toast } from 'sonner';\r\nimport { EmailNotificationType } from '@/app/api/user/notifications/email/route';\r\n\r\ninterface NotificationOptions {\r\n  showToast?: boolean;\r\n  sendEmail?: boolean;\r\n  toastType?: 'success' | 'error' | 'info' | 'warning';\r\n  toastDuration?: number;\r\n}\r\n\r\ninterface EmailNotificationData {\r\n  type: EmailNotificationType;\r\n  oldValue?: string;\r\n  newValue?: string;\r\n  metadata?: Record<string, any>;\r\n}\r\n\r\ninterface UseNotificationsReturn {\r\n  notifyProfileChange: (\r\n    message: string,\r\n    emailData?: EmailNotificationData,\r\n    options?: NotificationOptions\r\n  ) => Promise<void>;\r\n  notifyAvatarChange: (\r\n    message: string,\r\n    options?: NotificationOptions\r\n  ) => Promise<void>;\r\n  notifyAddressChange: (\r\n    message: string,\r\n    options?: NotificationOptions\r\n  ) => Promise<void>;\r\n  notifySecurityAlert: (\r\n    message: string,\r\n    emailData?: EmailNotificationData,\r\n    options?: NotificationOptions\r\n  ) => Promise<void>;\r\n  sendEmailNotification: (data: EmailNotificationData) => Promise<boolean>;\r\n}\r\n\r\nexport function useNotifications(): UseNotificationsReturn {\r\n  \r\n  // Funci\xF3n para enviar notificaci\xF3n por email\r\n  const sendEmailNotification = useCallback(async (data: EmailNotificationData): Promise<boolean> => {\r\n    try {\r\n      const response = await fetch('/api/user/notifications/email', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error al enviar notificaci\xF3n por email');\r\n      }\r\n\r\n      const result = await response.json();\r\n      return result.success;\r\n    } catch (error) {\r\n      console.error('Error al enviar notificaci\xF3n por email:', error);\r\n      return false;\r\n    }\r\n  }, []);\r\n\r\n  // Funci\xF3n para mostrar toast notification\r\n  const showToast = useCallback((\r\n    message: string,\r\n    type: 'success' | 'error' | 'info' | 'warning' = 'success',\r\n    duration?: number\r\n  ) => {\r\n    const toastOptions = duration ? { duration } : undefined;\r\n    \r\n    switch (type) {\r\n      case 'success':\r\n        toast.success(message, toastOptions);\r\n        break;\r\n      case 'error':\r\n        toast.error(message, toastOptions);\r\n        break;\r\n      case 'info':\r\n        toast.info(message, toastOptions);\r\n        break;\r\n      case 'warning':\r\n        toast.warning(message, toastOptions);\r\n        break;\r\n    }\r\n  }, []);\r\n\r\n  // Notificar cambios de perfil\r\n  const notifyProfileChange = useCallback(async (\r\n    message: string,\r\n    emailData?: EmailNotificationData,\r\n    options: NotificationOptions = {}\r\n  ) => {\r\n    const {\r\n      showToast: shouldShowToast = true,\r\n      sendEmail = false,\r\n      toastType = 'success',\r\n      toastDuration,\r\n    } = options;\r\n\r\n    // Mostrar toast notification\r\n    if (shouldShowToast) {\r\n      showToast(message, toastType, toastDuration);\r\n    }\r\n\r\n    // Enviar notificaci\xF3n por email si es necesario\r\n    if (sendEmail && emailData) {\r\n      try {\r\n        const emailSent = await sendEmailNotification(emailData);\r\n        if (emailSent) {\r\n          console.log('\u2705 Email notification sent for profile change');\r\n        } else {\r\n          console.warn('\u26A0\uFE0F Failed to send email notification for profile change');\r\n        }\r\n      } catch (error) {\r\n        console.error('\u274C Error sending email notification:', error);\r\n      }\r\n    }\r\n  }, [showToast, sendEmailNotification]);\r\n\r\n  // Notificar cambios de avatar\r\n  const notifyAvatarChange = useCallback(async (\r\n    message: string,\r\n    options: NotificationOptions = {}\r\n  ) => {\r\n    const {\r\n      showToast: shouldShowToast = true,\r\n      toastType = 'success',\r\n      toastDuration,\r\n    } = options;\r\n\r\n    if (shouldShowToast) {\r\n      showToast(message, toastType, toastDuration);\r\n    }\r\n  }, [showToast]);\r\n\r\n  // Notificar cambios de direcciones\r\n  const notifyAddressChange = useCallback(async (\r\n    message: string,\r\n    options: NotificationOptions = {}\r\n  ) => {\r\n    const {\r\n      showToast: shouldShowToast = true,\r\n      toastType = 'success',\r\n      toastDuration,\r\n    } = options;\r\n\r\n    if (shouldShowToast) {\r\n      showToast(message, toastType, toastDuration);\r\n    }\r\n  }, [showToast]);\r\n\r\n  // Notificar alertas de seguridad\r\n  const notifySecurityAlert = useCallback(async (\r\n    message: string,\r\n    emailData?: EmailNotificationData,\r\n    options: NotificationOptions = {}\r\n  ) => {\r\n    const {\r\n      showToast: shouldShowToast = true,\r\n      sendEmail = true, // Por defecto enviar email para alertas de seguridad\r\n      toastType = 'warning',\r\n      toastDuration = 8000, // Duraci\xF3n m\xE1s larga para alertas\r\n    } = options;\r\n\r\n    // Mostrar toast notification\r\n    if (shouldShowToast) {\r\n      showToast(message, toastType, toastDuration);\r\n    }\r\n\r\n    // Enviar notificaci\xF3n por email\r\n    if (sendEmail && emailData) {\r\n      try {\r\n        const emailSent = await sendEmailNotification(emailData);\r\n        if (emailSent) {\r\n          console.log('\u2705 Security alert email sent');\r\n        } else {\r\n          console.warn('\u26A0\uFE0F Failed to send security alert email');\r\n        }\r\n      } catch (error) {\r\n        console.error('\u274C Error sending security alert email:', error);\r\n      }\r\n    }\r\n  }, [showToast, sendEmailNotification]);\r\n\r\n  return {\r\n    notifyProfileChange,\r\n    notifyAvatarChange,\r\n    notifyAddressChange,\r\n    notifySecurityAlert,\r\n    sendEmailNotification,\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["useNotifications", "sendEmailNotification", "useCallback", "data", "response", "fetch", "method", "headers", "body", "JSON", "stringify", "ok", "Error", "result", "json", "success", "error", "console", "showToast", "message", "type", "duration", "toastOptions", "undefined", "toast", "info", "warning", "notifyProfileChange", "emailData", "options", "shouldShowToast", "sendEmail", "toastType", "toastDuration", "emailSent", "log", "warn", "notifyAvatarChange", "notifyAddressChange", "notifySecurityAlert"],
      mappings: "AAAA;;;;;+BA0CgBA;;;eAAAA;;;uBAxCY;wBACN;AAuCf,SAASA;IAEd,6CAA6C;IAC7C,MAAMC,wBAAwBC,IAAAA,kBAAW,EAAC,OAAOC;QAC/C,IAAI;YACF,MAAMC,WAAW,MAAMC,MAAM,iCAAiC;gBAC5DC,QAAQ;gBACRC,SAAS;oBACP,gBAAgB;gBAClB;gBACAC,MAAMC,KAAKC,SAAS,CAACP;YACvB;YAEA,IAAI,CAACC,SAASO,EAAE,EAAE;gBAChB,MAAM,IAAIC,MAAM;YAClB;YAEA,MAAMC,SAAS,MAAMT,SAASU,IAAI;YAClC,OAAOD,OAAOE,OAAO;QACvB,EAAE,OAAOC,OAAO;YACdC,QAAQD,KAAK,CAAC,2CAA2CA;YACzD,OAAO;QACT;IACF,GAAG,EAAE;IAEL,0CAA0C;IAC1C,MAAME,YAAYhB,IAAAA,kBAAW,EAAC,CAC5BiB,SACAC,OAAiD,SAAS,EAC1DC;QAEA,MAAMC,eAAeD,WAAW;YAAEA;QAAS,IAAIE;QAE/C,OAAQH;YACN,KAAK;gBACHI,aAAK,CAACT,OAAO,CAACI,SAASG;gBACvB;YACF,KAAK;gBACHE,aAAK,CAACR,KAAK,CAACG,SAASG;gBACrB;YACF,KAAK;gBACHE,aAAK,CAACC,IAAI,CAACN,SAASG;gBACpB;YACF,KAAK;gBACHE,aAAK,CAACE,OAAO,CAACP,SAASG;gBACvB;QACJ;IACF,GAAG,EAAE;IAEL,8BAA8B;IAC9B,MAAMK,sBAAsBzB,IAAAA,kBAAW,EAAC,OACtCiB,SACAS,WACAC,UAA+B,CAAC,CAAC;QAEjC,MAAM,EACJX,WAAWY,kBAAkB,IAAI,EACjCC,YAAY,KAAK,EACjBC,YAAY,SAAS,EACrBC,aAAa,EACd,GAAGJ;QAEJ,6BAA6B;QAC7B,IAAIC,iBAAiB;YACnBZ,UAAUC,SAASa,WAAWC;QAChC;QAEA,gDAAgD;QAChD,IAAIF,aAAaH,WAAW;YAC1B,IAAI;gBACF,MAAMM,YAAY,MAAMjC,sBAAsB2B;gBAC9C,IAAIM,WAAW;oBACbjB,QAAQkB,GAAG,CAAC;gBACd,OAAO;oBACLlB,QAAQmB,IAAI,CAAC;gBACf;YACF,EAAE,OAAOpB,OAAO;gBACdC,QAAQD,KAAK,CAAC,uCAAuCA;YACvD;QACF;IACF,GAAG;QAACE;QAAWjB;KAAsB;IAErC,8BAA8B;IAC9B,MAAMoC,qBAAqBnC,IAAAA,kBAAW,EAAC,OACrCiB,SACAU,UAA+B,CAAC,CAAC;QAEjC,MAAM,EACJX,WAAWY,kBAAkB,IAAI,EACjCE,YAAY,SAAS,EACrBC,aAAa,EACd,GAAGJ;QAEJ,IAAIC,iBAAiB;YACnBZ,UAAUC,SAASa,WAAWC;QAChC;IACF,GAAG;QAACf;KAAU;IAEd,mCAAmC;IACnC,MAAMoB,sBAAsBpC,IAAAA,kBAAW,EAAC,OACtCiB,SACAU,UAA+B,CAAC,CAAC;QAEjC,MAAM,EACJX,WAAWY,kBAAkB,IAAI,EACjCE,YAAY,SAAS,EACrBC,aAAa,EACd,GAAGJ;QAEJ,IAAIC,iBAAiB;YACnBZ,UAAUC,SAASa,WAAWC;QAChC;IACF,GAAG;QAACf;KAAU;IAEd,iCAAiC;IACjC,MAAMqB,sBAAsBrC,IAAAA,kBAAW,EAAC,OACtCiB,SACAS,WACAC,UAA+B,CAAC,CAAC;QAEjC,MAAM,EACJX,WAAWY,kBAAkB,IAAI,EACjCC,YAAY,IAAI,EAChBC,YAAY,SAAS,EACrBC,gBAAgB,IAAI,EACrB,GAAGJ;QAEJ,6BAA6B;QAC7B,IAAIC,iBAAiB;YACnBZ,UAAUC,SAASa,WAAWC;QAChC;QAEA,gCAAgC;QAChC,IAAIF,aAAaH,WAAW;YAC1B,IAAI;gBACF,MAAMM,YAAY,MAAMjC,sBAAsB2B;gBAC9C,IAAIM,WAAW;oBACbjB,QAAQkB,GAAG,CAAC;gBACd,OAAO;oBACLlB,QAAQmB,IAAI,CAAC;gBACf;YACF,EAAE,OAAOpB,OAAO;gBACdC,QAAQD,KAAK,CAAC,yCAAyCA;YACzD;QACF;IACF,GAAG;QAACE;QAAWjB;KAAsB;IAErC,OAAO;QACL0B;QACAU;QACAC;QACAC;QACAtC;IACF;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "988b90c846f43c938d130040e810307e01b0773f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_zr5ikw6jn = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_zr5ikw6jn();
cov_zr5ikw6jn().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_zr5ikw6jn().s[1]++;
Object.defineProperty(exports, "useNotifications", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_zr5ikw6jn().f[0]++;
    cov_zr5ikw6jn().s[2]++;
    return useNotifications;
  }
});
const _react =
/* istanbul ignore next */
(cov_zr5ikw6jn().s[3]++, require("react"));
const _sonner =
/* istanbul ignore next */
(cov_zr5ikw6jn().s[4]++, require("sonner"));
function useNotifications() {
  /* istanbul ignore next */
  cov_zr5ikw6jn().f[1]++;
  // Función para enviar notificación por email
  const sendEmailNotification =
  /* istanbul ignore next */
  (cov_zr5ikw6jn().s[5]++, (0, _react.useCallback)(async data => {
    /* istanbul ignore next */
    cov_zr5ikw6jn().f[2]++;
    cov_zr5ikw6jn().s[6]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_zr5ikw6jn().s[7]++, await fetch('/api/user/notifications/email', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
      }));
      /* istanbul ignore next */
      cov_zr5ikw6jn().s[8]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_zr5ikw6jn().b[0][0]++;
        cov_zr5ikw6jn().s[9]++;
        throw new Error('Error al enviar notificación por email');
      } else
      /* istanbul ignore next */
      {
        cov_zr5ikw6jn().b[0][1]++;
      }
      const result =
      /* istanbul ignore next */
      (cov_zr5ikw6jn().s[10]++, await response.json());
      /* istanbul ignore next */
      cov_zr5ikw6jn().s[11]++;
      return result.success;
    } catch (error) {
      /* istanbul ignore next */
      cov_zr5ikw6jn().s[12]++;
      console.error('Error al enviar notificación por email:', error);
      /* istanbul ignore next */
      cov_zr5ikw6jn().s[13]++;
      return false;
    }
  }, []));
  // Función para mostrar toast notification
  const showToast =
  /* istanbul ignore next */
  (cov_zr5ikw6jn().s[14]++, (0, _react.useCallback)((message, type =
  /* istanbul ignore next */
  (cov_zr5ikw6jn().b[1][0]++, 'success'), duration) => {
    /* istanbul ignore next */
    cov_zr5ikw6jn().f[3]++;
    const toastOptions =
    /* istanbul ignore next */
    (cov_zr5ikw6jn().s[15]++, duration ?
    /* istanbul ignore next */
    (cov_zr5ikw6jn().b[2][0]++, {
      duration
    }) :
    /* istanbul ignore next */
    (cov_zr5ikw6jn().b[2][1]++, undefined));
    /* istanbul ignore next */
    cov_zr5ikw6jn().s[16]++;
    switch (type) {
      case 'success':
        /* istanbul ignore next */
        cov_zr5ikw6jn().b[3][0]++;
        cov_zr5ikw6jn().s[17]++;
        _sonner.toast.success(message, toastOptions);
        /* istanbul ignore next */
        cov_zr5ikw6jn().s[18]++;
        break;
      case 'error':
        /* istanbul ignore next */
        cov_zr5ikw6jn().b[3][1]++;
        cov_zr5ikw6jn().s[19]++;
        _sonner.toast.error(message, toastOptions);
        /* istanbul ignore next */
        cov_zr5ikw6jn().s[20]++;
        break;
      case 'info':
        /* istanbul ignore next */
        cov_zr5ikw6jn().b[3][2]++;
        cov_zr5ikw6jn().s[21]++;
        _sonner.toast.info(message, toastOptions);
        /* istanbul ignore next */
        cov_zr5ikw6jn().s[22]++;
        break;
      case 'warning':
        /* istanbul ignore next */
        cov_zr5ikw6jn().b[3][3]++;
        cov_zr5ikw6jn().s[23]++;
        _sonner.toast.warning(message, toastOptions);
        /* istanbul ignore next */
        cov_zr5ikw6jn().s[24]++;
        break;
    }
  }, []));
  // Notificar cambios de perfil
  const notifyProfileChange =
  /* istanbul ignore next */
  (cov_zr5ikw6jn().s[25]++, (0, _react.useCallback)(async (message, emailData, options =
  /* istanbul ignore next */
  (cov_zr5ikw6jn().b[4][0]++, {})) => {
    /* istanbul ignore next */
    cov_zr5ikw6jn().f[4]++;
    const {
      showToast: shouldShowToast =
      /* istanbul ignore next */
      (cov_zr5ikw6jn().b[5][0]++, true),
      sendEmail =
      /* istanbul ignore next */
      (cov_zr5ikw6jn().b[6][0]++, false),
      toastType =
      /* istanbul ignore next */
      (cov_zr5ikw6jn().b[7][0]++, 'success'),
      toastDuration
    } =
    /* istanbul ignore next */
    (cov_zr5ikw6jn().s[26]++, options);
    // Mostrar toast notification
    /* istanbul ignore next */
    cov_zr5ikw6jn().s[27]++;
    if (shouldShowToast) {
      /* istanbul ignore next */
      cov_zr5ikw6jn().b[8][0]++;
      cov_zr5ikw6jn().s[28]++;
      showToast(message, toastType, toastDuration);
    } else
    /* istanbul ignore next */
    {
      cov_zr5ikw6jn().b[8][1]++;
    }
    // Enviar notificación por email si es necesario
    cov_zr5ikw6jn().s[29]++;
    if (
    /* istanbul ignore next */
    (cov_zr5ikw6jn().b[10][0]++, sendEmail) &&
    /* istanbul ignore next */
    (cov_zr5ikw6jn().b[10][1]++, emailData)) {
      /* istanbul ignore next */
      cov_zr5ikw6jn().b[9][0]++;
      cov_zr5ikw6jn().s[30]++;
      try {
        const emailSent =
        /* istanbul ignore next */
        (cov_zr5ikw6jn().s[31]++, await sendEmailNotification(emailData));
        /* istanbul ignore next */
        cov_zr5ikw6jn().s[32]++;
        if (emailSent) {
          /* istanbul ignore next */
          cov_zr5ikw6jn().b[11][0]++;
          cov_zr5ikw6jn().s[33]++;
          console.log('✅ Email notification sent for profile change');
        } else {
          /* istanbul ignore next */
          cov_zr5ikw6jn().b[11][1]++;
          cov_zr5ikw6jn().s[34]++;
          console.warn('⚠️ Failed to send email notification for profile change');
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_zr5ikw6jn().s[35]++;
        console.error('❌ Error sending email notification:', error);
      }
    } else
    /* istanbul ignore next */
    {
      cov_zr5ikw6jn().b[9][1]++;
    }
  }, [showToast, sendEmailNotification]));
  // Notificar cambios de avatar
  const notifyAvatarChange =
  /* istanbul ignore next */
  (cov_zr5ikw6jn().s[36]++, (0, _react.useCallback)(async (message, options =
  /* istanbul ignore next */
  (cov_zr5ikw6jn().b[12][0]++, {})) => {
    /* istanbul ignore next */
    cov_zr5ikw6jn().f[5]++;
    const {
      showToast: shouldShowToast =
      /* istanbul ignore next */
      (cov_zr5ikw6jn().b[13][0]++, true),
      toastType =
      /* istanbul ignore next */
      (cov_zr5ikw6jn().b[14][0]++, 'success'),
      toastDuration
    } =
    /* istanbul ignore next */
    (cov_zr5ikw6jn().s[37]++, options);
    /* istanbul ignore next */
    cov_zr5ikw6jn().s[38]++;
    if (shouldShowToast) {
      /* istanbul ignore next */
      cov_zr5ikw6jn().b[15][0]++;
      cov_zr5ikw6jn().s[39]++;
      showToast(message, toastType, toastDuration);
    } else
    /* istanbul ignore next */
    {
      cov_zr5ikw6jn().b[15][1]++;
    }
  }, [showToast]));
  // Notificar cambios de direcciones
  const notifyAddressChange =
  /* istanbul ignore next */
  (cov_zr5ikw6jn().s[40]++, (0, _react.useCallback)(async (message, options =
  /* istanbul ignore next */
  (cov_zr5ikw6jn().b[16][0]++, {})) => {
    /* istanbul ignore next */
    cov_zr5ikw6jn().f[6]++;
    const {
      showToast: shouldShowToast =
      /* istanbul ignore next */
      (cov_zr5ikw6jn().b[17][0]++, true),
      toastType =
      /* istanbul ignore next */
      (cov_zr5ikw6jn().b[18][0]++, 'success'),
      toastDuration
    } =
    /* istanbul ignore next */
    (cov_zr5ikw6jn().s[41]++, options);
    /* istanbul ignore next */
    cov_zr5ikw6jn().s[42]++;
    if (shouldShowToast) {
      /* istanbul ignore next */
      cov_zr5ikw6jn().b[19][0]++;
      cov_zr5ikw6jn().s[43]++;
      showToast(message, toastType, toastDuration);
    } else
    /* istanbul ignore next */
    {
      cov_zr5ikw6jn().b[19][1]++;
    }
  }, [showToast]));
  // Notificar alertas de seguridad
  const notifySecurityAlert =
  /* istanbul ignore next */
  (cov_zr5ikw6jn().s[44]++, (0, _react.useCallback)(async (message, emailData, options =
  /* istanbul ignore next */
  (cov_zr5ikw6jn().b[20][0]++, {})) => {
    /* istanbul ignore next */
    cov_zr5ikw6jn().f[7]++;
    const {
      showToast: shouldShowToast =
      /* istanbul ignore next */
      (cov_zr5ikw6jn().b[21][0]++, true),
      sendEmail =
      /* istanbul ignore next */
      (cov_zr5ikw6jn().b[22][0]++, true),
      toastType =
      /* istanbul ignore next */
      (cov_zr5ikw6jn().b[23][0]++, 'warning'),
      toastDuration =
      /* istanbul ignore next */
      (cov_zr5ikw6jn().b[24][0]++, 8000)
    } =
    /* istanbul ignore next */
    (cov_zr5ikw6jn().s[45]++, options);
    // Mostrar toast notification
    /* istanbul ignore next */
    cov_zr5ikw6jn().s[46]++;
    if (shouldShowToast) {
      /* istanbul ignore next */
      cov_zr5ikw6jn().b[25][0]++;
      cov_zr5ikw6jn().s[47]++;
      showToast(message, toastType, toastDuration);
    } else
    /* istanbul ignore next */
    {
      cov_zr5ikw6jn().b[25][1]++;
    }
    // Enviar notificación por email
    cov_zr5ikw6jn().s[48]++;
    if (
    /* istanbul ignore next */
    (cov_zr5ikw6jn().b[27][0]++, sendEmail) &&
    /* istanbul ignore next */
    (cov_zr5ikw6jn().b[27][1]++, emailData)) {
      /* istanbul ignore next */
      cov_zr5ikw6jn().b[26][0]++;
      cov_zr5ikw6jn().s[49]++;
      try {
        const emailSent =
        /* istanbul ignore next */
        (cov_zr5ikw6jn().s[50]++, await sendEmailNotification(emailData));
        /* istanbul ignore next */
        cov_zr5ikw6jn().s[51]++;
        if (emailSent) {
          /* istanbul ignore next */
          cov_zr5ikw6jn().b[28][0]++;
          cov_zr5ikw6jn().s[52]++;
          console.log('✅ Security alert email sent');
        } else {
          /* istanbul ignore next */
          cov_zr5ikw6jn().b[28][1]++;
          cov_zr5ikw6jn().s[53]++;
          console.warn('⚠️ Failed to send security alert email');
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_zr5ikw6jn().s[54]++;
        console.error('❌ Error sending security alert email:', error);
      }
    } else
    /* istanbul ignore next */
    {
      cov_zr5ikw6jn().b[26][1]++;
    }
  }, [showToast, sendEmailNotification]));
  /* istanbul ignore next */
  cov_zr5ikw6jn().s[55]++;
  return {
    notifyProfileChange,
    notifyAvatarChange,
    notifyAddressChange,
    notifySecurityAlert,
    sendEmailNotification
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,