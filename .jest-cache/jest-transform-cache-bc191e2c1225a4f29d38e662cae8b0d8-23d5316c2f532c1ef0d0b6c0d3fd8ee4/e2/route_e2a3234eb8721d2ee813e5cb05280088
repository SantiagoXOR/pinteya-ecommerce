507269814092e84ca596dea58f67d9fb
"use strict";

/* istanbul ignore next */
function cov_v4hp14clq() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\products\\[id]\\route.ts";
  var hash = "daf24cfb53dea704bf32488acd36514fd5c38137";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\products\\[id]\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 21,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 22
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 19
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 19
        }
      },
      "7": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 38
        }
      },
      "8": {
        start: {
          line: 23,
          column: 19
        },
        end: {
          line: 23,
          column: 64
        }
      },
      "9": {
        start: {
          line: 24,
          column: 13
        },
        end: {
          line: 24,
          column: 27
        }
      },
      "10": {
        start: {
          line: 25,
          column: 22
        },
        end: {
          line: 25,
          column: 69
        }
      },
      "11": {
        start: {
          line: 26,
          column: 19
        },
        end: {
          line: 26,
          column: 63
        }
      },
      "12": {
        start: {
          line: 27,
          column: 27
        },
        end: {
          line: 27,
          column: 81
        }
      },
      "13": {
        start: {
          line: 28,
          column: 22
        },
        end: {
          line: 28,
          column: 76
        }
      },
      "14": {
        start: {
          line: 29,
          column: 28
        },
        end: {
          line: 29,
          column: 81
        }
      },
      "15": {
        start: {
          line: 31,
          column: 28
        },
        end: {
          line: 53,
          column: 2
        }
      },
      "16": {
        start: {
          line: 54,
          column: 28
        },
        end: {
          line: 56,
          column: 2
        }
      },
      "17": {
        start: {
          line: 59,
          column: 37
        },
        end: {
          line: 81,
          column: 35
        }
      },
      "18": {
        start: {
          line: 82,
          column: 4
        },
        end: {
          line: 84,
          column: 5
        }
      },
      "19": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 83,
          column: 58
        }
      },
      "20": {
        start: {
          line: 86,
          column: 31
        },
        end: {
          line: 90,
          column: 5
        }
      },
      "21": {
        start: {
          line: 91,
          column: 4
        },
        end: {
          line: 91,
          column: 30
        }
      },
      "22": {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 95,
          column: 107
        }
      },
      "23": {
        start: {
          line: 100,
          column: 23
        },
        end: {
          line: 116,
          column: 1
        }
      },
      "24": {
        start: {
          line: 101,
          column: 25
        },
        end: {
          line: 101,
          column: 32
        }
      },
      "25": {
        start: {
          line: 102,
          column: 22
        },
        end: {
          line: 102,
          column: 31
        }
      },
      "26": {
        start: {
          line: 104,
          column: 29
        },
        end: {
          line: 106,
          column: 6
        }
      },
      "27": {
        start: {
          line: 107,
          column: 4
        },
        end: {
          line: 109,
          column: 5
        }
      },
      "28": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 108,
          column: 106
        }
      },
      "29": {
        start: {
          line: 110,
          column: 20
        },
        end: {
          line: 110,
          column: 61
        }
      },
      "30": {
        start: {
          line: 111,
          column: 4
        },
        end: {
          line: 115,
          column: 7
        }
      },
      "31": {
        start: {
          line: 120,
          column: 23
        },
        end: {
          line: 187,
          column: 1
        }
      },
      "32": {
        start: {
          line: 121,
          column: 46
        },
        end: {
          line: 121,
          column: 53
        }
      },
      "33": {
        start: {
          line: 122,
          column: 22
        },
        end: {
          line: 122,
          column: 31
        }
      },
      "34": {
        start: {
          line: 124,
          column: 29
        },
        end: {
          line: 126,
          column: 6
        }
      },
      "35": {
        start: {
          line: 127,
          column: 4
        },
        end: {
          line: 129,
          column: 5
        }
      },
      "36": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 128,
          column: 106
        }
      },
      "37": {
        start: {
          line: 131,
          column: 28
        },
        end: {
          line: 131,
          column: 69
        }
      },
      "38": {
        start: {
          line: 133,
          column: 4
        },
        end: {
          line: 138,
          column: 5
        }
      },
      "39": {
        start: {
          line: 134,
          column: 57
        },
        end: {
          line: 134,
          column: 148
        }
      },
      "40": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 137,
          column: 9
        }
      },
      "41": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 136,
          column: 79
        }
      },
      "42": {
        start: {
          line: 140,
          column: 23
        },
        end: {
          line: 143,
          column: 5
        }
      },
      "43": {
        start: {
          line: 144,
          column: 4
        },
        end: {
          line: 146,
          column: 5
        }
      },
      "44": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 145,
          column: 59
        }
      },
      "45": {
        start: {
          line: 148,
          column: 44
        },
        end: {
          line: 170,
          column: 15
        }
      },
      "46": {
        start: {
          line: 171,
          column: 4
        },
        end: {
          line: 173,
          column: 5
        }
      },
      "47": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 172,
          column: 103
        }
      },
      "48": {
        start: {
          line: 175,
          column: 4
        },
        end: {
          line: 175,
          column: 115
        }
      },
      "49": {
        start: {
          line: 177,
          column: 31
        },
        end: {
          line: 181,
          column: 5
        }
      },
      "50": {
        start: {
          line: 182,
          column: 4
        },
        end: {
          line: 186,
          column: 7
        }
      },
      "51": {
        start: {
          line: 191,
          column: 26
        },
        end: {
          line: 243,
          column: 1
        }
      },
      "52": {
        start: {
          line: 192,
          column: 31
        },
        end: {
          line: 192,
          column: 38
        }
      },
      "53": {
        start: {
          line: 193,
          column: 22
        },
        end: {
          line: 193,
          column: 31
        }
      },
      "54": {
        start: {
          line: 195,
          column: 29
        },
        end: {
          line: 197,
          column: 6
        }
      },
      "55": {
        start: {
          line: 198,
          column: 4
        },
        end: {
          line: 200,
          column: 5
        }
      },
      "56": {
        start: {
          line: 199,
          column: 8
        },
        end: {
          line: 199,
          column: 106
        }
      },
      "57": {
        start: {
          line: 202,
          column: 28
        },
        end: {
          line: 202,
          column: 69
        }
      },
      "58": {
        start: {
          line: 204,
          column: 57
        },
        end: {
          line: 204,
          column: 141
        }
      },
      "59": {
        start: {
          line: 205,
          column: 4
        },
        end: {
          line: 208,
          column: 5
        }
      },
      "60": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 206,
          column: 74
        }
      },
      "61": {
        start: {
          line: 210,
          column: 23
        },
        end: {
          line: 210,
          column: 28
        }
      },
      "62": {
        start: {
          line: 211,
          column: 4
        },
        end: {
          line: 236,
          column: 5
        }
      },
      "63": {
        start: {
          line: 213,
          column: 39
        },
        end: {
          line: 217,
          column: 30
        }
      },
      "64": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 220,
          column: 9
        }
      },
      "65": {
        start: {
          line: 219,
          column: 12
        },
        end: {
          line: 219,
          column: 111
        }
      },
      "66": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 224,
          column: 10
        }
      },
      "67": {
        start: {
          line: 227,
          column: 26
        },
        end: {
          line: 227,
          column: 86
        }
      },
      "68": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 230,
          column: 9
        }
      },
      "69": {
        start: {
          line: 229,
          column: 12
        },
        end: {
          line: 229,
          column: 105
        }
      },
      "70": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 231,
          column: 28
        }
      },
      "71": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 235,
          column: 10
        }
      },
      "72": {
        start: {
          line: 238,
          column: 4
        },
        end: {
          line: 238,
          column: 136
        }
      },
      "73": {
        start: {
          line: 239,
          column: 4
        },
        end: {
          line: 242,
          column: 7
        }
      },
      "74": {
        start: {
          line: 244,
          column: 12
        },
        end: {
          line: 246,
          column: 15
        }
      },
      "75": {
        start: {
          line: 247,
          column: 12
        },
        end: {
          line: 249,
          column: 71
        }
      },
      "76": {
        start: {
          line: 250,
          column: 15
        },
        end: {
          line: 252,
          column: 18
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 18
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 15
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 15
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "getProductById",
        decl: {
          start: {
            line: 58,
            column: 15
          },
          end: {
            line: 58,
            column: 29
          }
        },
        loc: {
          start: {
            line: 58,
            column: 51
          },
          end: {
            line: 92,
            column: 1
          }
        },
        line: 58
      },
      "5": {
        name: "generateSlug",
        decl: {
          start: {
            line: 94,
            column: 9
          },
          end: {
            line: 94,
            column: 21
          }
        },
        loc: {
          start: {
            line: 94,
            column: 28
          },
          end: {
            line: 96,
            column: 1
          }
        },
        line: 94
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 100,
            column: 23
          },
          end: {
            line: 100,
            column: 24
          }
        },
        loc: {
          start: {
            line: 100,
            column: 52
          },
          end: {
            line: 116,
            column: 1
          }
        },
        line: 100
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 120,
            column: 23
          },
          end: {
            line: 120,
            column: 24
          }
        },
        loc: {
          start: {
            line: 120,
            column: 52
          },
          end: {
            line: 187,
            column: 1
          }
        },
        line: 120
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 191,
            column: 26
          },
          end: {
            line: 191,
            column: 27
          }
        },
        loc: {
          start: {
            line: 191,
            column: 55
          },
          end: {
            line: 243,
            column: 1
          }
        },
        line: 191
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 82,
            column: 4
          },
          end: {
            line: 84,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 4
          },
          end: {
            line: 84,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "1": {
        loc: {
          start: {
            line: 88,
            column: 23
          },
          end: {
            line: 88,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 88,
            column: 23
          },
          end: {
            line: 88,
            column: 47
          }
        }, {
          start: {
            line: 88,
            column: 51
          },
          end: {
            line: 88,
            column: 55
          }
        }],
        line: 88
      },
      "2": {
        loc: {
          start: {
            line: 107,
            column: 4
          },
          end: {
            line: 109,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 4
          },
          end: {
            line: 109,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "3": {
        loc: {
          start: {
            line: 127,
            column: 4
          },
          end: {
            line: 129,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 4
          },
          end: {
            line: 129,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 127
      },
      "4": {
        loc: {
          start: {
            line: 133,
            column: 4
          },
          end: {
            line: 138,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 133,
            column: 4
          },
          end: {
            line: 138,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 133
      },
      "5": {
        loc: {
          start: {
            line: 135,
            column: 8
          },
          end: {
            line: 137,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 135,
            column: 8
          },
          end: {
            line: 137,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 135
      },
      "6": {
        loc: {
          start: {
            line: 135,
            column: 12
          },
          end: {
            line: 135,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 135,
            column: 12
          },
          end: {
            line: 135,
            column: 25
          }
        }, {
          start: {
            line: 135,
            column: 29
          },
          end: {
            line: 135,
            column: 38
          }
        }],
        line: 135
      },
      "7": {
        loc: {
          start: {
            line: 144,
            column: 4
          },
          end: {
            line: 146,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 144,
            column: 4
          },
          end: {
            line: 146,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 144
      },
      "8": {
        loc: {
          start: {
            line: 171,
            column: 4
          },
          end: {
            line: 173,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 171,
            column: 4
          },
          end: {
            line: 173,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 171
      },
      "9": {
        loc: {
          start: {
            line: 179,
            column: 23
          },
          end: {
            line: 179,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 179,
            column: 23
          },
          end: {
            line: 179,
            column: 54
          }
        }, {
          start: {
            line: 179,
            column: 58
          },
          end: {
            line: 179,
            column: 62
          }
        }],
        line: 179
      },
      "10": {
        loc: {
          start: {
            line: 198,
            column: 4
          },
          end: {
            line: 200,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 198,
            column: 4
          },
          end: {
            line: 200,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 198
      },
      "11": {
        loc: {
          start: {
            line: 205,
            column: 4
          },
          end: {
            line: 208,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 205,
            column: 4
          },
          end: {
            line: 208,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 205
      },
      "12": {
        loc: {
          start: {
            line: 211,
            column: 4
          },
          end: {
            line: 236,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 211,
            column: 4
          },
          end: {
            line: 236,
            column: 5
          }
        }, {
          start: {
            line: 225,
            column: 11
          },
          end: {
            line: 236,
            column: 5
          }
        }],
        line: 211
      },
      "13": {
        loc: {
          start: {
            line: 211,
            column: 8
          },
          end: {
            line: 211,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 211,
            column: 8
          },
          end: {
            line: 211,
            column: 18
          }
        }, {
          start: {
            line: 211,
            column: 22
          },
          end: {
            line: 211,
            column: 43
          }
        }],
        line: 211
      },
      "14": {
        loc: {
          start: {
            line: 218,
            column: 8
          },
          end: {
            line: 220,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 218,
            column: 8
          },
          end: {
            line: 220,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 218
      },
      "15": {
        loc: {
          start: {
            line: 228,
            column: 8
          },
          end: {
            line: 230,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 228,
            column: 8
          },
          end: {
            line: 230,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 228
      },
      "16": {
        loc: {
          start: {
            line: 238,
            column: 50
          },
          end: {
            line: 238,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 238,
            column: 65
          },
          end: {
            line: 238,
            column: 73
          }
        }, {
          start: {
            line: 238,
            column: 76
          },
          end: {
            line: 238,
            column: 89
          }
        }],
        line: 238
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\products\\[id]\\route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\r\nimport { checkCRUDPermissions, logAdminAction, getRequestInfo } from '@/lib/auth/admin-auth';\r\nimport { z } from 'zod';\r\n\r\n// Enterprise middleware imports\r\nimport { withErrorHandler } from '@/lib/api/error-handler';\r\nimport { withApiLogging } from '@/lib/api/api-logger';\r\nimport { withAdminAuth } from '@/lib/auth/api-auth-middleware';\r\nimport { withValidation } from '@/lib/validation/admin-schemas';\r\nimport { composeMiddlewares } from '@/lib/api/middleware-composer';\r\n\r\n// Validation schemas\r\nconst UpdateProductSchema = z.object({\r\n  name: z.string().min(1, 'El nombre es requerido').max(255, 'M\xE1ximo 255 caracteres').optional(),\r\n  description: z.string().optional(),\r\n  short_description: z.string().max(500, 'M\xE1ximo 500 caracteres').optional(),\r\n  price: z.number().min(0, 'El precio debe ser mayor a 0').optional(),\r\n  discounted_price: z.number().min(0).optional(),\r\n  stock: z.number().min(0, 'El stock debe ser mayor o igual a 0').optional(),\r\n  low_stock_threshold: z.number().min(0).optional(),\r\n  category_id: z.string().uuid('ID de categor\xEDa inv\xE1lido').optional(),\r\n  brand: z.string().optional(),\r\n  images: z.array(z.object({\r\n    url: z.string().url(),\r\n    alt_text: z.string().optional(),\r\n    is_primary: z.boolean().default(false)\r\n  })).optional(),\r\n  is_active: z.boolean().optional(),\r\n  is_featured: z.boolean().optional(),\r\n  status: z.enum(['active', 'inactive', 'draft']).optional(),\r\n});\r\n\r\nconst ProductParamsSchema = z.object({\r\n  id: z.string().uuid('ID de producto inv\xE1lido')\r\n});\r\n\r\n// Enterprise imports for error handling\r\nimport { ApiError, NotFoundError, ValidationError } from '@/lib/api/error-handler';\r\n\r\n// Helper function to get product by ID with enhanced error handling\r\nasync function getProductById(supabase: any, productId: string) {\r\n  const { data: product, error } = await supabase\r\n    .from('products')\r\n    .select(`\r\n      id,\r\n      name,\r\n      slug,\r\n      description,\r\n      short_description,\r\n      price,\r\n      discounted_price,\r\n      stock,\r\n      low_stock_threshold,\r\n      category_id,\r\n      brand,\r\n      images,\r\n      is_active,\r\n      is_featured,\r\n      status,\r\n      created_at,\r\n      updated_at,\r\n      categories (\r\n        id,\r\n        name\r\n      )\r\n    `)\r\n    .eq('id', productId)\r\n    .single();\r\n\r\n  if (error) {\r\n    throw new NotFoundError('Producto');\r\n  }\r\n\r\n  // Transform response with enhanced data\r\n  const transformedProduct = {\r\n    ...product,\r\n    category_name: product.categories?.name || null,\r\n    categories: undefined,\r\n  };\r\n\r\n  return transformedProduct;\r\n}\r\n\r\n// Helper function to generate unique slug\r\nfunction generateSlug(name: string): string {\r\n  return name\r\n    .toLowerCase()\r\n    .replace(/[^a-z0-9\\s-]/g, '')\r\n    .replace(/\\s+/g, '-')\r\n    .replace(/-+/g, '-')\r\n    .trim();\r\n}\r\n\r\n/**\r\n * GET /api/admin/products/[id] - Enterprise Handler\r\n * Obtener producto espec\xEDfico por ID con middleware enterprise\r\n */\r\nconst getHandler = async (request: NextRequest, { params }: { params: { id: string } }) => {\r\n  const { supabase } = request as any;\r\n  const productId = params.id;\r\n\r\n  // Validar par\xE1metros\r\n  const paramsValidation = ProductParamsSchema.safeParse({ id: productId });\r\n  if (!paramsValidation.success) {\r\n    throw new ValidationError('ID de producto inv\xE1lido', paramsValidation.error.errors);\r\n  }\r\n\r\n  const product = await getProductById(supabase, productId);\r\n\r\n  return NextResponse.json({\r\n    data: product,\r\n    success: true,\r\n    message: 'Producto obtenido exitosamente'\r\n  });\r\n};\r\n\r\n/**\r\n * PUT /api/admin/products/[id] - Enterprise Handler\r\n * Actualizar producto espec\xEDfico con middleware enterprise\r\n */\r\nconst putHandler = async (request: NextRequest, { params }: { params: { id: string } }) => {\r\n  const { supabase, user, validatedData } = request as any;\r\n  const productId = params.id;\r\n\r\n  // Validar par\xE1metros\r\n  const paramsValidation = ProductParamsSchema.safeParse({ id: productId });\r\n  if (!paramsValidation.success) {\r\n    throw new ValidationError('ID de producto inv\xE1lido', paramsValidation.error.errors);\r\n  }\r\n\r\n  // Verificar que el producto existe\r\n  const existingProduct = await getProductById(supabase, productId);\r\n\r\n  // Verificar categor\xEDa si se est\xE1 actualizando\r\n  if (validatedData.category_id) {\r\n    const { data: category, error: categoryError } = await supabase\r\n      .from('categories')\r\n      .select('id')\r\n      .eq('id', validatedData.category_id)\r\n      .single();\r\n\r\n    if (categoryError || !category) {\r\n      throw new ValidationError('Categor\xEDa no encontrada');\r\n    }\r\n  }\r\n\r\n  // Generar slug si se actualiza el nombre\r\n  const updateData = {\r\n    ...validatedData,\r\n    updated_at: new Date().toISOString(),\r\n  };\r\n\r\n  if (validatedData.name) {\r\n    updateData.slug = generateSlug(validatedData.name);\r\n  }\r\n\r\n  // Actualizar producto\r\n  const { data: updatedProduct, error } = await supabase\r\n    .from('products')\r\n    .update(updateData)\r\n    .eq('id', productId)\r\n    .select(`\r\n      id,\r\n      name,\r\n      slug,\r\n      description,\r\n      short_description,\r\n      price,\r\n      discounted_price,\r\n      stock,\r\n      low_stock_threshold,\r\n      category_id,\r\n      brand,\r\n      images,\r\n      is_active,\r\n      is_featured,\r\n      status,\r\n      created_at,\r\n      updated_at,\r\n      categories (\r\n        id,\r\n        name\r\n      )\r\n    `)\r\n    .single();\r\n\r\n  if (error) {\r\n    throw new ApiError('Error al actualizar producto', 500, 'DATABASE_ERROR', error);\r\n  }\r\n\r\n  // Log de auditor\xEDa\r\n  await logAdminAction(user.id, 'UPDATE', 'product', productId, existingProduct, updatedProduct);\r\n\r\n  // Transform response\r\n  const transformedProduct = {\r\n    ...updatedProduct,\r\n    category_name: updatedProduct.categories?.name || null,\r\n    categories: undefined,\r\n  };\r\n\r\n  return NextResponse.json({\r\n    data: transformedProduct,\r\n    success: true,\r\n    message: 'Producto actualizado exitosamente'\r\n  });\r\n};\r\n\r\n/**\r\n * DELETE /api/admin/products/[id] - Enterprise Handler\r\n * Eliminar producto espec\xEDfico con middleware enterprise\r\n */\r\nconst deleteHandler = async (request: NextRequest, { params }: { params: { id: string } }) => {\r\n  const { supabase, user } = request as any;\r\n  const productId = params.id;\r\n\r\n  // Validar par\xE1metros\r\n  const paramsValidation = ProductParamsSchema.safeParse({ id: productId });\r\n  if (!paramsValidation.success) {\r\n    throw new ValidationError('ID de producto inv\xE1lido', paramsValidation.error.errors);\r\n  }\r\n\r\n  // Verificar que el producto existe\r\n  const existingProduct = await getProductById(supabase, productId);\r\n\r\n  // Verificar si el producto est\xE1 referenciado en \xF3rdenes\r\n  const { data: orderItems, error: orderCheckError } = await supabase\r\n    .from('order_items')\r\n    .select('id')\r\n    .eq('product_id', productId)\r\n    .limit(1);\r\n\r\n  if (orderCheckError) {\r\n    console.warn('Error checking order references:', orderCheckError);\r\n    // Continuar con eliminaci\xF3n aunque falle la verificaci\xF3n\r\n  }\r\n\r\n  let deletionResult;\r\n  let isHardDelete = false;\r\n\r\n  if (orderItems && orderItems.length > 0) {\r\n    // Soft delete: marcar como inactivo\r\n    const { error: updateError } = await supabase\r\n      .from('products')\r\n      .update({\r\n        status: 'inactive',\r\n        is_active: false,\r\n        updated_at: new Date().toISOString()\r\n      })\r\n      .eq('id', productId);\r\n\r\n    if (updateError) {\r\n      throw new ApiError('Error al eliminar producto', 500, 'DATABASE_ERROR', updateError);\r\n    }\r\n\r\n    deletionResult = {\r\n      message: 'Producto marcado como inactivo (tiene \xF3rdenes asociadas)',\r\n      soft_delete: true\r\n    };\r\n  } else {\r\n    // Hard delete si no hay referencias\r\n    const { error } = await supabase\r\n      .from('products')\r\n      .delete()\r\n      .eq('id', productId);\r\n\r\n    if (error) {\r\n      throw new ApiError('Error al eliminar producto', 500, 'DATABASE_ERROR', error);\r\n    }\r\n\r\n    isHardDelete = true;\r\n    deletionResult = {\r\n      message: 'Producto eliminado exitosamente',\r\n      hard_delete: true\r\n    };\r\n  }\r\n\r\n  // Log de auditor\xEDa\r\n  await logAdminAction(\r\n    user.id,\r\n    isHardDelete ? 'DELETE' : 'SOFT_DELETE',\r\n    'product',\r\n    productId,\r\n    existingProduct,\r\n    null\r\n  );\r\n\r\n  return NextResponse.json({\r\n    ...deletionResult,\r\n    success: true\r\n  });\r\n};\r\n\r\n// Aplicar middlewares enterprise y exportar handlers\r\nexport const GET = composeMiddlewares(\r\n  withErrorHandler,\r\n  withApiLogging,\r\n  withAdminAuth(['products_read'])\r\n)(getHandler);\r\n\r\nexport const PUT = composeMiddlewares(\r\n  withErrorHandler,\r\n  withApiLogging,\r\n  withAdminAuth(['products_update']),\r\n  withValidation(UpdateProductSchema)\r\n)(putHandler);\r\n\r\nexport const DELETE = composeMiddlewares(\r\n  withErrorHandler,\r\n  withApiLogging,\r\n  withAdminAuth(['products_delete'])\r\n)(deleteHandler);\r\n"],
      names: ["DELETE", "GET", "PUT", "UpdateProductSchema", "z", "object", "name", "string", "min", "max", "optional", "description", "short_description", "price", "number", "discounted_price", "stock", "low_stock_threshold", "category_id", "uuid", "brand", "images", "array", "url", "alt_text", "is_primary", "boolean", "default", "is_active", "is_featured", "status", "enum", "ProductParamsSchema", "id", "getProductById", "supabase", "productId", "data", "product", "error", "from", "select", "eq", "single", "NotFoundError", "transformedProduct", "category_name", "categories", "undefined", "generateSlug", "toLowerCase", "replace", "trim", "getHandler", "request", "params", "paramsValidation", "safeParse", "success", "ValidationError", "errors", "NextResponse", "json", "message", "putHandler", "user", "validatedData", "existingProduct", "category", "categoryError", "updateData", "updated_at", "Date", "toISOString", "slug", "updatedProduct", "update", "ApiError", "logAdminAction", "deleteHandler", "orderItems", "orderCheckError", "limit", "console", "warn", "deletionResult", "isHardDelete", "length", "updateError", "soft_delete", "delete", "hard_delete", "composeMiddlewares", "withErrorHandler", "withApiLogging", "withAdminAuth", "withValidation"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "daf24cfb53dea704bf32488acd36514fd5c38137"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_v4hp14clq = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_v4hp14clq();
cov_v4hp14clq().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_v4hp14clq().f[0]++;
  cov_v4hp14clq().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_v4hp14clq().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_v4hp14clq().s[3]++;
_export(exports, {
  get DELETE() {
    /* istanbul ignore next */
    cov_v4hp14clq().f[1]++;
    cov_v4hp14clq().s[4]++;
    return DELETE;
  },
  get GET() {
    /* istanbul ignore next */
    cov_v4hp14clq().f[2]++;
    cov_v4hp14clq().s[5]++;
    return GET;
  },
  get PUT() {
    /* istanbul ignore next */
    cov_v4hp14clq().f[3]++;
    cov_v4hp14clq().s[6]++;
    return PUT;
  }
});
const _server =
/* istanbul ignore next */
(cov_v4hp14clq().s[7]++, require("next/server"));
const _adminauth =
/* istanbul ignore next */
(cov_v4hp14clq().s[8]++, require("../../../../../lib/auth/admin-auth"));
const _zod =
/* istanbul ignore next */
(cov_v4hp14clq().s[9]++, require("zod"));
const _errorhandler =
/* istanbul ignore next */
(cov_v4hp14clq().s[10]++, require("../../../../../lib/api/error-handler"));
const _apilogger =
/* istanbul ignore next */
(cov_v4hp14clq().s[11]++, require("../../../../../lib/api/api-logger"));
const _apiauthmiddleware =
/* istanbul ignore next */
(cov_v4hp14clq().s[12]++, require("../../../../../lib/auth/api-auth-middleware"));
const _adminschemas =
/* istanbul ignore next */
(cov_v4hp14clq().s[13]++, require("../../../../../lib/validation/admin-schemas"));
const _middlewarecomposer =
/* istanbul ignore next */
(cov_v4hp14clq().s[14]++, require("../../../../../lib/api/middleware-composer"));
// Validation schemas
const UpdateProductSchema =
/* istanbul ignore next */
(cov_v4hp14clq().s[15]++, _zod.z.object({
  name: _zod.z.string().min(1, 'El nombre es requerido').max(255, 'Máximo 255 caracteres').optional(),
  description: _zod.z.string().optional(),
  short_description: _zod.z.string().max(500, 'Máximo 500 caracteres').optional(),
  price: _zod.z.number().min(0, 'El precio debe ser mayor a 0').optional(),
  discounted_price: _zod.z.number().min(0).optional(),
  stock: _zod.z.number().min(0, 'El stock debe ser mayor o igual a 0').optional(),
  low_stock_threshold: _zod.z.number().min(0).optional(),
  category_id: _zod.z.string().uuid('ID de categoría inválido').optional(),
  brand: _zod.z.string().optional(),
  images: _zod.z.array(_zod.z.object({
    url: _zod.z.string().url(),
    alt_text: _zod.z.string().optional(),
    is_primary: _zod.z.boolean().default(false)
  })).optional(),
  is_active: _zod.z.boolean().optional(),
  is_featured: _zod.z.boolean().optional(),
  status: _zod.z.enum(['active', 'inactive', 'draft']).optional()
}));
const ProductParamsSchema =
/* istanbul ignore next */
(cov_v4hp14clq().s[16]++, _zod.z.object({
  id: _zod.z.string().uuid('ID de producto inválido')
}));
// Helper function to get product by ID with enhanced error handling
async function getProductById(supabase, productId) {
  /* istanbul ignore next */
  cov_v4hp14clq().f[4]++;
  const {
    data: product,
    error
  } =
  /* istanbul ignore next */
  (cov_v4hp14clq().s[17]++, await supabase.from('products').select(`
      id,
      name,
      slug,
      description,
      short_description,
      price,
      discounted_price,
      stock,
      low_stock_threshold,
      category_id,
      brand,
      images,
      is_active,
      is_featured,
      status,
      created_at,
      updated_at,
      categories (
        id,
        name
      )
    `).eq('id', productId).single());
  /* istanbul ignore next */
  cov_v4hp14clq().s[18]++;
  if (error) {
    /* istanbul ignore next */
    cov_v4hp14clq().b[0][0]++;
    cov_v4hp14clq().s[19]++;
    throw new _errorhandler.NotFoundError('Producto');
  } else
  /* istanbul ignore next */
  {
    cov_v4hp14clq().b[0][1]++;
  }
  // Transform response with enhanced data
  const transformedProduct =
  /* istanbul ignore next */
  (cov_v4hp14clq().s[20]++, {
    ...product,
    category_name:
    /* istanbul ignore next */
    (cov_v4hp14clq().b[1][0]++, product.categories?.name) ||
    /* istanbul ignore next */
    (cov_v4hp14clq().b[1][1]++, null),
    categories: undefined
  });
  /* istanbul ignore next */
  cov_v4hp14clq().s[21]++;
  return transformedProduct;
}
// Helper function to generate unique slug
function generateSlug(name) {
  /* istanbul ignore next */
  cov_v4hp14clq().f[5]++;
  cov_v4hp14clq().s[22]++;
  return name.toLowerCase().replace(/[^a-z0-9\s-]/g, '').replace(/\s+/g, '-').replace(/-+/g, '-').trim();
}
/**
 * GET /api/admin/products/[id] - Enterprise Handler
 * Obtener producto específico por ID con middleware enterprise
 */
/* istanbul ignore next */
cov_v4hp14clq().s[23]++;
const getHandler = async (request, {
  params
}) => {
  /* istanbul ignore next */
  cov_v4hp14clq().f[6]++;
  const {
    supabase
  } =
  /* istanbul ignore next */
  (cov_v4hp14clq().s[24]++, request);
  const productId =
  /* istanbul ignore next */
  (cov_v4hp14clq().s[25]++, params.id);
  // Validar parámetros
  const paramsValidation =
  /* istanbul ignore next */
  (cov_v4hp14clq().s[26]++, ProductParamsSchema.safeParse({
    id: productId
  }));
  /* istanbul ignore next */
  cov_v4hp14clq().s[27]++;
  if (!paramsValidation.success) {
    /* istanbul ignore next */
    cov_v4hp14clq().b[2][0]++;
    cov_v4hp14clq().s[28]++;
    throw new _errorhandler.ValidationError('ID de producto inválido', paramsValidation.error.errors);
  } else
  /* istanbul ignore next */
  {
    cov_v4hp14clq().b[2][1]++;
  }
  const product =
  /* istanbul ignore next */
  (cov_v4hp14clq().s[29]++, await getProductById(supabase, productId));
  /* istanbul ignore next */
  cov_v4hp14clq().s[30]++;
  return _server.NextResponse.json({
    data: product,
    success: true,
    message: 'Producto obtenido exitosamente'
  });
};
/**
 * PUT /api/admin/products/[id] - Enterprise Handler
 * Actualizar producto específico con middleware enterprise
 */
/* istanbul ignore next */
cov_v4hp14clq().s[31]++;
const putHandler = async (request, {
  params
}) => {
  /* istanbul ignore next */
  cov_v4hp14clq().f[7]++;
  const {
    supabase,
    user,
    validatedData
  } =
  /* istanbul ignore next */
  (cov_v4hp14clq().s[32]++, request);
  const productId =
  /* istanbul ignore next */
  (cov_v4hp14clq().s[33]++, params.id);
  // Validar parámetros
  const paramsValidation =
  /* istanbul ignore next */
  (cov_v4hp14clq().s[34]++, ProductParamsSchema.safeParse({
    id: productId
  }));
  /* istanbul ignore next */
  cov_v4hp14clq().s[35]++;
  if (!paramsValidation.success) {
    /* istanbul ignore next */
    cov_v4hp14clq().b[3][0]++;
    cov_v4hp14clq().s[36]++;
    throw new _errorhandler.ValidationError('ID de producto inválido', paramsValidation.error.errors);
  } else
  /* istanbul ignore next */
  {
    cov_v4hp14clq().b[3][1]++;
  }
  // Verificar que el producto existe
  const existingProduct =
  /* istanbul ignore next */
  (cov_v4hp14clq().s[37]++, await getProductById(supabase, productId));
  // Verificar categoría si se está actualizando
  /* istanbul ignore next */
  cov_v4hp14clq().s[38]++;
  if (validatedData.category_id) {
    /* istanbul ignore next */
    cov_v4hp14clq().b[4][0]++;
    const {
      data: category,
      error: categoryError
    } =
    /* istanbul ignore next */
    (cov_v4hp14clq().s[39]++, await supabase.from('categories').select('id').eq('id', validatedData.category_id).single());
    /* istanbul ignore next */
    cov_v4hp14clq().s[40]++;
    if (
    /* istanbul ignore next */
    (cov_v4hp14clq().b[6][0]++, categoryError) ||
    /* istanbul ignore next */
    (cov_v4hp14clq().b[6][1]++, !category)) {
      /* istanbul ignore next */
      cov_v4hp14clq().b[5][0]++;
      cov_v4hp14clq().s[41]++;
      throw new _errorhandler.ValidationError('Categoría no encontrada');
    } else
    /* istanbul ignore next */
    {
      cov_v4hp14clq().b[5][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_v4hp14clq().b[4][1]++;
  }
  // Generar slug si se actualiza el nombre
  const updateData =
  /* istanbul ignore next */
  (cov_v4hp14clq().s[42]++, {
    ...validatedData,
    updated_at: new Date().toISOString()
  });
  /* istanbul ignore next */
  cov_v4hp14clq().s[43]++;
  if (validatedData.name) {
    /* istanbul ignore next */
    cov_v4hp14clq().b[7][0]++;
    cov_v4hp14clq().s[44]++;
    updateData.slug = generateSlug(validatedData.name);
  } else
  /* istanbul ignore next */
  {
    cov_v4hp14clq().b[7][1]++;
  }
  // Actualizar producto
  const {
    data: updatedProduct,
    error
  } =
  /* istanbul ignore next */
  (cov_v4hp14clq().s[45]++, await supabase.from('products').update(updateData).eq('id', productId).select(`
      id,
      name,
      slug,
      description,
      short_description,
      price,
      discounted_price,
      stock,
      low_stock_threshold,
      category_id,
      brand,
      images,
      is_active,
      is_featured,
      status,
      created_at,
      updated_at,
      categories (
        id,
        name
      )
    `).single());
  /* istanbul ignore next */
  cov_v4hp14clq().s[46]++;
  if (error) {
    /* istanbul ignore next */
    cov_v4hp14clq().b[8][0]++;
    cov_v4hp14clq().s[47]++;
    throw new _errorhandler.ApiError('Error al actualizar producto', 500, 'DATABASE_ERROR', error);
  } else
  /* istanbul ignore next */
  {
    cov_v4hp14clq().b[8][1]++;
  }
  // Log de auditoría
  cov_v4hp14clq().s[48]++;
  await (0, _adminauth.logAdminAction)(user.id, 'UPDATE', 'product', productId, existingProduct, updatedProduct);
  // Transform response
  const transformedProduct =
  /* istanbul ignore next */
  (cov_v4hp14clq().s[49]++, {
    ...updatedProduct,
    category_name:
    /* istanbul ignore next */
    (cov_v4hp14clq().b[9][0]++, updatedProduct.categories?.name) ||
    /* istanbul ignore next */
    (cov_v4hp14clq().b[9][1]++, null),
    categories: undefined
  });
  /* istanbul ignore next */
  cov_v4hp14clq().s[50]++;
  return _server.NextResponse.json({
    data: transformedProduct,
    success: true,
    message: 'Producto actualizado exitosamente'
  });
};
/**
 * DELETE /api/admin/products/[id] - Enterprise Handler
 * Eliminar producto específico con middleware enterprise
 */
/* istanbul ignore next */
cov_v4hp14clq().s[51]++;
const deleteHandler = async (request, {
  params
}) => {
  /* istanbul ignore next */
  cov_v4hp14clq().f[8]++;
  const {
    supabase,
    user
  } =
  /* istanbul ignore next */
  (cov_v4hp14clq().s[52]++, request);
  const productId =
  /* istanbul ignore next */
  (cov_v4hp14clq().s[53]++, params.id);
  // Validar parámetros
  const paramsValidation =
  /* istanbul ignore next */
  (cov_v4hp14clq().s[54]++, ProductParamsSchema.safeParse({
    id: productId
  }));
  /* istanbul ignore next */
  cov_v4hp14clq().s[55]++;
  if (!paramsValidation.success) {
    /* istanbul ignore next */
    cov_v4hp14clq().b[10][0]++;
    cov_v4hp14clq().s[56]++;
    throw new _errorhandler.ValidationError('ID de producto inválido', paramsValidation.error.errors);
  } else
  /* istanbul ignore next */
  {
    cov_v4hp14clq().b[10][1]++;
  }
  // Verificar que el producto existe
  const existingProduct =
  /* istanbul ignore next */
  (cov_v4hp14clq().s[57]++, await getProductById(supabase, productId));
  // Verificar si el producto está referenciado en órdenes
  const {
    data: orderItems,
    error: orderCheckError
  } =
  /* istanbul ignore next */
  (cov_v4hp14clq().s[58]++, await supabase.from('order_items').select('id').eq('product_id', productId).limit(1));
  /* istanbul ignore next */
  cov_v4hp14clq().s[59]++;
  if (orderCheckError) {
    /* istanbul ignore next */
    cov_v4hp14clq().b[11][0]++;
    cov_v4hp14clq().s[60]++;
    console.warn('Error checking order references:', orderCheckError);
    // Continuar con eliminación aunque falle la verificación
  } else
  /* istanbul ignore next */
  {
    cov_v4hp14clq().b[11][1]++;
  }
  let deletionResult;
  let isHardDelete =
  /* istanbul ignore next */
  (cov_v4hp14clq().s[61]++, false);
  /* istanbul ignore next */
  cov_v4hp14clq().s[62]++;
  if (
  /* istanbul ignore next */
  (cov_v4hp14clq().b[13][0]++, orderItems) &&
  /* istanbul ignore next */
  (cov_v4hp14clq().b[13][1]++, orderItems.length > 0)) {
    /* istanbul ignore next */
    cov_v4hp14clq().b[12][0]++;
    // Soft delete: marcar como inactivo
    const {
      error: updateError
    } =
    /* istanbul ignore next */
    (cov_v4hp14clq().s[63]++, await supabase.from('products').update({
      status: 'inactive',
      is_active: false,
      updated_at: new Date().toISOString()
    }).eq('id', productId));
    /* istanbul ignore next */
    cov_v4hp14clq().s[64]++;
    if (updateError) {
      /* istanbul ignore next */
      cov_v4hp14clq().b[14][0]++;
      cov_v4hp14clq().s[65]++;
      throw new _errorhandler.ApiError('Error al eliminar producto', 500, 'DATABASE_ERROR', updateError);
    } else
    /* istanbul ignore next */
    {
      cov_v4hp14clq().b[14][1]++;
    }
    cov_v4hp14clq().s[66]++;
    deletionResult = {
      message: 'Producto marcado como inactivo (tiene órdenes asociadas)',
      soft_delete: true
    };
  } else {
    /* istanbul ignore next */
    cov_v4hp14clq().b[12][1]++;
    // Hard delete si no hay referencias
    const {
      error
    } =
    /* istanbul ignore next */
    (cov_v4hp14clq().s[67]++, await supabase.from('products').delete().eq('id', productId));
    /* istanbul ignore next */
    cov_v4hp14clq().s[68]++;
    if (error) {
      /* istanbul ignore next */
      cov_v4hp14clq().b[15][0]++;
      cov_v4hp14clq().s[69]++;
      throw new _errorhandler.ApiError('Error al eliminar producto', 500, 'DATABASE_ERROR', error);
    } else
    /* istanbul ignore next */
    {
      cov_v4hp14clq().b[15][1]++;
    }
    cov_v4hp14clq().s[70]++;
    isHardDelete = true;
    /* istanbul ignore next */
    cov_v4hp14clq().s[71]++;
    deletionResult = {
      message: 'Producto eliminado exitosamente',
      hard_delete: true
    };
  }
  // Log de auditoría
  /* istanbul ignore next */
  cov_v4hp14clq().s[72]++;
  await (0, _adminauth.logAdminAction)(user.id, isHardDelete ?
  /* istanbul ignore next */
  (cov_v4hp14clq().b[16][0]++, 'DELETE') :
  /* istanbul ignore next */
  (cov_v4hp14clq().b[16][1]++, 'SOFT_DELETE'), 'product', productId, existingProduct, null);
  /* istanbul ignore next */
  cov_v4hp14clq().s[73]++;
  return _server.NextResponse.json({
    ...deletionResult,
    success: true
  });
};
const GET =
/* istanbul ignore next */
(cov_v4hp14clq().s[74]++, (0, _middlewarecomposer.composeMiddlewares)(_errorhandler.withErrorHandler, _apilogger.withApiLogging, (0, _apiauthmiddleware.withAdminAuth)(['products_read']))(getHandler));
const PUT =
/* istanbul ignore next */
(cov_v4hp14clq().s[75]++, (0, _middlewarecomposer.composeMiddlewares)(_errorhandler.withErrorHandler, _apilogger.withApiLogging, (0, _apiauthmiddleware.withAdminAuth)(['products_update']), (0, _adminschemas.withValidation)(UpdateProductSchema))(putHandler));
const DELETE =
/* istanbul ignore next */
(cov_v4hp14clq().s[76]++, (0, _middlewarecomposer.composeMiddlewares)(_errorhandler.withErrorHandler, _apilogger.withApiLogging, (0, _apiauthmiddleware.withAdminAuth)(['products_delete']))(deleteHandler));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,