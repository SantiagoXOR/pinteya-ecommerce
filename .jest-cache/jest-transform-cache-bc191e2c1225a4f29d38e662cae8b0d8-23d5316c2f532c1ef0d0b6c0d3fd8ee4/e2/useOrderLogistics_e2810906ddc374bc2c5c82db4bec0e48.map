{"version":3,"names":["useOrderLogistics","cov_1fitxmtalb","f","s","useShipmentTracking","orderId","queryClient","_reactquery","useQueryClient","selectedItems","setSelectedItems","_react","useState","data","shipmentsData","isLoading","shipmentsLoading","error","shipmentsError","refetch","refetchShipments","useQuery","queryKey","queryFn","response","fetch","ok","b","Error","status","statusText","json","enabled","staleTime","refetchOnWindowFocus","carriersData","carriersLoading","carriersError","createShipmentMutation","useMutation","mutationFn","shipmentData","method","headers","body","JSON","stringify","errorData","onSuccess","invalidateQueries","updateShipmentStatusMutation","shipmentId","notes","createShipment","useCallback","mutateAsync","updateShipmentStatus","toggleItemSelection","itemId","prev","includes","filter","id","selectAllItems","itemIds","clearSelection","derivedMetrics","totalShipments","length","pendingShipments","inTransitShipments","deliveredShipments","hasShipments","canCreateShipment","availableCarriers","selectedItemsCount","shipments","carriers","isLoadingShipments","isLoadingCarriers","isCreatingShipment","isPending","isUpdatingStatus","getShipmentsByStatus","getLatestTrackingEvent","shipment","tracking_events","canShipItems","getShipmentProgress","statusOrder","currentIndex","indexOf","trackingData","refetchInterval","trackingEvents","latestEvent","isDelivered","isInTransit","hasException"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\admin\\useOrderLogistics.ts"],"sourcesContent":["// =====================================================\r\n// HOOK: useOrderLogistics\r\n// Descripción: Hook para integración entre órdenes y logística\r\n// Gestiona: Creación de envíos, tracking, estados\r\n// =====================================================\r\n\r\n'use client';\r\n\r\nimport { useState, useCallback } from 'react';\r\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\r\n\r\n// =====================================================\r\n// TIPOS E INTERFACES\r\n// =====================================================\r\n\r\nexport interface CreateShipmentRequest {\r\n  carrier_id: number;\r\n  shipping_service: string;\r\n  items: Array<{\r\n    order_item_id: string;\r\n    quantity: number;\r\n  }>;\r\n  pickup_address?: {\r\n    street_name: string;\r\n    street_number: string;\r\n    city_name: string;\r\n    state_name: string;\r\n    zip_code: string;\r\n    country?: string;\r\n  };\r\n  delivery_address: {\r\n    street_name: string;\r\n    street_number: string;\r\n    apartment?: string;\r\n    city_name: string;\r\n    state_name: string;\r\n    zip_code: string;\r\n    country?: string;\r\n  };\r\n  weight_kg?: number;\r\n  dimensions_cm?: string;\r\n  special_instructions?: string;\r\n  notes?: string;\r\n  estimated_delivery_date?: string;\r\n}\r\n\r\nexport interface Shipment {\r\n  id: string;\r\n  shipment_number: string;\r\n  order_id: string;\r\n  status: string;\r\n  carrier_id: number;\r\n  shipping_service: string;\r\n  pickup_address?: any;\r\n  delivery_address: any;\r\n  weight_kg?: number;\r\n  dimensions_cm?: string;\r\n  special_instructions?: string;\r\n  notes?: string;\r\n  estimated_delivery_date?: string;\r\n  created_at: string;\r\n  updated_at: string;\r\n  carrier?: {\r\n    id: number;\r\n    name: string;\r\n    code: string;\r\n    logo_url?: string;\r\n  };\r\n  items?: Array<{\r\n    id: string;\r\n    quantity: number;\r\n    weight_kg?: number;\r\n    order_item: {\r\n      id: string;\r\n      quantity: number;\r\n      unit_price: number;\r\n      product: {\r\n        id: string;\r\n        name: string;\r\n        sku?: string;\r\n      };\r\n    };\r\n  }>;\r\n  tracking_events?: Array<{\r\n    id: string;\r\n    status: string;\r\n    description: string;\r\n    occurred_at: string;\r\n    location?: string;\r\n  }>;\r\n}\r\n\r\nexport interface Carrier {\r\n  id: number;\r\n  name: string;\r\n  code: string;\r\n  logo_url?: string;\r\n  is_active: boolean;\r\n  services: string[];\r\n}\r\n\r\n// =====================================================\r\n// HOOK PRINCIPAL\r\n// =====================================================\r\n\r\nexport function useOrderLogistics(orderId: string) {\r\n  const queryClient = useQueryClient();\r\n  const [selectedItems, setSelectedItems] = useState<string[]>([]);\r\n\r\n  // =====================================================\r\n  // QUERIES\r\n  // =====================================================\r\n\r\n  // Query para obtener envíos de la orden\r\n  const {\r\n    data: shipmentsData,\r\n    isLoading: shipmentsLoading,\r\n    error: shipmentsError,\r\n    refetch: refetchShipments\r\n  } = useQuery({\r\n    queryKey: ['order-shipments', orderId],\r\n    queryFn: async () => {\r\n      const response = await fetch(`/api/admin/orders/${orderId}/shipments`);\r\n      if (!response.ok) {\r\n        throw new Error(`Error ${response.status}: ${response.statusText}`);\r\n      }\r\n      return response.json();\r\n    },\r\n    enabled: !!orderId,\r\n    staleTime: 30000,\r\n    refetchOnWindowFocus: false\r\n  });\r\n\r\n  // Query para obtener carriers disponibles\r\n  const {\r\n    data: carriersData,\r\n    isLoading: carriersLoading,\r\n    error: carriersError\r\n  } = useQuery({\r\n    queryKey: ['logistics-carriers'],\r\n    queryFn: async () => {\r\n      const response = await fetch('/api/admin/logistics/couriers?active_only=true');\r\n      if (!response.ok) {\r\n        throw new Error(`Error ${response.status}: ${response.statusText}`);\r\n      }\r\n      return response.json();\r\n    },\r\n    staleTime: 300000, // 5 minutos\r\n    refetchOnWindowFocus: false\r\n  });\r\n\r\n  // =====================================================\r\n  // MUTATIONS\r\n  // =====================================================\r\n\r\n  // Mutation para crear envío\r\n  const createShipmentMutation = useMutation({\r\n    mutationFn: async (shipmentData: CreateShipmentRequest) => {\r\n      const response = await fetch(`/api/admin/orders/${orderId}/shipments`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(shipmentData)\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || `Error ${response.status}: ${response.statusText}`);\r\n      }\r\n      \r\n      return response.json();\r\n    },\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({ queryKey: ['order-shipments', orderId] });\r\n      queryClient.invalidateQueries({ queryKey: ['admin-orders'] });\r\n      queryClient.invalidateQueries({ queryKey: ['admin-logistics'] });\r\n      setSelectedItems([]);\r\n    }\r\n  });\r\n\r\n  // Mutation para actualizar estado de envío\r\n  const updateShipmentStatusMutation = useMutation({\r\n    mutationFn: async ({ shipmentId, status, notes }: { \r\n      shipmentId: string; \r\n      status: string; \r\n      notes?: string;\r\n    }) => {\r\n      const response = await fetch(`/api/admin/logistics/shipments/${shipmentId}`, {\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ status, notes })\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || `Error ${response.status}: ${response.statusText}`);\r\n      }\r\n      \r\n      return response.json();\r\n    },\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({ queryKey: ['order-shipments', orderId] });\r\n      queryClient.invalidateQueries({ queryKey: ['admin-logistics'] });\r\n    }\r\n  });\r\n\r\n  // =====================================================\r\n  // FUNCIONES AUXILIARES\r\n  // =====================================================\r\n\r\n  const createShipment = useCallback((shipmentData: CreateShipmentRequest) => {\r\n    return createShipmentMutation.mutateAsync(shipmentData);\r\n  }, [createShipmentMutation]);\r\n\r\n  const updateShipmentStatus = useCallback((\r\n    shipmentId: string, \r\n    status: string, \r\n    notes?: string\r\n  ) => {\r\n    return updateShipmentStatusMutation.mutateAsync({ shipmentId, status, notes });\r\n  }, [updateShipmentStatusMutation]);\r\n\r\n  const toggleItemSelection = useCallback((itemId: string) => {\r\n    setSelectedItems(prev => \r\n      prev.includes(itemId) \r\n        ? prev.filter(id => id !== itemId)\r\n        : [...prev, itemId]\r\n    );\r\n  }, []);\r\n\r\n  const selectAllItems = useCallback((itemIds: string[]) => {\r\n    setSelectedItems(itemIds);\r\n  }, []);\r\n\r\n  const clearSelection = useCallback(() => {\r\n    setSelectedItems([]);\r\n  }, []);\r\n\r\n  // =====================================================\r\n  // MÉTRICAS DERIVADAS\r\n  // =====================================================\r\n\r\n  const derivedMetrics = {\r\n    totalShipments: shipmentsData?.data?.length || 0,\r\n    pendingShipments: shipmentsData?.data?.filter((s: Shipment) => s.status === 'pending').length || 0,\r\n    inTransitShipments: shipmentsData?.data?.filter((s: Shipment) => s.status === 'in_transit').length || 0,\r\n    deliveredShipments: shipmentsData?.data?.filter((s: Shipment) => s.status === 'delivered').length || 0,\r\n    \r\n    hasShipments: (shipmentsData?.data?.length || 0) > 0,\r\n    canCreateShipment: selectedItems.length > 0,\r\n    \r\n    availableCarriers: carriersData?.data || [],\r\n    selectedItemsCount: selectedItems.length\r\n  };\r\n\r\n  // =====================================================\r\n  // RETURN\r\n  // =====================================================\r\n\r\n  return {\r\n    // Datos\r\n    shipments: shipmentsData?.data || [],\r\n    carriers: carriersData?.data || [],\r\n    \r\n    // Estados de carga\r\n    isLoading: shipmentsLoading || carriersLoading,\r\n    isLoadingShipments: shipmentsLoading,\r\n    isLoadingCarriers: carriersLoading,\r\n    \r\n    // Errores\r\n    error: shipmentsError || carriersError,\r\n    shipmentsError,\r\n    carriersError,\r\n    \r\n    // Acciones\r\n    createShipment,\r\n    updateShipmentStatus,\r\n    refetchShipments,\r\n    \r\n    // Selección de items\r\n    selectedItems,\r\n    toggleItemSelection,\r\n    selectAllItems,\r\n    clearSelection,\r\n    \r\n    // Estados de mutations\r\n    isCreatingShipment: createShipmentMutation.isPending,\r\n    isUpdatingStatus: updateShipmentStatusMutation.isPending,\r\n    \r\n    // Métricas derivadas\r\n    derivedMetrics,\r\n    \r\n    // Helpers\r\n    getShipmentsByStatus: (status: string) => \r\n      shipmentsData?.data?.filter((s: Shipment) => s.status === status) || [],\r\n    \r\n    getLatestTrackingEvent: (shipment: Shipment) => \r\n      shipment.tracking_events?.[0] || null,\r\n    \r\n    canShipItems: (itemIds: string[]) => itemIds.length > 0,\r\n    \r\n    getShipmentProgress: (shipment: Shipment) => {\r\n      const statusOrder = ['pending', 'confirmed', 'picked_up', 'in_transit', 'out_for_delivery', 'delivered'];\r\n      const currentIndex = statusOrder.indexOf(shipment.status);\r\n      return currentIndex >= 0 ? ((currentIndex + 1) / statusOrder.length) * 100 : 0;\r\n    }\r\n  };\r\n}\r\n\r\n// =====================================================\r\n// HOOK PARA TRACKING EN TIEMPO REAL\r\n// =====================================================\r\n\r\nexport function useShipmentTracking(shipmentId: string) {\r\n  const {\r\n    data: trackingData,\r\n    isLoading,\r\n    error,\r\n    refetch\r\n  } = useQuery({\r\n    queryKey: ['shipment-tracking', shipmentId],\r\n    queryFn: async () => {\r\n      const response = await fetch(`/api/admin/logistics/tracking/${shipmentId}`);\r\n      if (!response.ok) {\r\n        throw new Error(`Error ${response.status}: ${response.statusText}`);\r\n      }\r\n      return response.json();\r\n    },\r\n    enabled: !!shipmentId,\r\n    refetchInterval: 30000, // Actualizar cada 30 segundos\r\n    staleTime: 10000,\r\n    refetchOnWindowFocus: true\r\n  });\r\n\r\n  return {\r\n    trackingEvents: trackingData?.data || [],\r\n    isLoading,\r\n    error,\r\n    refetch,\r\n    \r\n    latestEvent: trackingData?.data?.[0] || null,\r\n    isDelivered: trackingData?.data?.[0]?.status === 'delivered',\r\n    isInTransit: ['in_transit', 'out_for_delivery'].includes(trackingData?.data?.[0]?.status),\r\n    hasException: trackingData?.data?.[0]?.status === 'exception'\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappingsmGgBA,kBAAA;IAAA;IAAAC,cAAA,GAAAC,CAAA;IAAAD,cAAA,GAAAE,CAAA;WAAAH,iBAAA;;MA+MAI,oBAAA;IAAA;IAAAH,cAAA,GAAAC,CAAA;IAAAD,cAAA,GAAAE,CAAA;WAAAC,mBAAA;;;;;kCAhTsB;;;kCACgB;AAgG/C,SAASJ,kBAAkBK,OAAe;EAAA;EAAAJ,cAAA,GAAAC,CAAA;EAC/C,MAAMI,WAAA;EAAA;EAAA,CAAAL,cAAA,GAAAE,CAAA,OAAc,IAAAI,WAAA,CAAAC,cAAc;EAClC,MAAM,CAACC,aAAA,EAAeC,gBAAA,CAAiB;EAAA;EAAA,CAAAT,cAAA,GAAAE,CAAA,OAAG,IAAAQ,MAAA,CAAAC,QAAQ,EAAW,EAAE;EAE/D;EACA;EACA;EAEA;EACA,MAAM;IACJC,IAAA,EAAMC,aAAa;IACnBC,SAAA,EAAWC,gBAAgB;IAC3BC,KAAA,EAAOC,cAAc;IACrBC,OAAA,EAASC;EAAgB,CAC1B;EAAA;EAAA,CAAAnB,cAAA,GAAAE,CAAA,QAAG,IAAAI,WAAA,CAAAc,QAAQ,EAAC;IACXC,QAAA,EAAU,CAAC,mBAAmBjB,OAAA,CAAQ;IACtCkB,OAAA,EAAS,MAAAA,CAAA;MAAA;MAAAtB,cAAA,GAAAC,CAAA;MACP,MAAMsB,QAAA;MAAA;MAAA,CAAAvB,cAAA,GAAAE,CAAA,QAAW,MAAMsB,KAAA,CAAM,qBAAqBpB,OAAA,YAAmB;MAAA;MAAAJ,cAAA,GAAAE,CAAA;MACrE,IAAI,CAACqB,QAAA,CAASE,EAAE,EAAE;QAAA;QAAAzB,cAAA,GAAA0B,CAAA;QAAA1B,cAAA,GAAAE,CAAA;QAChB,MAAM,IAAIyB,KAAA,CAAM,SAASJ,QAAA,CAASK,MAAM,KAAKL,QAAA,CAASM,UAAU,EAAE;MACpE;MAAA;MAAA;QAAA7B,cAAA,GAAA0B,CAAA;MAAA;MAAA1B,cAAA,GAAAE,CAAA;MACA,OAAOqB,QAAA,CAASO,IAAI;IACtB;IACAC,OAAA,EAAS,CAAC,CAAC3B,OAAA;IACX4B,SAAA,EAAW;IACXC,oBAAA,EAAsB;EACxB;EAEA;EACA,MAAM;IACJrB,IAAA,EAAMsB,YAAY;IAClBpB,SAAA,EAAWqB,eAAe;IAC1BnB,KAAA,EAAOoB;EAAa,CACrB;EAAA;EAAA,CAAApC,cAAA,GAAAE,CAAA,QAAG,IAAAI,WAAA,CAAAc,QAAQ,EAAC;IACXC,QAAA,EAAU,CAAC,qBAAqB;IAChCC,OAAA,EAAS,MAAAA,CAAA;MAAA;MAAAtB,cAAA,GAAAC,CAAA;MACP,MAAMsB,QAAA;MAAA;MAAA,CAAAvB,cAAA,GAAAE,CAAA,QAAW,MAAMsB,KAAA,CAAM;MAAA;MAAAxB,cAAA,GAAAE,CAAA;MAC7B,IAAI,CAACqB,QAAA,CAASE,EAAE,EAAE;QAAA;QAAAzB,cAAA,GAAA0B,CAAA;QAAA1B,cAAA,GAAAE,CAAA;QAChB,MAAM,IAAIyB,KAAA,CAAM,SAASJ,QAAA,CAASK,MAAM,KAAKL,QAAA,CAASM,UAAU,EAAE;MACpE;MAAA;MAAA;QAAA7B,cAAA,GAAA0B,CAAA;MAAA;MAAA1B,cAAA,GAAAE,CAAA;MACA,OAAOqB,QAAA,CAASO,IAAI;IACtB;IACAE,SAAA,EAAW;IACXC,oBAAA,EAAsB;EACxB;EAEA;EACA;EACA;EAEA;EACA,MAAMI,sBAAA;EAAA;EAAA,CAAArC,cAAA,GAAAE,CAAA,QAAyB,IAAAI,WAAA,CAAAgC,WAAW,EAAC;IACzCC,UAAA,EAAY,MAAOC,YAAA;MAAA;MAAAxC,cAAA,GAAAC,CAAA;MACjB,MAAMsB,QAAA;MAAA;MAAA,CAAAvB,cAAA,GAAAE,CAAA,QAAW,MAAMsB,KAAA,CAAM,qBAAqBpB,OAAA,YAAmB,EAAE;QACrEqC,MAAA,EAAQ;QACRC,OAAA,EAAS;UAAE,gBAAgB;QAAmB;QAC9CC,IAAA,EAAMC,IAAA,CAAKC,SAAS,CAACL,YAAA;MACvB;MAAA;MAAAxC,cAAA,GAAAE,CAAA;MAEA,IAAI,CAACqB,QAAA,CAASE,EAAE,EAAE;QAAA;QAAAzB,cAAA,GAAA0B,CAAA;QAChB,MAAMoB,SAAA;QAAA;QAAA,CAAA9C,cAAA,GAAAE,CAAA,QAAY,MAAMqB,QAAA,CAASO,IAAI;QAAA;QAAA9B,cAAA,GAAAE,CAAA;QACrC,MAAM,IAAIyB,KAAA;QAAM;QAAA,CAAA3B,cAAA,GAAA0B,CAAA,UAAAoB,SAAA,CAAU9B,KAAK;QAAA;QAAA,CAAAhB,cAAA,GAAA0B,CAAA,UAAI,SAASH,QAAA,CAASK,MAAM,KAAKL,QAAA,CAASM,UAAU,EAAE;MACvF;MAAA;MAAA;QAAA7B,cAAA,GAAA0B,CAAA;MAAA;MAAA1B,cAAA,GAAAE,CAAA;MAEA,OAAOqB,QAAA,CAASO,IAAI;IACtB;IACAiB,SAAA,EAAWA,CAAA;MAAA;MAAA/C,cAAA,GAAAC,CAAA;MAAAD,cAAA,GAAAE,CAAA;MACTG,WAAA,CAAY2C,iBAAiB,CAAC;QAAE3B,QAAA,EAAU,CAAC,mBAAmBjB,OAAA;MAAS;MAAA;MAAAJ,cAAA,GAAAE,CAAA;MACvEG,WAAA,CAAY2C,iBAAiB,CAAC;QAAE3B,QAAA,EAAU,CAAC;MAAgB;MAAA;MAAArB,cAAA,GAAAE,CAAA;MAC3DG,WAAA,CAAY2C,iBAAiB,CAAC;QAAE3B,QAAA,EAAU,CAAC;MAAmB;MAAA;MAAArB,cAAA,GAAAE,CAAA;MAC9DO,gBAAA,CAAiB,EAAE;IACrB;EACF;EAEA;EACA,MAAMwC,4BAAA;EAAA;EAAA,CAAAjD,cAAA,GAAAE,CAAA,QAA+B,IAAAI,WAAA,CAAAgC,WAAW,EAAC;IAC/CC,UAAA,EAAY,MAAAA,CAAO;MAAEW,UAAU;MAAEtB,MAAM;MAAEuB;IAAK,CAI7C;MAAA;MAAAnD,cAAA,GAAAC,CAAA;MACC,MAAMsB,QAAA;MAAA;MAAA,CAAAvB,cAAA,GAAAE,CAAA,QAAW,MAAMsB,KAAA,CAAM,kCAAkC0B,UAAA,EAAY,EAAE;QAC3ET,MAAA,EAAQ;QACRC,OAAA,EAAS;UAAE,gBAAgB;QAAmB;QAC9CC,IAAA,EAAMC,IAAA,CAAKC,SAAS,CAAC;UAAEjB,MAAA;UAAQuB;QAAM;MACvC;MAAA;MAAAnD,cAAA,GAAAE,CAAA;MAEA,IAAI,CAACqB,QAAA,CAASE,EAAE,EAAE;QAAA;QAAAzB,cAAA,GAAA0B,CAAA;QAChB,MAAMoB,SAAA;QAAA;QAAA,CAAA9C,cAAA,GAAAE,CAAA,QAAY,MAAMqB,QAAA,CAASO,IAAI;QAAA;QAAA9B,cAAA,GAAAE,CAAA;QACrC,MAAM,IAAIyB,KAAA;QAAM;QAAA,CAAA3B,cAAA,GAAA0B,CAAA,UAAAoB,SAAA,CAAU9B,KAAK;QAAA;QAAA,CAAAhB,cAAA,GAAA0B,CAAA,UAAI,SAASH,QAAA,CAASK,MAAM,KAAKL,QAAA,CAASM,UAAU,EAAE;MACvF;MAAA;MAAA;QAAA7B,cAAA,GAAA0B,CAAA;MAAA;MAAA1B,cAAA,GAAAE,CAAA;MAEA,OAAOqB,QAAA,CAASO,IAAI;IACtB;IACAiB,SAAA,EAAWA,CAAA;MAAA;MAAA/C,cAAA,GAAAC,CAAA;MAAAD,cAAA,GAAAE,CAAA;MACTG,WAAA,CAAY2C,iBAAiB,CAAC;QAAE3B,QAAA,EAAU,CAAC,mBAAmBjB,OAAA;MAAS;MAAA;MAAAJ,cAAA,GAAAE,CAAA;MACvEG,WAAA,CAAY2C,iBAAiB,CAAC;QAAE3B,QAAA,EAAU,CAAC;MAAmB;IAChE;EACF;EAEA;EACA;EACA;EAEA,MAAM+B,cAAA;EAAA;EAAA,CAAApD,cAAA,GAAAE,CAAA,QAAiB,IAAAQ,MAAA,CAAA2C,WAAW,EAAEb,YAAA;IAAA;IAAAxC,cAAA,GAAAC,CAAA;IAAAD,cAAA,GAAAE,CAAA;IAClC,OAAOmC,sBAAA,CAAuBiB,WAAW,CAACd,YAAA;EAC5C,GAAG,CAACH,sBAAA,CAAuB;EAE3B,MAAMkB,oBAAA;EAAA;EAAA,CAAAvD,cAAA,GAAAE,CAAA,QAAuB,IAAAQ,MAAA,CAAA2C,WAAW,EAAC,CACvCH,UAAA,EACAtB,MAAA,EACAuB,KAAA;IAAA;IAAAnD,cAAA,GAAAC,CAAA;IAAAD,cAAA,GAAAE,CAAA;IAEA,OAAO+C,4BAAA,CAA6BK,WAAW,CAAC;MAAEJ,UAAA;MAAYtB,MAAA;MAAQuB;IAAM;EAC9E,GAAG,CAACF,4BAAA,CAA6B;EAEjC,MAAMO,mBAAA;EAAA;EAAA,CAAAxD,cAAA,GAAAE,CAAA,QAAsB,IAAAQ,MAAA,CAAA2C,WAAW,EAAEI,MAAA;IAAA;IAAAzD,cAAA,GAAAC,CAAA;IAAAD,cAAA,GAAAE,CAAA;IACvCO,gBAAA,CAAiBiD,IAAA,IACf;MAAA;MAAA1D,cAAA,GAAAC,CAAA;MAAAD,cAAA,GAAAE,CAAA;MAAA,OAAAwD,IAAA,CAAKC,QAAQ,CAACF,MAAA;MAAA;MAAA,CAAAzD,cAAA,GAAA0B,CAAA,UACVgC,IAAA,CAAKE,MAAM,CAACC,EAAA,IAAM;QAAA;QAAA7D,cAAA,GAAAC,CAAA;QAAAD,cAAA,GAAAE,CAAA;QAAA,OAAA2D,EAAA,KAAOJ,MAAA;MAAA;MAAA;MAAA,CAAAzD,cAAA,GAAA0B,CAAA,UACzB,C,GAAIgC,IAAA,EAAMD,MAAA,CAAO;KAAA;EAEzB,GAAG,EAAE;EAEL,MAAMK,cAAA;EAAA;EAAA,CAAA9D,cAAA,GAAAE,CAAA,QAAiB,IAAAQ,MAAA,CAAA2C,WAAW,EAAEU,OAAA;IAAA;IAAA/D,cAAA,GAAAC,CAAA;IAAAD,cAAA,GAAAE,CAAA;IAClCO,gBAAA,CAAiBsD,OAAA;EACnB,GAAG,EAAE;EAEL,MAAMC,cAAA;EAAA;EAAA,CAAAhE,cAAA,GAAAE,CAAA,QAAiB,IAAAQ,MAAA,CAAA2C,WAAW,EAAC;IAAA;IAAArD,cAAA,GAAAC,CAAA;IAAAD,cAAA,GAAAE,CAAA;IACjCO,gBAAA,CAAiB,EAAE;EACrB,GAAG,EAAE;EAEL;EACA;EACA;EAEA,MAAMwD,cAAA;EAAA;EAAA,CAAAjE,cAAA,GAAAE,CAAA,QAAiB;IACrBgE,cAAA;IAAgB;IAAA,CAAAlE,cAAA,GAAA0B,CAAA,UAAAb,aAAA,EAAeD,IAAA,EAAMuD,MAAA;IAAA;IAAA,CAAAnE,cAAA,GAAA0B,CAAA,UAAU;IAC/C0C,gBAAA;IAAkB;IAAA,CAAApE,cAAA,GAAA0B,CAAA,UAAAb,aAAA,EAAeD,IAAA,EAAMgD,MAAA,CAAQ1D,CAAA,IAAgB;MAAA;MAAAF,cAAA,GAAAC,CAAA;MAAAD,cAAA,GAAAE,CAAA;MAAA,OAAAA,CAAA,CAAE0B,MAAM,KAAK;IAAA,GAAWuC,MAAA;IAAA;IAAA,CAAAnE,cAAA,GAAA0B,CAAA,UAAU;IACjG2C,kBAAA;IAAoB;IAAA,CAAArE,cAAA,GAAA0B,CAAA,UAAAb,aAAA,EAAeD,IAAA,EAAMgD,MAAA,CAAQ1D,CAAA,IAAgB;MAAA;MAAAF,cAAA,GAAAC,CAAA;MAAAD,cAAA,GAAAE,CAAA;MAAA,OAAAA,CAAA,CAAE0B,MAAM,KAAK;IAAA,GAAcuC,MAAA;IAAA;IAAA,CAAAnE,cAAA,GAAA0B,CAAA,UAAU;IACtG4C,kBAAA;IAAoB;IAAA,CAAAtE,cAAA,GAAA0B,CAAA,WAAAb,aAAA,EAAeD,IAAA,EAAMgD,MAAA,CAAQ1D,CAAA,IAAgB;MAAA;MAAAF,cAAA,GAAAC,CAAA;MAAAD,cAAA,GAAAE,CAAA;MAAA,OAAAA,CAAA,CAAE0B,MAAM,KAAK;IAAA,GAAauC,MAAA;IAAA;IAAA,CAAAnE,cAAA,GAAA0B,CAAA,WAAU;IAErG6C,YAAA,EAAc;IAAC;IAAA,CAAAvE,cAAA,GAAA0B,CAAA,WAAAb,aAAA,EAAeD,IAAA,EAAMuD,MAAA;IAAA;IAAA,CAAAnE,cAAA,GAAA0B,CAAA,WAAU,MAAK;IACnD8C,iBAAA,EAAmBhE,aAAA,CAAc2D,MAAM,GAAG;IAE1CM,iBAAA;IAAmB;IAAA,CAAAzE,cAAA,GAAA0B,CAAA,WAAAQ,YAAA,EAActB,IAAA;IAAA;IAAA,CAAAZ,cAAA,GAAA0B,CAAA,WAAQ,EAAE;IAC3CgD,kBAAA,EAAoBlE,aAAA,CAAc2D;EACpC;EAEA;EACA;EACA;EAAA;EAAAnE,cAAA,GAAAE,CAAA;EAEA,OAAO;IACL;IACAyE,SAAA;IAAW;IAAA,CAAA3E,cAAA,GAAA0B,CAAA,WAAAb,aAAA,EAAeD,IAAA;IAAA;IAAA,CAAAZ,cAAA,GAAA0B,CAAA,WAAQ,EAAE;IACpCkD,QAAA;IAAU;IAAA,CAAA5E,cAAA,GAAA0B,CAAA,WAAAQ,YAAA,EAActB,IAAA;IAAA;IAAA,CAAAZ,cAAA,GAAA0B,CAAA,WAAQ,EAAE;IAElC;IACAZ,SAAA;IAAW;IAAA,CAAAd,cAAA,GAAA0B,CAAA,WAAAX,gBAAA;IAAA;IAAA,CAAAf,cAAA,GAAA0B,CAAA,WAAoBS,eAAA;IAC/B0C,kBAAA,EAAoB9D,gBAAA;IACpB+D,iBAAA,EAAmB3C,eAAA;IAEnB;IACAnB,KAAA;IAAO;IAAA,CAAAhB,cAAA,GAAA0B,CAAA,WAAAT,cAAA;IAAA;IAAA,CAAAjB,cAAA,GAAA0B,CAAA,WAAkBU,aAAA;IACzBnB,cAAA;IACAmB,aAAA;IAEA;IACAgB,cAAA;IACAG,oBAAA;IACApC,gBAAA;IAEA;IACAX,aAAA;IACAgD,mBAAA;IACAM,cAAA;IACAE,cAAA;IAEA;IACAe,kBAAA,EAAoB1C,sBAAA,CAAuB2C,SAAS;IACpDC,gBAAA,EAAkBhC,4BAAA,CAA6B+B,SAAS;IAExD;IACAf,cAAA;IAEA;IACAiB,oBAAA,EAAuBtD,MAAA,IACrB;MAAA;MAAA5B,cAAA,GAAAC,CAAA;MAAAD,cAAA,GAAAE,CAAA;MAAA,kCAAAF,cAAA,GAAA0B,CAAA,WAAAb,aAAA,EAAeD,IAAA,EAAMgD,MAAA,CAAQ1D,CAAA,IAAgB;QAAA;QAAAF,cAAA,GAAAC,CAAA;QAAAD,cAAA,GAAAE,CAAA;QAAA,OAAAA,CAAA,CAAE0B,MAAM,KAAKA,MAAA;MAAA;MAAA;MAAA,CAAA5B,cAAA,GAAA0B,CAAA,WAAW,EAAE;IAAF,CAAE;IAEzEyD,sBAAA,EAAyBC,QAAA,IACvB;MAAA;MAAApF,cAAA,GAAAC,CAAA;MAAAD,cAAA,GAAAE,CAAA;MAAA,kCAAAF,cAAA,GAAA0B,CAAA,WAAA0D,QAAA,CAASC,eAAe,GAAG,EAAE;MAAA;MAAA,CAAArF,cAAA,GAAA0B,CAAA,WAAI;IAAA;IAEnC4D,YAAA,EAAevB,OAAA,IAAsB;MAAA;MAAA/D,cAAA,GAAAC,CAAA;MAAAD,cAAA,GAAAE,CAAA;MAAA,OAAA6D,OAAA,CAAQI,MAAM,GAAG;IAAA;IAEtDoB,mBAAA,EAAsBH,QAAA;MAAA;MAAApF,cAAA,GAAAC,CAAA;MACpB,MAAMuF,WAAA;MAAA;MAAA,CAAAxF,cAAA,GAAAE,CAAA,QAAc,CAAC,WAAW,aAAa,aAAa,cAAc,oBAAoB,YAAY;MACxG,MAAMuF,YAAA;MAAA;MAAA,CAAAzF,cAAA,GAAAE,CAAA,QAAesF,WAAA,CAAYE,OAAO,CAACN,QAAA,CAASxD,MAAM;MAAA;MAAA5B,cAAA,GAAAE,CAAA;MACxD,OAAOuF,YAAA,IAAgB;MAAA;MAAA,CAAAzF,cAAA,GAAA0B,CAAA,WAAI,CAAE+D,YAAA,GAAe,KAAKD,WAAA,CAAYrB,MAAM,GAAI;MAAA;MAAA,CAAAnE,cAAA,GAAA0B,CAAA,WAAM;IAC/E;EACF;AACF;AAMO,SAASvB,oBAAoB+C,UAAkB;EAAA;EAAAlD,cAAA,GAAAC,CAAA;EACpD,MAAM;IACJW,IAAA,EAAM+E,YAAY;IAClB7E,SAAS;IACTE,KAAK;IACLE;EAAO,CACR;EAAA;EAAA,CAAAlB,cAAA,GAAAE,CAAA,QAAG,IAAAI,WAAA,CAAAc,QAAQ,EAAC;IACXC,QAAA,EAAU,CAAC,qBAAqB6B,UAAA,CAAW;IAC3C5B,OAAA,EAAS,MAAAA,CAAA;MAAA;MAAAtB,cAAA,GAAAC,CAAA;MACP,MAAMsB,QAAA;MAAA;MAAA,CAAAvB,cAAA,GAAAE,CAAA,QAAW,MAAMsB,KAAA,CAAM,iCAAiC0B,UAAA,EAAY;MAAA;MAAAlD,cAAA,GAAAE,CAAA;MAC1E,IAAI,CAACqB,QAAA,CAASE,EAAE,EAAE;QAAA;QAAAzB,cAAA,GAAA0B,CAAA;QAAA1B,cAAA,GAAAE,CAAA;QAChB,MAAM,IAAIyB,KAAA,CAAM,SAASJ,QAAA,CAASK,MAAM,KAAKL,QAAA,CAASM,UAAU,EAAE;MACpE;MAAA;MAAA;QAAA7B,cAAA,GAAA0B,CAAA;MAAA;MAAA1B,cAAA,GAAAE,CAAA;MACA,OAAOqB,QAAA,CAASO,IAAI;IACtB;IACAC,OAAA,EAAS,CAAC,CAACmB,UAAA;IACX0C,eAAA,EAAiB;IACjB5D,SAAA,EAAW;IACXC,oBAAA,EAAsB;EACxB;EAAA;EAAAjC,cAAA,GAAAE,CAAA;EAEA,OAAO;IACL2F,cAAA;IAAgB;IAAA,CAAA7F,cAAA,GAAA0B,CAAA,WAAAiE,YAAA,EAAc/E,IAAA;IAAA;IAAA,CAAAZ,cAAA,GAAA0B,CAAA,WAAQ,EAAE;IACxCZ,SAAA;IACAE,KAAA;IACAE,OAAA;IAEA4E,WAAA;IAAa;IAAA,CAAA9F,cAAA,GAAA0B,CAAA,WAAAiE,YAAA,EAAc/E,IAAA,GAAO,EAAE;IAAA;IAAA,CAAAZ,cAAA,GAAA0B,CAAA,WAAI;IACxCqE,WAAA,EAAaJ,YAAA,EAAc/E,IAAA,GAAO,EAAE,EAAEgB,MAAA,KAAW;IACjDoE,WAAA,EAAa,CAAC,cAAc,mBAAmB,CAACrC,QAAQ,CAACgC,YAAA,EAAc/E,IAAA,GAAO,EAAE,EAAEgB,MAAA;IAClFqE,YAAA,EAAcN,YAAA,EAAc/E,IAAA,GAAO,EAAE,EAAEgB,MAAA,KAAW;EACpD;AACF","ignoreList":[]}