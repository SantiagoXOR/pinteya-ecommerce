afd73a29c1fffff3f7ca0fa9922ebe31
/**
 * Microinteractions Test Ultra-Simplificado
 * Sin dependencias complejas - Solo microinteracciones básicas
 */ "use strict";
// Mock completo del Header para microinteracciones
jest.mock('../index', ()=>{
    return function MockHeaderMicrointeractions() {
        const [searchFocused, setSearchFocused] = _react.default.useState(false);
        const [cartHovered, setCartHovered] = _react.default.useState(false);
        const [menuAnimating, setMenuAnimating] = _react.default.useState(false);
        const [searchValue, setSearchValue] = _react.default.useState('');
        const [cartCount, setCartCount] = _react.default.useState(0);
        const handleSearchFocus = ()=>{
            setSearchFocused(true);
        };
        const handleSearchBlur = ()=>{
            setSearchFocused(false);
        };
        const handleCartHover = ()=>{
            setCartHovered(true);
        };
        const handleCartLeave = ()=>{
            setCartHovered(false);
        };
        const handleMenuToggle = ()=>{
            setMenuAnimating(true);
            setTimeout(()=>setMenuAnimating(false), 300);
        };
        return /*#__PURE__*/ (0, _jsxruntime.jsxs)("header", {
            role: "banner",
            "data-testid": "header-microinteractions",
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    "data-testid": "search-microinteraction",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                            role: "searchbox",
                            "aria-label": "Buscar productos",
                            value: searchValue,
                            onChange: (e)=>setSearchValue(e.target.value),
                            onFocus: handleSearchFocus,
                            onBlur: handleSearchBlur,
                            className: `transition-all duration-200 ${searchFocused ? 'ring-2 ring-blue-500' : ''}`,
                            placeholder: "Buscar productos..."
                        }),
                        searchFocused && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            "data-testid": "search-focus-indicator",
                            className: "search-focused",
                            children: "Campo enfocado"
                        })
                    ]
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    "data-testid": "cart-microinteraction",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("button", {
                            onMouseEnter: handleCartHover,
                            onMouseLeave: handleCartLeave,
                            onClick: ()=>setCartCount((prev)=>prev + 1),
                            className: `transition-transform duration-200 ${cartHovered ? 'scale-110' : 'scale-100'}`,
                            "aria-label": `Carrito con ${cartCount} productos`,
                            children: [
                                "\uD83D\uDED2 ",
                                cartCount
                            ]
                        }),
                        cartHovered && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            "data-testid": "cart-hover-tooltip",
                            className: "tooltip",
                            children: "Ver carrito"
                        })
                    ]
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    "data-testid": "menu-microinteraction",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                            onClick: handleMenuToggle,
                            className: `transition-all duration-300 ${menuAnimating ? 'rotate-90' : 'rotate-0'}`,
                            disabled: menuAnimating,
                            children: "☰"
                        }),
                        menuAnimating && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            "data-testid": "menu-animating",
                            className: "animating",
                            children: "Animando..."
                        })
                    ]
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    "data-testid": "interactive-elements",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                            className: "hover:bg-blue-500 transition-colors duration-150",
                            onMouseEnter: (e)=>e.target.style.backgroundColor = '#3b82f6',
                            onMouseLeave: (e)=>e.target.style.backgroundColor = '',
                            children: "Hover Effect"
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                            className: "active:scale-95 transition-transform duration-100",
                            onMouseDown: (e)=>e.target.style.transform = 'scale(0.95)',
                            onMouseUp: (e)=>e.target.style.transform = 'scale(1)',
                            children: "Click Effect"
                        })
                    ]
                })
            ]
        });
    };
});
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_default(require("react"));
const _react1 = require("@testing-library/react");
const _index = /*#__PURE__*/ _interop_require_default(require("../index"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
describe('Microinteractions - Ultra-Simplified Tests', ()=>{
    beforeEach(()=>{
        jest.clearAllMocks();
    });
    describe('Search Microinteractions', ()=>{
        it('debe mostrar indicador de focus', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const searchInput = _react1.screen.getByRole('searchbox');
            // No debe estar enfocado inicialmente
            expect(_react1.screen.queryByTestId('search-focus-indicator')).not.toBeInTheDocument();
            // Focus debe mostrar indicador
            _react1.fireEvent.focus(searchInput);
            expect(_react1.screen.getByTestId('search-focus-indicator')).toBeInTheDocument();
            expect(_react1.screen.getByText('Campo enfocado')).toBeInTheDocument();
        });
        it('debe ocultar indicador al perder focus', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const searchInput = _react1.screen.getByRole('searchbox');
            // Focus y luego blur
            _react1.fireEvent.focus(searchInput);
            expect(_react1.screen.getByTestId('search-focus-indicator')).toBeInTheDocument();
            _react1.fireEvent.blur(searchInput);
            expect(_react1.screen.queryByTestId('search-focus-indicator')).not.toBeInTheDocument();
        });
        it('debe aplicar clases de transición', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const searchInput = _react1.screen.getByRole('searchbox');
            expect(searchInput).toHaveClass('transition-all', 'duration-200');
        });
        it('debe aplicar estilos de focus', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const searchInput = _react1.screen.getByRole('searchbox');
            _react1.fireEvent.focus(searchInput);
            expect(searchInput).toHaveClass('ring-2', 'ring-blue-500');
        });
    });
    describe('Cart Microinteractions', ()=>{
        it('debe mostrar tooltip al hacer hover', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const cartButton = _react1.screen.getByLabelText(/Carrito con \d+ productos/);
            // No debe mostrar tooltip inicialmente
            expect(_react1.screen.queryByTestId('cart-hover-tooltip')).not.toBeInTheDocument();
            // Hover debe mostrar tooltip
            _react1.fireEvent.mouseEnter(cartButton);
            expect(_react1.screen.getByTestId('cart-hover-tooltip')).toBeInTheDocument();
            expect(_react1.screen.getByText('Ver carrito')).toBeInTheDocument();
        });
        it('debe ocultar tooltip al salir del hover', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const cartButton = _react1.screen.getByLabelText(/Carrito con \d+ productos/);
            // Hover y luego leave
            _react1.fireEvent.mouseEnter(cartButton);
            expect(_react1.screen.getByTestId('cart-hover-tooltip')).toBeInTheDocument();
            _react1.fireEvent.mouseLeave(cartButton);
            expect(_react1.screen.queryByTestId('cart-hover-tooltip')).not.toBeInTheDocument();
        });
        it('debe aplicar transformación de escala', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const cartButton = _react1.screen.getByLabelText(/Carrito con \d+ productos/);
            expect(cartButton).toHaveClass('transition-transform', 'duration-200');
            // Hover debe cambiar escala
            _react1.fireEvent.mouseEnter(cartButton);
            expect(cartButton).toHaveClass('scale-110');
            _react1.fireEvent.mouseLeave(cartButton);
            expect(cartButton).toHaveClass('scale-100');
        });
        it('debe incrementar contador al hacer click', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const cartButton = _react1.screen.getByLabelText(/Carrito con 0 productos/);
            _react1.fireEvent.click(cartButton);
            expect(_react1.screen.getByLabelText(/Carrito con 1 productos/)).toBeInTheDocument();
        });
    });
    describe('Menu Microinteractions', ()=>{
        it('debe mostrar animación al hacer click', async ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const menuButton = _react1.screen.getByText('☰');
            // No debe estar animando inicialmente
            expect(_react1.screen.queryByTestId('menu-animating')).not.toBeInTheDocument();
            // Click debe iniciar animación
            _react1.fireEvent.click(menuButton);
            expect(_react1.screen.getByTestId('menu-animating')).toBeInTheDocument();
            expect(_react1.screen.getByText('Animando...')).toBeInTheDocument();
        });
        it('debe aplicar rotación durante animación', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const menuButton = _react1.screen.getByText('☰');
            expect(menuButton).toHaveClass('transition-all', 'duration-300');
            _react1.fireEvent.click(menuButton);
            expect(menuButton).toHaveClass('rotate-90');
        });
        it('debe deshabilitar botón durante animación', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const menuButton = _react1.screen.getByText('☰');
            expect(menuButton).not.toBeDisabled();
            _react1.fireEvent.click(menuButton);
            expect(menuButton).toBeDisabled();
        });
        it('debe terminar animación después del timeout', async ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const menuButton = _react1.screen.getByText('☰');
            _react1.fireEvent.click(menuButton);
            expect(_react1.screen.getByTestId('menu-animating')).toBeInTheDocument();
            // Esperar que termine la animación
            await (0, _react1.waitFor)(()=>{
                expect(_react1.screen.queryByTestId('menu-animating')).not.toBeInTheDocument();
            }, {
                timeout: 500
            });
        });
    });
    describe('Interactive Elements', ()=>{
        it('debe aplicar efectos hover', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const hoverButton = _react1.screen.getByText('Hover Effect');
            expect(hoverButton).toHaveClass('hover:bg-blue-500', 'transition-colors');
        });
        it('debe aplicar efectos de click', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const clickButton = _react1.screen.getByText('Click Effect');
            expect(clickButton).toHaveClass('active:scale-95', 'transition-transform');
        });
        it('debe manejar eventos de mouse', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const hoverButton = _react1.screen.getByText('Hover Effect');
            // Simular hover
            _react1.fireEvent.mouseEnter(hoverButton);
            expect(hoverButton.style.backgroundColor).toBe('rgb(59, 130, 246)');
            _react1.fireEvent.mouseLeave(hoverButton);
            expect(hoverButton.style.backgroundColor).toBe('');
        });
        it('debe manejar eventos de click', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const clickButton = _react1.screen.getByText('Click Effect');
            // Simular click
            _react1.fireEvent.mouseDown(clickButton);
            expect(clickButton.style.transform).toBe('scale(0.95)');
            _react1.fireEvent.mouseUp(clickButton);
            expect(clickButton.style.transform).toBe('scale(1)');
        });
    });
    describe('Accesibilidad de Microinteractions', ()=>{
        it('debe mantener accesibilidad durante animaciones', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const searchInput = _react1.screen.getByRole('searchbox');
            const cartButton = _react1.screen.getByLabelText(/Carrito con \d+ productos/);
            // Focus debe funcionar con animaciones
            searchInput.focus();
            expect(document.activeElement).toBe(searchInput);
            // Verificar que tiene clases de transición
            expect(searchInput).toHaveClass('transition-all');
            // Click debe funcionar con animaciones
            _react1.fireEvent.click(cartButton);
            expect(_react1.screen.getByLabelText(/Carrito con 1 productos/)).toBeInTheDocument();
        });
        it('debe mantener labels durante interacciones', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const searchInput = _react1.screen.getByRole('searchbox');
            const cartButton = _react1.screen.getByLabelText(/Carrito con \d+ productos/);
            // Labels deben mantenerse durante focus
            _react1.fireEvent.focus(searchInput);
            expect(searchInput).toHaveAttribute('aria-label', 'Buscar productos');
            // Labels deben actualizarse correctamente
            _react1.fireEvent.click(cartButton);
            expect(_react1.screen.getByLabelText(/Carrito con 1 productos/)).toBeInTheDocument();
        });
        it('debe ser navegable por teclado', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const searchInput = _react1.screen.getByRole('searchbox');
            const menuButton = _react1.screen.getByText('☰');
            // Tab navigation debe funcionar
            searchInput.focus();
            expect(document.activeElement).toBe(searchInput);
            menuButton.focus();
            expect(document.activeElement).toBe(menuButton);
        });
    });
    describe('Performance de Microinteractions', ()=>{
        it('debe ejecutar animaciones rápidamente', ()=>{
            const startTime = performance.now();
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const searchInput = _react1.screen.getByRole('searchbox');
            _react1.fireEvent.focus(searchInput);
            const endTime = performance.now();
            const executionTime = endTime - startTime;
            expect(executionTime).toBeLessThan(50); // 50ms threshold
        });
        it('debe manejar múltiples interacciones simultáneamente', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const searchInput = _react1.screen.getByRole('searchbox');
            const cartButton = _react1.screen.getByLabelText(/Carrito con \d+ productos/);
            const menuButton = _react1.screen.getByText('☰');
            // Múltiples interacciones
            _react1.fireEvent.focus(searchInput);
            _react1.fireEvent.mouseEnter(cartButton);
            _react1.fireEvent.click(menuButton);
            // Todo debe funcionar correctamente
            expect(_react1.screen.getByTestId('search-focus-indicator')).toBeInTheDocument();
            expect(_react1.screen.getByTestId('cart-hover-tooltip')).toBeInTheDocument();
            expect(_react1.screen.getByTestId('menu-animating')).toBeInTheDocument();
        });
    });
    describe('Estados de Microinteractions', ()=>{
        it('debe mantener estados independientes', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const searchInput = _react1.screen.getByRole('searchbox');
            const cartButton = _react1.screen.getByLabelText(/Carrito con \d+ productos/);
            // Activar múltiples estados
            _react1.fireEvent.focus(searchInput);
            _react1.fireEvent.mouseEnter(cartButton);
            // Estados deben ser independientes
            expect(_react1.screen.getByTestId('search-focus-indicator')).toBeInTheDocument();
            expect(_react1.screen.getByTestId('cart-hover-tooltip')).toBeInTheDocument();
            // Desactivar uno no debe afectar el otro
            _react1.fireEvent.blur(searchInput);
            expect(_react1.screen.queryByTestId('search-focus-indicator')).not.toBeInTheDocument();
            expect(_react1.screen.getByTestId('cart-hover-tooltip')).toBeInTheDocument();
        });
        it('debe resetear estados correctamente', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const searchInput = _react1.screen.getByRole('searchbox');
            const cartButton = _react1.screen.getByLabelText(/Carrito con \d+ productos/);
            // Activar estados
            _react1.fireEvent.focus(searchInput);
            _react1.fireEvent.mouseEnter(cartButton);
            // Resetear todos
            _react1.fireEvent.blur(searchInput);
            _react1.fireEvent.mouseLeave(cartButton);
            // No debe haber estados activos
            expect(_react1.screen.queryByTestId('search-focus-indicator')).not.toBeInTheDocument();
            expect(_react1.screen.queryByTestId('cart-hover-tooltip')).not.toBeInTheDocument();
        });
    });
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbWFydGlcXERlc2t0b3BcXERFU0FSUk9MTE9TV1xcQk9JTEVSUExBVFRFIEUtQ09NTUVSQ0VcXHNyY1xcY29tcG9uZW50c1xcSGVhZGVyXFxfX3Rlc3RzX19cXG1pY3JvaW50ZXJhY3Rpb25zLnRlc3QudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBNaWNyb2ludGVyYWN0aW9ucyBUZXN0IFVsdHJhLVNpbXBsaWZpY2Fkb1xyXG4gKiBTaW4gZGVwZW5kZW5jaWFzIGNvbXBsZWphcyAtIFNvbG8gbWljcm9pbnRlcmFjY2lvbmVzIGLDoXNpY2FzXHJcbiAqL1xyXG5cclxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xyXG5pbXBvcnQgeyByZW5kZXIsIHNjcmVlbiwgZmlyZUV2ZW50LCB3YWl0Rm9yIH0gZnJvbSAnQHRlc3RpbmctbGlicmFyeS9yZWFjdCdcclxuXHJcbi8vIE1vY2sgY29tcGxldG8gZGVsIEhlYWRlciBwYXJhIG1pY3JvaW50ZXJhY2Npb25lc1xyXG5qZXN0Lm1vY2soJy4uL2luZGV4JywgKCkgPT4ge1xyXG4gIHJldHVybiBmdW5jdGlvbiBNb2NrSGVhZGVyTWljcm9pbnRlcmFjdGlvbnMoKSB7XHJcbiAgICBjb25zdCBbc2VhcmNoRm9jdXNlZCwgc2V0U2VhcmNoRm9jdXNlZF0gPSBSZWFjdC51c2VTdGF0ZShmYWxzZSlcclxuICAgIGNvbnN0IFtjYXJ0SG92ZXJlZCwgc2V0Q2FydEhvdmVyZWRdID0gUmVhY3QudXNlU3RhdGUoZmFsc2UpXHJcbiAgICBjb25zdCBbbWVudUFuaW1hdGluZywgc2V0TWVudUFuaW1hdGluZ10gPSBSZWFjdC51c2VTdGF0ZShmYWxzZSlcclxuICAgIGNvbnN0IFtzZWFyY2hWYWx1ZSwgc2V0U2VhcmNoVmFsdWVdID0gUmVhY3QudXNlU3RhdGUoJycpXHJcbiAgICBjb25zdCBbY2FydENvdW50LCBzZXRDYXJ0Q291bnRdID0gUmVhY3QudXNlU3RhdGUoMClcclxuICAgIFxyXG4gICAgY29uc3QgaGFuZGxlU2VhcmNoRm9jdXMgPSAoKSA9PiB7XHJcbiAgICAgIHNldFNlYXJjaEZvY3VzZWQodHJ1ZSlcclxuICAgIH1cclxuICAgIFxyXG4gICAgY29uc3QgaGFuZGxlU2VhcmNoQmx1ciA9ICgpID0+IHtcclxuICAgICAgc2V0U2VhcmNoRm9jdXNlZChmYWxzZSlcclxuICAgIH1cclxuICAgIFxyXG4gICAgY29uc3QgaGFuZGxlQ2FydEhvdmVyID0gKCkgPT4ge1xyXG4gICAgICBzZXRDYXJ0SG92ZXJlZCh0cnVlKVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICBjb25zdCBoYW5kbGVDYXJ0TGVhdmUgPSAoKSA9PiB7XHJcbiAgICAgIHNldENhcnRIb3ZlcmVkKGZhbHNlKVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICBjb25zdCBoYW5kbGVNZW51VG9nZ2xlID0gKCkgPT4ge1xyXG4gICAgICBzZXRNZW51QW5pbWF0aW5nKHRydWUpXHJcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4gc2V0TWVudUFuaW1hdGluZyhmYWxzZSksIDMwMClcclxuICAgIH1cclxuICAgIFxyXG4gICAgcmV0dXJuIChcclxuICAgICAgPGhlYWRlciByb2xlPVwiYmFubmVyXCIgZGF0YS10ZXN0aWQ9XCJoZWFkZXItbWljcm9pbnRlcmFjdGlvbnNcIj5cclxuICAgICAgICA8ZGl2IGRhdGEtdGVzdGlkPVwic2VhcmNoLW1pY3JvaW50ZXJhY3Rpb25cIj5cclxuICAgICAgICAgIDxpbnB1dCBcclxuICAgICAgICAgICAgcm9sZT1cInNlYXJjaGJveFwiXHJcbiAgICAgICAgICAgIGFyaWEtbGFiZWw9XCJCdXNjYXIgcHJvZHVjdG9zXCJcclxuICAgICAgICAgICAgdmFsdWU9e3NlYXJjaFZhbHVlfVxyXG4gICAgICAgICAgICBvbkNoYW5nZT17KGUpID0+IHNldFNlYXJjaFZhbHVlKGUudGFyZ2V0LnZhbHVlKX1cclxuICAgICAgICAgICAgb25Gb2N1cz17aGFuZGxlU2VhcmNoRm9jdXN9XHJcbiAgICAgICAgICAgIG9uQmx1cj17aGFuZGxlU2VhcmNoQmx1cn1cclxuICAgICAgICAgICAgY2xhc3NOYW1lPXtgdHJhbnNpdGlvbi1hbGwgZHVyYXRpb24tMjAwICR7c2VhcmNoRm9jdXNlZCA/ICdyaW5nLTIgcmluZy1ibHVlLTUwMCcgOiAnJ31gfVxyXG4gICAgICAgICAgICBwbGFjZWhvbGRlcj1cIkJ1c2NhciBwcm9kdWN0b3MuLi5cIlxyXG4gICAgICAgICAgLz5cclxuICAgICAgICAgIHtzZWFyY2hGb2N1c2VkICYmIChcclxuICAgICAgICAgICAgPGRpdiBkYXRhLXRlc3RpZD1cInNlYXJjaC1mb2N1cy1pbmRpY2F0b3JcIiBjbGFzc05hbWU9XCJzZWFyY2gtZm9jdXNlZFwiPlxyXG4gICAgICAgICAgICAgIENhbXBvIGVuZm9jYWRvXHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgKX1cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgICBcclxuICAgICAgICA8ZGl2IGRhdGEtdGVzdGlkPVwiY2FydC1taWNyb2ludGVyYWN0aW9uXCI+XHJcbiAgICAgICAgICA8YnV0dG9uIFxyXG4gICAgICAgICAgICBvbk1vdXNlRW50ZXI9e2hhbmRsZUNhcnRIb3Zlcn1cclxuICAgICAgICAgICAgb25Nb3VzZUxlYXZlPXtoYW5kbGVDYXJ0TGVhdmV9XHJcbiAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHNldENhcnRDb3VudChwcmV2ID0+IHByZXYgKyAxKX1cclxuICAgICAgICAgICAgY2xhc3NOYW1lPXtgdHJhbnNpdGlvbi10cmFuc2Zvcm0gZHVyYXRpb24tMjAwICR7Y2FydEhvdmVyZWQgPyAnc2NhbGUtMTEwJyA6ICdzY2FsZS0xMDAnfWB9XHJcbiAgICAgICAgICAgIGFyaWEtbGFiZWw9e2BDYXJyaXRvIGNvbiAke2NhcnRDb3VudH0gcHJvZHVjdG9zYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAg8J+bkiB7Y2FydENvdW50fVxyXG4gICAgICAgICAgPC9idXR0b24+XHJcbiAgICAgICAgICB7Y2FydEhvdmVyZWQgJiYgKFxyXG4gICAgICAgICAgICA8ZGl2IGRhdGEtdGVzdGlkPVwiY2FydC1ob3Zlci10b29sdGlwXCIgY2xhc3NOYW1lPVwidG9vbHRpcFwiPlxyXG4gICAgICAgICAgICAgIFZlciBjYXJyaXRvXHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgKX1cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgICBcclxuICAgICAgICA8ZGl2IGRhdGEtdGVzdGlkPVwibWVudS1taWNyb2ludGVyYWN0aW9uXCI+XHJcbiAgICAgICAgICA8YnV0dG9uIFxyXG4gICAgICAgICAgICBvbkNsaWNrPXtoYW5kbGVNZW51VG9nZ2xlfVxyXG4gICAgICAgICAgICBjbGFzc05hbWU9e2B0cmFuc2l0aW9uLWFsbCBkdXJhdGlvbi0zMDAgJHttZW51QW5pbWF0aW5nID8gJ3JvdGF0ZS05MCcgOiAncm90YXRlLTAnfWB9XHJcbiAgICAgICAgICAgIGRpc2FibGVkPXttZW51QW5pbWF0aW5nfVxyXG4gICAgICAgICAgPlxyXG4gICAgICAgICAgICDimLBcclxuICAgICAgICAgIDwvYnV0dG9uPlxyXG4gICAgICAgICAge21lbnVBbmltYXRpbmcgJiYgKFxyXG4gICAgICAgICAgICA8ZGl2IGRhdGEtdGVzdGlkPVwibWVudS1hbmltYXRpbmdcIiBjbGFzc05hbWU9XCJhbmltYXRpbmdcIj5cclxuICAgICAgICAgICAgICBBbmltYW5kby4uLlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICl9XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgXHJcbiAgICAgICAgPGRpdiBkYXRhLXRlc3RpZD1cImludGVyYWN0aXZlLWVsZW1lbnRzXCI+XHJcbiAgICAgICAgICA8YnV0dG9uIFxyXG4gICAgICAgICAgICBjbGFzc05hbWU9XCJob3ZlcjpiZy1ibHVlLTUwMCB0cmFuc2l0aW9uLWNvbG9ycyBkdXJhdGlvbi0xNTBcIlxyXG4gICAgICAgICAgICBvbk1vdXNlRW50ZXI9eyhlKSA9PiBlLnRhcmdldC5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAnIzNiODJmNid9XHJcbiAgICAgICAgICAgIG9uTW91c2VMZWF2ZT17KGUpID0+IGUudGFyZ2V0LnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICcnfVxyXG4gICAgICAgICAgPlxyXG4gICAgICAgICAgICBIb3ZlciBFZmZlY3RcclxuICAgICAgICAgIDwvYnV0dG9uPlxyXG4gICAgICAgICAgXHJcbiAgICAgICAgICA8YnV0dG9uIFxyXG4gICAgICAgICAgICBjbGFzc05hbWU9XCJhY3RpdmU6c2NhbGUtOTUgdHJhbnNpdGlvbi10cmFuc2Zvcm0gZHVyYXRpb24tMTAwXCJcclxuICAgICAgICAgICAgb25Nb3VzZURvd249eyhlKSA9PiBlLnRhcmdldC5zdHlsZS50cmFuc2Zvcm0gPSAnc2NhbGUoMC45NSknfVxyXG4gICAgICAgICAgICBvbk1vdXNlVXA9eyhlKSA9PiBlLnRhcmdldC5zdHlsZS50cmFuc2Zvcm0gPSAnc2NhbGUoMSknfVxyXG4gICAgICAgICAgPlxyXG4gICAgICAgICAgICBDbGljayBFZmZlY3RcclxuICAgICAgICAgIDwvYnV0dG9uPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L2hlYWRlcj5cclxuICAgIClcclxuICB9XHJcbn0pXHJcblxyXG5pbXBvcnQgSGVhZGVyIGZyb20gJy4uL2luZGV4J1xyXG5cclxuZGVzY3JpYmUoJ01pY3JvaW50ZXJhY3Rpb25zIC0gVWx0cmEtU2ltcGxpZmllZCBUZXN0cycsICgpID0+IHtcclxuICBiZWZvcmVFYWNoKCgpID0+IHtcclxuICAgIGplc3QuY2xlYXJBbGxNb2NrcygpXHJcbiAgfSlcclxuXHJcbiAgZGVzY3JpYmUoJ1NlYXJjaCBNaWNyb2ludGVyYWN0aW9ucycsICgpID0+IHtcclxuICAgIGl0KCdkZWJlIG1vc3RyYXIgaW5kaWNhZG9yIGRlIGZvY3VzJywgKCkgPT4ge1xyXG4gICAgICByZW5kZXIoPEhlYWRlciAvPilcclxuICAgICAgXHJcbiAgICAgIGNvbnN0IHNlYXJjaElucHV0ID0gc2NyZWVuLmdldEJ5Um9sZSgnc2VhcmNoYm94JylcclxuICAgICAgXHJcbiAgICAgIC8vIE5vIGRlYmUgZXN0YXIgZW5mb2NhZG8gaW5pY2lhbG1lbnRlXHJcbiAgICAgIGV4cGVjdChzY3JlZW4ucXVlcnlCeVRlc3RJZCgnc2VhcmNoLWZvY3VzLWluZGljYXRvcicpKS5ub3QudG9CZUluVGhlRG9jdW1lbnQoKVxyXG4gICAgICBcclxuICAgICAgLy8gRm9jdXMgZGViZSBtb3N0cmFyIGluZGljYWRvclxyXG4gICAgICBmaXJlRXZlbnQuZm9jdXMoc2VhcmNoSW5wdXQpXHJcbiAgICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXN0SWQoJ3NlYXJjaC1mb2N1cy1pbmRpY2F0b3InKSkudG9CZUluVGhlRG9jdW1lbnQoKVxyXG4gICAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGV4dCgnQ2FtcG8gZW5mb2NhZG8nKSkudG9CZUluVGhlRG9jdW1lbnQoKVxyXG4gICAgfSlcclxuXHJcbiAgICBpdCgnZGViZSBvY3VsdGFyIGluZGljYWRvciBhbCBwZXJkZXIgZm9jdXMnLCAoKSA9PiB7XHJcbiAgICAgIHJlbmRlcig8SGVhZGVyIC8+KVxyXG4gICAgICBcclxuICAgICAgY29uc3Qgc2VhcmNoSW5wdXQgPSBzY3JlZW4uZ2V0QnlSb2xlKCdzZWFyY2hib3gnKVxyXG4gICAgICBcclxuICAgICAgLy8gRm9jdXMgeSBsdWVnbyBibHVyXHJcbiAgICAgIGZpcmVFdmVudC5mb2N1cyhzZWFyY2hJbnB1dClcclxuICAgICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRlc3RJZCgnc2VhcmNoLWZvY3VzLWluZGljYXRvcicpKS50b0JlSW5UaGVEb2N1bWVudCgpXHJcbiAgICAgIFxyXG4gICAgICBmaXJlRXZlbnQuYmx1cihzZWFyY2hJbnB1dClcclxuICAgICAgZXhwZWN0KHNjcmVlbi5xdWVyeUJ5VGVzdElkKCdzZWFyY2gtZm9jdXMtaW5kaWNhdG9yJykpLm5vdC50b0JlSW5UaGVEb2N1bWVudCgpXHJcbiAgICB9KVxyXG5cclxuICAgIGl0KCdkZWJlIGFwbGljYXIgY2xhc2VzIGRlIHRyYW5zaWNpw7NuJywgKCkgPT4ge1xyXG4gICAgICByZW5kZXIoPEhlYWRlciAvPilcclxuICAgICAgXHJcbiAgICAgIGNvbnN0IHNlYXJjaElucHV0ID0gc2NyZWVuLmdldEJ5Um9sZSgnc2VhcmNoYm94JylcclxuICAgICAgZXhwZWN0KHNlYXJjaElucHV0KS50b0hhdmVDbGFzcygndHJhbnNpdGlvbi1hbGwnLCAnZHVyYXRpb24tMjAwJylcclxuICAgIH0pXHJcblxyXG4gICAgaXQoJ2RlYmUgYXBsaWNhciBlc3RpbG9zIGRlIGZvY3VzJywgKCkgPT4ge1xyXG4gICAgICByZW5kZXIoPEhlYWRlciAvPilcclxuICAgICAgXHJcbiAgICAgIGNvbnN0IHNlYXJjaElucHV0ID0gc2NyZWVuLmdldEJ5Um9sZSgnc2VhcmNoYm94JylcclxuICAgICAgXHJcbiAgICAgIGZpcmVFdmVudC5mb2N1cyhzZWFyY2hJbnB1dClcclxuICAgICAgZXhwZWN0KHNlYXJjaElucHV0KS50b0hhdmVDbGFzcygncmluZy0yJywgJ3JpbmctYmx1ZS01MDAnKVxyXG4gICAgfSlcclxuICB9KVxyXG5cclxuICBkZXNjcmliZSgnQ2FydCBNaWNyb2ludGVyYWN0aW9ucycsICgpID0+IHtcclxuICAgIGl0KCdkZWJlIG1vc3RyYXIgdG9vbHRpcCBhbCBoYWNlciBob3ZlcicsICgpID0+IHtcclxuICAgICAgcmVuZGVyKDxIZWFkZXIgLz4pXHJcbiAgICAgIFxyXG4gICAgICBjb25zdCBjYXJ0QnV0dG9uID0gc2NyZWVuLmdldEJ5TGFiZWxUZXh0KC9DYXJyaXRvIGNvbiBcXGQrIHByb2R1Y3Rvcy8pXHJcbiAgICAgIFxyXG4gICAgICAvLyBObyBkZWJlIG1vc3RyYXIgdG9vbHRpcCBpbmljaWFsbWVudGVcclxuICAgICAgZXhwZWN0KHNjcmVlbi5xdWVyeUJ5VGVzdElkKCdjYXJ0LWhvdmVyLXRvb2x0aXAnKSkubm90LnRvQmVJblRoZURvY3VtZW50KClcclxuICAgICAgXHJcbiAgICAgIC8vIEhvdmVyIGRlYmUgbW9zdHJhciB0b29sdGlwXHJcbiAgICAgIGZpcmVFdmVudC5tb3VzZUVudGVyKGNhcnRCdXR0b24pXHJcbiAgICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXN0SWQoJ2NhcnQtaG92ZXItdG9vbHRpcCcpKS50b0JlSW5UaGVEb2N1bWVudCgpXHJcbiAgICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KCdWZXIgY2Fycml0bycpKS50b0JlSW5UaGVEb2N1bWVudCgpXHJcbiAgICB9KVxyXG5cclxuICAgIGl0KCdkZWJlIG9jdWx0YXIgdG9vbHRpcCBhbCBzYWxpciBkZWwgaG92ZXInLCAoKSA9PiB7XHJcbiAgICAgIHJlbmRlcig8SGVhZGVyIC8+KVxyXG4gICAgICBcclxuICAgICAgY29uc3QgY2FydEJ1dHRvbiA9IHNjcmVlbi5nZXRCeUxhYmVsVGV4dCgvQ2Fycml0byBjb24gXFxkKyBwcm9kdWN0b3MvKVxyXG4gICAgICBcclxuICAgICAgLy8gSG92ZXIgeSBsdWVnbyBsZWF2ZVxyXG4gICAgICBmaXJlRXZlbnQubW91c2VFbnRlcihjYXJ0QnV0dG9uKVxyXG4gICAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGVzdElkKCdjYXJ0LWhvdmVyLXRvb2x0aXAnKSkudG9CZUluVGhlRG9jdW1lbnQoKVxyXG4gICAgICBcclxuICAgICAgZmlyZUV2ZW50Lm1vdXNlTGVhdmUoY2FydEJ1dHRvbilcclxuICAgICAgZXhwZWN0KHNjcmVlbi5xdWVyeUJ5VGVzdElkKCdjYXJ0LWhvdmVyLXRvb2x0aXAnKSkubm90LnRvQmVJblRoZURvY3VtZW50KClcclxuICAgIH0pXHJcblxyXG4gICAgaXQoJ2RlYmUgYXBsaWNhciB0cmFuc2Zvcm1hY2nDs24gZGUgZXNjYWxhJywgKCkgPT4ge1xyXG4gICAgICByZW5kZXIoPEhlYWRlciAvPilcclxuICAgICAgXHJcbiAgICAgIGNvbnN0IGNhcnRCdXR0b24gPSBzY3JlZW4uZ2V0QnlMYWJlbFRleHQoL0NhcnJpdG8gY29uIFxcZCsgcHJvZHVjdG9zLylcclxuICAgICAgZXhwZWN0KGNhcnRCdXR0b24pLnRvSGF2ZUNsYXNzKCd0cmFuc2l0aW9uLXRyYW5zZm9ybScsICdkdXJhdGlvbi0yMDAnKVxyXG4gICAgICBcclxuICAgICAgLy8gSG92ZXIgZGViZSBjYW1iaWFyIGVzY2FsYVxyXG4gICAgICBmaXJlRXZlbnQubW91c2VFbnRlcihjYXJ0QnV0dG9uKVxyXG4gICAgICBleHBlY3QoY2FydEJ1dHRvbikudG9IYXZlQ2xhc3MoJ3NjYWxlLTExMCcpXHJcbiAgICAgIFxyXG4gICAgICBmaXJlRXZlbnQubW91c2VMZWF2ZShjYXJ0QnV0dG9uKVxyXG4gICAgICBleHBlY3QoY2FydEJ1dHRvbikudG9IYXZlQ2xhc3MoJ3NjYWxlLTEwMCcpXHJcbiAgICB9KVxyXG5cclxuICAgIGl0KCdkZWJlIGluY3JlbWVudGFyIGNvbnRhZG9yIGFsIGhhY2VyIGNsaWNrJywgKCkgPT4ge1xyXG4gICAgICByZW5kZXIoPEhlYWRlciAvPilcclxuICAgICAgXHJcbiAgICAgIGNvbnN0IGNhcnRCdXR0b24gPSBzY3JlZW4uZ2V0QnlMYWJlbFRleHQoL0NhcnJpdG8gY29uIDAgcHJvZHVjdG9zLylcclxuICAgICAgXHJcbiAgICAgIGZpcmVFdmVudC5jbGljayhjYXJ0QnV0dG9uKVxyXG4gICAgICBleHBlY3Qoc2NyZWVuLmdldEJ5TGFiZWxUZXh0KC9DYXJyaXRvIGNvbiAxIHByb2R1Y3Rvcy8pKS50b0JlSW5UaGVEb2N1bWVudCgpXHJcbiAgICB9KVxyXG4gIH0pXHJcblxyXG4gIGRlc2NyaWJlKCdNZW51IE1pY3JvaW50ZXJhY3Rpb25zJywgKCkgPT4ge1xyXG4gICAgaXQoJ2RlYmUgbW9zdHJhciBhbmltYWNpw7NuIGFsIGhhY2VyIGNsaWNrJywgYXN5bmMgKCkgPT4ge1xyXG4gICAgICByZW5kZXIoPEhlYWRlciAvPilcclxuICAgICAgXHJcbiAgICAgIGNvbnN0IG1lbnVCdXR0b24gPSBzY3JlZW4uZ2V0QnlUZXh0KCfimLAnKVxyXG4gICAgICBcclxuICAgICAgLy8gTm8gZGViZSBlc3RhciBhbmltYW5kbyBpbmljaWFsbWVudGVcclxuICAgICAgZXhwZWN0KHNjcmVlbi5xdWVyeUJ5VGVzdElkKCdtZW51LWFuaW1hdGluZycpKS5ub3QudG9CZUluVGhlRG9jdW1lbnQoKVxyXG4gICAgICBcclxuICAgICAgLy8gQ2xpY2sgZGViZSBpbmljaWFyIGFuaW1hY2nDs25cclxuICAgICAgZmlyZUV2ZW50LmNsaWNrKG1lbnVCdXR0b24pXHJcbiAgICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXN0SWQoJ21lbnUtYW5pbWF0aW5nJykpLnRvQmVJblRoZURvY3VtZW50KClcclxuICAgICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoJ0FuaW1hbmRvLi4uJykpLnRvQmVJblRoZURvY3VtZW50KClcclxuICAgIH0pXHJcblxyXG4gICAgaXQoJ2RlYmUgYXBsaWNhciByb3RhY2nDs24gZHVyYW50ZSBhbmltYWNpw7NuJywgKCkgPT4ge1xyXG4gICAgICByZW5kZXIoPEhlYWRlciAvPilcclxuICAgICAgXHJcbiAgICAgIGNvbnN0IG1lbnVCdXR0b24gPSBzY3JlZW4uZ2V0QnlUZXh0KCfimLAnKVxyXG4gICAgICBleHBlY3QobWVudUJ1dHRvbikudG9IYXZlQ2xhc3MoJ3RyYW5zaXRpb24tYWxsJywgJ2R1cmF0aW9uLTMwMCcpXHJcbiAgICAgIFxyXG4gICAgICBmaXJlRXZlbnQuY2xpY2sobWVudUJ1dHRvbilcclxuICAgICAgZXhwZWN0KG1lbnVCdXR0b24pLnRvSGF2ZUNsYXNzKCdyb3RhdGUtOTAnKVxyXG4gICAgfSlcclxuXHJcbiAgICBpdCgnZGViZSBkZXNoYWJpbGl0YXIgYm90w7NuIGR1cmFudGUgYW5pbWFjacOzbicsICgpID0+IHtcclxuICAgICAgcmVuZGVyKDxIZWFkZXIgLz4pXHJcbiAgICAgIFxyXG4gICAgICBjb25zdCBtZW51QnV0dG9uID0gc2NyZWVuLmdldEJ5VGV4dCgn4piwJylcclxuICAgICAgXHJcbiAgICAgIGV4cGVjdChtZW51QnV0dG9uKS5ub3QudG9CZURpc2FibGVkKClcclxuICAgICAgXHJcbiAgICAgIGZpcmVFdmVudC5jbGljayhtZW51QnV0dG9uKVxyXG4gICAgICBleHBlY3QobWVudUJ1dHRvbikudG9CZURpc2FibGVkKClcclxuICAgIH0pXHJcblxyXG4gICAgaXQoJ2RlYmUgdGVybWluYXIgYW5pbWFjacOzbiBkZXNwdcOpcyBkZWwgdGltZW91dCcsIGFzeW5jICgpID0+IHtcclxuICAgICAgcmVuZGVyKDxIZWFkZXIgLz4pXHJcbiAgICAgIFxyXG4gICAgICBjb25zdCBtZW51QnV0dG9uID0gc2NyZWVuLmdldEJ5VGV4dCgn4piwJylcclxuICAgICAgXHJcbiAgICAgIGZpcmVFdmVudC5jbGljayhtZW51QnV0dG9uKVxyXG4gICAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGVzdElkKCdtZW51LWFuaW1hdGluZycpKS50b0JlSW5UaGVEb2N1bWVudCgpXHJcbiAgICAgIFxyXG4gICAgICAvLyBFc3BlcmFyIHF1ZSB0ZXJtaW5lIGxhIGFuaW1hY2nDs25cclxuICAgICAgYXdhaXQgd2FpdEZvcigoKSA9PiB7XHJcbiAgICAgICAgZXhwZWN0KHNjcmVlbi5xdWVyeUJ5VGVzdElkKCdtZW51LWFuaW1hdGluZycpKS5ub3QudG9CZUluVGhlRG9jdW1lbnQoKVxyXG4gICAgICB9LCB7IHRpbWVvdXQ6IDUwMCB9KVxyXG4gICAgfSlcclxuICB9KVxyXG5cclxuICBkZXNjcmliZSgnSW50ZXJhY3RpdmUgRWxlbWVudHMnLCAoKSA9PiB7XHJcbiAgICBpdCgnZGViZSBhcGxpY2FyIGVmZWN0b3MgaG92ZXInLCAoKSA9PiB7XHJcbiAgICAgIHJlbmRlcig8SGVhZGVyIC8+KVxyXG4gICAgICBcclxuICAgICAgY29uc3QgaG92ZXJCdXR0b24gPSBzY3JlZW4uZ2V0QnlUZXh0KCdIb3ZlciBFZmZlY3QnKVxyXG4gICAgICBleHBlY3QoaG92ZXJCdXR0b24pLnRvSGF2ZUNsYXNzKCdob3ZlcjpiZy1ibHVlLTUwMCcsICd0cmFuc2l0aW9uLWNvbG9ycycpXHJcbiAgICB9KVxyXG5cclxuICAgIGl0KCdkZWJlIGFwbGljYXIgZWZlY3RvcyBkZSBjbGljaycsICgpID0+IHtcclxuICAgICAgcmVuZGVyKDxIZWFkZXIgLz4pXHJcbiAgICAgIFxyXG4gICAgICBjb25zdCBjbGlja0J1dHRvbiA9IHNjcmVlbi5nZXRCeVRleHQoJ0NsaWNrIEVmZmVjdCcpXHJcbiAgICAgIGV4cGVjdChjbGlja0J1dHRvbikudG9IYXZlQ2xhc3MoJ2FjdGl2ZTpzY2FsZS05NScsICd0cmFuc2l0aW9uLXRyYW5zZm9ybScpXHJcbiAgICB9KVxyXG5cclxuICAgIGl0KCdkZWJlIG1hbmVqYXIgZXZlbnRvcyBkZSBtb3VzZScsICgpID0+IHtcclxuICAgICAgcmVuZGVyKDxIZWFkZXIgLz4pXHJcbiAgICAgIFxyXG4gICAgICBjb25zdCBob3ZlckJ1dHRvbiA9IHNjcmVlbi5nZXRCeVRleHQoJ0hvdmVyIEVmZmVjdCcpXHJcbiAgICAgIFxyXG4gICAgICAvLyBTaW11bGFyIGhvdmVyXHJcbiAgICAgIGZpcmVFdmVudC5tb3VzZUVudGVyKGhvdmVyQnV0dG9uKVxyXG4gICAgICBleHBlY3QoaG92ZXJCdXR0b24uc3R5bGUuYmFja2dyb3VuZENvbG9yKS50b0JlKCdyZ2IoNTksIDEzMCwgMjQ2KScpXHJcbiAgICAgIFxyXG4gICAgICBmaXJlRXZlbnQubW91c2VMZWF2ZShob3ZlckJ1dHRvbilcclxuICAgICAgZXhwZWN0KGhvdmVyQnV0dG9uLnN0eWxlLmJhY2tncm91bmRDb2xvcikudG9CZSgnJylcclxuICAgIH0pXHJcblxyXG4gICAgaXQoJ2RlYmUgbWFuZWphciBldmVudG9zIGRlIGNsaWNrJywgKCkgPT4ge1xyXG4gICAgICByZW5kZXIoPEhlYWRlciAvPilcclxuICAgICAgXHJcbiAgICAgIGNvbnN0IGNsaWNrQnV0dG9uID0gc2NyZWVuLmdldEJ5VGV4dCgnQ2xpY2sgRWZmZWN0JylcclxuICAgICAgXHJcbiAgICAgIC8vIFNpbXVsYXIgY2xpY2tcclxuICAgICAgZmlyZUV2ZW50Lm1vdXNlRG93bihjbGlja0J1dHRvbilcclxuICAgICAgZXhwZWN0KGNsaWNrQnV0dG9uLnN0eWxlLnRyYW5zZm9ybSkudG9CZSgnc2NhbGUoMC45NSknKVxyXG4gICAgICBcclxuICAgICAgZmlyZUV2ZW50Lm1vdXNlVXAoY2xpY2tCdXR0b24pXHJcbiAgICAgIGV4cGVjdChjbGlja0J1dHRvbi5zdHlsZS50cmFuc2Zvcm0pLnRvQmUoJ3NjYWxlKDEpJylcclxuICAgIH0pXHJcbiAgfSlcclxuXHJcbiAgZGVzY3JpYmUoJ0FjY2VzaWJpbGlkYWQgZGUgTWljcm9pbnRlcmFjdGlvbnMnLCAoKSA9PiB7XHJcbiAgICBpdCgnZGViZSBtYW50ZW5lciBhY2Nlc2liaWxpZGFkIGR1cmFudGUgYW5pbWFjaW9uZXMnLCAoKSA9PiB7XHJcbiAgICAgIHJlbmRlcig8SGVhZGVyIC8+KVxyXG4gICAgICBcclxuICAgICAgY29uc3Qgc2VhcmNoSW5wdXQgPSBzY3JlZW4uZ2V0QnlSb2xlKCdzZWFyY2hib3gnKVxyXG4gICAgICBjb25zdCBjYXJ0QnV0dG9uID0gc2NyZWVuLmdldEJ5TGFiZWxUZXh0KC9DYXJyaXRvIGNvbiBcXGQrIHByb2R1Y3Rvcy8pXHJcbiAgICAgIFxyXG4gICAgICAvLyBGb2N1cyBkZWJlIGZ1bmNpb25hciBjb24gYW5pbWFjaW9uZXNcclxuICAgICAgc2VhcmNoSW5wdXQuZm9jdXMoKVxyXG4gICAgICBleHBlY3QoZG9jdW1lbnQuYWN0aXZlRWxlbWVudCkudG9CZShzZWFyY2hJbnB1dClcclxuICAgICAgLy8gVmVyaWZpY2FyIHF1ZSB0aWVuZSBjbGFzZXMgZGUgdHJhbnNpY2nDs25cclxuICAgICAgZXhwZWN0KHNlYXJjaElucHV0KS50b0hhdmVDbGFzcygndHJhbnNpdGlvbi1hbGwnKVxyXG4gICAgICBcclxuICAgICAgLy8gQ2xpY2sgZGViZSBmdW5jaW9uYXIgY29uIGFuaW1hY2lvbmVzXHJcbiAgICAgIGZpcmVFdmVudC5jbGljayhjYXJ0QnV0dG9uKVxyXG4gICAgICBleHBlY3Qoc2NyZWVuLmdldEJ5TGFiZWxUZXh0KC9DYXJyaXRvIGNvbiAxIHByb2R1Y3Rvcy8pKS50b0JlSW5UaGVEb2N1bWVudCgpXHJcbiAgICB9KVxyXG5cclxuICAgIGl0KCdkZWJlIG1hbnRlbmVyIGxhYmVscyBkdXJhbnRlIGludGVyYWNjaW9uZXMnLCAoKSA9PiB7XHJcbiAgICAgIHJlbmRlcig8SGVhZGVyIC8+KVxyXG4gICAgICBcclxuICAgICAgY29uc3Qgc2VhcmNoSW5wdXQgPSBzY3JlZW4uZ2V0QnlSb2xlKCdzZWFyY2hib3gnKVxyXG4gICAgICBjb25zdCBjYXJ0QnV0dG9uID0gc2NyZWVuLmdldEJ5TGFiZWxUZXh0KC9DYXJyaXRvIGNvbiBcXGQrIHByb2R1Y3Rvcy8pXHJcbiAgICAgIFxyXG4gICAgICAvLyBMYWJlbHMgZGViZW4gbWFudGVuZXJzZSBkdXJhbnRlIGZvY3VzXHJcbiAgICAgIGZpcmVFdmVudC5mb2N1cyhzZWFyY2hJbnB1dClcclxuICAgICAgZXhwZWN0KHNlYXJjaElucHV0KS50b0hhdmVBdHRyaWJ1dGUoJ2FyaWEtbGFiZWwnLCAnQnVzY2FyIHByb2R1Y3RvcycpXHJcbiAgICAgIFxyXG4gICAgICAvLyBMYWJlbHMgZGViZW4gYWN0dWFsaXphcnNlIGNvcnJlY3RhbWVudGVcclxuICAgICAgZmlyZUV2ZW50LmNsaWNrKGNhcnRCdXR0b24pXHJcbiAgICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlMYWJlbFRleHQoL0NhcnJpdG8gY29uIDEgcHJvZHVjdG9zLykpLnRvQmVJblRoZURvY3VtZW50KClcclxuICAgIH0pXHJcblxyXG4gICAgaXQoJ2RlYmUgc2VyIG5hdmVnYWJsZSBwb3IgdGVjbGFkbycsICgpID0+IHtcclxuICAgICAgcmVuZGVyKDxIZWFkZXIgLz4pXHJcbiAgICAgIFxyXG4gICAgICBjb25zdCBzZWFyY2hJbnB1dCA9IHNjcmVlbi5nZXRCeVJvbGUoJ3NlYXJjaGJveCcpXHJcbiAgICAgIGNvbnN0IG1lbnVCdXR0b24gPSBzY3JlZW4uZ2V0QnlUZXh0KCfimLAnKVxyXG4gICAgICBcclxuICAgICAgLy8gVGFiIG5hdmlnYXRpb24gZGViZSBmdW5jaW9uYXJcclxuICAgICAgc2VhcmNoSW5wdXQuZm9jdXMoKVxyXG4gICAgICBleHBlY3QoZG9jdW1lbnQuYWN0aXZlRWxlbWVudCkudG9CZShzZWFyY2hJbnB1dClcclxuICAgICAgXHJcbiAgICAgIG1lbnVCdXR0b24uZm9jdXMoKVxyXG4gICAgICBleHBlY3QoZG9jdW1lbnQuYWN0aXZlRWxlbWVudCkudG9CZShtZW51QnV0dG9uKVxyXG4gICAgfSlcclxuICB9KVxyXG5cclxuICBkZXNjcmliZSgnUGVyZm9ybWFuY2UgZGUgTWljcm9pbnRlcmFjdGlvbnMnLCAoKSA9PiB7XHJcbiAgICBpdCgnZGViZSBlamVjdXRhciBhbmltYWNpb25lcyByw6FwaWRhbWVudGUnLCAoKSA9PiB7XHJcbiAgICAgIGNvbnN0IHN0YXJ0VGltZSA9IHBlcmZvcm1hbmNlLm5vdygpXHJcbiAgICAgIFxyXG4gICAgICByZW5kZXIoPEhlYWRlciAvPilcclxuICAgICAgXHJcbiAgICAgIGNvbnN0IHNlYXJjaElucHV0ID0gc2NyZWVuLmdldEJ5Um9sZSgnc2VhcmNoYm94JylcclxuICAgICAgZmlyZUV2ZW50LmZvY3VzKHNlYXJjaElucHV0KVxyXG4gICAgICBcclxuICAgICAgY29uc3QgZW5kVGltZSA9IHBlcmZvcm1hbmNlLm5vdygpXHJcbiAgICAgIGNvbnN0IGV4ZWN1dGlvblRpbWUgPSBlbmRUaW1lIC0gc3RhcnRUaW1lXHJcbiAgICAgIFxyXG4gICAgICBleHBlY3QoZXhlY3V0aW9uVGltZSkudG9CZUxlc3NUaGFuKDUwKSAvLyA1MG1zIHRocmVzaG9sZFxyXG4gICAgfSlcclxuXHJcbiAgICBpdCgnZGViZSBtYW5lamFyIG3Dumx0aXBsZXMgaW50ZXJhY2Npb25lcyBzaW11bHTDoW5lYW1lbnRlJywgKCkgPT4ge1xyXG4gICAgICByZW5kZXIoPEhlYWRlciAvPilcclxuICAgICAgXHJcbiAgICAgIGNvbnN0IHNlYXJjaElucHV0ID0gc2NyZWVuLmdldEJ5Um9sZSgnc2VhcmNoYm94JylcclxuICAgICAgY29uc3QgY2FydEJ1dHRvbiA9IHNjcmVlbi5nZXRCeUxhYmVsVGV4dCgvQ2Fycml0byBjb24gXFxkKyBwcm9kdWN0b3MvKVxyXG4gICAgICBjb25zdCBtZW51QnV0dG9uID0gc2NyZWVuLmdldEJ5VGV4dCgn4piwJylcclxuICAgICAgXHJcbiAgICAgIC8vIE3Dumx0aXBsZXMgaW50ZXJhY2Npb25lc1xyXG4gICAgICBmaXJlRXZlbnQuZm9jdXMoc2VhcmNoSW5wdXQpXHJcbiAgICAgIGZpcmVFdmVudC5tb3VzZUVudGVyKGNhcnRCdXR0b24pXHJcbiAgICAgIGZpcmVFdmVudC5jbGljayhtZW51QnV0dG9uKVxyXG4gICAgICBcclxuICAgICAgLy8gVG9kbyBkZWJlIGZ1bmNpb25hciBjb3JyZWN0YW1lbnRlXHJcbiAgICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXN0SWQoJ3NlYXJjaC1mb2N1cy1pbmRpY2F0b3InKSkudG9CZUluVGhlRG9jdW1lbnQoKVxyXG4gICAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGVzdElkKCdjYXJ0LWhvdmVyLXRvb2x0aXAnKSkudG9CZUluVGhlRG9jdW1lbnQoKVxyXG4gICAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGVzdElkKCdtZW51LWFuaW1hdGluZycpKS50b0JlSW5UaGVEb2N1bWVudCgpXHJcbiAgICB9KVxyXG4gIH0pXHJcblxyXG4gIGRlc2NyaWJlKCdFc3RhZG9zIGRlIE1pY3JvaW50ZXJhY3Rpb25zJywgKCkgPT4ge1xyXG4gICAgaXQoJ2RlYmUgbWFudGVuZXIgZXN0YWRvcyBpbmRlcGVuZGllbnRlcycsICgpID0+IHtcclxuICAgICAgcmVuZGVyKDxIZWFkZXIgLz4pXHJcbiAgICAgIFxyXG4gICAgICBjb25zdCBzZWFyY2hJbnB1dCA9IHNjcmVlbi5nZXRCeVJvbGUoJ3NlYXJjaGJveCcpXHJcbiAgICAgIGNvbnN0IGNhcnRCdXR0b24gPSBzY3JlZW4uZ2V0QnlMYWJlbFRleHQoL0NhcnJpdG8gY29uIFxcZCsgcHJvZHVjdG9zLylcclxuICAgICAgXHJcbiAgICAgIC8vIEFjdGl2YXIgbcO6bHRpcGxlcyBlc3RhZG9zXHJcbiAgICAgIGZpcmVFdmVudC5mb2N1cyhzZWFyY2hJbnB1dClcclxuICAgICAgZmlyZUV2ZW50Lm1vdXNlRW50ZXIoY2FydEJ1dHRvbilcclxuICAgICAgXHJcbiAgICAgIC8vIEVzdGFkb3MgZGViZW4gc2VyIGluZGVwZW5kaWVudGVzXHJcbiAgICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXN0SWQoJ3NlYXJjaC1mb2N1cy1pbmRpY2F0b3InKSkudG9CZUluVGhlRG9jdW1lbnQoKVxyXG4gICAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGVzdElkKCdjYXJ0LWhvdmVyLXRvb2x0aXAnKSkudG9CZUluVGhlRG9jdW1lbnQoKVxyXG4gICAgICBcclxuICAgICAgLy8gRGVzYWN0aXZhciB1bm8gbm8gZGViZSBhZmVjdGFyIGVsIG90cm9cclxuICAgICAgZmlyZUV2ZW50LmJsdXIoc2VhcmNoSW5wdXQpXHJcbiAgICAgIGV4cGVjdChzY3JlZW4ucXVlcnlCeVRlc3RJZCgnc2VhcmNoLWZvY3VzLWluZGljYXRvcicpKS5ub3QudG9CZUluVGhlRG9jdW1lbnQoKVxyXG4gICAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGVzdElkKCdjYXJ0LWhvdmVyLXRvb2x0aXAnKSkudG9CZUluVGhlRG9jdW1lbnQoKVxyXG4gICAgfSlcclxuXHJcbiAgICBpdCgnZGViZSByZXNldGVhciBlc3RhZG9zIGNvcnJlY3RhbWVudGUnLCAoKSA9PiB7XHJcbiAgICAgIHJlbmRlcig8SGVhZGVyIC8+KVxyXG4gICAgICBcclxuICAgICAgY29uc3Qgc2VhcmNoSW5wdXQgPSBzY3JlZW4uZ2V0QnlSb2xlKCdzZWFyY2hib3gnKVxyXG4gICAgICBjb25zdCBjYXJ0QnV0dG9uID0gc2NyZWVuLmdldEJ5TGFiZWxUZXh0KC9DYXJyaXRvIGNvbiBcXGQrIHByb2R1Y3Rvcy8pXHJcbiAgICAgIFxyXG4gICAgICAvLyBBY3RpdmFyIGVzdGFkb3NcclxuICAgICAgZmlyZUV2ZW50LmZvY3VzKHNlYXJjaElucHV0KVxyXG4gICAgICBmaXJlRXZlbnQubW91c2VFbnRlcihjYXJ0QnV0dG9uKVxyXG4gICAgICBcclxuICAgICAgLy8gUmVzZXRlYXIgdG9kb3NcclxuICAgICAgZmlyZUV2ZW50LmJsdXIoc2VhcmNoSW5wdXQpXHJcbiAgICAgIGZpcmVFdmVudC5tb3VzZUxlYXZlKGNhcnRCdXR0b24pXHJcbiAgICAgIFxyXG4gICAgICAvLyBObyBkZWJlIGhhYmVyIGVzdGFkb3MgYWN0aXZvc1xyXG4gICAgICBleHBlY3Qoc2NyZWVuLnF1ZXJ5QnlUZXN0SWQoJ3NlYXJjaC1mb2N1cy1pbmRpY2F0b3InKSkubm90LnRvQmVJblRoZURvY3VtZW50KClcclxuICAgICAgZXhwZWN0KHNjcmVlbi5xdWVyeUJ5VGVzdElkKCdjYXJ0LWhvdmVyLXRvb2x0aXAnKSkubm90LnRvQmVJblRoZURvY3VtZW50KClcclxuICAgIH0pXHJcbiAgfSlcclxufSlcclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuIl0sIm5hbWVzIjpbImplc3QiLCJtb2NrIiwiTW9ja0hlYWRlck1pY3JvaW50ZXJhY3Rpb25zIiwic2VhcmNoRm9jdXNlZCIsInNldFNlYXJjaEZvY3VzZWQiLCJSZWFjdCIsInVzZVN0YXRlIiwiY2FydEhvdmVyZWQiLCJzZXRDYXJ0SG92ZXJlZCIsIm1lbnVBbmltYXRpbmciLCJzZXRNZW51QW5pbWF0aW5nIiwic2VhcmNoVmFsdWUiLCJzZXRTZWFyY2hWYWx1ZSIsImNhcnRDb3VudCIsInNldENhcnRDb3VudCIsImhhbmRsZVNlYXJjaEZvY3VzIiwiaGFuZGxlU2VhcmNoQmx1ciIsImhhbmRsZUNhcnRIb3ZlciIsImhhbmRsZUNhcnRMZWF2ZSIsImhhbmRsZU1lbnVUb2dnbGUiLCJzZXRUaW1lb3V0IiwiaGVhZGVyIiwicm9sZSIsImRhdGEtdGVzdGlkIiwiZGl2IiwiaW5wdXQiLCJhcmlhLWxhYmVsIiwidmFsdWUiLCJvbkNoYW5nZSIsImUiLCJ0YXJnZXQiLCJvbkZvY3VzIiwib25CbHVyIiwiY2xhc3NOYW1lIiwicGxhY2Vob2xkZXIiLCJidXR0b24iLCJvbk1vdXNlRW50ZXIiLCJvbk1vdXNlTGVhdmUiLCJvbkNsaWNrIiwicHJldiIsImRpc2FibGVkIiwic3R5bGUiLCJiYWNrZ3JvdW5kQ29sb3IiLCJvbk1vdXNlRG93biIsInRyYW5zZm9ybSIsIm9uTW91c2VVcCIsImRlc2NyaWJlIiwiYmVmb3JlRWFjaCIsImNsZWFyQWxsTW9ja3MiLCJpdCIsInJlbmRlciIsIkhlYWRlciIsInNlYXJjaElucHV0Iiwic2NyZWVuIiwiZ2V0QnlSb2xlIiwiZXhwZWN0IiwicXVlcnlCeVRlc3RJZCIsIm5vdCIsInRvQmVJblRoZURvY3VtZW50IiwiZmlyZUV2ZW50IiwiZm9jdXMiLCJnZXRCeVRlc3RJZCIsImdldEJ5VGV4dCIsImJsdXIiLCJ0b0hhdmVDbGFzcyIsImNhcnRCdXR0b24iLCJnZXRCeUxhYmVsVGV4dCIsIm1vdXNlRW50ZXIiLCJtb3VzZUxlYXZlIiwiY2xpY2siLCJtZW51QnV0dG9uIiwidG9CZURpc2FibGVkIiwid2FpdEZvciIsInRpbWVvdXQiLCJob3ZlckJ1dHRvbiIsImNsaWNrQnV0dG9uIiwidG9CZSIsIm1vdXNlRG93biIsIm1vdXNlVXAiLCJkb2N1bWVudCIsImFjdGl2ZUVsZW1lbnQiLCJ0b0hhdmVBdHRyaWJ1dGUiLCJzdGFydFRpbWUiLCJwZXJmb3JtYW5jZSIsIm5vdyIsImVuZFRpbWUiLCJleGVjdXRpb25UaW1lIiwidG9CZUxlc3NUaGFuIl0sIm1hcHBpbmdzIjoiQUFBQTs7O0NBR0M7QUFLRCxtREFBbUQ7QUFDbkRBLEtBQUtDLElBQUksQ0FBQyxZQUFZO0lBQ3BCLE9BQU8sU0FBU0M7UUFDZCxNQUFNLENBQUNDLGVBQWVDLGlCQUFpQixHQUFHQyxjQUFLLENBQUNDLFFBQVEsQ0FBQztR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