62696de6edaa80b188b137acd654f528
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_2ayl1v9blh() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\debug\\user-status\\route.ts";
  var hash = "6556f261ece71bfceced5e563208987645e0b518";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\debug\\user-status\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 23
        }
      },
      "6": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 54
        }
      },
      "7": {
        start: {
          line: 21,
          column: 16
        },
        end: {
          line: 21,
          column: 38
        }
      },
      "8": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 24
        }
      },
      "9": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 130,
          column: 5
        }
      },
      "10": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 73
        }
      },
      "11": {
        start: {
          line: 27,
          column: 31
        },
        end: {
          line: 27,
          column: 59
        }
      },
      "12": {
        start: {
          line: 28,
          column: 36
        },
        end: {
          line: 28,
          column: 81
        }
      },
      "13": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 34,
          column: 11
        }
      },
      "14": {
        start: {
          line: 36,
          column: 23
        },
        end: {
          line: 36,
          column: 27
        }
      },
      "15": {
        start: {
          line: 37,
          column: 24
        },
        end: {
          line: 37,
          column: 28
        }
      },
      "16": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 44,
          column: 9
        }
      },
      "17": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 39,
          column: 49
        }
      },
      "18": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 40,
          column: 51
        }
      },
      "19": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 42,
          column: 95
        }
      },
      "20": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 43,
          column: 67
        }
      },
      "21": {
        start: {
          line: 46,
          column: 19
        },
        end: {
          line: 46,
          column: 23
        }
      },
      "22": {
        start: {
          line: 47,
          column: 24
        },
        end: {
          line: 47,
          column: 28
        }
      },
      "23": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 54,
          column: 9
        }
      },
      "24": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 39
        }
      },
      "25": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 50,
          column: 58
        }
      },
      "26": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 102
        }
      },
      "27": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 53,
          column: 74
        }
      },
      "28": {
        start: {
          line: 56,
          column: 27
        },
        end: {
          line: 56,
          column: 32
        }
      },
      "29": {
        start: {
          line: 57,
          column: 36
        },
        end: {
          line: 57,
          column: 40
        }
      },
      "30": {
        start: {
          line: 58,
          column: 37
        },
        end: {
          line: 58,
          column: 41
        }
      },
      "31": {
        start: {
          line: 59,
          column: 38
        },
        end: {
          line: 59,
          column: 42
        }
      },
      "32": {
        start: {
          line: 60,
          column: 24
        },
        end: {
          line: 60,
          column: 28
        }
      },
      "33": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 81,
          column: 9
        }
      },
      "34": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 64,
          column: 13
        }
      },
      "35": {
        start: {
          line: 63,
          column: 16
        },
        end: {
          line: 63,
          column: 117
        }
      },
      "36": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 67,
          column: 13
        }
      },
      "37": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 66,
          column: 74
        }
      },
      "38": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 70,
          column: 13
        }
      },
      "39": {
        start: {
          line: 69,
          column: 16
        },
        end: {
          line: 69,
          column: 76
        }
      },
      "40": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 138
        }
      },
      "41": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 77,
          column: 15
        }
      },
      "42": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 110
        }
      },
      "43": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 75
        }
      },
      "44": {
        start: {
          line: 83,
          column: 26
        },
        end: {
          line: 116,
          column: 9
        }
      },
      "45": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 117,
          column: 91
        }
      },
      "46": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 120,
          column: 11
        }
      },
      "47": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 122,
          column: 69
        }
      },
      "48": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 129,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 19
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "GET",
        decl: {
          start: {
            line: 23,
            column: 15
          },
          end: {
            line: 23,
            column: 18
          }
        },
        loc: {
          start: {
            line: 23,
            column: 21
          },
          end: {
            line: 131,
            column: 1
          }
        },
        line: 23
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 32,
            column: 29
          },
          end: {
            line: 32,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 29
          },
          end: {
            line: 32,
            column: 51
          }
        }, {
          start: {
            line: 32,
            column: 55
          },
          end: {
            line: 32,
            column: 56
          }
        }],
        line: 32
      },
      "1": {
        loc: {
          start: {
            line: 33,
            column: 34
          },
          end: {
            line: 33,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 34
          },
          end: {
            line: 33,
            column: 61
          }
        }, {
          start: {
            line: 33,
            column: 65
          },
          end: {
            line: 33,
            column: 66
          }
        }],
        line: 33
      },
      "2": {
        loc: {
          start: {
            line: 42,
            column: 24
          },
          end: {
            line: 42,
            column: 94
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 42,
            column: 49
          },
          end: {
            line: 42,
            column: 62
          }
        }, {
          start: {
            line: 42,
            column: 65
          },
          end: {
            line: 42,
            column: 94
          }
        }],
        line: 42
      },
      "3": {
        loc: {
          start: {
            line: 52,
            column: 24
          },
          end: {
            line: 52,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 52,
            column: 49
          },
          end: {
            line: 52,
            column: 62
          }
        }, {
          start: {
            line: 52,
            column: 65
          },
          end: {
            line: 52,
            column: 101
          }
        }],
        line: 52
      },
      "4": {
        loc: {
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 64,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 64,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "5": {
        loc: {
          start: {
            line: 63,
            column: 40
          },
          end: {
            line: 63,
            column: 116
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 40
          },
          end: {
            line: 63,
            column: 77
          }
        }, {
          start: {
            line: 63,
            column: 81
          },
          end: {
            line: 63,
            column: 108
          }
        }, {
          start: {
            line: 63,
            column: 112
          },
          end: {
            line: 63,
            column: 116
          }
        }],
        line: 63
      },
      "6": {
        loc: {
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 67,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 67,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "7": {
        loc: {
          start: {
            line: 66,
            column: 41
          },
          end: {
            line: 66,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 66,
            column: 41
          },
          end: {
            line: 66,
            column: 65
          }
        }, {
          start: {
            line: 66,
            column: 69
          },
          end: {
            line: 66,
            column: 73
          }
        }],
        line: 66
      },
      "8": {
        loc: {
          start: {
            line: 68,
            column: 12
          },
          end: {
            line: 70,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 12
          },
          end: {
            line: 70,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "9": {
        loc: {
          start: {
            line: 69,
            column: 42
          },
          end: {
            line: 69,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 69,
            column: 42
          },
          end: {
            line: 69,
            column: 67
          }
        }, {
          start: {
            line: 69,
            column: 71
          },
          end: {
            line: 69,
            column: 75
          }
        }],
        line: 69
      },
      "10": {
        loc: {
          start: {
            line: 71,
            column: 27
          },
          end: {
            line: 71,
            column: 137
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 71,
            column: 27
          },
          end: {
            line: 71,
            column: 60
          }
        }, {
          start: {
            line: 71,
            column: 64
          },
          end: {
            line: 71,
            column: 98
          }
        }, {
          start: {
            line: 71,
            column: 102
          },
          end: {
            line: 71,
            column: 137
          }
        }],
        line: 71
      },
      "11": {
        loc: {
          start: {
            line: 79,
            column: 24
          },
          end: {
            line: 79,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 79,
            column: 49
          },
          end: {
            line: 79,
            column: 62
          }
        }, {
          start: {
            line: 79,
            column: 65
          },
          end: {
            line: 79,
            column: 109
          }
        }],
        line: 79
      },
      "12": {
        loc: {
          start: {
            line: 92,
            column: 24
          },
          end: {
            line: 92,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 92,
            column: 24
          },
          end: {
            line: 92,
            column: 40
          }
        }, {
          start: {
            line: 92,
            column: 44
          },
          end: {
            line: 92,
            column: 48
          }
        }],
        line: 92
      },
      "13": {
        loc: {
          start: {
            line: 93,
            column: 25
          },
          end: {
            line: 93,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 93,
            column: 25
          },
          end: {
            line: 93,
            column: 42
          }
        }, {
          start: {
            line: 93,
            column: 46
          },
          end: {
            line: 93,
            column: 50
          }
        }],
        line: 93
      },
      "14": {
        loc: {
          start: {
            line: 94,
            column: 31
          },
          end: {
            line: 94,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 94,
            column: 31
          },
          end: {
            line: 94,
            column: 54
          }
        }, {
          start: {
            line: 94,
            column: 58
          },
          end: {
            line: 94,
            column: 62
          }
        }],
        line: 94
      },
      "15": {
        loc: {
          start: {
            line: 96,
            column: 18
          },
          end: {
            line: 104,
            column: 20
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 96,
            column: 25
          },
          end: {
            line: 104,
            column: 13
          }
        }, {
          start: {
            line: 104,
            column: 16
          },
          end: {
            line: 104,
            column: 20
          }
        }],
        line: 96
      },
      "16": {
        loc: {
          start: {
            line: 97,
            column: 20
          },
          end: {
            line: 97,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 97,
            column: 20
          },
          end: {
            line: 97,
            column: 27
          }
        }, {
          start: {
            line: 97,
            column: 31
          },
          end: {
            line: 97,
            column: 35
          }
        }],
        line: 97
      },
      "17": {
        loc: {
          start: {
            line: 98,
            column: 23
          },
          end: {
            line: 98,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 98,
            column: 23
          },
          end: {
            line: 98,
            column: 41
          }
        }, {
          start: {
            line: 98,
            column: 45
          },
          end: {
            line: 98,
            column: 49
          }
        }],
        line: 98
      },
      "18": {
        loc: {
          start: {
            line: 99,
            column: 27
          },
          end: {
            line: 99,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 99,
            column: 27
          },
          end: {
            line: 99,
            column: 41
          }
        }, {
          start: {
            line: 99,
            column: 45
          },
          end: {
            line: 99,
            column: 49
          }
        }],
        line: 99
      },
      "19": {
        loc: {
          start: {
            line: 100,
            column: 26
          },
          end: {
            line: 100,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 100,
            column: 26
          },
          end: {
            line: 100,
            column: 39
          }
        }, {
          start: {
            line: 100,
            column: 43
          },
          end: {
            line: 100,
            column: 47
          }
        }],
        line: 100
      },
      "20": {
        loc: {
          start: {
            line: 101,
            column: 32
          },
          end: {
            line: 101,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 101,
            column: 32
          },
          end: {
            line: 101,
            column: 51
          }
        }, {
          start: {
            line: 101,
            column: 55
          },
          end: {
            line: 101,
            column: 59
          }
        }],
        line: 101
      },
      "21": {
        loc: {
          start: {
            line: 102,
            column: 33
          },
          end: {
            line: 102,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 102,
            column: 33
          },
          end: {
            line: 102,
            column: 53
          }
        }, {
          start: {
            line: 102,
            column: 57
          },
          end: {
            line: 102,
            column: 61
          }
        }],
        line: 102
      },
      "22": {
        loc: {
          start: {
            line: 103,
            column: 41
          },
          end: {
            line: 103,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 103,
            column: 41
          },
          end: {
            line: 103,
            column: 77
          }
        }, {
          start: {
            line: 103,
            column: 81
          },
          end: {
            line: 103,
            column: 82
          }
        }],
        line: 103
      },
      "23": {
        loc: {
          start: {
            line: 113,
            column: 32
          },
          end: {
            line: 113,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 113,
            column: 49
          },
          end: {
            line: 113,
            column: 54
          }
        }, {
          start: {
            line: 113,
            column: 57
          },
          end: {
            line: 113,
            column: 66
          }
        }],
        line: 113
      },
      "24": {
        loc: {
          start: {
            line: 114,
            column: 25
          },
          end: {
            line: 114,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 114,
            column: 25
          },
          end: {
            line: 114,
            column: 45
          }
        }, {
          start: {
            line: 114,
            column: 49
          },
          end: {
            line: 114,
            column: 58
          }
        }],
        line: 114
      },
      "25": {
        loc: {
          start: {
            line: 125,
            column: 21
          },
          end: {
            line: 125,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 125,
            column: 46
          },
          end: {
            line: 125,
            column: 59
          }
        }, {
          start: {
            line: 125,
            column: 62
          },
          end: {
            line: 125,
            column: 81
          }
        }],
        line: 125
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\debug\\user-status\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\nimport { auth } from '@/lib/auth/config'\r\nimport { NextResponse } from 'next/server'\r\n\r\nexport async function GET() {\r\n  try {\r\n    console.log('\uD83D\uDD0D [DEBUG] Iniciando verificaci\xF3n simplificada...')\r\n\r\n    // Verificar variables de entorno\r\n    const clerkSecretKey = process.env.CLERK_SECRET_KEY\r\n    const clerkPublishableKey = process.env.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY\r\n\r\n    console.log('\uD83D\uDD0D [DEBUG] Variables de entorno:', {\r\n      hasSecretKey: !!clerkSecretKey,\r\n      hasPublishableKey: !!clerkPublishableKey,\r\n      secretKeyLength: clerkSecretKey?.length || 0,\r\n      publishableKeyLength: clerkPublishableKey?.length || 0\r\n    })\r\n\r\n    // Obtener informaci\xF3n b\xE1sica de autenticaci\xF3n\r\n    let authData = null\r\n    let authError = null\r\n\r\n    try {\r\n      authData = await auth()\r\n      console.log('\uD83D\uDD0D [DEBUG] Auth exitoso')\r\n    } catch (error) {\r\n      authError = error instanceof Error ? error.message : 'Error desconocido en auth()'\r\n      console.error('\u274C [ERROR] Error en auth():', authError)\r\n    }\r\n\r\n    // Obtener informaci\xF3n del usuario\r\n    let user = null\r\n    let userError = null\r\n\r\n    try {\r\n      user = await currentUser()\r\n      console.log('\uD83D\uDD0D [DEBUG] CurrentUser exitoso')\r\n    } catch (error) {\r\n      userError = error instanceof Error ? error.message : 'Error desconocido en currentUser()'\r\n      console.error('\u274C [ERROR] Error en currentUser():', userError)\r\n    }\r\n    \r\n    // Verificar roles de forma segura\r\n    let hasAdminRole = false\r\n    let roleFromSessionClaims = null\r\n    let roleFromPublicMetadata = null\r\n    let roleFromPrivateMetadata = null\r\n    let roleError = null\r\n\r\n    try {\r\n      if (authData?.sessionClaims) {\r\n        roleFromSessionClaims = authData.sessionClaims.metadata?.role || authData.sessionClaims.role || null\r\n      }\r\n\r\n      if (user?.publicMetadata) {\r\n        roleFromPublicMetadata = user.publicMetadata.role || null\r\n      }\r\n\r\n      if (user?.privateMetadata) {\r\n        roleFromPrivateMetadata = user.privateMetadata.role || null\r\n      }\r\n\r\n      hasAdminRole = roleFromSessionClaims === 'admin' ||\r\n                    roleFromPublicMetadata === 'admin' ||\r\n                    roleFromPrivateMetadata === 'admin'\r\n\r\n      console.log('\uD83D\uDD0D [DEBUG] Verificaci\xF3n de roles exitosa:', {\r\n        hasAdminRole,\r\n        roleFromSessionClaims,\r\n        roleFromPublicMetadata,\r\n        roleFromPrivateMetadata\r\n      })\r\n    } catch (error) {\r\n      roleError = error instanceof Error ? error.message : 'Error desconocido en verificaci\xF3n de roles'\r\n      console.error('\u274C [ERROR] Error verificando roles:', roleError)\r\n    }\r\n    \r\n    // Construir respuesta de forma segura\r\n    const debugInfo = {\r\n      timestamp: new Date().toISOString(),\r\n      errors: {\r\n        authError,\r\n        userError,\r\n        roleError\r\n      },\r\n      authentication: {\r\n        isAuthenticated: !!authData?.userId,\r\n        userId: authData?.userId || null,\r\n        orgRole: authData?.orgRole || null,\r\n        sessionClaims: authData?.sessionClaims || null\r\n      },\r\n      user: user ? {\r\n        id: user.id || null,\r\n        email: session.user.email || null,\r\n        firstName: user.firstName || null,\r\n        lastName: user.lastName || null,\r\n        publicMetadata: user.publicMetadata || null,\r\n        privateMetadata: user.privateMetadata || null,\r\n        organizationMemberships: user.organizationMemberships?.length || 0\r\n      } : null,\r\n      roleCheck: {\r\n        hasAdminRole,\r\n        roleFromSessionClaims,\r\n        roleFromPublicMetadata,\r\n        roleFromPrivateMetadata\r\n      },\r\n      environment: {\r\n        clerkPublishableKey: clerkPublishableKey?.substring(0, 20) + '...',\r\n        clerkSecretKey: clerkSecretKey ? 'SET' : 'NOT_SET',\r\n        nodeEnv: process.env.NODE_ENV || 'unknown'\r\n      }\r\n    }\r\n    \r\n    console.log('\uD83D\uDD0D [DEBUG] Debug info completo:', JSON.stringify(debugInfo, null, 2))\r\n    \r\n    return NextResponse.json(debugInfo, { status: 200 })\r\n    \r\n  } catch (error) {\r\n    console.error('\u274C [ERROR] Error en debug de usuario:', error)\r\n    \r\n    return NextResponse.json({\r\n      error: 'Error al obtener informaci\xF3n del usuario',\r\n      details: error instanceof Error ? error.message : 'Error desconocido',\r\n      timestamp: new Date().toISOString()\r\n    }, { status: 500 })\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "runtime", "console", "log", "clerkSecretKey", "process", "env", "CLERK_SECRET_KEY", "clerkPublishableKey", "NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY", "hasSecretKey", "hasPublishableKey", "secretKeyLength", "length", "publishableKeyLength", "authData", "authError", "auth", "error", "Error", "message", "user", "userError", "currentUser", "hasAdminRole", "roleFromSessionClaims", "roleFromPublicMetadata", "roleFromPrivateMetadata", "roleError", "sessionClaims", "metadata", "role", "publicMetadata", "privateMetadata", "debugInfo", "timestamp", "Date", "toISOString", "errors", "authentication", "isAuthenticated", "userId", "orgRole", "id", "email", "session", "firstName", "lastName", "organizationMemberships", "roleCheck", "environment", "substring", "nodeEnv", "NODE_ENV", "JSON", "stringify", "NextResponse", "json", "status", "details"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6556f261ece71bfceced5e563208987645e0b518"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2ayl1v9blh = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2ayl1v9blh();
cov_2ayl1v9blh().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2ayl1v9blh().f[0]++;
  cov_2ayl1v9blh().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2ayl1v9blh().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_2ayl1v9blh().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_2ayl1v9blh().f[1]++;
    cov_2ayl1v9blh().s[4]++;
    return GET;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_2ayl1v9blh().f[2]++;
    cov_2ayl1v9blh().s[5]++;
    return runtime;
  }
});
const _config =
/* istanbul ignore next */
(cov_2ayl1v9blh().s[6]++, require("../../../../lib/auth/config"));
const _server =
/* istanbul ignore next */
(cov_2ayl1v9blh().s[7]++, require("next/server"));
const runtime =
/* istanbul ignore next */
(cov_2ayl1v9blh().s[8]++, 'nodejs');
async function GET() {
  /* istanbul ignore next */
  cov_2ayl1v9blh().f[3]++;
  cov_2ayl1v9blh().s[9]++;
  try {
    /* istanbul ignore next */
    cov_2ayl1v9blh().s[10]++;
    console.log('ğ [DEBUG] Iniciando verificaciÃ³n simplificada...');
    // Verificar variables de entorno
    const clerkSecretKey =
    /* istanbul ignore next */
    (cov_2ayl1v9blh().s[11]++, process.env.CLERK_SECRET_KEY);
    const clerkPublishableKey =
    /* istanbul ignore next */
    (cov_2ayl1v9blh().s[12]++, process.env.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY);
    /* istanbul ignore next */
    cov_2ayl1v9blh().s[13]++;
    console.log('ğ [DEBUG] Variables de entorno:', {
      hasSecretKey: !!clerkSecretKey,
      hasPublishableKey: !!clerkPublishableKey,
      secretKeyLength:
      /* istanbul ignore next */
      (cov_2ayl1v9blh().b[0][0]++, clerkSecretKey?.length) ||
      /* istanbul ignore next */
      (cov_2ayl1v9blh().b[0][1]++, 0),
      publishableKeyLength:
      /* istanbul ignore next */
      (cov_2ayl1v9blh().b[1][0]++, clerkPublishableKey?.length) ||
      /* istanbul ignore next */
      (cov_2ayl1v9blh().b[1][1]++, 0)
    });
    // Obtener informaciÃ³n bÃ¡sica de autenticaciÃ³n
    let authData =
    /* istanbul ignore next */
    (cov_2ayl1v9blh().s[14]++, null);
    let authError =
    /* istanbul ignore next */
    (cov_2ayl1v9blh().s[15]++, null);
    /* istanbul ignore next */
    cov_2ayl1v9blh().s[16]++;
    try {
      /* istanbul ignore next */
      cov_2ayl1v9blh().s[17]++;
      authData = await (0, _config.auth)();
      /* istanbul ignore next */
      cov_2ayl1v9blh().s[18]++;
      console.log('ğ [DEBUG] Auth exitoso');
    } catch (error) {
      /* istanbul ignore next */
      cov_2ayl1v9blh().s[19]++;
      authError = error instanceof Error ?
      /* istanbul ignore next */
      (cov_2ayl1v9blh().b[2][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2ayl1v9blh().b[2][1]++, 'Error desconocido en auth()');
      /* istanbul ignore next */
      cov_2ayl1v9blh().s[20]++;
      console.error('â [ERROR] Error en auth():', authError);
    }
    // Obtener informaciÃ³n del usuario
    let user =
    /* istanbul ignore next */
    (cov_2ayl1v9blh().s[21]++, null);
    let userError =
    /* istanbul ignore next */
    (cov_2ayl1v9blh().s[22]++, null);
    /* istanbul ignore next */
    cov_2ayl1v9blh().s[23]++;
    try {
      /* istanbul ignore next */
      cov_2ayl1v9blh().s[24]++;
      user = await currentUser();
      /* istanbul ignore next */
      cov_2ayl1v9blh().s[25]++;
      console.log('ğ [DEBUG] CurrentUser exitoso');
    } catch (error) {
      /* istanbul ignore next */
      cov_2ayl1v9blh().s[26]++;
      userError = error instanceof Error ?
      /* istanbul ignore next */
      (cov_2ayl1v9blh().b[3][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2ayl1v9blh().b[3][1]++, 'Error desconocido en currentUser()');
      /* istanbul ignore next */
      cov_2ayl1v9blh().s[27]++;
      console.error('â [ERROR] Error en currentUser():', userError);
    }
    // Verificar roles de forma segura
    let hasAdminRole =
    /* istanbul ignore next */
    (cov_2ayl1v9blh().s[28]++, false);
    let roleFromSessionClaims =
    /* istanbul ignore next */
    (cov_2ayl1v9blh().s[29]++, null);
    let roleFromPublicMetadata =
    /* istanbul ignore next */
    (cov_2ayl1v9blh().s[30]++, null);
    let roleFromPrivateMetadata =
    /* istanbul ignore next */
    (cov_2ayl1v9blh().s[31]++, null);
    let roleError =
    /* istanbul ignore next */
    (cov_2ayl1v9blh().s[32]++, null);
    /* istanbul ignore next */
    cov_2ayl1v9blh().s[33]++;
    try {
      /* istanbul ignore next */
      cov_2ayl1v9blh().s[34]++;
      if (authData?.sessionClaims) {
        /* istanbul ignore next */
        cov_2ayl1v9blh().b[4][0]++;
        cov_2ayl1v9blh().s[35]++;
        roleFromSessionClaims =
        /* istanbul ignore next */
        (cov_2ayl1v9blh().b[5][0]++, authData.sessionClaims.metadata?.role) ||
        /* istanbul ignore next */
        (cov_2ayl1v9blh().b[5][1]++, authData.sessionClaims.role) ||
        /* istanbul ignore next */
        (cov_2ayl1v9blh().b[5][2]++, null);
      } else
      /* istanbul ignore next */
      {
        cov_2ayl1v9blh().b[4][1]++;
      }
      cov_2ayl1v9blh().s[36]++;
      if (user?.publicMetadata) {
        /* istanbul ignore next */
        cov_2ayl1v9blh().b[6][0]++;
        cov_2ayl1v9blh().s[37]++;
        roleFromPublicMetadata =
        /* istanbul ignore next */
        (cov_2ayl1v9blh().b[7][0]++, user.publicMetadata.role) ||
        /* istanbul ignore next */
        (cov_2ayl1v9blh().b[7][1]++, null);
      } else
      /* istanbul ignore next */
      {
        cov_2ayl1v9blh().b[6][1]++;
      }
      cov_2ayl1v9blh().s[38]++;
      if (user?.privateMetadata) {
        /* istanbul ignore next */
        cov_2ayl1v9blh().b[8][0]++;
        cov_2ayl1v9blh().s[39]++;
        roleFromPrivateMetadata =
        /* istanbul ignore next */
        (cov_2ayl1v9blh().b[9][0]++, user.privateMetadata.role) ||
        /* istanbul ignore next */
        (cov_2ayl1v9blh().b[9][1]++, null);
      } else
      /* istanbul ignore next */
      {
        cov_2ayl1v9blh().b[8][1]++;
      }
      cov_2ayl1v9blh().s[40]++;
      hasAdminRole =
      /* istanbul ignore next */
      (cov_2ayl1v9blh().b[10][0]++, roleFromSessionClaims === 'admin') ||
      /* istanbul ignore next */
      (cov_2ayl1v9blh().b[10][1]++, roleFromPublicMetadata === 'admin') ||
      /* istanbul ignore next */
      (cov_2ayl1v9blh().b[10][2]++, roleFromPrivateMetadata === 'admin');
      /* istanbul ignore next */
      cov_2ayl1v9blh().s[41]++;
      console.log('ğ [DEBUG] VerificaciÃ³n de roles exitosa:', {
        hasAdminRole,
        roleFromSessionClaims,
        roleFromPublicMetadata,
        roleFromPrivateMetadata
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_2ayl1v9blh().s[42]++;
      roleError = error instanceof Error ?
      /* istanbul ignore next */
      (cov_2ayl1v9blh().b[11][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2ayl1v9blh().b[11][1]++, 'Error desconocido en verificaciÃ³n de roles');
      /* istanbul ignore next */
      cov_2ayl1v9blh().s[43]++;
      console.error('â [ERROR] Error verificando roles:', roleError);
    }
    // Construir respuesta de forma segura
    const debugInfo =
    /* istanbul ignore next */
    (cov_2ayl1v9blh().s[44]++, {
      timestamp: new Date().toISOString(),
      errors: {
        authError,
        userError,
        roleError
      },
      authentication: {
        isAuthenticated: !!authData?.userId,
        userId:
        /* istanbul ignore next */
        (cov_2ayl1v9blh().b[12][0]++, authData?.userId) ||
        /* istanbul ignore next */
        (cov_2ayl1v9blh().b[12][1]++, null),
        orgRole:
        /* istanbul ignore next */
        (cov_2ayl1v9blh().b[13][0]++, authData?.orgRole) ||
        /* istanbul ignore next */
        (cov_2ayl1v9blh().b[13][1]++, null),
        sessionClaims:
        /* istanbul ignore next */
        (cov_2ayl1v9blh().b[14][0]++, authData?.sessionClaims) ||
        /* istanbul ignore next */
        (cov_2ayl1v9blh().b[14][1]++, null)
      },
      user: user ?
      /* istanbul ignore next */
      (cov_2ayl1v9blh().b[15][0]++, {
        id:
        /* istanbul ignore next */
        (cov_2ayl1v9blh().b[16][0]++, user.id) ||
        /* istanbul ignore next */
        (cov_2ayl1v9blh().b[16][1]++, null),
        email:
        /* istanbul ignore next */
        (cov_2ayl1v9blh().b[17][0]++, session.user.email) ||
        /* istanbul ignore next */
        (cov_2ayl1v9blh().b[17][1]++, null),
        firstName:
        /* istanbul ignore next */
        (cov_2ayl1v9blh().b[18][0]++, user.firstName) ||
        /* istanbul ignore next */
        (cov_2ayl1v9blh().b[18][1]++, null),
        lastName:
        /* istanbul ignore next */
        (cov_2ayl1v9blh().b[19][0]++, user.lastName) ||
        /* istanbul ignore next */
        (cov_2ayl1v9blh().b[19][1]++, null),
        publicMetadata:
        /* istanbul ignore next */
        (cov_2ayl1v9blh().b[20][0]++, user.publicMetadata) ||
        /* istanbul ignore next */
        (cov_2ayl1v9blh().b[20][1]++, null),
        privateMetadata:
        /* istanbul ignore next */
        (cov_2ayl1v9blh().b[21][0]++, user.privateMetadata) ||
        /* istanbul ignore next */
        (cov_2ayl1v9blh().b[21][1]++, null),
        organizationMemberships:
        /* istanbul ignore next */
        (cov_2ayl1v9blh().b[22][0]++, user.organizationMemberships?.length) ||
        /* istanbul ignore next */
        (cov_2ayl1v9blh().b[22][1]++, 0)
      }) :
      /* istanbul ignore next */
      (cov_2ayl1v9blh().b[15][1]++, null),
      roleCheck: {
        hasAdminRole,
        roleFromSessionClaims,
        roleFromPublicMetadata,
        roleFromPrivateMetadata
      },
      environment: {
        clerkPublishableKey: clerkPublishableKey?.substring(0, 20) + '...',
        clerkSecretKey: clerkSecretKey ?
        /* istanbul ignore next */
        (cov_2ayl1v9blh().b[23][0]++, 'SET') :
        /* istanbul ignore next */
        (cov_2ayl1v9blh().b[23][1]++, 'NOT_SET'),
        nodeEnv:
        /* istanbul ignore next */
        (cov_2ayl1v9blh().b[24][0]++, process.env.NODE_ENV) ||
        /* istanbul ignore next */
        (cov_2ayl1v9blh().b[24][1]++, 'unknown')
      }
    });
    /* istanbul ignore next */
    cov_2ayl1v9blh().s[45]++;
    console.log('ğ [DEBUG] Debug info completo:', JSON.stringify(debugInfo, null, 2));
    /* istanbul ignore next */
    cov_2ayl1v9blh().s[46]++;
    return _server.NextResponse.json(debugInfo, {
      status: 200
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2ayl1v9blh().s[47]++;
    console.error('â [ERROR] Error en debug de usuario:', error);
    /* istanbul ignore next */
    cov_2ayl1v9blh().s[48]++;
    return _server.NextResponse.json({
      error: 'Error al obtener informaciÃ³n del usuario',
      details: error instanceof Error ?
      /* istanbul ignore next */
      (cov_2ayl1v9blh().b[25][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2ayl1v9blh().b[25][1]++, 'Error desconocido'),
      timestamp: new Date().toISOString()
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,