fa6fb8f58798772211e38251faa798cc
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_1roxieln8c() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\products\\route.ts";
  var hash = "b8467a2837fb3c667ccb12ed014fac938531bc62";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\products\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 20
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 23
        }
      },
      "7": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "8": {
        start: {
          line: 24,
          column: 18
        },
        end: {
          line: 24,
          column: 63
        }
      },
      "9": {
        start: {
          line: 25,
          column: 21
        },
        end: {
          line: 25,
          column: 56
        }
      },
      "10": {
        start: {
          line: 26,
          column: 21
        },
        end: {
          line: 26,
          column: 71
        }
      },
      "11": {
        start: {
          line: 27,
          column: 21
        },
        end: {
          line: 27,
          column: 64
        }
      },
      "12": {
        start: {
          line: 28,
          column: 24
        },
        end: {
          line: 28,
          column: 71
        }
      },
      "13": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 30,
          column: 51
        }
      },
      "14": {
        start: {
          line: 30,
          column: 39
        },
        end: {
          line: 30,
          column: 51
        }
      },
      "15": {
        start: {
          line: 31,
          column: 28
        },
        end: {
          line: 31,
          column: 41
        }
      },
      "16": {
        start: {
          line: 32,
          column: 27
        },
        end: {
          line: 32,
          column: 40
        }
      },
      "17": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 35,
          column: 20
        }
      },
      "18": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 66
        }
      },
      "19": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "20": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 19
        }
      },
      "21": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 45,
          column: 5
        }
      },
      "22": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 44,
          column: 10
        }
      },
      "23": {
        start: {
          line: 46,
          column: 16
        },
        end: {
          line: 46,
          column: 53
        }
      },
      "24": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 49,
          column: 5
        }
      },
      "25": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 30
        }
      },
      "26": {
        start: {
          line: 50,
          column: 17
        },
        end: {
          line: 52,
          column: 5
        }
      },
      "27": {
        start: {
          line: 53,
          column: 32
        },
        end: {
          line: 53,
          column: 88
        }
      },
      "28": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 63,
          column: 5
        }
      },
      "29": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 62,
          column: 9
        }
      },
      "30": {
        start: {
          line: 56,
          column: 23
        },
        end: {
          line: 56,
          column: 95
        }
      },
      "31": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 61,
          column: 13
        }
      },
      "32": {
        start: {
          line: 58,
          column: 16
        },
        end: {
          line: 58,
          column: 57
        }
      },
      "33": {
        start: {
          line: 60,
          column: 16
        },
        end: {
          line: 60,
          column: 39
        }
      },
      "34": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 64,
          column: 25
        }
      },
      "35": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 67,
          column: 5
        }
      },
      "36": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 31
        }
      },
      "37": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 68,
          column: 18
        }
      },
      "38": {
        start: {
          line: 70,
          column: 16
        },
        end: {
          line: 70,
          column: 24
        }
      },
      "39": {
        start: {
          line: 73,
          column: 27
        },
        end: {
          line: 73,
          column: 77
        }
      },
      "40": {
        start: {
          line: 75,
          column: 28
        },
        end: {
          line: 282,
          column: 6
        }
      },
      "41": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 281,
          column: 9
        }
      },
      "42": {
        start: {
          line: 77,
          column: 37
        },
        end: {
          line: 77,
          column: 57
        }
      },
      "43": {
        start: {
          line: 79,
          column: 32
        },
        end: {
          line: 93,
          column: 13
        }
      },
      "44": {
        start: {
          line: 95,
          column: 37
        },
        end: {
          line: 95,
          column: 119
        }
      },
      "45": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 116,
          column: 13
        }
      },
      "46": {
        start: {
          line: 98,
          column: 16
        },
        end: {
          line: 107,
          column: 19
        }
      },
      "47": {
        start: {
          line: 108,
          column: 38
        },
        end: {
          line: 112,
          column: 17
        }
      },
      "48": {
        start: {
          line: 113,
          column: 16
        },
        end: {
          line: 115,
          column: 19
        }
      },
      "49": {
        start: {
          line: 117,
          column: 28
        },
        end: {
          line: 117,
          column: 49
        }
      },
      "50": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 129,
          column: 15
        }
      },
      "51": {
        start: {
          line: 130,
          column: 29
        },
        end: {
          line: 130,
          column: 63
        }
      },
      "52": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 144,
          column: 13
        }
      },
      "53": {
        start: {
          line: 133,
          column: 16
        },
        end: {
          line: 135,
          column: 19
        }
      },
      "54": {
        start: {
          line: 136,
          column: 38
        },
        end: {
          line: 140,
          column: 17
        }
      },
      "55": {
        start: {
          line: 141,
          column: 16
        },
        end: {
          line: 143,
          column: 19
        }
      },
      "56": {
        start: {
          line: 147,
          column: 27
        },
        end: {
          line: 213,
          column: 50
        }
      },
      "57": {
        start: {
          line: 148,
          column: 28
        },
        end: {
          line: 153,
          column: 18
        }
      },
      "58": {
        start: {
          line: 155,
          column: 16
        },
        end: {
          line: 161,
          column: 17
        }
      },
      "59": {
        start: {
          line: 157,
          column: 51
        },
        end: {
          line: 157,
          column: 135
        }
      },
      "60": {
        start: {
          line: 158,
          column: 20
        },
        end: {
          line: 160,
          column: 21
        }
      },
      "61": {
        start: {
          line: 159,
          column: 24
        },
        end: {
          line: 159,
          column: 73
        }
      },
      "62": {
        start: {
          line: 163,
          column: 16
        },
        end: {
          line: 169,
          column: 17
        }
      },
      "63": {
        start: {
          line: 164,
          column: 53
        },
        end: {
          line: 164,
          column: 130
        }
      },
      "64": {
        start: {
          line: 165,
          column: 20
        },
        end: {
          line: 168,
          column: 21
        }
      },
      "65": {
        start: {
          line: 166,
          column: 44
        },
        end: {
          line: 166,
          column: 77
        }
      },
      "66": {
        start: {
          line: 166,
          column: 70
        },
        end: {
          line: 166,
          column: 76
        }
      },
      "67": {
        start: {
          line: 167,
          column: 24
        },
        end: {
          line: 167,
          column: 69
        }
      },
      "68": {
        start: {
          line: 170,
          column: 16
        },
        end: {
          line: 172,
          column: 17
        }
      },
      "69": {
        start: {
          line: 171,
          column: 20
        },
        end: {
          line: 171,
          column: 61
        }
      },
      "70": {
        start: {
          line: 174,
          column: 16
        },
        end: {
          line: 176,
          column: 17
        }
      },
      "71": {
        start: {
          line: 175,
          column: 20
        },
        end: {
          line: 175,
          column: 62
        }
      },
      "72": {
        start: {
          line: 178,
          column: 16
        },
        end: {
          line: 180,
          column: 17
        }
      },
      "73": {
        start: {
          line: 179,
          column: 20
        },
        end: {
          line: 179,
          column: 70
        }
      },
      "74": {
        start: {
          line: 182,
          column: 16
        },
        end: {
          line: 184,
          column: 17
        }
      },
      "75": {
        start: {
          line: 183,
          column: 20
        },
        end: {
          line: 183,
          column: 71
        }
      },
      "76": {
        start: {
          line: 185,
          column: 16
        },
        end: {
          line: 187,
          column: 17
        }
      },
      "77": {
        start: {
          line: 186,
          column: 20
        },
        end: {
          line: 186,
          column: 65
        }
      },
      "78": {
        start: {
          line: 188,
          column: 16
        },
        end: {
          line: 190,
          column: 17
        }
      },
      "79": {
        start: {
          line: 189,
          column: 20
        },
        end: {
          line: 189,
          column: 65
        }
      },
      "80": {
        start: {
          line: 191,
          column: 16
        },
        end: {
          line: 193,
          column: 17
        }
      },
      "81": {
        start: {
          line: 192,
          column: 20
        },
        end: {
          line: 192,
          column: 141
        }
      },
      "82": {
        start: {
          line: 195,
          column: 16
        },
        end: {
          line: 197,
          column: 17
        }
      },
      "83": {
        start: {
          line: 196,
          column: 20
        },
        end: {
          line: 196,
          column: 102
        }
      },
      "84": {
        start: {
          line: 201,
          column: 36
        },
        end: {
          line: 201,
          column: 154
        }
      },
      "85": {
        start: {
          line: 202,
          column: 16
        },
        end: {
          line: 204,
          column: 19
        }
      },
      "86": {
        start: {
          line: 206,
          column: 29
        },
        end: {
          line: 206,
          column: 46
        }
      },
      "87": {
        start: {
          line: 207,
          column: 30
        },
        end: {
          line: 207,
          column: 49
        }
      },
      "88": {
        start: {
          line: 208,
          column: 29
        },
        end: {
          line: 208,
          column: 47
        }
      },
      "89": {
        start: {
          line: 209,
          column: 27
        },
        end: {
          line: 209,
          column: 43
        }
      },
      "90": {
        start: {
          line: 210,
          column: 16
        },
        end: {
          line: 210,
          column: 46
        }
      },
      "91": {
        start: {
          line: 212,
          column: 16
        },
        end: {
          line: 212,
          column: 35
        }
      },
      "92": {
        start: {
          line: 214,
          column: 53
        },
        end: {
          line: 214,
          column: 59
        }
      },
      "93": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 230,
          column: 13
        }
      },
      "94": {
        start: {
          line: 217,
          column: 16
        },
        end: {
          line: 221,
          column: 19
        }
      },
      "95": {
        start: {
          line: 222,
          column: 38
        },
        end: {
          line: 226,
          column: 17
        }
      },
      "96": {
        start: {
          line: 227,
          column: 16
        },
        end: {
          line: 229,
          column: 19
        }
      },
      "97": {
        start: {
          line: 232,
          column: 25
        },
        end: {
          line: 232,
          column: 42
        }
      },
      "98": {
        start: {
          line: 233,
          column: 26
        },
        end: {
          line: 233,
          column: 45
        }
      },
      "99": {
        start: {
          line: 234,
          column: 31
        },
        end: {
          line: 234,
          column: 62
        }
      },
      "100": {
        start: {
          line: 236,
          column: 12
        },
        end: {
          line: 248,
          column: 15
        }
      },
      "101": {
        start: {
          line: 249,
          column: 29
        },
        end: {
          line: 259,
          column: 13
        }
      },
      "102": {
        start: {
          line: 261,
          column: 12
        },
        end: {
          line: 266,
          column: 15
        }
      },
      "103": {
        start: {
          line: 269,
          column: 12
        },
        end: {
          line: 272,
          column: 15
        }
      },
      "104": {
        start: {
          line: 273,
          column: 34
        },
        end: {
          line: 277,
          column: 13
        }
      },
      "105": {
        start: {
          line: 278,
          column: 12
        },
        end: {
          line: 280,
          column: 15
        }
      },
      "106": {
        start: {
          line: 284,
          column: 4
        },
        end: {
          line: 291,
          column: 5
        }
      },
      "107": {
        start: {
          line: 286,
          column: 8
        },
        end: {
          line: 289,
          column: 11
        }
      },
      "108": {
        start: {
          line: 290,
          column: 8
        },
        end: {
          line: 290,
          column: 31
        }
      },
      "109": {
        start: {
          line: 292,
          column: 4
        },
        end: {
          line: 292,
          column: 27
        }
      },
      "110": {
        start: {
          line: 296,
          column: 27
        },
        end: {
          line: 296,
          column: 77
        }
      },
      "111": {
        start: {
          line: 298,
          column: 28
        },
        end: {
          line: 394,
          column: 6
        }
      },
      "112": {
        start: {
          line: 299,
          column: 8
        },
        end: {
          line: 393,
          column: 9
        }
      },
      "113": {
        start: {
          line: 301,
          column: 41
        },
        end: {
          line: 301,
          column: 166
        }
      },
      "114": {
        start: {
          line: 301,
          column: 88
        },
        end: {
          line: 301,
          column: 165
        }
      },
      "115": {
        start: {
          line: 302,
          column: 31
        },
        end: {
          line: 304,
          column: 14
        }
      },
      "116": {
        start: {
          line: 305,
          column: 12
        },
        end: {
          line: 316,
          column: 13
        }
      },
      "117": {
        start: {
          line: 307,
          column: 16
        },
        end: {
          line: 307,
          column: 97
        }
      },
      "118": {
        start: {
          line: 308,
          column: 16
        },
        end: {
          line: 315,
          column: 19
        }
      },
      "119": {
        start: {
          line: 317,
          column: 28
        },
        end: {
          line: 317,
          column: 46
        }
      },
      "120": {
        start: {
          line: 319,
          column: 12
        },
        end: {
          line: 319,
          column: 59
        }
      },
      "121": {
        start: {
          line: 320,
          column: 25
        },
        end: {
          line: 320,
          column: 45
        }
      },
      "122": {
        start: {
          line: 322,
          column: 12
        },
        end: {
          line: 325,
          column: 15
        }
      },
      "123": {
        start: {
          line: 327,
          column: 32
        },
        end: {
          line: 327,
          column: 96
        }
      },
      "124": {
        start: {
          line: 328,
          column: 29
        },
        end: {
          line: 328,
          column: 67
        }
      },
      "125": {
        start: {
          line: 330,
          column: 12
        },
        end: {
          line: 342,
          column: 13
        }
      },
      "126": {
        start: {
          line: 331,
          column: 16
        },
        end: {
          line: 333,
          column: 19
        }
      },
      "127": {
        start: {
          line: 334,
          column: 38
        },
        end: {
          line: 338,
          column: 17
        }
      },
      "128": {
        start: {
          line: 339,
          column: 16
        },
        end: {
          line: 341,
          column: 19
        }
      },
      "129": {
        start: {
          line: 344,
          column: 12
        },
        end: {
          line: 346,
          column: 13
        }
      },
      "130": {
        start: {
          line: 345,
          column: 16
        },
        end: {
          line: 345,
          column: 118
        }
      },
      "131": {
        start: {
          line: 348,
          column: 27
        },
        end: {
          line: 353,
          column: 47
        }
      },
      "132": {
        start: {
          line: 349,
          column: 16
        },
        end: {
          line: 352,
          column: 24
        }
      },
      "133": {
        start: {
          line: 354,
          column: 45
        },
        end: {
          line: 354,
          column: 51
        }
      },
      "134": {
        start: {
          line: 355,
          column: 12
        },
        end: {
          line: 364,
          column: 13
        }
      },
      "135": {
        start: {
          line: 356,
          column: 16
        },
        end: {
          line: 362,
          column: 19
        }
      },
      "136": {
        start: {
          line: 363,
          column: 16
        },
        end: {
          line: 363,
          column: 80
        }
      },
      "137": {
        start: {
          line: 366,
          column: 12
        },
        end: {
          line: 370,
          column: 15
        }
      },
      "138": {
        start: {
          line: 371,
          column: 29
        },
        end: {
          line: 375,
          column: 13
        }
      },
      "139": {
        start: {
          line: 376,
          column: 12
        },
        end: {
          line: 378,
          column: 15
        }
      },
      "140": {
        start: {
          line: 381,
          column: 12
        },
        end: {
          line: 384,
          column: 15
        }
      },
      "141": {
        start: {
          line: 385,
          column: 34
        },
        end: {
          line: 389,
          column: 13
        }
      },
      "142": {
        start: {
          line: 390,
          column: 12
        },
        end: {
          line: 392,
          column: 15
        }
      },
      "143": {
        start: {
          line: 396,
          column: 4
        },
        end: {
          line: 404,
          column: 5
        }
      },
      "144": {
        start: {
          line: 398,
          column: 8
        },
        end: {
          line: 402,
          column: 11
        }
      },
      "145": {
        start: {
          line: 403,
          column: 8
        },
        end: {
          line: 403,
          column: 31
        }
      },
      "146": {
        start: {
          line: 405,
          column: 4
        },
        end: {
          line: 405,
          column: 27
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 29,
            column: 9
          },
          end: {
            line: 29,
            column: 33
          }
        },
        loc: {
          start: {
            line: 29,
            column: 47
          },
          end: {
            line: 36,
            column: 1
          }
        },
        line: 29
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 33,
            column: 39
          },
          end: {
            line: 33,
            column: 40
          }
        },
        loc: {
          start: {
            line: 33,
            column: 61
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 33
      },
      "6": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 37,
            column: 9
          },
          end: {
            line: 37,
            column: 34
          }
        },
        loc: {
          start: {
            line: 37,
            column: 53
          },
          end: {
            line: 69,
            column: 1
          }
        },
        line: 37
      },
      "7": {
        name: "GET",
        decl: {
          start: {
            line: 71,
            column: 15
          },
          end: {
            line: 71,
            column: 18
          }
        },
        loc: {
          start: {
            line: 71,
            column: 28
          },
          end: {
            line: 293,
            column: 1
          }
        },
        line: 71
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 75,
            column: 117
          },
          end: {
            line: 75,
            column: 118
          }
        },
        loc: {
          start: {
            line: 75,
            column: 127
          },
          end: {
            line: 282,
            column: 5
          }
        },
        line: 75
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 147,
            column: 71
          },
          end: {
            line: 147,
            column: 72
          }
        },
        loc: {
          start: {
            line: 147,
            column: 87
          },
          end: {
            line: 213,
            column: 13
          }
        },
        line: 147
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 166,
            column: 63
          },
          end: {
            line: 166,
            column: 64
          }
        },
        loc: {
          start: {
            line: 166,
            column: 70
          },
          end: {
            line: 166,
            column: 76
          }
        },
        line: 166
      },
      "11": {
        name: "POST",
        decl: {
          start: {
            line: 294,
            column: 15
          },
          end: {
            line: 294,
            column: 19
          }
        },
        loc: {
          start: {
            line: 294,
            column: 29
          },
          end: {
            line: 406,
            column: 1
          }
        },
        line: 294
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 298,
            column: 117
          },
          end: {
            line: 298,
            column: 118
          }
        },
        loc: {
          start: {
            line: 298,
            column: 127
          },
          end: {
            line: 394,
            column: 5
          }
        },
        line: 298
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 301,
            column: 70
          },
          end: {
            line: 301,
            column: 71
          }
        },
        loc: {
          start: {
            line: 301,
            column: 88
          },
          end: {
            line: 301,
            column: 165
          }
        },
        line: 301
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 348,
            column: 71
          },
          end: {
            line: 348,
            column: 72
          }
        },
        loc: {
          start: {
            line: 348,
            column: 87
          },
          end: {
            line: 353,
            column: 13
          }
        },
        line: 348
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "1": {
        loc: {
          start: {
            line: 34,
            column: 15
          },
          end: {
            line: 34,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 34,
            column: 29
          },
          end: {
            line: 34,
            column: 45
          }
        }, {
          start: {
            line: 34,
            column: 48
          },
          end: {
            line: 34,
            column: 65
          }
        }],
        line: 34
      },
      "2": {
        loc: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "3": {
        loc: {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 38,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 38,
            column: 20
          }
        }, {
          start: {
            line: 38,
            column: 24
          },
          end: {
            line: 38,
            column: 27
          }
        }, {
          start: {
            line: 38,
            column: 31
          },
          end: {
            line: 38,
            column: 45
          }
        }],
        line: 38
      },
      "4": {
        loc: {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "5": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 41,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 41,
            column: 20
          }
        }, {
          start: {
            line: 41,
            column: 24
          },
          end: {
            line: 41,
            column: 47
          }
        }, {
          start: {
            line: 41,
            column: 51
          },
          end: {
            line: 41,
            column: 76
          }
        }],
        line: 41
      },
      "6": {
        loc: {
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "7": {
        loc: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 47,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 47,
            column: 13
          }
        }, {
          start: {
            line: 47,
            column: 17
          },
          end: {
            line: 47,
            column: 31
          }
        }],
        line: 47
      },
      "8": {
        loc: {
          start: {
            line: 53,
            column: 32
          },
          end: {
            line: 53,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 32
          },
          end: {
            line: 53,
            column: 53
          }
        }, {
          start: {
            line: 53,
            column: 57
          },
          end: {
            line: 53,
            column: 88
          }
        }],
        line: 53
      },
      "9": {
        loc: {
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "10": {
        loc: {
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 55,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 55,
            column: 29
          }
        }, {
          start: {
            line: 55,
            column: 33
          },
          end: {
            line: 55,
            column: 79
          }
        }],
        line: 55
      },
      "11": {
        loc: {
          start: {
            line: 56,
            column: 23
          },
          end: {
            line: 56,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 56,
            column: 47
          },
          end: {
            line: 56,
            column: 88
          }
        }, {
          start: {
            line: 56,
            column: 91
          },
          end: {
            line: 56,
            column: 95
          }
        }],
        line: 56
      },
      "12": {
        loc: {
          start: {
            line: 57,
            column: 12
          },
          end: {
            line: 61,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 12
          },
          end: {
            line: 61,
            column: 13
          }
        }, {
          start: {
            line: 59,
            column: 19
          },
          end: {
            line: 61,
            column: 13
          }
        }],
        line: 57
      },
      "13": {
        loc: {
          start: {
            line: 57,
            column: 16
          },
          end: {
            line: 57,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 57,
            column: 16
          },
          end: {
            line: 57,
            column: 20
          }
        }, {
          start: {
            line: 57,
            column: 25
          },
          end: {
            line: 57,
            column: 33
          }
        }, {
          start: {
            line: 57,
            column: 37
          },
          end: {
            line: 57,
            column: 45
          }
        }],
        line: 57
      },
      "14": {
        loc: {
          start: {
            line: 65,
            column: 4
          },
          end: {
            line: 67,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 4
          },
          end: {
            line: 67,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "15": {
        loc: {
          start: {
            line: 80,
            column: 26
          },
          end: {
            line: 80,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 80,
            column: 26
          },
          end: {
            line: 80,
            column: 54
          }
        }, {
          start: {
            line: 80,
            column: 58
          },
          end: {
            line: 80,
            column: 67
          }
        }],
        line: 80
      },
      "16": {
        loc: {
          start: {
            line: 81,
            column: 28
          },
          end: {
            line: 81,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 81,
            column: 28
          },
          end: {
            line: 81,
            column: 86
          }
        }, {
          start: {
            line: 81,
            column: 90
          },
          end: {
            line: 81,
            column: 99
          }
        }],
        line: 81
      },
      "17": {
        loc: {
          start: {
            line: 82,
            column: 23
          },
          end: {
            line: 82,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 82,
            column: 23
          },
          end: {
            line: 82,
            column: 48
          }
        }, {
          start: {
            line: 82,
            column: 52
          },
          end: {
            line: 82,
            column: 61
          }
        }],
        line: 82
      },
      "18": {
        loc: {
          start: {
            line: 83,
            column: 24
          },
          end: {
            line: 83,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 83,
            column: 24
          },
          end: {
            line: 83,
            column: 78
          }
        }, {
          start: {
            line: 83,
            column: 82
          },
          end: {
            line: 83,
            column: 91
          }
        }],
        line: 83
      },
      "19": {
        loc: {
          start: {
            line: 84,
            column: 27
          },
          end: {
            line: 84,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 84,
            column: 27
          },
          end: {
            line: 84,
            column: 56
          }
        }, {
          start: {
            line: 84,
            column: 60
          },
          end: {
            line: 84,
            column: 69
          }
        }],
        line: 84
      },
      "20": {
        loc: {
          start: {
            line: 85,
            column: 28
          },
          end: {
            line: 85,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 85,
            column: 28
          },
          end: {
            line: 85,
            column: 86
          }
        }, {
          start: {
            line: 85,
            column: 90
          },
          end: {
            line: 85,
            column: 99
          }
        }],
        line: 85
      },
      "21": {
        loc: {
          start: {
            line: 86,
            column: 26
          },
          end: {
            line: 86,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 86,
            column: 57
          },
          end: {
            line: 86,
            column: 93
          }
        }, {
          start: {
            line: 86,
            column: 96
          },
          end: {
            line: 86,
            column: 105
          }
        }],
        line: 86
      },
      "22": {
        loc: {
          start: {
            line: 87,
            column: 26
          },
          end: {
            line: 87,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 87,
            column: 57
          },
          end: {
            line: 87,
            column: 93
          }
        }, {
          start: {
            line: 87,
            column: 96
          },
          end: {
            line: 87,
            column: 105
          }
        }],
        line: 87
      },
      "23": {
        loc: {
          start: {
            line: 88,
            column: 24
          },
          end: {
            line: 88,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 88,
            column: 24
          },
          end: {
            line: 88,
            column: 50
          }
        }, {
          start: {
            line: 88,
            column: 54
          },
          end: {
            line: 88,
            column: 63
          }
        }],
        line: 88
      },
      "24": {
        loc: {
          start: {
            line: 89,
            column: 22
          },
          end: {
            line: 89,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 89,
            column: 49
          },
          end: {
            line: 89,
            column: 81
          }
        }, {
          start: {
            line: 89,
            column: 84
          },
          end: {
            line: 89,
            column: 85
          }
        }],
        line: 89
      },
      "25": {
        loc: {
          start: {
            line: 90,
            column: 23
          },
          end: {
            line: 90,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 90,
            column: 51
          },
          end: {
            line: 90,
            column: 84
          }
        }, {
          start: {
            line: 90,
            column: 87
          },
          end: {
            line: 90,
            column: 89
          }
        }],
        line: 90
      },
      "26": {
        loc: {
          start: {
            line: 91,
            column: 24
          },
          end: {
            line: 91,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 91,
            column: 24
          },
          end: {
            line: 91,
            column: 50
          }
        }, {
          start: {
            line: 91,
            column: 54
          },
          end: {
            line: 91,
            column: 66
          }
        }],
        line: 91
      },
      "27": {
        loc: {
          start: {
            line: 92,
            column: 27
          },
          end: {
            line: 92,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 92,
            column: 27
          },
          end: {
            line: 92,
            column: 56
          }
        }, {
          start: {
            line: 92,
            column: 60
          },
          end: {
            line: 92,
            column: 66
          }
        }],
        line: 92
      },
      "28": {
        loc: {
          start: {
            line: 96,
            column: 12
          },
          end: {
            line: 116,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 12
          },
          end: {
            line: 116,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 96
      },
      "29": {
        loc: {
          start: {
            line: 127,
            column: 35
          },
          end: {
            line: 127,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 127,
            column: 35
          },
          end: {
            line: 127,
            column: 51
          }
        }, {
          start: {
            line: 127,
            column: 55
          },
          end: {
            line: 127,
            column: 68
          }
        }, {
          start: {
            line: 127,
            column: 72
          },
          end: {
            line: 127,
            column: 89
          }
        }],
        line: 127
      },
      "30": {
        loc: {
          start: {
            line: 132,
            column: 12
          },
          end: {
            line: 144,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 132,
            column: 12
          },
          end: {
            line: 144,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 132
      },
      "31": {
        loc: {
          start: {
            line: 155,
            column: 16
          },
          end: {
            line: 161,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 155,
            column: 16
          },
          end: {
            line: 161,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 155
      },
      "32": {
        loc: {
          start: {
            line: 158,
            column: 20
          },
          end: {
            line: 160,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 158,
            column: 20
          },
          end: {
            line: 160,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 158
      },
      "33": {
        loc: {
          start: {
            line: 163,
            column: 16
          },
          end: {
            line: 169,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 163,
            column: 16
          },
          end: {
            line: 169,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 163
      },
      "34": {
        loc: {
          start: {
            line: 163,
            column: 20
          },
          end: {
            line: 163,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 163,
            column: 20
          },
          end: {
            line: 163,
            column: 38
          }
        }, {
          start: {
            line: 163,
            column: 42
          },
          end: {
            line: 163,
            column: 71
          }
        }],
        line: 163
      },
      "35": {
        loc: {
          start: {
            line: 165,
            column: 20
          },
          end: {
            line: 168,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 165,
            column: 20
          },
          end: {
            line: 168,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 165
      },
      "36": {
        loc: {
          start: {
            line: 165,
            column: 24
          },
          end: {
            line: 165,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 165,
            column: 24
          },
          end: {
            line: 165,
            column: 38
          }
        }, {
          start: {
            line: 165,
            column: 42
          },
          end: {
            line: 165,
            column: 67
          }
        }],
        line: 165
      },
      "37": {
        loc: {
          start: {
            line: 170,
            column: 16
          },
          end: {
            line: 172,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 170,
            column: 16
          },
          end: {
            line: 172,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 170
      },
      "38": {
        loc: {
          start: {
            line: 174,
            column: 16
          },
          end: {
            line: 176,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 174,
            column: 16
          },
          end: {
            line: 176,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 174
      },
      "39": {
        loc: {
          start: {
            line: 174,
            column: 20
          },
          end: {
            line: 174,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 174,
            column: 20
          },
          end: {
            line: 174,
            column: 34
          }
        }, {
          start: {
            line: 174,
            column: 38
          },
          end: {
            line: 174,
            column: 63
          }
        }],
        line: 174
      },
      "40": {
        loc: {
          start: {
            line: 178,
            column: 16
          },
          end: {
            line: 180,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 178,
            column: 16
          },
          end: {
            line: 180,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 178
      },
      "41": {
        loc: {
          start: {
            line: 182,
            column: 16
          },
          end: {
            line: 184,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 182,
            column: 16
          },
          end: {
            line: 184,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 182
      },
      "42": {
        loc: {
          start: {
            line: 182,
            column: 20
          },
          end: {
            line: 182,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 182,
            column: 20
          },
          end: {
            line: 182,
            column: 38
          }
        }, {
          start: {
            line: 182,
            column: 42
          },
          end: {
            line: 182,
            column: 71
          }
        }],
        line: 182
      },
      "43": {
        loc: {
          start: {
            line: 185,
            column: 16
          },
          end: {
            line: 187,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 185,
            column: 16
          },
          end: {
            line: 187,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 185
      },
      "44": {
        loc: {
          start: {
            line: 188,
            column: 16
          },
          end: {
            line: 190,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 188,
            column: 16
          },
          end: {
            line: 190,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 188
      },
      "45": {
        loc: {
          start: {
            line: 191,
            column: 16
          },
          end: {
            line: 193,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 191,
            column: 16
          },
          end: {
            line: 193,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 191
      },
      "46": {
        loc: {
          start: {
            line: 195,
            column: 16
          },
          end: {
            line: 197,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 195,
            column: 16
          },
          end: {
            line: 197,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 195
      },
      "47": {
        loc: {
          start: {
            line: 201,
            column: 36
          },
          end: {
            line: 201,
            column: 154
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 201,
            column: 70
          },
          end: {
            line: 201,
            column: 82
          }
        }, {
          start: {
            line: 201,
            column: 85
          },
          end: {
            line: 201,
            column: 154
          }
        }],
        line: 201
      },
      "48": {
        loc: {
          start: {
            line: 201,
            column: 85
          },
          end: {
            line: 201,
            column: 154
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 201,
            column: 114
          },
          end: {
            line: 201,
            column: 121
          }
        }, {
          start: {
            line: 201,
            column: 124
          },
          end: {
            line: 201,
            column: 154
          }
        }],
        line: 201
      },
      "49": {
        loc: {
          start: {
            line: 201,
            column: 124
          },
          end: {
            line: 201,
            column: 154
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 201,
            column: 124
          },
          end: {
            line: 201,
            column: 138
          }
        }, {
          start: {
            line: 201,
            column: 142
          },
          end: {
            line: 201,
            column: 154
          }
        }],
        line: 201
      },
      "50": {
        loc: {
          start: {
            line: 206,
            column: 29
          },
          end: {
            line: 206,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 206,
            column: 29
          },
          end: {
            line: 206,
            column: 41
          }
        }, {
          start: {
            line: 206,
            column: 45
          },
          end: {
            line: 206,
            column: 46
          }
        }],
        line: 206
      },
      "51": {
        loc: {
          start: {
            line: 207,
            column: 30
          },
          end: {
            line: 207,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 207,
            column: 30
          },
          end: {
            line: 207,
            column: 43
          }
        }, {
          start: {
            line: 207,
            column: 47
          },
          end: {
            line: 207,
            column: 49
          }
        }],
        line: 207
      },
      "52": {
        loc: {
          start: {
            line: 215,
            column: 12
          },
          end: {
            line: 230,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 215,
            column: 12
          },
          end: {
            line: 230,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 215
      },
      "53": {
        loc: {
          start: {
            line: 225,
            column: 27
          },
          end: {
            line: 225,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 225,
            column: 27
          },
          end: {
            line: 225,
            column: 40
          }
        }, {
          start: {
            line: 225,
            column: 44
          },
          end: {
            line: 225,
            column: 92
          }
        }],
        line: 225
      },
      "54": {
        loc: {
          start: {
            line: 232,
            column: 25
          },
          end: {
            line: 232,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 232,
            column: 25
          },
          end: {
            line: 232,
            column: 37
          }
        }, {
          start: {
            line: 232,
            column: 41
          },
          end: {
            line: 232,
            column: 42
          }
        }],
        line: 232
      },
      "55": {
        loc: {
          start: {
            line: 233,
            column: 26
          },
          end: {
            line: 233,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 233,
            column: 26
          },
          end: {
            line: 233,
            column: 39
          }
        }, {
          start: {
            line: 233,
            column: 43
          },
          end: {
            line: 233,
            column: 45
          }
        }],
        line: 233
      },
      "56": {
        loc: {
          start: {
            line: 234,
            column: 42
          },
          end: {
            line: 234,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 234,
            column: 42
          },
          end: {
            line: 234,
            column: 47
          }
        }, {
          start: {
            line: 234,
            column: 51
          },
          end: {
            line: 234,
            column: 52
          }
        }],
        line: 234
      },
      "57": {
        loc: {
          start: {
            line: 242,
            column: 35
          },
          end: {
            line: 242,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 242,
            column: 35
          },
          end: {
            line: 242,
            column: 51
          }
        }, {
          start: {
            line: 242,
            column: 55
          },
          end: {
            line: 242,
            column: 56
          }
        }],
        line: 242
      },
      "58": {
        loc: {
          start: {
            line: 243,
            column: 32
          },
          end: {
            line: 243,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 243,
            column: 32
          },
          end: {
            line: 243,
            column: 37
          }
        }, {
          start: {
            line: 243,
            column: 41
          },
          end: {
            line: 243,
            column: 42
          }
        }],
        line: 243
      },
      "59": {
        loc: {
          start: {
            line: 250,
            column: 22
          },
          end: {
            line: 250,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 250,
            column: 22
          },
          end: {
            line: 250,
            column: 30
          }
        }, {
          start: {
            line: 250,
            column: 34
          },
          end: {
            line: 250,
            column: 36
          }
        }],
        line: 250
      },
      "60": {
        loc: {
          start: {
            line: 254,
            column: 27
          },
          end: {
            line: 254,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 254,
            column: 27
          },
          end: {
            line: 254,
            column: 32
          }
        }, {
          start: {
            line: 254,
            column: 36
          },
          end: {
            line: 254,
            column: 37
          }
        }],
        line: 254
      },
      "61": {
        loc: {
          start: {
            line: 258,
            column: 28
          },
          end: {
            line: 258,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 258,
            column: 28
          },
          end: {
            line: 258,
            column: 44
          }
        }, {
          start: {
            line: 258,
            column: 48
          },
          end: {
            line: 258,
            column: 49
          }
        }],
        line: 258
      },
      "62": {
        loc: {
          start: {
            line: 276,
            column: 23
          },
          end: {
            line: 276,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 276,
            column: 23
          },
          end: {
            line: 276,
            column: 36
          }
        }, {
          start: {
            line: 276,
            column: 40
          },
          end: {
            line: 276,
            column: 68
          }
        }],
        line: 276
      },
      "63": {
        loc: {
          start: {
            line: 284,
            column: 4
          },
          end: {
            line: 291,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 284,
            column: 4
          },
          end: {
            line: 291,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 284
      },
      "64": {
        loc: {
          start: {
            line: 305,
            column: 12
          },
          end: {
            line: 316,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 305,
            column: 12
          },
          end: {
            line: 316,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 305
      },
      "65": {
        loc: {
          start: {
            line: 314,
            column: 28
          },
          end: {
            line: 314,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 314,
            column: 28
          },
          end: {
            line: 314,
            column: 45
          }
        }, {
          start: {
            line: 314,
            column: 49
          },
          end: {
            line: 314,
            column: 52
          }
        }],
        line: 314
      },
      "66": {
        loc: {
          start: {
            line: 330,
            column: 12
          },
          end: {
            line: 342,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 330,
            column: 12
          },
          end: {
            line: 342,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 330
      },
      "67": {
        loc: {
          start: {
            line: 344,
            column: 12
          },
          end: {
            line: 346,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 344,
            column: 12
          },
          end: {
            line: 346,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 344
      },
      "68": {
        loc: {
          start: {
            line: 355,
            column: 12
          },
          end: {
            line: 364,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 355,
            column: 12
          },
          end: {
            line: 364,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 355
      },
      "69": {
        loc: {
          start: {
            line: 388,
            column: 23
          },
          end: {
            line: 388,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 388,
            column: 23
          },
          end: {
            line: 388,
            column: 36
          }
        }, {
          start: {
            line: 388,
            column: 40
          },
          end: {
            line: 388,
            column: 68
          }
        }],
        line: 388
      },
      "70": {
        loc: {
          start: {
            line: 396,
            column: 4
          },
          end: {
            line: 404,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 396,
            column: 4
          },
          end: {
            line: 404,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 396
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\products\\route.ts"],
      sourcesContent: ["\r\n// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - API DE PRODUCTOS\r\n// ===================================\r\n// API optimizada con rate limiting, timeouts centralizados y logging estructurado\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { getSupabaseClient, handleSupabaseError } from '@/lib/integrations/supabase';\r\nimport { validateData, safeValidateData, ProductFiltersSchema, ProductSchema } from '@/lib/validations';\r\nimport { ApiResponse, PaginatedResponse, ProductWithCategory } from '@/types/api';\r\nimport {\r\n  executeWithRLS,\r\n  withRLS,\r\n  createRLSFilters\r\n} from '@/lib/auth/enterprise-rls-utils';\r\n\r\n// ===================================\r\n// NUEVAS IMPORTACIONES - MEJORAS DE ALTA PRIORIDAD\r\n// ===================================\r\nimport {\r\n  withRateLimit,\r\n  RATE_LIMIT_CONFIGS\r\n} from '@/lib/rate-limiting/rate-limiter';\r\nimport {\r\n  API_TIMEOUTS,\r\n  withDatabaseTimeout,\r\n  getEndpointTimeouts\r\n} from '@/lib/config/api-timeouts';\r\nimport { createSecurityLogger } from '@/lib/logging/security-logger';\r\n\r\n// ===================================\r\n// GET /api/products - Obtener productos con filtros\r\n// ===================================\r\nexport async function GET(request: NextRequest) {\r\n  // Crear logger de seguridad con contexto\r\n  const securityLogger = createSecurityLogger(request);\r\n\r\n  // Aplicar rate limiting\r\n  const rateLimitResult = await withRateLimit(\r\n    request,\r\n    RATE_LIMIT_CONFIGS.products,\r\n    async () => {\r\n      try {\r\n        const { searchParams } = new URL(request.url);\r\n    \r\n    // Extraer par\xE1metros de query\r\n    const queryParams = {\r\n      category: searchParams.get('category') || undefined,\r\n      categories: searchParams.get('categories')?.split(',').filter(Boolean) || undefined,\r\n      brand: searchParams.get('brand') || undefined,\r\n      brands: searchParams.get('brands')?.split(',').filter(Boolean) || undefined,\r\n      paintType: searchParams.get('paintType') || undefined,\r\n      paintTypes: searchParams.get('paintTypes')?.split(',').filter(Boolean) || undefined,\r\n      priceMin: searchParams.get('priceMin') ? Number(searchParams.get('priceMin')) : undefined,\r\n      priceMax: searchParams.get('priceMax') ? Number(searchParams.get('priceMax')) : undefined,\r\n      search: searchParams.get('search') || undefined,\r\n      page: searchParams.get('page') ? Number(searchParams.get('page')) : 1,\r\n      limit: searchParams.get('limit') ? Number(searchParams.get('limit')) : 12,\r\n      sortBy: searchParams.get('sortBy') as 'price' | 'name' | 'created_at' | 'brand' || 'created_at',\r\n      sortOrder: searchParams.get('sortOrder') as 'asc' | 'desc' || 'desc',\r\n    };\r\n\r\n        // Validar par\xE1metros de manera segura\r\n        const validationResult = safeValidateData(ProductFiltersSchema, queryParams);\r\n\r\n        if (!validationResult.success) {\r\n          // Log de error de validaci\xF3n con contexto de seguridad\r\n          securityLogger.log({\r\n            type: 'validation_error',\r\n            severity: 'medium',\r\n            message: 'Invalid parameters in products API',\r\n            context: securityLogger.context,\r\n            metadata: {\r\n              validationError: validationResult.error,\r\n              queryParams,\r\n            },\r\n          });\r\n\r\n          const errorResponse: ApiResponse<null> = {\r\n            data: null,\r\n            success: false,\r\n            error: `Par\xE1metros inv\xE1lidos: ${validationResult.error}`,\r\n          };\r\n          return NextResponse.json(errorResponse, { status: 400 });\r\n        }\r\n\r\n        const filters = validationResult.data!;\r\n\r\n        // Log de acceso a datos con contexto\r\n        securityLogger.log({\r\n          type: 'data_access',\r\n          severity: 'low',\r\n          message: 'Products API accessed',\r\n          context: securityLogger.context,\r\n          metadata: {\r\n            filters: filters,\r\n            hasSearch: !!filters.search,\r\n            hasFilters: !!(filters.category || filters.brand || filters.paintType),\r\n          },\r\n        });\r\n\r\n        const supabase = getSupabaseClient();\r\n\r\n        // Verificar que el cliente de Supabase est\xE9 disponible\r\n        if (!supabase) {\r\n          securityLogger.logApiError(\r\n            securityLogger.context,\r\n            new Error('Supabase client not available'),\r\n            { service: 'supabase' }\r\n          );\r\n\r\n          const errorResponse: ApiResponse<null> = {\r\n            data: null,\r\n            success: false,\r\n            error: 'Servicio de base de datos no disponible',\r\n          };\r\n          return NextResponse.json(errorResponse, { status: 503 });\r\n        }\r\n\r\n        // Construir query base optimizada (solo campos necesarios)\r\n        // Usar timeout centralizado para operaciones de base de datos\r\n        const result = await withDatabaseTimeout(async (signal) => {\r\n          let query = supabase\r\n            .from('products')\r\n            .select(`\r\n              id, name, slug, price, discounted_price, brand, stock, images,\r\n              category:categories(id, name, slug)\r\n            `, { count: 'exact' });\r\n\r\n          // Aplicar filtros\r\n          if (filters.category) {\r\n            // Primero obtener el ID de la categor\xEDa por su slug\r\n            const { data: categoryData } = await supabase\r\n              .from('categories')\r\n              .select('id')\r\n              .eq('slug', filters.category)\r\n              .single();\r\n\r\n            if (categoryData) {\r\n              query = query.eq('category_id', categoryData.id);\r\n            }\r\n          }\r\n\r\n          // Filtro por m\xFAltiples categor\xEDas (nuevo)\r\n          if (filters.categories && filters.categories.length > 0) {\r\n            const { data: categoriesData } = await supabase\r\n              .from('categories')\r\n              .select('id')\r\n              .in('slug', filters.categories);\r\n\r\n            if (categoriesData && categoriesData.length > 0) {\r\n              const categoryIds = categoriesData.map(cat => cat.id);\r\n              query = query.in('category_id', categoryIds);\r\n            }\r\n          }\r\n\r\n          if (filters.brand) {\r\n            query = query.eq('brand', filters.brand);\r\n          }\r\n\r\n          // Filtro por m\xFAltiples marcas (nuevo)\r\n          if (filters.brands && filters.brands.length > 0) {\r\n            query = query.in('brand', filters.brands);\r\n          }\r\n\r\n          // Filtro por tipo de pintura (nuevo)\r\n          if (filters.paintType) {\r\n            query = query.eq('paint_type', filters.paintType);\r\n          }\r\n\r\n          // Filtro por m\xFAltiples tipos de pintura (nuevo)\r\n          if (filters.paintTypes && filters.paintTypes.length > 0) {\r\n            query = query.in('paint_type', filters.paintTypes);\r\n          }\r\n\r\n          if (filters.priceMin) {\r\n            query = query.gte('price', filters.priceMin);\r\n          }\r\n\r\n          if (filters.priceMax) {\r\n            query = query.lte('price', filters.priceMax);\r\n          }\r\n\r\n          if (filters.search) {\r\n            query = query.or(`name.ilike.%${filters.search}%,description.ilike.%${filters.search}%,brand.ilike.%${filters.search}%`);\r\n          }\r\n\r\n          // Filtro por productos con descuento real (discounted_price < price)\r\n          if (filters.hasDiscount) {\r\n            query = query.not('discounted_price', 'is', null).lt('discounted_price', 'price');\r\n          }\r\n\r\n          // Solo productos con stock (temporalmente comentado para testing)\r\n          // query = query.gt('stock', 0);\r\n\r\n          // Ordenamiento\r\n          const orderColumn = filters.sortBy === 'created_at' ? 'created_at' :\r\n                             filters.sortBy === 'brand' ? 'brand' :\r\n                             (filters.sortBy || 'created_at');\r\n          query = query.order(orderColumn, { ascending: filters.sortOrder === 'asc' });\r\n\r\n          // Paginaci\xF3n\r\n          const page = filters.page || 1;\r\n          const limit = filters.limit || 10;\r\n          const from = (page - 1) * limit;\r\n          const to = from + limit - 1;\r\n          query = query.range(from, to);\r\n\r\n          // Ejecutar query con timeout\r\n          return await query;\r\n        }, API_TIMEOUTS.database);\r\n\r\n        const { data: products, error, count } = result;\r\n\r\n        if (error) {\r\n          // Log de error de base de datos con contexto de seguridad\r\n          securityLogger.logApiError(\r\n            securityLogger.context,\r\n            new Error(`Supabase error: ${error.message}`),\r\n            {\r\n              supabaseError: error,\r\n              filters: filters,\r\n              operation: 'products_query'\r\n            }\r\n          );\r\n\r\n          const errorResponse: ApiResponse<null> = {\r\n            data: null,\r\n            success: false,\r\n            error: error.message || 'Error obteniendo productos de la base de datos',\r\n          };\r\n          return NextResponse.json(errorResponse, { status: 500 });\r\n        }\r\n\r\n        // Calcular informaci\xF3n de paginaci\xF3n\r\n        const page = filters.page || 1;\r\n        const limit = filters.limit || 10;\r\n        const totalPages = Math.ceil((count || 0) / limit);\r\n\r\n        // Log de operaci\xF3n exitosa\r\n        securityLogger.log({\r\n          type: 'data_access',\r\n          severity: 'low',\r\n          message: 'Products retrieved successfully',\r\n          context: securityLogger.context,\r\n          metadata: {\r\n            productsCount: products?.length || 0,\r\n            totalCount: count || 0,\r\n            page,\r\n            limit,\r\n            filters: filters,\r\n          },\r\n        });\r\n\r\n        const response: PaginatedResponse<ProductWithCategory> = {\r\n          data: products || [],\r\n          pagination: {\r\n            page,\r\n            limit,\r\n            total: count || 0,\r\n            totalPages,\r\n          },\r\n          success: true,\r\n          message: `${products?.length || 0} productos encontrados`,\r\n        };\r\n\r\n        // Agregar headers de cache para mejorar performance\r\n        return NextResponse.json(response, {\r\n          headers: {\r\n            'Cache-Control': 'public, s-maxage=60, stale-while-revalidate=300',\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n\r\n      } catch (error: any) {\r\n        // Log de error general con contexto de seguridad\r\n        securityLogger.logApiError(\r\n          securityLogger.context,\r\n          error,\r\n          {\r\n            operation: 'products_get',\r\n            stage: 'database_operation'\r\n          }\r\n        );\r\n\r\n        const errorResponse: ApiResponse<null> = {\r\n          data: null,\r\n          success: false,\r\n          error: error.message || 'Error interno del servidor',\r\n        };\r\n\r\n        return NextResponse.json(errorResponse, { status: 500 });\r\n      }\r\n    }\r\n  );\r\n\r\n  // Si withRateLimit devuelve una respuesta (rate limit excedido), devolverla\r\n  if (rateLimitResult instanceof NextResponse) {\r\n    // Log de rate limit excedido\r\n    securityLogger.logRateLimitExceeded(\r\n      securityLogger.context,\r\n      {\r\n        endpoint: '/api/products',\r\n        method: 'GET'\r\n      }\r\n    );\r\n    return rateLimitResult;\r\n  }\r\n\r\n  return rateLimitResult;\r\n}\r\n\r\n// ===================================\r\n// POST /api/products - Crear producto (Admin)\r\n// ===================================\r\nexport async function POST(request: NextRequest) {\r\n  // Crear logger de seguridad con contexto\r\n  const securityLogger = createSecurityLogger(request);\r\n\r\n  // Aplicar rate limiting para operaciones de creaci\xF3n\r\n  const rateLimitResult = await withRateLimit(\r\n    request,\r\n    RATE_LIMIT_CONFIGS.creation,\r\n    async () => {\r\n      try {\r\n        // ENTERPRISE: Usar nueva autenticaci\xF3n enterprise para admin\r\n        const { requireAdminAuth } = await import('@/lib/auth/enterprise-auth-utils');\r\n\r\n        const authResult = await requireAdminAuth(request, ['products_create']);\r\n\r\n        if (!authResult.success) {\r\n          // Log de intento de acceso no autorizado\r\n          securityLogger.logPermissionDenied(\r\n            securityLogger.context,\r\n            'products',\r\n            'create'\r\n          );\r\n\r\n          return NextResponse.json(\r\n            {\r\n              error: authResult.error,\r\n              code: authResult.code,\r\n              enterprise: true,\r\n              timestamp: new Date().toISOString()\r\n            },\r\n            { status: authResult.status || 401 }\r\n          );\r\n        }\r\n\r\n        const context = authResult.context!;\r\n\r\n        // Actualizar contexto del logger con informaci\xF3n del usuario\r\n        securityLogger.context.userId = context.userId;\r\n\r\n        const body = await request.json();\r\n\r\n        // Log de acci\xF3n administrativa\r\n        securityLogger.logAdminAction(\r\n          securityLogger.context,\r\n          'create_product',\r\n          {\r\n            productName: body.name,\r\n            category: body.category_id\r\n          }\r\n        );\r\n\r\n        // Validar datos del producto\r\n        const productData = validateData(ProductSchema, body);\r\n\r\n        const supabase = getSupabaseClient(true); // Usar cliente admin\r\n\r\n        // Verificar que el cliente administrativo est\xE9 disponible\r\n        if (!supabase) {\r\n          securityLogger.logApiError(\r\n            securityLogger.context,\r\n            new Error('Admin Supabase client not available'),\r\n            { service: 'supabase_admin' }\r\n          );\r\n\r\n          const errorResponse: ApiResponse<null> = {\r\n            data: null,\r\n            success: false,\r\n            error: 'Servicio administrativo no disponible',\r\n          };\r\n          return NextResponse.json(errorResponse, { status: 503 });\r\n        }\r\n\r\n        // Crear slug si no se proporciona\r\n        if (!productData.slug) {\r\n          productData.slug = productData.name\r\n            .toLowerCase()\r\n            .replace(/[^a-z0-9]+/g, '-')\r\n            .replace(/(^-|-$)/g, '');\r\n        }\r\n\r\n        // Insertar producto con timeout\r\n        const result = await withDatabaseTimeout(async (signal) => {\r\n          return await supabase\r\n            .from('products')\r\n            .insert(productData)\r\n            .select(`\r\n              *,\r\n              category:categories(id, name, slug)\r\n            `)\r\n            .single();\r\n        }, API_TIMEOUTS.admin);\r\n\r\n        const { data: product, error } = result;\r\n\r\n        if (error) {\r\n          securityLogger.logApiError(\r\n            securityLogger.context,\r\n            new Error(`Product creation failed: ${error.message}`),\r\n            {\r\n              supabaseError: error,\r\n              productData: { ...productData, images: '[REDACTED]' } // No loggear im\xE1genes por seguridad\r\n            }\r\n          );\r\n          handleSupabaseError(error, 'POST /api/products');\r\n        }\r\n\r\n        // Log de creaci\xF3n exitosa\r\n        securityLogger.logAdminAction(\r\n          securityLogger.context,\r\n          'product_created_successfully',\r\n          {\r\n            productId: product?.id,\r\n            productName: product?.name,\r\n            category: product?.category?.name\r\n          }\r\n        );\r\n\r\n        const response: ApiResponse<ProductWithCategory> = {\r\n          data: product,\r\n          success: true,\r\n          message: 'Producto creado exitosamente',\r\n        };\r\n\r\n        return NextResponse.json(response, { status: 201 });\r\n\r\n      } catch (error: any) {\r\n        // Log de error general en creaci\xF3n de producto\r\n        securityLogger.logApiError(\r\n          securityLogger.context,\r\n          error,\r\n          {\r\n            operation: 'product_creation',\r\n            stage: 'general_error'\r\n          }\r\n        );\r\n\r\n        const errorResponse: ApiResponse<null> = {\r\n          data: null,\r\n          success: false,\r\n          error: error.message || 'Error interno del servidor',\r\n        };\r\n\r\n        return NextResponse.json(errorResponse, { status: 500 });\r\n      }\r\n    }\r\n  );\r\n\r\n  // Si withRateLimit devuelve una respuesta (rate limit excedido), devolverla\r\n  if (rateLimitResult instanceof NextResponse) {\r\n    // Log de rate limit excedido para creaci\xF3n\r\n    securityLogger.logRateLimitExceeded(\r\n      securityLogger.context,\r\n      {\r\n        endpoint: '/api/products',\r\n        method: 'POST',\r\n        operation: 'product_creation'\r\n      }\r\n    );\r\n    return rateLimitResult;\r\n  }\r\n\r\n  return rateLimitResult;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "POST", "runtime", "request", "securityLogger", "createSecurityLogger", "rateLimitResult", "withRateLimit", "RATE_LIMIT_CONFIGS", "products", "searchParams", "URL", "url", "queryParams", "category", "get", "undefined", "categories", "split", "filter", "Boolean", "brand", "brands", "paintType", "paintTypes", "priceMin", "Number", "priceMax", "search", "page", "limit", "sortBy", "sortOrder", "validationResult", "safeValidateData", "ProductFiltersSchema", "success", "log", "type", "severity", "message", "context", "metadata", "validationError", "error", "errorResponse", "data", "NextResponse", "json", "status", "filters", "hasSearch", "hasFilters", "supabase", "getSupabaseClient", "logApiError", "Error", "service", "result", "withDatabaseTimeout", "signal", "query", "from", "select", "count", "categoryData", "eq", "single", "id", "length", "categoriesData", "in", "categoryIds", "map", "cat", "gte", "lte", "or", "hasDiscount", "not", "lt", "orderColumn", "order", "ascending", "to", "range", "API_TIMEOUTS", "database", "supabaseError", "operation", "totalPages", "Math", "ceil", "productsCount", "totalCount", "response", "pagination", "total", "headers", "stage", "logRateLimitExceeded", "endpoint", "method", "creation", "requireAdminAuth", "authResult", "logPermissionDenied", "code", "enterprise", "timestamp", "Date", "toISOString", "userId", "body", "logAdminAction", "productName", "name", "category_id", "productData", "validateData", "ProductSchema", "slug", "toLowerCase", "replace", "insert", "admin", "product", "images", "handleSupabaseError", "productId"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b8467a2837fb3c667ccb12ed014fac938531bc62"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1roxieln8c = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1roxieln8c();
cov_1roxieln8c().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1roxieln8c().f[0]++;
  cov_1roxieln8c().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1roxieln8c().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1roxieln8c().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_1roxieln8c().f[1]++;
    cov_1roxieln8c().s[4]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_1roxieln8c().f[2]++;
    cov_1roxieln8c().s[5]++;
    return POST;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_1roxieln8c().f[3]++;
    cov_1roxieln8c().s[6]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_1roxieln8c().s[7]++, require("next/server"));
const _supabase =
/* istanbul ignore next */
(cov_1roxieln8c().s[8]++, require("../../../lib/integrations/supabase"));
const _validations =
/* istanbul ignore next */
(cov_1roxieln8c().s[9]++, require("../../../lib/validations"));
const _ratelimiter =
/* istanbul ignore next */
(cov_1roxieln8c().s[10]++, require("../../../lib/rate-limiting/rate-limiter"));
const _apitimeouts =
/* istanbul ignore next */
(cov_1roxieln8c().s[11]++, require("../../../lib/config/api-timeouts"));
const _securitylogger =
/* istanbul ignore next */
(cov_1roxieln8c().s[12]++, require("../../../lib/logging/security-logger"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_1roxieln8c().f[4]++;
  cov_1roxieln8c().s[13]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_1roxieln8c().b[0][0]++;
    cov_1roxieln8c().s[14]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1roxieln8c().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_1roxieln8c().s[15]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_1roxieln8c().s[16]++, new WeakMap());
  /* istanbul ignore next */
  cov_1roxieln8c().s[17]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_1roxieln8c().f[5]++;
    cov_1roxieln8c().s[18]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_1roxieln8c().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_1roxieln8c().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_1roxieln8c().f[6]++;
  cov_1roxieln8c().s[19]++;
  if (
  /* istanbul ignore next */
  (cov_1roxieln8c().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_1roxieln8c().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_1roxieln8c().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_1roxieln8c().b[2][0]++;
    cov_1roxieln8c().s[20]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1roxieln8c().b[2][1]++;
  }
  cov_1roxieln8c().s[21]++;
  if (
  /* istanbul ignore next */
  (cov_1roxieln8c().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_1roxieln8c().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_1roxieln8c().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_1roxieln8c().b[4][0]++;
    cov_1roxieln8c().s[22]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_1roxieln8c().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_1roxieln8c().s[23]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_1roxieln8c().s[24]++;
  if (
  /* istanbul ignore next */
  (cov_1roxieln8c().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_1roxieln8c().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_1roxieln8c().b[6][0]++;
    cov_1roxieln8c().s[25]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_1roxieln8c().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_1roxieln8c().s[26]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_1roxieln8c().s[27]++,
  /* istanbul ignore next */
  (cov_1roxieln8c().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_1roxieln8c().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_1roxieln8c().s[28]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_1roxieln8c().s[29]++;
    if (
    /* istanbul ignore next */
    (cov_1roxieln8c().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_1roxieln8c().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_1roxieln8c().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_1roxieln8c().s[30]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_1roxieln8c().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_1roxieln8c().b[11][1]++, null));
      /* istanbul ignore next */
      cov_1roxieln8c().s[31]++;
      if (
      /* istanbul ignore next */
      (cov_1roxieln8c().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_1roxieln8c().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_1roxieln8c().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_1roxieln8c().b[12][0]++;
        cov_1roxieln8c().s[32]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_1roxieln8c().b[12][1]++;
        cov_1roxieln8c().s[33]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_1roxieln8c().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1roxieln8c().s[34]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_1roxieln8c().s[35]++;
  if (cache) {
    /* istanbul ignore next */
    cov_1roxieln8c().b[14][0]++;
    cov_1roxieln8c().s[36]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_1roxieln8c().b[14][1]++;
  }
  cov_1roxieln8c().s[37]++;
  return newObj;
}
const runtime =
/* istanbul ignore next */
(cov_1roxieln8c().s[38]++, 'nodejs');
async function GET(request) {
  /* istanbul ignore next */
  cov_1roxieln8c().f[7]++;
  // Crear logger de seguridad con contexto
  const securityLogger =
  /* istanbul ignore next */
  (cov_1roxieln8c().s[39]++, (0, _securitylogger.createSecurityLogger)(request));
  // Aplicar rate limiting
  const rateLimitResult =
  /* istanbul ignore next */
  (cov_1roxieln8c().s[40]++, await (0, _ratelimiter.withRateLimit)(request, _ratelimiter.RATE_LIMIT_CONFIGS.products, async () => {
    /* istanbul ignore next */
    cov_1roxieln8c().f[8]++;
    cov_1roxieln8c().s[41]++;
    try {
      const {
        searchParams
      } =
      /* istanbul ignore next */
      (cov_1roxieln8c().s[42]++, new URL(request.url));
      // Extraer parÃ¡metros de query
      const queryParams =
      /* istanbul ignore next */
      (cov_1roxieln8c().s[43]++, {
        category:
        /* istanbul ignore next */
        (cov_1roxieln8c().b[15][0]++, searchParams.get('category')) ||
        /* istanbul ignore next */
        (cov_1roxieln8c().b[15][1]++, undefined),
        categories:
        /* istanbul ignore next */
        (cov_1roxieln8c().b[16][0]++, searchParams.get('categories')?.split(',').filter(Boolean)) ||
        /* istanbul ignore next */
        (cov_1roxieln8c().b[16][1]++, undefined),
        brand:
        /* istanbul ignore next */
        (cov_1roxieln8c().b[17][0]++, searchParams.get('brand')) ||
        /* istanbul ignore next */
        (cov_1roxieln8c().b[17][1]++, undefined),
        brands:
        /* istanbul ignore next */
        (cov_1roxieln8c().b[18][0]++, searchParams.get('brands')?.split(',').filter(Boolean)) ||
        /* istanbul ignore next */
        (cov_1roxieln8c().b[18][1]++, undefined),
        paintType:
        /* istanbul ignore next */
        (cov_1roxieln8c().b[19][0]++, searchParams.get('paintType')) ||
        /* istanbul ignore next */
        (cov_1roxieln8c().b[19][1]++, undefined),
        paintTypes:
        /* istanbul ignore next */
        (cov_1roxieln8c().b[20][0]++, searchParams.get('paintTypes')?.split(',').filter(Boolean)) ||
        /* istanbul ignore next */
        (cov_1roxieln8c().b[20][1]++, undefined),
        priceMin: searchParams.get('priceMin') ?
        /* istanbul ignore next */
        (cov_1roxieln8c().b[21][0]++, Number(searchParams.get('priceMin'))) :
        /* istanbul ignore next */
        (cov_1roxieln8c().b[21][1]++, undefined),
        priceMax: searchParams.get('priceMax') ?
        /* istanbul ignore next */
        (cov_1roxieln8c().b[22][0]++, Number(searchParams.get('priceMax'))) :
        /* istanbul ignore next */
        (cov_1roxieln8c().b[22][1]++, undefined),
        search:
        /* istanbul ignore next */
        (cov_1roxieln8c().b[23][0]++, searchParams.get('search')) ||
        /* istanbul ignore next */
        (cov_1roxieln8c().b[23][1]++, undefined),
        page: searchParams.get('page') ?
        /* istanbul ignore next */
        (cov_1roxieln8c().b[24][0]++, Number(searchParams.get('page'))) :
        /* istanbul ignore next */
        (cov_1roxieln8c().b[24][1]++, 1),
        limit: searchParams.get('limit') ?
        /* istanbul ignore next */
        (cov_1roxieln8c().b[25][0]++, Number(searchParams.get('limit'))) :
        /* istanbul ignore next */
        (cov_1roxieln8c().b[25][1]++, 12),
        sortBy:
        /* istanbul ignore next */
        (cov_1roxieln8c().b[26][0]++, searchParams.get('sortBy')) ||
        /* istanbul ignore next */
        (cov_1roxieln8c().b[26][1]++, 'created_at'),
        sortOrder:
        /* istanbul ignore next */
        (cov_1roxieln8c().b[27][0]++, searchParams.get('sortOrder')) ||
        /* istanbul ignore next */
        (cov_1roxieln8c().b[27][1]++, 'desc')
      });
      // Validar parÃ¡metros de manera segura
      const validationResult =
      /* istanbul ignore next */
      (cov_1roxieln8c().s[44]++, (0, _validations.safeValidateData)(_validations.ProductFiltersSchema, queryParams));
      /* istanbul ignore next */
      cov_1roxieln8c().s[45]++;
      if (!validationResult.success) {
        /* istanbul ignore next */
        cov_1roxieln8c().b[28][0]++;
        cov_1roxieln8c().s[46]++;
        // Log de error de validaciÃ³n con contexto de seguridad
        securityLogger.log({
          type: 'validation_error',
          severity: 'medium',
          message: 'Invalid parameters in products API',
          context: securityLogger.context,
          metadata: {
            validationError: validationResult.error,
            queryParams
          }
        });
        const errorResponse =
        /* istanbul ignore next */
        (cov_1roxieln8c().s[47]++, {
          data: null,
          success: false,
          error: `ParÃ¡metros invÃ¡lidos: ${validationResult.error}`
        });
        /* istanbul ignore next */
        cov_1roxieln8c().s[48]++;
        return _server.NextResponse.json(errorResponse, {
          status: 400
        });
      } else
      /* istanbul ignore next */
      {
        cov_1roxieln8c().b[28][1]++;
      }
      const filters =
      /* istanbul ignore next */
      (cov_1roxieln8c().s[49]++, validationResult.data);
      // Log de acceso a datos con contexto
      /* istanbul ignore next */
      cov_1roxieln8c().s[50]++;
      securityLogger.log({
        type: 'data_access',
        severity: 'low',
        message: 'Products API accessed',
        context: securityLogger.context,
        metadata: {
          filters: filters,
          hasSearch: !!filters.search,
          hasFilters: !!(
          /* istanbul ignore next */
          (cov_1roxieln8c().b[29][0]++, filters.category) ||
          /* istanbul ignore next */
          (cov_1roxieln8c().b[29][1]++, filters.brand) ||
          /* istanbul ignore next */
          (cov_1roxieln8c().b[29][2]++, filters.paintType))
        }
      });
      const supabase =
      /* istanbul ignore next */
      (cov_1roxieln8c().s[51]++, (0, _supabase.getSupabaseClient)());
      // Verificar que el cliente de Supabase estÃ© disponible
      /* istanbul ignore next */
      cov_1roxieln8c().s[52]++;
      if (!supabase) {
        /* istanbul ignore next */
        cov_1roxieln8c().b[30][0]++;
        cov_1roxieln8c().s[53]++;
        securityLogger.logApiError(securityLogger.context, new Error('Supabase client not available'), {
          service: 'supabase'
        });
        const errorResponse =
        /* istanbul ignore next */
        (cov_1roxieln8c().s[54]++, {
          data: null,
          success: false,
          error: 'Servicio de base de datos no disponible'
        });
        /* istanbul ignore next */
        cov_1roxieln8c().s[55]++;
        return _server.NextResponse.json(errorResponse, {
          status: 503
        });
      } else
      /* istanbul ignore next */
      {
        cov_1roxieln8c().b[30][1]++;
      }
      // Construir query base optimizada (solo campos necesarios)
      // Usar timeout centralizado para operaciones de base de datos
      const result =
      /* istanbul ignore next */
      (cov_1roxieln8c().s[56]++, await (0, _apitimeouts.withDatabaseTimeout)(async signal => {
        /* istanbul ignore next */
        cov_1roxieln8c().f[9]++;
        let query =
        /* istanbul ignore next */
        (cov_1roxieln8c().s[57]++, supabase.from('products').select(`
              id, name, slug, price, discounted_price, brand, stock, images,
              category:categories(id, name, slug)
            `, {
          count: 'exact'
        }));
        // Aplicar filtros
        /* istanbul ignore next */
        cov_1roxieln8c().s[58]++;
        if (filters.category) {
          /* istanbul ignore next */
          cov_1roxieln8c().b[31][0]++;
          // Primero obtener el ID de la categorÃ­a por su slug
          const {
            data: categoryData
          } =
          /* istanbul ignore next */
          (cov_1roxieln8c().s[59]++, await supabase.from('categories').select('id').eq('slug', filters.category).single());
          /* istanbul ignore next */
          cov_1roxieln8c().s[60]++;
          if (categoryData) {
            /* istanbul ignore next */
            cov_1roxieln8c().b[32][0]++;
            cov_1roxieln8c().s[61]++;
            query = query.eq('category_id', categoryData.id);
          } else
          /* istanbul ignore next */
          {
            cov_1roxieln8c().b[32][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_1roxieln8c().b[31][1]++;
        }
        // Filtro por mÃºltiples categorÃ­as (nuevo)
        cov_1roxieln8c().s[62]++;
        if (
        /* istanbul ignore next */
        (cov_1roxieln8c().b[34][0]++, filters.categories) &&
        /* istanbul ignore next */
        (cov_1roxieln8c().b[34][1]++, filters.categories.length > 0)) {
          /* istanbul ignore next */
          cov_1roxieln8c().b[33][0]++;
          const {
            data: categoriesData
          } =
          /* istanbul ignore next */
          (cov_1roxieln8c().s[63]++, await supabase.from('categories').select('id').in('slug', filters.categories));
          /* istanbul ignore next */
          cov_1roxieln8c().s[64]++;
          if (
          /* istanbul ignore next */
          (cov_1roxieln8c().b[36][0]++, categoriesData) &&
          /* istanbul ignore next */
          (cov_1roxieln8c().b[36][1]++, categoriesData.length > 0)) {
            /* istanbul ignore next */
            cov_1roxieln8c().b[35][0]++;
            const categoryIds =
            /* istanbul ignore next */
            (cov_1roxieln8c().s[65]++, categoriesData.map(cat => {
              /* istanbul ignore next */
              cov_1roxieln8c().f[10]++;
              cov_1roxieln8c().s[66]++;
              return cat.id;
            }));
            /* istanbul ignore next */
            cov_1roxieln8c().s[67]++;
            query = query.in('category_id', categoryIds);
          } else
          /* istanbul ignore next */
          {
            cov_1roxieln8c().b[35][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_1roxieln8c().b[33][1]++;
        }
        cov_1roxieln8c().s[68]++;
        if (filters.brand) {
          /* istanbul ignore next */
          cov_1roxieln8c().b[37][0]++;
          cov_1roxieln8c().s[69]++;
          query = query.eq('brand', filters.brand);
        } else
        /* istanbul ignore next */
        {
          cov_1roxieln8c().b[37][1]++;
        }
        // Filtro por mÃºltiples marcas (nuevo)
        cov_1roxieln8c().s[70]++;
        if (
        /* istanbul ignore next */
        (cov_1roxieln8c().b[39][0]++, filters.brands) &&
        /* istanbul ignore next */
        (cov_1roxieln8c().b[39][1]++, filters.brands.length > 0)) {
          /* istanbul ignore next */
          cov_1roxieln8c().b[38][0]++;
          cov_1roxieln8c().s[71]++;
          query = query.in('brand', filters.brands);
        } else
        /* istanbul ignore next */
        {
          cov_1roxieln8c().b[38][1]++;
        }
        // Filtro por tipo de pintura (nuevo)
        cov_1roxieln8c().s[72]++;
        if (filters.paintType) {
          /* istanbul ignore next */
          cov_1roxieln8c().b[40][0]++;
          cov_1roxieln8c().s[73]++;
          query = query.eq('paint_type', filters.paintType);
        } else
        /* istanbul ignore next */
        {
          cov_1roxieln8c().b[40][1]++;
        }
        // Filtro por mÃºltiples tipos de pintura (nuevo)
        cov_1roxieln8c().s[74]++;
        if (
        /* istanbul ignore next */
        (cov_1roxieln8c().b[42][0]++, filters.paintTypes) &&
        /* istanbul ignore next */
        (cov_1roxieln8c().b[42][1]++, filters.paintTypes.length > 0)) {
          /* istanbul ignore next */
          cov_1roxieln8c().b[41][0]++;
          cov_1roxieln8c().s[75]++;
          query = query.in('paint_type', filters.paintTypes);
        } else
        /* istanbul ignore next */
        {
          cov_1roxieln8c().b[41][1]++;
        }
        cov_1roxieln8c().s[76]++;
        if (filters.priceMin) {
          /* istanbul ignore next */
          cov_1roxieln8c().b[43][0]++;
          cov_1roxieln8c().s[77]++;
          query = query.gte('price', filters.priceMin);
        } else
        /* istanbul ignore next */
        {
          cov_1roxieln8c().b[43][1]++;
        }
        cov_1roxieln8c().s[78]++;
        if (filters.priceMax) {
          /* istanbul ignore next */
          cov_1roxieln8c().b[44][0]++;
          cov_1roxieln8c().s[79]++;
          query = query.lte('price', filters.priceMax);
        } else
        /* istanbul ignore next */
        {
          cov_1roxieln8c().b[44][1]++;
        }
        cov_1roxieln8c().s[80]++;
        if (filters.search) {
          /* istanbul ignore next */
          cov_1roxieln8c().b[45][0]++;
          cov_1roxieln8c().s[81]++;
          query = query.or(`name.ilike.%${filters.search}%,description.ilike.%${filters.search}%,brand.ilike.%${filters.search}%`);
        } else
        /* istanbul ignore next */
        {
          cov_1roxieln8c().b[45][1]++;
        }
        // Filtro por productos con descuento real (discounted_price < price)
        cov_1roxieln8c().s[82]++;
        if (filters.hasDiscount) {
          /* istanbul ignore next */
          cov_1roxieln8c().b[46][0]++;
          cov_1roxieln8c().s[83]++;
          query = query.not('discounted_price', 'is', null).lt('discounted_price', 'price');
        } else
        /* istanbul ignore next */
        {
          cov_1roxieln8c().b[46][1]++;
        }
        // Solo productos con stock (temporalmente comentado para testing)
        // query = query.gt('stock', 0);
        // Ordenamiento
        const orderColumn =
        /* istanbul ignore next */
        (cov_1roxieln8c().s[84]++, filters.sortBy === 'created_at' ?
        /* istanbul ignore next */
        (cov_1roxieln8c().b[47][0]++, 'created_at') :
        /* istanbul ignore next */
        (cov_1roxieln8c().b[47][1]++, filters.sortBy === 'brand' ?
        /* istanbul ignore next */
        (cov_1roxieln8c().b[48][0]++, 'brand') :
        /* istanbul ignore next */
        (cov_1roxieln8c().b[48][1]++,
        /* istanbul ignore next */
        (cov_1roxieln8c().b[49][0]++, filters.sortBy) ||
        /* istanbul ignore next */
        (cov_1roxieln8c().b[49][1]++, 'created_at'))));
        /* istanbul ignore next */
        cov_1roxieln8c().s[85]++;
        query = query.order(orderColumn, {
          ascending: filters.sortOrder === 'asc'
        });
        // PaginaciÃ³n
        const page =
        /* istanbul ignore next */
        (cov_1roxieln8c().s[86]++,
        /* istanbul ignore next */
        (cov_1roxieln8c().b[50][0]++, filters.page) ||
        /* istanbul ignore next */
        (cov_1roxieln8c().b[50][1]++, 1));
        const limit =
        /* istanbul ignore next */
        (cov_1roxieln8c().s[87]++,
        /* istanbul ignore next */
        (cov_1roxieln8c().b[51][0]++, filters.limit) ||
        /* istanbul ignore next */
        (cov_1roxieln8c().b[51][1]++, 10));
        const from =
        /* istanbul ignore next */
        (cov_1roxieln8c().s[88]++, (page - 1) * limit);
        const to =
        /* istanbul ignore next */
        (cov_1roxieln8c().s[89]++, from + limit - 1);
        /* istanbul ignore next */
        cov_1roxieln8c().s[90]++;
        query = query.range(from, to);
        // Ejecutar query con timeout
        /* istanbul ignore next */
        cov_1roxieln8c().s[91]++;
        return await query;
      }, _apitimeouts.API_TIMEOUTS.database));
      const {
        data: products,
        error,
        count
      } =
      /* istanbul ignore next */
      (cov_1roxieln8c().s[92]++, result);
      /* istanbul ignore next */
      cov_1roxieln8c().s[93]++;
      if (error) {
        /* istanbul ignore next */
        cov_1roxieln8c().b[52][0]++;
        cov_1roxieln8c().s[94]++;
        // Log de error de base de datos con contexto de seguridad
        securityLogger.logApiError(securityLogger.context, new Error(`Supabase error: ${error.message}`), {
          supabaseError: error,
          filters: filters,
          operation: 'products_query'
        });
        const errorResponse =
        /* istanbul ignore next */
        (cov_1roxieln8c().s[95]++, {
          data: null,
          success: false,
          error:
          /* istanbul ignore next */
          (cov_1roxieln8c().b[53][0]++, error.message) ||
          /* istanbul ignore next */
          (cov_1roxieln8c().b[53][1]++, 'Error obteniendo productos de la base de datos')
        });
        /* istanbul ignore next */
        cov_1roxieln8c().s[96]++;
        return _server.NextResponse.json(errorResponse, {
          status: 500
        });
      } else
      /* istanbul ignore next */
      {
        cov_1roxieln8c().b[52][1]++;
      }
      // Calcular informaciÃ³n de paginaciÃ³n
      const page =
      /* istanbul ignore next */
      (cov_1roxieln8c().s[97]++,
      /* istanbul ignore next */
      (cov_1roxieln8c().b[54][0]++, filters.page) ||
      /* istanbul ignore next */
      (cov_1roxieln8c().b[54][1]++, 1));
      const limit =
      /* istanbul ignore next */
      (cov_1roxieln8c().s[98]++,
      /* istanbul ignore next */
      (cov_1roxieln8c().b[55][0]++, filters.limit) ||
      /* istanbul ignore next */
      (cov_1roxieln8c().b[55][1]++, 10));
      const totalPages =
      /* istanbul ignore next */
      (cov_1roxieln8c().s[99]++, Math.ceil((
      /* istanbul ignore next */
      (cov_1roxieln8c().b[56][0]++, count) ||
      /* istanbul ignore next */
      (cov_1roxieln8c().b[56][1]++, 0)) / limit));
      // Log de operaciÃ³n exitosa
      /* istanbul ignore next */
      cov_1roxieln8c().s[100]++;
      securityLogger.log({
        type: 'data_access',
        severity: 'low',
        message: 'Products retrieved successfully',
        context: securityLogger.context,
        metadata: {
          productsCount:
          /* istanbul ignore next */
          (cov_1roxieln8c().b[57][0]++, products?.length) ||
          /* istanbul ignore next */
          (cov_1roxieln8c().b[57][1]++, 0),
          totalCount:
          /* istanbul ignore next */
          (cov_1roxieln8c().b[58][0]++, count) ||
          /* istanbul ignore next */
          (cov_1roxieln8c().b[58][1]++, 0),
          page,
          limit,
          filters: filters
        }
      });
      const response =
      /* istanbul ignore next */
      (cov_1roxieln8c().s[101]++, {
        data:
        /* istanbul ignore next */
        (cov_1roxieln8c().b[59][0]++, products) ||
        /* istanbul ignore next */
        (cov_1roxieln8c().b[59][1]++, []),
        pagination: {
          page,
          limit,
          total:
          /* istanbul ignore next */
          (cov_1roxieln8c().b[60][0]++, count) ||
          /* istanbul ignore next */
          (cov_1roxieln8c().b[60][1]++, 0),
          totalPages
        },
        success: true,
        message: `${
        /* istanbul ignore next */
        (cov_1roxieln8c().b[61][0]++, products?.length) ||
        /* istanbul ignore next */
        (cov_1roxieln8c().b[61][1]++, 0)} productos encontrados`
      });
      // Agregar headers de cache para mejorar performance
      /* istanbul ignore next */
      cov_1roxieln8c().s[102]++;
      return _server.NextResponse.json(response, {
        headers: {
          'Cache-Control': 'public, s-maxage=60, stale-while-revalidate=300',
          'Content-Type': 'application/json'
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1roxieln8c().s[103]++;
      // Log de error general con contexto de seguridad
      securityLogger.logApiError(securityLogger.context, error, {
        operation: 'products_get',
        stage: 'database_operation'
      });
      const errorResponse =
      /* istanbul ignore next */
      (cov_1roxieln8c().s[104]++, {
        data: null,
        success: false,
        error:
        /* istanbul ignore next */
        (cov_1roxieln8c().b[62][0]++, error.message) ||
        /* istanbul ignore next */
        (cov_1roxieln8c().b[62][1]++, 'Error interno del servidor')
      });
      /* istanbul ignore next */
      cov_1roxieln8c().s[105]++;
      return _server.NextResponse.json(errorResponse, {
        status: 500
      });
    }
  }));
  // Si withRateLimit devuelve una respuesta (rate limit excedido), devolverla
  /* istanbul ignore next */
  cov_1roxieln8c().s[106]++;
  if (rateLimitResult instanceof _server.NextResponse) {
    /* istanbul ignore next */
    cov_1roxieln8c().b[63][0]++;
    cov_1roxieln8c().s[107]++;
    // Log de rate limit excedido
    securityLogger.logRateLimitExceeded(securityLogger.context, {
      endpoint: '/api/products',
      method: 'GET'
    });
    /* istanbul ignore next */
    cov_1roxieln8c().s[108]++;
    return rateLimitResult;
  } else
  /* istanbul ignore next */
  {
    cov_1roxieln8c().b[63][1]++;
  }
  cov_1roxieln8c().s[109]++;
  return rateLimitResult;
}
async function POST(request) {
  /* istanbul ignore next */
  cov_1roxieln8c().f[11]++;
  // Crear logger de seguridad con contexto
  const securityLogger =
  /* istanbul ignore next */
  (cov_1roxieln8c().s[110]++, (0, _securitylogger.createSecurityLogger)(request));
  // Aplicar rate limiting para operaciones de creaciÃ³n
  const rateLimitResult =
  /* istanbul ignore next */
  (cov_1roxieln8c().s[111]++, await (0, _ratelimiter.withRateLimit)(request, _ratelimiter.RATE_LIMIT_CONFIGS.creation, async () => {
    /* istanbul ignore next */
    cov_1roxieln8c().f[12]++;
    cov_1roxieln8c().s[112]++;
    try {
      // ENTERPRISE: Usar nueva autenticaciÃ³n enterprise para admin
      const {
        requireAdminAuth
      } =
      /* istanbul ignore next */
      (cov_1roxieln8c().s[113]++, await Promise.resolve().then(() => {
        /* istanbul ignore next */
        cov_1roxieln8c().f[13]++;
        cov_1roxieln8c().s[114]++;
        return /*#__PURE__*/_interop_require_wildcard(require("../../../lib/auth/enterprise-auth-utils"));
      }));
      const authResult =
      /* istanbul ignore next */
      (cov_1roxieln8c().s[115]++, await requireAdminAuth(request, ['products_create']));
      /* istanbul ignore next */
      cov_1roxieln8c().s[116]++;
      if (!authResult.success) {
        /* istanbul ignore next */
        cov_1roxieln8c().b[64][0]++;
        cov_1roxieln8c().s[117]++;
        // Log de intento de acceso no autorizado
        securityLogger.logPermissionDenied(securityLogger.context, 'products', 'create');
        /* istanbul ignore next */
        cov_1roxieln8c().s[118]++;
        return _server.NextResponse.json({
          error: authResult.error,
          code: authResult.code,
          enterprise: true,
          timestamp: new Date().toISOString()
        }, {
          status:
          /* istanbul ignore next */
          (cov_1roxieln8c().b[65][0]++, authResult.status) ||
          /* istanbul ignore next */
          (cov_1roxieln8c().b[65][1]++, 401)
        });
      } else
      /* istanbul ignore next */
      {
        cov_1roxieln8c().b[64][1]++;
      }
      const context =
      /* istanbul ignore next */
      (cov_1roxieln8c().s[119]++, authResult.context);
      // Actualizar contexto del logger con informaciÃ³n del usuario
      /* istanbul ignore next */
      cov_1roxieln8c().s[120]++;
      securityLogger.context.userId = context.userId;
      const body =
      /* istanbul ignore next */
      (cov_1roxieln8c().s[121]++, await request.json());
      // Log de acciÃ³n administrativa
      /* istanbul ignore next */
      cov_1roxieln8c().s[122]++;
      securityLogger.logAdminAction(securityLogger.context, 'create_product', {
        productName: body.name,
        category: body.category_id
      });
      // Validar datos del producto
      const productData =
      /* istanbul ignore next */
      (cov_1roxieln8c().s[123]++, (0, _validations.validateData)(_validations.ProductSchema, body));
      const supabase =
      /* istanbul ignore next */
      (cov_1roxieln8c().s[124]++, (0, _supabase.getSupabaseClient)(true)); // Usar cliente admin
      // Verificar que el cliente administrativo estÃ© disponible
      /* istanbul ignore next */
      cov_1roxieln8c().s[125]++;
      if (!supabase) {
        /* istanbul ignore next */
        cov_1roxieln8c().b[66][0]++;
        cov_1roxieln8c().s[126]++;
        securityLogger.logApiError(securityLogger.context, new Error('Admin Supabase client not available'), {
          service: 'supabase_admin'
        });
        const errorResponse =
        /* istanbul ignore next */
        (cov_1roxieln8c().s[127]++, {
          data: null,
          success: false,
          error: 'Servicio administrativo no disponible'
        });
        /* istanbul ignore next */
        cov_1roxieln8c().s[128]++;
        return _server.NextResponse.json(errorResponse, {
          status: 503
        });
      } else
      /* istanbul ignore next */
      {
        cov_1roxieln8c().b[66][1]++;
      }
      // Crear slug si no se proporciona
      cov_1roxieln8c().s[129]++;
      if (!productData.slug) {
        /* istanbul ignore next */
        cov_1roxieln8c().b[67][0]++;
        cov_1roxieln8c().s[130]++;
        productData.slug = productData.name.toLowerCase().replace(/[^a-z0-9]+/g, '-').replace(/(^-|-$)/g, '');
      } else
      /* istanbul ignore next */
      {
        cov_1roxieln8c().b[67][1]++;
      }
      // Insertar producto con timeout
      const result =
      /* istanbul ignore next */
      (cov_1roxieln8c().s[131]++, await (0, _apitimeouts.withDatabaseTimeout)(async signal => {
        /* istanbul ignore next */
        cov_1roxieln8c().f[14]++;
        cov_1roxieln8c().s[132]++;
        return await supabase.from('products').insert(productData).select(`
              *,
              category:categories(id, name, slug)
            `).single();
      }, _apitimeouts.API_TIMEOUTS.admin));
      const {
        data: product,
        error
      } =
      /* istanbul ignore next */
      (cov_1roxieln8c().s[133]++, result);
      /* istanbul ignore next */
      cov_1roxieln8c().s[134]++;
      if (error) {
        /* istanbul ignore next */
        cov_1roxieln8c().b[68][0]++;
        cov_1roxieln8c().s[135]++;
        securityLogger.logApiError(securityLogger.context, new Error(`Product creation failed: ${error.message}`), {
          supabaseError: error,
          productData: {
            ...productData,
            images: '[REDACTED]'
          } // No loggear imÃ¡genes por seguridad
        });
        /* istanbul ignore next */
        cov_1roxieln8c().s[136]++;
        (0, _supabase.handleSupabaseError)(error, 'POST /api/products');
      } else
      /* istanbul ignore next */
      {
        cov_1roxieln8c().b[68][1]++;
      }
      // Log de creaciÃ³n exitosa
      cov_1roxieln8c().s[137]++;
      securityLogger.logAdminAction(securityLogger.context, 'product_created_successfully', {
        productId: product?.id,
        productName: product?.name,
        category: product?.category?.name
      });
      const response =
      /* istanbul ignore next */
      (cov_1roxieln8c().s[138]++, {
        data: product,
        success: true,
        message: 'Producto creado exitosamente'
      });
      /* istanbul ignore next */
      cov_1roxieln8c().s[139]++;
      return _server.NextResponse.json(response, {
        status: 201
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1roxieln8c().s[140]++;
      // Log de error general en creaciÃ³n de producto
      securityLogger.logApiError(securityLogger.context, error, {
        operation: 'product_creation',
        stage: 'general_error'
      });
      const errorResponse =
      /* istanbul ignore next */
      (cov_1roxieln8c().s[141]++, {
        data: null,
        success: false,
        error:
        /* istanbul ignore next */
        (cov_1roxieln8c().b[69][0]++, error.message) ||
        /* istanbul ignore next */
        (cov_1roxieln8c().b[69][1]++, 'Error interno del servidor')
      });
      /* istanbul ignore next */
      cov_1roxieln8c().s[142]++;
      return _server.NextResponse.json(errorResponse, {
        status: 500
      });
    }
  }));
  // Si withRateLimit devuelve una respuesta (rate limit excedido), devolverla
  /* istanbul ignore next */
  cov_1roxieln8c().s[143]++;
  if (rateLimitResult instanceof _server.NextResponse) {
    /* istanbul ignore next */
    cov_1roxieln8c().b[70][0]++;
    cov_1roxieln8c().s[144]++;
    // Log de rate limit excedido para creaciÃ³n
    securityLogger.logRateLimitExceeded(securityLogger.context, {
      endpoint: '/api/products',
      method: 'POST',
      operation: 'product_creation'
    });
    /* istanbul ignore next */
    cov_1roxieln8c().s[145]++;
    return rateLimitResult;
  } else
  /* istanbul ignore next */
  {
    cov_1roxieln8c().b[70][1]++;
  }
  cov_1roxieln8c().s[146]++;
  return rateLimitResult;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,