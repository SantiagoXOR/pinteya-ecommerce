56a6be827fa409708ce4ac8728b17ccd
// ===================================
// PINTEYA E-COMMERCE - ORDERS STATE HOOK
// Hook especializado para manejo de estado de Ã³rdenes
// ===================================
"use strict";

/* istanbul ignore next */
function cov_ztoiplvpi() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\admin\\useOrdersState.ts";
  var hash = "139128fa8ada9279994f86b876a2b232e2b441cd";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\admin\\useOrdersState.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 8,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 14,
          column: 3
        }
      },
      "2": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 30
        }
      },
      "3": {
        start: {
          line: 15,
          column: 15
        },
        end: {
          line: 15,
          column: 31
        }
      },
      "4": {
        start: {
          line: 19,
          column: 24
        },
        end: {
          line: 27,
          column: 1
        }
      },
      "5": {
        start: {
          line: 28,
          column: 22
        },
        end: {
          line: 35,
          column: 1
        }
      },
      "6": {
        start: {
          line: 38,
          column: 30
        },
        end: {
          line: 44,
          column: 6
        }
      },
      "7": {
        start: {
          line: 46,
          column: 27
        },
        end: {
          line: 46,
          column: 60
        }
      },
      "8": {
        start: {
          line: 50,
          column: 26
        },
        end: {
          line: 69,
          column: 10
        }
      },
      "9": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 68,
          column: 11
        }
      },
      "10": {
        start: {
          line: 52,
          column: 35
        },
        end: {
          line: 55,
          column: 13
        }
      },
      "11": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 56,
          column: 52
        }
      },
      "12": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 67,
          column: 14
        }
      },
      "13": {
        start: {
          line: 61,
          column: 55
        },
        end: {
          line: 61,
          column: 69
        }
      },
      "14": {
        start: {
          line: 70,
          column: 23
        },
        end: {
          line: 79,
          column: 10
        }
      },
      "15": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 78,
          column: 16
        }
      },
      "16": {
        start: {
          line: 71,
          column: 26
        },
        end: {
          line: 78,
          column: 13
        }
      },
      "17": {
        start: {
          line: 80,
          column: 21
        },
        end: {
          line: 86,
          column: 10
        }
      },
      "18": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 85,
          column: 16
        }
      },
      "19": {
        start: {
          line: 81,
          column: 26
        },
        end: {
          line: 85,
          column: 13
        }
      },
      "20": {
        start: {
          line: 87,
          column: 22
        },
        end: {
          line: 95,
          column: 10
        }
      },
      "21": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 94,
          column: 16
        }
      },
      "22": {
        start: {
          line: 88,
          column: 26
        },
        end: {
          line: 94,
          column: 13
        }
      },
      "23": {
        start: {
          line: 96,
          column: 26
        },
        end: {
          line: 101,
          column: 10
        }
      },
      "24": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 100,
          column: 16
        }
      },
      "25": {
        start: {
          line: 97,
          column: 26
        },
        end: {
          line: 100,
          column: 13
        }
      },
      "26": {
        start: {
          line: 102,
          column: 25
        },
        end: {
          line: 107,
          column: 10
        }
      },
      "27": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 106,
          column: 16
        }
      },
      "28": {
        start: {
          line: 103,
          column: 26
        },
        end: {
          line: 106,
          column: 13
        }
      },
      "29": {
        start: {
          line: 108,
          column: 23
        },
        end: {
          line: 118,
          column: 10
        }
      },
      "30": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 114,
          column: 11
        }
      },
      "31": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 117,
          column: 10
        }
      },
      "32": {
        start: {
          line: 119,
          column: 24
        },
        end: {
          line: 128,
          column: 10
        }
      },
      "33": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 127,
          column: 16
        }
      },
      "34": {
        start: {
          line: 120,
          column: 26
        },
        end: {
          line: 127,
          column: 13
        }
      },
      "35": {
        start: {
          line: 122,
          column: 49
        },
        end: {
          line: 125,
          column: 29
        }
      },
      "36": {
        start: {
          line: 132,
          column: 27
        },
        end: {
          line: 134,
          column: 10
        }
      },
      "37": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 133,
          column: 38
        }
      },
      "38": {
        start: {
          line: 135,
          column: 30
        },
        end: {
          line: 141,
          column: 6
        }
      },
      "39": {
        start: {
          line: 136,
          column: 37
        },
        end: {
          line: 136,
          column: 66
        }
      },
      "40": {
        start: {
          line: 137,
          column: 33
        },
        end: {
          line: 137,
          column: 59
        }
      },
      "41": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 138,
          column: 57
        }
      },
      "42": {
        start: {
          line: 145,
          column: 4
        },
        end: {
          line: 166,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 9
          },
          end: {
            line: 11,
            column: 10
          }
        },
        loc: {
          start: {
            line: 11,
            column: 20
          },
          end: {
            line: 13,
            column: 5
          }
        },
        line: 11
      },
      "1": {
        name: "useOrdersState",
        decl: {
          start: {
            line: 36,
            column: 9
          },
          end: {
            line: 36,
            column: 23
          }
        },
        loc: {
          start: {
            line: 36,
            column: 45
          },
          end: {
            line: 167,
            column: 1
          }
        },
        line: 36
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 50,
            column: 50
          },
          end: {
            line: 50,
            column: 51
          }
        },
        loc: {
          start: {
            line: 50,
            column: 64
          },
          end: {
            line: 69,
            column: 5
          }
        },
        line: 50
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 51,
            column: 17
          },
          end: {
            line: 51,
            column: 18
          }
        },
        loc: {
          start: {
            line: 51,
            column: 25
          },
          end: {
            line: 68,
            column: 9
          }
        },
        line: 51
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 61,
            column: 48
          },
          end: {
            line: 61,
            column: 49
          }
        },
        loc: {
          start: {
            line: 61,
            column: 55
          },
          end: {
            line: 61,
            column: 69
          }
        },
        line: 61
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 70,
            column: 47
          },
          end: {
            line: 70,
            column: 48
          }
        },
        loc: {
          start: {
            line: 70,
            column: 58
          },
          end: {
            line: 79,
            column: 5
          }
        },
        line: 70
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 71,
            column: 17
          },
          end: {
            line: 71,
            column: 18
          }
        },
        loc: {
          start: {
            line: 71,
            column: 26
          },
          end: {
            line: 78,
            column: 13
          }
        },
        line: 71
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 80,
            column: 45
          },
          end: {
            line: 80,
            column: 46
          }
        },
        loc: {
          start: {
            line: 80,
            column: 54
          },
          end: {
            line: 86,
            column: 5
          }
        },
        line: 80
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 81,
            column: 17
          },
          end: {
            line: 81,
            column: 18
          }
        },
        loc: {
          start: {
            line: 81,
            column: 26
          },
          end: {
            line: 85,
            column: 13
          }
        },
        line: 81
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 87,
            column: 46
          },
          end: {
            line: 87,
            column: 47
          }
        },
        loc: {
          start: {
            line: 87,
            column: 56
          },
          end: {
            line: 95,
            column: 5
          }
        },
        line: 87
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 88,
            column: 17
          },
          end: {
            line: 88,
            column: 18
          }
        },
        loc: {
          start: {
            line: 88,
            column: 26
          },
          end: {
            line: 94,
            column: 13
          }
        },
        line: 88
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 96,
            column: 50
          },
          end: {
            line: 96,
            column: 51
          }
        },
        loc: {
          start: {
            line: 96,
            column: 64
          },
          end: {
            line: 101,
            column: 5
          }
        },
        line: 96
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 97,
            column: 17
          },
          end: {
            line: 97,
            column: 18
          }
        },
        loc: {
          start: {
            line: 97,
            column: 26
          },
          end: {
            line: 100,
            column: 13
          }
        },
        line: 97
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 102,
            column: 49
          },
          end: {
            line: 102,
            column: 50
          }
        },
        loc: {
          start: {
            line: 102,
            column: 62
          },
          end: {
            line: 107,
            column: 5
          }
        },
        line: 102
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 103,
            column: 17
          },
          end: {
            line: 103,
            column: 18
          }
        },
        loc: {
          start: {
            line: 103,
            column: 26
          },
          end: {
            line: 106,
            column: 13
          }
        },
        line: 103
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 108,
            column: 47
          },
          end: {
            line: 108,
            column: 48
          }
        },
        loc: {
          start: {
            line: 108,
            column: 51
          },
          end: {
            line: 118,
            column: 5
          }
        },
        line: 108
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 119,
            column: 48
          },
          end: {
            line: 119,
            column: 49
          }
        },
        loc: {
          start: {
            line: 119,
            column: 68
          },
          end: {
            line: 128,
            column: 5
          }
        },
        line: 119
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 120,
            column: 17
          },
          end: {
            line: 120,
            column: 18
          }
        },
        loc: {
          start: {
            line: 120,
            column: 26
          },
          end: {
            line: 127,
            column: 13
          }
        },
        line: 120
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 122,
            column: 40
          },
          end: {
            line: 122,
            column: 41
          }
        },
        loc: {
          start: {
            line: 122,
            column: 49
          },
          end: {
            line: 125,
            column: 29
          }
        },
        line: 122
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 132,
            column: 51
          },
          end: {
            line: 132,
            column: 52
          }
        },
        loc: {
          start: {
            line: 132,
            column: 55
          },
          end: {
            line: 134,
            column: 5
          }
        },
        line: 132
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 135,
            column: 54
          },
          end: {
            line: 135,
            column: 55
          }
        },
        loc: {
          start: {
            line: 135,
            column: 68
          },
          end: {
            line: 139,
            column: 5
          }
        },
        line: 135
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 36,
            column: 24
          },
          end: {
            line: 36,
            column: 43
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 36,
            column: 41
          },
          end: {
            line: 36,
            column: 43
          }
        }],
        line: 36
      },
      "1": {
        loc: {
          start: {
            line: 61,
            column: 19
          },
          end: {
            line: 66,
            column: 17
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 61,
            column: 19
          },
          end: {
            line: 61,
            column: 70
          }
        }, {
          start: {
            line: 61,
            column: 74
          },
          end: {
            line: 66,
            column: 17
          }
        }],
        line: 61
      },
      "2": {
        loc: {
          start: {
            line: 62,
            column: 32
          },
          end: {
            line: 65,
            column: 28
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 62,
            column: 50
          },
          end: {
            line: 65,
            column: 21
          }
        }, {
          start: {
            line: 65,
            column: 24
          },
          end: {
            line: 65,
            column: 28
          }
        }],
        line: 62
      },
      "3": {
        loc: {
          start: {
            line: 75,
            column: 19
          },
          end: {
            line: 77,
            column: 17
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 75,
            column: 19
          },
          end: {
            line: 75,
            column: 26
          }
        }, {
          start: {
            line: 75,
            column: 30
          },
          end: {
            line: 77,
            column: 17
          }
        }],
        line: 75
      },
      "4": {
        loc: {
          start: {
            line: 122,
            column: 49
          },
          end: {
            line: 125,
            column: 29
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 122,
            column: 72
          },
          end: {
            line: 125,
            column: 21
          }
        }, {
          start: {
            line: 125,
            column: 24
          },
          end: {
            line: 125,
            column: 29
          }
        }],
        line: 122
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\admin\\useOrdersState.ts"],
      sourcesContent: ["// ===================================\r\n// PINTEYA E-COMMERCE - ORDERS STATE HOOK\r\n// Hook especializado para manejo de estado de \xF3rdenes\r\n// ===================================\r\n\r\nimport { useState, useCallback, useRef } from 'react';\r\nimport { StrictOrderEnterprise, StrictPagination } from '@/types/api-strict';\r\nimport { StrictOrderFilters } from './useOrdersEnterpriseStrict';\r\n\r\n// ===================================\r\n// TIPOS DE ESTADO\r\n// ===================================\r\n\r\nexport interface StrictOrdersState {\r\n  readonly orders: StrictOrderEnterprise[];\r\n  readonly pagination: StrictPagination | null;\r\n  readonly analytics: {\r\n    readonly total_orders: number;\r\n    readonly total_revenue: number;\r\n    readonly pending_orders: number;\r\n    readonly completed_orders: number;\r\n  } | null;\r\n  readonly filters: StrictOrderFilters;\r\n  readonly isLoading: boolean;\r\n  readonly error: string | null;\r\n  readonly lastUpdated: Date | null;\r\n}\r\n\r\nexport interface StrictOrdersActions {\r\n  readonly updateFilters: (newFilters: Partial<StrictOrderFilters>) => void;\r\n  readonly setLoading: (loading: boolean) => void;\r\n  readonly setError: (error: string | null) => void;\r\n  readonly setOrders: (orders: StrictOrderEnterprise[]) => void;\r\n  readonly setPagination: (pagination: StrictPagination | null) => void;\r\n  readonly setAnalytics: (analytics: StrictOrdersState['analytics']) => void;\r\n  readonly resetState: () => void;\r\n  readonly updateOrder: (orderId: string, updates: Partial<StrictOrderEnterprise>) => void;\r\n}\r\n\r\n// ===================================\r\n// ESTADO POR DEFECTO\r\n// ===================================\r\n\r\nconst DEFAULT_FILTERS: StrictOrderFilters = {\r\n  page: 1,\r\n  limit: 20,\r\n  sort_by: 'created_at',\r\n  sort_order: 'desc',\r\n  status: 'all',\r\n  payment_status: 'all',\r\n  fulfillment_status: 'all'\r\n};\r\n\r\nconst DEFAULT_STATE: Omit<StrictOrdersState, 'filters'> = {\r\n  orders: [],\r\n  pagination: null,\r\n  analytics: null,\r\n  isLoading: false,\r\n  error: null,\r\n  lastUpdated: null\r\n};\r\n\r\n// ===================================\r\n// HOOK DE ESTADO\r\n// ===================================\r\n\r\nexport interface UseOrdersStateReturn extends StrictOrdersState, StrictOrdersActions {\r\n  readonly getLastFilters: () => StrictOrderFilters;\r\n  readonly hasFiltersChanged: (newFilters: StrictOrderFilters) => boolean;\r\n}\r\n\r\nexport function useOrdersState(\r\n  initialFilters: Partial<StrictOrderFilters> = {}\r\n): UseOrdersStateReturn {\r\n  \r\n  // Estado principal\r\n  const [state, setState] = useState<StrictOrdersState>({\r\n    ...DEFAULT_STATE,\r\n    filters: { ...DEFAULT_FILTERS, ...initialFilters }\r\n  });\r\n  \r\n  // Referencias para comparaciones\r\n  const lastFiltersRef = useRef<StrictOrderFilters>(state.filters);\r\n  \r\n  // ===================================\r\n  // ACCIONES DE ESTADO\r\n  // ===================================\r\n  \r\n  const updateFilters = useCallback((newFilters: Partial<StrictOrderFilters>): void => {\r\n    setState(prev => {\r\n      const updatedFilters = { ...prev.filters, ...newFilters };\r\n      lastFiltersRef.current = updatedFilters;\r\n      \r\n      return {\r\n        ...prev,\r\n        filters: updatedFilters,\r\n        // Reset pagination cuando cambian filtros (excepto page)\r\n        ...(Object.keys(newFilters).some(key => key !== 'page') && {\r\n          pagination: prev.pagination ? { ...prev.pagination, page: 1 } : null\r\n        })\r\n      };\r\n    });\r\n  }, []);\r\n  \r\n  const setLoading = useCallback((loading: boolean): void => {\r\n    setState(prev => ({\r\n      ...prev,\r\n      isLoading: loading,\r\n      // Limpiar error cuando empieza nueva carga\r\n      ...(loading && { error: null })\r\n    }));\r\n  }, []);\r\n  \r\n  const setError = useCallback((error: string | null): void => {\r\n    setState(prev => ({\r\n      ...prev,\r\n      error,\r\n      isLoading: false\r\n    }));\r\n  }, []);\r\n  \r\n  const setOrders = useCallback((orders: StrictOrderEnterprise[]): void => {\r\n    setState(prev => ({\r\n      ...prev,\r\n      orders,\r\n      lastUpdated: new Date(),\r\n      isLoading: false,\r\n      error: null\r\n    }));\r\n  }, []);\r\n  \r\n  const setPagination = useCallback((pagination: StrictPagination | null): void => {\r\n    setState(prev => ({\r\n      ...prev,\r\n      pagination\r\n    }));\r\n  }, []);\r\n  \r\n  const setAnalytics = useCallback((analytics: StrictOrdersState['analytics']): void => {\r\n    setState(prev => ({\r\n      ...prev,\r\n      analytics\r\n    }));\r\n  }, []);\r\n  \r\n  const resetState = useCallback((): void => {\r\n    setState({\r\n      ...DEFAULT_STATE,\r\n      filters: { ...DEFAULT_FILTERS }\r\n    });\r\n    lastFiltersRef.current = { ...DEFAULT_FILTERS };\r\n  }, []);\r\n  \r\n  const updateOrder = useCallback((orderId: string, updates: Partial<StrictOrderEnterprise>): void => {\r\n    setState(prev => ({\r\n      ...prev,\r\n      orders: prev.orders.map(order => \r\n        order.id === orderId \r\n          ? { ...order, ...updates }\r\n          : order\r\n      ),\r\n      lastUpdated: new Date()\r\n    }));\r\n  }, []);\r\n  \r\n  // ===================================\r\n  // UTILIDADES\r\n  // ===================================\r\n  \r\n  const getLastFilters = useCallback((): StrictOrderFilters => {\r\n    return lastFiltersRef.current;\r\n  }, []);\r\n  \r\n  const hasFiltersChanged = useCallback((newFilters: StrictOrderFilters): boolean => {\r\n    const currentFiltersString = JSON.stringify(state.filters);\r\n    const newFiltersString = JSON.stringify(newFilters);\r\n    return currentFiltersString !== newFiltersString;\r\n  }, [state.filters]);\r\n  \r\n  // ===================================\r\n  // RETORNO DEL HOOK\r\n  // ===================================\r\n  \r\n  return {\r\n    // Estado\r\n    orders: state.orders,\r\n    pagination: state.pagination,\r\n    analytics: state.analytics,\r\n    filters: state.filters,\r\n    isLoading: state.isLoading,\r\n    error: state.error,\r\n    lastUpdated: state.lastUpdated,\r\n    \r\n    // Acciones\r\n    updateFilters,\r\n    setLoading,\r\n    setError,\r\n    setOrders,\r\n    setPagination,\r\n    setAnalytics,\r\n    resetState,\r\n    updateOrder,\r\n    \r\n    // Utilidades\r\n    getLastFilters,\r\n    hasFiltersChanged\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["useOrdersState", "DEFAULT_FILTERS", "page", "limit", "sort_by", "sort_order", "status", "payment_status", "fulfillment_status", "DEFAULT_STATE", "orders", "pagination", "analytics", "isLoading", "error", "lastUpdated", "initialFilters", "state", "setState", "useState", "filters", "lastFiltersRef", "useRef", "updateFilters", "useCallback", "newFilters", "prev", "updatedFilters", "current", "Object", "keys", "some", "key", "setLoading", "loading", "setError", "setOrders", "Date", "setPagination", "setAnalytics", "resetState", "updateOrder", "orderId", "updates", "map", "order", "id", "getLastFilters", "hasFiltersChanged", "currentFiltersString", "JSON", "stringify", "newFiltersString"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "139128fa8ada9279994f86b876a2b232e2b441cd"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_ztoiplvpi = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_ztoiplvpi();
cov_ztoiplvpi().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_ztoiplvpi().s[1]++;
Object.defineProperty(exports, "useOrdersState", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_ztoiplvpi().f[0]++;
    cov_ztoiplvpi().s[2]++;
    return useOrdersState;
  }
});
const _react =
/* istanbul ignore next */
(cov_ztoiplvpi().s[3]++, require("react"));
// ===================================
// ESTADO POR DEFECTO
// ===================================
const DEFAULT_FILTERS =
/* istanbul ignore next */
(cov_ztoiplvpi().s[4]++, {
  page: 1,
  limit: 20,
  sort_by: 'created_at',
  sort_order: 'desc',
  status: 'all',
  payment_status: 'all',
  fulfillment_status: 'all'
});
const DEFAULT_STATE =
/* istanbul ignore next */
(cov_ztoiplvpi().s[5]++, {
  orders: [],
  pagination: null,
  analytics: null,
  isLoading: false,
  error: null,
  lastUpdated: null
});
function useOrdersState(initialFilters =
/* istanbul ignore next */
(cov_ztoiplvpi().b[0][0]++, {})) {
  /* istanbul ignore next */
  cov_ztoiplvpi().f[1]++;
  // Estado principal
  const [state, setState] =
  /* istanbul ignore next */
  (cov_ztoiplvpi().s[6]++, (0, _react.useState)({
    ...DEFAULT_STATE,
    filters: {
      ...DEFAULT_FILTERS,
      ...initialFilters
    }
  }));
  // Referencias para comparaciones
  const lastFiltersRef =
  /* istanbul ignore next */
  (cov_ztoiplvpi().s[7]++, (0, _react.useRef)(state.filters));
  // ===================================
  // ACCIONES DE ESTADO
  // ===================================
  const updateFilters =
  /* istanbul ignore next */
  (cov_ztoiplvpi().s[8]++, (0, _react.useCallback)(newFilters => {
    /* istanbul ignore next */
    cov_ztoiplvpi().f[2]++;
    cov_ztoiplvpi().s[9]++;
    setState(prev => {
      /* istanbul ignore next */
      cov_ztoiplvpi().f[3]++;
      const updatedFilters =
      /* istanbul ignore next */
      (cov_ztoiplvpi().s[10]++, {
        ...prev.filters,
        ...newFilters
      });
      /* istanbul ignore next */
      cov_ztoiplvpi().s[11]++;
      lastFiltersRef.current = updatedFilters;
      /* istanbul ignore next */
      cov_ztoiplvpi().s[12]++;
      return {
        ...prev,
        filters: updatedFilters,
        // Reset pagination cuando cambian filtros (excepto page)
        ...(
        /* istanbul ignore next */
        (cov_ztoiplvpi().b[1][0]++, Object.keys(newFilters).some(key => {
          /* istanbul ignore next */
          cov_ztoiplvpi().f[4]++;
          cov_ztoiplvpi().s[13]++;
          return key !== 'page';
        })) &&
        /* istanbul ignore next */
        (cov_ztoiplvpi().b[1][1]++, {
          pagination: prev.pagination ?
          /* istanbul ignore next */
          (cov_ztoiplvpi().b[2][0]++, {
            ...prev.pagination,
            page: 1
          }) :
          /* istanbul ignore next */
          (cov_ztoiplvpi().b[2][1]++, null)
        }))
      };
    });
  }, []));
  const setLoading =
  /* istanbul ignore next */
  (cov_ztoiplvpi().s[14]++, (0, _react.useCallback)(loading => {
    /* istanbul ignore next */
    cov_ztoiplvpi().f[5]++;
    cov_ztoiplvpi().s[15]++;
    setState(prev => {
      /* istanbul ignore next */
      cov_ztoiplvpi().f[6]++;
      cov_ztoiplvpi().s[16]++;
      return {
        ...prev,
        isLoading: loading,
        // Limpiar error cuando empieza nueva carga
        ...(
        /* istanbul ignore next */
        (cov_ztoiplvpi().b[3][0]++, loading) &&
        /* istanbul ignore next */
        (cov_ztoiplvpi().b[3][1]++, {
          error: null
        }))
      };
    });
  }, []));
  const setError =
  /* istanbul ignore next */
  (cov_ztoiplvpi().s[17]++, (0, _react.useCallback)(error => {
    /* istanbul ignore next */
    cov_ztoiplvpi().f[7]++;
    cov_ztoiplvpi().s[18]++;
    setState(prev => {
      /* istanbul ignore next */
      cov_ztoiplvpi().f[8]++;
      cov_ztoiplvpi().s[19]++;
      return {
        ...prev,
        error,
        isLoading: false
      };
    });
  }, []));
  const setOrders =
  /* istanbul ignore next */
  (cov_ztoiplvpi().s[20]++, (0, _react.useCallback)(orders => {
    /* istanbul ignore next */
    cov_ztoiplvpi().f[9]++;
    cov_ztoiplvpi().s[21]++;
    setState(prev => {
      /* istanbul ignore next */
      cov_ztoiplvpi().f[10]++;
      cov_ztoiplvpi().s[22]++;
      return {
        ...prev,
        orders,
        lastUpdated: new Date(),
        isLoading: false,
        error: null
      };
    });
  }, []));
  const setPagination =
  /* istanbul ignore next */
  (cov_ztoiplvpi().s[23]++, (0, _react.useCallback)(pagination => {
    /* istanbul ignore next */
    cov_ztoiplvpi().f[11]++;
    cov_ztoiplvpi().s[24]++;
    setState(prev => {
      /* istanbul ignore next */
      cov_ztoiplvpi().f[12]++;
      cov_ztoiplvpi().s[25]++;
      return {
        ...prev,
        pagination
      };
    });
  }, []));
  const setAnalytics =
  /* istanbul ignore next */
  (cov_ztoiplvpi().s[26]++, (0, _react.useCallback)(analytics => {
    /* istanbul ignore next */
    cov_ztoiplvpi().f[13]++;
    cov_ztoiplvpi().s[27]++;
    setState(prev => {
      /* istanbul ignore next */
      cov_ztoiplvpi().f[14]++;
      cov_ztoiplvpi().s[28]++;
      return {
        ...prev,
        analytics
      };
    });
  }, []));
  const resetState =
  /* istanbul ignore next */
  (cov_ztoiplvpi().s[29]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_ztoiplvpi().f[15]++;
    cov_ztoiplvpi().s[30]++;
    setState({
      ...DEFAULT_STATE,
      filters: {
        ...DEFAULT_FILTERS
      }
    });
    /* istanbul ignore next */
    cov_ztoiplvpi().s[31]++;
    lastFiltersRef.current = {
      ...DEFAULT_FILTERS
    };
  }, []));
  const updateOrder =
  /* istanbul ignore next */
  (cov_ztoiplvpi().s[32]++, (0, _react.useCallback)((orderId, updates) => {
    /* istanbul ignore next */
    cov_ztoiplvpi().f[16]++;
    cov_ztoiplvpi().s[33]++;
    setState(prev => {
      /* istanbul ignore next */
      cov_ztoiplvpi().f[17]++;
      cov_ztoiplvpi().s[34]++;
      return {
        ...prev,
        orders: prev.orders.map(order => {
          /* istanbul ignore next */
          cov_ztoiplvpi().f[18]++;
          cov_ztoiplvpi().s[35]++;
          return order.id === orderId ?
          /* istanbul ignore next */
          (cov_ztoiplvpi().b[4][0]++, {
            ...order,
            ...updates
          }) :
          /* istanbul ignore next */
          (cov_ztoiplvpi().b[4][1]++, order);
        }),
        lastUpdated: new Date()
      };
    });
  }, []));
  // ===================================
  // UTILIDADES
  // ===================================
  const getLastFilters =
  /* istanbul ignore next */
  (cov_ztoiplvpi().s[36]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_ztoiplvpi().f[19]++;
    cov_ztoiplvpi().s[37]++;
    return lastFiltersRef.current;
  }, []));
  const hasFiltersChanged =
  /* istanbul ignore next */
  (cov_ztoiplvpi().s[38]++, (0, _react.useCallback)(newFilters => {
    /* istanbul ignore next */
    cov_ztoiplvpi().f[20]++;
    const currentFiltersString =
    /* istanbul ignore next */
    (cov_ztoiplvpi().s[39]++, JSON.stringify(state.filters));
    const newFiltersString =
    /* istanbul ignore next */
    (cov_ztoiplvpi().s[40]++, JSON.stringify(newFilters));
    /* istanbul ignore next */
    cov_ztoiplvpi().s[41]++;
    return currentFiltersString !== newFiltersString;
  }, [state.filters]));
  // ===================================
  // RETORNO DEL HOOK
  // ===================================
  /* istanbul ignore next */
  cov_ztoiplvpi().s[42]++;
  return {
    // Estado
    orders: state.orders,
    pagination: state.pagination,
    analytics: state.analytics,
    filters: state.filters,
    isLoading: state.isLoading,
    error: state.error,
    lastUpdated: state.lastUpdated,
    // Acciones
    updateFilters,
    setLoading,
    setError,
    setOrders,
    setPagination,
    setAnalytics,
    resetState,
    updateOrder,
    // Utilidades
    getLastFilters,
    hasFiltersChanged
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,