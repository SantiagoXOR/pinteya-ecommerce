{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\admin\\logistics\\CarrierPerformanceTable.tsx"],"sourcesContent":["// =====================================================\n// COMPONENTE: CARRIER PERFORMANCE TABLE ENTERPRISE\n// Descripción: Tabla de performance de couriers con métricas\n// Basado en: shadcn/ui DataTable + Recharts\n// =====================================================\n\n'use client'\n\nimport { useState } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Badge } from '@/components/ui/badge'\nimport { Progress } from '@/components/ui/progress'\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table'\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select'\nimport {\n  TrendingUp,\n  TrendingDown,\n  BarChart3,\n  Download,\n  Eye,\n  Award,\n  AlertTriangle,\n  CheckCircle,\n  Clock,\n  DollarSign,\n} from 'lucide-react'\nimport { CarrierPerformance } from '@/types/logistics'\nimport { cn } from '@/lib/core/utils'\nimport { formatCurrency, formatDate } from '@/lib/utils/consolidated-utils'\n\n// =====================================================\n// INTERFACES\n// =====================================================\n\ninterface CarrierPerformanceTableProps {\n  carriers: CarrierPerformance[]\n  className?: string\n}\n\ninterface PerformanceRowProps {\n  carrier: CarrierPerformance\n  rank: number\n  showDetails: boolean\n  onToggleDetails: () => void\n}\n\n// =====================================================\n// CONFIGURACIÓN\n// =====================================================\n\nconst performanceThresholds = {\n  excellent: 95,\n  good: 85,\n  average: 70,\n  poor: 50,\n}\n\nconst getPerformanceLevel = (rate: number) => {\n  if (rate >= performanceThresholds.excellent) {\n    return 'excellent'\n  }\n  if (rate >= performanceThresholds.good) {\n    return 'good'\n  }\n  if (rate >= performanceThresholds.average) {\n    return 'average'\n  }\n  return 'poor'\n}\n\nconst performanceConfig = {\n  excellent: {\n    label: 'Excelente',\n    color: 'text-green-600',\n    bgColor: 'bg-green-100',\n    icon: Award,\n  },\n  good: {\n    label: 'Bueno',\n    color: 'text-blue-600',\n    bgColor: 'bg-blue-100',\n    icon: CheckCircle,\n  },\n  average: {\n    label: 'Regular',\n    color: 'text-yellow-600',\n    bgColor: 'bg-yellow-100',\n    icon: Clock,\n  },\n  poor: {\n    label: 'Deficiente',\n    color: 'text-red-600',\n    bgColor: 'bg-red-100',\n    icon: AlertTriangle,\n  },\n}\n\n// =====================================================\n// COMPONENTE PRINCIPAL\n// =====================================================\n\nexport function CarrierPerformanceTable({ carriers, className }: CarrierPerformanceTableProps) {\n  const [sortBy, setSortBy] = useState<\n    'on_time_rate' | 'total_shipments' | 'average_cost_per_shipment'\n  >('on_time_rate')\n  const [sortOrder, setSortOrder] = useState<'asc' | 'desc'>('desc')\n  const [expandedRows, setExpandedRows] = useState<Set<number>>(new Set())\n\n  // Ordenar carriers\n  const sortedCarriers = [...carriers].sort((a, b) => {\n    const aValue = a[sortBy]\n    const bValue = b[sortBy]\n\n    if (sortOrder === 'desc') {\n      return bValue - aValue\n    }\n    return aValue - bValue\n  })\n\n  // Calcular estadísticas generales\n  const totalShipments = carriers.reduce((acc, c) => acc + c.total_shipments, 0)\n  const averageOnTimeRate =\n    carriers.length > 0 ? carriers.reduce((acc, c) => acc + c.on_time_rate, 0) / carriers.length : 0\n  const bestPerformer = carriers.reduce((best, current) =>\n    current.on_time_rate > best.on_time_rate ? current : best\n  )\n  const worstPerformer = carriers.reduce((worst, current) =>\n    current.on_time_rate < worst.on_time_rate ? current : worst\n  )\n\n  const handleSort = (column: typeof sortBy) => {\n    if (sortBy === column) {\n      setSortOrder(sortOrder === 'desc' ? 'asc' : 'desc')\n    } else {\n      setSortBy(column)\n      setSortOrder('desc')\n    }\n  }\n\n  const toggleRowExpansion = (carrierId: number) => {\n    const newExpanded = new Set(expandedRows)\n    if (newExpanded.has(carrierId)) {\n      newExpanded.delete(carrierId)\n    } else {\n      newExpanded.add(carrierId)\n    }\n    setExpandedRows(newExpanded)\n  }\n\n  if (carriers.length === 0) {\n    return (\n      <Card className={className}>\n        <CardContent className='p-6'>\n          <div className='text-center'>\n            <BarChart3 className='w-8 h-8 text-muted-foreground mx-auto mb-2' />\n            <p className='text-muted-foreground'>No hay datos de performance disponibles</p>\n          </div>\n        </CardContent>\n      </Card>\n    )\n  }\n\n  return (\n    <div className={cn('space-y-6', className)}>\n      {/* Métricas resumen */}\n      <div className='grid grid-cols-1 md:grid-cols-4 gap-4'>\n        <Card>\n          <CardContent className='p-4'>\n            <div className='flex items-center justify-between'>\n              <div>\n                <p className='text-sm font-medium text-muted-foreground'>Total Envíos</p>\n                <p className='text-2xl font-bold'>{totalShipments.toLocaleString()}</p>\n              </div>\n              <BarChart3 className='w-8 h-8 text-blue-500' />\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className='p-4'>\n            <div className='flex items-center justify-between'>\n              <div>\n                <p className='text-sm font-medium text-muted-foreground'>Puntualidad Promedio</p>\n                <p className='text-2xl font-bold'>{averageOnTimeRate.toFixed(1)}%</p>\n              </div>\n              <Clock className='w-8 h-8 text-green-500' />\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className='p-4'>\n            <div className='flex items-center justify-between'>\n              <div>\n                <p className='text-sm font-medium text-muted-foreground'>Mejor Performer</p>\n                <p className='text-lg font-bold truncate'>{bestPerformer?.carrier_name}</p>\n                <p className='text-sm text-green-600'>{bestPerformer?.on_time_rate.toFixed(1)}%</p>\n              </div>\n              <Award className='w-8 h-8 text-yellow-500' />\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className='p-4'>\n            <div className='flex items-center justify-between'>\n              <div>\n                <p className='text-sm font-medium text-muted-foreground'>Necesita Mejora</p>\n                <p className='text-lg font-bold truncate'>{worstPerformer?.carrier_name}</p>\n                <p className='text-sm text-red-600'>{worstPerformer?.on_time_rate.toFixed(1)}%</p>\n              </div>\n              <AlertTriangle className='w-8 h-8 text-red-500' />\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Tabla principal */}\n      <Card>\n        <CardHeader>\n          <div className='flex items-center justify-between'>\n            <div>\n              <CardTitle>Performance por Courier</CardTitle>\n              <CardDescription>Métricas detalladas de rendimiento y eficiencia</CardDescription>\n            </div>\n\n            <div className='flex items-center gap-3'>\n              <Select value={sortBy} onValueChange={(value: any) => setSortBy(value)}>\n                <SelectTrigger className='w-48'>\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value='on_time_rate'>Puntualidad</SelectItem>\n                  <SelectItem value='total_shipments'>Total Envíos</SelectItem>\n                  <SelectItem value='average_cost_per_shipment'>Costo Promedio</SelectItem>\n                </SelectContent>\n              </Select>\n\n              <Button variant='outline' size='sm'>\n                <Download className='w-4 h-4 mr-2' />\n                Exportar\n              </Button>\n            </div>\n          </div>\n        </CardHeader>\n\n        <CardContent>\n          <div className='rounded-md border'>\n            <Table>\n              <TableHeader>\n                <TableRow>\n                  <TableHead className='w-12'>#</TableHead>\n                  <TableHead>Courier</TableHead>\n                  <TableHead\n                    className='cursor-pointer hover:bg-muted/50'\n                    onClick={() => handleSort('total_shipments')}\n                  >\n                    <div className='flex items-center gap-1'>\n                      Envíos\n                      {sortBy === 'total_shipments' &&\n                        (sortOrder === 'desc' ? (\n                          <TrendingDown className='w-3 h-3' />\n                        ) : (\n                          <TrendingUp className='w-3 h-3' />\n                        ))}\n                    </div>\n                  </TableHead>\n                  <TableHead>Entregados</TableHead>\n                  <TableHead\n                    className='cursor-pointer hover:bg-muted/50'\n                    onClick={() => handleSort('on_time_rate')}\n                  >\n                    <div className='flex items-center gap-1'>\n                      Puntualidad\n                      {sortBy === 'on_time_rate' &&\n                        (sortOrder === 'desc' ? (\n                          <TrendingDown className='w-3 h-3' />\n                        ) : (\n                          <TrendingUp className='w-3 h-3' />\n                        ))}\n                    </div>\n                  </TableHead>\n                  <TableHead\n                    className='cursor-pointer hover:bg-muted/50'\n                    onClick={() => handleSort('average_cost_per_shipment')}\n                  >\n                    <div className='flex items-center gap-1'>\n                      Costo Promedio\n                      {sortBy === 'average_cost_per_shipment' &&\n                        (sortOrder === 'desc' ? (\n                          <TrendingDown className='w-3 h-3' />\n                        ) : (\n                          <TrendingUp className='w-3 h-3' />\n                        ))}\n                    </div>\n                  </TableHead>\n                  <TableHead>Performance</TableHead>\n                  <TableHead className='w-12'></TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {sortedCarriers.map((carrier, index) => (\n                  <PerformanceRow\n                    key={carrier.carrier_id}\n                    carrier={carrier}\n                    rank={index + 1}\n                    showDetails={expandedRows.has(carrier.carrier_id)}\n                    onToggleDetails={() => toggleRowExpansion(carrier.carrier_id)}\n                  />\n                ))}\n              </TableBody>\n            </Table>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n\n// =====================================================\n// COMPONENTE PERFORMANCE ROW\n// =====================================================\n\nfunction PerformanceRow({ carrier, rank, showDetails, onToggleDetails }: PerformanceRowProps) {\n  const performanceLevel = getPerformanceLevel(carrier.on_time_rate)\n  const config = performanceConfig[performanceLevel]\n  const Icon = config.icon\n\n  const deliveryRate =\n    carrier.total_shipments > 0 ? (carrier.delivered_shipments / carrier.total_shipments) * 100 : 0\n\n  return (\n    <>\n      <TableRow className='hover:bg-muted/50'>\n        <TableCell>\n          <div className='flex items-center justify-center'>\n            {rank <= 3 ? (\n              <Badge\n                variant={rank === 1 ? 'default' : 'secondary'}\n                className='w-6 h-6 rounded-full p-0 flex items-center justify-center'\n              >\n                {rank}\n              </Badge>\n            ) : (\n              <span className='text-muted-foreground'>{rank}</span>\n            )}\n          </div>\n        </TableCell>\n\n        <TableCell>\n          <div className='font-medium'>{carrier.carrier_name}</div>\n        </TableCell>\n\n        <TableCell>\n          <div className='font-medium'>{carrier.total_shipments.toLocaleString()}</div>\n        </TableCell>\n\n        <TableCell>\n          <div className='space-y-1'>\n            <div className='font-medium'>{carrier.delivered_shipments.toLocaleString()}</div>\n            <div className='text-xs text-muted-foreground'>\n              {deliveryRate.toFixed(1)}% del total\n            </div>\n          </div>\n        </TableCell>\n\n        <TableCell>\n          <div className='space-y-2'>\n            <div className='flex items-center gap-2'>\n              <span className='font-medium'>{carrier.on_time_rate.toFixed(1)}%</span>\n              <Icon className={cn('w-4 h-4', config.color)} />\n            </div>\n            <Progress value={carrier.on_time_rate} className='h-2' />\n          </div>\n        </TableCell>\n\n        <TableCell>\n          <div className='font-medium'>{formatCurrency(carrier.average_cost_per_shipment)}</div>\n        </TableCell>\n\n        <TableCell>\n          <Badge variant='outline' className={cn('text-xs', config.color, config.bgColor)}>\n            {config.label}\n          </Badge>\n        </TableCell>\n\n        <TableCell>\n          <Button variant='ghost' size='sm' onClick={onToggleDetails} className='w-8 h-8 p-0'>\n            <Eye className='w-4 h-4' />\n          </Button>\n        </TableCell>\n      </TableRow>\n\n      {/* Fila expandida con detalles */}\n      {showDetails && (\n        <TableRow>\n          <TableCell colSpan={8} className='bg-muted/25'>\n            <div className='p-4 space-y-4'>\n              <h5 className='font-semibold'>Detalles de Performance - {carrier.carrier_name}</h5>\n\n              <div className='grid grid-cols-1 md:grid-cols-3 gap-4'>\n                <div className='space-y-2'>\n                  <h6 className='text-sm font-medium text-muted-foreground'>Métricas de Entrega</h6>\n                  <div className='space-y-1 text-sm'>\n                    <div className='flex justify-between'>\n                      <span>Entregas a tiempo:</span>\n                      <span className='font-medium'>{carrier.on_time_deliveries}</span>\n                    </div>\n                    <div className='flex justify-between'>\n                      <span>Tiempo promedio:</span>\n                      <span className='font-medium'>{carrier.average_delivery_time} días</span>\n                    </div>\n                    <div className='flex justify-between'>\n                      <span>Tasa de entrega:</span>\n                      <span className='font-medium'>{deliveryRate.toFixed(1)}%</span>\n                    </div>\n                  </div>\n                </div>\n\n                <div className='space-y-2'>\n                  <h6 className='text-sm font-medium text-muted-foreground'>\n                    Métricas Financieras\n                  </h6>\n                  <div className='space-y-1 text-sm'>\n                    <div className='flex justify-between'>\n                      <span>Ingresos totales:</span>\n                      <span className='font-medium'>{formatCurrency(carrier.total_cost)}</span>\n                    </div>\n                    <div className='flex justify-between'>\n                      <span>Costo por envío:</span>\n                      <span className='font-medium'>\n                        {formatCurrency(carrier.average_cost_per_shipment)}\n                      </span>\n                    </div>\n                    <div className='flex justify-between'>\n                      <span>Eficiencia costo:</span>\n                      <span className='font-medium'>\n                        {carrier.total_shipments > 0\n                          ? (carrier.total_cost / carrier.total_shipments).toFixed(2)\n                          : '0'}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n\n                <div className='space-y-2'>\n                  <h6 className='text-sm font-medium text-muted-foreground'>\n                    Calificación General\n                  </h6>\n                  <div className='space-y-2'>\n                    <div className='flex items-center gap-2'>\n                      <Icon className={cn('w-5 h-5', config.color)} />\n                      <span className={cn('font-medium', config.color)}>{config.label}</span>\n                    </div>\n                    <Progress value={carrier.on_time_rate} className='h-3' />\n                    <div className='text-xs text-muted-foreground'>\n                      Basado en puntualidad y eficiencia\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </TableCell>\n        </TableRow>\n      )}\n    </>\n  )\n}\n"],"names":["CarrierPerformanceTable","performanceThresholds","excellent","good","average","poor","getPerformanceLevel","rate","performanceConfig","label","color","bgColor","icon","Award","CheckCircle","Clock","AlertTriangle","carriers","className","sortBy","setSortBy","useState","sortOrder","setSortOrder","expandedRows","setExpandedRows","Set","sortedCarriers","sort","a","b","aValue","bValue","totalShipments","reduce","acc","c","total_shipments","averageOnTimeRate","length","on_time_rate","bestPerformer","best","current","worstPerformer","worst","handleSort","column","toggleRowExpansion","carrierId","newExpanded","has","delete","add","Card","CardContent","div","BarChart3","p","cn","toLocaleString","toFixed","carrier_name","CardHeader","CardTitle","CardDescription","Select","value","onValueChange","SelectTrigger","SelectValue","SelectContent","SelectItem","Button","variant","size","Download","Table","TableHeader","TableRow","TableHead","onClick","TrendingDown","TrendingUp","TableBody","map","carrier","index","PerformanceRow","rank","showDetails","carrier_id","onToggleDetails","performanceLevel","config","Icon","deliveryRate","delivered_shipments","TableCell","Badge","span","Progress","formatCurrency","average_cost_per_shipment","Eye","colSpan","h5","h6","on_time_deliveries","average_delivery_time","total_cost"],"mappings":"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"}