00f8f580ac28c6882eb87032bddb1d7e
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_246ckz0orc() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\logistics\\route.ts";
  var hash = "9c3387aab9bdf5ab6a6422b9f2f3e3d863866529";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\logistics\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 23
        }
      },
      "6": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 38
        }
      },
      "7": {
        start: {
          line: 21,
          column: 16
        },
        end: {
          line: 21,
          column: 24
        }
      },
      "8": {
        start: {
          line: 24,
          column: 16
        },
        end: {
          line: 24,
          column: 70
        }
      },
      "9": {
        start: {
          line: 26,
          column: 25
        },
        end: {
          line: 26,
          column: 58
        }
      },
      "10": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 29,
          column: 7
        }
      },
      "11": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 41
        }
      },
      "12": {
        start: {
          line: 31,
          column: 21
        },
        end: {
          line: 38,
          column: 6
        }
      },
      "13": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 45,
          column: 5
        }
      },
      "14": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 44,
          column: 11
        }
      },
      "15": {
        start: {
          line: 46,
          column: 17
        },
        end: {
          line: 46,
          column: 38
        }
      },
      "16": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 47,
          column: 43
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 19
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "GET",
        decl: {
          start: {
            line: 22,
            column: 15
          },
          end: {
            line: 22,
            column: 18
          }
        },
        loc: {
          start: {
            line: 22,
            column: 28
          },
          end: {
            line: 48,
            column: 1
          }
        },
        line: 22
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 27,
            column: 25
          },
          end: {
            line: 27,
            column: 26
          }
        },
        loc: {
          start: {
            line: 27,
            column: 39
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 35,
            column: 22
          },
          end: {
            line: 35,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 22
          },
          end: {
            line: 35,
            column: 51
          }
        }, {
          start: {
            line: 35,
            column: 55
          },
          end: {
            line: 35,
            column: 57
          }
        }],
        line: 35
      },
      "1": {
        loc: {
          start: {
            line: 36,
            column: 29
          },
          end: {
            line: 36,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 29
          },
          end: {
            line: 36,
            column: 65
          }
        }, {
          start: {
            line: 36,
            column: 69
          },
          end: {
            line: 36,
            column: 71
          }
        }],
        line: 36
      },
      "2": {
        loc: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\logistics\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// =====================================================\r\n// API: LOGISTICS REDIRECT\r\n// Descripci\xF3n: Redirecci\xF3n a dashboard de log\xEDstica\r\n// Endpoint: GET /api/admin/logistics\r\n// =====================================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\n\r\nexport async function GET(request: NextRequest) {\r\n  // Redirigir a la API del dashboard\r\n  const url = new URL('/api/admin/logistics/dashboard', request.url);\r\n  \r\n  // Copiar query parameters si los hay\r\n  const searchParams = new URL(request.url).searchParams;\r\n  searchParams.forEach((value, key) => {\r\n    url.searchParams.set(key, value);\r\n  });\r\n  \r\n  // Hacer la llamada interna\r\n  const response = await fetch(url.toString(), {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Cookie': request.headers.get('cookie') || '',\r\n      'Authorization': request.headers.get('authorization') || '',\r\n    },\r\n  });\r\n  \r\n  if (!response.ok) {\r\n    return NextResponse.json(\r\n      { error: 'Error al obtener datos de log\xEDstica' },\r\n      { status: response.status }\r\n    );\r\n  }\r\n  \r\n  const data = await response.json();\r\n  return NextResponse.json(data);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "runtime", "request", "url", "URL", "searchParams", "forEach", "value", "key", "set", "response", "fetch", "toString", "method", "headers", "get", "ok", "NextResponse", "json", "error", "status", "data"],
      mappings: "AAAA,qCAAqC;;;;;;;;;;;;QAWfA;eAAAA;;QAVTC;eAAAA;;;wBAQ6B;AARnC,MAAMA,UAAU;AAUhB,eAAeD,IAAIE,OAAoB;IAC5C,mCAAmC;IACnC,MAAMC,MAAM,IAAIC,IAAI,kCAAkCF,QAAQC,GAAG;IAEjE,qCAAqC;IACrC,MAAME,eAAe,IAAID,IAAIF,QAAQC,GAAG,EAAEE,YAAY;IACtDA,aAAaC,OAAO,CAAC,CAACC,OAAOC;QAC3BL,IAAIE,YAAY,CAACI,GAAG,CAACD,KAAKD;IAC5B;IAEA,2BAA2B;IAC3B,MAAMG,WAAW,MAAMC,MAAMR,IAAIS,QAAQ,IAAI;QAC3CC,QAAQ;QACRC,SAAS;YACP,gBAAgB;YAChB,UAAUZ,QAAQY,OAAO,CAACC,GAAG,CAAC,aAAa;YAC3C,iBAAiBb,QAAQY,OAAO,CAACC,GAAG,CAAC,oBAAoB;QAC3D;IACF;IAEA,IAAI,CAACL,SAASM,EAAE,EAAE;QAChB,OAAOC,oBAAY,CAACC,IAAI,CACtB;YAAEC,OAAO;QAAsC,GAC/C;YAAEC,QAAQV,SAASU,MAAM;QAAC;IAE9B;IAEA,MAAMC,OAAO,MAAMX,SAASQ,IAAI;IAChC,OAAOD,oBAAY,CAACC,IAAI,CAACG;AAC3B"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9c3387aab9bdf5ab6a6422b9f2f3e3d863866529"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_246ckz0orc = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_246ckz0orc();
cov_246ckz0orc().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_246ckz0orc().f[0]++;
  cov_246ckz0orc().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_246ckz0orc().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_246ckz0orc().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_246ckz0orc().f[1]++;
    cov_246ckz0orc().s[4]++;
    return GET;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_246ckz0orc().f[2]++;
    cov_246ckz0orc().s[5]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_246ckz0orc().s[6]++, require("next/server"));
const runtime =
/* istanbul ignore next */
(cov_246ckz0orc().s[7]++, 'nodejs');
async function GET(request) {
  /* istanbul ignore next */
  cov_246ckz0orc().f[3]++;
  // Redirigir a la API del dashboard
  const url =
  /* istanbul ignore next */
  (cov_246ckz0orc().s[8]++, new URL('/api/admin/logistics/dashboard', request.url));
  // Copiar query parameters si los hay
  const searchParams =
  /* istanbul ignore next */
  (cov_246ckz0orc().s[9]++, new URL(request.url).searchParams);
  /* istanbul ignore next */
  cov_246ckz0orc().s[10]++;
  searchParams.forEach((value, key) => {
    /* istanbul ignore next */
    cov_246ckz0orc().f[4]++;
    cov_246ckz0orc().s[11]++;
    url.searchParams.set(key, value);
  });
  // Hacer la llamada interna
  const response =
  /* istanbul ignore next */
  (cov_246ckz0orc().s[12]++, await fetch(url.toString(), {
    method: 'GET',
    headers: {
      'Content-Type': 'application/json',
      'Cookie':
      /* istanbul ignore next */
      (cov_246ckz0orc().b[0][0]++, request.headers.get('cookie')) ||
      /* istanbul ignore next */
      (cov_246ckz0orc().b[0][1]++, ''),
      'Authorization':
      /* istanbul ignore next */
      (cov_246ckz0orc().b[1][0]++, request.headers.get('authorization')) ||
      /* istanbul ignore next */
      (cov_246ckz0orc().b[1][1]++, '')
    }
  }));
  /* istanbul ignore next */
  cov_246ckz0orc().s[13]++;
  if (!response.ok) {
    /* istanbul ignore next */
    cov_246ckz0orc().b[2][0]++;
    cov_246ckz0orc().s[14]++;
    return _server.NextResponse.json({
      error: 'Error al obtener datos de logÃ­stica'
    }, {
      status: response.status
    });
  } else
  /* istanbul ignore next */
  {
    cov_246ckz0orc().b[2][1]++;
  }
  const data =
  /* istanbul ignore next */
  (cov_246ckz0orc().s[15]++, await response.json());
  /* istanbul ignore next */
  cov_246ckz0orc().s[16]++;
  return _server.NextResponse.json(data);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMjQ2Y2t6MG9yYyIsImFjdHVhbENvdmVyYWdlIiwicyIsIkdFVCIsImYiLCJydW50aW1lIiwicmVxdWVzdCIsInVybCIsIlVSTCIsInNlYXJjaFBhcmFtcyIsImZvckVhY2giLCJ2YWx1ZSIsImtleSIsInNldCIsInJlc3BvbnNlIiwiZmV0Y2giLCJ0b1N0cmluZyIsIm1ldGhvZCIsImhlYWRlcnMiLCJiIiwiZ2V0Iiwib2siLCJfc2VydmVyIiwiTmV4dFJlc3BvbnNlIiwianNvbiIsImVycm9yIiwic3RhdHVzIiwiZGF0YSJdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbWFydGlcXERlc2t0b3BcXERFU0FSUk9MTE9TV1xcQk9JTEVSUExBVFRFIEUtQ09NTUVSQ0VcXHNyY1xcYXBwXFxhcGlcXGFkbWluXFxsb2dpc3RpY3NcXHJvdXRlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvbmZpZ3VyYWNpw7NuIHBhcmEgTm9kZS5qcyBSdW50aW1lXHJcbmV4cG9ydCBjb25zdCBydW50aW1lID0gJ25vZGVqcyc7XHJcblxyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyBBUEk6IExPR0lTVElDUyBSRURJUkVDVFxyXG4vLyBEZXNjcmlwY2nDs246IFJlZGlyZWNjacOzbiBhIGRhc2hib2FyZCBkZSBsb2fDrXN0aWNhXHJcbi8vIEVuZHBvaW50OiBHRVQgL2FwaS9hZG1pbi9sb2dpc3RpY3NcclxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuXHJcbmltcG9ydCB7IE5leHRSZXF1ZXN0LCBOZXh0UmVzcG9uc2UgfSBmcm9tICduZXh0L3NlcnZlcic7XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gR0VUKHJlcXVlc3Q6IE5leHRSZXF1ZXN0KSB7XHJcbiAgLy8gUmVkaXJpZ2lyIGEgbGEgQVBJIGRlbCBkYXNoYm9hcmRcclxuICBjb25zdCB1cmwgPSBuZXcgVVJMKCcvYXBpL2FkbWluL2xvZ2lzdGljcy9kYXNoYm9hcmQnLCByZXF1ZXN0LnVybCk7XHJcbiAgXHJcbiAgLy8gQ29waWFyIHF1ZXJ5IHBhcmFtZXRlcnMgc2kgbG9zIGhheVxyXG4gIGNvbnN0IHNlYXJjaFBhcmFtcyA9IG5ldyBVUkwocmVxdWVzdC51cmwpLnNlYXJjaFBhcmFtcztcclxuICBzZWFyY2hQYXJhbXMuZm9yRWFjaCgodmFsdWUsIGtleSkgPT4ge1xyXG4gICAgdXJsLnNlYXJjaFBhcmFtcy5zZXQoa2V5LCB2YWx1ZSk7XHJcbiAgfSk7XHJcbiAgXHJcbiAgLy8gSGFjZXIgbGEgbGxhbWFkYSBpbnRlcm5hXHJcbiAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCh1cmwudG9TdHJpbmcoKSwge1xyXG4gICAgbWV0aG9kOiAnR0VUJyxcclxuICAgIGhlYWRlcnM6IHtcclxuICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuICAgICAgJ0Nvb2tpZSc6IHJlcXVlc3QuaGVhZGVycy5nZXQoJ2Nvb2tpZScpIHx8ICcnLFxyXG4gICAgICAnQXV0aG9yaXphdGlvbic6IHJlcXVlc3QuaGVhZGVycy5nZXQoJ2F1dGhvcml6YXRpb24nKSB8fCAnJyxcclxuICAgIH0sXHJcbiAgfSk7XHJcbiAgXHJcbiAgaWYgKCFyZXNwb25zZS5vaykge1xyXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxyXG4gICAgICB7IGVycm9yOiAnRXJyb3IgYWwgb2J0ZW5lciBkYXRvcyBkZSBsb2fDrXN0aWNhJyB9LFxyXG4gICAgICB7IHN0YXR1czogcmVzcG9uc2Uuc3RhdHVzIH1cclxuICAgICk7XHJcbiAgfVxyXG4gIFxyXG4gIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XHJcbiAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKGRhdGEpO1xyXG59XHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxu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