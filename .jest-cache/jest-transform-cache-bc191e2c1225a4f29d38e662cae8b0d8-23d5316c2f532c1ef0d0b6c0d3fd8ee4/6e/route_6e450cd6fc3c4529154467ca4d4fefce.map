{"version":3,"names":["cov_2cih03buf7","actualCoverage","s","DELETE","f","GET","OPTIONS","POST","PUT","runtime","request","searchParams","URL","url","action","get","b","stats","_seooptimizationtools","enhancedSEOOptimizationTools","getUsageStats","_server","NextResponse","json","success","data","recommendations","generateAutomatedRecommendations","message","version","endpoints","error","_logger","logger","LogLevel","ERROR","LogCategory","SEO","details","Error","status","body","params","result","competitors","Array","isArray","analyzeCompetitors","name","variants","createABTest","testId","variantId","metrics","updateABTestMetrics","analyzeABTestResults","analyzeCoreWebVitals","contentType","optimizeContent","performTechnicalAudit","availableActions","info","INFO","Object","keys","timestamp","Date","toISOString","config","configure","configKeys","updatedKeys","clearCache","headers"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\seo\\optimization\\route.ts"],"sourcesContent":["// Configuración para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - SEO OPTIMIZATION API\r\n// API endpoints para herramientas de optimización SEO\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { enhancedSEOOptimizationTools } from '@/lib/seo/seo-optimization-tools';\r\nimport { logger, LogCategory, LogLevel } from '@/lib/enterprise/logger';\r\n\r\n// ===================================\r\n// GET - Obtener estadísticas y configuración\r\n// ===================================\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    const { searchParams } = new URL(request.url);\r\n    const action = searchParams.get('action');\r\n\r\n    switch (action) {\r\n      case 'stats':\r\n        const stats = enhancedSEOOptimizationTools.getUsageStats();\r\n        return NextResponse.json({\r\n          success: true,\r\n          data: stats\r\n        });\r\n\r\n      case 'recommendations':\r\n        const recommendations = await enhancedSEOOptimizationTools.generateAutomatedRecommendations();\r\n        return NextResponse.json({\r\n          success: true,\r\n          data: recommendations\r\n        });\r\n\r\n      default:\r\n        return NextResponse.json({\r\n          success: true,\r\n          data: {\r\n            message: 'SEO Optimization Tools API',\r\n            version: '1.0.0',\r\n            endpoints: {\r\n              'GET ?action=stats': 'Get usage statistics',\r\n              'GET ?action=recommendations': 'Get automated recommendations',\r\n              'POST': 'Perform SEO analysis',\r\n              'PUT': 'Update configuration',\r\n              'DELETE': 'Clear cache'\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n  } catch (error) {\r\n    logger.error(LogLevel.ERROR, 'SEO optimization API GET error', error as Error, LogCategory.SEO);\r\n    \r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Failed to process request',\r\n      details: error instanceof Error ? error.message : 'Unknown error'\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n// ===================================\r\n// POST - Realizar análisis SEO\r\n// ===================================\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    const body = await request.json();\r\n    const { action, ...params } = body;\r\n\r\n    let result;\r\n\r\n    switch (action) {\r\n      case 'analyze_competitors':\r\n        if (!params.competitors || !Array.isArray(params.competitors)) {\r\n          return NextResponse.json({\r\n            success: false,\r\n            error: 'competitors array is required'\r\n          }, { status: 400 });\r\n        }\r\n        \r\n        result = await enhancedSEOOptimizationTools.analyzeCompetitors(params.competitors);\r\n        break;\r\n\r\n      case 'create_ab_test':\r\n        if (!params.name || !params.url || !params.variants) {\r\n          return NextResponse.json({\r\n            success: false,\r\n            error: 'name, url, and variants are required'\r\n          }, { status: 400 });\r\n        }\r\n        \r\n        result = await enhancedSEOOptimizationTools.createABTest({\r\n          name: params.name,\r\n          url: params.url,\r\n          variants: params.variants\r\n        });\r\n        break;\r\n\r\n      case 'update_ab_test':\r\n        if (!params.testId || !params.variantId || !params.metrics) {\r\n          return NextResponse.json({\r\n            success: false,\r\n            error: 'testId, variantId, and metrics are required'\r\n          }, { status: 400 });\r\n        }\r\n        \r\n        await enhancedSEOOptimizationTools.updateABTestMetrics(\r\n          params.testId,\r\n          params.variantId,\r\n          params.metrics\r\n        );\r\n        result = { message: 'A/B test metrics updated successfully' };\r\n        break;\r\n\r\n      case 'analyze_ab_test':\r\n        if (!params.testId) {\r\n          return NextResponse.json({\r\n            success: false,\r\n            error: 'testId is required'\r\n          }, { status: 400 });\r\n        }\r\n        \r\n        result = await enhancedSEOOptimizationTools.analyzeABTestResults(params.testId);\r\n        break;\r\n\r\n      case 'analyze_core_web_vitals':\r\n        if (!params.url) {\r\n          return NextResponse.json({\r\n            success: false,\r\n            error: 'url is required'\r\n          }, { status: 400 });\r\n        }\r\n        \r\n        result = await enhancedSEOOptimizationTools.analyzeCoreWebVitals(params.url);\r\n        break;\r\n\r\n      case 'optimize_content':\r\n        if (!params.url || !params.contentType) {\r\n          return NextResponse.json({\r\n            success: false,\r\n            error: 'url and contentType are required'\r\n          }, { status: 400 });\r\n        }\r\n        \r\n        result = await enhancedSEOOptimizationTools.optimizeContent(\r\n          params.url,\r\n          params.contentType\r\n        );\r\n        break;\r\n\r\n      case 'technical_audit':\r\n        if (!params.url) {\r\n          return NextResponse.json({\r\n            success: false,\r\n            error: 'url is required'\r\n          }, { status: 400 });\r\n        }\r\n        \r\n        result = await enhancedSEOOptimizationTools.performTechnicalAudit(params.url);\r\n        break;\r\n\r\n      default:\r\n        return NextResponse.json({\r\n          success: false,\r\n          error: 'Invalid action',\r\n          availableActions: [\r\n            'analyze_competitors',\r\n            'create_ab_test',\r\n            'update_ab_test',\r\n            'analyze_ab_test',\r\n            'analyze_core_web_vitals',\r\n            'optimize_content',\r\n            'technical_audit'\r\n          ]\r\n        }, { status: 400 });\r\n    }\r\n\r\n    logger.info(LogLevel.INFO, 'SEO optimization analysis completed', {\r\n      action,\r\n      params: Object.keys(params)\r\n    }, LogCategory.SEO);\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: result,\r\n      timestamp: new Date().toISOString()\r\n    });\r\n\r\n  } catch (error) {\r\n    logger.error(LogLevel.ERROR, 'SEO optimization API POST error', error as Error, LogCategory.SEO);\r\n    \r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Failed to perform SEO analysis',\r\n      details: error instanceof Error ? error.message : 'Unknown error'\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n// ===================================\r\n// PUT - Actualizar configuración\r\n// ===================================\r\nexport async function PUT(request: NextRequest) {\r\n  try {\r\n    const body = await request.json();\r\n    const { config } = body;\r\n\r\n    if (!config || typeof config !== 'object') {\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: 'config object is required'\r\n      }, { status: 400 });\r\n    }\r\n\r\n    enhancedSEOOptimizationTools.configure(config);\r\n\r\n    logger.info(LogLevel.INFO, 'SEO optimization tools reconfigured', {\r\n      configKeys: Object.keys(config)\r\n    }, LogCategory.SEO);\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: {\r\n        message: 'Configuration updated successfully',\r\n        updatedKeys: Object.keys(config)\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    logger.error(LogLevel.ERROR, 'SEO optimization API PUT error', error as Error, LogCategory.SEO);\r\n    \r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Failed to update configuration',\r\n      details: error instanceof Error ? error.message : 'Unknown error'\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n// ===================================\r\n// DELETE - Limpiar cache\r\n// ===================================\r\nexport async function DELETE(request: NextRequest) {\r\n  try {\r\n    await enhancedSEOOptimizationTools.clearCache();\r\n\r\n    logger.info(LogLevel.INFO, 'SEO optimization tools cache cleared', {}, LogCategory.SEO);\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: {\r\n        message: 'Cache cleared successfully'\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    logger.error(LogLevel.ERROR, 'SEO optimization API DELETE error', error as Error, LogCategory.SEO);\r\n    \r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Failed to clear cache',\r\n      details: error instanceof Error ? error.message : 'Unknown error'\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n// ===================================\r\n// OPCIONES CORS\r\n// ===================================\r\nexport async function OPTIONS(request: NextRequest) {\r\n  return new NextResponse(null, {\r\n    status: 200,\r\n    headers: {\r\n      'Access-Control-Allow-Origin': '*',\r\n      'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\r\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization',\r\n    },\r\n  });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}