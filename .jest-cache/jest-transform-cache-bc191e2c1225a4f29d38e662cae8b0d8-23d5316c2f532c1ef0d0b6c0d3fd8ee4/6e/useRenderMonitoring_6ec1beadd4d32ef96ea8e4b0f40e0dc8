e9c92aa911cd56690ba05da67a18a6bc
// ===================================
// PINTEYA E-COMMERCE - RENDER MONITORING SYSTEM
// Sistema de monitoreo en tiempo real para detectar problemas de renderizado
// ===================================
"use strict";

/* istanbul ignore next */
function cov_2fy3retdu() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\monitoring\\useRenderMonitoring.ts";
  var hash = "e2a277cca549fafdea5756e876923d4e25a04259";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\monitoring\\useRenderMonitoring.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 8,
          column: 3
        }
      },
      "1": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 13,
          column: 7
        }
      },
      "2": {
        start: {
          line: 10,
          column: 24
        },
        end: {
          line: 13,
          column: 7
        }
      },
      "3": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 37,
          column: 3
        }
      },
      "4": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 30
        }
      },
      "5": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 36
        }
      },
      "6": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 31
        }
      },
      "7": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 35
        }
      },
      "8": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 35
        }
      },
      "9": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 35
        }
      },
      "10": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 36
        }
      },
      "11": {
        start: {
          line: 38,
          column: 29
        },
        end: {
          line: 38,
          column: 72
        }
      },
      "12": {
        start: {
          line: 39,
          column: 18
        },
        end: {
          line: 39,
          column: 41
        }
      },
      "13": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 41,
          column: 51
        }
      },
      "14": {
        start: {
          line: 41,
          column: 39
        },
        end: {
          line: 41,
          column: 51
        }
      },
      "15": {
        start: {
          line: 42,
          column: 28
        },
        end: {
          line: 42,
          column: 41
        }
      },
      "16": {
        start: {
          line: 43,
          column: 27
        },
        end: {
          line: 43,
          column: 40
        }
      },
      "17": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 46,
          column: 20
        }
      },
      "18": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 66
        }
      },
      "19": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 51,
          column: 5
        }
      },
      "20": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 19
        }
      },
      "21": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 56,
          column: 5
        }
      },
      "22": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 55,
          column: 10
        }
      },
      "23": {
        start: {
          line: 57,
          column: 16
        },
        end: {
          line: 57,
          column: 53
        }
      },
      "24": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 60,
          column: 5
        }
      },
      "25": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 30
        }
      },
      "26": {
        start: {
          line: 61,
          column: 17
        },
        end: {
          line: 63,
          column: 5
        }
      },
      "27": {
        start: {
          line: 64,
          column: 32
        },
        end: {
          line: 64,
          column: 88
        }
      },
      "28": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 74,
          column: 5
        }
      },
      "29": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 73,
          column: 9
        }
      },
      "30": {
        start: {
          line: 67,
          column: 23
        },
        end: {
          line: 67,
          column: 95
        }
      },
      "31": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 72,
          column: 13
        }
      },
      "32": {
        start: {
          line: 69,
          column: 16
        },
        end: {
          line: 69,
          column: 57
        }
      },
      "33": {
        start: {
          line: 71,
          column: 16
        },
        end: {
          line: 71,
          column: 39
        }
      },
      "34": {
        start: {
          line: 75,
          column: 4
        },
        end: {
          line: 75,
          column: 25
        }
      },
      "35": {
        start: {
          line: 76,
          column: 4
        },
        end: {
          line: 78,
          column: 5
        }
      },
      "36": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 31
        }
      },
      "37": {
        start: {
          line: 79,
          column: 4
        },
        end: {
          line: 79,
          column: 18
        }
      },
      "38": {
        start: {
          line: 84,
          column: 27
        },
        end: {
          line: 89,
          column: 1
        }
      },
      "39": {
        start: {
          line: 90,
          column: 24
        },
        end: {
          line: 97,
          column: 1
        }
      },
      "40": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 105,
          column: 9
        }
      },
      "41": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 61
        }
      },
      "42": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 106,
          column: 40
        }
      },
      "43": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 109,
          column: 37
        }
      },
      "44": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 110,
          column: 51
        }
      },
      "45": {
        start: {
          line: 110,
          column: 19
        },
        end: {
          line: 110,
          column: 50
        }
      },
      "46": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 116,
          column: 9
        }
      },
      "47": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 115,
          column: 45
        }
      },
      "48": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 121,
          column: 15
        }
      },
      "49": {
        start: {
          line: 118,
          column: 26
        },
        end: {
          line: 118,
          column: 41
        }
      },
      "50": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 119,
          column: 64
        }
      },
      "51": {
        start: {
          line: 119,
          column: 47
        },
        end: {
          line: 119,
          column: 62
        }
      },
      "52": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 120,
          column: 38
        }
      },
      "53": {
        start: {
          line: 124,
          column: 29
        },
        end: {
          line: 124,
          column: 113
        }
      },
      "54": {
        start: {
          line: 124,
          column: 85
        },
        end: {
          line: 124,
          column: 109
        }
      },
      "55": {
        start: {
          line: 125,
          column: 34
        },
        end: {
          line: 125,
          column: 145
        }
      },
      "56": {
        start: {
          line: 125,
          column: 98
        },
        end: {
          line: 125,
          column: 141
        }
      },
      "57": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 138,
          column: 10
        }
      },
      "58": {
        start: {
          line: 136,
          column: 58
        },
        end: {
          line: 136,
          column: 73
        }
      },
      "59": {
        start: {
          line: 141,
          column: 25
        },
        end: {
          line: 141,
          column: 56
        }
      },
      "60": {
        start: {
          line: 142,
          column: 24
        },
        end: {
          line: 152,
          column: 9
        }
      },
      "61": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 153,
          column: 49
        }
      },
      "62": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 154,
          column: 31
        }
      },
      "63": {
        start: {
          line: 157,
          column: 25
        },
        end: {
          line: 162,
          column: 9
        }
      },
      "64": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 163,
          column: 38
        }
      },
      "65": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 167,
          column: 9
        }
      },
      "66": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 166,
          column: 52
        }
      },
      "67": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 168,
          column: 31
        }
      },
      "68": {
        start: {
          line: 171,
          column: 22
        },
        end: {
          line: 171,
          column: 61
        }
      },
      "69": {
        start: {
          line: 171,
          column: 44
        },
        end: {
          line: 171,
          column: 60
        }
      },
      "70": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 175,
          column: 9
        }
      },
      "71": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 173,
          column: 34
        }
      },
      "72": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 174,
          column: 35
        }
      },
      "73": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 178,
          column: 25
        }
      },
      "74": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 179,
          column: 31
        }
      },
      "75": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 186,
          column: 20
        }
      },
      "76": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 189,
          column: 33
        }
      },
      "77": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 190,
          column: 25
        }
      },
      "78": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 191,
          column: 35
        }
      },
      "79": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 192,
          column: 34
        }
      },
      "80": {
        start: {
          line: 195,
          column: 24
        },
        end: {
          line: 195,
          column: 53
        }
      },
      "81": {
        start: {
          line: 200,
          column: 18
        },
        end: {
          line: 200,
          column: 35
        }
      },
      "82": {
        start: {
          line: 201,
          column: 19
        },
        end: {
          line: 201,
          column: 23
        }
      },
      "83": {
        start: {
          line: 202,
          column: 21
        },
        end: {
          line: 202,
          column: 46
        }
      },
      "84": {
        start: {
          line: 203,
          column: 4
        },
        end: {
          line: 206,
          column: 6
        }
      },
      "85": {
        start: {
          line: 209,
          column: 4
        },
        end: {
          line: 211,
          column: 5
        }
      },
      "86": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 210,
          column: 63
        }
      },
      "87": {
        start: {
          line: 212,
          column: 4
        },
        end: {
          line: 212,
          column: 13
        }
      },
      "88": {
        start: {
          line: 215,
          column: 4
        },
        end: {
          line: 215,
          column: 38
        }
      },
      "89": {
        start: {
          line: 218,
          column: 17
        },
        end: {
          line: 221,
          column: 5
        }
      },
      "90": {
        start: {
          line: 222,
          column: 22
        },
        end: {
          line: 222,
          column: 47
        }
      },
      "91": {
        start: {
          line: 224,
          column: 27
        },
        end: {
          line: 224,
          column: 48
        }
      },
      "92": {
        start: {
          line: 225,
          column: 27
        },
        end: {
          line: 225,
          column: 49
        }
      },
      "93": {
        start: {
          line: 226,
          column: 30
        },
        end: {
          line: 226,
          column: 51
        }
      },
      "94": {
        start: {
          line: 227,
          column: 27
        },
        end: {
          line: 227,
          column: 48
        }
      },
      "95": {
        start: {
          line: 228,
          column: 26
        },
        end: {
          line: 228,
          column: 47
        }
      },
      "96": {
        start: {
          line: 229,
          column: 25
        },
        end: {
          line: 229,
          column: 55
        }
      },
      "97": {
        start: {
          line: 231,
          column: 50
        },
        end: {
          line: 231,
          column: 98
        }
      },
      "98": {
        start: {
          line: 235,
          column: 31
        },
        end: {
          line: 291,
          column: 6
        }
      },
      "99": {
        start: {
          line: 236,
          column: 46
        },
        end: {
          line: 236,
          column: 50
        }
      },
      "100": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 252,
          column: 9
        }
      },
      "101": {
        start: {
          line: 239,
          column: 12
        },
        end: {
          line: 239,
          column: 37
        }
      },
      "102": {
        start: {
          line: 240,
          column: 12
        },
        end: {
          line: 248,
          column: 15
        }
      },
      "103": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 251,
          column: 13
        }
      },
      "104": {
        start: {
          line: 250,
          column: 16
        },
        end: {
          line: 250,
          column: 111
        }
      },
      "105": {
        start: {
          line: 254,
          column: 20
        },
        end: {
          line: 254,
          column: 30
        }
      },
      "106": {
        start: {
          line: 255,
          column: 29
        },
        end: {
          line: 255,
          column: 40
        }
      },
      "107": {
        start: {
          line: 256,
          column: 30
        },
        end: {
          line: 256,
          column: 95
        }
      },
      "108": {
        start: {
          line: 256,
          column: 68
        },
        end: {
          line: 256,
          column: 87
        }
      },
      "109": {
        start: {
          line: 257,
          column: 8
        },
        end: {
          line: 274,
          column: 9
        }
      },
      "110": {
        start: {
          line: 258,
          column: 12
        },
        end: {
          line: 266,
          column: 15
        }
      },
      "111": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 273,
          column: 13
        }
      },
      "112": {
        start: {
          line: 268,
          column: 16
        },
        end: {
          line: 272,
          column: 19
        }
      },
      "113": {
        start: {
          line: 276,
          column: 28
        },
        end: {
          line: 276,
          column: 44
        }
      },
      "114": {
        start: {
          line: 277,
          column: 8
        },
        end: {
          line: 287,
          column: 9
        }
      },
      "115": {
        start: {
          line: 278,
          column: 12
        },
        end: {
          line: 286,
          column: 15
        }
      },
      "116": {
        start: {
          line: 295,
          column: 24
        },
        end: {
          line: 339,
          column: 6
        }
      },
      "117": {
        start: {
          line: 296,
          column: 8
        },
        end: {
          line: 298,
          column: 9
        }
      },
      "118": {
        start: {
          line: 297,
          column: 12
        },
        end: {
          line: 297,
          column: 19
        }
      },
      "119": {
        start: {
          line: 299,
          column: 27
        },
        end: {
          line: 299,
          column: 72
        }
      },
      "120": {
        start: {
          line: 300,
          column: 8
        },
        end: {
          line: 300,
          column: 33
        }
      },
      "121": {
        start: {
          line: 301,
          column: 8
        },
        end: {
          line: 301,
          column: 48
        }
      },
      "122": {
        start: {
          line: 303,
          column: 8
        },
        end: {
          line: 305,
          column: 9
        }
      },
      "123": {
        start: {
          line: 304,
          column: 12
        },
        end: {
          line: 304,
          column: 72
        }
      },
      "124": {
        start: {
          line: 307,
          column: 28
        },
        end: {
          line: 307,
          column: 61
        }
      },
      "125": {
        start: {
          line: 308,
          column: 34
        },
        end: {
          line: 313,
          column: 13
        }
      },
      "126": {
        start: {
          line: 309,
          column: 12
        },
        end: {
          line: 311,
          column: 13
        }
      },
      "127": {
        start: {
          line: 310,
          column: 16
        },
        end: {
          line: 310,
          column: 25
        }
      },
      "128": {
        start: {
          line: 312,
          column: 12
        },
        end: {
          line: 312,
          column: 64
        }
      },
      "129": {
        start: {
          line: 315,
          column: 24
        },
        end: {
          line: 323,
          column: 9
        }
      },
      "130": {
        start: {
          line: 324,
          column: 8
        },
        end: {
          line: 324,
          column: 67
        }
      },
      "131": {
        start: {
          line: 326,
          column: 8
        },
        end: {
          line: 326,
          column: 39
        }
      },
      "132": {
        start: {
          line: 328,
          column: 8
        },
        end: {
          line: 334,
          column: 9
        }
      },
      "133": {
        start: {
          line: 329,
          column: 12
        },
        end: {
          line: 333,
          column: 13
        }
      },
      "134": {
        start: {
          line: 330,
          column: 16
        },
        end: {
          line: 330,
          column: 105
        }
      },
      "135": {
        start: {
          line: 335,
          column: 8
        },
        end: {
          line: 335,
          column: 54
        }
      },
      "136": {
        start: {
          line: 343,
          column: 23
        },
        end: {
          line: 370,
          column: 6
        }
      },
      "137": {
        start: {
          line: 344,
          column: 8
        },
        end: {
          line: 346,
          column: 9
        }
      },
      "138": {
        start: {
          line: 345,
          column: 12
        },
        end: {
          line: 345,
          column: 19
        }
      },
      "139": {
        start: {
          line: 347,
          column: 8
        },
        end: {
          line: 347,
          column: 32
        }
      },
      "140": {
        start: {
          line: 348,
          column: 8
        },
        end: {
          line: 356,
          column: 11
        }
      },
      "141": {
        start: {
          line: 357,
          column: 8
        },
        end: {
          line: 359,
          column: 9
        }
      },
      "142": {
        start: {
          line: 358,
          column: 12
        },
        end: {
          line: 358,
          column: 98
        }
      },
      "143": {
        start: {
          line: 360,
          column: 8
        },
        end: {
          line: 366,
          column: 9
        }
      },
      "144": {
        start: {
          line: 361,
          column: 12
        },
        end: {
          line: 365,
          column: 15
        }
      },
      "145": {
        start: {
          line: 375,
          column: 4
        },
        end: {
          line: 378,
          column: 11
        }
      },
      "146": {
        start: {
          line: 376,
          column: 28
        },
        end: {
          line: 376,
          column: 75
        }
      },
      "147": {
        start: {
          line: 377,
          column: 8
        },
        end: {
          line: 377,
          column: 27
        }
      },
      "148": {
        start: {
          line: 380,
          column: 4
        },
        end: {
          line: 382,
          column: 7
        }
      },
      "149": {
        start: {
          line: 381,
          column: 8
        },
        end: {
          line: 381,
          column: 22
        }
      },
      "150": {
        start: {
          line: 384,
          column: 4
        },
        end: {
          line: 393,
          column: 7
        }
      },
      "151": {
        start: {
          line: 385,
          column: 8
        },
        end: {
          line: 390,
          column: 10
        }
      },
      "152": {
        start: {
          line: 386,
          column: 12
        },
        end: {
          line: 389,
          column: 13
        }
      },
      "153": {
        start: {
          line: 387,
          column: 34
        },
        end: {
          line: 387,
          column: 67
        }
      },
      "154": {
        start: {
          line: 388,
          column: 16
        },
        end: {
          line: 388,
          column: 226
        }
      },
      "155": {
        start: {
          line: 397,
          column: 4
        },
        end: {
          line: 410,
          column: 6
        }
      },
      "156": {
        start: {
          line: 402,
          column: 55
        },
        end: {
          line: 402,
          column: 97
        }
      },
      "157": {
        start: {
          line: 407,
          column: 24
        },
        end: {
          line: 407,
          column: 52
        }
      },
      "158": {
        start: {
          line: 408,
          column: 25
        },
        end: {
          line: 408,
          column: 54
        }
      },
      "159": {
        start: {
          line: 409,
          column: 33
        },
        end: {
          line: 409,
          column: 70
        }
      },
      "160": {
        start: {
          line: 413,
          column: 30
        },
        end: {
          line: 413,
          column: 78
        }
      },
      "161": {
        start: {
          line: 414,
          column: 4
        },
        end: {
          line: 417,
          column: 11
        }
      },
      "162": {
        start: {
          line: 415,
          column: 28
        },
        end: {
          line: 415,
          column: 65
        }
      },
      "163": {
        start: {
          line: 416,
          column: 8
        },
        end: {
          line: 416,
          column: 27
        }
      },
      "164": {
        start: {
          line: 418,
          column: 4
        },
        end: {
          line: 423,
          column: 6
        }
      },
      "165": {
        start: {
          line: 420,
          column: 24
        },
        end: {
          line: 420,
          column: 52
        }
      },
      "166": {
        start: {
          line: 421,
          column: 25
        },
        end: {
          line: 421,
          column: 54
        }
      },
      "167": {
        start: {
          line: 422,
          column: 33
        },
        end: {
          line: 422,
          column: 70
        }
      },
      "168": {
        start: {
          line: 426,
          column: 26
        },
        end: {
          line: 426,
          column: 87
        }
      },
      "169": {
        start: {
          line: 427,
          column: 29
        },
        end: {
          line: 443,
          column: 5
        }
      },
      "170": {
        start: {
          line: 428,
          column: 31
        },
        end: {
          line: 431,
          column: 10
        }
      },
      "171": {
        start: {
          line: 433,
          column: 8
        },
        end: {
          line: 441,
          column: 11
        }
      },
      "172": {
        start: {
          line: 434,
          column: 32
        },
        end: {
          line: 436,
          column: 13
        }
      },
      "173": {
        start: {
          line: 435,
          column: 16
        },
        end: {
          line: 435,
          column: 53
        }
      },
      "174": {
        start: {
          line: 437,
          column: 12
        },
        end: {
          line: 437,
          column: 58
        }
      },
      "175": {
        start: {
          line: 438,
          column: 12
        },
        end: {
          line: 438,
          column: 72
        }
      },
      "176": {
        start: {
          line: 438,
          column: 23
        },
        end: {
          line: 438,
          column: 71
        }
      },
      "177": {
        start: {
          line: 442,
          column: 8
        },
        end: {
          line: 442,
          column: 62
        }
      },
      "178": {
        start: {
          line: 444,
          column: 4
        },
        end: {
          line: 444,
          column: 76
        }
      },
      "179": {
        start: {
          line: 445,
          column: 4
        },
        end: {
          line: 445,
          column: 28
        }
      },
      "180": {
        start: {
          line: 448,
          column: 4
        },
        end: {
          line: 448,
          column: 65
        }
      },
      "181": {
        start: {
          line: 451,
          column: 4
        },
        end: {
          line: 451,
          column: 78
        }
      },
      "182": {
        start: {
          line: 451,
          column: 61
        },
        end: {
          line: 451,
          column: 76
        }
      },
      "183": {
        start: {
          line: 454,
          column: 4
        },
        end: {
          line: 454,
          column: 40
        }
      },
      "184": {
        start: {
          line: 457,
          column: 4
        },
        end: {
          line: 457,
          column: 34
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 9,
            column: 9
          },
          end: {
            line: 9,
            column: 16
          }
        },
        loc: {
          start: {
            line: 9,
            column: 30
          },
          end: {
            line: 14,
            column: 1
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 26
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 32
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 27
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 31
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        loc: {
          start: {
            line: 28,
            column: 31
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 28
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        loc: {
          start: {
            line: 31,
            column: 31
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 31
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        },
        loc: {
          start: {
            line: 34,
            column: 32
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 34
      },
      "8": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 40,
            column: 9
          },
          end: {
            line: 40,
            column: 33
          }
        },
        loc: {
          start: {
            line: 40,
            column: 47
          },
          end: {
            line: 47,
            column: 1
          }
        },
        line: 40
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 44,
            column: 39
          },
          end: {
            line: 44,
            column: 40
          }
        },
        loc: {
          start: {
            line: 44,
            column: 61
          },
          end: {
            line: 46,
            column: 5
          }
        },
        line: 44
      },
      "10": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 48,
            column: 9
          },
          end: {
            line: 48,
            column: 34
          }
        },
        loc: {
          start: {
            line: 48,
            column: 53
          },
          end: {
            line: 80,
            column: 1
          }
        },
        line: 48
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 102,
            column: 4
          },
          end: {
            line: 102,
            column: 5
          }
        },
        loc: {
          start: {
            line: 102,
            column: 25
          },
          end: {
            line: 107,
            column: 5
          }
        },
        line: 102
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 108,
            column: 4
          },
          end: {
            line: 108,
            column: 5
          }
        },
        loc: {
          start: {
            line: 108,
            column: 26
          },
          end: {
            line: 111,
            column: 5
          }
        },
        line: 108
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 110,
            column: 15
          },
          end: {
            line: 110,
            column: 16
          }
        },
        loc: {
          start: {
            line: 110,
            column: 19
          },
          end: {
            line: 110,
            column: 50
          }
        },
        line: 110
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 112,
            column: 4
          },
          end: {
            line: 112,
            column: 5
          }
        },
        loc: {
          start: {
            line: 112,
            column: 22
          },
          end: {
            line: 122,
            column: 5
          }
        },
        line: 112
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 117,
            column: 40
          },
          end: {
            line: 117,
            column: 41
          }
        },
        loc: {
          start: {
            line: 117,
            column: 44
          },
          end: {
            line: 121,
            column: 9
          }
        },
        line: 117
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 119,
            column: 35
          },
          end: {
            line: 119,
            column: 36
          }
        },
        loc: {
          start: {
            line: 119,
            column: 47
          },
          end: {
            line: 119,
            column: 62
          }
        },
        line: 119
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 123,
            column: 4
          },
          end: {
            line: 123,
            column: 5
          }
        },
        loc: {
          start: {
            line: 123,
            column: 15
          },
          end: {
            line: 139,
            column: 5
          }
        },
        line: 123
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 124,
            column: 70
          },
          end: {
            line: 124,
            column: 71
          }
        },
        loc: {
          start: {
            line: 124,
            column: 85
          },
          end: {
            line: 124,
            column: 109
          }
        },
        line: 124
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 125,
            column: 75
          },
          end: {
            line: 125,
            column: 76
          }
        },
        loc: {
          start: {
            line: 125,
            column: 98
          },
          end: {
            line: 125,
            column: 141
          }
        },
        line: 125
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 136,
            column: 49
          },
          end: {
            line: 136,
            column: 50
          }
        },
        loc: {
          start: {
            line: 136,
            column: 58
          },
          end: {
            line: 136,
            column: 73
          }
        },
        line: 136
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 140,
            column: 4
          },
          end: {
            line: 140,
            column: 5
          }
        },
        loc: {
          start: {
            line: 140,
            column: 42
          },
          end: {
            line: 155,
            column: 5
          }
        },
        line: 140
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 156,
            column: 4
          },
          end: {
            line: 156,
            column: 5
          }
        },
        loc: {
          start: {
            line: 156,
            column: 20
          },
          end: {
            line: 169,
            column: 5
          }
        },
        line: 156
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 170,
            column: 4
          },
          end: {
            line: 170,
            column: 5
          }
        },
        loc: {
          start: {
            line: 170,
            column: 26
          },
          end: {
            line: 176,
            column: 5
          }
        },
        line: 170
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 171,
            column: 39
          },
          end: {
            line: 171,
            column: 40
          }
        },
        loc: {
          start: {
            line: 171,
            column: 44
          },
          end: {
            line: 171,
            column: 60
          }
        },
        line: 171
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 177,
            column: 4
          },
          end: {
            line: 177,
            column: 5
          }
        },
        loc: {
          start: {
            line: 177,
            column: 18
          },
          end: {
            line: 180,
            column: 5
          }
        },
        line: 177
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 181,
            column: 4
          },
          end: {
            line: 181,
            column: 5
          }
        },
        loc: {
          start: {
            line: 181,
            column: 17
          },
          end: {
            line: 187,
            column: 5
          }
        },
        line: 181
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 188,
            column: 4
          },
          end: {
            line: 188,
            column: 5
          }
        },
        loc: {
          start: {
            line: 188,
            column: 17
          },
          end: {
            line: 193,
            column: 5
          }
        },
        line: 188
      },
      "28": {
        name: "measureRenderTime",
        decl: {
          start: {
            line: 199,
            column: 9
          },
          end: {
            line: 199,
            column: 26
          }
        },
        loc: {
          start: {
            line: 199,
            column: 31
          },
          end: {
            line: 207,
            column: 1
          }
        },
        line: 199
      },
      "29": {
        name: "getMemoryUsage",
        decl: {
          start: {
            line: 208,
            column: 9
          },
          end: {
            line: 208,
            column: 23
          }
        },
        loc: {
          start: {
            line: 208,
            column: 26
          },
          end: {
            line: 213,
            column: 1
          }
        },
        line: 208
      },
      "30": {
        name: "shouldSample",
        decl: {
          start: {
            line: 214,
            column: 9
          },
          end: {
            line: 214,
            column: 21
          }
        },
        loc: {
          start: {
            line: 214,
            column: 34
          },
          end: {
            line: 216,
            column: 1
          }
        },
        line: 214
      },
      "31": {
        name: "useRenderMonitoring",
        decl: {
          start: {
            line: 217,
            column: 9
          },
          end: {
            line: 217,
            column: 28
          }
        },
        loc: {
          start: {
            line: 217,
            column: 38
          },
          end: {
            line: 411,
            column: 1
          }
        },
        line: 217
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 235,
            column: 55
          },
          end: {
            line: 235,
            column: 56
          }
        },
        loc: {
          start: {
            line: 235,
            column: 69
          },
          end: {
            line: 288,
            column: 5
          }
        },
        line: 235
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 256,
            column: 60
          },
          end: {
            line: 256,
            column: 61
          }
        },
        loc: {
          start: {
            line: 256,
            column: 68
          },
          end: {
            line: 256,
            column: 87
          }
        },
        line: 256
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 295,
            column: 48
          },
          end: {
            line: 295,
            column: 49
          }
        },
        loc: {
          start: {
            line: 295,
            column: 52
          },
          end: {
            line: 336,
            column: 5
          }
        },
        line: 295
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 308,
            column: 53
          },
          end: {
            line: 308,
            column: 54
          }
        },
        loc: {
          start: {
            line: 308,
            column: 74
          },
          end: {
            line: 313,
            column: 9
          }
        },
        line: 308
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 343,
            column: 47
          },
          end: {
            line: 343,
            column: 48
          }
        },
        loc: {
          start: {
            line: 343,
            column: 67
          },
          end: {
            line: 367,
            column: 5
          }
        },
        line: 343
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 375,
            column: 26
          },
          end: {
            line: 375,
            column: 27
          }
        },
        loc: {
          start: {
            line: 375,
            column: 30
          },
          end: {
            line: 378,
            column: 5
          }
        },
        line: 375
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 380,
            column: 26
          },
          end: {
            line: 380,
            column: 27
          }
        },
        loc: {
          start: {
            line: 380,
            column: 30
          },
          end: {
            line: 382,
            column: 5
          }
        },
        line: 380
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 384,
            column: 26
          },
          end: {
            line: 384,
            column: 27
          }
        },
        loc: {
          start: {
            line: 384,
            column: 30
          },
          end: {
            line: 391,
            column: 5
          }
        },
        line: 384
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 385,
            column: 15
          },
          end: {
            line: 385,
            column: 16
          }
        },
        loc: {
          start: {
            line: 385,
            column: 19
          },
          end: {
            line: 390,
            column: 9
          }
        },
        line: 385
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 402,
            column: 46
          },
          end: {
            line: 402,
            column: 47
          }
        },
        loc: {
          start: {
            line: 402,
            column: 55
          },
          end: {
            line: 402,
            column: 97
          }
        },
        line: 402
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 407,
            column: 20
          },
          end: {
            line: 407,
            column: 21
          }
        },
        loc: {
          start: {
            line: 407,
            column: 24
          },
          end: {
            line: 407,
            column: 52
          }
        },
        line: 407
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 408,
            column: 21
          },
          end: {
            line: 408,
            column: 22
          }
        },
        loc: {
          start: {
            line: 408,
            column: 25
          },
          end: {
            line: 408,
            column: 54
          }
        },
        line: 408
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 409,
            column: 22
          },
          end: {
            line: 409,
            column: 23
          }
        },
        loc: {
          start: {
            line: 409,
            column: 33
          },
          end: {
            line: 409,
            column: 70
          }
        },
        line: 409
      },
      "45": {
        name: "useGlobalMonitoring",
        decl: {
          start: {
            line: 412,
            column: 9
          },
          end: {
            line: 412,
            column: 28
          }
        },
        loc: {
          start: {
            line: 412,
            column: 31
          },
          end: {
            line: 424,
            column: 1
          }
        },
        line: 412
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 414,
            column: 26
          },
          end: {
            line: 414,
            column: 27
          }
        },
        loc: {
          start: {
            line: 414,
            column: 30
          },
          end: {
            line: 417,
            column: 5
          }
        },
        line: 414
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 420,
            column: 20
          },
          end: {
            line: 420,
            column: 21
          }
        },
        loc: {
          start: {
            line: 420,
            column: 24
          },
          end: {
            line: 420,
            column: 52
          }
        },
        line: 420
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 421,
            column: 21
          },
          end: {
            line: 421,
            column: 22
          }
        },
        loc: {
          start: {
            line: 421,
            column: 25
          },
          end: {
            line: 421,
            column: 54
          }
        },
        line: 421
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 422,
            column: 22
          },
          end: {
            line: 422,
            column: 23
          }
        },
        loc: {
          start: {
            line: 422,
            column: 33
          },
          end: {
            line: 422,
            column: 70
          }
        },
        line: 422
      },
      "50": {
        name: "withRenderMonitoring",
        decl: {
          start: {
            line: 425,
            column: 9
          },
          end: {
            line: 425,
            column: 29
          }
        },
        loc: {
          start: {
            line: 425,
            column: 50
          },
          end: {
            line: 446,
            column: 1
          }
        },
        line: 425
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 427,
            column: 29
          },
          end: {
            line: 427,
            column: 30
          }
        },
        loc: {
          start: {
            line: 427,
            column: 38
          },
          end: {
            line: 443,
            column: 5
          }
        },
        line: 427
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 433,
            column: 30
          },
          end: {
            line: 433,
            column: 31
          }
        },
        loc: {
          start: {
            line: 433,
            column: 34
          },
          end: {
            line: 439,
            column: 9
          }
        },
        line: 433
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 434,
            column: 32
          },
          end: {
            line: 434,
            column: 33
          }
        },
        loc: {
          start: {
            line: 434,
            column: 41
          },
          end: {
            line: 436,
            column: 13
          }
        },
        line: 434
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 438,
            column: 19
          },
          end: {
            line: 438,
            column: 20
          }
        },
        loc: {
          start: {
            line: 438,
            column: 23
          },
          end: {
            line: 438,
            column: 71
          }
        },
        line: 438
      },
      "55": {
        name: "getComponentMetrics",
        decl: {
          start: {
            line: 447,
            column: 9
          },
          end: {
            line: 447,
            column: 28
          }
        },
        loc: {
          start: {
            line: 447,
            column: 44
          },
          end: {
            line: 449,
            column: 1
          }
        },
        line: 447
      },
      "56": {
        name: "getActiveAlerts",
        decl: {
          start: {
            line: 450,
            column: 9
          },
          end: {
            line: 450,
            column: 24
          }
        },
        loc: {
          start: {
            line: 450,
            column: 27
          },
          end: {
            line: 452,
            column: 1
          }
        },
        line: 450
      },
      "57": {
        name: "(anonymous_57)",
        decl: {
          start: {
            line: 451,
            column: 52
          },
          end: {
            line: 451,
            column: 53
          }
        },
        loc: {
          start: {
            line: 451,
            column: 61
          },
          end: {
            line: 451,
            column: 76
          }
        },
        line: 451
      },
      "58": {
        name: "exportMonitoringData",
        decl: {
          start: {
            line: 453,
            column: 9
          },
          end: {
            line: 453,
            column: 29
          }
        },
        loc: {
          start: {
            line: 453,
            column: 32
          },
          end: {
            line: 455,
            column: 1
          }
        },
        line: 453
      },
      "59": {
        name: "clearAllAlerts",
        decl: {
          start: {
            line: 456,
            column: 9
          },
          end: {
            line: 456,
            column: 23
          }
        },
        loc: {
          start: {
            line: 456,
            column: 26
          },
          end: {
            line: 458,
            column: 1
          }
        },
        line: 456
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 41,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 41,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "1": {
        loc: {
          start: {
            line: 45,
            column: 15
          },
          end: {
            line: 45,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 45,
            column: 29
          },
          end: {
            line: 45,
            column: 45
          }
        }, {
          start: {
            line: 45,
            column: 48
          },
          end: {
            line: 45,
            column: 65
          }
        }],
        line: 45
      },
      "2": {
        loc: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "3": {
        loc: {
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 49,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 49,
            column: 20
          }
        }, {
          start: {
            line: 49,
            column: 24
          },
          end: {
            line: 49,
            column: 27
          }
        }, {
          start: {
            line: 49,
            column: 31
          },
          end: {
            line: 49,
            column: 45
          }
        }],
        line: 49
      },
      "4": {
        loc: {
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "5": {
        loc: {
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 52,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 52,
            column: 20
          }
        }, {
          start: {
            line: 52,
            column: 24
          },
          end: {
            line: 52,
            column: 47
          }
        }, {
          start: {
            line: 52,
            column: 51
          },
          end: {
            line: 52,
            column: 76
          }
        }],
        line: 52
      },
      "6": {
        loc: {
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "7": {
        loc: {
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 58,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 58,
            column: 13
          }
        }, {
          start: {
            line: 58,
            column: 17
          },
          end: {
            line: 58,
            column: 31
          }
        }],
        line: 58
      },
      "8": {
        loc: {
          start: {
            line: 64,
            column: 32
          },
          end: {
            line: 64,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 64,
            column: 32
          },
          end: {
            line: 64,
            column: 53
          }
        }, {
          start: {
            line: 64,
            column: 57
          },
          end: {
            line: 64,
            column: 88
          }
        }],
        line: 64
      },
      "9": {
        loc: {
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 73,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 73,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "10": {
        loc: {
          start: {
            line: 66,
            column: 12
          },
          end: {
            line: 66,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 66,
            column: 12
          },
          end: {
            line: 66,
            column: 29
          }
        }, {
          start: {
            line: 66,
            column: 33
          },
          end: {
            line: 66,
            column: 79
          }
        }],
        line: 66
      },
      "11": {
        loc: {
          start: {
            line: 67,
            column: 23
          },
          end: {
            line: 67,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 67,
            column: 47
          },
          end: {
            line: 67,
            column: 88
          }
        }, {
          start: {
            line: 67,
            column: 91
          },
          end: {
            line: 67,
            column: 95
          }
        }],
        line: 67
      },
      "12": {
        loc: {
          start: {
            line: 68,
            column: 12
          },
          end: {
            line: 72,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 12
          },
          end: {
            line: 72,
            column: 13
          }
        }, {
          start: {
            line: 70,
            column: 19
          },
          end: {
            line: 72,
            column: 13
          }
        }],
        line: 68
      },
      "13": {
        loc: {
          start: {
            line: 68,
            column: 16
          },
          end: {
            line: 68,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 68,
            column: 16
          },
          end: {
            line: 68,
            column: 20
          }
        }, {
          start: {
            line: 68,
            column: 25
          },
          end: {
            line: 68,
            column: 33
          }
        }, {
          start: {
            line: 68,
            column: 37
          },
          end: {
            line: 68,
            column: 45
          }
        }],
        line: 68
      },
      "14": {
        loc: {
          start: {
            line: 76,
            column: 4
          },
          end: {
            line: 78,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 76,
            column: 4
          },
          end: {
            line: 78,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 76
      },
      "15": {
        loc: {
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "16": {
        loc: {
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 116,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 116,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      },
      "17": {
        loc: {
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 167,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 167,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 165
      },
      "18": {
        loc: {
          start: {
            line: 172,
            column: 8
          },
          end: {
            line: 175,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 172,
            column: 8
          },
          end: {
            line: 175,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 172
      },
      "19": {
        loc: {
          start: {
            line: 209,
            column: 4
          },
          end: {
            line: 211,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 209,
            column: 4
          },
          end: {
            line: 211,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 209
      },
      "20": {
        loc: {
          start: {
            line: 238,
            column: 8
          },
          end: {
            line: 252,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 238,
            column: 8
          },
          end: {
            line: 252,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 238
      },
      "21": {
        loc: {
          start: {
            line: 242,
            column: 26
          },
          end: {
            line: 242,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 242,
            column: 76
          },
          end: {
            line: 242,
            column: 82
          }
        }, {
          start: {
            line: 242,
            column: 85
          },
          end: {
            line: 242,
            column: 93
          }
        }],
        line: 242
      },
      "22": {
        loc: {
          start: {
            line: 249,
            column: 12
          },
          end: {
            line: 251,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 249,
            column: 12
          },
          end: {
            line: 251,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 249
      },
      "23": {
        loc: {
          start: {
            line: 257,
            column: 8
          },
          end: {
            line: 274,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 257,
            column: 8
          },
          end: {
            line: 274,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 257
      },
      "24": {
        loc: {
          start: {
            line: 267,
            column: 12
          },
          end: {
            line: 273,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 267,
            column: 12
          },
          end: {
            line: 273,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 267
      },
      "25": {
        loc: {
          start: {
            line: 277,
            column: 8
          },
          end: {
            line: 287,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 277,
            column: 8
          },
          end: {
            line: 287,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 277
      },
      "26": {
        loc: {
          start: {
            line: 296,
            column: 8
          },
          end: {
            line: 298,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 296,
            column: 8
          },
          end: {
            line: 298,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 296
      },
      "27": {
        loc: {
          start: {
            line: 296,
            column: 12
          },
          end: {
            line: 296,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 296,
            column: 12
          },
          end: {
            line: 296,
            column: 25
          }
        }, {
          start: {
            line: 296,
            column: 29
          },
          end: {
            line: 296,
            column: 59
          }
        }],
        line: 296
      },
      "28": {
        loc: {
          start: {
            line: 303,
            column: 8
          },
          end: {
            line: 305,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 303,
            column: 8
          },
          end: {
            line: 305,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 303
      },
      "29": {
        loc: {
          start: {
            line: 309,
            column: 12
          },
          end: {
            line: 311,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 309,
            column: 12
          },
          end: {
            line: 311,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 309
      },
      "30": {
        loc: {
          start: {
            line: 328,
            column: 8
          },
          end: {
            line: 334,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 328,
            column: 8
          },
          end: {
            line: 334,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 328
      },
      "31": {
        loc: {
          start: {
            line: 344,
            column: 8
          },
          end: {
            line: 346,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 344,
            column: 8
          },
          end: {
            line: 346,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 344
      },
      "32": {
        loc: {
          start: {
            line: 357,
            column: 8
          },
          end: {
            line: 359,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 357,
            column: 8
          },
          end: {
            line: 359,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 357
      },
      "33": {
        loc: {
          start: {
            line: 360,
            column: 8
          },
          end: {
            line: 366,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 360,
            column: 8
          },
          end: {
            line: 366,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 360
      },
      "34": {
        loc: {
          start: {
            line: 386,
            column: 12
          },
          end: {
            line: 389,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 386,
            column: 12
          },
          end: {
            line: 389,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 386
      },
      "35": {
        loc: {
          start: {
            line: 426,
            column: 26
          },
          end: {
            line: 426,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 426,
            column: 26
          },
          end: {
            line: 426,
            column: 47
          }
        }, {
          start: {
            line: 426,
            column: 51
          },
          end: {
            line: 426,
            column: 65
          }
        }, {
          start: {
            line: 426,
            column: 69
          },
          end: {
            line: 426,
            column: 87
          }
        }],
        line: 426
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\monitoring\\useRenderMonitoring.ts"],
      sourcesContent: ["// ===================================\r\n// PINTEYA E-COMMERCE - RENDER MONITORING SYSTEM\r\n// Sistema de monitoreo en tiempo real para detectar problemas de renderizado\r\n// ===================================\r\n\r\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\r\nimport { useToast } from '@/hooks/use-toast';\r\n\r\n// ===================================\r\n// TIPOS Y INTERFACES\r\n// ===================================\r\n\r\nexport interface RenderMetrics {\r\n  readonly componentName: string;\r\n  readonly renderCount: number;\r\n  readonly averageRenderTime: number;\r\n  readonly lastRenderTime: number;\r\n  readonly slowRenders: number;\r\n  readonly errorCount: number;\r\n  readonly memoryUsage?: number;\r\n  readonly timestamp: number;\r\n}\r\n\r\nexport interface PerformanceThresholds {\r\n  readonly slowRenderThreshold: number; // ms\r\n  readonly maxRenderCount: number; // renders per minute\r\n  readonly memoryThreshold: number; // MB\r\n  readonly errorThreshold: number; // errors per minute\r\n}\r\n\r\nexport interface MonitoringAlert {\r\n  readonly id: string;\r\n  readonly type: 'performance' | 'error' | 'memory' | 'render-loop';\r\n  readonly severity: 'low' | 'medium' | 'high' | 'critical';\r\n  readonly message: string;\r\n  readonly componentName: string;\r\n  readonly metrics: Partial<RenderMetrics>;\r\n  readonly timestamp: number;\r\n  readonly resolved: boolean;\r\n}\r\n\r\nexport interface MonitoringState {\r\n  readonly isEnabled: boolean;\r\n  readonly metrics: Map<string, RenderMetrics>;\r\n  readonly alerts: MonitoringAlert[];\r\n  readonly globalStats: {\r\n    readonly totalComponents: number;\r\n    readonly totalRenders: number;\r\n    readonly averageRenderTime: number;\r\n    readonly activeAlerts: number;\r\n  };\r\n}\r\n\r\nexport interface MonitoringOptions {\r\n  readonly enabled?: boolean;\r\n  readonly componentName: string;\r\n  readonly thresholds?: Partial<PerformanceThresholds>;\r\n  readonly enableToasts?: boolean;\r\n  readonly enableConsoleLogging?: boolean;\r\n  readonly enableLocalStorage?: boolean;\r\n  readonly sampleRate?: number; // 0-1, percentage of renders to monitor\r\n}\r\n\r\n// ===================================\r\n// CONFIGURACI\xD3N POR DEFECTO\r\n// ===================================\r\n\r\nconst DEFAULT_THRESHOLDS: PerformanceThresholds = {\r\n  slowRenderThreshold: 16, // 16ms = 60fps\r\n  maxRenderCount: 60, // 60 renders per minute\r\n  memoryThreshold: 100, // 100MB\r\n  errorThreshold: 5 // 5 errors per minute\r\n};\r\n\r\nconst DEFAULT_OPTIONS: Required<Omit<MonitoringOptions, 'componentName'>> = {\r\n  enabled: process.env.NODE_ENV === 'development',\r\n  thresholds: DEFAULT_THRESHOLDS,\r\n  enableToasts: true,\r\n  enableConsoleLogging: true,\r\n  enableLocalStorage: true,\r\n  sampleRate: 1.0\r\n};\r\n\r\n// ===================================\r\n// ALMACENAMIENTO GLOBAL\r\n// ===================================\r\n\r\nclass MonitoringStore {\r\n  private static instance: MonitoringStore;\r\n  private metrics = new Map<string, RenderMetrics>();\r\n  private alerts: MonitoringAlert[] = [];\r\n  private listeners = new Set<(state: MonitoringState) => void>();\r\n\r\n  static getInstance(): MonitoringStore {\r\n    if (!MonitoringStore.instance) {\r\n      MonitoringStore.instance = new MonitoringStore();\r\n    }\r\n    return MonitoringStore.instance;\r\n  }\r\n\r\n  addListener(listener: (state: MonitoringState) => void): () => void {\r\n    this.listeners.add(listener);\r\n    return () => this.listeners.delete(listener);\r\n  }\r\n\r\n  private notifyListeners(): void {\r\n    // Debounce para evitar loops infinitos\r\n    if (this.notifyTimeout) {\r\n      clearTimeout(this.notifyTimeout);\r\n    }\r\n\r\n    this.notifyTimeout = setTimeout(() => {\r\n      const state = this.getState();\r\n      this.listeners.forEach(listener => listener(state));\r\n      this.notifyTimeout = null;\r\n    }, 16); // 16ms = ~60fps\r\n  }\r\n\r\n  private notifyTimeout: NodeJS.Timeout | null = null;\r\n\r\n  getState(): MonitoringState {\r\n    const totalRenders = Array.from(this.metrics.values())\r\n      .reduce((sum, metric) => sum + metric.renderCount, 0);\r\n    \r\n    const averageRenderTime = Array.from(this.metrics.values())\r\n      .reduce((sum, metric, _, arr) => sum + metric.averageRenderTime / arr.length, 0);\r\n\r\n    return {\r\n      isEnabled: true,\r\n      metrics: new Map(this.metrics),\r\n      alerts: [...this.alerts],\r\n      globalStats: {\r\n        totalComponents: this.metrics.size,\r\n        totalRenders,\r\n        averageRenderTime,\r\n        activeAlerts: this.alerts.filter(alert => !alert.resolved).length\r\n      }\r\n    };\r\n  }\r\n\r\n  updateMetrics(componentName: string, metrics: Partial<RenderMetrics>): void {\r\n    const existing = this.metrics.get(componentName);\r\n    const updated: RenderMetrics = {\r\n      componentName,\r\n      renderCount: 0,\r\n      averageRenderTime: 0,\r\n      lastRenderTime: 0,\r\n      slowRenders: 0,\r\n      errorCount: 0,\r\n      timestamp: Date.now(),\r\n      ...existing,\r\n      ...metrics\r\n    };\r\n\r\n    this.metrics.set(componentName, updated);\r\n    this.notifyListeners();\r\n  }\r\n\r\n  addAlert(alert: Omit<MonitoringAlert, 'id' | 'timestamp' | 'resolved'>): void {\r\n    const newAlert: MonitoringAlert = {\r\n      ...alert,\r\n      id: `alert-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\r\n      timestamp: Date.now(),\r\n      resolved: false\r\n    };\r\n\r\n    this.alerts.unshift(newAlert);\r\n    \r\n    // Mantener solo las \xFAltimas 100 alertas\r\n    if (this.alerts.length > 100) {\r\n      this.alerts = this.alerts.slice(0, 100);\r\n    }\r\n\r\n    this.notifyListeners();\r\n  }\r\n\r\n  resolveAlert(alertId: string): void {\r\n    const alert = this.alerts.find(a => a.id === alertId);\r\n    if (alert) {\r\n      (alert as any).resolved = true;\r\n      this.notifyListeners();\r\n    }\r\n  }\r\n\r\n  clearAlerts(): void {\r\n    this.alerts = [];\r\n    this.notifyListeners();\r\n  }\r\n\r\n  exportData(): string {\r\n    return JSON.stringify({\r\n      metrics: Array.from(this.metrics.entries()),\r\n      alerts: this.alerts,\r\n      timestamp: Date.now()\r\n    }, null, 2);\r\n  }\r\n}\r\n\r\nconst monitoringStore = MonitoringStore.getInstance();\r\n\r\n// ===================================\r\n// UTILIDADES DE PERFORMANCE\r\n// ===================================\r\n\r\nfunction measureRenderTime<T>(fn: () => T): { result: T; duration: number } {\r\n  const start = performance.now();\r\n  const result = fn();\r\n  const duration = performance.now() - start;\r\n  return { result, duration };\r\n}\r\n\r\nfunction getMemoryUsage(): number {\r\n  if ('memory' in performance) {\r\n    return (performance as any).memory.usedJSHeapSize / 1024 / 1024; // MB\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction shouldSample(sampleRate: number): boolean {\r\n  return Math.random() < sampleRate;\r\n}\r\n\r\n// ===================================\r\n// HOOK PRINCIPAL DE MONITOREO\r\n// ===================================\r\n\r\nexport function useRenderMonitoring(options: MonitoringOptions) {\r\n  const opts = { ...DEFAULT_OPTIONS, ...options };\r\n  const { toast } = useToast();\r\n  \r\n  // Referencias para tracking\r\n  const renderCountRef = useRef(0);\r\n  const renderTimesRef = useRef<number[]>([]);\r\n  const lastRenderTimeRef = useRef(0);\r\n  const slowRendersRef = useRef(0);\r\n  const errorCountRef = useRef(0);\r\n  const mountTimeRef = useRef(Date.now());\r\n  \r\n  // Estado local\r\n  const [monitoringState, setMonitoringState] = useState<MonitoringState>(\r\n    monitoringStore.getState()\r\n  );\r\n\r\n  // ===================================\r\n  // FUNCIONES DE AN\xC1LISIS\r\n  // ===================================\r\n\r\n  const analyzePerformance = useCallback((renderTime: number) => {\r\n    const { componentName, thresholds } = opts;\r\n    \r\n    // Detectar render lento\r\n    if (renderTime > thresholds.slowRenderThreshold) {\r\n      slowRendersRef.current++;\r\n      \r\n      monitoringStore.addAlert({\r\n        type: 'performance',\r\n        severity: renderTime > thresholds.slowRenderThreshold * 2 ? 'high' : 'medium',\r\n        message: `Render lento detectado: ${renderTime.toFixed(2)}ms (umbral: ${thresholds.slowRenderThreshold}ms)`,\r\n        componentName,\r\n        metrics: { lastRenderTime: renderTime }\r\n      });\r\n\r\n      if (opts.enableConsoleLogging) {\r\n        console.warn(`[RenderMonitoring] Slow render in ${componentName}: ${renderTime.toFixed(2)}ms`);\r\n      }\r\n    }\r\n\r\n    // Detectar posible render loop\r\n    const now = Date.now();\r\n    const oneMinuteAgo = now - 60000;\r\n    const recentRenders = renderTimesRef.current.filter(time => time > oneMinuteAgo).length;\r\n    \r\n    if (recentRenders > thresholds.maxRenderCount) {\r\n      monitoringStore.addAlert({\r\n        type: 'render-loop',\r\n        severity: 'critical',\r\n        message: `Posible render loop: ${recentRenders} renders en el \xFAltimo minuto (m\xE1ximo: ${thresholds.maxRenderCount})`,\r\n        componentName,\r\n        metrics: { renderCount: recentRenders }\r\n      });\r\n\r\n      if (opts.enableToasts) {\r\n        toast({\r\n          title: 'Render Loop Detectado',\r\n          description: `${componentName}: ${recentRenders} renders/min`,\r\n          variant: 'destructive'\r\n        });\r\n      }\r\n    }\r\n\r\n    // Detectar uso excesivo de memoria\r\n    const memoryUsage = getMemoryUsage();\r\n    if (memoryUsage > thresholds.memoryThreshold) {\r\n      monitoringStore.addAlert({\r\n        type: 'memory',\r\n        severity: 'high',\r\n        message: `Uso de memoria elevado: ${memoryUsage.toFixed(2)}MB (umbral: ${thresholds.memoryThreshold}MB)`,\r\n        componentName,\r\n        metrics: { memoryUsage }\r\n      });\r\n    }\r\n  }, [opts, toast]);\r\n\r\n  // ===================================\r\n  // FUNCI\xD3N DE TRACKING DE RENDER\r\n  // ===================================\r\n\r\n  const trackRender = useCallback(() => {\r\n    if (!opts.enabled || !shouldSample(opts.sampleRate)) {\r\n      return;\r\n    }\r\n\r\n    const renderTime = performance.now() - lastRenderTimeRef.current;\r\n    renderCountRef.current++;\r\n    renderTimesRef.current.push(Date.now());\r\n    \r\n    // Mantener solo los \xFAltimos 100 renders\r\n    if (renderTimesRef.current.length > 100) {\r\n      renderTimesRef.current = renderTimesRef.current.slice(-100);\r\n    }\r\n\r\n    // Calcular promedio de tiempo de render\r\n    const recentTimes = renderTimesRef.current.slice(-10); // \xDAltimos 10 renders\r\n    const averageRenderTime = recentTimes.reduce((sum, time, i, arr) => {\r\n      if (i === 0) {return 0;}\r\n      return sum + (time - arr[i - 1]) / (arr.length - 1);\r\n    }, 0);\r\n\r\n    // Actualizar m\xE9tricas\r\n    const metrics: Partial<RenderMetrics> = {\r\n      renderCount: renderCountRef.current,\r\n      averageRenderTime,\r\n      lastRenderTime: renderTime,\r\n      slowRenders: slowRendersRef.current,\r\n      errorCount: errorCountRef.current,\r\n      memoryUsage: getMemoryUsage(),\r\n      timestamp: Date.now()\r\n    };\r\n\r\n    monitoringStore.updateMetrics(opts.componentName, metrics);\r\n    \r\n    // Analizar performance\r\n    analyzePerformance(renderTime);\r\n    \r\n    // Guardar en localStorage si est\xE1 habilitado\r\n    if (opts.enableLocalStorage) {\r\n      try {\r\n        localStorage.setItem(\r\n          `render-monitoring-${opts.componentName}`,\r\n          JSON.stringify(metrics)\r\n        );\r\n      } catch (error) {\r\n        // Ignorar errores de localStorage\r\n      }\r\n    }\r\n\r\n    lastRenderTimeRef.current = performance.now();\r\n  }, [opts, analyzePerformance]);\r\n\r\n  // ===================================\r\n  // FUNCI\xD3N DE TRACKING DE ERRORES\r\n  // ===================================\r\n\r\n  const trackError = useCallback((error: Error, errorInfo?: any) => {\r\n    if (!opts.enabled) {return;}\r\n\r\n    errorCountRef.current++;\r\n    \r\n    monitoringStore.addAlert({\r\n      type: 'error',\r\n      severity: 'high',\r\n      message: `Error en componente: ${error.message}`,\r\n      componentName: opts.componentName,\r\n      metrics: { errorCount: errorCountRef.current }\r\n    });\r\n\r\n    if (opts.enableConsoleLogging) {\r\n      console.error(`[RenderMonitoring] Error in ${opts.componentName}:`, error, errorInfo);\r\n    }\r\n\r\n    if (opts.enableToasts) {\r\n      toast({\r\n        title: 'Error de Componente',\r\n        description: `${opts.componentName}: ${error.message}`,\r\n        variant: 'destructive'\r\n      });\r\n    }\r\n  }, [opts, toast]);\r\n\r\n  // ===================================\r\n  // EFECTOS\r\n  // ===================================\r\n\r\n  // Suscribirse a cambios del store\r\n  useEffect(() => {\r\n    const unsubscribe = monitoringStore.addListener(setMonitoringState);\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  // Track render en cada render del componente\r\n  useEffect(() => {\r\n    trackRender();\r\n  });\r\n\r\n  // Cleanup al desmontar\r\n  useEffect(() => {\r\n    return () => {\r\n      if (opts.enableConsoleLogging) {\r\n        const totalTime = Date.now() - mountTimeRef.current;\r\n        console.log(\r\n          `[RenderMonitoring] ${opts.componentName} unmounted after ${totalTime}ms, ` +\r\n          `${renderCountRef.current} renders, ` +\r\n          `${slowRendersRef.current} slow renders, ` +\r\n          `${errorCountRef.current} errors`\r\n        );\r\n      }\r\n    };\r\n  }, [opts]);\r\n\r\n  // ===================================\r\n  // API P\xDABLICA\r\n  // ===================================\r\n\r\n  return {\r\n    // Estado\r\n    isEnabled: opts.enabled,\r\n    metrics: monitoringState.metrics.get(opts.componentName),\r\n    globalStats: monitoringState.globalStats,\r\n    alerts: monitoringState.alerts.filter(alert => \r\n      alert.componentName === opts.componentName\r\n    ),\r\n    \r\n    // Funciones\r\n    trackError,\r\n    trackRender,\r\n    \r\n    // Utilidades\r\n    exportData: () => monitoringStore.exportData(),\r\n    clearAlerts: () => monitoringStore.clearAlerts(),\r\n    resolveAlert: (alertId: string) => monitoringStore.resolveAlert(alertId)\r\n  };\r\n}\r\n\r\n// ===================================\r\n// HOOK PARA MONITOREO GLOBAL\r\n// ===================================\r\n\r\nexport function useGlobalMonitoring() {\r\n  const [state, setState] = useState<MonitoringState>(monitoringStore.getState());\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = monitoringStore.addListener(setState);\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  return {\r\n    ...state,\r\n    exportData: () => monitoringStore.exportData(),\r\n    clearAlerts: () => monitoringStore.clearAlerts(),\r\n    resolveAlert: (alertId: string) => monitoringStore.resolveAlert(alertId)\r\n  };\r\n}\r\n\r\n// ===================================\r\n// HOC PARA MONITOREO AUTOM\xC1TICO\r\n// ===================================\r\n\r\nexport function withRenderMonitoring<P extends object>(\r\n  Component: React.ComponentType<P>,\r\n  options: Omit<MonitoringOptions, 'componentName'>\r\n): React.ComponentType<P> {\r\n  const componentName = Component.displayName || Component.name || 'UnknownComponent';\r\n  \r\n  const WrappedComponent: React.FC<P> = (props) => {\r\n    const { trackError } = useRenderMonitoring({\r\n      ...options,\r\n      componentName\r\n    });\r\n\r\n    // Error boundary simple\r\n    useEffect(() => {\r\n      const handleError = (event: ErrorEvent) => {\r\n        trackError(new Error(event.message));\r\n      };\r\n\r\n      window.addEventListener('error', handleError);\r\n      return () => window.removeEventListener('error', handleError);\r\n    }, [trackError]);\r\n\r\n    return React.createElement(Component, props);\r\n  };\r\n\r\n  WrappedComponent.displayName = `withRenderMonitoring(${componentName})`;\r\n  return WrappedComponent;\r\n}\r\n\r\n// ===================================\r\n// UTILIDADES EXPORTADAS\r\n// ===================================\r\n\r\n/**\r\n * Obtiene m\xE9tricas de un componente espec\xEDfico\r\n */\r\nexport function getComponentMetrics(componentName: string): RenderMetrics | undefined {\r\n  return monitoringStore.getState().metrics.get(componentName);\r\n}\r\n\r\n/**\r\n * Obtiene todas las alertas activas\r\n */\r\nexport function getActiveAlerts(): MonitoringAlert[] {\r\n  return monitoringStore.getState().alerts.filter(alert => !alert.resolved);\r\n}\r\n\r\n/**\r\n * Exporta todos los datos de monitoreo\r\n */\r\nexport function exportMonitoringData(): string {\r\n  return monitoringStore.exportData();\r\n}\r\n\r\n/**\r\n * Limpia todas las alertas\r\n */\r\nexport function clearAllAlerts(): void {\r\n  monitoringStore.clearAlerts();\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["clearAllAlerts", "exportMonitoringData", "getActiveAlerts", "getComponentMetrics", "useGlobalMonitoring", "useRenderMonitoring", "withRenderMonitoring", "DEFAULT_THRESHOLDS", "slowRenderThreshold", "maxRenderCount", "memoryThreshold", "errorThreshold", "DEFAULT_OPTIONS", "enabled", "process", "env", "NODE_ENV", "thresholds", "enableToasts", "enableConsoleLogging", "enableLocalStorage", "sampleRate", "MonitoringStore", "getInstance", "instance", "addListener", "listener", "listeners", "add", "delete", "notifyListeners", "notifyTimeout", "clearTimeout", "setTimeout", "state", "getState", "forEach", "totalRenders", "Array", "from", "metrics", "values", "reduce", "sum", "metric", "renderCount", "averageRenderTime", "_", "arr", "length", "isEnabled", "Map", "alerts", "globalStats", "totalComponents", "size", "activeAlerts", "filter", "alert", "resolved", "updateMetrics", "componentName", "existing", "get", "updated", "lastRenderTime", "slowRenders", "errorCount", "timestamp", "Date", "now", "set", "addAlert", "newAlert", "id", "Math", "random", "toString", "substr", "unshift", "slice", "resolveAlert", "alertId", "find", "a", "clearAlerts", "exportData", "JSON", "stringify", "entries", "Set", "monitoringStore", "measureRenderTime", "fn", "start", "performance", "result", "duration", "getMemoryUsage", "memory", "usedJSHeapSize", "shouldSample", "options", "opts", "toast", "useToast", "renderCountRef", "useRef", "renderTimesRef", "lastRenderTimeRef", "slowRendersRef", "errorCountRef", "mountTimeRef", "monitoringState", "setMonitoringState", "useState", "analyzePerformance", "useCallback", "renderTime", "current", "type", "severity", "message", "toFixed", "console", "warn", "oneMinuteAgo", "recentRenders", "time", "title", "description", "variant", "memoryUsage", "trackRender", "push", "recentTimes", "i", "localStorage", "setItem", "error", "trackError", "errorInfo", "useEffect", "unsubscribe", "totalTime", "log", "setState", "Component", "displayName", "name", "WrappedComponent", "props", "handleError", "event", "Error", "window", "addEventListener", "removeEventListener", "React", "createElement"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e2a277cca549fafdea5756e876923d4e25a04259"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2fy3retdu = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2fy3retdu();
cov_2fy3retdu().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2fy3retdu().f[0]++;
  cov_2fy3retdu().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2fy3retdu().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_2fy3retdu().s[3]++;
_export(exports, {
  get clearAllAlerts() {
    /* istanbul ignore next */
    cov_2fy3retdu().f[1]++;
    cov_2fy3retdu().s[4]++;
    return clearAllAlerts;
  },
  get exportMonitoringData() {
    /* istanbul ignore next */
    cov_2fy3retdu().f[2]++;
    cov_2fy3retdu().s[5]++;
    return exportMonitoringData;
  },
  get getActiveAlerts() {
    /* istanbul ignore next */
    cov_2fy3retdu().f[3]++;
    cov_2fy3retdu().s[6]++;
    return getActiveAlerts;
  },
  get getComponentMetrics() {
    /* istanbul ignore next */
    cov_2fy3retdu().f[4]++;
    cov_2fy3retdu().s[7]++;
    return getComponentMetrics;
  },
  get useGlobalMonitoring() {
    /* istanbul ignore next */
    cov_2fy3retdu().f[5]++;
    cov_2fy3retdu().s[8]++;
    return useGlobalMonitoring;
  },
  get useRenderMonitoring() {
    /* istanbul ignore next */
    cov_2fy3retdu().f[6]++;
    cov_2fy3retdu().s[9]++;
    return useRenderMonitoring;
  },
  get withRenderMonitoring() {
    /* istanbul ignore next */
    cov_2fy3retdu().f[7]++;
    cov_2fy3retdu().s[10]++;
    return withRenderMonitoring;
  }
});
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_2fy3retdu().s[11]++, _interop_require_wildcard(require("react")));
const _usetoast =
/* istanbul ignore next */
(cov_2fy3retdu().s[12]++, require("../use-toast"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_2fy3retdu().f[8]++;
  cov_2fy3retdu().s[13]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_2fy3retdu().b[0][0]++;
    cov_2fy3retdu().s[14]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_2fy3retdu().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_2fy3retdu().s[15]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_2fy3retdu().s[16]++, new WeakMap());
  /* istanbul ignore next */
  cov_2fy3retdu().s[17]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_2fy3retdu().f[9]++;
    cov_2fy3retdu().s[18]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_2fy3retdu().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_2fy3retdu().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_2fy3retdu().f[10]++;
  cov_2fy3retdu().s[19]++;
  if (
  /* istanbul ignore next */
  (cov_2fy3retdu().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_2fy3retdu().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_2fy3retdu().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_2fy3retdu().b[2][0]++;
    cov_2fy3retdu().s[20]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_2fy3retdu().b[2][1]++;
  }
  cov_2fy3retdu().s[21]++;
  if (
  /* istanbul ignore next */
  (cov_2fy3retdu().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_2fy3retdu().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_2fy3retdu().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_2fy3retdu().b[4][0]++;
    cov_2fy3retdu().s[22]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_2fy3retdu().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_2fy3retdu().s[23]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_2fy3retdu().s[24]++;
  if (
  /* istanbul ignore next */
  (cov_2fy3retdu().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_2fy3retdu().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_2fy3retdu().b[6][0]++;
    cov_2fy3retdu().s[25]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_2fy3retdu().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_2fy3retdu().s[26]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_2fy3retdu().s[27]++,
  /* istanbul ignore next */
  (cov_2fy3retdu().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_2fy3retdu().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_2fy3retdu().s[28]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_2fy3retdu().s[29]++;
    if (
    /* istanbul ignore next */
    (cov_2fy3retdu().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_2fy3retdu().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_2fy3retdu().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_2fy3retdu().s[30]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_2fy3retdu().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_2fy3retdu().b[11][1]++, null));
      /* istanbul ignore next */
      cov_2fy3retdu().s[31]++;
      if (
      /* istanbul ignore next */
      (cov_2fy3retdu().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_2fy3retdu().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_2fy3retdu().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_2fy3retdu().b[12][0]++;
        cov_2fy3retdu().s[32]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_2fy3retdu().b[12][1]++;
        cov_2fy3retdu().s[33]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_2fy3retdu().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_2fy3retdu().s[34]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_2fy3retdu().s[35]++;
  if (cache) {
    /* istanbul ignore next */
    cov_2fy3retdu().b[14][0]++;
    cov_2fy3retdu().s[36]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_2fy3retdu().b[14][1]++;
  }
  cov_2fy3retdu().s[37]++;
  return newObj;
}
// ===================================
// CONFIGURACIÓN POR DEFECTO
// ===================================
const DEFAULT_THRESHOLDS =
/* istanbul ignore next */
(cov_2fy3retdu().s[38]++, {
  slowRenderThreshold: 16,
  maxRenderCount: 60,
  memoryThreshold: 100,
  errorThreshold: 5 // 5 errors per minute
});
const DEFAULT_OPTIONS =
/* istanbul ignore next */
(cov_2fy3retdu().s[39]++, {
  enabled: process.env.NODE_ENV === 'development',
  thresholds: DEFAULT_THRESHOLDS,
  enableToasts: true,
  enableConsoleLogging: true,
  enableLocalStorage: true,
  sampleRate: 1.0
});
// ===================================
// ALMACENAMIENTO GLOBAL
// ===================================
class MonitoringStore {
  static getInstance() {
    /* istanbul ignore next */
    cov_2fy3retdu().f[11]++;
    cov_2fy3retdu().s[40]++;
    if (!MonitoringStore.instance) {
      /* istanbul ignore next */
      cov_2fy3retdu().b[15][0]++;
      cov_2fy3retdu().s[41]++;
      MonitoringStore.instance = new MonitoringStore();
    } else
    /* istanbul ignore next */
    {
      cov_2fy3retdu().b[15][1]++;
    }
    cov_2fy3retdu().s[42]++;
    return MonitoringStore.instance;
  }
  addListener(listener) {
    /* istanbul ignore next */
    cov_2fy3retdu().f[12]++;
    cov_2fy3retdu().s[43]++;
    this.listeners.add(listener);
    /* istanbul ignore next */
    cov_2fy3retdu().s[44]++;
    return () => {
      /* istanbul ignore next */
      cov_2fy3retdu().f[13]++;
      cov_2fy3retdu().s[45]++;
      return this.listeners.delete(listener);
    };
  }
  notifyListeners() {
    /* istanbul ignore next */
    cov_2fy3retdu().f[14]++;
    cov_2fy3retdu().s[46]++;
    // Debounce para evitar loops infinitos
    if (this.notifyTimeout) {
      /* istanbul ignore next */
      cov_2fy3retdu().b[16][0]++;
      cov_2fy3retdu().s[47]++;
      clearTimeout(this.notifyTimeout);
    } else
    /* istanbul ignore next */
    {
      cov_2fy3retdu().b[16][1]++;
    }
    cov_2fy3retdu().s[48]++;
    this.notifyTimeout = setTimeout(() => {
      /* istanbul ignore next */
      cov_2fy3retdu().f[15]++;
      const state =
      /* istanbul ignore next */
      (cov_2fy3retdu().s[49]++, this.getState());
      /* istanbul ignore next */
      cov_2fy3retdu().s[50]++;
      this.listeners.forEach(listener => {
        /* istanbul ignore next */
        cov_2fy3retdu().f[16]++;
        cov_2fy3retdu().s[51]++;
        return listener(state);
      });
      /* istanbul ignore next */
      cov_2fy3retdu().s[52]++;
      this.notifyTimeout = null;
    }, 16); // 16ms = ~60fps
  }
  getState() {
    /* istanbul ignore next */
    cov_2fy3retdu().f[17]++;
    const totalRenders =
    /* istanbul ignore next */
    (cov_2fy3retdu().s[53]++, Array.from(this.metrics.values()).reduce((sum, metric) => {
      /* istanbul ignore next */
      cov_2fy3retdu().f[18]++;
      cov_2fy3retdu().s[54]++;
      return sum + metric.renderCount;
    }, 0));
    const averageRenderTime =
    /* istanbul ignore next */
    (cov_2fy3retdu().s[55]++, Array.from(this.metrics.values()).reduce((sum, metric, _, arr) => {
      /* istanbul ignore next */
      cov_2fy3retdu().f[19]++;
      cov_2fy3retdu().s[56]++;
      return sum + metric.averageRenderTime / arr.length;
    }, 0));
    /* istanbul ignore next */
    cov_2fy3retdu().s[57]++;
    return {
      isEnabled: true,
      metrics: new Map(this.metrics),
      alerts: [...this.alerts],
      globalStats: {
        totalComponents: this.metrics.size,
        totalRenders,
        averageRenderTime,
        activeAlerts: this.alerts.filter(alert => {
          /* istanbul ignore next */
          cov_2fy3retdu().f[20]++;
          cov_2fy3retdu().s[58]++;
          return !alert.resolved;
        }).length
      }
    };
  }
  updateMetrics(componentName, metrics) {
    /* istanbul ignore next */
    cov_2fy3retdu().f[21]++;
    const existing =
    /* istanbul ignore next */
    (cov_2fy3retdu().s[59]++, this.metrics.get(componentName));
    const updated =
    /* istanbul ignore next */
    (cov_2fy3retdu().s[60]++, {
      componentName,
      renderCount: 0,
      averageRenderTime: 0,
      lastRenderTime: 0,
      slowRenders: 0,
      errorCount: 0,
      timestamp: Date.now(),
      ...existing,
      ...metrics
    });
    /* istanbul ignore next */
    cov_2fy3retdu().s[61]++;
    this.metrics.set(componentName, updated);
    /* istanbul ignore next */
    cov_2fy3retdu().s[62]++;
    this.notifyListeners();
  }
  addAlert(alert) {
    /* istanbul ignore next */
    cov_2fy3retdu().f[22]++;
    const newAlert =
    /* istanbul ignore next */
    (cov_2fy3retdu().s[63]++, {
      ...alert,
      id: `alert-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,
      timestamp: Date.now(),
      resolved: false
    });
    /* istanbul ignore next */
    cov_2fy3retdu().s[64]++;
    this.alerts.unshift(newAlert);
    // Mantener solo las últimas 100 alertas
    /* istanbul ignore next */
    cov_2fy3retdu().s[65]++;
    if (this.alerts.length > 100) {
      /* istanbul ignore next */
      cov_2fy3retdu().b[17][0]++;
      cov_2fy3retdu().s[66]++;
      this.alerts = this.alerts.slice(0, 100);
    } else
    /* istanbul ignore next */
    {
      cov_2fy3retdu().b[17][1]++;
    }
    cov_2fy3retdu().s[67]++;
    this.notifyListeners();
  }
  resolveAlert(alertId) {
    /* istanbul ignore next */
    cov_2fy3retdu().f[23]++;
    const alert =
    /* istanbul ignore next */
    (cov_2fy3retdu().s[68]++, this.alerts.find(a => {
      /* istanbul ignore next */
      cov_2fy3retdu().f[24]++;
      cov_2fy3retdu().s[69]++;
      return a.id === alertId;
    }));
    /* istanbul ignore next */
    cov_2fy3retdu().s[70]++;
    if (alert) {
      /* istanbul ignore next */
      cov_2fy3retdu().b[18][0]++;
      cov_2fy3retdu().s[71]++;
      alert.resolved = true;
      /* istanbul ignore next */
      cov_2fy3retdu().s[72]++;
      this.notifyListeners();
    } else
    /* istanbul ignore next */
    {
      cov_2fy3retdu().b[18][1]++;
    }
  }
  clearAlerts() {
    /* istanbul ignore next */
    cov_2fy3retdu().f[25]++;
    cov_2fy3retdu().s[73]++;
    this.alerts = [];
    /* istanbul ignore next */
    cov_2fy3retdu().s[74]++;
    this.notifyListeners();
  }
  exportData() {
    /* istanbul ignore next */
    cov_2fy3retdu().f[26]++;
    cov_2fy3retdu().s[75]++;
    return JSON.stringify({
      metrics: Array.from(this.metrics.entries()),
      alerts: this.alerts,
      timestamp: Date.now()
    }, null, 2);
  }
  constructor() {
    /* istanbul ignore next */
    cov_2fy3retdu().f[27]++;
    cov_2fy3retdu().s[76]++;
    this.metrics = new Map();
    /* istanbul ignore next */
    cov_2fy3retdu().s[77]++;
    this.alerts = [];
    /* istanbul ignore next */
    cov_2fy3retdu().s[78]++;
    this.listeners = new Set();
    /* istanbul ignore next */
    cov_2fy3retdu().s[79]++;
    this.notifyTimeout = null;
  }
}
const monitoringStore =
/* istanbul ignore next */
(cov_2fy3retdu().s[80]++, MonitoringStore.getInstance());
// ===================================
// UTILIDADES DE PERFORMANCE
// ===================================
function measureRenderTime(fn) {
  /* istanbul ignore next */
  cov_2fy3retdu().f[28]++;
  const start =
  /* istanbul ignore next */
  (cov_2fy3retdu().s[81]++, performance.now());
  const result =
  /* istanbul ignore next */
  (cov_2fy3retdu().s[82]++, fn());
  const duration =
  /* istanbul ignore next */
  (cov_2fy3retdu().s[83]++, performance.now() - start);
  /* istanbul ignore next */
  cov_2fy3retdu().s[84]++;
  return {
    result,
    duration
  };
}
function getMemoryUsage() {
  /* istanbul ignore next */
  cov_2fy3retdu().f[29]++;
  cov_2fy3retdu().s[85]++;
  if ('memory' in performance) {
    /* istanbul ignore next */
    cov_2fy3retdu().b[19][0]++;
    cov_2fy3retdu().s[86]++;
    return performance.memory.usedJSHeapSize / 1024 / 1024; // MB
  } else
  /* istanbul ignore next */
  {
    cov_2fy3retdu().b[19][1]++;
  }
  cov_2fy3retdu().s[87]++;
  return 0;
}
function shouldSample(sampleRate) {
  /* istanbul ignore next */
  cov_2fy3retdu().f[30]++;
  cov_2fy3retdu().s[88]++;
  return Math.random() < sampleRate;
}
function useRenderMonitoring(options) {
  /* istanbul ignore next */
  cov_2fy3retdu().f[31]++;
  const opts =
  /* istanbul ignore next */
  (cov_2fy3retdu().s[89]++, {
    ...DEFAULT_OPTIONS,
    ...options
  });
  const {
    toast
  } =
  /* istanbul ignore next */
  (cov_2fy3retdu().s[90]++, (0, _usetoast.useToast)());
  // Referencias para tracking
  const renderCountRef =
  /* istanbul ignore next */
  (cov_2fy3retdu().s[91]++, (0, _react.useRef)(0));
  const renderTimesRef =
  /* istanbul ignore next */
  (cov_2fy3retdu().s[92]++, (0, _react.useRef)([]));
  const lastRenderTimeRef =
  /* istanbul ignore next */
  (cov_2fy3retdu().s[93]++, (0, _react.useRef)(0));
  const slowRendersRef =
  /* istanbul ignore next */
  (cov_2fy3retdu().s[94]++, (0, _react.useRef)(0));
  const errorCountRef =
  /* istanbul ignore next */
  (cov_2fy3retdu().s[95]++, (0, _react.useRef)(0));
  const mountTimeRef =
  /* istanbul ignore next */
  (cov_2fy3retdu().s[96]++, (0, _react.useRef)(Date.now()));
  // Estado local
  const [monitoringState, setMonitoringState] =
  /* istanbul ignore next */
  (cov_2fy3retdu().s[97]++, (0, _react.useState)(monitoringStore.getState()));
  // ===================================
  // FUNCIONES DE ANÁLISIS
  // ===================================
  const analyzePerformance =
  /* istanbul ignore next */
  (cov_2fy3retdu().s[98]++, (0, _react.useCallback)(renderTime => {
    /* istanbul ignore next */
    cov_2fy3retdu().f[32]++;
    const {
      componentName,
      thresholds
    } =
    /* istanbul ignore next */
    (cov_2fy3retdu().s[99]++, opts);
    // Detectar render lento
    /* istanbul ignore next */
    cov_2fy3retdu().s[100]++;
    if (renderTime > thresholds.slowRenderThreshold) {
      /* istanbul ignore next */
      cov_2fy3retdu().b[20][0]++;
      cov_2fy3retdu().s[101]++;
      slowRendersRef.current++;
      /* istanbul ignore next */
      cov_2fy3retdu().s[102]++;
      monitoringStore.addAlert({
        type: 'performance',
        severity: renderTime > thresholds.slowRenderThreshold * 2 ?
        /* istanbul ignore next */
        (cov_2fy3retdu().b[21][0]++, 'high') :
        /* istanbul ignore next */
        (cov_2fy3retdu().b[21][1]++, 'medium'),
        message: `Render lento detectado: ${renderTime.toFixed(2)}ms (umbral: ${thresholds.slowRenderThreshold}ms)`,
        componentName,
        metrics: {
          lastRenderTime: renderTime
        }
      });
      /* istanbul ignore next */
      cov_2fy3retdu().s[103]++;
      if (opts.enableConsoleLogging) {
        /* istanbul ignore next */
        cov_2fy3retdu().b[22][0]++;
        cov_2fy3retdu().s[104]++;
        console.warn(`[RenderMonitoring] Slow render in ${componentName}: ${renderTime.toFixed(2)}ms`);
      } else
      /* istanbul ignore next */
      {
        cov_2fy3retdu().b[22][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_2fy3retdu().b[20][1]++;
    }
    // Detectar posible render loop
    const now =
    /* istanbul ignore next */
    (cov_2fy3retdu().s[105]++, Date.now());
    const oneMinuteAgo =
    /* istanbul ignore next */
    (cov_2fy3retdu().s[106]++, now - 60000);
    const recentRenders =
    /* istanbul ignore next */
    (cov_2fy3retdu().s[107]++, renderTimesRef.current.filter(time => {
      /* istanbul ignore next */
      cov_2fy3retdu().f[33]++;
      cov_2fy3retdu().s[108]++;
      return time > oneMinuteAgo;
    }).length);
    /* istanbul ignore next */
    cov_2fy3retdu().s[109]++;
    if (recentRenders > thresholds.maxRenderCount) {
      /* istanbul ignore next */
      cov_2fy3retdu().b[23][0]++;
      cov_2fy3retdu().s[110]++;
      monitoringStore.addAlert({
        type: 'render-loop',
        severity: 'critical',
        message: `Posible render loop: ${recentRenders} renders en el último minuto (máximo: ${thresholds.maxRenderCount})`,
        componentName,
        metrics: {
          renderCount: recentRenders
        }
      });
      /* istanbul ignore next */
      cov_2fy3retdu().s[111]++;
      if (opts.enableToasts) {
        /* istanbul ignore next */
        cov_2fy3retdu().b[24][0]++;
        cov_2fy3retdu().s[112]++;
        toast({
          title: 'Render Loop Detectado',
          description: `${componentName}: ${recentRenders} renders/min`,
          variant: 'destructive'
        });
      } else
      /* istanbul ignore next */
      {
        cov_2fy3retdu().b[24][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_2fy3retdu().b[23][1]++;
    }
    // Detectar uso excesivo de memoria
    const memoryUsage =
    /* istanbul ignore next */
    (cov_2fy3retdu().s[113]++, getMemoryUsage());
    /* istanbul ignore next */
    cov_2fy3retdu().s[114]++;
    if (memoryUsage > thresholds.memoryThreshold) {
      /* istanbul ignore next */
      cov_2fy3retdu().b[25][0]++;
      cov_2fy3retdu().s[115]++;
      monitoringStore.addAlert({
        type: 'memory',
        severity: 'high',
        message: `Uso de memoria elevado: ${memoryUsage.toFixed(2)}MB (umbral: ${thresholds.memoryThreshold}MB)`,
        componentName,
        metrics: {
          memoryUsage
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_2fy3retdu().b[25][1]++;
    }
  }, [opts, toast]));
  // ===================================
  // FUNCIÓN DE TRACKING DE RENDER
  // ===================================
  const trackRender =
  /* istanbul ignore next */
  (cov_2fy3retdu().s[116]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_2fy3retdu().f[34]++;
    cov_2fy3retdu().s[117]++;
    if (
    /* istanbul ignore next */
    (cov_2fy3retdu().b[27][0]++, !opts.enabled) ||
    /* istanbul ignore next */
    (cov_2fy3retdu().b[27][1]++, !shouldSample(opts.sampleRate))) {
      /* istanbul ignore next */
      cov_2fy3retdu().b[26][0]++;
      cov_2fy3retdu().s[118]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2fy3retdu().b[26][1]++;
    }
    const renderTime =
    /* istanbul ignore next */
    (cov_2fy3retdu().s[119]++, performance.now() - lastRenderTimeRef.current);
    /* istanbul ignore next */
    cov_2fy3retdu().s[120]++;
    renderCountRef.current++;
    /* istanbul ignore next */
    cov_2fy3retdu().s[121]++;
    renderTimesRef.current.push(Date.now());
    // Mantener solo los últimos 100 renders
    /* istanbul ignore next */
    cov_2fy3retdu().s[122]++;
    if (renderTimesRef.current.length > 100) {
      /* istanbul ignore next */
      cov_2fy3retdu().b[28][0]++;
      cov_2fy3retdu().s[123]++;
      renderTimesRef.current = renderTimesRef.current.slice(-100);
    } else
    /* istanbul ignore next */
    {
      cov_2fy3retdu().b[28][1]++;
    }
    // Calcular promedio de tiempo de render
    const recentTimes =
    /* istanbul ignore next */
    (cov_2fy3retdu().s[124]++, renderTimesRef.current.slice(-10)); // Últimos 10 renders
    const averageRenderTime =
    /* istanbul ignore next */
    (cov_2fy3retdu().s[125]++, recentTimes.reduce((sum, time, i, arr) => {
      /* istanbul ignore next */
      cov_2fy3retdu().f[35]++;
      cov_2fy3retdu().s[126]++;
      if (i === 0) {
        /* istanbul ignore next */
        cov_2fy3retdu().b[29][0]++;
        cov_2fy3retdu().s[127]++;
        return 0;
      } else
      /* istanbul ignore next */
      {
        cov_2fy3retdu().b[29][1]++;
      }
      cov_2fy3retdu().s[128]++;
      return sum + (time - arr[i - 1]) / (arr.length - 1);
    }, 0));
    // Actualizar métricas
    const metrics =
    /* istanbul ignore next */
    (cov_2fy3retdu().s[129]++, {
      renderCount: renderCountRef.current,
      averageRenderTime,
      lastRenderTime: renderTime,
      slowRenders: slowRendersRef.current,
      errorCount: errorCountRef.current,
      memoryUsage: getMemoryUsage(),
      timestamp: Date.now()
    });
    /* istanbul ignore next */
    cov_2fy3retdu().s[130]++;
    monitoringStore.updateMetrics(opts.componentName, metrics);
    // Analizar performance
    /* istanbul ignore next */
    cov_2fy3retdu().s[131]++;
    analyzePerformance(renderTime);
    // Guardar en localStorage si está habilitado
    /* istanbul ignore next */
    cov_2fy3retdu().s[132]++;
    if (opts.enableLocalStorage) {
      /* istanbul ignore next */
      cov_2fy3retdu().b[30][0]++;
      cov_2fy3retdu().s[133]++;
      try {
        /* istanbul ignore next */
        cov_2fy3retdu().s[134]++;
        localStorage.setItem(`render-monitoring-${opts.componentName}`, JSON.stringify(metrics));
      } catch (error) {
        // Ignorar errores de localStorage
      }
    } else
    /* istanbul ignore next */
    {
      cov_2fy3retdu().b[30][1]++;
    }
    cov_2fy3retdu().s[135]++;
    lastRenderTimeRef.current = performance.now();
  }, [opts, analyzePerformance]));
  // ===================================
  // FUNCIÓN DE TRACKING DE ERRORES
  // ===================================
  const trackError =
  /* istanbul ignore next */
  (cov_2fy3retdu().s[136]++, (0, _react.useCallback)((error, errorInfo) => {
    /* istanbul ignore next */
    cov_2fy3retdu().f[36]++;
    cov_2fy3retdu().s[137]++;
    if (!opts.enabled) {
      /* istanbul ignore next */
      cov_2fy3retdu().b[31][0]++;
      cov_2fy3retdu().s[138]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2fy3retdu().b[31][1]++;
    }
    cov_2fy3retdu().s[139]++;
    errorCountRef.current++;
    /* istanbul ignore next */
    cov_2fy3retdu().s[140]++;
    monitoringStore.addAlert({
      type: 'error',
      severity: 'high',
      message: `Error en componente: ${error.message}`,
      componentName: opts.componentName,
      metrics: {
        errorCount: errorCountRef.current
      }
    });
    /* istanbul ignore next */
    cov_2fy3retdu().s[141]++;
    if (opts.enableConsoleLogging) {
      /* istanbul ignore next */
      cov_2fy3retdu().b[32][0]++;
      cov_2fy3retdu().s[142]++;
      console.error(`[RenderMonitoring] Error in ${opts.componentName}:`, error, errorInfo);
    } else
    /* istanbul ignore next */
    {
      cov_2fy3retdu().b[32][1]++;
    }
    cov_2fy3retdu().s[143]++;
    if (opts.enableToasts) {
      /* istanbul ignore next */
      cov_2fy3retdu().b[33][0]++;
      cov_2fy3retdu().s[144]++;
      toast({
        title: 'Error de Componente',
        description: `${opts.componentName}: ${error.message}`,
        variant: 'destructive'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2fy3retdu().b[33][1]++;
    }
  }, [opts, toast]));
  // ===================================
  // EFECTOS
  // ===================================
  // Suscribirse a cambios del store
  /* istanbul ignore next */
  cov_2fy3retdu().s[145]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_2fy3retdu().f[37]++;
    const unsubscribe =
    /* istanbul ignore next */
    (cov_2fy3retdu().s[146]++, monitoringStore.addListener(setMonitoringState));
    /* istanbul ignore next */
    cov_2fy3retdu().s[147]++;
    return unsubscribe;
  }, []);
  // Track render en cada render del componente
  /* istanbul ignore next */
  cov_2fy3retdu().s[148]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_2fy3retdu().f[38]++;
    cov_2fy3retdu().s[149]++;
    trackRender();
  });
  // Cleanup al desmontar
  /* istanbul ignore next */
  cov_2fy3retdu().s[150]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_2fy3retdu().f[39]++;
    cov_2fy3retdu().s[151]++;
    return () => {
      /* istanbul ignore next */
      cov_2fy3retdu().f[40]++;
      cov_2fy3retdu().s[152]++;
      if (opts.enableConsoleLogging) {
        /* istanbul ignore next */
        cov_2fy3retdu().b[34][0]++;
        const totalTime =
        /* istanbul ignore next */
        (cov_2fy3retdu().s[153]++, Date.now() - mountTimeRef.current);
        /* istanbul ignore next */
        cov_2fy3retdu().s[154]++;
        console.log(`[RenderMonitoring] ${opts.componentName} unmounted after ${totalTime}ms, ` + `${renderCountRef.current} renders, ` + `${slowRendersRef.current} slow renders, ` + `${errorCountRef.current} errors`);
      } else
      /* istanbul ignore next */
      {
        cov_2fy3retdu().b[34][1]++;
      }
    };
  }, [opts]);
  // ===================================
  // API PÚBLICA
  // ===================================
  /* istanbul ignore next */
  cov_2fy3retdu().s[155]++;
  return {
    // Estado
    isEnabled: opts.enabled,
    metrics: monitoringState.metrics.get(opts.componentName),
    globalStats: monitoringState.globalStats,
    alerts: monitoringState.alerts.filter(alert => {
      /* istanbul ignore next */
      cov_2fy3retdu().f[41]++;
      cov_2fy3retdu().s[156]++;
      return alert.componentName === opts.componentName;
    }),
    // Funciones
    trackError,
    trackRender,
    // Utilidades
    exportData: () => {
      /* istanbul ignore next */
      cov_2fy3retdu().f[42]++;
      cov_2fy3retdu().s[157]++;
      return monitoringStore.exportData();
    },
    clearAlerts: () => {
      /* istanbul ignore next */
      cov_2fy3retdu().f[43]++;
      cov_2fy3retdu().s[158]++;
      return monitoringStore.clearAlerts();
    },
    resolveAlert: alertId => {
      /* istanbul ignore next */
      cov_2fy3retdu().f[44]++;
      cov_2fy3retdu().s[159]++;
      return monitoringStore.resolveAlert(alertId);
    }
  };
}
function useGlobalMonitoring() {
  /* istanbul ignore next */
  cov_2fy3retdu().f[45]++;
  const [state, setState] =
  /* istanbul ignore next */
  (cov_2fy3retdu().s[160]++, (0, _react.useState)(monitoringStore.getState()));
  /* istanbul ignore next */
  cov_2fy3retdu().s[161]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_2fy3retdu().f[46]++;
    const unsubscribe =
    /* istanbul ignore next */
    (cov_2fy3retdu().s[162]++, monitoringStore.addListener(setState));
    /* istanbul ignore next */
    cov_2fy3retdu().s[163]++;
    return unsubscribe;
  }, []);
  /* istanbul ignore next */
  cov_2fy3retdu().s[164]++;
  return {
    ...state,
    exportData: () => {
      /* istanbul ignore next */
      cov_2fy3retdu().f[47]++;
      cov_2fy3retdu().s[165]++;
      return monitoringStore.exportData();
    },
    clearAlerts: () => {
      /* istanbul ignore next */
      cov_2fy3retdu().f[48]++;
      cov_2fy3retdu().s[166]++;
      return monitoringStore.clearAlerts();
    },
    resolveAlert: alertId => {
      /* istanbul ignore next */
      cov_2fy3retdu().f[49]++;
      cov_2fy3retdu().s[167]++;
      return monitoringStore.resolveAlert(alertId);
    }
  };
}
function withRenderMonitoring(Component, options) {
  /* istanbul ignore next */
  cov_2fy3retdu().f[50]++;
  const componentName =
  /* istanbul ignore next */
  (cov_2fy3retdu().s[168]++,
  /* istanbul ignore next */
  (cov_2fy3retdu().b[35][0]++, Component.displayName) ||
  /* istanbul ignore next */
  (cov_2fy3retdu().b[35][1]++, Component.name) ||
  /* istanbul ignore next */
  (cov_2fy3retdu().b[35][2]++, 'UnknownComponent'));
  /* istanbul ignore next */
  cov_2fy3retdu().s[169]++;
  const WrappedComponent = props => {
    /* istanbul ignore next */
    cov_2fy3retdu().f[51]++;
    const {
      trackError
    } =
    /* istanbul ignore next */
    (cov_2fy3retdu().s[170]++, useRenderMonitoring({
      ...options,
      componentName
    }));
    // Error boundary simple
    /* istanbul ignore next */
    cov_2fy3retdu().s[171]++;
    (0, _react.useEffect)(() => {
      /* istanbul ignore next */
      cov_2fy3retdu().f[52]++;
      cov_2fy3retdu().s[172]++;
      const handleError = event => {
        /* istanbul ignore next */
        cov_2fy3retdu().f[53]++;
        cov_2fy3retdu().s[173]++;
        trackError(new Error(event.message));
      };
      /* istanbul ignore next */
      cov_2fy3retdu().s[174]++;
      window.addEventListener('error', handleError);
      /* istanbul ignore next */
      cov_2fy3retdu().s[175]++;
      return () => {
        /* istanbul ignore next */
        cov_2fy3retdu().f[54]++;
        cov_2fy3retdu().s[176]++;
        return window.removeEventListener('error', handleError);
      };
    }, [trackError]);
    /* istanbul ignore next */
    cov_2fy3retdu().s[177]++;
    return _react.default.createElement(Component, props);
  };
  /* istanbul ignore next */
  cov_2fy3retdu().s[178]++;
  WrappedComponent.displayName = `withRenderMonitoring(${componentName})`;
  /* istanbul ignore next */
  cov_2fy3retdu().s[179]++;
  return WrappedComponent;
}
function getComponentMetrics(componentName) {
  /* istanbul ignore next */
  cov_2fy3retdu().f[55]++;
  cov_2fy3retdu().s[180]++;
  return monitoringStore.getState().metrics.get(componentName);
}
function getActiveAlerts() {
  /* istanbul ignore next */
  cov_2fy3retdu().f[56]++;
  cov_2fy3retdu().s[181]++;
  return monitoringStore.getState().alerts.filter(alert => {
    /* istanbul ignore next */
    cov_2fy3retdu().f[57]++;
    cov_2fy3retdu().s[182]++;
    return !alert.resolved;
  });
}
function exportMonitoringData() {
  /* istanbul ignore next */
  cov_2fy3retdu().f[58]++;
  cov_2fy3retdu().s[183]++;
  return monitoringStore.exportData();
}
function clearAllAlerts() {
  /* istanbul ignore next */
  cov_2fy3retdu().f[59]++;
  cov_2fy3retdu().s[184]++;
  monitoringStore.clearAlerts();
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,