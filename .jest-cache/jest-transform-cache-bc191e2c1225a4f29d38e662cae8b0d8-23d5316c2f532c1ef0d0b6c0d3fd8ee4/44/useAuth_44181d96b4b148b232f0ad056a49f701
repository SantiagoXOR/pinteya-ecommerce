07756024b885d896f49ef4abd4816f21
/**
 * Hook de Autenticaci칩n para NextAuth.js
 * Reemplaza los hooks de Clerk con NextAuth.js
 */ 'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: Object.getOwnPropertyDescriptor(all, name).get
    });
}
_export(exports, {
    get useAuth () {
        return useAuth;
    },
    get useIsAdmin () {
        return useIsAdmin;
    },
    get useRequireAuth () {
        return useRequireAuth;
    }
});
const _react = require("next-auth/react");
const _navigation = require("next/navigation");
function useAuth() {
    const { data: session, status } = (0, _react.useSession)();
    const router = (0, _navigation.useRouter)();
    const handleSignIn = useCallback(async (provider = 'google', options)=>{
        try {
            await (0, _react.signIn)(provider, {
                callbackUrl: options?.callbackUrl || '/admin',
                redirect: true
            });
        } catch (error) {
            console.error('Error al iniciar sesi칩n:', error);
        }
    }, []);
    const handleSignOut = useCallback(async (options)=>{
        try {
            await (0, _react.signOut)({
                callbackUrl: options?.callbackUrl || '/',
                redirect: true
            });
        } catch (error) {
            console.error('Error al cerrar sesi칩n:', error);
        }
    }, []);
    // Mapear usuario de NextAuth a nuestro formato
    const user = session?.user ? {
        id: session.user.id || session.user.email || '',
        name: session.user.name,
        email: session.user.email,
        image: session.user.image
    } : null;
    return {
        user,
        isLoaded: status !== 'loading',
        isSignedIn: status === 'authenticated',
        signIn: handleSignIn,
        signOut: handleSignOut,
        session,
        status
    };
}
function useIsAdmin() {
    const { user, isSignedIn } = useAuth();
    // Por ahora, todos los usuarios autenticados son admin
    // TODO: Implementar sistema de roles m치s granular
    return isSignedIn && !!user;
}
function useRequireAuth(redirectTo = '/api/auth/signin') {
    const { isSignedIn, isLoaded } = useAuth();
    const router = (0, _navigation.useRouter)();
    if (isLoaded && !isSignedIn) {
        router.push(redirectTo);
    }
    return {
        isSignedIn,
        isLoaded
    };
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbWFydGlcXERlc2t0b3BcXERFU0FSUk9MTE9TV1xcQk9JTEVSUExBVFRFIEUtQ09NTUVSQ0VcXHNyY1xcaG9va3NcXHVzZUF1dGgudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBIb29rIGRlIEF1dGVudGljYWNpw7NuIHBhcmEgTmV4dEF1dGguanNcbiAqIFJlZW1wbGF6YSBsb3MgaG9va3MgZGUgQ2xlcmsgY29uIE5leHRBdXRoLmpzXG4gKi9cblxuJ3VzZSBjbGllbnQnXG5cbmltcG9ydCB7IHVzZVNlc3Npb24sIHNpZ25Jbiwgc2lnbk91dCB9IGZyb20gJ25leHQtYXV0aC9yZWFjdCdcbmltcG9ydCB7IHVzZVJvdXRlciB9IGZyb20gJ25leHQvbmF2aWdhdGlvbidcbmltcG9ydCB7IHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgVXNlQXV0aFJldHVybiwgQXV0aFVzZXIgfSBmcm9tICdAL3R5cGVzL2hvb2tzJ1xuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gSU5URVJGQUNFU1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIEludGVyZmFjZXMgbW92aWRhcyBhIEAvdHlwZXMvaG9va3MgcGFyYSByZXV0aWxpemFjacOzblxuXG5leHBvcnQgZnVuY3Rpb24gdXNlQXV0aCgpOiBVc2VBdXRoUmV0dXJuIHtcbiAgY29uc3QgeyBkYXRhOiBzZXNzaW9uLCBzdGF0dXMgfSA9IHVzZVNlc3Npb24oKVxuICBjb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKVxuXG4gIGNvbnN0IGhhbmRsZVNpZ25JbiA9IHVzZUNhbGxiYWNrKFxuICAgIGFzeW5jIChwcm92aWRlcjogc3RyaW5nID0gJ2dvb2dsZScsIG9wdGlvbnM/OiB7IGNhbGxiYWNrVXJsPzogc3RyaW5nIH0pID0+IHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGF3YWl0IHNpZ25Jbihwcm92aWRlciwge1xuICAgICAgICAgIGNhbGxiYWNrVXJsOiBvcHRpb25zPy5jYWxsYmFja1VybCB8fCAnL2FkbWluJyxcbiAgICAgICAgICByZWRpcmVjdDogdHJ1ZSxcbiAgICAgICAgfSlcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGFsIGluaWNpYXIgc2VzacOzbjonLCBlcnJvcilcbiAgICAgIH1cbiAgICB9LFxuICAgIFtdXG4gIClcblxuICBjb25zdCBoYW5kbGVTaWduT3V0ID0gdXNlQ2FsbGJhY2soYXN5bmMgKG9wdGlvbnM/OiB7IGNhbGxiYWNrVXJsPzogc3RyaW5nIH0pID0+IHtcbiAgICB0cnkge1xuICAgICAgYXdhaXQgc2lnbk91dCh7XG4gICAgICAgIGNhbGxiYWNrVXJsOiBvcHRpb25zPy5jYWxsYmFja1VybCB8fCAnLycsXG4gICAgICAgIHJlZGlyZWN0OiB0cnVlLFxuICAgICAgfSlcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgYWwgY2VycmFyIHNlc2nDs246JywgZXJyb3IpXG4gICAgfVxuICB9LCBbXSlcblxuICAvLyBNYXBlYXIgdXN1YXJpbyBkZSBOZXh0QXV0aCBhIG51ZXN0cm8gZm9ybWF0b1xuICBjb25zdCB1c2VyOiBBdXRoVXNlciB8IG51bGwgPSBzZXNzaW9uPy51c2VyXG4gICAgPyB7XG4gICAgICAgIGlkOiBzZXNzaW9uLnVzZXIuaWQgfHwgc2Vzc2lvbi51c2VyLmVtYWlsIHx8ICcnLFxuICAgICAgICBuYW1lOiBzZXNzaW9uLnVzZXIubmFtZSxcbiAgICAgICAgZW1haWw6IHNlc3Npb24udXNlci5lbWFpbCxcbiAgICAgICAgaW1hZ2U6IHNlc3Npb24udXNlci5pbWFnZSxcbiAgICAgIH1cbiAgICA6IG51bGxcblxuICByZXR1cm4ge1xuICAgIHVzZXIsXG4gICAgaXNMb2FkZWQ6IHN0YXR1cyAhPT0gJ2xvYWRpbmcnLFxuICAgIGlzU2lnbmVkSW46IHN0YXR1cyA9PT0gJ2F1dGhlbnRpY2F0ZWQnLFxuICAgIHNpZ25JbjogaGFuZGxlU2lnbkluLFxuICAgIHNpZ25PdXQ6IGhhbmRsZVNpZ25PdXQsXG4gICAgc2Vzc2lvbixcbiAgICBzdGF0dXMsXG4gIH1cbn1cblxuLy8gSG9vayBwYXJhIHZlcmlmaWNhciBzaSBlbCB1c3VhcmlvIGVzIGFkbWluaXN0cmFkb3JcbmV4cG9ydCBmdW5jdGlvbiB1c2VJc0FkbWluKCk6IGJvb2xlYW4ge1xuICBjb25zdCB7IHVzZXIsIGlzU2lnbmVkSW4gfSA9IHVzZUF1dGgoKVxuXG4gIC8vIFBvciBhaG9yYSwgdG9kb3MgbG9zIHVzdWFyaW9zIGF1dGVudGljYWRvcyBzb24gYWRtaW5cbiAgLy8gVE9ETzogSW1wbGVtZW50YXIgc2lzdGVtYSBkZSByb2xlcyBtw6FzIGdyYW51bGFyXG4gIHJldHVybiBpc1NpZ25lZEluICYmICEhdXNlclxufVxuXG4vLyBIb29rIHBhcmEgcHJvdGVnZXIgcnV0YXNcbmV4cG9ydCBmdW5jdGlvbiB1c2VSZXF1aXJlQXV0aChyZWRpcmVjdFRvOiBzdHJpbmcgPSAnL2FwaS9hdXRoL3NpZ25pbicpIHtcbiAgY29uc3QgeyBpc1NpZ25lZEluLCBpc0xvYWRlZCB9ID0gdXNlQXV0aCgpXG4gIGNvbnN0IHJvdXRlciA9IHVzZVJvdXRlcigpXG5cbiAgaWYgKGlzTG9hZGVkICYmICFpc1NpZ25lZEluKSB7XG4gICAgcm91dGVyLnB1c2gocmVkaXJlY3RUbylcbiAgfVxuXG4gIHJldHVybiB7IGlzU2lnbmVkSW4sIGlzTG9hZGVkIH1cbn1cbiJdLCJuYW1lcyI6WyJ1c2VBdXRoIiwidXNlSXNBZG1pbiIsInVzZVJlcXVpcmVBdXRoIiwiZGF0YSIsInNlc3Npb24iLCJzdGF0dXMiLCJ1c2VTZXNzaW9uIiwicm91dGVyIiwidXNlUm91dGVyIiwiaGFuZGxlU2lnbkluIiwidXNlQ2FsbGJhY2siLCJwcm92aWRlciIsIm9wdGlvbnMiLCJzaWduSW4iLCJjYWxsYmFja1VybCIsInJlZGlyZWN0IiwiZXJyb3IiLCJjb25zb2xlIiwiaGFuZGxlU2lnbk91dCIsInNpZ25PdXQiLCJ1c2VyIiwiaWQiLCJlbWFpbCIsIm5hbWUiLCJpbWFnZSIsImlzTG9hZGVkIiwiaXNTaWduZWRJbiIsInJlZGlyZWN0VG8iLCJwdXNoIl0sIm1hcHBpbmdzIjoiQUFBQTs7O0NBR0MsR0FFRDs7Ozs7Ozs7Ozs7O1FBWWdCQTtlQUFBQTs7UUFtREFDO2VBQUFBOztRQVNBQztlQUFBQTs7O3VCQXRFNEI7NEJBQ2xCO0FBU25CLFNBQVNGO0lBQ2QsTUFBTSxFQUFFRyxNQUFNQyxPQUFPLEVBQUVDLE1BQU0sRUFBRSxHQUFHQyxJQUFBQSxpQkFBVTtJQUM1QyxNQUFNQyxTQUFTQyxJQUFBQSxxQkFBUztJQUV4QixNQUFNQyxlQUFlQyxZQUNuQixPQUFPQyxXQUFtQixRQUFRLEVBQUVDO1FBQ2xDLElBQUk7WUFDRixNQUFNQyxJQUFBQSxhQUFNLEVBQUNGLFVBQVU7Z0JBQ3JCRyxhQUFhRixTQUFTRSxlQUFlO2dCQUNyQ0MsVUFBVTtZQUNaO1FBQ0YsRUFBRSxPQUFPQyxPQUFPO1lBQ2RDLFFBQVFELEtBQUssQ0FBQyw0QkFBNEJBO1FBQzVDO0lBQ0YsR0FDQSxFQUFFO0lBR0osTUFBTUUsZ0JBQWdCUixZQUFZLE9BQU9FO1FBQ3ZDLElBQUk7WUFDRixNQUFNTyxJQUFBQSxjQUFPLEVBQUM7Z0JBQ1pMLGFBQWFGLFNBQVNFLGVBQWU7Z0JBQ3JDQyxVQUFVO1lBQ1o7UUFDRixFQUFFLE9BQU9DLE9BQU87WUFDZEMsUUFBUUQsS0FBSyxDQUFDLDJCQUEyQkE7UUFDM0M7SUFDRixHQUFHLEVBQUU7SUFFTCwrQ0FBK0M7SUFDL0MsTUFBTUksT0FBd0JoQixTQUFTZ0IsT0FDbkM7UUFDRUMsSUFBSWpCLFFBQVFnQixJQUFJLENBQUNDLEVBQUUsSUFBSWpCLFFBQVFnQixJQUFJLENBQUNFLEtBQUssSUFBSTtRQUM3Q0MsTUFBTW5CLFFBQVFnQixJQUFJLENBQUNHLElBQUk7UUFDdkJELE9BQU9sQixRQUFRZ0IsSUFBSSxDQUFDRSxLQUFLO1FBQ3pCRSxPQUFPcEIsUUFBUWdCLElBQUksQ0FBQ0ksS0FBSztJQUMzQixJQUNBO0lBRUosT0FBTztRQUNMSjtRQUNBSyxVQUFVcEIsV0FBVztRQUNyQnFCLFlBQVlyQixXQUFXO1FBQ3ZCUSxRQUFRSjtRQUNSVSxTQUFTRDtRQUNUZDtRQUNBQztJQUNGO0FBQ0Y7QUFHTyxTQUFTSjtJQUNkLE1BQU0sRUFBRW1CLElBQUksRUFBRU0sVUFBVSxFQUFFLEdBQUcxQjtJQUU3Qix1REFBdUQ7SUFDdkQsa0RBQWtEO0lBQ2xELE9BQU8wQixjQUFjLENBQUMsQ0FBQ047QUFDekI7QUFHTyxTQUFTbEIsZUFBZXlCLGFBQXFCLGtCQUFrQjtJQUNwRSxNQUFNLEVBQUVELFVBQVUsRUFBRUQsUUFBUSxFQUFFLEdBQUd6QjtJQUNqQyxNQUFNTyxTQUFTQyxJQUFBQSxxQkFBUztJQUV4QixJQUFJaUIsWUFBWSxDQUFDQyxZQUFZO1FBQzNCbkIsT0FBT3FCLElBQUksQ0FBQ0Q7SUFDZDtJQUVBLE9BQU87UUFBRUQ7UUFBWUQ7SUFBUztBQUNoQyJ9