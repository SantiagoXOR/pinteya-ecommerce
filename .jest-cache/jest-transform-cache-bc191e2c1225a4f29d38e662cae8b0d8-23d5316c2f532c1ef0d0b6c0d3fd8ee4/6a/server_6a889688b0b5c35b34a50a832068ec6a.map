{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\integrations\\supabase\\server.ts"],"sourcesContent":["// =====================================================\r\n// SUPABASE SERVER CLIENT\r\n// Descripci√≥n: Cliente de Supabase para uso en servidor\r\n// Basado en: Supabase SSR + NextAuth.js integration\r\n// =====================================================\r\n\r\nimport { createServerClient, type CookieOptions } from '@supabase/ssr';\r\nimport { cookies } from 'next/headers';\r\n\r\nexport async function createClient() {\r\n  const cookieStore = await cookies();\r\n\r\n  return createServerClient(\r\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\r\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\r\n    {\r\n      cookies: {\r\n        get(name: string) {\r\n          return cookieStore.get(name)?.value;\r\n        },\r\n        set(name: string, value: string, options: CookieOptions) {\r\n          try {\r\n            cookieStore.set({ name, value, ...options });\r\n          } catch (error) {\r\n            // The `set` method was called from a Server Component.\r\n            // This can be ignored if you have middleware refreshing\r\n            // user sessions.\r\n          }\r\n        },\r\n        remove(name: string, options: CookieOptions) {\r\n          try {\r\n            cookieStore.set({ name, value: '', ...options });\r\n          } catch (error) {\r\n            // The `delete` method was called from a Server Component.\r\n            // This can be ignored if you have middleware refreshing\r\n            // user sessions.\r\n          }\r\n        },\r\n      },\r\n    }\r\n  );\r\n}\r\n\r\n// Cliente con service role para operaciones administrativas\r\nexport function createAdminClient() {\r\n  return createServerClient(\r\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\r\n    process.env.SUPABASE_SERVICE_ROLE_KEY!,\r\n    {\r\n      cookies: {\r\n        get() {\r\n          return undefined;\r\n        },\r\n        set() {\r\n          // No-op for service role client\r\n        },\r\n        remove() {\r\n          // No-op for service role client\r\n        },\r\n      },\r\n    }\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["createAdminClient","createClient","cookieStore","cookies","createServerClient","process","env","NEXT_PUBLIC_SUPABASE_URL","NEXT_PUBLIC_SUPABASE_ANON_KEY","get","name","value","set","options","error","remove","SUPABASE_SERVICE_ROLE_KEY","undefined"],"mappings":"AAAA,wDAAwD;AACxD,yBAAyB;AACzB,wDAAwD;AACxD,oDAAoD;AACpD,wDAAwD;;;;;;;;;;;;QAwCxCA;eAAAA;;QAnCMC;eAAAA;;;qBAHiC;yBAC/B;AAEjB,eAAeA;IACpB,MAAMC,cAAc,MAAMC,IAAAA,gBAAO;IAEjC,OAAOC,IAAAA,uBAAkB,EACvBC,QAAQC,GAAG,CAACC,wBAAwB,EACpCF,QAAQC,GAAG,CAACE,6BAA6B,EACzC;QACEL,SAAS;YACPM,KAAIC,IAAY;gBACd,OAAOR,YAAYO,GAAG,CAACC,OAAOC;YAChC;YACAC,KAAIF,IAAY,EAAEC,KAAa,EAAEE,OAAsB;gBACrD,IAAI;oBACFX,YAAYU,GAAG,CAAC;wBAAEF;wBAAMC;wBAAO,GAAGE,OAAO;oBAAC;gBAC5C,EAAE,OAAOC,OAAO;gBACd,uDAAuD;gBACvD,wDAAwD;gBACxD,iBAAiB;gBACnB;YACF;YACAC,QAAOL,IAAY,EAAEG,OAAsB;gBACzC,IAAI;oBACFX,YAAYU,GAAG,CAAC;wBAAEF;wBAAMC,OAAO;wBAAI,GAAGE,OAAO;oBAAC;gBAChD,EAAE,OAAOC,OAAO;gBACd,0DAA0D;gBAC1D,wDAAwD;gBACxD,iBAAiB;gBACnB;YACF;QACF;IACF;AAEJ;AAGO,SAASd;IACd,OAAOI,IAAAA,uBAAkB,EACvBC,QAAQC,GAAG,CAACC,wBAAwB,EACpCF,QAAQC,GAAG,CAACU,yBAAyB,EACrC;QACEb,SAAS;YACPM;gBACE,OAAOQ;YACT;YACAL;YACE,gCAAgC;YAClC;YACAG;YACE,gCAAgC;YAClC;QACF;IACF;AAEJ"}