e4d37a757115a740d3dfe4c210c1688f
// =====================================================
// SUPABASE SERVER CLIENT
// Descripci√≥n: Cliente de Supabase para uso en servidor
// Basado en: Supabase SSR + NextAuth.js integration
// =====================================================
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: Object.getOwnPropertyDescriptor(all, name).get
    });
}
_export(exports, {
    get createAdminClient () {
        return createAdminClient;
    },
    get createClient () {
        return createClient;
    }
});
const _ssr = require("@supabase/ssr");
const _headers = require("next/headers");
async function createClient() {
    const cookieStore = await (0, _headers.cookies)();
    return (0, _ssr.createServerClient)(process.env.NEXT_PUBLIC_SUPABASE_URL, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY, {
        cookies: {
            get (name) {
                return cookieStore.get(name)?.value;
            },
            set (name, value, options) {
                try {
                    cookieStore.set({
                        name,
                        value,
                        ...options
                    });
                } catch (error) {
                // The `set` method was called from a Server Component.
                // This can be ignored if you have middleware refreshing
                // user sessions.
                }
            },
            remove (name, options) {
                try {
                    cookieStore.set({
                        name,
                        value: '',
                        ...options
                    });
                } catch (error) {
                // The `delete` method was called from a Server Component.
                // This can be ignored if you have middleware refreshing
                // user sessions.
                }
            }
        }
    });
}
function createAdminClient() {
    return (0, _ssr.createServerClient)(process.env.NEXT_PUBLIC_SUPABASE_URL, process.env.SUPABASE_SERVICE_ROLE_KEY, {
        cookies: {
            get () {
                return undefined;
            },
            set () {
            // No-op for service role client
            },
            remove () {
            // No-op for service role client
            }
        }
    });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbWFydGlcXERlc2t0b3BcXERFU0FSUk9MTE9TV1xcQk9JTEVSUExBVFRFIEUtQ09NTUVSQ0VcXHNyY1xcbGliXFxpbnRlZ3JhdGlvbnNcXHN1cGFiYXNlXFxzZXJ2ZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gU1VQQUJBU0UgU0VSVkVSIENMSUVOVFxyXG4vLyBEZXNjcmlwY2nDs246IENsaWVudGUgZGUgU3VwYWJhc2UgcGFyYSB1c28gZW4gc2Vydmlkb3JcclxuLy8gQmFzYWRvIGVuOiBTdXBhYmFzZSBTU1IgKyBOZXh0QXV0aC5qcyBpbnRlZ3JhdGlvblxyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5cclxuaW1wb3J0IHsgY3JlYXRlU2VydmVyQ2xpZW50LCB0eXBlIENvb2tpZU9wdGlvbnMgfSBmcm9tICdAc3VwYWJhc2Uvc3NyJztcclxuaW1wb3J0IHsgY29va2llcyB9IGZyb20gJ25leHQvaGVhZGVycyc7XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gY3JlYXRlQ2xpZW50KCkge1xyXG4gIGNvbnN0IGNvb2tpZVN0b3JlID0gYXdhaXQgY29va2llcygpO1xyXG5cclxuICByZXR1cm4gY3JlYXRlU2VydmVyQ2xpZW50KFxyXG4gICAgcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMISxcclxuICAgIHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX0FOT05fS0VZISxcclxuICAgIHtcclxuICAgICAgY29va2llczoge1xyXG4gICAgICAgIGdldChuYW1lOiBzdHJpbmcpIHtcclxuICAgICAgICAgIHJldHVybiBjb29raWVTdG9yZS5nZXQobmFtZSk/LnZhbHVlO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgc2V0KG5hbWU6IHN0cmluZywgdmFsdWU6IHN0cmluZywgb3B0aW9uczogQ29va2llT3B0aW9ucykge1xyXG4gICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgY29va2llU3RvcmUuc2V0KHsgbmFtZSwgdmFsdWUsIC4uLm9wdGlvbnMgfSk7XHJcbiAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICAvLyBUaGUgYHNldGAgbWV0aG9kIHdhcyBjYWxsZWQgZnJvbSBhIFNlcnZlciBDb21wb25lbnQuXHJcbiAgICAgICAgICAgIC8vIFRoaXMgY2FuIGJlIGlnbm9yZWQgaWYgeW91IGhhdmUgbWlkZGxld2FyZSByZWZyZXNoaW5nXHJcbiAgICAgICAgICAgIC8vIHVzZXIgc2Vzc2lvbnMuXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICByZW1vdmUobmFtZTogc3RyaW5nLCBvcHRpb25zOiBDb29raWVPcHRpb25zKSB7XHJcbiAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICBjb29raWVTdG9yZS5zZXQoeyBuYW1lLCB2YWx1ZTogJycsIC4uLm9wdGlvbnMgfSk7XHJcbiAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICAvLyBUaGUgYGRlbGV0ZWAgbWV0aG9kIHdhcyBjYWxsZWQgZnJvbSBhIFNlcnZlciBDb21wb25lbnQuXHJcbiAgICAgICAgICAgIC8vIFRoaXMgY2FuIGJlIGlnbm9yZWQgaWYgeW91IGhhdmUgbWlkZGxld2FyZSByZWZyZXNoaW5nXHJcbiAgICAgICAgICAgIC8vIHVzZXIgc2Vzc2lvbnMuXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgfSxcclxuICAgIH1cclxuICApO1xyXG59XHJcblxyXG4vLyBDbGllbnRlIGNvbiBzZXJ2aWNlIHJvbGUgcGFyYSBvcGVyYWNpb25lcyBhZG1pbmlzdHJhdGl2YXNcclxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUFkbWluQ2xpZW50KCkge1xyXG4gIHJldHVybiBjcmVhdGVTZXJ2ZXJDbGllbnQoXHJcbiAgICBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwhLFxyXG4gICAgcHJvY2Vzcy5lbnYuU1VQQUJBU0VfU0VSVklDRV9ST0xFX0tFWSEsXHJcbiAgICB7XHJcbiAgICAgIGNvb2tpZXM6IHtcclxuICAgICAgICBnZXQoKSB7XHJcbiAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgc2V0KCkge1xyXG4gICAgICAgICAgLy8gTm8tb3AgZm9yIHNlcnZpY2Ugcm9sZSBjbGllbnRcclxuICAgICAgICB9LFxyXG4gICAgICAgIHJlbW92ZSgpIHtcclxuICAgICAgICAgIC8vIE5vLW9wIGZvciBzZXJ2aWNlIHJvbGUgY2xpZW50XHJcbiAgICAgICAgfSxcclxuICAgICAgfSxcclxuICAgIH1cclxuICApO1xyXG59XHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbiJdLCJuYW1lcyI6WyJjcmVhdGVBZG1pbkNsaWVudCIsImNyZWF0ZUNsaWVudCIsImNvb2tpZVN0b3JlIiwiY29va2llcyIsImNyZWF0ZVNlcnZlckNsaWVudCIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWSIsImdldCIsIm5hbWUiLCJ2YWx1ZSIsInNldCIsIm9wdGlvbnMiLCJlcnJvciIsInJlbW92ZSIsIlNVUEFCQVNFX1NFUlZJQ0VfUk9MRV9LRVkiLCJ1bmRlZmluZWQiXSwibWFwcGluZ3MiOiJBQUFBLHdEQUF3RDtBQUN4RCx5QkFBeUI7QUFDekIsd0RBQXdEO0FBQ3hELG9EQUFvRDtBQUNwRCx3REFBd0Q7Ozs7Ozs7Ozs7OztRQXdDeENBO2VBQUFBOztRQW5DTUM7ZUFBQUE7OztxQkFIaUM7eUJBQy9CO0FBRWpCLGVBQWVBO0lBQ3BCLE1BQU1DLGNBQWMsTUFBTUMsSUFBQUEsZ0JBQU87SUFFakMsT0FBT0MsSUFBQUEsdUJBQWtCLEVBQ3ZCQyxRQUFRQyxHQUFHLENBQUNDLHdCQUF3QixFQUNwQ0YsUUFBUUMsR0FBRyxDQUFDRSw2QkFBNkIsRUFDekM7UUFDRUwsU0FBUztZQUNQTSxLQUFJQyxJQUFZO2dCQUNkLE9BQU9SLFlBQVlPLEdBQUcsQ0FBQ0MsT0FBT0M7WUFDaEM7WUFDQUMsS0FBSUYsSUFBWSxFQUFFQyxLQUFhLEVBQUVFLE9BQXNCO2dCQUNyRCxJQUFJO29CQUNGWCxZQUFZVSxHQUFHLENBQUM7d0JBQUVGO3dCQUFNQzt3QkFBTyxHQUFHRSxPQUFPO29CQUFDO2dCQUM1QyxFQUFFLE9BQU9DLE9BQU87Z0JBQ2QsdURBQXVEO2dCQUN2RCx3REFBd0Q7Z0JBQ3hELGlCQUFpQjtnQkFDbkI7WUFDRjtZQUNBQyxRQUFPTCxJQUFZLEVBQUVHLE9BQXNCO2dCQUN6QyxJQUFJO29CQUNGWCxZQUFZVSxHQUFHLENBQUM7d0JBQUVGO3dCQUFNQyxPQUFPO3dCQUFJLEdBQUdFLE9BQU87b0JBQUM7Z0JBQ2hELEVBQUUsT0FBT0MsT0FBTztnQkFDZCwwREFBMEQ7Z0JBQzFELHdEQUF3RDtnQkFDeEQsaUJBQWlCO2dCQUNuQjtZQUNGO1FBQ0Y7SUFDRjtBQUVKO0FBR08sU0FBU2Q7SUFDZCxPQUFPSSxJQUFBQSx1QkFBa0IsRUFDdkJDLFFBQVFDLEdBQUcsQ0FBQ0Msd0JBQXdCLEVBQ3BDRixRQUFRQyxHQUFHLENBQUNVLHlCQUF5QixFQUNyQztRQUNFYixTQUFTO1lBQ1BNO2dCQUNFLE9BQU9RO1lBQ1Q7WUFDQUw7WUFDRSxnQ0FBZ0M7WUFDbEM7WUFDQUc7WUFDRSxnQ0FBZ0M7WUFDbEM7UUFDRjtJQUNGO0FBRUoifQ==