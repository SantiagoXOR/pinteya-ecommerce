{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\ui\\stock-indicator.tsx"],"sourcesContent":["'use client'\n\nimport * as React from 'react'\nimport { cva, type VariantProps } from 'class-variance-authority'\nimport { cn } from '@/lib/utils'\nimport { Package, AlertTriangle, XCircle, Check } from 'lucide-react'\n\nconst stockIndicatorVariants = cva('flex items-center gap-2 text-sm font-medium', {\n  variants: {\n    variant: {\n      default: 'flex-row',\n      compact: 'flex-row gap-1',\n      badge: 'inline-flex px-2 py-1 rounded-full text-xs',\n      minimal: 'flex-row gap-1 text-xs',\n    },\n    status: {\n      inStock: 'text-green-600',\n      lowStock: 'text-yellow-600',\n      outOfStock: 'text-red-600',\n      preOrder: 'text-blue-600',\n    },\n  },\n  defaultVariants: {\n    variant: 'default',\n    status: 'inStock',\n  },\n})\n\nexport interface StockIndicatorProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof stockIndicatorVariants> {\n  /** Cantidad disponible en stock */\n  quantity: number\n  /** Umbral para considerar stock bajo */\n  lowStockThreshold?: number\n  /** Mostrar cantidad exacta */\n  showExactQuantity?: boolean\n  /** Texto personalizado para diferentes estados */\n  customTexts?: {\n    inStock?: string\n    lowStock?: string\n    outOfStock?: string\n    preOrder?: string\n  }\n  /** Mostrar ícono */\n  showIcon?: boolean\n  /** Permitir pre-orden cuando no hay stock */\n  allowPreOrder?: boolean\n  /** Tiempo estimado de reposición */\n  restockDate?: Date\n  /** Unidad de medida (ej: \"unidades\", \"litros\", \"kg\") */\n  unit?: string\n}\n\n/**\n * Determina el estado del stock basado en la cantidad\n */\nconst getStockStatus = (\n  quantity: number,\n  lowStockThreshold: number = 5,\n  allowPreOrder: boolean = false\n): 'inStock' | 'lowStock' | 'outOfStock' | 'preOrder' => {\n  if (quantity === 0) {\n    return allowPreOrder ? 'preOrder' : 'outOfStock'\n  }\n  if (quantity <= lowStockThreshold) {\n    return 'lowStock'\n  }\n  return 'inStock'\n}\n\n/**\n * Obtiene el ícono apropiado para cada estado\n */\nconst getStatusIcon = (status: string) => {\n  switch (status) {\n    case 'inStock':\n      return <Check className='w-4 h-4' />\n    case 'lowStock':\n      return <AlertTriangle className='w-4 h-4' />\n    case 'outOfStock':\n      return <XCircle className='w-4 h-4' />\n    case 'preOrder':\n      return <Package className='w-4 h-4' />\n    default:\n      return <Check className='w-4 h-4' />\n  }\n}\n\n/**\n * Obtiene el texto por defecto para cada estado\n */\nconst getDefaultText = (\n  status: string,\n  quantity: number,\n  showExactQuantity: boolean,\n  unit: string = 'unidades'\n): string => {\n  switch (status) {\n    case 'inStock':\n      return showExactQuantity ? `${quantity} ${unit} disponibles` : 'En stock'\n    case 'lowStock':\n      return showExactQuantity ? `¡Solo ${quantity} ${unit} disponibles!` : 'Pocas unidades'\n    case 'outOfStock':\n      return 'Sin stock'\n    case 'preOrder':\n      return 'Disponible por encargo'\n    default:\n      return 'En stock'\n  }\n}\n\n/**\n * Formatea la fecha de reposición\n */\nconst formatRestockDate = (date: Date): string => {\n  const now = new Date()\n  const diffTime = date.getTime() - now.getTime()\n  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24))\n\n  if (diffDays <= 0) {\n    return 'Disponible pronto'\n  } else if (diffDays === 1) {\n    return 'Disponible mañana'\n  } else if (diffDays <= 7) {\n    return `Disponible en ${diffDays} días`\n  } else {\n    return `Disponible el ${date.toLocaleDateString('es-AR')}`\n  }\n}\n\nconst StockIndicator = React.forwardRef<HTMLDivElement, StockIndicatorProps>(\n  (\n    {\n      className,\n      variant,\n      quantity,\n      lowStockThreshold = 5,\n      showExactQuantity = false,\n      customTexts = {},\n      showIcon = true,\n      allowPreOrder = false,\n      restockDate,\n      unit = 'unidades',\n      ...props\n    },\n    ref\n  ) => {\n    const status = getStockStatus(quantity, lowStockThreshold, allowPreOrder)\n\n    const statusText =\n      customTexts[status] || getDefaultText(status, quantity, showExactQuantity, unit)\n\n    return (\n      <div\n        ref={ref}\n        className={cn(stockIndicatorVariants({ variant, status, className }))}\n        {...props}\n      >\n        {/* Ícono de estado */}\n        {showIcon && getStatusIcon(status)}\n\n        {/* Texto principal */}\n        <span>{statusText}</span>\n\n        {/* Información de reposición */}\n        {status === 'outOfStock' && restockDate && (\n          <span className='text-xs text-muted-foreground ml-1'>\n            ({formatRestockDate(restockDate)})\n          </span>\n        )}\n\n        {/* Badge de estado para variante badge */}\n        {variant === 'badge' && (\n          <div\n            className={cn('absolute -top-1 -right-1 w-3 h-3 rounded-full', {\n              'bg-green-500': status === 'inStock',\n              'bg-yellow-500': status === 'lowStock',\n              'bg-red-500': status === 'outOfStock',\n              'bg-blue-500': status === 'preOrder',\n            })}\n          />\n        )}\n      </div>\n    )\n  }\n)\n\nStockIndicator.displayName = 'StockIndicator'\n\nexport { StockIndicator, stockIndicatorVariants }\n"],"names":["StockIndicator","stockIndicatorVariants","cva","variants","variant","default","compact","badge","minimal","status","inStock","lowStock","outOfStock","preOrder","defaultVariants","getStockStatus","quantity","lowStockThreshold","allowPreOrder","getStatusIcon","Check","className","AlertTriangle","XCircle","Package","getDefaultText","showExactQuantity","unit","formatRestockDate","date","now","Date","diffTime","getTime","diffDays","Math","ceil","toLocaleDateString","React","forwardRef","customTexts","showIcon","restockDate","props","ref","statusText","div","cn","span","displayName"],"mappings":"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"}