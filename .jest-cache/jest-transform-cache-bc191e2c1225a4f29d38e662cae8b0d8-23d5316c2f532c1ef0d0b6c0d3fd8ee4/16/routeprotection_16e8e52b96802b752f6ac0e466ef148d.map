{"version":3,"names":["cov_2oej44hmdq","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","MIDDLEWARE_PATHS","PROTECTED_ROUTES","PUBLIC_ROUTES","canAccessRoute","protectAdminRoute","useRoutePermissions","requiredPermissions","allowedRoles","requiresAuth","matchRoute","pathname","pattern","regexPattern","replace","regex","RegExp","test","findRouteConfig","find","route","getUserProfileByClerkId","clerkUserId","_supabase","supabaseAdmin","Error","data","profile","error","from","select","eq","single","console","hasPermission","userProfile","permissionPath","user_roles","permissions","current","hasAnyPermission","some","permission","request","nextUrl","routeConfig","userId","_config","auth","loginUrl","URL","url","searchParams","set","_server","NextResponse","redirect","session","user","errorUrl","length","userRole","role_name","includes","forbiddenUrl","hasRequiredPermissions","response","next","headers","id","isProtected","canAccess","reason","join"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\auth\\route-protection.ts"],"sourcesContent":["/**\r\n * Sistema de Protección de Rutas con Verificación de Permisos Granulares\r\n * Middleware para proteger rutas del panel administrativo\r\n */\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { auth } from '@/lib/auth/config';\r\nimport { supabaseAdmin } from '@/lib/integrations/supabase';\r\n\r\n// =====================================================\r\n// CONFIGURACIÓN DE RUTAS PROTEGIDAS\r\n// =====================================================\r\n\r\nexport interface RoutePermission {\r\n  path: string;\r\n  requiredPermissions: string[][];\r\n  allowedRoles?: string[];\r\n  requiresAuth?: boolean;\r\n}\r\n\r\n// Configuración de permisos por ruta\r\nexport const PROTECTED_ROUTES: RoutePermission[] = [\r\n  // Panel administrativo general\r\n  {\r\n    path: '/admin',\r\n    requiredPermissions: [['admin_panel', 'access']],\r\n    allowedRoles: ['admin', 'moderator'],\r\n    requiresAuth: true\r\n  },\r\n  \r\n  // Gestión de productos\r\n  {\r\n    path: '/admin/products',\r\n    requiredPermissions: [['products', 'read']],\r\n    allowedRoles: ['admin', 'moderator'],\r\n    requiresAuth: true\r\n  },\r\n  {\r\n    path: '/admin/products/new',\r\n    requiredPermissions: [['products', 'create']],\r\n    allowedRoles: ['admin', 'moderator'],\r\n    requiresAuth: true\r\n  },\r\n  {\r\n    path: '/admin/products/[id]/edit',\r\n    requiredPermissions: [['products', 'update']],\r\n    allowedRoles: ['admin', 'moderator'],\r\n    requiresAuth: true\r\n  },\r\n  \r\n  // Gestión de órdenes\r\n  {\r\n    path: '/admin/orders',\r\n    requiredPermissions: [['orders', 'read']],\r\n    allowedRoles: ['admin', 'moderator'],\r\n    requiresAuth: true\r\n  },\r\n  {\r\n    path: '/admin/orders/[id]',\r\n    requiredPermissions: [['orders', 'read']],\r\n    allowedRoles: ['admin', 'moderator'],\r\n    requiresAuth: true\r\n  },\r\n  \r\n  // Gestión de usuarios\r\n  {\r\n    path: '/admin/users',\r\n    requiredPermissions: [['users', 'read']],\r\n    allowedRoles: ['admin'],\r\n    requiresAuth: true\r\n  },\r\n  {\r\n    path: '/admin/users/[id]',\r\n    requiredPermissions: [['users', 'read']],\r\n    allowedRoles: ['admin'],\r\n    requiresAuth: true\r\n  },\r\n  \r\n  // Analytics\r\n  {\r\n    path: '/admin/analytics',\r\n    requiredPermissions: [['analytics', 'read']],\r\n    allowedRoles: ['admin', 'moderator'],\r\n    requiresAuth: true\r\n  },\r\n  \r\n  // Configuración del sistema\r\n  {\r\n    path: '/admin/settings',\r\n    requiredPermissions: [['settings', 'read']],\r\n    allowedRoles: ['admin'],\r\n    requiresAuth: true\r\n  }\r\n];\r\n\r\n// =====================================================\r\n// FUNCIONES DE VERIFICACIÓN\r\n// =====================================================\r\n\r\n/**\r\n * Verifica si una ruta coincide con un patrón\r\n */\r\nfunction matchRoute(pathname: string, pattern: string): boolean {\r\n  // Convertir patrón de Next.js a regex\r\n  const regexPattern = pattern\r\n    .replace(/\\[([^\\]]+)\\]/g, '([^/]+)') // [id] -> ([^/]+)\r\n    .replace(/\\//g, '\\\\/'); // Escapar barras\r\n  \r\n  const regex = new RegExp(`^${regexPattern}$`);\r\n  return regex.test(pathname);\r\n}\r\n\r\n/**\r\n * Encuentra la configuración de ruta para un pathname\r\n */\r\nfunction findRouteConfig(pathname: string): RoutePermission | null {\r\n  return PROTECTED_ROUTES.find(route => matchRoute(pathname, route.path)) || null;\r\n}\r\n\r\n/**\r\n * Obtiene el perfil de usuario desde Supabase\r\n */\r\nasync function getUserProfileByClerkId(clerkUserId: string) {\r\n  try {\r\n    if (!supabaseAdmin) {\r\n      throw new Error('Supabase admin client not available');\r\n    }\r\n\r\n    const { data: profile, error } = await supabaseAdmin\r\n      .from('user_profiles')\r\n      .select(`\r\n        *,\r\n        user_roles (\r\n          id,\r\n          role_name,\r\n          display_name,\r\n          permissions,\r\n          is_active\r\n        )\r\n      `)\r\n      .eq('clerk_user_id', clerkUserId)\r\n      .eq('is_active', true)\r\n      .single();\r\n\r\n    if (error) {\r\n      console.error('Error fetching user profile:', error);\r\n      return null;\r\n    }\r\n\r\n    return profile;\r\n  } catch (error) {\r\n    console.error('Error in getUserProfileByClerkId:', error);\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * Verifica si un usuario tiene un permiso específico\r\n */\r\nfunction hasPermission(userProfile: any, permissionPath: string[]): boolean {\r\n  try {\r\n    if (!userProfile.user_roles || !userProfile.user_roles.permissions) {\r\n      return false;\r\n    }\r\n\r\n    let current: any = userProfile.user_roles.permissions;\r\n    \r\n    for (const path of permissionPath) {\r\n      if (current[path] === undefined) {\r\n        return false;\r\n      }\r\n      current = current[path];\r\n    }\r\n\r\n    // Manejar diferentes tipos de valores de permisos\r\n    if (typeof current === 'boolean') {\r\n      return current;\r\n    }\r\n    \r\n    if (typeof current === 'string') {\r\n      return current !== 'false';\r\n    }\r\n\r\n    return false;\r\n  } catch (error) {\r\n    console.error('Error checking permission:', error);\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Verifica si un usuario tiene alguno de los permisos requeridos\r\n */\r\nfunction hasAnyPermission(userProfile: any, permissions: string[][]): boolean {\r\n  return permissions.some(permission => hasPermission(userProfile, permission));\r\n}\r\n\r\n// =====================================================\r\n// MIDDLEWARE PRINCIPAL\r\n// =====================================================\r\n\r\n/**\r\n * Middleware de protección de rutas administrativas\r\n */\r\nexport async function protectAdminRoute(request: NextRequest): Promise<NextResponse | null> {\r\n  const pathname = request.nextUrl.pathname;\r\n  \r\n  // Verificar si la ruta necesita protección\r\n  const routeConfig = findRouteConfig(pathname);\r\n  \r\n  if (!routeConfig) {\r\n    // Ruta no protegida, permitir acceso\r\n    return null;\r\n  }\r\n\r\n  try {\r\n    // 1. Verificar autenticación con Clerk\r\n    const { userId } = auth();\r\n    \r\n    if (routeConfig.requiresAuth && !userId) {\r\n      // Redirigir a login\r\n      const loginUrl = new URL('/sign-in', request.url);\r\n      loginUrl.searchParams.set('redirect_url', pathname);\r\n      return NextResponse.redirect(loginUrl);\r\n    }\r\n\r\n    if (!session?.user) {\r\n      return null; // No autenticado pero ruta no requiere auth\r\n    }\r\n\r\n    // 2. Obtener perfil de usuario\r\n    const userProfile = await getUserProfileByClerkId(userId);\r\n    \r\n    if (!userProfile) {\r\n      // Usuario no encontrado en base de datos\r\n      const errorUrl = new URL('/auth/profile-setup', request.url);\r\n      return NextResponse.redirect(errorUrl);\r\n    }\r\n\r\n    // 3. Verificar rol permitido\r\n    if (routeConfig.allowedRoles && routeConfig.allowedRoles.length > 0) {\r\n      const userRole = userProfile.user_roles?.role_name;\r\n      \r\n      if (!userRole || !routeConfig.allowedRoles.includes(userRole)) {\r\n        // Rol no permitido\r\n        const forbiddenUrl = new URL('/403', request.url);\r\n        return NextResponse.redirect(forbiddenUrl);\r\n      }\r\n    }\r\n\r\n    // 4. Verificar permisos específicos\r\n    if (routeConfig.requiredPermissions && routeConfig.requiredPermissions.length > 0) {\r\n      const hasRequiredPermissions = hasAnyPermission(userProfile, routeConfig.requiredPermissions);\r\n      \r\n      if (!hasRequiredPermissions) {\r\n        // Permisos insuficientes\r\n        const forbiddenUrl = new URL('/403', request.url);\r\n        return NextResponse.redirect(forbiddenUrl);\r\n      }\r\n    }\r\n\r\n    // 5. Agregar headers con información del usuario (opcional)\r\n    const response = NextResponse.next();\r\n    response.headers.set('x-user-id', userProfile.id);\r\n    response.headers.set('x-user-role', userProfile.user_roles?.role_name || 'customer');\r\n    \r\n    return response;\r\n\r\n  } catch (error) {\r\n    console.error('Error in protectAdminRoute:', error);\r\n    \r\n    // En caso de error, redirigir a página de error\r\n    const errorUrl = new URL('/500', request.url);\r\n    return NextResponse.redirect(errorUrl);\r\n  }\r\n}\r\n\r\n// =====================================================\r\n// UTILIDADES PARA COMPONENTES\r\n// =====================================================\r\n\r\n/**\r\n * Hook para verificar permisos en componentes\r\n */\r\nexport function useRoutePermissions(pathname: string) {\r\n  const routeConfig = findRouteConfig(pathname);\r\n  \r\n  return {\r\n    isProtected: !!routeConfig,\r\n    requiredPermissions: routeConfig?.requiredPermissions || [],\r\n    allowedRoles: routeConfig?.allowedRoles || [],\r\n    requiresAuth: routeConfig?.requiresAuth || false\r\n  };\r\n}\r\n\r\n/**\r\n * Verifica si un usuario puede acceder a una ruta específica\r\n */\r\nexport function canAccessRoute(\r\n  pathname: string,\r\n  userProfile: any\r\n): { canAccess: boolean; reason?: string } {\r\n  const routeConfig = findRouteConfig(pathname);\r\n  \r\n  if (!routeConfig) {\r\n    return { canAccess: true };\r\n  }\r\n\r\n  // Verificar rol\r\n  if (routeConfig.allowedRoles && routeConfig.allowedRoles.length > 0) {\r\n    const userRole = userProfile?.user_roles?.role_name;\r\n    \r\n    if (!userRole || !routeConfig.allowedRoles.includes(userRole)) {\r\n      return { \r\n        canAccess: false, \r\n        reason: `Rol requerido: ${routeConfig.allowedRoles.join(' o ')}` \r\n      };\r\n    }\r\n  }\r\n\r\n  // Verificar permisos\r\n  if (routeConfig.requiredPermissions && routeConfig.requiredPermissions.length > 0) {\r\n    const hasRequiredPermissions = hasAnyPermission(userProfile, routeConfig.requiredPermissions);\r\n    \r\n    if (!hasRequiredPermissions) {\r\n      return { \r\n        canAccess: false, \r\n        reason: 'Permisos insuficientes' \r\n      };\r\n    }\r\n  }\r\n\r\n  return { canAccess: true };\r\n}\r\n\r\n// =====================================================\r\n// CONFIGURACIÓN PARA MIDDLEWARE.TS\r\n// =====================================================\r\n\r\n/**\r\n * Lista de rutas que deben ser procesadas por el middleware\r\n */\r\nexport const MIDDLEWARE_PATHS = [\r\n  '/admin/:path*',\r\n  '/dashboard/:path*'\r\n];\r\n\r\n/**\r\n * Lista de rutas públicas que no requieren verificación\r\n */\r\nexport const PUBLIC_ROUTES = [\r\n  '/',\r\n  '/shop',\r\n  '/search',\r\n  '/product/:path*',\r\n  '/category/:path*',\r\n  '/about',\r\n  '/contact',\r\n  '/sign-in',\r\n  '/sign-up',\r\n  '/auth/:path*',\r\n  '/api/auth/:path*',\r\n  '/api/public/:path*'\r\n];\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]}