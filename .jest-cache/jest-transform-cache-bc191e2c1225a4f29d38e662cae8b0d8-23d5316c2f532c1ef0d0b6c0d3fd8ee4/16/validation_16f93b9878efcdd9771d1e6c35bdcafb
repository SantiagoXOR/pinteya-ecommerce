31d2ab6a1b81a28ca445900412c0b829
// =====================================================
// UTILIDADES: VALIDACIÓN DE DATOS
// Descripción: Funciones para validar datos de logística
// Basado en: Zod + patrones enterprise
// =====================================================
"use strict";

/* istanbul ignore next */
function cov_2cs5dl9xec() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\utils\\validation.ts";
  var hash = "d2fd4449c34ae85aa57505bfdcc38881bedf873e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\utils\\validation.ts",
    statementMap: {
      "0": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 9,
          column: 3
        }
      },
      "1": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 14,
          column: 7
        }
      },
      "2": {
        start: {
          line: 11,
          column: 24
        },
        end: {
          line: 14,
          column: 7
        }
      },
      "3": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 74,
          column: 3
        }
      },
      "4": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 29
        }
      },
      "5": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 35
        }
      },
      "6": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 34
        }
      },
      "7": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 30
        }
      },
      "8": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 38
        }
      },
      "9": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 30
        }
      },
      "10": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 31
        }
      },
      "11": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 35
        }
      },
      "12": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 27
        }
      },
      "13": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 36
        }
      },
      "14": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 34
        }
      },
      "15": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 29
        }
      },
      "16": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 36
        }
      },
      "17": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 35
        }
      },
      "18": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 34
        }
      },
      "19": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 32
        }
      },
      "20": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 36
        }
      },
      "21": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 38
        }
      },
      "22": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 30
        }
      },
      "23": {
        start: {
          line: 75,
          column: 13
        },
        end: {
          line: 75,
          column: 27
        }
      },
      "24": {
        start: {
          line: 76,
          column: 22
        },
        end: {
          line: 88,
          column: 2
        }
      },
      "25": {
        start: {
          line: 89,
          column: 23
        },
        end: {
          line: 112,
          column: 2
        }
      },
      "26": {
        start: {
          line: 114,
          column: 23
        },
        end: {
          line: 114,
          column: 51
        }
      },
      "27": {
        start: {
          line: 115,
          column: 4
        },
        end: {
          line: 115,
          column: 34
        }
      },
      "28": {
        start: {
          line: 120,
          column: 23
        },
        end: {
          line: 120,
          column: 55
        }
      },
      "29": {
        start: {
          line: 125,
          column: 23
        },
        end: {
          line: 125,
          column: 53
        }
      },
      "30": {
        start: {
          line: 126,
          column: 4
        },
        end: {
          line: 126,
          column: 66
        }
      },
      "31": {
        start: {
          line: 130,
          column: 21
        },
        end: {
          line: 130,
          column: 49
        }
      },
      "32": {
        start: {
          line: 134,
          column: 21
        },
        end: {
          line: 134,
          column: 30
        }
      },
      "33": {
        start: {
          line: 135,
          column: 22
        },
        end: {
          line: 135,
          column: 32
        }
      },
      "34": {
        start: {
          line: 136,
          column: 4
        },
        end: {
          line: 142,
          column: 5
        }
      },
      "35": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 138,
          column: 63
        }
      },
      "36": {
        start: {
          line: 139,
          column: 11
        },
        end: {
          line: 142,
          column: 5
        }
      },
      "37": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 141,
          column: 64
        }
      },
      "38": {
        start: {
          line: 143,
          column: 4
        },
        end: {
          line: 143,
          column: 17
        }
      },
      "39": {
        start: {
          line: 147,
          column: 28
        },
        end: {
          line: 147,
          column: 37
        }
      },
      "40": {
        start: {
          line: 148,
          column: 4
        },
        end: {
          line: 148,
          column: 44
        }
      },
      "41": {
        start: {
          line: 152,
          column: 26
        },
        end: {
          line: 152,
          column: 43
        }
      },
      "42": {
        start: {
          line: 153,
          column: 4
        },
        end: {
          line: 153,
          column: 46
        }
      },
      "43": {
        start: {
          line: 156,
          column: 4
        },
        end: {
          line: 156,
          column: 64
        }
      },
      "44": {
        start: {
          line: 159,
          column: 4
        },
        end: {
          line: 159,
          column: 40
        }
      },
      "45": {
        start: {
          line: 162,
          column: 38
        },
        end: {
          line: 162,
          column: 48
        }
      },
      "46": {
        start: {
          line: 163,
          column: 4
        },
        end: {
          line: 164,
          column: 61
        }
      },
      "47": {
        start: {
          line: 167,
          column: 25
        },
        end: {
          line: 167,
          column: 39
        }
      },
      "48": {
        start: {
          line: 168,
          column: 18
        },
        end: {
          line: 168,
          column: 28
        }
      },
      "49": {
        start: {
          line: 169,
          column: 20
        },
        end: {
          line: 169,
          column: 30
        }
      },
      "50": {
        start: {
          line: 170,
          column: 4
        },
        end: {
          line: 170,
          column: 42
        }
      },
      "51": {
        start: {
          line: 171,
          column: 4
        },
        end: {
          line: 171,
          column: 60
        }
      },
      "52": {
        start: {
          line: 174,
          column: 4
        },
        end: {
          line: 174,
          column: 39
        }
      },
      "53": {
        start: {
          line: 177,
          column: 4
        },
        end: {
          line: 177,
          column: 42
        }
      },
      "54": {
        start: {
          line: 180,
          column: 4
        },
        end: {
          line: 180,
          column: 45
        }
      },
      "55": {
        start: {
          line: 183,
          column: 4
        },
        end: {
          line: 183,
          column: 36
        }
      },
      "56": {
        start: {
          line: 186,
          column: 4
        },
        end: {
          line: 186,
          column: 57
        }
      },
      "57": {
        start: {
          line: 189,
          column: 4
        },
        end: {
          line: 189,
          column: 66
        }
      },
      "58": {
        start: {
          line: 192,
          column: 4
        },
        end: {
          line: 211,
          column: 5
        }
      },
      "59": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 193,
          column: 37
        }
      },
      "60": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 197,
          column: 10
        }
      },
      "61": {
        start: {
          line: 199,
          column: 8
        },
        end: {
          line: 204,
          column: 9
        }
      },
      "62": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 203,
          column: 14
        }
      },
      "63": {
        start: {
          line: 202,
          column: 48
        },
        end: {
          line: 202,
          column: 59
        }
      },
      "64": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 210,
          column: 10
        }
      },
      "65": {
        start: {
          line: 214,
          column: 4
        },
        end: {
          line: 233,
          column: 5
        }
      },
      "66": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 215,
          column: 39
        }
      },
      "67": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 219,
          column: 10
        }
      },
      "68": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 226,
          column: 9
        }
      },
      "69": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 225,
          column: 14
        }
      },
      "70": {
        start: {
          line: 224,
          column: 48
        },
        end: {
          line: 224,
          column: 59
        }
      },
      "71": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 232,
          column: 10
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 10,
            column: 9
          },
          end: {
            line: 10,
            column: 16
          }
        },
        loc: {
          start: {
            line: 10,
            column: 30
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        },
        loc: {
          start: {
            line: 17,
            column: 25
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        loc: {
          start: {
            line: 20,
            column: 31
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 20
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        loc: {
          start: {
            line: 23,
            column: 30
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 23
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        loc: {
          start: {
            line: 26,
            column: 26
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 26
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        loc: {
          start: {
            line: 29,
            column: 34
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 29
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        loc: {
          start: {
            line: 32,
            column: 26
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 32
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        loc: {
          start: {
            line: 35,
            column: 27
          },
          end: {
            line: 37,
            column: 5
          }
        },
        line: 35
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        loc: {
          start: {
            line: 38,
            column: 31
          },
          end: {
            line: 40,
            column: 5
          }
        },
        line: 38
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        },
        loc: {
          start: {
            line: 41,
            column: 23
          },
          end: {
            line: 43,
            column: 5
          }
        },
        line: 41
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        loc: {
          start: {
            line: 44,
            column: 32
          },
          end: {
            line: 46,
            column: 5
          }
        },
        line: 44
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        },
        loc: {
          start: {
            line: 47,
            column: 30
          },
          end: {
            line: 49,
            column: 5
          }
        },
        line: 47
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        },
        loc: {
          start: {
            line: 50,
            column: 25
          },
          end: {
            line: 52,
            column: 5
          }
        },
        line: 50
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        },
        loc: {
          start: {
            line: 53,
            column: 32
          },
          end: {
            line: 55,
            column: 5
          }
        },
        line: 53
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        },
        loc: {
          start: {
            line: 56,
            column: 31
          },
          end: {
            line: 58,
            column: 5
          }
        },
        line: 56
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        },
        loc: {
          start: {
            line: 59,
            column: 30
          },
          end: {
            line: 61,
            column: 5
          }
        },
        line: 59
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        },
        loc: {
          start: {
            line: 62,
            column: 28
          },
          end: {
            line: 64,
            column: 5
          }
        },
        line: 62
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 65,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        },
        loc: {
          start: {
            line: 65,
            column: 32
          },
          end: {
            line: 67,
            column: 5
          }
        },
        line: 65
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 68,
            column: 5
          }
        },
        loc: {
          start: {
            line: 68,
            column: 34
          },
          end: {
            line: 70,
            column: 5
          }
        },
        line: 68
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 71,
            column: 5
          }
        },
        loc: {
          start: {
            line: 71,
            column: 26
          },
          end: {
            line: 73,
            column: 5
          }
        },
        line: 71
      },
      "20": {
        name: "validateEmail",
        decl: {
          start: {
            line: 113,
            column: 9
          },
          end: {
            line: 113,
            column: 22
          }
        },
        loc: {
          start: {
            line: 113,
            column: 30
          },
          end: {
            line: 116,
            column: 1
          }
        },
        line: 113
      },
      "21": {
        name: "validatePhoneNumber",
        decl: {
          start: {
            line: 117,
            column: 9
          },
          end: {
            line: 117,
            column: 28
          }
        },
        loc: {
          start: {
            line: 117,
            column: 36
          },
          end: {
            line: 127,
            column: 1
          }
        },
        line: 117
      },
      "22": {
        name: "validateDNI",
        decl: {
          start: {
            line: 128,
            column: 9
          },
          end: {
            line: 128,
            column: 20
          }
        },
        loc: {
          start: {
            line: 128,
            column: 26
          },
          end: {
            line: 144,
            column: 1
          }
        },
        line: 128
      },
      "23": {
        name: "validatePostalCode",
        decl: {
          start: {
            line: 145,
            column: 9
          },
          end: {
            line: 145,
            column: 27
          }
        },
        loc: {
          start: {
            line: 145,
            column: 40
          },
          end: {
            line: 149,
            column: 1
          }
        },
        line: 145
      },
      "24": {
        name: "validateTrackingNumber",
        decl: {
          start: {
            line: 150,
            column: 9
          },
          end: {
            line: 150,
            column: 31
          }
        },
        loc: {
          start: {
            line: 150,
            column: 48
          },
          end: {
            line: 154,
            column: 1
          }
        },
        line: 150
      },
      "25": {
        name: "validateCoordinates",
        decl: {
          start: {
            line: 155,
            column: 9
          },
          end: {
            line: 155,
            column: 28
          }
        },
        loc: {
          start: {
            line: 155,
            column: 39
          },
          end: {
            line: 157,
            column: 1
          }
        },
        line: 155
      },
      "26": {
        name: "validateWeight",
        decl: {
          start: {
            line: 158,
            column: 9
          },
          end: {
            line: 158,
            column: 23
          }
        },
        loc: {
          start: {
            line: 158,
            column: 32
          },
          end: {
            line: 160,
            column: 1
          }
        },
        line: 158
      },
      "27": {
        name: "validateDimensions",
        decl: {
          start: {
            line: 161,
            column: 9
          },
          end: {
            line: 161,
            column: 27
          }
        },
        loc: {
          start: {
            line: 161,
            column: 40
          },
          end: {
            line: 165,
            column: 1
          }
        },
        line: 161
      },
      "28": {
        name: "validateDeliveryDate",
        decl: {
          start: {
            line: 166,
            column: 9
          },
          end: {
            line: 166,
            column: 29
          }
        },
        loc: {
          start: {
            line: 166,
            column: 36
          },
          end: {
            line: 172,
            column: 1
          }
        },
        line: 166
      },
      "29": {
        name: "validateShippingCost",
        decl: {
          start: {
            line: 173,
            column: 9
          },
          end: {
            line: 173,
            column: 29
          }
        },
        loc: {
          start: {
            line: 173,
            column: 36
          },
          end: {
            line: 175,
            column: 1
          }
        },
        line: 173
      },
      "30": {
        name: "validatePackageValue",
        decl: {
          start: {
            line: 176,
            column: 9
          },
          end: {
            line: 176,
            column: 29
          }
        },
        loc: {
          start: {
            line: 176,
            column: 37
          },
          end: {
            line: 178,
            column: 1
          }
        },
        line: 176
      },
      "31": {
        name: "sanitizeString",
        decl: {
          start: {
            line: 179,
            column: 9
          },
          end: {
            line: 179,
            column: 23
          }
        },
        loc: {
          start: {
            line: 179,
            column: 31
          },
          end: {
            line: 181,
            column: 1
          }
        },
        line: 179
      },
      "32": {
        name: "sanitizePhoneNumber",
        decl: {
          start: {
            line: 182,
            column: 9
          },
          end: {
            line: 182,
            column: 28
          }
        },
        loc: {
          start: {
            line: 182,
            column: 36
          },
          end: {
            line: 184,
            column: 1
          }
        },
        line: 182
      },
      "33": {
        name: "sanitizePostalCode",
        decl: {
          start: {
            line: 185,
            column: 9
          },
          end: {
            line: 185,
            column: 27
          }
        },
        loc: {
          start: {
            line: 185,
            column: 40
          },
          end: {
            line: 187,
            column: 1
          }
        },
        line: 185
      },
      "34": {
        name: "sanitizeTrackingNumber",
        decl: {
          start: {
            line: 188,
            column: 9
          },
          end: {
            line: 188,
            column: 31
          }
        },
        loc: {
          start: {
            line: 188,
            column: 48
          },
          end: {
            line: 190,
            column: 1
          }
        },
        line: 188
      },
      "35": {
        name: "validateAddress",
        decl: {
          start: {
            line: 191,
            column: 9
          },
          end: {
            line: 191,
            column: 24
          }
        },
        loc: {
          start: {
            line: 191,
            column: 34
          },
          end: {
            line: 212,
            column: 1
          }
        },
        line: 191
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 202,
            column: 41
          },
          end: {
            line: 202,
            column: 42
          }
        },
        loc: {
          start: {
            line: 202,
            column: 48
          },
          end: {
            line: 202,
            column: 59
          }
        },
        line: 202
      },
      "37": {
        name: "validateShipment",
        decl: {
          start: {
            line: 213,
            column: 9
          },
          end: {
            line: 213,
            column: 25
          }
        },
        loc: {
          start: {
            line: 213,
            column: 36
          },
          end: {
            line: 234,
            column: 1
          }
        },
        line: 213
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 224,
            column: 41
          },
          end: {
            line: 224,
            column: 42
          }
        },
        loc: {
          start: {
            line: 224,
            column: 48
          },
          end: {
            line: 224,
            column: 59
          }
        },
        line: 224
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 126,
            column: 11
          },
          end: {
            line: 126,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 126,
            column: 11
          },
          end: {
            line: 126,
            column: 38
          }
        }, {
          start: {
            line: 126,
            column: 42
          },
          end: {
            line: 126,
            column: 65
          }
        }],
        line: 126
      },
      "1": {
        loc: {
          start: {
            line: 136,
            column: 4
          },
          end: {
            line: 142,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 4
          },
          end: {
            line: 142,
            column: 5
          }
        }, {
          start: {
            line: 139,
            column: 11
          },
          end: {
            line: 142,
            column: 5
          }
        }],
        line: 136
      },
      "2": {
        loc: {
          start: {
            line: 138,
            column: 15
          },
          end: {
            line: 138,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 138,
            column: 15
          },
          end: {
            line: 138,
            column: 36
          }
        }, {
          start: {
            line: 138,
            column: 40
          },
          end: {
            line: 138,
            column: 62
          }
        }],
        line: 138
      },
      "3": {
        loc: {
          start: {
            line: 139,
            column: 11
          },
          end: {
            line: 142,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 139,
            column: 11
          },
          end: {
            line: 142,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 139
      },
      "4": {
        loc: {
          start: {
            line: 141,
            column: 15
          },
          end: {
            line: 141,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 141,
            column: 15
          },
          end: {
            line: 141,
            column: 37
          }
        }, {
          start: {
            line: 141,
            column: 41
          },
          end: {
            line: 141,
            column: 63
          }
        }],
        line: 141
      },
      "5": {
        loc: {
          start: {
            line: 156,
            column: 11
          },
          end: {
            line: 156,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 156,
            column: 11
          },
          end: {
            line: 156,
            column: 21
          }
        }, {
          start: {
            line: 156,
            column: 25
          },
          end: {
            line: 156,
            column: 34
          }
        }, {
          start: {
            line: 156,
            column: 38
          },
          end: {
            line: 156,
            column: 49
          }
        }, {
          start: {
            line: 156,
            column: 53
          },
          end: {
            line: 156,
            column: 63
          }
        }],
        line: 156
      },
      "6": {
        loc: {
          start: {
            line: 159,
            column: 11
          },
          end: {
            line: 159,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 159,
            column: 11
          },
          end: {
            line: 159,
            column: 21
          }
        }, {
          start: {
            line: 159,
            column: 25
          },
          end: {
            line: 159,
            column: 39
          }
        }],
        line: 159
      },
      "7": {
        loc: {
          start: {
            line: 163,
            column: 11
          },
          end: {
            line: 164,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 163,
            column: 11
          },
          end: {
            line: 163,
            column: 21
          }
        }, {
          start: {
            line: 163,
            column: 25
          },
          end: {
            line: 163,
            column: 38
          }
        }, {
          start: {
            line: 164,
            column: 4
          },
          end: {
            line: 164,
            column: 13
          }
        }, {
          start: {
            line: 164,
            column: 17
          },
          end: {
            line: 164,
            column: 29
          }
        }, {
          start: {
            line: 164,
            column: 33
          },
          end: {
            line: 164,
            column: 43
          }
        }, {
          start: {
            line: 164,
            column: 47
          },
          end: {
            line: 164,
            column: 60
          }
        }],
        line: 163
      },
      "8": {
        loc: {
          start: {
            line: 171,
            column: 11
          },
          end: {
            line: 171,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 171,
            column: 11
          },
          end: {
            line: 171,
            column: 32
          }
        }, {
          start: {
            line: 171,
            column: 36
          },
          end: {
            line: 171,
            column: 59
          }
        }],
        line: 171
      },
      "9": {
        loc: {
          start: {
            line: 174,
            column: 11
          },
          end: {
            line: 174,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 174,
            column: 11
          },
          end: {
            line: 174,
            column: 20
          }
        }, {
          start: {
            line: 174,
            column: 24
          },
          end: {
            line: 174,
            column: 38
          }
        }],
        line: 174
      },
      "10": {
        loc: {
          start: {
            line: 177,
            column: 11
          },
          end: {
            line: 177,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 177,
            column: 11
          },
          end: {
            line: 177,
            column: 21
          }
        }, {
          start: {
            line: 177,
            column: 25
          },
          end: {
            line: 177,
            column: 41
          }
        }],
        line: 177
      },
      "11": {
        loc: {
          start: {
            line: 199,
            column: 8
          },
          end: {
            line: 204,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 199,
            column: 8
          },
          end: {
            line: 204,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 199
      },
      "12": {
        loc: {
          start: {
            line: 221,
            column: 8
          },
          end: {
            line: 226,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 221,
            column: 8
          },
          end: {
            line: 226,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 221
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0, 0],
      "6": [0, 0],
      "7": [0, 0, 0, 0, 0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\utils\\validation.ts"],
      sourcesContent: ["// =====================================================\r\n// UTILIDADES: VALIDACI\xD3N DE DATOS\r\n// Descripci\xF3n: Funciones para validar datos de log\xEDstica\r\n// Basado en: Zod + patrones enterprise\r\n// =====================================================\r\n\r\nimport { z } from 'zod';\r\n\r\n// =====================================================\r\n// SCHEMAS DE VALIDACI\xD3N\r\n// =====================================================\r\n\r\nexport const addressSchema = z.object({\r\n  street: z.string().min(1, 'La calle es requerida'),\r\n  number: z.string().min(1, 'El n\xFAmero es requerido'),\r\n  apartment: z.string().optional(),\r\n  neighborhood: z.string().min(1, 'El barrio es requerido'),\r\n  city: z.string().min(1, 'La ciudad es requerida'),\r\n  state: z.string().min(1, 'La provincia es requerida'),\r\n  postal_code: z.string().min(4, 'El c\xF3digo postal debe tener al menos 4 d\xEDgitos'),\r\n  country: z.string().default('AR'),\r\n  latitude: z.number().optional(),\r\n  longitude: z.number().optional(),\r\n  reference: z.string().optional()\r\n});\r\n\r\nexport const shipmentSchema = z.object({\r\n  tracking_number: z.string().min(1, 'El n\xFAmero de tracking es requerido'),\r\n  courier_id: z.number().min(1, 'El courier es requerido'),\r\n  service_type: z.enum(['standard', 'express', 'next_day', 'same_day']),\r\n  origin_address: addressSchema,\r\n  destination_address: addressSchema,\r\n  package_details: z.object({\r\n    weight: z.number().min(0.1, 'El peso debe ser mayor a 0'),\r\n    dimensions: z.object({\r\n      length: z.number().min(1, 'El largo debe ser mayor a 0'),\r\n      width: z.number().min(1, 'El ancho debe ser mayor a 0'),\r\n      height: z.number().min(1, 'La altura debe ser mayor a 0')\r\n    }),\r\n    declared_value: z.number().min(0, 'El valor declarado debe ser mayor o igual a 0'),\r\n    description: z.string().min(1, 'La descripci\xF3n es requerida')\r\n  }),\r\n  estimated_delivery: z.string().optional(),\r\n  special_instructions: z.string().optional()\r\n});\r\n\r\n// =====================================================\r\n// FUNCIONES DE VALIDACI\xD3N\r\n// =====================================================\r\n\r\nexport function validateEmail(email: string): boolean {\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  return emailRegex.test(email);\r\n}\r\n\r\nexport function validatePhoneNumber(phone: string): boolean {\r\n  // Formato argentino: +54 9 351 123 4567, +54 351 123-4567, 351 123 4567, etc.\r\n  // Limpiar el tel\xE9fono de espacios, guiones y par\xE9ntesis\r\n  const cleanPhone = phone.replace(/[\\s\\-\\(\\)]/g, '');\r\n\r\n  // Patrones aceptados:\r\n  // +54351234567 (con c\xF3digo pa\xEDs)\r\n  // +549351234567 (con c\xF3digo pa\xEDs y 9)\r\n  // 351234567 (sin c\xF3digo pa\xEDs)\r\n  const phoneRegex = /^(\\+54(9)?)?\\d{10}$|^\\d{10}$/;\r\n\r\n  return phoneRegex.test(cleanPhone) && cleanPhone.length >= 10;\r\n}\r\n\r\nexport function validateDNI(dni: string): boolean {\r\n  // Limpiar el DNI de espacios, guiones y puntos\r\n  const cleanDNI = dni.replace(/[\\s\\-\\.]/g, '');\r\n\r\n  // Patrones aceptados:\r\n  // DNI: 8 d\xEDgitos (12345678)\r\n  // CUIT: 11 d\xEDgitos (20123456789)\r\n  const dniRegex = /^\\d{8}$/;\r\n  const cuitRegex = /^\\d{11}$/;\r\n\r\n  if (dniRegex.test(cleanDNI)) {\r\n    // Validar DNI (8 d\xEDgitos)\r\n    return cleanDNI.length === 8 && parseInt(cleanDNI) > 0;\r\n  } else if (cuitRegex.test(cleanDNI)) {\r\n    // Validar CUIT (11 d\xEDgitos) - validaci\xF3n b\xE1sica\r\n    return cleanDNI.length === 11 && parseInt(cleanDNI) > 0;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nexport function validatePostalCode(postalCode: string): boolean {\r\n  // C\xF3digo postal argentino: 4 d\xEDgitos\r\n  const postalCodeRegex = /^\\d{4}$/;\r\n  return postalCodeRegex.test(postalCode);\r\n}\r\n\r\nexport function validateTrackingNumber(trackingNumber: string): boolean {\r\n  // Formato general: al menos 6 caracteres alfanum\xE9ricos\r\n  const trackingRegex = /^[A-Z0-9]{6,}$/i;\r\n  return trackingRegex.test(trackingNumber);\r\n}\r\n\r\nexport function validateCoordinates(lat: number, lng: number): boolean {\r\n  return (\r\n    lat >= -90 && lat <= 90 &&\r\n    lng >= -180 && lng <= 180\r\n  );\r\n}\r\n\r\nexport function validateWeight(weight: number): boolean {\r\n  return weight > 0 && weight <= 1000; // M\xE1ximo 1000kg\r\n}\r\n\r\nexport function validateDimensions(dimensions: {\r\n  length: number;\r\n  width: number;\r\n  height: number;\r\n}): boolean {\r\n  const { length, width, height } = dimensions;\r\n  return (\r\n    length > 0 && length <= 200 && // M\xE1ximo 200cm\r\n    width > 0 && width <= 200 &&\r\n    height > 0 && height <= 200\r\n  );\r\n}\r\n\r\n// =====================================================\r\n// VALIDACIONES DE NEGOCIO\r\n// =====================================================\r\n\r\nexport function validateDeliveryDate(date: string): boolean {\r\n  const deliveryDate = new Date(date);\r\n  const today = new Date();\r\n  const maxDate = new Date();\r\n  maxDate.setDate(today.getDate() + 30); // M\xE1ximo 30 d\xEDas\r\n  \r\n  return deliveryDate >= today && deliveryDate <= maxDate;\r\n}\r\n\r\nexport function validateShippingCost(cost: number): boolean {\r\n  return cost >= 0 && cost <= 100000; // M\xE1ximo $100,000\r\n}\r\n\r\nexport function validatePackageValue(value: number): boolean {\r\n  return value >= 0 && value <= 1000000; // M\xE1ximo $1,000,000\r\n}\r\n\r\n// =====================================================\r\n// SANITIZACI\xD3N DE DATOS\r\n// =====================================================\r\n\r\nexport function sanitizeString(input: string): string {\r\n  return input.trim().replace(/[<>]/g, '');\r\n}\r\n\r\nexport function sanitizePhoneNumber(phone: string): string {\r\n  return phone.replace(/\\D/g, '');\r\n}\r\n\r\nexport function sanitizePostalCode(postalCode: string): string {\r\n  return postalCode.replace(/\\D/g, '').substring(0, 4);\r\n}\r\n\r\nexport function sanitizeTrackingNumber(trackingNumber: string): string {\r\n  return trackingNumber.toUpperCase().replace(/[^A-Z0-9]/g, '');\r\n}\r\n\r\n// =====================================================\r\n// TIPOS DE VALIDACI\xD3N\r\n// =====================================================\r\n\r\nexport type ValidationResult = {\r\n  isValid: boolean;\r\n  errors: string[];\r\n};\r\n\r\nexport function validateAddress(address: any): ValidationResult {\r\n  try {\r\n    addressSchema.parse(address);\r\n    return { isValid: true, errors: [] };\r\n  } catch (error) {\r\n    if (error instanceof z.ZodError) {\r\n      return {\r\n        isValid: false,\r\n        errors: error.errors.map(err => err.message)\r\n      };\r\n    }\r\n    return { isValid: false, errors: ['Error de validaci\xF3n desconocido'] };\r\n  }\r\n}\r\n\r\nexport function validateShipment(shipment: any): ValidationResult {\r\n  try {\r\n    shipmentSchema.parse(shipment);\r\n    return { isValid: true, errors: [] };\r\n  } catch (error) {\r\n    if (error instanceof z.ZodError) {\r\n      return {\r\n        isValid: false,\r\n        errors: error.errors.map(err => err.message)\r\n      };\r\n    }\r\n    return { isValid: false, errors: ['Error de validaci\xF3n desconocido'] };\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["addressSchema", "sanitizePhoneNumber", "sanitizePostalCode", "sanitizeString", "sanitizeTrackingNumber", "shipmentSchema", "validateAddress", "validateCoordinates", "validateDNI", "validateDeliveryDate", "validateDimensions", "validateEmail", "validatePackageValue", "validatePhoneNumber", "validatePostalCode", "validateShipment", "validateShippingCost", "validateTrackingNumber", "validateWeight", "z", "object", "street", "string", "min", "number", "apartment", "optional", "neighborhood", "city", "state", "postal_code", "country", "default", "latitude", "longitude", "reference", "tracking_number", "courier_id", "service_type", "enum", "origin_address", "destination_address", "package_details", "weight", "dimensions", "length", "width", "height", "declared_value", "description", "estimated_delivery", "special_instructions", "email", "emailRegex", "test", "phone", "cleanPhone", "replace", "phoneRegex", "dni", "cleanDNI", "dniRegex", "cuitRegex", "parseInt", "postalCode", "postalCodeRegex", "trackingNumber", "trackingRegex", "lat", "lng", "date", "deliveryDate", "Date", "today", "maxDate", "setDate", "getDate", "cost", "value", "input", "trim", "substring", "toUpperCase", "address", "parse", "isValid", "errors", "error", "ZodError", "map", "err", "message", "shipment"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d2fd4449c34ae85aa57505bfdcc38881bedf873e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2cs5dl9xec = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2cs5dl9xec();
cov_2cs5dl9xec().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2cs5dl9xec().f[0]++;
  cov_2cs5dl9xec().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2cs5dl9xec().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_2cs5dl9xec().s[3]++;
_export(exports, {
  get addressSchema() {
    /* istanbul ignore next */
    cov_2cs5dl9xec().f[1]++;
    cov_2cs5dl9xec().s[4]++;
    return addressSchema;
  },
  get sanitizePhoneNumber() {
    /* istanbul ignore next */
    cov_2cs5dl9xec().f[2]++;
    cov_2cs5dl9xec().s[5]++;
    return sanitizePhoneNumber;
  },
  get sanitizePostalCode() {
    /* istanbul ignore next */
    cov_2cs5dl9xec().f[3]++;
    cov_2cs5dl9xec().s[6]++;
    return sanitizePostalCode;
  },
  get sanitizeString() {
    /* istanbul ignore next */
    cov_2cs5dl9xec().f[4]++;
    cov_2cs5dl9xec().s[7]++;
    return sanitizeString;
  },
  get sanitizeTrackingNumber() {
    /* istanbul ignore next */
    cov_2cs5dl9xec().f[5]++;
    cov_2cs5dl9xec().s[8]++;
    return sanitizeTrackingNumber;
  },
  get shipmentSchema() {
    /* istanbul ignore next */
    cov_2cs5dl9xec().f[6]++;
    cov_2cs5dl9xec().s[9]++;
    return shipmentSchema;
  },
  get validateAddress() {
    /* istanbul ignore next */
    cov_2cs5dl9xec().f[7]++;
    cov_2cs5dl9xec().s[10]++;
    return validateAddress;
  },
  get validateCoordinates() {
    /* istanbul ignore next */
    cov_2cs5dl9xec().f[8]++;
    cov_2cs5dl9xec().s[11]++;
    return validateCoordinates;
  },
  get validateDNI() {
    /* istanbul ignore next */
    cov_2cs5dl9xec().f[9]++;
    cov_2cs5dl9xec().s[12]++;
    return validateDNI;
  },
  get validateDeliveryDate() {
    /* istanbul ignore next */
    cov_2cs5dl9xec().f[10]++;
    cov_2cs5dl9xec().s[13]++;
    return validateDeliveryDate;
  },
  get validateDimensions() {
    /* istanbul ignore next */
    cov_2cs5dl9xec().f[11]++;
    cov_2cs5dl9xec().s[14]++;
    return validateDimensions;
  },
  get validateEmail() {
    /* istanbul ignore next */
    cov_2cs5dl9xec().f[12]++;
    cov_2cs5dl9xec().s[15]++;
    return validateEmail;
  },
  get validatePackageValue() {
    /* istanbul ignore next */
    cov_2cs5dl9xec().f[13]++;
    cov_2cs5dl9xec().s[16]++;
    return validatePackageValue;
  },
  get validatePhoneNumber() {
    /* istanbul ignore next */
    cov_2cs5dl9xec().f[14]++;
    cov_2cs5dl9xec().s[17]++;
    return validatePhoneNumber;
  },
  get validatePostalCode() {
    /* istanbul ignore next */
    cov_2cs5dl9xec().f[15]++;
    cov_2cs5dl9xec().s[18]++;
    return validatePostalCode;
  },
  get validateShipment() {
    /* istanbul ignore next */
    cov_2cs5dl9xec().f[16]++;
    cov_2cs5dl9xec().s[19]++;
    return validateShipment;
  },
  get validateShippingCost() {
    /* istanbul ignore next */
    cov_2cs5dl9xec().f[17]++;
    cov_2cs5dl9xec().s[20]++;
    return validateShippingCost;
  },
  get validateTrackingNumber() {
    /* istanbul ignore next */
    cov_2cs5dl9xec().f[18]++;
    cov_2cs5dl9xec().s[21]++;
    return validateTrackingNumber;
  },
  get validateWeight() {
    /* istanbul ignore next */
    cov_2cs5dl9xec().f[19]++;
    cov_2cs5dl9xec().s[22]++;
    return validateWeight;
  }
});
const _zod =
/* istanbul ignore next */
(cov_2cs5dl9xec().s[23]++, require("zod"));
const addressSchema =
/* istanbul ignore next */
(cov_2cs5dl9xec().s[24]++, _zod.z.object({
  street: _zod.z.string().min(1, 'La calle es requerida'),
  number: _zod.z.string().min(1, 'El número es requerido'),
  apartment: _zod.z.string().optional(),
  neighborhood: _zod.z.string().min(1, 'El barrio es requerido'),
  city: _zod.z.string().min(1, 'La ciudad es requerida'),
  state: _zod.z.string().min(1, 'La provincia es requerida'),
  postal_code: _zod.z.string().min(4, 'El código postal debe tener al menos 4 dígitos'),
  country: _zod.z.string().default('AR'),
  latitude: _zod.z.number().optional(),
  longitude: _zod.z.number().optional(),
  reference: _zod.z.string().optional()
}));
const shipmentSchema =
/* istanbul ignore next */
(cov_2cs5dl9xec().s[25]++, _zod.z.object({
  tracking_number: _zod.z.string().min(1, 'El número de tracking es requerido'),
  courier_id: _zod.z.number().min(1, 'El courier es requerido'),
  service_type: _zod.z.enum(['standard', 'express', 'next_day', 'same_day']),
  origin_address: addressSchema,
  destination_address: addressSchema,
  package_details: _zod.z.object({
    weight: _zod.z.number().min(0.1, 'El peso debe ser mayor a 0'),
    dimensions: _zod.z.object({
      length: _zod.z.number().min(1, 'El largo debe ser mayor a 0'),
      width: _zod.z.number().min(1, 'El ancho debe ser mayor a 0'),
      height: _zod.z.number().min(1, 'La altura debe ser mayor a 0')
    }),
    declared_value: _zod.z.number().min(0, 'El valor declarado debe ser mayor o igual a 0'),
    description: _zod.z.string().min(1, 'La descripción es requerida')
  }),
  estimated_delivery: _zod.z.string().optional(),
  special_instructions: _zod.z.string().optional()
}));
function validateEmail(email) {
  /* istanbul ignore next */
  cov_2cs5dl9xec().f[20]++;
  const emailRegex =
  /* istanbul ignore next */
  (cov_2cs5dl9xec().s[26]++, /^[^\s@]+@[^\s@]+\.[^\s@]+$/);
  /* istanbul ignore next */
  cov_2cs5dl9xec().s[27]++;
  return emailRegex.test(email);
}
function validatePhoneNumber(phone) {
  /* istanbul ignore next */
  cov_2cs5dl9xec().f[21]++;
  // Formato argentino: +54 9 351 123 4567, +54 351 123-4567, 351 123 4567, etc.
  // Limpiar el teléfono de espacios, guiones y paréntesis
  const cleanPhone =
  /* istanbul ignore next */
  (cov_2cs5dl9xec().s[28]++, phone.replace(/[\s\-\(\)]/g, ''));
  // Patrones aceptados:
  // +54351234567 (con código país)
  // +549351234567 (con código país y 9)
  // 351234567 (sin código país)
  const phoneRegex =
  /* istanbul ignore next */
  (cov_2cs5dl9xec().s[29]++, /^(\+54(9)?)?\d{10}$|^\d{10}$/);
  /* istanbul ignore next */
  cov_2cs5dl9xec().s[30]++;
  return /* istanbul ignore next */(cov_2cs5dl9xec().b[0][0]++, phoneRegex.test(cleanPhone)) &&
  /* istanbul ignore next */
  (cov_2cs5dl9xec().b[0][1]++, cleanPhone.length >= 10);
}
function validateDNI(dni) {
  /* istanbul ignore next */
  cov_2cs5dl9xec().f[22]++;
  // Limpiar el DNI de espacios, guiones y puntos
  const cleanDNI =
  /* istanbul ignore next */
  (cov_2cs5dl9xec().s[31]++, dni.replace(/[\s\-\.]/g, ''));
  // Patrones aceptados:
  // DNI: 8 dígitos (12345678)
  // CUIT: 11 dígitos (20123456789)
  const dniRegex =
  /* istanbul ignore next */
  (cov_2cs5dl9xec().s[32]++, /^\d{8}$/);
  const cuitRegex =
  /* istanbul ignore next */
  (cov_2cs5dl9xec().s[33]++, /^\d{11}$/);
  /* istanbul ignore next */
  cov_2cs5dl9xec().s[34]++;
  if (dniRegex.test(cleanDNI)) {
    /* istanbul ignore next */
    cov_2cs5dl9xec().b[1][0]++;
    cov_2cs5dl9xec().s[35]++;
    // Validar DNI (8 dígitos)
    return /* istanbul ignore next */(cov_2cs5dl9xec().b[2][0]++, cleanDNI.length === 8) &&
    /* istanbul ignore next */
    (cov_2cs5dl9xec().b[2][1]++, parseInt(cleanDNI) > 0);
  } else {
    /* istanbul ignore next */
    cov_2cs5dl9xec().b[1][1]++;
    cov_2cs5dl9xec().s[36]++;
    if (cuitRegex.test(cleanDNI)) {
      /* istanbul ignore next */
      cov_2cs5dl9xec().b[3][0]++;
      cov_2cs5dl9xec().s[37]++;
      // Validar CUIT (11 dígitos) - validación básica
      return /* istanbul ignore next */(cov_2cs5dl9xec().b[4][0]++, cleanDNI.length === 11) &&
      /* istanbul ignore next */
      (cov_2cs5dl9xec().b[4][1]++, parseInt(cleanDNI) > 0);
    } else
    /* istanbul ignore next */
    {
      cov_2cs5dl9xec().b[3][1]++;
    }
  }
  /* istanbul ignore next */
  cov_2cs5dl9xec().s[38]++;
  return false;
}
function validatePostalCode(postalCode) {
  /* istanbul ignore next */
  cov_2cs5dl9xec().f[23]++;
  // Código postal argentino: 4 dígitos
  const postalCodeRegex =
  /* istanbul ignore next */
  (cov_2cs5dl9xec().s[39]++, /^\d{4}$/);
  /* istanbul ignore next */
  cov_2cs5dl9xec().s[40]++;
  return postalCodeRegex.test(postalCode);
}
function validateTrackingNumber(trackingNumber) {
  /* istanbul ignore next */
  cov_2cs5dl9xec().f[24]++;
  // Formato general: al menos 6 caracteres alfanuméricos
  const trackingRegex =
  /* istanbul ignore next */
  (cov_2cs5dl9xec().s[41]++, /^[A-Z0-9]{6,}$/i);
  /* istanbul ignore next */
  cov_2cs5dl9xec().s[42]++;
  return trackingRegex.test(trackingNumber);
}
function validateCoordinates(lat, lng) {
  /* istanbul ignore next */
  cov_2cs5dl9xec().f[25]++;
  cov_2cs5dl9xec().s[43]++;
  return /* istanbul ignore next */(cov_2cs5dl9xec().b[5][0]++, lat >= -90) &&
  /* istanbul ignore next */
  (cov_2cs5dl9xec().b[5][1]++, lat <= 90) &&
  /* istanbul ignore next */
  (cov_2cs5dl9xec().b[5][2]++, lng >= -180) &&
  /* istanbul ignore next */
  (cov_2cs5dl9xec().b[5][3]++, lng <= 180);
}
function validateWeight(weight) {
  /* istanbul ignore next */
  cov_2cs5dl9xec().f[26]++;
  cov_2cs5dl9xec().s[44]++;
  return /* istanbul ignore next */(cov_2cs5dl9xec().b[6][0]++, weight > 0) &&
  /* istanbul ignore next */
  (cov_2cs5dl9xec().b[6][1]++, weight <= 1000); // Máximo 1000kg
}
function validateDimensions(dimensions) {
  /* istanbul ignore next */
  cov_2cs5dl9xec().f[27]++;
  const {
    length,
    width,
    height
  } =
  /* istanbul ignore next */
  (cov_2cs5dl9xec().s[45]++, dimensions);
  /* istanbul ignore next */
  cov_2cs5dl9xec().s[46]++;
  return /* istanbul ignore next */(cov_2cs5dl9xec().b[7][0]++, length > 0) &&
  /* istanbul ignore next */
  (cov_2cs5dl9xec().b[7][1]++, length <= 200) &&
  /* istanbul ignore next */
  (cov_2cs5dl9xec().b[7][2]++,
  // Máximo 200cm
  width > 0) &&
  /* istanbul ignore next */
  (cov_2cs5dl9xec().b[7][3]++, width <= 200) &&
  /* istanbul ignore next */
  (cov_2cs5dl9xec().b[7][4]++, height > 0) &&
  /* istanbul ignore next */
  (cov_2cs5dl9xec().b[7][5]++, height <= 200);
}
function validateDeliveryDate(date) {
  /* istanbul ignore next */
  cov_2cs5dl9xec().f[28]++;
  const deliveryDate =
  /* istanbul ignore next */
  (cov_2cs5dl9xec().s[47]++, new Date(date));
  const today =
  /* istanbul ignore next */
  (cov_2cs5dl9xec().s[48]++, new Date());
  const maxDate =
  /* istanbul ignore next */
  (cov_2cs5dl9xec().s[49]++, new Date());
  /* istanbul ignore next */
  cov_2cs5dl9xec().s[50]++;
  maxDate.setDate(today.getDate() + 30); // Máximo 30 días
  /* istanbul ignore next */
  cov_2cs5dl9xec().s[51]++;
  return /* istanbul ignore next */(cov_2cs5dl9xec().b[8][0]++, deliveryDate >= today) &&
  /* istanbul ignore next */
  (cov_2cs5dl9xec().b[8][1]++, deliveryDate <= maxDate);
}
function validateShippingCost(cost) {
  /* istanbul ignore next */
  cov_2cs5dl9xec().f[29]++;
  cov_2cs5dl9xec().s[52]++;
  return /* istanbul ignore next */(cov_2cs5dl9xec().b[9][0]++, cost >= 0) &&
  /* istanbul ignore next */
  (cov_2cs5dl9xec().b[9][1]++, cost <= 100000); // Máximo $100,000
}
function validatePackageValue(value) {
  /* istanbul ignore next */
  cov_2cs5dl9xec().f[30]++;
  cov_2cs5dl9xec().s[53]++;
  return /* istanbul ignore next */(cov_2cs5dl9xec().b[10][0]++, value >= 0) &&
  /* istanbul ignore next */
  (cov_2cs5dl9xec().b[10][1]++, value <= 1000000); // Máximo $1,000,000
}
function sanitizeString(input) {
  /* istanbul ignore next */
  cov_2cs5dl9xec().f[31]++;
  cov_2cs5dl9xec().s[54]++;
  return input.trim().replace(/[<>]/g, '');
}
function sanitizePhoneNumber(phone) {
  /* istanbul ignore next */
  cov_2cs5dl9xec().f[32]++;
  cov_2cs5dl9xec().s[55]++;
  return phone.replace(/\D/g, '');
}
function sanitizePostalCode(postalCode) {
  /* istanbul ignore next */
  cov_2cs5dl9xec().f[33]++;
  cov_2cs5dl9xec().s[56]++;
  return postalCode.replace(/\D/g, '').substring(0, 4);
}
function sanitizeTrackingNumber(trackingNumber) {
  /* istanbul ignore next */
  cov_2cs5dl9xec().f[34]++;
  cov_2cs5dl9xec().s[57]++;
  return trackingNumber.toUpperCase().replace(/[^A-Z0-9]/g, '');
}
function validateAddress(address) {
  /* istanbul ignore next */
  cov_2cs5dl9xec().f[35]++;
  cov_2cs5dl9xec().s[58]++;
  try {
    /* istanbul ignore next */
    cov_2cs5dl9xec().s[59]++;
    addressSchema.parse(address);
    /* istanbul ignore next */
    cov_2cs5dl9xec().s[60]++;
    return {
      isValid: true,
      errors: []
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_2cs5dl9xec().s[61]++;
    if (error instanceof _zod.z.ZodError) {
      /* istanbul ignore next */
      cov_2cs5dl9xec().b[11][0]++;
      cov_2cs5dl9xec().s[62]++;
      return {
        isValid: false,
        errors: error.errors.map(err => {
          /* istanbul ignore next */
          cov_2cs5dl9xec().f[36]++;
          cov_2cs5dl9xec().s[63]++;
          return err.message;
        })
      };
    } else
    /* istanbul ignore next */
    {
      cov_2cs5dl9xec().b[11][1]++;
    }
    cov_2cs5dl9xec().s[64]++;
    return {
      isValid: false,
      errors: ['Error de validación desconocido']
    };
  }
}
function validateShipment(shipment) {
  /* istanbul ignore next */
  cov_2cs5dl9xec().f[37]++;
  cov_2cs5dl9xec().s[65]++;
  try {
    /* istanbul ignore next */
    cov_2cs5dl9xec().s[66]++;
    shipmentSchema.parse(shipment);
    /* istanbul ignore next */
    cov_2cs5dl9xec().s[67]++;
    return {
      isValid: true,
      errors: []
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_2cs5dl9xec().s[68]++;
    if (error instanceof _zod.z.ZodError) {
      /* istanbul ignore next */
      cov_2cs5dl9xec().b[12][0]++;
      cov_2cs5dl9xec().s[69]++;
      return {
        isValid: false,
        errors: error.errors.map(err => {
          /* istanbul ignore next */
          cov_2cs5dl9xec().f[38]++;
          cov_2cs5dl9xec().s[70]++;
          return err.message;
        })
      };
    } else
    /* istanbul ignore next */
    {
      cov_2cs5dl9xec().b[12][1]++;
    }
    cov_2cs5dl9xec().s[71]++;
    return {
      isValid: false,
      errors: ['Error de validación desconocido']
    };
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,