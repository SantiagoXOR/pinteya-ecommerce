{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\__tests__\\config\\timeouts.test.ts"],"sourcesContent":["// ===================================\r\n// TESTS - TIMEOUT CONFIGURATION\r\n// ===================================\r\n\r\nimport { \r\n  EXTERNAL_API_TIMEOUTS,\r\n  DATABASE_TIMEOUTS,\r\n  CACHE_TIMEOUTS,\r\n  INTERNAL_API_TIMEOUTS,\r\n  COMMON_TIMEOUTS,\r\n  TimeoutUtils,\r\n  RETRY_CONFIG\r\n} from '@/config/timeouts';\r\n\r\ndescribe('Timeout Configuration', () => {\r\n  describe('EXTERNAL_API_TIMEOUTS', () => {\r\n    it('should have all MercadoPago timeouts defined', () => {\r\n      expect(EXTERNAL_API_TIMEOUTS.MERCADOPAGO).toBeDefined();\r\n      expect(EXTERNAL_API_TIMEOUTS.MERCADOPAGO.PAYMENT_CREATION).toBe(15000);\r\n      expect(EXTERNAL_API_TIMEOUTS.MERCADOPAGO.PAYMENT_STATUS).toBe(10000);\r\n      expect(EXTERNAL_API_TIMEOUTS.MERCADOPAGO.WEBHOOK_PROCESSING).toBe(5000);\r\n      expect(EXTERNAL_API_TIMEOUTS.MERCADOPAGO.PREFERENCE_CREATION).toBe(12000);\r\n      expect(EXTERNAL_API_TIMEOUTS.MERCADOPAGO.REFUND_PROCESSING).toBe(20000);\r\n    });\r\n\r\n    it('should have reasonable timeout values', () => {\r\n      // Todos los timeouts deberían ser números positivos\r\n      Object.values(EXTERNAL_API_TIMEOUTS.MERCADOPAGO).forEach(timeout => {\r\n        expect(typeof timeout).toBe('number');\r\n        expect(timeout).toBeGreaterThan(0);\r\n        expect(timeout).toBeLessThanOrEqual(30000); // Máximo 30 segundos\r\n      });\r\n    });\r\n\r\n    it('should have third party timeouts', () => {\r\n      expect(EXTERNAL_API_TIMEOUTS.THIRD_PARTY.DEFAULT).toBe(10000);\r\n      expect(EXTERNAL_API_TIMEOUTS.THIRD_PARTY.SLOW_OPERATIONS).toBe(30000);\r\n      expect(EXTERNAL_API_TIMEOUTS.THIRD_PARTY.FAST_OPERATIONS).toBe(5000);\r\n    });\r\n  });\r\n\r\n  describe('DATABASE_TIMEOUTS', () => {\r\n    it('should have read operation timeouts', () => {\r\n      expect(DATABASE_TIMEOUTS.READ.SIMPLE_QUERY).toBe(5000);\r\n      expect(DATABASE_TIMEOUTS.READ.COMPLEX_QUERY).toBe(15000);\r\n      expect(DATABASE_TIMEOUTS.READ.AGGREGATION).toBe(20000);\r\n      expect(DATABASE_TIMEOUTS.READ.SEARCH).toBe(10000);\r\n    });\r\n\r\n    it('should have write operation timeouts', () => {\r\n      expect(DATABASE_TIMEOUTS.WRITE.INSERT).toBe(8000);\r\n      expect(DATABASE_TIMEOUTS.WRITE.UPDATE).toBe(10000);\r\n      expect(DATABASE_TIMEOUTS.WRITE.DELETE).toBe(12000);\r\n      expect(DATABASE_TIMEOUTS.WRITE.BULK_OPERATIONS).toBe(30000);\r\n    });\r\n\r\n    it('should have transaction timeouts', () => {\r\n      expect(DATABASE_TIMEOUTS.TRANSACTION.SIMPLE).toBe(15000);\r\n      expect(DATABASE_TIMEOUTS.TRANSACTION.COMPLEX).toBe(30000);\r\n      expect(DATABASE_TIMEOUTS.TRANSACTION.MIGRATION).toBe(60000);\r\n    });\r\n\r\n    it('should have connection timeouts', () => {\r\n      expect(DATABASE_TIMEOUTS.CONNECTION.ACQUIRE).toBe(5000);\r\n      expect(DATABASE_TIMEOUTS.CONNECTION.IDLE_TIMEOUT).toBe(300000);\r\n      expect(DATABASE_TIMEOUTS.CONNECTION.LIFETIME).toBe(1800000);\r\n    });\r\n  });\r\n\r\n  describe('CACHE_TIMEOUTS', () => {\r\n    it('should have Redis timeouts', () => {\r\n      expect(CACHE_TIMEOUTS.REDIS.CONNECT).toBe(5000);\r\n      expect(CACHE_TIMEOUTS.REDIS.COMMAND).toBe(3000);\r\n      expect(CACHE_TIMEOUTS.REDIS.PIPELINE).toBe(10000);\r\n    });\r\n\r\n    it('should have memory cache timeouts', () => {\r\n      expect(CACHE_TIMEOUTS.MEMORY.OPERATION).toBe(1000);\r\n      expect(CACHE_TIMEOUTS.MEMORY.CLEANUP).toBe(5000);\r\n    });\r\n\r\n    it('should have CDN timeouts', () => {\r\n      expect(CACHE_TIMEOUTS.CDN.PURGE).toBe(30000);\r\n      expect(CACHE_TIMEOUTS.CDN.UPLOAD).toBe(60000);\r\n    });\r\n  });\r\n\r\n  describe('INTERNAL_API_TIMEOUTS', () => {\r\n    it('should have product API timeouts', () => {\r\n      expect(INTERNAL_API_TIMEOUTS.PRODUCTS.LIST).toBe(8000);\r\n      expect(INTERNAL_API_TIMEOUTS.PRODUCTS.DETAIL).toBe(5000);\r\n      expect(INTERNAL_API_TIMEOUTS.PRODUCTS.SEARCH).toBe(10000);\r\n      expect(INTERNAL_API_TIMEOUTS.PRODUCTS.CREATE).toBe(12000);\r\n      expect(INTERNAL_API_TIMEOUTS.PRODUCTS.UPDATE).toBe(10000);\r\n      expect(INTERNAL_API_TIMEOUTS.PRODUCTS.DELETE).toBe(8000);\r\n    });\r\n\r\n    it('should have user API timeouts', () => {\r\n      expect(INTERNAL_API_TIMEOUTS.USERS.AUTHENTICATION).toBe(8000);\r\n      expect(INTERNAL_API_TIMEOUTS.USERS.PROFILE).toBe(5000);\r\n      expect(INTERNAL_API_TIMEOUTS.USERS.UPDATE_PROFILE).toBe(10000);\r\n      expect(INTERNAL_API_TIMEOUTS.USERS.PASSWORD_RESET).toBe(15000);\r\n    });\r\n\r\n    it('should have cart API timeouts', () => {\r\n      expect(INTERNAL_API_TIMEOUTS.CART.ADD_ITEM).toBe(5000);\r\n      expect(INTERNAL_API_TIMEOUTS.CART.REMOVE_ITEM).toBe(3000);\r\n      expect(INTERNAL_API_TIMEOUTS.CART.UPDATE_QUANTITY).toBe(4000);\r\n      expect(INTERNAL_API_TIMEOUTS.CART.CLEAR).toBe(3000);\r\n      expect(INTERNAL_API_TIMEOUTS.CART.CHECKOUT).toBe(20000);\r\n    });\r\n  });\r\n\r\n  describe('COMMON_TIMEOUTS', () => {\r\n    it('should have predefined common timeouts', () => {\r\n      expect(COMMON_TIMEOUTS.VERY_SHORT).toBeGreaterThan(0);\r\n      expect(COMMON_TIMEOUTS.SHORT).toBeGreaterThan(COMMON_TIMEOUTS.VERY_SHORT);\r\n      expect(COMMON_TIMEOUTS.MEDIUM).toBeGreaterThan(COMMON_TIMEOUTS.SHORT);\r\n      expect(COMMON_TIMEOUTS.LONG).toBeGreaterThan(COMMON_TIMEOUTS.MEDIUM);\r\n      expect(COMMON_TIMEOUTS.VERY_LONG).toBeGreaterThan(COMMON_TIMEOUTS.LONG);\r\n    });\r\n  });\r\n\r\n  describe('RETRY_CONFIG', () => {\r\n    it('should have default retry configuration', () => {\r\n      expect(RETRY_CONFIG.DEFAULT.maxRetries).toBe(3);\r\n      expect(RETRY_CONFIG.DEFAULT.baseDelay).toBe(1000);\r\n      expect(RETRY_CONFIG.DEFAULT.maxDelay).toBe(10000);\r\n      expect(RETRY_CONFIG.DEFAULT.backoffMultiplier).toBe(2);\r\n    });\r\n\r\n    it('should have critical retry configuration', () => {\r\n      expect(RETRY_CONFIG.CRITICAL.maxRetries).toBe(5);\r\n      expect(RETRY_CONFIG.CRITICAL.baseDelay).toBe(500);\r\n      expect(RETRY_CONFIG.CRITICAL.maxDelay).toBe(5000);\r\n      expect(RETRY_CONFIG.CRITICAL.backoffMultiplier).toBe(1.5);\r\n    });\r\n\r\n    it('should have non-critical retry configuration', () => {\r\n      expect(RETRY_CONFIG.NON_CRITICAL.maxRetries).toBe(2);\r\n      expect(RETRY_CONFIG.NON_CRITICAL.baseDelay).toBe(2000);\r\n      expect(RETRY_CONFIG.NON_CRITICAL.maxDelay).toBe(15000);\r\n      expect(RETRY_CONFIG.NON_CRITICAL.backoffMultiplier).toBe(3);\r\n    });\r\n  });\r\n});\r\n\r\ndescribe('TimeoutUtils', () => {\r\n  // Mock NODE_ENV para tests\r\n  const originalEnv = process.env.NODE_ENV;\r\n\r\n  afterEach(() => {\r\n    process.env.NODE_ENV = originalEnv;\r\n  });\r\n\r\n  describe('getEnvironmentTimeout', () => {\r\n    it('should apply development multiplier', () => {\r\n      process.env.NODE_ENV = 'development';\r\n      const baseTimeout = 1000;\r\n      const adjustedTimeout = TimeoutUtils.getEnvironmentTimeout(baseTimeout);\r\n      \r\n      // En desarrollo debería ser 2x (multiplier: 2)\r\n      expect(adjustedTimeout).toBe(2000);\r\n    });\r\n\r\n    it('should apply staging multiplier', () => {\r\n      process.env.NODE_ENV = 'staging';\r\n      const baseTimeout = 1000;\r\n      const adjustedTimeout = TimeoutUtils.getEnvironmentTimeout(baseTimeout);\r\n      \r\n      // En staging debería ser 1.5x (multiplier: 1.5)\r\n      expect(adjustedTimeout).toBe(1500);\r\n    });\r\n\r\n    it('should apply production multiplier', () => {\r\n      process.env.NODE_ENV = 'production';\r\n      const baseTimeout = 1000;\r\n      const adjustedTimeout = TimeoutUtils.getEnvironmentTimeout(baseTimeout);\r\n      \r\n      // En producción debería ser 1x (multiplier: 1)\r\n      expect(adjustedTimeout).toBe(1000);\r\n    });\r\n\r\n    it('should respect maximum timeout limits', () => {\r\n      process.env.NODE_ENV = 'development';\r\n      const baseTimeout = 50000; // 50 segundos\r\n      const adjustedTimeout = TimeoutUtils.getEnvironmentTimeout(baseTimeout);\r\n      \r\n      // No debería exceder el máximo de desarrollo (60000ms)\r\n      expect(adjustedTimeout).toBeLessThanOrEqual(60000);\r\n    });\r\n\r\n    it('should default to development for unknown environments', () => {\r\n      process.env.NODE_ENV = 'unknown';\r\n      const baseTimeout = 1000;\r\n      const adjustedTimeout = TimeoutUtils.getEnvironmentTimeout(baseTimeout);\r\n      \r\n      // Debería usar configuración de desarrollo por defecto\r\n      expect(adjustedTimeout).toBe(2000);\r\n    });\r\n  });\r\n\r\n  describe('createTimeoutController', () => {\r\n    it('should create AbortController that aborts after timeout', (done) => {\r\n      const timeout = 100; // 100ms\r\n      const controller = TimeoutUtils.createTimeoutController(timeout);\r\n      \r\n      expect(controller.signal.aborted).toBe(false);\r\n      \r\n      setTimeout(() => {\r\n        expect(controller.signal.aborted).toBe(true);\r\n        done();\r\n      }, timeout + 10);\r\n    });\r\n\r\n    it('should allow manual abort before timeout', () => {\r\n      const timeout = 1000; // 1 segundo\r\n      const controller = TimeoutUtils.createTimeoutController(timeout);\r\n      \r\n      expect(controller.signal.aborted).toBe(false);\r\n      \r\n      controller.abort();\r\n      expect(controller.signal.aborted).toBe(true);\r\n    });\r\n  });\r\n\r\n  describe('withTimeout', () => {\r\n    it('should resolve when promise completes before timeout', async () => {\r\n      const fastPromise = new Promise(resolve => {\r\n        setTimeout(() => resolve('success'), 50);\r\n      });\r\n      \r\n      const result = await TimeoutUtils.withTimeout(fastPromise, 100);\r\n      expect(result).toBe('success');\r\n    });\r\n\r\n    it('should reject when promise takes longer than timeout', async () => {\r\n      const slowPromise = new Promise(resolve => {\r\n        setTimeout(() => resolve('success'), 200);\r\n      });\r\n      \r\n      await expect(TimeoutUtils.withTimeout(slowPromise, 100))\r\n        .rejects.toThrow('Operation timed out after 100ms');\r\n    });\r\n\r\n    it('should use custom error message', async () => {\r\n      const slowPromise = new Promise(resolve => {\r\n        setTimeout(() => resolve('success'), 200);\r\n      });\r\n      \r\n      await expect(TimeoutUtils.withTimeout(slowPromise, 100, 'Custom timeout error'))\r\n        .rejects.toThrow('Custom timeout error');\r\n    });\r\n\r\n    it('should reject with original error if promise rejects before timeout', async () => {\r\n      const failingPromise = new Promise((_, reject) => {\r\n        setTimeout(() => reject(new Error('Original error')), 50);\r\n      });\r\n      \r\n      await expect(TimeoutUtils.withTimeout(failingPromise, 100))\r\n        .rejects.toThrow('Original error');\r\n    });\r\n  });\r\n\r\n  describe('withRetry', () => {\r\n    it('should succeed on first attempt', async () => {\r\n      const successfulOperation = jest.fn().mockResolvedValue('success');\r\n      \r\n      const result = await TimeoutUtils.withRetry(successfulOperation);\r\n      \r\n      expect(result).toBe('success');\r\n      expect(successfulOperation).toHaveBeenCalledTimes(1);\r\n    });\r\n\r\n    it('should retry on failure and eventually succeed', async () => {\r\n      const operation = jest.fn()\r\n        .mockRejectedValueOnce(new Error('Attempt 1 failed'))\r\n        .mockRejectedValueOnce(new Error('Attempt 2 failed'))\r\n        .mockResolvedValue('success');\r\n      \r\n      const result = await TimeoutUtils.withRetry(operation, {\r\n        maxRetries: 3,\r\n        baseDelay: 10, // Delay corto para test\r\n        maxDelay: 100,\r\n        backoffMultiplier: 2\r\n      });\r\n      \r\n      expect(result).toBe('success');\r\n      expect(operation).toHaveBeenCalledTimes(3);\r\n    });\r\n\r\n    it('should fail after max retries', async () => {\r\n      const operation = jest.fn().mockRejectedValue(new Error('Always fails'));\r\n      \r\n      await expect(TimeoutUtils.withRetry(operation, {\r\n        maxRetries: 2,\r\n        baseDelay: 10,\r\n        maxDelay: 100,\r\n        backoffMultiplier: 2\r\n      })).rejects.toThrow('Always fails');\r\n      \r\n      expect(operation).toHaveBeenCalledTimes(3); // Initial + 2 retries\r\n    });\r\n\r\n    it('should implement exponential backoff', async () => {\r\n      const operation = jest.fn()\r\n        .mockRejectedValueOnce(new Error('Fail 1'))\r\n        .mockRejectedValueOnce(new Error('Fail 2'))\r\n        .mockResolvedValue('success');\r\n      \r\n      const startTime = Date.now();\r\n      \r\n      await TimeoutUtils.withRetry(operation, {\r\n        maxRetries: 2,\r\n        baseDelay: 100,\r\n        maxDelay: 1000,\r\n        backoffMultiplier: 2\r\n      });\r\n      \r\n      const endTime = Date.now();\r\n      const totalTime = endTime - startTime;\r\n      \r\n      // Debería haber esperado al menos 100ms + 200ms = 300ms\r\n      expect(totalTime).toBeGreaterThanOrEqual(250); // Margen para timing\r\n    });\r\n\r\n    it('should respect max delay', async () => {\r\n      const operation = jest.fn()\r\n        .mockRejectedValueOnce(new Error('Fail 1'))\r\n        .mockRejectedValueOnce(new Error('Fail 2'))\r\n        .mockResolvedValue('success');\r\n      \r\n      const startTime = Date.now();\r\n      \r\n      await TimeoutUtils.withRetry(operation, {\r\n        maxRetries: 2,\r\n        baseDelay: 1000,\r\n        maxDelay: 50, // Máximo muy bajo\r\n        backoffMultiplier: 10\r\n      });\r\n      \r\n      const endTime = Date.now();\r\n      const totalTime = endTime - startTime;\r\n      \r\n      // No debería haber esperado más de 100ms total (50ms * 2 retries)\r\n      expect(totalTime).toBeLessThan(200);\r\n    });\r\n  });\r\n\r\n  describe('getTimeout', () => {\r\n    it('should return correct timeout for valid category and operation', () => {\r\n      const timeout = TimeoutUtils.getTimeout('database', 'READ.SIMPLE_QUERY');\r\n      expect(timeout).toBeGreaterThan(0);\r\n    });\r\n\r\n    it('should return correct timeout for nested operations', () => {\r\n      const timeout = TimeoutUtils.getTimeout('internal-api', 'PRODUCTS.LIST');\r\n      expect(timeout).toBeGreaterThan(0);\r\n    });\r\n\r\n    it('should return default timeout for invalid category', () => {\r\n      const timeout = TimeoutUtils.getTimeout('invalid-category', 'SOME_OPERATION');\r\n      expect(timeout).toBeGreaterThan(0);\r\n    });\r\n\r\n    it('should return default timeout for invalid operation', () => {\r\n      const timeout = TimeoutUtils.getTimeout('database', 'INVALID_OPERATION');\r\n      expect(timeout).toBeGreaterThan(0);\r\n    });\r\n\r\n    it('should handle deep nested operations', () => {\r\n      const timeout = TimeoutUtils.getTimeout('external-api', 'MERCADOPAGO.PAYMENT_CREATION');\r\n      expect(timeout).toBeGreaterThan(0);\r\n    });\r\n  });\r\n});\r\n\r\ndescribe('Timeout Integration Tests', () => {\r\n  it('should work with real async operations', async () => {\r\n    const mockApiCall = () => new Promise(resolve => {\r\n      setTimeout(() => resolve('API response'), 50);\r\n    });\r\n    \r\n    const controller = TimeoutUtils.createTimeoutController(100);\r\n    \r\n    const result = await Promise.race([\r\n      mockApiCall(),\r\n      new Promise((_, reject) => {\r\n        controller.signal.addEventListener('abort', () => {\r\n          reject(new Error('Request aborted'));\r\n        });\r\n      })\r\n    ]);\r\n    \r\n    expect(result).toBe('API response');\r\n  });\r\n\r\n  it('should handle timeout in real scenario', async () => {\r\n    const slowApiCall = () => new Promise(resolve => {\r\n      setTimeout(() => resolve('Slow response'), 200);\r\n    });\r\n    \r\n    await expect(TimeoutUtils.withTimeout(slowApiCall(), 100))\r\n      .rejects.toThrow('Operation timed out after 100ms');\r\n  });\r\n\r\n  it('should work with retry in real scenario', async () => {\r\n    let attempts = 0;\r\n    const unreliableApiCall = () => new Promise((resolve, reject) => {\r\n      attempts++;\r\n      if (attempts < 3) {\r\n        reject(new Error(`Attempt ${attempts} failed`));\r\n      } else {\r\n        resolve('Success after retries');\r\n      }\r\n    });\r\n    \r\n    const result = await TimeoutUtils.withRetry(unreliableApiCall, {\r\n      maxRetries: 3,\r\n      baseDelay: 10,\r\n      maxDelay: 100,\r\n      backoffMultiplier: 2\r\n    });\r\n    \r\n    expect(result).toBe('Success after retries');\r\n    expect(attempts).toBe(3);\r\n  });\r\n});\r\n\r\ndescribe('Environment-specific Timeout Behavior', () => {\r\n  const originalEnv = process.env.NODE_ENV;\r\n\r\n  afterEach(() => {\r\n    process.env.NODE_ENV = originalEnv;\r\n  });\r\n\r\n  it('should have longer timeouts in development', () => {\r\n    process.env.NODE_ENV = 'development';\r\n    const devTimeout = TimeoutUtils.getEnvironmentTimeout(1000);\r\n    \r\n    process.env.NODE_ENV = 'production';\r\n    const prodTimeout = TimeoutUtils.getEnvironmentTimeout(1000);\r\n    \r\n    expect(devTimeout).toBeGreaterThan(prodTimeout);\r\n  });\r\n\r\n  it('should have intermediate timeouts in staging', () => {\r\n    process.env.NODE_ENV = 'development';\r\n    const devTimeout = TimeoutUtils.getEnvironmentTimeout(1000);\r\n    \r\n    process.env.NODE_ENV = 'staging';\r\n    const stagingTimeout = TimeoutUtils.getEnvironmentTimeout(1000);\r\n    \r\n    process.env.NODE_ENV = 'production';\r\n    const prodTimeout = TimeoutUtils.getEnvironmentTimeout(1000);\r\n    \r\n    expect(stagingTimeout).toBeGreaterThan(prodTimeout);\r\n    expect(stagingTimeout).toBeLessThan(devTimeout);\r\n  });\r\n});\r\n"],"names":["describe","it","expect","EXTERNAL_API_TIMEOUTS","MERCADOPAGO","toBeDefined","PAYMENT_CREATION","toBe","PAYMENT_STATUS","WEBHOOK_PROCESSING","PREFERENCE_CREATION","REFUND_PROCESSING","Object","values","forEach","timeout","toBeGreaterThan","toBeLessThanOrEqual","THIRD_PARTY","DEFAULT","SLOW_OPERATIONS","FAST_OPERATIONS","DATABASE_TIMEOUTS","READ","SIMPLE_QUERY","COMPLEX_QUERY","AGGREGATION","SEARCH","WRITE","INSERT","UPDATE","DELETE","BULK_OPERATIONS","TRANSACTION","SIMPLE","COMPLEX","MIGRATION","CONNECTION","ACQUIRE","IDLE_TIMEOUT","LIFETIME","CACHE_TIMEOUTS","REDIS","CONNECT","COMMAND","PIPELINE","MEMORY","OPERATION","CLEANUP","CDN","PURGE","UPLOAD","INTERNAL_API_TIMEOUTS","PRODUCTS","LIST","DETAIL","CREATE","USERS","AUTHENTICATION","PROFILE","UPDATE_PROFILE","PASSWORD_RESET","CART","ADD_ITEM","REMOVE_ITEM","UPDATE_QUANTITY","CLEAR","CHECKOUT","COMMON_TIMEOUTS","VERY_SHORT","SHORT","MEDIUM","LONG","VERY_LONG","RETRY_CONFIG","maxRetries","baseDelay","maxDelay","backoffMultiplier","CRITICAL","NON_CRITICAL","originalEnv","process","env","NODE_ENV","afterEach","baseTimeout","adjustedTimeout","TimeoutUtils","getEnvironmentTimeout","done","controller","createTimeoutController","signal","aborted","setTimeout","abort","fastPromise","Promise","resolve","result","withTimeout","slowPromise","rejects","toThrow","failingPromise","_","reject","Error","successfulOperation","jest","fn","mockResolvedValue","withRetry","toHaveBeenCalledTimes","operation","mockRejectedValueOnce","mockRejectedValue","startTime","Date","now","endTime","totalTime","toBeGreaterThanOrEqual","toBeLessThan","getTimeout","mockApiCall","race","addEventListener","slowApiCall","attempts","unreliableApiCall","devTimeout","prodTimeout","stagingTimeout"],"mappings":"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"}