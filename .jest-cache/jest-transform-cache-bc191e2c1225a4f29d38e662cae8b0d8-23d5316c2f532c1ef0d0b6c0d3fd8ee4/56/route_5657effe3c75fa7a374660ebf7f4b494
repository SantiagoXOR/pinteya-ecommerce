ca13e68279a8053579e9c55cd715abee
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_1u39iq4k6t() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\create-admin-user-enterprise\\route.ts";
  var hash = "e240a1e33034f0b743b941f1cc8b91b05dfef783";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\create-admin-user-enterprise\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 20
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 23
        }
      },
      "7": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "8": {
        start: {
          line: 24,
          column: 18
        },
        end: {
          line: 24,
          column: 66
        }
      },
      "9": {
        start: {
          line: 25,
          column: 29
        },
        end: {
          line: 25,
          column: 82
        }
      },
      "10": {
        start: {
          line: 26,
          column: 28
        },
        end: {
          line: 26,
          column: 80
        }
      },
      "11": {
        start: {
          line: 27,
          column: 25
        },
        end: {
          line: 27,
          column: 73
        }
      },
      "12": {
        start: {
          line: 28,
          column: 16
        },
        end: {
          line: 28,
          column: 24
        }
      },
      "13": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 278,
          column: 5
        }
      },
      "14": {
        start: {
          line: 32,
          column: 27
        },
        end: {
          line: 32,
          column: 87
        }
      },
      "15": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 42,
          column: 9
        }
      },
      "16": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 41,
          column: 15
        }
      },
      "17": {
        start: {
          line: 43,
          column: 24
        },
        end: {
          line: 43,
          column: 42
        }
      },
      "18": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "19": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 55,
          column: 15
        }
      },
      "20": {
        start: {
          line: 63,
          column: 14
        },
        end: {
          line: 63,
          column: 34
        }
      },
      "21": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 73,
          column: 9
        }
      },
      "22": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 72,
          column: 15
        }
      },
      "23": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 83,
          column: 9
        }
      },
      "24": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 82,
          column: 15
        }
      },
      "25": {
        start: {
          line: 85,
          column: 27
        },
        end: {
          line: 85,
          column: 55
        }
      },
      "26": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 94,
          column: 9
        }
      },
      "27": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 93,
          column: 15
        }
      },
      "28": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 104,
          column: 9
        }
      },
      "29": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 103,
          column: 15
        }
      },
      "30": {
        start: {
          line: 106,
          column: 29
        },
        end: {
          line: 106,
          column: 51
        }
      },
      "31": {
        start: {
          line: 107,
          column: 29
        },
        end: {
          line: 107,
          column: 51
        }
      },
      "32": {
        start: {
          line: 108,
          column: 27
        },
        end: {
          line: 108,
          column: 46
        }
      },
      "33": {
        start: {
          line: 109,
          column: 31
        },
        end: {
          line: 109,
          column: 70
        }
      },
      "34": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 118,
          column: 9
        }
      },
      "35": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 117,
          column: 15
        }
      },
      "36": {
        start: {
          line: 120,
          column: 23
        },
        end: {
          line: 226,
          column: 10
        }
      },
      "37": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 124,
          column: 13
        }
      },
      "38": {
        start: {
          line: 123,
          column: 16
        },
        end: {
          line: 123,
          column: 89
        }
      },
      "39": {
        start: {
          line: 126,
          column: 47
        },
        end: {
          line: 126,
          column: 99
        }
      },
      "40": {
        start: {
          line: 127,
          column: 31
        },
        end: {
          line: 127,
          column: 82
        }
      },
      "41": {
        start: {
          line: 127,
          column: 64
        },
        end: {
          line: 127,
          column: 81
        }
      },
      "42": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 150,
          column: 13
        }
      },
      "43": {
        start: {
          line: 130,
          column: 16
        },
        end: {
          line: 130,
          column: 38
        }
      },
      "44": {
        start: {
          line: 133,
          column: 64
        },
        end: {
          line: 145,
          column: 18
        }
      },
      "45": {
        start: {
          line: 146,
          column: 16
        },
        end: {
          line: 148,
          column: 17
        }
      },
      "46": {
        start: {
          line: 147,
          column: 20
        },
        end: {
          line: 147,
          column: 91
        }
      },
      "47": {
        start: {
          line: 149,
          column: 16
        },
        end: {
          line: 149,
          column: 44
        }
      },
      "48": {
        start: {
          line: 152,
          column: 46
        },
        end: {
          line: 152,
          column: 120
        }
      },
      "49": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 221,
          column: 13
        }
      },
      "50": {
        start: {
          line: 155,
          column: 69
        },
        end: {
          line: 173,
          column: 23
        }
      },
      "51": {
        start: {
          line: 174,
          column: 16
        },
        end: {
          line: 176,
          column: 17
        }
      },
      "52": {
        start: {
          line: 175,
          column: 20
        },
        end: {
          line: 175,
          column: 89
        }
      },
      "53": {
        start: {
          line: 177,
          column: 16
        },
        end: {
          line: 181,
          column: 18
        }
      },
      "54": {
        start: {
          line: 184,
          column: 44
        },
        end: {
          line: 184,
          column: 122
        }
      },
      "55": {
        start: {
          line: 185,
          column: 16
        },
        end: {
          line: 187,
          column: 17
        }
      },
      "56": {
        start: {
          line: 186,
          column: 20
        },
        end: {
          line: 186,
          column: 86
        }
      },
      "57": {
        start: {
          line: 189,
          column: 66
        },
        end: {
          line: 212,
          column: 23
        }
      },
      "58": {
        start: {
          line: 213,
          column: 16
        },
        end: {
          line: 215,
          column: 17
        }
      },
      "59": {
        start: {
          line: 214,
          column: 20
        },
        end: {
          line: 214,
          column: 85
        }
      },
      "60": {
        start: {
          line: 216,
          column: 16
        },
        end: {
          line: 220,
          column: 18
        }
      },
      "61": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 236,
          column: 9
        }
      },
      "62": {
        start: {
          line: 228,
          column: 12
        },
        end: {
          line: 235,
          column: 15
        }
      },
      "63": {
        start: {
          line: 237,
          column: 46
        },
        end: {
          line: 237,
          column: 57
        }
      },
      "64": {
        start: {
          line: 239,
          column: 8
        },
        end: {
          line: 239,
          column: 63
        }
      },
      "65": {
        start: {
          line: 241,
          column: 8
        },
        end: {
          line: 268,
          column: 11
        }
      },
      "66": {
        start: {
          line: 270,
          column: 8
        },
        end: {
          line: 270,
          column: 84
        }
      },
      "67": {
        start: {
          line: 271,
          column: 8
        },
        end: {
          line: 277,
          column: 11
        }
      },
      "68": {
        start: {
          line: 281,
          column: 4
        },
        end: {
          line: 315,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "POST",
        decl: {
          start: {
            line: 29,
            column: 15
          },
          end: {
            line: 29,
            column: 19
          }
        },
        loc: {
          start: {
            line: 29,
            column: 29
          },
          end: {
            line: 279,
            column: 1
          }
        },
        line: 29
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 120,
            column: 78
          },
          end: {
            line: 120,
            column: 79
          }
        },
        loc: {
          start: {
            line: 120,
            column: 106
          },
          end: {
            line: 222,
            column: 9
          }
        },
        line: 120
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 127,
            column: 59
          },
          end: {
            line: 127,
            column: 60
          }
        },
        loc: {
          start: {
            line: 127,
            column: 64
          },
          end: {
            line: 127,
            column: 81
          }
        },
        line: 127
      },
      "7": {
        name: "GET",
        decl: {
          start: {
            line: 280,
            column: 15
          },
          end: {
            line: 280,
            column: 18
          }
        },
        loc: {
          start: {
            line: 280,
            column: 21
          },
          end: {
            line: 316,
            column: 1
          }
        },
        line: 280
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 42,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 42,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "1": {
        loc: {
          start: {
            line: 40,
            column: 24
          },
          end: {
            line: 40,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 24
          },
          end: {
            line: 40,
            column: 41
          }
        }, {
          start: {
            line: 40,
            column: 45
          },
          end: {
            line: 40,
            column: 48
          }
        }],
        line: 40
      },
      "2": {
        loc: {
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 45
      },
      "3": {
        loc: {
          start: {
            line: 45,
            column: 12
          },
          end: {
            line: 45,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 12
          },
          end: {
            line: 45,
            column: 57
          }
        }, {
          start: {
            line: 45,
            column: 61
          },
          end: {
            line: 45,
            column: 85
          }
        }],
        line: 45
      },
      "4": {
        loc: {
          start: {
            line: 57,
            column: 46
          },
          end: {
            line: 57,
            column: 65
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 57,
            column: 58
          },
          end: {
            line: 57,
            column: 65
          }
        }],
        line: 57
      },
      "5": {
        loc: {
          start: {
            line: 57,
            column: 67
          },
          end: {
            line: 57,
            column: 84
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 57,
            column: 78
          },
          end: {
            line: 57,
            column: 84
          }
        }],
        line: 57
      },
      "6": {
        loc: {
          start: {
            line: 57,
            column: 86
          },
          end: {
            line: 63,
            column: 9
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 57,
            column: 100
          },
          end: {
            line: 63,
            column: 9
          }
        }],
        line: 57
      },
      "7": {
        loc: {
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 73,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 73,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "8": {
        loc: {
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 83,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 83,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 75
      },
      "9": {
        loc: {
          start: {
            line: 75,
            column: 12
          },
          end: {
            line: 75,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 75,
            column: 12
          },
          end: {
            line: 75,
            column: 18
          }
        }, {
          start: {
            line: 75,
            column: 22
          },
          end: {
            line: 75,
            column: 31
          }
        }],
        line: 75
      },
      "10": {
        loc: {
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "11": {
        loc: {
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 104,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 104,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 96
      },
      "12": {
        loc: {
          start: {
            line: 110,
            column: 8
          },
          end: {
            line: 118,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 8
          },
          end: {
            line: 118,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 110
      },
      "13": {
        loc: {
          start: {
            line: 110,
            column: 12
          },
          end: {
            line: 110,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 110,
            column: 12
          },
          end: {
            line: 110,
            column: 25
          }
        }, {
          start: {
            line: 110,
            column: 29
          },
          end: {
            line: 110,
            column: 42
          }
        }, {
          start: {
            line: 110,
            column: 46
          },
          end: {
            line: 110,
            column: 57
          }
        }, {
          start: {
            line: 110,
            column: 61
          },
          end: {
            line: 110,
            column: 76
          }
        }],
        line: 110
      },
      "14": {
        loc: {
          start: {
            line: 122,
            column: 12
          },
          end: {
            line: 124,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 12
          },
          end: {
            line: 124,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 122
      },
      "15": {
        loc: {
          start: {
            line: 129,
            column: 12
          },
          end: {
            line: 150,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 129,
            column: 12
          },
          end: {
            line: 150,
            column: 13
          }
        }, {
          start: {
            line: 131,
            column: 19
          },
          end: {
            line: 150,
            column: 13
          }
        }],
        line: 129
      },
      "16": {
        loc: {
          start: {
            line: 146,
            column: 16
          },
          end: {
            line: 148,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 146,
            column: 16
          },
          end: {
            line: 148,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 146
      },
      "17": {
        loc: {
          start: {
            line: 153,
            column: 12
          },
          end: {
            line: 221,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 153,
            column: 12
          },
          end: {
            line: 221,
            column: 13
          }
        }, {
          start: {
            line: 182,
            column: 19
          },
          end: {
            line: 221,
            column: 13
          }
        }],
        line: 153
      },
      "18": {
        loc: {
          start: {
            line: 174,
            column: 16
          },
          end: {
            line: 176,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 174,
            column: 16
          },
          end: {
            line: 176,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 174
      },
      "19": {
        loc: {
          start: {
            line: 185,
            column: 16
          },
          end: {
            line: 187,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 185,
            column: 16
          },
          end: {
            line: 187,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 185
      },
      "20": {
        loc: {
          start: {
            line: 213,
            column: 16
          },
          end: {
            line: 215,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 213,
            column: 16
          },
          end: {
            line: 215,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 213
      },
      "21": {
        loc: {
          start: {
            line: 227,
            column: 8
          },
          end: {
            line: 236,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 227,
            column: 8
          },
          end: {
            line: 236,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 227
      },
      "22": {
        loc: {
          start: {
            line: 243,
            column: 46
          },
          end: {
            line: 243,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 243,
            column: 69
          },
          end: {
            line: 243,
            column: 77
          }
        }, {
          start: {
            line: 243,
            column: 80
          },
          end: {
            line: 243,
            column: 93
          }
        }],
        line: 243
      },
      "23": {
        loc: {
          start: {
            line: 267,
            column: 20
          },
          end: {
            line: 267,
            column: 52
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 267,
            column: 43
          },
          end: {
            line: 267,
            column: 46
          }
        }, {
          start: {
            line: 267,
            column: 49
          },
          end: {
            line: 267,
            column: 52
          }
        }],
        line: 267
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0],
      "5": [0],
      "6": [0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\create-admin-user-enterprise\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n/**\r\n * API Enterprise para crear usuario administrador\r\n * Refactorizada con utilidades enterprise + RLS + validaciones robustas\r\n */\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { supabaseAdmin } from '@/lib/integrations/supabase';\r\nimport { \r\n  requireCriticalAuth \r\n} from '@/lib/auth/enterprise-auth-utils';\r\nimport {\r\n  executeWithRLS,\r\n  checkRLSPermission\r\n} from '@/lib/auth/enterprise-rls-utils';\r\nimport {\r\n  invalidateUserCache\r\n} from '@/lib/auth/enterprise-cache';\r\n\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    // ENTERPRISE: Autenticaci\xF3n cr\xEDtica para operaciones de creaci\xF3n de admin\r\n    const authResult = await requireCriticalAuth(request);\r\n\r\n    if (!authResult.success) {\r\n      return NextResponse.json(\r\n        { \r\n          error: authResult.error,\r\n          code: authResult.code,\r\n          enterprise: true,\r\n          operation: 'CREATE_ADMIN_USER'\r\n        },\r\n        { status: authResult.status || 401 }\r\n      );\r\n    }\r\n\r\n    const context = authResult.context!;\r\n\r\n    // ENTERPRISE: Verificar permisos espec\xEDficos para crear admins\r\n    if (!context.permissions.includes('admin_create') && context.role !== 'admin') {\r\n      return NextResponse.json(\r\n        { \r\n          error: 'Permisos insuficientes para crear usuarios administradores',\r\n          code: 'INSUFFICIENT_PERMISSIONS',\r\n          enterprise: true,\r\n          required_permissions: ['admin_create']\r\n        },\r\n        { status: 403 }\r\n      );\r\n    }\r\n\r\n    const { \r\n      securityKey, \r\n      email, \r\n      password, \r\n      firstName = 'Admin', \r\n      lastName = 'User',\r\n      permissions = ['admin_access', 'user_management', 'products_create', 'products_update', 'products_delete']\r\n    } = await request.json();\r\n\r\n    // ENTERPRISE: Validaci\xF3n de clave de seguridad\r\n    if (securityKey !== 'CREATE_ADMIN_PINTEYA_ENTERPRISE_2025') {\r\n      return NextResponse.json(\r\n        { \r\n          error: 'Clave de seguridad enterprise incorrecta',\r\n          code: 'INVALID_SECURITY_KEY',\r\n          enterprise: true\r\n        },\r\n        { status: 403 }\r\n      );\r\n    }\r\n\r\n    // ENTERPRISE: Validaciones robustas\r\n    if (!email || !password) {\r\n      return NextResponse.json(\r\n        { \r\n          error: 'Email y contrase\xF1a son requeridos',\r\n          code: 'MISSING_REQUIRED_FIELDS',\r\n          enterprise: true\r\n        },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // ENTERPRISE: Validaci\xF3n de email\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (!emailRegex.test(email)) {\r\n      return NextResponse.json(\r\n        { \r\n          error: 'Formato de email inv\xE1lido',\r\n          code: 'INVALID_EMAIL_FORMAT',\r\n          enterprise: true\r\n        },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // ENTERPRISE: Validaci\xF3n de contrase\xF1a robusta\r\n    if (password.length < 12) {\r\n      return NextResponse.json(\r\n        { \r\n          error: 'La contrase\xF1a debe tener al menos 12 caracteres para admin',\r\n          code: 'WEAK_PASSWORD',\r\n          enterprise: true\r\n        },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // ENTERPRISE: Validaci\xF3n de complejidad de contrase\xF1a\r\n    const hasUpperCase = /[A-Z]/.test(password);\r\n    const hasLowerCase = /[a-z]/.test(password);\r\n    const hasNumbers = /\\d/.test(password);\r\n    const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\r\n\r\n    if (!hasUpperCase || !hasLowerCase || !hasNumbers || !hasSpecialChar) {\r\n      return NextResponse.json(\r\n        { \r\n          error: 'La contrase\xF1a debe contener may\xFAsculas, min\xFAsculas, n\xFAmeros y caracteres especiales',\r\n          code: 'PASSWORD_COMPLEXITY_FAILED',\r\n          enterprise: true\r\n        },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // ENTERPRISE: Ejecutar creaci\xF3n con RLS y auditor\xEDa\r\n    const result = await executeWithRLS(\r\n      context,\r\n      async (client, rlsContext) => {\r\n        // Verificar permisos RLS espec\xEDficos\r\n        if (!checkRLSPermission(rlsContext, 'admin_create')) {\r\n          throw new Error('Permisos RLS insuficientes para crear administradores');\r\n        }\r\n\r\n        // 1. Verificar si el usuario ya existe en auth.users\r\n        const { data: existingAuthUser } = await supabaseAdmin.auth.admin.listUsers();\r\n        const userExists = existingAuthUser.users.find(u => u.email === email);\r\n\r\n        let authUser;\r\n\r\n        if (userExists) {\r\n          authUser = userExists;\r\n        } else {\r\n          // 2. Crear usuario en Supabase Auth con metadata enterprise\r\n          const { data: newAuthUser, error: authError } = await supabaseAdmin.auth.admin.createUser({\r\n            email,\r\n            password,\r\n            email_confirm: true,\r\n            user_metadata: {\r\n              first_name: firstName,\r\n              last_name: lastName,\r\n              role: 'admin',\r\n              created_by: context.userId,\r\n              enterprise_admin: true,\r\n              security_level: 'critical'\r\n            }\r\n          });\r\n\r\n          if (authError) {\r\n            throw new Error(`Error creando usuario en Auth: ${authError.message}`);\r\n          }\r\n\r\n          authUser = newAuthUser.user;\r\n        }\r\n\r\n        // 3. Verificar si el perfil ya existe\r\n        const { data: existingProfile } = await client\r\n          .from('user_profiles')\r\n          .select('*')\r\n          .eq('email', email)\r\n          .single();\r\n\r\n        if (existingProfile) {\r\n          // 4. Actualizar perfil existente con datos enterprise\r\n          const { data: updatedProfile, error: updateError } = await client\r\n            .from('user_profiles')\r\n            .update({\r\n              supabase_user_id: authUser.id,\r\n              first_name: firstName,\r\n              last_name: lastName,\r\n              permissions: permissions,\r\n              metadata: {\r\n                ...existingProfile.metadata,\r\n                updated_by: context.userId,\r\n                enterprise_admin: true,\r\n                last_admin_update: new Date().toISOString()\r\n              },\r\n              updated_at: new Date().toISOString()\r\n            })\r\n            .eq('email', email)\r\n            .select(`\r\n              *,\r\n              user_roles (\r\n                role_name,\r\n                permissions\r\n              )\r\n            `)\r\n            .single();\r\n\r\n          if (updateError) {\r\n            throw new Error(`Error actualizando perfil: ${updateError.message}`);\r\n          }\r\n\r\n          return {\r\n            action: 'updated',\r\n            authUser,\r\n            profile: updatedProfile\r\n          };\r\n        } else {\r\n          // 5. Obtener rol de admin\r\n          const { data: adminRole } = await client\r\n            .from('user_roles')\r\n            .select('id')\r\n            .eq('role_name', 'admin')\r\n            .single();\r\n\r\n          if (!adminRole) {\r\n            throw new Error('Rol de admin no encontrado en la base de datos');\r\n          }\r\n\r\n          // 6. Crear nuevo perfil enterprise\r\n          const { data: newProfile, error: profileError } = await client\r\n            .from('user_profiles')\r\n            .insert({\r\n              supabase_user_id: authUser.id,\r\n              email,\r\n              first_name: firstName,\r\n              last_name: lastName,\r\n              role_id: adminRole.id,\r\n              permissions: permissions,\r\n              is_active: true,\r\n              is_verified: true,\r\n              metadata: {\r\n                created_by: context.userId,\r\n                enterprise_admin: true,\r\n                security_level: 'critical',\r\n                created_via: 'enterprise_api'\r\n              },\r\n              created_at: new Date().toISOString(),\r\n              updated_at: new Date().toISOString()\r\n            })\r\n            .select(`\r\n              *,\r\n              user_roles (\r\n                role_name,\r\n                permissions\r\n              )\r\n            `)\r\n            .single();\r\n\r\n          if (profileError) {\r\n            throw new Error(`Error creando perfil: ${profileError.message}`);\r\n          }\r\n\r\n          return {\r\n            action: 'created',\r\n            authUser,\r\n            profile: newProfile\r\n          };\r\n        }\r\n      },\r\n      {\r\n        enforceRLS: true,\r\n        auditLog: true,\r\n        adminOverride: true // Permitir bypass RLS para esta operaci\xF3n cr\xEDtica\r\n      }\r\n    );\r\n\r\n    if (!result.success) {\r\n      return NextResponse.json(\r\n        { \r\n          error: result.error,\r\n          code: result.code,\r\n          enterprise: true,\r\n          rls: true\r\n        },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    const { action, authUser, profile } = result.data!;\r\n\r\n    // ENTERPRISE: Invalidar cache relacionado\r\n    invalidateUserCache(authUser.id);\r\n\r\n    // ENTERPRISE: Respuesta enterprise con informaci\xF3n completa\r\n    return NextResponse.json({\r\n      success: true,\r\n      message: `Usuario administrador ${action === 'created' ? 'creado' : 'actualizado'} correctamente`,\r\n      data: {\r\n        action,\r\n        user: {\r\n          auth_id: authUser.id,\r\n          email: authUser.email,\r\n          profile: {\r\n            id: profile.id,\r\n            name: `${profile.first_name} ${profile.last_name}`,\r\n            role: profile.user_roles?.role_name,\r\n            permissions: profile.permissions,\r\n            is_active: profile.is_active,\r\n            created_at: profile.created_at\r\n          }\r\n        }\r\n      },\r\n      enterprise: {\r\n        security_level: 'critical',\r\n        rls_enabled: true,\r\n        created_by: context.userId,\r\n        permissions_granted: permissions\r\n      },\r\n      timestamp: new Date().toISOString()\r\n    }, { status: action === 'created' ? 201 : 200 });\r\n\r\n  } catch (error) {\r\n    console.error('[ENTERPRISE] Error en create-admin-user-enterprise:', error);\r\n    return NextResponse.json(\r\n      { \r\n        error: 'Error interno del servidor enterprise',\r\n        code: 'INTERNAL_SERVER_ERROR',\r\n        enterprise: true\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\nexport async function GET() {\r\n  return NextResponse.json({\r\n    message: 'API Enterprise para crear usuario administrador',\r\n    enterprise: true,\r\n    instructions: {\r\n      method: 'POST',\r\n      required_fields: ['securityKey', 'email', 'password'],\r\n      optional_fields: ['firstName', 'lastName', 'permissions'],\r\n      security_key: 'CREATE_ADMIN_PINTEYA_ENTERPRISE_2025',\r\n      password_requirements: {\r\n        min_length: 12,\r\n        must_contain: ['uppercase', 'lowercase', 'numbers', 'special_chars']\r\n      }\r\n    },\r\n    features: [\r\n      'Enterprise authentication with critical security level',\r\n      'Row Level Security (RLS) enforcement',\r\n      'Robust password validation',\r\n      'Audit logging',\r\n      'Cache invalidation',\r\n      'Comprehensive error handling'\r\n    ]\r\n  });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "POST", "runtime", "request", "authResult", "requireCriticalAuth", "success", "NextResponse", "json", "error", "code", "enterprise", "operation", "status", "context", "permissions", "includes", "role", "required_permissions", "securityKey", "email", "password", "firstName", "lastName", "emailRegex", "test", "length", "hasUpperCase", "hasLowerCase", "hasNumbers", "hasSpecialChar", "result", "executeWithRLS", "client", "rlsContext", "checkRLSPermission", "Error", "data", "existingAuthUser", "supabaseAdmin", "auth", "admin", "listUsers", "userExists", "users", "find", "u", "authUser", "newAuthUser", "authError", "createUser", "email_confirm", "user_metadata", "first_name", "last_name", "created_by", "userId", "enterprise_admin", "security_level", "message", "user", "existingProfile", "from", "select", "eq", "single", "updatedProfile", "updateError", "update", "supabase_user_id", "id", "metadata", "updated_by", "last_admin_update", "Date", "toISOString", "updated_at", "action", "profile", "adminRole", "newProfile", "profileError", "insert", "role_id", "is_active", "is_verified", "created_via", "created_at", "enforceRLS", "auditLog", "adminOverride", "rls", "invalidateUserCache", "auth_id", "name", "user_roles", "role_name", "rls_enabled", "permissions_granted", "timestamp", "console", "instructions", "method", "required_fields", "optional_fields", "security_key", "password_requirements", "min_length", "must_contain", "features"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e240a1e33034f0b743b941f1cc8b91b05dfef783"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1u39iq4k6t = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1u39iq4k6t();
cov_1u39iq4k6t().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1u39iq4k6t().f[0]++;
  cov_1u39iq4k6t().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1u39iq4k6t().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1u39iq4k6t().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_1u39iq4k6t().f[1]++;
    cov_1u39iq4k6t().s[4]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_1u39iq4k6t().f[2]++;
    cov_1u39iq4k6t().s[5]++;
    return POST;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_1u39iq4k6t().f[3]++;
    cov_1u39iq4k6t().s[6]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_1u39iq4k6t().s[7]++, require("next/server"));
const _supabase =
/* istanbul ignore next */
(cov_1u39iq4k6t().s[8]++, require("../../../../lib/integrations/supabase"));
const _enterpriseauthutils =
/* istanbul ignore next */
(cov_1u39iq4k6t().s[9]++, require("../../../../lib/auth/enterprise-auth-utils"));
const _enterpriserlsutils =
/* istanbul ignore next */
(cov_1u39iq4k6t().s[10]++, require("../../../../lib/auth/enterprise-rls-utils"));
const _enterprisecache =
/* istanbul ignore next */
(cov_1u39iq4k6t().s[11]++, require("../../../../lib/auth/enterprise-cache"));
const runtime =
/* istanbul ignore next */
(cov_1u39iq4k6t().s[12]++, 'nodejs');
async function POST(request) {
  /* istanbul ignore next */
  cov_1u39iq4k6t().f[4]++;
  cov_1u39iq4k6t().s[13]++;
  try {
    // ENTERPRISE: AutenticaciÃ³n crÃ­tica para operaciones de creaciÃ³n de admin
    const authResult =
    /* istanbul ignore next */
    (cov_1u39iq4k6t().s[14]++, await (0, _enterpriseauthutils.requireCriticalAuth)(request));
    /* istanbul ignore next */
    cov_1u39iq4k6t().s[15]++;
    if (!authResult.success) {
      /* istanbul ignore next */
      cov_1u39iq4k6t().b[0][0]++;
      cov_1u39iq4k6t().s[16]++;
      return _server.NextResponse.json({
        error: authResult.error,
        code: authResult.code,
        enterprise: true,
        operation: 'CREATE_ADMIN_USER'
      }, {
        status:
        /* istanbul ignore next */
        (cov_1u39iq4k6t().b[1][0]++, authResult.status) ||
        /* istanbul ignore next */
        (cov_1u39iq4k6t().b[1][1]++, 401)
      });
    } else
    /* istanbul ignore next */
    {
      cov_1u39iq4k6t().b[0][1]++;
    }
    const context =
    /* istanbul ignore next */
    (cov_1u39iq4k6t().s[17]++, authResult.context);
    // ENTERPRISE: Verificar permisos especÃ­ficos para crear admins
    /* istanbul ignore next */
    cov_1u39iq4k6t().s[18]++;
    if (
    /* istanbul ignore next */
    (cov_1u39iq4k6t().b[3][0]++, !context.permissions.includes('admin_create')) &&
    /* istanbul ignore next */
    (cov_1u39iq4k6t().b[3][1]++, context.role !== 'admin')) {
      /* istanbul ignore next */
      cov_1u39iq4k6t().b[2][0]++;
      cov_1u39iq4k6t().s[19]++;
      return _server.NextResponse.json({
        error: 'Permisos insuficientes para crear usuarios administradores',
        code: 'INSUFFICIENT_PERMISSIONS',
        enterprise: true,
        required_permissions: ['admin_create']
      }, {
        status: 403
      });
    } else
    /* istanbul ignore next */
    {
      cov_1u39iq4k6t().b[2][1]++;
    }
    const {
      securityKey,
      email,
      password,
      firstName =
      /* istanbul ignore next */
      (cov_1u39iq4k6t().b[4][0]++, 'Admin'),
      lastName =
      /* istanbul ignore next */
      (cov_1u39iq4k6t().b[5][0]++, 'User'),
      permissions =
      /* istanbul ignore next */
      (cov_1u39iq4k6t().b[6][0]++, ['admin_access', 'user_management', 'products_create', 'products_update', 'products_delete'])
    } =
    /* istanbul ignore next */
    (cov_1u39iq4k6t().s[20]++, await request.json());
    // ENTERPRISE: ValidaciÃ³n de clave de seguridad
    /* istanbul ignore next */
    cov_1u39iq4k6t().s[21]++;
    if (securityKey !== 'CREATE_ADMIN_PINTEYA_ENTERPRISE_2025') {
      /* istanbul ignore next */
      cov_1u39iq4k6t().b[7][0]++;
      cov_1u39iq4k6t().s[22]++;
      return _server.NextResponse.json({
        error: 'Clave de seguridad enterprise incorrecta',
        code: 'INVALID_SECURITY_KEY',
        enterprise: true
      }, {
        status: 403
      });
    } else
    /* istanbul ignore next */
    {
      cov_1u39iq4k6t().b[7][1]++;
    }
    // ENTERPRISE: Validaciones robustas
    cov_1u39iq4k6t().s[23]++;
    if (
    /* istanbul ignore next */
    (cov_1u39iq4k6t().b[9][0]++, !email) ||
    /* istanbul ignore next */
    (cov_1u39iq4k6t().b[9][1]++, !password)) {
      /* istanbul ignore next */
      cov_1u39iq4k6t().b[8][0]++;
      cov_1u39iq4k6t().s[24]++;
      return _server.NextResponse.json({
        error: 'Email y contraseÃ±a son requeridos',
        code: 'MISSING_REQUIRED_FIELDS',
        enterprise: true
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_1u39iq4k6t().b[8][1]++;
    }
    // ENTERPRISE: ValidaciÃ³n de email
    const emailRegex =
    /* istanbul ignore next */
    (cov_1u39iq4k6t().s[25]++, /^[^\s@]+@[^\s@]+\.[^\s@]+$/);
    /* istanbul ignore next */
    cov_1u39iq4k6t().s[26]++;
    if (!emailRegex.test(email)) {
      /* istanbul ignore next */
      cov_1u39iq4k6t().b[10][0]++;
      cov_1u39iq4k6t().s[27]++;
      return _server.NextResponse.json({
        error: 'Formato de email invÃ¡lido',
        code: 'INVALID_EMAIL_FORMAT',
        enterprise: true
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_1u39iq4k6t().b[10][1]++;
    }
    // ENTERPRISE: ValidaciÃ³n de contraseÃ±a robusta
    cov_1u39iq4k6t().s[28]++;
    if (password.length < 12) {
      /* istanbul ignore next */
      cov_1u39iq4k6t().b[11][0]++;
      cov_1u39iq4k6t().s[29]++;
      return _server.NextResponse.json({
        error: 'La contraseÃ±a debe tener al menos 12 caracteres para admin',
        code: 'WEAK_PASSWORD',
        enterprise: true
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_1u39iq4k6t().b[11][1]++;
    }
    // ENTERPRISE: ValidaciÃ³n de complejidad de contraseÃ±a
    const hasUpperCase =
    /* istanbul ignore next */
    (cov_1u39iq4k6t().s[30]++, /[A-Z]/.test(password));
    const hasLowerCase =
    /* istanbul ignore next */
    (cov_1u39iq4k6t().s[31]++, /[a-z]/.test(password));
    const hasNumbers =
    /* istanbul ignore next */
    (cov_1u39iq4k6t().s[32]++, /\d/.test(password));
    const hasSpecialChar =
    /* istanbul ignore next */
    (cov_1u39iq4k6t().s[33]++, /[!@#$%^&*(),.?":{}|<>]/.test(password));
    /* istanbul ignore next */
    cov_1u39iq4k6t().s[34]++;
    if (
    /* istanbul ignore next */
    (cov_1u39iq4k6t().b[13][0]++, !hasUpperCase) ||
    /* istanbul ignore next */
    (cov_1u39iq4k6t().b[13][1]++, !hasLowerCase) ||
    /* istanbul ignore next */
    (cov_1u39iq4k6t().b[13][2]++, !hasNumbers) ||
    /* istanbul ignore next */
    (cov_1u39iq4k6t().b[13][3]++, !hasSpecialChar)) {
      /* istanbul ignore next */
      cov_1u39iq4k6t().b[12][0]++;
      cov_1u39iq4k6t().s[35]++;
      return _server.NextResponse.json({
        error: 'La contraseÃ±a debe contener mayÃºsculas, minÃºsculas, nÃºmeros y caracteres especiales',
        code: 'PASSWORD_COMPLEXITY_FAILED',
        enterprise: true
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_1u39iq4k6t().b[12][1]++;
    }
    // ENTERPRISE: Ejecutar creaciÃ³n con RLS y auditorÃ­a
    const result =
    /* istanbul ignore next */
    (cov_1u39iq4k6t().s[36]++, await (0, _enterpriserlsutils.executeWithRLS)(context, async (client, rlsContext) => {
      /* istanbul ignore next */
      cov_1u39iq4k6t().f[5]++;
      cov_1u39iq4k6t().s[37]++;
      // Verificar permisos RLS especÃ­ficos
      if (!(0, _enterpriserlsutils.checkRLSPermission)(rlsContext, 'admin_create')) {
        /* istanbul ignore next */
        cov_1u39iq4k6t().b[14][0]++;
        cov_1u39iq4k6t().s[38]++;
        throw new Error('Permisos RLS insuficientes para crear administradores');
      } else
      /* istanbul ignore next */
      {
        cov_1u39iq4k6t().b[14][1]++;
      }
      // 1. Verificar si el usuario ya existe en auth.users
      const {
        data: existingAuthUser
      } =
      /* istanbul ignore next */
      (cov_1u39iq4k6t().s[39]++, await _supabase.supabaseAdmin.auth.admin.listUsers());
      const userExists =
      /* istanbul ignore next */
      (cov_1u39iq4k6t().s[40]++, existingAuthUser.users.find(u => {
        /* istanbul ignore next */
        cov_1u39iq4k6t().f[6]++;
        cov_1u39iq4k6t().s[41]++;
        return u.email === email;
      }));
      let authUser;
      /* istanbul ignore next */
      cov_1u39iq4k6t().s[42]++;
      if (userExists) {
        /* istanbul ignore next */
        cov_1u39iq4k6t().b[15][0]++;
        cov_1u39iq4k6t().s[43]++;
        authUser = userExists;
      } else {
        /* istanbul ignore next */
        cov_1u39iq4k6t().b[15][1]++;
        // 2. Crear usuario en Supabase Auth con metadata enterprise
        const {
          data: newAuthUser,
          error: authError
        } =
        /* istanbul ignore next */
        (cov_1u39iq4k6t().s[44]++, await _supabase.supabaseAdmin.auth.admin.createUser({
          email,
          password,
          email_confirm: true,
          user_metadata: {
            first_name: firstName,
            last_name: lastName,
            role: 'admin',
            created_by: context.userId,
            enterprise_admin: true,
            security_level: 'critical'
          }
        }));
        /* istanbul ignore next */
        cov_1u39iq4k6t().s[45]++;
        if (authError) {
          /* istanbul ignore next */
          cov_1u39iq4k6t().b[16][0]++;
          cov_1u39iq4k6t().s[46]++;
          throw new Error(`Error creando usuario en Auth: ${authError.message}`);
        } else
        /* istanbul ignore next */
        {
          cov_1u39iq4k6t().b[16][1]++;
        }
        cov_1u39iq4k6t().s[47]++;
        authUser = newAuthUser.user;
      }
      // 3. Verificar si el perfil ya existe
      const {
        data: existingProfile
      } =
      /* istanbul ignore next */
      (cov_1u39iq4k6t().s[48]++, await client.from('user_profiles').select('*').eq('email', email).single());
      /* istanbul ignore next */
      cov_1u39iq4k6t().s[49]++;
      if (existingProfile) {
        /* istanbul ignore next */
        cov_1u39iq4k6t().b[17][0]++;
        // 4. Actualizar perfil existente con datos enterprise
        const {
          data: updatedProfile,
          error: updateError
        } =
        /* istanbul ignore next */
        (cov_1u39iq4k6t().s[50]++, await client.from('user_profiles').update({
          supabase_user_id: authUser.id,
          first_name: firstName,
          last_name: lastName,
          permissions: permissions,
          metadata: {
            ...existingProfile.metadata,
            updated_by: context.userId,
            enterprise_admin: true,
            last_admin_update: new Date().toISOString()
          },
          updated_at: new Date().toISOString()
        }).eq('email', email).select(`
              *,
              user_roles (
                role_name,
                permissions
              )
            `).single());
        /* istanbul ignore next */
        cov_1u39iq4k6t().s[51]++;
        if (updateError) {
          /* istanbul ignore next */
          cov_1u39iq4k6t().b[18][0]++;
          cov_1u39iq4k6t().s[52]++;
          throw new Error(`Error actualizando perfil: ${updateError.message}`);
        } else
        /* istanbul ignore next */
        {
          cov_1u39iq4k6t().b[18][1]++;
        }
        cov_1u39iq4k6t().s[53]++;
        return {
          action: 'updated',
          authUser,
          profile: updatedProfile
        };
      } else {
        /* istanbul ignore next */
        cov_1u39iq4k6t().b[17][1]++;
        // 5. Obtener rol de admin
        const {
          data: adminRole
        } =
        /* istanbul ignore next */
        (cov_1u39iq4k6t().s[54]++, await client.from('user_roles').select('id').eq('role_name', 'admin').single());
        /* istanbul ignore next */
        cov_1u39iq4k6t().s[55]++;
        if (!adminRole) {
          /* istanbul ignore next */
          cov_1u39iq4k6t().b[19][0]++;
          cov_1u39iq4k6t().s[56]++;
          throw new Error('Rol de admin no encontrado en la base de datos');
        } else
        /* istanbul ignore next */
        {
          cov_1u39iq4k6t().b[19][1]++;
        }
        // 6. Crear nuevo perfil enterprise
        const {
          data: newProfile,
          error: profileError
        } =
        /* istanbul ignore next */
        (cov_1u39iq4k6t().s[57]++, await client.from('user_profiles').insert({
          supabase_user_id: authUser.id,
          email,
          first_name: firstName,
          last_name: lastName,
          role_id: adminRole.id,
          permissions: permissions,
          is_active: true,
          is_verified: true,
          metadata: {
            created_by: context.userId,
            enterprise_admin: true,
            security_level: 'critical',
            created_via: 'enterprise_api'
          },
          created_at: new Date().toISOString(),
          updated_at: new Date().toISOString()
        }).select(`
              *,
              user_roles (
                role_name,
                permissions
              )
            `).single());
        /* istanbul ignore next */
        cov_1u39iq4k6t().s[58]++;
        if (profileError) {
          /* istanbul ignore next */
          cov_1u39iq4k6t().b[20][0]++;
          cov_1u39iq4k6t().s[59]++;
          throw new Error(`Error creando perfil: ${profileError.message}`);
        } else
        /* istanbul ignore next */
        {
          cov_1u39iq4k6t().b[20][1]++;
        }
        cov_1u39iq4k6t().s[60]++;
        return {
          action: 'created',
          authUser,
          profile: newProfile
        };
      }
    }, {
      enforceRLS: true,
      auditLog: true,
      adminOverride: true // Permitir bypass RLS para esta operaciÃ³n crÃ­tica
    }));
    /* istanbul ignore next */
    cov_1u39iq4k6t().s[61]++;
    if (!result.success) {
      /* istanbul ignore next */
      cov_1u39iq4k6t().b[21][0]++;
      cov_1u39iq4k6t().s[62]++;
      return _server.NextResponse.json({
        error: result.error,
        code: result.code,
        enterprise: true,
        rls: true
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_1u39iq4k6t().b[21][1]++;
    }
    const {
      action,
      authUser,
      profile
    } =
    /* istanbul ignore next */
    (cov_1u39iq4k6t().s[63]++, result.data);
    // ENTERPRISE: Invalidar cache relacionado
    /* istanbul ignore next */
    cov_1u39iq4k6t().s[64]++;
    (0, _enterprisecache.invalidateUserCache)(authUser.id);
    // ENTERPRISE: Respuesta enterprise con informaciÃ³n completa
    /* istanbul ignore next */
    cov_1u39iq4k6t().s[65]++;
    return _server.NextResponse.json({
      success: true,
      message: `Usuario administrador ${action === 'created' ?
      /* istanbul ignore next */
      (cov_1u39iq4k6t().b[22][0]++, 'creado') :
      /* istanbul ignore next */
      (cov_1u39iq4k6t().b[22][1]++, 'actualizado')} correctamente`,
      data: {
        action,
        user: {
          auth_id: authUser.id,
          email: authUser.email,
          profile: {
            id: profile.id,
            name: `${profile.first_name} ${profile.last_name}`,
            role: profile.user_roles?.role_name,
            permissions: profile.permissions,
            is_active: profile.is_active,
            created_at: profile.created_at
          }
        }
      },
      enterprise: {
        security_level: 'critical',
        rls_enabled: true,
        created_by: context.userId,
        permissions_granted: permissions
      },
      timestamp: new Date().toISOString()
    }, {
      status: action === 'created' ?
      /* istanbul ignore next */
      (cov_1u39iq4k6t().b[23][0]++, 201) :
      /* istanbul ignore next */
      (cov_1u39iq4k6t().b[23][1]++, 200)
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1u39iq4k6t().s[66]++;
    console.error('[ENTERPRISE] Error en create-admin-user-enterprise:', error);
    /* istanbul ignore next */
    cov_1u39iq4k6t().s[67]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor enterprise',
      code: 'INTERNAL_SERVER_ERROR',
      enterprise: true
    }, {
      status: 500
    });
  }
}
async function GET() {
  /* istanbul ignore next */
  cov_1u39iq4k6t().f[7]++;
  cov_1u39iq4k6t().s[68]++;
  return _server.NextResponse.json({
    message: 'API Enterprise para crear usuario administrador',
    enterprise: true,
    instructions: {
      method: 'POST',
      required_fields: ['securityKey', 'email', 'password'],
      optional_fields: ['firstName', 'lastName', 'permissions'],
      security_key: 'CREATE_ADMIN_PINTEYA_ENTERPRISE_2025',
      password_requirements: {
        min_length: 12,
        must_contain: ['uppercase', 'lowercase', 'numbers', 'special_chars']
      }
    },
    features: ['Enterprise authentication with critical security level', 'Row Level Security (RLS) enforcement', 'Robust password validation', 'Audit logging', 'Cache invalidation', 'Comprehensive error handling']
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,