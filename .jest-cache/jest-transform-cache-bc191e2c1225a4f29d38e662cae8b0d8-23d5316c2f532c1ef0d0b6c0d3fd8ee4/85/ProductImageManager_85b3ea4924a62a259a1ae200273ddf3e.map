{"version":3,"names":["ProductImageManager","cov_8hlx3pglg","s","validateImageFile","file","maxSize","b","f","allowedTypes","includes","type","size","optimizeImage","maxWidth","quality","Promise","resolve","canvas","document","createElement","ctx","getContext","img","window","Image","onload","width","height","drawImage","toBlob","blob","optimizedFile","File","name","lastModified","Date","now","src","URL","createObjectURL","getImageDimensions","productId","images","onChange","error","maxImages","maxFileSize","enableOptimization","className","draggedIndex","setDraggedIndex","_react","useState","editingIndex","setEditingIndex","editingAlt","setEditingAlt","uploading","setUploading","uploadErrors","setUploadErrors","isDragOver","setIsDragOver","fileInputRef","useRef","handleFileUpload","useCallback","files","length","remainingSlots","filesToUpload","Array","from","slice","errors","processedImages","validationError","push","dimensions","processedFile","url","newImage","id","Math","random","alt","replace","is_primary","file_size","file_type","upload_status","fileError","console","handleDragStart","index","handleDragOver","e","preventDefault","stopPropagation","handleDragEnter","handleDragLeave","currentTarget","contains","relatedTarget","handleDrop","dropIndex","dataTransfer","undefined","newImages","draggedImage","splice","actualDropIndex","handleFileInputChange","target","setPrimaryImage","map","i","removeImage","filter","_","startEditingAlt","saveAltText","cancelEditingAlt","_jsxruntime","jsx","_utils","cn","_AdminCard","AdminCard","title","jsxs","onDrop","onDragOver","onDragEnter","onDragLeave","_lucidereact","Loader2","Fragment","htmlFor","ref","multiple","accept","join","disabled","split","toUpperCase","AlertCircle","XCircle","Error","message","toString","some","image","draggable","onDragStart","_image","default","fill","upload_progress","style","round","CheckCircle","Star","toFixed","onClick","StarOff","Edit","Trash2","value","placeholder","current","click","Plus","reduce","total","trim"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\admin\\products\\ProductImageManager.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useRef, useCallback } from 'react';\r\nimport Image from 'next/image';\r\nimport { AdminCard } from '../ui/AdminCard';\r\nimport { \r\n  Upload, \r\n  X, \r\n  Star, \r\n  StarOff, \r\n  Move, \r\n  Edit, \r\n  Trash2, \r\n  Image as ImageIcon,\r\n  Plus,\r\n  AlertCircle,\r\n  Loader2,\r\n  CheckCircle,\r\n  XCircle\r\n} from 'lucide-react';\r\nimport { cn } from '@/lib/core/utils';\r\n\r\ninterface ProductImage {\r\n  id?: string;\r\n  url: string;\r\n  alt?: string;\r\n  is_primary?: boolean;\r\n  file_size?: number;\r\n  file_type?: string;\r\n  width?: number;\r\n  height?: number;\r\n  upload_status?: 'uploading' | 'success' | 'error';\r\n  upload_progress?: number;\r\n}\r\n\r\ninterface ProductImageManagerProps {\r\n  productId?: string;\r\n  images: ProductImage[];\r\n  onChange: (images: ProductImage[]) => void;\r\n  error?: string;\r\n  maxImages?: number;\r\n  maxFileSize?: number; // in MB\r\n  allowedTypes?: string[];\r\n  enableOptimization?: boolean;\r\n  className?: string;\r\n}\r\n\r\n// Image validation and optimization utilities\r\nconst validateImageFile = (file: File, maxSize: number = 5): string | null => {\r\n  const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/webp', 'image/gif'];\r\n  \r\n  if (!allowedTypes.includes(file.type)) {\r\n    return 'Tipo de archivo no permitido. Use JPG, PNG, WebP o GIF.';\r\n  }\r\n  \r\n  if (file.size > maxSize * 1024 * 1024) {\r\n    return `El archivo es muy grande. Maximo ${maxSize}MB permitido.`;\r\n  }\r\n  \r\n  return null;\r\n};\r\n\r\nconst optimizeImage = async (file: File, maxWidth: number = 1200, quality: number = 0.8): Promise<File> => {\r\n  return new Promise((resolve) => {\r\n    const canvas = document.createElement('canvas');\r\n    const ctx = canvas.getContext('2d')!;\r\n    const img = new window.Image();\r\n    \r\n    img.onload = () => {\r\n      // Calculate new dimensions\r\n      let { width, height } = img;\r\n      if (width > maxWidth) {\r\n        height = (height * maxWidth) / width;\r\n        width = maxWidth;\r\n      }\r\n      \r\n      canvas.width = width;\r\n      canvas.height = height;\r\n      \r\n      // Draw and compress\r\n      ctx.drawImage(img, 0, 0, width, height);\r\n      \r\n      canvas.toBlob(\r\n        (blob) => {\r\n          if (blob) {\r\n            const optimizedFile = new File([blob], file.name, {\r\n              type: file.type,\r\n              lastModified: Date.now(),\r\n            });\r\n            resolve(optimizedFile);\r\n          } else {\r\n            resolve(file);\r\n          }\r\n        },\r\n        file.type,\r\n        quality\r\n      );\r\n    };\r\n    \r\n    img.src = URL.createObjectURL(file);\r\n  });\r\n};\r\n\r\nconst getImageDimensions = (file: File): Promise<{ width: number; height: number }> => {\r\n  return new Promise((resolve) => {\r\n    const img = new window.Image();\r\n    img.onload = () => {\r\n      resolve({ width: img.width, height: img.height });\r\n    };\r\n    img.src = URL.createObjectURL(file);\r\n  });\r\n};\r\n\r\nexport function ProductImageManager({\r\n  productId,\r\n  images = [],\r\n  onChange,\r\n  error,\r\n  maxImages = 10,\r\n  maxFileSize = 5,\r\n  allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/webp', 'image/gif'],\r\n  enableOptimization = true,\r\n  className\r\n}: ProductImageManagerProps) {\r\n  const [draggedIndex, setDraggedIndex] = useState<number | null>(null);\r\n  const [editingIndex, setEditingIndex] = useState<number | null>(null);\r\n  const [editingAlt, setEditingAlt] = useState('');\r\n  const [uploading, setUploading] = useState(false);\r\n  const [uploadErrors, setUploadErrors] = useState<string[]>([]);\r\n  const [isDragOver, setIsDragOver] = useState(false);\r\n  const fileInputRef = useRef<HTMLInputElement>(null);\r\n\r\n  // Enhanced file upload with validation and optimization\r\n  const handleFileUpload = useCallback(async (files: FileList) => {\r\n    if (files.length === 0) {return;}\r\n    \r\n    const remainingSlots = maxImages - images.length;\r\n    if (remainingSlots <= 0) {\r\n      setUploadErrors(['Se ha alcanzado el limite maximo de imagenes']);\r\n      return;\r\n    }\r\n    \r\n    const filesToUpload = Array.from(files).slice(0, remainingSlots);\r\n    const errors: string[] = [];\r\n    \r\n    setUploading(true);\r\n    setUploadErrors([]);\r\n    \r\n    try {\r\n      const processedImages: ProductImage[] = [];\r\n      \r\n      for (const file of filesToUpload) {\r\n        // Validate file\r\n        const validationError = validateImageFile(file, maxFileSize);\r\n        if (validationError) {\r\n          errors.push(`${file.name}: ${validationError}`);\r\n          continue;\r\n        }\r\n        \r\n        try {\r\n          // Get original dimensions\r\n          const dimensions = await getImageDimensions(file);\r\n          \r\n          // Optimize image if enabled\r\n          const processedFile = enableOptimization ? await optimizeImage(file) : file;\r\n          \r\n          // Create temporary URL for preview\r\n          const url = URL.createObjectURL(processedFile);\r\n          \r\n          const newImage: ProductImage = {\r\n            id: `temp-${Date.now()}-${Math.random()}`,\r\n            url,\r\n            alt: file.name.replace(/\\.[^/.]+$/, ''),\r\n            is_primary: images.length === 0 && processedImages.length === 0,\r\n            file_size: processedFile.size,\r\n            file_type: processedFile.type,\r\n            width: dimensions.width,\r\n            height: dimensions.height,\r\n            upload_status: 'success'\r\n          };\r\n          \r\n          processedImages.push(newImage);\r\n        } catch (fileError) {\r\n          errors.push(`${file.name}: Error al procesar la imagen`);\r\n        }\r\n      }\r\n      \r\n      if (processedImages.length > 0) {\r\n        onChange([...images, ...processedImages]);\r\n      }\r\n      \r\n      if (errors.length > 0) {\r\n        setUploadErrors(errors);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error uploading images:', error);\r\n      setUploadErrors(['Error general al subir las imagenes']);\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  }, [images, maxImages, maxFileSize, enableOptimization, onChange]);\r\n\r\n  // Enhanced drag and drop functionality\r\n  const handleDragStart = useCallback((index: number) => {\r\n    setDraggedIndex(index);\r\n  }, []);\r\n\r\n  const handleDragOver = useCallback((e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n  }, []);\r\n\r\n  const handleDragEnter = useCallback((e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setIsDragOver(true);\r\n  }, []);\r\n\r\n  const handleDragLeave = useCallback((e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    // Only set to false if we're leaving the component entirely\r\n    if (!e.currentTarget.contains(e.relatedTarget as Node)) {\r\n      setIsDragOver(false);\r\n    }\r\n  }, []);\r\n\r\n  const handleDrop = useCallback((e: React.DragEvent, dropIndex?: number) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setIsDragOver(false);\r\n    \r\n    // Handle file drops (external files)\r\n    if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\r\n      handleFileUpload(e.dataTransfer.files);\r\n      return;\r\n    }\r\n    \r\n    // Handle image reordering (internal drag)\r\n    if (draggedIndex !== null && dropIndex !== undefined) {\r\n      const newImages = [...images];\r\n      const draggedImage = newImages[draggedIndex];\r\n      \r\n      // Remove dragged item\r\n      newImages.splice(draggedIndex, 1);\r\n      \r\n      // Insert at new position\r\n      const actualDropIndex = dropIndex > draggedIndex ? dropIndex - 1 : dropIndex;\r\n      newImages.splice(actualDropIndex, 0, draggedImage);\r\n      \r\n      onChange(newImages);\r\n    }\r\n    \r\n    setDraggedIndex(null);\r\n  }, [draggedIndex, images, onChange, handleFileUpload]);\r\n\r\n  // Handle file input change\r\n  const handleFileInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files) {\r\n      handleFileUpload(e.target.files);\r\n    }\r\n  }, [handleFileUpload]);\r\n\r\n  // Set primary image\r\n  const setPrimaryImage = (index: number) => {\r\n    const newImages = images.map((img, i) => ({\r\n      ...img,\r\n      is_primary: i === index,\r\n    }));\r\n    onChange(newImages);\r\n  };\r\n\r\n  // Remove image\r\n  const removeImage = (index: number) => {\r\n    const newImages = images.filter((_, i) => i !== index);\r\n    \r\n    // If we removed the primary image, make the first one primary\r\n    if (images[index].is_primary && newImages.length > 0) {\r\n      newImages[0].is_primary = true;\r\n    }\r\n    \r\n    onChange(newImages);\r\n  };\r\n\r\n  // Edit alt text\r\n  const startEditingAlt = (index: number) => {\r\n    setEditingIndex(index);\r\n    setEditingAlt(images[index].alt || '');\r\n  };\r\n\r\n  const saveAltText = () => {\r\n    if (editingIndex === null) {return;}\r\n    \r\n    const newImages = [...images];\r\n    newImages[editingIndex] = {\r\n      ...newImages[editingIndex],\r\n      alt: editingAlt,\r\n    };\r\n    \r\n    onChange(newImages);\r\n    setEditingIndex(null);\r\n    setEditingAlt('');\r\n  };\r\n\r\n  const cancelEditingAlt = () => {\r\n    setEditingIndex(null);\r\n    setEditingAlt('');\r\n  };\r\n\r\n  return (\r\n    <div className={cn(\"space-y-6\", className)}>\r\n      <AdminCard title=\"Gestion de Imagenes\" className=\"p-6\">\r\n        <div className=\"space-y-6\">\r\n          {/* Upload Area */}\r\n          <div \r\n            className={cn(\r\n              \"border-2 border-dashed rounded-lg p-6 transition-all duration-200\",\r\n              isDragOver \r\n                ? \"border-blaze-orange-400 bg-blaze-orange-50\" \r\n                : \"border-gray-300 hover:border-gray-400\",\r\n              uploading && \"opacity-50 pointer-events-none\",\r\n              images.length >= maxImages && \"opacity-50\"\r\n            )}\r\n            onDrop={(e) => handleDrop(e)}\r\n            onDragOver={handleDragOver}\r\n            onDragEnter={handleDragEnter}\r\n            onDragLeave={handleDragLeave}\r\n          >\r\n            <div className=\"text-center\">\r\n              {uploading ? (\r\n                <Loader2 className=\"mx-auto h-12 w-12 text-blaze-orange-500 animate-spin\" />\r\n              ) : (\r\n                <ImageIcon className={cn(\r\n                  \"mx-auto h-12 w-12\",\r\n                  isDragOver ? \"text-blaze-orange-500\" : \"text-gray-400\"\r\n                )} />\r\n              )}\r\n              \r\n              <div className=\"mt-4\">\r\n                {uploading ? (\r\n                  <p className=\"text-sm font-medium text-blaze-orange-600\">\r\n                    Procesando imagenes...\r\n                  </p>\r\n                ) : (\r\n                  <>\r\n                    <label htmlFor=\"file-upload\" className=\"cursor-pointer\">\r\n                      <span className=\"mt-2 block text-sm font-medium text-gray-900\">\r\n                        {isDragOver ? 'Suelta las imagenes aqui' : 'Arrastra imagenes aqui o'}{' '}\r\n                        {!isDragOver && (\r\n                          <span className=\"text-blaze-orange-600 hover:text-blaze-orange-500\">\r\n                            selecciona archivos\r\n                          </span>\r\n                        )}\r\n                      </span>\r\n                    </label>\r\n                    <input\r\n                      ref={fileInputRef}\r\n                      id=\"file-upload\"\r\n                      name=\"file-upload\"\r\n                      type=\"file\"\r\n                      className=\"sr-only\"\r\n                      multiple\r\n                      accept={allowedTypes.join(',')}\r\n                      onChange={handleFileInputChange}\r\n                      disabled={uploading || images.length >= maxImages}\r\n                    />\r\n                  </>\r\n                )}\r\n              </div>\r\n              \r\n              <p className=\"mt-1 text-xs text-gray-500\">\r\n                {allowedTypes.map(type => type.split('/')[1].toUpperCase()).join(', ')} hasta {maxFileSize}MB cada una. Maximo {maxImages} imagenes.\r\n              </p>\r\n              \r\n              {enableOptimization && (\r\n                <p className=\"mt-1 text-xs text-green-600\">\r\n                  Optimizacion automatica activada\r\n                </p>\r\n              )}\r\n              \r\n              {images.length >= maxImages && (\r\n                <div className=\"mt-3 flex items-center justify-center space-x-2 text-yellow-600\">\r\n                  <AlertCircle className=\"w-4 h-4\" />\r\n                  <span className=\"text-sm\">Limite de imagenes alcanzado</span>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Upload Errors */}\r\n          {uploadErrors.length > 0 && (\r\n            <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\r\n              <div className=\"flex items-start space-x-2\">\r\n                <XCircle className=\"w-5 h-5 text-red-500 mt-0.5 flex-shrink-0\" />\r\n                <div>\r\n                  <h4 className=\"text-sm font-medium text-red-800\">Errores al subir imagenes:</h4>\r\n                  <ul className=\"mt-1 text-sm text-red-700 space-y-1\">\r\n                    {uploadErrors.map((error, index) => (\r\n                      <li key={index}>• {error instanceof Error ? error.message : error?.toString() || 'Error desconocido'}</li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* General Error Message */}\r\n          {error && (\r\n            <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\r\n              <div className=\"flex items-center space-x-2\">\r\n                <XCircle className=\"w-5 h-5 text-red-500\" />\r\n                <span className=\"text-sm text-red-700\">\r\n                  {error instanceof Error ? error.message : error?.toString() || 'Error desconocido'}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Images Grid */}\r\n          {images.length > 0 && (\r\n            <div className=\"space-y-4\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <h4 className=\"text-sm font-medium text-gray-900\">\r\n                  Imagenes del Producto ({images.length}/{maxImages})\r\n                </h4>\r\n                <div className=\"flex items-center space-x-4\">\r\n                  {images.some(img => img.upload_status === 'uploading') && (\r\n                    <div className=\"flex items-center space-x-2 text-blaze-orange-600\">\r\n                      <Loader2 className=\"w-4 h-4 animate-spin\" />\r\n                      <span className=\"text-sm\">Subiendo...</span>\r\n                    </div>\r\n                  )}\r\n                  {images.length > 1 && (\r\n                    <p className=\"text-xs text-gray-500\">\r\n                      Arrastra para reordenar\r\n                    </p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\r\n                {images.map((image, index) => (\r\n                  <div\r\n                    key={image.id || index}\r\n                    draggable={image.upload_status !== 'uploading'}\r\n                    onDragStart={() => handleDragStart(index)}\r\n                    onDragOver={handleDragOver}\r\n                    onDrop={(e) => handleDrop(e, index)}\r\n                    className={cn(\r\n                      \"relative group border-2 rounded-lg overflow-hidden transition-all\",\r\n                      image.upload_status === 'uploading' ? \"cursor-wait\" : \"cursor-move\",\r\n                      image.is_primary \r\n                        ? \"border-blaze-orange-500 ring-2 ring-blaze-orange-200\" \r\n                        : \"border-gray-200 hover:border-gray-300\",\r\n                      draggedIndex === index && \"opacity-50\",\r\n                      image.upload_status === 'error' && \"border-red-300 bg-red-50\"\r\n                    )}\r\n                  >\r\n                    {/* Image */}\r\n                    <div className=\"aspect-square relative\">\r\n                      <Image\r\n                        src={image.url}\r\n                        alt={image.alt || `Imagen ${index + 1}`}\r\n                        fill\r\n                        className={cn(\r\n                          \"object-cover transition-opacity\",\r\n                          image.upload_status === 'uploading' && \"opacity-50\"\r\n                        )}\r\n                      />\r\n                      \r\n                      {/* Upload Status Overlay */}\r\n                      {image.upload_status === 'uploading' && (\r\n                        <div className=\"absolute inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\r\n                          <div className=\"text-center text-white\">\r\n                            <Loader2 className=\"w-8 h-8 animate-spin mx-auto mb-2\" />\r\n                            <div className=\"text-sm font-medium\">Subiendo...</div>\r\n                            {image.upload_progress !== undefined && (\r\n                              <div className=\"mt-2\">\r\n                                <div className=\"w-20 bg-gray-200 rounded-full h-1.5\">\r\n                                  <div \r\n                                    className=\"bg-blaze-orange-500 h-1.5 rounded-full transition-all duration-300\" \r\n                                    style={{ width: `${image.upload_progress}%` }}\r\n                                  ></div>\r\n                                </div>\r\n                                <div className=\"text-xs mt-1\">{Math.round(image.upload_progress)}%</div>\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                      \r\n                      {/* Error Status Overlay */}\r\n                      {image.upload_status === 'error' && (\r\n                        <div className=\"absolute inset-0 bg-red-500 bg-opacity-50 flex items-center justify-center\">\r\n                          <div className=\"text-center text-white\">\r\n                            <XCircle className=\"w-8 h-8 mx-auto mb-2\" />\r\n                            <div className=\"text-sm font-medium\">Error al subir</div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                      \r\n                      {/* Success Status Indicator */}\r\n                      {image.upload_status === 'success' && (\r\n                        <div className=\"absolute top-2 right-2 bg-green-500 rounded-full p-1\">\r\n                          <CheckCircle className=\"w-3 h-3 text-white\" />\r\n                        </div>\r\n                      )}\r\n                      \r\n                      {/* Primary Badge */}\r\n                      {image.is_primary && (\r\n                        <div className=\"absolute top-2 left-2 bg-blaze-orange-600 text-white text-xs px-2 py-1 rounded flex items-center space-x-1\">\r\n                          <Star className=\"w-3 h-3 fill-current\" />\r\n                          <span>Principal</span>\r\n                        </div>\r\n                      )}\r\n                      \r\n                      {/* File Info */}\r\n                      {(image.file_size || image.width) && (\r\n                        <div className=\"absolute bottom-0 left-0 right-0 bg-black bg-opacity-70 text-white text-xs p-2\">\r\n                          <div className=\"flex justify-between items-center\">\r\n                            {image.width && image.height && (\r\n                              <span>{image.width}x{image.height}</span>\r\n                            )}\r\n                            {image.file_size && (\r\n                              <span>{(image.file_size / (1024 * 1024)).toFixed(1)}MB</span>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                      \r\n                      {/* Actions Overlay */}\r\n                      {image.upload_status !== 'uploading' && (\r\n                        <div className=\"absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-50 transition-all flex items-center justify-center opacity-0 group-hover:opacity-100\">\r\n                          <div className=\"flex space-x-2\">\r\n                            {/* Set Primary */}\r\n                            <button\r\n                              type=\"button\"\r\n                              onClick={() => setPrimaryImage(index)}\r\n                              className=\"p-2 bg-white rounded-full hover:bg-gray-100 transition-colors\"\r\n                              title={image.is_primary ? \"Es imagen principal\" : \"Establecer como principal\"}\r\n                            >\r\n                              {image.is_primary ? (\r\n                                <Star className=\"w-4 h-4 text-yellow-500 fill-current\" />\r\n                              ) : (\r\n                                <StarOff className=\"w-4 h-4 text-gray-600\" />\r\n                              )}\r\n                            </button>\r\n                            \r\n                            {/* Edit Alt */}\r\n                            <button\r\n                              type=\"button\"\r\n                              onClick={() => startEditingAlt(index)}\r\n                              className=\"p-2 bg-white rounded-full hover:bg-gray-100 transition-colors\"\r\n                              title=\"Editar texto alternativo\"\r\n                            >\r\n                              <Edit className=\"w-4 h-4 text-gray-600\" />\r\n                            </button>\r\n                            \r\n                            {/* Remove */}\r\n                            <button\r\n                              type=\"button\"\r\n                              onClick={() => removeImage(index)}\r\n                              className=\"p-2 bg-white rounded-full hover:bg-red-100 transition-colors\"\r\n                              title=\"Eliminar imagen\"\r\n                            >\r\n                              <Trash2 className=\"w-4 h-4 text-red-600\" />\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                    \r\n                    {/* Alt Text */}\r\n                    <div className=\"p-2 bg-white\">\r\n                      {editingIndex === index ? (\r\n                        <div className=\"space-y-2\">\r\n                          <input\r\n                            type=\"text\"\r\n                            value={editingAlt}\r\n                            onChange={(e) => setEditingAlt(e.target.value)}\r\n                            className=\"w-full text-xs border border-gray-300 rounded px-2 py-1 focus:outline-none focus:ring-1 focus:ring-blaze-orange-500\"\r\n                            placeholder=\"Texto alternativo\"\r\n                          />\r\n                          <div className=\"flex space-x-1\">\r\n                            <button\r\n                              type=\"button\"\r\n                              onClick={saveAltText}\r\n                              className=\"flex-1 text-xs bg-blaze-orange-600 text-white px-2 py-1 rounded hover:bg-blaze-orange-700\"\r\n                            >\r\n                              Guardar\r\n                            </button>\r\n                            <button\r\n                              type=\"button\"\r\n                              onClick={cancelEditingAlt}\r\n                              className=\"flex-1 text-xs bg-gray-300 text-gray-700 px-2 py-1 rounded hover:bg-gray-400\"\r\n                            >\r\n                              Cancelar\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      ) : (\r\n                        <p className=\"text-xs text-gray-600 truncate\">\r\n                          {image.alt || 'Sin texto alternativo'}\r\n                        </p>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n                \r\n                {/* Add More Button */}\r\n                {images.length < maxImages && (\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => fileInputRef.current?.click()}\r\n                    className=\"aspect-square border-2 border-dashed border-gray-300 rounded-lg flex flex-col items-center justify-center hover:border-blaze-orange-400 hover:bg-blaze-orange-50 transition-colors\"\r\n                  >\r\n                    <Plus className=\"w-8 h-8 text-gray-400\" />\r\n                    <span className=\"text-xs text-gray-500 mt-2\">Agregar mas</span>\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Upload Progress */}\r\n          {uploading && (\r\n            <div className=\"flex items-center space-x-2 text-sm text-gray-600\">\r\n              <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-blaze-orange-600\"></div>\r\n              <span>Subiendo imagenes...</span>\r\n            </div>\r\n          )}\r\n\r\n          {/* Statistics Summary */}\r\n          {images.length > 0 && (\r\n            <div className=\"bg-gray-50 border border-gray-200 rounded-lg p-4\">\r\n              <h5 className=\"text-sm font-medium text-gray-800 mb-3\">\r\n                Resumen de Imagenes\r\n              </h5>\r\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-center\">\r\n                <div className=\"bg-white rounded-lg p-3\">\r\n                  <div className=\"text-lg font-semibold text-gray-900\">{images.length}</div>\r\n                  <div className=\"text-xs text-gray-500\">Total</div>\r\n                </div>\r\n                <div className=\"bg-white rounded-lg p-3\">\r\n                  <div className=\"text-lg font-semibold text-green-600\">\r\n                    {images.filter(img => img.upload_status === 'success').length}\r\n                  </div>\r\n                  <div className=\"text-xs text-gray-500\">Exitosas</div>\r\n                </div>\r\n                <div className=\"bg-white rounded-lg p-3\">\r\n                  <div className=\"text-lg font-semibold text-blaze-orange-600\">\r\n                    {images.filter(img => img.upload_status === 'uploading').length}\r\n                  </div>\r\n                  <div className=\"text-xs text-gray-500\">Subiendo</div>\r\n                </div>\r\n                <div className=\"bg-white rounded-lg p-3\">\r\n                  <div className=\"text-lg font-semibold text-red-600\">\r\n                    {images.filter(img => img.upload_status === 'error').length}\r\n                  </div>\r\n                  <div className=\"text-xs text-gray-500\">Con Error</div>\r\n                </div>\r\n              </div>\r\n              \r\n              {images.some(img => img.file_size) && (\r\n                <div className=\"mt-3 pt-3 border-t border-gray-200\">\r\n                  <div className=\"flex justify-between items-center text-sm\">\r\n                    <span className=\"text-gray-600\">Tamano total:</span>\r\n                    <span className=\"font-medium text-gray-900\">\r\n                      {(\r\n                        images\r\n                          .filter(img => img.file_size)\r\n                          .reduce((total, img) => total + (img.file_size || 0), 0) / (1024 * 1024)\r\n                      ).toFixed(1)} MB\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"flex justify-between items-center text-sm mt-1\">\r\n                    <span className=\"text-gray-600\">Con texto alternativo:</span>\r\n                    <span className=\"font-medium text-gray-900\">\r\n                      {images.filter(img => img.alt && img.alt.trim()).length} de {images.length}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n          {/* Tips */}\r\n          <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\r\n            <h5 className=\"text-sm font-medium text-blue-800 mb-2\">\r\n              Consejos para mejores imagenes:\r\n            </h5>\r\n            <ul className=\"text-xs text-blue-700 space-y-1\">\r\n              <li>• Usa imagenes de alta calidad (minimo 800x800px)</li>\r\n              <li>• La primera imagen sera la imagen principal del producto</li>\r\n              <li>• Incluye diferentes angulos y detalles del producto</li>\r\n              <li>• Agrega texto alternativo para mejorar la accesibilidad</li>\r\n              <li>• Arrastra las imagenes para cambiar el orden</li>\r\n              {enableOptimization && (\r\n                <li>• Las imagenes se optimizan automaticamente para mejor rendimiento</li>\r\n              )}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </AdminCard>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}