{"version":3,"names":["cov_2654neh42p","actualCoverage","s","PATCH","f","runtime","request","session","_config","auth","user","id","b","_server","NextResponse","json","error","status","userId","body","display","validatedDisplay","validateDisplaySettings","data","currentPrefs","fetchError","_supabase","supabaseAdmin","from","select","eq","single","code","console","existingPrefs","preferences","updatedPreferences","updatedPrefs","upsert","user_id","updated_at","Date","toISOString","requestInfo","_activityLogger","getRequestInfo","logPreferenceActivity","updated_settings","Object","keys","language","timezone","currency","theme","success","message","validated","supportedLanguages","includes","Intl","DateTimeFormat","undefined","timeZone","supportedCurrencies","supportedThemes","length"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\user\\preferences\\display\\route.ts"],"sourcesContent":["// Configuración para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - API DE PREFERENCIAS DE DISPLAY\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { auth } from '@/lib/auth/config';\r\nimport { supabaseAdmin } from '@/lib/integrations/supabase';\r\nimport { logPreferenceActivity, getRequestInfo } from '@/lib/activity/activityLogger';\r\n\r\n// PATCH - Actualizar preferencias de display\r\nexport async function PATCH(request: NextRequest) {\r\n  try {\r\n    const session = await auth();\r\n    if (!session?.user?.id) {\r\n      return NextResponse.json(\r\n        { error: 'No autorizado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    const userId = session.user.id;\r\n    const body = await request.json();\r\n    const { display } = body;\r\n\r\n    if (!display) {\r\n      return NextResponse.json(\r\n        { error: 'Configuración de display requerida' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Validar configuraciones de display\r\n    const validatedDisplay = validateDisplaySettings(display);\r\n    if (!validatedDisplay) {\r\n      return NextResponse.json(\r\n        { error: 'Configuración de display inválida' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Obtener preferencias actuales\r\n    const { data: currentPrefs, error: fetchError } = await supabaseAdmin\r\n      .from('user_preferences')\r\n      .select('preferences')\r\n      .eq('user_id', userId)\r\n      .single();\r\n\r\n    if (fetchError && fetchError.code !== 'PGRST116') {\r\n      console.error('Error al obtener preferencias actuales:', fetchError);\r\n      return NextResponse.json(\r\n        { error: 'Error al obtener preferencias actuales' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Combinar con preferencias existentes\r\n    const existingPrefs = currentPrefs?.preferences || {};\r\n    const updatedPreferences = {\r\n      ...existingPrefs,\r\n      display: {\r\n        ...existingPrefs.display,\r\n        ...validatedDisplay,\r\n      },\r\n    };\r\n\r\n    // Actualizar en la base de datos\r\n    const { data: updatedPrefs, error } = await supabaseAdmin\r\n      .from('user_preferences')\r\n      .upsert({\r\n        user_id: userId,\r\n        preferences: updatedPreferences,\r\n        updated_at: new Date().toISOString(),\r\n      })\r\n      .select()\r\n      .single();\r\n\r\n    if (error) {\r\n      console.error('Error al actualizar preferencias de display:', error);\r\n      return NextResponse.json(\r\n        { error: 'Error al actualizar preferencias de display' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Registrar actividad\r\n    const requestInfo = getRequestInfo(request);\r\n    await logPreferenceActivity(\r\n      userId,\r\n      'update_display',\r\n      {\r\n        updated_settings: Object.keys(validatedDisplay),\r\n        language: validatedDisplay.language,\r\n        timezone: validatedDisplay.timezone,\r\n        currency: validatedDisplay.currency,\r\n        theme: validatedDisplay.theme,\r\n      },\r\n      requestInfo\r\n    );\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      display: updatedPrefs.preferences.display,\r\n      message: 'Preferencias de display actualizadas correctamente',\r\n    });\r\n  } catch (error) {\r\n    console.error('Error en PATCH /api/user/preferences/display:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// Función para validar configuraciones de display\r\nfunction validateDisplaySettings(display: any): any | null {\r\n  try {\r\n    const validated: any = {};\r\n\r\n    // Validar idioma\r\n    if (display.language) {\r\n      const supportedLanguages = ['es', 'en', 'pt'];\r\n      if (supportedLanguages.includes(display.language)) {\r\n        validated.language = display.language;\r\n      }\r\n    }\r\n\r\n    // Validar zona horaria\r\n    if (display.timezone) {\r\n      try {\r\n        // Verificar que la zona horaria sea válida\r\n        Intl.DateTimeFormat(undefined, { timeZone: display.timezone });\r\n        validated.timezone = display.timezone;\r\n      } catch {\r\n        // Zona horaria inválida, no incluir en la validación\r\n      }\r\n    }\r\n\r\n    // Validar moneda\r\n    if (display.currency) {\r\n      const supportedCurrencies = ['ARS', 'USD', 'EUR', 'BRL', 'CLP', 'COP', 'MXN', 'PEN'];\r\n      if (supportedCurrencies.includes(display.currency)) {\r\n        validated.currency = display.currency;\r\n      }\r\n    }\r\n\r\n    // Validar tema\r\n    if (display.theme) {\r\n      const supportedThemes = ['light', 'dark', 'system'];\r\n      if (supportedThemes.includes(display.theme)) {\r\n        validated.theme = display.theme;\r\n      }\r\n    }\r\n\r\n    return Object.keys(validated).length > 0 ? validated : null;\r\n  } catch (error) {\r\n    console.error('Error al validar configuraciones de display:', error);\r\n    return null;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}