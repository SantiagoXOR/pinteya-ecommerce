{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\types\\api-strict.ts"],"sourcesContent":["// ===================================\r\n// PINTEYA E-COMMERCE - STRICT API TYPES\r\n// Tipos TypeScript estrictos para prevenir errores de API\r\n// ===================================\r\n\r\nimport { OrderEnterprise, OrderStatus, PaymentStatus, FulfillmentStatus } from './orders-enterprise';\r\n\r\n// ===================================\r\n// TIPOS BASE ESTRICTOS\r\n// ===================================\r\n\r\n/**\r\n * Tipo base para respuestas de API con validación estricta\r\n */\r\nexport interface StrictApiResponse<T> {\r\n  readonly success: true;\r\n  readonly data: T;\r\n  readonly message?: string;\r\n  readonly timestamp: string;\r\n}\r\n\r\nexport interface StrictApiError {\r\n  readonly success: false;\r\n  readonly error: string;\r\n  readonly code?: string;\r\n  readonly details?: Record<string, unknown>;\r\n  readonly timestamp: string;\r\n  readonly path: string;\r\n}\r\n\r\n/**\r\n * Union type para respuestas de API que garantiza type safety\r\n */\r\nexport type ApiResult<T> = StrictApiResponse<T> | StrictApiError;\r\n\r\n// ===================================\r\n// TIPOS DE PAGINACIÓN ESTRICTOS\r\n// ===================================\r\n\r\n/**\r\n * Paginación con validación estricta de tipos\r\n */\r\nexport interface StrictPagination {\r\n  readonly page: number & { __brand: 'PositiveInteger' };\r\n  readonly limit: number & { __brand: 'PositiveInteger' };\r\n  readonly total: number & { __brand: 'NonNegativeInteger' };\r\n  readonly totalPages: number & { __brand: 'NonNegativeInteger' };\r\n  readonly hasNextPage: boolean;\r\n  readonly hasPreviousPage: boolean;\r\n}\r\n\r\n/**\r\n * Respuesta paginada con tipos estrictos\r\n */\r\nexport interface StrictPaginatedResponse<T> {\r\n  readonly success: true;\r\n  readonly data: {\r\n    readonly items: readonly T[];\r\n    readonly pagination: StrictPagination;\r\n    readonly filters?: Record<string, unknown>;\r\n  };\r\n  readonly message?: string;\r\n  readonly timestamp: string;\r\n}\r\n\r\n// ===================================\r\n// TIPOS ESPECÍFICOS PARA ÓRDENES\r\n// ===================================\r\n\r\n/**\r\n * Orden con validación estricta de campos requeridos\r\n */\r\nexport interface StrictOrderEnterprise {\r\n  readonly id: string | number; // Flexible para string o number\r\n  readonly order_number?: string & { __brand: 'OrderNumber' }; // Opcional\r\n  readonly user_id?: string | number; // Opcional y flexible\r\n  readonly status: OrderStatus;\r\n  readonly payment_status?: PaymentStatus; // Opcional\r\n  readonly fulfillment_status?: FulfillmentStatus; // Opcional\r\n  readonly total: number & { __brand: 'PositiveAmount' };\r\n  readonly currency?: string & { __brand: 'CurrencyCode' }; // Opcional\r\n  readonly created_at: string & { __brand: 'ISODateString' };\r\n  readonly updated_at?: string & { __brand: 'ISODateString' }; // Opcional\r\n  \r\n  // Campos opcionales con tipos estrictos\r\n  readonly shipping_address?: StrictAddress;\r\n  readonly billing_address?: StrictAddress;\r\n  readonly notes?: string & { __brand: 'NonEmptyString' };\r\n  readonly admin_notes?: string & { __brand: 'NonEmptyString' };\r\n  readonly tracking_number?: string & { __brand: 'TrackingNumber' };\r\n  readonly carrier?: string & { __brand: 'CarrierName' };\r\n  readonly estimated_delivery?: string & { __brand: 'ISODateString' };\r\n  readonly metadata: Record<string, unknown>;\r\n  \r\n  // Relaciones con tipos estrictos\r\n  readonly user_profiles?: StrictUserProfile | null;\r\n  readonly order_items?: readonly StrictOrderItem[];\r\n  readonly status_history?: readonly StrictOrderStatusHistory[];\r\n  readonly order_notes?: readonly StrictOrderNote[];\r\n}\r\n\r\n/**\r\n * Perfil de usuario con validación estricta\r\n */\r\nexport interface StrictUserProfile {\r\n  readonly id: string & { __brand: 'UserId' };\r\n  readonly name: string & { __brand: 'NonEmptyString' };\r\n  readonly email: string & { __brand: 'EmailAddress' };\r\n  readonly phone?: string & { __brand: 'PhoneNumber' };\r\n  readonly avatar_url?: string & { __brand: 'URL' };\r\n}\r\n\r\n/**\r\n * Item de orden con validación estricta\r\n */\r\nexport interface StrictOrderItem {\r\n  readonly id: string & { __brand: 'OrderItemId' };\r\n  readonly order_id: string & { __brand: 'OrderId' };\r\n  readonly product_id: number & { __brand: 'ProductId' };\r\n  readonly quantity: number & { __brand: 'PositiveInteger' };\r\n  readonly unit_price: number & { __brand: 'PositiveAmount' };\r\n  readonly total_price: number & { __brand: 'PositiveAmount' };\r\n  readonly product_name: string & { __brand: 'NonEmptyString' };\r\n  readonly product_sku?: string & { __brand: 'SKU' };\r\n}\r\n\r\n/**\r\n * Dirección con validación estricta\r\n */\r\nexport interface StrictAddress {\r\n  readonly street: string & { __brand: 'NonEmptyString' };\r\n  readonly city: string & { __brand: 'NonEmptyString' };\r\n  readonly state: string & { __brand: 'NonEmptyString' };\r\n  readonly postal_code: string & { __brand: 'PostalCode' };\r\n  readonly country: string & { __brand: 'CountryCode' };\r\n  readonly phone?: string & { __brand: 'PhoneNumber' };\r\n}\r\n\r\n/**\r\n * Historial de estado con validación estricta\r\n */\r\nexport interface StrictOrderStatusHistory {\r\n  readonly id: string & { __brand: 'StatusHistoryId' };\r\n  readonly order_id: string & { __brand: 'OrderId' };\r\n  readonly from_status: OrderStatus | null;\r\n  readonly to_status: OrderStatus;\r\n  readonly reason?: string & { __brand: 'NonEmptyString' };\r\n  readonly admin_id?: string & { __brand: 'AdminId' };\r\n  readonly created_at: string & { __brand: 'ISODateString' };\r\n}\r\n\r\n/**\r\n * Nota de orden con validación estricta\r\n */\r\nexport interface StrictOrderNote {\r\n  readonly id: string & { __brand: 'OrderNoteId' };\r\n  readonly order_id: string & { __brand: 'OrderId' };\r\n  readonly content: string & { __brand: 'NonEmptyString' };\r\n  readonly is_admin_note: boolean;\r\n  readonly admin_id?: string & { __brand: 'AdminId' };\r\n  readonly created_at: string & { __brand: 'ISODateString' };\r\n}\r\n\r\n// ===================================\r\n// RESPUESTAS ESPECÍFICAS DE API\r\n// ===================================\r\n\r\n/**\r\n * Respuesta de lista de órdenes con tipos estrictos\r\n */\r\nexport interface StrictOrdersListResponse {\r\n  readonly success: true;\r\n  readonly data: {\r\n    readonly orders: readonly StrictOrderEnterprise[];\r\n    readonly pagination: StrictPagination;\r\n    readonly filters: {\r\n      readonly search?: string;\r\n      readonly status?: OrderStatus;\r\n      readonly payment_status?: PaymentStatus;\r\n      readonly fulfillment_status?: FulfillmentStatus;\r\n      readonly date_from?: string & { __brand: 'ISODateString' };\r\n      readonly date_to?: string & { __brand: 'ISODateString' };\r\n    };\r\n    readonly analytics?: {\r\n      readonly total_orders: number & { __brand: 'NonNegativeInteger' };\r\n      readonly total_revenue: number & { __brand: 'NonNegativeAmount' };\r\n      readonly pending_orders: number & { __brand: 'NonNegativeInteger' };\r\n      readonly completed_orders: number & { __brand: 'NonNegativeInteger' };\r\n      readonly today_revenue: number & { __brand: 'NonNegativeAmount' };\r\n    };\r\n  };\r\n  readonly message?: string;\r\n  readonly timestamp: string;\r\n}\r\n\r\n/**\r\n * Respuesta de orden individual con tipos estrictos\r\n */\r\nexport interface StrictOrderDetailResponse {\r\n  readonly success: true;\r\n  readonly data: {\r\n    readonly order: StrictOrderEnterprise;\r\n    readonly timeline?: readonly StrictOrderStatusHistory[];\r\n    readonly related_orders?: readonly Pick<StrictOrderEnterprise, 'id' | 'order_number' | 'status' | 'total'>[];\r\n  };\r\n  readonly message?: string;\r\n  readonly timestamp: string;\r\n}\r\n\r\n// ===================================\r\n// TIPOS GENÉRICOS PARA VALIDACIÓN\r\n// ===================================\r\n\r\n/**\r\n * Tipo genérico para objetos que pueden ser validados\r\n */\r\ntype ValidatableObject = Record<string, any> | null;\r\n\r\n/**\r\n * Tipo genérico para respuestas de API no tipadas\r\n */\r\ntype UntypedApiResponse = Record<string, any> | null;\r\n\r\n// ===================================\r\n// VALIDADORES DE TIPOS\r\n// ===================================\r\n\r\n/**\r\n * Validador para verificar si un objeto es una respuesta de API válida\r\n */\r\nexport function isStrictApiResponse<T>(obj: ValidatableObject): obj is StrictApiResponse<T> {\r\n  return (\r\n    typeof obj === 'object' &&\r\n    obj !== null &&\r\n    'success' in obj &&\r\n    obj.success === true &&\r\n    'data' in obj &&\r\n    'timestamp' in obj &&\r\n    typeof obj.timestamp === 'string'\r\n  );\r\n}\r\n\r\n/**\r\n * Validador para verificar si un objeto es un error de API válido\r\n */\r\nexport function isStrictApiError(obj: ValidatableObject): obj is StrictApiError {\r\n  return (\r\n    typeof obj === 'object' &&\r\n    obj !== null &&\r\n    'success' in obj &&\r\n    obj.success === false &&\r\n    'error' in obj &&\r\n    typeof obj.error === 'string' &&\r\n    'timestamp' in obj &&\r\n    typeof obj.timestamp === 'string'\r\n  );\r\n}\r\n\r\n/**\r\n * Validador para verificar si una paginación es válida\r\n */\r\nexport function isValidPagination(obj: ValidatableObject): obj is StrictPagination {\r\n  if (typeof obj !== 'object' || obj === null) {return false;}\r\n  \r\n  return (\r\n    typeof obj.page === 'number' &&\r\n    typeof obj.limit === 'number' &&\r\n    typeof obj.total === 'number' &&\r\n    typeof obj.totalPages === 'number' &&\r\n    typeof obj.hasNextPage === 'boolean' &&\r\n    typeof obj.hasPreviousPage === 'boolean' &&\r\n    obj.page > 0 &&\r\n    obj.limit > 0 &&\r\n    obj.total >= 0 &&\r\n    obj.totalPages >= 0\r\n  );\r\n}\r\n\r\n/**\r\n * Validador para verificar si una orden es válida (versión más flexible)\r\n */\r\nexport function isValidStrictOrder(obj: ValidatableObject): obj is StrictOrderEnterprise {\r\n  if (typeof obj !== 'object' || obj === null) {\r\n    return false;\r\n  }\r\n  \r\n  // Validaciones mínimas - solo campos absolutamente esenciales\r\n  const hasId = obj.id && (typeof obj.id === 'string' || typeof obj.id === 'number');\r\n  const hasTotal = typeof obj.total === 'number' && obj.total >= 0;\r\n  const hasCreatedAt = obj.created_at && typeof obj.created_at === 'string';\r\n  const hasStatus = obj.status && typeof obj.status === 'string';\r\n  \r\n  // Solo requerir los campos absolutamente esenciales\r\n  return hasId && hasTotal && hasCreatedAt && hasStatus;\r\n}\r\n\r\n// ===================================\r\n// UTILIDADES DE TRANSFORMACIÓN\r\n// ===================================\r\n\r\n/**\r\n * Transforma una respuesta de API no tipada a una respuesta estricta\r\n */\r\nexport function toStrictOrdersResponse(obj: UntypedApiResponse): StrictOrdersListResponse | StrictApiError {\r\n  try {\r\n    if (!isStrictApiResponse(obj)) {\r\n      return {\r\n        success: false,\r\n        error: 'Invalid API response format',\r\n        code: 'INVALID_RESPONSE_FORMAT',\r\n        timestamp: new Date().toISOString(),\r\n        path: '/api/admin/orders'\r\n      };\r\n    }\r\n\r\n    const response = obj as any;\r\n    \r\n    // Validar estructura de datos\r\n    if (!response.data || typeof response.data !== 'object') {\r\n      return {\r\n        success: false,\r\n        error: 'Missing or invalid data field',\r\n        code: 'INVALID_DATA_FIELD',\r\n        timestamp: new Date().toISOString(),\r\n        path: '/api/admin/orders'\r\n      };\r\n    }\r\n\r\n    // Validar órdenes\r\n    const orders = response.data.orders || [];\r\n    if (!Array.isArray(orders)) {\r\n      return {\r\n        success: false,\r\n        error: 'Orders field must be an array',\r\n        code: 'INVALID_ORDERS_FIELD',\r\n        timestamp: new Date().toISOString(),\r\n        path: '/api/admin/orders'\r\n      };\r\n    }\r\n\r\n    // Validar paginación\r\n    const pagination = response.data.pagination;\r\n    if (pagination && !isValidPagination(pagination)) {\r\n      return {\r\n        success: false,\r\n        error: 'Invalid pagination format',\r\n        code: 'INVALID_PAGINATION',\r\n        timestamp: new Date().toISOString(),\r\n        path: '/api/admin/orders'\r\n      };\r\n    }\r\n\r\n    // Transformar órdenes para asegurar compatibilidad\r\n    \r\n    // Transformar órdenes para normalizar tipos\r\n    const transformedOrders = orders.map((order: any) => ({\r\n      ...order,\r\n      id: String(order.id), // Convertir ID a string para compatibilidad frontend\r\n      user_id: order.user_id ? String(order.user_id) : order.user_id,\r\n      total: Number(order.total) || 0,\r\n      created_at: order.created_at || new Date().toISOString(),\r\n      status: order.status || 'pending',\r\n      metadata: order.metadata || {}\r\n    }));\r\n    \r\n    const validOrders = transformedOrders.filter(isValidStrictOrder);\r\n    \r\n    // Crear respuesta estricta con valores por defecto seguros\r\n    return {\r\n      success: true,\r\n      data: {\r\n        orders: validOrders,\r\n        pagination: pagination || {\r\n          page: 1 as any,\r\n          limit: 20 as any,\r\n          total: orders.length as any,\r\n          totalPages: Math.ceil(orders.length / 20) as any,\r\n          hasNextPage: false,\r\n          hasPreviousPage: false\r\n        },\r\n        filters: response.data.filters || {},\r\n        analytics: response.data.analytics\r\n      },\r\n      message: response.message,\r\n      timestamp: response.timestamp || new Date().toISOString()\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      success: false,\r\n      error: `Failed to parse API response: ${error instanceof Error ? error.message : 'Unknown error'}`,\r\n      code: 'PARSE_ERROR',\r\n      timestamp: new Date().toISOString(),\r\n      path: '/api/admin/orders'\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Crea una respuesta de error estricta\r\n */\r\nexport function createStrictApiError(\r\n  error: string,\r\n  code?: string,\r\n  details?: Record<string, unknown>,\r\n  path?: string\r\n): StrictApiError {\r\n  return {\r\n    success: false,\r\n    error,\r\n    code,\r\n    details,\r\n    timestamp: new Date().toISOString(),\r\n    path: path || '/api/unknown'\r\n  };\r\n}\r\n\r\n/**\r\n * Crea una respuesta exitosa estricta\r\n */\r\nexport function createStrictApiResponse<T>(\r\n  data: T,\r\n  message?: string\r\n): StrictApiResponse<T> {\r\n  return {\r\n    success: true,\r\n    data,\r\n    message,\r\n    timestamp: new Date().toISOString()\r\n  };\r\n}\r\n\r\n// ===================================\r\n// TIPOS DE UTILIDAD\r\n// ===================================\r\n\r\n/**\r\n * Extrae el tipo de datos de una respuesta de API\r\n */\r\nexport type ExtractApiData<T> = T extends StrictApiResponse<infer U> ? U : never;\r\n\r\n/**\r\n * Hace que todos los campos de un tipo sean de solo lectura recursivamente\r\n */\r\nexport type DeepReadonly<T> = {\r\n  readonly [P in keyof T]: T[P] extends object ? DeepReadonly<T[P]> : T[P];\r\n};\r\n\r\n/**\r\n * Tipo para funciones que manejan respuestas de API\r\n */\r\nexport type ApiHandler<T, R = void> = (response: ApiResult<T>) => R | Promise<R>;\r\n\r\n/**\r\n * Tipo para opciones de configuración de API\r\n */\r\nexport interface StrictApiOptions {\r\n  readonly timeout?: number;\r\n  readonly retries?: number;\r\n  readonly validateResponse?: boolean;\r\n  readonly throwOnError?: boolean;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["createStrictApiError","createStrictApiResponse","isStrictApiError","isStrictApiResponse","isValidPagination","isValidStrictOrder","toStrictOrdersResponse","obj","success","timestamp","error","page","limit","total","totalPages","hasNextPage","hasPreviousPage","hasId","id","hasTotal","hasCreatedAt","created_at","hasStatus","status","code","Date","toISOString","path","response","data","orders","Array","isArray","pagination","transformedOrders","map","order","String","user_id","Number","metadata","validOrders","filter","length","Math","ceil","filters","analytics","message","Error","details"],"mappings":"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"}