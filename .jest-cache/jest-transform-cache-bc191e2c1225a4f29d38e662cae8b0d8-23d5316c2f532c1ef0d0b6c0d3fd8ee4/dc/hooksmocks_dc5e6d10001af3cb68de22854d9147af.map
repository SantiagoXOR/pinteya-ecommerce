{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\__tests__\\__mocks__\\hooks-mocks.ts"],"sourcesContent":["// ===================================\r\n// MOCKS CENTRALIZADOS PARA HOOKS - PINTEYA E-COMMERCE\r\n// ===================================\r\n\r\n/**\r\n * Mocks especializados para hooks del proyecto\r\n * Incluye estados realistas y funciones mock completas\r\n */\r\n\r\nimport { mockProducts, mockCategories, mockOrders } from './api-mocks';\r\n\r\n// ===================================\r\n// MOCKS PARA useProducts\r\n// ===================================\r\n\r\nexport const mockUseProductsState = {\r\n  // Estado inicial\r\n  initial: {\r\n    products: [],\r\n    loading: true,\r\n    error: null,\r\n    pagination: {\r\n      page: 1,\r\n      limit: 12,\r\n      total: 0,\r\n      totalPages: 0\r\n    },\r\n    filters: {},\r\n    hasProducts: false,\r\n    isEmpty: false,\r\n    hasError: false,\r\n    hasNextPage: false,\r\n    hasPrevPage: false\r\n  },\r\n\r\n  // Estado con productos cargados\r\n  loaded: {\r\n    products: mockProducts,\r\n    loading: false,\r\n    error: null,\r\n    pagination: {\r\n      page: 1,\r\n      limit: 12,\r\n      total: mockProducts.length,\r\n      totalPages: 1\r\n    },\r\n    filters: {},\r\n    hasProducts: true,\r\n    isEmpty: false,\r\n    hasError: false,\r\n    hasNextPage: false,\r\n    hasPrevPage: false\r\n  },\r\n\r\n  // Estado con error\r\n  error: {\r\n    products: [],\r\n    loading: false,\r\n    error: 'Error obteniendo productos',\r\n    pagination: {\r\n      page: 1,\r\n      limit: 12,\r\n      total: 0,\r\n      totalPages: 0\r\n    },\r\n    filters: {},\r\n    hasProducts: false,\r\n    isEmpty: true,\r\n    hasError: true,\r\n    hasNextPage: false,\r\n    hasPrevPage: false\r\n  },\r\n\r\n  // Estado cargando\r\n  loading: {\r\n    products: [],\r\n    loading: true,\r\n    error: null,\r\n    pagination: {\r\n      page: 1,\r\n      limit: 12,\r\n      total: 0,\r\n      totalPages: 0\r\n    },\r\n    filters: {},\r\n    hasProducts: false,\r\n    isEmpty: false,\r\n    hasError: false,\r\n    hasNextPage: false,\r\n    hasPrevPage: false\r\n  }\r\n};\r\n\r\nexport const mockUseProductsFunctions = {\r\n  fetchProducts: jest.fn(),\r\n  updateFilters: jest.fn(),\r\n  changePage: jest.fn(),\r\n  changeLimit: jest.fn(),\r\n  changeSorting: jest.fn(),\r\n  searchProducts: jest.fn(),\r\n  filterByCategory: jest.fn(),\r\n  filterByPriceRange: jest.fn(),\r\n  clearFilters: jest.fn(),\r\n  refresh: jest.fn()\r\n};\r\n\r\nexport function createMockUseProducts(state = mockUseProductsState.loaded) {\r\n  return {\r\n    ...state,\r\n    ...mockUseProductsFunctions\r\n  };\r\n}\r\n\r\n// ===================================\r\n// MOCKS PARA useSearchErrorHandler\r\n// ===================================\r\n\r\nexport const mockUseSearchErrorHandlerState = {\r\n  // Estado inicial\r\n  initial: {\r\n    currentError: null,\r\n    retryCount: 0,\r\n    isRetrying: false,\r\n    hasError: false,\r\n    retryConfig: {\r\n      maxRetries: 3,\r\n      baseDelay: 1000,\r\n      maxDelay: 10000,\r\n      backoffFactor: 2\r\n    }\r\n  },\r\n\r\n  // Estado con error\r\n  withError: {\r\n    currentError: {\r\n      type: 'network' as const,\r\n      message: 'Error de conexión. Verifica tu conexión a internet.',\r\n      retryable: true,\r\n      timestamp: Date.now()\r\n    },\r\n    retryCount: 0,\r\n    isRetrying: false,\r\n    hasError: true,\r\n    retryConfig: {\r\n      maxRetries: 3,\r\n      baseDelay: 1000,\r\n      maxDelay: 10000,\r\n      backoffFactor: 2\r\n    }\r\n  },\r\n\r\n  // Estado reintentando\r\n  retrying: {\r\n    currentError: {\r\n      type: 'server' as const,\r\n      message: 'Error del servidor. Intenta nuevamente en unos momentos.',\r\n      retryable: true,\r\n      timestamp: Date.now()\r\n    },\r\n    retryCount: 1,\r\n    isRetrying: true,\r\n    hasError: true,\r\n    retryConfig: {\r\n      maxRetries: 3,\r\n      baseDelay: 1000,\r\n      maxDelay: 10000,\r\n      backoffFactor: 2\r\n    }\r\n  }\r\n};\r\n\r\nexport const mockUseSearchErrorHandlerFunctions = {\r\n  handleError: jest.fn(),\r\n  executeWithRetry: jest.fn(),\r\n  clearError: jest.fn(),\r\n  retryManually: jest.fn()\r\n};\r\n\r\nexport function createMockUseSearchErrorHandler(state = mockUseSearchErrorHandlerState.initial) {\r\n  return {\r\n    ...state,\r\n    ...mockUseSearchErrorHandlerFunctions\r\n  };\r\n}\r\n\r\n// ===================================\r\n// MOCKS PARA useCart\r\n// ===================================\r\n\r\nexport const mockCartItems = [\r\n  {\r\n    id: 1,\r\n    product: mockProducts[0],\r\n    quantity: 2,\r\n    price: mockProducts[0].discounted_price || mockProducts[0].price,\r\n    subtotal: (mockProducts[0].discounted_price || mockProducts[0].price) * 2\r\n  },\r\n  {\r\n    id: 2,\r\n    product: mockProducts[1],\r\n    quantity: 1,\r\n    price: mockProducts[1].price,\r\n    subtotal: mockProducts[1].price\r\n  }\r\n];\r\n\r\nexport const mockUseCartState = {\r\n  // Carrito vacío\r\n  empty: {\r\n    items: [],\r\n    itemCount: 0,\r\n    total: 0,\r\n    subtotal: 0,\r\n    tax: 0,\r\n    shipping: 0,\r\n    isEmpty: true,\r\n    isLoading: false\r\n  },\r\n\r\n  // Carrito con items\r\n  withItems: {\r\n    items: mockCartItems,\r\n    itemCount: mockCartItems.reduce((sum, item) => sum + item.quantity, 0),\r\n    total: mockCartItems.reduce((sum, item) => sum + item.subtotal, 0),\r\n    subtotal: mockCartItems.reduce((sum, item) => sum + item.subtotal, 0),\r\n    tax: 0,\r\n    shipping: 0,\r\n    isEmpty: false,\r\n    isLoading: false\r\n  }\r\n};\r\n\r\nexport const mockUseCartFunctions = {\r\n  addItem: jest.fn(),\r\n  removeItem: jest.fn(),\r\n  updateQuantity: jest.fn(),\r\n  clearCart: jest.fn(),\r\n  getItemQuantity: jest.fn(),\r\n  isInCart: jest.fn()\r\n};\r\n\r\nexport function createMockUseCart(state = mockUseCartState.empty) {\r\n  return {\r\n    ...state,\r\n    ...mockUseCartFunctions\r\n  };\r\n}\r\n\r\n// ===================================\r\n// MOCKS PARA useAuth (NextAuth)\r\n// ===================================\r\n\r\nexport const mockUser = {\r\n  id: 'user_123',\r\n  name: 'Juan Pérez',\r\n  email: 'juan.perez@example.com',\r\n  image: '/images/avatars/user-123.jpg',\r\n  role: 'customer'\r\n};\r\n\r\nexport const mockSession = {\r\n  user: mockUser,\r\n  expires: '2024-12-31T23:59:59.999Z'\r\n};\r\n\r\nexport const mockUseSessionState = {\r\n  // No autenticado\r\n  unauthenticated: {\r\n    data: null,\r\n    status: 'unauthenticated' as const\r\n  },\r\n\r\n  // Autenticado\r\n  authenticated: {\r\n    data: mockSession,\r\n    status: 'authenticated' as const\r\n  },\r\n\r\n  // Cargando\r\n  loading: {\r\n    data: null,\r\n    status: 'loading' as const\r\n  }\r\n};\r\n\r\nexport function createMockUseSession(state = mockUseSessionState.unauthenticated) {\r\n  return state;\r\n}\r\n\r\n// ===================================\r\n// MOCKS PARA useGeolocation\r\n// ===================================\r\n\r\nexport const mockGeolocationState = {\r\n  // Estado inicial\r\n  initial: {\r\n    location: null,\r\n    loading: false,\r\n    error: null,\r\n    supported: true\r\n  },\r\n\r\n  // Ubicación obtenida\r\n  located: {\r\n    location: {\r\n      latitude: -34.6037,\r\n      longitude: -58.3816,\r\n      accuracy: 10,\r\n      timestamp: Date.now()\r\n    },\r\n    loading: false,\r\n    error: null,\r\n    supported: true\r\n  },\r\n\r\n  // Error de geolocalización\r\n  error: {\r\n    location: null,\r\n    loading: false,\r\n    error: 'Geolocation permission denied',\r\n    supported: true\r\n  },\r\n\r\n  // No soportado\r\n  unsupported: {\r\n    location: null,\r\n    loading: false,\r\n    error: 'Geolocation not supported',\r\n    supported: false\r\n  }\r\n};\r\n\r\nexport const mockUseGeolocationFunctions = {\r\n  getCurrentLocation: jest.fn(),\r\n  watchPosition: jest.fn(),\r\n  clearWatch: jest.fn()\r\n};\r\n\r\nexport function createMockUseGeolocation(state = mockGeolocationState.initial) {\r\n  return {\r\n    ...state,\r\n    ...mockUseGeolocationFunctions\r\n  };\r\n}\r\n\r\n// ===================================\r\n// SETUP HELPER PARA HOOKS\r\n// ===================================\r\n\r\n/**\r\n * Configura mocks para múltiples hooks en tests\r\n */\r\nexport function setupHooksMocks() {\r\n  // Mock useProducts\r\n  const mockUseProducts = jest.fn(() => createMockUseProducts());\r\n  \r\n  // Mock useSearchErrorHandler\r\n  const mockUseSearchErrorHandler = jest.fn(() => createMockUseSearchErrorHandler());\r\n  \r\n  // Mock useCart\r\n  const mockUseCart = jest.fn(() => createMockUseCart());\r\n  \r\n  // Mock useSession\r\n  const mockUseSession = jest.fn(() => createMockUseSession());\r\n  \r\n  // Mock useGeolocation\r\n  const mockUseGeolocation = jest.fn(() => createMockUseGeolocation());\r\n\r\n  return {\r\n    mockUseProducts,\r\n    mockUseSearchErrorHandler,\r\n    mockUseCart,\r\n    mockUseSession,\r\n    mockUseGeolocation,\r\n    resetAllMocks: () => {\r\n      jest.clearAllMocks();\r\n      mockUseProducts.mockReturnValue(createMockUseProducts());\r\n      mockUseSearchErrorHandler.mockReturnValue(createMockUseSearchErrorHandler());\r\n      mockUseCart.mockReturnValue(createMockUseCart());\r\n      mockUseSession.mockReturnValue(createMockUseSession());\r\n      mockUseGeolocation.mockReturnValue(createMockUseGeolocation());\r\n    }\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["createMockUseCart","createMockUseGeolocation","createMockUseProducts","createMockUseSearchErrorHandler","createMockUseSession","mockCartItems","mockGeolocationState","mockSession","mockUseCartFunctions","mockUseCartState","mockUseGeolocationFunctions","mockUseProductsFunctions","mockUseProductsState","mockUseSearchErrorHandlerFunctions","mockUseSearchErrorHandlerState","mockUseSessionState","mockUser","setupHooksMocks","initial","products","loading","error","pagination","page","limit","total","totalPages","filters","hasProducts","isEmpty","hasError","hasNextPage","hasPrevPage","loaded","mockProducts","length","fetchProducts","jest","fn","updateFilters","changePage","changeLimit","changeSorting","searchProducts","filterByCategory","filterByPriceRange","clearFilters","refresh","state","currentError","retryCount","isRetrying","retryConfig","maxRetries","baseDelay","maxDelay","backoffFactor","withError","type","message","retryable","timestamp","Date","now","retrying","handleError","executeWithRetry","clearError","retryManually","id","product","quantity","price","discounted_price","subtotal","empty","items","itemCount","tax","shipping","isLoading","withItems","reduce","sum","item","addItem","removeItem","updateQuantity","clearCart","getItemQuantity","isInCart","name","email","image","role","user","expires","unauthenticated","data","status","authenticated","location","supported","located","latitude","longitude","accuracy","unsupported","getCurrentLocation","watchPosition","clearWatch","mockUseProducts","mockUseSearchErrorHandler","mockUseCart","mockUseSession","mockUseGeolocation","resetAllMocks","clearAllMocks","mockReturnValue"],"mappings":"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"}