{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\admin\\logistics\\LazyLogisticsComponents.tsx"],"sourcesContent":["// ===================================\n// PINTEYA E-COMMERCE - LAZY LOGISTICS COMPONENTS\n// Componentes con lazy loading para gestión de logística\n// ===================================\n\n'use client'\n\nimport React, { lazy, Suspense } from 'react'\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Skeleton } from '@/components/ui/skeleton'\nimport { Button } from '@/components/ui/button'\nimport {\n  Truck,\n  Map as MapIcon,\n  BarChart3,\n  Package,\n  AlertTriangle,\n  Loader2,\n  Activity,\n  Clock,\n} from 'lucide-react'\n\n// ===================================\n// LAZY IMPORTS\n// ===================================\n\n// Lazy loading de componentes de logística\nconst RealTimeDashboard = lazy(() => import('./RealTimeDashboard'))\nconst LogisticsMap = lazy(() => import('./LogisticsMap'))\nconst CarrierPerformanceTable = lazy(() => import('./CarrierPerformanceTable'))\nconst ShipmentsList = lazy(() => import('./ShipmentsList'))\nconst TrackingTimeline = lazy(() => import('./TrackingTimeline'))\nconst GeofenceManager = lazy(() => import('./GeofenceManager'))\n\n// ===================================\n// SKELETON COMPONENTS\n// ===================================\n\nfunction RealTimeDashboardSkeleton() {\n  return (\n    <div className='space-y-6'>\n      {/* Header */}\n      <div className='flex items-center justify-between'>\n        <div>\n          <Skeleton className='h-8 w-48 mb-2' />\n          <Skeleton className='h-4 w-64' />\n        </div>\n        <div className='flex gap-2'>\n          <Skeleton className='h-10 w-32' />\n          <Skeleton className='h-10 w-10' />\n        </div>\n      </div>\n\n      {/* Metrics Cards */}\n      <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4'>\n        {Array.from({ length: 4 }).map((_, i) => (\n          <Card key={i}>\n            <CardHeader className='flex flex-row items-center justify-between space-y-0 pb-2'>\n              <Skeleton className='h-4 w-20' />\n              <Truck className='h-4 w-4 text-muted-foreground' />\n            </CardHeader>\n            <CardContent>\n              <Skeleton className='h-8 w-16 mb-2' />\n              <Skeleton className='h-3 w-24' />\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n\n      {/* Main Content */}\n      <div className='grid grid-cols-1 lg:grid-cols-2 gap-6'>\n        {/* Map */}\n        <Card>\n          <CardHeader>\n            <CardTitle className='flex items-center gap-2'>\n              <MapIcon className='w-5 h-5' />\n              Mapa en Tiempo Real\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <Skeleton className='h-96 w-full rounded-lg' />\n          </CardContent>\n        </Card>\n\n        {/* Activity Feed */}\n        <Card>\n          <CardHeader>\n            <CardTitle className='flex items-center gap-2'>\n              <Activity className='w-5 h-5' />\n              Actividad Reciente\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className='space-y-4'>\n              {Array.from({ length: 6 }).map((_, i) => (\n                <div key={i} className='flex items-center space-x-3'>\n                  <Skeleton className='h-8 w-8 rounded-full' />\n                  <div className='flex-1 space-y-1'>\n                    <Skeleton className='h-4 w-full' />\n                    <Skeleton className='h-3 w-24' />\n                  </div>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  )\n}\n\nfunction LogisticsMapSkeleton() {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className='flex items-center gap-2'>\n          <MapIcon className='w-5 h-5' />\n          <Skeleton className='h-6 w-32' />\n        </CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className='relative'>\n          <Skeleton className='h-96 w-full rounded-lg' />\n          <div className='absolute top-4 right-4 space-y-2'>\n            <Skeleton className='h-8 w-8 rounded' />\n            <Skeleton className='h-8 w-8 rounded' />\n            <Skeleton className='h-8 w-8 rounded' />\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n\nfunction CarrierPerformanceTableSkeleton() {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className='flex items-center gap-2'>\n          <BarChart3 className='w-5 h-5' />\n          Performance de Couriers\n        </CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className='space-y-4'>\n          {/* Table Header */}\n          <div className='grid grid-cols-5 gap-4 pb-2 border-b'>\n            {['Courier', 'Entregas', 'Puntualidad', 'Rating', 'Acciones'].map((header, i) => (\n              <Skeleton key={i} className='h-4 w-20' />\n            ))}\n          </div>\n\n          {/* Table Rows */}\n          {Array.from({ length: 5 }).map((_, i) => (\n            <div key={i} className='grid grid-cols-5 gap-4 py-2'>\n              <div className='flex items-center space-x-2'>\n                <Skeleton className='h-8 w-8 rounded' />\n                <Skeleton className='h-4 w-24' />\n              </div>\n              <Skeleton className='h-4 w-16' />\n              <Skeleton className='h-4 w-20' />\n              <Skeleton className='h-4 w-16' />\n              <Skeleton className='h-8 w-20' />\n            </div>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n\nfunction ShipmentsListSkeleton() {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className='flex items-center gap-2'>\n          <Package className='w-5 h-5' />\n          Lista de Envíos\n        </CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className='space-y-4'>\n          {Array.from({ length: 8 }).map((_, i) => (\n            <div key={i} className='flex items-center justify-between p-4 border rounded-lg'>\n              <div className='flex items-center space-x-3'>\n                <Skeleton className='h-10 w-10 rounded' />\n                <div className='space-y-1'>\n                  <Skeleton className='h-4 w-32' />\n                  <Skeleton className='h-3 w-24' />\n                </div>\n              </div>\n              <div className='flex items-center space-x-2'>\n                <Skeleton className='h-6 w-16 rounded-full' />\n                <Skeleton className='h-8 w-20' />\n              </div>\n            </div>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n\nfunction TrackingTimelineSkeleton() {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className='flex items-center gap-2'>\n          <Clock className='w-5 h-5' />\n          Timeline de Seguimiento\n        </CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className='space-y-6'>\n          {Array.from({ length: 5 }).map((_, i) => (\n            <div key={i} className='flex items-start space-x-3'>\n              <Skeleton className='h-8 w-8 rounded-full mt-1' />\n              <div className='flex-1 space-y-2'>\n                <Skeleton className='h-4 w-full' />\n                <Skeleton className='h-3 w-32' />\n              </div>\n            </div>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n\n// ===================================\n// ERROR BOUNDARY\n// ===================================\n\ninterface ErrorBoundaryState {\n  hasError: boolean\n  error?: Error\n}\n\nclass LogisticsErrorBoundary extends React.Component<\n  React.PropsWithChildren<{}>,\n  ErrorBoundaryState\n> {\n  constructor(props: React.PropsWithChildren<{}>) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError(error: Error): ErrorBoundaryState {\n    return { hasError: true, error }\n  }\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n    console.error('Logistics component lazy loading error:', error, errorInfo)\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div className='flex items-center justify-center min-h-[400px]'>\n          <Card className='w-full max-w-md'>\n            <CardHeader>\n              <CardTitle className='flex items-center gap-2 text-red-600'>\n                <AlertTriangle className='h-5 w-5' />\n                Error de Carga\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <p className='text-sm text-gray-600 mb-4'>\n                No se pudo cargar el componente de logística. Por favor, intenta nuevamente.\n              </p>\n              <Button onClick={() => window.location.reload()} className='w-full'>\n                <Loader2 className='w-4 h-4 mr-2' />\n                Recargar\n              </Button>\n            </CardContent>\n          </Card>\n        </div>\n      )\n    }\n\n    return this.props.children\n  }\n}\n\n// ===================================\n// LAZY COMPONENTS\n// ===================================\n\nexport function LazyRealTimeDashboard(props: any) {\n  return (\n    <Suspense fallback={<RealTimeDashboardSkeleton />}>\n      <LogisticsErrorBoundary>\n        <RealTimeDashboard {...props} />\n      </LogisticsErrorBoundary>\n    </Suspense>\n  )\n}\n\nexport function LazyLogisticsMap(props: any) {\n  return (\n    <Suspense fallback={<LogisticsMapSkeleton />}>\n      <LogisticsErrorBoundary>\n        <LogisticsMap {...props} />\n      </LogisticsErrorBoundary>\n    </Suspense>\n  )\n}\n\nexport function LazyCarrierPerformanceTable(props: any) {\n  return (\n    <Suspense fallback={<CarrierPerformanceTableSkeleton />}>\n      <LogisticsErrorBoundary>\n        <CarrierPerformanceTable {...props} />\n      </LogisticsErrorBoundary>\n    </Suspense>\n  )\n}\n\nexport function LazyShipmentsList(props: any) {\n  return (\n    <Suspense fallback={<ShipmentsListSkeleton />}>\n      <LogisticsErrorBoundary>\n        <ShipmentsList {...props} />\n      </LogisticsErrorBoundary>\n    </Suspense>\n  )\n}\n\nexport function LazyTrackingTimeline(props: any) {\n  return (\n    <Suspense fallback={<TrackingTimelineSkeleton />}>\n      <LogisticsErrorBoundary>\n        <TrackingTimeline {...props} />\n      </LogisticsErrorBoundary>\n    </Suspense>\n  )\n}\n\nexport function LazyGeofenceManager(props: any) {\n  return (\n    <Suspense\n      fallback={\n        <div className='h-64 flex items-center justify-center'>\n          <Loader2 className='w-6 h-6 animate-spin' />\n        </div>\n      }\n    >\n      <LogisticsErrorBoundary>\n        <GeofenceManager {...props} />\n      </LogisticsErrorBoundary>\n    </Suspense>\n  )\n}\n\n// ===================================\n// PRELOADING HOOKS\n// ===================================\n\nexport function usePreloadLogisticsComponents() {\n  const preloadDashboard = React.useCallback(() => {\n    import('./RealTimeDashboard')\n  }, [])\n\n  const preloadMap = React.useCallback(() => {\n    import('./LogisticsMap')\n  }, [])\n\n  const preloadTable = React.useCallback(() => {\n    import('./CarrierPerformanceTable')\n  }, [])\n\n  const preloadShipments = React.useCallback(() => {\n    import('./ShipmentsList')\n  }, [])\n\n  return {\n    preloadDashboard,\n    preloadMap,\n    preloadTable,\n    preloadShipments,\n  }\n}\n\n// ===================================\n// PREFETCH COMPONENT\n// ===================================\n\nexport function LogisticsComponentsPrefetch() {\n  const { preloadDashboard, preloadMap, preloadTable, preloadShipments } =\n    usePreloadLogisticsComponents()\n\n  React.useEffect(() => {\n    // Precargar componentes críticos después de un delay\n    const timer = setTimeout(() => {\n      preloadDashboard()\n      preloadShipments()\n      // Map y Table se cargan bajo demanda por ser más pesados\n    }, 2000)\n\n    return () => clearTimeout(timer)\n  }, [preloadDashboard, preloadShipments])\n\n  return null\n}\n"],"names":["LazyCarrierPerformanceTable","LazyGeofenceManager","LazyLogisticsMap","LazyRealTimeDashboard","LazyShipmentsList","LazyTrackingTimeline","LogisticsComponentsPrefetch","usePreloadLogisticsComponents","RealTimeDashboard","lazy","LogisticsMap","CarrierPerformanceTable","ShipmentsList","TrackingTimeline","GeofenceManager","RealTimeDashboardSkeleton","div","className","Skeleton","Array","from","length","map","_","i","Card","CardHeader","Truck","CardContent","CardTitle","MapIcon","Activity","LogisticsMapSkeleton","CarrierPerformanceTableSkeleton","BarChart3","header","ShipmentsListSkeleton","Package","TrackingTimelineSkeleton","Clock","LogisticsErrorBoundary","React","Component","props","state","hasError","getDerivedStateFromError","error","componentDidCatch","errorInfo","console","render","AlertTriangle","p","Button","onClick","window","location","reload","Loader2","children","Suspense","fallback","preloadDashboard","useCallback","preloadMap","preloadTable","preloadShipments","useEffect","timer","setTimeout","clearTimeout"],"mappings":"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"}