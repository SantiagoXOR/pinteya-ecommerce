fc325887215d47f41fb0744ab447ec11
// ===================================
// HOOK: Network Error Handler
// ===================================
"use strict";

/* istanbul ignore next */
function cov_1zlqxxd53x() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useNetworkErrorHandler.ts";
  var hash = "698fc6939ab39f0e6786ebf051bfd77d7a909ca5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useNetworkErrorHandler.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "2": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "3": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 24,
          column: 3
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 36
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 38
        }
      },
      "6": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 42
        }
      },
      "7": {
        start: {
          line: 25,
          column: 15
        },
        end: {
          line: 25,
          column: 31
        }
      },
      "8": {
        start: {
          line: 26,
          column: 20
        },
        end: {
          line: 26,
          column: 52
        }
      },
      "9": {
        start: {
          line: 28,
          column: 92
        },
        end: {
          line: 28,
          column: 99
        }
      },
      "10": {
        start: {
          line: 29,
          column: 24
        },
        end: {
          line: 29,
          column: 57
        }
      },
      "11": {
        start: {
          line: 31,
          column: 26
        },
        end: {
          line: 51,
          column: 10
        }
      },
      "12": {
        start: {
          line: 32,
          column: 26
        },
        end: {
          line: 32,
          column: 36
        }
      },
      "13": {
        start: {
          line: 34,
          column: 19
        },
        end: {
          line: 34,
          column: 28
        }
      },
      "14": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 43,
          column: 9
        }
      },
      "15": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 36,
          column: 27
        }
      },
      "16": {
        start: {
          line: 37,
          column: 15
        },
        end: {
          line: 43,
          column: 9
        }
      },
      "17": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 38,
          column: 29
        }
      },
      "18": {
        start: {
          line: 39,
          column: 15
        },
        end: {
          line: 43,
          column: 9
        }
      },
      "19": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 40,
          column: 29
        }
      },
      "20": {
        start: {
          line: 41,
          column: 15
        },
        end: {
          line: 43,
          column: 9
        }
      },
      "21": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 42,
          column: 28
        }
      },
      "22": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 50,
          column: 10
        }
      },
      "23": {
        start: {
          line: 53,
          column: 31
        },
        end: {
          line: 120,
          column: 6
        }
      },
      "24": {
        start: {
          line: 54,
          column: 29
        },
        end: {
          line: 54,
          column: 49
        }
      },
      "25": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 68,
          column: 9
        }
      },
      "26": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 66,
          column: 13
        }
      },
      "27": {
        start: {
          line: 58,
          column: 16
        },
        end: {
          line: 64,
          column: 19
        }
      },
      "28": {
        start: {
          line: 65,
          column: 16
        },
        end: {
          line: 65,
          column: 85
        }
      },
      "29": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 67,
          column: 19
        }
      },
      "30": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 77,
          column: 9
        }
      },
      "31": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 70,
          column: 54
        }
      },
      "32": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 60
        }
      },
      "33": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 52
        }
      },
      "34": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 58
        }
      },
      "35": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 73
        }
      },
      "36": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 47
        }
      },
      "37": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 31
        }
      },
      "38": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 112,
          column: 9
        }
      },
      "39": {
        start: {
          line: 82,
          column: 16
        },
        end: {
          line: 86,
          column: 17
        }
      },
      "40": {
        start: {
          line: 83,
          column: 20
        },
        end: {
          line: 85,
          column: 35
        }
      },
      "41": {
        start: {
          line: 84,
          column: 24
        },
        end: {
          line: 84,
          column: 56
        }
      },
      "42": {
        start: {
          line: 87,
          column: 16
        },
        end: {
          line: 87,
          column: 22
        }
      },
      "43": {
        start: {
          line: 90,
          column: 16
        },
        end: {
          line: 96,
          column: 17
        }
      },
      "44": {
        start: {
          line: 91,
          column: 20
        },
        end: {
          line: 95,
          column: 39
        }
      },
      "45": {
        start: {
          line: 92,
          column: 24
        },
        end: {
          line: 94,
          column: 27
        }
      },
      "46": {
        start: {
          line: 97,
          column: 16
        },
        end: {
          line: 97,
          column: 22
        }
      },
      "47": {
        start: {
          line: 100,
          column: 16
        },
        end: {
          line: 104,
          column: 17
        }
      },
      "48": {
        start: {
          line: 101,
          column: 20
        },
        end: {
          line: 103,
          column: 39
        }
      },
      "49": {
        start: {
          line: 102,
          column: 24
        },
        end: {
          line: 102,
          column: 56
        }
      },
      "50": {
        start: {
          line: 105,
          column: 16
        },
        end: {
          line: 105,
          column: 22
        }
      },
      "51": {
        start: {
          line: 108,
          column: 16
        },
        end: {
          line: 110,
          column: 17
        }
      },
      "52": {
        start: {
          line: 109,
          column: 20
        },
        end: {
          line: 109,
          column: 65
        }
      },
      "53": {
        start: {
          line: 111,
          column: 16
        },
        end: {
          line: 111,
          column: 22
        }
      },
      "54": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 113,
          column: 28
        }
      },
      "55": {
        start: {
          line: 122,
          column: 37
        },
        end: {
          line: 155,
          column: 6
        }
      },
      "56": {
        start: {
          line: 124,
          column: 37
        },
        end: {
          line: 124,
          column: 50
        }
      },
      "57": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 136,
          column: 10
        }
      },
      "58": {
        start: {
          line: 126,
          column: 28
        },
        end: {
          line: 126,
          column: 42
        }
      },
      "59": {
        start: {
          line: 127,
          column: 33
        },
        end: {
          line: 127,
          column: 54
        }
      },
      "60": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 134,
          column: 13
        }
      },
      "61": {
        start: {
          line: 130,
          column: 16
        },
        end: {
          line: 132,
          column: 17
        }
      },
      "62": {
        start: {
          line: 131,
          column: 20
        },
        end: {
          line: 131,
          column: 91
        }
      },
      "63": {
        start: {
          line: 133,
          column: 16
        },
        end: {
          line: 133,
          column: 23
        }
      },
      "64": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 135,
          column: 42
        }
      },
      "65": {
        start: {
          line: 138,
          column: 41
        },
        end: {
          line: 146,
          column: 9
        }
      },
      "66": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 145,
          column: 13
        }
      },
      "67": {
        start: {
          line: 141,
          column: 16
        },
        end: {
          line: 141,
          column: 39
        }
      },
      "68": {
        start: {
          line: 142,
          column: 16
        },
        end: {
          line: 144,
          column: 17
        }
      },
      "69": {
        start: {
          line: 143,
          column: 20
        },
        end: {
          line: 143,
          column: 86
        }
      },
      "70": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 147,
          column: 80
        }
      },
      "71": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 152,
          column: 10
        }
      },
      "72": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 150,
          column: 49
        }
      },
      "73": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 151,
          column: 87
        }
      },
      "74": {
        start: {
          line: 157,
          column: 4
        },
        end: {
          line: 162,
          column: 7
        }
      },
      "75": {
        start: {
          line: 158,
          column: 24
        },
        end: {
          line: 158,
          column: 50
        }
      },
      "76": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 159,
          column: 23
        }
      },
      "77": {
        start: {
          line: 164,
          column: 31
        },
        end: {
          line: 189,
          column: 6
        }
      },
      "78": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 186,
          column: 10
        }
      },
      "79": {
        start: {
          line: 166,
          column: 28
        },
        end: {
          line: 166,
          column: 62
        }
      },
      "80": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 185,
          column: 13
        }
      },
      "81": {
        start: {
          line: 168,
          column: 33
        },
        end: {
          line: 172,
          column: 18
        }
      },
      "82": {
        start: {
          line: 173,
          column: 16
        },
        end: {
          line: 175,
          column: 17
        }
      },
      "83": {
        start: {
          line: 174,
          column: 20
        },
        end: {
          line: 174,
          column: 87
        }
      },
      "84": {
        start: {
          line: 176,
          column: 16
        },
        end: {
          line: 176,
          column: 32
        }
      },
      "85": {
        start: {
          line: 178,
          column: 37
        },
        end: {
          line: 182,
          column: 18
        }
      },
      "86": {
        start: {
          line: 184,
          column: 16
        },
        end: {
          line: 184,
          column: 49
        }
      },
      "87": {
        start: {
          line: 190,
          column: 4
        },
        end: {
          line: 195,
          column: 6
        }
      },
      "88": {
        start: {
          line: 198,
          column: 4
        },
        end: {
          line: 201,
          column: 7
        }
      },
      "89": {
        start: {
          line: 204,
          column: 4
        },
        end: {
          line: 209,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 16
          }
        },
        loc: {
          start: {
            line: 8,
            column: 30
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 32
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 34
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 38
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "4": {
        name: "useNetworkErrorHandler",
        decl: {
          start: {
            line: 27,
            column: 9
          },
          end: {
            line: 27,
            column: 31
          }
        },
        loc: {
          start: {
            line: 27,
            column: 46
          },
          end: {
            line: 196,
            column: 1
          }
        },
        line: 27
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 31,
            column: 50
          },
          end: {
            line: 31,
            column: 51
          }
        },
        loc: {
          start: {
            line: 31,
            column: 59
          },
          end: {
            line: 51,
            column: 5
          }
        },
        line: 31
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 53,
            column: 55
          },
          end: {
            line: 53,
            column: 56
          }
        },
        loc: {
          start: {
            line: 53,
            column: 73
          },
          end: {
            line: 114,
            column: 5
          }
        },
        line: 53
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 83,
            column: 31
          },
          end: {
            line: 83,
            column: 32
          }
        },
        loc: {
          start: {
            line: 83,
            column: 35
          },
          end: {
            line: 85,
            column: 21
          }
        },
        line: 83
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 91,
            column: 31
          },
          end: {
            line: 91,
            column: 32
          }
        },
        loc: {
          start: {
            line: 91,
            column: 35
          },
          end: {
            line: 95,
            column: 21
          }
        },
        line: 91
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 101,
            column: 31
          },
          end: {
            line: 101,
            column: 32
          }
        },
        loc: {
          start: {
            line: 101,
            column: 35
          },
          end: {
            line: 103,
            column: 21
          }
        },
        line: 101
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 122,
            column: 61
          },
          end: {
            line: 122,
            column: 62
          }
        },
        loc: {
          start: {
            line: 122,
            column: 65
          },
          end: {
            line: 153,
            column: 5
          }
        },
        line: 122
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 125,
            column: 24
          },
          end: {
            line: 125,
            column: 25
          }
        },
        loc: {
          start: {
            line: 125,
            column: 35
          },
          end: {
            line: 136,
            column: 9
          }
        },
        line: 125
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 138,
            column: 41
          },
          end: {
            line: 138,
            column: 42
          }
        },
        loc: {
          start: {
            line: 138,
            column: 50
          },
          end: {
            line: 146,
            column: 9
          }
        },
        line: 138
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 149,
            column: 15
          },
          end: {
            line: 149,
            column: 16
          }
        },
        loc: {
          start: {
            line: 149,
            column: 19
          },
          end: {
            line: 152,
            column: 9
          }
        },
        line: 149
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 157,
            column: 26
          },
          end: {
            line: 157,
            column: 27
          }
        },
        loc: {
          start: {
            line: 157,
            column: 30
          },
          end: {
            line: 160,
            column: 5
          }
        },
        line: 157
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 164,
            column: 55
          },
          end: {
            line: 164,
            column: 56
          }
        },
        loc: {
          start: {
            line: 164,
            column: 66
          },
          end: {
            line: 187,
            column: 5
          }
        },
        line: 164
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 165,
            column: 15
          },
          end: {
            line: 165,
            column: 16
          }
        },
        loc: {
          start: {
            line: 165,
            column: 42
          },
          end: {
            line: 186,
            column: 9
          }
        },
        line: 165
      },
      "17": {
        name: "useNetworkErrorSuppression",
        decl: {
          start: {
            line: 197,
            column: 9
          },
          end: {
            line: 197,
            column: 35
          }
        },
        loc: {
          start: {
            line: 197,
            column: 38
          },
          end: {
            line: 202,
            column: 1
          }
        },
        line: 197
      },
      "18": {
        name: "useNetworkErrorDebug",
        decl: {
          start: {
            line: 203,
            column: 9
          },
          end: {
            line: 203,
            column: 29
          }
        },
        loc: {
          start: {
            line: 203,
            column: 32
          },
          end: {
            line: 210,
            column: 1
          }
        },
        line: 203
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 27,
            column: 32
          },
          end: {
            line: 27,
            column: 44
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 27,
            column: 42
          },
          end: {
            line: 27,
            column: 44
          }
        }],
        line: 27
      },
      "1": {
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 32
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 28,
            column: 28
          },
          end: {
            line: 28,
            column: 32
          }
        }],
        line: 28
      },
      "2": {
        loc: {
          start: {
            line: 28,
            column: 34
          },
          end: {
            line: 28,
            column: 52
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 28,
            column: 48
          },
          end: {
            line: 28,
            column: 52
          }
        }],
        line: 28
      },
      "3": {
        loc: {
          start: {
            line: 28,
            column: 54
          },
          end: {
            line: 28,
            column: 68
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 28,
            column: 67
          },
          end: {
            line: 28,
            column: 68
          }
        }],
        line: 28
      },
      "4": {
        loc: {
          start: {
            line: 28,
            column: 70
          },
          end: {
            line: 28,
            column: 87
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 28,
            column: 83
          },
          end: {
            line: 28,
            column: 87
          }
        }],
        line: 28
      },
      "5": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 43,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 43,
            column: 9
          }
        }, {
          start: {
            line: 37,
            column: 15
          },
          end: {
            line: 43,
            column: 9
          }
        }],
        line: 35
      },
      "6": {
        loc: {
          start: {
            line: 35,
            column: 12
          },
          end: {
            line: 35,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 12
          },
          end: {
            line: 35,
            column: 41
          }
        }, {
          start: {
            line: 35,
            column: 45
          },
          end: {
            line: 35,
            column: 73
          }
        }],
        line: 35
      },
      "7": {
        loc: {
          start: {
            line: 37,
            column: 15
          },
          end: {
            line: 43,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 15
          },
          end: {
            line: 43,
            column: 9
          }
        }, {
          start: {
            line: 39,
            column: 15
          },
          end: {
            line: 43,
            column: 9
          }
        }],
        line: 37
      },
      "8": {
        loc: {
          start: {
            line: 37,
            column: 19
          },
          end: {
            line: 37,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 19
          },
          end: {
            line: 37,
            column: 48
          }
        }, {
          start: {
            line: 37,
            column: 52
          },
          end: {
            line: 37,
            column: 87
          }
        }],
        line: 37
      },
      "9": {
        loc: {
          start: {
            line: 39,
            column: 15
          },
          end: {
            line: 43,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 15
          },
          end: {
            line: 43,
            column: 9
          }
        }, {
          start: {
            line: 41,
            column: 15
          },
          end: {
            line: 43,
            column: 9
          }
        }],
        line: 39
      },
      "10": {
        loc: {
          start: {
            line: 39,
            column: 19
          },
          end: {
            line: 39,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 19
          },
          end: {
            line: 39,
            column: 44
          }
        }, {
          start: {
            line: 39,
            column: 48
          },
          end: {
            line: 39,
            column: 83
          }
        }],
        line: 39
      },
      "11": {
        loc: {
          start: {
            line: 41,
            column: 15
          },
          end: {
            line: 43,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 15
          },
          end: {
            line: 43,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "12": {
        loc: {
          start: {
            line: 48,
            column: 17
          },
          end: {
            line: 48,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 17
          },
          end: {
            line: 48,
            column: 35
          }
        }, {
          start: {
            line: 48,
            column: 39
          },
          end: {
            line: 48,
            column: 49
          }
        }],
        line: 48
      },
      "13": {
        loc: {
          start: {
            line: 49,
            column: 20
          },
          end: {
            line: 49,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 20
          },
          end: {
            line: 49,
            column: 41
          }
        }, {
          start: {
            line: 49,
            column: 45
          },
          end: {
            line: 49,
            column: 58
          }
        }],
        line: 49
      },
      "14": {
        loc: {
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "15": {
        loc: {
          start: {
            line: 57,
            column: 12
          },
          end: {
            line: 66,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 12
          },
          end: {
            line: 66,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "16": {
        loc: {
          start: {
            line: 69,
            column: 8
          },
          end: {
            line: 77,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 8
          },
          end: {
            line: 77,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 69
      },
      "17": {
        loc: {
          start: {
            line: 79,
            column: 8
          },
          end: {
            line: 112,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 80,
            column: 12
          },
          end: {
            line: 87,
            column: 22
          }
        }, {
          start: {
            line: 88,
            column: 12
          },
          end: {
            line: 97,
            column: 22
          }
        }, {
          start: {
            line: 98,
            column: 12
          },
          end: {
            line: 105,
            column: 22
          }
        }, {
          start: {
            line: 106,
            column: 12
          },
          end: {
            line: 111,
            column: 22
          }
        }],
        line: 79
      },
      "18": {
        loc: {
          start: {
            line: 82,
            column: 16
          },
          end: {
            line: 86,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 16
          },
          end: {
            line: 86,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "19": {
        loc: {
          start: {
            line: 90,
            column: 16
          },
          end: {
            line: 96,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 16
          },
          end: {
            line: 96,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "20": {
        loc: {
          start: {
            line: 100,
            column: 16
          },
          end: {
            line: 104,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 100,
            column: 16
          },
          end: {
            line: 104,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 100
      },
      "21": {
        loc: {
          start: {
            line: 108,
            column: 16
          },
          end: {
            line: 110,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 108,
            column: 16
          },
          end: {
            line: 110,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 108
      },
      "22": {
        loc: {
          start: {
            line: 129,
            column: 12
          },
          end: {
            line: 134,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 129,
            column: 12
          },
          end: {
            line: 134,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 129
      },
      "23": {
        loc: {
          start: {
            line: 129,
            column: 16
          },
          end: {
            line: 129,
            column: 331
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 129,
            column: 16
          },
          end: {
            line: 129,
            column: 51
          }
        }, {
          start: {
            line: 129,
            column: 55
          },
          end: {
            line: 129,
            column: 97
          }
        }, {
          start: {
            line: 129,
            column: 101
          },
          end: {
            line: 129,
            column: 137
          }
        }, {
          start: {
            line: 129,
            column: 141
          },
          end: {
            line: 129,
            column: 201
          }
        }, {
          start: {
            line: 129,
            column: 205
          },
          end: {
            line: 129,
            column: 263
          }
        }, {
          start: {
            line: 129,
            column: 267
          },
          end: {
            line: 129,
            column: 297
          }
        }, {
          start: {
            line: 129,
            column: 301
          },
          end: {
            line: 129,
            column: 331
          }
        }],
        line: 129
      },
      "24": {
        loc: {
          start: {
            line: 130,
            column: 16
          },
          end: {
            line: 132,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 130,
            column: 16
          },
          end: {
            line: 132,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 130
      },
      "25": {
        loc: {
          start: {
            line: 139,
            column: 12
          },
          end: {
            line: 145,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 139,
            column: 12
          },
          end: {
            line: 145,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 139
      },
      "26": {
        loc: {
          start: {
            line: 139,
            column: 16
          },
          end: {
            line: 139,
            column: 137
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 139,
            column: 16
          },
          end: {
            line: 139,
            column: 51
          }
        }, {
          start: {
            line: 139,
            column: 55
          },
          end: {
            line: 139,
            column: 91
          }
        }, {
          start: {
            line: 139,
            column: 95
          },
          end: {
            line: 139,
            column: 137
          }
        }],
        line: 139
      },
      "27": {
        loc: {
          start: {
            line: 142,
            column: 16
          },
          end: {
            line: 144,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 16
          },
          end: {
            line: 144,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "28": {
        loc: {
          start: {
            line: 165,
            column: 27
          },
          end: {
            line: 165,
            column: 39
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 165,
            column: 37
          },
          end: {
            line: 165,
            column: 39
          }
        }],
        line: 165
      },
      "29": {
        loc: {
          start: {
            line: 166,
            column: 28
          },
          end: {
            line: 166,
            column: 62
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 166,
            column: 38
          },
          end: {
            line: 166,
            column: 56
          }
        }, {
          start: {
            line: 166,
            column: 59
          },
          end: {
            line: 166,
            column: 62
          }
        }],
        line: 166
      },
      "30": {
        loc: {
          start: {
            line: 171,
            column: 28
          },
          end: {
            line: 171,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 171,
            column: 28
          },
          end: {
            line: 171,
            column: 42
          }
        }, {
          start: {
            line: 171,
            column: 46
          },
          end: {
            line: 171,
            column: 72
          }
        }],
        line: 171
      },
      "31": {
        loc: {
          start: {
            line: 173,
            column: 16
          },
          end: {
            line: 175,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 16
          },
          end: {
            line: 175,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 173
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0],
      "4": [0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0, 0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0, 0, 0, 0, 0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0, 0],
      "27": [0, 0],
      "28": [0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useNetworkErrorHandler.ts"],
      sourcesContent: ["// ===================================\r\n// HOOK: Network Error Handler\r\n// ===================================\r\n\r\nimport { useEffect, useCallback } from 'react';\r\nimport { useQueryClient } from '@tanstack/react-query';\r\n\r\ninterface NetworkErrorHandlerOptions {\r\n  enableLogging?: boolean;\r\n  enableRetry?: boolean;\r\n  maxRetries?: number;\r\n  retryDelay?: number;\r\n}\r\n\r\ninterface NetworkError {\r\n  type: 'network' | 'timeout' | 'abort' | 'server' | 'unknown';\r\n  originalError: any;\r\n  timestamp: number;\r\n  url?: string;\r\n  method?: string;\r\n}\r\n\r\nexport function useNetworkErrorHandler(options: NetworkErrorHandlerOptions = {}) {\r\n  const {\r\n    enableLogging = true,\r\n    enableRetry = true,\r\n    maxRetries = 3,\r\n    retryDelay = 1000\r\n  } = options;\r\n\r\n  const queryClient = useQueryClient();\r\n\r\n  // Funci\xF3n para clasificar errores de red\r\n  const classifyError = useCallback((error: any): NetworkError => {\r\n    const timestamp = Date.now();\r\n    \r\n    // Detectar tipo de error\r\n    let type: NetworkError['type'] = 'unknown';\r\n    \r\n    if (error?.code === 'ERR_ABORTED' || error?.name === 'AbortError') {\r\n      type = 'abort';\r\n    } else if (error?.code === 'ERR_NETWORK' || error?.message?.includes('network')) {\r\n      type = 'network';\r\n    } else if (error?.code === 'TIMEOUT' || error?.message?.includes('timeout')) {\r\n      type = 'timeout';\r\n    } else if (error?.status >= 500) {\r\n      type = 'server';\r\n    }\r\n\r\n    return {\r\n      type,\r\n      originalError: error,\r\n      timestamp,\r\n      url: error?.config?.url || error?.url,\r\n      method: error?.config?.method || error?.method\r\n    };\r\n  }, []);\r\n\r\n  // Funci\xF3n para manejar errores de red\r\n  const handleNetworkError = useCallback((error: any, context?: any) => {\r\n    const networkError = classifyError(error);\r\n\r\n    // Para errores de abort, usar console.debug en lugar de console.error para evitar bucles\r\n    if (networkError.type === 'abort') {\r\n      if (enableLogging) {\r\n        console.debug('\uD83D\uDD07 Suppressed abort error:', {\r\n          type: networkError.type,\r\n          url: networkError.url,\r\n          method: networkError.method,\r\n          originalError: networkError.originalError,\r\n          context\r\n        });\r\n        console.warn('\uD83D\uDEAB Request was aborted - this is usually intentional');\r\n      }\r\n      return; // Salir temprano para errores de abort\r\n    }\r\n\r\n    if (enableLogging) {\r\n      console.group('\uD83C\uDF10 Network Error Handler');\r\n      console.error('Error Type:', networkError.type);\r\n      console.error('URL:', networkError.url);\r\n      console.error('Method:', networkError.method);\r\n      console.error('Original Error:', networkError.originalError);\r\n      console.error('Context:', context);\r\n      console.groupEnd();\r\n    }\r\n\r\n    // Manejar diferentes tipos de errores\r\n    switch (networkError.type) {\r\n\r\n      case 'network':\r\n        // Errores de red - invalidar queries para refetch\r\n        if (enableRetry) {\r\n          setTimeout(() => {\r\n            queryClient.invalidateQueries();\r\n          }, retryDelay);\r\n        }\r\n        break;\r\n\r\n      case 'timeout':\r\n        // Timeouts - reintentar con delay\r\n        if (enableRetry) {\r\n          setTimeout(() => {\r\n            queryClient.refetchQueries({ type: 'active' });\r\n          }, retryDelay * 2);\r\n        }\r\n        break;\r\n\r\n      case 'server':\r\n        // Errores de servidor - reintentar despu\xE9s de un delay m\xE1s largo\r\n        if (enableRetry) {\r\n          setTimeout(() => {\r\n            queryClient.invalidateQueries();\r\n          }, retryDelay * 3);\r\n        }\r\n        break;\r\n\r\n      default:\r\n        // Errores desconocidos - log para debugging\r\n        if (enableLogging) {\r\n          console.warn('\u2753 Unknown error type:', error);\r\n        }\r\n        break;\r\n    }\r\n\r\n    return networkError;\r\n  }, [classifyError, enableLogging, enableRetry, retryDelay, queryClient]);\r\n\r\n  // Funci\xF3n para interceptar errores de abort y console.error\r\n  const setupGlobalErrorHandling = useCallback(() => {\r\n    // Interceptar console.error para filtrar AbortErrors\r\n    const originalConsoleError = console.error;\r\n    console.error = (...args) => {\r\n      const message = args.join(' ');\r\n      const lowerMessage = message.toLowerCase();\r\n\r\n      // Filtrar errores de AbortError espec\xEDficos\r\n      if (lowerMessage.includes('aborterror') ||\r\n          lowerMessage.includes('signal is aborted') ||\r\n          lowerMessage.includes('err_aborted') ||\r\n          message.includes('\u274C Error obteniendo productos: AbortError') ||\r\n          message.includes('Error obteniendo productos: AbortError') ||\r\n          (lowerMessage.includes('error') && lowerMessage.includes('abort'))) {\r\n        if (enableLogging) {\r\n          console.debug('\uD83D\uDD07 Suppressed AbortError from console.error:', ...args);\r\n        }\r\n        return;\r\n      }\r\n      originalConsoleError(...args);\r\n    };\r\n\r\n    // Solo interceptar errores de unhandled promise rejections para AbortError\r\n    const handleUnhandledRejection = (event: PromiseRejectionEvent) => {\r\n      if (event.reason?.name === 'AbortError' ||\r\n          event.reason?.code === 'ERR_ABORTED' ||\r\n          event.reason?.message?.includes('aborted')) {\r\n        // Prevenir que los errores de abort aparezcan en la consola\r\n        event.preventDefault();\r\n        if (enableLogging) {\r\n          console.debug('\uD83D\uDD07 Suppressed AbortError from unhandledrejection');\r\n        }\r\n      }\r\n    };\r\n\r\n    window.addEventListener('unhandledrejection', handleUnhandledRejection);\r\n\r\n    // Cleanup function\r\n    return () => {\r\n      console.error = originalConsoleError;\r\n      window.removeEventListener('unhandledrejection', handleUnhandledRejection);\r\n    };\r\n  }, [enableLogging]);\r\n\r\n  // Setup global error handling on mount\r\n  useEffect(() => {\r\n    const cleanup = setupGlobalErrorHandling();\r\n    return cleanup;\r\n  }, [setupGlobalErrorHandling]);\r\n\r\n  // Funci\xF3n para crear un wrapper de fetch con manejo de errores\r\n  const createFetchWrapper = useCallback((baseUrl?: string) => {\r\n    return async (url: string, options: RequestInit = {}) => {\r\n      const fullUrl = baseUrl ? `${baseUrl}${url}` : url;\r\n      \r\n      try {\r\n        const response = await fetch(fullUrl, {\r\n          ...options,\r\n          // Agregar timeout por defecto\r\n          signal: options.signal || AbortSignal.timeout(10000)\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n        }\r\n\r\n        return response;\r\n      } catch (error) {\r\n        const networkError = handleNetworkError(error, { \r\n          type: 'wrapper', \r\n          url: fullUrl, \r\n          options \r\n        });\r\n        \r\n        // Re-throw el error para que pueda ser manejado por el c\xF3digo que llama\r\n        throw networkError.originalError;\r\n      }\r\n    };\r\n  }, [handleNetworkError]);\r\n\r\n  return {\r\n    handleNetworkError,\r\n    classifyError,\r\n    createFetchWrapper,\r\n    setupGlobalErrorHandling\r\n  };\r\n}\r\n\r\n// Hook simplificado para uso b\xE1sico\r\nexport function useNetworkErrorSuppression() {\r\n  return useNetworkErrorHandler({\r\n    enableLogging: false,\r\n    enableRetry: false\r\n  });\r\n}\r\n\r\n// Hook para desarrollo con logging detallado\r\nexport function useNetworkErrorDebug() {\r\n  return useNetworkErrorHandler({\r\n    enableLogging: true,\r\n    enableRetry: true,\r\n    maxRetries: 5,\r\n    retryDelay: 500\r\n  });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["useNetworkErrorDebug", "useNetworkErrorHandler", "useNetworkErrorSuppression", "options", "enableLogging", "enableRetry", "maxRetries", "retryDelay", "queryClient", "useQueryClient", "classifyError", "useCallback", "error", "timestamp", "Date", "now", "type", "code", "name", "message", "includes", "status", "originalError", "url", "config", "method", "handleNetworkError", "context", "networkError", "console", "debug", "warn", "group", "groupEnd", "setTimeout", "invalidateQueries", "refetchQueries", "setupGlobalErrorHandling", "originalConsoleError", "args", "join", "lowerMessage", "toLowerCase", "handleUnhandledRejection", "event", "reason", "preventDefault", "window", "addEventListener", "removeEventListener", "useEffect", "cleanup", "createFetchWrapper", "baseUrl", "fullUrl", "response", "fetch", "signal", "AbortSignal", "timeout", "ok", "Error", "statusText"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "698fc6939ab39f0e6786ebf051bfd77d7a909ca5"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1zlqxxd53x = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1zlqxxd53x();
cov_1zlqxxd53x().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1zlqxxd53x().f[0]++;
  cov_1zlqxxd53x().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1zlqxxd53x().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1zlqxxd53x().s[3]++;
_export(exports, {
  get useNetworkErrorDebug() {
    /* istanbul ignore next */
    cov_1zlqxxd53x().f[1]++;
    cov_1zlqxxd53x().s[4]++;
    return useNetworkErrorDebug;
  },
  get useNetworkErrorHandler() {
    /* istanbul ignore next */
    cov_1zlqxxd53x().f[2]++;
    cov_1zlqxxd53x().s[5]++;
    return useNetworkErrorHandler;
  },
  get useNetworkErrorSuppression() {
    /* istanbul ignore next */
    cov_1zlqxxd53x().f[3]++;
    cov_1zlqxxd53x().s[6]++;
    return useNetworkErrorSuppression;
  }
});
const _react =
/* istanbul ignore next */
(cov_1zlqxxd53x().s[7]++, require("react"));
const _reactquery =
/* istanbul ignore next */
(cov_1zlqxxd53x().s[8]++, require("@tanstack/react-query"));
function useNetworkErrorHandler(options =
/* istanbul ignore next */
(cov_1zlqxxd53x().b[0][0]++, {})) {
  /* istanbul ignore next */
  cov_1zlqxxd53x().f[4]++;
  const {
    enableLogging =
    /* istanbul ignore next */
    (cov_1zlqxxd53x().b[1][0]++, true),
    enableRetry =
    /* istanbul ignore next */
    (cov_1zlqxxd53x().b[2][0]++, true),
    maxRetries =
    /* istanbul ignore next */
    (cov_1zlqxxd53x().b[3][0]++, 3),
    retryDelay =
    /* istanbul ignore next */
    (cov_1zlqxxd53x().b[4][0]++, 1000)
  } =
  /* istanbul ignore next */
  (cov_1zlqxxd53x().s[9]++, options);
  const queryClient =
  /* istanbul ignore next */
  (cov_1zlqxxd53x().s[10]++, (0, _reactquery.useQueryClient)());
  // Función para clasificar errores de red
  const classifyError =
  /* istanbul ignore next */
  (cov_1zlqxxd53x().s[11]++, (0, _react.useCallback)(error => {
    /* istanbul ignore next */
    cov_1zlqxxd53x().f[5]++;
    const timestamp =
    /* istanbul ignore next */
    (cov_1zlqxxd53x().s[12]++, Date.now());
    // Detectar tipo de error
    let type =
    /* istanbul ignore next */
    (cov_1zlqxxd53x().s[13]++, 'unknown');
    /* istanbul ignore next */
    cov_1zlqxxd53x().s[14]++;
    if (
    /* istanbul ignore next */
    (cov_1zlqxxd53x().b[6][0]++, error?.code === 'ERR_ABORTED') ||
    /* istanbul ignore next */
    (cov_1zlqxxd53x().b[6][1]++, error?.name === 'AbortError')) {
      /* istanbul ignore next */
      cov_1zlqxxd53x().b[5][0]++;
      cov_1zlqxxd53x().s[15]++;
      type = 'abort';
    } else {
      /* istanbul ignore next */
      cov_1zlqxxd53x().b[5][1]++;
      cov_1zlqxxd53x().s[16]++;
      if (
      /* istanbul ignore next */
      (cov_1zlqxxd53x().b[8][0]++, error?.code === 'ERR_NETWORK') ||
      /* istanbul ignore next */
      (cov_1zlqxxd53x().b[8][1]++, error?.message?.includes('network'))) {
        /* istanbul ignore next */
        cov_1zlqxxd53x().b[7][0]++;
        cov_1zlqxxd53x().s[17]++;
        type = 'network';
      } else {
        /* istanbul ignore next */
        cov_1zlqxxd53x().b[7][1]++;
        cov_1zlqxxd53x().s[18]++;
        if (
        /* istanbul ignore next */
        (cov_1zlqxxd53x().b[10][0]++, error?.code === 'TIMEOUT') ||
        /* istanbul ignore next */
        (cov_1zlqxxd53x().b[10][1]++, error?.message?.includes('timeout'))) {
          /* istanbul ignore next */
          cov_1zlqxxd53x().b[9][0]++;
          cov_1zlqxxd53x().s[19]++;
          type = 'timeout';
        } else {
          /* istanbul ignore next */
          cov_1zlqxxd53x().b[9][1]++;
          cov_1zlqxxd53x().s[20]++;
          if (error?.status >= 500) {
            /* istanbul ignore next */
            cov_1zlqxxd53x().b[11][0]++;
            cov_1zlqxxd53x().s[21]++;
            type = 'server';
          } else
          /* istanbul ignore next */
          {
            cov_1zlqxxd53x().b[11][1]++;
          }
        }
      }
    }
    /* istanbul ignore next */
    cov_1zlqxxd53x().s[22]++;
    return {
      type,
      originalError: error,
      timestamp,
      url:
      /* istanbul ignore next */
      (cov_1zlqxxd53x().b[12][0]++, error?.config?.url) ||
      /* istanbul ignore next */
      (cov_1zlqxxd53x().b[12][1]++, error?.url),
      method:
      /* istanbul ignore next */
      (cov_1zlqxxd53x().b[13][0]++, error?.config?.method) ||
      /* istanbul ignore next */
      (cov_1zlqxxd53x().b[13][1]++, error?.method)
    };
  }, []));
  // Función para manejar errores de red
  const handleNetworkError =
  /* istanbul ignore next */
  (cov_1zlqxxd53x().s[23]++, (0, _react.useCallback)((error, context) => {
    /* istanbul ignore next */
    cov_1zlqxxd53x().f[6]++;
    const networkError =
    /* istanbul ignore next */
    (cov_1zlqxxd53x().s[24]++, classifyError(error));
    // Para errores de abort, usar console.debug en lugar de console.error para evitar bucles
    /* istanbul ignore next */
    cov_1zlqxxd53x().s[25]++;
    if (networkError.type === 'abort') {
      /* istanbul ignore next */
      cov_1zlqxxd53x().b[14][0]++;
      cov_1zlqxxd53x().s[26]++;
      if (enableLogging) {
        /* istanbul ignore next */
        cov_1zlqxxd53x().b[15][0]++;
        cov_1zlqxxd53x().s[27]++;
        console.debug('🔇 Suppressed abort error:', {
          type: networkError.type,
          url: networkError.url,
          method: networkError.method,
          originalError: networkError.originalError,
          context
        });
        /* istanbul ignore next */
        cov_1zlqxxd53x().s[28]++;
        console.warn('🚫 Request was aborted - this is usually intentional');
      } else
      /* istanbul ignore next */
      {
        cov_1zlqxxd53x().b[15][1]++;
      }
      cov_1zlqxxd53x().s[29]++;
      return; // Salir temprano para errores de abort
    } else
    /* istanbul ignore next */
    {
      cov_1zlqxxd53x().b[14][1]++;
    }
    cov_1zlqxxd53x().s[30]++;
    if (enableLogging) {
      /* istanbul ignore next */
      cov_1zlqxxd53x().b[16][0]++;
      cov_1zlqxxd53x().s[31]++;
      console.group('🌐 Network Error Handler');
      /* istanbul ignore next */
      cov_1zlqxxd53x().s[32]++;
      console.error('Error Type:', networkError.type);
      /* istanbul ignore next */
      cov_1zlqxxd53x().s[33]++;
      console.error('URL:', networkError.url);
      /* istanbul ignore next */
      cov_1zlqxxd53x().s[34]++;
      console.error('Method:', networkError.method);
      /* istanbul ignore next */
      cov_1zlqxxd53x().s[35]++;
      console.error('Original Error:', networkError.originalError);
      /* istanbul ignore next */
      cov_1zlqxxd53x().s[36]++;
      console.error('Context:', context);
      /* istanbul ignore next */
      cov_1zlqxxd53x().s[37]++;
      console.groupEnd();
    } else
    /* istanbul ignore next */
    {
      cov_1zlqxxd53x().b[16][1]++;
    }
    // Manejar diferentes tipos de errores
    cov_1zlqxxd53x().s[38]++;
    switch (networkError.type) {
      case 'network':
        /* istanbul ignore next */
        cov_1zlqxxd53x().b[17][0]++;
        cov_1zlqxxd53x().s[39]++;
        // Errores de red - invalidar queries para refetch
        if (enableRetry) {
          /* istanbul ignore next */
          cov_1zlqxxd53x().b[18][0]++;
          cov_1zlqxxd53x().s[40]++;
          setTimeout(() => {
            /* istanbul ignore next */
            cov_1zlqxxd53x().f[7]++;
            cov_1zlqxxd53x().s[41]++;
            queryClient.invalidateQueries();
          }, retryDelay);
        } else
        /* istanbul ignore next */
        {
          cov_1zlqxxd53x().b[18][1]++;
        }
        cov_1zlqxxd53x().s[42]++;
        break;
      case 'timeout':
        /* istanbul ignore next */
        cov_1zlqxxd53x().b[17][1]++;
        cov_1zlqxxd53x().s[43]++;
        // Timeouts - reintentar con delay
        if (enableRetry) {
          /* istanbul ignore next */
          cov_1zlqxxd53x().b[19][0]++;
          cov_1zlqxxd53x().s[44]++;
          setTimeout(() => {
            /* istanbul ignore next */
            cov_1zlqxxd53x().f[8]++;
            cov_1zlqxxd53x().s[45]++;
            queryClient.refetchQueries({
              type: 'active'
            });
          }, retryDelay * 2);
        } else
        /* istanbul ignore next */
        {
          cov_1zlqxxd53x().b[19][1]++;
        }
        cov_1zlqxxd53x().s[46]++;
        break;
      case 'server':
        /* istanbul ignore next */
        cov_1zlqxxd53x().b[17][2]++;
        cov_1zlqxxd53x().s[47]++;
        // Errores de servidor - reintentar después de un delay más largo
        if (enableRetry) {
          /* istanbul ignore next */
          cov_1zlqxxd53x().b[20][0]++;
          cov_1zlqxxd53x().s[48]++;
          setTimeout(() => {
            /* istanbul ignore next */
            cov_1zlqxxd53x().f[9]++;
            cov_1zlqxxd53x().s[49]++;
            queryClient.invalidateQueries();
          }, retryDelay * 3);
        } else
        /* istanbul ignore next */
        {
          cov_1zlqxxd53x().b[20][1]++;
        }
        cov_1zlqxxd53x().s[50]++;
        break;
      default:
        /* istanbul ignore next */
        cov_1zlqxxd53x().b[17][3]++;
        cov_1zlqxxd53x().s[51]++;
        // Errores desconocidos - log para debugging
        if (enableLogging) {
          /* istanbul ignore next */
          cov_1zlqxxd53x().b[21][0]++;
          cov_1zlqxxd53x().s[52]++;
          console.warn('❓ Unknown error type:', error);
        } else
        /* istanbul ignore next */
        {
          cov_1zlqxxd53x().b[21][1]++;
        }
        cov_1zlqxxd53x().s[53]++;
        break;
    }
    /* istanbul ignore next */
    cov_1zlqxxd53x().s[54]++;
    return networkError;
  }, [classifyError, enableLogging, enableRetry, retryDelay, queryClient]));
  // Función para interceptar errores de abort y console.error
  const setupGlobalErrorHandling =
  /* istanbul ignore next */
  (cov_1zlqxxd53x().s[55]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_1zlqxxd53x().f[10]++;
    // Interceptar console.error para filtrar AbortErrors
    const originalConsoleError =
    /* istanbul ignore next */
    (cov_1zlqxxd53x().s[56]++, console.error);
    /* istanbul ignore next */
    cov_1zlqxxd53x().s[57]++;
    console.error = (...args) => {
      /* istanbul ignore next */
      cov_1zlqxxd53x().f[11]++;
      const message =
      /* istanbul ignore next */
      (cov_1zlqxxd53x().s[58]++, args.join(' '));
      const lowerMessage =
      /* istanbul ignore next */
      (cov_1zlqxxd53x().s[59]++, message.toLowerCase());
      // Filtrar errores de AbortError específicos
      /* istanbul ignore next */
      cov_1zlqxxd53x().s[60]++;
      if (
      /* istanbul ignore next */
      (cov_1zlqxxd53x().b[23][0]++, lowerMessage.includes('aborterror')) ||
      /* istanbul ignore next */
      (cov_1zlqxxd53x().b[23][1]++, lowerMessage.includes('signal is aborted')) ||
      /* istanbul ignore next */
      (cov_1zlqxxd53x().b[23][2]++, lowerMessage.includes('err_aborted')) ||
      /* istanbul ignore next */
      (cov_1zlqxxd53x().b[23][3]++, message.includes('❌ Error obteniendo productos: AbortError')) ||
      /* istanbul ignore next */
      (cov_1zlqxxd53x().b[23][4]++, message.includes('Error obteniendo productos: AbortError')) ||
      /* istanbul ignore next */
      (cov_1zlqxxd53x().b[23][5]++, lowerMessage.includes('error')) &&
      /* istanbul ignore next */
      (cov_1zlqxxd53x().b[23][6]++, lowerMessage.includes('abort'))) {
        /* istanbul ignore next */
        cov_1zlqxxd53x().b[22][0]++;
        cov_1zlqxxd53x().s[61]++;
        if (enableLogging) {
          /* istanbul ignore next */
          cov_1zlqxxd53x().b[24][0]++;
          cov_1zlqxxd53x().s[62]++;
          console.debug('🔇 Suppressed AbortError from console.error:', ...args);
        } else
        /* istanbul ignore next */
        {
          cov_1zlqxxd53x().b[24][1]++;
        }
        cov_1zlqxxd53x().s[63]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1zlqxxd53x().b[22][1]++;
      }
      cov_1zlqxxd53x().s[64]++;
      originalConsoleError(...args);
    };
    // Solo interceptar errores de unhandled promise rejections para AbortError
    /* istanbul ignore next */
    cov_1zlqxxd53x().s[65]++;
    const handleUnhandledRejection = event => {
      /* istanbul ignore next */
      cov_1zlqxxd53x().f[12]++;
      cov_1zlqxxd53x().s[66]++;
      if (
      /* istanbul ignore next */
      (cov_1zlqxxd53x().b[26][0]++, event.reason?.name === 'AbortError') ||
      /* istanbul ignore next */
      (cov_1zlqxxd53x().b[26][1]++, event.reason?.code === 'ERR_ABORTED') ||
      /* istanbul ignore next */
      (cov_1zlqxxd53x().b[26][2]++, event.reason?.message?.includes('aborted'))) {
        /* istanbul ignore next */
        cov_1zlqxxd53x().b[25][0]++;
        cov_1zlqxxd53x().s[67]++;
        // Prevenir que los errores de abort aparezcan en la consola
        event.preventDefault();
        /* istanbul ignore next */
        cov_1zlqxxd53x().s[68]++;
        if (enableLogging) {
          /* istanbul ignore next */
          cov_1zlqxxd53x().b[27][0]++;
          cov_1zlqxxd53x().s[69]++;
          console.debug('🔇 Suppressed AbortError from unhandledrejection');
        } else
        /* istanbul ignore next */
        {
          cov_1zlqxxd53x().b[27][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1zlqxxd53x().b[25][1]++;
      }
    };
    /* istanbul ignore next */
    cov_1zlqxxd53x().s[70]++;
    window.addEventListener('unhandledrejection', handleUnhandledRejection);
    // Cleanup function
    /* istanbul ignore next */
    cov_1zlqxxd53x().s[71]++;
    return () => {
      /* istanbul ignore next */
      cov_1zlqxxd53x().f[13]++;
      cov_1zlqxxd53x().s[72]++;
      console.error = originalConsoleError;
      /* istanbul ignore next */
      cov_1zlqxxd53x().s[73]++;
      window.removeEventListener('unhandledrejection', handleUnhandledRejection);
    };
  }, [enableLogging]));
  // Setup global error handling on mount
  /* istanbul ignore next */
  cov_1zlqxxd53x().s[74]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1zlqxxd53x().f[14]++;
    const cleanup =
    /* istanbul ignore next */
    (cov_1zlqxxd53x().s[75]++, setupGlobalErrorHandling());
    /* istanbul ignore next */
    cov_1zlqxxd53x().s[76]++;
    return cleanup;
  }, [setupGlobalErrorHandling]);
  // Función para crear un wrapper de fetch con manejo de errores
  const createFetchWrapper =
  /* istanbul ignore next */
  (cov_1zlqxxd53x().s[77]++, (0, _react.useCallback)(baseUrl => {
    /* istanbul ignore next */
    cov_1zlqxxd53x().f[15]++;
    cov_1zlqxxd53x().s[78]++;
    return async (url, options =
    /* istanbul ignore next */
    (cov_1zlqxxd53x().b[28][0]++, {})) => {
      /* istanbul ignore next */
      cov_1zlqxxd53x().f[16]++;
      const fullUrl =
      /* istanbul ignore next */
      (cov_1zlqxxd53x().s[79]++, baseUrl ?
      /* istanbul ignore next */
      (cov_1zlqxxd53x().b[29][0]++, `${baseUrl}${url}`) :
      /* istanbul ignore next */
      (cov_1zlqxxd53x().b[29][1]++, url));
      /* istanbul ignore next */
      cov_1zlqxxd53x().s[80]++;
      try {
        const response =
        /* istanbul ignore next */
        (cov_1zlqxxd53x().s[81]++, await fetch(fullUrl, {
          ...options,
          // Agregar timeout por defecto
          signal:
          /* istanbul ignore next */
          (cov_1zlqxxd53x().b[30][0]++, options.signal) ||
          /* istanbul ignore next */
          (cov_1zlqxxd53x().b[30][1]++, AbortSignal.timeout(10000))
        }));
        /* istanbul ignore next */
        cov_1zlqxxd53x().s[82]++;
        if (!response.ok) {
          /* istanbul ignore next */
          cov_1zlqxxd53x().b[31][0]++;
          cov_1zlqxxd53x().s[83]++;
          throw new Error(`HTTP ${response.status}: ${response.statusText}`);
        } else
        /* istanbul ignore next */
        {
          cov_1zlqxxd53x().b[31][1]++;
        }
        cov_1zlqxxd53x().s[84]++;
        return response;
      } catch (error) {
        const networkError =
        /* istanbul ignore next */
        (cov_1zlqxxd53x().s[85]++, handleNetworkError(error, {
          type: 'wrapper',
          url: fullUrl,
          options
        }));
        // Re-throw el error para que pueda ser manejado por el código que llama
        /* istanbul ignore next */
        cov_1zlqxxd53x().s[86]++;
        throw networkError.originalError;
      }
    };
  }, [handleNetworkError]));
  /* istanbul ignore next */
  cov_1zlqxxd53x().s[87]++;
  return {
    handleNetworkError,
    classifyError,
    createFetchWrapper,
    setupGlobalErrorHandling
  };
}
function useNetworkErrorSuppression() {
  /* istanbul ignore next */
  cov_1zlqxxd53x().f[17]++;
  cov_1zlqxxd53x().s[88]++;
  return useNetworkErrorHandler({
    enableLogging: false,
    enableRetry: false
  });
}
function useNetworkErrorDebug() {
  /* istanbul ignore next */
  cov_1zlqxxd53x().f[18]++;
  cov_1zlqxxd53x().s[89]++;
  return useNetworkErrorHandler({
    enableLogging: true,
    enableRetry: true,
    maxRetries: 5,
    retryDelay: 500
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,