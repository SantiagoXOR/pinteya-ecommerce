{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\admin\\useOrdersDevPersistence.ts"],"sourcesContent":["// ===================================\r\n// PINTEYA E-COMMERCE - ORDERS DEV PERSISTENCE HOOK\r\n// Hook para persistir estado de órdenes durante Fast Refresh en desarrollo\r\n// ===================================\r\n\r\n'use client';\r\n\r\nimport { useCallback, useRef, useEffect } from 'react';\r\nimport { StrictOrderEnterprise } from '@/types/orders-enterprise';\r\nimport { StrictOrderFilters } from './useOrdersEnterpriseStrict';\r\n\r\n// ===================================\r\n// TIPOS Y CONFIGURACIÓN\r\n// ===================================\r\n\r\ninterface PersistedOrdersState {\r\n  orders: StrictOrderEnterprise[];\r\n  pagination: any;\r\n  analytics: any;\r\n  filters: StrictOrderFilters;\r\n  lastFetchTime: number;\r\n  hasData: boolean;\r\n}\r\n\r\ninterface DevPersistenceOptions {\r\n  enabled: boolean;\r\n  maxAge: number; // Tiempo máximo para considerar datos válidos (ms)\r\n  storageKey: string;\r\n}\r\n\r\n// ===================================\r\n// STORAGE GLOBAL PARA DESARROLLO\r\n// ===================================\r\n\r\n// Usar Map global para persistir entre Fast Refresh\r\nconst globalDevStorage = new Map<string, PersistedOrdersState>();\r\n\r\n// ===================================\r\n// UTILIDADES\r\n// ===================================\r\n\r\nfunction isValidPersistedState(state: any): state is PersistedOrdersState {\r\n  return (\r\n    state &&\r\n    typeof state === 'object' &&\r\n    Array.isArray(state.orders) &&\r\n    typeof state.lastFetchTime === 'number' &&\r\n    typeof state.hasData === 'boolean'\r\n  );\r\n}\r\n\r\nfunction isStateExpired(state: PersistedOrdersState, maxAge: number): boolean {\r\n  return Date.now() - state.lastFetchTime > maxAge;\r\n}\r\n\r\n// ===================================\r\n// HOOK DE PERSISTENCIA PARA DESARROLLO\r\n// ===================================\r\n\r\nexport interface UseOrdersDevPersistenceReturn {\r\n  getPersistedState: () => PersistedOrdersState | null;\r\n  persistState: (state: Partial<PersistedOrdersState>) => void;\r\n  clearPersistedState: () => void;\r\n  hasValidPersistedData: () => boolean;\r\n}\r\n\r\nexport function useOrdersDevPersistence(\r\n  options: DevPersistenceOptions\r\n): UseOrdersDevPersistenceReturn {\r\n  const optionsRef = useRef(options);\r\n  optionsRef.current = options;\r\n\r\n  const getPersistedState = useCallback((): PersistedOrdersState | null => {\r\n    if (!optionsRef.current.enabled || process.env.NODE_ENV !== 'development') {\r\n      return null;\r\n    }\r\n\r\n    try {\r\n      const state = globalDevStorage.get(optionsRef.current.storageKey);\r\n      \r\n      if (!state || !isValidPersistedState(state)) {\r\n        return null;\r\n      }\r\n\r\n      if (isStateExpired(state, optionsRef.current.maxAge)) {\r\n        globalDevStorage.delete(optionsRef.current.storageKey);\r\n        return null;\r\n      }\r\n\r\n      return state;\r\n    } catch (error) {\r\n      console.warn('[useOrdersDevPersistence] Error getting persisted state:', error);\r\n      return null;\r\n    }\r\n  }, []);\r\n\r\n  const persistState = useCallback((newState: Partial<PersistedOrdersState>): void => {\r\n    if (!optionsRef.current.enabled || process.env.NODE_ENV !== 'development') {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const currentState = globalDevStorage.get(optionsRef.current.storageKey);\r\n      \r\n      const updatedState: PersistedOrdersState = {\r\n        orders: [],\r\n        pagination: null,\r\n        analytics: null,\r\n        filters: {} as StrictOrderFilters,\r\n        lastFetchTime: Date.now(),\r\n        hasData: false,\r\n        ...currentState,\r\n        ...newState,\r\n      };\r\n\r\n      globalDevStorage.set(optionsRef.current.storageKey, updatedState);\r\n\r\n      if (process.env.NODE_ENV === 'development') {\r\n        console.log('[useOrdersDevPersistence] State persisted:', {\r\n          key: optionsRef.current.storageKey,\r\n          ordersCount: updatedState.orders.length,\r\n          hasData: updatedState.hasData,\r\n          age: Date.now() - updatedState.lastFetchTime\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.warn('[useOrdersDevPersistence] Error persisting state:', error);\r\n    }\r\n  }, []);\r\n\r\n  const clearPersistedState = useCallback((): void => {\r\n    if (!optionsRef.current.enabled || process.env.NODE_ENV !== 'development') {\r\n      return;\r\n    }\r\n\r\n    globalDevStorage.delete(optionsRef.current.storageKey);\r\n    \r\n    if (process.env.NODE_ENV === 'development') {\r\n      console.log('[useOrdersDevPersistence] Persisted state cleared');\r\n    }\r\n  }, []);\r\n\r\n  const hasValidPersistedData = useCallback((): boolean => {\r\n    const state = getPersistedState();\r\n    return state !== null && state.hasData && state.orders.length > 0;\r\n  }, [getPersistedState]);\r\n\r\n  // Cleanup al desmontar (solo en producción o cuando se deshabilita)\r\n  useEffect(() => {\r\n    return () => {\r\n      if (!optionsRef.current.enabled || process.env.NODE_ENV !== 'development') {\r\n        clearPersistedState();\r\n      }\r\n    };\r\n  }, [clearPersistedState]);\r\n\r\n  return {\r\n    getPersistedState,\r\n    persistState,\r\n    clearPersistedState,\r\n    hasValidPersistedData\r\n  };\r\n}\r\n\r\n// ===================================\r\n// HOOK HELPER PARA INTEGRACIÓN FÁCIL\r\n// ===================================\r\n\r\nexport function useOrdersDevState(storageKey: string = 'orders-dev-state') {\r\n  return useOrdersDevPersistence({\r\n    enabled: true,\r\n    maxAge: 5 * 60 * 1000, // 5 minutos\r\n    storageKey\r\n  });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["useOrdersDevPersistence","useOrdersDevState","globalDevStorage","Map","isValidPersistedState","state","Array","isArray","orders","lastFetchTime","hasData","isStateExpired","maxAge","Date","now","options","optionsRef","useRef","current","getPersistedState","useCallback","enabled","process","env","NODE_ENV","get","storageKey","delete","error","console","warn","persistState","newState","currentState","updatedState","pagination","analytics","filters","set","log","key","ordersCount","length","age","clearPersistedState","hasValidPersistedData","useEffect"],"mappings":"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"}