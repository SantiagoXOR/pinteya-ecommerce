e659884a8df18d2e6b46adbf4d84f792
// ===================================
// CONFIGURACIÃ“N: TanStack Query Client
// ===================================
"use strict";

/* istanbul ignore next */
function cov_29cdhxiq16() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\query-client.ts";
  var hash = "e8200d14b0545d754ae4b1d330bdbdbc17b1fd47";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\query-client.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "2": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "3": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 33,
          column: 3
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 33
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 27
        }
      },
      "6": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 33
        }
      },
      "7": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 33
        }
      },
      "8": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 31
        }
      },
      "9": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 32
        }
      },
      "10": {
        start: {
          line: 34,
          column: 20
        },
        end: {
          line: 34,
          column: 52
        }
      },
      "11": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 51
        }
      },
      "12": {
        start: {
          line: 36,
          column: 39
        },
        end: {
          line: 36,
          column: 51
        }
      },
      "13": {
        start: {
          line: 37,
          column: 28
        },
        end: {
          line: 37,
          column: 41
        }
      },
      "14": {
        start: {
          line: 38,
          column: 27
        },
        end: {
          line: 38,
          column: 40
        }
      },
      "15": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 41,
          column: 20
        }
      },
      "16": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 66
        }
      },
      "17": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "18": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 19
        }
      },
      "19": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 51,
          column: 5
        }
      },
      "20": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 50,
          column: 10
        }
      },
      "21": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 52,
          column: 53
        }
      },
      "22": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 55,
          column: 5
        }
      },
      "23": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 30
        }
      },
      "24": {
        start: {
          line: 56,
          column: 17
        },
        end: {
          line: 58,
          column: 5
        }
      },
      "25": {
        start: {
          line: 59,
          column: 32
        },
        end: {
          line: 59,
          column: 88
        }
      },
      "26": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 69,
          column: 5
        }
      },
      "27": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 68,
          column: 9
        }
      },
      "28": {
        start: {
          line: 62,
          column: 23
        },
        end: {
          line: 62,
          column: 95
        }
      },
      "29": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 67,
          column: 13
        }
      },
      "30": {
        start: {
          line: 64,
          column: 16
        },
        end: {
          line: 64,
          column: 57
        }
      },
      "31": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 66,
          column: 39
        }
      },
      "32": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 70,
          column: 25
        }
      },
      "33": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 73,
          column: 5
        }
      },
      "34": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 31
        }
      },
      "35": {
        start: {
          line: 74,
          column: 4
        },
        end: {
          line: 74,
          column: 18
        }
      },
      "36": {
        start: {
          line: 79,
          column: 26
        },
        end: {
          line: 88,
          column: 5
        }
      },
      "37": {
        start: {
          line: 90,
          column: 4
        },
        end: {
          line: 92,
          column: 5
        }
      },
      "38": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 91,
          column: 20
        }
      },
      "39": {
        start: {
          line: 94,
          column: 4
        },
        end: {
          line: 99,
          column: 5
        }
      },
      "40": {
        start: {
          line: 95,
          column: 24
        },
        end: {
          line: 95,
          column: 51
        }
      },
      "41": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 98,
          column: 9
        }
      },
      "42": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 97,
          column: 24
        }
      },
      "43": {
        start: {
          line: 101,
          column: 4
        },
        end: {
          line: 103,
          column: 5
        }
      },
      "44": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 102,
          column: 20
        }
      },
      "45": {
        start: {
          line: 104,
          column: 4
        },
        end: {
          line: 104,
          column: 17
        }
      },
      "46": {
        start: {
          line: 106,
          column: 26
        },
        end: {
          line: 164,
          column: 1
        }
      },
      "47": {
        start: {
          line: 116,
          column: 16
        },
        end: {
          line: 118,
          column: 17
        }
      },
      "48": {
        start: {
          line: 117,
          column: 20
        },
        end: {
          line: 117,
          column: 33
        }
      },
      "49": {
        start: {
          line: 120,
          column: 16
        },
        end: {
          line: 122,
          column: 17
        }
      },
      "50": {
        start: {
          line: 121,
          column: 20
        },
        end: {
          line: 121,
          column: 44
        }
      },
      "51": {
        start: {
          line: 124,
          column: 16
        },
        end: {
          line: 124,
          column: 40
        }
      },
      "52": {
        start: {
          line: 129,
          column: 16
        },
        end: {
          line: 131,
          column: 17
        }
      },
      "53": {
        start: {
          line: 130,
          column: 20
        },
        end: {
          line: 130,
          column: 67
        }
      },
      "54": {
        start: {
          line: 133,
          column: 16
        },
        end: {
          line: 133,
          column: 65
        }
      },
      "55": {
        start: {
          line: 148,
          column: 16
        },
        end: {
          line: 150,
          column: 17
        }
      },
      "56": {
        start: {
          line: 149,
          column: 20
        },
        end: {
          line: 149,
          column: 44
        }
      },
      "57": {
        start: {
          line: 152,
          column: 16
        },
        end: {
          line: 152,
          column: 40
        }
      },
      "58": {
        start: {
          line: 156,
          column: 16
        },
        end: {
          line: 158,
          column: 17
        }
      },
      "59": {
        start: {
          line: 157,
          column: 20
        },
        end: {
          line: 157,
          column: 67
        }
      },
      "60": {
        start: {
          line: 159,
          column: 16
        },
        end: {
          line: 159,
          column: 28
        }
      },
      "61": {
        start: {
          line: 166,
          column: 4
        },
        end: {
          line: 166,
          column: 58
        }
      },
      "62": {
        start: {
          line: 168,
          column: 20
        },
        end: {
          line: 168,
          column: 39
        }
      },
      "63": {
        start: {
          line: 169,
          column: 26
        },
        end: {
          line: 180,
          column: 1
        }
      },
      "64": {
        start: {
          line: 181,
          column: 24
        },
        end: {
          line: 206,
          column: 1
        }
      },
      "65": {
        start: {
          line: 185,
          column: 18
        },
        end: {
          line: 188,
          column: 9
        }
      },
      "66": {
        start: {
          line: 189,
          column: 21
        },
        end: {
          line: 192,
          column: 9
        }
      },
      "67": {
        start: {
          line: 193,
          column: 26
        },
        end: {
          line: 197,
          column: 9
        }
      },
      "68": {
        start: {
          line: 198,
          column: 16
        },
        end: {
          line: 201,
          column: 9
        }
      },
      "69": {
        start: {
          line: 202,
          column: 18
        },
        end: {
          line: 205,
          column: 9
        }
      },
      "70": {
        start: {
          line: 207,
          column: 25
        },
        end: {
          line: 226,
          column: 1
        }
      },
      "71": {
        start: {
          line: 209,
          column: 23
        },
        end: {
          line: 211,
          column: 10
        }
      },
      "72": {
        start: {
          line: 213,
          column: 31
        },
        end: {
          line: 215,
          column: 10
        }
      },
      "73": {
        start: {
          line: 217,
          column: 26
        },
        end: {
          line: 219,
          column: 10
        }
      },
      "74": {
        start: {
          line: 221,
          column: 29
        },
        end: {
          line: 225,
          column: 10
        }
      },
      "75": {
        start: {
          line: 223,
          column: 25
        },
        end: {
          line: 223,
          column: 157
        }
      },
      "76": {
        start: {
          line: 223,
          column: 66
        },
        end: {
          line: 223,
          column: 118
        }
      },
      "77": {
        start: {
          line: 223,
          column: 130
        },
        end: {
          line: 223,
          column: 156
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 16
          }
        },
        loc: {
          start: {
            line: 8,
            column: 30
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 29
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 23
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 29
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 29
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 27
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 28
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "7": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 35,
            column: 9
          },
          end: {
            line: 35,
            column: 33
          }
        },
        loc: {
          start: {
            line: 35,
            column: 47
          },
          end: {
            line: 42,
            column: 1
          }
        },
        line: 35
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 39,
            column: 39
          },
          end: {
            line: 39,
            column: 40
          }
        },
        loc: {
          start: {
            line: 39,
            column: 61
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 39
      },
      "9": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 43,
            column: 9
          },
          end: {
            line: 43,
            column: 34
          }
        },
        loc: {
          start: {
            line: 43,
            column: 53
          },
          end: {
            line: 75,
            column: 1
          }
        },
        line: 43
      },
      "10": {
        name: "shouldRetryError",
        decl: {
          start: {
            line: 77,
            column: 9
          },
          end: {
            line: 77,
            column: 25
          }
        },
        loc: {
          start: {
            line: 77,
            column: 33
          },
          end: {
            line: 105,
            column: 1
          }
        },
        line: 77
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 114,
            column: 19
          },
          end: {
            line: 114,
            column: 20
          }
        },
        loc: {
          start: {
            line: 114,
            column: 42
          },
          end: {
            line: 125,
            column: 13
          }
        },
        line: 114
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 127,
            column: 24
          },
          end: {
            line: 127,
            column: 25
          }
        },
        loc: {
          start: {
            line: 127,
            column: 47
          },
          end: {
            line: 134,
            column: 13
          }
        },
        line: 127
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 146,
            column: 19
          },
          end: {
            line: 146,
            column: 20
          }
        },
        loc: {
          start: {
            line: 146,
            column: 42
          },
          end: {
            line: 153,
            column: 13
          }
        },
        line: 146
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 154,
            column: 24
          },
          end: {
            line: 154,
            column: 25
          }
        },
        loc: {
          start: {
            line: 154,
            column: 47
          },
          end: {
            line: 160,
            column: 13
          }
        },
        line: 154
      },
      "15": {
        name: "createQueryClient",
        decl: {
          start: {
            line: 165,
            column: 9
          },
          end: {
            line: 165,
            column: 26
          }
        },
        loc: {
          start: {
            line: 165,
            column: 29
          },
          end: {
            line: 167,
            column: 1
          }
        },
        line: 165
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 185,
            column: 14
          },
          end: {
            line: 185,
            column: 15
          }
        },
        loc: {
          start: {
            line: 185,
            column: 18
          },
          end: {
            line: 188,
            column: 9
          }
        },
        line: 185
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 189,
            column: 12
          },
          end: {
            line: 189,
            column: 13
          }
        },
        loc: {
          start: {
            line: 189,
            column: 21
          },
          end: {
            line: 192,
            column: 9
          }
        },
        line: 189
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 193,
            column: 17
          },
          end: {
            line: 193,
            column: 18
          }
        },
        loc: {
          start: {
            line: 193,
            column: 26
          },
          end: {
            line: 197,
            column: 9
          }
        },
        line: 193
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 198,
            column: 12
          },
          end: {
            line: 198,
            column: 13
          }
        },
        loc: {
          start: {
            line: 198,
            column: 16
          },
          end: {
            line: 201,
            column: 9
          }
        },
        line: 198
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 202,
            column: 14
          },
          end: {
            line: 202,
            column: 15
          }
        },
        loc: {
          start: {
            line: 202,
            column: 18
          },
          end: {
            line: 205,
            column: 9
          }
        },
        line: 202
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 209,
            column: 19
          },
          end: {
            line: 209,
            column: 20
          }
        },
        loc: {
          start: {
            line: 209,
            column: 23
          },
          end: {
            line: 211,
            column: 10
          }
        },
        line: 209
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 213,
            column: 22
          },
          end: {
            line: 213,
            column: 23
          }
        },
        loc: {
          start: {
            line: 213,
            column: 31
          },
          end: {
            line: 215,
            column: 10
          }
        },
        line: 213
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 217,
            column: 22
          },
          end: {
            line: 217,
            column: 23
          }
        },
        loc: {
          start: {
            line: 217,
            column: 26
          },
          end: {
            line: 219,
            column: 10
          }
        },
        line: 217
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 221,
            column: 20
          },
          end: {
            line: 221,
            column: 21
          }
        },
        loc: {
          start: {
            line: 221,
            column: 29
          },
          end: {
            line: 225,
            column: 10
          }
        },
        line: 221
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 223,
            column: 21
          },
          end: {
            line: 223,
            column: 22
          }
        },
        loc: {
          start: {
            line: 223,
            column: 25
          },
          end: {
            line: 223,
            column: 157
          }
        },
        line: 223
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 223,
            column: 48
          },
          end: {
            line: 223,
            column: 49
          }
        },
        loc: {
          start: {
            line: 223,
            column: 66
          },
          end: {
            line: 223,
            column: 118
          }
        },
        line: 223
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 223,
            column: 125
          },
          end: {
            line: 223,
            column: 126
          }
        },
        loc: {
          start: {
            line: 223,
            column: 130
          },
          end: {
            line: 223,
            column: 156
          }
        },
        line: 223
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "1": {
        loc: {
          start: {
            line: 40,
            column: 15
          },
          end: {
            line: 40,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 40,
            column: 29
          },
          end: {
            line: 40,
            column: 45
          }
        }, {
          start: {
            line: 40,
            column: 48
          },
          end: {
            line: 40,
            column: 65
          }
        }],
        line: 40
      },
      "2": {
        loc: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "3": {
        loc: {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 44,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 44,
            column: 20
          }
        }, {
          start: {
            line: 44,
            column: 24
          },
          end: {
            line: 44,
            column: 27
          }
        }, {
          start: {
            line: 44,
            column: 31
          },
          end: {
            line: 44,
            column: 45
          }
        }],
        line: 44
      },
      "4": {
        loc: {
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "5": {
        loc: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 47,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 47,
            column: 20
          }
        }, {
          start: {
            line: 47,
            column: 24
          },
          end: {
            line: 47,
            column: 47
          }
        }, {
          start: {
            line: 47,
            column: 51
          },
          end: {
            line: 47,
            column: 76
          }
        }],
        line: 47
      },
      "6": {
        loc: {
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 55,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 55,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "7": {
        loc: {
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 53,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 53,
            column: 13
          }
        }, {
          start: {
            line: 53,
            column: 17
          },
          end: {
            line: 53,
            column: 31
          }
        }],
        line: 53
      },
      "8": {
        loc: {
          start: {
            line: 59,
            column: 32
          },
          end: {
            line: 59,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 32
          },
          end: {
            line: 59,
            column: 53
          }
        }, {
          start: {
            line: 59,
            column: 57
          },
          end: {
            line: 59,
            column: 88
          }
        }],
        line: 59
      },
      "9": {
        loc: {
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "10": {
        loc: {
          start: {
            line: 61,
            column: 12
          },
          end: {
            line: 61,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 61,
            column: 12
          },
          end: {
            line: 61,
            column: 29
          }
        }, {
          start: {
            line: 61,
            column: 33
          },
          end: {
            line: 61,
            column: 79
          }
        }],
        line: 61
      },
      "11": {
        loc: {
          start: {
            line: 62,
            column: 23
          },
          end: {
            line: 62,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 62,
            column: 47
          },
          end: {
            line: 62,
            column: 88
          }
        }, {
          start: {
            line: 62,
            column: 91
          },
          end: {
            line: 62,
            column: 95
          }
        }],
        line: 62
      },
      "12": {
        loc: {
          start: {
            line: 63,
            column: 12
          },
          end: {
            line: 67,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 12
          },
          end: {
            line: 67,
            column: 13
          }
        }, {
          start: {
            line: 65,
            column: 19
          },
          end: {
            line: 67,
            column: 13
          }
        }],
        line: 63
      },
      "13": {
        loc: {
          start: {
            line: 63,
            column: 16
          },
          end: {
            line: 63,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 16
          },
          end: {
            line: 63,
            column: 20
          }
        }, {
          start: {
            line: 63,
            column: 25
          },
          end: {
            line: 63,
            column: 33
          }
        }, {
          start: {
            line: 63,
            column: 37
          },
          end: {
            line: 63,
            column: 45
          }
        }],
        line: 63
      },
      "14": {
        loc: {
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 73,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 73,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "15": {
        loc: {
          start: {
            line: 90,
            column: 4
          },
          end: {
            line: 92,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 4
          },
          end: {
            line: 92,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "16": {
        loc: {
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 90,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 90,
            column: 19
          }
        }, {
          start: {
            line: 90,
            column: 23
          },
          end: {
            line: 90,
            column: 57
          }
        }],
        line: 90
      },
      "17": {
        loc: {
          start: {
            line: 94,
            column: 4
          },
          end: {
            line: 99,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 4
          },
          end: {
            line: 99,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "18": {
        loc: {
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 98,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 98,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 96
      },
      "19": {
        loc: {
          start: {
            line: 96,
            column: 12
          },
          end: {
            line: 96,
            column: 164
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 96,
            column: 12
          },
          end: {
            line: 96,
            column: 39
          }
        }, {
          start: {
            line: 96,
            column: 43
          },
          end: {
            line: 96,
            column: 68
          }
        }, {
          start: {
            line: 96,
            column: 72
          },
          end: {
            line: 96,
            column: 99
          }
        }, {
          start: {
            line: 96,
            column: 103
          },
          end: {
            line: 96,
            column: 130
          }
        }, {
          start: {
            line: 96,
            column: 134
          },
          end: {
            line: 96,
            column: 164
          }
        }],
        line: 96
      },
      "20": {
        loc: {
          start: {
            line: 101,
            column: 4
          },
          end: {
            line: 103,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 4
          },
          end: {
            line: 103,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 101
      },
      "21": {
        loc: {
          start: {
            line: 116,
            column: 16
          },
          end: {
            line: 118,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 16
          },
          end: {
            line: 118,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "22": {
        loc: {
          start: {
            line: 116,
            column: 20
          },
          end: {
            line: 116,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 116,
            column: 20
          },
          end: {
            line: 116,
            column: 40
          }
        }, {
          start: {
            line: 116,
            column: 44
          },
          end: {
            line: 116,
            column: 63
          }
        }, {
          start: {
            line: 116,
            column: 67
          },
          end: {
            line: 116,
            column: 88
          }
        }],
        line: 116
      },
      "23": {
        loc: {
          start: {
            line: 120,
            column: 16
          },
          end: {
            line: 122,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 120,
            column: 16
          },
          end: {
            line: 122,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 120
      },
      "24": {
        loc: {
          start: {
            line: 129,
            column: 16
          },
          end: {
            line: 131,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 129,
            column: 16
          },
          end: {
            line: 131,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 129
      },
      "25": {
        loc: {
          start: {
            line: 148,
            column: 16
          },
          end: {
            line: 150,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 148,
            column: 16
          },
          end: {
            line: 150,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 148
      },
      "26": {
        loc: {
          start: {
            line: 156,
            column: 16
          },
          end: {
            line: 158,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 156,
            column: 16
          },
          end: {
            line: 158,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 156
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0, 0, 0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\query-client.ts"],
      sourcesContent: ["// ===================================\r\n// CONFIGURACI\xD3N: TanStack Query Client\r\n// ===================================\r\n\r\nimport { QueryClient } from '@tanstack/react-query';\r\n\r\n// Funci\xF3n para detectar errores de red que deben ser reintentados\r\nfunction shouldRetryError(error: any): boolean {\r\n  // Errores de red comunes que deben ser reintentados\r\n  const networkErrors = [\r\n    'ERR_NETWORK',\r\n    'ERR_INTERNET_DISCONNECTED',\r\n    'ERR_CONNECTION_REFUSED',\r\n    'ERR_CONNECTION_RESET',\r\n    'ERR_CONNECTION_TIMED_OUT',\r\n    'ERR_ABORTED', // Incluir ERR_ABORTED para reintentos\r\n    'NETWORK_ERROR',\r\n    'TIMEOUT_ERROR'\r\n  ];\r\n\r\n  // Verificar si es un error de red\r\n  if (error?.code && networkErrors.includes(error.code)) {\r\n    return true;\r\n  }\r\n\r\n  // Verificar por mensaje de error\r\n  if (error?.message) {\r\n    const message = error.message.toLowerCase();\r\n    if (message.includes('network') ||\r\n        message.includes('fetch') ||\r\n        message.includes('aborted') ||\r\n        message.includes('timeout') ||\r\n        message.includes('connection')) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  // Errores HTTP 5xx (servidor) deben ser reintentados\r\n  if (error?.status >= 500) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n// Configuraci\xF3n optimizada para e-commerce con manejo robusto de errores de red\r\nexport const queryClientConfig = {\r\n  defaultOptions: {\r\n    queries: {\r\n      // Cache por 5 minutos para datos de productos\r\n      staleTime: 5 * 60 * 1000,\r\n      // Mantener en cache por 10 minutos\r\n      gcTime: 10 * 60 * 1000,\r\n      // Retry logic inteligente con manejo de errores de red\r\n      retry: (failureCount: number, error: any) => {\r\n        // No retry para errores 4xx (cliente) excepto 408 (timeout)\r\n        if (error?.status >= 400 && error?.status < 500 && error?.status !== 408) {\r\n          return false;\r\n        }\r\n\r\n        // Retry para errores de red detectados\r\n        if (shouldRetryError(error)) {\r\n          return failureCount < 3; // M\xE1s reintentos para errores de red\r\n        }\r\n\r\n        // M\xE1ximo 2 reintentos para otros errores de servidor\r\n        return failureCount < 2;\r\n      },\r\n      // Intervalo de retry con backoff exponencial m\xE1s agresivo para errores de red\r\n      retryDelay: (attemptIndex: number, error: any) => {\r\n        // Delay m\xE1s corto para errores de red\r\n        if (shouldRetryError(error)) {\r\n          return Math.min(500 * 2 ** attemptIndex, 5000);\r\n        }\r\n        // Delay normal para otros errores\r\n        return Math.min(1000 * 2 ** attemptIndex, 30000);\r\n      },\r\n      // Refetch en focus para datos cr\xEDticos\r\n      refetchOnWindowFocus: false,\r\n      // Refetch en reconexi\xF3n\r\n      refetchOnReconnect: true,\r\n      // No refetch en mount si los datos est\xE1n frescos\r\n      refetchOnMount: true,\r\n      // Configuraci\xF3n de red m\xE1s robusta\r\n      networkMode: 'online',\r\n    },\r\n    mutations: {\r\n      // Retry para mutaciones cr\xEDticas con manejo de errores de red\r\n      retry: (failureCount: number, error: any) => {\r\n        // Retry para errores de red en mutaciones\r\n        if (shouldRetryError(error)) {\r\n          return failureCount < 2;\r\n        }\r\n        // Un solo retry para otros errores\r\n        return failureCount < 1;\r\n      },\r\n      retryDelay: (attemptIndex: number, error: any) => {\r\n        // Delay m\xE1s corto para errores de red en mutaciones\r\n        if (shouldRetryError(error)) {\r\n          return Math.min(300 * 2 ** attemptIndex, 3000);\r\n        }\r\n        return 1000;\r\n      },\r\n      networkMode: 'online',\r\n    },\r\n  },\r\n};\r\n\r\n// Funci\xF3n para crear QueryClient con configuraci\xF3n optimizada\r\nexport function createQueryClient() {\r\n  return new QueryClient(queryClientConfig);\r\n}\r\n\r\n// Instancia singleton para uso en la aplicaci\xF3n\r\nexport const queryClient = createQueryClient();\r\n\r\n// Configuraci\xF3n espec\xEDfica para b\xFAsquedas\r\nexport const searchQueryConfig = {\r\n  // Cache m\xE1s agresivo para b\xFAsquedas\r\n  staleTime: 2 * 60 * 1000, // 2 minutos\r\n  gcTime: 5 * 60 * 1000,    // 5 minutos\r\n  // Retry m\xE1s conservador para b\xFAsquedas\r\n  retry: 1,\r\n  retryDelay: 500,\r\n  // No refetch autom\xE1tico para b\xFAsquedas\r\n  refetchOnWindowFocus: false,\r\n  refetchOnReconnect: false,\r\n  refetchOnMount: false,\r\n};\r\n\r\n// Keys para queries de b\xFAsqueda\r\nexport const searchQueryKeys = {\r\n  all: ['search'] as const,\r\n  searches: () => [...searchQueryKeys.all, 'searches'] as const,\r\n  search: (query: string) => [...searchQueryKeys.searches(), query] as const,\r\n  suggestions: (query: string) => [...searchQueryKeys.all, 'suggestions', query] as const,\r\n  recent: () => [...searchQueryKeys.all, 'recent'] as const,\r\n  trending: () => [...searchQueryKeys.all, 'trending'] as const,\r\n} as const;\r\n\r\n// Utilidades para invalidaci\xF3n de cache\r\nexport const searchQueryUtils = {\r\n  // Invalidar todas las b\xFAsquedas\r\n  invalidateAll: () => queryClient.invalidateQueries({ queryKey: searchQueryKeys.all }),\r\n  \r\n  // Invalidar b\xFAsquedas espec\xEDficas\r\n  invalidateSearch: (query: string) => \r\n    queryClient.invalidateQueries({ queryKey: searchQueryKeys.search(query) }),\r\n  \r\n  // Limpiar cache de b\xFAsquedas\r\n  clearSearchCache: () => queryClient.removeQueries({ queryKey: searchQueryKeys.all }),\r\n  \r\n  // Prefetch de b\xFAsqueda\r\n  prefetchSearch: (query: string) => \r\n    queryClient.prefetchQuery({\r\n      queryKey: searchQueryKeys.search(query),\r\n      queryFn: () => import('@/lib/api/products').then(m => m.searchProducts(query, 6)),\r\n      ...searchQueryConfig,\r\n    }),\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["createQueryClient", "queryClient", "queryClientConfig", "searchQueryConfig", "searchQueryKeys", "searchQueryUtils", "shouldRetryError", "error", "networkErrors", "code", "includes", "message", "toLowerCase", "status", "defaultOptions", "queries", "staleTime", "gcTime", "retry", "failureCount", "retryDelay", "attemptIndex", "Math", "min", "refetchOnWindowFocus", "refetchOnReconnect", "refetchOnMount", "networkMode", "mutations", "QueryClient", "all", "searches", "search", "query", "suggestions", "recent", "trending", "invalidateAll", "invalidateQueries", "queryKey", "invalidateSearch", "clearSearchCache", "removeQueries", "prefetchSearch", "prefetchQuery", "queryFn", "then", "m", "searchProducts"],
      mappings: "AAAA,sCAAsC;AACtC,uCAAuC;AACvC,sCAAsC;;;;;;;;;;;;QA2GtBA;eAAAA;;QAKHC;eAAAA;;QApEAC;eAAAA;;QAuEAC;eAAAA;;QAcAC;eAAAA;;QAUAC;eAAAA;;;4BAzIe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAE5B,kEAAkE;AAClE,SAASC,iBAAiBC,KAAU;IAClC,oDAAoD;IACpD,MAAMC,gBAAgB;QACpB;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IAED,kCAAkC;IAClC,IAAID,OAAOE,QAAQD,cAAcE,QAAQ,CAACH,MAAME,IAAI,GAAG;QACrD,OAAO;IACT;IAEA,iCAAiC;IACjC,IAAIF,OAAOI,SAAS;QAClB,MAAMA,UAAUJ,MAAMI,OAAO,CAACC,WAAW;QACzC,IAAID,QAAQD,QAAQ,CAAC,cACjBC,QAAQD,QAAQ,CAAC,YACjBC,QAAQD,QAAQ,CAAC,cACjBC,QAAQD,QAAQ,CAAC,cACjBC,QAAQD,QAAQ,CAAC,eAAe;YAClC,OAAO;QACT;IACF;IAEA,qDAAqD;IACrD,IAAIH,OAAOM,UAAU,KAAK;QACxB,OAAO;IACT;IAEA,OAAO;AACT;AAGO,MAAMX,oBAAoB;IAC/BY,gBAAgB;QACdC,SAAS;YACP,8CAA8C;YAC9CC,WAAW,IAAI,KAAK;YACpB,mCAAmC;YACnCC,QAAQ,KAAK,KAAK;YAClB,uDAAuD;YACvDC,OAAO,CAACC,cAAsBZ;gBAC5B,4DAA4D;gBAC5D,IAAIA,OAAOM,UAAU,OAAON,OAAOM,SAAS,OAAON,OAAOM,WAAW,KAAK;oBACxE,OAAO;gBACT;gBAEA,uCAAuC;gBACvC,IAAIP,iBAAiBC,QAAQ;oBAC3B,OAAOY,eAAe,GAAG,qCAAqC;gBAChE;gBAEA,qDAAqD;gBACrD,OAAOA,eAAe;YACxB;YACA,8EAA8E;YAC9EC,YAAY,CAACC,cAAsBd;gBACjC,sCAAsC;gBACtC,IAAID,iBAAiBC,QAAQ;oBAC3B,OAAOe,KAAKC,GAAG,CAAC,MAAM,KAAKF,cAAc;gBAC3C;gBACA,kCAAkC;gBAClC,OAAOC,KAAKC,GAAG,CAAC,OAAO,KAAKF,cAAc;YAC5C;YACA,uCAAuC;YACvCG,sBAAsB;YACtB,wBAAwB;YACxBC,oBAAoB;YACpB,iDAAiD;YACjDC,gBAAgB;YAChB,mCAAmC;YACnCC,aAAa;QACf;QACAC,WAAW;YACT,8DAA8D;YAC9DV,OAAO,CAACC,cAAsBZ;gBAC5B,0CAA0C;gBAC1C,IAAID,iBAAiBC,QAAQ;oBAC3B,OAAOY,eAAe;gBACxB;gBACA,mCAAmC;gBACnC,OAAOA,eAAe;YACxB;YACAC,YAAY,CAACC,cAAsBd;gBACjC,oDAAoD;gBACpD,IAAID,iBAAiBC,QAAQ;oBAC3B,OAAOe,KAAKC,GAAG,CAAC,MAAM,KAAKF,cAAc;gBAC3C;gBACA,OAAO;YACT;YACAM,aAAa;QACf;IACF;AACF;AAGO,SAAS3B;IACd,OAAO,IAAI6B,uBAAW,CAAC3B;AACzB;AAGO,MAAMD,cAAcD;AAGpB,MAAMG,oBAAoB;IAC/B,oCAAoC;IACpCa,WAAW,IAAI,KAAK;IACpBC,QAAQ,IAAI,KAAK;IACjB,uCAAuC;IACvCC,OAAO;IACPE,YAAY;IACZ,uCAAuC;IACvCI,sBAAsB;IACtBC,oBAAoB;IACpBC,gBAAgB;AAClB;AAGO,MAAMtB,kBAAkB;IAC7B0B,KAAK;QAAC;KAAS;IACfC,UAAU,IAAM;eAAI3B,gBAAgB0B,GAAG;YAAE;SAAW;IACpDE,QAAQ,CAACC,QAAkB;eAAI7B,gBAAgB2B,QAAQ;YAAIE;SAAM;IACjEC,aAAa,CAACD,QAAkB;eAAI7B,gBAAgB0B,GAAG;YAAE;YAAeG;SAAM;IAC9EE,QAAQ,IAAM;eAAI/B,gBAAgB0B,GAAG;YAAE;SAAS;IAChDM,UAAU,IAAM;eAAIhC,gBAAgB0B,GAAG;YAAE;SAAW;AACtD;AAGO,MAAMzB,mBAAmB;IAC9B,gCAAgC;IAChCgC,eAAe,IAAMpC,YAAYqC,iBAAiB,CAAC;YAAEC,UAAUnC,gBAAgB0B,GAAG;QAAC;IAEnF,kCAAkC;IAClCU,kBAAkB,CAACP,QACjBhC,YAAYqC,iBAAiB,CAAC;YAAEC,UAAUnC,gBAAgB4B,MAAM,CAACC;QAAO;IAE1E,6BAA6B;IAC7BQ,kBAAkB,IAAMxC,YAAYyC,aAAa,CAAC;YAAEH,UAAUnC,gBAAgB0B,GAAG;QAAC;IAElF,uBAAuB;IACvBa,gBAAgB,CAACV,QACfhC,YAAY2C,aAAa,CAAC;YACxBL,UAAUnC,gBAAgB4B,MAAM,CAACC;YACjCY,SAAS,IAAM,mEAAA,QAAO,oBAAsBC,IAAI,CAACC,CAAAA,IAAKA,EAAEC,cAAc,CAACf,OAAO;YAC9E,GAAG9B,iBAAiB;QACtB;AACJ"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e8200d14b0545d754ae4b1d330bdbdbc17b1fd47"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_29cdhxiq16 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_29cdhxiq16();
cov_29cdhxiq16().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_29cdhxiq16().f[0]++;
  cov_29cdhxiq16().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_29cdhxiq16().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_29cdhxiq16().s[3]++;
_export(exports, {
  get createQueryClient() {
    /* istanbul ignore next */
    cov_29cdhxiq16().f[1]++;
    cov_29cdhxiq16().s[4]++;
    return createQueryClient;
  },
  get queryClient() {
    /* istanbul ignore next */
    cov_29cdhxiq16().f[2]++;
    cov_29cdhxiq16().s[5]++;
    return queryClient;
  },
  get queryClientConfig() {
    /* istanbul ignore next */
    cov_29cdhxiq16().f[3]++;
    cov_29cdhxiq16().s[6]++;
    return queryClientConfig;
  },
  get searchQueryConfig() {
    /* istanbul ignore next */
    cov_29cdhxiq16().f[4]++;
    cov_29cdhxiq16().s[7]++;
    return searchQueryConfig;
  },
  get searchQueryKeys() {
    /* istanbul ignore next */
    cov_29cdhxiq16().f[5]++;
    cov_29cdhxiq16().s[8]++;
    return searchQueryKeys;
  },
  get searchQueryUtils() {
    /* istanbul ignore next */
    cov_29cdhxiq16().f[6]++;
    cov_29cdhxiq16().s[9]++;
    return searchQueryUtils;
  }
});
const _reactquery =
/* istanbul ignore next */
(cov_29cdhxiq16().s[10]++, require("@tanstack/react-query"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_29cdhxiq16().f[7]++;
  cov_29cdhxiq16().s[11]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_29cdhxiq16().b[0][0]++;
    cov_29cdhxiq16().s[12]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_29cdhxiq16().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_29cdhxiq16().s[13]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_29cdhxiq16().s[14]++, new WeakMap());
  /* istanbul ignore next */
  cov_29cdhxiq16().s[15]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_29cdhxiq16().f[8]++;
    cov_29cdhxiq16().s[16]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_29cdhxiq16().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_29cdhxiq16().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_29cdhxiq16().f[9]++;
  cov_29cdhxiq16().s[17]++;
  if (
  /* istanbul ignore next */
  (cov_29cdhxiq16().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_29cdhxiq16().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_29cdhxiq16().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_29cdhxiq16().b[2][0]++;
    cov_29cdhxiq16().s[18]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_29cdhxiq16().b[2][1]++;
  }
  cov_29cdhxiq16().s[19]++;
  if (
  /* istanbul ignore next */
  (cov_29cdhxiq16().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_29cdhxiq16().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_29cdhxiq16().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_29cdhxiq16().b[4][0]++;
    cov_29cdhxiq16().s[20]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_29cdhxiq16().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_29cdhxiq16().s[21]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_29cdhxiq16().s[22]++;
  if (
  /* istanbul ignore next */
  (cov_29cdhxiq16().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_29cdhxiq16().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_29cdhxiq16().b[6][0]++;
    cov_29cdhxiq16().s[23]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_29cdhxiq16().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_29cdhxiq16().s[24]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_29cdhxiq16().s[25]++,
  /* istanbul ignore next */
  (cov_29cdhxiq16().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_29cdhxiq16().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_29cdhxiq16().s[26]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_29cdhxiq16().s[27]++;
    if (
    /* istanbul ignore next */
    (cov_29cdhxiq16().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_29cdhxiq16().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_29cdhxiq16().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_29cdhxiq16().s[28]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_29cdhxiq16().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_29cdhxiq16().b[11][1]++, null));
      /* istanbul ignore next */
      cov_29cdhxiq16().s[29]++;
      if (
      /* istanbul ignore next */
      (cov_29cdhxiq16().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_29cdhxiq16().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_29cdhxiq16().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_29cdhxiq16().b[12][0]++;
        cov_29cdhxiq16().s[30]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_29cdhxiq16().b[12][1]++;
        cov_29cdhxiq16().s[31]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_29cdhxiq16().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_29cdhxiq16().s[32]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_29cdhxiq16().s[33]++;
  if (cache) {
    /* istanbul ignore next */
    cov_29cdhxiq16().b[14][0]++;
    cov_29cdhxiq16().s[34]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_29cdhxiq16().b[14][1]++;
  }
  cov_29cdhxiq16().s[35]++;
  return newObj;
}
// FunciÃ³n para detectar errores de red que deben ser reintentados
function shouldRetryError(error) {
  /* istanbul ignore next */
  cov_29cdhxiq16().f[10]++;
  // Errores de red comunes que deben ser reintentados
  const networkErrors =
  /* istanbul ignore next */
  (cov_29cdhxiq16().s[36]++, ['ERR_NETWORK', 'ERR_INTERNET_DISCONNECTED', 'ERR_CONNECTION_REFUSED', 'ERR_CONNECTION_RESET', 'ERR_CONNECTION_TIMED_OUT', 'ERR_ABORTED', 'NETWORK_ERROR', 'TIMEOUT_ERROR']);
  // Verificar si es un error de red
  /* istanbul ignore next */
  cov_29cdhxiq16().s[37]++;
  if (
  /* istanbul ignore next */
  (cov_29cdhxiq16().b[16][0]++, error?.code) &&
  /* istanbul ignore next */
  (cov_29cdhxiq16().b[16][1]++, networkErrors.includes(error.code))) {
    /* istanbul ignore next */
    cov_29cdhxiq16().b[15][0]++;
    cov_29cdhxiq16().s[38]++;
    return true;
  } else
  /* istanbul ignore next */
  {
    cov_29cdhxiq16().b[15][1]++;
  }
  // Verificar por mensaje de error
  cov_29cdhxiq16().s[39]++;
  if (error?.message) {
    /* istanbul ignore next */
    cov_29cdhxiq16().b[17][0]++;
    const message =
    /* istanbul ignore next */
    (cov_29cdhxiq16().s[40]++, error.message.toLowerCase());
    /* istanbul ignore next */
    cov_29cdhxiq16().s[41]++;
    if (
    /* istanbul ignore next */
    (cov_29cdhxiq16().b[19][0]++, message.includes('network')) ||
    /* istanbul ignore next */
    (cov_29cdhxiq16().b[19][1]++, message.includes('fetch')) ||
    /* istanbul ignore next */
    (cov_29cdhxiq16().b[19][2]++, message.includes('aborted')) ||
    /* istanbul ignore next */
    (cov_29cdhxiq16().b[19][3]++, message.includes('timeout')) ||
    /* istanbul ignore next */
    (cov_29cdhxiq16().b[19][4]++, message.includes('connection'))) {
      /* istanbul ignore next */
      cov_29cdhxiq16().b[18][0]++;
      cov_29cdhxiq16().s[42]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_29cdhxiq16().b[18][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_29cdhxiq16().b[17][1]++;
  }
  // Errores HTTP 5xx (servidor) deben ser reintentados
  cov_29cdhxiq16().s[43]++;
  if (error?.status >= 500) {
    /* istanbul ignore next */
    cov_29cdhxiq16().b[20][0]++;
    cov_29cdhxiq16().s[44]++;
    return true;
  } else
  /* istanbul ignore next */
  {
    cov_29cdhxiq16().b[20][1]++;
  }
  cov_29cdhxiq16().s[45]++;
  return false;
}
const queryClientConfig =
/* istanbul ignore next */
(cov_29cdhxiq16().s[46]++, {
  defaultOptions: {
    queries: {
      // Cache por 5 minutos para datos de productos
      staleTime: 5 * 60 * 1000,
      // Mantener en cache por 10 minutos
      gcTime: 10 * 60 * 1000,
      // Retry logic inteligente con manejo de errores de red
      retry: (failureCount, error) => {
        /* istanbul ignore next */
        cov_29cdhxiq16().f[11]++;
        cov_29cdhxiq16().s[47]++;
        // No retry para errores 4xx (cliente) excepto 408 (timeout)
        if (
        /* istanbul ignore next */
        (cov_29cdhxiq16().b[22][0]++, error?.status >= 400) &&
        /* istanbul ignore next */
        (cov_29cdhxiq16().b[22][1]++, error?.status < 500) &&
        /* istanbul ignore next */
        (cov_29cdhxiq16().b[22][2]++, error?.status !== 408)) {
          /* istanbul ignore next */
          cov_29cdhxiq16().b[21][0]++;
          cov_29cdhxiq16().s[48]++;
          return false;
        } else
        /* istanbul ignore next */
        {
          cov_29cdhxiq16().b[21][1]++;
        }
        // Retry para errores de red detectados
        cov_29cdhxiq16().s[49]++;
        if (shouldRetryError(error)) {
          /* istanbul ignore next */
          cov_29cdhxiq16().b[23][0]++;
          cov_29cdhxiq16().s[50]++;
          return failureCount < 3; // MÃ¡s reintentos para errores de red
        } else
        /* istanbul ignore next */
        {
          cov_29cdhxiq16().b[23][1]++;
        }
        // MÃ¡ximo 2 reintentos para otros errores de servidor
        cov_29cdhxiq16().s[51]++;
        return failureCount < 2;
      },
      // Intervalo de retry con backoff exponencial mÃ¡s agresivo para errores de red
      retryDelay: (attemptIndex, error) => {
        /* istanbul ignore next */
        cov_29cdhxiq16().f[12]++;
        cov_29cdhxiq16().s[52]++;
        // Delay mÃ¡s corto para errores de red
        if (shouldRetryError(error)) {
          /* istanbul ignore next */
          cov_29cdhxiq16().b[24][0]++;
          cov_29cdhxiq16().s[53]++;
          return Math.min(500 * 2 ** attemptIndex, 5000);
        } else
        /* istanbul ignore next */
        {
          cov_29cdhxiq16().b[24][1]++;
        }
        // Delay normal para otros errores
        cov_29cdhxiq16().s[54]++;
        return Math.min(1000 * 2 ** attemptIndex, 30000);
      },
      // Refetch en focus para datos crÃ­ticos
      refetchOnWindowFocus: false,
      // Refetch en reconexiÃ³n
      refetchOnReconnect: true,
      // No refetch en mount si los datos estÃ¡n frescos
      refetchOnMount: true,
      // ConfiguraciÃ³n de red mÃ¡s robusta
      networkMode: 'online'
    },
    mutations: {
      // Retry para mutaciones crÃ­ticas con manejo de errores de red
      retry: (failureCount, error) => {
        /* istanbul ignore next */
        cov_29cdhxiq16().f[13]++;
        cov_29cdhxiq16().s[55]++;
        // Retry para errores de red en mutaciones
        if (shouldRetryError(error)) {
          /* istanbul ignore next */
          cov_29cdhxiq16().b[25][0]++;
          cov_29cdhxiq16().s[56]++;
          return failureCount < 2;
        } else
        /* istanbul ignore next */
        {
          cov_29cdhxiq16().b[25][1]++;
        }
        // Un solo retry para otros errores
        cov_29cdhxiq16().s[57]++;
        return failureCount < 1;
      },
      retryDelay: (attemptIndex, error) => {
        /* istanbul ignore next */
        cov_29cdhxiq16().f[14]++;
        cov_29cdhxiq16().s[58]++;
        // Delay mÃ¡s corto para errores de red en mutaciones
        if (shouldRetryError(error)) {
          /* istanbul ignore next */
          cov_29cdhxiq16().b[26][0]++;
          cov_29cdhxiq16().s[59]++;
          return Math.min(300 * 2 ** attemptIndex, 3000);
        } else
        /* istanbul ignore next */
        {
          cov_29cdhxiq16().b[26][1]++;
        }
        cov_29cdhxiq16().s[60]++;
        return 1000;
      },
      networkMode: 'online'
    }
  }
});
function createQueryClient() {
  /* istanbul ignore next */
  cov_29cdhxiq16().f[15]++;
  cov_29cdhxiq16().s[61]++;
  return new _reactquery.QueryClient(queryClientConfig);
}
const queryClient =
/* istanbul ignore next */
(cov_29cdhxiq16().s[62]++, createQueryClient());
const searchQueryConfig =
/* istanbul ignore next */
(cov_29cdhxiq16().s[63]++, {
  // Cache mÃ¡s agresivo para bÃºsquedas
  staleTime: 2 * 60 * 1000,
  gcTime: 5 * 60 * 1000,
  // Retry mÃ¡s conservador para bÃºsquedas
  retry: 1,
  retryDelay: 500,
  // No refetch automÃ¡tico para bÃºsquedas
  refetchOnWindowFocus: false,
  refetchOnReconnect: false,
  refetchOnMount: false
});
const searchQueryKeys =
/* istanbul ignore next */
(cov_29cdhxiq16().s[64]++, {
  all: ['search'],
  searches: () => {
    /* istanbul ignore next */
    cov_29cdhxiq16().f[16]++;
    cov_29cdhxiq16().s[65]++;
    return [...searchQueryKeys.all, 'searches'];
  },
  search: query => {
    /* istanbul ignore next */
    cov_29cdhxiq16().f[17]++;
    cov_29cdhxiq16().s[66]++;
    return [...searchQueryKeys.searches(), query];
  },
  suggestions: query => {
    /* istanbul ignore next */
    cov_29cdhxiq16().f[18]++;
    cov_29cdhxiq16().s[67]++;
    return [...searchQueryKeys.all, 'suggestions', query];
  },
  recent: () => {
    /* istanbul ignore next */
    cov_29cdhxiq16().f[19]++;
    cov_29cdhxiq16().s[68]++;
    return [...searchQueryKeys.all, 'recent'];
  },
  trending: () => {
    /* istanbul ignore next */
    cov_29cdhxiq16().f[20]++;
    cov_29cdhxiq16().s[69]++;
    return [...searchQueryKeys.all, 'trending'];
  }
});
const searchQueryUtils =
/* istanbul ignore next */
(cov_29cdhxiq16().s[70]++, {
  // Invalidar todas las bÃºsquedas
  invalidateAll: () => {
    /* istanbul ignore next */
    cov_29cdhxiq16().f[21]++;
    cov_29cdhxiq16().s[71]++;
    return queryClient.invalidateQueries({
      queryKey: searchQueryKeys.all
    });
  },
  // Invalidar bÃºsquedas especÃ­ficas
  invalidateSearch: query => {
    /* istanbul ignore next */
    cov_29cdhxiq16().f[22]++;
    cov_29cdhxiq16().s[72]++;
    return queryClient.invalidateQueries({
      queryKey: searchQueryKeys.search(query)
    });
  },
  // Limpiar cache de bÃºsquedas
  clearSearchCache: () => {
    /* istanbul ignore next */
    cov_29cdhxiq16().f[23]++;
    cov_29cdhxiq16().s[73]++;
    return queryClient.removeQueries({
      queryKey: searchQueryKeys.all
    });
  },
  // Prefetch de bÃºsqueda
  prefetchSearch: query => {
    /* istanbul ignore next */
    cov_29cdhxiq16().f[24]++;
    cov_29cdhxiq16().s[74]++;
    return queryClient.prefetchQuery({
      queryKey: searchQueryKeys.search(query),
      queryFn: () => {
        /* istanbul ignore next */
        cov_29cdhxiq16().f[25]++;
        cov_29cdhxiq16().s[75]++;
        return Promise.resolve().then(() => {
          /* istanbul ignore next */
          cov_29cdhxiq16().f[26]++;
          cov_29cdhxiq16().s[76]++;
          return /*#__PURE__*/_interop_require_wildcard(require("./api/products"));
        }).then(m => {
          /* istanbul ignore next */
          cov_29cdhxiq16().f[27]++;
          cov_29cdhxiq16().s[77]++;
          return m.searchProducts(query, 6);
        });
      },
      ...searchQueryConfig
    });
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,