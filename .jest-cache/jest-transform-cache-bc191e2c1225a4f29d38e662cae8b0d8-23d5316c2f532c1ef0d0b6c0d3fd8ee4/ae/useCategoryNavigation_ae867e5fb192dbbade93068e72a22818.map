{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useCategoryNavigation.ts"],"sourcesContent":["/**\r\n * useCategoryNavigation Hook\r\n * Manages URL navigation for category filters\r\n * Pinteya E-commerce - Enterprise-ready implementation\r\n */\r\n\r\nimport React, { useCallback, useState, useMemo } from 'react';\r\nimport { useRouter, useSearchParams, usePathname } from 'next/navigation';\r\nimport type { CategoryId, UseCategoryNavigationReturn } from '@/types/categories';\r\n\r\n/**\r\n * Configuration options for the category navigation hook\r\n */\r\ninterface UseCategoryNavigationOptions {\r\n  /** URL parameter name for categories */\r\n  paramName?: string;\r\n  /** Base path for navigation */\r\n  basePath?: string;\r\n  /** Debounce delay for URL updates in milliseconds */\r\n  debounceDelay?: number;\r\n  /** Whether to preserve other URL parameters */\r\n  preserveParams?: boolean;\r\n  /** Callback when navigation starts */\r\n  onNavigationStart?: () => void;\r\n  /** Callback when navigation completes */\r\n  onNavigationComplete?: () => void;\r\n  /** Whether to enable analytics tracking */\r\n  enableAnalytics?: boolean;\r\n}\r\n\r\n/**\r\n * Custom hook for managing category filter navigation\r\n * \r\n * Features:\r\n * - URL parameter management\r\n * - Debounced navigation\r\n * - State preservation\r\n * - Analytics tracking\r\n * - Performance optimization\r\n * \r\n * @param options Configuration options\r\n * @returns Navigation state and actions\r\n */\r\nexport const useCategoryNavigation = (\r\n  options: UseCategoryNavigationOptions = {}\r\n): UseCategoryNavigationReturn => {\r\n  const {\r\n    paramName = 'categories',\r\n    basePath = '/',\r\n    debounceDelay = 300,\r\n    preserveParams = true,\r\n    onNavigationStart,\r\n    onNavigationComplete,\r\n    enableAnalytics = true,\r\n  } = options;\r\n\r\n  const router = useRouter();\r\n  const searchParams = useSearchParams();\r\n  const pathname = usePathname();\r\n  \r\n  const [isNavigating, setIsNavigating] = useState(false);\r\n  const [debounceTimer, setDebounceTimer] = useState<NodeJS.Timeout | null>(null);\r\n\r\n  /**\r\n   * Track navigation analytics if enabled\r\n   */\r\n  const trackNavigation = useCallback((categories: CategoryId[], action: 'filter' | 'clear') => {\r\n    if (!enableAnalytics) {return;}\r\n\r\n    // Track with analytics service\r\n    if (typeof window !== 'undefined' && window.gtag) {\r\n      window.gtag('event', 'category_navigation', {\r\n        event_category: 'navigation',\r\n        event_label: action,\r\n        value: categories.length,\r\n        custom_parameters: {\r\n          categories: categories.join(','),\r\n          path: pathname,\r\n        },\r\n      });\r\n    }\r\n\r\n    // Console log for development\r\n    if (process.env.NODE_ENV === 'development') {\r\n    }\r\n  }, [enableAnalytics, pathname]);\r\n\r\n  /**\r\n   * Build URL with category parameters\r\n   */\r\n  const buildUrl = useCallback((categories: CategoryId[]): string => {\r\n    const params = new URLSearchParams();\r\n\r\n    // Preserve existing parameters if enabled\r\n    if (preserveParams) {\r\n      searchParams.forEach((value, key) => {\r\n        if (key !== paramName) {\r\n          params.set(key, value);\r\n        }\r\n      });\r\n    }\r\n\r\n    // Add categories parameter if there are categories\r\n    if (categories.length > 0) {\r\n      params.set(paramName, categories.join(','));\r\n    }\r\n\r\n    // Build final URL\r\n    const queryString = params.toString();\r\n    return queryString ? `${basePath}?${queryString}` : basePath;\r\n  }, [basePath, paramName, preserveParams, searchParams]);\r\n\r\n  /**\r\n   * Perform navigation with debouncing\r\n   */\r\n  const performNavigation = useCallback((url: string) => {\r\n    // Clear existing timer\r\n    if (debounceTimer) {\r\n      clearTimeout(debounceTimer);\r\n    }\r\n\r\n    // Set navigation state\r\n    setIsNavigating(true);\r\n    onNavigationStart?.();\r\n\r\n    // Debounced navigation\r\n    const timer = setTimeout(() => {\r\n      try {\r\n        router.push(url);\r\n        \r\n        // Reset navigation state after a short delay\r\n        setTimeout(() => {\r\n          setIsNavigating(false);\r\n          onNavigationComplete?.();\r\n        }, 100);\r\n      } catch (error) {\r\n        console.error('Navigation error:', error);\r\n        setIsNavigating(false);\r\n        onNavigationComplete?.();\r\n      }\r\n    }, debounceDelay);\r\n\r\n    setDebounceTimer(timer);\r\n  }, [debounceTimer, debounceDelay, router, onNavigationStart, onNavigationComplete]);\r\n\r\n  /**\r\n   * Navigate to filtered view with selected categories\r\n   */\r\n  const navigateToFiltered = useCallback((categories: CategoryId[]) => {\r\n    // Validate categories\r\n    const validCategories = categories.filter(cat => \r\n      typeof cat === 'string' && cat.trim().length > 0\r\n    );\r\n\r\n    // Build URL and navigate\r\n    const url = buildUrl(validCategories);\r\n    performNavigation(url);\r\n\r\n    // Track analytics\r\n    trackNavigation(validCategories, 'filter');\r\n  }, [buildUrl, performNavigation, trackNavigation]);\r\n\r\n  /**\r\n   * Navigate to home (clear all filters)\r\n   */\r\n  const navigateToHome = useCallback(() => {\r\n    const url = buildUrl([]);\r\n    performNavigation(url);\r\n\r\n    // Track analytics\r\n    trackNavigation([], 'clear');\r\n  }, [buildUrl, performNavigation, trackNavigation]);\r\n\r\n  /**\r\n   * Get current URL with categories\r\n   */\r\n  const getCurrentUrl = useCallback((): string => {\r\n    const currentCategories = searchParams.get(paramName);\r\n    const categories = currentCategories ? currentCategories.split(',') : [];\r\n    return buildUrl(categories);\r\n  }, [searchParams, paramName, buildUrl]);\r\n\r\n  /**\r\n   * Get current categories from URL\r\n   */\r\n  const getCurrentCategories = useCallback((): CategoryId[] => {\r\n    const categoriesParam = searchParams.get(paramName);\r\n    return categoriesParam ? categoriesParam.split(',').filter(Boolean) : [];\r\n  }, [searchParams, paramName]);\r\n\r\n  /**\r\n   * Check if specific categories are currently active\r\n   */\r\n  const areCategoriesToActive = useCallback((categories: CategoryId[]): boolean => {\r\n    const currentCategories = getCurrentCategories();\r\n    return categories.every(cat => currentCategories.includes(cat)) &&\r\n           currentCategories.every(cat => categories.includes(cat));\r\n  }, [getCurrentCategories]);\r\n\r\n  /**\r\n   * Cleanup effect for debounce timer\r\n   */\r\n  const cleanup = useCallback(() => {\r\n    if (debounceTimer) {\r\n      clearTimeout(debounceTimer);\r\n      setDebounceTimer(null);\r\n    }\r\n  }, [debounceTimer]);\r\n\r\n  // Cleanup on unmount\r\n  React.useEffect(() => {\r\n    return cleanup;\r\n  }, [cleanup]);\r\n\r\n  /**\r\n   * Memoized return object for performance\r\n   */\r\n  const returnValue = useMemo((): UseCategoryNavigationReturn => ({\r\n    navigateToFiltered,\r\n    navigateToHome,\r\n    getCurrentUrl,\r\n    isNavigating,\r\n  }), [\r\n    navigateToFiltered,\r\n    navigateToHome,\r\n    getCurrentUrl,\r\n    isNavigating,\r\n  ]);\r\n\r\n  return returnValue;\r\n};\r\n\r\n/**\r\n * Utility function to extract categories from URL\r\n */\r\nexport const extractCategoriesFromUrl = (url: string, paramName = 'categories'): CategoryId[] => {\r\n  try {\r\n    const urlObj = new URL(url, window.location.origin);\r\n    const categoriesParam = urlObj.searchParams.get(paramName);\r\n    return categoriesParam ? categoriesParam.split(',').filter(Boolean) : [];\r\n  } catch {\r\n    return [];\r\n  }\r\n};\r\n\r\n/**\r\n * Utility function to check if URL has category filters\r\n */\r\nexport const hasCategories = (url: string, paramName = 'categories'): boolean => {\r\n  return extractCategoriesFromUrl(url, paramName).length > 0;\r\n};\r\n\r\n/**\r\n * Default export for convenience\r\n */\r\nexport default useCategoryNavigation;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["extractCategoriesFromUrl","hasCategories","useCategoryNavigation","options","paramName","basePath","debounceDelay","preserveParams","onNavigationStart","onNavigationComplete","enableAnalytics","router","useRouter","searchParams","useSearchParams","pathname","usePathname","isNavigating","setIsNavigating","useState","debounceTimer","setDebounceTimer","trackNavigation","useCallback","categories","action","window","gtag","event_category","event_label","value","length","custom_parameters","join","path","process","env","NODE_ENV","buildUrl","params","URLSearchParams","forEach","key","set","queryString","toString","performNavigation","url","clearTimeout","timer","setTimeout","push","error","console","navigateToFiltered","validCategories","filter","cat","trim","navigateToHome","getCurrentUrl","currentCategories","get","split","getCurrentCategories","categoriesParam","Boolean","areCategoriesToActive","every","includes","cleanup","React","useEffect","returnValue","useMemo","urlObj","URL","location","origin"],"mappings":"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"}