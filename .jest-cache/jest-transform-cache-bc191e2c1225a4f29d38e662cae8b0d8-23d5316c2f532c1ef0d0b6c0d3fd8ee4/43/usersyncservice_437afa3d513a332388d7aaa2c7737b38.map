{"version":3,"names":["cov_198xhq8jfh","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","deleteUserFromSupabase","getSyncStatistics","getUserFromSupabase","isUserActive","syncUserFromClerk","syncUserToSupabase","updateLastLogin","userData","data","existingUser","error","checkError","_supabase","supabaseAdmin","from","select","eq","email","single","code","_logger","logger","success","updateError","update","image","last_login","Date","toISOString","updated_at","id","info","userId","newUser","createError","insert","role","is_active","provider","created_at","not","stats","totalUsers","length","activeUsers","filter","u","inactiveUsers","byProvider","google","clerk","other","includes","recentSyncs","createdAt","dayAgo","now"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\auth\\user-sync-service.ts"],"sourcesContent":["/**\r\n * User Sync Service\r\n * Servicio de sincronización de usuarios entre NextAuth y Supabase\r\n */\r\n\r\nimport { supabaseAdmin } from '@/lib/integrations/supabase';\r\nimport { logger } from '@/lib/enterprise/logger';\r\n\r\nexport interface UserSyncData {\r\n  id: string;\r\n  email: string;\r\n  name?: string;\r\n  image?: string;\r\n  provider?: string;\r\n}\r\n\r\nexport interface SyncResult {\r\n  success: boolean;\r\n  userId?: string;\r\n  error?: string;\r\n}\r\n\r\n/**\r\n * Sincroniza un usuario de NextAuth a Supabase\r\n */\r\nexport async function syncUserToSupabase(userData: UserSyncData): Promise<SyncResult> {\r\n  try {\r\n    // Verificar si el usuario ya existe\r\n    const { data: existingUser, error: checkError } = await supabaseAdmin\r\n      .from('users')\r\n      .select('id, email')\r\n      .eq('email', userData.email)\r\n      .single();\r\n\r\n    if (checkError && checkError.code !== 'PGRST116') {\r\n      logger.error('Error verificando usuario existente:', checkError);\r\n      return { success: false, error: 'Error verificando usuario' };\r\n    }\r\n\r\n    if (existingUser) {\r\n      // Usuario existe, actualizar información\r\n      const { error: updateError } = await supabaseAdmin\r\n        .from('users')\r\n        .update({\r\n          name: userData.name,\r\n          image: userData.image,\r\n          last_login: new Date().toISOString(),\r\n          updated_at: new Date().toISOString()\r\n        })\r\n        .eq('id', existingUser.id);\r\n\r\n      if (updateError) {\r\n        logger.error('Error actualizando usuario:', updateError);\r\n        return { success: false, error: 'Error actualizando usuario' };\r\n      }\r\n\r\n      logger.info(`Usuario actualizado: ${userData.email}`);\r\n      return { success: true, userId: existingUser.id };\r\n    } else {\r\n      // Usuario nuevo, crear\r\n      const { data: newUser, error: createError } = await supabaseAdmin\r\n        .from('users')\r\n        .insert({\r\n          id: userData.id,\r\n          email: userData.email,\r\n          name: userData.name,\r\n          image: userData.image,\r\n          role: 'customer', // Rol por defecto\r\n          is_active: true,\r\n          provider: userData.provider || 'google',\r\n          last_login: new Date().toISOString(),\r\n          created_at: new Date().toISOString(),\r\n          updated_at: new Date().toISOString()\r\n        })\r\n        .select('id')\r\n        .single();\r\n\r\n      if (createError) {\r\n        logger.error('Error creando usuario:', createError);\r\n        return { success: false, error: 'Error creando usuario' };\r\n      }\r\n\r\n      logger.info(`Usuario creado: ${userData.email}`);\r\n      return { success: true, userId: newUser.id };\r\n    }\r\n  } catch (error) {\r\n    logger.error('Error en syncUserToSupabase:', error);\r\n    return { success: false, error: 'Error interno del servidor' };\r\n  }\r\n}\r\n\r\n/**\r\n * Elimina un usuario de Supabase\r\n */\r\nexport async function deleteUserFromSupabase(userId: string): Promise<SyncResult> {\r\n  try {\r\n    // Marcar como inactivo en lugar de eliminar\r\n    const { error } = await supabaseAdmin\r\n      .from('users')\r\n      .update({\r\n        is_active: false,\r\n        updated_at: new Date().toISOString()\r\n      })\r\n      .eq('id', userId);\r\n\r\n    if (error) {\r\n      logger.error('Error desactivando usuario:', error);\r\n      return { success: false, error: 'Error desactivando usuario' };\r\n    }\r\n\r\n    logger.info(`Usuario desactivado: ${userId}`);\r\n    return { success: true, userId };\r\n  } catch (error) {\r\n    logger.error('Error en deleteUserFromSupabase:', error);\r\n    return { success: false, error: 'Error interno del servidor' };\r\n  }\r\n}\r\n\r\n/**\r\n * Sincroniza usuario desde NextAuth (legacy Clerk migration)\r\n */\r\nexport async function syncUserFromClerk(userData: UserSyncData): Promise<SyncResult> {\r\n  // Esta función es para compatibilidad con la migración de Clerk\r\n  // Redirige a la función principal de sincronización\r\n  return syncUserToSupabase(userData);\r\n}\r\n\r\n/**\r\n * Obtiene información de usuario desde Supabase\r\n */\r\nexport async function getUserFromSupabase(userId: string) {\r\n  try {\r\n    const { data, error } = await supabaseAdmin\r\n      .from('users')\r\n      .select('*')\r\n      .eq('id', userId)\r\n      .eq('is_active', true)\r\n      .single();\r\n\r\n    if (error) {\r\n      logger.error('Error obteniendo usuario:', error);\r\n      return null;\r\n    }\r\n\r\n    return data;\r\n  } catch (error) {\r\n    logger.error('Error en getUserFromSupabase:', error);\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * Actualiza el último login de un usuario\r\n */\r\nexport async function updateLastLogin(userId: string): Promise<boolean> {\r\n  try {\r\n    const { error } = await supabaseAdmin\r\n      .from('users')\r\n      .update({\r\n        last_login: new Date().toISOString(),\r\n        updated_at: new Date().toISOString()\r\n      })\r\n      .eq('id', userId);\r\n\r\n    if (error) {\r\n      logger.error('Error actualizando último login:', error);\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  } catch (error) {\r\n    logger.error('Error en updateLastLogin:', error);\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Verifica si un usuario está activo\r\n */\r\nexport async function isUserActive(userId: string): Promise<boolean> {\r\n  try {\r\n    const { data, error } = await supabaseAdmin\r\n      .from('users')\r\n      .select('is_active')\r\n      .eq('id', userId)\r\n      .single();\r\n\r\n    if (error) {\r\n      logger.error('Error verificando estado de usuario:', error);\r\n      return false;\r\n    }\r\n\r\n    return data.is_active;\r\n  } catch (error) {\r\n    logger.error('Error en isUserActive:', error);\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Obtiene estadísticas de sincronización\r\n */\r\nexport async function getSyncStatistics() {\r\n  try {\r\n    const { data, error } = await supabaseAdmin\r\n      .from('users')\r\n      .select('provider, is_active, created_at')\r\n      .not('provider', 'is', null);\r\n\r\n    if (error) {\r\n      logger.error('Error obteniendo estadísticas de sync:', error);\r\n      return null;\r\n    }\r\n\r\n    const stats = {\r\n      totalUsers: data.length,\r\n      activeUsers: data.filter(u => u.is_active).length,\r\n      inactiveUsers: data.filter(u => !u.is_active).length,\r\n      byProvider: {\r\n        google: data.filter(u => u.provider === 'google').length,\r\n        clerk: data.filter(u => u.provider === 'clerk').length,\r\n        other: data.filter(u => u.provider && !['google', 'clerk'].includes(u.provider)).length,\r\n      },\r\n      recentSyncs: data.filter(u => {\r\n        const createdAt = new Date(u.created_at);\r\n        const dayAgo = new Date(Date.now() - 24 * 60 * 60 * 1000);\r\n        return createdAt > dayAgo;\r\n      }).length\r\n    };\r\n\r\n    return stats;\r\n  } catch (error) {\r\n    logger.error('Error en getSyncStatistics:', error);\r\n    return null;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]}