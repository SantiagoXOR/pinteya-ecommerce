{"version":3,"names":["_default","PerformanceMonitor","cov_2lvxl461j","f","data","setData","s","_react","useState","loading","setLoading","error","setError","autoRefresh","setAutoRefresh","refreshInterval","setRefreshInterval","timeWindow","setTimeWindow","fetchMetrics","useCallback","response","fetch","method","headers","ok","b","Error","status","statusText","result","json","err","console","message","useEffect","interval","setInterval","clearInterval","getHealthColor","getHealthIcon","_jsxruntime","jsx","_lucidereact","CheckCircle","className","AlertTriangle","Activity","formatTime","ms","toFixed","jsxs","RefreshCw","_alert","Alert","variant","AlertTitle","AlertDescription","String","_button","Button","size","onClick","metrics","healthCheck","meta","timeWindowHuman","Date","timestamp","toLocaleTimeString","disabled","_card","Card","CardHeader","CardTitle","_badge","Badge","toUpperCase","CardContent","Globe","checks","api","Database","database","Server","memory","Zap","performance","TrendingUp","totalRequests","toLocaleString","Clock","averageResponseTime","_progress","Progress","value","Math","min","errorRate","indicatorClassName","_tabs","Tabs","defaultValue","TabsList","TabsTrigger","TabsContent","CardDescription","slowestEndpoints","length","map","endpoint","index","path","avgTime","Object","keys","errorsByStatus","entries","count","environment","version","generatedAt"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\admin\\PerformanceMonitor.tsx"],"sourcesContent":["// ===================================\r\n// PERFORMANCE MONITOR COMPONENT\r\n// Componente para mostrar métricas de rendimiento en tiempo real\r\n// ===================================\r\n\r\n'use client';\r\n\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport { Progress } from '@/components/ui/progress';\r\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\r\nimport { \r\n  Activity, \r\n  AlertTriangle, \r\n  CheckCircle, \r\n  Clock, \r\n  Database, \r\n  Globe, \r\n  RefreshCw, \r\n  Server, \r\n  TrendingUp, \r\n  Zap \r\n} from 'lucide-react';\r\n\r\n// Tipos para las métricas\r\ninterface PerformanceMetrics {\r\n  totalRequests: number;\r\n  averageResponseTime: number;\r\n  errorRate: number;\r\n  slowestEndpoints: Array<{ path: string; avgTime: number }>;\r\n  errorsByStatus: Record<number, number>;\r\n}\r\n\r\ninterface HealthCheck {\r\n  status: 'healthy' | 'degraded' | 'unhealthy';\r\n  checks: Record<string, boolean>;\r\n  timestamp: number;\r\n}\r\n\r\ninterface MonitoringData {\r\n  timestamp: string;\r\n  timeWindow: number;\r\n  timeWindowHuman: string;\r\n  metrics: PerformanceMetrics;\r\n  healthCheck: HealthCheck | null;\r\n  meta: {\r\n    generatedAt: number;\r\n    version: string;\r\n    environment: string;\r\n  };\r\n}\r\n\r\nconst PerformanceMonitor: React.FC = () => {\r\n  const [data, setData] = useState<MonitoringData | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [autoRefresh, setAutoRefresh] = useState(true);\r\n  const [refreshInterval, setRefreshInterval] = useState(30000); // 30 segundos\r\n  const [timeWindow, setTimeWindow] = useState(3600000); // 1 hora\r\n\r\n  // Función para obtener métricas\r\n  const fetchMetrics = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      const response = await fetch(\r\n        `/api/admin/performance/metrics?timeWindow=${timeWindow}&health=true`,\r\n        {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n      }\r\n\r\n      const result = await response.json();\r\n      setData(result);\r\n    } catch (err) {\r\n      console.error('Error fetching performance metrics:', err);\r\n      setError(err instanceof Error ? err.message : 'Error desconocido');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [timeWindow]);\r\n\r\n  // Efecto para cargar datos iniciales\r\n  useEffect(() => {\r\n    fetchMetrics();\r\n  }, [fetchMetrics]);\r\n\r\n  // Efecto para auto-refresh\r\n  useEffect(() => {\r\n    if (!autoRefresh) {return;}\r\n\r\n    const interval = setInterval(fetchMetrics, refreshInterval);\r\n    return () => clearInterval(interval);\r\n  }, [autoRefresh, refreshInterval, fetchMetrics]);\r\n\r\n  // Función para obtener el color del estado de salud\r\n  const getHealthColor = (status: string) => {\r\n    switch (status) {\r\n      case 'healthy': return 'text-green-600';\r\n      case 'degraded': return 'text-yellow-600';\r\n      case 'unhealthy': return 'text-red-600';\r\n      default: return 'text-gray-600';\r\n    }\r\n  };\r\n\r\n  // Función para obtener el icono del estado de salud\r\n  const getHealthIcon = (status: string) => {\r\n    switch (status) {\r\n      case 'healthy': return <CheckCircle className=\"h-4 w-4\" />;\r\n      case 'degraded': return <AlertTriangle className=\"h-4 w-4\" />;\r\n      case 'unhealthy': return <AlertTriangle className=\"h-4 w-4\" />;\r\n      default: return <Activity className=\"h-4 w-4\" />;\r\n    }\r\n  };\r\n\r\n  // Función para formatear tiempo\r\n  const formatTime = (ms: number) => {\r\n    if (ms < 1000) {return `${ms.toFixed(0)}ms`;}\r\n    if (ms < 60000) {return `${(ms / 1000).toFixed(1)}s`;}\r\n    return `${(ms / 60000).toFixed(1)}min`;\r\n  };\r\n\r\n  if (loading && !data) {\r\n    return (\r\n      <div className=\"flex items-center justify-center p-8\">\r\n        <RefreshCw className=\"h-6 w-6 animate-spin mr-2\" />\r\n        <span>Cargando métricas de rendimiento...</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Alert variant=\"destructive\">\r\n        <AlertTriangle className=\"h-4 w-4\" />\r\n        <AlertTitle>Error al cargar métricas</AlertTitle>\r\n        <AlertDescription>\r\n          {error instanceof Error ? error.message : String(error) || 'Error desconocido'}\r\n          <Button \r\n            variant=\"outline\" \r\n            size=\"sm\" \r\n            className=\"ml-2\" \r\n            onClick={fetchMetrics}\r\n          >\r\n            Reintentar\r\n          </Button>\r\n        </AlertDescription>\r\n      </Alert>\r\n    );\r\n  }\r\n\r\n  if (!data) {\r\n    return (\r\n      <Alert>\r\n        <Activity className=\"h-4 w-4\" />\r\n        <AlertTitle>Sin datos</AlertTitle>\r\n        <AlertDescription>\r\n          No hay métricas de rendimiento disponibles.\r\n        </AlertDescription>\r\n      </Alert>\r\n    );\r\n  }\r\n\r\n  const { metrics, healthCheck, meta } = data;\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header con controles */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h2 className=\"text-2xl font-bold tracking-tight\">Monitor de Rendimiento</h2>\r\n          <p className=\"text-muted-foreground\">\r\n            Métricas de los últimos {data.timeWindowHuman} • Actualizado: {new Date(data.timestamp).toLocaleTimeString()}\r\n          </p>\r\n        </div>\r\n        <div className=\"flex items-center space-x-2\">\r\n          <Button\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            onClick={fetchMetrics}\r\n            disabled={loading}\r\n          >\r\n            <RefreshCw className={`h-4 w-4 mr-2 ${loading ? 'animate-spin' : ''}`} />\r\n            Actualizar\r\n          </Button>\r\n          <Button\r\n            variant={autoRefresh ? 'default' : 'outline'}\r\n            size=\"sm\"\r\n            onClick={() => setAutoRefresh(!autoRefresh)}\r\n          >\r\n            <Activity className=\"h-4 w-4 mr-2\" />\r\n            Auto-refresh\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Estado de salud general */}\r\n      {healthCheck && (\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle className=\"flex items-center space-x-2\">\r\n              <span className={getHealthColor(healthCheck.status)}>\r\n                {getHealthIcon(healthCheck.status)}\r\n              </span>\r\n              <span>Estado del Sistema</span>\r\n              <Badge \r\n                variant={healthCheck.status === 'healthy' ? 'default' : 'destructive'}\r\n                className={healthCheck.status === 'healthy' ? 'bg-green-100 text-green-800' : ''}\r\n              >\r\n                {healthCheck.status.toUpperCase()}\r\n              </Badge>\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n              <div className=\"flex items-center space-x-2\">\r\n                <Globe className={`h-4 w-4 ${healthCheck.checks.api ? 'text-green-600' : 'text-red-600'}`} />\r\n                <span className=\"text-sm\">API</span>\r\n                <Badge variant={healthCheck.checks.api ? 'default' : 'destructive'} className=\"text-xs\">\r\n                  {healthCheck.checks.api ? 'OK' : 'ERROR'}\r\n                </Badge>\r\n              </div>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <Database className={`h-4 w-4 ${healthCheck.checks.database ? 'text-green-600' : 'text-red-600'}`} />\r\n                <span className=\"text-sm\">Base de Datos</span>\r\n                <Badge variant={healthCheck.checks.database ? 'default' : 'destructive'} className=\"text-xs\">\r\n                  {healthCheck.checks.database ? 'OK' : 'ERROR'}\r\n                </Badge>\r\n              </div>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <Server className={`h-4 w-4 ${healthCheck.checks.memory ? 'text-green-600' : 'text-red-600'}`} />\r\n                <span className=\"text-sm\">Memoria</span>\r\n                <Badge variant={healthCheck.checks.memory ? 'default' : 'destructive'} className=\"text-xs\">\r\n                  {healthCheck.checks.memory ? 'OK' : 'ERROR'}\r\n                </Badge>\r\n              </div>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <Zap className={`h-4 w-4 ${healthCheck.checks.performance ? 'text-green-600' : 'text-red-600'}`} />\r\n                <span className=\"text-sm\">Rendimiento</span>\r\n                <Badge variant={healthCheck.checks.performance ? 'default' : 'destructive'} className=\"text-xs\">\r\n                  {healthCheck.checks.performance ? 'OK' : 'ERROR'}\r\n                </Badge>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n\r\n      {/* Métricas principales */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n        <Card>\r\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n            <CardTitle className=\"text-sm font-medium\">Total de Requests</CardTitle>\r\n            <TrendingUp className=\"h-4 w-4 text-muted-foreground\" />\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">{metrics.totalRequests.toLocaleString()}</div>\r\n            <p className=\"text-xs text-muted-foreground\">\r\n              En los últimos {data.timeWindowHuman}\r\n            </p>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n            <CardTitle className=\"text-sm font-medium\">Tiempo de Respuesta Promedio</CardTitle>\r\n            <Clock className=\"h-4 w-4 text-muted-foreground\" />\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">{formatTime(metrics.averageResponseTime)}</div>\r\n            <Progress \r\n              value={Math.min((metrics.averageResponseTime / 2000) * 100, 100)} \r\n              className=\"mt-2\"\r\n            />\r\n            <p className=\"text-xs text-muted-foreground mt-1\">\r\n              Target: &lt; 2s\r\n            </p>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n            <CardTitle className=\"text-sm font-medium\">Tasa de Error</CardTitle>\r\n            <AlertTriangle className=\"h-4 w-4 text-muted-foreground\" />\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">\r\n              {(metrics.errorRate * 100).toFixed(2)}%\r\n            </div>\r\n            <Progress \r\n              value={Math.min(metrics.errorRate * 100 * 20, 100)} \r\n              className=\"mt-2\"\r\n              // @ts-ignore\r\n              indicatorClassName={metrics.errorRate > 0.05 ? 'bg-red-500' : 'bg-green-500'}\r\n            />\r\n            <p className=\"text-xs text-muted-foreground mt-1\">\r\n              Target: &lt; 5%\r\n            </p>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Tabs con detalles */}\r\n      <Tabs defaultValue=\"endpoints\" className=\"space-y-4\">\r\n        <TabsList>\r\n          <TabsTrigger value=\"endpoints\">Endpoints Más Lentos</TabsTrigger>\r\n          <TabsTrigger value=\"errors\">Errores por Código</TabsTrigger>\r\n          <TabsTrigger value=\"system\">Información del Sistema</TabsTrigger>\r\n        </TabsList>\r\n\r\n        <TabsContent value=\"endpoints\" className=\"space-y-4\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Endpoints con Mayor Tiempo de Respuesta</CardTitle>\r\n              <CardDescription>\r\n                Los 10 endpoints más lentos en el período seleccionado\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              {metrics.slowestEndpoints.length > 0 ? (\r\n                <div className=\"space-y-2\">\r\n                  {metrics.slowestEndpoints.map((endpoint, index) => (\r\n                    <div key={index} className=\"flex items-center justify-between p-2 border rounded\">\r\n                      <span className=\"font-mono text-sm\">{endpoint.path}</span>\r\n                      <Badge variant=\"outline\">\r\n                        {formatTime(endpoint.avgTime)}\r\n                      </Badge>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              ) : (\r\n                <p className=\"text-muted-foreground\">No hay datos de endpoints disponibles.</p>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"errors\" className=\"space-y-4\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Distribución de Errores HTTP</CardTitle>\r\n              <CardDescription>\r\n                Errores agrupados por código de estado HTTP\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              {Object.keys(metrics.errorsByStatus).length > 0 ? (\r\n                <div className=\"space-y-2\">\r\n                  {Object.entries(metrics.errorsByStatus).map(([status, count]) => (\r\n                    <div key={status} className=\"flex items-center justify-between p-2 border rounded\">\r\n                      <span className=\"font-mono text-sm\">HTTP {status}</span>\r\n                      <Badge variant=\"destructive\">\r\n                        {count} error{count !== 1 ? 'es' : ''}\r\n                      </Badge>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              ) : (\r\n                <p className=\"text-muted-foreground\">No se registraron errores en este período. ¡Excelente!</p>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"system\" className=\"space-y-4\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Información del Sistema</CardTitle>\r\n              <CardDescription>\r\n                Detalles técnicos del sistema de monitoring\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"grid grid-cols-2 gap-4\">\r\n                <div>\r\n                  <span className=\"text-sm font-medium\">Entorno:</span>\r\n                  <Badge className=\"ml-2\">{meta.environment}</Badge>\r\n                </div>\r\n                <div>\r\n                  <span className=\"text-sm font-medium\">Versión:</span>\r\n                  <Badge variant=\"outline\" className=\"ml-2\">{meta.version}</Badge>\r\n                </div>\r\n                <div>\r\n                  <span className=\"text-sm font-medium\">Generado:</span>\r\n                  <span className=\"ml-2 text-sm text-muted-foreground\">\r\n                    {new Date(meta.generatedAt).toLocaleString()}\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  <span className=\"text-sm font-medium\">Ventana de tiempo:</span>\r\n                  <span className=\"ml-2 text-sm text-muted-foreground\">\r\n                    {data.timeWindowHuman}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PerformanceMonitor;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}