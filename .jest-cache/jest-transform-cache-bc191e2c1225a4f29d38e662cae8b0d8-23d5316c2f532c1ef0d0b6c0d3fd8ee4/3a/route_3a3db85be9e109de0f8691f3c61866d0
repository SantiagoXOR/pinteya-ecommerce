223ba448fc0175cda2c09c7b6c4c7b32
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_ivz6qczz() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\sitemap\\route.ts";
  var hash = "820664a9a5cb48153c1d60c1adf0e844bf352ea7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\sitemap\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 20
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 23
        }
      },
      "7": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "8": {
        start: {
          line: 24,
          column: 33
        },
        end: {
          line: 24,
          column: 86
        }
      },
      "9": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 57
        }
      },
      "10": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 24
        }
      },
      "11": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 72,
          column: 5
        }
      },
      "12": {
        start: {
          line: 29,
          column: 33
        },
        end: {
          line: 29,
          column: 53
        }
      },
      "13": {
        start: {
          line: 30,
          column: 23
        },
        end: {
          line: 30,
          column: 58
        }
      },
      "14": {
        start: {
          line: 31,
          column: 22
        },
        end: {
          line: 31,
          column: 47
        }
      },
      "15": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 36,
          column: 36
        }
      },
      "16": {
        start: {
          line: 38,
          column: 28
        },
        end: {
          line: 38,
          column: 108
        }
      },
      "17": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 50,
          column: 9
        }
      },
      "18": {
        start: {
          line: 41,
          column: 26
        },
        end: {
          line: 41,
          column: 93
        }
      },
      "19": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 49,
          column: 15
        }
      },
      "20": {
        start: {
          line: 53,
          column: 27
        },
        end: {
          line: 53,
          column: 59
        }
      },
      "21": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 62,
          column: 11
        }
      },
      "22": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 106
        }
      },
      "23": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 71,
          column: 11
        }
      },
      "24": {
        start: {
          line: 75,
          column: 4
        },
        end: {
          line: 112,
          column: 5
        }
      },
      "25": {
        start: {
          line: 76,
          column: 21
        },
        end: {
          line: 76,
          column: 41
        }
      },
      "26": {
        start: {
          line: 77,
          column: 52
        },
        end: {
          line: 77,
          column: 56
        }
      },
      "27": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 81,
          column: 36
        }
      },
      "28": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 85,
          column: 9
        }
      },
      "29": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 88
        }
      },
      "30": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 89,
          column: 9
        }
      },
      "31": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 87
        }
      },
      "32": {
        start: {
          line: 91,
          column: 28
        },
        end: {
          line: 91,
          column: 108
        }
      },
      "33": {
        start: {
          line: 92,
          column: 22
        },
        end: {
          line: 92,
          column: 89
        }
      },
      "34": {
        start: {
          line: 93,
          column: 23
        },
        end: {
          line: 93,
          column: 96
        }
      },
      "35": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 102,
          column: 11
        }
      },
      "36": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 104,
          column: 122
        }
      },
      "37": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 111,
          column: 11
        }
      },
      "38": {
        start: {
          line: 120,
          column: 20
        },
        end: {
          line: 120,
          column: 94
        }
      },
      "39": {
        start: {
          line: 121,
          column: 16
        },
        end: {
          line: 121,
          column: 54
        }
      },
      "40": {
        start: {
          line: 122,
          column: 4
        },
        end: {
          line: 156,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "GET",
        decl: {
          start: {
            line: 27,
            column: 15
          },
          end: {
            line: 27,
            column: 18
          }
        },
        loc: {
          start: {
            line: 27,
            column: 28
          },
          end: {
            line: 73,
            column: 1
          }
        },
        line: 27
      },
      "5": {
        name: "POST",
        decl: {
          start: {
            line: 74,
            column: 15
          },
          end: {
            line: 74,
            column: 19
          }
        },
        loc: {
          start: {
            line: 74,
            column: 29
          },
          end: {
            line: 113,
            column: 1
          }
        },
        line: 74
      },
      "6": {
        name: "generateSampleSitemapXML",
        decl: {
          start: {
            line: 119,
            column: 19
          },
          end: {
            line: 119,
            column: 43
          }
        },
        loc: {
          start: {
            line: 119,
            column: 46
          },
          end: {
            line: 157,
            column: 1
          }
        },
        line: 119
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 30,
            column: 23
          },
          end: {
            line: 30,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 23
          },
          end: {
            line: 30,
            column: 49
          }
        }, {
          start: {
            line: 30,
            column: 53
          },
          end: {
            line: 30,
            column: 58
          }
        }],
        line: 30
      },
      "1": {
        loc: {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "2": {
        loc: {
          start: {
            line: 77,
            column: 16
          },
          end: {
            line: 77,
            column: 34
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 77,
            column: 29
          },
          end: {
            line: 77,
            column: 34
          }
        }],
        line: 77
      },
      "3": {
        loc: {
          start: {
            line: 77,
            column: 36
          },
          end: {
            line: 77,
            column: 47
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 77,
            column: 45
          },
          end: {
            line: 77,
            column: 47
          }
        }],
        line: 77
      },
      "4": {
        loc: {
          start: {
            line: 83,
            column: 8
          },
          end: {
            line: 85,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 83,
            column: 8
          },
          end: {
            line: 85,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 83
      },
      "5": {
        loc: {
          start: {
            line: 87,
            column: 8
          },
          end: {
            line: 89,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 8
          },
          end: {
            line: 89,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 87
      },
      "6": {
        loc: {
          start: {
            line: 120,
            column: 20
          },
          end: {
            line: 120,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 120,
            column: 20
          },
          end: {
            line: 120,
            column: 52
          }
        }, {
          start: {
            line: 120,
            column: 56
          },
          end: {
            line: 120,
            column: 94
          }
        }],
        line: 120
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0],
      "3": [0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\sitemap\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - DYNAMIC SITEMAP API\r\n// API para generar y servir sitemaps din\xE1micos\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { enhancedDynamicSitemapGenerator } from '@/lib/seo/dynamic-sitemap-generator';\r\nimport { logger, LogCategory, LogLevel } from '@/lib/enterprise/logger';\r\n\r\n// ===================================\r\n// GET /api/sitemap - Generar y servir sitemap\r\n// ===================================\r\n\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    const { searchParams } = new URL(request.url);\r\n    const format = searchParams.get('format') || 'xml';\r\n    const index = searchParams.get('index');\r\n\r\n    logger.info(LogLevel.INFO, 'Sitemap API request', {\r\n      format,\r\n      index,\r\n      userAgent: request.headers.get('user-agent')\r\n    }, LogCategory.SEO);\r\n\r\n    // Generar sitemap\r\n    const sitemapUrls = await enhancedDynamicSitemapGenerator.generateSitemap();\r\n\r\n    if (format === 'json') {\r\n      // Retornar informaci\xF3n del sitemap en JSON\r\n      const stats = enhancedDynamicSitemapGenerator.getStats();\r\n      return NextResponse.json({\r\n        success: true,\r\n        data: {\r\n          sitemapUrls,\r\n          stats,\r\n          generatedAt: new Date().toISOString()\r\n        }\r\n      });\r\n    }\r\n\r\n    // Retornar XML por defecto\r\n    // En un entorno real, esto servir\xEDa el archivo XML generado\r\n    const xmlContent = await generateSampleSitemapXML();\r\n\r\n    return new NextResponse(xmlContent, {\r\n      status: 200,\r\n      headers: {\r\n        'Content-Type': 'application/xml',\r\n        'Cache-Control': 'public, max-age=3600', // Cache por 1 hora\r\n        'X-Sitemap-Generated': new Date().toISOString(),\r\n        'X-Total-URLs': enhancedDynamicSitemapGenerator.getStats().totalUrls.toString()\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    logger.error(LogLevel.ERROR, 'Sitemap API error', error as Error, LogCategory.SEO);\r\n\r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Failed to generate sitemap',\r\n      message: (error as Error).message\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n// ===================================\r\n// POST /api/sitemap - Regenerar sitemap manualmente\r\n// ===================================\r\n\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    const body = await request.json();\r\n    const { clearCache = false, config = {} } = body;\r\n\r\n    logger.info(LogLevel.INFO, 'Manual sitemap regeneration requested', {\r\n      clearCache,\r\n      hasConfig: Object.keys(config).length > 0\r\n    }, LogCategory.SEO);\r\n\r\n    // Limpiar cache si se solicita\r\n    if (clearCache) {\r\n      await enhancedDynamicSitemapGenerator.clearCache();\r\n    }\r\n\r\n    // Aplicar configuraci\xF3n temporal si se proporciona\r\n    if (Object.keys(config).length > 0) {\r\n      enhancedDynamicSitemapGenerator.configure(config);\r\n    }\r\n\r\n    // Regenerar sitemap\r\n    const sitemapUrls = await enhancedDynamicSitemapGenerator.generateSitemap();\r\n    const stats = enhancedDynamicSitemapGenerator.getStats();\r\n    const report = enhancedDynamicSitemapGenerator.generateReport();\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: {\r\n        sitemapUrls,\r\n        stats,\r\n        report,\r\n        regeneratedAt: new Date().toISOString()\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    logger.error(LogLevel.ERROR, 'Manual sitemap regeneration error', error as Error, LogCategory.SEO);\r\n\r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Failed to regenerate sitemap',\r\n      message: (error as Error).message\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n// ===================================\r\n// UTILIDADES\r\n// ===================================\r\n\r\n/**\r\n * Generar XML de ejemplo para demostraci\xF3n\r\n */\r\nasync function generateSampleSitemapXML(): Promise<string> {\r\n  const baseUrl = process.env.NEXT_PUBLIC_SITE_URL || 'https://pinteya-ecommerce.vercel.app';\r\n  const now = new Date().toISOString().split('T')[0];\r\n\r\n  return `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\"\r\n        xmlns:image=\"http://www.google.com/schemas/sitemap-image/1.1\">\r\n  <url>\r\n    <loc>${baseUrl}/</loc>\r\n    <lastmod>${now}</lastmod>\r\n    <changefreq>daily</changefreq>\r\n    <priority>1.0</priority>\r\n  </url>\r\n  <url>\r\n    <loc>${baseUrl}/shop</loc>\r\n    <lastmod>${now}</lastmod>\r\n    <changefreq>weekly</changefreq>\r\n    <priority>0.8</priority>\r\n  </url>\r\n  <url>\r\n    <loc>${baseUrl}/about</loc>\r\n    <lastmod>${now}</lastmod>\r\n    <changefreq>monthly</changefreq>\r\n    <priority>0.6</priority>\r\n  </url>\r\n  <url>\r\n    <loc>${baseUrl}/contact</loc>\r\n    <lastmod>${now}</lastmod>\r\n    <changefreq>monthly</changefreq>\r\n    <priority>0.6</priority>\r\n  </url>\r\n  <url>\r\n    <loc>${baseUrl}/help</loc>\r\n    <lastmod>${now}</lastmod>\r\n    <changefreq>monthly</changefreq>\r\n    <priority>0.6</priority>\r\n  </url>\r\n  <!-- P\xE1ginas din\xE1micas se generar\xEDan aqu\xED -->\r\n</urlset>`;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "POST", "runtime", "request", "searchParams", "URL", "url", "format", "get", "index", "logger", "info", "LogLevel", "INFO", "userAgent", "headers", "LogCategory", "SEO", "sitemapUrls", "enhancedDynamicSitemapGenerator", "generateSitemap", "stats", "getStats", "NextResponse", "json", "success", "data", "generatedAt", "Date", "toISOString", "xmlContent", "generateSampleSitemapXML", "status", "totalUrls", "toString", "error", "ERROR", "message", "body", "clearCache", "config", "hasConfig", "Object", "keys", "length", "configure", "report", "generateReport", "regeneratedAt", "baseUrl", "process", "env", "NEXT_PUBLIC_SITE_URL", "now", "split"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "820664a9a5cb48153c1d60c1adf0e844bf352ea7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_ivz6qczz = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_ivz6qczz();
cov_ivz6qczz().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_ivz6qczz().f[0]++;
  cov_ivz6qczz().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_ivz6qczz().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_ivz6qczz().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_ivz6qczz().f[1]++;
    cov_ivz6qczz().s[4]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_ivz6qczz().f[2]++;
    cov_ivz6qczz().s[5]++;
    return POST;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_ivz6qczz().f[3]++;
    cov_ivz6qczz().s[6]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_ivz6qczz().s[7]++, require("next/server"));
const _dynamicsitemapgenerator =
/* istanbul ignore next */
(cov_ivz6qczz().s[8]++, require("../../../lib/seo/dynamic-sitemap-generator"));
const _logger =
/* istanbul ignore next */
(cov_ivz6qczz().s[9]++, require("../../../lib/enterprise/logger"));
const runtime =
/* istanbul ignore next */
(cov_ivz6qczz().s[10]++, 'nodejs');
async function GET(request) {
  /* istanbul ignore next */
  cov_ivz6qczz().f[4]++;
  cov_ivz6qczz().s[11]++;
  try {
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_ivz6qczz().s[12]++, new URL(request.url));
    const format =
    /* istanbul ignore next */
    (cov_ivz6qczz().s[13]++,
    /* istanbul ignore next */
    (cov_ivz6qczz().b[0][0]++, searchParams.get('format')) ||
    /* istanbul ignore next */
    (cov_ivz6qczz().b[0][1]++, 'xml'));
    const index =
    /* istanbul ignore next */
    (cov_ivz6qczz().s[14]++, searchParams.get('index'));
    /* istanbul ignore next */
    cov_ivz6qczz().s[15]++;
    _logger.logger.info(_logger.LogLevel.INFO, 'Sitemap API request', {
      format,
      index,
      userAgent: request.headers.get('user-agent')
    }, _logger.LogCategory.SEO);
    // Generar sitemap
    const sitemapUrls =
    /* istanbul ignore next */
    (cov_ivz6qczz().s[16]++, await _dynamicsitemapgenerator.enhancedDynamicSitemapGenerator.generateSitemap());
    /* istanbul ignore next */
    cov_ivz6qczz().s[17]++;
    if (format === 'json') {
      /* istanbul ignore next */
      cov_ivz6qczz().b[1][0]++;
      // Retornar informaciÃ³n del sitemap en JSON
      const stats =
      /* istanbul ignore next */
      (cov_ivz6qczz().s[18]++, _dynamicsitemapgenerator.enhancedDynamicSitemapGenerator.getStats());
      /* istanbul ignore next */
      cov_ivz6qczz().s[19]++;
      return _server.NextResponse.json({
        success: true,
        data: {
          sitemapUrls,
          stats,
          generatedAt: new Date().toISOString()
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_ivz6qczz().b[1][1]++;
    }
    // Retornar XML por defecto
    // En un entorno real, esto servirÃ­a el archivo XML generado
    const xmlContent =
    /* istanbul ignore next */
    (cov_ivz6qczz().s[20]++, await generateSampleSitemapXML());
    /* istanbul ignore next */
    cov_ivz6qczz().s[21]++;
    return new _server.NextResponse(xmlContent, {
      status: 200,
      headers: {
        'Content-Type': 'application/xml',
        'Cache-Control': 'public, max-age=3600',
        'X-Sitemap-Generated': new Date().toISOString(),
        'X-Total-URLs': _dynamicsitemapgenerator.enhancedDynamicSitemapGenerator.getStats().totalUrls.toString()
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_ivz6qczz().s[22]++;
    _logger.logger.error(_logger.LogLevel.ERROR, 'Sitemap API error', error, _logger.LogCategory.SEO);
    /* istanbul ignore next */
    cov_ivz6qczz().s[23]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Failed to generate sitemap',
      message: error.message
    }, {
      status: 500
    });
  }
}
async function POST(request) {
  /* istanbul ignore next */
  cov_ivz6qczz().f[5]++;
  cov_ivz6qczz().s[24]++;
  try {
    const body =
    /* istanbul ignore next */
    (cov_ivz6qczz().s[25]++, await request.json());
    const {
      clearCache =
      /* istanbul ignore next */
      (cov_ivz6qczz().b[2][0]++, false),
      config =
      /* istanbul ignore next */
      (cov_ivz6qczz().b[3][0]++, {})
    } =
    /* istanbul ignore next */
    (cov_ivz6qczz().s[26]++, body);
    /* istanbul ignore next */
    cov_ivz6qczz().s[27]++;
    _logger.logger.info(_logger.LogLevel.INFO, 'Manual sitemap regeneration requested', {
      clearCache,
      hasConfig: Object.keys(config).length > 0
    }, _logger.LogCategory.SEO);
    // Limpiar cache si se solicita
    /* istanbul ignore next */
    cov_ivz6qczz().s[28]++;
    if (clearCache) {
      /* istanbul ignore next */
      cov_ivz6qczz().b[4][0]++;
      cov_ivz6qczz().s[29]++;
      await _dynamicsitemapgenerator.enhancedDynamicSitemapGenerator.clearCache();
    } else
    /* istanbul ignore next */
    {
      cov_ivz6qczz().b[4][1]++;
    }
    // Aplicar configuraciÃ³n temporal si se proporciona
    cov_ivz6qczz().s[30]++;
    if (Object.keys(config).length > 0) {
      /* istanbul ignore next */
      cov_ivz6qczz().b[5][0]++;
      cov_ivz6qczz().s[31]++;
      _dynamicsitemapgenerator.enhancedDynamicSitemapGenerator.configure(config);
    } else
    /* istanbul ignore next */
    {
      cov_ivz6qczz().b[5][1]++;
    }
    // Regenerar sitemap
    const sitemapUrls =
    /* istanbul ignore next */
    (cov_ivz6qczz().s[32]++, await _dynamicsitemapgenerator.enhancedDynamicSitemapGenerator.generateSitemap());
    const stats =
    /* istanbul ignore next */
    (cov_ivz6qczz().s[33]++, _dynamicsitemapgenerator.enhancedDynamicSitemapGenerator.getStats());
    const report =
    /* istanbul ignore next */
    (cov_ivz6qczz().s[34]++, _dynamicsitemapgenerator.enhancedDynamicSitemapGenerator.generateReport());
    /* istanbul ignore next */
    cov_ivz6qczz().s[35]++;
    return _server.NextResponse.json({
      success: true,
      data: {
        sitemapUrls,
        stats,
        report,
        regeneratedAt: new Date().toISOString()
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_ivz6qczz().s[36]++;
    _logger.logger.error(_logger.LogLevel.ERROR, 'Manual sitemap regeneration error', error, _logger.LogCategory.SEO);
    /* istanbul ignore next */
    cov_ivz6qczz().s[37]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Failed to regenerate sitemap',
      message: error.message
    }, {
      status: 500
    });
  }
}
// ===================================
// UTILIDADES
// ===================================
/**
 * Generar XML de ejemplo para demostraciÃ³n
 */
async function generateSampleSitemapXML() {
  /* istanbul ignore next */
  cov_ivz6qczz().f[6]++;
  const baseUrl =
  /* istanbul ignore next */
  (cov_ivz6qczz().s[38]++,
  /* istanbul ignore next */
  (cov_ivz6qczz().b[6][0]++, process.env.NEXT_PUBLIC_SITE_URL) ||
  /* istanbul ignore next */
  (cov_ivz6qczz().b[6][1]++, 'https://pinteya-ecommerce.vercel.app'));
  const now =
  /* istanbul ignore next */
  (cov_ivz6qczz().s[39]++, new Date().toISOString().split('T')[0]);
  /* istanbul ignore next */
  cov_ivz6qczz().s[40]++;
  return `<?xml version="1.0" encoding="UTF-8"?>
<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9"
        xmlns:image="http://www.google.com/schemas/sitemap-image/1.1">
  <url>
    <loc>${baseUrl}/</loc>
    <lastmod>${now}</lastmod>
    <changefreq>daily</changefreq>
    <priority>1.0</priority>
  </url>
  <url>
    <loc>${baseUrl}/shop</loc>
    <lastmod>${now}</lastmod>
    <changefreq>weekly</changefreq>
    <priority>0.8</priority>
  </url>
  <url>
    <loc>${baseUrl}/about</loc>
    <lastmod>${now}</lastmod>
    <changefreq>monthly</changefreq>
    <priority>0.6</priority>
  </url>
  <url>
    <loc>${baseUrl}/contact</loc>
    <lastmod>${now}</lastmod>
    <changefreq>monthly</changefreq>
    <priority>0.6</priority>
  </url>
  <url>
    <loc>${baseUrl}/help</loc>
    <lastmod>${now}</lastmod>
    <changefreq>monthly</changefreq>
    <priority>0.6</priority>
  </url>
  <!-- PÃ¡ginas dinÃ¡micas se generarÃ­an aquÃ­ -->
</urlset>`;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfaXZ6NnFjenoiLCJhY3R1YWxDb3ZlcmFnZSIsInMiLCJHRVQiLCJmIiwiUE9TVCIsInJ1bnRpbWUiLCJyZXF1ZXN0Iiwic2VhcmNoUGFyYW1zIiwiVVJMIiwidXJsIiwiZm9ybWF0IiwiYiIsImdldCIsImluZGV4IiwiX2xvZ2dlciIsImxvZ2dlciIsImluZm8iLCJMb2dMZXZlbCIsIklORk8iLCJ1c2VyQWdlbnQiLCJoZWFkZXJzIiwiTG9nQ2F0ZWdvcnkiLCJTRU8iLCJzaXRlbWFwVXJscyIsIl9keW5hbWljc2l0ZW1hcGdlbmVyYXRvciIsImVuaGFuY2VkRHluYW1pY1NpdGVtYXBHZW5lcmF0b3IiLCJnZW5lcmF0ZVNpdGVtYXAiLCJzdGF0cyIsImdldFN0YXRzIiwiX3NlcnZlciIsIk5leHRSZXNwb25zZSIsImpzb24iLCJzdWNjZXNzIiwiZGF0YSIsImdlbmVyYXRlZEF0IiwiRGF0ZSIsInRvSVNPU3RyaW5nIiwieG1sQ29udGVudCIsImdlbmVyYXRlU2FtcGxlU2l0ZW1hcFhNTCIsInN0YXR1cyIsInRvdGFsVXJscyIsInRvU3RyaW5nIiwiZXJyb3IiLCJFUlJPUiIsIm1lc3NhZ2UiLCJib2R5IiwiY2xlYXJDYWNoZSIsImNvbmZpZyIsImhhc0NvbmZpZyIsIk9iamVjdCIsImtleXMiLCJsZW5ndGgiLCJjb25maWd1cmUiLCJyZXBvcnQiLCJnZW5lcmF0ZVJlcG9ydCIsInJlZ2VuZXJhdGVkQXQiLCJiYXNlVXJsIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX1NJVEVfVVJMIiwibm93Iiwic3BsaXQiXSwic291cmNlcyI6WyJDOlxcVXNlcnNcXG1hcnRpXFxEZXNrdG9wXFxERVNBUlJPTExPU1dcXEJPSUxFUlBMQVRURSBFLUNPTU1FUkNFXFxzcmNcXGFwcFxcYXBpXFxzaXRlbWFwXFxyb3V0ZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb25maWd1cmFjacOzbiBwYXJhIE5vZGUuanMgUnVudGltZVxyXG5leHBvcnQgY29uc3QgcnVudGltZSA9ICdub2RlanMnO1xyXG5cclxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gUElOVEVZQSBFLUNPTU1FUkNFIC0gRFlOQU1JQyBTSVRFTUFQIEFQSVxyXG4vLyBBUEkgcGFyYSBnZW5lcmFyIHkgc2VydmlyIHNpdGVtYXBzIGRpbsOhbWljb3NcclxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuXHJcbmltcG9ydCB7IE5leHRSZXF1ZXN0LCBOZXh0UmVzcG9uc2UgfSBmcm9tICduZXh0L3NlcnZlcic7XHJcbmltcG9ydCB7IGVuaGFuY2VkRHluYW1pY1NpdGVtYXBHZW5lcmF0b3IgfSBmcm9tICdAL2xpYi9zZW8vZHluYW1pYy1zaXRlbWFwLWdlbmVyYXRvcic7XHJcbmltcG9ydCB7IGxvZ2dlciwgTG9nQ2F0ZWdvcnksIExvZ0xldmVsIH0gZnJvbSAnQC9saWIvZW50ZXJwcmlzZS9sb2dnZXInO1xyXG5cclxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gR0VUIC9hcGkvc2l0ZW1hcCAtIEdlbmVyYXIgeSBzZXJ2aXIgc2l0ZW1hcFxyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIEdFVChyZXF1ZXN0OiBOZXh0UmVxdWVzdCkge1xyXG4gIHRyeSB7XHJcbiAgICBjb25zdCB7IHNlYXJjaFBhcmFtcyB9ID0gbmV3IFVSTChyZXF1ZXN0LnVybCk7XHJcbiAgICBjb25zdCBmb3JtYXQgPSBzZWFyY2hQYXJhbXMuZ2V0KCdmb3JtYXQnKSB8fCAneG1sJztcclxuICAgIGNvbnN0IGluZGV4ID0gc2VhcmNoUGFyYW1zLmdldCgnaW5kZXgnKTtcclxuXHJcbiAgICBsb2dnZXIuaW5mbyhMb2dMZXZlbC5JTkZPLCAnU2l0ZW1hcCBBUEkgcmVxdWVzdCcsIHtcclxuICAgICAgZm9ybWF0LFxyXG4gICAgICBpbmRleCxcclxuICAgICAgdXNlckFnZW50OiByZXF1ZXN0LmhlYWRlcnMuZ2V0KCd1c2VyLWFnZW50JylcclxuICAgIH0sIExvZ0NhdGVnb3J5LlNFTyk7XHJcblxyXG4gICAgLy8gR2VuZXJhciBzaXRlbWFwXHJcbiAgICBjb25zdCBzaXRlbWFwVXJscyA9IGF3YWl0IGVuaGFuY2VkRHluYW1pY1NpdGVtYXBHZW5lcmF0b3IuZ2VuZXJhdGVTaXRlbWFwKCk7XHJcblxyXG4gICAgaWYgKGZvcm1hdCA9PT0gJ2pzb24nKSB7XHJcbiAgICAgIC8vIFJldG9ybmFyIGluZm9ybWFjacOzbiBkZWwgc2l0ZW1hcCBlbiBKU09OXHJcbiAgICAgIGNvbnN0IHN0YXRzID0gZW5oYW5jZWREeW5hbWljU2l0ZW1hcEdlbmVyYXRvci5nZXRTdGF0cygpO1xyXG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xyXG4gICAgICAgIHN1Y2Nlc3M6IHRydWUsXHJcbiAgICAgICAgZGF0YToge1xyXG4gICAgICAgICAgc2l0ZW1hcFVybHMsXHJcbiAgICAgICAgICBzdGF0cyxcclxuICAgICAgICAgIGdlbmVyYXRlZEF0OiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKClcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIFJldG9ybmFyIFhNTCBwb3IgZGVmZWN0b1xyXG4gICAgLy8gRW4gdW4gZW50b3JubyByZWFsLCBlc3RvIHNlcnZpcsOtYSBlbCBhcmNoaXZvIFhNTCBnZW5lcmFkb1xyXG4gICAgY29uc3QgeG1sQ29udGVudCA9IGF3YWl0IGdlbmVyYXRlU2FtcGxlU2l0ZW1hcFhNTCgpO1xyXG5cclxuICAgIHJldHVybiBuZXcgTmV4dFJlc3BvbnNlKHhtbENvbnRlbnQsIHtcclxuICAgICAgc3RhdHVzOiAyMDAsXHJcbiAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL3htbCcsXHJcbiAgICAgICAgJ0NhY2hlLUNvbnRyb2wnOiAncHVibGljLCBtYXgtYWdlPTM2MDAnLCAvLyBDYWNoZSBwb3IgMSBob3JhXHJcbiAgICAgICAgJ1gtU2l0ZW1hcC1HZW5lcmF0ZWQnOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXHJcbiAgICAgICAgJ1gtVG90YWwtVVJMcyc6IGVuaGFuY2VkRHluYW1pY1NpdGVtYXBHZW5lcmF0b3IuZ2V0U3RhdHMoKS50b3RhbFVybHMudG9TdHJpbmcoKVxyXG4gICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGxvZ2dlci5lcnJvcihMb2dMZXZlbC5FUlJPUiwgJ1NpdGVtYXAgQVBJIGVycm9yJywgZXJyb3IgYXMgRXJyb3IsIExvZ0NhdGVnb3J5LlNFTyk7XHJcblxyXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHtcclxuICAgICAgc3VjY2VzczogZmFsc2UsXHJcbiAgICAgIGVycm9yOiAnRmFpbGVkIHRvIGdlbmVyYXRlIHNpdGVtYXAnLFxyXG4gICAgICBtZXNzYWdlOiAoZXJyb3IgYXMgRXJyb3IpLm1lc3NhZ2VcclxuICAgIH0sIHsgc3RhdHVzOiA1MDAgfSk7XHJcbiAgfVxyXG59XHJcblxyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyBQT1NUIC9hcGkvc2l0ZW1hcCAtIFJlZ2VuZXJhciBzaXRlbWFwIG1hbnVhbG1lbnRlXHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gUE9TVChyZXF1ZXN0OiBOZXh0UmVxdWVzdCkge1xyXG4gIHRyeSB7XHJcbiAgICBjb25zdCBib2R5ID0gYXdhaXQgcmVxdWVzdC5qc29uKCk7XHJcbiAgICBjb25zdCB7IGNsZWFyQ2FjaGUgPSBmYWxzZSwgY29uZmlnID0ge30gfSA9IGJvZHk7XHJcblxyXG4gICAgbG9nZ2VyLmluZm8oTG9nTGV2ZWwuSU5GTywgJ01hbnVhbCBzaXRlbWFwIHJlZ2VuZXJhdGlvbiByZXF1ZXN0ZWQnLCB7XHJcbiAgICAgIGNsZWFyQ2FjaGUsXHJcbiAgICAgIGhhc0NvbmZpZzogT2JqZWN0LmtleXMoY29uZmlnKS5sZW5ndGggPiAwXHJcbiAgICB9LCBMb2dDYXRlZ29yeS5TRU8pO1xyXG5cclxuICAgIC8vIExpbXBpYXIgY2FjaGUgc2kgc2Ugc29saWNpdGFcclxuICAgIGlmIChjbGVhckNhY2hlKSB7XHJcbiAgICAgIGF3YWl0IGVuaGFuY2VkRHluYW1pY1NpdGVtYXBHZW5lcmF0b3IuY2xlYXJDYWNoZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIEFwbGljYXIgY29uZmlndXJhY2nDs24gdGVtcG9yYWwgc2kgc2UgcHJvcG9yY2lvbmFcclxuICAgIGlmIChPYmplY3Qua2V5cyhjb25maWcpLmxlbmd0aCA+IDApIHtcclxuICAgICAgZW5oYW5jZWREeW5hbWljU2l0ZW1hcEdlbmVyYXRvci5jb25maWd1cmUoY29uZmlnKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBSZWdlbmVyYXIgc2l0ZW1hcFxyXG4gICAgY29uc3Qgc2l0ZW1hcFVybHMgPSBhd2FpdCBlbmhhbmNlZER5bmFtaWNTaXRlbWFwR2VuZXJhdG9yLmdlbmVyYXRlU2l0ZW1hcCgpO1xyXG4gICAgY29uc3Qgc3RhdHMgPSBlbmhhbmNlZER5bmFtaWNTaXRlbWFwR2VuZXJhdG9yLmdldFN0YXRzKCk7XHJcbiAgICBjb25zdCByZXBvcnQgPSBlbmhhbmNlZER5bmFtaWNTaXRlbWFwR2VuZXJhdG9yLmdlbmVyYXRlUmVwb3J0KCk7XHJcblxyXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHtcclxuICAgICAgc3VjY2VzczogdHJ1ZSxcclxuICAgICAgZGF0YToge1xyXG4gICAgICAgIHNpdGVtYXBVcmxzLFxyXG4gICAgICAgIHN0YXRzLFxyXG4gICAgICAgIHJlcG9ydCxcclxuICAgICAgICByZWdlbmVyYXRlZEF0OiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKClcclxuICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBsb2dnZXIuZXJyb3IoTG9nTGV2ZWwuRVJST1IsICdNYW51YWwgc2l0ZW1hcCByZWdlbmVyYXRpb24gZXJyb3InLCBlcnJvciBhcyBFcnJvciwgTG9nQ2F0ZWdvcnkuU0VPKTtcclxuXHJcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xyXG4gICAgICBzdWNjZXNzOiBmYWxzZSxcclxuICAgICAgZXJyb3I6ICdGYWlsZWQgdG8gcmVnZW5lcmF0ZSBzaXRlbWFwJyxcclxuICAgICAgbWVzc2FnZTogKGVycm9yIGFzIEVycm9yKS5tZXNzYWdlXHJcbiAgICB9LCB7IHN0YXR1czogNTAwIH0pO1xyXG4gIH1cclxufVxyXG5cclxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gVVRJTElEQURFU1xyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5cclxuLyoqXHJcbiAqIEdlbmVyYXIgWE1MIGRlIGVqZW1wbG8gcGFyYSBkZW1vc3RyYWNpw7NuXHJcbiAqL1xyXG5hc3luYyBmdW5jdGlvbiBnZW5lcmF0ZVNhbXBsZVNpdGVtYXBYTUwoKTogUHJvbWlzZTxzdHJpbmc+IHtcclxuICBjb25zdCBiYXNlVXJsID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU0lURV9VUkwgfHwgJ2h0dHBzOi8vcGludGV5YS1lY29tbWVyY2UudmVyY2VsLmFwcCc7XHJcbiAgY29uc3Qgbm93ID0gbmV3IERhdGUoKS50b0lTT1N0cmluZygpLnNwbGl0KCdUJylbMF07XHJcblxyXG4gIHJldHVybiBgPD94bWwgdmVyc2lvbj1cIjEuMFwiIGVuY29kaW5nPVwiVVRGLThcIj8+XHJcbjx1cmxzZXQgeG1sbnM9XCJodHRwOi8vd3d3LnNpdGVtYXBzLm9yZy9zY2hlbWFzL3NpdGVtYXAvMC45XCJcclxuICAgICAgICB4bWxuczppbWFnZT1cImh0dHA6Ly93d3cuZ29vZ2xlLmNvbS9zY2hlbWFzL3NpdGVtYXAtaW1hZ2UvMS4xXCI+XHJcbiAgPHVybD5cclxuICAgIDxsb2M+JHtiYXNlVXJsfS88L2xvYz5cclxuICAgIDxsYXN0bW9kPiR7bm93fTwvbGFzdG1vZD5cclxuICAgIDxjaGFuZ2VmcmVxPmRhaWx5PC9jaGFuZ2VmcmVxPlxyXG4gICAgPHByaW9yaXR5PjEuMDwvcHJpb3JpdHk+XHJcbiAgPC91cmw+XHJcbiAgPHVybD5cclxuICAgIDxsb2M+JHtiYXNlVXJsfS9zaG9wPC9sb2M+XHJcbiAgICA8bGFzdG1vZD4ke25vd308L2xhc3Rtb2Q+XHJcbiAgICA8Y2hhbmdlZnJlcT53ZWVrbHk8L2NoYW5nZWZyZXE+XHJcbiAgICA8cHJpb3JpdHk+MC44PC9wcmlvcml0eT5cclxuICA8L3VybD5cclxuICA8dXJsPlxyXG4gICAgPGxvYz4ke2Jhc2VVcmx9L2Fib3V0PC9sb2M+XHJcbiAgICA8bGFzdG1vZD4ke25vd308L2xhc3Rtb2Q+XHJcbiAgICA8Y2hhbmdlZnJlcT5tb250aGx5PC9jaGFuZ2VmcmVxPlxyXG4gICAgPHByaW9yaXR5PjAuNjwvcHJpb3JpdHk+XHJcbiAgPC91cmw+XHJcbiAgPHVybD5cclxuICAgIDxsb2M+JHtiYXNlVXJsfS9jb250YWN0PC9sb2M+XHJcbiAgICA8bGFzdG1vZD4ke25vd308L2xhc3Rtb2Q+XHJcbiAgICA8Y2hhbmdlZnJlcT5tb250aGx5PC9jaGFuZ2VmcmVxPlxyXG4gICAgPHByaW9yaXR5PjAuNjwvcHJpb3JpdHk+XHJcbiAgPC91cmw+XHJcbiAgPHVybD5cclxuICAgIDxsb2M+JHtiYXNlVXJsfS9oZWxwPC9sb2M+XHJcbiAgICA8bGFzdG1vZD4ke25vd308L2xhc3Rtb2Q+XHJcbiAgICA8Y2hhbmdlZnJlcT5tb250aGx5PC9jaGFuZ2VmcmVxPlxyXG4gICAgPHByaW9yaXR5PjAuNjwvcHJpb3JpdHk+XHJcbiAgPC91cmw+XHJcbiAgPCEtLSBQw6FnaW5hcyBkaW7DoW1pY2FzIHNlIGdlbmVyYXLDrWFuIGFxdcOtIC0tPlxyXG48L3VybHNldD5gO1xyXG59XHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG4iXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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