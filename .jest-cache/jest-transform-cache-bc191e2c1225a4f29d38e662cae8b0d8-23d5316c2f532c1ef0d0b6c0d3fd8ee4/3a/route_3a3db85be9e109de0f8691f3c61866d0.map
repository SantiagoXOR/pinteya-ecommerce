{"version":3,"names":["cov_ivz6qczz","actualCoverage","s","GET","f","POST","runtime","request","searchParams","URL","url","format","b","get","index","_logger","logger","info","LogLevel","INFO","userAgent","headers","LogCategory","SEO","sitemapUrls","_dynamicsitemapgenerator","enhancedDynamicSitemapGenerator","generateSitemap","stats","getStats","_server","NextResponse","json","success","data","generatedAt","Date","toISOString","xmlContent","generateSampleSitemapXML","status","totalUrls","toString","error","ERROR","message","body","clearCache","config","hasConfig","Object","keys","length","configure","report","generateReport","regeneratedAt","baseUrl","process","env","NEXT_PUBLIC_SITE_URL","now","split"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\sitemap\\route.ts"],"sourcesContent":["// Configuración para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - DYNAMIC SITEMAP API\r\n// API para generar y servir sitemaps dinámicos\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { enhancedDynamicSitemapGenerator } from '@/lib/seo/dynamic-sitemap-generator';\r\nimport { logger, LogCategory, LogLevel } from '@/lib/enterprise/logger';\r\n\r\n// ===================================\r\n// GET /api/sitemap - Generar y servir sitemap\r\n// ===================================\r\n\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    const { searchParams } = new URL(request.url);\r\n    const format = searchParams.get('format') || 'xml';\r\n    const index = searchParams.get('index');\r\n\r\n    logger.info(LogLevel.INFO, 'Sitemap API request', {\r\n      format,\r\n      index,\r\n      userAgent: request.headers.get('user-agent')\r\n    }, LogCategory.SEO);\r\n\r\n    // Generar sitemap\r\n    const sitemapUrls = await enhancedDynamicSitemapGenerator.generateSitemap();\r\n\r\n    if (format === 'json') {\r\n      // Retornar información del sitemap en JSON\r\n      const stats = enhancedDynamicSitemapGenerator.getStats();\r\n      return NextResponse.json({\r\n        success: true,\r\n        data: {\r\n          sitemapUrls,\r\n          stats,\r\n          generatedAt: new Date().toISOString()\r\n        }\r\n      });\r\n    }\r\n\r\n    // Retornar XML por defecto\r\n    // En un entorno real, esto serviría el archivo XML generado\r\n    const xmlContent = await generateSampleSitemapXML();\r\n\r\n    return new NextResponse(xmlContent, {\r\n      status: 200,\r\n      headers: {\r\n        'Content-Type': 'application/xml',\r\n        'Cache-Control': 'public, max-age=3600', // Cache por 1 hora\r\n        'X-Sitemap-Generated': new Date().toISOString(),\r\n        'X-Total-URLs': enhancedDynamicSitemapGenerator.getStats().totalUrls.toString()\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    logger.error(LogLevel.ERROR, 'Sitemap API error', error as Error, LogCategory.SEO);\r\n\r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Failed to generate sitemap',\r\n      message: (error as Error).message\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n// ===================================\r\n// POST /api/sitemap - Regenerar sitemap manualmente\r\n// ===================================\r\n\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    const body = await request.json();\r\n    const { clearCache = false, config = {} } = body;\r\n\r\n    logger.info(LogLevel.INFO, 'Manual sitemap regeneration requested', {\r\n      clearCache,\r\n      hasConfig: Object.keys(config).length > 0\r\n    }, LogCategory.SEO);\r\n\r\n    // Limpiar cache si se solicita\r\n    if (clearCache) {\r\n      await enhancedDynamicSitemapGenerator.clearCache();\r\n    }\r\n\r\n    // Aplicar configuración temporal si se proporciona\r\n    if (Object.keys(config).length > 0) {\r\n      enhancedDynamicSitemapGenerator.configure(config);\r\n    }\r\n\r\n    // Regenerar sitemap\r\n    const sitemapUrls = await enhancedDynamicSitemapGenerator.generateSitemap();\r\n    const stats = enhancedDynamicSitemapGenerator.getStats();\r\n    const report = enhancedDynamicSitemapGenerator.generateReport();\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: {\r\n        sitemapUrls,\r\n        stats,\r\n        report,\r\n        regeneratedAt: new Date().toISOString()\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    logger.error(LogLevel.ERROR, 'Manual sitemap regeneration error', error as Error, LogCategory.SEO);\r\n\r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Failed to regenerate sitemap',\r\n      message: (error as Error).message\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n// ===================================\r\n// UTILIDADES\r\n// ===================================\r\n\r\n/**\r\n * Generar XML de ejemplo para demostración\r\n */\r\nasync function generateSampleSitemapXML(): Promise<string> {\r\n  const baseUrl = process.env.NEXT_PUBLIC_SITE_URL || 'https://pinteya-ecommerce.vercel.app';\r\n  const now = new Date().toISOString().split('T')[0];\r\n\r\n  return `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\"\r\n        xmlns:image=\"http://www.google.com/schemas/sitemap-image/1.1\">\r\n  <url>\r\n    <loc>${baseUrl}/</loc>\r\n    <lastmod>${now}</lastmod>\r\n    <changefreq>daily</changefreq>\r\n    <priority>1.0</priority>\r\n  </url>\r\n  <url>\r\n    <loc>${baseUrl}/shop</loc>\r\n    <lastmod>${now}</lastmod>\r\n    <changefreq>weekly</changefreq>\r\n    <priority>0.8</priority>\r\n  </url>\r\n  <url>\r\n    <loc>${baseUrl}/about</loc>\r\n    <lastmod>${now}</lastmod>\r\n    <changefreq>monthly</changefreq>\r\n    <priority>0.6</priority>\r\n  </url>\r\n  <url>\r\n    <loc>${baseUrl}/contact</loc>\r\n    <lastmod>${now}</lastmod>\r\n    <changefreq>monthly</changefreq>\r\n    <priority>0.6</priority>\r\n  </url>\r\n  <url>\r\n    <loc>${baseUrl}/help</loc>\r\n    <lastmod>${now}</lastmod>\r\n    <changefreq>monthly</changefreq>\r\n    <priority>0.6</priority>\r\n  </url>\r\n  <!-- Páginas dinámicas se generarían aquí -->\r\n</urlset>`;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}