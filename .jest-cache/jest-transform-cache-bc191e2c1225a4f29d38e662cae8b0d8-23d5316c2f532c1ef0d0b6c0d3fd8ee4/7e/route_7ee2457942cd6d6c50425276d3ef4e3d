01c88c156c816b443387a8a076606fd2
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_k9n1f2cl8() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\cart\\add\\route.ts";
  var hash = "131773b6a1d3973cd72261586786fbf083e83a03";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\cart\\add\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 20
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 23
        }
      },
      "7": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "8": {
        start: {
          line: 24,
          column: 18
        },
        end: {
          line: 24,
          column: 66
        }
      },
      "9": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 54
        }
      },
      "10": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 24
        }
      },
      "11": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 215,
          column: 5
        }
      },
      "12": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 80
        }
      },
      "13": {
        start: {
          line: 31,
          column: 24
        },
        end: {
          line: 31,
          column: 49
        }
      },
      "14": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 41,
          column: 9
        }
      },
      "15": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 33,
          column: 66
        }
      },
      "16": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 40,
          column: 15
        }
      },
      "17": {
        start: {
          line: 42,
          column: 23
        },
        end: {
          line: 42,
          column: 38
        }
      },
      "18": {
        start: {
          line: 44,
          column: 21
        },
        end: {
          line: 44,
          column: 41
        }
      },
      "19": {
        start: {
          line: 45,
          column: 61
        },
        end: {
          line: 45,
          column: 65
        }
      },
      "20": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 55,
          column: 9
        }
      },
      "21": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 54,
          column: 15
        }
      },
      "22": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 64,
          column: 9
        }
      },
      "23": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 63,
          column: 15
        }
      },
      "24": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 140
        }
      },
      "25": {
        start: {
          line: 67,
          column: 25
        },
        end: {
          line: 67,
          column: 63
        }
      },
      "26": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 77,
          column: 9
        }
      },
      "27": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 79
        }
      },
      "28": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 76,
          column: 15
        }
      },
      "29": {
        start: {
          line: 79,
          column: 55
        },
        end: {
          line: 91,
          column: 37
        }
      },
      "30": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 101,
          column: 9
        }
      },
      "31": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 79
        }
      },
      "32": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 100,
          column: 15
        }
      },
      "33": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 114,
          column: 9
        }
      },
      "34": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 139
        }
      },
      "35": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 113,
          column: 15
        }
      },
      "36": {
        start: {
          line: 116,
          column: 61
        },
        end: {
          line: 116,
          column: 176
        }
      },
      "37": {
        start: {
          line: 117,
          column: 28
        },
        end: {
          line: 117,
          column: 36
        }
      },
      "38": {
        start: {
          line: 118,
          column: 24
        },
        end: {
          line: 118,
          column: 31
        }
      },
      "39": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 141,
          column: 9
        }
      },
      "40": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 128,
          column: 13
        }
      },
      "41": {
        start: {
          line: 122,
          column: 16
        },
        end: {
          line: 122,
          column: 41
        }
      },
      "42": {
        start: {
          line: 123,
          column: 16
        },
        end: {
          line: 123,
          column: 38
        }
      },
      "43": {
        start: {
          line: 126,
          column: 16
        },
        end: {
          line: 126,
          column: 65
        }
      },
      "44": {
        start: {
          line: 127,
          column: 16
        },
        end: {
          line: 127,
          column: 40
        }
      },
      "45": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 140,
          column: 13
        }
      },
      "46": {
        start: {
          line: 131,
          column: 16
        },
        end: {
          line: 139,
          column: 19
        }
      },
      "47": {
        start: {
          line: 143,
          column: 53
        },
        end: {
          line: 156,
          column: 17
        }
      },
      "48": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 167,
          column: 9
        }
      },
      "49": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 158,
          column: 84
        }
      },
      "50": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 166,
          column: 15
        }
      },
      "51": {
        start: {
          line: 169,
          column: 59
        },
        end: {
          line: 169,
          column: 133
        }
      },
      "52": {
        start: {
          line: 170,
          column: 27
        },
        end: {
          line: 170,
          column: 88
        }
      },
      "53": {
        start: {
          line: 170,
          column: 60
        },
        end: {
          line: 170,
          column: 79
        }
      },
      "54": {
        start: {
          line: 171,
          column: 30
        },
        end: {
          line: 171,
          column: 54
        }
      },
      "55": {
        start: {
          line: 173,
          column: 32
        },
        end: {
          line: 177,
          column: 20
        }
      },
      "56": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 178,
          column: 87
        }
      },
      "57": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 204,
          column: 11
        }
      },
      "58": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 206,
          column: 66
        }
      },
      "59": {
        start: {
          line: 207,
          column: 8
        },
        end: {
          line: 214,
          column: 11
        }
      },
      "60": {
        start: {
          line: 218,
          column: 4
        },
        end: {
          line: 240,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "POST",
        decl: {
          start: {
            line: 27,
            column: 15
          },
          end: {
            line: 27,
            column: 19
          }
        },
        loc: {
          start: {
            line: 27,
            column: 29
          },
          end: {
            line: 216,
            column: 1
          }
        },
        line: 27
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 170,
            column: 47
          },
          end: {
            line: 170,
            column: 48
          }
        },
        loc: {
          start: {
            line: 170,
            column: 60
          },
          end: {
            line: 170,
            column: 79
          }
        },
        line: 170
      },
      "6": {
        name: "GET",
        decl: {
          start: {
            line: 217,
            column: 15
          },
          end: {
            line: 217,
            column: 18
          }
        },
        loc: {
          start: {
            line: 217,
            column: 21
          },
          end: {
            line: 241,
            column: 1
          }
        },
        line: 217
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 41,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 41,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "1": {
        loc: {
          start: {
            line: 45,
            column: 27
          },
          end: {
            line: 45,
            column: 39
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 45,
            column: 38
          },
          end: {
            line: 45,
            column: 39
          }
        }],
        line: 45
      },
      "2": {
        loc: {
          start: {
            line: 45,
            column: 41
          },
          end: {
            line: 45,
            column: 56
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 45,
            column: 51
          },
          end: {
            line: 45,
            column: 56
          }
        }],
        line: 45
      },
      "3": {
        loc: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "4": {
        loc: {
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "5": {
        loc: {
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 56,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 56,
            column: 39
          }
        }, {
          start: {
            line: 56,
            column: 43
          },
          end: {
            line: 56,
            column: 56
          }
        }, {
          start: {
            line: 56,
            column: 60
          },
          end: {
            line: 56,
            column: 73
          }
        }],
        line: 56
      },
      "6": {
        loc: {
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 77,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 77,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "7": {
        loc: {
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 101,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 101,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 92
      },
      "8": {
        loc: {
          start: {
            line: 92,
            column: 12
          },
          end: {
            line: 92,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 92,
            column: 12
          },
          end: {
            line: 92,
            column: 24
          }
        }, {
          start: {
            line: 92,
            column: 28
          },
          end: {
            line: 92,
            column: 36
          }
        }],
        line: 92
      },
      "9": {
        loc: {
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 114,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 114,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "10": {
        loc: {
          start: {
            line: 119,
            column: 8
          },
          end: {
            line: 141,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 8
          },
          end: {
            line: 141,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 119
      },
      "11": {
        loc: {
          start: {
            line: 119,
            column: 12
          },
          end: {
            line: 119,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 119,
            column: 12
          },
          end: {
            line: 119,
            column: 24
          }
        }, {
          start: {
            line: 119,
            column: 28
          },
          end: {
            line: 119,
            column: 42
          }
        }],
        line: 119
      },
      "12": {
        loc: {
          start: {
            line: 120,
            column: 12
          },
          end: {
            line: 128,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 120,
            column: 12
          },
          end: {
            line: 128,
            column: 13
          }
        }, {
          start: {
            line: 124,
            column: 19
          },
          end: {
            line: 128,
            column: 13
          }
        }],
        line: 120
      },
      "13": {
        loc: {
          start: {
            line: 130,
            column: 12
          },
          end: {
            line: 140,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 130,
            column: 12
          },
          end: {
            line: 140,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 130
      },
      "14": {
        loc: {
          start: {
            line: 157,
            column: 8
          },
          end: {
            line: 167,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 157,
            column: 8
          },
          end: {
            line: 167,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 157
      },
      "15": {
        loc: {
          start: {
            line: 170,
            column: 27
          },
          end: {
            line: 170,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 170,
            column: 27
          },
          end: {
            line: 170,
            column: 83
          }
        }, {
          start: {
            line: 170,
            column: 87
          },
          end: {
            line: 170,
            column: 88
          }
        }],
        line: 170
      },
      "16": {
        loc: {
          start: {
            line: 171,
            column: 30
          },
          end: {
            line: 171,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 171,
            column: 30
          },
          end: {
            line: 171,
            column: 49
          }
        }, {
          start: {
            line: 171,
            column: 53
          },
          end: {
            line: 171,
            column: 54
          }
        }],
        line: 171
      },
      "17": {
        loc: {
          start: {
            line: 188,
            column: 23
          },
          end: {
            line: 188,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 188,
            column: 23
          },
          end: {
            line: 188,
            column: 47
          }
        }, {
          start: {
            line: 188,
            column: 51
          },
          end: {
            line: 188,
            column: 64
          }
        }],
        line: 188
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0],
      "2": [0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\cart\\add\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - API AGREGAR AL CARRITO\r\n// ===================================\r\n// Endpoint espec\xEDfico para agregar productos al carrito\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { getSupabaseClient } from '@/lib/integrations/supabase';\r\nimport { auth } from '@/lib/auth/config';\r\n\r\n/**\r\n * POST /api/cart/add\r\n * Agregar un producto espec\xEDfico al carrito\r\n * Endpoint optimizado para botones \"Agregar al carrito\"\r\n */\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    console.log('\uD83D\uDED2 Cart Add API: Iniciando proceso de agregar al carrito');\r\n\r\n    // Verificar autenticaci\xF3n\r\n    const session = await auth();\r\n    if (!session?.user?.id) {\r\n      console.log('\u274C Cart Add API: Usuario no autenticado');\r\n      return NextResponse.json(\r\n        { \r\n          success: false, \r\n          error: 'Debes iniciar sesi\xF3n para agregar productos al carrito',\r\n          requiresAuth: true\r\n        }, \r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    const userId = session.user.id;\r\n\r\n    // Obtener datos del request\r\n    const body = await request.json();\r\n    const { productId, quantity = 1, replace = false } = body;\r\n\r\n    // Validaciones de entrada\r\n    if (!productId) {\r\n      return NextResponse.json(\r\n        { \r\n          success: false, \r\n          error: 'ID del producto es requerido',\r\n          field: 'productId'\r\n        }, \r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    if (!Number.isInteger(quantity) || quantity <= 0 || quantity > 99) {\r\n      return NextResponse.json(\r\n        { \r\n          success: false, \r\n          error: 'La cantidad debe ser un n\xFAmero entero entre 1 y 99',\r\n          field: 'quantity'\r\n        }, \r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    console.log(`\uD83D\uDD0D Cart Add API: Agregando producto ${productId} (cantidad: ${quantity}, replace: ${replace}) para usuario ${userId}`);\r\n\r\n    // Obtener cliente de Supabase\r\n    const supabase = getSupabaseClient(true);\r\n    if (!supabase) {\r\n      console.error('\u274C Cart Add API: Cliente de Supabase no disponible');\r\n      return NextResponse.json(\r\n        { \r\n          success: false, \r\n          error: 'Servicio de base de datos temporalmente no disponible',\r\n          retry: true\r\n        }, \r\n        { status: 503 }\r\n      );\r\n    }\r\n\r\n    // 1. Verificar que el producto existe y obtener informaci\xF3n\r\n    const { data: product, error: productError } = await supabase\r\n      .from('products')\r\n      .select(`\r\n        id,\r\n        name,\r\n        price,\r\n        discounted_price,\r\n        stock,\r\n        images,\r\n        brand,\r\n        category:categories (\r\n          id,\r\n          name\r\n        )\r\n      `)\r\n      .eq('id', productId)\r\n      .single();\r\n\r\n    if (productError || !product) {\r\n      console.log(`\u274C Cart Add API: Producto ${productId} no encontrado`);\r\n      return NextResponse.json(\r\n        { \r\n          success: false, \r\n          error: 'El producto solicitado no existe o no est\xE1 disponible',\r\n          productId\r\n        }, \r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    // 2. Verificar stock disponible\r\n    if (product.stock < quantity) {\r\n      console.log(`\u274C Cart Add API: Stock insuficiente para producto ${productId}. Stock: ${product.stock}, Solicitado: ${quantity}`);\r\n      return NextResponse.json(\r\n        { \r\n          success: false, \r\n          error: `Stock insuficiente. Solo quedan ${product.stock} unidades disponibles`,\r\n          availableStock: product.stock,\r\n          requestedQuantity: quantity,\r\n          productName: product.name\r\n        }, \r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // 3. Verificar si el producto ya est\xE1 en el carrito\r\n    const { data: existingItem, error: existingError } = await supabase\r\n      .from('cart_items')\r\n      .select('id, quantity')\r\n      .eq('user_id', userId)\r\n      .eq('product_id', productId)\r\n      .single();\r\n\r\n    let finalQuantity = quantity;\r\n    let operation = 'added';\r\n\r\n    if (existingItem && !existingError) {\r\n      if (replace) {\r\n        // Reemplazar cantidad existente\r\n        finalQuantity = quantity;\r\n        operation = 'updated';\r\n      } else {\r\n        // Sumar a la cantidad existente\r\n        finalQuantity = existingItem.quantity + quantity;\r\n        operation = 'increased';\r\n      }\r\n\r\n      // Verificar que la cantidad final no exceda el stock\r\n      if (finalQuantity > product.stock) {\r\n        return NextResponse.json(\r\n          { \r\n            success: false, \r\n            error: `No se puede agregar. Ya tienes ${existingItem.quantity} en el carrito. Stock disponible: ${product.stock}`,\r\n            currentQuantity: existingItem.quantity,\r\n            availableStock: product.stock,\r\n            maxCanAdd: product.stock - existingItem.quantity\r\n          }, \r\n          { status: 400 }\r\n        );\r\n      }\r\n    }\r\n\r\n    // 4. Agregar o actualizar item en carrito\r\n    const { data: cartItem, error: cartError } = await supabase\r\n      .from('cart_items')\r\n      .upsert({\r\n        user_id: userId,\r\n        product_id: productId,\r\n        quantity: finalQuantity\r\n      }, {\r\n        onConflict: 'user_id,product_id'\r\n      })\r\n      .select(`\r\n        id,\r\n        user_id,\r\n        product_id,\r\n        quantity,\r\n        created_at,\r\n        updated_at\r\n      `)\r\n      .single();\r\n\r\n    if (cartError) {\r\n      console.error('\u274C Cart Add API: Error agregando al carrito:', cartError);\r\n      return NextResponse.json(\r\n        { \r\n          success: false, \r\n          error: 'Error agregando producto al carrito. Intenta nuevamente.',\r\n          details: cartError.message,\r\n          retry: true\r\n        }, \r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // 5. Obtener resumen actualizado del carrito\r\n    const { data: cartSummary, error: summaryError } = await supabase\r\n      .from('cart_items')\r\n      .select('quantity')\r\n      .eq('user_id', userId);\r\n\r\n    const totalItems = cartSummary?.reduce((sum, item) => sum + item.quantity, 0) || 0;\r\n    const totalProducts = cartSummary?.length || 0;\r\n\r\n    // 6. Preparar respuesta\r\n    const responseMessage = {\r\n      added: `${product.name} agregado al carrito`,\r\n      updated: `Cantidad de ${product.name} actualizada en el carrito`,\r\n      increased: `Se agregaron ${quantity} m\xE1s de ${product.name} al carrito`\r\n    }[operation];\r\n\r\n    console.log(`\u2705 Cart Add API: ${responseMessage} - Total items: ${totalItems}`);\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      message: responseMessage,\r\n      operation,\r\n      item: {\r\n        id: cartItem.id,\r\n        productId: product.id,\r\n        productName: product.name,\r\n        quantity: cartItem.quantity,\r\n        price: product.discounted_price || product.price,\r\n        addedQuantity: quantity\r\n      },\r\n      cart: {\r\n        totalItems,\r\n        totalProducts\r\n      },\r\n      product: {\r\n        id: product.id,\r\n        name: product.name,\r\n        price: product.price,\r\n        discounted_price: product.discounted_price,\r\n        images: product.images,\r\n        brand: product.brand,\r\n        category: product.category\r\n      }\r\n    });\r\n\r\n  } catch (error: any) {\r\n    console.error('\u274C Cart Add API: Error inesperado:', error);\r\n    return NextResponse.json(\r\n      { \r\n        success: false, \r\n        error: 'Error interno del servidor. Intenta nuevamente.',\r\n        details: error.message,\r\n        retry: true\r\n      }, \r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * GET /api/cart/add\r\n * Informaci\xF3n sobre c\xF3mo usar este endpoint\r\n */\r\nexport async function GET() {\r\n  return NextResponse.json({\r\n    endpoint: '/api/cart/add',\r\n    method: 'POST',\r\n    description: 'Agregar productos al carrito de compras',\r\n    parameters: {\r\n      productId: 'number - ID del producto (requerido)',\r\n      quantity: 'number - Cantidad a agregar (opcional, default: 1)',\r\n      replace: 'boolean - Si true, reemplaza cantidad existente (opcional, default: false)'\r\n    },\r\n    example: {\r\n      productId: 123,\r\n      quantity: 2,\r\n      replace: false\r\n    },\r\n    authentication: 'Requerida - Usuario debe estar autenticado',\r\n    responses: {\r\n      200: 'Producto agregado exitosamente',\r\n      400: 'Datos inv\xE1lidos o stock insuficiente',\r\n      401: 'Usuario no autenticado',\r\n      404: 'Producto no encontrado',\r\n      500: 'Error interno del servidor'\r\n    }\r\n  });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "POST", "runtime", "request", "console", "log", "session", "auth", "user", "id", "NextResponse", "json", "success", "error", "requiresAuth", "status", "userId", "body", "productId", "quantity", "replace", "field", "Number", "isInteger", "supabase", "getSupabaseClient", "retry", "data", "product", "productError", "from", "select", "eq", "single", "stock", "availableStock", "requestedQuantity", "productName", "name", "existingItem", "existingError", "finalQuantity", "operation", "currentQuantity", "maxCanAdd", "cartItem", "cartError", "upsert", "user_id", "product_id", "onConflict", "details", "message", "cartSummary", "summaryError", "totalItems", "reduce", "sum", "item", "totalProducts", "length", "responseMessage", "added", "updated", "increased", "price", "discounted_price", "addedQuantity", "cart", "images", "brand", "category", "endpoint", "method", "description", "parameters", "example", "authentication", "responses"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "131773b6a1d3973cd72261586786fbf083e83a03"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_k9n1f2cl8 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_k9n1f2cl8();
cov_k9n1f2cl8().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_k9n1f2cl8().f[0]++;
  cov_k9n1f2cl8().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_k9n1f2cl8().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_k9n1f2cl8().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_k9n1f2cl8().f[1]++;
    cov_k9n1f2cl8().s[4]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_k9n1f2cl8().f[2]++;
    cov_k9n1f2cl8().s[5]++;
    return POST;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_k9n1f2cl8().f[3]++;
    cov_k9n1f2cl8().s[6]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_k9n1f2cl8().s[7]++, require("next/server"));
const _supabase =
/* istanbul ignore next */
(cov_k9n1f2cl8().s[8]++, require("../../../../lib/integrations/supabase"));
const _config =
/* istanbul ignore next */
(cov_k9n1f2cl8().s[9]++, require("../../../../lib/auth/config"));
const runtime =
/* istanbul ignore next */
(cov_k9n1f2cl8().s[10]++, 'nodejs');
async function POST(request) {
  /* istanbul ignore next */
  cov_k9n1f2cl8().f[4]++;
  cov_k9n1f2cl8().s[11]++;
  try {
    /* istanbul ignore next */
    cov_k9n1f2cl8().s[12]++;
    console.log('ğ Cart Add API: Iniciando proceso de agregar al carrito');
    // Verificar autenticaciÃ³n
    const session =
    /* istanbul ignore next */
    (cov_k9n1f2cl8().s[13]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_k9n1f2cl8().s[14]++;
    if (!session?.user?.id) {
      /* istanbul ignore next */
      cov_k9n1f2cl8().b[0][0]++;
      cov_k9n1f2cl8().s[15]++;
      console.log('â Cart Add API: Usuario no autenticado');
      /* istanbul ignore next */
      cov_k9n1f2cl8().s[16]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Debes iniciar sesiÃ³n para agregar productos al carrito',
        requiresAuth: true
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_k9n1f2cl8().b[0][1]++;
    }
    const userId =
    /* istanbul ignore next */
    (cov_k9n1f2cl8().s[17]++, session.user.id);
    // Obtener datos del request
    const body =
    /* istanbul ignore next */
    (cov_k9n1f2cl8().s[18]++, await request.json());
    const {
      productId,
      quantity =
      /* istanbul ignore next */
      (cov_k9n1f2cl8().b[1][0]++, 1),
      replace =
      /* istanbul ignore next */
      (cov_k9n1f2cl8().b[2][0]++, false)
    } =
    /* istanbul ignore next */
    (cov_k9n1f2cl8().s[19]++, body);
    // Validaciones de entrada
    /* istanbul ignore next */
    cov_k9n1f2cl8().s[20]++;
    if (!productId) {
      /* istanbul ignore next */
      cov_k9n1f2cl8().b[3][0]++;
      cov_k9n1f2cl8().s[21]++;
      return _server.NextResponse.json({
        success: false,
        error: 'ID del producto es requerido',
        field: 'productId'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_k9n1f2cl8().b[3][1]++;
    }
    cov_k9n1f2cl8().s[22]++;
    if (
    /* istanbul ignore next */
    (cov_k9n1f2cl8().b[5][0]++, !Number.isInteger(quantity)) ||
    /* istanbul ignore next */
    (cov_k9n1f2cl8().b[5][1]++, quantity <= 0) ||
    /* istanbul ignore next */
    (cov_k9n1f2cl8().b[5][2]++, quantity > 99)) {
      /* istanbul ignore next */
      cov_k9n1f2cl8().b[4][0]++;
      cov_k9n1f2cl8().s[23]++;
      return _server.NextResponse.json({
        success: false,
        error: 'La cantidad debe ser un nÃºmero entero entre 1 y 99',
        field: 'quantity'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_k9n1f2cl8().b[4][1]++;
    }
    cov_k9n1f2cl8().s[24]++;
    console.log(`ğ Cart Add API: Agregando producto ${productId} (cantidad: ${quantity}, replace: ${replace}) para usuario ${userId}`);
    // Obtener cliente de Supabase
    const supabase =
    /* istanbul ignore next */
    (cov_k9n1f2cl8().s[25]++, (0, _supabase.getSupabaseClient)(true));
    /* istanbul ignore next */
    cov_k9n1f2cl8().s[26]++;
    if (!supabase) {
      /* istanbul ignore next */
      cov_k9n1f2cl8().b[6][0]++;
      cov_k9n1f2cl8().s[27]++;
      console.error('â Cart Add API: Cliente de Supabase no disponible');
      /* istanbul ignore next */
      cov_k9n1f2cl8().s[28]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Servicio de base de datos temporalmente no disponible',
        retry: true
      }, {
        status: 503
      });
    } else
    /* istanbul ignore next */
    {
      cov_k9n1f2cl8().b[6][1]++;
    }
    // 1. Verificar que el producto existe y obtener informaciÃ³n
    const {
      data: product,
      error: productError
    } =
    /* istanbul ignore next */
    (cov_k9n1f2cl8().s[29]++, await supabase.from('products').select(`
        id,
        name,
        price,
        discounted_price,
        stock,
        images,
        brand,
        category:categories (
          id,
          name
        )
      `).eq('id', productId).single());
    /* istanbul ignore next */
    cov_k9n1f2cl8().s[30]++;
    if (
    /* istanbul ignore next */
    (cov_k9n1f2cl8().b[8][0]++, productError) ||
    /* istanbul ignore next */
    (cov_k9n1f2cl8().b[8][1]++, !product)) {
      /* istanbul ignore next */
      cov_k9n1f2cl8().b[7][0]++;
      cov_k9n1f2cl8().s[31]++;
      console.log(`â Cart Add API: Producto ${productId} no encontrado`);
      /* istanbul ignore next */
      cov_k9n1f2cl8().s[32]++;
      return _server.NextResponse.json({
        success: false,
        error: 'El producto solicitado no existe o no estÃ¡ disponible',
        productId
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_k9n1f2cl8().b[7][1]++;
    }
    // 2. Verificar stock disponible
    cov_k9n1f2cl8().s[33]++;
    if (product.stock < quantity) {
      /* istanbul ignore next */
      cov_k9n1f2cl8().b[9][0]++;
      cov_k9n1f2cl8().s[34]++;
      console.log(`â Cart Add API: Stock insuficiente para producto ${productId}. Stock: ${product.stock}, Solicitado: ${quantity}`);
      /* istanbul ignore next */
      cov_k9n1f2cl8().s[35]++;
      return _server.NextResponse.json({
        success: false,
        error: `Stock insuficiente. Solo quedan ${product.stock} unidades disponibles`,
        availableStock: product.stock,
        requestedQuantity: quantity,
        productName: product.name
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_k9n1f2cl8().b[9][1]++;
    }
    // 3. Verificar si el producto ya estÃ¡ en el carrito
    const {
      data: existingItem,
      error: existingError
    } =
    /* istanbul ignore next */
    (cov_k9n1f2cl8().s[36]++, await supabase.from('cart_items').select('id, quantity').eq('user_id', userId).eq('product_id', productId).single());
    let finalQuantity =
    /* istanbul ignore next */
    (cov_k9n1f2cl8().s[37]++, quantity);
    let operation =
    /* istanbul ignore next */
    (cov_k9n1f2cl8().s[38]++, 'added');
    /* istanbul ignore next */
    cov_k9n1f2cl8().s[39]++;
    if (
    /* istanbul ignore next */
    (cov_k9n1f2cl8().b[11][0]++, existingItem) &&
    /* istanbul ignore next */
    (cov_k9n1f2cl8().b[11][1]++, !existingError)) {
      /* istanbul ignore next */
      cov_k9n1f2cl8().b[10][0]++;
      cov_k9n1f2cl8().s[40]++;
      if (replace) {
        /* istanbul ignore next */
        cov_k9n1f2cl8().b[12][0]++;
        cov_k9n1f2cl8().s[41]++;
        // Reemplazar cantidad existente
        finalQuantity = quantity;
        /* istanbul ignore next */
        cov_k9n1f2cl8().s[42]++;
        operation = 'updated';
      } else {
        /* istanbul ignore next */
        cov_k9n1f2cl8().b[12][1]++;
        cov_k9n1f2cl8().s[43]++;
        // Sumar a la cantidad existente
        finalQuantity = existingItem.quantity + quantity;
        /* istanbul ignore next */
        cov_k9n1f2cl8().s[44]++;
        operation = 'increased';
      }
      // Verificar que la cantidad final no exceda el stock
      /* istanbul ignore next */
      cov_k9n1f2cl8().s[45]++;
      if (finalQuantity > product.stock) {
        /* istanbul ignore next */
        cov_k9n1f2cl8().b[13][0]++;
        cov_k9n1f2cl8().s[46]++;
        return _server.NextResponse.json({
          success: false,
          error: `No se puede agregar. Ya tienes ${existingItem.quantity} en el carrito. Stock disponible: ${product.stock}`,
          currentQuantity: existingItem.quantity,
          availableStock: product.stock,
          maxCanAdd: product.stock - existingItem.quantity
        }, {
          status: 400
        });
      } else
      /* istanbul ignore next */
      {
        cov_k9n1f2cl8().b[13][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_k9n1f2cl8().b[10][1]++;
    }
    // 4. Agregar o actualizar item en carrito
    const {
      data: cartItem,
      error: cartError
    } =
    /* istanbul ignore next */
    (cov_k9n1f2cl8().s[47]++, await supabase.from('cart_items').upsert({
      user_id: userId,
      product_id: productId,
      quantity: finalQuantity
    }, {
      onConflict: 'user_id,product_id'
    }).select(`
        id,
        user_id,
        product_id,
        quantity,
        created_at,
        updated_at
      `).single());
    /* istanbul ignore next */
    cov_k9n1f2cl8().s[48]++;
    if (cartError) {
      /* istanbul ignore next */
      cov_k9n1f2cl8().b[14][0]++;
      cov_k9n1f2cl8().s[49]++;
      console.error('â Cart Add API: Error agregando al carrito:', cartError);
      /* istanbul ignore next */
      cov_k9n1f2cl8().s[50]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Error agregando producto al carrito. Intenta nuevamente.',
        details: cartError.message,
        retry: true
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_k9n1f2cl8().b[14][1]++;
    }
    // 5. Obtener resumen actualizado del carrito
    const {
      data: cartSummary,
      error: summaryError
    } =
    /* istanbul ignore next */
    (cov_k9n1f2cl8().s[51]++, await supabase.from('cart_items').select('quantity').eq('user_id', userId));
    const totalItems =
    /* istanbul ignore next */
    (cov_k9n1f2cl8().s[52]++,
    /* istanbul ignore next */
    (cov_k9n1f2cl8().b[15][0]++, cartSummary?.reduce((sum, item) => {
      /* istanbul ignore next */
      cov_k9n1f2cl8().f[5]++;
      cov_k9n1f2cl8().s[53]++;
      return sum + item.quantity;
    }, 0)) ||
    /* istanbul ignore next */
    (cov_k9n1f2cl8().b[15][1]++, 0));
    const totalProducts =
    /* istanbul ignore next */
    (cov_k9n1f2cl8().s[54]++,
    /* istanbul ignore next */
    (cov_k9n1f2cl8().b[16][0]++, cartSummary?.length) ||
    /* istanbul ignore next */
    (cov_k9n1f2cl8().b[16][1]++, 0));
    // 6. Preparar respuesta
    const responseMessage =
    /* istanbul ignore next */
    (cov_k9n1f2cl8().s[55]++, {
      added: `${product.name} agregado al carrito`,
      updated: `Cantidad de ${product.name} actualizada en el carrito`,
      increased: `Se agregaron ${quantity} mÃ¡s de ${product.name} al carrito`
    }[operation]);
    /* istanbul ignore next */
    cov_k9n1f2cl8().s[56]++;
    console.log(`â Cart Add API: ${responseMessage} - Total items: ${totalItems}`);
    /* istanbul ignore next */
    cov_k9n1f2cl8().s[57]++;
    return _server.NextResponse.json({
      success: true,
      message: responseMessage,
      operation,
      item: {
        id: cartItem.id,
        productId: product.id,
        productName: product.name,
        quantity: cartItem.quantity,
        price:
        /* istanbul ignore next */
        (cov_k9n1f2cl8().b[17][0]++, product.discounted_price) ||
        /* istanbul ignore next */
        (cov_k9n1f2cl8().b[17][1]++, product.price),
        addedQuantity: quantity
      },
      cart: {
        totalItems,
        totalProducts
      },
      product: {
        id: product.id,
        name: product.name,
        price: product.price,
        discounted_price: product.discounted_price,
        images: product.images,
        brand: product.brand,
        category: product.category
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_k9n1f2cl8().s[58]++;
    console.error('â Cart Add API: Error inesperado:', error);
    /* istanbul ignore next */
    cov_k9n1f2cl8().s[59]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Error interno del servidor. Intenta nuevamente.',
      details: error.message,
      retry: true
    }, {
      status: 500
    });
  }
}
async function GET() {
  /* istanbul ignore next */
  cov_k9n1f2cl8().f[6]++;
  cov_k9n1f2cl8().s[60]++;
  return _server.NextResponse.json({
    endpoint: '/api/cart/add',
    method: 'POST',
    description: 'Agregar productos al carrito de compras',
    parameters: {
      productId: 'number - ID del producto (requerido)',
      quantity: 'number - Cantidad a agregar (opcional, default: 1)',
      replace: 'boolean - Si true, reemplaza cantidad existente (opcional, default: false)'
    },
    example: {
      productId: 123,
      quantity: 2,
      replace: false
    },
    authentication: 'Requerida - Usuario debe estar autenticado',
    responses: {
      200: 'Producto agregado exitosamente',
      400: 'Datos invÃ¡lidos o stock insuficiente',
      401: 'Usuario no autenticado',
      404: 'Producto no encontrado',
      500: 'Error interno del servidor'
    }
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,