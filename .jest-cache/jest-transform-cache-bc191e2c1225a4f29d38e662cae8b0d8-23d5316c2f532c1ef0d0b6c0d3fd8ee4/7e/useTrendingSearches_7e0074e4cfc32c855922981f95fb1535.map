{"version":3,"names":["default","cov_fdwkozdgr","f","s","_default","useTrendingSearches","useTrendingSearchesByCategory","useTrendingSearchesSimple","options","b","limit","days","category","enabled","refetchInterval","data","isLoading","error","refetch","isStale","_reactquery","useQuery","queryKey","_queryclient","searchQueryKeys","trending","queryFn","console","log","params","URLSearchParams","set","toString","url","response","fetch","status","ok","statusText","Error","result","json","success","count","length","lastUpdated","fetchError","staleTime","gcTime","retry","retryDelay","attemptIndex","Math","min","trackSearch","query","searchCategory","method","headers","body","JSON","stringify","trim","userId","sessionId","Date","now","warn","trendingSearches","trendingSearchesCount","rawTrending"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useTrendingSearches.ts"],"sourcesContent":["// ===================================\r\n// HOOK: useTrendingSearches - B√∫squedas populares/trending\r\n// ===================================\r\n\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { searchQueryKeys } from '@/lib/query-client';\r\nimport { TrendingSearch, TrendingSearchesResponse } from '@/app/api/search/trending/route';\r\nimport { ApiResponse } from '@/types/api';\r\n\r\nexport interface UseTrendingSearchesOptions {\r\n  /** N√∫mero m√°ximo de b√∫squedas trending a obtener */\r\n  limit?: number;\r\n  /** N√∫mero de d√≠as hacia atr√°s para calcular trending */\r\n  days?: number;\r\n  /** Filtrar por categor√≠a espec√≠fica */\r\n  category?: string;\r\n  /** Habilitar/deshabilitar la query */\r\n  enabled?: boolean;\r\n  /** Intervalo de refetch en milisegundos */\r\n  refetchInterval?: number;\r\n}\r\n\r\nexport interface UseTrendingSearchesReturn {\r\n  /** B√∫squedas trending */\r\n  trendingSearches: TrendingSearch[];\r\n  /** Indica si est√° cargando */\r\n  isLoading: boolean;\r\n  /** Indica si hay un error */\r\n  error: Error | null;\r\n  /** Funci√≥n para refrescar los datos */\r\n  refetch: () => void;\r\n  /** Indica si los datos est√°n obsoletos */\r\n  isStale: boolean;\r\n  /** Timestamp de la √∫ltima actualizaci√≥n */\r\n  lastUpdated: string | null;\r\n  /** Funci√≥n para registrar una b√∫squeda */\r\n  trackSearch: (query: string, category?: string) => Promise<void>;\r\n}\r\n\r\n/**\r\n * Hook para obtener b√∫squedas trending/populares\r\n * \r\n * Obtiene las b√∫squedas m√°s populares basadas en datos reales del sistema\r\n * de analytics, con fallback a datos por defecto.\r\n */\r\nexport function useTrendingSearches(options: UseTrendingSearchesOptions = {}): UseTrendingSearchesReturn {\r\n  const {\r\n    limit = 6,\r\n    days = 7,\r\n    category,\r\n    enabled = true,\r\n    refetchInterval = 5 * 60 * 1000, // 5 minutos\r\n  } = options;\r\n\r\n  // Query para obtener b√∫squedas trending\r\n  const {\r\n    data,\r\n    isLoading,\r\n    error,\r\n    refetch,\r\n    isStale,\r\n  } = useQuery({\r\n    queryKey: [...searchQueryKeys.trending(), 'params', { limit, days, category }],\r\n    queryFn: async (): Promise<TrendingSearchesResponse> => {\r\n      console.log('üî• useTrendingSearches: Iniciando fetch de trending searches', {\r\n        limit,\r\n        days,\r\n        category,\r\n        enabled\r\n      });\r\n\r\n      const params = new URLSearchParams();\r\n      params.set('limit', limit.toString());\r\n      params.set('days', days.toString());\r\n      \r\n      if (category) {\r\n        params.set('category', category);\r\n      }\r\n\r\n      const url = `/api/search/trending?${params.toString()}`;\r\n      console.log('üî• useTrendingSearches: URL construida:', url);\r\n\r\n      try {\r\n        const response = await fetch(url);\r\n        console.log('üî• useTrendingSearches: Response status:', response.status);\r\n        \r\n        if (!response.ok) {\r\n          console.error('üî• useTrendingSearches: Response not OK:', response.status, response.statusText);\r\n          throw new Error(`Error fetching trending searches: ${response.status}`);\r\n        }\r\n\r\n        const result: ApiResponse<TrendingSearchesResponse> = await response.json();\r\n        console.log('üî• useTrendingSearches: Raw API response:', result);\r\n        \r\n        if (!result.success || !result.data) {\r\n          console.error('üî• useTrendingSearches: API response error:', result.error);\r\n          throw new Error(result.error || 'Error obteniendo b√∫squedas trending');\r\n        }\r\n\r\n        console.log('‚úÖ useTrendingSearches: Trending searches fetched successfully', {\r\n          count: result.data.trending.length,\r\n          lastUpdated: result.data.lastUpdated,\r\n          data: result.data.trending\r\n        });\r\n\r\n        return result.data;\r\n      } catch (fetchError) {\r\n        console.error('üî• useTrendingSearches: Fetch error:', fetchError);\r\n        throw fetchError;\r\n      }\r\n    },\r\n    enabled,\r\n    refetchInterval,\r\n    staleTime: 2 * 60 * 1000, // 2 minutos\r\n    gcTime: 10 * 60 * 1000, // 10 minutos\r\n    retry: 2,\r\n    retryDelay: (attemptIndex) => Math.min(1000 * 2 ** attemptIndex, 30000),\r\n  });\r\n\r\n  // Funci√≥n para registrar una b√∫squeda en analytics\r\n  const trackSearch = async (query: string, searchCategory?: string): Promise<void> => {\r\n    try {\r\n\r\n      const response = await fetch('/api/search/trending', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          query: query.trim(),\r\n          category: searchCategory,\r\n          userId: null, // Se puede obtener del contexto de auth si est√° disponible\r\n          sessionId: `session-${Date.now()}`, // Generar session ID simple\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        console.warn('‚ö†Ô∏è Error tracking search:', response.status);\r\n      } else {\r\n      }\r\n    } catch (error) {\r\n      console.warn('‚ö†Ô∏è Error tracking search:', error);\r\n      // No lanzar error para no interrumpir la experiencia del usuario\r\n    }\r\n  };\r\n\r\n  const result = {\r\n    trendingSearches: data?.trending || [],\r\n    isLoading,\r\n    error: error as Error | null,\r\n    refetch,\r\n    isStale,\r\n    lastUpdated: data?.lastUpdated || null,\r\n    trackSearch,\r\n  };\r\n\r\n  console.log('üî• useTrendingSearches: Hook result:', {\r\n    trendingSearchesCount: result.trendingSearches.length,\r\n    isLoading: result.isLoading,\r\n    error: result.error,\r\n    data: data,\r\n    rawTrending: data?.trending,\r\n    enabled\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\n/**\r\n * Hook simplificado para obtener solo las b√∫squedas trending\r\n */\r\nexport function useTrendingSearchesSimple(limit: number = 6): TrendingSearch[] {\r\n  const { trendingSearches } = useTrendingSearches({ limit });\r\n  return trendingSearches;\r\n}\r\n\r\n/**\r\n * Hook para obtener b√∫squedas trending por categor√≠a\r\n */\r\nexport function useTrendingSearchesByCategory(category: string, limit: number = 4): TrendingSearch[] {\r\n  const { trendingSearches } = useTrendingSearches({ \r\n    category, \r\n    limit,\r\n    refetchInterval: 10 * 60 * 1000 // 10 minutos para categor√≠as espec√≠ficas\r\n  });\r\n  return trendingSearches;\r\n}\r\n\r\nexport default useTrendingSearches;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}