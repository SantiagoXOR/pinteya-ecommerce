{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\core\\utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\n/**\r\n * Utility function to merge Tailwind CSS classes with clsx\r\n * @param inputs - Class values to merge\r\n * @returns Merged class string\r\n */\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n\r\n/**\r\n * Format currency in Argentine Peso format\r\n * @param amount - Amount to format\r\n * @returns Formatted currency string\r\n */\r\nexport function formatCurrency(amount: number | string): string {\r\n  const numAmount = typeof amount === 'string' ? parseFloat(amount) : amount;\r\n  return new Intl.NumberFormat('es-AR', {\r\n    style: 'currency',\r\n    currency: 'ARS',\r\n  }).format(numAmount);\r\n}\r\n\r\n/**\r\n * Generate a random ID\r\n * @param length - Length of the ID\r\n * @returns Random ID string\r\n */\r\nexport function generateId(length: number = 8): string {\r\n  return Math.random().toString(36).substring(2, length + 2);\r\n}\r\n\r\n/**\r\n * Debounce function\r\n * @param func - Function to debounce\r\n * @param wait - Wait time in milliseconds\r\n * @returns Debounced function\r\n */\r\nexport function debounce<T extends (...args: any[]) => any>(\r\n  func: T,\r\n  wait: number\r\n): (...args: Parameters<T>) => void {\r\n  let timeout: NodeJS.Timeout;\r\n  return (...args: Parameters<T>) => {\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(() => func(...args), wait);\r\n  };\r\n}\r\n\r\n/**\r\n * Throttle function\r\n * @param func - Function to throttle\r\n * @param limit - Time limit in milliseconds\r\n * @returns Throttled function\r\n */\r\nexport function throttle<T extends (...args: any[]) => any>(\r\n  func: T,\r\n  limit: number\r\n): (...args: Parameters<T>) => void {\r\n  let inThrottle: boolean;\r\n  return (...args: Parameters<T>) => {\r\n    if (!inThrottle) {\r\n      func(...args);\r\n      inThrottle = true;\r\n      setTimeout(() => (inThrottle = false), limit);\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Sleep function for async operations\r\n * @param ms - Milliseconds to sleep\r\n * @returns Promise that resolves after the specified time\r\n */\r\nexport function sleep(ms: number): Promise<void> {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\n/**\r\n * Check if a value is empty (null, undefined, empty string, empty array, empty object)\r\n * @param value - Value to check\r\n * @returns True if empty, false otherwise\r\n */\r\nexport function isEmpty(value: any): boolean {\r\n  if (value == null) return true;\r\n  if (typeof value === 'string') return value.trim() === '';\r\n  if (Array.isArray(value)) return value.length === 0;\r\n  if (typeof value === 'object') return Object.keys(value).length === 0;\r\n  return false;\r\n}\r\n\r\n/**\r\n * Capitalize first letter of a string\r\n * @param str - String to capitalize\r\n * @returns Capitalized string\r\n */\r\nexport function capitalize(str: string): string {\r\n  return str.charAt(0).toUpperCase() + str.slice(1);\r\n}\r\n\r\n/**\r\n * Convert string to slug format\r\n * @param str - String to convert\r\n * @returns Slug string\r\n */\r\nexport function slugify(str: string): string {\r\n  return str\r\n    .toLowerCase()\r\n    .trim()\r\n    .replace(/[^\\w\\s-]/g, '')\r\n    .replace(/[\\s_-]+/g, '-')\r\n    .replace(/^-+|-+$/g, '');\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["capitalize","cn","debounce","formatCurrency","generateId","isEmpty","sleep","slugify","throttle","inputs","twMerge","clsx","amount","numAmount","parseFloat","Intl","NumberFormat","style","currency","format","length","Math","random","toString","substring","func","wait","timeout","args","clearTimeout","setTimeout","limit","inThrottle","ms","Promise","resolve","value","trim","Array","isArray","Object","keys","str","charAt","toUpperCase","slice","toLowerCase","replace"],"mappings":";;;;;;;;;;;QAkGgBA;eAAAA;;QA1FAC;eAAAA;;QAgCAC;eAAAA;;QAvBAC;eAAAA;;QAaAC;eAAAA;;QAuDAC;eAAAA;;QATAC;eAAAA;;QA+BAC;eAAAA;;QAlDAC;eAAAA;;;sBAzDsB;+BACd;AAOjB,SAASP,GAAG,GAAGQ,MAAoB;IACxC,OAAOC,IAAAA,sBAAO,EAACC,IAAAA,UAAI,EAACF;AACtB;AAOO,SAASN,eAAeS,MAAuB;IACpD,MAAMC,YAAY,OAAOD,WAAW,WAAWE,WAAWF,UAAUA;IACpE,OAAO,IAAIG,KAAKC,YAAY,CAAC,SAAS;QACpCC,OAAO;QACPC,UAAU;IACZ,GAAGC,MAAM,CAACN;AACZ;AAOO,SAAST,WAAWgB,SAAiB,CAAC;IAC3C,OAAOC,KAAKC,MAAM,GAAGC,QAAQ,CAAC,IAAIC,SAAS,CAAC,GAAGJ,SAAS;AAC1D;AAQO,SAASlB,SACduB,IAAO,EACPC,IAAY;IAEZ,IAAIC;IACJ,OAAO,CAAC,GAAGC;QACTC,aAAaF;QACbA,UAAUG,WAAW,IAAML,QAAQG,OAAOF;IAC5C;AACF;AAQO,SAASlB,SACdiB,IAAO,EACPM,KAAa;IAEb,IAAIC;IACJ,OAAO,CAAC,GAAGJ;QACT,IAAI,CAACI,YAAY;YACfP,QAAQG;YACRI,aAAa;YACbF,WAAW,IAAOE,aAAa,OAAQD;QACzC;IACF;AACF;AAOO,SAASzB,MAAM2B,EAAU;IAC9B,OAAO,IAAIC,QAAQC,CAAAA,UAAWL,WAAWK,SAASF;AACpD;AAOO,SAAS5B,QAAQ+B,KAAU;IAChC,IAAIA,SAAS,MAAM,OAAO;IAC1B,IAAI,OAAOA,UAAU,UAAU,OAAOA,MAAMC,IAAI,OAAO;IACvD,IAAIC,MAAMC,OAAO,CAACH,QAAQ,OAAOA,MAAMhB,MAAM,KAAK;IAClD,IAAI,OAAOgB,UAAU,UAAU,OAAOI,OAAOC,IAAI,CAACL,OAAOhB,MAAM,KAAK;IACpE,OAAO;AACT;AAOO,SAASpB,WAAW0C,GAAW;IACpC,OAAOA,IAAIC,MAAM,CAAC,GAAGC,WAAW,KAAKF,IAAIG,KAAK,CAAC;AACjD;AAOO,SAAStC,QAAQmC,GAAW;IACjC,OAAOA,IACJI,WAAW,GACXT,IAAI,GACJU,OAAO,CAAC,aAAa,IACrBA,OAAO,CAAC,YAAY,KACpBA,OAAO,CAAC,YAAY;AACzB"}