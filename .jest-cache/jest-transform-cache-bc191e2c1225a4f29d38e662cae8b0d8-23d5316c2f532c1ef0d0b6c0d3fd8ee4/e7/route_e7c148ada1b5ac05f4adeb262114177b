cf8c78eb0465f97c396f5422e3a91e42
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_22krm8ym0f() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\monitoring\\metrics\\route.ts";
  var hash = "793554f805dd76f79740fec05f51de6d76b3dc39";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\monitoring\\metrics\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 23
        }
      },
      "6": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 38
        }
      },
      "7": {
        start: {
          line: 21,
          column: 19
        },
        end: {
          line: 21,
          column: 64
        }
      },
      "8": {
        start: {
          line: 22,
          column: 24
        },
        end: {
          line: 22,
          column: 94
        }
      },
      "9": {
        start: {
          line: 23,
          column: 18
        },
        end: {
          line: 23,
          column: 69
        }
      },
      "10": {
        start: {
          line: 24,
          column: 22
        },
        end: {
          line: 24,
          column: 65
        }
      },
      "11": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 63
        }
      },
      "12": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 24
        }
      },
      "13": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 89,
          column: 5
        }
      },
      "14": {
        start: {
          line: 30,
          column: 27
        },
        end: {
          line: 30,
          column: 79
        }
      },
      "15": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 38,
          column: 9
        }
      },
      "16": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 37,
          column: 15
        }
      },
      "17": {
        start: {
          line: 40,
          column: 25
        },
        end: {
          line: 40,
          column: 53
        }
      },
      "18": {
        start: {
          line: 41,
          column: 30
        },
        end: {
          line: 41,
          column: 74
        }
      },
      "19": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 48,
          column: 9
        }
      },
      "20": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 47,
          column: 15
        }
      },
      "21": {
        start: {
          line: 50,
          column: 108
        },
        end: {
          line: 56,
          column: 10
        }
      },
      "22": {
        start: {
          line: 57,
          column: 30
        },
        end: {
          line: 67,
          column: 9
        }
      },
      "23": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 72
        }
      },
      "24": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 74,
          column: 39
        }
      },
      "25": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 78,
          column: 11
        }
      },
      "26": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 82,
          column: 39
        }
      },
      "27": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 88,
          column: 11
        }
      },
      "28": {
        start: {
          line: 94,
          column: 21
        },
        end: {
          line: 94,
          column: 59
        }
      },
      "29": {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 97,
          column: 5
        }
      },
      "30": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 96,
          column: 57
        }
      },
      "31": {
        start: {
          line: 99,
          column: 27
        },
        end: {
          line: 99,
          column: 77
        }
      },
      "32": {
        start: {
          line: 100,
          column: 37
        },
        end: {
          line: 107,
          column: 6
        }
      },
      "33": {
        start: {
          line: 108,
          column: 4
        },
        end: {
          line: 119,
          column: 5
        }
      },
      "34": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 111,
          column: 39
        }
      },
      "35": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 118,
          column: 10
        }
      },
      "36": {
        start: {
          line: 121,
          column: 32
        },
        end: {
          line: 121,
          column: 97
        }
      },
      "37": {
        start: {
          line: 121,
          column: 53
        },
        end: {
          line: 121,
          column: 90
        }
      },
      "38": {
        start: {
          line: 122,
          column: 29
        },
        end: {
          line: 122,
          column: 96
        }
      },
      "39": {
        start: {
          line: 122,
          column: 50
        },
        end: {
          line: 122,
          column: 89
        }
      },
      "40": {
        start: {
          line: 123,
          column: 30
        },
        end: {
          line: 123,
          column: 97
        }
      },
      "41": {
        start: {
          line: 123,
          column: 51
        },
        end: {
          line: 123,
          column: 90
        }
      },
      "42": {
        start: {
          line: 124,
          column: 26
        },
        end: {
          line: 124,
          column: 92
        }
      },
      "43": {
        start: {
          line: 124,
          column: 47
        },
        end: {
          line: 124,
          column: 85
        }
      },
      "44": {
        start: {
          line: 125,
          column: 4
        },
        end: {
          line: 130,
          column: 6
        }
      },
      "45": {
        start: {
          line: 126,
          column: 92
        },
        end: {
          line: 126,
          column: 105
        }
      },
      "46": {
        start: {
          line: 127,
          column: 83
        },
        end: {
          line: 127,
          column: 96
        }
      },
      "47": {
        start: {
          line: 128,
          column: 86
        },
        end: {
          line: 128,
          column: 99
        }
      },
      "48": {
        start: {
          line: 135,
          column: 21
        },
        end: {
          line: 135,
          column: 59
        }
      },
      "49": {
        start: {
          line: 136,
          column: 4
        },
        end: {
          line: 138,
          column: 5
        }
      },
      "50": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 137,
          column: 57
        }
      },
      "51": {
        start: {
          line: 139,
          column: 18
        },
        end: {
          line: 139,
          column: 56
        }
      },
      "52": {
        start: {
          line: 141,
          column: 49
        },
        end: {
          line: 141,
          column: 200
        }
      },
      "53": {
        start: {
          line: 142,
          column: 4
        },
        end: {
          line: 146,
          column: 5
        }
      },
      "54": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 145,
          column: 39
        }
      },
      "55": {
        start: {
          line: 147,
          column: 28
        },
        end: {
          line: 147,
          column: 79
        }
      },
      "56": {
        start: {
          line: 147,
          column: 48
        },
        end: {
          line: 147,
          column: 72
        }
      },
      "57": {
        start: {
          line: 148,
          column: 25
        },
        end: {
          line: 148,
          column: 97
        }
      },
      "58": {
        start: {
          line: 148,
          column: 62
        },
        end: {
          line: 148,
          column: 93
        }
      },
      "59": {
        start: {
          line: 150,
          column: 4
        },
        end: {
          line: 155,
          column: 6
        }
      },
      "60": {
        start: {
          line: 160,
          column: 21
        },
        end: {
          line: 160,
          column: 59
        }
      },
      "61": {
        start: {
          line: 161,
          column: 4
        },
        end: {
          line: 163,
          column: 5
        }
      },
      "62": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 162,
          column: 57
        }
      },
      "63": {
        start: {
          line: 164,
          column: 23
        },
        end: {
          line: 164,
          column: 74
        }
      },
      "64": {
        start: {
          line: 166,
          column: 44
        },
        end: {
          line: 166,
          column: 182
        }
      },
      "65": {
        start: {
          line: 167,
          column: 4
        },
        end: {
          line: 171,
          column: 5
        }
      },
      "66": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 170,
          column: 39
        }
      },
      "67": {
        start: {
          line: 172,
          column: 19
        },
        end: {
          line: 172,
          column: 39
        }
      },
      "68": {
        start: {
          line: 173,
          column: 28
        },
        end: {
          line: 173,
          column: 77
        }
      },
      "69": {
        start: {
          line: 173,
          column: 47
        },
        end: {
          line: 173,
          column: 69
        }
      },
      "70": {
        start: {
          line: 174,
          column: 25
        },
        end: {
          line: 174,
          column: 74
        }
      },
      "71": {
        start: {
          line: 174,
          column: 44
        },
        end: {
          line: 174,
          column: 66
        }
      },
      "72": {
        start: {
          line: 176,
          column: 20
        },
        end: {
          line: 176,
          column: 25
        }
      },
      "73": {
        start: {
          line: 177,
          column: 4
        },
        end: {
          line: 183,
          column: 5
        }
      },
      "74": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 178,
          column: 31
        }
      },
      "75": {
        start: {
          line: 179,
          column: 11
        },
        end: {
          line: 183,
          column: 5
        }
      },
      "76": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 180,
          column: 27
        }
      },
      "77": {
        start: {
          line: 181,
          column: 11
        },
        end: {
          line: 183,
          column: 5
        }
      },
      "78": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 182,
          column: 29
        }
      },
      "79": {
        start: {
          line: 184,
          column: 4
        },
        end: {
          line: 189,
          column: 6
        }
      },
      "80": {
        start: {
          line: 195,
          column: 33
        },
        end: {
          line: 195,
          column: 86
        }
      },
      "81": {
        start: {
          line: 196,
          column: 33
        },
        end: {
          line: 196,
          column: 86
        }
      },
      "82": {
        start: {
          line: 197,
          column: 32
        },
        end: {
          line: 197,
          column: 83
        }
      },
      "83": {
        start: {
          line: 199,
          column: 24
        },
        end: {
          line: 199,
          column: 32
        }
      },
      "84": {
        start: {
          line: 200,
          column: 4
        },
        end: {
          line: 212,
          column: 5
        }
      },
      "85": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 205,
          column: 31
        }
      },
      "86": {
        start: {
          line: 206,
          column: 11
        },
        end: {
          line: 212,
          column: 5
        }
      },
      "87": {
        start: {
          line: 211,
          column: 8
        },
        end: {
          line: 211,
          column: 36
        }
      },
      "88": {
        start: {
          line: 214,
          column: 4
        },
        end: {
          line: 219,
          column: 6
        }
      },
      "89": {
        start: {
          line: 224,
          column: 21
        },
        end: {
          line: 224,
          column: 59
        }
      },
      "90": {
        start: {
          line: 225,
          column: 4
        },
        end: {
          line: 227,
          column: 5
        }
      },
      "91": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 226,
          column: 18
        }
      },
      "92": {
        start: {
          line: 228,
          column: 36
        },
        end: {
          line: 230,
          column: 16
        }
      },
      "93": {
        start: {
          line: 231,
          column: 4
        },
        end: {
          line: 236,
          column: 5
        }
      },
      "94": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 234,
          column: 39
        }
      },
      "95": {
        start: {
          line: 235,
          column: 8
        },
        end: {
          line: 235,
          column: 18
        }
      },
      "96": {
        start: {
          line: 237,
          column: 4
        },
        end: {
          line: 245,
          column: 12
        }
      },
      "97": {
        start: {
          line: 237,
          column: 40
        },
        end: {
          line: 245,
          column: 9
        }
      },
      "98": {
        start: {
          line: 250,
          column: 21
        },
        end: {
          line: 250,
          column: 59
        }
      },
      "99": {
        start: {
          line: 251,
          column: 4
        },
        end: {
          line: 253,
          column: 5
        }
      },
      "100": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 252,
          column: 18
        }
      },
      "101": {
        start: {
          line: 254,
          column: 23
        },
        end: {
          line: 254,
          column: 74
        }
      },
      "102": {
        start: {
          line: 255,
          column: 36
        },
        end: {
          line: 262,
          column: 6
        }
      },
      "103": {
        start: {
          line: 263,
          column: 4
        },
        end: {
          line: 268,
          column: 5
        }
      },
      "104": {
        start: {
          line: 264,
          column: 8
        },
        end: {
          line: 266,
          column: 39
        }
      },
      "105": {
        start: {
          line: 267,
          column: 8
        },
        end: {
          line: 267,
          column: 18
        }
      },
      "106": {
        start: {
          line: 270,
          column: 26
        },
        end: {
          line: 270,
          column: 28
        }
      },
      "107": {
        start: {
          line: 271,
          column: 4
        },
        end: {
          line: 279,
          column: 7
        }
      },
      "108": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 274,
          column: 9
        }
      },
      "109": {
        start: {
          line: 273,
          column: 12
        },
        end: {
          line: 273,
          column: 43
        }
      },
      "110": {
        start: {
          line: 275,
          column: 8
        },
        end: {
          line: 278,
          column: 11
        }
      },
      "111": {
        start: {
          line: 280,
          column: 4
        },
        end: {
          line: 280,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 19
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "GET",
        decl: {
          start: {
            line: 27,
            column: 15
          },
          end: {
            line: 27,
            column: 18
          }
        },
        loc: {
          start: {
            line: 27,
            column: 28
          },
          end: {
            line: 90,
            column: 1
          }
        },
        line: 27
      },
      "4": {
        name: "getPerformanceMetrics",
        decl: {
          start: {
            line: 93,
            column: 19
          },
          end: {
            line: 93,
            column: 40
          }
        },
        loc: {
          start: {
            line: 93,
            column: 43
          },
          end: {
            line: 131,
            column: 1
          }
        },
        line: 93
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 121,
            column: 48
          },
          end: {
            line: 121,
            column: 49
          }
        },
        loc: {
          start: {
            line: 121,
            column: 53
          },
          end: {
            line: 121,
            column: 90
          }
        },
        line: 121
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 122,
            column: 45
          },
          end: {
            line: 122,
            column: 46
          }
        },
        loc: {
          start: {
            line: 122,
            column: 50
          },
          end: {
            line: 122,
            column: 89
          }
        },
        line: 122
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 123,
            column: 46
          },
          end: {
            line: 123,
            column: 47
          }
        },
        loc: {
          start: {
            line: 123,
            column: 51
          },
          end: {
            line: 123,
            column: 90
          }
        },
        line: 123
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 124,
            column: 42
          },
          end: {
            line: 124,
            column: 43
          }
        },
        loc: {
          start: {
            line: 124,
            column: 47
          },
          end: {
            line: 124,
            column: 85
          }
        },
        line: 124
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 126,
            column: 82
          },
          end: {
            line: 126,
            column: 83
          }
        },
        loc: {
          start: {
            line: 126,
            column: 92
          },
          end: {
            line: 126,
            column: 105
          }
        },
        line: 126
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 127,
            column: 73
          },
          end: {
            line: 127,
            column: 74
          }
        },
        loc: {
          start: {
            line: 127,
            column: 83
          },
          end: {
            line: 127,
            column: 96
          }
        },
        line: 127
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 128,
            column: 76
          },
          end: {
            line: 128,
            column: 77
          }
        },
        loc: {
          start: {
            line: 128,
            column: 86
          },
          end: {
            line: 128,
            column: 99
          }
        },
        line: 128
      },
      "12": {
        name: "getBusinessMetrics",
        decl: {
          start: {
            line: 134,
            column: 19
          },
          end: {
            line: 134,
            column: 37
          }
        },
        loc: {
          start: {
            line: 134,
            column: 40
          },
          end: {
            line: 156,
            column: 1
          }
        },
        line: 134
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 147,
            column: 43
          },
          end: {
            line: 147,
            column: 44
          }
        },
        loc: {
          start: {
            line: 147,
            column: 48
          },
          end: {
            line: 147,
            column: 72
          }
        },
        line: 147
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 148,
            column: 48
          },
          end: {
            line: 148,
            column: 49
          }
        },
        loc: {
          start: {
            line: 148,
            column: 62
          },
          end: {
            line: 148,
            column: 93
          }
        },
        line: 148
      },
      "15": {
        name: "getSecurityMetrics",
        decl: {
          start: {
            line: 159,
            column: 19
          },
          end: {
            line: 159,
            column: 37
          }
        },
        loc: {
          start: {
            line: 159,
            column: 40
          },
          end: {
            line: 190,
            column: 1
          }
        },
        line: 159
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 173,
            column: 42
          },
          end: {
            line: 173,
            column: 43
          }
        },
        loc: {
          start: {
            line: 173,
            column: 47
          },
          end: {
            line: 173,
            column: 69
          }
        },
        line: 173
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 174,
            column: 39
          },
          end: {
            line: 174,
            column: 40
          }
        },
        loc: {
          start: {
            line: 174,
            column: 44
          },
          end: {
            line: 174,
            column: 66
          }
        },
        line: 174
      },
      "18": {
        name: "getInfrastructureMetrics",
        decl: {
          start: {
            line: 193,
            column: 19
          },
          end: {
            line: 193,
            column: 43
          }
        },
        loc: {
          start: {
            line: 193,
            column: 46
          },
          end: {
            line: 220,
            column: 1
          }
        },
        line: 193
      },
      "19": {
        name: "getActiveAlerts",
        decl: {
          start: {
            line: 223,
            column: 19
          },
          end: {
            line: 223,
            column: 34
          }
        },
        loc: {
          start: {
            line: 223,
            column: 37
          },
          end: {
            line: 246,
            column: 1
          }
        },
        line: 223
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 237,
            column: 30
          },
          end: {
            line: 237,
            column: 31
          }
        },
        loc: {
          start: {
            line: 237,
            column: 40
          },
          end: {
            line: 245,
            column: 9
          }
        },
        line: 237
      },
      "21": {
        name: "getMetricTrends",
        decl: {
          start: {
            line: 249,
            column: 19
          },
          end: {
            line: 249,
            column: 34
          }
        },
        loc: {
          start: {
            line: 249,
            column: 37
          },
          end: {
            line: 281,
            column: 1
          }
        },
        line: 249
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 271,
            column: 27
          },
          end: {
            line: 271,
            column: 28
          }
        },
        loc: {
          start: {
            line: 271,
            column: 36
          },
          end: {
            line: 279,
            column: 5
          }
        },
        line: 271
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "1": {
        loc: {
          start: {
            line: 31,
            column: 12
          },
          end: {
            line: 31,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 12
          },
          end: {
            line: 31,
            column: 31
          }
        }, {
          start: {
            line: 31,
            column: 35
          },
          end: {
            line: 31,
            column: 53
          }
        }],
        line: 31
      },
      "2": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "3": {
        loc: {
          start: {
            line: 81,
            column: 19
          },
          end: {
            line: 81,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 81,
            column: 44
          },
          end: {
            line: 81,
            column: 57
          }
        }, {
          start: {
            line: 81,
            column: 60
          },
          end: {
            line: 81,
            column: 75
          }
        }],
        line: 81
      },
      "4": {
        loc: {
          start: {
            line: 95,
            column: 4
          },
          end: {
            line: 97,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 4
          },
          end: {
            line: 97,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 95
      },
      "5": {
        loc: {
          start: {
            line: 108,
            column: 4
          },
          end: {
            line: 119,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 108,
            column: 4
          },
          end: {
            line: 119,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 108
      },
      "6": {
        loc: {
          start: {
            line: 121,
            column: 32
          },
          end: {
            line: 121,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 121,
            column: 32
          },
          end: {
            line: 121,
            column: 91
          }
        }, {
          start: {
            line: 121,
            column: 95
          },
          end: {
            line: 121,
            column: 97
          }
        }],
        line: 121
      },
      "7": {
        loc: {
          start: {
            line: 122,
            column: 29
          },
          end: {
            line: 122,
            column: 96
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 122,
            column: 29
          },
          end: {
            line: 122,
            column: 90
          }
        }, {
          start: {
            line: 122,
            column: 94
          },
          end: {
            line: 122,
            column: 96
          }
        }],
        line: 122
      },
      "8": {
        loc: {
          start: {
            line: 123,
            column: 30
          },
          end: {
            line: 123,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 123,
            column: 30
          },
          end: {
            line: 123,
            column: 91
          }
        }, {
          start: {
            line: 123,
            column: 95
          },
          end: {
            line: 123,
            column: 97
          }
        }],
        line: 123
      },
      "9": {
        loc: {
          start: {
            line: 124,
            column: 26
          },
          end: {
            line: 124,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 124,
            column: 26
          },
          end: {
            line: 124,
            column: 86
          }
        }, {
          start: {
            line: 124,
            column: 90
          },
          end: {
            line: 124,
            column: 92
          }
        }],
        line: 124
      },
      "10": {
        loc: {
          start: {
            line: 126,
            column: 22
          },
          end: {
            line: 126,
            column: 144
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 126,
            column: 55
          },
          end: {
            line: 126,
            column: 138
          }
        }, {
          start: {
            line: 126,
            column: 141
          },
          end: {
            line: 126,
            column: 144
          }
        }],
        line: 126
      },
      "11": {
        loc: {
          start: {
            line: 127,
            column: 19
          },
          end: {
            line: 127,
            column: 134
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 127,
            column: 49
          },
          end: {
            line: 127,
            column: 126
          }
        }, {
          start: {
            line: 127,
            column: 129
          },
          end: {
            line: 127,
            column: 134
          }
        }],
        line: 127
      },
      "12": {
        loc: {
          start: {
            line: 128,
            column: 20
          },
          end: {
            line: 128,
            column: 136
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 128,
            column: 51
          },
          end: {
            line: 128,
            column: 130
          }
        }, {
          start: {
            line: 128,
            column: 133
          },
          end: {
            line: 128,
            column: 136
          }
        }],
        line: 128
      },
      "13": {
        loc: {
          start: {
            line: 129,
            column: 16
          },
          end: {
            line: 129,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 129,
            column: 43
          },
          end: {
            line: 129,
            column: 65
          }
        }, {
          start: {
            line: 129,
            column: 68
          },
          end: {
            line: 129,
            column: 74
          }
        }],
        line: 129
      },
      "14": {
        loc: {
          start: {
            line: 136,
            column: 4
          },
          end: {
            line: 138,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 4
          },
          end: {
            line: 138,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 136
      },
      "15": {
        loc: {
          start: {
            line: 142,
            column: 4
          },
          end: {
            line: 146,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 4
          },
          end: {
            line: 146,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "16": {
        loc: {
          start: {
            line: 147,
            column: 28
          },
          end: {
            line: 147,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 147,
            column: 28
          },
          end: {
            line: 147,
            column: 73
          }
        }, {
          start: {
            line: 147,
            column: 77
          },
          end: {
            line: 147,
            column: 79
          }
        }],
        line: 147
      },
      "17": {
        loc: {
          start: {
            line: 148,
            column: 69
          },
          end: {
            line: 148,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 148,
            column: 69
          },
          end: {
            line: 148,
            column: 87
          }
        }, {
          start: {
            line: 148,
            column: 91
          },
          end: {
            line: 148,
            column: 92
          }
        }],
        line: 148
      },
      "18": {
        loc: {
          start: {
            line: 161,
            column: 4
          },
          end: {
            line: 163,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 161,
            column: 4
          },
          end: {
            line: 163,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 161
      },
      "19": {
        loc: {
          start: {
            line: 167,
            column: 4
          },
          end: {
            line: 171,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 167,
            column: 4
          },
          end: {
            line: 171,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 167
      },
      "20": {
        loc: {
          start: {
            line: 172,
            column: 19
          },
          end: {
            line: 172,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 172,
            column: 19
          },
          end: {
            line: 172,
            column: 33
          }
        }, {
          start: {
            line: 172,
            column: 37
          },
          end: {
            line: 172,
            column: 39
          }
        }],
        line: 172
      },
      "21": {
        loc: {
          start: {
            line: 177,
            column: 4
          },
          end: {
            line: 183,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 177,
            column: 4
          },
          end: {
            line: 183,
            column: 5
          }
        }, {
          start: {
            line: 179,
            column: 11
          },
          end: {
            line: 183,
            column: 5
          }
        }],
        line: 177
      },
      "22": {
        loc: {
          start: {
            line: 179,
            column: 11
          },
          end: {
            line: 183,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 179,
            column: 11
          },
          end: {
            line: 183,
            column: 5
          }
        }, {
          start: {
            line: 181,
            column: 11
          },
          end: {
            line: 183,
            column: 5
          }
        }],
        line: 179
      },
      "23": {
        loc: {
          start: {
            line: 181,
            column: 11
          },
          end: {
            line: 183,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 181,
            column: 11
          },
          end: {
            line: 183,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 181
      },
      "24": {
        loc: {
          start: {
            line: 200,
            column: 4
          },
          end: {
            line: 212,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 200,
            column: 4
          },
          end: {
            line: 212,
            column: 5
          }
        }, {
          start: {
            line: 206,
            column: 11
          },
          end: {
            line: 212,
            column: 5
          }
        }],
        line: 200
      },
      "25": {
        loc: {
          start: {
            line: 206,
            column: 11
          },
          end: {
            line: 212,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 206,
            column: 11
          },
          end: {
            line: 212,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 206
      },
      "26": {
        loc: {
          start: {
            line: 225,
            column: 4
          },
          end: {
            line: 227,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 225,
            column: 4
          },
          end: {
            line: 227,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 225
      },
      "27": {
        loc: {
          start: {
            line: 231,
            column: 4
          },
          end: {
            line: 236,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 231,
            column: 4
          },
          end: {
            line: 236,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 231
      },
      "28": {
        loc: {
          start: {
            line: 237,
            column: 12
          },
          end: {
            line: 237,
            column: 24
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 237,
            column: 12
          },
          end: {
            line: 237,
            column: 18
          }
        }, {
          start: {
            line: 237,
            column: 22
          },
          end: {
            line: 237,
            column: 24
          }
        }],
        line: 237
      },
      "29": {
        loc: {
          start: {
            line: 251,
            column: 4
          },
          end: {
            line: 253,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 251,
            column: 4
          },
          end: {
            line: 253,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 251
      },
      "30": {
        loc: {
          start: {
            line: 263,
            column: 4
          },
          end: {
            line: 268,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 263,
            column: 4
          },
          end: {
            line: 268,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 263
      },
      "31": {
        loc: {
          start: {
            line: 271,
            column: 5
          },
          end: {
            line: 271,
            column: 17
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 271,
            column: 5
          },
          end: {
            line: 271,
            column: 11
          }
        }, {
          start: {
            line: 271,
            column: 15
          },
          end: {
            line: 271,
            column: 17
          }
        }],
        line: 271
      },
      "32": {
        loc: {
          start: {
            line: 272,
            column: 8
          },
          end: {
            line: 274,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 272,
            column: 8
          },
          end: {
            line: 274,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 272
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\monitoring\\metrics\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - MONITORING METRICS API\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { getAuthenticatedAdmin } from '@/lib/auth/admin-auth';\r\nimport { enterpriseMetrics } from '@/lib/monitoring/enterprise-metrics';\r\nimport { \r\n  mercadoPagoCriticalBreaker, \r\n  mercadoPagoStandardBreaker, \r\n  webhookProcessingBreaker \r\n} from '@/lib/integrations/mercadopago/circuit-breaker';\r\nimport { getSupabaseClient } from '@/lib/integrations/supabase';\r\nimport { CacheUtils } from '@/lib/cache-manager';\r\nimport { logger, LogLevel, LogCategory } from '@/lib/enterprise/logger';\r\n\r\ninterface DashboardMetrics {\r\n  performance: {\r\n    responseTime: number;\r\n    errorRate: number;\r\n    throughput: number;\r\n    uptime: number;\r\n  };\r\n  business: {\r\n    totalRevenue: number;\r\n    ordersToday: number;\r\n    conversionRate: number;\r\n    activeUsers: number;\r\n  };\r\n  security: {\r\n    securityEvents: number;\r\n    blockedRequests: number;\r\n    authFailures: number;\r\n    riskLevel: 'low' | 'medium' | 'high' | 'critical';\r\n  };\r\n  infrastructure: {\r\n    circuitBreakerStatus: 'closed' | 'open' | 'half-open';\r\n    cacheHitRate: number;\r\n    databaseConnections: number;\r\n    memoryUsage: number;\r\n  };\r\n}\r\n\r\ninterface ActiveAlert {\r\n  id: string;\r\n  level: 'info' | 'warning' | 'critical' | 'emergency';\r\n  message: string;\r\n  timestamp: string;\r\n  metric: string;\r\n  value: number;\r\n  threshold: number;\r\n}\r\n\r\n/**\r\n * GET /api/admin/monitoring/metrics\r\n * Obtiene m\xE9tricas en tiempo real para el dashboard\r\n */\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    // Verificar autenticaci\xF3n de admin\r\n    const authResult = await getAuthenticatedAdmin(request);\r\n    \r\n    if (!authResult.isAdmin || !authResult.userId) {\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: 'Acceso no autorizado'\r\n      }, { status: 401 });\r\n    }\r\n\r\n    // Usar cache para evitar sobrecarga\r\n    const cacheKey = 'dashboard:metrics:realtime';\r\n    const cachedMetrics = await CacheUtils.get(cacheKey);\r\n    \r\n    if (cachedMetrics) {\r\n      return NextResponse.json({\r\n        success: true,\r\n        data: cachedMetrics,\r\n        cached: true\r\n      });\r\n    }\r\n\r\n    // Obtener m\xE9tricas en paralelo\r\n    const [\r\n      performanceMetrics,\r\n      businessMetrics,\r\n      securityMetrics,\r\n      infrastructureMetrics,\r\n      activeAlerts\r\n    ] = await Promise.all([\r\n      getPerformanceMetrics(),\r\n      getBusinessMetrics(),\r\n      getSecurityMetrics(),\r\n      getInfrastructureMetrics(),\r\n      getActiveAlerts()\r\n    ]);\r\n\r\n    const dashboardData = {\r\n      metrics: {\r\n        performance: performanceMetrics,\r\n        business: businessMetrics,\r\n        security: securityMetrics,\r\n        infrastructure: infrastructureMetrics\r\n      },\r\n      alerts: activeAlerts,\r\n      trends: await getMetricTrends(),\r\n      timestamp: new Date().toISOString()\r\n    };\r\n\r\n    // Cache por 30 segundos\r\n    await CacheUtils.set(cacheKey, dashboardData, 30);\r\n\r\n    logger.info(LogLevel.INFO, 'Dashboard metrics retrieved', {\r\n      userId: authResult.userId,\r\n      metricsCount: Object.keys(dashboardData.metrics).length,\r\n      alertsCount: activeAlerts.length\r\n    }, LogCategory.SYSTEM);\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: dashboardData\r\n    });\r\n\r\n  } catch (error) {\r\n    logger.error(LogLevel.ERROR, 'Failed to get dashboard metrics', {\r\n      error: error instanceof Error ? error.message : 'Unknown error'\r\n    }, LogCategory.SYSTEM);\r\n\r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Error interno del servidor'\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n/**\r\n * Obtiene m\xE9tricas de performance\r\n */\r\nasync function getPerformanceMetrics() {\r\n  const supabase = getSupabaseClient(true);\r\n  \r\n  if (!supabase) {\r\n    throw new Error('Supabase client not available');\r\n  }\r\n\r\n  // Obtener m\xE9tricas de los \xFAltimos 5 minutos\r\n  const fiveMinutesAgo = new Date(Date.now() - 5 * 60 * 1000).toISOString();\r\n\r\n  const { data: metrics, error } = await supabase\r\n    .from('enterprise_metrics')\r\n    .select('name, value, timestamp')\r\n    .in('name', [\r\n      'performance.api.duration',\r\n      'performance.api.error_rate',\r\n      'performance.api.throughput',\r\n      'performance.system.uptime'\r\n    ])\r\n    .gte('timestamp', fiveMinutesAgo)\r\n    .order('timestamp', { ascending: false });\r\n\r\n  if (error) {\r\n    logger.error(LogLevel.ERROR, 'Failed to fetch performance metrics', { error: error.message }, LogCategory.SYSTEM);\r\n    // Valores por defecto en caso de error\r\n    return {\r\n      responseTime: 0,\r\n      errorRate: 0,\r\n      throughput: 0,\r\n      uptime: 0.99\r\n    };\r\n  }\r\n\r\n  // Calcular promedios\r\n  const responseTimeMetrics = metrics?.filter(m => m.name === 'performance.api.duration') || [];\r\n  const errorRateMetrics = metrics?.filter(m => m.name === 'performance.api.error_rate') || [];\r\n  const throughputMetrics = metrics?.filter(m => m.name === 'performance.api.throughput') || [];\r\n  const uptimeMetrics = metrics?.filter(m => m.name === 'performance.system.uptime') || [];\r\n\r\n  return {\r\n    responseTime: responseTimeMetrics.length > 0 \r\n      ? responseTimeMetrics.reduce((sum, m) => sum + m.value, 0) / responseTimeMetrics.length \r\n      : 285,\r\n    errorRate: errorRateMetrics.length > 0 \r\n      ? errorRateMetrics.reduce((sum, m) => sum + m.value, 0) / errorRateMetrics.length \r\n      : 0.004,\r\n    throughput: throughputMetrics.length > 0 \r\n      ? throughputMetrics.reduce((sum, m) => sum + m.value, 0) / throughputMetrics.length \r\n      : 120,\r\n    uptime: uptimeMetrics.length > 0 \r\n      ? uptimeMetrics[0].value \r\n      : 0.9997\r\n  };\r\n}\r\n\r\n/**\r\n * Obtiene m\xE9tricas de negocio\r\n */\r\nasync function getBusinessMetrics() {\r\n  const supabase = getSupabaseClient(true);\r\n  \r\n  if (!supabase) {\r\n    throw new Error('Supabase client not available');\r\n  }\r\n\r\n  const today = new Date().toISOString().split('T')[0];\r\n\r\n  // Obtener \xF3rdenes del d\xEDa\r\n  const { data: orders, error: ordersError } = await supabase\r\n    .from('orders')\r\n    .select('total_amount, status, created_at')\r\n    .gte('created_at', `${today}T00:00:00Z`)\r\n    .lt('created_at', `${today}T23:59:59Z`);\r\n\r\n  if (ordersError) {\r\n    logger.error(LogLevel.ERROR, 'Failed to fetch business metrics', { error: ordersError.message }, LogCategory.SYSTEM);\r\n  }\r\n\r\n  const completedOrders = orders?.filter(o => o.status === 'completed') || [];\r\n  const totalRevenue = completedOrders.reduce((sum, order) => sum + (order.total_amount || 0), 0);\r\n\r\n  // M\xE9tricas simuladas para demo (en producci\xF3n vendr\xEDan de analytics reales)\r\n  return {\r\n    totalRevenue,\r\n    ordersToday: completedOrders.length,\r\n    conversionRate: 0.034, // 3.4%\r\n    activeUsers: Math.floor(Math.random() * 50) + 20 // Simulado\r\n  };\r\n}\r\n\r\n/**\r\n * Obtiene m\xE9tricas de seguridad\r\n */\r\nasync function getSecurityMetrics() {\r\n  const supabase = getSupabaseClient(true);\r\n  \r\n  if (!supabase) {\r\n    throw new Error('Supabase client not available');\r\n  }\r\n\r\n  const oneHourAgo = new Date(Date.now() - 60 * 60 * 1000).toISOString();\r\n\r\n  // Obtener eventos de auditor\xEDa de seguridad\r\n  const { data: securityEvents, error } = await supabase\r\n    .from('audit_events')\r\n    .select('category, severity, result')\r\n    .eq('category', 'security_violation')\r\n    .gte('timestamp', oneHourAgo);\r\n\r\n  if (error) {\r\n    logger.error(LogLevel.ERROR, 'Failed to fetch security metrics', { error: error.message }, LogCategory.SYSTEM);\r\n  }\r\n\r\n  const events = securityEvents || [];\r\n  const blockedRequests = events.filter(e => e.result === 'blocked').length;\r\n  const authFailures = events.filter(e => e.result === 'failure').length;\r\n  \r\n  // Determinar nivel de riesgo\r\n  let riskLevel: 'low' | 'medium' | 'high' | 'critical' = 'low';\r\n  if (events.length > 10) {riskLevel = 'critical';}\r\n  else if (events.length > 5) {riskLevel = 'high';}\r\n  else if (events.length > 2) {riskLevel = 'medium';}\r\n\r\n  return {\r\n    securityEvents: events.length,\r\n    blockedRequests,\r\n    authFailures,\r\n    riskLevel\r\n  };\r\n}\r\n\r\n/**\r\n * Obtiene m\xE9tricas de infraestructura\r\n */\r\nasync function getInfrastructureMetrics() {\r\n  // Estado de circuit breakers\r\n  const criticalBreakerState = mercadoPagoCriticalBreaker.getState();\r\n  const standardBreakerState = mercadoPagoStandardBreaker.getState();\r\n  const webhookBreakerState = webhookProcessingBreaker.getState();\r\n\r\n  // Determinar estado general (el m\xE1s cr\xEDtico)\r\n  let overallStatus: 'closed' | 'open' | 'half-open' = 'closed';\r\n  if ([criticalBreakerState, standardBreakerState, webhookBreakerState].includes('open')) {\r\n    overallStatus = 'open';\r\n  } else if ([criticalBreakerState, standardBreakerState, webhookBreakerState].includes('half-open')) {\r\n    overallStatus = 'half-open';\r\n  }\r\n\r\n  // M\xE9tricas simuladas (en producci\xF3n vendr\xEDan de monitoreo real)\r\n  return {\r\n    circuitBreakerStatus: overallStatus,\r\n    cacheHitRate: 0.87, // 87%\r\n    databaseConnections: Math.floor(Math.random() * 10) + 5,\r\n    memoryUsage: 0.65 // 65%\r\n  };\r\n}\r\n\r\n/**\r\n * Obtiene alertas activas\r\n */\r\nasync function getActiveAlerts(): Promise<ActiveAlert[]> {\r\n  const supabase = getSupabaseClient(true);\r\n  \r\n  if (!supabase) {\r\n    return [];\r\n  }\r\n\r\n  const { data: alerts, error } = await supabase\r\n    .from('enterprise_alerts')\r\n    .select('*')\r\n    .is('resolved_at', null)\r\n    .order('triggered_at', { ascending: false })\r\n    .limit(10);\r\n\r\n  if (error) {\r\n    logger.error(LogLevel.ERROR, 'Failed to fetch active alerts', { error: error.message }, LogCategory.SYSTEM);\r\n    return [];\r\n  }\r\n\r\n  return (alerts || []).map(alert => ({\r\n    id: alert.id,\r\n    level: alert.level,\r\n    message: alert.message,\r\n    timestamp: alert.triggered_at,\r\n    metric: alert.metric_name,\r\n    value: alert.value,\r\n    threshold: alert.threshold\r\n  }));\r\n}\r\n\r\n/**\r\n * Obtiene tendencias de m\xE9tricas\r\n */\r\nasync function getMetricTrends() {\r\n  const supabase = getSupabaseClient(true);\r\n  \r\n  if (!supabase) {\r\n    return {};\r\n  }\r\n\r\n  const oneHourAgo = new Date(Date.now() - 60 * 60 * 1000).toISOString();\r\n\r\n  const { data: trends, error } = await supabase\r\n    .from('enterprise_metrics')\r\n    .select('name, value, timestamp')\r\n    .in('name', [\r\n      'performance.api.duration',\r\n      'performance.api.error_rate',\r\n      'business.revenue',\r\n      'security.events'\r\n    ])\r\n    .gte('timestamp', oneHourAgo)\r\n    .order('timestamp', { ascending: true });\r\n\r\n  if (error) {\r\n    logger.error(LogLevel.ERROR, 'Failed to fetch metric trends', { error: error.message }, LogCategory.SYSTEM);\r\n    return {};\r\n  }\r\n\r\n  // Agrupar por nombre de m\xE9trica\r\n  const groupedTrends: Record<string, Array<{ timestamp: string; value: number }>> = {};\r\n  \r\n  (trends || []).forEach(trend => {\r\n    if (!groupedTrends[trend.name]) {\r\n      groupedTrends[trend.name] = [];\r\n    }\r\n    groupedTrends[trend.name].push({\r\n      timestamp: trend.timestamp,\r\n      value: trend.value\r\n    });\r\n  });\r\n\r\n  return groupedTrends;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "runtime", "request", "authResult", "getAuthenticatedAdmin", "isAdmin", "userId", "NextResponse", "json", "success", "error", "status", "cacheKey", "cachedMetrics", "CacheUtils", "get", "data", "cached", "performanceMetrics", "businessMetrics", "securityMetrics", "infrastructureMetrics", "activeAlerts", "Promise", "all", "getPerformanceMetrics", "getBusinessMetrics", "getSecurityMetrics", "getInfrastructureMetrics", "getActiveAlerts", "dashboardData", "metrics", "performance", "business", "security", "infrastructure", "alerts", "trends", "getMetricTrends", "timestamp", "Date", "toISOString", "set", "logger", "info", "LogLevel", "INFO", "metricsCount", "Object", "keys", "length", "alertsCount", "LogCategory", "SYSTEM", "ERROR", "Error", "message", "supabase", "getSupabaseClient", "fiveMinutesAgo", "now", "from", "select", "in", "gte", "order", "ascending", "responseTime", "errorRate", "throughput", "uptime", "responseTimeMetrics", "filter", "m", "name", "errorRateMetrics", "throughputMetrics", "uptimeMetrics", "reduce", "sum", "value", "today", "split", "orders", "ordersError", "lt", "completedOrders", "o", "totalRevenue", "total_amount", "ordersToday", "conversionRate", "activeUsers", "Math", "floor", "random", "oneHourAgo", "securityEvents", "eq", "events", "blockedRequests", "e", "result", "authFailures", "riskLevel", "criticalBreakerState", "mercadoPagoCriticalBreaker", "getState", "standardBreakerState", "mercadoPagoStandardBreaker", "webhookBreakerState", "webhookProcessingBreaker", "overallStatus", "includes", "circuitBreakerStatus", "cacheHitRate", "databaseConnections", "memoryUsage", "is", "limit", "map", "alert", "id", "level", "triggered_at", "metric", "metric_name", "threshold", "groupedTrends", "forEach", "trend", "push"],
      mappings: "AAAA,qCAAqC;;;;;;;;;;;;QA4DfA;eAAAA;;QA3DTC;eAAAA;;;wBAM6B;2BACJ;gCAM/B;0BAC2B;8BACP;wBACmB;AAhBvC,MAAMA,UAAU;AA2DhB,eAAeD,IAAIE,OAAoB;IAC5C,IAAI;QACF,mCAAmC;QACnC,MAAMC,aAAa,MAAMC,IAAAA,gCAAqB,EAACF;QAE/C,IAAI,CAACC,WAAWE,OAAO,IAAI,CAACF,WAAWG,MAAM,EAAE;YAC7C,OAAOC,oBAAY,CAACC,IAAI,CAAC;gBACvBC,SAAS;gBACTC,OAAO;YACT,GAAG;gBAAEC,QAAQ;YAAI;QACnB;QAEA,oCAAoC;QACpC,MAAMC,WAAW;QACjB,MAAMC,gBAAgB,MAAMC,wBAAU,CAACC,GAAG,CAACH;QAE3C,IAAIC,eAAe;YACjB,OAAON,oBAAY,CAACC,IAAI,CAAC;gBACvBC,SAAS;gBACTO,MAAMH;gBACNI,QAAQ;YACV;QACF;QAEA,+BAA+B;QAC/B,MAAM,CACJC,oBACAC,iBACAC,iBACAC,uBACAC,aACD,GAAG,MAAMC,QAAQC,GAAG,CAAC;YACpBC;YACAC;YACAC;YACAC;YACAC;SACD;QAED,MAAMC,gBAAgB;YACpBC,SAAS;gBACPC,aAAad;gBACbe,UAAUd;gBACVe,UAAUd;gBACVe,gBAAgBd;YAClB;YACAe,QAAQd;YACRe,QAAQ,MAAMC;YACdC,WAAW,IAAIC,OAAOC,WAAW;QACnC;QAEA,wBAAwB;QACxB,MAAM3B,wBAAU,CAAC4B,GAAG,CAAC9B,UAAUkB,eAAe;QAE9Ca,cAAM,CAACC,IAAI,CAACC,gBAAQ,CAACC,IAAI,EAAE,+BAA+B;YACxDxC,QAAQH,WAAWG,MAAM;YACzByC,cAAcC,OAAOC,IAAI,CAACnB,cAAcC,OAAO,EAAEmB,MAAM;YACvDC,aAAa7B,aAAa4B,MAAM;QAClC,GAAGE,mBAAW,CAACC,MAAM;QAErB,OAAO9C,oBAAY,CAACC,IAAI,CAAC;YACvBC,SAAS;YACTO,MAAMc;QACR;IAEF,EAAE,OAAOpB,OAAO;QACdiC,cAAM,CAACjC,KAAK,CAACmC,gBAAQ,CAACS,KAAK,EAAE,mCAAmC;YAC9D5C,OAAOA,iBAAiB6C,QAAQ7C,MAAM8C,OAAO,GAAG;QAClD,GAAGJ,mBAAW,CAACC,MAAM;QAErB,OAAO9C,oBAAY,CAACC,IAAI,CAAC;YACvBC,SAAS;YACTC,OAAO;QACT,GAAG;YAAEC,QAAQ;QAAI;IACnB;AACF;AAEA;;CAEC,GACD,eAAec;IACb,MAAMgC,WAAWC,IAAAA,2BAAiB,EAAC;IAEnC,IAAI,CAACD,UAAU;QACb,MAAM,IAAIF,MAAM;IAClB;IAEA,4CAA4C;IAC5C,MAAMI,iBAAiB,IAAInB,KAAKA,KAAKoB,GAAG,KAAK,IAAI,KAAK,MAAMnB,WAAW;IAEvE,MAAM,EAAEzB,MAAMe,OAAO,EAAErB,KAAK,EAAE,GAAG,MAAM+C,SACpCI,IAAI,CAAC,sBACLC,MAAM,CAAC,0BACPC,EAAE,CAAC,QAAQ;QACV;QACA;QACA;QACA;KACD,EACAC,GAAG,CAAC,aAAaL,gBACjBM,KAAK,CAAC,aAAa;QAAEC,WAAW;IAAM;IAEzC,IAAIxD,OAAO;QACTiC,cAAM,CAACjC,KAAK,CAACmC,gBAAQ,CAACS,KAAK,EAAE,uCAAuC;YAAE5C,OAAOA,MAAM8C,OAAO;QAAC,GAAGJ,mBAAW,CAACC,MAAM;QAChH,uCAAuC;QACvC,OAAO;YACLc,cAAc;YACdC,WAAW;YACXC,YAAY;YACZC,QAAQ;QACV;IACF;IAEA,qBAAqB;IACrB,MAAMC,sBAAsBxC,SAASyC,OAAOC,CAAAA,IAAKA,EAAEC,IAAI,KAAK,+BAA+B,EAAE;IAC7F,MAAMC,mBAAmB5C,SAASyC,OAAOC,CAAAA,IAAKA,EAAEC,IAAI,KAAK,iCAAiC,EAAE;IAC5F,MAAME,oBAAoB7C,SAASyC,OAAOC,CAAAA,IAAKA,EAAEC,IAAI,KAAK,iCAAiC,EAAE;IAC7F,MAAMG,gBAAgB9C,SAASyC,OAAOC,CAAAA,IAAKA,EAAEC,IAAI,KAAK,gCAAgC,EAAE;IAExF,OAAO;QACLP,cAAcI,oBAAoBrB,MAAM,GAAG,IACvCqB,oBAAoBO,MAAM,CAAC,CAACC,KAAKN,IAAMM,MAAMN,EAAEO,KAAK,EAAE,KAAKT,oBAAoBrB,MAAM,GACrF;QACJkB,WAAWO,iBAAiBzB,MAAM,GAAG,IACjCyB,iBAAiBG,MAAM,CAAC,CAACC,KAAKN,IAAMM,MAAMN,EAAEO,KAAK,EAAE,KAAKL,iBAAiBzB,MAAM,GAC/E;QACJmB,YAAYO,kBAAkB1B,MAAM,GAAG,IACnC0B,kBAAkBE,MAAM,CAAC,CAACC,KAAKN,IAAMM,MAAMN,EAAEO,KAAK,EAAE,KAAKJ,kBAAkB1B,MAAM,GACjF;QACJoB,QAAQO,cAAc3B,MAAM,GAAG,IAC3B2B,aAAa,CAAC,EAAE,CAACG,KAAK,GACtB;IACN;AACF;AAEA;;CAEC,GACD,eAAetD;IACb,MAAM+B,WAAWC,IAAAA,2BAAiB,EAAC;IAEnC,IAAI,CAACD,UAAU;QACb,MAAM,IAAIF,MAAM;IAClB;IAEA,MAAM0B,QAAQ,IAAIzC,OAAOC,WAAW,GAAGyC,KAAK,CAAC,IAAI,CAAC,EAAE;IAEpD,0BAA0B;IAC1B,MAAM,EAAElE,MAAMmE,MAAM,EAAEzE,OAAO0E,WAAW,EAAE,GAAG,MAAM3B,SAChDI,IAAI,CAAC,UACLC,MAAM,CAAC,oCACPE,GAAG,CAAC,cAAc,GAAGiB,MAAM,UAAU,CAAC,EACtCI,EAAE,CAAC,cAAc,GAAGJ,MAAM,UAAU,CAAC;IAExC,IAAIG,aAAa;QACfzC,cAAM,CAACjC,KAAK,CAACmC,gBAAQ,CAACS,KAAK,EAAE,oCAAoC;YAAE5C,OAAO0E,YAAY5B,OAAO;QAAC,GAAGJ,mBAAW,CAACC,MAAM;IACrH;IAEA,MAAMiC,kBAAkBH,QAAQX,OAAOe,CAAAA,IAAKA,EAAE5E,MAAM,KAAK,gBAAgB,EAAE;IAC3E,MAAM6E,eAAeF,gBAAgBR,MAAM,CAAC,CAACC,KAAKd,QAAUc,MAAOd,CAAAA,MAAMwB,YAAY,IAAI,CAAA,GAAI;IAE7F,4EAA4E;IAC5E,OAAO;QACLD;QACAE,aAAaJ,gBAAgBpC,MAAM;QACnCyC,gBAAgB;QAChBC,aAAaC,KAAKC,KAAK,CAACD,KAAKE,MAAM,KAAK,MAAM,GAAG,WAAW;IAC9D;AACF;AAEA;;CAEC,GACD,eAAepE;IACb,MAAM8B,WAAWC,IAAAA,2BAAiB,EAAC;IAEnC,IAAI,CAACD,UAAU;QACb,MAAM,IAAIF,MAAM;IAClB;IAEA,MAAMyC,aAAa,IAAIxD,KAAKA,KAAKoB,GAAG,KAAK,KAAK,KAAK,MAAMnB,WAAW;IAEpE,4CAA4C;IAC5C,MAAM,EAAEzB,MAAMiF,cAAc,EAAEvF,KAAK,EAAE,GAAG,MAAM+C,SAC3CI,IAAI,CAAC,gBACLC,MAAM,CAAC,8BACPoC,EAAE,CAAC,YAAY,sBACflC,GAAG,CAAC,aAAagC;IAEpB,IAAItF,OAAO;QACTiC,cAAM,CAACjC,KAAK,CAACmC,gBAAQ,CAACS,KAAK,EAAE,oCAAoC;YAAE5C,OAAOA,MAAM8C,OAAO;QAAC,GAAGJ,mBAAW,CAACC,MAAM;IAC/G;IAEA,MAAM8C,SAASF,kBAAkB,EAAE;IACnC,MAAMG,kBAAkBD,OAAO3B,MAAM,CAAC6B,CAAAA,IAAKA,EAAEC,MAAM,KAAK,WAAWpD,MAAM;IACzE,MAAMqD,eAAeJ,OAAO3B,MAAM,CAAC6B,CAAAA,IAAKA,EAAEC,MAAM,KAAK,WAAWpD,MAAM;IAEtE,6BAA6B;IAC7B,IAAIsD,YAAoD;IACxD,IAAIL,OAAOjD,MAAM,GAAG,IAAI;QAACsD,YAAY;IAAW,OAC3C,IAAIL,OAAOjD,MAAM,GAAG,GAAG;QAACsD,YAAY;IAAO,OAC3C,IAAIL,OAAOjD,MAAM,GAAG,GAAG;QAACsD,YAAY;IAAS;IAElD,OAAO;QACLP,gBAAgBE,OAAOjD,MAAM;QAC7BkD;QACAG;QACAC;IACF;AACF;AAEA;;CAEC,GACD,eAAe5E;IACb,6BAA6B;IAC7B,MAAM6E,uBAAuBC,0CAA0B,CAACC,QAAQ;IAChE,MAAMC,uBAAuBC,0CAA0B,CAACF,QAAQ;IAChE,MAAMG,sBAAsBC,wCAAwB,CAACJ,QAAQ;IAE7D,6CAA6C;IAC7C,IAAIK,gBAAiD;IACrD,IAAI;QAACP;QAAsBG;QAAsBE;KAAoB,CAACG,QAAQ,CAAC,SAAS;QACtFD,gBAAgB;IAClB,OAAO,IAAI;QAACP;QAAsBG;QAAsBE;KAAoB,CAACG,QAAQ,CAAC,cAAc;QAClGD,gBAAgB;IAClB;IAEA,gEAAgE;IAChE,OAAO;QACLE,sBAAsBF;QACtBG,cAAc;QACdC,qBAAqBvB,KAAKC,KAAK,CAACD,KAAKE,MAAM,KAAK,MAAM;QACtDsB,aAAa,KAAK,MAAM;IAC1B;AACF;AAEA;;CAEC,GACD,eAAexF;IACb,MAAM4B,WAAWC,IAAAA,2BAAiB,EAAC;IAEnC,IAAI,CAACD,UAAU;QACb,OAAO,EAAE;IACX;IAEA,MAAM,EAAEzC,MAAMoB,MAAM,EAAE1B,KAAK,EAAE,GAAG,MAAM+C,SACnCI,IAAI,CAAC,qBACLC,MAAM,CAAC,KACPwD,EAAE,CAAC,eAAe,MAClBrD,KAAK,CAAC,gBAAgB;QAAEC,WAAW;IAAM,GACzCqD,KAAK,CAAC;IAET,IAAI7G,OAAO;QACTiC,cAAM,CAACjC,KAAK,CAACmC,gBAAQ,CAACS,KAAK,EAAE,iCAAiC;YAAE5C,OAAOA,MAAM8C,OAAO;QAAC,GAAGJ,mBAAW,CAACC,MAAM;QAC1G,OAAO,EAAE;IACX;IAEA,OAAO,AAACjB,CAAAA,UAAU,EAAE,AAAD,EAAGoF,GAAG,CAACC,CAAAA,QAAU,CAAA;YAClCC,IAAID,MAAMC,EAAE;YACZC,OAAOF,MAAME,KAAK;YAClBnE,SAASiE,MAAMjE,OAAO;YACtBjB,WAAWkF,MAAMG,YAAY;YAC7BC,QAAQJ,MAAMK,WAAW;YACzB9C,OAAOyC,MAAMzC,KAAK;YAClB+C,WAAWN,MAAMM,SAAS;QAC5B,CAAA;AACF;AAEA;;CAEC,GACD,eAAezF;IACb,MAAMmB,WAAWC,IAAAA,2BAAiB,EAAC;IAEnC,IAAI,CAACD,UAAU;QACb,OAAO,CAAC;IACV;IAEA,MAAMuC,aAAa,IAAIxD,KAAKA,KAAKoB,GAAG,KAAK,KAAK,KAAK,MAAMnB,WAAW;IAEpE,MAAM,EAAEzB,MAAMqB,MAAM,EAAE3B,KAAK,EAAE,GAAG,MAAM+C,SACnCI,IAAI,CAAC,sBACLC,MAAM,CAAC,0BACPC,EAAE,CAAC,QAAQ;QACV;QACA;QACA;QACA;KACD,EACAC,GAAG,CAAC,aAAagC,YACjB/B,KAAK,CAAC,aAAa;QAAEC,WAAW;IAAK;IAExC,IAAIxD,OAAO;QACTiC,cAAM,CAACjC,KAAK,CAACmC,gBAAQ,CAACS,KAAK,EAAE,iCAAiC;YAAE5C,OAAOA,MAAM8C,OAAO;QAAC,GAAGJ,mBAAW,CAACC,MAAM;QAC1G,OAAO,CAAC;IACV;IAEA,gCAAgC;IAChC,MAAM2E,gBAA6E,CAAC;IAEnF3F,CAAAA,UAAU,EAAE,AAAD,EAAG4F,OAAO,CAACC,CAAAA;QACrB,IAAI,CAACF,aAAa,CAACE,MAAMxD,IAAI,CAAC,EAAE;YAC9BsD,aAAa,CAACE,MAAMxD,IAAI,CAAC,GAAG,EAAE;QAChC;QACAsD,aAAa,CAACE,MAAMxD,IAAI,CAAC,CAACyD,IAAI,CAAC;YAC7B5F,WAAW2F,MAAM3F,SAAS;YAC1ByC,OAAOkD,MAAMlD,KAAK;QACpB;IACF;IAEA,OAAOgD;AACT"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "793554f805dd76f79740fec05f51de6d76b3dc39"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_22krm8ym0f = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_22krm8ym0f();
cov_22krm8ym0f().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_22krm8ym0f().f[0]++;
  cov_22krm8ym0f().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_22krm8ym0f().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_22krm8ym0f().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_22krm8ym0f().f[1]++;
    cov_22krm8ym0f().s[4]++;
    return GET;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_22krm8ym0f().f[2]++;
    cov_22krm8ym0f().s[5]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_22krm8ym0f().s[6]++, require("next/server"));
const _adminauth =
/* istanbul ignore next */
(cov_22krm8ym0f().s[7]++, require("../../../../../lib/auth/admin-auth"));
const _circuitbreaker =
/* istanbul ignore next */
(cov_22krm8ym0f().s[8]++, require("../../../../../lib/integrations/mercadopago/circuit-breaker"));
const _supabase =
/* istanbul ignore next */
(cov_22krm8ym0f().s[9]++, require("../../../../../lib/integrations/supabase"));
const _cachemanager =
/* istanbul ignore next */
(cov_22krm8ym0f().s[10]++, require("../../../../../lib/cache-manager"));
const _logger =
/* istanbul ignore next */
(cov_22krm8ym0f().s[11]++, require("../../../../../lib/enterprise/logger"));
const runtime =
/* istanbul ignore next */
(cov_22krm8ym0f().s[12]++, 'nodejs');
async function GET(request) {
  /* istanbul ignore next */
  cov_22krm8ym0f().f[3]++;
  cov_22krm8ym0f().s[13]++;
  try {
    // Verificar autenticaciÃ³n de admin
    const authResult =
    /* istanbul ignore next */
    (cov_22krm8ym0f().s[14]++, await (0, _adminauth.getAuthenticatedAdmin)(request));
    /* istanbul ignore next */
    cov_22krm8ym0f().s[15]++;
    if (
    /* istanbul ignore next */
    (cov_22krm8ym0f().b[1][0]++, !authResult.isAdmin) ||
    /* istanbul ignore next */
    (cov_22krm8ym0f().b[1][1]++, !authResult.userId)) {
      /* istanbul ignore next */
      cov_22krm8ym0f().b[0][0]++;
      cov_22krm8ym0f().s[16]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Acceso no autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_22krm8ym0f().b[0][1]++;
    }
    // Usar cache para evitar sobrecarga
    const cacheKey =
    /* istanbul ignore next */
    (cov_22krm8ym0f().s[17]++, 'dashboard:metrics:realtime');
    const cachedMetrics =
    /* istanbul ignore next */
    (cov_22krm8ym0f().s[18]++, await _cachemanager.CacheUtils.get(cacheKey));
    /* istanbul ignore next */
    cov_22krm8ym0f().s[19]++;
    if (cachedMetrics) {
      /* istanbul ignore next */
      cov_22krm8ym0f().b[2][0]++;
      cov_22krm8ym0f().s[20]++;
      return _server.NextResponse.json({
        success: true,
        data: cachedMetrics,
        cached: true
      });
    } else
    /* istanbul ignore next */
    {
      cov_22krm8ym0f().b[2][1]++;
    }
    // Obtener mÃ©tricas en paralelo
    const [performanceMetrics, businessMetrics, securityMetrics, infrastructureMetrics, activeAlerts] =
    /* istanbul ignore next */
    (cov_22krm8ym0f().s[21]++, await Promise.all([getPerformanceMetrics(), getBusinessMetrics(), getSecurityMetrics(), getInfrastructureMetrics(), getActiveAlerts()]));
    const dashboardData =
    /* istanbul ignore next */
    (cov_22krm8ym0f().s[22]++, {
      metrics: {
        performance: performanceMetrics,
        business: businessMetrics,
        security: securityMetrics,
        infrastructure: infrastructureMetrics
      },
      alerts: activeAlerts,
      trends: await getMetricTrends(),
      timestamp: new Date().toISOString()
    });
    // Cache por 30 segundos
    /* istanbul ignore next */
    cov_22krm8ym0f().s[23]++;
    await _cachemanager.CacheUtils.set(cacheKey, dashboardData, 30);
    /* istanbul ignore next */
    cov_22krm8ym0f().s[24]++;
    _logger.logger.info(_logger.LogLevel.INFO, 'Dashboard metrics retrieved', {
      userId: authResult.userId,
      metricsCount: Object.keys(dashboardData.metrics).length,
      alertsCount: activeAlerts.length
    }, _logger.LogCategory.SYSTEM);
    /* istanbul ignore next */
    cov_22krm8ym0f().s[25]++;
    return _server.NextResponse.json({
      success: true,
      data: dashboardData
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_22krm8ym0f().s[26]++;
    _logger.logger.error(_logger.LogLevel.ERROR, 'Failed to get dashboard metrics', {
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_22krm8ym0f().b[3][0]++, error.message) :
      /* istanbul ignore next */
      (cov_22krm8ym0f().b[3][1]++, 'Unknown error')
    }, _logger.LogCategory.SYSTEM);
    /* istanbul ignore next */
    cov_22krm8ym0f().s[27]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
/**
 * Obtiene mÃ©tricas de performance
 */
async function getPerformanceMetrics() {
  /* istanbul ignore next */
  cov_22krm8ym0f().f[4]++;
  const supabase =
  /* istanbul ignore next */
  (cov_22krm8ym0f().s[28]++, (0, _supabase.getSupabaseClient)(true));
  /* istanbul ignore next */
  cov_22krm8ym0f().s[29]++;
  if (!supabase) {
    /* istanbul ignore next */
    cov_22krm8ym0f().b[4][0]++;
    cov_22krm8ym0f().s[30]++;
    throw new Error('Supabase client not available');
  } else
  /* istanbul ignore next */
  {
    cov_22krm8ym0f().b[4][1]++;
  }
  // Obtener mÃ©tricas de los Ãºltimos 5 minutos
  const fiveMinutesAgo =
  /* istanbul ignore next */
  (cov_22krm8ym0f().s[31]++, new Date(Date.now() - 5 * 60 * 1000).toISOString());
  const {
    data: metrics,
    error
  } =
  /* istanbul ignore next */
  (cov_22krm8ym0f().s[32]++, await supabase.from('enterprise_metrics').select('name, value, timestamp').in('name', ['performance.api.duration', 'performance.api.error_rate', 'performance.api.throughput', 'performance.system.uptime']).gte('timestamp', fiveMinutesAgo).order('timestamp', {
    ascending: false
  }));
  /* istanbul ignore next */
  cov_22krm8ym0f().s[33]++;
  if (error) {
    /* istanbul ignore next */
    cov_22krm8ym0f().b[5][0]++;
    cov_22krm8ym0f().s[34]++;
    _logger.logger.error(_logger.LogLevel.ERROR, 'Failed to fetch performance metrics', {
      error: error.message
    }, _logger.LogCategory.SYSTEM);
    // Valores por defecto en caso de error
    /* istanbul ignore next */
    cov_22krm8ym0f().s[35]++;
    return {
      responseTime: 0,
      errorRate: 0,
      throughput: 0,
      uptime: 0.99
    };
  } else
  /* istanbul ignore next */
  {
    cov_22krm8ym0f().b[5][1]++;
  }
  // Calcular promedios
  const responseTimeMetrics =
  /* istanbul ignore next */
  (cov_22krm8ym0f().s[36]++,
  /* istanbul ignore next */
  (cov_22krm8ym0f().b[6][0]++, metrics?.filter(m => {
    /* istanbul ignore next */
    cov_22krm8ym0f().f[5]++;
    cov_22krm8ym0f().s[37]++;
    return m.name === 'performance.api.duration';
  })) ||
  /* istanbul ignore next */
  (cov_22krm8ym0f().b[6][1]++, []));
  const errorRateMetrics =
  /* istanbul ignore next */
  (cov_22krm8ym0f().s[38]++,
  /* istanbul ignore next */
  (cov_22krm8ym0f().b[7][0]++, metrics?.filter(m => {
    /* istanbul ignore next */
    cov_22krm8ym0f().f[6]++;
    cov_22krm8ym0f().s[39]++;
    return m.name === 'performance.api.error_rate';
  })) ||
  /* istanbul ignore next */
  (cov_22krm8ym0f().b[7][1]++, []));
  const throughputMetrics =
  /* istanbul ignore next */
  (cov_22krm8ym0f().s[40]++,
  /* istanbul ignore next */
  (cov_22krm8ym0f().b[8][0]++, metrics?.filter(m => {
    /* istanbul ignore next */
    cov_22krm8ym0f().f[7]++;
    cov_22krm8ym0f().s[41]++;
    return m.name === 'performance.api.throughput';
  })) ||
  /* istanbul ignore next */
  (cov_22krm8ym0f().b[8][1]++, []));
  const uptimeMetrics =
  /* istanbul ignore next */
  (cov_22krm8ym0f().s[42]++,
  /* istanbul ignore next */
  (cov_22krm8ym0f().b[9][0]++, metrics?.filter(m => {
    /* istanbul ignore next */
    cov_22krm8ym0f().f[8]++;
    cov_22krm8ym0f().s[43]++;
    return m.name === 'performance.system.uptime';
  })) ||
  /* istanbul ignore next */
  (cov_22krm8ym0f().b[9][1]++, []));
  /* istanbul ignore next */
  cov_22krm8ym0f().s[44]++;
  return {
    responseTime: responseTimeMetrics.length > 0 ?
    /* istanbul ignore next */
    (cov_22krm8ym0f().b[10][0]++, responseTimeMetrics.reduce((sum, m) => {
      /* istanbul ignore next */
      cov_22krm8ym0f().f[9]++;
      cov_22krm8ym0f().s[45]++;
      return sum + m.value;
    }, 0) / responseTimeMetrics.length) :
    /* istanbul ignore next */
    (cov_22krm8ym0f().b[10][1]++, 285),
    errorRate: errorRateMetrics.length > 0 ?
    /* istanbul ignore next */
    (cov_22krm8ym0f().b[11][0]++, errorRateMetrics.reduce((sum, m) => {
      /* istanbul ignore next */
      cov_22krm8ym0f().f[10]++;
      cov_22krm8ym0f().s[46]++;
      return sum + m.value;
    }, 0) / errorRateMetrics.length) :
    /* istanbul ignore next */
    (cov_22krm8ym0f().b[11][1]++, 0.004),
    throughput: throughputMetrics.length > 0 ?
    /* istanbul ignore next */
    (cov_22krm8ym0f().b[12][0]++, throughputMetrics.reduce((sum, m) => {
      /* istanbul ignore next */
      cov_22krm8ym0f().f[11]++;
      cov_22krm8ym0f().s[47]++;
      return sum + m.value;
    }, 0) / throughputMetrics.length) :
    /* istanbul ignore next */
    (cov_22krm8ym0f().b[12][1]++, 120),
    uptime: uptimeMetrics.length > 0 ?
    /* istanbul ignore next */
    (cov_22krm8ym0f().b[13][0]++, uptimeMetrics[0].value) :
    /* istanbul ignore next */
    (cov_22krm8ym0f().b[13][1]++, 0.9997)
  };
}
/**
 * Obtiene mÃ©tricas de negocio
 */
async function getBusinessMetrics() {
  /* istanbul ignore next */
  cov_22krm8ym0f().f[12]++;
  const supabase =
  /* istanbul ignore next */
  (cov_22krm8ym0f().s[48]++, (0, _supabase.getSupabaseClient)(true));
  /* istanbul ignore next */
  cov_22krm8ym0f().s[49]++;
  if (!supabase) {
    /* istanbul ignore next */
    cov_22krm8ym0f().b[14][0]++;
    cov_22krm8ym0f().s[50]++;
    throw new Error('Supabase client not available');
  } else
  /* istanbul ignore next */
  {
    cov_22krm8ym0f().b[14][1]++;
  }
  const today =
  /* istanbul ignore next */
  (cov_22krm8ym0f().s[51]++, new Date().toISOString().split('T')[0]);
  // Obtener Ã³rdenes del dÃ­a
  const {
    data: orders,
    error: ordersError
  } =
  /* istanbul ignore next */
  (cov_22krm8ym0f().s[52]++, await supabase.from('orders').select('total_amount, status, created_at').gte('created_at', `${today}T00:00:00Z`).lt('created_at', `${today}T23:59:59Z`));
  /* istanbul ignore next */
  cov_22krm8ym0f().s[53]++;
  if (ordersError) {
    /* istanbul ignore next */
    cov_22krm8ym0f().b[15][0]++;
    cov_22krm8ym0f().s[54]++;
    _logger.logger.error(_logger.LogLevel.ERROR, 'Failed to fetch business metrics', {
      error: ordersError.message
    }, _logger.LogCategory.SYSTEM);
  } else
  /* istanbul ignore next */
  {
    cov_22krm8ym0f().b[15][1]++;
  }
  const completedOrders =
  /* istanbul ignore next */
  (cov_22krm8ym0f().s[55]++,
  /* istanbul ignore next */
  (cov_22krm8ym0f().b[16][0]++, orders?.filter(o => {
    /* istanbul ignore next */
    cov_22krm8ym0f().f[13]++;
    cov_22krm8ym0f().s[56]++;
    return o.status === 'completed';
  })) ||
  /* istanbul ignore next */
  (cov_22krm8ym0f().b[16][1]++, []));
  const totalRevenue =
  /* istanbul ignore next */
  (cov_22krm8ym0f().s[57]++, completedOrders.reduce((sum, order) => {
    /* istanbul ignore next */
    cov_22krm8ym0f().f[14]++;
    cov_22krm8ym0f().s[58]++;
    return sum + (
    /* istanbul ignore next */
    (cov_22krm8ym0f().b[17][0]++, order.total_amount) ||
    /* istanbul ignore next */
    (cov_22krm8ym0f().b[17][1]++, 0));
  }, 0));
  // MÃ©tricas simuladas para demo (en producciÃ³n vendrÃ­an de analytics reales)
  /* istanbul ignore next */
  cov_22krm8ym0f().s[59]++;
  return {
    totalRevenue,
    ordersToday: completedOrders.length,
    conversionRate: 0.034,
    activeUsers: Math.floor(Math.random() * 50) + 20 // Simulado
  };
}
/**
 * Obtiene mÃ©tricas de seguridad
 */
async function getSecurityMetrics() {
  /* istanbul ignore next */
  cov_22krm8ym0f().f[15]++;
  const supabase =
  /* istanbul ignore next */
  (cov_22krm8ym0f().s[60]++, (0, _supabase.getSupabaseClient)(true));
  /* istanbul ignore next */
  cov_22krm8ym0f().s[61]++;
  if (!supabase) {
    /* istanbul ignore next */
    cov_22krm8ym0f().b[18][0]++;
    cov_22krm8ym0f().s[62]++;
    throw new Error('Supabase client not available');
  } else
  /* istanbul ignore next */
  {
    cov_22krm8ym0f().b[18][1]++;
  }
  const oneHourAgo =
  /* istanbul ignore next */
  (cov_22krm8ym0f().s[63]++, new Date(Date.now() - 60 * 60 * 1000).toISOString());
  // Obtener eventos de auditorÃ­a de seguridad
  const {
    data: securityEvents,
    error
  } =
  /* istanbul ignore next */
  (cov_22krm8ym0f().s[64]++, await supabase.from('audit_events').select('category, severity, result').eq('category', 'security_violation').gte('timestamp', oneHourAgo));
  /* istanbul ignore next */
  cov_22krm8ym0f().s[65]++;
  if (error) {
    /* istanbul ignore next */
    cov_22krm8ym0f().b[19][0]++;
    cov_22krm8ym0f().s[66]++;
    _logger.logger.error(_logger.LogLevel.ERROR, 'Failed to fetch security metrics', {
      error: error.message
    }, _logger.LogCategory.SYSTEM);
  } else
  /* istanbul ignore next */
  {
    cov_22krm8ym0f().b[19][1]++;
  }
  const events =
  /* istanbul ignore next */
  (cov_22krm8ym0f().s[67]++,
  /* istanbul ignore next */
  (cov_22krm8ym0f().b[20][0]++, securityEvents) ||
  /* istanbul ignore next */
  (cov_22krm8ym0f().b[20][1]++, []));
  const blockedRequests =
  /* istanbul ignore next */
  (cov_22krm8ym0f().s[68]++, events.filter(e => {
    /* istanbul ignore next */
    cov_22krm8ym0f().f[16]++;
    cov_22krm8ym0f().s[69]++;
    return e.result === 'blocked';
  }).length);
  const authFailures =
  /* istanbul ignore next */
  (cov_22krm8ym0f().s[70]++, events.filter(e => {
    /* istanbul ignore next */
    cov_22krm8ym0f().f[17]++;
    cov_22krm8ym0f().s[71]++;
    return e.result === 'failure';
  }).length);
  // Determinar nivel de riesgo
  let riskLevel =
  /* istanbul ignore next */
  (cov_22krm8ym0f().s[72]++, 'low');
  /* istanbul ignore next */
  cov_22krm8ym0f().s[73]++;
  if (events.length > 10) {
    /* istanbul ignore next */
    cov_22krm8ym0f().b[21][0]++;
    cov_22krm8ym0f().s[74]++;
    riskLevel = 'critical';
  } else {
    /* istanbul ignore next */
    cov_22krm8ym0f().b[21][1]++;
    cov_22krm8ym0f().s[75]++;
    if (events.length > 5) {
      /* istanbul ignore next */
      cov_22krm8ym0f().b[22][0]++;
      cov_22krm8ym0f().s[76]++;
      riskLevel = 'high';
    } else {
      /* istanbul ignore next */
      cov_22krm8ym0f().b[22][1]++;
      cov_22krm8ym0f().s[77]++;
      if (events.length > 2) {
        /* istanbul ignore next */
        cov_22krm8ym0f().b[23][0]++;
        cov_22krm8ym0f().s[78]++;
        riskLevel = 'medium';
      } else
      /* istanbul ignore next */
      {
        cov_22krm8ym0f().b[23][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_22krm8ym0f().s[79]++;
  return {
    securityEvents: events.length,
    blockedRequests,
    authFailures,
    riskLevel
  };
}
/**
 * Obtiene mÃ©tricas de infraestructura
 */
async function getInfrastructureMetrics() {
  /* istanbul ignore next */
  cov_22krm8ym0f().f[18]++;
  // Estado de circuit breakers
  const criticalBreakerState =
  /* istanbul ignore next */
  (cov_22krm8ym0f().s[80]++, _circuitbreaker.mercadoPagoCriticalBreaker.getState());
  const standardBreakerState =
  /* istanbul ignore next */
  (cov_22krm8ym0f().s[81]++, _circuitbreaker.mercadoPagoStandardBreaker.getState());
  const webhookBreakerState =
  /* istanbul ignore next */
  (cov_22krm8ym0f().s[82]++, _circuitbreaker.webhookProcessingBreaker.getState());
  // Determinar estado general (el mÃ¡s crÃ­tico)
  let overallStatus =
  /* istanbul ignore next */
  (cov_22krm8ym0f().s[83]++, 'closed');
  /* istanbul ignore next */
  cov_22krm8ym0f().s[84]++;
  if ([criticalBreakerState, standardBreakerState, webhookBreakerState].includes('open')) {
    /* istanbul ignore next */
    cov_22krm8ym0f().b[24][0]++;
    cov_22krm8ym0f().s[85]++;
    overallStatus = 'open';
  } else {
    /* istanbul ignore next */
    cov_22krm8ym0f().b[24][1]++;
    cov_22krm8ym0f().s[86]++;
    if ([criticalBreakerState, standardBreakerState, webhookBreakerState].includes('half-open')) {
      /* istanbul ignore next */
      cov_22krm8ym0f().b[25][0]++;
      cov_22krm8ym0f().s[87]++;
      overallStatus = 'half-open';
    } else
    /* istanbul ignore next */
    {
      cov_22krm8ym0f().b[25][1]++;
    }
  }
  // MÃ©tricas simuladas (en producciÃ³n vendrÃ­an de monitoreo real)
  /* istanbul ignore next */
  cov_22krm8ym0f().s[88]++;
  return {
    circuitBreakerStatus: overallStatus,
    cacheHitRate: 0.87,
    databaseConnections: Math.floor(Math.random() * 10) + 5,
    memoryUsage: 0.65 // 65%
  };
}
/**
 * Obtiene alertas activas
 */
async function getActiveAlerts() {
  /* istanbul ignore next */
  cov_22krm8ym0f().f[19]++;
  const supabase =
  /* istanbul ignore next */
  (cov_22krm8ym0f().s[89]++, (0, _supabase.getSupabaseClient)(true));
  /* istanbul ignore next */
  cov_22krm8ym0f().s[90]++;
  if (!supabase) {
    /* istanbul ignore next */
    cov_22krm8ym0f().b[26][0]++;
    cov_22krm8ym0f().s[91]++;
    return [];
  } else
  /* istanbul ignore next */
  {
    cov_22krm8ym0f().b[26][1]++;
  }
  const {
    data: alerts,
    error
  } =
  /* istanbul ignore next */
  (cov_22krm8ym0f().s[92]++, await supabase.from('enterprise_alerts').select('*').is('resolved_at', null).order('triggered_at', {
    ascending: false
  }).limit(10));
  /* istanbul ignore next */
  cov_22krm8ym0f().s[93]++;
  if (error) {
    /* istanbul ignore next */
    cov_22krm8ym0f().b[27][0]++;
    cov_22krm8ym0f().s[94]++;
    _logger.logger.error(_logger.LogLevel.ERROR, 'Failed to fetch active alerts', {
      error: error.message
    }, _logger.LogCategory.SYSTEM);
    /* istanbul ignore next */
    cov_22krm8ym0f().s[95]++;
    return [];
  } else
  /* istanbul ignore next */
  {
    cov_22krm8ym0f().b[27][1]++;
  }
  cov_22krm8ym0f().s[96]++;
  return (
  /* istanbul ignore next */
  (cov_22krm8ym0f().b[28][0]++, alerts) ||
  /* istanbul ignore next */
  (cov_22krm8ym0f().b[28][1]++, [])).map(alert => {
    /* istanbul ignore next */
    cov_22krm8ym0f().f[20]++;
    cov_22krm8ym0f().s[97]++;
    return {
      id: alert.id,
      level: alert.level,
      message: alert.message,
      timestamp: alert.triggered_at,
      metric: alert.metric_name,
      value: alert.value,
      threshold: alert.threshold
    };
  });
}
/**
 * Obtiene tendencias de mÃ©tricas
 */
async function getMetricTrends() {
  /* istanbul ignore next */
  cov_22krm8ym0f().f[21]++;
  const supabase =
  /* istanbul ignore next */
  (cov_22krm8ym0f().s[98]++, (0, _supabase.getSupabaseClient)(true));
  /* istanbul ignore next */
  cov_22krm8ym0f().s[99]++;
  if (!supabase) {
    /* istanbul ignore next */
    cov_22krm8ym0f().b[29][0]++;
    cov_22krm8ym0f().s[100]++;
    return {};
  } else
  /* istanbul ignore next */
  {
    cov_22krm8ym0f().b[29][1]++;
  }
  const oneHourAgo =
  /* istanbul ignore next */
  (cov_22krm8ym0f().s[101]++, new Date(Date.now() - 60 * 60 * 1000).toISOString());
  const {
    data: trends,
    error
  } =
  /* istanbul ignore next */
  (cov_22krm8ym0f().s[102]++, await supabase.from('enterprise_metrics').select('name, value, timestamp').in('name', ['performance.api.duration', 'performance.api.error_rate', 'business.revenue', 'security.events']).gte('timestamp', oneHourAgo).order('timestamp', {
    ascending: true
  }));
  /* istanbul ignore next */
  cov_22krm8ym0f().s[103]++;
  if (error) {
    /* istanbul ignore next */
    cov_22krm8ym0f().b[30][0]++;
    cov_22krm8ym0f().s[104]++;
    _logger.logger.error(_logger.LogLevel.ERROR, 'Failed to fetch metric trends', {
      error: error.message
    }, _logger.LogCategory.SYSTEM);
    /* istanbul ignore next */
    cov_22krm8ym0f().s[105]++;
    return {};
  } else
  /* istanbul ignore next */
  {
    cov_22krm8ym0f().b[30][1]++;
  }
  // Agrupar por nombre de mÃ©trica
  const groupedTrends =
  /* istanbul ignore next */
  (cov_22krm8ym0f().s[106]++, {});
  /* istanbul ignore next */
  cov_22krm8ym0f().s[107]++;
  (
  /* istanbul ignore next */
  (cov_22krm8ym0f().b[31][0]++, trends) ||
  /* istanbul ignore next */
  (cov_22krm8ym0f().b[31][1]++, [])).forEach(trend => {
    /* istanbul ignore next */
    cov_22krm8ym0f().f[22]++;
    cov_22krm8ym0f().s[108]++;
    if (!groupedTrends[trend.name]) {
      /* istanbul ignore next */
      cov_22krm8ym0f().b[32][0]++;
      cov_22krm8ym0f().s[109]++;
      groupedTrends[trend.name] = [];
    } else
    /* istanbul ignore next */
    {
      cov_22krm8ym0f().b[32][1]++;
    }
    cov_22krm8ym0f().s[110]++;
    groupedTrends[trend.name].push({
      timestamp: trend.timestamp,
      value: trend.value
    });
  });
  /* istanbul ignore next */
  cov_22krm8ym0f().s[111]++;
  return groupedTrends;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,