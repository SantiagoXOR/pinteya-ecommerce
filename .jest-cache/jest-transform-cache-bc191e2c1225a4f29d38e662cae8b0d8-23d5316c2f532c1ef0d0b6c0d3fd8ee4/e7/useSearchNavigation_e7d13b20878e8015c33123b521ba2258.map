{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useSearchNavigation.ts"],"sourcesContent":["// ===================================\r\n// HOOK: useSearchNavigation - Navegación optimizada para búsquedas\r\n// ===================================\r\n\r\nimport { useCallback } from 'react';\r\nimport { useRouter, useSearchParams } from 'next/navigation';\r\n\r\nexport interface SearchNavigationOptions {\r\n  /** Preservar parámetros existentes */\r\n  preserveParams?: boolean;\r\n  /** Scroll al top después de navegar */\r\n  scrollToTop?: boolean;\r\n  /** Usar replace en lugar de push */\r\n  replace?: boolean;\r\n  /** Callback antes de navegar */\r\n  onBeforeNavigate?: (url: string) => void;\r\n  /** Callback después de navegar */\r\n  onAfterNavigate?: (url: string) => void;\r\n}\r\n\r\nexport function useSearchNavigation(options: SearchNavigationOptions = {}) {\r\n  const {\r\n    preserveParams = false,\r\n    scrollToTop = true,\r\n    replace = false,\r\n    onBeforeNavigate,\r\n    onAfterNavigate,\r\n  } = options;\r\n\r\n  const router = useRouter();\r\n  const searchParams = useSearchParams();\r\n\r\n  // ===================================\r\n  // NAVEGACIÓN A RESULTADOS DE BÚSQUEDA\r\n  // ===================================\r\n\r\n  const navigateToSearch = useCallback((\r\n    query: string,\r\n    category?: string,\r\n    additionalParams?: Record<string, string>\r\n  ) => {\r\n    if (!query.trim()) {return;}\r\n\r\n    // Construir URL de búsqueda\r\n    const params = new URLSearchParams();\r\n    \r\n    // Parámetro principal de búsqueda\r\n    params.set('q', query.trim());\r\n    \r\n    // Categoría si se especifica\r\n    if (category && category !== 'all') {\r\n      params.set('category', category);\r\n    }\r\n    \r\n    // Preservar parámetros existentes si está habilitado\r\n    if (preserveParams) {\r\n      searchParams.forEach((value, key) => {\r\n        if (key !== 'q' && key !== 'category') {\r\n          params.set(key, value);\r\n        }\r\n      });\r\n    }\r\n    \r\n    // Parámetros adicionales\r\n    if (additionalParams) {\r\n      Object.entries(additionalParams).forEach(([key, value]) => {\r\n        params.set(key, value);\r\n      });\r\n    }\r\n\r\n    const searchUrl = `/search?${params.toString()}`;\r\n    \r\n    // Callback antes de navegar\r\n    onBeforeNavigate?.(searchUrl);\r\n    \r\n    // Navegar\r\n    if (replace) {\r\n      router.replace(searchUrl);\r\n    } else {\r\n      router.push(searchUrl);\r\n    }\r\n    \r\n    // Scroll al top si está habilitado\r\n    if (scrollToTop) {\r\n      setTimeout(() => {\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n      }, 100);\r\n    }\r\n    \r\n    // Callback después de navegar\r\n    onAfterNavigate?.(searchUrl);\r\n    \r\n  }, [router, searchParams, preserveParams, replace, scrollToTop, onBeforeNavigate, onAfterNavigate]);\r\n\r\n  // ===================================\r\n  // NAVEGACIÓN A PRODUCTO\r\n  // ===================================\r\n\r\n  const navigateToProduct = useCallback((productId: string, productSlug?: string) => {\r\n    const productUrl = productSlug \r\n      ? `/products/${productSlug}` \r\n      : `/products/${productId}`;\r\n    \r\n    onBeforeNavigate?.(productUrl);\r\n    router.push(productUrl);\r\n    onAfterNavigate?.(productUrl);\r\n    \r\n  }, [router, onBeforeNavigate, onAfterNavigate]);\r\n\r\n  // ===================================\r\n  // NAVEGACIÓN A CATEGORÍA\r\n  // ===================================\r\n\r\n  const navigateToCategory = useCallback((categoryId: string, categorySlug?: string) => {\r\n    const categoryUrl = categorySlug \r\n      ? `/shop/${categorySlug}` \r\n      : `/shop?category=${categoryId}`;\r\n    \r\n    onBeforeNavigate?.(categoryUrl);\r\n    router.push(categoryUrl);\r\n    onAfterNavigate?.(categoryUrl);\r\n    \r\n  }, [router, onBeforeNavigate, onAfterNavigate]);\r\n\r\n  // ===================================\r\n  // PREFETCH OPTIMIZADO\r\n  // ===================================\r\n\r\n  const prefetchSearch = useCallback((query: string, category?: string) => {\r\n    if (!query.trim()) {return;}\r\n    \r\n    const params = new URLSearchParams();\r\n    params.set('q', query.trim());\r\n    if (category && category !== 'all') {\r\n      params.set('category', category);\r\n    }\r\n    \r\n    const searchUrl = `/search?${params.toString()}`;\r\n    router.prefetch(searchUrl);\r\n    \r\n  }, [router]);\r\n\r\n  const prefetchProduct = useCallback((productId: string, productSlug?: string) => {\r\n    const productUrl = productSlug \r\n      ? `/products/${productSlug}` \r\n      : `/products/${productId}`;\r\n    \r\n    router.prefetch(productUrl);\r\n  }, [router]);\r\n\r\n  // ===================================\r\n  // UTILIDADES\r\n  // ===================================\r\n\r\n  const getCurrentSearchQuery = useCallback(() => {\r\n    return searchParams.get('q') || '';\r\n  }, [searchParams]);\r\n\r\n  const getCurrentCategory = useCallback(() => {\r\n    return searchParams.get('category') || '';\r\n  }, [searchParams]);\r\n\r\n  const buildSearchUrl = useCallback((\r\n    query: string,\r\n    category?: string,\r\n    additionalParams?: Record<string, string>\r\n  ) => {\r\n    const params = new URLSearchParams();\r\n    params.set('q', query.trim());\r\n    \r\n    if (category && category !== 'all') {\r\n      params.set('category', category);\r\n    }\r\n    \r\n    if (additionalParams) {\r\n      Object.entries(additionalParams).forEach(([key, value]) => {\r\n        params.set(key, value);\r\n      });\r\n    }\r\n    \r\n    return `/search?${params.toString()}`;\r\n  }, []);\r\n\r\n  // ===================================\r\n  // RETURN\r\n  // ===================================\r\n\r\n  return {\r\n    // Funciones de navegación\r\n    navigateToSearch,\r\n    navigateToProduct,\r\n    navigateToCategory,\r\n    \r\n    // Funciones de prefetch\r\n    prefetchSearch,\r\n    prefetchProduct,\r\n    \r\n    // Utilidades\r\n    getCurrentSearchQuery,\r\n    getCurrentCategory,\r\n    buildSearchUrl,\r\n    \r\n    // Router directo para casos especiales\r\n    router,\r\n  };\r\n}\r\n\r\nexport default useSearchNavigation;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["useSearchNavigation","options","preserveParams","scrollToTop","replace","onBeforeNavigate","onAfterNavigate","router","useRouter","searchParams","useSearchParams","navigateToSearch","useCallback","query","category","additionalParams","trim","params","URLSearchParams","set","forEach","value","key","Object","entries","searchUrl","toString","push","setTimeout","window","scrollTo","top","behavior","navigateToProduct","productId","productSlug","productUrl","navigateToCategory","categoryId","categorySlug","categoryUrl","prefetchSearch","prefetch","prefetchProduct","getCurrentSearchQuery","get","getCurrentCategory","buildSearchUrl"],"mappings":"AAAA,sCAAsC;AACtC,mEAAmE;AACnE,sCAAsC;;;;;;;;;;;;QA6MtC;eAAA;;QA3LgBA;eAAAA;;;uBAhBY;4BACe;AAepC,SAASA,oBAAoBC,UAAmC,CAAC,CAAC;IACvE,MAAM,EACJC,iBAAiB,KAAK,EACtBC,cAAc,IAAI,EAClBC,UAAU,KAAK,EACfC,gBAAgB,EAChBC,eAAe,EAChB,GAAGL;IAEJ,MAAMM,SAASC,IAAAA,qBAAS;IACxB,MAAMC,eAAeC,IAAAA,2BAAe;IAEpC,sCAAsC;IACtC,sCAAsC;IACtC,sCAAsC;IAEtC,MAAMC,mBAAmBC,IAAAA,kBAAW,EAAC,CACnCC,OACAC,UACAC;QAEA,IAAI,CAACF,MAAMG,IAAI,IAAI;YAAC;QAAO;QAE3B,4BAA4B;QAC5B,MAAMC,SAAS,IAAIC;QAEnB,kCAAkC;QAClCD,OAAOE,GAAG,CAAC,KAAKN,MAAMG,IAAI;QAE1B,6BAA6B;QAC7B,IAAIF,YAAYA,aAAa,OAAO;YAClCG,OAAOE,GAAG,CAAC,YAAYL;QACzB;QAEA,qDAAqD;QACrD,IAAIZ,gBAAgB;YAClBO,aAAaW,OAAO,CAAC,CAACC,OAAOC;gBAC3B,IAAIA,QAAQ,OAAOA,QAAQ,YAAY;oBACrCL,OAAOE,GAAG,CAACG,KAAKD;gBAClB;YACF;QACF;QAEA,yBAAyB;QACzB,IAAIN,kBAAkB;YACpBQ,OAAOC,OAAO,CAACT,kBAAkBK,OAAO,CAAC,CAAC,CAACE,KAAKD,MAAM;gBACpDJ,OAAOE,GAAG,CAACG,KAAKD;YAClB;QACF;QAEA,MAAMI,YAAY,CAAC,QAAQ,EAAER,OAAOS,QAAQ,IAAI;QAEhD,4BAA4B;QAC5BrB,mBAAmBoB;QAEnB,UAAU;QACV,IAAIrB,SAAS;YACXG,OAAOH,OAAO,CAACqB;QACjB,OAAO;YACLlB,OAAOoB,IAAI,CAACF;QACd;QAEA,mCAAmC;QACnC,IAAItB,aAAa;YACfyB,WAAW;gBACTC,OAAOC,QAAQ,CAAC;oBAAEC,KAAK;oBAAGC,UAAU;gBAAS;YAC/C,GAAG;QACL;QAEA,8BAA8B;QAC9B1B,kBAAkBmB;IAEpB,GAAG;QAAClB;QAAQE;QAAcP;QAAgBE;QAASD;QAAaE;QAAkBC;KAAgB;IAElG,sCAAsC;IACtC,wBAAwB;IACxB,sCAAsC;IAEtC,MAAM2B,oBAAoBrB,IAAAA,kBAAW,EAAC,CAACsB,WAAmBC;QACxD,MAAMC,aAAaD,cACf,CAAC,UAAU,EAAEA,aAAa,GAC1B,CAAC,UAAU,EAAED,WAAW;QAE5B7B,mBAAmB+B;QACnB7B,OAAOoB,IAAI,CAACS;QACZ9B,kBAAkB8B;IAEpB,GAAG;QAAC7B;QAAQF;QAAkBC;KAAgB;IAE9C,sCAAsC;IACtC,yBAAyB;IACzB,sCAAsC;IAEtC,MAAM+B,qBAAqBzB,IAAAA,kBAAW,EAAC,CAAC0B,YAAoBC;QAC1D,MAAMC,cAAcD,eAChB,CAAC,MAAM,EAAEA,cAAc,GACvB,CAAC,eAAe,EAAED,YAAY;QAElCjC,mBAAmBmC;QACnBjC,OAAOoB,IAAI,CAACa;QACZlC,kBAAkBkC;IAEpB,GAAG;QAACjC;QAAQF;QAAkBC;KAAgB;IAE9C,sCAAsC;IACtC,sBAAsB;IACtB,sCAAsC;IAEtC,MAAMmC,iBAAiB7B,IAAAA,kBAAW,EAAC,CAACC,OAAeC;QACjD,IAAI,CAACD,MAAMG,IAAI,IAAI;YAAC;QAAO;QAE3B,MAAMC,SAAS,IAAIC;QACnBD,OAAOE,GAAG,CAAC,KAAKN,MAAMG,IAAI;QAC1B,IAAIF,YAAYA,aAAa,OAAO;YAClCG,OAAOE,GAAG,CAAC,YAAYL;QACzB;QAEA,MAAMW,YAAY,CAAC,QAAQ,EAAER,OAAOS,QAAQ,IAAI;QAChDnB,OAAOmC,QAAQ,CAACjB;IAElB,GAAG;QAAClB;KAAO;IAEX,MAAMoC,kBAAkB/B,IAAAA,kBAAW,EAAC,CAACsB,WAAmBC;QACtD,MAAMC,aAAaD,cACf,CAAC,UAAU,EAAEA,aAAa,GAC1B,CAAC,UAAU,EAAED,WAAW;QAE5B3B,OAAOmC,QAAQ,CAACN;IAClB,GAAG;QAAC7B;KAAO;IAEX,sCAAsC;IACtC,aAAa;IACb,sCAAsC;IAEtC,MAAMqC,wBAAwBhC,IAAAA,kBAAW,EAAC;QACxC,OAAOH,aAAaoC,GAAG,CAAC,QAAQ;IAClC,GAAG;QAACpC;KAAa;IAEjB,MAAMqC,qBAAqBlC,IAAAA,kBAAW,EAAC;QACrC,OAAOH,aAAaoC,GAAG,CAAC,eAAe;IACzC,GAAG;QAACpC;KAAa;IAEjB,MAAMsC,iBAAiBnC,IAAAA,kBAAW,EAAC,CACjCC,OACAC,UACAC;QAEA,MAAME,SAAS,IAAIC;QACnBD,OAAOE,GAAG,CAAC,KAAKN,MAAMG,IAAI;QAE1B,IAAIF,YAAYA,aAAa,OAAO;YAClCG,OAAOE,GAAG,CAAC,YAAYL;QACzB;QAEA,IAAIC,kBAAkB;YACpBQ,OAAOC,OAAO,CAACT,kBAAkBK,OAAO,CAAC,CAAC,CAACE,KAAKD,MAAM;gBACpDJ,OAAOE,GAAG,CAACG,KAAKD;YAClB;QACF;QAEA,OAAO,CAAC,QAAQ,EAAEJ,OAAOS,QAAQ,IAAI;IACvC,GAAG,EAAE;IAEL,sCAAsC;IACtC,SAAS;IACT,sCAAsC;IAEtC,OAAO;QACL,0BAA0B;QAC1Bf;QACAsB;QACAI;QAEA,wBAAwB;QACxBI;QACAE;QAEA,aAAa;QACbC;QACAE;QACAC;QAEA,uCAAuC;QACvCxC;IACF;AACF;MAEA,WAAeP"}