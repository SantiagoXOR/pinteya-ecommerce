{"version":3,"names":["calculateDiscountPercentage","cov_ibg8xeq28","f","s","convertLegacyProduct","formatPrice","getDiscountedProducts","getProductById","getProductMainImage","getProducts","getProductsByBrand","getProductsByCategory","getRelatedProducts","isProductInStock","searchProducts","filters","signal","searchParams","URLSearchParams","b","Object","entries","forEach","key","value","undefined","append","toString","url","response","fetch","method","headers","result","_jsonutils","safeApiResponseJson","success","console","error","data","pagination","page","limit","total","totalPages","message","Error","name","id","searchTerm","search","categorySlug","category","discountedProducts","filter","product","discounted_price","price","brandName","brand","productId","categoryId","slice","oldProduct","title","slug","toLowerCase","replace","description","discountedPrice","stock","category_id","images","imgs","created_at","Date","toISOString","updated_at","originalPrice","Math","round","currency","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","format","previews","thumbnails"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\api\\products.ts"],"sourcesContent":["// ===================================\r\n// PINTEYA E-COMMERCE - FUNCIONES DE API PARA PRODUCTOS\r\n// ===================================\r\n\r\nimport { ProductFilters, ProductWithCategory, ApiResponse, PaginatedResponse } from '@/types/api';\r\nimport { safeApiResponseJson } from '@/lib/json-utils';\r\n\r\n// ===================================\r\n// FUNCIONES PARA EL FRONTEND\r\n// ===================================\r\n\r\n/**\r\n * Obtiene productos con filtros desde la API\r\n * @param filters - Filtros de productos\r\n * @param signal - AbortSignal para cancelar la request\r\n * @returns Promise<PaginatedResponse<ProductWithCategory>>\r\n */\r\nexport async function getProducts(\r\n  filters?: ProductFilters,\r\n  signal?: AbortSignal\r\n): Promise<PaginatedResponse<ProductWithCategory>> {\r\n  try {\r\n    const searchParams = new URLSearchParams();\r\n\r\n    if (filters) {\r\n      Object.entries(filters).forEach(([key, value]) => {\r\n        if (value !== undefined && value !== null) {\r\n          searchParams.append(key, value.toString());\r\n        }\r\n      });\r\n    }\r\n\r\n    const url = `/api/products?${searchParams.toString()}`;\r\n\r\n    const response = await fetch(url, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      signal, // Agregar soporte para AbortController\r\n    });\r\n\r\n    // Usar parsing seguro de JSON\r\n    const result = await safeApiResponseJson<PaginatedResponse<ProductWithCategory>>(response);\r\n\r\n    if (!result.success) {\r\n      console.error('❌ JSON parsing failed:', result.error);\r\n\r\n      // Return a fallback response instead of throwing\r\n      return {\r\n        data: [],\r\n        pagination: {\r\n          page: 1,\r\n          limit: 12,\r\n          total: 0,\r\n          totalPages: 0,\r\n        },\r\n        success: false,\r\n        message: result.error || 'Error loading products',\r\n      };\r\n    }\r\n\r\n    if (!result.data) {\r\n      console.error('❌ Result data is null');\r\n\r\n      // Return a fallback response instead of throwing\r\n      return {\r\n        data: [],\r\n        pagination: {\r\n          page: 1,\r\n          limit: 12,\r\n          total: 0,\r\n          totalPages: 0,\r\n        },\r\n        success: false,\r\n        message: 'Error: respuesta nula del servidor',\r\n      };\r\n    }\r\n\r\n    return result.data;\r\n  } catch (error) {\r\n    // Solo loggear errores que no sean AbortError\r\n    if (error instanceof Error && error.name !== 'AbortError') {\r\n      console.error('❌ Error obteniendo productos:', error);\r\n    }\r\n\r\n    // Return a fallback response instead of throwing\r\n    return {\r\n      data: [],\r\n      pagination: {\r\n        page: 1,\r\n        limit: 12,\r\n        total: 0,\r\n        totalPages: 0,\r\n      },\r\n      success: false,\r\n      message: error instanceof Error ? error.message : 'Error inesperado',\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Obtiene un producto por ID desde la API\r\n * @param id - ID del producto\r\n * @returns Promise<ApiResponse<ProductWithCategory>>\r\n */\r\nexport async function getProductById(id: number): Promise<ApiResponse<ProductWithCategory>> {\r\n  try {\r\n    const response = await fetch(`/api/products/${id}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n\r\n    // Usar parsing seguro de JSON\r\n    const result = await safeApiResponseJson<ApiResponse<ProductWithCategory>>(response);\r\n\r\n    if (!result || !result.success || !result.data) {\r\n      throw new Error(result?.error || 'Error parsing API response');\r\n    }\r\n\r\n    return result.data;\r\n  } catch (error) {\r\n    console.error(`Error obteniendo producto ${id}:`, error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n/**\r\n * Busca productos por término de búsqueda\r\n * @param searchTerm - Término de búsqueda\r\n * @param limit - Límite de resultados\r\n * @returns Promise<PaginatedResponse<ProductWithCategory>>\r\n */\r\nexport async function searchProducts(\r\n  searchTerm: string, \r\n  limit: number = 12\r\n): Promise<PaginatedResponse<ProductWithCategory>> {\r\n  return getProducts({\r\n    search: searchTerm,\r\n    limit,\r\n    page: 1,\r\n  });\r\n}\r\n\r\n/**\r\n * Obtiene productos por categoría\r\n * @param categorySlug - Slug de la categoría\r\n * @param page - Página\r\n * @param limit - Límite de resultados\r\n * @returns Promise<PaginatedResponse<ProductWithCategory>>\r\n */\r\nexport async function getProductsByCategory(\r\n  categorySlug: string,\r\n  page: number = 1,\r\n  limit: number = 12\r\n): Promise<PaginatedResponse<ProductWithCategory>> {\r\n  return getProducts({\r\n    category: categorySlug,\r\n    page,\r\n    limit,\r\n  });\r\n}\r\n\r\n/**\r\n * Obtiene productos con descuento\r\n * @param page - Página\r\n * @param limit - Límite de resultados\r\n * @returns Promise<PaginatedResponse<ProductWithCategory>>\r\n */\r\nexport async function getDiscountedProducts(\r\n  page: number = 1,\r\n  limit: number = 12\r\n): Promise<PaginatedResponse<ProductWithCategory>> {\r\n  // Nota: Esto requeriría un filtro adicional en la API\r\n  // Por ahora, obtenemos todos los productos y filtramos en el frontend\r\n  const response = await getProducts({ page, limit });\r\n\r\n  // Filtrar productos con descuento\r\n  const discountedProducts = response.data.filter(\r\n    product => product.discounted_price && product.discounted_price < product.price\r\n  );\r\n\r\n  return {\r\n    ...response,\r\n    data: discountedProducts,\r\n  };\r\n}\r\n\r\n/**\r\n * Obtiene productos por marca\r\n * @param brandName - Nombre de la marca\r\n * @param page - Página\r\n * @param limit - Límite de resultados\r\n * @returns Promise<PaginatedResponse<ProductWithCategory>>\r\n */\r\nexport async function getProductsByBrand(\r\n  brandName: string,\r\n  page: number = 1,\r\n  limit: number = 12\r\n): Promise<PaginatedResponse<ProductWithCategory>> {\r\n  return getProducts({\r\n    brand: brandName,\r\n    page,\r\n    limit,\r\n  });\r\n}\r\n\r\n/**\r\n * Obtiene productos relacionados (misma categoría)\r\n * @param productId - ID del producto actual\r\n * @param categoryId - ID de la categoría\r\n * @param limit - Límite de resultados\r\n * @returns Promise<ProductWithCategory[]>\r\n */\r\nexport async function getRelatedProducts(\r\n  productId: number,\r\n  categoryId: number,\r\n  limit: number = 4\r\n): Promise<ProductWithCategory[]> {\r\n  try {\r\n    // Obtener productos de la misma categoría\r\n    const response = await fetch(`/api/products?category_id=${categoryId}&limit=${limit + 1}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n\r\n    // Usar parsing seguro de JSON\r\n    const result = await safeApiResponseJson<PaginatedResponse<ProductWithCategory>>(response);\r\n\r\n    if (!result || !result.success || !result.data) {\r\n      throw new Error(result?.error || 'Error parsing API response');\r\n    }\r\n\r\n    const data = result.data;\r\n\r\n    // Filtrar el producto actual y limitar resultados\r\n    return data.data\r\n      .filter(product => product.id !== productId)\r\n      .slice(0, limit);\r\n\r\n  } catch (error) {\r\n    // Solo loggear errores que no sean AbortError\r\n    if (error instanceof Error && error.name !== 'AbortError') {\r\n      console.error('Error obteniendo productos relacionados:', error);\r\n    }\r\n    return [];\r\n  }\r\n}\r\n\r\n// ===================================\r\n// FUNCIONES AUXILIARES\r\n// ===================================\r\n\r\n/**\r\n * Convierte un producto del formato antiguo al nuevo\r\n * @param oldProduct - Producto en formato antiguo\r\n * @returns ProductWithCategory\r\n */\r\nexport function convertLegacyProduct(oldProduct: any): ProductWithCategory {\r\n  return {\r\n    id: oldProduct.id,\r\n    name: oldProduct.title,\r\n    brand: oldProduct.brand || null, // Marca del producto legacy\r\n    slug: oldProduct.title.toLowerCase().replace(/[^a-z0-9]+/g, '-'),\r\n    description: `Producto ${oldProduct.title}`,\r\n    price: oldProduct.price,\r\n    discounted_price: oldProduct.discountedPrice,\r\n    stock: 50, // Stock por defecto\r\n    category_id: 1, // Categoría por defecto\r\n    images: oldProduct.imgs,\r\n    created_at: new Date().toISOString(),\r\n    updated_at: null, // Campo requerido por el tipo\r\n  };\r\n}\r\n\r\n/**\r\n * Calcula el porcentaje de descuento\r\n * @param originalPrice - Precio original\r\n * @param discountedPrice - Precio con descuento\r\n * @returns number\r\n */\r\nexport function calculateDiscountPercentage(\r\n  originalPrice: number,\r\n  discountedPrice: number\r\n): number {\r\n  if (!discountedPrice || discountedPrice >= originalPrice) {\r\n    return 0;\r\n  }\r\n  \r\n  return Math.round(((originalPrice - discountedPrice) / originalPrice) * 100);\r\n}\r\n\r\n/**\r\n * Formatea el precio para mostrar\r\n * @param price - Precio\r\n * @param currency - Moneda\r\n * @returns string\r\n */\r\nexport function formatPrice(price: number, currency: string = 'ARS'): string {\r\n  return new Intl.NumberFormat('es-AR', {\r\n    style: 'currency',\r\n    currency,\r\n    minimumFractionDigits: 0,\r\n    maximumFractionDigits: 2,\r\n  }).format(price);\r\n}\r\n\r\n/**\r\n * Verifica si un producto está en stock\r\n * @param product - Producto\r\n * @returns boolean\r\n */\r\nexport function isProductInStock(product: ProductWithCategory): boolean {\r\n  return product.stock > 0;\r\n}\r\n\r\n/**\r\n * Obtiene la URL de la imagen principal del producto\r\n * @param product - Producto\r\n * @returns string\r\n */\r\nexport function getProductMainImage(product: ProductWithCategory): string {\r\n  if (product.images?.previews?.[0]) {\r\n    return product.images.previews[0];\r\n  }\r\n  \r\n  if (product.images?.thumbnails?.[0]) {\r\n    return product.images.thumbnails[0];\r\n  }\r\n  \r\n  return '/images/products/placeholder.jpg';\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}