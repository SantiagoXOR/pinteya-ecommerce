60810c7440a6a6cf959891c7592ec6a6
"use strict";

/* istanbul ignore next */
function cov_29ibm2mff5() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\orders\\[id]\\payment-link\\route.ts";
  var hash = "d273ca2f241f4215bfff8e19ca7600fe5441b0db";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\orders\\[id]\\payment-link\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 20
        }
      },
      "3": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 38
        }
      },
      "4": {
        start: {
          line: 12,
          column: 14
        },
        end: {
          line: 12,
          column: 47
        }
      },
      "5": {
        start: {
          line: 13,
          column: 17
        },
        end: {
          line: 13,
          column: 78
        }
      },
      "6": {
        start: {
          line: 14,
          column: 16
        },
        end: {
          line: 14,
          column: 66
        }
      },
      "7": {
        start: {
          line: 15,
          column: 21
        },
        end: {
          line: 15,
          column: 78
        }
      },
      "8": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 162,
          column: 5
        }
      },
      "9": {
        start: {
          line: 18,
          column: 24
        },
        end: {
          line: 18,
          column: 33
        }
      },
      "10": {
        start: {
          line: 20,
          column: 24
        },
        end: {
          line: 20,
          column: 47
        }
      },
      "11": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 28,
          column: 9
        }
      },
      "12": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 27,
          column: 15
        }
      },
      "13": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 32,
          column: 11
        }
      },
      "14": {
        start: {
          line: 34,
          column: 25
        },
        end: {
          line: 34,
          column: 58
        }
      },
      "15": {
        start: {
          line: 35,
          column: 51
        },
        end: {
          line: 46,
          column: 35
        }
      },
      "16": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 58,
          column: 9
        }
      },
      "17": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 51,
          column: 15
        }
      },
      "18": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 57,
          column: 15
        }
      },
      "19": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 67,
          column: 9
        }
      },
      "20": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 66,
          column: 15
        }
      },
      "21": {
        start: {
          line: 69,
          column: 56
        },
        end: {
          line: 77,
          column: 32
        }
      },
      "22": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 89,
          column: 9
        }
      },
      "23": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 82,
          column: 15
        }
      },
      "24": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 88,
          column: 15
        }
      },
      "25": {
        start: {
          line: 91,
          column: 31
        },
        end: {
          line: 112,
          column: 9
        }
      },
      "26": {
        start: {
          line: 92,
          column: 43
        },
        end: {
          line: 99,
          column: 17
        }
      },
      "27": {
        start: {
          line: 114,
          column: 33
        },
        end: {
          line: 114,
          column: 96
        }
      },
      "28": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 126,
          column: 9
        }
      },
      "29": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 119,
          column: 15
        }
      },
      "30": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 125,
          column: 15
        }
      },
      "31": {
        start: {
          line: 128,
          column: 39
        },
        end: {
          line: 131,
          column: 28
        }
      },
      "32": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 137,
          column: 9
        }
      },
      "33": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 136,
          column: 15
        }
      },
      "34": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 141,
          column: 11
        }
      },
      "35": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 150,
          column: 11
        }
      },
      "36": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 155,
          column: 11
        }
      },
      "37": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 161,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "POST",
        decl: {
          start: {
            line: 16,
            column: 15
          },
          end: {
            line: 16,
            column: 19
          }
        },
        loc: {
          start: {
            line: 16,
            column: 41
          },
          end: {
            line: 163,
            column: 1
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 92,
            column: 34
          },
          end: {
            line: 92,
            column: 35
          }
        },
        loc: {
          start: {
            line: 92,
            column: 43
          },
          end: {
            line: 99,
            column: 17
          }
        },
        line: 92
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 28,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 28,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 58,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 58,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "2": {
        loc: {
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 47,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 47,
            column: 22
          }
        }, {
          start: {
            line: 47,
            column: 26
          },
          end: {
            line: 47,
            column: 32
          }
        }],
        line: 47
      },
      "3": {
        loc: {
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 67,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 67,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "4": {
        loc: {
          start: {
            line: 78,
            column: 8
          },
          end: {
            line: 89,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 8
          },
          end: {
            line: 89,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 78
      },
      "5": {
        loc: {
          start: {
            line: 78,
            column: 12
          },
          end: {
            line: 78,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 78,
            column: 12
          },
          end: {
            line: 78,
            column: 22
          }
        }, {
          start: {
            line: 78,
            column: 26
          },
          end: {
            line: 78,
            column: 37
          }
        }],
        line: 78
      },
      "6": {
        loc: {
          start: {
            line: 95,
            column: 33
          },
          end: {
            line: 95,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 95,
            column: 33
          },
          end: {
            line: 95,
            column: 58
          }
        }, {
          start: {
            line: 95,
            column: 62
          },
          end: {
            line: 95,
            column: 80
          }
        }],
        line: 95
      },
      "7": {
        loc: {
          start: {
            line: 101,
            column: 22
          },
          end: {
            line: 101,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 101,
            column: 22
          },
          end: {
            line: 101,
            column: 47
          }
        }, {
          start: {
            line: 101,
            column: 51
          },
          end: {
            line: 101,
            column: 60
          }
        }],
        line: 101
      },
      "8": {
        loc: {
          start: {
            line: 102,
            column: 23
          },
          end: {
            line: 102,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 102,
            column: 23
          },
          end: {
            line: 102,
            column: 49
          }
        }, {
          start: {
            line: 102,
            column: 53
          },
          end: {
            line: 102,
            column: 74
          }
        }],
        line: 102
      },
      "9": {
        loc: {
          start: {
            line: 104,
            column: 32
          },
          end: {
            line: 104,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 104,
            column: 32
          },
          end: {
            line: 104,
            column: 56
          }
        }, {
          start: {
            line: 104,
            column: 60
          },
          end: {
            line: 104,
            column: 78
          }
        }],
        line: 104
      },
      "10": {
        loc: {
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 126,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 126,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 115
      },
      "11": {
        loc: {
          start: {
            line: 115,
            column: 12
          },
          end: {
            line: 115,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 115,
            column: 12
          },
          end: {
            line: 115,
            column: 37
          }
        }, {
          start: {
            line: 115,
            column: 41
          },
          end: {
            line: 115,
            column: 63
          }
        }],
        line: 115
      },
      "12": {
        loc: {
          start: {
            line: 132,
            column: 8
          },
          end: {
            line: 137,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 132,
            column: 8
          },
          end: {
            line: 137,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 132
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\orders\\[id]\\payment-link\\route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\r\nimport { auth } from '@/auth';\r\nimport { createAdminClient } from '@/lib/integrations/supabase/server';\r\nimport { logger, LogLevel, LogCategory } from '@/lib/enterprise/logger';\r\nimport { createPaymentPreference } from '@/lib/integrations/mercadopago';\r\n\r\n/**\r\n * POST /api/admin/orders/[id]/payment-link\r\n * Crea un link de pago para una orden manual\r\n */\r\nexport async function POST(\r\n  request: NextRequest,\r\n  { params }: { params: { id: string } }\r\n): Promise<NextResponse> {\r\n  try {\r\n    const orderId = params.id;\r\n\r\n    // Verificar autenticaci\xF3n\r\n    const session = await auth();\r\n    if (!session?.user) {\r\n      return NextResponse.json(\r\n        { success: false, error: 'No autorizado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    logger.log(LogLevel.INFO, LogCategory.API, 'Creating payment link for order', { \r\n      orderId,\r\n      userId: session.user.id \r\n    });\r\n\r\n    // Obtener datos de la orden\r\n    const supabase = createAdminClient();\r\n    const { data: order, error: orderError } = await supabase\r\n      .from('orders')\r\n      .select(`\r\n        id,\r\n        user_id,\r\n        total,\r\n        status,\r\n        payment_status,\r\n        external_reference,\r\n        user_profiles!orders_user_id_fkey (\r\n          name,\r\n          email\r\n        )\r\n      `)\r\n      .eq('id', orderId)\r\n      .single();\r\n\r\n    if (orderError || !order) {\r\n      logger.log(LogLevel.WARN, LogCategory.API, 'Order not found', { orderId, orderError });\r\n      return NextResponse.json(\r\n        { success: false, error: 'Orden no encontrada' },\r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    // Verificar que la orden est\xE9 pendiente de pago\r\n    if (order.payment_status !== 'pending') {\r\n      return NextResponse.json(\r\n        { success: false, error: 'La orden ya tiene un estado de pago diferente a pendiente' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Obtener items de la orden\r\n    const { data: orderItems, error: itemsError } = await supabase\r\n      .from('order_items')\r\n      .select(`\r\n        quantity,\r\n        price,\r\n        products!order_items_product_id_fkey (\r\n          id,\r\n          name,\r\n          description\r\n        )\r\n      `)\r\n      .eq('order_id', orderId);\r\n\r\n    if (itemsError || !orderItems) {\r\n      logger.log(LogLevel.ERROR, LogCategory.DATABASE, 'Error fetching order items', { orderId, itemsError });\r\n      return NextResponse.json(\r\n        { success: false, error: 'Error al obtener items de la orden' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Preparar datos para MercadoPago\r\n    const preferenceData = {\r\n      items: orderItems.map(item => ({\r\n        id: item.products.id.toString(),\r\n        title: item.products.name,\r\n        description: item.products.description || item.products.name,\r\n        quantity: item.quantity,\r\n        unit_price: item.price,\r\n        currency_id: 'ARS'\r\n      })),\r\n      payer: {\r\n        name: order.user_profiles?.name || 'Cliente',\r\n        email: order.user_profiles?.email || 'cliente@pinteya.com'\r\n      },\r\n      external_reference: order.external_reference || orderId.toString(),\r\n      back_urls: {\r\n        success: `${process.env.NEXT_PUBLIC_URL}/orders/success`,\r\n        failure: `${process.env.NEXT_PUBLIC_URL}/orders/failure`,\r\n        pending: `${process.env.NEXT_PUBLIC_URL}/orders/pending`\r\n      },\r\n      auto_return: 'approved',\r\n      notification_url: `${process.env.NEXT_PUBLIC_URL}/api/payments/webhook`\r\n    };\r\n\r\n    // Crear preferencia en MercadoPago\r\n    const preferenceResult = await createPaymentPreference(preferenceData);\r\n\r\n    if (!preferenceResult.success || !preferenceResult.data) {\r\n      logger.log(LogLevel.ERROR, LogCategory.PAYMENT, 'Error creating MercadoPago preference', { \r\n        orderId,\r\n        error: preferenceResult.error \r\n      });\r\n      return NextResponse.json(\r\n        { success: false, error: 'Error al crear preferencia de pago' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Actualizar orden con preference_id\r\n    const { error: updateError } = await supabase\r\n      .from('orders')\r\n      .update({\r\n        payment_preference_id: preferenceResult.data.id,\r\n        updated_at: new Date().toISOString()\r\n      })\r\n      .eq('id', orderId);\r\n\r\n    if (updateError) {\r\n      logger.log(LogLevel.ERROR, LogCategory.DATABASE, 'Error updating order with preference_id', { \r\n        orderId,\r\n        updateError \r\n      });\r\n    }\r\n\r\n    logger.log(LogLevel.INFO, LogCategory.API, 'Payment link created successfully', {\r\n      orderId,\r\n      preferenceId: preferenceResult.data.id\r\n    });\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: {\r\n        preference_id: preferenceResult.data.id,\r\n        payment_url: preferenceResult.data.init_point,\r\n        sandbox_payment_url: preferenceResult.data.sandbox_init_point\r\n      },\r\n      message: 'Link de pago creado exitosamente'\r\n    });\r\n\r\n  } catch (error) {\r\n    logger.log(LogLevel.ERROR, LogCategory.API, 'Unexpected error creating payment link', { \r\n      orderId: params.id,\r\n      error \r\n    });\r\n    \r\n    return NextResponse.json(\r\n      { success: false, error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n"],
      names: ["POST", "request", "params", "orderId", "id", "session", "auth", "user", "NextResponse", "json", "success", "error", "status", "logger", "log", "LogLevel", "INFO", "LogCategory", "API", "userId", "supabase", "createAdminClient", "data", "order", "orderError", "from", "select", "eq", "single", "WARN", "payment_status", "orderItems", "itemsError", "ERROR", "DATABASE", "preferenceData", "items", "map", "item", "products", "toString", "title", "name", "description", "quantity", "unit_price", "price", "currency_id", "payer", "user_profiles", "email", "external_reference", "back_urls", "process", "env", "NEXT_PUBLIC_URL", "failure", "pending", "auto_return", "notification_url", "preferenceResult", "createPaymentPreference", "PAYMENT", "updateError", "update", "payment_preference_id", "updated_at", "Date", "toISOString", "preferenceId", "preference_id", "payment_url", "init_point", "sandbox_payment_url", "sandbox_init_point", "message"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d273ca2f241f4215bfff8e19ca7600fe5441b0db"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_29ibm2mff5 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_29ibm2mff5();
cov_29ibm2mff5().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_29ibm2mff5().s[1]++;
Object.defineProperty(exports, "POST", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_29ibm2mff5().f[0]++;
    cov_29ibm2mff5().s[2]++;
    return POST;
  }
});
const _server =
/* istanbul ignore next */
(cov_29ibm2mff5().s[3]++, require("next/server"));
const _auth =
/* istanbul ignore next */
(cov_29ibm2mff5().s[4]++, require("../../../../../../auth"));
const _server1 =
/* istanbul ignore next */
(cov_29ibm2mff5().s[5]++, require("../../../../../../lib/integrations/supabase/server"));
const _logger =
/* istanbul ignore next */
(cov_29ibm2mff5().s[6]++, require("../../../../../../lib/enterprise/logger"));
const _mercadopago =
/* istanbul ignore next */
(cov_29ibm2mff5().s[7]++, require("../../../../../../lib/integrations/mercadopago"));
async function POST(request, {
  params
}) {
  /* istanbul ignore next */
  cov_29ibm2mff5().f[1]++;
  cov_29ibm2mff5().s[8]++;
  try {
    const orderId =
    /* istanbul ignore next */
    (cov_29ibm2mff5().s[9]++, params.id);
    // Verificar autenticación
    const session =
    /* istanbul ignore next */
    (cov_29ibm2mff5().s[10]++, await (0, _auth.auth)());
    /* istanbul ignore next */
    cov_29ibm2mff5().s[11]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_29ibm2mff5().b[0][0]++;
      cov_29ibm2mff5().s[12]++;
      return _server.NextResponse.json({
        success: false,
        error: 'No autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_29ibm2mff5().b[0][1]++;
    }
    cov_29ibm2mff5().s[13]++;
    _logger.logger.log(_logger.LogLevel.INFO, _logger.LogCategory.API, 'Creating payment link for order', {
      orderId,
      userId: session.user.id
    });
    // Obtener datos de la orden
    const supabase =
    /* istanbul ignore next */
    (cov_29ibm2mff5().s[14]++, (0, _server1.createAdminClient)());
    const {
      data: order,
      error: orderError
    } =
    /* istanbul ignore next */
    (cov_29ibm2mff5().s[15]++, await supabase.from('orders').select(`
        id,
        user_id,
        total,
        status,
        payment_status,
        external_reference,
        user_profiles!orders_user_id_fkey (
          name,
          email
        )
      `).eq('id', orderId).single());
    /* istanbul ignore next */
    cov_29ibm2mff5().s[16]++;
    if (
    /* istanbul ignore next */
    (cov_29ibm2mff5().b[2][0]++, orderError) ||
    /* istanbul ignore next */
    (cov_29ibm2mff5().b[2][1]++, !order)) {
      /* istanbul ignore next */
      cov_29ibm2mff5().b[1][0]++;
      cov_29ibm2mff5().s[17]++;
      _logger.logger.log(_logger.LogLevel.WARN, _logger.LogCategory.API, 'Order not found', {
        orderId,
        orderError
      });
      /* istanbul ignore next */
      cov_29ibm2mff5().s[18]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Orden no encontrada'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_29ibm2mff5().b[1][1]++;
    }
    // Verificar que la orden esté pendiente de pago
    cov_29ibm2mff5().s[19]++;
    if (order.payment_status !== 'pending') {
      /* istanbul ignore next */
      cov_29ibm2mff5().b[3][0]++;
      cov_29ibm2mff5().s[20]++;
      return _server.NextResponse.json({
        success: false,
        error: 'La orden ya tiene un estado de pago diferente a pendiente'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_29ibm2mff5().b[3][1]++;
    }
    // Obtener items de la orden
    const {
      data: orderItems,
      error: itemsError
    } =
    /* istanbul ignore next */
    (cov_29ibm2mff5().s[21]++, await supabase.from('order_items').select(`
        quantity,
        price,
        products!order_items_product_id_fkey (
          id,
          name,
          description
        )
      `).eq('order_id', orderId));
    /* istanbul ignore next */
    cov_29ibm2mff5().s[22]++;
    if (
    /* istanbul ignore next */
    (cov_29ibm2mff5().b[5][0]++, itemsError) ||
    /* istanbul ignore next */
    (cov_29ibm2mff5().b[5][1]++, !orderItems)) {
      /* istanbul ignore next */
      cov_29ibm2mff5().b[4][0]++;
      cov_29ibm2mff5().s[23]++;
      _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.DATABASE, 'Error fetching order items', {
        orderId,
        itemsError
      });
      /* istanbul ignore next */
      cov_29ibm2mff5().s[24]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Error al obtener items de la orden'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_29ibm2mff5().b[4][1]++;
    }
    // Preparar datos para MercadoPago
    const preferenceData =
    /* istanbul ignore next */
    (cov_29ibm2mff5().s[25]++, {
      items: orderItems.map(item => {
        /* istanbul ignore next */
        cov_29ibm2mff5().f[2]++;
        cov_29ibm2mff5().s[26]++;
        return {
          id: item.products.id.toString(),
          title: item.products.name,
          description:
          /* istanbul ignore next */
          (cov_29ibm2mff5().b[6][0]++, item.products.description) ||
          /* istanbul ignore next */
          (cov_29ibm2mff5().b[6][1]++, item.products.name),
          quantity: item.quantity,
          unit_price: item.price,
          currency_id: 'ARS'
        };
      }),
      payer: {
        name:
        /* istanbul ignore next */
        (cov_29ibm2mff5().b[7][0]++, order.user_profiles?.name) ||
        /* istanbul ignore next */
        (cov_29ibm2mff5().b[7][1]++, 'Cliente'),
        email:
        /* istanbul ignore next */
        (cov_29ibm2mff5().b[8][0]++, order.user_profiles?.email) ||
        /* istanbul ignore next */
        (cov_29ibm2mff5().b[8][1]++, 'cliente@pinteya.com')
      },
      external_reference:
      /* istanbul ignore next */
      (cov_29ibm2mff5().b[9][0]++, order.external_reference) ||
      /* istanbul ignore next */
      (cov_29ibm2mff5().b[9][1]++, orderId.toString()),
      back_urls: {
        success: `${process.env.NEXT_PUBLIC_URL}/orders/success`,
        failure: `${process.env.NEXT_PUBLIC_URL}/orders/failure`,
        pending: `${process.env.NEXT_PUBLIC_URL}/orders/pending`
      },
      auto_return: 'approved',
      notification_url: `${process.env.NEXT_PUBLIC_URL}/api/payments/webhook`
    });
    // Crear preferencia en MercadoPago
    const preferenceResult =
    /* istanbul ignore next */
    (cov_29ibm2mff5().s[27]++, await (0, _mercadopago.createPaymentPreference)(preferenceData));
    /* istanbul ignore next */
    cov_29ibm2mff5().s[28]++;
    if (
    /* istanbul ignore next */
    (cov_29ibm2mff5().b[11][0]++, !preferenceResult.success) ||
    /* istanbul ignore next */
    (cov_29ibm2mff5().b[11][1]++, !preferenceResult.data)) {
      /* istanbul ignore next */
      cov_29ibm2mff5().b[10][0]++;
      cov_29ibm2mff5().s[29]++;
      _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.PAYMENT, 'Error creating MercadoPago preference', {
        orderId,
        error: preferenceResult.error
      });
      /* istanbul ignore next */
      cov_29ibm2mff5().s[30]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Error al crear preferencia de pago'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_29ibm2mff5().b[10][1]++;
    }
    // Actualizar orden con preference_id
    const {
      error: updateError
    } =
    /* istanbul ignore next */
    (cov_29ibm2mff5().s[31]++, await supabase.from('orders').update({
      payment_preference_id: preferenceResult.data.id,
      updated_at: new Date().toISOString()
    }).eq('id', orderId));
    /* istanbul ignore next */
    cov_29ibm2mff5().s[32]++;
    if (updateError) {
      /* istanbul ignore next */
      cov_29ibm2mff5().b[12][0]++;
      cov_29ibm2mff5().s[33]++;
      _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.DATABASE, 'Error updating order with preference_id', {
        orderId,
        updateError
      });
    } else
    /* istanbul ignore next */
    {
      cov_29ibm2mff5().b[12][1]++;
    }
    cov_29ibm2mff5().s[34]++;
    _logger.logger.log(_logger.LogLevel.INFO, _logger.LogCategory.API, 'Payment link created successfully', {
      orderId,
      preferenceId: preferenceResult.data.id
    });
    /* istanbul ignore next */
    cov_29ibm2mff5().s[35]++;
    return _server.NextResponse.json({
      success: true,
      data: {
        preference_id: preferenceResult.data.id,
        payment_url: preferenceResult.data.init_point,
        sandbox_payment_url: preferenceResult.data.sandbox_init_point
      },
      message: 'Link de pago creado exitosamente'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_29ibm2mff5().s[36]++;
    _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.API, 'Unexpected error creating payment link', {
      orderId: params.id,
      error
    });
    /* istanbul ignore next */
    cov_29ibm2mff5().s[37]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,