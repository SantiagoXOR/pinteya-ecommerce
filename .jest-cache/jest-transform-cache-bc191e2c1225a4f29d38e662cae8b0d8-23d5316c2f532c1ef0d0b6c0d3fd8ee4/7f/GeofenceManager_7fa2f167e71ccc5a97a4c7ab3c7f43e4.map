{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\admin\\logistics\\GeofenceManager.tsx"],"sourcesContent":["// =====================================================\r\n// COMPONENTE: GEOFENCE MANAGER ENTERPRISE\r\n// Descripción: Gestión de zonas geográficas con alertas automáticas\r\n// Basado en: MapLibre GL JS + React + Geospatial APIs\r\n// =====================================================\r\n\r\n'use client';\r\n\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Switch } from '@/components/ui/switch';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\r\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\r\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport { \r\n  MapPin, \r\n  Plus, \r\n  Edit, \r\n  Trash2, \r\n  Eye,\r\n  AlertTriangle,\r\n  CheckCircle,\r\n  Clock,\r\n  BarChart3,\r\n  Settings,\r\n  Zap\r\n} from 'lucide-react';\r\nimport { useLogisticsWebSocket } from '@/hooks/admin/useLogisticsWebSocket';\r\nimport { cn } from '@/lib/core/utils';\r\nimport { formatDate } from '@/lib/utils/consolidated-utils';\r\n\r\n// =====================================================\r\n// INTERFACES\r\n// =====================================================\r\n\r\ninterface GeofenceZone {\r\n  id: string;\r\n  name: string;\r\n  type: 'delivery_zone' | 'restricted' | 'priority' | 'warehouse';\r\n  coordinates: [number, number][];\r\n  center: [number, number];\r\n  radius?: number;\r\n  active: boolean;\r\n  created_at: string;\r\n  updated_at: string;\r\n  rules: GeofenceRule[];\r\n  stats?: GeofenceStats;\r\n}\r\n\r\ninterface GeofenceRule {\r\n  id: string;\r\n  event_type: 'enter' | 'exit' | 'dwell';\r\n  action: 'alert' | 'notification' | 'status_change' | 'route_optimization';\r\n  conditions: {\r\n    min_dwell_time?: number;\r\n    shipment_status?: string[];\r\n    courier_ids?: number[];\r\n    time_windows?: { start: string; end: string }[];\r\n  };\r\n  active: boolean;\r\n}\r\n\r\ninterface GeofenceStats {\r\n  total_events: number;\r\n  enter_events: number;\r\n  exit_events: number;\r\n  unique_shipments: number;\r\n  avg_dwell_time: number;\r\n  last_event: string;\r\n}\r\n\r\ninterface GeofenceManagerProps {\r\n  className?: string;\r\n}\r\n\r\n// =====================================================\r\n// DATOS DE EJEMPLO\r\n// =====================================================\r\n\r\nconst SAMPLE_GEOFENCES: GeofenceZone[] = [\r\n  {\r\n    id: 'caba_priority',\r\n    name: 'CABA - Zona Prioritaria',\r\n    type: 'priority',\r\n    coordinates: [\r\n      [-58.5315, -34.5264],\r\n      [-58.3354, -34.5264],\r\n      [-58.3354, -34.7051],\r\n      [-58.5315, -34.7051],\r\n      [-58.5315, -34.5264]\r\n    ],\r\n    center: [-58.4335, -34.6158],\r\n    active: true,\r\n    created_at: '2024-01-15T10:00:00Z',\r\n    updated_at: '2024-01-20T15:30:00Z',\r\n    rules: [\r\n      {\r\n        id: 'rule_1',\r\n        event_type: 'enter',\r\n        action: 'notification',\r\n        conditions: {\r\n          shipment_status: ['in_transit', 'out_for_delivery']\r\n        },\r\n        active: true\r\n      }\r\n    ],\r\n    stats: {\r\n      total_events: 245,\r\n      enter_events: 123,\r\n      exit_events: 122,\r\n      unique_shipments: 89,\r\n      avg_dwell_time: 45,\r\n      last_event: '2024-01-20T14:30:00Z'\r\n    }\r\n  },\r\n  {\r\n    id: 'gba_norte',\r\n    name: 'GBA Norte - Zona de Entrega',\r\n    type: 'delivery_zone',\r\n    coordinates: [\r\n      [-58.6000, -34.4000],\r\n      [-58.4000, -34.4000],\r\n      [-58.4000, -34.5500],\r\n      [-58.6000, -34.5500],\r\n      [-58.6000, -34.4000]\r\n    ],\r\n    center: [-58.5000, -34.4750],\r\n    active: true,\r\n    created_at: '2024-01-10T09:00:00Z',\r\n    updated_at: '2024-01-18T11:15:00Z',\r\n    rules: [\r\n      {\r\n        id: 'rule_2',\r\n        event_type: 'dwell',\r\n        action: 'alert',\r\n        conditions: {\r\n          min_dwell_time: 30,\r\n          shipment_status: ['out_for_delivery']\r\n        },\r\n        active: true\r\n      }\r\n    ],\r\n    stats: {\r\n      total_events: 156,\r\n      enter_events: 78,\r\n      exit_events: 78,\r\n      unique_shipments: 67,\r\n      avg_dwell_time: 28,\r\n      last_event: '2024-01-19T16:45:00Z'\r\n    }\r\n  },\r\n  {\r\n    id: 'warehouse_central',\r\n    name: 'Depósito Central',\r\n    type: 'warehouse',\r\n    coordinates: [\r\n      [-58.4200, -34.6100],\r\n      [-58.4150, -34.6100],\r\n      [-58.4150, -34.6150],\r\n      [-58.4200, -34.6150],\r\n      [-58.4200, -34.6100]\r\n    ],\r\n    center: [-58.4175, -34.6125],\r\n    radius: 500,\r\n    active: true,\r\n    created_at: '2024-01-05T08:00:00Z',\r\n    updated_at: '2024-01-15T12:00:00Z',\r\n    rules: [\r\n      {\r\n        id: 'rule_3',\r\n        event_type: 'exit',\r\n        action: 'status_change',\r\n        conditions: {\r\n          shipment_status: ['confirmed']\r\n        },\r\n        active: true\r\n      }\r\n    ],\r\n    stats: {\r\n      total_events: 89,\r\n      enter_events: 45,\r\n      exit_events: 44,\r\n      unique_shipments: 89,\r\n      avg_dwell_time: 120,\r\n      last_event: '2024-01-20T10:15:00Z'\r\n    }\r\n  }\r\n];\r\n\r\n// =====================================================\r\n// CONFIGURACIÓN DE TIPOS\r\n// =====================================================\r\n\r\nconst GEOFENCE_TYPES = {\r\n  delivery_zone: {\r\n    label: 'Zona de Entrega',\r\n    color: 'bg-blue-100 text-blue-800',\r\n    icon: MapPin\r\n  },\r\n  restricted: {\r\n    label: 'Zona Restringida',\r\n    color: 'bg-red-100 text-red-800',\r\n    icon: AlertTriangle\r\n  },\r\n  priority: {\r\n    label: 'Zona Prioritaria',\r\n    color: 'bg-yellow-100 text-yellow-800',\r\n    icon: Zap\r\n  },\r\n  warehouse: {\r\n    label: 'Depósito',\r\n    color: 'bg-green-100 text-green-800',\r\n    icon: CheckCircle\r\n  }\r\n};\r\n\r\n// =====================================================\r\n// COMPONENTE PRINCIPAL\r\n// =====================================================\r\n\r\nexport function GeofenceManager({ className }: GeofenceManagerProps) {\r\n  const [geofences, setGeofences] = useState<GeofenceZone[]>(SAMPLE_GEOFENCES);\r\n  const [selectedGeofence, setSelectedGeofence] = useState<GeofenceZone | null>(null);\r\n  const [filterType, setFilterType] = useState<string>('all');\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  \r\n  // WebSocket para eventos en tiempo real\r\n  const { \r\n    isConnected, \r\n    subscribeToGeofence, \r\n    lastGeofenceEvent,\r\n    alerts \r\n  } = useLogisticsWebSocket({\r\n    simulateInDevelopment: false // Deshabilitado para evitar notificaciones persistentes\r\n  });\r\n  \r\n  // Filtrar geofences\r\n  const filteredGeofences = geofences.filter(zone => {\r\n    const matchesType = filterType === 'all' || zone.type === filterType;\r\n    const matchesSearch = zone.name.toLowerCase().includes(searchTerm.toLowerCase());\r\n    return matchesType && matchesSearch;\r\n  });\r\n  \r\n  // Estadísticas generales\r\n  const totalZones = geofences.length;\r\n  const activeZones = geofences.filter(z => z.active).length;\r\n  const totalEvents = geofences.reduce((acc, z) => acc + (z.stats?.total_events || 0), 0);\r\n  const recentEvents = alerts.filter(alert => \r\n    alert.type === 'geofence_event' && \r\n    new Date(alert.timestamp) > new Date(Date.now() - 24 * 60 * 60 * 1000)\r\n  ).length;\r\n  \r\n  // =====================================================\r\n  // EFECTOS\r\n  // =====================================================\r\n  \r\n  useEffect(() => {\r\n    // Suscribirse a eventos de todas las zonas activas\r\n    if (isConnected) {\r\n      geofences.filter(z => z.active).forEach(zone => {\r\n        subscribeToGeofence(zone.id);\r\n      });\r\n    }\r\n  }, [isConnected, geofences, subscribeToGeofence]);\r\n  \r\n  useEffect(() => {\r\n    // Procesar eventos de geofence en tiempo real\r\n    if (lastGeofenceEvent) {\r\n      console.log('Nuevo evento de geofence:', lastGeofenceEvent);\r\n      // Aquí se podría actualizar las estadísticas en tiempo real\r\n    }\r\n  }, [lastGeofenceEvent]);\r\n  \r\n  // =====================================================\r\n  // HANDLERS\r\n  // =====================================================\r\n  \r\n  const handleToggleZone = useCallback((zoneId: string) => {\r\n    setGeofences(prev => prev.map(zone => \r\n      zone.id === zoneId \r\n        ? { ...zone, active: !zone.active, updated_at: new Date().toISOString() }\r\n        : zone\r\n    ));\r\n  }, []);\r\n  \r\n  const handleDeleteZone = useCallback((zoneId: string) => {\r\n    setGeofences(prev => prev.filter(zone => zone.id !== zoneId));\r\n  }, []);\r\n  \r\n  const handleEditZone = useCallback((zone: GeofenceZone) => {\r\n    setSelectedGeofence(zone);\r\n  }, []);\r\n  \r\n  return (\r\n    <div className={cn(\"space-y-6\", className)}>\r\n      {/* Header */}\r\n      <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4\">\r\n        <div>\r\n          <h2 className=\"text-2xl font-bold tracking-tight\">Gestión de Geofences</h2>\r\n          <p className=\"text-muted-foreground\">\r\n            Administra zonas geográficas y reglas de automatización\r\n          </p>\r\n        </div>\r\n        \r\n        <div className=\"flex items-center gap-3\">\r\n          <Badge variant={isConnected ? \"default\" : \"secondary\"} className=\"flex items-center gap-1\">\r\n            {isConnected ? <CheckCircle className=\"w-3 h-3\" /> : <Clock className=\"w-3 h-3\" />}\r\n            {isConnected ? 'Tiempo Real' : 'Desconectado'}\r\n          </Badge>\r\n          \r\n          <Dialog>\r\n            <DialogTrigger asChild>\r\n              <Button className=\"flex items-center gap-2\">\r\n                <Plus className=\"w-4 h-4\" />\r\n                Nueva Zona\r\n              </Button>\r\n            </DialogTrigger>\r\n            <DialogContent className=\"max-w-2xl\">\r\n              <DialogHeader>\r\n                <DialogTitle>Crear Nueva Zona Geográfica</DialogTitle>\r\n                <DialogDescription>\r\n                  Define una nueva zona con reglas de automatización\r\n                </DialogDescription>\r\n              </DialogHeader>\r\n              <div className=\"p-4 text-center text-muted-foreground\">\r\n                Formulario de geofence en desarrollo\r\n              </div>\r\n            </DialogContent>\r\n          </Dialog>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Métricas resumen */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n        <Card>\r\n          <CardContent className=\"p-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-muted-foreground\">\r\n                  Total Zonas\r\n                </p>\r\n                <p className=\"text-2xl font-bold\">{totalZones}</p>\r\n              </div>\r\n              <MapPin className=\"w-8 h-8 text-blue-500\" />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n        \r\n        <Card>\r\n          <CardContent className=\"p-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-muted-foreground\">\r\n                  Zonas Activas\r\n                </p>\r\n                <p className=\"text-2xl font-bold\">{activeZones}</p>\r\n              </div>\r\n              <CheckCircle className=\"w-8 h-8 text-green-500\" />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n        \r\n        <Card>\r\n          <CardContent className=\"p-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-muted-foreground\">\r\n                  Eventos Totales\r\n                </p>\r\n                <p className=\"text-2xl font-bold\">{totalEvents}</p>\r\n              </div>\r\n              <BarChart3 className=\"w-8 h-8 text-purple-500\" />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n        \r\n        <Card>\r\n          <CardContent className=\"p-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-muted-foreground\">\r\n                  Eventos Hoy\r\n                </p>\r\n                <p className=\"text-2xl font-bold\">{recentEvents}</p>\r\n              </div>\r\n              <Zap className=\"w-8 h-8 text-yellow-500\" />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n      \r\n      {/* Filtros */}\r\n      <div className=\"flex flex-col sm:flex-row gap-4\">\r\n        <div className=\"flex-1\">\r\n          <Input\r\n            placeholder=\"Buscar zonas...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n        </div>\r\n        \r\n        <Select value={filterType} onValueChange={setFilterType}>\r\n          <SelectTrigger className=\"w-48\">\r\n            <SelectValue placeholder=\"Filtrar por tipo\" />\r\n          </SelectTrigger>\r\n          <SelectContent>\r\n            <SelectItem value=\"all\">Todos los tipos</SelectItem>\r\n            <SelectItem value=\"delivery_zone\">Zona de Entrega</SelectItem>\r\n            <SelectItem value=\"restricted\">Zona Restringida</SelectItem>\r\n            <SelectItem value=\"priority\">Zona Prioritaria</SelectItem>\r\n            <SelectItem value=\"warehouse\">Depósito</SelectItem>\r\n          </SelectContent>\r\n        </Select>\r\n      </div>\r\n      \r\n      {/* Contenido principal */}\r\n      <Tabs defaultValue=\"list\" className=\"space-y-4\">\r\n        <TabsList>\r\n          <TabsTrigger value=\"list\">Lista de Zonas</TabsTrigger>\r\n          <TabsTrigger value=\"map\">Vista de Mapa</TabsTrigger>\r\n          <TabsTrigger value=\"events\">Eventos Recientes</TabsTrigger>\r\n        </TabsList>\r\n        \r\n        {/* Tab: Lista */}\r\n        <TabsContent value=\"list\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Zonas Geográficas</CardTitle>\r\n              <CardDescription>\r\n                Gestiona zonas y sus reglas de automatización\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"rounded-md border\">\r\n                <Table>\r\n                  <TableHeader>\r\n                    <TableRow>\r\n                      <TableHead>Zona</TableHead>\r\n                      <TableHead>Tipo</TableHead>\r\n                      <TableHead>Estado</TableHead>\r\n                      <TableHead>Eventos</TableHead>\r\n                      <TableHead>Última Actividad</TableHead>\r\n                      <TableHead>Reglas</TableHead>\r\n                      <TableHead className=\"w-12\"></TableHead>\r\n                    </TableRow>\r\n                  </TableHeader>\r\n                  <TableBody>\r\n                    {filteredGeofences.map((zone) => (\r\n                      <GeofenceRow\r\n                        key={zone.id}\r\n                        zone={zone}\r\n                        onToggle={handleToggleZone}\r\n                        onEdit={handleEditZone}\r\n                        onDelete={handleDeleteZone}\r\n                      />\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n        \r\n        {/* Tab: Mapa */}\r\n        <TabsContent value=\"map\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Vista de Mapa</CardTitle>\r\n              <CardDescription>\r\n                Visualización geográfica de las zonas\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"h-96 bg-gray-100 rounded-lg flex items-center justify-center\">\r\n                <div className=\"text-center\">\r\n                  <MapPin className=\"w-8 h-8 text-gray-400 mx-auto mb-2\" />\r\n                  <p className=\"text-gray-500\">Mapa de geofences en desarrollo</p>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n        \r\n        {/* Tab: Eventos */}\r\n        <TabsContent value=\"events\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Eventos Recientes</CardTitle>\r\n              <CardDescription>\r\n                Actividad en tiempo real de las zonas\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-4\">\r\n                {alerts.slice(0, 10).map((alert, index) => (\r\n                  <div key={index} className=\"flex items-center gap-3 p-3 border rounded-lg\">\r\n                    <div className=\"w-2 h-2 rounded-full bg-blue-500\"></div>\r\n                    <div className=\"flex-1\">\r\n                      <div className=\"font-medium\">{alert.message}</div>\r\n                      <div className=\"text-sm text-muted-foreground\">\r\n                        {formatDate(alert.timestamp)}\r\n                      </div>\r\n                    </div>\r\n                    <Badge variant=\"outline\">{alert.type}</Badge>\r\n                  </div>\r\n                ))}\r\n                \r\n                {alerts.length === 0 && (\r\n                  <div className=\"text-center py-8\">\r\n                    <Clock className=\"w-8 h-8 text-gray-400 mx-auto mb-2\" />\r\n                    <p className=\"text-gray-500\">No hay eventos recientes</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n}\r\n\r\n// =====================================================\r\n// COMPONENTE GEOFENCE ROW\r\n// =====================================================\r\n\r\ninterface GeofenceRowProps {\r\n  zone: GeofenceZone;\r\n  onToggle: (zoneId: string) => void;\r\n  onEdit: (zone: GeofenceZone) => void;\r\n  onDelete: (zoneId: string) => void;\r\n}\r\n\r\nfunction GeofenceRow({ zone, onToggle, onEdit, onDelete }: GeofenceRowProps) {\r\n  const typeConfig = GEOFENCE_TYPES[zone.type];\r\n  const Icon = typeConfig.icon;\r\n  \r\n  return (\r\n    <TableRow>\r\n      <TableCell>\r\n        <div className=\"flex items-center gap-2\">\r\n          <Icon className=\"w-4 h-4 text-muted-foreground\" />\r\n          <div>\r\n            <div className=\"font-medium\">{zone.name}</div>\r\n            <div className=\"text-sm text-muted-foreground\">\r\n              {zone.center[1].toFixed(4)}, {zone.center[0].toFixed(4)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </TableCell>\r\n      \r\n      <TableCell>\r\n        <Badge variant=\"outline\" className={typeConfig.color}>\r\n          {typeConfig.label}\r\n        </Badge>\r\n      </TableCell>\r\n      \r\n      <TableCell>\r\n        <div className=\"flex items-center gap-2\">\r\n          <Switch\r\n            checked={zone.active}\r\n            onCheckedChange={() => onToggle(zone.id)}\r\n            size=\"sm\"\r\n          />\r\n          <span className=\"text-sm\">\r\n            {zone.active ? 'Activa' : 'Inactiva'}\r\n          </span>\r\n        </div>\r\n      </TableCell>\r\n      \r\n      <TableCell>\r\n        <div className=\"text-sm\">\r\n          <div className=\"font-medium\">{zone.stats?.total_events || 0}</div>\r\n          <div className=\"text-muted-foreground\">\r\n            {zone.stats?.unique_shipments || 0} envíos únicos\r\n          </div>\r\n        </div>\r\n      </TableCell>\r\n      \r\n      <TableCell>\r\n        <div className=\"text-sm\">\r\n          {zone.stats?.last_event \r\n            ? formatDate(zone.stats.last_event)\r\n            : 'Sin actividad'\r\n          }\r\n        </div>\r\n      </TableCell>\r\n      \r\n      <TableCell>\r\n        <div className=\"flex items-center gap-1\">\r\n          <Badge variant=\"secondary\" className=\"text-xs\">\r\n            {zone.rules.filter(r => r.active).length} activas\r\n          </Badge>\r\n          <Badge variant=\"outline\" className=\"text-xs\">\r\n            {zone.rules.length} total\r\n          </Badge>\r\n        </div>\r\n      </TableCell>\r\n      \r\n      <TableCell>\r\n        <div className=\"flex items-center gap-1\">\r\n          <Button\r\n            variant=\"ghost\"\r\n            size=\"sm\"\r\n            onClick={() => onEdit(zone)}\r\n          >\r\n            <Edit className=\"w-4 h-4\" />\r\n          </Button>\r\n          \r\n          <Button\r\n            variant=\"ghost\"\r\n            size=\"sm\"\r\n            onClick={() => onDelete(zone.id)}\r\n            className=\"text-red-600 hover:text-red-700\"\r\n          >\r\n            <Trash2 className=\"w-4 h-4\" />\r\n          </Button>\r\n        </div>\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["GeofenceManager","SAMPLE_GEOFENCES","id","name","type","coordinates","center","active","created_at","updated_at","rules","event_type","action","conditions","shipment_status","stats","total_events","enter_events","exit_events","unique_shipments","avg_dwell_time","last_event","min_dwell_time","radius","GEOFENCE_TYPES","delivery_zone","label","color","icon","MapPin","restricted","AlertTriangle","priority","Zap","warehouse","CheckCircle","className","geofences","setGeofences","useState","selectedGeofence","setSelectedGeofence","filterType","setFilterType","searchTerm","setSearchTerm","isConnected","subscribeToGeofence","lastGeofenceEvent","alerts","useLogisticsWebSocket","simulateInDevelopment","filteredGeofences","filter","zone","matchesType","matchesSearch","toLowerCase","includes","totalZones","length","activeZones","z","totalEvents","reduce","acc","recentEvents","alert","Date","timestamp","now","useEffect","forEach","console","log","handleToggleZone","useCallback","zoneId","prev","map","toISOString","handleDeleteZone","handleEditZone","div","cn","h2","p","Badge","variant","Clock","Dialog","DialogTrigger","asChild","Button","Plus","DialogContent","DialogHeader","DialogTitle","DialogDescription","Card","CardContent","BarChart3","Input","placeholder","value","onChange","e","target","Select","onValueChange","SelectTrigger","SelectValue","SelectContent","SelectItem","Tabs","defaultValue","TabsList","TabsTrigger","TabsContent","CardHeader","CardTitle","CardDescription","Table","TableHeader","TableRow","TableHead","TableBody","GeofenceRow","onToggle","onEdit","onDelete","slice","index","message","formatDate","typeConfig","Icon","TableCell","toFixed","Switch","checked","onCheckedChange","size","span","r","onClick","Edit","Trash2"],"mappings":"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"}