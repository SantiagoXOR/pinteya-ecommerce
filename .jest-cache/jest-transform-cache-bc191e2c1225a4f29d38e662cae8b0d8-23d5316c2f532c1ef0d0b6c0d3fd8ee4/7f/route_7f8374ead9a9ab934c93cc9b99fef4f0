0f80c4e84857eee0e1be3dd7a8e8efde
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_18oedmdfe() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\debug\\admin-products\\route.ts";
  var hash = "c3b4fcdad06c7f97d636adeea97c7b9fdadb9702";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\debug\\admin-products\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 23
        }
      },
      "6": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 38
        }
      },
      "7": {
        start: {
          line: 21,
          column: 19
        },
        end: {
          line: 21,
          column: 61
        }
      },
      "8": {
        start: {
          line: 22,
          column: 29
        },
        end: {
          line: 22,
          column: 82
        }
      },
      "9": {
        start: {
          line: 23,
          column: 28
        },
        end: {
          line: 23,
          column: 80
        }
      },
      "10": {
        start: {
          line: 24,
          column: 25
        },
        end: {
          line: 24,
          column: 73
        }
      },
      "11": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 24
        }
      },
      "12": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 164,
          column: 5
        }
      },
      "13": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 77
        }
      },
      "14": {
        start: {
          line: 30,
          column: 33
        },
        end: {
          line: 32,
          column: 10
        }
      },
      "15": {
        start: {
          line: 34,
          column: 29
        },
        end: {
          line: 34,
          column: 91
        }
      },
      "16": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 48,
          column: 11
        }
      },
      "17": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 67,
          column: 9
        }
      },
      "18": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 66,
          column: 15
        }
      },
      "19": {
        start: {
          line: 69,
          column: 27
        },
        end: {
          line: 69,
          column: 31
        }
      },
      "20": {
        start: {
          line: 70,
          column: 25
        },
        end: {
          line: 70,
          column: 29
        }
      },
      "21": {
        start: {
          line: 71,
          column: 25
        },
        end: {
          line: 71,
          column: 29
        }
      },
      "22": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 102,
          column: 9
        }
      },
      "23": {
        start: {
          line: 73,
          column: 28
        },
        end: {
          line: 73,
          column: 52
        }
      },
      "24": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 63
        }
      },
      "25": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 82,
          column: 27
        }
      },
      "26": {
        start: {
          line: 84,
          column: 35
        },
        end: {
          line: 98,
          column: 14
        }
      },
      "27": {
        start: {
          line: 85,
          column: 28
        },
        end: {
          line: 85,
          column: 110
        }
      },
      "28": {
        start: {
          line: 87,
          column: 16
        },
        end: {
          line: 89,
          column: 19
        }
      },
      "29": {
        start: {
          line: 88,
          column: 20
        },
        end: {
          line: 88,
          column: 49
        }
      },
      "30": {
        start: {
          line: 90,
          column: 40
        },
        end: {
          line: 90,
          column: 51
        }
      },
      "31": {
        start: {
          line: 91,
          column: 16
        },
        end: {
          line: 93,
          column: 17
        }
      },
      "32": {
        start: {
          line: 92,
          column: 20
        },
        end: {
          line: 92,
          column: 85
        }
      },
      "33": {
        start: {
          line: 94,
          column: 16
        },
        end: {
          line: 94,
          column: 28
        }
      },
      "34": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 101,
          column: 13
        }
      },
      "35": {
        start: {
          line: 100,
          column: 16
        },
        end: {
          line: 100,
          column: 51
        }
      },
      "36": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 152,
          column: 11
        }
      },
      "37": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 154,
          column: 64
        }
      },
      "38": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 163,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 19
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "GET",
        decl: {
          start: {
            line: 26,
            column: 15
          },
          end: {
            line: 26,
            column: 18
          }
        },
        loc: {
          start: {
            line: 26,
            column: 28
          },
          end: {
            line: 165,
            column: 1
          }
        },
        line: 26
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 84,
            column: 90
          },
          end: {
            line: 84,
            column: 91
          }
        },
        loc: {
          start: {
            line: 84,
            column: 118
          },
          end: {
            line: 95,
            column: 13
          }
        },
        line: 84
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 87,
            column: 57
          },
          end: {
            line: 87,
            column: 58
          }
        },
        loc: {
          start: {
            line: 87,
            column: 73
          },
          end: {
            line: 89,
            column: 17
          }
        },
        line: 87
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 67,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 67,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "1": {
        loc: {
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 49,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 49,
            column: 37
          }
        }, {
          start: {
            line: 49,
            column: 41
          },
          end: {
            line: 49,
            column: 62
          }
        }],
        line: 49
      },
      "2": {
        loc: {
          start: {
            line: 65,
            column: 24
          },
          end: {
            line: 65,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 24
          },
          end: {
            line: 65,
            column: 47
          }
        }, {
          start: {
            line: 65,
            column: 51
          },
          end: {
            line: 65,
            column: 70
          }
        }, {
          start: {
            line: 65,
            column: 74
          },
          end: {
            line: 65,
            column: 77
          }
        }],
        line: 65
      },
      "3": {
        loc: {
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 72
      },
      "4": {
        loc: {
          start: {
            line: 87,
            column: 31
          },
          end: {
            line: 87,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 87,
            column: 31
          },
          end: {
            line: 87,
            column: 41
          }
        }, {
          start: {
            line: 87,
            column: 45
          },
          end: {
            line: 87,
            column: 47
          }
        }],
        line: 87
      },
      "5": {
        loc: {
          start: {
            line: 91,
            column: 16
          },
          end: {
            line: 93,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 16
          },
          end: {
            line: 93,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 91
      },
      "6": {
        loc: {
          start: {
            line: 99,
            column: 12
          },
          end: {
            line: 101,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 12
          },
          end: {
            line: 101,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      },
      "7": {
        loc: {
          start: {
            line: 104,
            column: 21
          },
          end: {
            line: 104,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 104,
            column: 21
          },
          end: {
            line: 104,
            column: 45
          }
        }, {
          start: {
            line: 104,
            column: 49
          },
          end: {
            line: 104,
            column: 69
          }
        }],
        line: 104
      },
      "8": {
        loc: {
          start: {
            line: 107,
            column: 24
          },
          end: {
            line: 107,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 107,
            column: 51
          },
          end: {
            line: 107,
            column: 60
          }
        }, {
          start: {
            line: 107,
            column: 63
          },
          end: {
            line: 107,
            column: 71
          }
        }],
        line: 107
      },
      "9": {
        loc: {
          start: {
            line: 108,
            column: 25
          },
          end: {
            line: 113,
            column: 24
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 108,
            column: 52
          },
          end: {
            line: 113,
            column: 17
          }
        }, {
          start: {
            line: 113,
            column: 20
          },
          end: {
            line: 113,
            column: 24
          }
        }],
        line: 108
      },
      "10": {
        loc: {
          start: {
            line: 116,
            column: 36
          },
          end: {
            line: 116,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 116,
            column: 36
          },
          end: {
            line: 116,
            column: 56
          }
        }, {
          start: {
            line: 116,
            column: 60
          },
          end: {
            line: 116,
            column: 61
          }
        }],
        line: 116
      },
      "11": {
        loc: {
          start: {
            line: 124,
            column: 24
          },
          end: {
            line: 124,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 124,
            column: 47
          },
          end: {
            line: 124,
            column: 56
          }
        }, {
          start: {
            line: 124,
            column: 59
          },
          end: {
            line: 124,
            column: 67
          }
        }],
        line: 124
      },
      "12": {
        loc: {
          start: {
            line: 143,
            column: 32
          },
          end: {
            line: 143,
            column: 112
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 143,
            column: 59
          },
          end: {
            line: 143,
            column: 82
          }
        }, {
          start: {
            line: 143,
            column: 85
          },
          end: {
            line: 143,
            column: 112
          }
        }],
        line: 143
      },
      "13": {
        loc: {
          start: {
            line: 159,
            column: 30
          },
          end: {
            line: 159,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 159,
            column: 55
          },
          end: {
            line: 159,
            column: 68
          }
        }, {
          start: {
            line: 159,
            column: 71
          },
          end: {
            line: 159,
            column: 86
          }
        }],
        line: 159
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\debug\\admin-products\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { checkCRUDPermissions } from '@/lib/auth/admin-auth';\r\nimport {\r\n  requireAdminAuth\r\n} from '@/lib/auth/enterprise-auth-utils';\r\nimport {\r\n  executeWithRLS,\r\n  createRLSFilters\r\n} from '@/lib/auth/enterprise-rls-utils';\r\nimport {\r\n  getCacheStats\r\n} from '@/lib/auth/enterprise-cache';\r\n\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    console.log('\uD83D\uDD0D Debug Admin Products Enterprise: Starting check...');\r\n\r\n    // ENTERPRISE: Usar nueva autenticaci\xF3n enterprise\r\n    const enterpriseResult = await requireAdminAuth(request, ['products_read']);\r\n\r\n    // LEGACY: Mantener m\xE9todo anterior para comparaci\xF3n\r\n    const legacyResult = await checkCRUDPermissions('read', 'products');\r\n\r\n    console.log('\uD83D\uDD0D Debug Admin Products: Results comparison:', {\r\n      enterprise: {\r\n        success: enterpriseResult.success,\r\n        error: enterpriseResult.error,\r\n        code: enterpriseResult.code\r\n      },\r\n      legacy: {\r\n        success: legacyResult.success,\r\n        error: legacyResult.error,\r\n        status: legacyResult.status,\r\n        hasUser: !!legacyResult.user,\r\n        hasSupabase: !!legacyResult.supabase\r\n      }\r\n    });\r\n\r\n    if (!enterpriseResult.success && !legacyResult.success) {\r\n      return NextResponse.json({\r\n        error: 'Ambos m\xE9todos de autenticaci\xF3n fallaron',\r\n        enterprise: {\r\n          error: enterpriseResult.error,\r\n          code: enterpriseResult.code\r\n        },\r\n        legacy: {\r\n          error: legacyResult.error,\r\n          step: 'checkCRUDPermissions failed'\r\n        },\r\n        debug: {\r\n          both_methods_failed: true,\r\n          recommended_action: 'Check authentication setup'\r\n        }\r\n      }, { status: enterpriseResult.status || legacyResult.status || 401 });\r\n    }\r\n\r\n    // ENTERPRISE: Probar consulta de productos con RLS si enterprise auth es exitoso\r\n    let productsData = null;\r\n    let rlsFilters = null;\r\n    let cacheStats = null;\r\n\r\n    if (enterpriseResult.success) {\r\n      const context = enterpriseResult.context!;\r\n\r\n      // Obtener estad\xEDsticas de cache\r\n      cacheStats = getCacheStats();\r\n\r\n      // Crear filtros RLS para productos\r\n      rlsFilters = createRLSFilters({\r\n        userId: context.userId,\r\n        role: context.role,\r\n        permissions: context.permissions,\r\n        isActive: true\r\n      }, 'products');\r\n\r\n      // Ejecutar consulta con RLS\r\n      const productsResult = await executeWithRLS(\r\n        context,\r\n        async (client, rlsContext) => {\r\n          let query = client\r\n            .from('products')\r\n            .select('id, name, price, is_active, category_id')\r\n            .limit(5);\r\n\r\n          // Aplicar filtros RLS autom\xE1ticos\r\n          Object.entries(rlsFilters || {}).forEach(([key, value]) => {\r\n            query = query.eq(key, value);\r\n          });\r\n\r\n          const { data, error } = await query;\r\n\r\n          if (error) {\r\n            throw new Error(`Error consultando productos: ${error.message}`);\r\n          }\r\n\r\n          return data;\r\n        },\r\n        { enforceRLS: true, auditLog: true }\r\n      );\r\n\r\n      if (productsResult.success) {\r\n        productsData = productsResult.data;\r\n      }\r\n    }\r\n\r\n    return NextResponse.json({\r\n      success: enterpriseResult.success || legacyResult.success,\r\n      message: 'Admin products access comparison completed',\r\n      enterprise: {\r\n        status: enterpriseResult.success ? 'SUCCESS' : 'FAILED',\r\n        context: enterpriseResult.success ? {\r\n          userId: enterpriseResult.context?.userId,\r\n          role: enterpriseResult.context?.role,\r\n          permissions: enterpriseResult.context?.permissions,\r\n          securityLevel: enterpriseResult.context?.securityLevel\r\n        } : null,\r\n        rls: {\r\n          filters_applied: rlsFilters,\r\n          products_found: productsData?.length || 0,\r\n          sample_products: productsData?.slice(0, 3)\r\n        },\r\n        cache: cacheStats,\r\n        error: enterpriseResult.error,\r\n        code: enterpriseResult.code\r\n      },\r\n      legacy: {\r\n        status: legacyResult.success ? 'SUCCESS' : 'FAILED',\r\n        authResult: {\r\n          success: legacyResult.success,\r\n          hasUser: !!legacyResult.user,\r\n          hasSupabase: !!legacyResult.supabase,\r\n          userEmail: legacyResult.user?.email,\r\n          userRole: legacyResult.user?.user_roles?.role_name\r\n        },\r\n        error: legacyResult.error\r\n      },\r\n      comparison: {\r\n        methods_agree: enterpriseResult.success === legacyResult.success,\r\n        enterprise_advantages: [\r\n          'RLS integration with automatic filters',\r\n          'Cache statistics and optimization',\r\n          'Granular permissions checking',\r\n          'Complete security context',\r\n          'Audit logging enabled'\r\n        ],\r\n        recommendation: enterpriseResult.success ? 'Use enterprise method' : 'Fix authentication issues'\r\n      },\r\n      debug: {\r\n        timestamp: new Date().toISOString(),\r\n        request_info: {\r\n          method: request.method,\r\n          url: request.url\r\n        }\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('\uD83D\uDD0D Debug Admin Products: Error:', error);\r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Unexpected error',\r\n      debug: {\r\n        errorMessage: error instanceof Error ? error.message : 'Unknown error'\r\n      }\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "runtime", "request", "console", "log", "enterpriseResult", "requireAdminAuth", "legacyResult", "checkCRUDPermissions", "enterprise", "success", "error", "code", "legacy", "status", "hasUser", "user", "hasSupabase", "supabase", "NextResponse", "json", "step", "debug", "both_methods_failed", "recommended_action", "productsData", "rlsFilters", "cacheStats", "context", "getCacheStats", "createRLSFilters", "userId", "role", "permissions", "isActive", "productsResult", "executeWithRLS", "client", "rlsContext", "query", "from", "select", "limit", "Object", "entries", "forEach", "key", "value", "eq", "data", "Error", "message", "enforceRLS", "auditLog", "securityLevel", "rls", "filters_applied", "products_found", "length", "sample_products", "slice", "cache", "authResult", "userEmail", "email", "userRole", "user_roles", "role_name", "comparison", "methods_agree", "enterprise_advantages", "recommendation", "timestamp", "Date", "toISOString", "request_info", "method", "url", "errorMessage"],
      mappings: "AAAA,qCAAqC;;;;;;;;;;;;QAgBfA;eAAAA;;QAfTC;eAAAA;;;wBAE6B;2BACL;qCAG9B;oCAIA;iCAGA;AAbA,MAAMA,UAAU;AAehB,eAAeD,IAAIE,OAAoB;IAC5C,IAAI;QACFC,QAAQC,GAAG,CAAC;QAEZ,kDAAkD;QAClD,MAAMC,mBAAmB,MAAMC,IAAAA,qCAAgB,EAACJ,SAAS;YAAC;SAAgB;QAE1E,oDAAoD;QACpD,MAAMK,eAAe,MAAMC,IAAAA,+BAAoB,EAAC,QAAQ;QAExDL,QAAQC,GAAG,CAAC,gDAAgD;YAC1DK,YAAY;gBACVC,SAASL,iBAAiBK,OAAO;gBACjCC,OAAON,iBAAiBM,KAAK;gBAC7BC,MAAMP,iBAAiBO,IAAI;YAC7B;YACAC,QAAQ;gBACNH,SAASH,aAAaG,OAAO;gBAC7BC,OAAOJ,aAAaI,KAAK;gBACzBG,QAAQP,aAAaO,MAAM;gBAC3BC,SAAS,CAAC,CAACR,aAAaS,IAAI;gBAC5BC,aAAa,CAAC,CAACV,aAAaW,QAAQ;YACtC;QACF;QAEA,IAAI,CAACb,iBAAiBK,OAAO,IAAI,CAACH,aAAaG,OAAO,EAAE;YACtD,OAAOS,oBAAY,CAACC,IAAI,CAAC;gBACvBT,OAAO;gBACPF,YAAY;oBACVE,OAAON,iBAAiBM,KAAK;oBAC7BC,MAAMP,iBAAiBO,IAAI;gBAC7B;gBACAC,QAAQ;oBACNF,OAAOJ,aAAaI,KAAK;oBACzBU,MAAM;gBACR;gBACAC,OAAO;oBACLC,qBAAqB;oBACrBC,oBAAoB;gBACtB;YACF,GAAG;gBAAEV,QAAQT,iBAAiBS,MAAM,IAAIP,aAAaO,MAAM,IAAI;YAAI;QACrE;QAEA,iFAAiF;QACjF,IAAIW,eAAe;QACnB,IAAIC,aAAa;QACjB,IAAIC,aAAa;QAEjB,IAAItB,iBAAiBK,OAAO,EAAE;YAC5B,MAAMkB,UAAUvB,iBAAiBuB,OAAO;YAExC,gCAAgC;YAChCD,aAAaE,IAAAA,8BAAa;YAE1B,mCAAmC;YACnCH,aAAaI,IAAAA,oCAAgB,EAAC;gBAC5BC,QAAQH,QAAQG,MAAM;gBACtBC,MAAMJ,QAAQI,IAAI;gBAClBC,aAAaL,QAAQK,WAAW;gBAChCC,UAAU;YACZ,GAAG;YAEH,4BAA4B;YAC5B,MAAMC,iBAAiB,MAAMC,IAAAA,kCAAc,EACzCR,SACA,OAAOS,QAAQC;gBACb,IAAIC,QAAQF,OACTG,IAAI,CAAC,YACLC,MAAM,CAAC,2CACPC,KAAK,CAAC;gBAET,kCAAkC;gBAClCC,OAAOC,OAAO,CAAClB,cAAc,CAAC,GAAGmB,OAAO,CAAC,CAAC,CAACC,KAAKC,MAAM;oBACpDR,QAAQA,MAAMS,EAAE,CAACF,KAAKC;gBACxB;gBAEA,MAAM,EAAEE,IAAI,EAAEtC,KAAK,EAAE,GAAG,MAAM4B;gBAE9B,IAAI5B,OAAO;oBACT,MAAM,IAAIuC,MAAM,CAAC,6BAA6B,EAAEvC,MAAMwC,OAAO,EAAE;gBACjE;gBAEA,OAAOF;YACT,GACA;gBAAEG,YAAY;gBAAMC,UAAU;YAAK;YAGrC,IAAIlB,eAAezB,OAAO,EAAE;gBAC1Be,eAAeU,eAAec,IAAI;YACpC;QACF;QAEA,OAAO9B,oBAAY,CAACC,IAAI,CAAC;YACvBV,SAASL,iBAAiBK,OAAO,IAAIH,aAAaG,OAAO;YACzDyC,SAAS;YACT1C,YAAY;gBACVK,QAAQT,iBAAiBK,OAAO,GAAG,YAAY;gBAC/CkB,SAASvB,iBAAiBK,OAAO,GAAG;oBAClCqB,QAAQ1B,iBAAiBuB,OAAO,EAAEG;oBAClCC,MAAM3B,iBAAiBuB,OAAO,EAAEI;oBAChCC,aAAa5B,iBAAiBuB,OAAO,EAAEK;oBACvCqB,eAAejD,iBAAiBuB,OAAO,EAAE0B;gBAC3C,IAAI;gBACJC,KAAK;oBACHC,iBAAiB9B;oBACjB+B,gBAAgBhC,cAAciC,UAAU;oBACxCC,iBAAiBlC,cAAcmC,MAAM,GAAG;gBAC1C;gBACAC,OAAOlC;gBACPhB,OAAON,iBAAiBM,KAAK;gBAC7BC,MAAMP,iBAAiBO,IAAI;YAC7B;YACAC,QAAQ;gBACNC,QAAQP,aAAaG,OAAO,GAAG,YAAY;gBAC3CoD,YAAY;oBACVpD,SAASH,aAAaG,OAAO;oBAC7BK,SAAS,CAAC,CAACR,aAAaS,IAAI;oBAC5BC,aAAa,CAAC,CAACV,aAAaW,QAAQ;oBACpC6C,WAAWxD,aAAaS,IAAI,EAAEgD;oBAC9BC,UAAU1D,aAAaS,IAAI,EAAEkD,YAAYC;gBAC3C;gBACAxD,OAAOJ,aAAaI,KAAK;YAC3B;YACAyD,YAAY;gBACVC,eAAehE,iBAAiBK,OAAO,KAAKH,aAAaG,OAAO;gBAChE4D,uBAAuB;oBACrB;oBACA;oBACA;oBACA;oBACA;iBACD;gBACDC,gBAAgBlE,iBAAiBK,OAAO,GAAG,0BAA0B;YACvE;YACAY,OAAO;gBACLkD,WAAW,IAAIC,OAAOC,WAAW;gBACjCC,cAAc;oBACZC,QAAQ1E,QAAQ0E,MAAM;oBACtBC,KAAK3E,QAAQ2E,GAAG;gBAClB;YACF;QACF;IAEF,EAAE,OAAOlE,OAAO;QACdR,QAAQQ,KAAK,CAAC,mCAAmCA;QACjD,OAAOQ,oBAAY,CAACC,IAAI,CAAC;YACvBV,SAAS;YACTC,OAAO;YACPW,OAAO;gBACLwD,cAAcnE,iBAAiBuC,QAAQvC,MAAMwC,OAAO,GAAG;YACzD;QACF,GAAG;YAAErC,QAAQ;QAAI;IACnB;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c3b4fcdad06c7f97d636adeea97c7b9fdadb9702"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_18oedmdfe = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_18oedmdfe();
cov_18oedmdfe().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_18oedmdfe().f[0]++;
  cov_18oedmdfe().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_18oedmdfe().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_18oedmdfe().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_18oedmdfe().f[1]++;
    cov_18oedmdfe().s[4]++;
    return GET;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_18oedmdfe().f[2]++;
    cov_18oedmdfe().s[5]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_18oedmdfe().s[6]++, require("next/server"));
const _adminauth =
/* istanbul ignore next */
(cov_18oedmdfe().s[7]++, require("../../../../lib/auth/admin-auth"));
const _enterpriseauthutils =
/* istanbul ignore next */
(cov_18oedmdfe().s[8]++, require("../../../../lib/auth/enterprise-auth-utils"));
const _enterpriserlsutils =
/* istanbul ignore next */
(cov_18oedmdfe().s[9]++, require("../../../../lib/auth/enterprise-rls-utils"));
const _enterprisecache =
/* istanbul ignore next */
(cov_18oedmdfe().s[10]++, require("../../../../lib/auth/enterprise-cache"));
const runtime =
/* istanbul ignore next */
(cov_18oedmdfe().s[11]++, 'nodejs');
async function GET(request) {
  /* istanbul ignore next */
  cov_18oedmdfe().f[3]++;
  cov_18oedmdfe().s[12]++;
  try {
    /* istanbul ignore next */
    cov_18oedmdfe().s[13]++;
    console.log('ğ Debug Admin Products Enterprise: Starting check...');
    // ENTERPRISE: Usar nueva autenticaciÃ³n enterprise
    const enterpriseResult =
    /* istanbul ignore next */
    (cov_18oedmdfe().s[14]++, await (0, _enterpriseauthutils.requireAdminAuth)(request, ['products_read']));
    // LEGACY: Mantener mÃ©todo anterior para comparaciÃ³n
    const legacyResult =
    /* istanbul ignore next */
    (cov_18oedmdfe().s[15]++, await (0, _adminauth.checkCRUDPermissions)('read', 'products'));
    /* istanbul ignore next */
    cov_18oedmdfe().s[16]++;
    console.log('ğ Debug Admin Products: Results comparison:', {
      enterprise: {
        success: enterpriseResult.success,
        error: enterpriseResult.error,
        code: enterpriseResult.code
      },
      legacy: {
        success: legacyResult.success,
        error: legacyResult.error,
        status: legacyResult.status,
        hasUser: !!legacyResult.user,
        hasSupabase: !!legacyResult.supabase
      }
    });
    /* istanbul ignore next */
    cov_18oedmdfe().s[17]++;
    if (
    /* istanbul ignore next */
    (cov_18oedmdfe().b[1][0]++, !enterpriseResult.success) &&
    /* istanbul ignore next */
    (cov_18oedmdfe().b[1][1]++, !legacyResult.success)) {
      /* istanbul ignore next */
      cov_18oedmdfe().b[0][0]++;
      cov_18oedmdfe().s[18]++;
      return _server.NextResponse.json({
        error: 'Ambos mÃ©todos de autenticaciÃ³n fallaron',
        enterprise: {
          error: enterpriseResult.error,
          code: enterpriseResult.code
        },
        legacy: {
          error: legacyResult.error,
          step: 'checkCRUDPermissions failed'
        },
        debug: {
          both_methods_failed: true,
          recommended_action: 'Check authentication setup'
        }
      }, {
        status:
        /* istanbul ignore next */
        (cov_18oedmdfe().b[2][0]++, enterpriseResult.status) ||
        /* istanbul ignore next */
        (cov_18oedmdfe().b[2][1]++, legacyResult.status) ||
        /* istanbul ignore next */
        (cov_18oedmdfe().b[2][2]++, 401)
      });
    } else
    /* istanbul ignore next */
    {
      cov_18oedmdfe().b[0][1]++;
    }
    // ENTERPRISE: Probar consulta de productos con RLS si enterprise auth es exitoso
    let productsData =
    /* istanbul ignore next */
    (cov_18oedmdfe().s[19]++, null);
    let rlsFilters =
    /* istanbul ignore next */
    (cov_18oedmdfe().s[20]++, null);
    let cacheStats =
    /* istanbul ignore next */
    (cov_18oedmdfe().s[21]++, null);
    /* istanbul ignore next */
    cov_18oedmdfe().s[22]++;
    if (enterpriseResult.success) {
      /* istanbul ignore next */
      cov_18oedmdfe().b[3][0]++;
      const context =
      /* istanbul ignore next */
      (cov_18oedmdfe().s[23]++, enterpriseResult.context);
      // Obtener estadÃ­sticas de cache
      /* istanbul ignore next */
      cov_18oedmdfe().s[24]++;
      cacheStats = (0, _enterprisecache.getCacheStats)();
      // Crear filtros RLS para productos
      /* istanbul ignore next */
      cov_18oedmdfe().s[25]++;
      rlsFilters = (0, _enterpriserlsutils.createRLSFilters)({
        userId: context.userId,
        role: context.role,
        permissions: context.permissions,
        isActive: true
      }, 'products');
      // Ejecutar consulta con RLS
      const productsResult =
      /* istanbul ignore next */
      (cov_18oedmdfe().s[26]++, await (0, _enterpriserlsutils.executeWithRLS)(context, async (client, rlsContext) => {
        /* istanbul ignore next */
        cov_18oedmdfe().f[4]++;
        let query =
        /* istanbul ignore next */
        (cov_18oedmdfe().s[27]++, client.from('products').select('id, name, price, is_active, category_id').limit(5));
        // Aplicar filtros RLS automÃ¡ticos
        /* istanbul ignore next */
        cov_18oedmdfe().s[28]++;
        Object.entries(
        /* istanbul ignore next */
        (cov_18oedmdfe().b[4][0]++, rlsFilters) ||
        /* istanbul ignore next */
        (cov_18oedmdfe().b[4][1]++, {})).forEach(([key, value]) => {
          /* istanbul ignore next */
          cov_18oedmdfe().f[5]++;
          cov_18oedmdfe().s[29]++;
          query = query.eq(key, value);
        });
        const {
          data,
          error
        } =
        /* istanbul ignore next */
        (cov_18oedmdfe().s[30]++, await query);
        /* istanbul ignore next */
        cov_18oedmdfe().s[31]++;
        if (error) {
          /* istanbul ignore next */
          cov_18oedmdfe().b[5][0]++;
          cov_18oedmdfe().s[32]++;
          throw new Error(`Error consultando productos: ${error.message}`);
        } else
        /* istanbul ignore next */
        {
          cov_18oedmdfe().b[5][1]++;
        }
        cov_18oedmdfe().s[33]++;
        return data;
      }, {
        enforceRLS: true,
        auditLog: true
      }));
      /* istanbul ignore next */
      cov_18oedmdfe().s[34]++;
      if (productsResult.success) {
        /* istanbul ignore next */
        cov_18oedmdfe().b[6][0]++;
        cov_18oedmdfe().s[35]++;
        productsData = productsResult.data;
      } else
      /* istanbul ignore next */
      {
        cov_18oedmdfe().b[6][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_18oedmdfe().b[3][1]++;
    }
    cov_18oedmdfe().s[36]++;
    return _server.NextResponse.json({
      success:
      /* istanbul ignore next */
      (cov_18oedmdfe().b[7][0]++, enterpriseResult.success) ||
      /* istanbul ignore next */
      (cov_18oedmdfe().b[7][1]++, legacyResult.success),
      message: 'Admin products access comparison completed',
      enterprise: {
        status: enterpriseResult.success ?
        /* istanbul ignore next */
        (cov_18oedmdfe().b[8][0]++, 'SUCCESS') :
        /* istanbul ignore next */
        (cov_18oedmdfe().b[8][1]++, 'FAILED'),
        context: enterpriseResult.success ?
        /* istanbul ignore next */
        (cov_18oedmdfe().b[9][0]++, {
          userId: enterpriseResult.context?.userId,
          role: enterpriseResult.context?.role,
          permissions: enterpriseResult.context?.permissions,
          securityLevel: enterpriseResult.context?.securityLevel
        }) :
        /* istanbul ignore next */
        (cov_18oedmdfe().b[9][1]++, null),
        rls: {
          filters_applied: rlsFilters,
          products_found:
          /* istanbul ignore next */
          (cov_18oedmdfe().b[10][0]++, productsData?.length) ||
          /* istanbul ignore next */
          (cov_18oedmdfe().b[10][1]++, 0),
          sample_products: productsData?.slice(0, 3)
        },
        cache: cacheStats,
        error: enterpriseResult.error,
        code: enterpriseResult.code
      },
      legacy: {
        status: legacyResult.success ?
        /* istanbul ignore next */
        (cov_18oedmdfe().b[11][0]++, 'SUCCESS') :
        /* istanbul ignore next */
        (cov_18oedmdfe().b[11][1]++, 'FAILED'),
        authResult: {
          success: legacyResult.success,
          hasUser: !!legacyResult.user,
          hasSupabase: !!legacyResult.supabase,
          userEmail: legacyResult.user?.email,
          userRole: legacyResult.user?.user_roles?.role_name
        },
        error: legacyResult.error
      },
      comparison: {
        methods_agree: enterpriseResult.success === legacyResult.success,
        enterprise_advantages: ['RLS integration with automatic filters', 'Cache statistics and optimization', 'Granular permissions checking', 'Complete security context', 'Audit logging enabled'],
        recommendation: enterpriseResult.success ?
        /* istanbul ignore next */
        (cov_18oedmdfe().b[12][0]++, 'Use enterprise method') :
        /* istanbul ignore next */
        (cov_18oedmdfe().b[12][1]++, 'Fix authentication issues')
      },
      debug: {
        timestamp: new Date().toISOString(),
        request_info: {
          method: request.method,
          url: request.url
        }
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_18oedmdfe().s[37]++;
    console.error('ğ Debug Admin Products: Error:', error);
    /* istanbul ignore next */
    cov_18oedmdfe().s[38]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Unexpected error',
      debug: {
        errorMessage: error instanceof Error ?
        /* istanbul ignore next */
        (cov_18oedmdfe().b[13][0]++, error.message) :
        /* istanbul ignore next */
        (cov_18oedmdfe().b[13][1]++, 'Unknown error')
      }
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,