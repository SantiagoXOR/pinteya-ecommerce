3a01f5b50a9414cc521a4efcb5ae4156
/**
 * HeroCarouselInteractive Component
 * Carousel interactivo para la sección hero
 */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: Object.getOwnPropertyDescriptor(all, name).get
    });
}
_export(exports, {
    get HeroCarouselInteractive () {
        return HeroCarouselInteractive;
    },
    get default () {
        return _default;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const defaultSlides = [
    {
        id: '1',
        title: 'Bienvenido a Pinteya',
        subtitle: 'Tu tienda de pinturería y ferretería',
        image: '/images/hero/slide1.jpg',
        cta: {
            text: 'Ver Productos',
            href: '/productos'
        }
    },
    {
        id: '2',
        title: 'Ofertas Especiales',
        subtitle: 'Descuentos en productos seleccionados',
        image: '/images/hero/slide2.jpg',
        cta: {
            text: 'Ver Ofertas',
            href: '/ofertas'
        }
    }
];
const HeroCarouselInteractive = ({ slides = defaultSlides, autoPlay = true, interval = 5000, className = '' })=>{
    const [currentSlide, setCurrentSlide] = (0, _react.useState)(0);
    (0, _react.useEffect)(()=>{
        if (!autoPlay) {
            return;
        }
        const timer = setInterval(()=>{
            setCurrentSlide((prev)=>(prev + 1) % slides.length);
        }, interval);
        return ()=>clearInterval(timer);
    }, [
        autoPlay,
        interval,
        slides.length
    ]);
    const goToSlide = (index)=>{
        setCurrentSlide(index);
    };
    const nextSlide = ()=>{
        setCurrentSlide((prev)=>(prev + 1) % slides.length);
    };
    const prevSlide = ()=>{
        setCurrentSlide((prev)=>(prev - 1 + slides.length) % slides.length);
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        className: `relative w-full h-96 overflow-hidden rounded-lg ${className}`,
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "relative w-full h-full",
                children: slides.map((slide, index)=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: `absolute inset-0 transition-opacity duration-500 ${index === currentSlide ? 'opacity-100' : 'opacity-0'}`,
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            className: "w-full h-full bg-cover bg-center",
                            style: {
                                backgroundImage: `url(${slide.image})`
                            },
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                className: "absolute inset-0 bg-black bg-opacity-40 flex items-center justify-center",
                                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "text-center text-white",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("h2", {
                                            className: "text-4xl font-bold mb-4",
                                            children: slide.title
                                        }),
                                        slide.subtitle && /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                            className: "text-xl mb-6",
                                            children: slide.subtitle
                                        }),
                                        slide.cta && /*#__PURE__*/ (0, _jsxruntime.jsx)("a", {
                                            href: slide.cta.href,
                                            className: "inline-block bg-primary text-white px-6 py-3 rounded-lg font-medium hover:bg-primary-dark transition-colors",
                                            children: slide.cta.text
                                        })
                                    ]
                                })
                            })
                        })
                    }, slide.id))
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                onClick: prevSlide,
                className: "absolute left-4 top-1/2 transform -translate-y-1/2 bg-white bg-opacity-20 hover:bg-opacity-30 text-white p-2 rounded-full transition-all",
                "aria-label": "Slide anterior",
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)("svg", {
                    className: "w-6 h-6",
                    fill: "none",
                    stroke: "currentColor",
                    viewBox: "0 0 24 24",
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        strokeWidth: 2,
                        d: "M15 19l-7-7 7-7"
                    })
                })
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                onClick: nextSlide,
                className: "absolute right-4 top-1/2 transform -translate-y-1/2 bg-white bg-opacity-20 hover:bg-opacity-30 text-white p-2 rounded-full transition-all",
                "aria-label": "Slide siguiente",
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)("svg", {
                    className: "w-6 h-6",
                    fill: "none",
                    stroke: "currentColor",
                    viewBox: "0 0 24 24",
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        strokeWidth: 2,
                        d: "M9 5l7 7-7 7"
                    })
                })
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "absolute bottom-4 left-1/2 transform -translate-x-1/2 flex space-x-2",
                children: slides.map((_, index)=>/*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                        onClick: ()=>goToSlide(index),
                        className: `w-3 h-3 rounded-full transition-all ${index === currentSlide ? 'bg-white' : 'bg-white bg-opacity-50'}`,
                        "aria-label": `Ir al slide ${index + 1}`
                    }, index))
            })
        ]
    });
};
const _default = HeroCarouselInteractive;

//# sourceMappingURL=data:application/json;base64,