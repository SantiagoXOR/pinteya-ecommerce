906e06e749100a2c97a0c987bce1b902
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_2qrdia97kv() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\orders\\stats\\route.ts";
  var hash = "170a6c009537e7ca9b78f89eeae07bc28347543c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\orders\\stats\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 23
        }
      },
      "6": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 38
        }
      },
      "7": {
        start: {
          line: 21,
          column: 19
        },
        end: {
          line: 21,
          column: 64
        }
      },
      "8": {
        start: {
          line: 22,
          column: 18
        },
        end: {
          line: 22,
          column: 69
        }
      },
      "9": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 24
        }
      },
      "10": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 99,
          column: 5
        }
      },
      "11": {
        start: {
          line: 27,
          column: 27
        },
        end: {
          line: 27,
          column: 67
        }
      },
      "12": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 34,
          column: 9
        }
      },
      "13": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 33,
          column: 15
        }
      },
      "14": {
        start: {
          line: 35,
          column: 22
        },
        end: {
          line: 35,
          column: 60
        }
      },
      "15": {
        start: {
          line: 37,
          column: 110
        },
        end: {
          line: 66,
          column: 10
        }
      },
      "16": {
        start: {
          line: 68,
          column: 29
        },
        end: {
          line: 68,
          column: 115
        }
      },
      "17": {
        start: {
          line: 68,
          column: 70
        },
        end: {
          line: 68,
          column: 106
        }
      },
      "18": {
        start: {
          line: 69,
          column: 29
        },
        end: {
          line: 69,
          column: 120
        }
      },
      "19": {
        start: {
          line: 69,
          column: 75
        },
        end: {
          line: 69,
          column: 111
        }
      },
      "20": {
        start: {
          line: 70,
          column: 22
        },
        end: {
          line: 77,
          column: 9
        }
      },
      "21": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 82,
          column: 11
        }
      },
      "22": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 74
        }
      },
      "23": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 98,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 19
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "GET",
        decl: {
          start: {
            line: 24,
            column: 15
          },
          end: {
            line: 24,
            column: 18
          }
        },
        loc: {
          start: {
            line: 24,
            column: 28
          },
          end: {
            line: 100,
            column: 1
          }
        },
        line: 24
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 68,
            column: 56
          },
          end: {
            line: 68,
            column: 57
          }
        },
        loc: {
          start: {
            line: 68,
            column: 70
          },
          end: {
            line: 68,
            column: 106
          }
        },
        line: 68
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 69,
            column: 61
          },
          end: {
            line: 69,
            column: 62
          }
        },
        loc: {
          start: {
            line: 69,
            column: 75
          },
          end: {
            line: 69,
            column: 111
          }
        },
        line: 69
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "1": {
        loc: {
          start: {
            line: 32,
            column: 24
          },
          end: {
            line: 32,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 24
          },
          end: {
            line: 32,
            column: 41
          }
        }, {
          start: {
            line: 32,
            column: 45
          },
          end: {
            line: 32,
            column: 48
          }
        }],
        line: 32
      },
      "2": {
        loc: {
          start: {
            line: 68,
            column: 29
          },
          end: {
            line: 68,
            column: 115
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 68,
            column: 29
          },
          end: {
            line: 68,
            column: 110
          }
        }, {
          start: {
            line: 68,
            column: 114
          },
          end: {
            line: 68,
            column: 115
          }
        }],
        line: 68
      },
      "3": {
        loc: {
          start: {
            line: 68,
            column: 77
          },
          end: {
            line: 68,
            column: 105
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 68,
            column: 77
          },
          end: {
            line: 68,
            column: 100
          }
        }, {
          start: {
            line: 68,
            column: 104
          },
          end: {
            line: 68,
            column: 105
          }
        }],
        line: 68
      },
      "4": {
        loc: {
          start: {
            line: 69,
            column: 29
          },
          end: {
            line: 69,
            column: 120
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 69,
            column: 29
          },
          end: {
            line: 69,
            column: 115
          }
        }, {
          start: {
            line: 69,
            column: 119
          },
          end: {
            line: 69,
            column: 120
          }
        }],
        line: 69
      },
      "5": {
        loc: {
          start: {
            line: 69,
            column: 82
          },
          end: {
            line: 69,
            column: 110
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 69,
            column: 82
          },
          end: {
            line: 69,
            column: 105
          }
        }, {
          start: {
            line: 69,
            column: 109
          },
          end: {
            line: 69,
            column: 110
          }
        }],
        line: 69
      },
      "6": {
        loc: {
          start: {
            line: 71,
            column: 26
          },
          end: {
            line: 71,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 71,
            column: 26
          },
          end: {
            line: 71,
            column: 43
          }
        }, {
          start: {
            line: 71,
            column: 47
          },
          end: {
            line: 71,
            column: 48
          }
        }],
        line: 71
      },
      "7": {
        loc: {
          start: {
            line: 72,
            column: 28
          },
          end: {
            line: 72,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 28
          },
          end: {
            line: 72,
            column: 47
          }
        }, {
          start: {
            line: 72,
            column: 51
          },
          end: {
            line: 72,
            column: 52
          }
        }],
        line: 72
      },
      "8": {
        loc: {
          start: {
            line: 73,
            column: 30
          },
          end: {
            line: 73,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 73,
            column: 30
          },
          end: {
            line: 73,
            column: 51
          }
        }, {
          start: {
            line: 73,
            column: 55
          },
          end: {
            line: 73,
            column: 56
          }
        }],
        line: 73
      },
      "9": {
        loc: {
          start: {
            line: 74,
            column: 26
          },
          end: {
            line: 74,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 74,
            column: 26
          },
          end: {
            line: 74,
            column: 43
          }
        }, {
          start: {
            line: 74,
            column: 47
          },
          end: {
            line: 74,
            column: 48
          }
        }],
        line: 74
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\orders\\stats\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { requireAdminAuth } from '@/lib/auth/admin-auth';\r\nimport { supabaseAdmin } from '@/lib/integrations/supabase';\r\n\r\n/**\r\n * GET /api/admin/orders/stats\r\n * Obtener estad\xEDsticas de \xF3rdenes desde Supabase\r\n */\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    // Verificar autenticaci\xF3n y permisos de admin\r\n    const authResult = await requireAdminAuth();\r\n\r\n    if (!authResult.success) {\r\n      return NextResponse.json(\r\n        { error: authResult.error },\r\n        { status: authResult.status || 401 }\r\n      );\r\n    }\r\n\r\n    const today = new Date().toISOString().split('T')[0];\r\n\r\n    // Obtener estad\xEDsticas de \xF3rdenes con revenue\r\n    const [totalResult, pendingResult, completedResult, todayResult, revenueResult, todayRevenueResult] = await Promise.all([\r\n      // Total de \xF3rdenes\r\n      supabaseAdmin.from('orders').select('id', { count: 'exact', head: true }),\r\n      // \xD3rdenes pendientes\r\n      supabaseAdmin.from('orders').select('id', { count: 'exact', head: true })\r\n        .in('status', ['pending', 'confirmed', 'processing']),\r\n      // \xD3rdenes completadas\r\n      supabaseAdmin.from('orders').select('id', { count: 'exact', head: true })\r\n        .eq('status', 'delivered'),\r\n      // \xD3rdenes de hoy\r\n      supabaseAdmin.from('orders').select('id', { count: 'exact', head: true })\r\n        .gte('created_at', `${today}T00:00:00Z`)\r\n        .lt('created_at', `${today}T23:59:59Z`),\r\n      // Revenue total (\xF3rdenes completadas)\r\n      supabaseAdmin.from('orders').select('total')\r\n        .eq('status', 'delivered'),\r\n      // Revenue de hoy (\xF3rdenes completadas de hoy)\r\n      supabaseAdmin.from('orders').select('total')\r\n        .eq('status', 'delivered')\r\n        .gte('created_at', `${today}T00:00:00Z`)\r\n        .lt('created_at', `${today}T23:59:59Z`)\r\n    ]);\r\n\r\n    // Calcular revenue\r\n    const totalRevenue = revenueResult.data?.reduce((sum, order) => sum + (parseFloat(order.total) || 0), 0) || 0;\r\n    const todayRevenue = todayRevenueResult.data?.reduce((sum, order) => sum + (parseFloat(order.total) || 0), 0) || 0;\r\n\r\n    const stats = {\r\n      total_orders: totalResult.count || 0,\r\n      pending_orders: pendingResult.count || 0,\r\n      completed_orders: completedResult.count || 0,\r\n      today_orders: todayResult.count || 0,\r\n      total_revenue: totalRevenue,\r\n      today_revenue: todayRevenue\r\n    };\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: stats,\r\n      timestamp: new Date().toISOString()\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Error obteniendo estad\xEDsticas de \xF3rdenes:', error);\r\n    \r\n    return NextResponse.json(\r\n      { \r\n        success: false,\r\n        error: 'Error interno del servidor',\r\n        data: {\r\n          total_orders: 0,\r\n          pending_orders: 0,\r\n          completed_orders: 0,\r\n          today_orders: 0,\r\n          total_revenue: 0,\r\n          today_revenue: 0\r\n        }\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "runtime", "request", "authResult", "requireAdminAuth", "success", "NextResponse", "json", "error", "status", "today", "Date", "toISOString", "split", "totalResult", "pendingResult", "completedResult", "todayResult", "revenueResult", "todayRevenueResult", "Promise", "all", "supabaseAdmin", "from", "select", "count", "head", "in", "eq", "gte", "lt", "totalRevenue", "data", "reduce", "sum", "order", "parseFloat", "total", "todayRevenue", "stats", "total_orders", "pending_orders", "completed_orders", "today_orders", "total_revenue", "today_revenue", "timestamp", "console"],
      mappings: "AAAA,qCAAqC;;;;;;;;;;;;QAWfA;eAAAA;;QAVTC;eAAAA;;;wBAE6B;2BACT;0BACH;AAJvB,MAAMA,UAAU;AAUhB,eAAeD,IAAIE,OAAoB;IAC5C,IAAI;QACF,8CAA8C;QAC9C,MAAMC,aAAa,MAAMC,IAAAA,2BAAgB;QAEzC,IAAI,CAACD,WAAWE,OAAO,EAAE;YACvB,OAAOC,oBAAY,CAACC,IAAI,CACtB;gBAAEC,OAAOL,WAAWK,KAAK;YAAC,GAC1B;gBAAEC,QAAQN,WAAWM,MAAM,IAAI;YAAI;QAEvC;QAEA,MAAMC,QAAQ,IAAIC,OAAOC,WAAW,GAAGC,KAAK,CAAC,IAAI,CAAC,EAAE;QAEpD,8CAA8C;QAC9C,MAAM,CAACC,aAAaC,eAAeC,iBAAiBC,aAAaC,eAAeC,mBAAmB,GAAG,MAAMC,QAAQC,GAAG,CAAC;YACtH,mBAAmB;YACnBC,uBAAa,CAACC,IAAI,CAAC,UAAUC,MAAM,CAAC,MAAM;gBAAEC,OAAO;gBAASC,MAAM;YAAK;YACvE,qBAAqB;YACrBJ,uBAAa,CAACC,IAAI,CAAC,UAAUC,MAAM,CAAC,MAAM;gBAAEC,OAAO;gBAASC,MAAM;YAAK,GACpEC,EAAE,CAAC,UAAU;gBAAC;gBAAW;gBAAa;aAAa;YACtD,sBAAsB;YACtBL,uBAAa,CAACC,IAAI,CAAC,UAAUC,MAAM,CAAC,MAAM;gBAAEC,OAAO;gBAASC,MAAM;YAAK,GACpEE,EAAE,CAAC,UAAU;YAChB,iBAAiB;YACjBN,uBAAa,CAACC,IAAI,CAAC,UAAUC,MAAM,CAAC,MAAM;gBAAEC,OAAO;gBAASC,MAAM;YAAK,GACpEG,GAAG,CAAC,cAAc,GAAGnB,MAAM,UAAU,CAAC,EACtCoB,EAAE,CAAC,cAAc,GAAGpB,MAAM,UAAU,CAAC;YACxC,sCAAsC;YACtCY,uBAAa,CAACC,IAAI,CAAC,UAAUC,MAAM,CAAC,SACjCI,EAAE,CAAC,UAAU;YAChB,8CAA8C;YAC9CN,uBAAa,CAACC,IAAI,CAAC,UAAUC,MAAM,CAAC,SACjCI,EAAE,CAAC,UAAU,aACbC,GAAG,CAAC,cAAc,GAAGnB,MAAM,UAAU,CAAC,EACtCoB,EAAE,CAAC,cAAc,GAAGpB,MAAM,UAAU,CAAC;SACzC;QAED,mBAAmB;QACnB,MAAMqB,eAAeb,cAAcc,IAAI,EAAEC,OAAO,CAACC,KAAKC,QAAUD,MAAOE,CAAAA,WAAWD,MAAME,KAAK,KAAK,CAAA,GAAI,MAAM;QAC5G,MAAMC,eAAenB,mBAAmBa,IAAI,EAAEC,OAAO,CAACC,KAAKC,QAAUD,MAAOE,CAAAA,WAAWD,MAAME,KAAK,KAAK,CAAA,GAAI,MAAM;QAEjH,MAAME,QAAQ;YACZC,cAAc1B,YAAYW,KAAK,IAAI;YACnCgB,gBAAgB1B,cAAcU,KAAK,IAAI;YACvCiB,kBAAkB1B,gBAAgBS,KAAK,IAAI;YAC3CkB,cAAc1B,YAAYQ,KAAK,IAAI;YACnCmB,eAAeb;YACfc,eAAeP;QACjB;QAEA,OAAOhC,oBAAY,CAACC,IAAI,CAAC;YACvBF,SAAS;YACT2B,MAAMO;YACNO,WAAW,IAAInC,OAAOC,WAAW;QACnC;IAEF,EAAE,OAAOJ,OAAO;QACduC,QAAQvC,KAAK,CAAC,6CAA6CA;QAE3D,OAAOF,oBAAY,CAACC,IAAI,CACtB;YACEF,SAAS;YACTG,OAAO;YACPwB,MAAM;gBACJQ,cAAc;gBACdC,gBAAgB;gBAChBC,kBAAkB;gBAClBC,cAAc;gBACdC,eAAe;gBACfC,eAAe;YACjB;QACF,GACA;YAAEpC,QAAQ;QAAI;IAElB;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "170a6c009537e7ca9b78f89eeae07bc28347543c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2qrdia97kv = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2qrdia97kv();
cov_2qrdia97kv().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2qrdia97kv().f[0]++;
  cov_2qrdia97kv().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2qrdia97kv().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_2qrdia97kv().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_2qrdia97kv().f[1]++;
    cov_2qrdia97kv().s[4]++;
    return GET;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_2qrdia97kv().f[2]++;
    cov_2qrdia97kv().s[5]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_2qrdia97kv().s[6]++, require("next/server"));
const _adminauth =
/* istanbul ignore next */
(cov_2qrdia97kv().s[7]++, require("../../../../../lib/auth/admin-auth"));
const _supabase =
/* istanbul ignore next */
(cov_2qrdia97kv().s[8]++, require("../../../../../lib/integrations/supabase"));
const runtime =
/* istanbul ignore next */
(cov_2qrdia97kv().s[9]++, 'nodejs');
async function GET(request) {
  /* istanbul ignore next */
  cov_2qrdia97kv().f[3]++;
  cov_2qrdia97kv().s[10]++;
  try {
    // Verificar autenticaciÃ³n y permisos de admin
    const authResult =
    /* istanbul ignore next */
    (cov_2qrdia97kv().s[11]++, await (0, _adminauth.requireAdminAuth)());
    /* istanbul ignore next */
    cov_2qrdia97kv().s[12]++;
    if (!authResult.success) {
      /* istanbul ignore next */
      cov_2qrdia97kv().b[0][0]++;
      cov_2qrdia97kv().s[13]++;
      return _server.NextResponse.json({
        error: authResult.error
      }, {
        status:
        /* istanbul ignore next */
        (cov_2qrdia97kv().b[1][0]++, authResult.status) ||
        /* istanbul ignore next */
        (cov_2qrdia97kv().b[1][1]++, 401)
      });
    } else
    /* istanbul ignore next */
    {
      cov_2qrdia97kv().b[0][1]++;
    }
    const today =
    /* istanbul ignore next */
    (cov_2qrdia97kv().s[14]++, new Date().toISOString().split('T')[0]);
    // Obtener estadÃ­sticas de Ã³rdenes con revenue
    const [totalResult, pendingResult, completedResult, todayResult, revenueResult, todayRevenueResult] =
    /* istanbul ignore next */
    (cov_2qrdia97kv().s[15]++, await Promise.all([
    // Total de Ã³rdenes
    _supabase.supabaseAdmin.from('orders').select('id', {
      count: 'exact',
      head: true
    }),
    // Ãrdenes pendientes
    _supabase.supabaseAdmin.from('orders').select('id', {
      count: 'exact',
      head: true
    }).in('status', ['pending', 'confirmed', 'processing']),
    // Ãrdenes completadas
    _supabase.supabaseAdmin.from('orders').select('id', {
      count: 'exact',
      head: true
    }).eq('status', 'delivered'),
    // Ãrdenes de hoy
    _supabase.supabaseAdmin.from('orders').select('id', {
      count: 'exact',
      head: true
    }).gte('created_at', `${today}T00:00:00Z`).lt('created_at', `${today}T23:59:59Z`),
    // Revenue total (Ã³rdenes completadas)
    _supabase.supabaseAdmin.from('orders').select('total').eq('status', 'delivered'),
    // Revenue de hoy (Ã³rdenes completadas de hoy)
    _supabase.supabaseAdmin.from('orders').select('total').eq('status', 'delivered').gte('created_at', `${today}T00:00:00Z`).lt('created_at', `${today}T23:59:59Z`)]));
    // Calcular revenue
    const totalRevenue =
    /* istanbul ignore next */
    (cov_2qrdia97kv().s[16]++,
    /* istanbul ignore next */
    (cov_2qrdia97kv().b[2][0]++, revenueResult.data?.reduce((sum, order) => {
      /* istanbul ignore next */
      cov_2qrdia97kv().f[4]++;
      cov_2qrdia97kv().s[17]++;
      return sum + (
      /* istanbul ignore next */
      (cov_2qrdia97kv().b[3][0]++, parseFloat(order.total)) ||
      /* istanbul ignore next */
      (cov_2qrdia97kv().b[3][1]++, 0));
    }, 0)) ||
    /* istanbul ignore next */
    (cov_2qrdia97kv().b[2][1]++, 0));
    const todayRevenue =
    /* istanbul ignore next */
    (cov_2qrdia97kv().s[18]++,
    /* istanbul ignore next */
    (cov_2qrdia97kv().b[4][0]++, todayRevenueResult.data?.reduce((sum, order) => {
      /* istanbul ignore next */
      cov_2qrdia97kv().f[5]++;
      cov_2qrdia97kv().s[19]++;
      return sum + (
      /* istanbul ignore next */
      (cov_2qrdia97kv().b[5][0]++, parseFloat(order.total)) ||
      /* istanbul ignore next */
      (cov_2qrdia97kv().b[5][1]++, 0));
    }, 0)) ||
    /* istanbul ignore next */
    (cov_2qrdia97kv().b[4][1]++, 0));
    const stats =
    /* istanbul ignore next */
    (cov_2qrdia97kv().s[20]++, {
      total_orders:
      /* istanbul ignore next */
      (cov_2qrdia97kv().b[6][0]++, totalResult.count) ||
      /* istanbul ignore next */
      (cov_2qrdia97kv().b[6][1]++, 0),
      pending_orders:
      /* istanbul ignore next */
      (cov_2qrdia97kv().b[7][0]++, pendingResult.count) ||
      /* istanbul ignore next */
      (cov_2qrdia97kv().b[7][1]++, 0),
      completed_orders:
      /* istanbul ignore next */
      (cov_2qrdia97kv().b[8][0]++, completedResult.count) ||
      /* istanbul ignore next */
      (cov_2qrdia97kv().b[8][1]++, 0),
      today_orders:
      /* istanbul ignore next */
      (cov_2qrdia97kv().b[9][0]++, todayResult.count) ||
      /* istanbul ignore next */
      (cov_2qrdia97kv().b[9][1]++, 0),
      total_revenue: totalRevenue,
      today_revenue: todayRevenue
    });
    /* istanbul ignore next */
    cov_2qrdia97kv().s[21]++;
    return _server.NextResponse.json({
      success: true,
      data: stats,
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2qrdia97kv().s[22]++;
    console.error('Error obteniendo estadÃ­sticas de Ã³rdenes:', error);
    /* istanbul ignore next */
    cov_2qrdia97kv().s[23]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Error interno del servidor',
      data: {
        total_orders: 0,
        pending_orders: 0,
        completed_orders: 0,
        today_orders: 0,
        total_revenue: 0,
        today_revenue: 0
      }
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,