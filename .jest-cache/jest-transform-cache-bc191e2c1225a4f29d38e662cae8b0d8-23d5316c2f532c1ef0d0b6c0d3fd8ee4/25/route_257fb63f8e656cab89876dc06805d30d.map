{"version":3,"names":["cov_2qrdia97kv","actualCoverage","s","GET","f","runtime","request","authResult","_adminauth","requireAdminAuth","success","b","_server","NextResponse","json","error","status","today","Date","toISOString","split","totalResult","pendingResult","completedResult","todayResult","revenueResult","todayRevenueResult","Promise","all","_supabase","supabaseAdmin","from","select","count","head","in","eq","gte","lt","totalRevenue","data","reduce","sum","order","parseFloat","total","todayRevenue","stats","total_orders","pending_orders","completed_orders","today_orders","total_revenue","today_revenue","timestamp","console"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\orders\\stats\\route.ts"],"sourcesContent":["// Configuración para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { requireAdminAuth } from '@/lib/auth/admin-auth';\r\nimport { supabaseAdmin } from '@/lib/integrations/supabase';\r\n\r\n/**\r\n * GET /api/admin/orders/stats\r\n * Obtener estadísticas de órdenes desde Supabase\r\n */\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    // Verificar autenticación y permisos de admin\r\n    const authResult = await requireAdminAuth();\r\n\r\n    if (!authResult.success) {\r\n      return NextResponse.json(\r\n        { error: authResult.error },\r\n        { status: authResult.status || 401 }\r\n      );\r\n    }\r\n\r\n    const today = new Date().toISOString().split('T')[0];\r\n\r\n    // Obtener estadísticas de órdenes con revenue\r\n    const [totalResult, pendingResult, completedResult, todayResult, revenueResult, todayRevenueResult] = await Promise.all([\r\n      // Total de órdenes\r\n      supabaseAdmin.from('orders').select('id', { count: 'exact', head: true }),\r\n      // Órdenes pendientes\r\n      supabaseAdmin.from('orders').select('id', { count: 'exact', head: true })\r\n        .in('status', ['pending', 'confirmed', 'processing']),\r\n      // Órdenes completadas\r\n      supabaseAdmin.from('orders').select('id', { count: 'exact', head: true })\r\n        .eq('status', 'delivered'),\r\n      // Órdenes de hoy\r\n      supabaseAdmin.from('orders').select('id', { count: 'exact', head: true })\r\n        .gte('created_at', `${today}T00:00:00Z`)\r\n        .lt('created_at', `${today}T23:59:59Z`),\r\n      // Revenue total (órdenes completadas)\r\n      supabaseAdmin.from('orders').select('total')\r\n        .eq('status', 'delivered'),\r\n      // Revenue de hoy (órdenes completadas de hoy)\r\n      supabaseAdmin.from('orders').select('total')\r\n        .eq('status', 'delivered')\r\n        .gte('created_at', `${today}T00:00:00Z`)\r\n        .lt('created_at', `${today}T23:59:59Z`)\r\n    ]);\r\n\r\n    // Calcular revenue\r\n    const totalRevenue = revenueResult.data?.reduce((sum, order) => sum + (parseFloat(order.total) || 0), 0) || 0;\r\n    const todayRevenue = todayRevenueResult.data?.reduce((sum, order) => sum + (parseFloat(order.total) || 0), 0) || 0;\r\n\r\n    const stats = {\r\n      total_orders: totalResult.count || 0,\r\n      pending_orders: pendingResult.count || 0,\r\n      completed_orders: completedResult.count || 0,\r\n      today_orders: todayResult.count || 0,\r\n      total_revenue: totalRevenue,\r\n      today_revenue: todayRevenue\r\n    };\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: stats,\r\n      timestamp: new Date().toISOString()\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Error obteniendo estadísticas de órdenes:', error);\r\n    \r\n    return NextResponse.json(\r\n      { \r\n        success: false,\r\n        error: 'Error interno del servidor',\r\n        data: {\r\n          total_orders: 0,\r\n          pending_orders: 0,\r\n          completed_orders: 0,\r\n          today_orders: 0,\r\n          total_revenue: 0,\r\n          today_revenue: 0\r\n        }\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}