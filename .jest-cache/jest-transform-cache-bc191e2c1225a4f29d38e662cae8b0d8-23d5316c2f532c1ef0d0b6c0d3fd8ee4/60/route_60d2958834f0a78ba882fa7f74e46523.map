{"version":3,"names":["cov_1aag7gutoy","actualCoverage","s","PATCH","f","runtime","request","session","_config","auth","user","id","b","_server","NextResponse","json","error","status","userId","body","notifications","data","currentPrefs","fetchError","_supabase","supabaseAdmin","from","select","eq","single","code","console","existingPrefs","preferences","updatedPreferences","updatedPrefs","upsert","user_id","updated_at","Date","toISOString","requestInfo","_activityLogger","getRequestInfo","logPreferenceActivity","updated_settings","Object","keys","email_notifications","emailNotifications","push_notifications","pushNotifications","security_alerts","securityAlerts","success","message"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\user\\preferences\\notifications\\route.ts"],"sourcesContent":["// Configuración para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - API DE PREFERENCIAS DE NOTIFICACIONES\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { auth } from '@/lib/auth/config';\r\nimport { supabaseAdmin } from '@/lib/integrations/supabase';\r\nimport { logPreferenceActivity, getRequestInfo } from '@/lib/activity/activityLogger';\r\n\r\n// PATCH - Actualizar preferencias de notificaciones\r\nexport async function PATCH(request: NextRequest) {\r\n  try {\r\n    const session = await auth();\r\n    if (!session?.user?.id) {\r\n      return NextResponse.json(\r\n        { error: 'No autorizado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    const userId = session.user.id;\r\n    const body = await request.json();\r\n    const { notifications } = body;\r\n\r\n    if (!notifications) {\r\n      return NextResponse.json(\r\n        { error: 'Configuración de notificaciones requerida' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Obtener preferencias actuales\r\n    const { data: currentPrefs, error: fetchError } = await supabaseAdmin\r\n      .from('user_preferences')\r\n      .select('preferences')\r\n      .eq('user_id', userId)\r\n      .single();\r\n\r\n    if (fetchError && fetchError.code !== 'PGRST116') {\r\n      console.error('Error al obtener preferencias actuales:', fetchError);\r\n      return NextResponse.json(\r\n        { error: 'Error al obtener preferencias actuales' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Combinar con preferencias existentes\r\n    const existingPrefs = currentPrefs?.preferences || {};\r\n    const updatedPreferences = {\r\n      ...existingPrefs,\r\n      notifications: {\r\n        ...existingPrefs.notifications,\r\n        ...notifications,\r\n      },\r\n    };\r\n\r\n    // Actualizar en la base de datos\r\n    const { data: updatedPrefs, error } = await supabaseAdmin\r\n      .from('user_preferences')\r\n      .upsert({\r\n        user_id: userId,\r\n        preferences: updatedPreferences,\r\n        updated_at: new Date().toISOString(),\r\n      })\r\n      .select()\r\n      .single();\r\n\r\n    if (error) {\r\n      console.error('Error al actualizar preferencias de notificaciones:', error);\r\n      return NextResponse.json(\r\n        { error: 'Error al actualizar preferencias de notificaciones' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Registrar actividad\r\n    const requestInfo = getRequestInfo(request);\r\n    await logPreferenceActivity(\r\n      userId,\r\n      'update_notifications',\r\n      {\r\n        updated_settings: Object.keys(notifications),\r\n        email_notifications: notifications.emailNotifications,\r\n        push_notifications: notifications.pushNotifications,\r\n        security_alerts: notifications.securityAlerts,\r\n      },\r\n      requestInfo\r\n    );\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      notifications: updatedPrefs.preferences.notifications,\r\n      message: 'Preferencias de notificaciones actualizadas correctamente',\r\n    });\r\n  } catch (error) {\r\n    console.error('Error en PATCH /api/user/preferences/notifications:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappingsa;IAAAA,cAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;AAAAA,cAAA,GAAAE,CAAA;;;;;;;;;;;;;;;;;;;;MAYSC,MAAA;IAAA;IAAAH,cAAA,GAAAI,CAAA;IAAAJ,cAAA,GAAAE,CAAA;WAAAC,KAAA;;MAZTE,QAAA;IAAA;IAAAL,cAAA,GAAAI,CAAA;IAAAJ,cAAA,GAAAE,CAAA;WAAAG,OAAA;;;;;kCAM6B;;;kCACrB;;;kCACS;;;kCACwB;AAT/C,MAAMA,OAAA;AAAA;AAAA,CAAAL,cAAA,GAAAE,CAAA,QAAU;AAYhB,eAAeC,MAAMG,OAAoB;EAAA;EAAAN,cAAA,GAAAI,CAAA;EAAAJ,cAAA,GAAAE,CAAA;EAC9C,IAAI;IACF,MAAMK,OAAA;IAAA;IAAA,CAAAP,cAAA,GAAAE,CAAA,QAAU,MAAM,IAAAM,OAAA,CAAAC,IAAI;IAAA;IAAAT,cAAA,GAAAE,CAAA;IAC1B,IAAI,CAACK,OAAA,EAASG,IAAA,EAAMC,EAAA,EAAI;MAAA;MAAAX,cAAA,GAAAY,CAAA;MAAAZ,cAAA,GAAAE,CAAA;MACtB,OAAOW,OAAA,CAAAC,YAAY,CAACC,IAAI,CACtB;QAAEC,KAAA,EAAO;MAAgB,GACzB;QAAEC,MAAA,EAAQ;MAAI;IAElB;IAAA;IAAA;MAAAjB,cAAA,GAAAY,CAAA;IAAA;IAEA,MAAMM,MAAA;IAAA;IAAA,CAAAlB,cAAA,GAAAE,CAAA,QAASK,OAAA,CAAQG,IAAI,CAACC,EAAE;IAC9B,MAAMQ,IAAA;IAAA;IAAA,CAAAnB,cAAA,GAAAE,CAAA,QAAO,MAAMI,OAAA,CAAQS,IAAI;IAC/B,MAAM;MAAEK;IAAa,CAAE;IAAA;IAAA,CAAApB,cAAA,GAAAE,CAAA,QAAGiB,IAAA;IAAA;IAAAnB,cAAA,GAAAE,CAAA;IAE1B,IAAI,CAACkB,aAAA,EAAe;MAAA;MAAApB,cAAA,GAAAY,CAAA;MAAAZ,cAAA,GAAAE,CAAA;MAClB,OAAOW,OAAA,CAAAC,YAAY,CAACC,IAAI,CACtB;QAAEC,KAAA,EAAO;MAA4C,GACrD;QAAEC,MAAA,EAAQ;MAAI;IAElB;IAAA;IAAA;MAAAjB,cAAA,GAAAY,CAAA;IAAA;IAEA;IACA,MAAM;MAAES,IAAA,EAAMC,YAAY;MAAEN,KAAA,EAAOO;IAAU,CAAE;IAAA;IAAA,CAAAvB,cAAA,GAAAE,CAAA,QAAG,MAAMsB,SAAA,CAAAC,aAAa,CAClEC,IAAI,CAAC,oBACLC,MAAM,CAAC,eACPC,EAAE,CAAC,WAAWV,MAAA,EACdW,MAAM;IAAA;IAAA7B,cAAA,GAAAE,CAAA;IAET;IAAI;IAAA,CAAAF,cAAA,GAAAY,CAAA,UAAAW,UAAA;IAAA;IAAA,CAAAvB,cAAA,GAAAY,CAAA,UAAcW,UAAA,CAAWO,IAAI,KAAK,aAAY;MAAA;MAAA9B,cAAA,GAAAY,CAAA;MAAAZ,cAAA,GAAAE,CAAA;MAChD6B,OAAA,CAAQf,KAAK,CAAC,2CAA2CO,UAAA;MAAA;MAAAvB,cAAA,GAAAE,CAAA;MACzD,OAAOW,OAAA,CAAAC,YAAY,CAACC,IAAI,CACtB;QAAEC,KAAA,EAAO;MAAyC,GAClD;QAAEC,MAAA,EAAQ;MAAI;IAElB;IAAA;IAAA;MAAAjB,cAAA,GAAAY,CAAA;IAAA;IAEA;IACA,MAAMoB,aAAA;IAAA;IAAA,CAAAhC,cAAA,GAAAE,CAAA;IAAgB;IAAA,CAAAF,cAAA,GAAAY,CAAA,UAAAU,YAAA,EAAcW,WAAA;IAAA;IAAA,CAAAjC,cAAA,GAAAY,CAAA,UAAe,CAAC;IACpD,MAAMsB,kBAAA;IAAA;IAAA,CAAAlC,cAAA,GAAAE,CAAA,QAAqB;MACzB,GAAG8B,aAAa;MAChBZ,aAAA,EAAe;QACb,GAAGY,aAAA,CAAcZ,aAAa;QAC9B,GAAGA;MACL;IACF;IAEA;IACA,MAAM;MAAEC,IAAA,EAAMc,YAAY;MAAEnB;IAAK,CAAE;IAAA;IAAA,CAAAhB,cAAA,GAAAE,CAAA,QAAG,MAAMsB,SAAA,CAAAC,aAAa,CACtDC,IAAI,CAAC,oBACLU,MAAM,CAAC;MACNC,OAAA,EAASnB,MAAA;MACTe,WAAA,EAAaC,kBAAA;MACbI,UAAA,EAAY,IAAIC,IAAA,GAAOC,WAAW;IACpC,GACCb,MAAM,GACNE,MAAM;IAAA;IAAA7B,cAAA,GAAAE,CAAA;IAET,IAAIc,KAAA,EAAO;MAAA;MAAAhB,cAAA,GAAAY,CAAA;MAAAZ,cAAA,GAAAE,CAAA;MACT6B,OAAA,CAAQf,KAAK,CAAC,uDAAuDA,KAAA;MAAA;MAAAhB,cAAA,GAAAE,CAAA;MACrE,OAAOW,OAAA,CAAAC,YAAY,CAACC,IAAI,CACtB;QAAEC,KAAA,EAAO;MAAqD,GAC9D;QAAEC,MAAA,EAAQ;MAAI;IAElB;IAAA;IAAA;MAAAjB,cAAA,GAAAY,CAAA;IAAA;IAEA;IACA,MAAM6B,WAAA;IAAA;IAAA,CAAAzC,cAAA,GAAAE,CAAA,QAAc,IAAAwC,eAAA,CAAAC,cAAc,EAACrC,OAAA;IAAA;IAAAN,cAAA,GAAAE,CAAA;IACnC,MAAM,IAAAwC,eAAA,CAAAE,qBAAqB,EACzB1B,MAAA,EACA,wBACA;MACE2B,gBAAA,EAAkBC,MAAA,CAAOC,IAAI,CAAC3B,aAAA;MAC9B4B,mBAAA,EAAqB5B,aAAA,CAAc6B,kBAAkB;MACrDC,kBAAA,EAAoB9B,aAAA,CAAc+B,iBAAiB;MACnDC,eAAA,EAAiBhC,aAAA,CAAciC;IACjC,GACAZ,WAAA;IAAA;IAAAzC,cAAA,GAAAE,CAAA;IAGF,OAAOW,OAAA,CAAAC,YAAY,CAACC,IAAI,CAAC;MACvBuC,OAAA,EAAS;MACTlC,aAAA,EAAee,YAAA,CAAaF,WAAW,CAACb,aAAa;MACrDmC,OAAA,EAAS;IACX;EACF,EAAE,OAAOvC,KAAA,EAAO;IAAA;IAAAhB,cAAA,GAAAE,CAAA;IACd6B,OAAA,CAAQf,KAAK,CAAC,uDAAuDA,KAAA;IAAA;IAAAhB,cAAA,GAAAE,CAAA;IACrE,OAAOW,OAAA,CAAAC,YAAY,CAACC,IAAI,CACtB;MAAEC,KAAA,EAAO;IAA6B,GACtC;MAAEC,MAAA,EAAQ;IAAI;EAElB;AACF","ignoreList":[]}