f90892981b222de41bbb509b95dd2af9
// ===================================
// PINTEYA E-COMMERCE - ORDERS CACHE HOOK
// Hook especializado para manejo de cache de Ã³rdenes
// ===================================
"use strict";

/* istanbul ignore next */
function cov_1gj0haahcs() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\admin\\useOrdersCache.ts";
  var hash = "c1d9c23e49b28ed608eefcfa03f326395a5f223b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\admin\\useOrdersCache.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 8,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 14,
          column: 3
        }
      },
      "2": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 30
        }
      },
      "3": {
        start: {
          line: 15,
          column: 15
        },
        end: {
          line: 15,
          column: 31
        }
      },
      "4": {
        start: {
          line: 17,
          column: 21
        },
        end: {
          line: 21,
          column: 1
        }
      },
      "5": {
        start: {
          line: 26,
          column: 14
        },
        end: {
          line: 26,
          column: 23
        }
      },
      "6": {
        start: {
          line: 27,
          column: 24
        },
        end: {
          line: 27,
          column: 33
        }
      },
      "7": {
        start: {
          line: 28,
          column: 26
        },
        end: {
          line: 28,
          column: 35
        }
      },
      "8": {
        start: {
          line: 34,
          column: 30
        },
        end: {
          line: 41,
          column: 10
        }
      },
      "9": {
        start: {
          line: 35,
          column: 22
        },
        end: {
          line: 35,
          column: 34
        }
      },
      "10": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 39,
          column: 9
        }
      },
      "11": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 38,
          column: 32
        }
      },
      "12": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 22
        }
      },
      "13": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 42,
          column: 45
        }
      },
      "14": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 45,
          column: 26
        }
      },
      "15": {
        start: {
          line: 46,
          column: 24
        },
        end: {
          line: 46,
          column: 26
        }
      },
      "16": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 51,
          column: 7
        }
      },
      "17": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 50,
          column: 9
        }
      },
      "18": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 34
        }
      },
      "19": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 55,
          column: 7
        }
      },
      "20": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 26
        }
      },
      "21": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 38
        }
      },
      "22": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 65,
          column: 5
        }
      },
      "23": {
        start: {
          line: 58,
          column: 24
        },
        end: {
          line: 58,
          column: 51
        }
      },
      "24": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 62
        }
      },
      "25": {
        start: {
          line: 59,
          column: 29
        },
        end: {
          line: 59,
          column: 60
        }
      },
      "26": {
        start: {
          line: 60,
          column: 25
        },
        end: {
          line: 60,
          column: 77
        }
      },
      "27": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 64,
          column: 11
        }
      },
      "28": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 30
        }
      },
      "29": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 42
        }
      },
      "30": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 72,
          column: 5
        }
      },
      "31": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 71,
          column: 11
        }
      },
      "32": {
        start: {
          line: 75,
          column: 27
        },
        end: {
          line: 75,
          column: 57
        }
      },
      "33": {
        start: {
          line: 76,
          column: 26
        },
        end: {
          line: 103,
          column: 6
        }
      },
      "34": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 79,
          column: 9
        }
      },
      "35": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 24
        }
      },
      "36": {
        start: {
          line: 80,
          column: 20
        },
        end: {
          line: 80,
          column: 40
        }
      },
      "37": {
        start: {
          line: 81,
          column: 22
        },
        end: {
          line: 81,
          column: 36
        }
      },
      "38": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 84,
          column: 9
        }
      },
      "39": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 24
        }
      },
      "40": {
        start: {
          line: 85,
          column: 26
        },
        end: {
          line: 85,
          column: 77
        }
      },
      "41": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 90,
          column: 9
        }
      },
      "42": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 30
        }
      },
      "43": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 42
        }
      },
      "44": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 24
        }
      },
      "45": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 98,
          column: 9
        }
      },
      "46": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 97,
          column: 15
        }
      },
      "47": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 99,
          column: 26
        }
      },
      "48": {
        start: {
          line: 104,
          column: 26
        },
        end: {
          line: 134,
          column: 6
        }
      },
      "49": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 107,
          column: 9
        }
      },
      "50": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 19
        }
      },
      "51": {
        start: {
          line: 108,
          column: 20
        },
        end: {
          line: 108,
          column: 40
        }
      },
      "52": {
        start: {
          line: 109,
          column: 26
        },
        end: {
          line: 109,
          column: 65
        }
      },
      "53": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 115,
          column: 11
        }
      },
      "54": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 116,
          column: 47
        }
      },
      "55": {
        start: {
          line: 118,
          column: 20
        },
        end: {
          line: 118,
          column: 30
        }
      },
      "56": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 122,
          column: 9
        }
      },
      "57": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 120,
          column: 54
        }
      },
      "58": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 121,
          column: 41
        }
      },
      "59": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 129,
          column: 9
        }
      },
      "60": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 128,
          column: 15
        }
      },
      "61": {
        start: {
          line: 135,
          column: 23
        },
        end: {
          line: 142,
          column: 10
        }
      },
      "62": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 136,
          column: 22
        }
      },
      "63": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 137,
          column: 32
        }
      },
      "64": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 138,
          column: 34
        }
      },
      "65": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 141,
          column: 9
        }
      },
      "66": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 140,
          column: 58
        }
      },
      "67": {
        start: {
          line: 143,
          column: 31
        },
        end: {
          line: 153,
          column: 6
        }
      },
      "68": {
        start: {
          line: 144,
          column: 20
        },
        end: {
          line: 144,
          column: 40
        }
      },
      "69": {
        start: {
          line: 145,
          column: 32
        },
        end: {
          line: 145,
          column: 58
        }
      },
      "70": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 148,
          column: 9
        }
      },
      "71": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 147,
          column: 25
        }
      },
      "72": {
        start: {
          line: 149,
          column: 37
        },
        end: {
          line: 149,
          column: 65
        }
      },
      "73": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 150,
          column: 104
        }
      },
      "74": {
        start: {
          line: 154,
          column: 30
        },
        end: {
          line: 161,
          column: 10
        }
      },
      "75": {
        start: {
          line: 155,
          column: 20
        },
        end: {
          line: 155,
          column: 40
        }
      },
      "76": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 156,
          column: 42
        }
      },
      "77": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 160,
          column: 11
        }
      },
      "78": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 159,
          column: 40
        }
      },
      "79": {
        start: {
          line: 162,
          column: 30
        },
        end: {
          line: 165,
          column: 10
        }
      },
      "80": {
        start: {
          line: 163,
          column: 20
        },
        end: {
          line: 163,
          column: 40
        }
      },
      "81": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 164,
          column: 48
        }
      },
      "82": {
        start: {
          line: 166,
          column: 26
        },
        end: {
          line: 172,
          column: 6
        }
      },
      "83": {
        start: {
          line: 166,
          column: 55
        },
        end: {
          line: 170,
          column: 9
        }
      },
      "84": {
        start: {
          line: 173,
          column: 4
        },
        end: {
          line: 181,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 9
          },
          end: {
            line: 11,
            column: 10
          }
        },
        loc: {
          start: {
            line: 11,
            column: 20
          },
          end: {
            line: 13,
            column: 5
          }
        },
        line: 11
      },
      "1": {
        name: "getCacheKey",
        decl: {
          start: {
            line: 32,
            column: 9
          },
          end: {
            line: 32,
            column: 20
          }
        },
        loc: {
          start: {
            line: 32,
            column: 30
          },
          end: {
            line: 43,
            column: 1
          }
        },
        line: 32
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 34,
            column: 65
          },
          end: {
            line: 34,
            column: 66
          }
        },
        loc: {
          start: {
            line: 34,
            column: 80
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 34
      },
      "3": {
        name: "cleanupExpiredCache",
        decl: {
          start: {
            line: 44,
            column: 9
          },
          end: {
            line: 44,
            column: 28
          }
        },
        loc: {
          start: {
            line: 44,
            column: 43
          },
          end: {
            line: 73,
            column: 1
          }
        },
        line: 44
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 47,
            column: 18
          },
          end: {
            line: 47,
            column: 19
          }
        },
        loc: {
          start: {
            line: 47,
            column: 32
          },
          end: {
            line: 51,
            column: 5
          }
        },
        line: 47
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 52,
            column: 24
          },
          end: {
            line: 52,
            column: 25
          }
        },
        loc: {
          start: {
            line: 52,
            column: 31
          },
          end: {
            line: 55,
            column: 5
          }
        },
        line: 52
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 59,
            column: 21
          },
          end: {
            line: 59,
            column: 22
          }
        },
        loc: {
          start: {
            line: 59,
            column: 29
          },
          end: {
            line: 59,
            column: 60
          }
        },
        line: 59
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 61,
            column: 25
          },
          end: {
            line: 61,
            column: 26
          }
        },
        loc: {
          start: {
            line: 61,
            column: 34
          },
          end: {
            line: 64,
            column: 9
          }
        },
        line: 61
      },
      "8": {
        name: "useOrdersCache",
        decl: {
          start: {
            line: 74,
            column: 9
          },
          end: {
            line: 74,
            column: 23
          }
        },
        loc: {
          start: {
            line: 74,
            column: 33
          },
          end: {
            line: 182,
            column: 1
          }
        },
        line: 74
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 76,
            column: 50
          },
          end: {
            line: 76,
            column: 51
          }
        },
        loc: {
          start: {
            line: 76,
            column: 61
          },
          end: {
            line: 100,
            column: 5
          }
        },
        line: 76
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 104,
            column: 50
          },
          end: {
            line: 104,
            column: 51
          }
        },
        loc: {
          start: {
            line: 104,
            column: 67
          },
          end: {
            line: 130,
            column: 5
          }
        },
        line: 104
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 135,
            column: 47
          },
          end: {
            line: 135,
            column: 48
          }
        },
        loc: {
          start: {
            line: 135,
            column: 51
          },
          end: {
            line: 142,
            column: 5
          }
        },
        line: 135
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 143,
            column: 55
          },
          end: {
            line: 143,
            column: 56
          }
        },
        loc: {
          start: {
            line: 143,
            column: 66
          },
          end: {
            line: 151,
            column: 5
          }
        },
        line: 143
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 154,
            column: 54
          },
          end: {
            line: 154,
            column: 55
          }
        },
        loc: {
          start: {
            line: 154,
            column: 74
          },
          end: {
            line: 161,
            column: 5
          }
        },
        line: 154
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 158,
            column: 24
          },
          end: {
            line: 158,
            column: 25
          }
        },
        loc: {
          start: {
            line: 158,
            column: 28
          },
          end: {
            line: 160,
            column: 9
          }
        },
        line: 158
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 162,
            column: 54
          },
          end: {
            line: 162,
            column: 55
          }
        },
        loc: {
          start: {
            line: 162,
            column: 65
          },
          end: {
            line: 165,
            column: 5
          }
        },
        line: 162
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 166,
            column: 50
          },
          end: {
            line: 166,
            column: 51
          }
        },
        loc: {
          start: {
            line: 166,
            column: 55
          },
          end: {
            line: 170,
            column: 9
          }
        },
        line: 166
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 39,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 39,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "1": {
        loc: {
          start: {
            line: 37,
            column: 12
          },
          end: {
            line: 37,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 12
          },
          end: {
            line: 37,
            column: 31
          }
        }, {
          start: {
            line: 37,
            column: 35
          },
          end: {
            line: 37,
            column: 49
          }
        }, {
          start: {
            line: 37,
            column: 53
          },
          end: {
            line: 37,
            column: 65
          }
        }, {
          start: {
            line: 37,
            column: 69
          },
          end: {
            line: 37,
            column: 84
          }
        }],
        line: 37
      },
      "2": {
        loc: {
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "3": {
        loc: {
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "4": {
        loc: {
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 72,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 72,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "5": {
        loc: {
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "6": {
        loc: {
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "7": {
        loc: {
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 90,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 90,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "8": {
        loc: {
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 98,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 98,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 92
      },
      "9": {
        loc: {
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 107,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 107,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 105
      },
      "10": {
        loc: {
          start: {
            line: 119,
            column: 8
          },
          end: {
            line: 122,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 8
          },
          end: {
            line: 122,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 119
      },
      "11": {
        loc: {
          start: {
            line: 119,
            column: 44
          },
          end: {
            line: 119,
            column: 100
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 119,
            column: 44
          },
          end: {
            line: 119,
            column: 67
          }
        }, {
          start: {
            line: 119,
            column: 71
          },
          end: {
            line: 119,
            column: 100
          }
        }],
        line: 119
      },
      "12": {
        loc: {
          start: {
            line: 123,
            column: 8
          },
          end: {
            line: 129,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 123,
            column: 8
          },
          end: {
            line: 129,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 123
      },
      "13": {
        loc: {
          start: {
            line: 139,
            column: 8
          },
          end: {
            line: 141,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 139,
            column: 8
          },
          end: {
            line: 141,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 139
      },
      "14": {
        loc: {
          start: {
            line: 146,
            column: 8
          },
          end: {
            line: 148,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 146,
            column: 8
          },
          end: {
            line: 148,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 146
      },
      "15": {
        loc: {
          start: {
            line: 150,
            column: 39
          },
          end: {
            line: 150,
            column: 102
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 150,
            column: 39
          },
          end: {
            line: 150,
            column: 65
          }
        }, {
          start: {
            line: 150,
            column: 69
          },
          end: {
            line: 150,
            column: 102
          }
        }],
        line: 150
      },
      "16": {
        loc: {
          start: {
            line: 164,
            column: 15
          },
          end: {
            line: 164,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 164,
            column: 15
          },
          end: {
            line: 164,
            column: 39
          }
        }, {
          start: {
            line: 164,
            column: 43
          },
          end: {
            line: 164,
            column: 47
          }
        }],
        line: 164
      },
      "17": {
        loc: {
          start: {
            line: 168,
            column: 21
          },
          end: {
            line: 168,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 168,
            column: 21
          },
          end: {
            line: 168,
            column: 36
          }
        }, {
          start: {
            line: 168,
            column: 40
          },
          end: {
            line: 168,
            column: 61
          }
        }],
        line: 168
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0, 0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\admin\\useOrdersCache.ts"],
      sourcesContent: ["// ===================================\r\n// PINTEYA E-COMMERCE - ORDERS CACHE HOOK\r\n// Hook especializado para manejo de cache de \xF3rdenes\r\n// ===================================\r\n\r\nimport { useCallback, useRef } from 'react';\r\nimport { StrictOrdersListResponse } from '@/types/api-strict';\r\nimport { StrictOrderFilters } from './useOrdersEnterpriseStrict';\r\n\r\n// ===================================\r\n// TIPOS Y CONFIGURACI\xD3N\r\n// ===================================\r\n\r\ninterface CacheEntry {\r\n  data: StrictOrdersListResponse;\r\n  timestamp: number;\r\n  filters: StrictOrderFilters;\r\n  requestId: string;\r\n}\r\n\r\ninterface CacheOptions {\r\n  enableCache: boolean;\r\n  cacheTimeout: number;\r\n  maxSize?: number;\r\n  cleanupInterval?: number;\r\n  minRequestInterval?: number;\r\n}\r\n\r\n// Configuraci\xF3n de cache\r\nconst CACHE_CONFIG = {\r\n  MAX_SIZE: 50,\r\n  CLEANUP_INTERVAL: 10 * 60 * 1000, // 10 minutos\r\n  MIN_REQUEST_INTERVAL: 1000, // 1 segundo m\xEDnimo entre peticiones id\xE9nticas\r\n} as const;\r\n\r\n// ===================================\r\n// CACHE GLOBAL\r\n// ===================================\r\n\r\n// Cache compartido entre instancias del hook\r\nconst cache = new Map<string, CacheEntry>();\r\nconst pendingRequests = new Map<string, Promise<any>>();\r\nconst requestTimestamps = new Map<string, number>();\r\n\r\n// ===================================\r\n// UTILIDADES DE CACHE\r\n// ===================================\r\n\r\nfunction getCacheKey(filters: StrictOrderFilters): string {\r\n  // Crear clave m\xE1s estable ordenando las propiedades y normalizando valores\r\n  const normalizedFilters = Object.keys(filters)\r\n    .sort()\r\n    .reduce((result, key) => {\r\n      const value = filters[key as keyof StrictOrderFilters];\r\n      // Normalizar valores para evitar claves duplicadas\r\n      if (value !== undefined && value !== null && value !== '' && value !== 'all') {\r\n        result[key] = value;\r\n      }\r\n      return result;\r\n    }, {} as any);\r\n  return JSON.stringify(normalizedFilters);\r\n}\r\n\r\nfunction cleanupExpiredCache(cacheTimeout: number): void {\r\n  const now = Date.now();\r\n  const expiredKeys: string[] = [];\r\n  \r\n  cache.forEach((entry, key) => {\r\n    if (now - entry.timestamp > cacheTimeout) {\r\n      expiredKeys.push(key);\r\n    }\r\n  });\r\n  \r\n  expiredKeys.forEach(key => {\r\n    cache.delete(key);\r\n    requestTimestamps.delete(key);\r\n  });\r\n  \r\n  // Limpiar cache si est\xE1 muy grande\r\n  if (cache.size > CACHE_CONFIG.MAX_SIZE) {\r\n    const entries = Array.from(cache.entries());\r\n    entries.sort((a, b) => a[1].timestamp - b[1].timestamp);\r\n    \r\n    const toDelete = entries.slice(0, cache.size - CACHE_CONFIG.MAX_SIZE);\r\n    toDelete.forEach(([key]) => {\r\n      cache.delete(key);\r\n      requestTimestamps.delete(key);\r\n    });\r\n  }\r\n  \r\n  if (process.env.NODE_ENV === 'development') {\r\n    console.log('[useOrdersCache] Cache cleanup completed:', {\r\n      expired: expiredKeys.length,\r\n      currentSize: cache.size,\r\n      maxSize: CACHE_CONFIG.MAX_SIZE\r\n    });\r\n  }\r\n}\r\n\r\n// ===================================\r\n// HOOK DE CACHE\r\n// ===================================\r\n\r\nexport interface UseOrdersCacheReturn {\r\n  getCachedData: (filters: StrictOrderFilters) => StrictOrdersListResponse | null;\r\n  setCachedData: (filters: StrictOrderFilters, data: StrictOrdersListResponse) => void;\r\n  clearCache: () => void;\r\n  isRequestTooRecent: (filters: StrictOrderFilters) => boolean;\r\n  setPendingRequest: (filters: StrictOrderFilters, promise: Promise<any>) => void;\r\n  getPendingRequest: (filters: StrictOrderFilters) => Promise<any> | null;\r\n  getCacheStats: () => { size: number; maxSize: number; pendingRequests: number };\r\n}\r\n\r\nexport function useOrdersCache(options: CacheOptions): UseOrdersCacheReturn {\r\n  const lastCleanupRef = useRef<number>(Date.now());\r\n  \r\n  const getCachedData = useCallback((filters: StrictOrderFilters): StrictOrdersListResponse | null => {\r\n    if (!options.enableCache) {return null;}\r\n    \r\n    const key = getCacheKey(filters);\r\n    const entry = cache.get(key);\r\n    \r\n    if (!entry) {return null;}\r\n    \r\n    const isExpired = Date.now() - entry.timestamp > options.cacheTimeout;\r\n    if (isExpired) {\r\n      cache.delete(key);\r\n      requestTimestamps.delete(key);\r\n      return null;\r\n    }\r\n    \r\n    // Log de cache hit en desarrollo\r\n    if (process.env.NODE_ENV === 'development') {\r\n      console.log('[useOrdersCache] Cache hit:', { \r\n        key: key.substring(0, 100) + '...', \r\n        age: Date.now() - entry.timestamp,\r\n        cacheSize: cache.size \r\n      });\r\n    }\r\n    \r\n    return entry.data;\r\n  }, [options.enableCache, options.cacheTimeout]);\r\n  \r\n  const setCachedData = useCallback((filters: StrictOrderFilters, data: StrictOrdersListResponse): void => {\r\n    if (!options.enableCache) {return;}\r\n    \r\n    const key = getCacheKey(filters);\r\n    const requestId = Math.random().toString(36).substr(2, 9);\r\n    \r\n    cache.set(key, {\r\n      data,\r\n      timestamp: Date.now(),\r\n      filters,\r\n      requestId\r\n    });\r\n    \r\n    requestTimestamps.set(key, Date.now());\r\n    \r\n    // Cleanup autom\xE1tico peri\xF3dico\r\n    const now = Date.now();\r\n    if (now - lastCleanupRef.current > (options.cleanupInterval || CACHE_CONFIG.CLEANUP_INTERVAL)) {\r\n      cleanupExpiredCache(options.cacheTimeout);\r\n      lastCleanupRef.current = now;\r\n    }\r\n    \r\n    if (process.env.NODE_ENV === 'development') {\r\n      console.log('[useOrdersCache] Data cached:', {\r\n        key: key.substring(0, 100) + '...',\r\n        cacheSize: cache.size,\r\n        requestId\r\n      });\r\n    }\r\n  }, [options.enableCache, options.cacheTimeout, options.cleanupInterval]);\r\n  \r\n  const clearCache = useCallback((): void => {\r\n    cache.clear();\r\n    pendingRequests.clear();\r\n    requestTimestamps.clear();\r\n    \r\n    if (process.env.NODE_ENV === 'development') {\r\n      console.log('[useOrdersCache] Cache cleared');\r\n    }\r\n  }, []);\r\n  \r\n  const isRequestTooRecent = useCallback((filters: StrictOrderFilters): boolean => {\r\n    const key = getCacheKey(filters);\r\n    const lastRequestTime = requestTimestamps.get(key);\r\n    \r\n    if (!lastRequestTime) {return false;}\r\n    \r\n    const timeSinceLastRequest = Date.now() - lastRequestTime;\r\n    return timeSinceLastRequest < (options.minRequestInterval || CACHE_CONFIG.MIN_REQUEST_INTERVAL);\r\n  }, [options.minRequestInterval]);\r\n  \r\n  const setPendingRequest = useCallback((filters: StrictOrderFilters, promise: Promise<any>): void => {\r\n    const key = getCacheKey(filters);\r\n    pendingRequests.set(key, promise);\r\n    \r\n    // Limpiar cuando la promesa se resuelve\r\n    promise.finally(() => {\r\n      pendingRequests.delete(key);\r\n    });\r\n  }, []);\r\n  \r\n  const getPendingRequest = useCallback((filters: StrictOrderFilters): Promise<any> | null => {\r\n    const key = getCacheKey(filters);\r\n    return pendingRequests.get(key) || null;\r\n  }, []);\r\n  \r\n  const getCacheStats = useCallback(() => ({\r\n    size: cache.size,\r\n    maxSize: options.maxSize || CACHE_CONFIG.MAX_SIZE,\r\n    pendingRequests: pendingRequests.size\r\n  }), [options.maxSize]);\r\n  \r\n  return {\r\n    getCachedData,\r\n    setCachedData,\r\n    clearCache,\r\n    isRequestTooRecent,\r\n    setPendingRequest,\r\n    getPendingRequest,\r\n    getCacheStats\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["useOrdersCache", "CACHE_CONFIG", "MAX_SIZE", "CLEANUP_INTERVAL", "MIN_REQUEST_INTERVAL", "cache", "Map", "pendingRequests", "requestTimestamps", "getCacheKey", "filters", "normalizedFilters", "Object", "keys", "sort", "reduce", "result", "key", "value", "undefined", "JSON", "stringify", "cleanupExpiredCache", "cacheTimeout", "now", "Date", "expiredKeys", "forEach", "entry", "timestamp", "push", "delete", "size", "entries", "Array", "from", "a", "b", "toDelete", "slice", "process", "env", "NODE_ENV", "console", "log", "expired", "length", "currentSize", "maxSize", "options", "lastCleanupRef", "useRef", "getCachedData", "useCallback", "enableCache", "get", "isExpired", "substring", "age", "cacheSize", "data", "setCachedData", "requestId", "Math", "random", "toString", "substr", "set", "current", "cleanupInterval", "clearCache", "clear", "isRequestTooRecent", "lastRequestTime", "timeSinceLastRequest", "minRequestInterval", "setPendingRequest", "promise", "finally", "getPendingRequest", "getCacheStats"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c1d9c23e49b28ed608eefcfa03f326395a5f223b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1gj0haahcs = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1gj0haahcs();
cov_1gj0haahcs().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1gj0haahcs().s[1]++;
Object.defineProperty(exports, "useOrdersCache", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1gj0haahcs().f[0]++;
    cov_1gj0haahcs().s[2]++;
    return useOrdersCache;
  }
});
const _react =
/* istanbul ignore next */
(cov_1gj0haahcs().s[3]++, require("react"));
// ConfiguraciÃ³n de cache
const CACHE_CONFIG =
/* istanbul ignore next */
(cov_1gj0haahcs().s[4]++, {
  MAX_SIZE: 50,
  CLEANUP_INTERVAL: 10 * 60 * 1000,
  MIN_REQUEST_INTERVAL: 1000
});
// ===================================
// CACHE GLOBAL
// ===================================
// Cache compartido entre instancias del hook
const cache =
/* istanbul ignore next */
(cov_1gj0haahcs().s[5]++, new Map());
const pendingRequests =
/* istanbul ignore next */
(cov_1gj0haahcs().s[6]++, new Map());
const requestTimestamps =
/* istanbul ignore next */
(cov_1gj0haahcs().s[7]++, new Map());
// ===================================
// UTILIDADES DE CACHE
// ===================================
function getCacheKey(filters) {
  /* istanbul ignore next */
  cov_1gj0haahcs().f[1]++;
  // Crear clave mÃ¡s estable ordenando las propiedades y normalizando valores
  const normalizedFilters =
  /* istanbul ignore next */
  (cov_1gj0haahcs().s[8]++, Object.keys(filters).sort().reduce((result, key) => {
    /* istanbul ignore next */
    cov_1gj0haahcs().f[2]++;
    const value =
    /* istanbul ignore next */
    (cov_1gj0haahcs().s[9]++, filters[key]);
    // Normalizar valores para evitar claves duplicadas
    /* istanbul ignore next */
    cov_1gj0haahcs().s[10]++;
    if (
    /* istanbul ignore next */
    (cov_1gj0haahcs().b[1][0]++, value !== undefined) &&
    /* istanbul ignore next */
    (cov_1gj0haahcs().b[1][1]++, value !== null) &&
    /* istanbul ignore next */
    (cov_1gj0haahcs().b[1][2]++, value !== '') &&
    /* istanbul ignore next */
    (cov_1gj0haahcs().b[1][3]++, value !== 'all')) {
      /* istanbul ignore next */
      cov_1gj0haahcs().b[0][0]++;
      cov_1gj0haahcs().s[11]++;
      result[key] = value;
    } else
    /* istanbul ignore next */
    {
      cov_1gj0haahcs().b[0][1]++;
    }
    cov_1gj0haahcs().s[12]++;
    return result;
  }, {}));
  /* istanbul ignore next */
  cov_1gj0haahcs().s[13]++;
  return JSON.stringify(normalizedFilters);
}
function cleanupExpiredCache(cacheTimeout) {
  /* istanbul ignore next */
  cov_1gj0haahcs().f[3]++;
  const now =
  /* istanbul ignore next */
  (cov_1gj0haahcs().s[14]++, Date.now());
  const expiredKeys =
  /* istanbul ignore next */
  (cov_1gj0haahcs().s[15]++, []);
  /* istanbul ignore next */
  cov_1gj0haahcs().s[16]++;
  cache.forEach((entry, key) => {
    /* istanbul ignore next */
    cov_1gj0haahcs().f[4]++;
    cov_1gj0haahcs().s[17]++;
    if (now - entry.timestamp > cacheTimeout) {
      /* istanbul ignore next */
      cov_1gj0haahcs().b[2][0]++;
      cov_1gj0haahcs().s[18]++;
      expiredKeys.push(key);
    } else
    /* istanbul ignore next */
    {
      cov_1gj0haahcs().b[2][1]++;
    }
  });
  /* istanbul ignore next */
  cov_1gj0haahcs().s[19]++;
  expiredKeys.forEach(key => {
    /* istanbul ignore next */
    cov_1gj0haahcs().f[5]++;
    cov_1gj0haahcs().s[20]++;
    cache.delete(key);
    /* istanbul ignore next */
    cov_1gj0haahcs().s[21]++;
    requestTimestamps.delete(key);
  });
  // Limpiar cache si estÃ¡ muy grande
  /* istanbul ignore next */
  cov_1gj0haahcs().s[22]++;
  if (cache.size > CACHE_CONFIG.MAX_SIZE) {
    /* istanbul ignore next */
    cov_1gj0haahcs().b[3][0]++;
    const entries =
    /* istanbul ignore next */
    (cov_1gj0haahcs().s[23]++, Array.from(cache.entries()));
    /* istanbul ignore next */
    cov_1gj0haahcs().s[24]++;
    entries.sort((a, b) => {
      /* istanbul ignore next */
      cov_1gj0haahcs().f[6]++;
      cov_1gj0haahcs().s[25]++;
      return a[1].timestamp - b[1].timestamp;
    });
    const toDelete =
    /* istanbul ignore next */
    (cov_1gj0haahcs().s[26]++, entries.slice(0, cache.size - CACHE_CONFIG.MAX_SIZE));
    /* istanbul ignore next */
    cov_1gj0haahcs().s[27]++;
    toDelete.forEach(([key]) => {
      /* istanbul ignore next */
      cov_1gj0haahcs().f[7]++;
      cov_1gj0haahcs().s[28]++;
      cache.delete(key);
      /* istanbul ignore next */
      cov_1gj0haahcs().s[29]++;
      requestTimestamps.delete(key);
    });
  } else
  /* istanbul ignore next */
  {
    cov_1gj0haahcs().b[3][1]++;
  }
  cov_1gj0haahcs().s[30]++;
  if (process.env.NODE_ENV === 'development') {
    /* istanbul ignore next */
    cov_1gj0haahcs().b[4][0]++;
    cov_1gj0haahcs().s[31]++;
    console.log('[useOrdersCache] Cache cleanup completed:', {
      expired: expiredKeys.length,
      currentSize: cache.size,
      maxSize: CACHE_CONFIG.MAX_SIZE
    });
  } else
  /* istanbul ignore next */
  {
    cov_1gj0haahcs().b[4][1]++;
  }
}
function useOrdersCache(options) {
  /* istanbul ignore next */
  cov_1gj0haahcs().f[8]++;
  const lastCleanupRef =
  /* istanbul ignore next */
  (cov_1gj0haahcs().s[32]++, (0, _react.useRef)(Date.now()));
  const getCachedData =
  /* istanbul ignore next */
  (cov_1gj0haahcs().s[33]++, (0, _react.useCallback)(filters => {
    /* istanbul ignore next */
    cov_1gj0haahcs().f[9]++;
    cov_1gj0haahcs().s[34]++;
    if (!options.enableCache) {
      /* istanbul ignore next */
      cov_1gj0haahcs().b[5][0]++;
      cov_1gj0haahcs().s[35]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1gj0haahcs().b[5][1]++;
    }
    const key =
    /* istanbul ignore next */
    (cov_1gj0haahcs().s[36]++, getCacheKey(filters));
    const entry =
    /* istanbul ignore next */
    (cov_1gj0haahcs().s[37]++, cache.get(key));
    /* istanbul ignore next */
    cov_1gj0haahcs().s[38]++;
    if (!entry) {
      /* istanbul ignore next */
      cov_1gj0haahcs().b[6][0]++;
      cov_1gj0haahcs().s[39]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1gj0haahcs().b[6][1]++;
    }
    const isExpired =
    /* istanbul ignore next */
    (cov_1gj0haahcs().s[40]++, Date.now() - entry.timestamp > options.cacheTimeout);
    /* istanbul ignore next */
    cov_1gj0haahcs().s[41]++;
    if (isExpired) {
      /* istanbul ignore next */
      cov_1gj0haahcs().b[7][0]++;
      cov_1gj0haahcs().s[42]++;
      cache.delete(key);
      /* istanbul ignore next */
      cov_1gj0haahcs().s[43]++;
      requestTimestamps.delete(key);
      /* istanbul ignore next */
      cov_1gj0haahcs().s[44]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1gj0haahcs().b[7][1]++;
    }
    // Log de cache hit en desarrollo
    cov_1gj0haahcs().s[45]++;
    if (process.env.NODE_ENV === 'development') {
      /* istanbul ignore next */
      cov_1gj0haahcs().b[8][0]++;
      cov_1gj0haahcs().s[46]++;
      console.log('[useOrdersCache] Cache hit:', {
        key: key.substring(0, 100) + '...',
        age: Date.now() - entry.timestamp,
        cacheSize: cache.size
      });
    } else
    /* istanbul ignore next */
    {
      cov_1gj0haahcs().b[8][1]++;
    }
    cov_1gj0haahcs().s[47]++;
    return entry.data;
  }, [options.enableCache, options.cacheTimeout]));
  const setCachedData =
  /* istanbul ignore next */
  (cov_1gj0haahcs().s[48]++, (0, _react.useCallback)((filters, data) => {
    /* istanbul ignore next */
    cov_1gj0haahcs().f[10]++;
    cov_1gj0haahcs().s[49]++;
    if (!options.enableCache) {
      /* istanbul ignore next */
      cov_1gj0haahcs().b[9][0]++;
      cov_1gj0haahcs().s[50]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1gj0haahcs().b[9][1]++;
    }
    const key =
    /* istanbul ignore next */
    (cov_1gj0haahcs().s[51]++, getCacheKey(filters));
    const requestId =
    /* istanbul ignore next */
    (cov_1gj0haahcs().s[52]++, Math.random().toString(36).substr(2, 9));
    /* istanbul ignore next */
    cov_1gj0haahcs().s[53]++;
    cache.set(key, {
      data,
      timestamp: Date.now(),
      filters,
      requestId
    });
    /* istanbul ignore next */
    cov_1gj0haahcs().s[54]++;
    requestTimestamps.set(key, Date.now());
    // Cleanup automÃ¡tico periÃ³dico
    const now =
    /* istanbul ignore next */
    (cov_1gj0haahcs().s[55]++, Date.now());
    /* istanbul ignore next */
    cov_1gj0haahcs().s[56]++;
    if (now - lastCleanupRef.current > (
    /* istanbul ignore next */
    (cov_1gj0haahcs().b[11][0]++, options.cleanupInterval) ||
    /* istanbul ignore next */
    (cov_1gj0haahcs().b[11][1]++, CACHE_CONFIG.CLEANUP_INTERVAL))) {
      /* istanbul ignore next */
      cov_1gj0haahcs().b[10][0]++;
      cov_1gj0haahcs().s[57]++;
      cleanupExpiredCache(options.cacheTimeout);
      /* istanbul ignore next */
      cov_1gj0haahcs().s[58]++;
      lastCleanupRef.current = now;
    } else
    /* istanbul ignore next */
    {
      cov_1gj0haahcs().b[10][1]++;
    }
    cov_1gj0haahcs().s[59]++;
    if (process.env.NODE_ENV === 'development') {
      /* istanbul ignore next */
      cov_1gj0haahcs().b[12][0]++;
      cov_1gj0haahcs().s[60]++;
      console.log('[useOrdersCache] Data cached:', {
        key: key.substring(0, 100) + '...',
        cacheSize: cache.size,
        requestId
      });
    } else
    /* istanbul ignore next */
    {
      cov_1gj0haahcs().b[12][1]++;
    }
  }, [options.enableCache, options.cacheTimeout, options.cleanupInterval]));
  const clearCache =
  /* istanbul ignore next */
  (cov_1gj0haahcs().s[61]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_1gj0haahcs().f[11]++;
    cov_1gj0haahcs().s[62]++;
    cache.clear();
    /* istanbul ignore next */
    cov_1gj0haahcs().s[63]++;
    pendingRequests.clear();
    /* istanbul ignore next */
    cov_1gj0haahcs().s[64]++;
    requestTimestamps.clear();
    /* istanbul ignore next */
    cov_1gj0haahcs().s[65]++;
    if (process.env.NODE_ENV === 'development') {
      /* istanbul ignore next */
      cov_1gj0haahcs().b[13][0]++;
      cov_1gj0haahcs().s[66]++;
      console.log('[useOrdersCache] Cache cleared');
    } else
    /* istanbul ignore next */
    {
      cov_1gj0haahcs().b[13][1]++;
    }
  }, []));
  const isRequestTooRecent =
  /* istanbul ignore next */
  (cov_1gj0haahcs().s[67]++, (0, _react.useCallback)(filters => {
    /* istanbul ignore next */
    cov_1gj0haahcs().f[12]++;
    const key =
    /* istanbul ignore next */
    (cov_1gj0haahcs().s[68]++, getCacheKey(filters));
    const lastRequestTime =
    /* istanbul ignore next */
    (cov_1gj0haahcs().s[69]++, requestTimestamps.get(key));
    /* istanbul ignore next */
    cov_1gj0haahcs().s[70]++;
    if (!lastRequestTime) {
      /* istanbul ignore next */
      cov_1gj0haahcs().b[14][0]++;
      cov_1gj0haahcs().s[71]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_1gj0haahcs().b[14][1]++;
    }
    const timeSinceLastRequest =
    /* istanbul ignore next */
    (cov_1gj0haahcs().s[72]++, Date.now() - lastRequestTime);
    /* istanbul ignore next */
    cov_1gj0haahcs().s[73]++;
    return timeSinceLastRequest < (
    /* istanbul ignore next */
    (cov_1gj0haahcs().b[15][0]++, options.minRequestInterval) ||
    /* istanbul ignore next */
    (cov_1gj0haahcs().b[15][1]++, CACHE_CONFIG.MIN_REQUEST_INTERVAL));
  }, [options.minRequestInterval]));
  const setPendingRequest =
  /* istanbul ignore next */
  (cov_1gj0haahcs().s[74]++, (0, _react.useCallback)((filters, promise) => {
    /* istanbul ignore next */
    cov_1gj0haahcs().f[13]++;
    const key =
    /* istanbul ignore next */
    (cov_1gj0haahcs().s[75]++, getCacheKey(filters));
    /* istanbul ignore next */
    cov_1gj0haahcs().s[76]++;
    pendingRequests.set(key, promise);
    // Limpiar cuando la promesa se resuelve
    /* istanbul ignore next */
    cov_1gj0haahcs().s[77]++;
    promise.finally(() => {
      /* istanbul ignore next */
      cov_1gj0haahcs().f[14]++;
      cov_1gj0haahcs().s[78]++;
      pendingRequests.delete(key);
    });
  }, []));
  const getPendingRequest =
  /* istanbul ignore next */
  (cov_1gj0haahcs().s[79]++, (0, _react.useCallback)(filters => {
    /* istanbul ignore next */
    cov_1gj0haahcs().f[15]++;
    const key =
    /* istanbul ignore next */
    (cov_1gj0haahcs().s[80]++, getCacheKey(filters));
    /* istanbul ignore next */
    cov_1gj0haahcs().s[81]++;
    return /* istanbul ignore next */(cov_1gj0haahcs().b[16][0]++, pendingRequests.get(key)) ||
    /* istanbul ignore next */
    (cov_1gj0haahcs().b[16][1]++, null);
  }, []));
  const getCacheStats =
  /* istanbul ignore next */
  (cov_1gj0haahcs().s[82]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_1gj0haahcs().f[16]++;
    cov_1gj0haahcs().s[83]++;
    return {
      size: cache.size,
      maxSize:
      /* istanbul ignore next */
      (cov_1gj0haahcs().b[17][0]++, options.maxSize) ||
      /* istanbul ignore next */
      (cov_1gj0haahcs().b[17][1]++, CACHE_CONFIG.MAX_SIZE),
      pendingRequests: pendingRequests.size
    };
  }, [options.maxSize]));
  /* istanbul ignore next */
  cov_1gj0haahcs().s[84]++;
  return {
    getCachedData,
    setCachedData,
    clearCache,
    isRequestTooRecent,
    setPendingRequest,
    getPendingRequest,
    getCacheStats
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,