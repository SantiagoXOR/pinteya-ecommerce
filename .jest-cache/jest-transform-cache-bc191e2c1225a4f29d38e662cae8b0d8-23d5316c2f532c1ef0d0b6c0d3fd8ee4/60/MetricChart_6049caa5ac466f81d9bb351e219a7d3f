915bae46abbabea51026a7e8166e5e33
'use client';
"use strict";

/* istanbul ignore next */
function cov_2idtk53qd3() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\admin\\monitoring\\MetricChart.tsx";
  var hash = "d58692fef424878bae9be40bb9ef0e5d99b55b9d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\admin\\monitoring\\MetricChart.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 21,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 30
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 27
        }
      },
      "6": {
        start: {
          line: 22,
          column: 20
        },
        end: {
          line: 22,
          column: 48
        }
      },
      "7": {
        start: {
          line: 23,
          column: 29
        },
        end: {
          line: 23,
          column: 71
        }
      },
      "8": {
        start: {
          line: 24,
          column: 14
        },
        end: {
          line: 24,
          column: 38
        }
      },
      "9": {
        start: {
          line: 25,
          column: 21
        },
        end: {
          line: 25,
          column: 44
        }
      },
      "10": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 29,
          column: 6
        }
      },
      "11": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 53,
          column: 5
        }
      },
      "12": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 52,
          column: 11
        }
      },
      "13": {
        start: {
          line: 55,
          column: 19
        },
        end: {
          line: 55,
          column: 41
        }
      },
      "14": {
        start: {
          line: 55,
          column: 33
        },
        end: {
          line: 55,
          column: 40
        }
      },
      "15": {
        start: {
          line: 56,
          column: 21
        },
        end: {
          line: 56,
          column: 40
        }
      },
      "16": {
        start: {
          line: 57,
          column: 21
        },
        end: {
          line: 57,
          column: 40
        }
      },
      "17": {
        start: {
          line: 58,
          column: 18
        },
        end: {
          line: 58,
          column: 37
        }
      },
      "18": {
        start: {
          line: 59,
          column: 25
        },
        end: {
          line: 59,
          column: 50
        }
      },
      "19": {
        start: {
          line: 60,
          column: 26
        },
        end: {
          line: 60,
          column: 86
        }
      },
      "20": {
        start: {
          line: 62,
          column: 18
        },
        end: {
          line: 62,
          column: 104
        }
      },
      "21": {
        start: {
          line: 63,
          column: 28
        },
        end: {
          line: 63,
          column: 106
        }
      },
      "22": {
        start: {
          line: 65,
          column: 21
        },
        end: {
          line: 65,
          column: 24
        }
      },
      "23": {
        start: {
          line: 66,
          column: 22
        },
        end: {
          line: 66,
          column: 28
        }
      },
      "24": {
        start: {
          line: 67,
          column: 20
        },
        end: {
          line: 67,
          column: 22
        }
      },
      "25": {
        start: {
          line: 68,
          column: 23
        },
        end: {
          line: 68,
          column: 45
        }
      },
      "26": {
        start: {
          line: 69,
          column: 24
        },
        end: {
          line: 69,
          column: 47
        }
      },
      "27": {
        start: {
          line: 70,
          column: 19
        },
        end: {
          line: 74,
          column: 16
        }
      },
      "28": {
        start: {
          line: 71,
          column: 18
        },
        end: {
          line: 71,
          column: 66
        }
      },
      "29": {
        start: {
          line: 72,
          column: 18
        },
        end: {
          line: 72,
          column: 128
        }
      },
      "30": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 27
        }
      },
      "31": {
        start: {
          line: 76,
          column: 23
        },
        end: {
          line: 80,
          column: 6
        }
      },
      "32": {
        start: {
          line: 77,
          column: 18
        },
        end: {
          line: 77,
          column: 66
        }
      },
      "33": {
        start: {
          line: 78,
          column: 18
        },
        end: {
          line: 78,
          column: 128
        }
      },
      "34": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 27
        }
      },
      "35": {
        start: {
          line: 81,
          column: 21
        },
        end: {
          line: 81,
          column: 155
        }
      },
      "36": {
        start: {
          line: 83,
          column: 24
        },
        end: {
          line: 88,
          column: 5
        }
      },
      "37": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 87,
          column: 25
        }
      },
      "38": {
        start: {
          line: 90,
          column: 25
        },
        end: {
          line: 105,
          column: 5
        }
      },
      "39": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 104,
          column: 9
        }
      },
      "40": {
        start: {
          line: 93,
          column: 16
        },
        end: {
          line: 95,
          column: 19
        }
      },
      "41": {
        start: {
          line: 97,
          column: 16
        },
        end: {
          line: 99,
          column: 19
        }
      },
      "42": {
        start: {
          line: 101,
          column: 16
        },
        end: {
          line: 103,
          column: 19
        }
      },
      "43": {
        start: {
          line: 107,
          column: 26
        },
        end: {
          line: 116,
          column: 5
        }
      },
      "44": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 115,
          column: 9
        }
      },
      "45": {
        start: {
          line: 110,
          column: 16
        },
        end: {
          line: 110,
          column: 40
        }
      },
      "46": {
        start: {
          line: 112,
          column: 16
        },
        end: {
          line: 112,
          column: 38
        }
      },
      "47": {
        start: {
          line: 114,
          column: 16
        },
        end: {
          line: 114,
          column: 39
        }
      },
      "48": {
        start: {
          line: 117,
          column: 4
        },
        end: {
          line: 299,
          column: 7
        }
      },
      "49": {
        start: {
          line: 191,
          column: 50
        },
        end: {
          line: 191,
          column: 98
        }
      },
      "50": {
        start: {
          line: 192,
          column: 50
        },
        end: {
          line: 192,
          column: 160
        }
      },
      "51": {
        start: {
          line: 193,
          column: 40
        },
        end: {
          line: 209,
          column: 50
        }
      },
      "52": {
        start: {
          line: 218,
          column: 50
        },
        end: {
          line: 218,
          column: 79
        }
      },
      "53": {
        start: {
          line: 219,
          column: 54
        },
        end: {
          line: 219,
          column: 78
        }
      },
      "54": {
        start: {
          line: 220,
          column: 40
        },
        end: {
          line: 240,
          column: 50
        }
      },
      "55": {
        start: {
          line: 302,
          column: 4
        },
        end: {
          line: 323,
          column: 5
        }
      },
      "56": {
        start: {
          line: 303,
          column: 8
        },
        end: {
          line: 322,
          column: 11
        }
      },
      "57": {
        start: {
          line: 324,
          column: 21
        },
        end: {
          line: 324,
          column: 56
        }
      },
      "58": {
        start: {
          line: 324,
          column: 47
        },
        end: {
          line: 324,
          column: 54
        }
      },
      "59": {
        start: {
          line: 325,
          column: 24
        },
        end: {
          line: 330,
          column: 5
        }
      },
      "60": {
        start: {
          line: 326,
          column: 8
        },
        end: {
          line: 329,
          column: 25
        }
      },
      "61": {
        start: {
          line: 331,
          column: 4
        },
        end: {
          line: 384,
          column: 7
        }
      },
      "62": {
        start: {
          line: 347,
          column: 43
        },
        end: {
          line: 347,
          column: 89
        }
      },
      "63": {
        start: {
          line: 348,
          column: 38
        },
        end: {
          line: 348,
          column: 61
        }
      },
      "64": {
        start: {
          line: 349,
          column: 24
        },
        end: {
          line: 379,
          column: 34
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 15
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 26,
            column: 9
          },
          end: {
            line: 26,
            column: 33
          }
        },
        loc: {
          start: {
            line: 26,
            column: 39
          },
          end: {
            line: 30,
            column: 1
          }
        },
        line: 26
      },
      "4": {
        name: "MetricChart",
        decl: {
          start: {
            line: 31,
            column: 9
          },
          end: {
            line: 31,
            column: 20
          }
        },
        loc: {
          start: {
            line: 31,
            column: 109
          },
          end: {
            line: 300,
            column: 1
          }
        },
        line: 31
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 55,
            column: 28
          },
          end: {
            line: 55,
            column: 29
          }
        },
        loc: {
          start: {
            line: 55,
            column: 33
          },
          end: {
            line: 55,
            column: 40
          }
        },
        line: 55
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 70,
            column: 28
          },
          end: {
            line: 70,
            column: 29
          }
        },
        loc: {
          start: {
            line: 70,
            column: 44
          },
          end: {
            line: 74,
            column: 5
          }
        },
        line: 70
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 76,
            column: 32
          },
          end: {
            line: 76,
            column: 33
          }
        },
        loc: {
          start: {
            line: 76,
            column: 48
          },
          end: {
            line: 80,
            column: 5
          }
        },
        line: 76
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 83,
            column: 24
          },
          end: {
            line: 83,
            column: 25
          }
        },
        loc: {
          start: {
            line: 83,
            column: 33
          },
          end: {
            line: 88,
            column: 5
          }
        },
        line: 83
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 90,
            column: 25
          },
          end: {
            line: 90,
            column: 26
          }
        },
        loc: {
          start: {
            line: 90,
            column: 29
          },
          end: {
            line: 105,
            column: 5
          }
        },
        line: 90
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 107,
            column: 26
          },
          end: {
            line: 107,
            column: 27
          }
        },
        loc: {
          start: {
            line: 107,
            column: 30
          },
          end: {
            line: 116,
            column: 5
          }
        },
        line: 107
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 190,
            column: 45
          },
          end: {
            line: 190,
            column: 46
          }
        },
        loc: {
          start: {
            line: 190,
            column: 61
          },
          end: {
            line: 210,
            column: 37
          }
        },
        line: 190
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 217,
            column: 42
          },
          end: {
            line: 217,
            column: 43
          }
        },
        loc: {
          start: {
            line: 217,
            column: 58
          },
          end: {
            line: 241,
            column: 37
          }
        },
        line: 217
      },
      "13": {
        name: "SimpleBarChart",
        decl: {
          start: {
            line: 301,
            column: 9
          },
          end: {
            line: 301,
            column: 23
          }
        },
        loc: {
          start: {
            line: 301,
            column: 79
          },
          end: {
            line: 385,
            column: 1
          }
        },
        line: 301
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 324,
            column: 42
          },
          end: {
            line: 324,
            column: 43
          }
        },
        loc: {
          start: {
            line: 324,
            column: 47
          },
          end: {
            line: 324,
            column: 54
          }
        },
        line: 324
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 325,
            column: 24
          },
          end: {
            line: 325,
            column: 25
          }
        },
        loc: {
          start: {
            line: 325,
            column: 33
          },
          end: {
            line: 330,
            column: 5
          }
        },
        line: 325
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 346,
            column: 39
          },
          end: {
            line: 346,
            column: 40
          }
        },
        loc: {
          start: {
            line: 346,
            column: 54
          },
          end: {
            line: 380,
            column: 21
          }
        },
        line: 346
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 29,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 27,
            column: 35
          },
          end: {
            line: 27,
            column: 38
          }
        }, {
          start: {
            line: 27,
            column: 41
          },
          end: {
            line: 29,
            column: 5
          }
        }],
        line: 27
      },
      "1": {
        loc: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 14
          }
        }, {
          start: {
            line: 27,
            column: 18
          },
          end: {
            line: 27,
            column: 32
          }
        }],
        line: 27
      },
      "2": {
        loc: {
          start: {
            line: 31,
            column: 49
          },
          end: {
            line: 31,
            column: 66
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 31,
            column: 57
          },
          end: {
            line: 31,
            column: 66
          }
        }],
        line: 31
      },
      "3": {
        loc: {
          start: {
            line: 31,
            column: 68
          },
          end: {
            line: 31,
            column: 77
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 31,
            column: 75
          },
          end: {
            line: 31,
            column: 77
          }
        }],
        line: 31
      },
      "4": {
        loc: {
          start: {
            line: 31,
            column: 79
          },
          end: {
            line: 31,
            column: 91
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 31,
            column: 90
          },
          end: {
            line: 31,
            column: 91
          }
        }],
        line: 31
      },
      "5": {
        loc: {
          start: {
            line: 31,
            column: 93
          },
          end: {
            line: 31,
            column: 105
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 31,
            column: 102
          },
          end: {
            line: 31,
            column: 105
          }
        }],
        line: 31
      },
      "6": {
        loc: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "7": {
        loc: {
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 32,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 32,
            column: 13
          }
        }, {
          start: {
            line: 32,
            column: 17
          },
          end: {
            line: 32,
            column: 34
          }
        }],
        line: 32
      },
      "8": {
        loc: {
          start: {
            line: 40,
            column: 24
          },
          end: {
            line: 42,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 24
          },
          end: {
            line: 40,
            column: 35
          }
        }, {
          start: {
            line: 40,
            column: 53
          },
          end: {
            line: 42,
            column: 26
          }
        }],
        line: 40
      },
      "9": {
        loc: {
          start: {
            line: 60,
            column: 26
          },
          end: {
            line: 60,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 60,
            column: 46
          },
          end: {
            line: 60,
            column: 71
          }
        }, {
          start: {
            line: 60,
            column: 74
          },
          end: {
            line: 60,
            column: 86
          }
        }],
        line: 60
      },
      "10": {
        loc: {
          start: {
            line: 62,
            column: 18
          },
          end: {
            line: 62,
            column: 104
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 62,
            column: 49
          },
          end: {
            line: 62,
            column: 53
          }
        }, {
          start: {
            line: 62,
            column: 56
          },
          end: {
            line: 62,
            column: 104
          }
        }],
        line: 62
      },
      "11": {
        loc: {
          start: {
            line: 62,
            column: 56
          },
          end: {
            line: 62,
            column: 104
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 62,
            column: 87
          },
          end: {
            line: 62,
            column: 93
          }
        }, {
          start: {
            line: 62,
            column: 96
          },
          end: {
            line: 62,
            column: 104
          }
        }],
        line: 62
      },
      "12": {
        loc: {
          start: {
            line: 63,
            column: 28
          },
          end: {
            line: 63,
            column: 106
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 63,
            column: 50
          },
          end: {
            line: 63,
            column: 102
          }
        }, {
          start: {
            line: 63,
            column: 105
          },
          end: {
            line: 63,
            column: 106
          }
        }],
        line: 63
      },
      "13": {
        loc: {
          start: {
            line: 72,
            column: 18
          },
          end: {
            line: 72,
            column: 128
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 72,
            column: 30
          },
          end: {
            line: 72,
            column: 100
          }
        }, {
          start: {
            line: 72,
            column: 103
          },
          end: {
            line: 72,
            column: 128
          }
        }],
        line: 72
      },
      "14": {
        loc: {
          start: {
            line: 78,
            column: 18
          },
          end: {
            line: 78,
            column: 128
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 78,
            column: 30
          },
          end: {
            line: 78,
            column: 100
          }
        }, {
          start: {
            line: 78,
            column: 103
          },
          end: {
            line: 78,
            column: 128
          }
        }],
        line: 78
      },
      "15": {
        loc: {
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 104,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 92,
            column: 12
          },
          end: {
            line: 95,
            column: 19
          }
        }, {
          start: {
            line: 96,
            column: 12
          },
          end: {
            line: 99,
            column: 19
          }
        }, {
          start: {
            line: 100,
            column: 12
          },
          end: {
            line: 103,
            column: 19
          }
        }],
        line: 91
      },
      "16": {
        loc: {
          start: {
            line: 108,
            column: 8
          },
          end: {
            line: 115,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 109,
            column: 12
          },
          end: {
            line: 110,
            column: 40
          }
        }, {
          start: {
            line: 111,
            column: 12
          },
          end: {
            line: 112,
            column: 38
          }
        }, {
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 114,
            column: 39
          }
        }],
        line: 108
      },
      "17": {
        loc: {
          start: {
            line: 128,
            column: 32
          },
          end: {
            line: 130,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 128,
            column: 32
          },
          end: {
            line: 128,
            column: 43
          }
        }, {
          start: {
            line: 128,
            column: 61
          },
          end: {
            line: 130,
            column: 34
          }
        }],
        line: 128
      },
      "18": {
        loc: {
          start: {
            line: 192,
            column: 50
          },
          end: {
            line: 192,
            column: 160
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 192,
            column: 62
          },
          end: {
            line: 192,
            column: 132
          }
        }, {
          start: {
            line: 192,
            column: 135
          },
          end: {
            line: 192,
            column: 160
          }
        }],
        line: 192
      },
      "19": {
        loc: {
          start: {
            line: 301,
            column: 52
          },
          end: {
            line: 301,
            column: 61
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 301,
            column: 59
          },
          end: {
            line: 301,
            column: 61
          }
        }],
        line: 301
      },
      "20": {
        loc: {
          start: {
            line: 301,
            column: 63
          },
          end: {
            line: 301,
            column: 75
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 301,
            column: 74
          },
          end: {
            line: 301,
            column: 75
          }
        }],
        line: 301
      },
      "21": {
        loc: {
          start: {
            line: 302,
            column: 4
          },
          end: {
            line: 323,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 302,
            column: 4
          },
          end: {
            line: 323,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 302
      },
      "22": {
        loc: {
          start: {
            line: 302,
            column: 8
          },
          end: {
            line: 302,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 302,
            column: 8
          },
          end: {
            line: 302,
            column: 13
          }
        }, {
          start: {
            line: 302,
            column: 17
          },
          end: {
            line: 302,
            column: 34
          }
        }],
        line: 302
      },
      "23": {
        loc: {
          start: {
            line: 310,
            column: 24
          },
          end: {
            line: 312,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 310,
            column: 24
          },
          end: {
            line: 310,
            column: 35
          }
        }, {
          start: {
            line: 310,
            column: 53
          },
          end: {
            line: 312,
            column: 26
          }
        }],
        line: 310
      },
      "24": {
        loc: {
          start: {
            line: 338,
            column: 20
          },
          end: {
            line: 340,
            column: 22
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 338,
            column: 20
          },
          end: {
            line: 338,
            column: 31
          }
        }, {
          start: {
            line: 338,
            column: 49
          },
          end: {
            line: 340,
            column: 22
          }
        }],
        line: 338
      },
      "25": {
        loc: {
          start: {
            line: 347,
            column: 43
          },
          end: {
            line: 347,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 347,
            column: 58
          },
          end: {
            line: 347,
            column: 85
          }
        }, {
          start: {
            line: 347,
            column: 88
          },
          end: {
            line: 347,
            column: 89
          }
        }],
        line: 347
      },
      "26": {
        loc: {
          start: {
            line: 348,
            column: 38
          },
          end: {
            line: 348,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 348,
            column: 38
          },
          end: {
            line: 348,
            column: 48
          }
        }, {
          start: {
            line: 348,
            column: 52
          },
          end: {
            line: 348,
            column: 61
          }
        }],
        line: 348
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0],
      "3": [0],
      "4": [0],
      "5": [0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0, 0],
      "16": [0, 0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0],
      "20": [0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\admin\\monitoring\\MetricChart.tsx"],
      sourcesContent: ["'use client';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - METRIC CHART COMPONENT\r\n// ===================================\r\n\r\nimport React from 'react';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { TrendingUp, TrendingDown, Minus } from 'lucide-react';\r\n\r\ninterface MetricDataPoint {\r\n  timestamp: string;\r\n  value: number;\r\n}\r\n\r\ninterface MetricChartProps {\r\n  title: string;\r\n  description?: string;\r\n  data: MetricDataPoint[];\r\n  color?: string;\r\n  unit?: string;\r\n  decimals?: number;\r\n  height?: number;\r\n}\r\n\r\n/**\r\n * Componente de gr\xE1fico de m\xE9tricas simple (sin dependencias externas)\r\n */\r\nexport default function MetricChart({\r\n  title,\r\n  description,\r\n  data,\r\n  color = '#3b82f6',\r\n  unit = '',\r\n  decimals = 0,\r\n  height = 200\r\n}: MetricChartProps) {\r\n  if (!data || data.length === 0) {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>{title}</CardTitle>\r\n          {description && <CardDescription>{description}</CardDescription>}\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"flex items-center justify-center h-48 text-muted-foreground\">\r\n            No hay datos disponibles\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  // Calcular valores para el gr\xE1fico\r\n  const values = data.map(d => d.value);\r\n  const minValue = Math.min(...values);\r\n  const maxValue = Math.max(...values);\r\n  const range = maxValue - minValue;\r\n  const currentValue = values[values.length - 1];\r\n  const previousValue = values.length > 1 ? values[values.length - 2] : currentValue;\r\n  \r\n  // Calcular tendencia\r\n  const trend = currentValue > previousValue ? 'up' : \r\n                currentValue < previousValue ? 'down' : 'stable';\r\n  const trendPercentage = previousValue !== 0 \r\n    ? ((currentValue - previousValue) / previousValue) * 100 \r\n    : 0;\r\n\r\n  // Generar puntos SVG para la l\xEDnea\r\n  const svgWidth = 400;\r\n  const svgHeight = height;\r\n  const padding = 20;\r\n  const chartWidth = svgWidth - (padding * 2);\r\n  const chartHeight = svgHeight - (padding * 2);\r\n\r\n  const points = data.map((point, index) => {\r\n    const x = padding + (index / (data.length - 1)) * chartWidth;\r\n    const y = range > 0 \r\n      ? padding + chartHeight - ((point.value - minValue) / range) * chartHeight\r\n      : padding + chartHeight / 2;\r\n    return `${x},${y}`;\r\n  }).join(' ');\r\n\r\n  // Generar \xE1rea bajo la curva\r\n  const areaPoints = data.map((point, index) => {\r\n    const x = padding + (index / (data.length - 1)) * chartWidth;\r\n    const y = range > 0 \r\n      ? padding + chartHeight - ((point.value - minValue) / range) * chartHeight\r\n      : padding + chartHeight / 2;\r\n    return `${x},${y}`;\r\n  });\r\n\r\n  const areaPath = `M${areaPoints[0]} L${areaPoints.join(' L')} L${padding + chartWidth},${padding + chartHeight} L${padding},${padding + chartHeight} Z`;\r\n\r\n  // Formatear valor\r\n  const formatValue = (value: number) => {\r\n    return new Intl.NumberFormat('es-AR', {\r\n      minimumFractionDigits: decimals,\r\n      maximumFractionDigits: decimals\r\n    }).format(value);\r\n  };\r\n\r\n  // Obtener icono de tendencia\r\n  const getTrendIcon = () => {\r\n    switch (trend) {\r\n      case 'up':\r\n        return <TrendingUp className=\"h-4 w-4 text-green-500\" />;\r\n      case 'down':\r\n        return <TrendingDown className=\"h-4 w-4 text-red-500\" />;\r\n      default:\r\n        return <Minus className=\"h-4 w-4 text-gray-500\" />;\r\n    }\r\n  };\r\n\r\n  // Obtener color de tendencia\r\n  const getTrendColor = () => {\r\n    switch (trend) {\r\n      case 'up':\r\n        return 'text-green-500';\r\n      case 'down':\r\n        return 'text-red-500';\r\n      default:\r\n        return 'text-gray-500';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <div className=\"flex items-center justify-between\">\r\n          <div>\r\n            <CardTitle>{title}</CardTitle>\r\n            {description && <CardDescription>{description}</CardDescription>}\r\n          </div>\r\n          <div className=\"flex items-center space-x-2\">\r\n            {getTrendIcon()}\r\n            <span className={`text-sm font-medium ${getTrendColor()}`}>\r\n              {Math.abs(trendPercentage).toFixed(1)}%\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <div className=\"space-y-4\">\r\n          {/* Valor actual */}\r\n          <div>\r\n            <div className=\"text-2xl font-bold\">\r\n              {formatValue(currentValue)}{unit}\r\n            </div>\r\n            <p className=\"text-xs text-muted-foreground\">\r\n              Valor actual\r\n            </p>\r\n          </div>\r\n\r\n          {/* Gr\xE1fico SVG */}\r\n          <div className=\"w-full\">\r\n            <svg\r\n              width=\"100%\"\r\n              height={height}\r\n              viewBox={`0 0 ${svgWidth} ${svgHeight}`}\r\n              className=\"overflow-visible\"\r\n            >\r\n              {/* \xC1rea bajo la curva */}\r\n              <path\r\n                d={areaPath}\r\n                fill={color}\r\n                fillOpacity={0.1}\r\n                stroke=\"none\"\r\n              />\r\n              \r\n              {/* L\xEDnea principal */}\r\n              <polyline\r\n                points={points}\r\n                fill=\"none\"\r\n                stroke={color}\r\n                strokeWidth={2}\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n              />\r\n              \r\n              {/* Puntos de datos */}\r\n              {data.map((point, index) => {\r\n                const x = padding + (index / (data.length - 1)) * chartWidth;\r\n                const y = range > 0 \r\n                  ? padding + chartHeight - ((point.value - minValue) / range) * chartHeight\r\n                  : padding + chartHeight / 2;\r\n                \r\n                return (\r\n                  <circle\r\n                    key={index}\r\n                    cx={x}\r\n                    cy={y}\r\n                    r={3}\r\n                    fill={color}\r\n                    stroke=\"white\"\r\n                    strokeWidth={2}\r\n                    className=\"hover:r-4 transition-all duration-200\"\r\n                  >\r\n                    <title>\r\n                      {new Date(point.timestamp).toLocaleTimeString('es-AR')}: {formatValue(point.value)}{unit}\r\n                    </title>\r\n                  </circle>\r\n                );\r\n              })}\r\n              \r\n              {/* L\xEDneas de grid horizontales */}\r\n              {[0, 0.25, 0.5, 0.75, 1].map((ratio, index) => {\r\n                const y = padding + chartHeight * ratio;\r\n                const value = maxValue - (ratio * range);\r\n                \r\n                return (\r\n                  <g key={index}>\r\n                    <line\r\n                      x1={padding}\r\n                      y1={y}\r\n                      x2={padding + chartWidth}\r\n                      y2={y}\r\n                      stroke=\"#e5e7eb\"\r\n                      strokeWidth={1}\r\n                      strokeDasharray=\"2,2\"\r\n                    />\r\n                    <text\r\n                      x={padding - 5}\r\n                      y={y + 4}\r\n                      textAnchor=\"end\"\r\n                      fontSize=\"10\"\r\n                      fill=\"#6b7280\"\r\n                    >\r\n                      {formatValue(value)}\r\n                    </text>\r\n                  </g>\r\n                );\r\n              })}\r\n            </svg>\r\n          </div>\r\n\r\n          {/* Estad\xEDsticas adicionales */}\r\n          <div className=\"grid grid-cols-3 gap-4 text-sm\">\r\n            <div>\r\n              <div className=\"font-medium text-green-600\">\r\n                {formatValue(maxValue)}{unit}\r\n              </div>\r\n              <div className=\"text-muted-foreground\">M\xE1ximo</div>\r\n            </div>\r\n            <div>\r\n              <div className=\"font-medium\">\r\n                {formatValue((minValue + maxValue) / 2)}{unit}\r\n              </div>\r\n              <div className=\"text-muted-foreground\">Promedio</div>\r\n            </div>\r\n            <div>\r\n              <div className=\"font-medium text-red-600\">\r\n                {formatValue(minValue)}{unit}\r\n              </div>\r\n              <div className=\"text-muted-foreground\">M\xEDnimo</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\n/**\r\n * Componente de gr\xE1fico de barras simple\r\n */\r\ninterface BarChartProps {\r\n  title: string;\r\n  description?: string;\r\n  data: Array<{ label: string; value: number; color?: string }>;\r\n  unit?: string;\r\n  decimals?: number;\r\n}\r\n\r\nexport function SimpleBarChart({\r\n  title,\r\n  description,\r\n  data,\r\n  unit = '',\r\n  decimals = 0\r\n}: BarChartProps) {\r\n  if (!data || data.length === 0) {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>{title}</CardTitle>\r\n          {description && <CardDescription>{description}</CardDescription>}\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"flex items-center justify-center h-48 text-muted-foreground\">\r\n            No hay datos disponibles\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  const maxValue = Math.max(...data.map(d => d.value));\r\n\r\n  const formatValue = (value: number) => {\r\n    return new Intl.NumberFormat('es-AR', {\r\n      minimumFractionDigits: decimals,\r\n      maximumFractionDigits: decimals\r\n    }).format(value);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle>{title}</CardTitle>\r\n        {description && <CardDescription>{description}</CardDescription>}\r\n      </CardHeader>\r\n      <CardContent>\r\n        <div className=\"space-y-4\">\r\n          {data.map((item, index) => {\r\n            const percentage = maxValue > 0 ? (item.value / maxValue) * 100 : 0;\r\n            const color = item.color || '#3b82f6';\r\n            \r\n            return (\r\n              <div key={index} className=\"space-y-2\">\r\n                <div className=\"flex items-center justify-between text-sm\">\r\n                  <span className=\"font-medium\">{item.label}</span>\r\n                  <span className=\"text-muted-foreground\">\r\n                    {formatValue(item.value)}{unit}\r\n                  </span>\r\n                </div>\r\n                <div className=\"w-full bg-gray-200 rounded-full h-2\">\r\n                  <div\r\n                    className=\"h-2 rounded-full transition-all duration-500 ease-out\"\r\n                    style={{\r\n                      width: `${percentage}%`,\r\n                      backgroundColor: color\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["SimpleBarChart", "MetricChart", "title", "description", "data", "color", "unit", "decimals", "height", "length", "Card", "CardHeader", "CardTitle", "CardDescription", "CardContent", "div", "className", "values", "map", "d", "value", "minValue", "Math", "min", "maxValue", "max", "range", "currentValue", "previousValue", "trend", "trendPercentage", "svgWidth", "svgHeight", "padding", "chartWidth", "chartHeight", "points", "point", "index", "x", "y", "join", "areaPoints", "areaPath", "formatValue", "Intl", "NumberFormat", "minimumFractionDigits", "maximumFractionDigits", "format", "getTrendIcon", "TrendingUp", "TrendingDown", "Minus", "getTrendColor", "span", "abs", "toFixed", "p", "svg", "width", "viewBox", "path", "fill", "fillOpacity", "stroke", "polyline", "strokeWidth", "strokeLinecap", "strokeLinejoin", "circle", "cx", "cy", "r", "Date", "timestamp", "toLocaleTimeString", "ratio", "g", "line", "x1", "y1", "x2", "y2", "strokeDasharray", "text", "textAnchor", "fontSize", "item", "percentage", "label", "style", "backgroundColor"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d58692fef424878bae9be40bb9ef0e5d99b55b9d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2idtk53qd3 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2idtk53qd3();
cov_2idtk53qd3().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2idtk53qd3().f[0]++;
  cov_2idtk53qd3().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2idtk53qd3().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_2idtk53qd3().s[3]++;
_export(exports, {
  get SimpleBarChart() {
    /* istanbul ignore next */
    cov_2idtk53qd3().f[1]++;
    cov_2idtk53qd3().s[4]++;
    return SimpleBarChart;
  },
  get
  /**
  * Componente de gráfico de métricas simple (sin dependencias externas)
  */
  default() {
    /* istanbul ignore next */
    cov_2idtk53qd3().f[2]++;
    cov_2idtk53qd3().s[5]++;
    return MetricChart;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_2idtk53qd3().s[6]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_2idtk53qd3().s[7]++, _interop_require_default(require("react")));
const _card =
/* istanbul ignore next */
(cov_2idtk53qd3().s[8]++, require("../../ui/card"));
const _lucidereact =
/* istanbul ignore next */
(cov_2idtk53qd3().s[9]++, require("lucide-react"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_2idtk53qd3().f[3]++;
  cov_2idtk53qd3().s[10]++;
  return /* istanbul ignore next */(cov_2idtk53qd3().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_2idtk53qd3().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_2idtk53qd3().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_2idtk53qd3().b[0][1]++, {
    default: obj
  });
}
function MetricChart({
  title,
  description,
  data,
  color =
  /* istanbul ignore next */
  (cov_2idtk53qd3().b[2][0]++, '#3b82f6'),
  unit =
  /* istanbul ignore next */
  (cov_2idtk53qd3().b[3][0]++, ''),
  decimals =
  /* istanbul ignore next */
  (cov_2idtk53qd3().b[4][0]++, 0),
  height =
  /* istanbul ignore next */
  (cov_2idtk53qd3().b[5][0]++, 200)
}) {
  /* istanbul ignore next */
  cov_2idtk53qd3().f[4]++;
  cov_2idtk53qd3().s[11]++;
  if (
  /* istanbul ignore next */
  (cov_2idtk53qd3().b[7][0]++, !data) ||
  /* istanbul ignore next */
  (cov_2idtk53qd3().b[7][1]++, data.length === 0)) {
    /* istanbul ignore next */
    cov_2idtk53qd3().b[6][0]++;
    cov_2idtk53qd3().s[12]++;
    return /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardHeader, {
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
          children: title
        }),
        /* istanbul ignore next */
        (cov_2idtk53qd3().b[8][0]++, description) &&
        /* istanbul ignore next */
        (cov_2idtk53qd3().b[8][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardDescription, {
          children: description
        }))]
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
        children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "flex items-center justify-center h-48 text-muted-foreground",
          children: "No hay datos disponibles"
        })
      })]
    });
  } else
  /* istanbul ignore next */
  {
    cov_2idtk53qd3().b[6][1]++;
  }
  // Calcular valores para el gráfico
  const values =
  /* istanbul ignore next */
  (cov_2idtk53qd3().s[13]++, data.map(d => {
    /* istanbul ignore next */
    cov_2idtk53qd3().f[5]++;
    cov_2idtk53qd3().s[14]++;
    return d.value;
  }));
  const minValue =
  /* istanbul ignore next */
  (cov_2idtk53qd3().s[15]++, Math.min(...values));
  const maxValue =
  /* istanbul ignore next */
  (cov_2idtk53qd3().s[16]++, Math.max(...values));
  const range =
  /* istanbul ignore next */
  (cov_2idtk53qd3().s[17]++, maxValue - minValue);
  const currentValue =
  /* istanbul ignore next */
  (cov_2idtk53qd3().s[18]++, values[values.length - 1]);
  const previousValue =
  /* istanbul ignore next */
  (cov_2idtk53qd3().s[19]++, values.length > 1 ?
  /* istanbul ignore next */
  (cov_2idtk53qd3().b[9][0]++, values[values.length - 2]) :
  /* istanbul ignore next */
  (cov_2idtk53qd3().b[9][1]++, currentValue));
  // Calcular tendencia
  const trend =
  /* istanbul ignore next */
  (cov_2idtk53qd3().s[20]++, currentValue > previousValue ?
  /* istanbul ignore next */
  (cov_2idtk53qd3().b[10][0]++, 'up') :
  /* istanbul ignore next */
  (cov_2idtk53qd3().b[10][1]++, currentValue < previousValue ?
  /* istanbul ignore next */
  (cov_2idtk53qd3().b[11][0]++, 'down') :
  /* istanbul ignore next */
  (cov_2idtk53qd3().b[11][1]++, 'stable')));
  const trendPercentage =
  /* istanbul ignore next */
  (cov_2idtk53qd3().s[21]++, previousValue !== 0 ?
  /* istanbul ignore next */
  (cov_2idtk53qd3().b[12][0]++, (currentValue - previousValue) / previousValue * 100) :
  /* istanbul ignore next */
  (cov_2idtk53qd3().b[12][1]++, 0));
  // Generar puntos SVG para la línea
  const svgWidth =
  /* istanbul ignore next */
  (cov_2idtk53qd3().s[22]++, 400);
  const svgHeight =
  /* istanbul ignore next */
  (cov_2idtk53qd3().s[23]++, height);
  const padding =
  /* istanbul ignore next */
  (cov_2idtk53qd3().s[24]++, 20);
  const chartWidth =
  /* istanbul ignore next */
  (cov_2idtk53qd3().s[25]++, svgWidth - padding * 2);
  const chartHeight =
  /* istanbul ignore next */
  (cov_2idtk53qd3().s[26]++, svgHeight - padding * 2);
  const points =
  /* istanbul ignore next */
  (cov_2idtk53qd3().s[27]++, data.map((point, index) => {
    /* istanbul ignore next */
    cov_2idtk53qd3().f[6]++;
    const x =
    /* istanbul ignore next */
    (cov_2idtk53qd3().s[28]++, padding + index / (data.length - 1) * chartWidth);
    const y =
    /* istanbul ignore next */
    (cov_2idtk53qd3().s[29]++, range > 0 ?
    /* istanbul ignore next */
    (cov_2idtk53qd3().b[13][0]++, padding + chartHeight - (point.value - minValue) / range * chartHeight) :
    /* istanbul ignore next */
    (cov_2idtk53qd3().b[13][1]++, padding + chartHeight / 2));
    /* istanbul ignore next */
    cov_2idtk53qd3().s[30]++;
    return `${x},${y}`;
  }).join(' '));
  // Generar área bajo la curva
  const areaPoints =
  /* istanbul ignore next */
  (cov_2idtk53qd3().s[31]++, data.map((point, index) => {
    /* istanbul ignore next */
    cov_2idtk53qd3().f[7]++;
    const x =
    /* istanbul ignore next */
    (cov_2idtk53qd3().s[32]++, padding + index / (data.length - 1) * chartWidth);
    const y =
    /* istanbul ignore next */
    (cov_2idtk53qd3().s[33]++, range > 0 ?
    /* istanbul ignore next */
    (cov_2idtk53qd3().b[14][0]++, padding + chartHeight - (point.value - minValue) / range * chartHeight) :
    /* istanbul ignore next */
    (cov_2idtk53qd3().b[14][1]++, padding + chartHeight / 2));
    /* istanbul ignore next */
    cov_2idtk53qd3().s[34]++;
    return `${x},${y}`;
  }));
  const areaPath =
  /* istanbul ignore next */
  (cov_2idtk53qd3().s[35]++, `M${areaPoints[0]} L${areaPoints.join(' L')} L${padding + chartWidth},${padding + chartHeight} L${padding},${padding + chartHeight} Z`);
  // Formatear valor
  /* istanbul ignore next */
  cov_2idtk53qd3().s[36]++;
  const formatValue = value => {
    /* istanbul ignore next */
    cov_2idtk53qd3().f[8]++;
    cov_2idtk53qd3().s[37]++;
    return new Intl.NumberFormat('es-AR', {
      minimumFractionDigits: decimals,
      maximumFractionDigits: decimals
    }).format(value);
  };
  // Obtener icono de tendencia
  /* istanbul ignore next */
  cov_2idtk53qd3().s[38]++;
  const getTrendIcon = () => {
    /* istanbul ignore next */
    cov_2idtk53qd3().f[9]++;
    cov_2idtk53qd3().s[39]++;
    switch (trend) {
      case 'up':
        /* istanbul ignore next */
        cov_2idtk53qd3().b[15][0]++;
        cov_2idtk53qd3().s[40]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.TrendingUp, {
          className: "h-4 w-4 text-green-500"
        });
      case 'down':
        /* istanbul ignore next */
        cov_2idtk53qd3().b[15][1]++;
        cov_2idtk53qd3().s[41]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.TrendingDown, {
          className: "h-4 w-4 text-red-500"
        });
      default:
        /* istanbul ignore next */
        cov_2idtk53qd3().b[15][2]++;
        cov_2idtk53qd3().s[42]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Minus, {
          className: "h-4 w-4 text-gray-500"
        });
    }
  };
  // Obtener color de tendencia
  /* istanbul ignore next */
  cov_2idtk53qd3().s[43]++;
  const getTrendColor = () => {
    /* istanbul ignore next */
    cov_2idtk53qd3().f[10]++;
    cov_2idtk53qd3().s[44]++;
    switch (trend) {
      case 'up':
        /* istanbul ignore next */
        cov_2idtk53qd3().b[16][0]++;
        cov_2idtk53qd3().s[45]++;
        return 'text-green-500';
      case 'down':
        /* istanbul ignore next */
        cov_2idtk53qd3().b[16][1]++;
        cov_2idtk53qd3().s[46]++;
        return 'text-red-500';
      default:
        /* istanbul ignore next */
        cov_2idtk53qd3().b[16][2]++;
        cov_2idtk53qd3().s[47]++;
        return 'text-gray-500';
    }
  };
  /* istanbul ignore next */
  cov_2idtk53qd3().s[48]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
    children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex items-center justify-between",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
            children: title
          }),
          /* istanbul ignore next */
          (cov_2idtk53qd3().b[17][0]++, description) &&
          /* istanbul ignore next */
          (cov_2idtk53qd3().b[17][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardDescription, {
            children: description
          }))]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex items-center space-x-2",
          children: [getTrendIcon(), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
            className: `text-sm font-medium ${getTrendColor()}`,
            children: [Math.abs(trendPercentage).toFixed(1), "%"]
          })]
        })]
      })
    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "space-y-4",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "text-2xl font-bold",
            children: [formatValue(currentValue), unit]
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
            className: "text-xs text-muted-foreground",
            children: "Valor actual"
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "w-full",
          children: /*#__PURE__*/(0, _jsxruntime.jsxs)("svg", {
            width: "100%",
            height: height,
            viewBox: `0 0 ${svgWidth} ${svgHeight}`,
            className: "overflow-visible",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("path", {
              d: areaPath,
              fill: color,
              fillOpacity: 0.1,
              stroke: "none"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("polyline", {
              points: points,
              fill: "none",
              stroke: color,
              strokeWidth: 2,
              strokeLinecap: "round",
              strokeLinejoin: "round"
            }), data.map((point, index) => {
              /* istanbul ignore next */
              cov_2idtk53qd3().f[11]++;
              const x =
              /* istanbul ignore next */
              (cov_2idtk53qd3().s[49]++, padding + index / (data.length - 1) * chartWidth);
              const y =
              /* istanbul ignore next */
              (cov_2idtk53qd3().s[50]++, range > 0 ?
              /* istanbul ignore next */
              (cov_2idtk53qd3().b[18][0]++, padding + chartHeight - (point.value - minValue) / range * chartHeight) :
              /* istanbul ignore next */
              (cov_2idtk53qd3().b[18][1]++, padding + chartHeight / 2));
              /* istanbul ignore next */
              cov_2idtk53qd3().s[51]++;
              return /*#__PURE__*/(0, _jsxruntime.jsx)("circle", {
                cx: x,
                cy: y,
                r: 3,
                fill: color,
                stroke: "white",
                strokeWidth: 2,
                className: "hover:r-4 transition-all duration-200",
                children: /*#__PURE__*/(0, _jsxruntime.jsxs)("title", {
                  children: [new Date(point.timestamp).toLocaleTimeString('es-AR'), ": ", formatValue(point.value), unit]
                })
              }, index);
            }), [0, 0.25, 0.5, 0.75, 1].map((ratio, index) => {
              /* istanbul ignore next */
              cov_2idtk53qd3().f[12]++;
              const y =
              /* istanbul ignore next */
              (cov_2idtk53qd3().s[52]++, padding + chartHeight * ratio);
              const value =
              /* istanbul ignore next */
              (cov_2idtk53qd3().s[53]++, maxValue - ratio * range);
              /* istanbul ignore next */
              cov_2idtk53qd3().s[54]++;
              return /*#__PURE__*/(0, _jsxruntime.jsxs)("g", {
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("line", {
                  x1: padding,
                  y1: y,
                  x2: padding + chartWidth,
                  y2: y,
                  stroke: "#e5e7eb",
                  strokeWidth: 1,
                  strokeDasharray: "2,2"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("text", {
                  x: padding - 5,
                  y: y + 4,
                  textAnchor: "end",
                  fontSize: "10",
                  fill: "#6b7280",
                  children: formatValue(value)
                })]
              }, index);
            })]
          })
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "grid grid-cols-3 gap-4 text-sm",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "font-medium text-green-600",
              children: [formatValue(maxValue), unit]
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "text-muted-foreground",
              children: "M\xe1ximo"
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "font-medium",
              children: [formatValue((minValue + maxValue) / 2), unit]
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "text-muted-foreground",
              children: "Promedio"
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "font-medium text-red-600",
              children: [formatValue(minValue), unit]
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "text-muted-foreground",
              children: "M\xednimo"
            })]
          })]
        })]
      })
    })]
  });
}
function SimpleBarChart({
  title,
  description,
  data,
  unit =
  /* istanbul ignore next */
  (cov_2idtk53qd3().b[19][0]++, ''),
  decimals =
  /* istanbul ignore next */
  (cov_2idtk53qd3().b[20][0]++, 0)
}) {
  /* istanbul ignore next */
  cov_2idtk53qd3().f[13]++;
  cov_2idtk53qd3().s[55]++;
  if (
  /* istanbul ignore next */
  (cov_2idtk53qd3().b[22][0]++, !data) ||
  /* istanbul ignore next */
  (cov_2idtk53qd3().b[22][1]++, data.length === 0)) {
    /* istanbul ignore next */
    cov_2idtk53qd3().b[21][0]++;
    cov_2idtk53qd3().s[56]++;
    return /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardHeader, {
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
          children: title
        }),
        /* istanbul ignore next */
        (cov_2idtk53qd3().b[23][0]++, description) &&
        /* istanbul ignore next */
        (cov_2idtk53qd3().b[23][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardDescription, {
          children: description
        }))]
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
        children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "flex items-center justify-center h-48 text-muted-foreground",
          children: "No hay datos disponibles"
        })
      })]
    });
  } else
  /* istanbul ignore next */
  {
    cov_2idtk53qd3().b[21][1]++;
  }
  const maxValue =
  /* istanbul ignore next */
  (cov_2idtk53qd3().s[57]++, Math.max(...data.map(d => {
    /* istanbul ignore next */
    cov_2idtk53qd3().f[14]++;
    cov_2idtk53qd3().s[58]++;
    return d.value;
  })));
  /* istanbul ignore next */
  cov_2idtk53qd3().s[59]++;
  const formatValue = value => {
    /* istanbul ignore next */
    cov_2idtk53qd3().f[15]++;
    cov_2idtk53qd3().s[60]++;
    return new Intl.NumberFormat('es-AR', {
      minimumFractionDigits: decimals,
      maximumFractionDigits: decimals
    }).format(value);
  };
  /* istanbul ignore next */
  cov_2idtk53qd3().s[61]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardHeader, {
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
        children: title
      }),
      /* istanbul ignore next */
      (cov_2idtk53qd3().b[24][0]++, description) &&
      /* istanbul ignore next */
      (cov_2idtk53qd3().b[24][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardDescription, {
        children: description
      }))]
    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
      children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "space-y-4",
        children: data.map((item, index) => {
          /* istanbul ignore next */
          cov_2idtk53qd3().f[16]++;
          const percentage =
          /* istanbul ignore next */
          (cov_2idtk53qd3().s[62]++, maxValue > 0 ?
          /* istanbul ignore next */
          (cov_2idtk53qd3().b[25][0]++, item.value / maxValue * 100) :
          /* istanbul ignore next */
          (cov_2idtk53qd3().b[25][1]++, 0));
          const color =
          /* istanbul ignore next */
          (cov_2idtk53qd3().s[63]++,
          /* istanbul ignore next */
          (cov_2idtk53qd3().b[26][0]++, item.color) ||
          /* istanbul ignore next */
          (cov_2idtk53qd3().b[26][1]++, '#3b82f6'));
          /* istanbul ignore next */
          cov_2idtk53qd3().s[64]++;
          return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "space-y-2",
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex items-center justify-between text-sm",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                className: "font-medium",
                children: item.label
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                className: "text-muted-foreground",
                children: [formatValue(item.value), unit]
              })]
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "w-full bg-gray-200 rounded-full h-2",
              children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "h-2 rounded-full transition-all duration-500 ease-out",
                style: {
                  width: `${percentage}%`,
                  backgroundColor: color
                }
              })
            })]
          }, index);
        })
      })
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,