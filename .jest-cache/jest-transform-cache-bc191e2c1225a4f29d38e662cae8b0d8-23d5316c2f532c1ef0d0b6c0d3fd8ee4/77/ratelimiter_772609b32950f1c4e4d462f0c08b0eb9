acbf7892c0ec19ead84b2be1d7342737
// ===================================
// PINTEYA E-COMMERCE - RATE LIMITING MIDDLEWARE
// ===================================
// Sistema de rate limiting enterprise con configuraciÃ³n flexible
// y logging estructurado para APIs crÃ­ticas
"use strict";

/* istanbul ignore next */
function cov_163ccm1dcr() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\rate-limiting\\rate-limiter.ts";
  var hash = "f62687cced07074a039a2cc8f1b5726885021121";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\rate-limiting\\rate-limiter.ts",
    statementMap: {
      "0": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 9,
          column: 3
        }
      },
      "1": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 14,
          column: 7
        }
      },
      "2": {
        start: {
          line: 11,
          column: 24
        },
        end: {
          line: 14,
          column: 7
        }
      },
      "3": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 35,
          column: 3
        }
      },
      "4": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 34
        }
      },
      "5": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 30
        }
      },
      "6": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 41
        }
      },
      "7": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 33
        }
      },
      "8": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 29
        }
      },
      "9": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 29
        }
      },
      "10": {
        start: {
          line: 36,
          column: 16
        },
        end: {
          line: 36,
          column: 38
        }
      },
      "11": {
        start: {
          line: 41,
          column: 27
        },
        end: {
          line: 57,
          column: 1
        }
      },
      "12": {
        start: {
          line: 59,
          column: 28
        },
        end: {
          line: 75,
          column: 1
        }
      },
      "13": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 83,
          column: 5
        }
      },
      "14": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 21
        }
      },
      "15": {
        start: {
          line: 85,
          column: 4
        },
        end: {
          line: 85,
          column: 16
        }
      },
      "16": {
        start: {
          line: 88,
          column: 22
        },
        end: {
          line: 88,
          column: 60
        }
      },
      "17": {
        start: {
          line: 89,
          column: 20
        },
        end: {
          line: 89,
          column: 76
        }
      },
      "18": {
        start: {
          line: 90,
          column: 27
        },
        end: {
          line: 127,
          column: 1
        }
      },
      "19": {
        start: {
          line: 132,
          column: 0
        },
        end: {
          line: 146,
          column: 1
        }
      },
      "20": {
        start: {
          line: 133,
          column: 4
        },
        end: {
          line: 145,
          column: 7
        }
      },
      "21": {
        start: {
          line: 152,
          column: 21
        },
        end: {
          line: 152,
          column: 40
        }
      },
      "22": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 155,
          column: 9
        }
      },
      "23": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 154,
          column: 24
        }
      },
      "24": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 160,
          column: 9
        }
      },
      "25": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 158,
          column: 35
        }
      },
      "26": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 159,
          column: 24
        }
      },
      "27": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 161,
          column: 20
        }
      },
      "28": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 164,
          column: 35
        }
      },
      "29": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 168,
          column: 16
        }
      },
      "30": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 167,
          column: 35
        }
      },
      "31": {
        start: {
          line: 171,
          column: 20
        },
        end: {
          line: 171,
          column: 30
        }
      },
      "32": {
        start: {
          line: 172,
          column: 25
        },
        end: {
          line: 172,
          column: 44
        }
      },
      "33": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 180,
          column: 9
        }
      },
      "34": {
        start: {
          line: 174,
          column: 28
        },
        end: {
          line: 177,
          column: 13
        }
      },
      "35": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 178,
          column: 46
        }
      },
      "36": {
        start: {
          line: 179,
          column: 12
        },
        end: {
          line: 179,
          column: 27
        }
      },
      "37": {
        start: {
          line: 181,
          column: 28
        },
        end: {
          line: 184,
          column: 9
        }
      },
      "38": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 185,
          column: 67
        }
      },
      "39": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 186,
          column: 27
        }
      },
      "40": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 189,
          column: 31
        }
      },
      "41": {
        start: {
          line: 195,
          column: 21
        },
        end: {
          line: 195,
          column: 38
        }
      },
      "42": {
        start: {
          line: 196,
          column: 22
        },
        end: {
          line: 220,
          column: 1
        }
      },
      "43": {
        start: {
          line: 199,
          column: 26
        },
        end: {
          line: 199,
          column: 60
        }
      },
      "44": {
        start: {
          line: 200,
          column: 19
        },
        end: {
          line: 200,
          column: 98
        }
      },
      "45": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 201,
          column: 26
        }
      },
      "46": {
        start: {
          line: 206,
          column: 23
        },
        end: {
          line: 206,
          column: 66
        }
      },
      "47": {
        start: {
          line: 207,
          column: 8
        },
        end: {
          line: 207,
          column: 32
        }
      },
      "48": {
        start: {
          line: 211,
          column: 20
        },
        end: {
          line: 211,
          column: 36
        }
      },
      "49": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 212,
          column: 42
        }
      },
      "50": {
        start: {
          line: 216,
          column: 19
        },
        end: {
          line: 216,
          column: 40
        }
      },
      "51": {
        start: {
          line: 217,
          column: 25
        },
        end: {
          line: 217,
          column: 52
        }
      },
      "52": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 218,
          column: 35
        }
      },
      "53": {
        start: {
          line: 222,
          column: 24
        },
        end: {
          line: 230,
          column: 5
        }
      },
      "54": {
        start: {
          line: 231,
          column: 4
        },
        end: {
          line: 233,
          column: 6
        }
      },
      "55": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 232,
          column: 61
        }
      },
      "56": {
        start: {
          line: 236,
          column: 25
        },
        end: {
          line: 236,
          column: 70
        }
      },
      "57": {
        start: {
          line: 237,
          column: 16
        },
        end: {
          line: 237,
          column: 33
        }
      },
      "58": {
        start: {
          line: 238,
          column: 4
        },
        end: {
          line: 259,
          column: 5
        }
      },
      "59": {
        start: {
          line: 239,
          column: 21
        },
        end: {
          line: 239,
          column: 64
        }
      },
      "60": {
        start: {
          line: 240,
          column: 23
        },
        end: {
          line: 245,
          column: 9
        }
      },
      "61": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 248,
          column: 9
        }
      },
      "62": {
        start: {
          line: 247,
          column: 12
        },
        end: {
          line: 247,
          column: 80
        }
      },
      "63": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 249,
          column: 22
        }
      },
      "64": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 251,
          column: 74
        }
      },
      "65": {
        start: {
          line: 253,
          column: 8
        },
        end: {
          line: 258,
          column: 10
        }
      },
      "66": {
        start: {
          line: 262,
          column: 4
        },
        end: {
          line: 305,
          column: 6
        }
      },
      "67": {
        start: {
          line: 263,
          column: 23
        },
        end: {
          line: 263,
          column: 56
        }
      },
      "68": {
        start: {
          line: 265,
          column: 24
        },
        end: {
          line: 265,
          column: 37
        }
      },
      "69": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 279,
          column: 9
        }
      },
      "70": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 272,
          column: 13
        }
      },
      "71": {
        start: {
          line: 269,
          column: 16
        },
        end: {
          line: 269,
          column: 72
        }
      },
      "72": {
        start: {
          line: 270,
          column: 16
        },
        end: {
          line: 270,
          column: 80
        }
      },
      "73": {
        start: {
          line: 271,
          column: 16
        },
        end: {
          line: 271,
          column: 89
        }
      },
      "74": {
        start: {
          line: 273,
          column: 12
        },
        end: {
          line: 278,
          column: 13
        }
      },
      "75": {
        start: {
          line: 275,
          column: 16
        },
        end: {
          line: 275,
          column: 74
        }
      },
      "76": {
        start: {
          line: 276,
          column: 16
        },
        end: {
          line: 276,
          column: 82
        }
      },
      "77": {
        start: {
          line: 277,
          column: 16
        },
        end: {
          line: 277,
          column: 96
        }
      },
      "78": {
        start: {
          line: 280,
          column: 8
        },
        end: {
          line: 300,
          column: 9
        }
      },
      "79": {
        start: {
          line: 281,
          column: 12
        },
        end: {
          line: 283,
          column: 13
        }
      },
      "80": {
        start: {
          line: 282,
          column: 16
        },
        end: {
          line: 282,
          column: 73
        }
      },
      "81": {
        start: {
          line: 285,
          column: 12
        },
        end: {
          line: 291,
          column: 15
        }
      },
      "82": {
        start: {
          line: 292,
          column: 12
        },
        end: {
          line: 299,
          column: 15
        }
      },
      "83": {
        start: {
          line: 302,
          column: 8
        },
        end: {
          line: 304,
          column: 11
        }
      },
      "84": {
        start: {
          line: 309,
          column: 4
        },
        end: {
          line: 311,
          column: 5
        }
      },
      "85": {
        start: {
          line: 310,
          column: 8
        },
        end: {
          line: 310,
          column: 31
        }
      },
      "86": {
        start: {
          line: 312,
          column: 19
        },
        end: {
          line: 312,
          column: 52
        }
      },
      "87": {
        start: {
          line: 313,
          column: 4
        },
        end: {
          line: 349,
          column: 5
        }
      },
      "88": {
        start: {
          line: 315,
          column: 24
        },
        end: {
          line: 315,
          column: 37
        }
      },
      "89": {
        start: {
          line: 316,
          column: 8
        },
        end: {
          line: 329,
          column: 9
        }
      },
      "90": {
        start: {
          line: 317,
          column: 12
        },
        end: {
          line: 322,
          column: 13
        }
      },
      "91": {
        start: {
          line: 319,
          column: 16
        },
        end: {
          line: 319,
          column: 72
        }
      },
      "92": {
        start: {
          line: 320,
          column: 16
        },
        end: {
          line: 320,
          column: 80
        }
      },
      "93": {
        start: {
          line: 321,
          column: 16
        },
        end: {
          line: 321,
          column: 89
        }
      },
      "94": {
        start: {
          line: 323,
          column: 12
        },
        end: {
          line: 328,
          column: 13
        }
      },
      "95": {
        start: {
          line: 325,
          column: 16
        },
        end: {
          line: 325,
          column: 74
        }
      },
      "96": {
        start: {
          line: 326,
          column: 16
        },
        end: {
          line: 326,
          column: 82
        }
      },
      "97": {
        start: {
          line: 327,
          column: 16
        },
        end: {
          line: 327,
          column: 96
        }
      },
      "98": {
        start: {
          line: 330,
          column: 8
        },
        end: {
          line: 332,
          column: 9
        }
      },
      "99": {
        start: {
          line: 331,
          column: 12
        },
        end: {
          line: 331,
          column: 69
        }
      },
      "100": {
        start: {
          line: 334,
          column: 8
        },
        end: {
          line: 340,
          column: 11
        }
      },
      "101": {
        start: {
          line: 341,
          column: 8
        },
        end: {
          line: 348,
          column: 11
        }
      },
      "102": {
        start: {
          line: 350,
          column: 4
        },
        end: {
          line: 350,
          column: 21
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 10,
            column: 9
          },
          end: {
            line: 10,
            column: 16
          }
        },
        loc: {
          start: {
            line: 10,
            column: 30
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        },
        loc: {
          start: {
            line: 17,
            column: 30
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        loc: {
          start: {
            line: 20,
            column: 26
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 20
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        loc: {
          start: {
            line: 23,
            column: 37
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 23
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        loc: {
          start: {
            line: 26,
            column: 29
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 26
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        loc: {
          start: {
            line: 29,
            column: 25
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 29
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        loc: {
          start: {
            line: 32,
            column: 25
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 32
      },
      "7": {
        name: "isRateLimitingEnabled",
        decl: {
          start: {
            line: 79,
            column: 9
          },
          end: {
            line: 79,
            column: 30
          }
        },
        loc: {
          start: {
            line: 79,
            column: 33
          },
          end: {
            line: 86,
            column: 1
          }
        },
        line: 79
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 151,
            column: 4
          },
          end: {
            line: 151,
            column: 5
          }
        },
        loc: {
          start: {
            line: 151,
            column: 19
          },
          end: {
            line: 162,
            column: 5
          }
        },
        line: 151
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 163,
            column: 4
          },
          end: {
            line: 163,
            column: 5
          }
        },
        loc: {
          start: {
            line: 163,
            column: 31
          },
          end: {
            line: 169,
            column: 5
          }
        },
        line: 163
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 166,
            column: 19
          },
          end: {
            line: 166,
            column: 20
          }
        },
        loc: {
          start: {
            line: 166,
            column: 23
          },
          end: {
            line: 168,
            column: 9
          }
        },
        line: 166
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 170,
            column: 4
          },
          end: {
            line: 170,
            column: 5
          }
        },
        loc: {
          start: {
            line: 170,
            column: 30
          },
          end: {
            line: 187,
            column: 5
          }
        },
        line: 170
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 188,
            column: 4
          },
          end: {
            line: 188,
            column: 5
          }
        },
        loc: {
          start: {
            line: 188,
            column: 17
          },
          end: {
            line: 190,
            column: 5
          }
        },
        line: 188
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 198,
            column: 8
          },
          end: {
            line: 198,
            column: 9
          }
        },
        loc: {
          start: {
            line: 198,
            column: 15
          },
          end: {
            line: 202,
            column: 5
          }
        },
        line: 198
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 204,
            column: 10
          },
          end: {
            line: 204,
            column: 11
          }
        },
        loc: {
          start: {
            line: 204,
            column: 17
          },
          end: {
            line: 208,
            column: 5
          }
        },
        line: 204
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 210,
            column: 14
          },
          end: {
            line: 210,
            column: 15
          }
        },
        loc: {
          start: {
            line: 210,
            column: 21
          },
          end: {
            line: 213,
            column: 5
          }
        },
        line: 210
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 215,
            column: 14
          },
          end: {
            line: 215,
            column: 15
          }
        },
        loc: {
          start: {
            line: 215,
            column: 21
          },
          end: {
            line: 219,
            column: 5
          }
        },
        line: 215
      },
      "17": {
        name: "createRateLimiter",
        decl: {
          start: {
            line: 221,
            column: 9
          },
          end: {
            line: 221,
            column: 26
          }
        },
        loc: {
          start: {
            line: 221,
            column: 62
          },
          end: {
            line: 234,
            column: 1
          }
        },
        line: 221
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 231,
            column: 11
          },
          end: {
            line: 231,
            column: 12
          }
        },
        loc: {
          start: {
            line: 231,
            column: 24
          },
          end: {
            line: 233,
            column: 5
          }
        },
        line: 231
      },
      "19": {
        name: "checkRateLimit",
        decl: {
          start: {
            line: 235,
            column: 15
          },
          end: {
            line: 235,
            column: 29
          }
        },
        loc: {
          start: {
            line: 235,
            column: 65
          },
          end: {
            line: 260,
            column: 1
          }
        },
        line: 235
      },
      "20": {
        name: "createRateLimitMiddleware",
        decl: {
          start: {
            line: 261,
            column: 9
          },
          end: {
            line: 261,
            column: 34
          }
        },
        loc: {
          start: {
            line: 261,
            column: 43
          },
          end: {
            line: 306,
            column: 1
          }
        },
        line: 261
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 262,
            column: 11
          },
          end: {
            line: 262,
            column: 12
          }
        },
        loc: {
          start: {
            line: 262,
            column: 24
          },
          end: {
            line: 305,
            column: 5
          }
        },
        line: 262
      },
      "22": {
        name: "withRateLimit",
        decl: {
          start: {
            line: 307,
            column: 15
          },
          end: {
            line: 307,
            column: 28
          }
        },
        loc: {
          start: {
            line: 307,
            column: 51
          },
          end: {
            line: 351,
            column: 1
          }
        },
        line: 307
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 81,
            column: 4
          },
          end: {
            line: 83,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 4
          },
          end: {
            line: 83,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 81
      },
      "1": {
        loc: {
          start: {
            line: 89,
            column: 20
          },
          end: {
            line: 89,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 89,
            column: 36
          },
          end: {
            line: 89,
            column: 55
          }
        }, {
          start: {
            line: 89,
            column: 58
          },
          end: {
            line: 89,
            column: 76
          }
        }],
        line: 89
      },
      "2": {
        loc: {
          start: {
            line: 100,
            column: 21
          },
          end: {
            line: 100,
            column: 45
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 100,
            column: 37
          },
          end: {
            line: 100,
            column: 40
          }
        }, {
          start: {
            line: 100,
            column: 43
          },
          end: {
            line: 100,
            column: 45
          }
        }],
        line: 100
      },
      "3": {
        loc: {
          start: {
            line: 106,
            column: 21
          },
          end: {
            line: 106,
            column: 47
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 106,
            column: 37
          },
          end: {
            line: 106,
            column: 41
          }
        }, {
          start: {
            line: 106,
            column: 44
          },
          end: {
            line: 106,
            column: 47
          }
        }],
        line: 106
      },
      "4": {
        loc: {
          start: {
            line: 112,
            column: 21
          },
          end: {
            line: 112,
            column: 45
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 112,
            column: 37
          },
          end: {
            line: 112,
            column: 40
          }
        }, {
          start: {
            line: 112,
            column: 43
          },
          end: {
            line: 112,
            column: 45
          }
        }],
        line: 112
      },
      "5": {
        loc: {
          start: {
            line: 118,
            column: 21
          },
          end: {
            line: 118,
            column: 45
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 118,
            column: 37
          },
          end: {
            line: 118,
            column: 40
          }
        }, {
          start: {
            line: 118,
            column: 43
          },
          end: {
            line: 118,
            column: 45
          }
        }],
        line: 118
      },
      "6": {
        loc: {
          start: {
            line: 124,
            column: 21
          },
          end: {
            line: 124,
            column: 47
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 124,
            column: 37
          },
          end: {
            line: 124,
            column: 41
          }
        }, {
          start: {
            line: 124,
            column: 44
          },
          end: {
            line: 124,
            column: 47
          }
        }],
        line: 124
      },
      "7": {
        loc: {
          start: {
            line: 132,
            column: 0
          },
          end: {
            line: 146,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 132,
            column: 0
          },
          end: {
            line: 146,
            column: 1
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 132
      },
      "8": {
        loc: {
          start: {
            line: 153,
            column: 8
          },
          end: {
            line: 155,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 153,
            column: 8
          },
          end: {
            line: 155,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 153
      },
      "9": {
        loc: {
          start: {
            line: 157,
            column: 8
          },
          end: {
            line: 160,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 157,
            column: 8
          },
          end: {
            line: 160,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 157
      },
      "10": {
        loc: {
          start: {
            line: 173,
            column: 8
          },
          end: {
            line: 180,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 8
          },
          end: {
            line: 180,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 173
      },
      "11": {
        loc: {
          start: {
            line: 200,
            column: 19
          },
          end: {
            line: 200,
            column: 98
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 200,
            column: 31
          },
          end: {
            line: 200,
            column: 54
          }
        }, {
          start: {
            line: 200,
            column: 57
          },
          end: {
            line: 200,
            column: 98
          }
        }],
        line: 200
      },
      "12": {
        loc: {
          start: {
            line: 200,
            column: 57
          },
          end: {
            line: 200,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 200,
            column: 57
          },
          end: {
            line: 200,
            column: 85
          }
        }, {
          start: {
            line: 200,
            column: 89
          },
          end: {
            line: 200,
            column: 98
          }
        }],
        line: 200
      },
      "13": {
        loc: {
          start: {
            line: 206,
            column: 23
          },
          end: {
            line: 206,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 206,
            column: 23
          },
          end: {
            line: 206,
            column: 51
          }
        }, {
          start: {
            line: 206,
            column: 55
          },
          end: {
            line: 206,
            column: 66
          }
        }],
        line: 206
      },
      "14": {
        loc: {
          start: {
            line: 221,
            column: 27
          },
          end: {
            line: 221,
            column: 38
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 221,
            column: 36
          },
          end: {
            line: 221,
            column: 38
          }
        }],
        line: 221
      },
      "15": {
        loc: {
          start: {
            line: 221,
            column: 40
          },
          end: {
            line: 221,
            column: 60
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 221,
            column: 48
          },
          end: {
            line: 221,
            column: 60
          }
        }],
        line: 221
      },
      "16": {
        loc: {
          start: {
            line: 235,
            column: 43
          },
          end: {
            line: 235,
            column: 63
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 235,
            column: 51
          },
          end: {
            line: 235,
            column: 63
          }
        }],
        line: 235
      },
      "17": {
        loc: {
          start: {
            line: 236,
            column: 25
          },
          end: {
            line: 236,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 236,
            column: 25
          },
          end: {
            line: 236,
            column: 44
          }
        }, {
          start: {
            line: 236,
            column: 48
          },
          end: {
            line: 236,
            column: 70
          }
        }],
        line: 236
      },
      "18": {
        loc: {
          start: {
            line: 246,
            column: 8
          },
          end: {
            line: 248,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 246,
            column: 8
          },
          end: {
            line: 248,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 246
      },
      "19": {
        loc: {
          start: {
            line: 266,
            column: 8
          },
          end: {
            line: 279,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 266,
            column: 8
          },
          end: {
            line: 279,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 266
      },
      "20": {
        loc: {
          start: {
            line: 267,
            column: 12
          },
          end: {
            line: 272,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 267,
            column: 12
          },
          end: {
            line: 272,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 267
      },
      "21": {
        loc: {
          start: {
            line: 273,
            column: 12
          },
          end: {
            line: 278,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 273,
            column: 12
          },
          end: {
            line: 278,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 273
      },
      "22": {
        loc: {
          start: {
            line: 280,
            column: 8
          },
          end: {
            line: 300,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 280,
            column: 8
          },
          end: {
            line: 300,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 280
      },
      "23": {
        loc: {
          start: {
            line: 281,
            column: 12
          },
          end: {
            line: 283,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 281,
            column: 12
          },
          end: {
            line: 283,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 281
      },
      "24": {
        loc: {
          start: {
            line: 286,
            column: 21
          },
          end: {
            line: 286,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 286,
            column: 43
          },
          end: {
            line: 286,
            column: 67
          }
        }, {
          start: {
            line: 286,
            column: 70
          },
          end: {
            line: 286,
            column: 80
          }
        }],
        line: 286
      },
      "25": {
        loc: {
          start: {
            line: 290,
            column: 20
          },
          end: {
            line: 290,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 290,
            column: 20
          },
          end: {
            line: 290,
            column: 54
          }
        }, {
          start: {
            line: 290,
            column: 58
          },
          end: {
            line: 290,
            column: 86
          }
        }],
        line: 290
      },
      "26": {
        loc: {
          start: {
            line: 294,
            column: 25
          },
          end: {
            line: 294,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 294,
            column: 25
          },
          end: {
            line: 294,
            column: 39
          }
        }, {
          start: {
            line: 294,
            column: 43
          },
          end: {
            line: 294,
            column: 62
          }
        }],
        line: 294
      },
      "27": {
        loc: {
          start: {
            line: 309,
            column: 4
          },
          end: {
            line: 311,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 309,
            column: 4
          },
          end: {
            line: 311,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 309
      },
      "28": {
        loc: {
          start: {
            line: 313,
            column: 4
          },
          end: {
            line: 349,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 313,
            column: 4
          },
          end: {
            line: 349,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 313
      },
      "29": {
        loc: {
          start: {
            line: 316,
            column: 8
          },
          end: {
            line: 329,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 316,
            column: 8
          },
          end: {
            line: 329,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 316
      },
      "30": {
        loc: {
          start: {
            line: 317,
            column: 12
          },
          end: {
            line: 322,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 317,
            column: 12
          },
          end: {
            line: 322,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 317
      },
      "31": {
        loc: {
          start: {
            line: 323,
            column: 12
          },
          end: {
            line: 328,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 323,
            column: 12
          },
          end: {
            line: 328,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 323
      },
      "32": {
        loc: {
          start: {
            line: 330,
            column: 8
          },
          end: {
            line: 332,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 330,
            column: 8
          },
          end: {
            line: 332,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 330
      },
      "33": {
        loc: {
          start: {
            line: 335,
            column: 17
          },
          end: {
            line: 335,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 335,
            column: 39
          },
          end: {
            line: 335,
            column: 63
          }
        }, {
          start: {
            line: 335,
            column: 66
          },
          end: {
            line: 335,
            column: 76
          }
        }],
        line: 335
      },
      "34": {
        loc: {
          start: {
            line: 339,
            column: 16
          },
          end: {
            line: 339,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 339,
            column: 16
          },
          end: {
            line: 339,
            column: 50
          }
        }, {
          start: {
            line: 339,
            column: 54
          },
          end: {
            line: 339,
            column: 82
          }
        }],
        line: 339
      },
      "35": {
        loc: {
          start: {
            line: 343,
            column: 21
          },
          end: {
            line: 343,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 343,
            column: 21
          },
          end: {
            line: 343,
            column: 35
          }
        }, {
          start: {
            line: 343,
            column: 39
          },
          end: {
            line: 343,
            column: 58
          }
        }],
        line: 343
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0],
      "15": [0],
      "16": [0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\rate-limiting\\rate-limiter.ts"],
      sourcesContent: ["// ===================================\r\n// PINTEYA E-COMMERCE - RATE LIMITING MIDDLEWARE\r\n// ===================================\r\n// Sistema de rate limiting enterprise con configuraci\xF3n flexible\r\n// y logging estructurado para APIs cr\xEDticas\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { headers } from 'next/headers';\r\n\r\n// ===================================\r\n// TIPOS Y INTERFACES\r\n// ===================================\r\n\r\nexport interface RateLimitConfig {\r\n  windowMs: number;           // Ventana de tiempo en milisegundos\r\n  maxRequests: number;        // M\xE1ximo de requests por ventana\r\n  keyGenerator?: (req: NextRequest) => string;  // Generador de clave personalizado\r\n  skipSuccessfulRequests?: boolean;             // Omitir requests exitosos\r\n  skipFailedRequests?: boolean;                 // Omitir requests fallidos\r\n  message?: string;           // Mensaje de error personalizado\r\n  headers?: boolean;          // Incluir headers de rate limit\r\n  standardHeaders?: boolean;  // Usar headers est\xE1ndar RFC\r\n  legacyHeaders?: boolean;    // Incluir headers legacy\r\n}\r\n\r\nexport interface RateLimitResult {\r\n  allowed: boolean;\r\n  limit: number;\r\n  remaining: number;\r\n  resetTime: number;\r\n  retryAfter?: number;\r\n}\r\n\r\nexport interface RateLimitStore {\r\n  get(key: string): Promise<{ count: number; resetTime: number } | null>;\r\n  set(key: string, value: { count: number; resetTime: number }, ttl: number): Promise<void>;\r\n  increment(key: string, ttl: number): Promise<{ count: number; resetTime: number }>;\r\n}\r\n\r\n// ===================================\r\n// CONFIGURACIONES PREDEFINIDAS\r\n// ===================================\r\n\r\n// Configuraciones base para producci\xF3n\r\nconst PRODUCTION_CONFIGS = {\r\n  public: {\r\n    windowMs: 15 * 60 * 1000,  // 15 minutos\r\n    maxRequests: 1000,         // 1000 requests por ventana\r\n    message: 'Demasiadas solicitudes. Intente nuevamente en 15 minutos.',\r\n  },\r\n  products: {\r\n    windowMs: 5 * 60 * 1000,   // 5 minutos\r\n    maxRequests: 200,          // 200 requests por ventana\r\n    message: 'L\xEDmite de consultas de productos excedido. Intente en 5 minutos.',\r\n  },\r\n  search: {\r\n    windowMs: 5 * 60 * 1000,   // 5 minutos\r\n    maxRequests: 150,          // 150 requests por ventana\r\n    message: 'L\xEDmite de b\xFAsquedas excedido. Intente en 5 minutos.',\r\n  },\r\n};\r\n\r\n// Configuraciones relajadas para desarrollo\r\nconst DEVELOPMENT_CONFIGS = {\r\n  public: {\r\n    windowMs: 15 * 60 * 1000,  // 15 minutos\r\n    maxRequests: 10000,        // 10000 requests por ventana (muy generoso)\r\n    message: 'Demasiadas solicitudes. Intente nuevamente en 15 minutos.',\r\n  },\r\n  products: {\r\n    windowMs: 1 * 60 * 1000,   // 1 minuto\r\n    maxRequests: 1000,         // 1000 requests por minuto (muy generoso)\r\n    message: 'L\xEDmite de consultas de productos excedido. Intente en 1 minuto.',\r\n  },\r\n  search: {\r\n    windowMs: 1 * 60 * 1000,   // 1 minuto\r\n    maxRequests: 500,          // 500 requests por minuto (muy generoso)\r\n    message: 'L\xEDmite de b\xFAsquedas excedido. Intente en 1 minuto.',\r\n  },\r\n};\r\n\r\n// ===================================\r\n// HELPER PARA VERIFICAR SI RATE LIMITING EST\xC1 HABILITADO\r\n// ===================================\r\n\r\nfunction isRateLimitingEnabled(): boolean {\r\n  // Permitir deshabilitar rate limiting en desarrollo con variable de entorno\r\n  if (process.env.DISABLE_RATE_LIMITING === 'true') {\r\n    return false;\r\n  }\r\n\r\n  // En desarrollo, usar rate limiting relajado pero habilitado por defecto\r\n  return true;\r\n}\r\n\r\n// Seleccionar configuraci\xF3n seg\xFAn el entorno\r\nconst isDevelopment = process.env.NODE_ENV === 'development';\r\nconst baseConfigs = isDevelopment ? DEVELOPMENT_CONFIGS : PRODUCTION_CONFIGS;\r\n\r\nexport const RATE_LIMIT_CONFIGS = {\r\n  // APIs p\xFAblicas - l\xEDmites generosos\r\n  public: baseConfigs.public,\r\n\r\n  // APIs de productos - l\xEDmites moderados\r\n  products: baseConfigs.products,\r\n\r\n  // APIs de b\xFAsqueda - l\xEDmites moderados\r\n  search: baseConfigs.search,\r\n  \r\n  // APIs de autenticaci\xF3n - l\xEDmites estrictos\r\n  auth: {\r\n    windowMs: 15 * 60 * 1000,  // 15 minutos\r\n    maxRequests: isDevelopment ? 100 : 10,  // 100 en dev, 10 en prod\r\n    message: 'Demasiados intentos de autenticaci\xF3n. Intente en 15 minutos.',\r\n  },\r\n\r\n  // APIs de admin - l\xEDmites moderados pero monitoreados\r\n  admin: {\r\n    windowMs: 10 * 60 * 1000,  // 10 minutos\r\n    maxRequests: isDevelopment ? 1000 : 100,  // 1000 en dev, 100 en prod\r\n    message: 'L\xEDmite de operaciones administrativas excedido.',\r\n  },\r\n\r\n  // APIs de pagos - l\xEDmites muy estrictos\r\n  payment: {\r\n    windowMs: 15 * 60 * 1000,  // 15 minutos\r\n    maxRequests: isDevelopment ? 100 : 30,  // 100 en dev, 30 en prod\r\n    message: 'L\xEDmite de operaciones de pago excedido. Intente en 15 minutos.',\r\n  },\r\n\r\n  // APIs de creaci\xF3n - l\xEDmites estrictos\r\n  creation: {\r\n    windowMs: 10 * 60 * 1000,  // 10 minutos\r\n    maxRequests: isDevelopment ? 200 : 20,  // 200 en dev, 20 en prod\r\n    message: 'L\xEDmite de creaci\xF3n de recursos excedido.',\r\n  },\r\n\r\n  // Webhooks - l\xEDmites r\xE1pidos pero altos\r\n  webhook: {\r\n    windowMs: 1 * 60 * 1000,   // 1 minuto\r\n    maxRequests: isDevelopment ? 1000 : 100,  // 1000 en dev, 100 en prod\r\n    message: 'L\xEDmite de webhooks excedido. Intente en 1 minuto.',\r\n  }\r\n} as const;\r\n\r\n// ===================================\r\n// LOGGING DE CONFIGURACI\xD3N\r\n// ===================================\r\n\r\n// Log de configuraci\xF3n al cargar el m\xF3dulo\r\nif (process.env.NODE_ENV === 'development') {\r\n  console.log('[RATE_LIMITER] Configuraci\xF3n cargada:', {\r\n    environment: process.env.NODE_ENV,\r\n    rateLimitingEnabled: isRateLimitingEnabled(),\r\n    disableRateLimiting: process.env.DISABLE_RATE_LIMITING,\r\n    productLimits: {\r\n      windowMs: RATE_LIMIT_CONFIGS.products.windowMs / 1000 / 60 + ' minutos',\r\n      maxRequests: RATE_LIMIT_CONFIGS.products.maxRequests\r\n    },\r\n    searchLimits: {\r\n      windowMs: RATE_LIMIT_CONFIGS.search.windowMs / 1000 / 60 + ' minutos',\r\n      maxRequests: RATE_LIMIT_CONFIGS.search.maxRequests\r\n    }\r\n  });\r\n}\r\n\r\n// ===================================\r\n// STORE EN MEMORIA (PARA DESARROLLO)\r\n// ===================================\r\n\r\nclass MemoryStore implements RateLimitStore {\r\n  private store = new Map<string, { count: number; resetTime: number }>();\r\n\r\n  async get(key: string): Promise<{ count: number; resetTime: number } | null> {\r\n    const data = this.store.get(key);\r\n    if (!data) {return null;}\r\n    \r\n    // Limpiar datos expirados\r\n    if (Date.now() > data.resetTime) {\r\n      this.store.delete(key);\r\n      return null;\r\n    }\r\n    \r\n    return data;\r\n  }\r\n\r\n  async set(key: string, value: { count: number; resetTime: number }, ttl: number): Promise<void> {\r\n    this.store.set(key, value);\r\n    \r\n    // Limpiar autom\xE1ticamente despu\xE9s del TTL\r\n    setTimeout(() => {\r\n      this.store.delete(key);\r\n    }, ttl);\r\n  }\r\n\r\n  async increment(key: string, ttl: number): Promise<{ count: number; resetTime: number }> {\r\n    const now = Date.now();\r\n    const existing = await this.get(key);\r\n    \r\n    if (!existing) {\r\n      const newData = { count: 1, resetTime: now + ttl };\r\n      await this.set(key, newData, ttl);\r\n      return newData;\r\n    }\r\n    \r\n    const updatedData = { ...existing, count: existing.count + 1 };\r\n    await this.set(key, updatedData, existing.resetTime - now);\r\n    return updatedData;\r\n  }\r\n}\r\n\r\n// ===================================\r\n// INSTANCIA GLOBAL DEL STORE\r\n// ===================================\r\n\r\nconst defaultStore = new MemoryStore();\r\n\r\n// ===================================\r\n// GENERADORES DE CLAVE\r\n// ===================================\r\n\r\nexport const keyGenerators = {\r\n  // Por IP\r\n  ip: (req: NextRequest): string => {\r\n    const forwarded = req.headers.get('x-forwarded-for');\r\n    const ip = forwarded ? forwarded.split(',')[0] : req.headers.get('x-real-ip') || 'unknown';\r\n    return `ip:${ip}`;\r\n  },\r\n  \r\n  // Por usuario autenticado (requiere implementaci\xF3n espec\xEDfica)\r\n  user: (req: NextRequest): string => {\r\n    // TODO: Implementar extracci\xF3n de user ID desde token/session\r\n    const userId = req.headers.get('x-user-id') || 'anonymous';\r\n    return `user:${userId}`;\r\n  },\r\n  \r\n  // Por endpoint espec\xEDfico\r\n  endpoint: (req: NextRequest): string => {\r\n    const url = new URL(req.url);\r\n    return `endpoint:${url.pathname}`;\r\n  },\r\n  \r\n  // Combinado IP + endpoint\r\n  combined: (req: NextRequest): string => {\r\n    const ip = keyGenerators.ip(req);\r\n    const endpoint = keyGenerators.endpoint(req);\r\n    return `${ip}:${endpoint}`;\r\n  }\r\n};\r\n\r\n// ===================================\r\n// FACTORY PARA CREAR RATE LIMITERS\r\n// ===================================\r\n\r\n/**\r\n * Crea un rate limiter con configuraci\xF3n espec\xEDfica\r\n */\r\nexport function createRateLimiter(\r\n  config: Partial<RateLimitConfig> = {},\r\n  store: RateLimitStore = defaultStore\r\n) {\r\n  const finalConfig: RateLimitConfig = {\r\n    windowMs: 15 * 60 * 1000,  // 15 minutos por defecto\r\n    maxRequests: 100,          // 100 requests por defecto\r\n    message: 'Rate limit exceeded',\r\n    headers: true,\r\n    standardHeaders: true,\r\n    legacyHeaders: true,\r\n    ...config\r\n  };\r\n\r\n  return async (req: NextRequest): Promise<RateLimitResult> => {\r\n    return await checkRateLimit(req, finalConfig, store);\r\n  };\r\n}\r\n\r\n// ===================================\r\n// FUNCI\xD3N PRINCIPAL DE RATE LIMITING\r\n// ===================================\r\n\r\nexport async function checkRateLimit(\r\n  req: NextRequest,\r\n  config: RateLimitConfig,\r\n  store: RateLimitStore = defaultStore\r\n): Promise<RateLimitResult> {\r\n  const keyGenerator = config.keyGenerator || keyGenerators.combined;\r\n  const key = keyGenerator(req);\r\n  \r\n  try {\r\n    const data = await store.increment(key, config.windowMs);\r\n    \r\n    const result: RateLimitResult = {\r\n      allowed: data.count <= config.maxRequests,\r\n      limit: config.maxRequests,\r\n      remaining: Math.max(0, config.maxRequests - data.count),\r\n      resetTime: data.resetTime,\r\n    };\r\n    \r\n    if (!result.allowed) {\r\n      result.retryAfter = Math.ceil((data.resetTime - Date.now()) / 1000);\r\n    }\r\n    \r\n    return result;\r\n  } catch (error) {\r\n    console.error('[RATE_LIMITER] Error checking rate limit:', error);\r\n    \r\n    // En caso de error, permitir la request (fail-open)\r\n    return {\r\n      allowed: true,\r\n      limit: config.maxRequests,\r\n      remaining: config.maxRequests,\r\n      resetTime: Date.now() + config.windowMs,\r\n    };\r\n  }\r\n}\r\n\r\n// ===================================\r\n// MIDDLEWARE DE RATE LIMITING\r\n// ===================================\r\n\r\nexport function createRateLimitMiddleware(config: RateLimitConfig) {\r\n  return async (req: NextRequest): Promise<NextResponse | null> => {\r\n    const result = await checkRateLimit(req, config);\r\n    \r\n    // Crear headers de rate limit\r\n    const headers = new Headers();\r\n    \r\n    if (config.headers !== false) {\r\n      if (config.standardHeaders !== false) {\r\n        // Headers est\xE1ndar RFC 6585\r\n        headers.set('RateLimit-Limit', result.limit.toString());\r\n        headers.set('RateLimit-Remaining', result.remaining.toString());\r\n        headers.set('RateLimit-Reset', new Date(result.resetTime).toISOString());\r\n      }\r\n      \r\n      if (config.legacyHeaders !== false) {\r\n        // Headers legacy para compatibilidad\r\n        headers.set('X-RateLimit-Limit', result.limit.toString());\r\n        headers.set('X-RateLimit-Remaining', result.remaining.toString());\r\n        headers.set('X-RateLimit-Reset', Math.ceil(result.resetTime / 1000).toString());\r\n      }\r\n    }\r\n    \r\n    if (!result.allowed) {\r\n      if (result.retryAfter) {\r\n        headers.set('Retry-After', result.retryAfter.toString());\r\n      }\r\n      \r\n      // Log del rate limit excedido\r\n      console.warn('[RATE_LIMITER] Rate limit exceeded:', {\r\n        key: config.keyGenerator ? config.keyGenerator(req) : 'combined',\r\n        limit: result.limit,\r\n        resetTime: new Date(result.resetTime).toISOString(),\r\n        userAgent: req.headers.get('user-agent'),\r\n        ip: req.headers.get('x-forwarded-for') || req.headers.get('x-real-ip'),\r\n      });\r\n      \r\n      return new NextResponse(\r\n        JSON.stringify({\r\n          error: 'Rate limit exceeded',\r\n          message: config.message || 'Too many requests',\r\n          retryAfter: result.retryAfter,\r\n        }),\r\n        {\r\n          status: 429,\r\n          headers,\r\n        }\r\n      );\r\n    }\r\n    \r\n    // Request permitida, agregar headers informativos\r\n    return NextResponse.next({\r\n      headers,\r\n    });\r\n  };\r\n}\r\n\r\n// ===================================\r\n// HELPER PARA APLICAR RATE LIMITING\r\n// ===================================\r\n\r\nexport async function withRateLimit<T>(\r\n  req: NextRequest,\r\n  config: RateLimitConfig,\r\n  handler: () => Promise<T>\r\n): Promise<T | NextResponse> {\r\n  // Si rate limiting est\xE1 deshabilitado, ejecutar directamente el handler\r\n  if (!isRateLimitingEnabled()) {\r\n    return await handler();\r\n  }\r\n\r\n  const result = await checkRateLimit(req, config);\r\n\r\n  if (!result.allowed) {\r\n    // Crear headers de rate limit\r\n    const headers = new Headers();\r\n\r\n    if (config.headers !== false) {\r\n      if (config.standardHeaders !== false) {\r\n        // Headers est\xE1ndar RFC 6585\r\n        headers.set('RateLimit-Limit', result.limit.toString());\r\n        headers.set('RateLimit-Remaining', result.remaining.toString());\r\n        headers.set('RateLimit-Reset', new Date(result.resetTime).toISOString());\r\n      }\r\n\r\n      if (config.legacyHeaders !== false) {\r\n        // Headers legacy para compatibilidad\r\n        headers.set('X-RateLimit-Limit', result.limit.toString());\r\n        headers.set('X-RateLimit-Remaining', result.remaining.toString());\r\n        headers.set('X-RateLimit-Reset', Math.ceil(result.resetTime / 1000).toString());\r\n      }\r\n    }\r\n\r\n    if (result.retryAfter) {\r\n      headers.set('Retry-After', result.retryAfter.toString());\r\n    }\r\n\r\n    // Log del rate limit excedido\r\n    console.warn('[RATE_LIMITER] Rate limit exceeded:', {\r\n      key: config.keyGenerator ? config.keyGenerator(req) : 'combined',\r\n      limit: result.limit,\r\n      resetTime: new Date(result.resetTime).toISOString(),\r\n      userAgent: req.headers.get('user-agent'),\r\n      ip: req.headers.get('x-forwarded-for') || req.headers.get('x-real-ip'),\r\n    });\r\n\r\n    return new NextResponse(\r\n      JSON.stringify({\r\n        error: 'Rate limit exceeded',\r\n        message: config.message || 'Too many requests',\r\n        retryAfter: result.retryAfter,\r\n      }),\r\n      {\r\n        status: 429,\r\n        headers,\r\n      }\r\n    );\r\n  }\r\n\r\n  return handler();\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["RATE_LIMIT_CONFIGS", "checkRateLimit", "createRateLimitMiddleware", "createRateLimiter", "keyGenerators", "withRateLimit", "PRODUCTION_CONFIGS", "public", "windowMs", "maxRequests", "message", "products", "search", "DEVELOPMENT_CONFIGS", "isRateLimitingEnabled", "process", "env", "DISABLE_RATE_LIMITING", "isDevelopment", "NODE_ENV", "baseConfigs", "auth", "admin", "payment", "creation", "webhook", "console", "log", "environment", "rateLimitingEnabled", "disableRateLimiting", "productLimits", "searchLimits", "MemoryStore", "get", "key", "data", "store", "Date", "now", "resetTime", "delete", "set", "value", "ttl", "setTimeout", "increment", "existing", "newData", "count", "updatedData", "Map", "defaultStore", "ip", "req", "forwarded", "headers", "split", "user", "userId", "endpoint", "url", "URL", "pathname", "combined", "config", "finalConfig", "standardHeaders", "legacyHeaders", "keyGenerator", "result", "allowed", "limit", "remaining", "Math", "max", "retryAfter", "ceil", "error", "Headers", "toString", "toISOString", "warn", "userAgent", "NextResponse", "JSON", "stringify", "status", "next", "handler"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f62687cced07074a039a2cc8f1b5726885021121"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_163ccm1dcr = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_163ccm1dcr();
cov_163ccm1dcr().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_163ccm1dcr().f[0]++;
  cov_163ccm1dcr().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_163ccm1dcr().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_163ccm1dcr().s[3]++;
_export(exports, {
  get RATE_LIMIT_CONFIGS() {
    /* istanbul ignore next */
    cov_163ccm1dcr().f[1]++;
    cov_163ccm1dcr().s[4]++;
    return RATE_LIMIT_CONFIGS;
  },
  get checkRateLimit() {
    /* istanbul ignore next */
    cov_163ccm1dcr().f[2]++;
    cov_163ccm1dcr().s[5]++;
    return checkRateLimit;
  },
  get createRateLimitMiddleware() {
    /* istanbul ignore next */
    cov_163ccm1dcr().f[3]++;
    cov_163ccm1dcr().s[6]++;
    return createRateLimitMiddleware;
  },
  get createRateLimiter() {
    /* istanbul ignore next */
    cov_163ccm1dcr().f[4]++;
    cov_163ccm1dcr().s[7]++;
    return createRateLimiter;
  },
  get keyGenerators() {
    /* istanbul ignore next */
    cov_163ccm1dcr().f[5]++;
    cov_163ccm1dcr().s[8]++;
    return keyGenerators;
  },
  get withRateLimit() {
    /* istanbul ignore next */
    cov_163ccm1dcr().f[6]++;
    cov_163ccm1dcr().s[9]++;
    return withRateLimit;
  }
});
const _server =
/* istanbul ignore next */
(cov_163ccm1dcr().s[10]++, require("next/server"));
// ===================================
// CONFIGURACIONES PREDEFINIDAS
// ===================================
// Configuraciones base para producciÃ³n
const PRODUCTION_CONFIGS =
/* istanbul ignore next */
(cov_163ccm1dcr().s[11]++, {
  public: {
    windowMs: 15 * 60 * 1000,
    maxRequests: 1000,
    message: 'Demasiadas solicitudes. Intente nuevamente en 15 minutos.'
  },
  products: {
    windowMs: 5 * 60 * 1000,
    maxRequests: 200,
    message: 'LÃ­mite de consultas de productos excedido. Intente en 5 minutos.'
  },
  search: {
    windowMs: 5 * 60 * 1000,
    maxRequests: 150,
    message: 'LÃ­mite de bÃºsquedas excedido. Intente en 5 minutos.'
  }
});
// Configuraciones relajadas para desarrollo
const DEVELOPMENT_CONFIGS =
/* istanbul ignore next */
(cov_163ccm1dcr().s[12]++, {
  public: {
    windowMs: 15 * 60 * 1000,
    maxRequests: 10000,
    message: 'Demasiadas solicitudes. Intente nuevamente en 15 minutos.'
  },
  products: {
    windowMs: 1 * 60 * 1000,
    maxRequests: 1000,
    message: 'LÃ­mite de consultas de productos excedido. Intente en 1 minuto.'
  },
  search: {
    windowMs: 1 * 60 * 1000,
    maxRequests: 500,
    message: 'LÃ­mite de bÃºsquedas excedido. Intente en 1 minuto.'
  }
});
// ===================================
// HELPER PARA VERIFICAR SI RATE LIMITING ESTÃ HABILITADO
// ===================================
function isRateLimitingEnabled() {
  /* istanbul ignore next */
  cov_163ccm1dcr().f[7]++;
  cov_163ccm1dcr().s[13]++;
  // Permitir deshabilitar rate limiting en desarrollo con variable de entorno
  if (process.env.DISABLE_RATE_LIMITING === 'true') {
    /* istanbul ignore next */
    cov_163ccm1dcr().b[0][0]++;
    cov_163ccm1dcr().s[14]++;
    return false;
  } else
  /* istanbul ignore next */
  {
    cov_163ccm1dcr().b[0][1]++;
  }
  // En desarrollo, usar rate limiting relajado pero habilitado por defecto
  cov_163ccm1dcr().s[15]++;
  return true;
}
// Seleccionar configuraciÃ³n segÃºn el entorno
const isDevelopment =
/* istanbul ignore next */
(cov_163ccm1dcr().s[16]++, process.env.NODE_ENV === 'development');
const baseConfigs =
/* istanbul ignore next */
(cov_163ccm1dcr().s[17]++, isDevelopment ?
/* istanbul ignore next */
(cov_163ccm1dcr().b[1][0]++, DEVELOPMENT_CONFIGS) :
/* istanbul ignore next */
(cov_163ccm1dcr().b[1][1]++, PRODUCTION_CONFIGS));
const RATE_LIMIT_CONFIGS =
/* istanbul ignore next */
(cov_163ccm1dcr().s[18]++, {
  // APIs pÃºblicas - lÃ­mites generosos
  public: baseConfigs.public,
  // APIs de productos - lÃ­mites moderados
  products: baseConfigs.products,
  // APIs de bÃºsqueda - lÃ­mites moderados
  search: baseConfigs.search,
  // APIs de autenticaciÃ³n - lÃ­mites estrictos
  auth: {
    windowMs: 15 * 60 * 1000,
    maxRequests: isDevelopment ?
    /* istanbul ignore next */
    (cov_163ccm1dcr().b[2][0]++, 100) :
    /* istanbul ignore next */
    (cov_163ccm1dcr().b[2][1]++, 10),
    message: 'Demasiados intentos de autenticaciÃ³n. Intente en 15 minutos.'
  },
  // APIs de admin - lÃ­mites moderados pero monitoreados
  admin: {
    windowMs: 10 * 60 * 1000,
    maxRequests: isDevelopment ?
    /* istanbul ignore next */
    (cov_163ccm1dcr().b[3][0]++, 1000) :
    /* istanbul ignore next */
    (cov_163ccm1dcr().b[3][1]++, 100),
    message: 'LÃ­mite de operaciones administrativas excedido.'
  },
  // APIs de pagos - lÃ­mites muy estrictos
  payment: {
    windowMs: 15 * 60 * 1000,
    maxRequests: isDevelopment ?
    /* istanbul ignore next */
    (cov_163ccm1dcr().b[4][0]++, 100) :
    /* istanbul ignore next */
    (cov_163ccm1dcr().b[4][1]++, 30),
    message: 'LÃ­mite de operaciones de pago excedido. Intente en 15 minutos.'
  },
  // APIs de creaciÃ³n - lÃ­mites estrictos
  creation: {
    windowMs: 10 * 60 * 1000,
    maxRequests: isDevelopment ?
    /* istanbul ignore next */
    (cov_163ccm1dcr().b[5][0]++, 200) :
    /* istanbul ignore next */
    (cov_163ccm1dcr().b[5][1]++, 20),
    message: 'LÃ­mite de creaciÃ³n de recursos excedido.'
  },
  // Webhooks - lÃ­mites rÃ¡pidos pero altos
  webhook: {
    windowMs: 1 * 60 * 1000,
    maxRequests: isDevelopment ?
    /* istanbul ignore next */
    (cov_163ccm1dcr().b[6][0]++, 1000) :
    /* istanbul ignore next */
    (cov_163ccm1dcr().b[6][1]++, 100),
    message: 'LÃ­mite de webhooks excedido. Intente en 1 minuto.'
  }
});
// ===================================
// LOGGING DE CONFIGURACIÃN
// ===================================
// Log de configuraciÃ³n al cargar el mÃ³dulo
/* istanbul ignore next */
cov_163ccm1dcr().s[19]++;
if (process.env.NODE_ENV === 'development') {
  /* istanbul ignore next */
  cov_163ccm1dcr().b[7][0]++;
  cov_163ccm1dcr().s[20]++;
  console.log('[RATE_LIMITER] ConfiguraciÃ³n cargada:', {
    environment: process.env.NODE_ENV,
    rateLimitingEnabled: isRateLimitingEnabled(),
    disableRateLimiting: process.env.DISABLE_RATE_LIMITING,
    productLimits: {
      windowMs: RATE_LIMIT_CONFIGS.products.windowMs / 1000 / 60 + ' minutos',
      maxRequests: RATE_LIMIT_CONFIGS.products.maxRequests
    },
    searchLimits: {
      windowMs: RATE_LIMIT_CONFIGS.search.windowMs / 1000 / 60 + ' minutos',
      maxRequests: RATE_LIMIT_CONFIGS.search.maxRequests
    }
  });
} else
/* istanbul ignore next */
{
  cov_163ccm1dcr().b[7][1]++;
}
// ===================================
// STORE EN MEMORIA (PARA DESARROLLO)
// ===================================
class MemoryStore {
  async get(key) {
    /* istanbul ignore next */
    cov_163ccm1dcr().f[8]++;
    const data =
    /* istanbul ignore next */
    (cov_163ccm1dcr().s[21]++, this.store.get(key));
    /* istanbul ignore next */
    cov_163ccm1dcr().s[22]++;
    if (!data) {
      /* istanbul ignore next */
      cov_163ccm1dcr().b[8][0]++;
      cov_163ccm1dcr().s[23]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_163ccm1dcr().b[8][1]++;
    }
    // Limpiar datos expirados
    cov_163ccm1dcr().s[24]++;
    if (Date.now() > data.resetTime) {
      /* istanbul ignore next */
      cov_163ccm1dcr().b[9][0]++;
      cov_163ccm1dcr().s[25]++;
      this.store.delete(key);
      /* istanbul ignore next */
      cov_163ccm1dcr().s[26]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_163ccm1dcr().b[9][1]++;
    }
    cov_163ccm1dcr().s[27]++;
    return data;
  }
  async set(key, value, ttl) {
    /* istanbul ignore next */
    cov_163ccm1dcr().f[9]++;
    cov_163ccm1dcr().s[28]++;
    this.store.set(key, value);
    // Limpiar automÃ¡ticamente despuÃ©s del TTL
    /* istanbul ignore next */
    cov_163ccm1dcr().s[29]++;
    setTimeout(() => {
      /* istanbul ignore next */
      cov_163ccm1dcr().f[10]++;
      cov_163ccm1dcr().s[30]++;
      this.store.delete(key);
    }, ttl);
  }
  async increment(key, ttl) {
    /* istanbul ignore next */
    cov_163ccm1dcr().f[11]++;
    const now =
    /* istanbul ignore next */
    (cov_163ccm1dcr().s[31]++, Date.now());
    const existing =
    /* istanbul ignore next */
    (cov_163ccm1dcr().s[32]++, await this.get(key));
    /* istanbul ignore next */
    cov_163ccm1dcr().s[33]++;
    if (!existing) {
      /* istanbul ignore next */
      cov_163ccm1dcr().b[10][0]++;
      const newData =
      /* istanbul ignore next */
      (cov_163ccm1dcr().s[34]++, {
        count: 1,
        resetTime: now + ttl
      });
      /* istanbul ignore next */
      cov_163ccm1dcr().s[35]++;
      await this.set(key, newData, ttl);
      /* istanbul ignore next */
      cov_163ccm1dcr().s[36]++;
      return newData;
    } else
    /* istanbul ignore next */
    {
      cov_163ccm1dcr().b[10][1]++;
    }
    const updatedData =
    /* istanbul ignore next */
    (cov_163ccm1dcr().s[37]++, {
      ...existing,
      count: existing.count + 1
    });
    /* istanbul ignore next */
    cov_163ccm1dcr().s[38]++;
    await this.set(key, updatedData, existing.resetTime - now);
    /* istanbul ignore next */
    cov_163ccm1dcr().s[39]++;
    return updatedData;
  }
  constructor() {
    /* istanbul ignore next */
    cov_163ccm1dcr().f[12]++;
    cov_163ccm1dcr().s[40]++;
    this.store = new Map();
  }
}
// ===================================
// INSTANCIA GLOBAL DEL STORE
// ===================================
const defaultStore =
/* istanbul ignore next */
(cov_163ccm1dcr().s[41]++, new MemoryStore());
const keyGenerators =
/* istanbul ignore next */
(cov_163ccm1dcr().s[42]++, {
  // Por IP
  ip: req => {
    /* istanbul ignore next */
    cov_163ccm1dcr().f[13]++;
    const forwarded =
    /* istanbul ignore next */
    (cov_163ccm1dcr().s[43]++, req.headers.get('x-forwarded-for'));
    const ip =
    /* istanbul ignore next */
    (cov_163ccm1dcr().s[44]++, forwarded ?
    /* istanbul ignore next */
    (cov_163ccm1dcr().b[11][0]++, forwarded.split(',')[0]) :
    /* istanbul ignore next */
    (cov_163ccm1dcr().b[11][1]++,
    /* istanbul ignore next */
    (cov_163ccm1dcr().b[12][0]++, req.headers.get('x-real-ip')) ||
    /* istanbul ignore next */
    (cov_163ccm1dcr().b[12][1]++, 'unknown')));
    /* istanbul ignore next */
    cov_163ccm1dcr().s[45]++;
    return `ip:${ip}`;
  },
  // Por usuario autenticado (requiere implementaciÃ³n especÃ­fica)
  user: req => {
    /* istanbul ignore next */
    cov_163ccm1dcr().f[14]++;
    // TODO: Implementar extracciÃ³n de user ID desde token/session
    const userId =
    /* istanbul ignore next */
    (cov_163ccm1dcr().s[46]++,
    /* istanbul ignore next */
    (cov_163ccm1dcr().b[13][0]++, req.headers.get('x-user-id')) ||
    /* istanbul ignore next */
    (cov_163ccm1dcr().b[13][1]++, 'anonymous'));
    /* istanbul ignore next */
    cov_163ccm1dcr().s[47]++;
    return `user:${userId}`;
  },
  // Por endpoint especÃ­fico
  endpoint: req => {
    /* istanbul ignore next */
    cov_163ccm1dcr().f[15]++;
    const url =
    /* istanbul ignore next */
    (cov_163ccm1dcr().s[48]++, new URL(req.url));
    /* istanbul ignore next */
    cov_163ccm1dcr().s[49]++;
    return `endpoint:${url.pathname}`;
  },
  // Combinado IP + endpoint
  combined: req => {
    /* istanbul ignore next */
    cov_163ccm1dcr().f[16]++;
    const ip =
    /* istanbul ignore next */
    (cov_163ccm1dcr().s[50]++, keyGenerators.ip(req));
    const endpoint =
    /* istanbul ignore next */
    (cov_163ccm1dcr().s[51]++, keyGenerators.endpoint(req));
    /* istanbul ignore next */
    cov_163ccm1dcr().s[52]++;
    return `${ip}:${endpoint}`;
  }
});
function createRateLimiter(config =
/* istanbul ignore next */
(cov_163ccm1dcr().b[14][0]++, {}), store =
/* istanbul ignore next */
(cov_163ccm1dcr().b[15][0]++, defaultStore)) {
  /* istanbul ignore next */
  cov_163ccm1dcr().f[17]++;
  const finalConfig =
  /* istanbul ignore next */
  (cov_163ccm1dcr().s[53]++, {
    windowMs: 15 * 60 * 1000,
    maxRequests: 100,
    message: 'Rate limit exceeded',
    headers: true,
    standardHeaders: true,
    legacyHeaders: true,
    ...config
  });
  /* istanbul ignore next */
  cov_163ccm1dcr().s[54]++;
  return async req => {
    /* istanbul ignore next */
    cov_163ccm1dcr().f[18]++;
    cov_163ccm1dcr().s[55]++;
    return await checkRateLimit(req, finalConfig, store);
  };
}
async function checkRateLimit(req, config, store =
/* istanbul ignore next */
(cov_163ccm1dcr().b[16][0]++, defaultStore)) {
  /* istanbul ignore next */
  cov_163ccm1dcr().f[19]++;
  const keyGenerator =
  /* istanbul ignore next */
  (cov_163ccm1dcr().s[56]++,
  /* istanbul ignore next */
  (cov_163ccm1dcr().b[17][0]++, config.keyGenerator) ||
  /* istanbul ignore next */
  (cov_163ccm1dcr().b[17][1]++, keyGenerators.combined));
  const key =
  /* istanbul ignore next */
  (cov_163ccm1dcr().s[57]++, keyGenerator(req));
  /* istanbul ignore next */
  cov_163ccm1dcr().s[58]++;
  try {
    const data =
    /* istanbul ignore next */
    (cov_163ccm1dcr().s[59]++, await store.increment(key, config.windowMs));
    const result =
    /* istanbul ignore next */
    (cov_163ccm1dcr().s[60]++, {
      allowed: data.count <= config.maxRequests,
      limit: config.maxRequests,
      remaining: Math.max(0, config.maxRequests - data.count),
      resetTime: data.resetTime
    });
    /* istanbul ignore next */
    cov_163ccm1dcr().s[61]++;
    if (!result.allowed) {
      /* istanbul ignore next */
      cov_163ccm1dcr().b[18][0]++;
      cov_163ccm1dcr().s[62]++;
      result.retryAfter = Math.ceil((data.resetTime - Date.now()) / 1000);
    } else
    /* istanbul ignore next */
    {
      cov_163ccm1dcr().b[18][1]++;
    }
    cov_163ccm1dcr().s[63]++;
    return result;
  } catch (error) {
    /* istanbul ignore next */
    cov_163ccm1dcr().s[64]++;
    console.error('[RATE_LIMITER] Error checking rate limit:', error);
    // En caso de error, permitir la request (fail-open)
    /* istanbul ignore next */
    cov_163ccm1dcr().s[65]++;
    return {
      allowed: true,
      limit: config.maxRequests,
      remaining: config.maxRequests,
      resetTime: Date.now() + config.windowMs
    };
  }
}
function createRateLimitMiddleware(config) {
  /* istanbul ignore next */
  cov_163ccm1dcr().f[20]++;
  cov_163ccm1dcr().s[66]++;
  return async req => {
    /* istanbul ignore next */
    cov_163ccm1dcr().f[21]++;
    const result =
    /* istanbul ignore next */
    (cov_163ccm1dcr().s[67]++, await checkRateLimit(req, config));
    // Crear headers de rate limit
    const headers =
    /* istanbul ignore next */
    (cov_163ccm1dcr().s[68]++, new Headers());
    /* istanbul ignore next */
    cov_163ccm1dcr().s[69]++;
    if (config.headers !== false) {
      /* istanbul ignore next */
      cov_163ccm1dcr().b[19][0]++;
      cov_163ccm1dcr().s[70]++;
      if (config.standardHeaders !== false) {
        /* istanbul ignore next */
        cov_163ccm1dcr().b[20][0]++;
        cov_163ccm1dcr().s[71]++;
        // Headers estÃ¡ndar RFC 6585
        headers.set('RateLimit-Limit', result.limit.toString());
        /* istanbul ignore next */
        cov_163ccm1dcr().s[72]++;
        headers.set('RateLimit-Remaining', result.remaining.toString());
        /* istanbul ignore next */
        cov_163ccm1dcr().s[73]++;
        headers.set('RateLimit-Reset', new Date(result.resetTime).toISOString());
      } else
      /* istanbul ignore next */
      {
        cov_163ccm1dcr().b[20][1]++;
      }
      cov_163ccm1dcr().s[74]++;
      if (config.legacyHeaders !== false) {
        /* istanbul ignore next */
        cov_163ccm1dcr().b[21][0]++;
        cov_163ccm1dcr().s[75]++;
        // Headers legacy para compatibilidad
        headers.set('X-RateLimit-Limit', result.limit.toString());
        /* istanbul ignore next */
        cov_163ccm1dcr().s[76]++;
        headers.set('X-RateLimit-Remaining', result.remaining.toString());
        /* istanbul ignore next */
        cov_163ccm1dcr().s[77]++;
        headers.set('X-RateLimit-Reset', Math.ceil(result.resetTime / 1000).toString());
      } else
      /* istanbul ignore next */
      {
        cov_163ccm1dcr().b[21][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_163ccm1dcr().b[19][1]++;
    }
    cov_163ccm1dcr().s[78]++;
    if (!result.allowed) {
      /* istanbul ignore next */
      cov_163ccm1dcr().b[22][0]++;
      cov_163ccm1dcr().s[79]++;
      if (result.retryAfter) {
        /* istanbul ignore next */
        cov_163ccm1dcr().b[23][0]++;
        cov_163ccm1dcr().s[80]++;
        headers.set('Retry-After', result.retryAfter.toString());
      } else
      /* istanbul ignore next */
      {
        cov_163ccm1dcr().b[23][1]++;
      }
      // Log del rate limit excedido
      cov_163ccm1dcr().s[81]++;
      console.warn('[RATE_LIMITER] Rate limit exceeded:', {
        key: config.keyGenerator ?
        /* istanbul ignore next */
        (cov_163ccm1dcr().b[24][0]++, config.keyGenerator(req)) :
        /* istanbul ignore next */
        (cov_163ccm1dcr().b[24][1]++, 'combined'),
        limit: result.limit,
        resetTime: new Date(result.resetTime).toISOString(),
        userAgent: req.headers.get('user-agent'),
        ip:
        /* istanbul ignore next */
        (cov_163ccm1dcr().b[25][0]++, req.headers.get('x-forwarded-for')) ||
        /* istanbul ignore next */
        (cov_163ccm1dcr().b[25][1]++, req.headers.get('x-real-ip'))
      });
      /* istanbul ignore next */
      cov_163ccm1dcr().s[82]++;
      return new _server.NextResponse(JSON.stringify({
        error: 'Rate limit exceeded',
        message:
        /* istanbul ignore next */
        (cov_163ccm1dcr().b[26][0]++, config.message) ||
        /* istanbul ignore next */
        (cov_163ccm1dcr().b[26][1]++, 'Too many requests'),
        retryAfter: result.retryAfter
      }), {
        status: 429,
        headers
      });
    } else
    /* istanbul ignore next */
    {
      cov_163ccm1dcr().b[22][1]++;
    }
    // Request permitida, agregar headers informativos
    cov_163ccm1dcr().s[83]++;
    return _server.NextResponse.next({
      headers
    });
  };
}
async function withRateLimit(req, config, handler) {
  /* istanbul ignore next */
  cov_163ccm1dcr().f[22]++;
  cov_163ccm1dcr().s[84]++;
  // Si rate limiting estÃ¡ deshabilitado, ejecutar directamente el handler
  if (!isRateLimitingEnabled()) {
    /* istanbul ignore next */
    cov_163ccm1dcr().b[27][0]++;
    cov_163ccm1dcr().s[85]++;
    return await handler();
  } else
  /* istanbul ignore next */
  {
    cov_163ccm1dcr().b[27][1]++;
  }
  const result =
  /* istanbul ignore next */
  (cov_163ccm1dcr().s[86]++, await checkRateLimit(req, config));
  /* istanbul ignore next */
  cov_163ccm1dcr().s[87]++;
  if (!result.allowed) {
    /* istanbul ignore next */
    cov_163ccm1dcr().b[28][0]++;
    // Crear headers de rate limit
    const headers =
    /* istanbul ignore next */
    (cov_163ccm1dcr().s[88]++, new Headers());
    /* istanbul ignore next */
    cov_163ccm1dcr().s[89]++;
    if (config.headers !== false) {
      /* istanbul ignore next */
      cov_163ccm1dcr().b[29][0]++;
      cov_163ccm1dcr().s[90]++;
      if (config.standardHeaders !== false) {
        /* istanbul ignore next */
        cov_163ccm1dcr().b[30][0]++;
        cov_163ccm1dcr().s[91]++;
        // Headers estÃ¡ndar RFC 6585
        headers.set('RateLimit-Limit', result.limit.toString());
        /* istanbul ignore next */
        cov_163ccm1dcr().s[92]++;
        headers.set('RateLimit-Remaining', result.remaining.toString());
        /* istanbul ignore next */
        cov_163ccm1dcr().s[93]++;
        headers.set('RateLimit-Reset', new Date(result.resetTime).toISOString());
      } else
      /* istanbul ignore next */
      {
        cov_163ccm1dcr().b[30][1]++;
      }
      cov_163ccm1dcr().s[94]++;
      if (config.legacyHeaders !== false) {
        /* istanbul ignore next */
        cov_163ccm1dcr().b[31][0]++;
        cov_163ccm1dcr().s[95]++;
        // Headers legacy para compatibilidad
        headers.set('X-RateLimit-Limit', result.limit.toString());
        /* istanbul ignore next */
        cov_163ccm1dcr().s[96]++;
        headers.set('X-RateLimit-Remaining', result.remaining.toString());
        /* istanbul ignore next */
        cov_163ccm1dcr().s[97]++;
        headers.set('X-RateLimit-Reset', Math.ceil(result.resetTime / 1000).toString());
      } else
      /* istanbul ignore next */
      {
        cov_163ccm1dcr().b[31][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_163ccm1dcr().b[29][1]++;
    }
    cov_163ccm1dcr().s[98]++;
    if (result.retryAfter) {
      /* istanbul ignore next */
      cov_163ccm1dcr().b[32][0]++;
      cov_163ccm1dcr().s[99]++;
      headers.set('Retry-After', result.retryAfter.toString());
    } else
    /* istanbul ignore next */
    {
      cov_163ccm1dcr().b[32][1]++;
    }
    // Log del rate limit excedido
    cov_163ccm1dcr().s[100]++;
    console.warn('[RATE_LIMITER] Rate limit exceeded:', {
      key: config.keyGenerator ?
      /* istanbul ignore next */
      (cov_163ccm1dcr().b[33][0]++, config.keyGenerator(req)) :
      /* istanbul ignore next */
      (cov_163ccm1dcr().b[33][1]++, 'combined'),
      limit: result.limit,
      resetTime: new Date(result.resetTime).toISOString(),
      userAgent: req.headers.get('user-agent'),
      ip:
      /* istanbul ignore next */
      (cov_163ccm1dcr().b[34][0]++, req.headers.get('x-forwarded-for')) ||
      /* istanbul ignore next */
      (cov_163ccm1dcr().b[34][1]++, req.headers.get('x-real-ip'))
    });
    /* istanbul ignore next */
    cov_163ccm1dcr().s[101]++;
    return new _server.NextResponse(JSON.stringify({
      error: 'Rate limit exceeded',
      message:
      /* istanbul ignore next */
      (cov_163ccm1dcr().b[35][0]++, config.message) ||
      /* istanbul ignore next */
      (cov_163ccm1dcr().b[35][1]++, 'Too many requests'),
      retryAfter: result.retryAfter
    }), {
      status: 429,
      headers
    });
  } else
  /* istanbul ignore next */
  {
    cov_163ccm1dcr().b[28][1]++;
  }
  cov_163ccm1dcr().s[102]++;
  return handler();
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,