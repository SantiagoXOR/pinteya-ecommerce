{"version":3,"names":["_default","ProductTypesList","onCategorySelect","selectedCategory","cov_254m23mjuj","f","categories","apiCategories","loading","s","_useCategoryData","useCategoryData","autoFetch","fallbackCategories","enableAnalytics","productTypes","map","category","name","slug","b","id","description","toLowerCase","products","products_count","_jsxruntime","jsxs","className","jsx","Array","_","index","type","onClick","title"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\ShopWithSidebar\\ProductTypesList.tsx"],"sourcesContent":["// ===================================\r\n// PINTEYA E-COMMERCE - LISTA DE TIPOS DE PRODUCTOS\r\n// ===================================\r\n\r\nimport React from 'react';\r\nimport { useCategoryData } from '@/hooks/useCategoryData';\r\n\r\ninterface ProductType {\r\n  name: string;\r\n  slug: string;\r\n  description: string;\r\n  products: number;\r\n}\r\n\r\ninterface ProductTypesListProps {\r\n  onCategorySelect: (slug: string) => void;\r\n  selectedCategory: string;\r\n}\r\n\r\nconst ProductTypesList: React.FC<ProductTypesListProps> = ({\r\n  onCategorySelect,\r\n  selectedCategory,\r\n}) => {\r\n  // Obtener categorías dinámicas desde la API\r\n  const { categories: apiCategories, loading } = useCategoryData({\r\n    autoFetch: true,\r\n    fallbackCategories: [],\r\n    enableAnalytics: false,\r\n  });\r\n\r\n  // Transformar categorías de la API al formato esperado\r\n  const productTypes: ProductType[] = apiCategories.map(category => ({\r\n    name: category.name,\r\n    slug: category.slug || category.id,\r\n    description: category.description || `Productos de ${category.name.toLowerCase()}`,\r\n    products: category.products_count || 0,\r\n  }));\r\n\r\n  // Mostrar estado de carga si las categorías están cargando\r\n  if (loading) {\r\n    return (\r\n      <div className=\"mb-7.5\">\r\n        <h3 className=\"font-medium text-dark text-lg mb-4\">\r\n          Tipos de Productos\r\n        </h3>\r\n        <div className=\"space-y-2\">\r\n          {[...Array(4)].map((_, index) => (\r\n            <div key={index} className=\"w-full p-2 rounded bg-gray-100 animate-pulse\">\r\n              <div className=\"h-4 bg-gray-200 rounded w-3/4\"></div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"mb-7.5\">\r\n      <h3 className=\"font-medium text-dark text-lg mb-4\">\r\n        Tipos de Productos\r\n      </h3>\r\n      <ul className=\"space-y-2\">\r\n        {productTypes.map((type) => (\r\n          <li key={type.slug}>\r\n            <button\r\n              onClick={() => onCategorySelect(type.slug)}\r\n              className={`w-full text-left p-2 rounded transition-colors ${\r\n                selectedCategory === type.slug\r\n                  ? 'bg-primary text-white'\r\n                  : 'hover:bg-gray-100'\r\n              }`}\r\n              title={type.description}\r\n            >\r\n              <span className=\"flex justify-between items-center\">\r\n                <span className=\"font-medium\">{type.name}</span>\r\n                {type.products > 0 && (\r\n                  <span className=\"text-sm text-gray-500\">\r\n                    ({type.products})\r\n                  </span>\r\n                )}\r\n              </span>\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductTypesList;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}