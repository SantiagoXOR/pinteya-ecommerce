{"version":3,"names":["_default","PurchaseFlowVisualization","onRunSimulation","simulationLogs","cov_1xno5fiarh","f","isRunning","setIsRunning","s","_react","useState","currentStep","setCurrentStep","logs","setLogs","flowSteps","id","title","description","status","icon","_jsxruntime","jsx","_lucidereact","AlertCircle","className","Package","ShoppingCart","CheckCircle","CreditCard","FileText","RefreshCw","Truck","steps","setSteps","useEffect","b","updateStepsFromLogs","logsData","updatedSteps","logsByStep","reduce","acc","log","stepNumber","step","split","push","Object","keys","forEach","index","stepLogs","successLog","find","errorLog","length","timestamp","data","error","runSimulation","console","getStatusIcon","XCircle","Clock","getStatusBadge","variants","success","variant","running","pending","config","_badge","Badge","successfulSteps","filter","totalSteps","progressPercentage","jsxs","_card","Card","CardHeader","CardTitle","_button","Button","onClick","disabled","PlayCircle","CardContent","_progress","Progress","value","map","Date","toLocaleString","JSON","stringify","substring","summary","errors","totalExecutionTime","Math","round"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\PurchaseFlowVisualization.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Progress } from '@/components/ui/progress';\r\nimport { Separator } from '@/components/ui/separator';\r\nimport {\r\n  CheckCircle,\r\n  XCircle,\r\n  Clock,\r\n  ShoppingCart,\r\n  CreditCard,\r\n  Package,\r\n  Truck,\r\n  FileText,\r\n  AlertCircle,\r\n  PlayCircle,\r\n  RefreshCw\r\n} from 'lucide-react';\r\n\r\ninterface FlowStep {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  status: 'pending' | 'running' | 'success' | 'error';\r\n  icon: React.ReactNode;\r\n  timestamp?: string;\r\n  data?: any;\r\n  error?: string;\r\n}\r\n\r\ninterface PurchaseFlowVisualizationProps {\r\n  onRunSimulation?: () => Promise<void>;\r\n  simulationLogs?: any;\r\n}\r\n\r\nconst PurchaseFlowVisualization: React.FC<PurchaseFlowVisualizationProps> = ({\r\n  onRunSimulation,\r\n  simulationLogs\r\n}) => {\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [currentStep, setCurrentStep] = useState(0);\r\n  const [logs, setLogs] = useState<any>(null);\r\n\r\n  const flowSteps: FlowStep[] = [\r\n    {\r\n      id: 'server-check',\r\n      title: 'Verificación del Servidor',\r\n      description: 'Verificando conectividad con la API',\r\n      status: 'pending',\r\n      icon: <AlertCircle className=\"w-5 h-5\" />\r\n    },\r\n    {\r\n      id: 'product-load',\r\n      title: 'Carga de Productos',\r\n      description: 'Obteniendo catálogo de productos disponibles',\r\n      status: 'pending',\r\n      icon: <Package className=\"w-5 h-5\" />\r\n    },\r\n    {\r\n      id: 'product-selection',\r\n      title: 'Selección de Productos',\r\n      description: 'Simulando selección y agregado al carrito',\r\n      status: 'pending',\r\n      icon: <ShoppingCart className=\"w-5 h-5\" />\r\n    },\r\n    {\r\n      id: 'cart-validation',\r\n      title: 'Validación de Carrito',\r\n      description: 'Verificando stock y disponibilidad',\r\n      status: 'pending',\r\n      icon: <CheckCircle className=\"w-5 h-5\" />\r\n    },\r\n    {\r\n      id: 'payment-preference',\r\n      title: 'Creación de Preferencia',\r\n      description: 'Generando preferencia de pago en MercadoPago',\r\n      status: 'pending',\r\n      icon: <CreditCard className=\"w-5 h-5\" />\r\n    },\r\n    {\r\n      id: 'order-verification',\r\n      title: 'Verificación en BD',\r\n      description: 'Confirmando registro de orden en Supabase',\r\n      status: 'pending',\r\n      icon: <FileText className=\"w-5 h-5\" />\r\n    },\r\n    {\r\n      id: 'payment-simulation',\r\n      title: 'Simulación de Pago',\r\n      description: 'Procesando pago con credenciales de prueba',\r\n      status: 'pending',\r\n      icon: <CreditCard className=\"w-5 h-5\" />\r\n    },\r\n    {\r\n      id: 'webhook-processing',\r\n      title: 'Procesamiento de Webhook',\r\n      description: 'Actualizando estado de la orden',\r\n      status: 'pending',\r\n      icon: <RefreshCw className=\"w-5 h-5\" />\r\n    },\r\n    {\r\n      id: 'order-confirmation',\r\n      title: 'Confirmación de Orden',\r\n      description: 'Generando confirmación final',\r\n      status: 'pending',\r\n      icon: <Truck className=\"w-5 h-5\" />\r\n    },\r\n    {\r\n      id: 'flow-validation',\r\n      title: 'Validación Completa',\r\n      description: 'Verificando integridad del flujo',\r\n      status: 'pending',\r\n      icon: <CheckCircle className=\"w-5 h-5\" />\r\n    }\r\n  ];\r\n\r\n  const [steps, setSteps] = useState<FlowStep[]>(flowSteps);\r\n\r\n  useEffect(() => {\r\n    if (simulationLogs) {\r\n      setLogs(simulationLogs);\r\n      updateStepsFromLogs(simulationLogs);\r\n    }\r\n  }, [simulationLogs]);\r\n\r\n  const updateStepsFromLogs = (logsData: any) => {\r\n    if (!logsData || !logsData.logs) {return;}\r\n\r\n    const updatedSteps = [...flowSteps];\r\n    const logsByStep = logsData.logs.reduce((acc: any, log: any) => {\r\n      const stepNumber = log.step.split('.')[0];\r\n      if (!acc[stepNumber]) {acc[stepNumber] = [];}\r\n      acc[stepNumber].push(log);\r\n      return acc;\r\n    }, {});\r\n\r\n    Object.keys(logsByStep).forEach((stepNumber, index) => {\r\n      const stepLogs = logsByStep[stepNumber];\r\n      const successLog = stepLogs.find((log: any) => log.status === 'SUCCESS');\r\n      const errorLog = stepLogs.find((log: any) => log.status === 'ERROR');\r\n      \r\n      if (index < updatedSteps.length) {\r\n        if (successLog) {\r\n          updatedSteps[index].status = 'success';\r\n          updatedSteps[index].timestamp = successLog.timestamp;\r\n          updatedSteps[index].data = successLog.data;\r\n        } else if (errorLog) {\r\n          updatedSteps[index].status = 'error';\r\n          updatedSteps[index].timestamp = errorLog.timestamp;\r\n          updatedSteps[index].error = errorLog.error;\r\n        }\r\n      }\r\n    });\r\n\r\n    setSteps(updatedSteps);\r\n  };\r\n\r\n  const runSimulation = async () => {\r\n    if (onRunSimulation) {\r\n      setIsRunning(true);\r\n      try {\r\n        await onRunSimulation();\r\n      } catch (error) {\r\n        console.error('Error running simulation:', error);\r\n      } finally {\r\n        setIsRunning(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getStatusIcon = (status: string) => {\r\n    switch (status) {\r\n      case 'success':\r\n        return <CheckCircle className=\"w-5 h-5 text-green-500\" />;\r\n      case 'error':\r\n        return <XCircle className=\"w-5 h-5 text-red-500\" />;\r\n      case 'running':\r\n        return <Clock className=\"w-5 h-5 text-blue-500 animate-spin\" />;\r\n      default:\r\n        return <Clock className=\"w-5 h-5 text-gray-400\" />;\r\n    }\r\n  };\r\n\r\n  const getStatusBadge = (status: string) => {\r\n    const variants: Record<string, any> = {\r\n      success: { variant: 'default', className: 'bg-green-100 text-green-800' },\r\n      error: { variant: 'destructive', className: '' },\r\n      running: { variant: 'default', className: 'bg-blue-100 text-blue-800' },\r\n      pending: { variant: 'secondary', className: '' }\r\n    };\r\n\r\n    const config = variants[status] || variants.pending;\r\n    \r\n    return (\r\n      <Badge variant={config.variant} className={config.className}>\r\n        {status === 'success' ? 'Completado' :\r\n         status === 'error' ? 'Error' :\r\n         status === 'running' ? 'Ejecutando' : 'Pendiente'}\r\n      </Badge>\r\n    );\r\n  };\r\n\r\n  const successfulSteps = steps.filter(step => step.status === 'success').length;\r\n  const totalSteps = steps.length;\r\n  const progressPercentage = (successfulSteps / totalSteps) * 100;\r\n\r\n  return (\r\n    <div className=\"max-w-6xl mx-auto p-6 space-y-6\">\r\n      {/* Header */}\r\n      <Card>\r\n        <CardHeader>\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <CardTitle className=\"text-2xl font-bold text-gray-900\">\r\n                🛒 Simulación de Flujo de Compra Completo\r\n              </CardTitle>\r\n              <p className=\"text-gray-600 mt-2\">\r\n                Prueba automatizada del sistema de e-commerce con MercadoPago\r\n              </p>\r\n            </div>\r\n            <Button \r\n              onClick={runSimulation} \r\n              disabled={isRunning}\r\n              className=\"flex items-center gap-2\"\r\n            >\r\n              {isRunning ? (\r\n                <RefreshCw className=\"w-4 h-4 animate-spin\" />\r\n              ) : (\r\n                <PlayCircle className=\"w-4 h-4\" />\r\n              )}\r\n              {isRunning ? 'Ejecutando...' : 'Ejecutar Simulación'}\r\n            </Button>\r\n          </div>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"space-y-4\">\r\n            <div className=\"flex items-center justify-between text-sm\">\r\n              <span>Progreso del flujo</span>\r\n              <span>{successfulSteps}/{totalSteps} pasos completados</span>\r\n            </div>\r\n            <Progress value={progressPercentage} className=\"w-full\" />\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Flow Steps */}\r\n      <div className=\"grid gap-4\">\r\n        {steps.map((step, index) => (\r\n          <Card key={step.id} className={`transition-all duration-300 ${\r\n            step.status === 'success' ? 'border-green-200 bg-green-50' :\r\n            step.status === 'error' ? 'border-red-200 bg-red-50' :\r\n            step.status === 'running' ? 'border-blue-200 bg-blue-50' :\r\n            'border-gray-200'\r\n          }`}>\r\n            <CardContent className=\"p-4\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div className=\"flex items-center gap-3\">\r\n                  <div className=\"flex-shrink-0\">\r\n                    {getStatusIcon(step.status)}\r\n                  </div>\r\n                  <div className=\"flex-1\">\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <h3 className=\"font-semibold text-gray-900\">\r\n                        {index + 1}. {step.title}\r\n                      </h3>\r\n                      {getStatusBadge(step.status)}\r\n                    </div>\r\n                    <p className=\"text-sm text-gray-600 mt-1\">\r\n                      {step.description}\r\n                    </p>\r\n                    {step.timestamp && (\r\n                      <p className=\"text-xs text-gray-500 mt-1\">\r\n                        {new Date(step.timestamp).toLocaleString()}\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                {step.data && (\r\n                  <div className=\"text-xs text-gray-500 max-w-xs\">\r\n                    <pre className=\"whitespace-pre-wrap\">\r\n                      {JSON.stringify(step.data, null, 2).substring(0, 100)}...\r\n                    </pre>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              {step.error && (\r\n                <div className=\"mt-3 p-3 bg-red-100 border border-red-200 rounded-md\">\r\n                  <p className=\"text-sm text-red-800\">\r\n                    <strong>Error:</strong> {step.error}\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Summary */}\r\n      {logs && (\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>📊 Resumen de Ejecución</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n              <div className=\"text-center\">\r\n                <div className=\"text-2xl font-bold text-green-600\">\r\n                  {logs.summary?.successfulSteps || 0}\r\n                </div>\r\n                <div className=\"text-sm text-gray-600\">Pasos Exitosos</div>\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <div className=\"text-2xl font-bold text-red-600\">\r\n                  {logs.summary?.errors || 0}\r\n                </div>\r\n                <div className=\"text-sm text-gray-600\">Errores</div>\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <div className=\"text-2xl font-bold text-blue-600\">\r\n                  {logs.summary?.totalExecutionTime || 0}ms\r\n                </div>\r\n                <div className=\"text-sm text-gray-600\">Tiempo Total</div>\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <div className=\"text-2xl font-bold text-purple-600\">\r\n                  {logs.summary?.successfulSteps && logs.summary?.totalSteps ? \r\n                    Math.round((logs.summary.successfulSteps / logs.summary.totalSteps) * 100) : 0}%\r\n                </div>\r\n                <div className=\"text-sm text-gray-600\">Tasa de Éxito</div>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PurchaseFlowVisualization;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}