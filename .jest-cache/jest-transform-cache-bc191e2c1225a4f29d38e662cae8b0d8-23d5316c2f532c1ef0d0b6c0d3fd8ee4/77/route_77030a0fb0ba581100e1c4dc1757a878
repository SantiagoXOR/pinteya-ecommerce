e255bb4c1a1ec61bd3d7159288a0844a
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_gu0wolae1() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\driver\\deliveries\\route.ts";
  var hash = "b91c186b0e0a39a6a53b73e6bd0030b4b4001b17";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\driver\\deliveries\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 20
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 23
        }
      },
      "7": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "8": {
        start: {
          line: 24,
          column: 16
        },
        end: {
          line: 24,
          column: 54
        }
      },
      "9": {
        start: {
          line: 25,
          column: 17
        },
        end: {
          line: 25,
          column: 72
        }
      },
      "10": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 24
        }
      },
      "11": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 129,
          column: 5
        }
      },
      "12": {
        start: {
          line: 30,
          column: 24
        },
        end: {
          line: 30,
          column: 49
        }
      },
      "13": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 37,
          column: 9
        }
      },
      "14": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 36,
          column: 15
        }
      },
      "15": {
        start: {
          line: 38,
          column: 33
        },
        end: {
          line: 38,
          column: 53
        }
      },
      "16": {
        start: {
          line: 39,
          column: 23
        },
        end: {
          line: 39,
          column: 49
        }
      },
      "17": {
        start: {
          line: 40,
          column: 21
        },
        end: {
          line: 40,
          column: 45
        }
      },
      "18": {
        start: {
          line: 41,
          column: 25
        },
        end: {
          line: 41,
          column: 59
        }
      },
      "19": {
        start: {
          line: 43,
          column: 53
        },
        end: {
          line: 43,
          column: 137
        }
      },
      "20": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 50,
          column: 9
        }
      },
      "21": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 49,
          column: 15
        }
      },
      "22": {
        start: {
          line: 52,
          column: 20
        },
        end: {
          line: 52,
          column: 92
        }
      },
      "23": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "24": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 112
        }
      },
      "25": {
        start: {
          line: 57,
          column: 53
        },
        end: {
          line: 57,
          column: 64
        }
      },
      "26": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 65,
          column: 9
        }
      },
      "27": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 59,
          column: 65
        }
      },
      "28": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 64,
          column: 15
        }
      },
      "29": {
        start: {
          line: 67,
          column: 30
        },
        end: {
          line: 67,
          column: 32
        }
      },
      "30": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 105,
          column: 9
        }
      },
      "31": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 104,
          column: 13
        }
      },
      "32": {
        start: {
          line: 70,
          column: 16
        },
        end: {
          line: 103,
          column: 17
        }
      },
      "33": {
        start: {
          line: 70,
          column: 28
        },
        end: {
          line: 70,
          column: 29
        }
      },
      "34": {
        start: {
          line: 71,
          column: 37
        },
        end: {
          line: 71,
          column: 55
        }
      },
      "35": {
        start: {
          line: 73,
          column: 20
        },
        end: {
          line: 75,
          column: 21
        }
      },
      "36": {
        start: {
          line: 74,
          column: 24
        },
        end: {
          line: 74,
          column: 33
        }
      },
      "37": {
        start: {
          line: 76,
          column: 37
        },
        end: {
          line: 101,
          column: 21
        }
      },
      "38": {
        start: {
          line: 102,
          column: 20
        },
        end: {
          line: 102,
          column: 49
        }
      },
      "39": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 107,
          column: 104
        }
      },
      "40": {
        start: {
          line: 107,
          column: 35
        },
        end: {
          line: 107,
          column: 102
        }
      },
      "41": {
        start: {
          line: 109,
          column: 22
        },
        end: {
          line: 116,
          column: 9
        }
      },
      "42": {
        start: {
          line: 111,
          column: 47
        },
        end: {
          line: 111,
          column: 69
        }
      },
      "43": {
        start: {
          line: 112,
          column: 49
        },
        end: {
          line: 112,
          column: 73
        }
      },
      "44": {
        start: {
          line: 113,
          column: 50
        },
        end: {
          line: 113,
          column: 75
        }
      },
      "45": {
        start: {
          line: 114,
          column: 49
        },
        end: {
          line: 114,
          column: 73
        }
      },
      "46": {
        start: {
          line: 115,
          column: 49
        },
        end: {
          line: 115,
          column: 73
        }
      },
      "47": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 121,
          column: 11
        }
      },
      "48": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 123,
          column: 64
        }
      },
      "49": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 128,
          column: 11
        }
      },
      "50": {
        start: {
          line: 132,
          column: 4
        },
        end: {
          line: 232,
          column: 5
        }
      },
      "51": {
        start: {
          line: 134,
          column: 24
        },
        end: {
          line: 134,
          column: 49
        }
      },
      "52": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 141,
          column: 9
        }
      },
      "53": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 140,
          column: 15
        }
      },
      "54": {
        start: {
          line: 142,
          column: 21
        },
        end: {
          line: 142,
          column: 41
        }
      },
      "55": {
        start: {
          line: 143,
          column: 108
        },
        end: {
          line: 143,
          column: 112
        }
      },
      "56": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 151,
          column: 9
        }
      },
      "57": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 150,
          column: 15
        }
      },
      "58": {
        start: {
          line: 152,
          column: 25
        },
        end: {
          line: 152,
          column: 59
        }
      },
      "59": {
        start: {
          line: 154,
          column: 53
        },
        end: {
          line: 154,
          column: 143
        }
      },
      "60": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 161,
          column: 9
        }
      },
      "61": {
        start: {
          line: 156,
          column: 12
        },
        end: {
          line: 160,
          column: 15
        }
      },
      "62": {
        start: {
          line: 163,
          column: 51
        },
        end: {
          line: 163,
          column: 157
        }
      },
      "63": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 170,
          column: 9
        }
      },
      "64": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 169,
          column: 15
        }
      },
      "65": {
        start: {
          line: 172,
          column: 33
        },
        end: {
          line: 195,
          column: 10
        }
      },
      "66": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 193,
          column: 13
        }
      },
      "67": {
        start: {
          line: 174,
          column: 40
        },
        end: {
          line: 179,
          column: 17
        }
      },
      "68": {
        start: {
          line: 181,
          column: 16
        },
        end: {
          line: 191,
          column: 17
        }
      },
      "69": {
        start: {
          line: 182,
          column: 20
        },
        end: {
          line: 182,
          column: 76
        }
      },
      "70": {
        start: {
          line: 183,
          column: 20
        },
        end: {
          line: 183,
          column: 63
        }
      },
      "71": {
        start: {
          line: 184,
          column: 20
        },
        end: {
          line: 184,
          column: 65
        }
      },
      "72": {
        start: {
          line: 185,
          column: 20
        },
        end: {
          line: 187,
          column: 21
        }
      },
      "73": {
        start: {
          line: 186,
          column: 24
        },
        end: {
          line: 186,
          column: 72
        }
      },
      "74": {
        start: {
          line: 188,
          column: 20
        },
        end: {
          line: 190,
          column: 21
        }
      },
      "75": {
        start: {
          line: 189,
          column: 24
        },
        end: {
          line: 189,
          column: 72
        }
      },
      "76": {
        start: {
          line: 192,
          column: 16
        },
        end: {
          line: 192,
          column: 39
        }
      },
      "77": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 194,
          column: 28
        }
      },
      "78": {
        start: {
          line: 197,
          column: 59
        },
        end: {
          line: 200,
          column: 74
        }
      },
      "79": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 208,
          column: 9
        }
      },
      "80": {
        start: {
          line: 202,
          column: 12
        },
        end: {
          line: 202,
          column: 67
        }
      },
      "81": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 207,
          column: 15
        }
      },
      "82": {
        start: {
          line: 210,
          column: 29
        },
        end: {
          line: 210,
          column: 96
        }
      },
      "83": {
        start: {
          line: 210,
          column: 64
        },
        end: {
          line: 210,
          column: 95
        }
      },
      "84": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 217,
          column: 9
        }
      },
      "85": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 216,
          column: 34
        }
      },
      "86": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 224,
          column: 11
        }
      },
      "87": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 226,
          column: 69
        }
      },
      "88": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 231,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "GET",
        decl: {
          start: {
            line: 27,
            column: 15
          },
          end: {
            line: 27,
            column: 18
          }
        },
        loc: {
          start: {
            line: 27,
            column: 28
          },
          end: {
            line: 130,
            column: 1
          }
        },
        line: 27
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 107,
            column: 27
          },
          end: {
            line: 107,
            column: 28
          }
        },
        loc: {
          start: {
            line: 107,
            column: 35
          },
          end: {
            line: 107,
            column: 102
          }
        },
        line: 107
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 111,
            column: 42
          },
          end: {
            line: 111,
            column: 43
          }
        },
        loc: {
          start: {
            line: 111,
            column: 47
          },
          end: {
            line: 111,
            column: 69
          }
        },
        line: 111
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 112,
            column: 44
          },
          end: {
            line: 112,
            column: 45
          }
        },
        loc: {
          start: {
            line: 112,
            column: 49
          },
          end: {
            line: 112,
            column: 73
          }
        },
        line: 112
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 113,
            column: 45
          },
          end: {
            line: 113,
            column: 46
          }
        },
        loc: {
          start: {
            line: 113,
            column: 50
          },
          end: {
            line: 113,
            column: 75
          }
        },
        line: 113
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 114,
            column: 44
          },
          end: {
            line: 114,
            column: 45
          }
        },
        loc: {
          start: {
            line: 114,
            column: 49
          },
          end: {
            line: 114,
            column: 73
          }
        },
        line: 114
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 115,
            column: 44
          },
          end: {
            line: 115,
            column: 45
          }
        },
        loc: {
          start: {
            line: 115,
            column: 49
          },
          end: {
            line: 115,
            column: 73
          }
        },
        line: 115
      },
      "11": {
        name: "POST",
        decl: {
          start: {
            line: 131,
            column: 15
          },
          end: {
            line: 131,
            column: 19
          }
        },
        loc: {
          start: {
            line: 131,
            column: 29
          },
          end: {
            line: 233,
            column: 1
          }
        },
        line: 131
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 172,
            column: 53
          },
          end: {
            line: 172,
            column: 54
          }
        },
        loc: {
          start: {
            line: 172,
            column: 65
          },
          end: {
            line: 195,
            column: 9
          }
        },
        line: 172
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 210,
            column: 52
          },
          end: {
            line: 210,
            column: 53
          }
        },
        loc: {
          start: {
            line: 210,
            column: 64
          },
          end: {
            line: 210,
            column: 95
          }
        },
        line: 210
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "1": {
        loc: {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "2": {
        loc: {
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 44,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 44,
            column: 23
          }
        }, {
          start: {
            line: 44,
            column: 27
          },
          end: {
            line: 44,
            column: 34
          }
        }],
        line: 44
      },
      "3": {
        loc: {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "4": {
        loc: {
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 65,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 65,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "5": {
        loc: {
          start: {
            line: 68,
            column: 28
          },
          end: {
            line: 68,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 68,
            column: 28
          },
          end: {
            line: 68,
            column: 34
          }
        }, {
          start: {
            line: 68,
            column: 38
          },
          end: {
            line: 68,
            column: 40
          }
        }],
        line: 68
      },
      "6": {
        loc: {
          start: {
            line: 69,
            column: 12
          },
          end: {
            line: 104,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 12
          },
          end: {
            line: 104,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 69
      },
      "7": {
        loc: {
          start: {
            line: 69,
            column: 16
          },
          end: {
            line: 69,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 69,
            column: 16
          },
          end: {
            line: 69,
            column: 31
          }
        }, {
          start: {
            line: 69,
            column: 35
          },
          end: {
            line: 69,
            column: 65
          }
        }],
        line: 69
      },
      "8": {
        loc: {
          start: {
            line: 73,
            column: 20
          },
          end: {
            line: 75,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 20
          },
          end: {
            line: 75,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "9": {
        loc: {
          start: {
            line: 73,
            column: 24
          },
          end: {
            line: 73,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 73,
            column: 24
          },
          end: {
            line: 73,
            column: 30
          }
        }, {
          start: {
            line: 73,
            column: 34
          },
          end: {
            line: 73,
            column: 60
          }
        }],
        line: 73
      },
      "10": {
        loc: {
          start: {
            line: 77,
            column: 28
          },
          end: {
            line: 77,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 77,
            column: 28
          },
          end: {
            line: 77,
            column: 39
          }
        }, {
          start: {
            line: 77,
            column: 43
          },
          end: {
            line: 77,
            column: 61
          }
        }],
        line: 77
      },
      "11": {
        loc: {
          start: {
            line: 80,
            column: 41
          },
          end: {
            line: 80,
            column: 105
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 80,
            column: 41
          },
          end: {
            line: 80,
            column: 65
          }
        }, {
          start: {
            line: 80,
            column: 69
          },
          end: {
            line: 80,
            column: 105
          }
        }],
        line: 80
      },
      "12": {
        loc: {
          start: {
            line: 81,
            column: 39
          },
          end: {
            line: 81,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 81,
            column: 39
          },
          end: {
            line: 81,
            column: 61
          }
        }, {
          start: {
            line: 81,
            column: 65
          },
          end: {
            line: 81,
            column: 83
          }
        }],
        line: 81
      },
      "13": {
        loc: {
          start: {
            line: 84,
            column: 37
          },
          end: {
            line: 84,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 84,
            column: 37
          },
          end: {
            line: 84,
            column: 66
          }
        }, {
          start: {
            line: 84,
            column: 70
          },
          end: {
            line: 84,
            column: 90
          }
        }],
        line: 84
      },
      "14": {
        loc: {
          start: {
            line: 85,
            column: 34
          },
          end: {
            line: 85,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 85,
            column: 34
          },
          end: {
            line: 85,
            column: 60
          }
        }, {
          start: {
            line: 85,
            column: 64
          },
          end: {
            line: 85,
            column: 78
          }
        }],
        line: 85
      },
      "15": {
        loc: {
          start: {
            line: 86,
            column: 41
          },
          end: {
            line: 86,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 86,
            column: 41
          },
          end: {
            line: 86,
            column: 74
          }
        }, {
          start: {
            line: 86,
            column: 78
          },
          end: {
            line: 86,
            column: 84
          }
        }],
        line: 86
      },
      "16": {
        loc: {
          start: {
            line: 90,
            column: 31
          },
          end: {
            line: 90,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 90,
            column: 31
          },
          end: {
            line: 90,
            column: 45
          }
        }, {
          start: {
            line: 90,
            column: 49
          },
          end: {
            line: 90,
            column: 51
          }
        }],
        line: 90
      },
      "17": {
        loc: {
          start: {
            line: 91,
            column: 32
          },
          end: {
            line: 91,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 91,
            column: 32
          },
          end: {
            line: 91,
            column: 47
          }
        }, {
          start: {
            line: 91,
            column: 51
          },
          end: {
            line: 91,
            column: 62
          }
        }],
        line: 91
      },
      "18": {
        loc: {
          start: {
            line: 94,
            column: 44
          },
          end: {
            line: 94,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 94,
            column: 44
          },
          end: {
            line: 94,
            column: 71
          }
        }, {
          start: {
            line: 94,
            column: 75
          },
          end: {
            line: 94,
            column: 80
          }
        }],
        line: 94
      },
      "19": {
        loc: {
          start: {
            line: 135,
            column: 8
          },
          end: {
            line: 141,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 135,
            column: 8
          },
          end: {
            line: 141,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 135
      },
      "20": {
        loc: {
          start: {
            line: 145,
            column: 8
          },
          end: {
            line: 151,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 145,
            column: 8
          },
          end: {
            line: 151,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 145
      },
      "21": {
        loc: {
          start: {
            line: 145,
            column: 12
          },
          end: {
            line: 145,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 145,
            column: 12
          },
          end: {
            line: 145,
            column: 24
          }
        }, {
          start: {
            line: 145,
            column: 28
          },
          end: {
            line: 145,
            column: 37
          }
        }, {
          start: {
            line: 145,
            column: 41
          },
          end: {
            line: 145,
            column: 48
          }
        }],
        line: 145
      },
      "22": {
        loc: {
          start: {
            line: 155,
            column: 8
          },
          end: {
            line: 161,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 155,
            column: 8
          },
          end: {
            line: 161,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 155
      },
      "23": {
        loc: {
          start: {
            line: 155,
            column: 12
          },
          end: {
            line: 155,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 155,
            column: 12
          },
          end: {
            line: 155,
            column: 23
          }
        }, {
          start: {
            line: 155,
            column: 27
          },
          end: {
            line: 155,
            column: 34
          }
        }],
        line: 155
      },
      "24": {
        loc: {
          start: {
            line: 164,
            column: 8
          },
          end: {
            line: 170,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 164,
            column: 8
          },
          end: {
            line: 170,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 164
      },
      "25": {
        loc: {
          start: {
            line: 164,
            column: 12
          },
          end: {
            line: 164,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 164,
            column: 12
          },
          end: {
            line: 164,
            column: 22
          }
        }, {
          start: {
            line: 164,
            column: 26
          },
          end: {
            line: 164,
            column: 32
          }
        }],
        line: 164
      },
      "26": {
        loc: {
          start: {
            line: 173,
            column: 12
          },
          end: {
            line: 193,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 12
          },
          end: {
            line: 193,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 173
      },
      "27": {
        loc: {
          start: {
            line: 173,
            column: 16
          },
          end: {
            line: 173,
            column: 113
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 173,
            column: 16
          },
          end: {
            line: 173,
            column: 43
          }
        }, {
          start: {
            line: 173,
            column: 47
          },
          end: {
            line: 173,
            column: 113
          }
        }],
        line: 173
      },
      "28": {
        loc: {
          start: {
            line: 181,
            column: 16
          },
          end: {
            line: 191,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 181,
            column: 16
          },
          end: {
            line: 191,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 181
      },
      "29": {
        loc: {
          start: {
            line: 185,
            column: 20
          },
          end: {
            line: 187,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 185,
            column: 20
          },
          end: {
            line: 187,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 185
      },
      "30": {
        loc: {
          start: {
            line: 188,
            column: 20
          },
          end: {
            line: 190,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 188,
            column: 20
          },
          end: {
            line: 190,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 188
      },
      "31": {
        loc: {
          start: {
            line: 201,
            column: 8
          },
          end: {
            line: 208,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 201,
            column: 8
          },
          end: {
            line: 208,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 201
      },
      "32": {
        loc: {
          start: {
            line: 212,
            column: 8
          },
          end: {
            line: 217,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 212,
            column: 8
          },
          end: {
            line: 217,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 212
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\driver\\deliveries\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n/**\r\n * API para gesti\xF3n de entregas por parte de los drivers\r\n * GET /api/driver/deliveries - Obtener entregas asignadas\r\n * POST /api/driver/deliveries - Actualizar estado de entrega\r\n */\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { auth } from '@/lib/auth/config';\r\nimport { createClient } from '@/lib/integrations/supabase/server';\r\n\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    // Verificar autenticaci\xF3n\r\n    const session = await auth();\r\n    \r\n    if (!session?.user?.email) {\r\n      return NextResponse.json(\r\n        { error: 'No autorizado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    const { searchParams } = new URL(request.url);\r\n    const status = searchParams.get('status'); // pending, in_transit, delivered, exception\r\n    const date = searchParams.get('date'); // YYYY-MM-DD\r\n\r\n    const supabase = await createClient();\r\n\r\n    // Obtener informaci\xF3n del driver\r\n    const { data: driver, error: driverError } = await supabase\r\n      .from('drivers')\r\n      .select('id')\r\n      .eq('email', session.user.email)\r\n      .single();\r\n\r\n    if (driverError || !driver) {\r\n      return NextResponse.json(\r\n        { error: 'Driver no encontrado' },\r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    // Construir query para obtener rutas con entregas\r\n    let query = supabase\r\n      .from('optimized_routes')\r\n      .select('*')\r\n      .eq('driver_id', driver.id);\r\n\r\n    // Filtrar por fecha si se especifica\r\n    if (date) {\r\n      query = query\r\n        .gte('created_at', `${date}T00:00:00.000Z`)\r\n        .lte('created_at', `${date}T23:59:59.999Z`);\r\n    }\r\n\r\n    const { data: routes, error: routesError } = await query;\r\n\r\n    if (routesError) {\r\n      console.error('Error fetching routes:', routesError);\r\n      return NextResponse.json(\r\n        { error: 'Error obteniendo rutas' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Extraer y procesar todas las entregas\r\n    const allDeliveries = [];\r\n    \r\n    for (const route of routes || []) {\r\n      if (route.shipments && Array.isArray(route.shipments)) {\r\n        for (let i = 0; i < route.shipments.length; i++) {\r\n          const shipment = route.shipments[i];\r\n          \r\n          // Filtrar por estado si se especifica\r\n          if (status && shipment.status !== status) {\r\n            continue;\r\n          }\r\n\r\n          const delivery = {\r\n            id: shipment.id || `${route.id}-${i}`,\r\n            route_id: route.id,\r\n            route_name: route.name,\r\n            tracking_number: shipment.tracking_number || `TRK-${route.id.slice(-6)}-${i + 1}`,\r\n            customer_name: shipment.customer_name || `Cliente ${i + 1}`,\r\n            customer_phone: shipment.customer_phone,\r\n            destination: {\r\n              address: shipment.destination?.address || `Direcci\xF3n ${i + 1}`,\r\n              city: shipment.destination?.city || 'Buenos Aires',\r\n              postal_code: shipment.destination?.postal_code || '1000',\r\n              coordinates: shipment.destination?.coordinates,\r\n              notes: shipment.destination?.notes\r\n            },\r\n            items: shipment.items || [],\r\n            status: shipment.status || 'confirmed',\r\n            estimated_delivery_time: shipment.estimated_delivery_time,\r\n            special_instructions: shipment.special_instructions,\r\n            requires_signature: shipment.requires_signature || false,\r\n            cash_on_delivery: shipment.cash_on_delivery,\r\n            delivery_notes: shipment.delivery_notes,\r\n            delivered_at: shipment.delivered_at,\r\n            delivered_by: shipment.delivered_by,\r\n            created_at: route.created_at,\r\n            updated_at: route.updated_at\r\n          };\r\n\r\n          allDeliveries.push(delivery);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Ordenar por fecha de creaci\xF3n (m\xE1s recientes primero)\r\n    allDeliveries.sort((a, b) => \r\n      new Date(b.created_at).getTime() - new Date(a.created_at).getTime()\r\n    );\r\n\r\n    // Estad\xEDsticas\r\n    const stats = {\r\n      total: allDeliveries.length,\r\n      pending: allDeliveries.filter(d => d.status === 'pending').length,\r\n      confirmed: allDeliveries.filter(d => d.status === 'confirmed').length,\r\n      in_transit: allDeliveries.filter(d => d.status === 'in_transit').length,\r\n      delivered: allDeliveries.filter(d => d.status === 'delivered').length,\r\n      exception: allDeliveries.filter(d => d.status === 'exception').length\r\n    };\r\n\r\n    return NextResponse.json({\r\n      deliveries: allDeliveries,\r\n      stats,\r\n      driver_id: driver.id\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Error in driver deliveries API:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    // Verificar autenticaci\xF3n\r\n    const session = await auth();\r\n    \r\n    if (!session?.user?.email) {\r\n      return NextResponse.json(\r\n        { error: 'No autorizado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    const body = await request.json();\r\n    const { \r\n      delivery_id, \r\n      route_id, \r\n      status, \r\n      delivery_notes, \r\n      signature_data,\r\n      photo_evidence,\r\n      location \r\n    } = body;\r\n\r\n    // Validar par\xE1metros requeridos\r\n    if (!delivery_id || !route_id || !status) {\r\n      return NextResponse.json(\r\n        { error: 'delivery_id, route_id y status son requeridos' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    const supabase = await createClient();\r\n\r\n    // Obtener informaci\xF3n del driver\r\n    const { data: driver, error: driverError } = await supabase\r\n      .from('drivers')\r\n      .select('id, name')\r\n      .eq('email', session.user.email)\r\n      .single();\r\n\r\n    if (driverError || !driver) {\r\n      return NextResponse.json(\r\n        { error: 'Driver no encontrado' },\r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    // Obtener la ruta actual\r\n    const { data: route, error: routeError } = await supabase\r\n      .from('optimized_routes')\r\n      .select('*')\r\n      .eq('id', route_id)\r\n      .eq('driver_id', driver.id)\r\n      .single();\r\n\r\n    if (routeError || !route) {\r\n      return NextResponse.json(\r\n        { error: 'Ruta no encontrada' },\r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    // Actualizar el shipment espec\xEDfico\r\n    const updatedShipments = route.shipments.map((shipment: any) => {\r\n      if (shipment.id === delivery_id || \r\n          `${route_id}-${route.shipments.indexOf(shipment)}` === delivery_id) {\r\n        \r\n        const updatedShipment = {\r\n          ...shipment,\r\n          status,\r\n          delivery_notes,\r\n          updated_at: new Date().toISOString()\r\n        };\r\n\r\n        // Si se marca como entregado, agregar informaci\xF3n adicional\r\n        if (status === 'delivered') {\r\n          updatedShipment.delivered_at = new Date().toISOString();\r\n          updatedShipment.delivered_by = driver.name;\r\n          updatedShipment.delivery_location = location;\r\n          \r\n          if (signature_data) {\r\n            updatedShipment.signature_data = signature_data;\r\n          }\r\n          \r\n          if (photo_evidence) {\r\n            updatedShipment.photo_evidence = photo_evidence;\r\n          }\r\n        }\r\n\r\n        return updatedShipment;\r\n      }\r\n      return shipment;\r\n    });\r\n\r\n    // Actualizar la ruta en la base de datos\r\n    const { data: updatedRoute, error: updateError } = await supabase\r\n      .from('optimized_routes')\r\n      .update({\r\n        shipments: updatedShipments,\r\n        updated_at: new Date().toISOString()\r\n      })\r\n      .eq('id', route_id)\r\n      .eq('driver_id', driver.id)\r\n      .select()\r\n      .single();\r\n\r\n    if (updateError) {\r\n      console.error('Error updating delivery:', updateError);\r\n      return NextResponse.json(\r\n        { error: 'Error actualizando entrega' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Verificar si todas las entregas est\xE1n completadas\r\n    const allDelivered = updatedShipments.every(\r\n      (shipment: any) => shipment.status === 'delivered'\r\n    );\r\n\r\n    // Si todas las entregas est\xE1n completadas, marcar la ruta como completada\r\n    if (allDelivered) {\r\n      await supabase\r\n        .from('optimized_routes')\r\n        .update({\r\n          status: 'completed',\r\n          completed_at: new Date().toISOString()\r\n        })\r\n        .eq('id', route_id);\r\n    }\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      delivery_id,\r\n      status,\r\n      route_completed: allDelivered,\r\n      updated_at: new Date().toISOString()\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Error in driver delivery update API:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "POST", "runtime", "request", "session", "auth", "user", "email", "NextResponse", "json", "error", "status", "searchParams", "URL", "url", "get", "date", "supabase", "createClient", "data", "driver", "driverError", "from", "select", "eq", "single", "query", "id", "gte", "lte", "routes", "routesError", "console", "allDeliveries", "route", "shipments", "Array", "isArray", "i", "length", "shipment", "delivery", "route_id", "route_name", "name", "tracking_number", "slice", "customer_name", "customer_phone", "destination", "address", "city", "postal_code", "coordinates", "notes", "items", "estimated_delivery_time", "special_instructions", "requires_signature", "cash_on_delivery", "delivery_notes", "delivered_at", "delivered_by", "created_at", "updated_at", "push", "sort", "a", "b", "Date", "getTime", "stats", "total", "pending", "filter", "d", "confirmed", "in_transit", "delivered", "exception", "deliveries", "driver_id", "body", "delivery_id", "signature_data", "photo_evidence", "location", "routeError", "updatedShipments", "map", "indexOf", "updatedShipment", "toISOString", "delivery_location", "updatedRoute", "updateError", "update", "allDelivered", "every", "completed_at", "success", "route_completed"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b91c186b0e0a39a6a53b73e6bd0030b4b4001b17"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_gu0wolae1 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_gu0wolae1();
cov_gu0wolae1().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_gu0wolae1().f[0]++;
  cov_gu0wolae1().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_gu0wolae1().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_gu0wolae1().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_gu0wolae1().f[1]++;
    cov_gu0wolae1().s[4]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_gu0wolae1().f[2]++;
    cov_gu0wolae1().s[5]++;
    return POST;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_gu0wolae1().f[3]++;
    cov_gu0wolae1().s[6]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_gu0wolae1().s[7]++, require("next/server"));
const _config =
/* istanbul ignore next */
(cov_gu0wolae1().s[8]++, require("../../../../lib/auth/config"));
const _server1 =
/* istanbul ignore next */
(cov_gu0wolae1().s[9]++, require("../../../../lib/integrations/supabase/server"));
const runtime =
/* istanbul ignore next */
(cov_gu0wolae1().s[10]++, 'nodejs');
async function GET(request) {
  /* istanbul ignore next */
  cov_gu0wolae1().f[4]++;
  cov_gu0wolae1().s[11]++;
  try {
    // Verificar autenticaciÃ³n
    const session =
    /* istanbul ignore next */
    (cov_gu0wolae1().s[12]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_gu0wolae1().s[13]++;
    if (!session?.user?.email) {
      /* istanbul ignore next */
      cov_gu0wolae1().b[0][0]++;
      cov_gu0wolae1().s[14]++;
      return _server.NextResponse.json({
        error: 'No autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_gu0wolae1().b[0][1]++;
    }
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_gu0wolae1().s[15]++, new URL(request.url));
    const status =
    /* istanbul ignore next */
    (cov_gu0wolae1().s[16]++, searchParams.get('status')); // pending, in_transit, delivered, exception
    const date =
    /* istanbul ignore next */
    (cov_gu0wolae1().s[17]++, searchParams.get('date')); // YYYY-MM-DD
    const supabase =
    /* istanbul ignore next */
    (cov_gu0wolae1().s[18]++, await (0, _server1.createClient)());
    // Obtener informaciÃ³n del driver
    const {
      data: driver,
      error: driverError
    } =
    /* istanbul ignore next */
    (cov_gu0wolae1().s[19]++, await supabase.from('drivers').select('id').eq('email', session.user.email).single());
    /* istanbul ignore next */
    cov_gu0wolae1().s[20]++;
    if (
    /* istanbul ignore next */
    (cov_gu0wolae1().b[2][0]++, driverError) ||
    /* istanbul ignore next */
    (cov_gu0wolae1().b[2][1]++, !driver)) {
      /* istanbul ignore next */
      cov_gu0wolae1().b[1][0]++;
      cov_gu0wolae1().s[21]++;
      return _server.NextResponse.json({
        error: 'Driver no encontrado'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_gu0wolae1().b[1][1]++;
    }
    // Construir query para obtener rutas con entregas
    let query =
    /* istanbul ignore next */
    (cov_gu0wolae1().s[22]++, supabase.from('optimized_routes').select('*').eq('driver_id', driver.id));
    // Filtrar por fecha si se especifica
    /* istanbul ignore next */
    cov_gu0wolae1().s[23]++;
    if (date) {
      /* istanbul ignore next */
      cov_gu0wolae1().b[3][0]++;
      cov_gu0wolae1().s[24]++;
      query = query.gte('created_at', `${date}T00:00:00.000Z`).lte('created_at', `${date}T23:59:59.999Z`);
    } else
    /* istanbul ignore next */
    {
      cov_gu0wolae1().b[3][1]++;
    }
    const {
      data: routes,
      error: routesError
    } =
    /* istanbul ignore next */
    (cov_gu0wolae1().s[25]++, await query);
    /* istanbul ignore next */
    cov_gu0wolae1().s[26]++;
    if (routesError) {
      /* istanbul ignore next */
      cov_gu0wolae1().b[4][0]++;
      cov_gu0wolae1().s[27]++;
      console.error('Error fetching routes:', routesError);
      /* istanbul ignore next */
      cov_gu0wolae1().s[28]++;
      return _server.NextResponse.json({
        error: 'Error obteniendo rutas'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_gu0wolae1().b[4][1]++;
    }
    // Extraer y procesar todas las entregas
    const allDeliveries =
    /* istanbul ignore next */
    (cov_gu0wolae1().s[29]++, []);
    /* istanbul ignore next */
    cov_gu0wolae1().s[30]++;
    for (const route of
    /* istanbul ignore next */
    (cov_gu0wolae1().b[5][0]++, routes) ||
    /* istanbul ignore next */
    (cov_gu0wolae1().b[5][1]++, [])) {
      /* istanbul ignore next */
      cov_gu0wolae1().s[31]++;
      if (
      /* istanbul ignore next */
      (cov_gu0wolae1().b[7][0]++, route.shipments) &&
      /* istanbul ignore next */
      (cov_gu0wolae1().b[7][1]++, Array.isArray(route.shipments))) {
        /* istanbul ignore next */
        cov_gu0wolae1().b[6][0]++;
        cov_gu0wolae1().s[32]++;
        for (let i =
        /* istanbul ignore next */
        (cov_gu0wolae1().s[33]++, 0); i < route.shipments.length; i++) {
          const shipment =
          /* istanbul ignore next */
          (cov_gu0wolae1().s[34]++, route.shipments[i]);
          // Filtrar por estado si se especifica
          /* istanbul ignore next */
          cov_gu0wolae1().s[35]++;
          if (
          /* istanbul ignore next */
          (cov_gu0wolae1().b[9][0]++, status) &&
          /* istanbul ignore next */
          (cov_gu0wolae1().b[9][1]++, shipment.status !== status)) {
            /* istanbul ignore next */
            cov_gu0wolae1().b[8][0]++;
            cov_gu0wolae1().s[36]++;
            continue;
          } else
          /* istanbul ignore next */
          {
            cov_gu0wolae1().b[8][1]++;
          }
          const delivery =
          /* istanbul ignore next */
          (cov_gu0wolae1().s[37]++, {
            id:
            /* istanbul ignore next */
            (cov_gu0wolae1().b[10][0]++, shipment.id) ||
            /* istanbul ignore next */
            (cov_gu0wolae1().b[10][1]++, `${route.id}-${i}`),
            route_id: route.id,
            route_name: route.name,
            tracking_number:
            /* istanbul ignore next */
            (cov_gu0wolae1().b[11][0]++, shipment.tracking_number) ||
            /* istanbul ignore next */
            (cov_gu0wolae1().b[11][1]++, `TRK-${route.id.slice(-6)}-${i + 1}`),
            customer_name:
            /* istanbul ignore next */
            (cov_gu0wolae1().b[12][0]++, shipment.customer_name) ||
            /* istanbul ignore next */
            (cov_gu0wolae1().b[12][1]++, `Cliente ${i + 1}`),
            customer_phone: shipment.customer_phone,
            destination: {
              address:
              /* istanbul ignore next */
              (cov_gu0wolae1().b[13][0]++, shipment.destination?.address) ||
              /* istanbul ignore next */
              (cov_gu0wolae1().b[13][1]++, `DirecciÃ³n ${i + 1}`),
              city:
              /* istanbul ignore next */
              (cov_gu0wolae1().b[14][0]++, shipment.destination?.city) ||
              /* istanbul ignore next */
              (cov_gu0wolae1().b[14][1]++, 'Buenos Aires'),
              postal_code:
              /* istanbul ignore next */
              (cov_gu0wolae1().b[15][0]++, shipment.destination?.postal_code) ||
              /* istanbul ignore next */
              (cov_gu0wolae1().b[15][1]++, '1000'),
              coordinates: shipment.destination?.coordinates,
              notes: shipment.destination?.notes
            },
            items:
            /* istanbul ignore next */
            (cov_gu0wolae1().b[16][0]++, shipment.items) ||
            /* istanbul ignore next */
            (cov_gu0wolae1().b[16][1]++, []),
            status:
            /* istanbul ignore next */
            (cov_gu0wolae1().b[17][0]++, shipment.status) ||
            /* istanbul ignore next */
            (cov_gu0wolae1().b[17][1]++, 'confirmed'),
            estimated_delivery_time: shipment.estimated_delivery_time,
            special_instructions: shipment.special_instructions,
            requires_signature:
            /* istanbul ignore next */
            (cov_gu0wolae1().b[18][0]++, shipment.requires_signature) ||
            /* istanbul ignore next */
            (cov_gu0wolae1().b[18][1]++, false),
            cash_on_delivery: shipment.cash_on_delivery,
            delivery_notes: shipment.delivery_notes,
            delivered_at: shipment.delivered_at,
            delivered_by: shipment.delivered_by,
            created_at: route.created_at,
            updated_at: route.updated_at
          });
          /* istanbul ignore next */
          cov_gu0wolae1().s[38]++;
          allDeliveries.push(delivery);
        }
      } else
      /* istanbul ignore next */
      {
        cov_gu0wolae1().b[6][1]++;
      }
    }
    // Ordenar por fecha de creaciÃ³n (mÃ¡s recientes primero)
    /* istanbul ignore next */
    cov_gu0wolae1().s[39]++;
    allDeliveries.sort((a, b) => {
      /* istanbul ignore next */
      cov_gu0wolae1().f[5]++;
      cov_gu0wolae1().s[40]++;
      return new Date(b.created_at).getTime() - new Date(a.created_at).getTime();
    });
    // EstadÃ­sticas
    const stats =
    /* istanbul ignore next */
    (cov_gu0wolae1().s[41]++, {
      total: allDeliveries.length,
      pending: allDeliveries.filter(d => {
        /* istanbul ignore next */
        cov_gu0wolae1().f[6]++;
        cov_gu0wolae1().s[42]++;
        return d.status === 'pending';
      }).length,
      confirmed: allDeliveries.filter(d => {
        /* istanbul ignore next */
        cov_gu0wolae1().f[7]++;
        cov_gu0wolae1().s[43]++;
        return d.status === 'confirmed';
      }).length,
      in_transit: allDeliveries.filter(d => {
        /* istanbul ignore next */
        cov_gu0wolae1().f[8]++;
        cov_gu0wolae1().s[44]++;
        return d.status === 'in_transit';
      }).length,
      delivered: allDeliveries.filter(d => {
        /* istanbul ignore next */
        cov_gu0wolae1().f[9]++;
        cov_gu0wolae1().s[45]++;
        return d.status === 'delivered';
      }).length,
      exception: allDeliveries.filter(d => {
        /* istanbul ignore next */
        cov_gu0wolae1().f[10]++;
        cov_gu0wolae1().s[46]++;
        return d.status === 'exception';
      }).length
    });
    /* istanbul ignore next */
    cov_gu0wolae1().s[47]++;
    return _server.NextResponse.json({
      deliveries: allDeliveries,
      stats,
      driver_id: driver.id
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_gu0wolae1().s[48]++;
    console.error('Error in driver deliveries API:', error);
    /* istanbul ignore next */
    cov_gu0wolae1().s[49]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
async function POST(request) {
  /* istanbul ignore next */
  cov_gu0wolae1().f[11]++;
  cov_gu0wolae1().s[50]++;
  try {
    // Verificar autenticaciÃ³n
    const session =
    /* istanbul ignore next */
    (cov_gu0wolae1().s[51]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_gu0wolae1().s[52]++;
    if (!session?.user?.email) {
      /* istanbul ignore next */
      cov_gu0wolae1().b[19][0]++;
      cov_gu0wolae1().s[53]++;
      return _server.NextResponse.json({
        error: 'No autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_gu0wolae1().b[19][1]++;
    }
    const body =
    /* istanbul ignore next */
    (cov_gu0wolae1().s[54]++, await request.json());
    const {
      delivery_id,
      route_id,
      status,
      delivery_notes,
      signature_data,
      photo_evidence,
      location
    } =
    /* istanbul ignore next */
    (cov_gu0wolae1().s[55]++, body);
    // Validar parÃ¡metros requeridos
    /* istanbul ignore next */
    cov_gu0wolae1().s[56]++;
    if (
    /* istanbul ignore next */
    (cov_gu0wolae1().b[21][0]++, !delivery_id) ||
    /* istanbul ignore next */
    (cov_gu0wolae1().b[21][1]++, !route_id) ||
    /* istanbul ignore next */
    (cov_gu0wolae1().b[21][2]++, !status)) {
      /* istanbul ignore next */
      cov_gu0wolae1().b[20][0]++;
      cov_gu0wolae1().s[57]++;
      return _server.NextResponse.json({
        error: 'delivery_id, route_id y status son requeridos'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_gu0wolae1().b[20][1]++;
    }
    const supabase =
    /* istanbul ignore next */
    (cov_gu0wolae1().s[58]++, await (0, _server1.createClient)());
    // Obtener informaciÃ³n del driver
    const {
      data: driver,
      error: driverError
    } =
    /* istanbul ignore next */
    (cov_gu0wolae1().s[59]++, await supabase.from('drivers').select('id, name').eq('email', session.user.email).single());
    /* istanbul ignore next */
    cov_gu0wolae1().s[60]++;
    if (
    /* istanbul ignore next */
    (cov_gu0wolae1().b[23][0]++, driverError) ||
    /* istanbul ignore next */
    (cov_gu0wolae1().b[23][1]++, !driver)) {
      /* istanbul ignore next */
      cov_gu0wolae1().b[22][0]++;
      cov_gu0wolae1().s[61]++;
      return _server.NextResponse.json({
        error: 'Driver no encontrado'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_gu0wolae1().b[22][1]++;
    }
    // Obtener la ruta actual
    const {
      data: route,
      error: routeError
    } =
    /* istanbul ignore next */
    (cov_gu0wolae1().s[62]++, await supabase.from('optimized_routes').select('*').eq('id', route_id).eq('driver_id', driver.id).single());
    /* istanbul ignore next */
    cov_gu0wolae1().s[63]++;
    if (
    /* istanbul ignore next */
    (cov_gu0wolae1().b[25][0]++, routeError) ||
    /* istanbul ignore next */
    (cov_gu0wolae1().b[25][1]++, !route)) {
      /* istanbul ignore next */
      cov_gu0wolae1().b[24][0]++;
      cov_gu0wolae1().s[64]++;
      return _server.NextResponse.json({
        error: 'Ruta no encontrada'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_gu0wolae1().b[24][1]++;
    }
    // Actualizar el shipment especÃ­fico
    const updatedShipments =
    /* istanbul ignore next */
    (cov_gu0wolae1().s[65]++, route.shipments.map(shipment => {
      /* istanbul ignore next */
      cov_gu0wolae1().f[12]++;
      cov_gu0wolae1().s[66]++;
      if (
      /* istanbul ignore next */
      (cov_gu0wolae1().b[27][0]++, shipment.id === delivery_id) ||
      /* istanbul ignore next */
      (cov_gu0wolae1().b[27][1]++, `${route_id}-${route.shipments.indexOf(shipment)}` === delivery_id)) {
        /* istanbul ignore next */
        cov_gu0wolae1().b[26][0]++;
        const updatedShipment =
        /* istanbul ignore next */
        (cov_gu0wolae1().s[67]++, {
          ...shipment,
          status,
          delivery_notes,
          updated_at: new Date().toISOString()
        });
        // Si se marca como entregado, agregar informaciÃ³n adicional
        /* istanbul ignore next */
        cov_gu0wolae1().s[68]++;
        if (status === 'delivered') {
          /* istanbul ignore next */
          cov_gu0wolae1().b[28][0]++;
          cov_gu0wolae1().s[69]++;
          updatedShipment.delivered_at = new Date().toISOString();
          /* istanbul ignore next */
          cov_gu0wolae1().s[70]++;
          updatedShipment.delivered_by = driver.name;
          /* istanbul ignore next */
          cov_gu0wolae1().s[71]++;
          updatedShipment.delivery_location = location;
          /* istanbul ignore next */
          cov_gu0wolae1().s[72]++;
          if (signature_data) {
            /* istanbul ignore next */
            cov_gu0wolae1().b[29][0]++;
            cov_gu0wolae1().s[73]++;
            updatedShipment.signature_data = signature_data;
          } else
          /* istanbul ignore next */
          {
            cov_gu0wolae1().b[29][1]++;
          }
          cov_gu0wolae1().s[74]++;
          if (photo_evidence) {
            /* istanbul ignore next */
            cov_gu0wolae1().b[30][0]++;
            cov_gu0wolae1().s[75]++;
            updatedShipment.photo_evidence = photo_evidence;
          } else
          /* istanbul ignore next */
          {
            cov_gu0wolae1().b[30][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_gu0wolae1().b[28][1]++;
        }
        cov_gu0wolae1().s[76]++;
        return updatedShipment;
      } else
      /* istanbul ignore next */
      {
        cov_gu0wolae1().b[26][1]++;
      }
      cov_gu0wolae1().s[77]++;
      return shipment;
    }));
    // Actualizar la ruta en la base de datos
    const {
      data: updatedRoute,
      error: updateError
    } =
    /* istanbul ignore next */
    (cov_gu0wolae1().s[78]++, await supabase.from('optimized_routes').update({
      shipments: updatedShipments,
      updated_at: new Date().toISOString()
    }).eq('id', route_id).eq('driver_id', driver.id).select().single());
    /* istanbul ignore next */
    cov_gu0wolae1().s[79]++;
    if (updateError) {
      /* istanbul ignore next */
      cov_gu0wolae1().b[31][0]++;
      cov_gu0wolae1().s[80]++;
      console.error('Error updating delivery:', updateError);
      /* istanbul ignore next */
      cov_gu0wolae1().s[81]++;
      return _server.NextResponse.json({
        error: 'Error actualizando entrega'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_gu0wolae1().b[31][1]++;
    }
    // Verificar si todas las entregas estÃ¡n completadas
    const allDelivered =
    /* istanbul ignore next */
    (cov_gu0wolae1().s[82]++, updatedShipments.every(shipment => {
      /* istanbul ignore next */
      cov_gu0wolae1().f[13]++;
      cov_gu0wolae1().s[83]++;
      return shipment.status === 'delivered';
    }));
    // Si todas las entregas estÃ¡n completadas, marcar la ruta como completada
    /* istanbul ignore next */
    cov_gu0wolae1().s[84]++;
    if (allDelivered) {
      /* istanbul ignore next */
      cov_gu0wolae1().b[32][0]++;
      cov_gu0wolae1().s[85]++;
      await supabase.from('optimized_routes').update({
        status: 'completed',
        completed_at: new Date().toISOString()
      }).eq('id', route_id);
    } else
    /* istanbul ignore next */
    {
      cov_gu0wolae1().b[32][1]++;
    }
    cov_gu0wolae1().s[86]++;
    return _server.NextResponse.json({
      success: true,
      delivery_id,
      status,
      route_completed: allDelivered,
      updated_at: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_gu0wolae1().s[87]++;
    console.error('Error in driver delivery update API:', error);
    /* istanbul ignore next */
    cov_gu0wolae1().s[88]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,