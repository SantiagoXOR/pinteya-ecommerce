{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\__tests__\\components\\BrandFilter.test.tsx"],"sourcesContent":["// ===================================\n// TESTS: Componente BrandFilter\n// ===================================\n\nimport React from 'react'\nimport { render, screen, fireEvent, waitFor } from '@testing-library/react'\nimport userEvent from '@testing-library/user-event'\nimport { BrandFilter, BrandFilterCompact } from '@/components/ui/brand-filter'\n\n// Mock de funciones de API\njest.mock('@/lib/api/brands', () => ({\n  formatBrandName: jest.fn(name => name),\n  getBrandColor: jest.fn(() => '#FF6B35'),\n  getBrandLogo: jest.fn(() => '/images/brands/default.png'),\n}))\n\nconst mockBrands = [\n  { name: 'El Galgo', products_count: 5 },\n  { name: 'Plavicon', products_count: 8 },\n  { name: 'Akapol', products_count: 3 },\n  { name: 'Sinteplast', products_count: 2 },\n]\n\ndescribe('BrandFilter Component', () => {\n  const defaultProps = {\n    brands: mockBrands,\n    selectedBrands: [],\n    onBrandChange: jest.fn(),\n  }\n\n  beforeEach(() => {\n    jest.clearAllMocks()\n  })\n\n  describe('Renderizado básico', () => {\n    it('debería renderizar correctamente', () => {\n      render(<BrandFilter {...defaultProps} />)\n\n      expect(screen.getByText('Marcas')).toBeInTheDocument()\n      expect(screen.getByPlaceholderText('Buscar marcas...')).toBeInTheDocument()\n      expect(screen.getByText('Todas')).toBeInTheDocument()\n\n      // Verificar que todas las marcas se muestran\n      mockBrands.forEach(brand => {\n        expect(screen.getByText(brand.name)).toBeInTheDocument()\n        expect(screen.getByText(brand.products_count.toString())).toBeInTheDocument()\n      })\n    })\n\n    it('debería mostrar estado de carga', () => {\n      render(<BrandFilter {...defaultProps} isLoading={true} />)\n\n      expect(screen.getByText('Marcas')).toBeInTheDocument()\n\n      // Verificar elementos de carga (skeletons)\n      const skeletons = screen.getAllByRole('generic')\n      expect(skeletons.length).toBeGreaterThan(0)\n    })\n\n    it('debería ocultar búsqueda si showSearch es false', () => {\n      render(<BrandFilter {...defaultProps} showSearch={false} />)\n\n      expect(screen.queryByPlaceholderText('Buscar marcas...')).not.toBeInTheDocument()\n    })\n\n    it('debería ocultar conteo de productos si showProductCount es false', () => {\n      render(<BrandFilter {...defaultProps} showProductCount={false} />)\n\n      // Los números de conteo no deberían estar visibles\n      mockBrands.forEach(brand => {\n        expect(screen.getByText(brand.name)).toBeInTheDocument()\n        expect(screen.queryByText(brand.products_count.toString())).not.toBeInTheDocument()\n      })\n    })\n  })\n\n  describe('Funcionalidad de selección', () => {\n    it('debería llamar onBrandChange al seleccionar una marca', async () => {\n      const user = userEvent.setup()\n      const onBrandChange = jest.fn()\n\n      render(<BrandFilter {...defaultProps} onBrandChange={onBrandChange} />)\n\n      const checkbox = screen.getByLabelText(/El Galgo/)\n      await user.click(checkbox)\n\n      expect(onBrandChange).toHaveBeenCalledWith(['El Galgo'])\n    })\n\n    it('debería mostrar marcas seleccionadas', () => {\n      render(<BrandFilter {...defaultProps} selectedBrands={['El Galgo', 'Plavicon']} />)\n\n      // Verificar que se muestran las marcas seleccionadas\n      expect(screen.getByText('Filtros activos:')).toBeInTheDocument()\n\n      // Buscar marcas por sus checkboxes marcados\n      const elGalgoCheckbox = screen.getByRole('checkbox', { name: /el galgo/i })\n      const plaviconCheckbox = screen.getByRole('checkbox', { name: /plavicon/i })\n\n      expect(elGalgoCheckbox).toBeChecked()\n      expect(plaviconCheckbox).toBeChecked()\n    })\n\n    it('debería permitir deseleccionar marcas desde los badges', async () => {\n      const user = userEvent.setup()\n      const onBrandChange = jest.fn()\n\n      render(\n        <BrandFilter\n          {...defaultProps}\n          selectedBrands={['El Galgo']}\n          onBrandChange={onBrandChange}\n        />\n      )\n\n      // Buscar el checkbox de El Galgo y desmarcarlo\n      const checkbox = screen.getByRole('checkbox', { name: /el galgo/i })\n      await user.click(checkbox)\n\n      expect(onBrandChange).toHaveBeenCalledWith([])\n    })\n\n    it('debería seleccionar todas las marcas visibles', async () => {\n      const user = userEvent.setup()\n      const onBrandChange = jest.fn()\n\n      render(<BrandFilter {...defaultProps} onBrandChange={onBrandChange} />)\n\n      const selectAllButton = screen.getByText('Todas')\n      await user.click(selectAllButton)\n\n      expect(onBrandChange).toHaveBeenCalledWith(['El Galgo', 'Plavicon', 'Akapol', 'Sinteplast'])\n    })\n\n    it('debería limpiar todas las marcas seleccionadas', async () => {\n      const user = userEvent.setup()\n      const onBrandChange = jest.fn()\n\n      render(\n        <BrandFilter\n          {...defaultProps}\n          selectedBrands={['El Galgo', 'Plavicon']}\n          onBrandChange={onBrandChange}\n        />\n      )\n\n      const clearButton = screen.getByText('Limpiar')\n      await user.click(clearButton)\n\n      expect(onBrandChange).toHaveBeenCalledWith([])\n    })\n  })\n\n  describe('Funcionalidad de búsqueda', () => {\n    it('debería filtrar marcas por término de búsqueda', async () => {\n      const user = userEvent.setup()\n\n      render(<BrandFilter {...defaultProps} />)\n\n      const searchInput = screen.getByPlaceholderText('Buscar marcas...')\n      await user.type(searchInput, 'galgo')\n\n      // Debería mostrar solo El Galgo\n      expect(screen.getByText('El Galgo')).toBeInTheDocument()\n      expect(screen.queryByText('Plavicon')).not.toBeInTheDocument()\n      expect(screen.queryByText('Akapol')).not.toBeInTheDocument()\n    })\n\n    it('debería mostrar mensaje cuando no hay resultados', async () => {\n      const user = userEvent.setup()\n\n      render(<BrandFilter {...defaultProps} />)\n\n      const searchInput = screen.getByPlaceholderText('Buscar marcas...')\n      await user.type(searchInput, 'marca inexistente')\n\n      expect(screen.getByText('No se encontraron marcas')).toBeInTheDocument()\n    })\n\n    it('debería limpiar búsqueda al hacer click en X', async () => {\n      const user = userEvent.setup()\n\n      render(<BrandFilter {...defaultProps} />)\n\n      const searchInput = screen.getByPlaceholderText('Buscar marcas...')\n      await user.type(searchInput, 'galgo')\n\n      // Verificar que se filtró\n      expect(screen.queryByText('Plavicon')).not.toBeInTheDocument()\n\n      // Limpiar el input directamente (simular borrar el texto)\n      await user.clear(searchInput)\n\n      // Verificar que se muestran todas las marcas nuevamente\n      expect(screen.getByText('Plavicon')).toBeInTheDocument()\n    })\n  })\n\n  describe('Casos edge', () => {\n    it('debería manejar lista vacía de marcas', () => {\n      render(<BrandFilter {...defaultProps} brands={[]} />)\n\n      expect(screen.getByText('No se encontraron marcas')).toBeInTheDocument()\n    })\n\n    it('debería aplicar className personalizada', () => {\n      const { container } = render(<BrandFilter {...defaultProps} className='custom-class' />)\n\n      expect(container.firstChild).toHaveClass('custom-class')\n    })\n\n    it('debería respetar maxHeight personalizada', () => {\n      const { container } = render(<BrandFilter {...defaultProps} maxHeight='200px' />)\n\n      // Verificar que el componente se renderiza con la altura personalizada\n      // Buscar el contenedor principal del filtro\n      const filterContainer =\n        container.querySelector('[data-testid=\"brand-filter\"]') ||\n        container.querySelector('.space-y-4') ||\n        container.firstElementChild\n\n      expect(filterContainer).toBeInTheDocument()\n    })\n  })\n})\n\ndescribe('BrandFilterCompact Component', () => {\n  const defaultProps = {\n    brands: mockBrands,\n    selectedBrands: [],\n    onBrandChange: jest.fn(),\n  }\n\n  beforeEach(() => {\n    jest.clearAllMocks()\n  })\n\n  it('debería renderizar correctamente', () => {\n    render(<BrandFilterCompact {...defaultProps} />)\n\n    expect(screen.getByText('Marcas')).toBeInTheDocument()\n\n    // Verificar que todas las marcas se muestran como badges\n    mockBrands.forEach(brand => {\n      expect(screen.getByText(brand.name)).toBeInTheDocument()\n    })\n  })\n\n  it('debería mostrar marcas seleccionadas con estilo diferente', () => {\n    render(<BrandFilterCompact {...defaultProps} selectedBrands={['El Galgo']} />)\n\n    const selectedBadge = screen.getByText('El Galgo').closest('div')\n    const unselectedBadge = screen.getByText('Plavicon').closest('div')\n\n    // Los badges seleccionados y no seleccionados deberían tener estilos diferentes\n    expect(selectedBadge).toHaveClass('cursor-pointer')\n    expect(unselectedBadge).toHaveClass('cursor-pointer')\n  })\n\n  it('debería alternar selección al hacer click', async () => {\n    const user = userEvent.setup()\n    const onBrandChange = jest.fn()\n\n    render(<BrandFilterCompact {...defaultProps} onBrandChange={onBrandChange} />)\n\n    const badge = screen.getByText('El Galgo')\n    await user.click(badge)\n\n    expect(onBrandChange).toHaveBeenCalledWith(['El Galgo'])\n  })\n\n  it('debería aplicar className personalizada', () => {\n    const { container } = render(\n      <BrandFilterCompact {...defaultProps} className='custom-compact' />\n    )\n\n    expect(container.firstChild).toHaveClass('custom-compact')\n  })\n})\n"],"names":["jest","mock","formatBrandName","fn","name","getBrandColor","getBrandLogo","mockBrands","products_count","describe","defaultProps","brands","selectedBrands","onBrandChange","beforeEach","clearAllMocks","it","render","BrandFilter","expect","screen","getByText","toBeInTheDocument","getByPlaceholderText","forEach","brand","toString","isLoading","skeletons","getAllByRole","length","toBeGreaterThan","showSearch","queryByPlaceholderText","not","showProductCount","queryByText","user","userEvent","setup","checkbox","getByLabelText","click","toHaveBeenCalledWith","elGalgoCheckbox","getByRole","plaviconCheckbox","toBeChecked","selectAllButton","clearButton","searchInput","type","clear","container","className","firstChild","toHaveClass","maxHeight","filterContainer","querySelector","firstElementChild","BrandFilterCompact","selectedBadge","closest","unselectedBadge","badge"],"mappings":"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"}