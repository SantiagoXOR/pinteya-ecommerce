{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\driver\\dashboard\\page.tsx"],"sourcesContent":["/**\n * Dashboard principal para drivers\n * Interfaz mobile-first con informaci√≥n de rutas, estado y acciones r√°pidas\n */\n\n'use client'\n\n// Forzar renderizado din√°mico para evitar problemas con prerendering\nexport const dynamic = 'force-dynamic'\nimport React, { useEffect, useState } from 'react'\nimport { LoadScript } from '@react-google-maps/api'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Badge } from '@/components/ui/badge'\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'\nimport {\n  Navigation,\n  MapPin,\n  Clock,\n  Package,\n  CheckCircle,\n  AlertCircle,\n  Truck,\n  Route,\n  Play,\n  Pause,\n  MoreVertical,\n  List,\n  Map,\n} from 'lucide-react'\nimport { useDriver } from '@/contexts/DriverContext'\nimport { cn } from '@/lib/core/utils'\nimport Link from 'next/link'\nimport PendingOrdersList from '@/components/driver/PendingOrdersList'\nimport LiveNavigationMap from '@/components/driver/LiveNavigationMap'\n\ninterface PendingOrder {\n  id: number\n  orderNumber: string\n  total: number\n  status: string\n  paymentStatus: string\n  fulfillmentStatus: string\n  createdAt: string\n  estimatedDelivery?: string\n  shippingAddress: {\n    streetName: string\n    streetNumber: string\n    floor?: string\n    apartment?: string\n    cityName: string\n    stateName: string\n    zipCode: string\n    fullAddress: string\n  }\n  items: Array<{\n    id: number\n    productName: string\n    quantity: number\n    price: number\n    weight: number\n  }>\n  totalItems: number\n  totalWeight: number\n  notes?: string\n}\n\ninterface DeliveryStop {\n  orderId: number\n  orderNumber: string\n  address: string\n  coordinates?: {\n    lat: number\n    lng: number\n  }\n  sequence: number\n  status: 'pending' | 'current' | 'completed'\n  estimatedArrival?: string\n  total: number\n  items: number\n  notes?: string\n}\n\nexport default function DriverDashboardPage() {\n  const { state, goOnline, goOffline, startRoute } = useDriver()\n  const [activeTab, setActiveTab] = useState('orders')\n  const [routeStops, setRouteStops] = useState<DeliveryStop[]>([])\n  const [isNavigating, setIsNavigating] = useState(false)\n\n  // Estad√≠sticas del d√≠a\n  const todayStats = {\n    completedDeliveries: 0,\n    totalDistance: 0,\n    activeTime: '0h 0m',\n    efficiency: 0,\n  }\n\n  // Ruta activa actual\n  const activeRoute = state.currentRoute\n\n  // Pr√≥ximas rutas asignadas\n  const upcomingRoutes = state.assignedRoutes.filter(route => route.status === 'planned')\n\n  // Funci√≥n para geocodificar direcciones\n  const geocodeAddress = async (address: string): Promise<{ lat: number; lng: number } | null> => {\n    return new Promise(resolve => {\n      if (!window.google || !window.google.maps) {\n        console.warn('Google Maps not loaded, using default coordinates')\n        // Coordenadas por defecto para C√≥rdoba\n        resolve({ lat: -31.4201, lng: -64.1888 })\n        return\n      }\n\n      const geocoder = new google.maps.Geocoder()\n      geocoder.geocode(\n        {\n          address: address + ', C√≥rdoba, Argentina',\n          region: 'AR',\n        },\n        (results, status) => {\n          if (status === 'OK' && results && results[0]) {\n            const location = results[0].geometry.location\n            resolve({\n              lat: location.lat(),\n              lng: location.lng(),\n            })\n          } else {\n            console.warn('Geocoding failed for address:', address, 'Status:', status)\n            // Coordenadas por defecto para C√≥rdoba con peque√±a variaci√≥n\n            resolve({\n              lat: -31.4201 + (Math.random() - 0.5) * 0.01,\n              lng: -64.1888 + (Math.random() - 0.5) * 0.01,\n            })\n          }\n        }\n      )\n    })\n  }\n\n  const handleStartRoute = async (orders: PendingOrder[]) => {\n    try {\n      console.log('üöÄ Starting route with orders:', orders)\n\n      // Geocodificar todas las direcciones\n      const stopsWithCoordinates: DeliveryStop[] = []\n\n      for (let i = 0; i < orders.length; i++) {\n        const order = orders[i]\n        console.log(`üìç Geocoding address: ${order.shippingAddress.fullAddress}`)\n\n        const coordinates = await geocodeAddress(order.shippingAddress.fullAddress)\n\n        const stop: DeliveryStop = {\n          orderId: order.id,\n          orderNumber: order.orderNumber,\n          address: order.shippingAddress.fullAddress,\n          coordinates: coordinates,\n          sequence: i + 1,\n          status: i === 0 ? 'current' : 'pending',\n          total: order.total,\n          items: order.totalItems,\n          notes: order.notes,\n        }\n\n        stopsWithCoordinates.push(stop)\n        console.log(`‚úÖ Stop ${i + 1} geocoded:`, stop)\n      }\n\n      console.log('üó∫Ô∏è All stops geocoded:', stopsWithCoordinates)\n      setRouteStops(stopsWithCoordinates)\n      setIsNavigating(true)\n      setActiveTab('navigation')\n\n      // Actualizar contexto del driver\n      startRoute(`route-${Date.now()}`)\n    } catch (error) {\n      console.error('Error starting route:', error)\n    }\n  }\n\n  const handleCompleteDelivery = (orderId: number) => {\n    setRouteStops(prev =>\n      prev.map(stop =>\n        stop.orderId === orderId ? { ...stop, status: 'completed' as const } : stop\n      )\n    )\n\n    // Actualizar el siguiente stop como current\n    const currentIndex = routeStops.findIndex(stop => stop.orderId === orderId)\n    if (currentIndex < routeStops.length - 1) {\n      setRouteStops(prev =>\n        prev.map((stop, index) =>\n          index === currentIndex + 1 ? { ...stop, status: 'current' as const } : stop\n        )\n      )\n    }\n  }\n\n  return (\n    <LoadScript\n      googleMapsApiKey={process.env.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY || ''}\n      libraries={['places', 'geometry']}\n      loadingElement={<div>Cargando Google Maps...</div>}\n    >\n      <div className='p-4 space-y-6 max-w-4xl mx-auto'>\n        {/* Estado y controles principales */}\n        <Card>\n          <CardHeader className='pb-3'>\n            <div className='flex items-center justify-between'>\n              <div>\n                <CardTitle className='text-lg'>Estado del Driver</CardTitle>\n                <CardDescription>\n                  {state.driver?.vehicle_type} - {state.driver?.license_plate}\n                </CardDescription>\n              </div>\n              <div\n                className={cn(\n                  'w-3 h-3 rounded-full',\n                  state.isOnline ? 'bg-green-500' : 'bg-gray-400'\n                )}\n              />\n            </div>\n          </CardHeader>\n          <CardContent className='space-y-4'>\n            {/* Control de estado online/offline */}\n            <div className='flex space-x-2'>\n              <Button\n                onClick={goOnline}\n                disabled={state.isOnline}\n                className='flex-1'\n                variant={state.isOnline ? 'secondary' : 'default'}\n              >\n                <Play className='mr-2 h-4 w-4' />\n                {state.isOnline ? 'En L√≠nea' : 'Conectarse'}\n              </Button>\n              <Button\n                onClick={goOffline}\n                disabled={!state.isOnline}\n                variant='outline'\n                className='flex-1'\n              >\n                <Pause className='mr-2 h-4 w-4' />\n                Desconectar\n              </Button>\n            </div>\n\n            {/* Ubicaci√≥n actual */}\n            {state.currentLocation && (\n              <div className='flex items-center space-x-2 text-sm text-gray-600'>\n                <MapPin className='h-4 w-4' />\n                <span>\n                  Ubicaci√≥n: {state.currentLocation.lat.toFixed(4)},{' '}\n                  {state.currentLocation.lng.toFixed(4)}\n                </span>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n\n        {/* Tabs para √≥rdenes y navegaci√≥n */}\n        <Tabs value={activeTab} onValueChange={setActiveTab} className='w-full'>\n          <TabsList className='grid w-full grid-cols-2'>\n            <TabsTrigger value='orders' className='flex items-center gap-2'>\n              <List className='h-4 w-4' />\n              √ìrdenes del D√≠a\n            </TabsTrigger>\n            <TabsTrigger\n              value='navigation'\n              className='flex items-center gap-2'\n              disabled={!isNavigating}\n            >\n              <Map className='h-4 w-4' />\n              Navegaci√≥n GPS\n            </TabsTrigger>\n          </TabsList>\n\n          <TabsContent value='orders' className='mt-6'>\n            <PendingOrdersList\n              onStartRoute={handleStartRoute}\n              onSelectOrder={order => console.log('Selected order:', order)}\n            />\n          </TabsContent>\n\n          <TabsContent value='navigation' className='mt-6'>\n            {isNavigating && routeStops.length > 0 ? (\n              <LiveNavigationMap\n                stops={routeStops}\n                onCompleteDelivery={handleCompleteDelivery}\n                onNavigationUpdate={location => {\n                  // Actualizar ubicaci√≥n en el contexto\n                  console.log('üìç GPS Navigation update:', location)\n                }}\n              />\n            ) : (\n              <Card>\n                <CardContent className='text-center py-8'>\n                  <Navigation className='h-12 w-12 text-gray-400 mx-auto mb-4' />\n                  <h3 className='text-lg font-semibold mb-2'>No hay navegaci√≥n activa</h3>\n                  <p className='text-gray-600 mb-4'>\n                    Selecciona √≥rdenes e inicia un recorrido para usar la navegaci√≥n GPS\n                  </p>\n                  <Button onClick={() => setActiveTab('orders')}>\n                    <List className='h-4 w-4 mr-2' />\n                    Ver √ìrdenes\n                  </Button>\n                </CardContent>\n              </Card>\n            )}\n          </TabsContent>\n        </Tabs>\n\n        {/* Estad√≠sticas del d√≠a */}\n        <Card>\n          <CardHeader>\n            <CardTitle className='text-lg'>Estad√≠sticas de Hoy</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className='grid grid-cols-2 md:grid-cols-4 gap-4'>\n              <div className='text-center'>\n                <div className='text-2xl font-bold text-green-600'>\n                  {todayStats.completedDeliveries}\n                </div>\n                <div className='text-sm text-gray-600'>Entregas</div>\n              </div>\n              <div className='text-center'>\n                <div className='text-2xl font-bold text-blue-600'>{todayStats.totalDistance}km</div>\n                <div className='text-sm text-gray-600'>Distancia</div>\n              </div>\n              <div className='text-center'>\n                <div className='text-2xl font-bold text-purple-600'>{todayStats.activeTime}</div>\n                <div className='text-sm text-gray-600'>Tiempo Activo</div>\n              </div>\n              <div className='text-center'>\n                <div className='text-2xl font-bold text-orange-600'>{todayStats.efficiency}%</div>\n                <div className='text-sm text-gray-600'>Eficiencia</div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Acciones r√°pidas */}\n        <div className='grid grid-cols-2 gap-3'>\n          <Link href='/driver/deliveries'>\n            <Button variant='outline' className='w-full h-16 flex-col'>\n              <CheckCircle className='h-5 w-5 mb-1' />\n              <span className='text-sm'>Entregas</span>\n            </Button>\n          </Link>\n          <Link href='/driver/profile'>\n            <Button variant='outline' className='w-full h-16 flex-col'>\n              <Truck className='h-5 w-5 mb-1' />\n              <span className='text-sm'>Mi Perfil</span>\n            </Button>\n          </Link>\n        </div>\n      </div>\n    </LoadScript>\n  )\n}\n"],"names":["DriverDashboardPage","dynamic","state","goOnline","goOffline","startRoute","useDriver","activeTab","setActiveTab","useState","routeStops","setRouteStops","isNavigating","setIsNavigating","todayStats","completedDeliveries","totalDistance","activeTime","efficiency","activeRoute","currentRoute","upcomingRoutes","assignedRoutes","filter","route","status","geocodeAddress","address","Promise","resolve","window","google","maps","console","warn","lat","lng","geocoder","Geocoder","geocode","region","results","location","geometry","Math","random","handleStartRoute","orders","log","stopsWithCoordinates","i","length","order","shippingAddress","fullAddress","coordinates","stop","orderId","id","orderNumber","sequence","total","items","totalItems","notes","push","Date","now","error","handleCompleteDelivery","prev","map","currentIndex","findIndex","index","LoadScript","googleMapsApiKey","process","env","NEXT_PUBLIC_GOOGLE_MAPS_API_KEY","libraries","loadingElement","div","className","Card","CardHeader","CardTitle","CardDescription","driver","vehicle_type","license_plate","cn","isOnline","CardContent","Button","onClick","disabled","variant","Play","Pause","currentLocation","MapPin","span","toFixed","Tabs","value","onValueChange","TabsList","TabsTrigger","List","Map","TabsContent","PendingOrdersList","onStartRoute","onSelectOrder","LiveNavigationMap","stops","onCompleteDelivery","onNavigationUpdate","Navigation","h3","p","Link","href","CheckCircle","Truck"],"mappings":"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"}