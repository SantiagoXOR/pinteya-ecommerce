{"version":3,"names":["cov_2lrxkb0480","actualCoverage","s","useDisplayPreferences","f","useNotificationPreferences","usePreferencesValidation","usePrivacyPreferences","useUserPreferences","defaultPreferences","notifications","emailNotifications","orderUpdates","promotions","securityAlerts","marketingEmails","pushNotifications","smsNotifications","display","language","timezone","currency","theme","privacy","profileVisibility","activityTracking","marketingConsent","dataCollection","thirdPartySharing","analyticsOptOut","data","session","_react1","useSession","preferences","setPreferences","_react","useState","isLoading","setIsLoading","error","setError","getPreferences","useCallback","user","id","b","response","fetch","method","headers","ok","Error","json","mergedPreferences","err","console","message","updatePreferences","newPreferences","body","JSON","stringify","prev","updateSection","section","resetToDefaults","useEffect","validateLanguage","supportedLanguages","includes","validateTimezone","Intl","DateTimeFormat","undefined","timeZone","validateCurrency","supportedCurrencies","validateTheme","supportedThemes"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useUserPreferences.ts"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport { useSession } from 'next-auth/react';\r\n\r\n// Tipos para las preferencias de usuario\r\nexport interface NotificationPreferences {\r\n  emailNotifications: boolean;\r\n  orderUpdates: boolean;\r\n  promotions: boolean;\r\n  securityAlerts: boolean;\r\n  marketingEmails: boolean;\r\n  pushNotifications: boolean;\r\n  smsNotifications: boolean;\r\n}\r\n\r\nexport interface DisplayPreferences {\r\n  language: string;\r\n  timezone: string;\r\n  currency: string;\r\n  theme: string;\r\n}\r\n\r\nexport interface PrivacyPreferences {\r\n  profileVisibility: 'public' | 'private';\r\n  activityTracking: boolean;\r\n  marketingConsent: boolean;\r\n  dataCollection: boolean;\r\n  thirdPartySharing: boolean;\r\n  analyticsOptOut: boolean;\r\n}\r\n\r\nexport interface UserPreferences {\r\n  notifications: NotificationPreferences;\r\n  display: DisplayPreferences;\r\n  privacy: PrivacyPreferences;\r\n}\r\n\r\nexport interface UseUserPreferencesReturn {\r\n  preferences: UserPreferences | null;\r\n  isLoading: boolean;\r\n  error: string | null;\r\n  getPreferences: () => Promise<void>;\r\n  updatePreferences: (preferences: Partial<UserPreferences>) => Promise<boolean>;\r\n  updateSection: (section: keyof UserPreferences, data: any) => Promise<boolean>;\r\n  resetToDefaults: () => Promise<boolean>;\r\n}\r\n\r\n// Preferencias por defecto\r\nconst defaultPreferences: UserPreferences = {\r\n  notifications: {\r\n    emailNotifications: true,\r\n    orderUpdates: true,\r\n    promotions: false,\r\n    securityAlerts: true,\r\n    marketingEmails: false,\r\n    pushNotifications: true,\r\n    smsNotifications: false,\r\n  },\r\n  display: {\r\n    language: 'es',\r\n    timezone: 'America/Argentina/Buenos_Aires',\r\n    currency: 'ARS',\r\n    theme: 'system',\r\n  },\r\n  privacy: {\r\n    profileVisibility: 'private',\r\n    activityTracking: true,\r\n    marketingConsent: false,\r\n    dataCollection: true,\r\n    thirdPartySharing: false,\r\n    analyticsOptOut: false,\r\n  },\r\n};\r\n\r\nexport function useUserPreferences(): UseUserPreferencesReturn {\r\n  const { data: session } = useSession();\r\n  const [preferences, setPreferences] = useState<UserPreferences | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // Obtener preferencias del usuario\r\n  const getPreferences = useCallback(async () => {\r\n    if (!session?.user?.id) {\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n\r\n      const response = await fetch('/api/user/preferences', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error al obtener preferencias');\r\n      }\r\n\r\n      const data = await response.json();\r\n      \r\n      // Combinar con valores por defecto para asegurar que todas las propiedades existan\r\n      const mergedPreferences = {\r\n        notifications: { ...defaultPreferences.notifications, ...data.preferences?.notifications },\r\n        display: { ...defaultPreferences.display, ...data.preferences?.display },\r\n        privacy: { ...defaultPreferences.privacy, ...data.preferences?.privacy },\r\n      };\r\n\r\n      setPreferences(mergedPreferences);\r\n    } catch (err) {\r\n      console.error('Error al obtener preferencias:', err);\r\n      setError(err instanceof Error ? err.message : 'Error desconocido');\r\n      // Usar preferencias por defecto en caso de error\r\n      setPreferences(defaultPreferences);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [session?.user?.id]);\r\n\r\n  // Actualizar preferencias completas\r\n  const updatePreferences = useCallback(async (newPreferences: Partial<UserPreferences>): Promise<boolean> => {\r\n    if (!session?.user?.id) {\r\n      setError('Usuario no autenticado');\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      setError(null);\r\n\r\n      const response = await fetch('/api/user/preferences', {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ preferences: newPreferences }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error al actualizar preferencias');\r\n      }\r\n\r\n      const data = await response.json();\r\n      \r\n      // Actualizar estado local\r\n      setPreferences(prev => ({\r\n        ...prev!,\r\n        ...newPreferences,\r\n      }));\r\n\r\n      return true;\r\n    } catch (err) {\r\n      console.error('Error al actualizar preferencias:', err);\r\n      setError(err instanceof Error ? err.message : 'Error desconocido');\r\n      return false;\r\n    }\r\n  }, [session?.user?.id]);\r\n\r\n  // Actualizar sección específica de preferencias\r\n  const updateSection = useCallback(async (\r\n    section: keyof UserPreferences, \r\n    data: any\r\n  ): Promise<boolean> => {\r\n    if (!session?.user?.id) {\r\n      setError('Usuario no autenticado');\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      setError(null);\r\n\r\n      const response = await fetch(`/api/user/preferences/${section}`, {\r\n        method: 'PATCH',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ [section]: data }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Error al actualizar ${section}`);\r\n      }\r\n\r\n      // Actualizar estado local\r\n      setPreferences(prev => ({\r\n        ...prev!,\r\n        [section]: data,\r\n      }));\r\n\r\n      return true;\r\n    } catch (err) {\r\n      console.error(`Error al actualizar ${section}:`, err);\r\n      setError(err instanceof Error ? err.message : 'Error desconocido');\r\n      return false;\r\n    }\r\n  }, [session?.user?.id]);\r\n\r\n  // Resetear a valores por defecto\r\n  const resetToDefaults = useCallback(async (): Promise<boolean> => {\r\n    if (!session?.user?.id) {\r\n      setError('Usuario no autenticado');\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      setError(null);\r\n\r\n      const response = await fetch('/api/user/preferences', {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error al resetear preferencias');\r\n      }\r\n\r\n      // Actualizar estado local con valores por defecto\r\n      setPreferences(defaultPreferences);\r\n\r\n      return true;\r\n    } catch (err) {\r\n      console.error('Error al resetear preferencias:', err);\r\n      setError(err instanceof Error ? err.message : 'Error desconocido');\r\n      return false;\r\n    }\r\n  }, [session?.user?.id]);\r\n\r\n  // Cargar preferencias al montar el componente\r\n  useEffect(() => {\r\n    getPreferences();\r\n  }, [getPreferences]);\r\n\r\n  return {\r\n    preferences,\r\n    isLoading,\r\n    error,\r\n    getPreferences,\r\n    updatePreferences,\r\n    updateSection,\r\n    resetToDefaults,\r\n  };\r\n}\r\n\r\n// Hook auxiliar para obtener preferencias específicas\r\nexport function useNotificationPreferences() {\r\n  const { preferences } = useUserPreferences();\r\n  return preferences?.notifications || defaultPreferences.notifications;\r\n}\r\n\r\nexport function useDisplayPreferences() {\r\n  const { preferences } = useUserPreferences();\r\n  return preferences?.display || defaultPreferences.display;\r\n}\r\n\r\nexport function usePrivacyPreferences() {\r\n  const { preferences } = useUserPreferences();\r\n  return preferences?.privacy || defaultPreferences.privacy;\r\n}\r\n\r\n// Hook para validaciones de preferencias\r\nexport function usePreferencesValidation() {\r\n  const validateLanguage = useCallback((language: string): boolean => {\r\n    const supportedLanguages = ['es', 'en', 'pt'];\r\n    return supportedLanguages.includes(language);\r\n  }, []);\r\n\r\n  const validateTimezone = useCallback((timezone: string): boolean => {\r\n    try {\r\n      Intl.DateTimeFormat(undefined, { timeZone: timezone });\r\n      return true;\r\n    } catch {\r\n      return false;\r\n    }\r\n  }, []);\r\n\r\n  const validateCurrency = useCallback((currency: string): boolean => {\r\n    const supportedCurrencies = ['ARS', 'USD', 'EUR', 'BRL', 'CLP', 'COP', 'MXN', 'PEN'];\r\n    return supportedCurrencies.includes(currency);\r\n  }, []);\r\n\r\n  const validateTheme = useCallback((theme: string): boolean => {\r\n    const supportedThemes = ['light', 'dark', 'system'];\r\n    return supportedThemes.includes(theme);\r\n  }, []);\r\n\r\n  return {\r\n    validateLanguage,\r\n    validateTimezone,\r\n    validateCurrency,\r\n    validateTheme,\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}