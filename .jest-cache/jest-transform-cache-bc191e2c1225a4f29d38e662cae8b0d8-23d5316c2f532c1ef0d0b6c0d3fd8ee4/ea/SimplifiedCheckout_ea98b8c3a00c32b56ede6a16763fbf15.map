{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\Checkout\\SimplifiedCheckout.tsx"],"sourcesContent":["'use client'\n\nimport React, { useState, useEffect } from 'react'\nimport { useRouter } from 'next/navigation'\nimport { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { Badge } from '@/components/ui/badge'\nimport { Separator } from '@/components/ui/separator'\nimport { useCheckout } from '@/hooks/useCheckout'\nimport {\n  ShoppingCart,\n  CreditCard,\n  MapPin,\n  User,\n  Phone,\n  Mail,\n  Package,\n  Truck,\n  CheckCircle,\n  AlertCircle,\n  Loader2,\n} from 'lucide-react'\nimport Image from 'next/image'\nimport { cn } from '@/lib/utils'\nimport { CommercialProductCard } from '@/components/ui/product-card-commercial'\n\nconst SimplifiedCheckout = () => {\n  const router = useRouter()\n  const {\n    formData,\n    isLoading,\n    errors,\n    step,\n    cartItems,\n    totalPrice,\n    shippingCost,\n    discount,\n    finalTotal,\n    appliedCoupon,\n    updateBillingData,\n    updateFormData,\n    processCheckout,\n  } = useCheckout()\n\n  const [currentStep, setCurrentStep] = useState<'form' | 'confirmation' | 'processing'>('form')\n  const [formErrors, setFormErrors] = useState<Record<string, string>>({})\n\n  // Redirigir si el carrito está vacío\n  useEffect(() => {\n    if (cartItems.length === 0 && currentStep === 'form') {\n      router.push('/cart')\n    }\n  }, [cartItems.length, currentStep, router])\n\n  // Validación del formulario\n  const validateForm = () => {\n    const newErrors: Record<string, string> = {}\n\n    if (!formData.billing.firstName.trim()) {\n      newErrors.firstName = 'El nombre es requerido'\n    }\n    if (!formData.billing.lastName.trim()) {\n      newErrors.lastName = 'El apellido es requerido'\n    }\n    if (!formData.billing.email.trim()) {\n      newErrors.email = 'El email es requerido'\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.billing.email)) {\n      newErrors.email = 'Email inválido'\n    }\n    if (!formData.billing.phone.trim()) {\n      newErrors.phone = 'El teléfono es requerido'\n    }\n    if (!formData.billing.streetAddress.trim()) {\n      newErrors.streetAddress = 'La dirección es requerida'\n    }\n    if (!formData.billing.city.trim()) {\n      newErrors.city = 'La ciudad es requerida'\n    }\n    if (!formData.billing.state.trim()) {\n      newErrors.state = 'La provincia es requerida'\n    }\n    if (!formData.billing.zipCode.trim()) {\n      newErrors.zipCode = 'El código postal es requerido'\n    }\n\n    setFormErrors(newErrors)\n    return Object.keys(newErrors).length === 0\n  }\n\n  const handleInputChange = (field: string, value: string) => {\n    updateBillingData({ [field]: value })\n    // Limpiar error del campo cuando el usuario empiece a escribir\n    if (formErrors[field]) {\n      setFormErrors(prev => ({ ...prev, [field]: '' }))\n    }\n  }\n\n  const handleContinueToConfirmation = (e: React.FormEvent) => {\n    e.preventDefault()\n    if (validateForm()) {\n      setCurrentStep('confirmation')\n    }\n  }\n\n  const handleConfirmOrder = async () => {\n    setCurrentStep('processing')\n    await processCheckout()\n  }\n\n  const handleBackToForm = () => {\n    setCurrentStep('form')\n  }\n\n  // Renderizar paso del formulario\n  const renderFormStep = () => (\n    <div className='grid grid-cols-1 lg:grid-cols-3 gap-8'>\n      {/* Formulario Principal */}\n      <div className='lg:col-span-2'>\n        <form onSubmit={handleContinueToConfirmation} className='space-y-6'>\n          {/* Información Personal */}\n          <Card>\n            <CardHeader>\n              <CardTitle className='flex items-center gap-2'>\n                <User className='w-5 h-5 text-primary' />\n                Información Personal\n              </CardTitle>\n            </CardHeader>\n            <CardContent className='space-y-4'>\n              <div className='grid grid-cols-1 md:grid-cols-2 gap-4'>\n                <div>\n                  <label className='block text-sm font-medium text-gray-700 mb-1'>Nombre *</label>\n                  <Input\n                    value={formData.billing.firstName}\n                    onChange={e => handleInputChange('firstName', e.target.value)}\n                    placeholder='Tu nombre'\n                    className={cn(formErrors.firstName && 'border-red-500')}\n                  />\n                  {formErrors.firstName && (\n                    <p className='text-red-500 text-xs mt-1'>{formErrors.firstName}</p>\n                  )}\n                </div>\n                <div>\n                  <label className='block text-sm font-medium text-gray-700 mb-1'>Apellido *</label>\n                  <Input\n                    value={formData.billing.lastName}\n                    onChange={e => handleInputChange('lastName', e.target.value)}\n                    placeholder='Tu apellido'\n                    className={cn(formErrors.lastName && 'border-red-500')}\n                  />\n                  {formErrors.lastName && (\n                    <p className='text-red-500 text-xs mt-1'>{formErrors.lastName}</p>\n                  )}\n                </div>\n              </div>\n\n              <div className='grid grid-cols-1 md:grid-cols-2 gap-4'>\n                <div>\n                  <label className='block text-sm font-medium text-gray-700 mb-1'>Email *</label>\n                  <Input\n                    type='email'\n                    value={formData.billing.email}\n                    onChange={e => handleInputChange('email', e.target.value)}\n                    placeholder='tu@email.com'\n                    className={cn(formErrors.email && 'border-red-500')}\n                  />\n                  {formErrors.email && (\n                    <p className='text-red-500 text-xs mt-1'>{formErrors.email}</p>\n                  )}\n                </div>\n                <div>\n                  <label className='block text-sm font-medium text-gray-700 mb-1'>Teléfono *</label>\n                  <Input\n                    type='tel'\n                    value={formData.billing.phone}\n                    onChange={e => handleInputChange('phone', e.target.value)}\n                    placeholder='11 1234-5678'\n                    className={cn(formErrors.phone && 'border-red-500')}\n                  />\n                  {formErrors.phone && (\n                    <p className='text-red-500 text-xs mt-1'>{formErrors.phone}</p>\n                  )}\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Dirección de Entrega */}\n          <Card>\n            <CardHeader>\n              <CardTitle className='flex items-center gap-2'>\n                <MapPin className='w-5 h-5 text-primary' />\n                Dirección de Entrega\n              </CardTitle>\n            </CardHeader>\n            <CardContent className='space-y-4'>\n              <div>\n                <label className='block text-sm font-medium text-gray-700 mb-1'>Dirección *</label>\n                <Input\n                  value={formData.billing.streetAddress}\n                  onChange={e => handleInputChange('streetAddress', e.target.value)}\n                  placeholder='Calle y número'\n                  className={cn(formErrors.streetAddress && 'border-red-500')}\n                />\n                {formErrors.streetAddress && (\n                  <p className='text-red-500 text-xs mt-1'>{formErrors.streetAddress}</p>\n                )}\n              </div>\n\n              <div>\n                <label className='block text-sm font-medium text-gray-700 mb-1'>\n                  Departamento/Piso (opcional)\n                </label>\n                <Input\n                  value={formData.billing.apartment}\n                  onChange={e => handleInputChange('apartment', e.target.value)}\n                  placeholder='Depto, piso, etc.'\n                />\n              </div>\n\n              <div className='grid grid-cols-1 md:grid-cols-3 gap-4'>\n                <div>\n                  <label className='block text-sm font-medium text-gray-700 mb-1'>Ciudad *</label>\n                  <Input\n                    value={formData.billing.city}\n                    onChange={e => handleInputChange('city', e.target.value)}\n                    placeholder='Ciudad'\n                    className={cn(formErrors.city && 'border-red-500')}\n                  />\n                  {formErrors.city && (\n                    <p className='text-red-500 text-xs mt-1'>{formErrors.city}</p>\n                  )}\n                </div>\n                <div>\n                  <label className='block text-sm font-medium text-gray-700 mb-1'>\n                    Provincia *\n                  </label>\n                  <Input\n                    value={formData.billing.state}\n                    onChange={e => handleInputChange('state', e.target.value)}\n                    placeholder='Provincia'\n                    className={cn(formErrors.state && 'border-red-500')}\n                  />\n                  {formErrors.state && (\n                    <p className='text-red-500 text-xs mt-1'>{formErrors.state}</p>\n                  )}\n                </div>\n                <div>\n                  <label className='block text-sm font-medium text-gray-700 mb-1'>\n                    Código Postal *\n                  </label>\n                  <Input\n                    value={formData.billing.zipCode}\n                    onChange={e => handleInputChange('zipCode', e.target.value)}\n                    placeholder='CP'\n                    className={cn(formErrors.zipCode && 'border-red-500')}\n                  />\n                  {formErrors.zipCode && (\n                    <p className='text-red-500 text-xs mt-1'>{formErrors.zipCode}</p>\n                  )}\n                </div>\n              </div>\n\n              <div>\n                <label className='block text-sm font-medium text-gray-700 mb-1'>\n                  Observaciones de entrega (opcional)\n                </label>\n                <textarea\n                  value={formData.billing.observations || ''}\n                  onChange={e => handleInputChange('observations', e.target.value)}\n                  placeholder='Ej: Barrio específico, características de la casa, horarios de entrega preferidos...'\n                  rows={3}\n                  className='w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent resize-none'\n                />\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Método de Envío */}\n          <Card>\n            <CardHeader>\n              <CardTitle className='flex items-center gap-2'>\n                <Truck className='w-5 h-5 text-primary' />\n                Método de Envío\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className='space-y-3'>\n                <label className='flex items-center gap-3 p-3 border rounded-lg cursor-pointer hover:bg-gray-50'>\n                  <input\n                    type='radio'\n                    name='shipping'\n                    value='free'\n                    checked={formData.shippingMethod === 'free'}\n                    onChange={e =>\n                      updateFormData({\n                        shippingMethod: e.target.value as 'free' | 'express' | 'pickup',\n                      })\n                    }\n                    className='text-primary'\n                  />\n                  <div className='flex-1'>\n                    <div className='font-medium'>Envío Estándar</div>\n                    <div className='text-sm text-gray-600'>5-7 días hábiles</div>\n                  </div>\n                  <div className='font-semibold'>{totalPrice >= 25000 ? 'Gratis' : '$2.500'}</div>\n                </label>\n\n                <label className='flex items-center gap-3 p-3 border rounded-lg cursor-pointer hover:bg-gray-50'>\n                  <input\n                    type='radio'\n                    name='shipping'\n                    value='express'\n                    checked={formData.shippingMethod === 'express'}\n                    onChange={e =>\n                      updateFormData({\n                        shippingMethod: e.target.value as 'free' | 'express' | 'pickup',\n                      })\n                    }\n                    className='text-primary'\n                  />\n                  <div className='flex-1'>\n                    <div className='font-medium'>Envío Express</div>\n                    <div className='text-sm text-gray-600'>1-2 días hábiles</div>\n                  </div>\n                  <div className='font-semibold'>$5.000</div>\n                </label>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Método de Pago */}\n          <Card>\n            <CardHeader>\n              <CardTitle className='flex items-center gap-2'>\n                <CreditCard className='w-5 h-5 text-primary' />\n                Método de Pago\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className='flex items-center gap-3 p-4 border rounded-lg bg-primary/5'>\n                <div className='w-10 h-10 bg-primary rounded-lg flex items-center justify-center'>\n                  <span className='text-white font-bold text-sm'>MP</span>\n                </div>\n                <div className='flex-1'>\n                  <div className='font-medium'>MercadoPago</div>\n                  <div className='text-sm text-gray-600'>Tarjetas, efectivo, transferencias</div>\n                </div>\n                <CheckCircle className='w-5 h-5 text-green-500' />\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Botón Continuar */}\n          <div className='flex justify-end'>\n            <Button type='submit' size='lg' className='min-w-[200px]'>\n              Revisar Pedido\n            </Button>\n          </div>\n        </form>\n      </div>\n\n      {/* Resumen del Pedido */}\n      <div className='lg:col-span-1'>{renderOrderSummary()}</div>\n    </div>\n  )\n\n  // Renderizar resumen del pedido\n  const renderOrderSummary = () => (\n    <Card className='sticky top-4'>\n      <CardHeader>\n        <CardTitle className='flex items-center gap-2'>\n          <ShoppingCart className='w-5 h-5 text-primary' />\n          Resumen del Pedido\n          <Badge variant='outline' size='sm'>\n            {cartItems.length} {cartItems.length === 1 ? 'item' : 'items'}\n          </Badge>\n        </CardTitle>\n      </CardHeader>\n      <CardContent className='space-y-4'>\n        {/* Items del carrito con ProductCard */}\n        <div className='max-h-80 overflow-y-auto space-y-4'>\n          {cartItems.map((item: any, index: number) => (\n            <div key={index} className='border-b border-gray-100 pb-4 last:border-b-0'>\n              <CommercialProductCard\n                image={\n                  item.imgs?.thumbnails?.[0] ||\n                  item.imgs?.previews?.[0] ||\n                  '/images/products/placeholder.svg'\n                }\n                title={item.title}\n                brand={item.brand || 'Marca'}\n                price={item.discountedPrice}\n                originalPrice={item.discountedPrice < item.price ? item.price : undefined}\n                discount={\n                  item.discountedPrice < item.price\n                    ? `${Math.round(((item.price - item.discountedPrice) / item.price) * 100)}%`\n                    : undefined\n                }\n                stock={item.quantity} // Mostrar cantidad en el carrito como stock\n                productId={item.id}\n                cta={`Total: $${(item.discountedPrice * item.quantity).toLocaleString()}`}\n                onAddToCart={() => {\n                  // En checkout, no necesitamos agregar más al carrito\n                }}\n                showCartAnimation={false}\n                freeShipping={item.discountedPrice >= 15000}\n                shippingText={item.discountedPrice >= 15000 ? 'Envío gratis' : 'En carrito'}\n              />\n            </div>\n          ))}\n        </div>\n\n        <Separator />\n\n        {/* Totales */}\n        <div className='space-y-2'>\n          <div className='flex justify-between text-sm'>\n            <span>Subtotal</span>\n            <span>${totalPrice.toLocaleString()}</span>\n          </div>\n          <div className='flex justify-between text-sm'>\n            <span>Envío</span>\n            <span>\n              {shippingCost === 0 ? (\n                <span className='text-green-600 font-medium'>Gratis</span>\n              ) : (\n                `$${shippingCost.toLocaleString()}`\n              )}\n            </span>\n          </div>\n          {discount > 0 && (\n            <div className='flex justify-between text-sm text-green-600'>\n              <span>Descuento</span>\n              <span>-${discount.toLocaleString()}</span>\n            </div>\n          )}\n          <Separator />\n          <div className='flex justify-between font-semibold text-lg'>\n            <span>Total</span>\n            <span className='text-primary'>${finalTotal ? finalTotal.toLocaleString() : '0'}</span>\n          </div>\n        </div>\n\n        {/* Beneficios */}\n        <div className='bg-green-50 p-3 rounded-lg'>\n          <div className='flex items-center gap-2 text-green-700 text-sm'>\n            <CheckCircle className='w-4 h-4' />\n            <span className='font-medium'>Compra protegida</span>\n          </div>\n          <p className='text-xs text-green-600 mt-1'>Tu dinero está protegido con MercadoPago</p>\n        </div>\n      </CardContent>\n    </Card>\n  )\n\n  // Renderizar paso de confirmación\n  const renderConfirmationStep = () => (\n    <div className='max-w-4xl mx-auto'>\n      <div className='text-center mb-8'>\n        <CheckCircle className='w-16 h-16 text-green-500 mx-auto mb-4' />\n        <h2 className='text-2xl font-bold text-gray-900 mb-2'>¡Confirma tu Pedido!</h2>\n        <p className='text-gray-600'>Revisa todos los datos antes de proceder al pago</p>\n      </div>\n\n      <div className='grid grid-cols-1 lg:grid-cols-2 gap-8'>\n        {/* Datos del pedido */}\n        <div className='space-y-6'>\n          {/* Información personal */}\n          <Card>\n            <CardHeader>\n              <CardTitle className='text-lg'>Información Personal</CardTitle>\n            </CardHeader>\n            <CardContent className='space-y-2'>\n              <p>\n                <strong>Nombre:</strong> {formData.billing.firstName} {formData.billing.lastName}\n              </p>\n              <p>\n                <strong>Email:</strong> {formData.billing.email}\n              </p>\n              <p>\n                <strong>Teléfono:</strong> {formData.billing.phone}\n              </p>\n            </CardContent>\n          </Card>\n\n          {/* Dirección de entrega */}\n          <Card>\n            <CardHeader>\n              <CardTitle className='text-lg'>Dirección de Entrega</CardTitle>\n            </CardHeader>\n            <CardContent className='space-y-2'>\n              <p>{formData.billing.streetAddress}</p>\n              {formData.billing.apartment && <p>{formData.billing.apartment}</p>}\n              <p>\n                {formData.billing.city}, {formData.billing.state}\n              </p>\n              <p>CP: {formData.billing.zipCode}</p>\n              <p>{formData.billing.country}</p>\n            </CardContent>\n          </Card>\n\n          {/* Método de envío y pago */}\n          <Card>\n            <CardHeader>\n              <CardTitle className='text-lg'>Métodos Seleccionados</CardTitle>\n            </CardHeader>\n            <CardContent className='space-y-3'>\n              <div className='flex items-center gap-2'>\n                <Truck className='w-4 h-4 text-primary' />\n                <span>\n                  {formData.shippingMethod === 'free'\n                    ? 'Envío Estándar (5-7 días)'\n                    : 'Envío Express (1-2 días)'}\n                </span>\n              </div>\n              <div className='flex items-center gap-2'>\n                <CreditCard className='w-4 h-4 text-primary' />\n                <span>MercadoPago</span>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Resumen del pedido */}\n        <div>{renderOrderSummary()}</div>\n      </div>\n\n      {/* Botones de acción */}\n      <div className='flex justify-between mt-8'>\n        <Button variant='outline' onClick={handleBackToForm} size='lg'>\n          Volver a Editar\n        </Button>\n        <Button\n          onClick={handleConfirmOrder}\n          size='lg'\n          className='min-w-[200px]'\n          disabled={isLoading}\n        >\n          {isLoading ? (\n            <>\n              <Loader2 className='w-4 h-4 mr-2 animate-spin' />\n              Procesando...\n            </>\n          ) : (\n            'Confirmar y Pagar'\n          )}\n        </Button>\n      </div>\n    </div>\n  )\n\n  // Renderizar paso de procesamiento\n  const renderProcessingStep = () => (\n    <div className='text-center py-12'>\n      <Loader2 className='w-16 h-16 text-primary mx-auto mb-4 animate-spin' />\n      <h2 className='text-2xl font-bold text-gray-900 mb-2'>Procesando tu Pedido</h2>\n      <p className='text-gray-600 mb-4'>\n        Te estamos redirigiendo a MercadoPago para completar el pago...\n      </p>\n      <div className='max-w-md mx-auto bg-blue-50 p-4 rounded-lg'>\n        <p className='text-sm text-blue-700'>\n          No cierres esta ventana. Serás redirigido automáticamente.\n        </p>\n      </div>\n    </div>\n  )\n\n  // Mostrar errores generales\n  if (errors.general) {\n    return (\n      <div className='max-w-2xl mx-auto text-center py-12'>\n        <AlertCircle className='w-16 h-16 text-red-500 mx-auto mb-4' />\n        <h2 className='text-2xl font-bold text-gray-900 mb-2'>Error en el Checkout</h2>\n        <p className='text-red-600 mb-4'>{errors.general}</p>\n        <Button onClick={() => window.location.reload()}>Intentar Nuevamente</Button>\n      </div>\n    )\n  }\n\n  return (\n    <div className='min-h-screen bg-gray-50 py-8'>\n      <div className='max-w-7xl mx-auto px-4 sm:px-6 lg:px-8'>\n        {/* Header */}\n        <div className='text-center mb-8'>\n          <h1 className='text-3xl font-bold text-gray-900 mb-2'>Finalizar Compra</h1>\n          <div className='flex items-center justify-center gap-4 text-sm text-gray-600'>\n            <span\n              className={cn(\n                'flex items-center gap-1',\n                currentStep === 'form' && 'text-primary font-medium'\n              )}\n            >\n              <span\n                className={cn(\n                  'w-6 h-6 rounded-full flex items-center justify-center text-xs',\n                  currentStep === 'form' ? 'bg-primary text-white' : 'bg-gray-200'\n                )}\n              >\n                1\n              </span>\n              Datos\n            </span>\n            <div className='w-8 h-px bg-gray-300' />\n            <span\n              className={cn(\n                'flex items-center gap-1',\n                currentStep === 'confirmation' && 'text-primary font-medium'\n              )}\n            >\n              <span\n                className={cn(\n                  'w-6 h-6 rounded-full flex items-center justify-center text-xs',\n                  currentStep === 'confirmation' ? 'bg-primary text-white' : 'bg-gray-200'\n                )}\n              >\n                2\n              </span>\n              Confirmación\n            </span>\n            <div className='w-8 h-px bg-gray-300' />\n            <span\n              className={cn(\n                'flex items-center gap-1',\n                currentStep === 'processing' && 'text-primary font-medium'\n              )}\n            >\n              <span\n                className={cn(\n                  'w-6 h-6 rounded-full flex items-center justify-center text-xs',\n                  currentStep === 'processing' ? 'bg-primary text-white' : 'bg-gray-200'\n                )}\n              >\n                3\n              </span>\n              Pago\n            </span>\n          </div>\n        </div>\n\n        {/* Contenido según el paso */}\n        {currentStep === 'form' && renderFormStep()}\n        {currentStep === 'confirmation' && renderConfirmationStep()}\n        {currentStep === 'processing' && renderProcessingStep()}\n      </div>\n    </div>\n  )\n}\n\nexport default SimplifiedCheckout\n"],"names":["SimplifiedCheckout","router","useRouter","formData","isLoading","errors","step","cartItems","totalPrice","shippingCost","discount","finalTotal","appliedCoupon","updateBillingData","updateFormData","processCheckout","useCheckout","currentStep","setCurrentStep","useState","formErrors","setFormErrors","useEffect","length","push","validateForm","newErrors","billing","firstName","trim","lastName","email","test","phone","streetAddress","city","state","zipCode","Object","keys","handleInputChange","field","value","prev","handleContinueToConfirmation","e","preventDefault","handleConfirmOrder","handleBackToForm","renderFormStep","div","className","form","onSubmit","Card","CardHeader","CardTitle","User","CardContent","label","Input","onChange","target","placeholder","cn","p","type","MapPin","apartment","textarea","observations","rows","Truck","input","name","checked","shippingMethod","CreditCard","span","CheckCircle","Button","size","renderOrderSummary","ShoppingCart","Badge","variant","map","item","index","CommercialProductCard","image","imgs","thumbnails","previews","title","brand","price","discountedPrice","originalPrice","undefined","Math","round","stock","quantity","productId","id","cta","toLocaleString","onAddToCart","showCartAnimation","freeShipping","shippingText","Separator","renderConfirmationStep","h2","strong","country","onClick","disabled","Loader2","renderProcessingStep","general","AlertCircle","window","location","reload","h1"],"mappings":"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"}