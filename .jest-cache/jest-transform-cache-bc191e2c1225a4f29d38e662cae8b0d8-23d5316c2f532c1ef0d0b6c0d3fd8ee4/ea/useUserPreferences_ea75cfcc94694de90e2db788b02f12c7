fb020c88953aff6739afd2f55863c23b
'use client';
"use strict";

/* istanbul ignore next */
function cov_2lrxkb0480() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useUserPreferences.ts";
  var hash = "b67604b6f874f7565b11819dd384030d14dd9d1d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useUserPreferences.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 28,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 37
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 42
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 40
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 37
        }
      },
      "8": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 34
        }
      },
      "9": {
        start: {
          line: 29,
          column: 15
        },
        end: {
          line: 29,
          column: 31
        }
      },
      "10": {
        start: {
          line: 30,
          column: 16
        },
        end: {
          line: 30,
          column: 42
        }
      },
      "11": {
        start: {
          line: 32,
          column: 27
        },
        end: {
          line: 56,
          column: 1
        }
      },
      "12": {
        start: {
          line: 58,
          column: 30
        },
        end: {
          line: 58,
          column: 55
        }
      },
      "13": {
        start: {
          line: 59,
          column: 42
        },
        end: {
          line: 59,
          column: 68
        }
      },
      "14": {
        start: {
          line: 60,
          column: 38
        },
        end: {
          line: 60,
          column: 64
        }
      },
      "15": {
        start: {
          line: 61,
          column: 30
        },
        end: {
          line: 61,
          column: 56
        }
      },
      "16": {
        start: {
          line: 63,
          column: 27
        },
        end: {
          line: 107,
          column: 6
        }
      },
      "17": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 67,
          column: 9
        }
      },
      "18": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 32
        }
      },
      "19": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 66,
          column: 19
        }
      },
      "20": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 104,
          column: 9
        }
      },
      "21": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 31
        }
      },
      "22": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 70,
          column: 27
        }
      },
      "23": {
        start: {
          line: 71,
          column: 29
        },
        end: {
          line: 76,
          column: 14
        }
      },
      "24": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 79,
          column: 13
        }
      },
      "25": {
        start: {
          line: 78,
          column: 16
        },
        end: {
          line: 78,
          column: 65
        }
      },
      "26": {
        start: {
          line: 80,
          column: 25
        },
        end: {
          line: 80,
          column: 46
        }
      },
      "27": {
        start: {
          line: 82,
          column: 38
        },
        end: {
          line: 95,
          column: 13
        }
      },
      "28": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 96,
          column: 46
        }
      },
      "29": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 98,
          column: 65
        }
      },
      "30": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 79
        }
      },
      "31": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 101,
          column: 47
        }
      },
      "32": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 32
        }
      },
      "33": {
        start: {
          line: 109,
          column: 30
        },
        end: {
          line: 142,
          column: 6
        }
      },
      "34": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 113,
          column: 9
        }
      },
      "35": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 47
        }
      },
      "36": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 112,
          column: 25
        }
      },
      "37": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 139,
          column: 9
        }
      },
      "38": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 115,
          column: 27
        }
      },
      "39": {
        start: {
          line: 116,
          column: 29
        },
        end: {
          line: 124,
          column: 14
        }
      },
      "40": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 127,
          column: 13
        }
      },
      "41": {
        start: {
          line: 126,
          column: 16
        },
        end: {
          line: 126,
          column: 68
        }
      },
      "42": {
        start: {
          line: 128,
          column: 25
        },
        end: {
          line: 128,
          column: 46
        }
      },
      "43": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 133,
          column: 20
        }
      },
      "44": {
        start: {
          line: 130,
          column: 36
        },
        end: {
          line: 133,
          column: 17
        }
      },
      "45": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 134,
          column: 24
        }
      },
      "46": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 136,
          column: 68
        }
      },
      "47": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 79
        }
      },
      "48": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 138,
          column: 25
        }
      },
      "49": {
        start: {
          line: 144,
          column: 26
        },
        end: {
          line: 176,
          column: 6
        }
      },
      "50": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 148,
          column: 9
        }
      },
      "51": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 146,
          column: 47
        }
      },
      "52": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 147,
          column: 25
        }
      },
      "53": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 173,
          column: 9
        }
      },
      "54": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 150,
          column: 27
        }
      },
      "55": {
        start: {
          line: 151,
          column: 29
        },
        end: {
          line: 159,
          column: 14
        }
      },
      "56": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 162,
          column: 13
        }
      },
      "57": {
        start: {
          line: 161,
          column: 16
        },
        end: {
          line: 161,
          column: 66
        }
      },
      "58": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 167,
          column: 20
        }
      },
      "59": {
        start: {
          line: 164,
          column: 36
        },
        end: {
          line: 167,
          column: 17
        }
      },
      "60": {
        start: {
          line: 168,
          column: 12
        },
        end: {
          line: 168,
          column: 24
        }
      },
      "61": {
        start: {
          line: 170,
          column: 12
        },
        end: {
          line: 170,
          column: 66
        }
      },
      "62": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 171,
          column: 79
        }
      },
      "63": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 172,
          column: 25
        }
      },
      "64": {
        start: {
          line: 178,
          column: 28
        },
        end: {
          line: 204,
          column: 6
        }
      },
      "65": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 182,
          column: 9
        }
      },
      "66": {
        start: {
          line: 180,
          column: 12
        },
        end: {
          line: 180,
          column: 47
        }
      },
      "67": {
        start: {
          line: 181,
          column: 12
        },
        end: {
          line: 181,
          column: 25
        }
      },
      "68": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 201,
          column: 9
        }
      },
      "69": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 184,
          column: 27
        }
      },
      "70": {
        start: {
          line: 185,
          column: 29
        },
        end: {
          line: 190,
          column: 14
        }
      },
      "71": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 193,
          column: 13
        }
      },
      "72": {
        start: {
          line: 192,
          column: 16
        },
        end: {
          line: 192,
          column: 66
        }
      },
      "73": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 195,
          column: 47
        }
      },
      "74": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 196,
          column: 24
        }
      },
      "75": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 198,
          column: 66
        }
      },
      "76": {
        start: {
          line: 199,
          column: 12
        },
        end: {
          line: 199,
          column: 79
        }
      },
      "77": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 200,
          column: 25
        }
      },
      "78": {
        start: {
          line: 206,
          column: 4
        },
        end: {
          line: 210,
          column: 7
        }
      },
      "79": {
        start: {
          line: 207,
          column: 8
        },
        end: {
          line: 207,
          column: 25
        }
      },
      "80": {
        start: {
          line: 211,
          column: 4
        },
        end: {
          line: 219,
          column: 6
        }
      },
      "81": {
        start: {
          line: 222,
          column: 28
        },
        end: {
          line: 222,
          column: 48
        }
      },
      "82": {
        start: {
          line: 223,
          column: 4
        },
        end: {
          line: 223,
          column: 74
        }
      },
      "83": {
        start: {
          line: 226,
          column: 28
        },
        end: {
          line: 226,
          column: 48
        }
      },
      "84": {
        start: {
          line: 227,
          column: 4
        },
        end: {
          line: 227,
          column: 62
        }
      },
      "85": {
        start: {
          line: 230,
          column: 28
        },
        end: {
          line: 230,
          column: 48
        }
      },
      "86": {
        start: {
          line: 231,
          column: 4
        },
        end: {
          line: 231,
          column: 62
        }
      },
      "87": {
        start: {
          line: 234,
          column: 29
        },
        end: {
          line: 241,
          column: 10
        }
      },
      "88": {
        start: {
          line: 235,
          column: 35
        },
        end: {
          line: 239,
          column: 9
        }
      },
      "89": {
        start: {
          line: 240,
          column: 8
        },
        end: {
          line: 240,
          column: 53
        }
      },
      "90": {
        start: {
          line: 242,
          column: 29
        },
        end: {
          line: 251,
          column: 10
        }
      },
      "91": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 250,
          column: 9
        }
      },
      "92": {
        start: {
          line: 244,
          column: 12
        },
        end: {
          line: 246,
          column: 15
        }
      },
      "93": {
        start: {
          line: 247,
          column: 12
        },
        end: {
          line: 247,
          column: 24
        }
      },
      "94": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 249,
          column: 25
        }
      },
      "95": {
        start: {
          line: 252,
          column: 29
        },
        end: {
          line: 264,
          column: 10
        }
      },
      "96": {
        start: {
          line: 253,
          column: 36
        },
        end: {
          line: 262,
          column: 9
        }
      },
      "97": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 263,
          column: 54
        }
      },
      "98": {
        start: {
          line: 265,
          column: 26
        },
        end: {
          line: 272,
          column: 10
        }
      },
      "99": {
        start: {
          line: 266,
          column: 32
        },
        end: {
          line: 270,
          column: 9
        }
      },
      "100": {
        start: {
          line: 271,
          column: 8
        },
        end: {
          line: 271,
          column: 47
        }
      },
      "101": {
        start: {
          line: 273,
          column: 4
        },
        end: {
          line: 278,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 33
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 38
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 36
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 33
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 30
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "6": {
        name: "useUserPreferences",
        decl: {
          start: {
            line: 57,
            column: 9
          },
          end: {
            line: 57,
            column: 27
          }
        },
        loc: {
          start: {
            line: 57,
            column: 30
          },
          end: {
            line: 220,
            column: 1
          }
        },
        line: 57
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 63,
            column: 51
          },
          end: {
            line: 63,
            column: 52
          }
        },
        loc: {
          start: {
            line: 63,
            column: 61
          },
          end: {
            line: 105,
            column: 5
          }
        },
        line: 63
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 109,
            column: 54
          },
          end: {
            line: 109,
            column: 55
          }
        },
        loc: {
          start: {
            line: 109,
            column: 78
          },
          end: {
            line: 140,
            column: 5
          }
        },
        line: 109
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 130,
            column: 27
          },
          end: {
            line: 130,
            column: 28
          }
        },
        loc: {
          start: {
            line: 130,
            column: 36
          },
          end: {
            line: 133,
            column: 17
          }
        },
        line: 130
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 144,
            column: 50
          },
          end: {
            line: 144,
            column: 51
          }
        },
        loc: {
          start: {
            line: 144,
            column: 73
          },
          end: {
            line: 174,
            column: 5
          }
        },
        line: 144
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 164,
            column: 27
          },
          end: {
            line: 164,
            column: 28
          }
        },
        loc: {
          start: {
            line: 164,
            column: 36
          },
          end: {
            line: 167,
            column: 17
          }
        },
        line: 164
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 178,
            column: 52
          },
          end: {
            line: 178,
            column: 53
          }
        },
        loc: {
          start: {
            line: 178,
            column: 62
          },
          end: {
            line: 202,
            column: 5
          }
        },
        line: 178
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 206,
            column: 26
          },
          end: {
            line: 206,
            column: 27
          }
        },
        loc: {
          start: {
            line: 206,
            column: 30
          },
          end: {
            line: 208,
            column: 5
          }
        },
        line: 206
      },
      "14": {
        name: "useNotificationPreferences",
        decl: {
          start: {
            line: 221,
            column: 9
          },
          end: {
            line: 221,
            column: 35
          }
        },
        loc: {
          start: {
            line: 221,
            column: 38
          },
          end: {
            line: 224,
            column: 1
          }
        },
        line: 221
      },
      "15": {
        name: "useDisplayPreferences",
        decl: {
          start: {
            line: 225,
            column: 9
          },
          end: {
            line: 225,
            column: 30
          }
        },
        loc: {
          start: {
            line: 225,
            column: 33
          },
          end: {
            line: 228,
            column: 1
          }
        },
        line: 225
      },
      "16": {
        name: "usePrivacyPreferences",
        decl: {
          start: {
            line: 229,
            column: 9
          },
          end: {
            line: 229,
            column: 30
          }
        },
        loc: {
          start: {
            line: 229,
            column: 33
          },
          end: {
            line: 232,
            column: 1
          }
        },
        line: 229
      },
      "17": {
        name: "usePreferencesValidation",
        decl: {
          start: {
            line: 233,
            column: 9
          },
          end: {
            line: 233,
            column: 33
          }
        },
        loc: {
          start: {
            line: 233,
            column: 36
          },
          end: {
            line: 279,
            column: 1
          }
        },
        line: 233
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 234,
            column: 53
          },
          end: {
            line: 234,
            column: 54
          }
        },
        loc: {
          start: {
            line: 234,
            column: 65
          },
          end: {
            line: 241,
            column: 5
          }
        },
        line: 234
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 242,
            column: 53
          },
          end: {
            line: 242,
            column: 54
          }
        },
        loc: {
          start: {
            line: 242,
            column: 65
          },
          end: {
            line: 251,
            column: 5
          }
        },
        line: 242
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 252,
            column: 53
          },
          end: {
            line: 252,
            column: 54
          }
        },
        loc: {
          start: {
            line: 252,
            column: 65
          },
          end: {
            line: 264,
            column: 5
          }
        },
        line: 252
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 265,
            column: 50
          },
          end: {
            line: 265,
            column: 51
          }
        },
        loc: {
          start: {
            line: 265,
            column: 59
          },
          end: {
            line: 272,
            column: 5
          }
        },
        line: 265
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 67,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 67,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "1": {
        loc: {
          start: {
            line: 77,
            column: 12
          },
          end: {
            line: 79,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 12
          },
          end: {
            line: 79,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "2": {
        loc: {
          start: {
            line: 99,
            column: 21
          },
          end: {
            line: 99,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 99,
            column: 44
          },
          end: {
            line: 99,
            column: 55
          }
        }, {
          start: {
            line: 99,
            column: 58
          },
          end: {
            line: 99,
            column: 77
          }
        }],
        line: 99
      },
      "3": {
        loc: {
          start: {
            line: 110,
            column: 8
          },
          end: {
            line: 113,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 8
          },
          end: {
            line: 113,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 110
      },
      "4": {
        loc: {
          start: {
            line: 125,
            column: 12
          },
          end: {
            line: 127,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 12
          },
          end: {
            line: 127,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "5": {
        loc: {
          start: {
            line: 137,
            column: 21
          },
          end: {
            line: 137,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 137,
            column: 44
          },
          end: {
            line: 137,
            column: 55
          }
        }, {
          start: {
            line: 137,
            column: 58
          },
          end: {
            line: 137,
            column: 77
          }
        }],
        line: 137
      },
      "6": {
        loc: {
          start: {
            line: 145,
            column: 8
          },
          end: {
            line: 148,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 145,
            column: 8
          },
          end: {
            line: 148,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 145
      },
      "7": {
        loc: {
          start: {
            line: 160,
            column: 12
          },
          end: {
            line: 162,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 160,
            column: 12
          },
          end: {
            line: 162,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 160
      },
      "8": {
        loc: {
          start: {
            line: 171,
            column: 21
          },
          end: {
            line: 171,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 171,
            column: 44
          },
          end: {
            line: 171,
            column: 55
          }
        }, {
          start: {
            line: 171,
            column: 58
          },
          end: {
            line: 171,
            column: 77
          }
        }],
        line: 171
      },
      "9": {
        loc: {
          start: {
            line: 179,
            column: 8
          },
          end: {
            line: 182,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 179,
            column: 8
          },
          end: {
            line: 182,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 179
      },
      "10": {
        loc: {
          start: {
            line: 191,
            column: 12
          },
          end: {
            line: 193,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 191,
            column: 12
          },
          end: {
            line: 193,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 191
      },
      "11": {
        loc: {
          start: {
            line: 199,
            column: 21
          },
          end: {
            line: 199,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 199,
            column: 44
          },
          end: {
            line: 199,
            column: 55
          }
        }, {
          start: {
            line: 199,
            column: 58
          },
          end: {
            line: 199,
            column: 77
          }
        }],
        line: 199
      },
      "12": {
        loc: {
          start: {
            line: 223,
            column: 11
          },
          end: {
            line: 223,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 223,
            column: 11
          },
          end: {
            line: 223,
            column: 37
          }
        }, {
          start: {
            line: 223,
            column: 41
          },
          end: {
            line: 223,
            column: 73
          }
        }],
        line: 223
      },
      "13": {
        loc: {
          start: {
            line: 227,
            column: 11
          },
          end: {
            line: 227,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 227,
            column: 11
          },
          end: {
            line: 227,
            column: 31
          }
        }, {
          start: {
            line: 227,
            column: 35
          },
          end: {
            line: 227,
            column: 61
          }
        }],
        line: 227
      },
      "14": {
        loc: {
          start: {
            line: 231,
            column: 11
          },
          end: {
            line: 231,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 231,
            column: 11
          },
          end: {
            line: 231,
            column: 31
          }
        }, {
          start: {
            line: 231,
            column: 35
          },
          end: {
            line: 231,
            column: 61
          }
        }],
        line: 231
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useUserPreferences.ts"],
      sourcesContent: ["'use client';\r\n\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport { useSession } from 'next-auth/react';\r\n\r\n// Tipos para las preferencias de usuario\r\nexport interface NotificationPreferences {\r\n  emailNotifications: boolean;\r\n  orderUpdates: boolean;\r\n  promotions: boolean;\r\n  securityAlerts: boolean;\r\n  marketingEmails: boolean;\r\n  pushNotifications: boolean;\r\n  smsNotifications: boolean;\r\n}\r\n\r\nexport interface DisplayPreferences {\r\n  language: string;\r\n  timezone: string;\r\n  currency: string;\r\n  theme: string;\r\n}\r\n\r\nexport interface PrivacyPreferences {\r\n  profileVisibility: 'public' | 'private';\r\n  activityTracking: boolean;\r\n  marketingConsent: boolean;\r\n  dataCollection: boolean;\r\n  thirdPartySharing: boolean;\r\n  analyticsOptOut: boolean;\r\n}\r\n\r\nexport interface UserPreferences {\r\n  notifications: NotificationPreferences;\r\n  display: DisplayPreferences;\r\n  privacy: PrivacyPreferences;\r\n}\r\n\r\nexport interface UseUserPreferencesReturn {\r\n  preferences: UserPreferences | null;\r\n  isLoading: boolean;\r\n  error: string | null;\r\n  getPreferences: () => Promise<void>;\r\n  updatePreferences: (preferences: Partial<UserPreferences>) => Promise<boolean>;\r\n  updateSection: (section: keyof UserPreferences, data: any) => Promise<boolean>;\r\n  resetToDefaults: () => Promise<boolean>;\r\n}\r\n\r\n// Preferencias por defecto\r\nconst defaultPreferences: UserPreferences = {\r\n  notifications: {\r\n    emailNotifications: true,\r\n    orderUpdates: true,\r\n    promotions: false,\r\n    securityAlerts: true,\r\n    marketingEmails: false,\r\n    pushNotifications: true,\r\n    smsNotifications: false,\r\n  },\r\n  display: {\r\n    language: 'es',\r\n    timezone: 'America/Argentina/Buenos_Aires',\r\n    currency: 'ARS',\r\n    theme: 'system',\r\n  },\r\n  privacy: {\r\n    profileVisibility: 'private',\r\n    activityTracking: true,\r\n    marketingConsent: false,\r\n    dataCollection: true,\r\n    thirdPartySharing: false,\r\n    analyticsOptOut: false,\r\n  },\r\n};\r\n\r\nexport function useUserPreferences(): UseUserPreferencesReturn {\r\n  const { data: session } = useSession();\r\n  const [preferences, setPreferences] = useState<UserPreferences | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // Obtener preferencias del usuario\r\n  const getPreferences = useCallback(async () => {\r\n    if (!session?.user?.id) {\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n\r\n      const response = await fetch('/api/user/preferences', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error al obtener preferencias');\r\n      }\r\n\r\n      const data = await response.json();\r\n      \r\n      // Combinar con valores por defecto para asegurar que todas las propiedades existan\r\n      const mergedPreferences = {\r\n        notifications: { ...defaultPreferences.notifications, ...data.preferences?.notifications },\r\n        display: { ...defaultPreferences.display, ...data.preferences?.display },\r\n        privacy: { ...defaultPreferences.privacy, ...data.preferences?.privacy },\r\n      };\r\n\r\n      setPreferences(mergedPreferences);\r\n    } catch (err) {\r\n      console.error('Error al obtener preferencias:', err);\r\n      setError(err instanceof Error ? err.message : 'Error desconocido');\r\n      // Usar preferencias por defecto en caso de error\r\n      setPreferences(defaultPreferences);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [session?.user?.id]);\r\n\r\n  // Actualizar preferencias completas\r\n  const updatePreferences = useCallback(async (newPreferences: Partial<UserPreferences>): Promise<boolean> => {\r\n    if (!session?.user?.id) {\r\n      setError('Usuario no autenticado');\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      setError(null);\r\n\r\n      const response = await fetch('/api/user/preferences', {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ preferences: newPreferences }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error al actualizar preferencias');\r\n      }\r\n\r\n      const data = await response.json();\r\n      \r\n      // Actualizar estado local\r\n      setPreferences(prev => ({\r\n        ...prev!,\r\n        ...newPreferences,\r\n      }));\r\n\r\n      return true;\r\n    } catch (err) {\r\n      console.error('Error al actualizar preferencias:', err);\r\n      setError(err instanceof Error ? err.message : 'Error desconocido');\r\n      return false;\r\n    }\r\n  }, [session?.user?.id]);\r\n\r\n  // Actualizar secci\xF3n espec\xEDfica de preferencias\r\n  const updateSection = useCallback(async (\r\n    section: keyof UserPreferences, \r\n    data: any\r\n  ): Promise<boolean> => {\r\n    if (!session?.user?.id) {\r\n      setError('Usuario no autenticado');\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      setError(null);\r\n\r\n      const response = await fetch(`/api/user/preferences/${section}`, {\r\n        method: 'PATCH',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ [section]: data }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Error al actualizar ${section}`);\r\n      }\r\n\r\n      // Actualizar estado local\r\n      setPreferences(prev => ({\r\n        ...prev!,\r\n        [section]: data,\r\n      }));\r\n\r\n      return true;\r\n    } catch (err) {\r\n      console.error(`Error al actualizar ${section}:`, err);\r\n      setError(err instanceof Error ? err.message : 'Error desconocido');\r\n      return false;\r\n    }\r\n  }, [session?.user?.id]);\r\n\r\n  // Resetear a valores por defecto\r\n  const resetToDefaults = useCallback(async (): Promise<boolean> => {\r\n    if (!session?.user?.id) {\r\n      setError('Usuario no autenticado');\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      setError(null);\r\n\r\n      const response = await fetch('/api/user/preferences', {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error al resetear preferencias');\r\n      }\r\n\r\n      // Actualizar estado local con valores por defecto\r\n      setPreferences(defaultPreferences);\r\n\r\n      return true;\r\n    } catch (err) {\r\n      console.error('Error al resetear preferencias:', err);\r\n      setError(err instanceof Error ? err.message : 'Error desconocido');\r\n      return false;\r\n    }\r\n  }, [session?.user?.id]);\r\n\r\n  // Cargar preferencias al montar el componente\r\n  useEffect(() => {\r\n    getPreferences();\r\n  }, [getPreferences]);\r\n\r\n  return {\r\n    preferences,\r\n    isLoading,\r\n    error,\r\n    getPreferences,\r\n    updatePreferences,\r\n    updateSection,\r\n    resetToDefaults,\r\n  };\r\n}\r\n\r\n// Hook auxiliar para obtener preferencias espec\xEDficas\r\nexport function useNotificationPreferences() {\r\n  const { preferences } = useUserPreferences();\r\n  return preferences?.notifications || defaultPreferences.notifications;\r\n}\r\n\r\nexport function useDisplayPreferences() {\r\n  const { preferences } = useUserPreferences();\r\n  return preferences?.display || defaultPreferences.display;\r\n}\r\n\r\nexport function usePrivacyPreferences() {\r\n  const { preferences } = useUserPreferences();\r\n  return preferences?.privacy || defaultPreferences.privacy;\r\n}\r\n\r\n// Hook para validaciones de preferencias\r\nexport function usePreferencesValidation() {\r\n  const validateLanguage = useCallback((language: string): boolean => {\r\n    const supportedLanguages = ['es', 'en', 'pt'];\r\n    return supportedLanguages.includes(language);\r\n  }, []);\r\n\r\n  const validateTimezone = useCallback((timezone: string): boolean => {\r\n    try {\r\n      Intl.DateTimeFormat(undefined, { timeZone: timezone });\r\n      return true;\r\n    } catch {\r\n      return false;\r\n    }\r\n  }, []);\r\n\r\n  const validateCurrency = useCallback((currency: string): boolean => {\r\n    const supportedCurrencies = ['ARS', 'USD', 'EUR', 'BRL', 'CLP', 'COP', 'MXN', 'PEN'];\r\n    return supportedCurrencies.includes(currency);\r\n  }, []);\r\n\r\n  const validateTheme = useCallback((theme: string): boolean => {\r\n    const supportedThemes = ['light', 'dark', 'system'];\r\n    return supportedThemes.includes(theme);\r\n  }, []);\r\n\r\n  return {\r\n    validateLanguage,\r\n    validateTimezone,\r\n    validateCurrency,\r\n    validateTheme,\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["useDisplayPreferences", "useNotificationPreferences", "usePreferencesValidation", "usePrivacyPreferences", "useUserPreferences", "defaultPreferences", "notifications", "emailNotifications", "orderUpdates", "promotions", "securityAlerts", "marketingEmails", "pushNotifications", "smsNotifications", "display", "language", "timezone", "currency", "theme", "privacy", "profileVisibility", "activityTracking", "marketingConsent", "dataCollection", "thirdPartySharing", "analyticsOptOut", "data", "session", "useSession", "preferences", "setPreferences", "useState", "isLoading", "setIsLoading", "error", "setError", "getPreferences", "useCallback", "user", "id", "response", "fetch", "method", "headers", "ok", "Error", "json", "mergedPreferences", "err", "console", "message", "updatePreferences", "newPreferences", "body", "JSON", "stringify", "prev", "updateSection", "section", "resetToDefaults", "useEffect", "validateLanguage", "supportedLanguages", "includes", "validateTimezone", "Intl", "DateTimeFormat", "undefined", "timeZone", "validateCurrency", "supportedCurrencies", "validateTheme", "supportedThemes"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b67604b6f874f7565b11819dd384030d14dd9d1d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2lrxkb0480 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2lrxkb0480();
cov_2lrxkb0480().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2lrxkb0480().f[0]++;
  cov_2lrxkb0480().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2lrxkb0480().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_2lrxkb0480().s[3]++;
_export(exports, {
  get useDisplayPreferences() {
    /* istanbul ignore next */
    cov_2lrxkb0480().f[1]++;
    cov_2lrxkb0480().s[4]++;
    return useDisplayPreferences;
  },
  get useNotificationPreferences() {
    /* istanbul ignore next */
    cov_2lrxkb0480().f[2]++;
    cov_2lrxkb0480().s[5]++;
    return useNotificationPreferences;
  },
  get usePreferencesValidation() {
    /* istanbul ignore next */
    cov_2lrxkb0480().f[3]++;
    cov_2lrxkb0480().s[6]++;
    return usePreferencesValidation;
  },
  get usePrivacyPreferences() {
    /* istanbul ignore next */
    cov_2lrxkb0480().f[4]++;
    cov_2lrxkb0480().s[7]++;
    return usePrivacyPreferences;
  },
  get useUserPreferences() {
    /* istanbul ignore next */
    cov_2lrxkb0480().f[5]++;
    cov_2lrxkb0480().s[8]++;
    return useUserPreferences;
  }
});
const _react =
/* istanbul ignore next */
(cov_2lrxkb0480().s[9]++, require("react"));
const _react1 =
/* istanbul ignore next */
(cov_2lrxkb0480().s[10]++, require("next-auth/react"));
// Preferencias por defecto
const defaultPreferences =
/* istanbul ignore next */
(cov_2lrxkb0480().s[11]++, {
  notifications: {
    emailNotifications: true,
    orderUpdates: true,
    promotions: false,
    securityAlerts: true,
    marketingEmails: false,
    pushNotifications: true,
    smsNotifications: false
  },
  display: {
    language: 'es',
    timezone: 'America/Argentina/Buenos_Aires',
    currency: 'ARS',
    theme: 'system'
  },
  privacy: {
    profileVisibility: 'private',
    activityTracking: true,
    marketingConsent: false,
    dataCollection: true,
    thirdPartySharing: false,
    analyticsOptOut: false
  }
});
function useUserPreferences() {
  /* istanbul ignore next */
  cov_2lrxkb0480().f[6]++;
  const {
    data: session
  } =
  /* istanbul ignore next */
  (cov_2lrxkb0480().s[12]++, (0, _react1.useSession)());
  const [preferences, setPreferences] =
  /* istanbul ignore next */
  (cov_2lrxkb0480().s[13]++, (0, _react.useState)(null));
  const [isLoading, setIsLoading] =
  /* istanbul ignore next */
  (cov_2lrxkb0480().s[14]++, (0, _react.useState)(true));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_2lrxkb0480().s[15]++, (0, _react.useState)(null));
  // Obtener preferencias del usuario
  const getPreferences =
  /* istanbul ignore next */
  (cov_2lrxkb0480().s[16]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_2lrxkb0480().f[7]++;
    cov_2lrxkb0480().s[17]++;
    if (!session?.user?.id) {
      /* istanbul ignore next */
      cov_2lrxkb0480().b[0][0]++;
      cov_2lrxkb0480().s[18]++;
      setIsLoading(false);
      /* istanbul ignore next */
      cov_2lrxkb0480().s[19]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2lrxkb0480().b[0][1]++;
    }
    cov_2lrxkb0480().s[20]++;
    try {
      /* istanbul ignore next */
      cov_2lrxkb0480().s[21]++;
      setIsLoading(true);
      /* istanbul ignore next */
      cov_2lrxkb0480().s[22]++;
      setError(null);
      const response =
      /* istanbul ignore next */
      (cov_2lrxkb0480().s[23]++, await fetch('/api/user/preferences', {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json'
        }
      }));
      /* istanbul ignore next */
      cov_2lrxkb0480().s[24]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_2lrxkb0480().b[1][0]++;
        cov_2lrxkb0480().s[25]++;
        throw new Error('Error al obtener preferencias');
      } else
      /* istanbul ignore next */
      {
        cov_2lrxkb0480().b[1][1]++;
      }
      const data =
      /* istanbul ignore next */
      (cov_2lrxkb0480().s[26]++, await response.json());
      // Combinar con valores por defecto para asegurar que todas las propiedades existan
      const mergedPreferences =
      /* istanbul ignore next */
      (cov_2lrxkb0480().s[27]++, {
        notifications: {
          ...defaultPreferences.notifications,
          ...data.preferences?.notifications
        },
        display: {
          ...defaultPreferences.display,
          ...data.preferences?.display
        },
        privacy: {
          ...defaultPreferences.privacy,
          ...data.preferences?.privacy
        }
      });
      /* istanbul ignore next */
      cov_2lrxkb0480().s[28]++;
      setPreferences(mergedPreferences);
    } catch (err) {
      /* istanbul ignore next */
      cov_2lrxkb0480().s[29]++;
      console.error('Error al obtener preferencias:', err);
      /* istanbul ignore next */
      cov_2lrxkb0480().s[30]++;
      setError(err instanceof Error ?
      /* istanbul ignore next */
      (cov_2lrxkb0480().b[2][0]++, err.message) :
      /* istanbul ignore next */
      (cov_2lrxkb0480().b[2][1]++, 'Error desconocido'));
      // Usar preferencias por defecto en caso de error
      /* istanbul ignore next */
      cov_2lrxkb0480().s[31]++;
      setPreferences(defaultPreferences);
    } finally {
      /* istanbul ignore next */
      cov_2lrxkb0480().s[32]++;
      setIsLoading(false);
    }
  }, [session?.user?.id]));
  // Actualizar preferencias completas
  const updatePreferences =
  /* istanbul ignore next */
  (cov_2lrxkb0480().s[33]++, (0, _react.useCallback)(async newPreferences => {
    /* istanbul ignore next */
    cov_2lrxkb0480().f[8]++;
    cov_2lrxkb0480().s[34]++;
    if (!session?.user?.id) {
      /* istanbul ignore next */
      cov_2lrxkb0480().b[3][0]++;
      cov_2lrxkb0480().s[35]++;
      setError('Usuario no autenticado');
      /* istanbul ignore next */
      cov_2lrxkb0480().s[36]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_2lrxkb0480().b[3][1]++;
    }
    cov_2lrxkb0480().s[37]++;
    try {
      /* istanbul ignore next */
      cov_2lrxkb0480().s[38]++;
      setError(null);
      const response =
      /* istanbul ignore next */
      (cov_2lrxkb0480().s[39]++, await fetch('/api/user/preferences', {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          preferences: newPreferences
        })
      }));
      /* istanbul ignore next */
      cov_2lrxkb0480().s[40]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_2lrxkb0480().b[4][0]++;
        cov_2lrxkb0480().s[41]++;
        throw new Error('Error al actualizar preferencias');
      } else
      /* istanbul ignore next */
      {
        cov_2lrxkb0480().b[4][1]++;
      }
      const data =
      /* istanbul ignore next */
      (cov_2lrxkb0480().s[42]++, await response.json());
      // Actualizar estado local
      /* istanbul ignore next */
      cov_2lrxkb0480().s[43]++;
      setPreferences(prev => {
        /* istanbul ignore next */
        cov_2lrxkb0480().f[9]++;
        cov_2lrxkb0480().s[44]++;
        return {
          ...prev,
          ...newPreferences
        };
      });
      /* istanbul ignore next */
      cov_2lrxkb0480().s[45]++;
      return true;
    } catch (err) {
      /* istanbul ignore next */
      cov_2lrxkb0480().s[46]++;
      console.error('Error al actualizar preferencias:', err);
      /* istanbul ignore next */
      cov_2lrxkb0480().s[47]++;
      setError(err instanceof Error ?
      /* istanbul ignore next */
      (cov_2lrxkb0480().b[5][0]++, err.message) :
      /* istanbul ignore next */
      (cov_2lrxkb0480().b[5][1]++, 'Error desconocido'));
      /* istanbul ignore next */
      cov_2lrxkb0480().s[48]++;
      return false;
    }
  }, [session?.user?.id]));
  // Actualizar sección específica de preferencias
  const updateSection =
  /* istanbul ignore next */
  (cov_2lrxkb0480().s[49]++, (0, _react.useCallback)(async (section, data) => {
    /* istanbul ignore next */
    cov_2lrxkb0480().f[10]++;
    cov_2lrxkb0480().s[50]++;
    if (!session?.user?.id) {
      /* istanbul ignore next */
      cov_2lrxkb0480().b[6][0]++;
      cov_2lrxkb0480().s[51]++;
      setError('Usuario no autenticado');
      /* istanbul ignore next */
      cov_2lrxkb0480().s[52]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_2lrxkb0480().b[6][1]++;
    }
    cov_2lrxkb0480().s[53]++;
    try {
      /* istanbul ignore next */
      cov_2lrxkb0480().s[54]++;
      setError(null);
      const response =
      /* istanbul ignore next */
      (cov_2lrxkb0480().s[55]++, await fetch(`/api/user/preferences/${section}`, {
        method: 'PATCH',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          [section]: data
        })
      }));
      /* istanbul ignore next */
      cov_2lrxkb0480().s[56]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_2lrxkb0480().b[7][0]++;
        cov_2lrxkb0480().s[57]++;
        throw new Error(`Error al actualizar ${section}`);
      } else
      /* istanbul ignore next */
      {
        cov_2lrxkb0480().b[7][1]++;
      }
      // Actualizar estado local
      cov_2lrxkb0480().s[58]++;
      setPreferences(prev => {
        /* istanbul ignore next */
        cov_2lrxkb0480().f[11]++;
        cov_2lrxkb0480().s[59]++;
        return {
          ...prev,
          [section]: data
        };
      });
      /* istanbul ignore next */
      cov_2lrxkb0480().s[60]++;
      return true;
    } catch (err) {
      /* istanbul ignore next */
      cov_2lrxkb0480().s[61]++;
      console.error(`Error al actualizar ${section}:`, err);
      /* istanbul ignore next */
      cov_2lrxkb0480().s[62]++;
      setError(err instanceof Error ?
      /* istanbul ignore next */
      (cov_2lrxkb0480().b[8][0]++, err.message) :
      /* istanbul ignore next */
      (cov_2lrxkb0480().b[8][1]++, 'Error desconocido'));
      /* istanbul ignore next */
      cov_2lrxkb0480().s[63]++;
      return false;
    }
  }, [session?.user?.id]));
  // Resetear a valores por defecto
  const resetToDefaults =
  /* istanbul ignore next */
  (cov_2lrxkb0480().s[64]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_2lrxkb0480().f[12]++;
    cov_2lrxkb0480().s[65]++;
    if (!session?.user?.id) {
      /* istanbul ignore next */
      cov_2lrxkb0480().b[9][0]++;
      cov_2lrxkb0480().s[66]++;
      setError('Usuario no autenticado');
      /* istanbul ignore next */
      cov_2lrxkb0480().s[67]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_2lrxkb0480().b[9][1]++;
    }
    cov_2lrxkb0480().s[68]++;
    try {
      /* istanbul ignore next */
      cov_2lrxkb0480().s[69]++;
      setError(null);
      const response =
      /* istanbul ignore next */
      (cov_2lrxkb0480().s[70]++, await fetch('/api/user/preferences', {
        method: 'DELETE',
        headers: {
          'Content-Type': 'application/json'
        }
      }));
      /* istanbul ignore next */
      cov_2lrxkb0480().s[71]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_2lrxkb0480().b[10][0]++;
        cov_2lrxkb0480().s[72]++;
        throw new Error('Error al resetear preferencias');
      } else
      /* istanbul ignore next */
      {
        cov_2lrxkb0480().b[10][1]++;
      }
      // Actualizar estado local con valores por defecto
      cov_2lrxkb0480().s[73]++;
      setPreferences(defaultPreferences);
      /* istanbul ignore next */
      cov_2lrxkb0480().s[74]++;
      return true;
    } catch (err) {
      /* istanbul ignore next */
      cov_2lrxkb0480().s[75]++;
      console.error('Error al resetear preferencias:', err);
      /* istanbul ignore next */
      cov_2lrxkb0480().s[76]++;
      setError(err instanceof Error ?
      /* istanbul ignore next */
      (cov_2lrxkb0480().b[11][0]++, err.message) :
      /* istanbul ignore next */
      (cov_2lrxkb0480().b[11][1]++, 'Error desconocido'));
      /* istanbul ignore next */
      cov_2lrxkb0480().s[77]++;
      return false;
    }
  }, [session?.user?.id]));
  // Cargar preferencias al montar el componente
  /* istanbul ignore next */
  cov_2lrxkb0480().s[78]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_2lrxkb0480().f[13]++;
    cov_2lrxkb0480().s[79]++;
    getPreferences();
  }, [getPreferences]);
  /* istanbul ignore next */
  cov_2lrxkb0480().s[80]++;
  return {
    preferences,
    isLoading,
    error,
    getPreferences,
    updatePreferences,
    updateSection,
    resetToDefaults
  };
}
function useNotificationPreferences() {
  /* istanbul ignore next */
  cov_2lrxkb0480().f[14]++;
  const {
    preferences
  } =
  /* istanbul ignore next */
  (cov_2lrxkb0480().s[81]++, useUserPreferences());
  /* istanbul ignore next */
  cov_2lrxkb0480().s[82]++;
  return /* istanbul ignore next */(cov_2lrxkb0480().b[12][0]++, preferences?.notifications) ||
  /* istanbul ignore next */
  (cov_2lrxkb0480().b[12][1]++, defaultPreferences.notifications);
}
function useDisplayPreferences() {
  /* istanbul ignore next */
  cov_2lrxkb0480().f[15]++;
  const {
    preferences
  } =
  /* istanbul ignore next */
  (cov_2lrxkb0480().s[83]++, useUserPreferences());
  /* istanbul ignore next */
  cov_2lrxkb0480().s[84]++;
  return /* istanbul ignore next */(cov_2lrxkb0480().b[13][0]++, preferences?.display) ||
  /* istanbul ignore next */
  (cov_2lrxkb0480().b[13][1]++, defaultPreferences.display);
}
function usePrivacyPreferences() {
  /* istanbul ignore next */
  cov_2lrxkb0480().f[16]++;
  const {
    preferences
  } =
  /* istanbul ignore next */
  (cov_2lrxkb0480().s[85]++, useUserPreferences());
  /* istanbul ignore next */
  cov_2lrxkb0480().s[86]++;
  return /* istanbul ignore next */(cov_2lrxkb0480().b[14][0]++, preferences?.privacy) ||
  /* istanbul ignore next */
  (cov_2lrxkb0480().b[14][1]++, defaultPreferences.privacy);
}
function usePreferencesValidation() {
  /* istanbul ignore next */
  cov_2lrxkb0480().f[17]++;
  const validateLanguage =
  /* istanbul ignore next */
  (cov_2lrxkb0480().s[87]++, (0, _react.useCallback)(language => {
    /* istanbul ignore next */
    cov_2lrxkb0480().f[18]++;
    const supportedLanguages =
    /* istanbul ignore next */
    (cov_2lrxkb0480().s[88]++, ['es', 'en', 'pt']);
    /* istanbul ignore next */
    cov_2lrxkb0480().s[89]++;
    return supportedLanguages.includes(language);
  }, []));
  const validateTimezone =
  /* istanbul ignore next */
  (cov_2lrxkb0480().s[90]++, (0, _react.useCallback)(timezone => {
    /* istanbul ignore next */
    cov_2lrxkb0480().f[19]++;
    cov_2lrxkb0480().s[91]++;
    try {
      /* istanbul ignore next */
      cov_2lrxkb0480().s[92]++;
      Intl.DateTimeFormat(undefined, {
        timeZone: timezone
      });
      /* istanbul ignore next */
      cov_2lrxkb0480().s[93]++;
      return true;
    } catch {
      /* istanbul ignore next */
      cov_2lrxkb0480().s[94]++;
      return false;
    }
  }, []));
  const validateCurrency =
  /* istanbul ignore next */
  (cov_2lrxkb0480().s[95]++, (0, _react.useCallback)(currency => {
    /* istanbul ignore next */
    cov_2lrxkb0480().f[20]++;
    const supportedCurrencies =
    /* istanbul ignore next */
    (cov_2lrxkb0480().s[96]++, ['ARS', 'USD', 'EUR', 'BRL', 'CLP', 'COP', 'MXN', 'PEN']);
    /* istanbul ignore next */
    cov_2lrxkb0480().s[97]++;
    return supportedCurrencies.includes(currency);
  }, []));
  const validateTheme =
  /* istanbul ignore next */
  (cov_2lrxkb0480().s[98]++, (0, _react.useCallback)(theme => {
    /* istanbul ignore next */
    cov_2lrxkb0480().f[21]++;
    const supportedThemes =
    /* istanbul ignore next */
    (cov_2lrxkb0480().s[99]++, ['light', 'dark', 'system']);
    /* istanbul ignore next */
    cov_2lrxkb0480().s[100]++;
    return supportedThemes.includes(theme);
  }, []));
  /* istanbul ignore next */
  cov_2lrxkb0480().s[101]++;
  return {
    validateLanguage,
    validateTimezone,
    validateCurrency,
    validateTheme
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,