aaeeb5f5f2587443c9966a3479855594
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_104tjkltnn() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\driver\\pending-orders\\route.ts";
  var hash = "5828ce15f68af80772dae4312b5b54880c47cecc";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\driver\\pending-orders\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 23
        }
      },
      "6": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 38
        }
      },
      "7": {
        start: {
          line: 21,
          column: 16
        },
        end: {
          line: 21,
          column: 54
        }
      },
      "8": {
        start: {
          line: 22,
          column: 17
        },
        end: {
          line: 22,
          column: 72
        }
      },
      "9": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 24
        }
      },
      "10": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 195,
          column: 5
        }
      },
      "11": {
        start: {
          line: 27,
          column: 24
        },
        end: {
          line: 27,
          column: 49
        }
      },
      "12": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 34,
          column: 9
        }
      },
      "13": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 33,
          column: 15
        }
      },
      "14": {
        start: {
          line: 36,
          column: 25
        },
        end: {
          line: 36,
          column: 58
        }
      },
      "15": {
        start: {
          line: 38,
          column: 53
        },
        end: {
          line: 38,
          column: 194
        }
      },
      "16": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 45,
          column: 9
        }
      },
      "17": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 44,
          column: 15
        }
      },
      "18": {
        start: {
          line: 47,
          column: 33
        },
        end: {
          line: 47,
          column: 53
        }
      },
      "19": {
        start: {
          line: 48,
          column: 21
        },
        end: {
          line: 48,
          column: 87
        }
      },
      "20": {
        start: {
          line: 49,
          column: 22
        },
        end: {
          line: 49,
          column: 65
        }
      },
      "21": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 54,
          column: 11
        }
      },
      "22": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 54
        }
      },
      "23": {
        start: {
          line: 57,
          column: 53
        },
        end: {
          line: 74,
          column: 23
        }
      },
      "24": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 78,
          column: 11
        }
      },
      "25": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 86,
          column: 11
        }
      },
      "26": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 94,
          column: 9
        }
      },
      "27": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 65
        }
      },
      "28": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 93,
          column: 15
        }
      },
      "29": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 95,
          column: 77
        }
      },
      "30": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 96,
          column: 110
        }
      },
      "31": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 122,
          column: 9
        }
      },
      "32": {
        start: {
          line: 99,
          column: 29
        },
        end: {
          line: 99,
          column: 58
        }
      },
      "33": {
        start: {
          line: 99,
          column: 49
        },
        end: {
          line: 99,
          column: 57
        }
      },
      "34": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 73
        }
      },
      "35": {
        start: {
          line: 101,
          column: 60
        },
        end: {
          line: 112,
          column: 35
        }
      },
      "36": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 121,
          column: 13
        }
      },
      "37": {
        start: {
          line: 114,
          column: 16
        },
        end: {
          line: 114,
          column: 73
        }
      },
      "38": {
        start: {
          line: 116,
          column: 16
        },
        end: {
          line: 116,
          column: 80
        }
      },
      "39": {
        start: {
          line: 118,
          column: 16
        },
        end: {
          line: 120,
          column: 19
        }
      },
      "40": {
        start: {
          line: 119,
          column: 20
        },
        end: {
          line: 119,
          column: 101
        }
      },
      "41": {
        start: {
          line: 119,
          column: 67
        },
        end: {
          line: 119,
          column: 93
        }
      },
      "42": {
        start: {
          line: 124,
          column: 28
        },
        end: {
          line: 127,
          column: 16
        }
      },
      "43": {
        start: {
          line: 125,
          column: 28
        },
        end: {
          line: 125,
          column: 50
        }
      },
      "44": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 96
        }
      },
      "45": {
        start: {
          line: 129,
          column: 32
        },
        end: {
          line: 162,
          column: 15
        }
      },
      "46": {
        start: {
          line: 129,
          column: 58
        },
        end: {
          line: 162,
          column: 13
        }
      },
      "47": {
        start: {
          line: 150,
          column: 55
        },
        end: {
          line: 159,
          column: 21
        }
      },
      "48": {
        start: {
          line: 160,
          column: 67
        },
        end: {
          line: 160,
          column: 86
        }
      },
      "49": {
        start: {
          line: 164,
          column: 22
        },
        end: {
          line: 170,
          column: 9
        }
      },
      "50": {
        start: {
          line: 166,
          column: 61
        },
        end: {
          line: 166,
          column: 78
        }
      },
      "51": {
        start: {
          line: 167,
          column: 61
        },
        end: {
          line: 167,
          column: 83
        }
      },
      "52": {
        start: {
          line: 168,
          column: 62
        },
        end: {
          line: 168,
          column: 85
        }
      },
      "53": {
        start: {
          line: 169,
          column: 97
        },
        end: {
          line: 169,
          column: 114
        }
      },
      "54": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 187,
          column: 11
        }
      },
      "55": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 189,
          column: 61
        }
      },
      "56": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 194,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 19
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "GET",
        decl: {
          start: {
            line: 24,
            column: 15
          },
          end: {
            line: 24,
            column: 18
          }
        },
        loc: {
          start: {
            line: 24,
            column: 28
          },
          end: {
            line: 196,
            column: 1
          }
        },
        line: 24
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 99,
            column: 40
          },
          end: {
            line: 99,
            column: 41
          }
        },
        loc: {
          start: {
            line: 99,
            column: 49
          },
          end: {
            line: 99,
            column: 57
          }
        },
        line: 99
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 118,
            column: 31
          },
          end: {
            line: 118,
            column: 32
          }
        },
        loc: {
          start: {
            line: 118,
            column: 40
          },
          end: {
            line: 120,
            column: 17
          }
        },
        line: 118
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 119,
            column: 59
          },
          end: {
            line: 119,
            column: 60
          }
        },
        loc: {
          start: {
            line: 119,
            column: 67
          },
          end: {
            line: 119,
            column: 93
          }
        },
        line: 119
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 124,
            column: 43
          },
          end: {
            line: 124,
            column: 44
          }
        },
        loc: {
          start: {
            line: 124,
            column: 52
          },
          end: {
            line: 127,
            column: 9
          }
        },
        line: 124
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 129,
            column: 48
          },
          end: {
            line: 129,
            column: 49
          }
        },
        loc: {
          start: {
            line: 129,
            column: 58
          },
          end: {
            line: 162,
            column: 13
          }
        },
        line: 129
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 150,
            column: 46
          },
          end: {
            line: 150,
            column: 47
          }
        },
        loc: {
          start: {
            line: 150,
            column: 55
          },
          end: {
            line: 159,
            column: 21
          }
        },
        line: 150
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 160,
            column: 54
          },
          end: {
            line: 160,
            column: 55
          }
        },
        loc: {
          start: {
            line: 160,
            column: 67
          },
          end: {
            line: 160,
            column: 86
          }
        },
        line: 160
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 166,
            column: 47
          },
          end: {
            line: 166,
            column: 48
          }
        },
        loc: {
          start: {
            line: 166,
            column: 61
          },
          end: {
            line: 166,
            column: 78
          }
        },
        line: 166
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 167,
            column: 47
          },
          end: {
            line: 167,
            column: 48
          }
        },
        loc: {
          start: {
            line: 167,
            column: 61
          },
          end: {
            line: 167,
            column: 83
          }
        },
        line: 167
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 168,
            column: 48
          },
          end: {
            line: 168,
            column: 49
          }
        },
        loc: {
          start: {
            line: 168,
            column: 62
          },
          end: {
            line: 168,
            column: 85
          }
        },
        line: 168
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 169,
            column: 83
          },
          end: {
            line: 169,
            column: 84
          }
        },
        loc: {
          start: {
            line: 169,
            column: 97
          },
          end: {
            line: 169,
            column: 114
          }
        },
        line: 169
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "1": {
        loc: {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 45,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 45,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "2": {
        loc: {
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 39,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 39,
            column: 23
          }
        }, {
          start: {
            line: 39,
            column: 27
          },
          end: {
            line: 39,
            column: 34
          }
        }],
        line: 39
      },
      "3": {
        loc: {
          start: {
            line: 48,
            column: 21
          },
          end: {
            line: 48,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 21
          },
          end: {
            line: 48,
            column: 45
          }
        }, {
          start: {
            line: 48,
            column: 49
          },
          end: {
            line: 48,
            column: 87
          }
        }],
        line: 48
      },
      "4": {
        loc: {
          start: {
            line: 49,
            column: 31
          },
          end: {
            line: 49,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 31
          },
          end: {
            line: 49,
            column: 56
          }
        }, {
          start: {
            line: 49,
            column: 60
          },
          end: {
            line: 49,
            column: 64
          }
        }],
        line: 49
      },
      "5": {
        loc: {
          start: {
            line: 52,
            column: 17
          },
          end: {
            line: 52,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 52,
            column: 56
          },
          end: {
            line: 52,
            column: 61
          }
        }, {
          start: {
            line: 52,
            column: 64
          },
          end: {
            line: 52,
            column: 73
          }
        }],
        line: 52
      },
      "6": {
        loc: {
          start: {
            line: 53,
            column: 17
          },
          end: {
            line: 53,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 53,
            column: 57
          },
          end: {
            line: 53,
            column: 62
          }
        }, {
          start: {
            line: 53,
            column: 65
          },
          end: {
            line: 53,
            column: 74
          }
        }],
        line: 53
      },
      "7": {
        loc: {
          start: {
            line: 87,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 87
      },
      "8": {
        loc: {
          start: {
            line: 95,
            column: 56
          },
          end: {
            line: 95,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 95,
            column: 56
          },
          end: {
            line: 95,
            column: 70
          }
        }, {
          start: {
            line: 95,
            column: 74
          },
          end: {
            line: 95,
            column: 75
          }
        }],
        line: 95
      },
      "9": {
        loc: {
          start: {
            line: 96,
            column: 46
          },
          end: {
            line: 96,
            column: 108
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 96,
            column: 60
          },
          end: {
            line: 96,
            column: 94
          }
        }, {
          start: {
            line: 96,
            column: 97
          },
          end: {
            line: 96,
            column: 108
          }
        }],
        line: 96
      },
      "10": {
        loc: {
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 122,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 122,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 98
      },
      "11": {
        loc: {
          start: {
            line: 98,
            column: 12
          },
          end: {
            line: 98,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 98,
            column: 12
          },
          end: {
            line: 98,
            column: 18
          }
        }, {
          start: {
            line: 98,
            column: 22
          },
          end: {
            line: 98,
            column: 39
          }
        }],
        line: 98
      },
      "12": {
        loc: {
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 121,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 121,
            column: 13
          }
        }, {
          start: {
            line: 115,
            column: 19
          },
          end: {
            line: 121,
            column: 13
          }
        }],
        line: 113
      },
      "13": {
        loc: {
          start: {
            line: 116,
            column: 55
          },
          end: {
            line: 116,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 116,
            column: 55
          },
          end: {
            line: 116,
            column: 73
          }
        }, {
          start: {
            line: 116,
            column: 77
          },
          end: {
            line: 116,
            column: 78
          }
        }],
        line: 116
      },
      "14": {
        loc: {
          start: {
            line: 119,
            column: 40
          },
          end: {
            line: 119,
            column: 100
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 119,
            column: 40
          },
          end: {
            line: 119,
            column: 94
          }
        }, {
          start: {
            line: 119,
            column: 98
          },
          end: {
            line: 119,
            column: 100
          }
        }],
        line: 119
      },
      "15": {
        loc: {
          start: {
            line: 124,
            column: 28
          },
          end: {
            line: 127,
            column: 16
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 124,
            column: 28
          },
          end: {
            line: 127,
            column: 10
          }
        }, {
          start: {
            line: 127,
            column: 14
          },
          end: {
            line: 127,
            column: 16
          }
        }],
        line: 124
      },
      "16": {
        loc: {
          start: {
            line: 126,
            column: 19
          },
          end: {
            line: 126,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 126,
            column: 19
          },
          end: {
            line: 126,
            column: 26
          }
        }, {
          start: {
            line: 126,
            column: 30
          },
          end: {
            line: 126,
            column: 49
          }
        }, {
          start: {
            line: 126,
            column: 53
          },
          end: {
            line: 126,
            column: 74
          }
        }, {
          start: {
            line: 126,
            column: 78
          },
          end: {
            line: 126,
            column: 95
          }
        }],
        line: 126
      },
      "17": {
        loc: {
          start: {
            line: 131,
            column: 29
          },
          end: {
            line: 131,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 131,
            column: 29
          },
          end: {
            line: 131,
            column: 47
          }
        }, {
          start: {
            line: 131,
            column: 51
          },
          end: {
            line: 131,
            column: 65
          }
        }],
        line: 131
      },
      "18": {
        loc: {
          start: {
            line: 143,
            column: 27
          },
          end: {
            line: 143,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 143,
            column: 27
          },
          end: {
            line: 143,
            column: 55
          }
        }, {
          start: {
            line: 143,
            column: 59
          },
          end: {
            line: 143,
            column: 61
          }
        }],
        line: 143
      },
      "19": {
        loc: {
          start: {
            line: 144,
            column: 31
          },
          end: {
            line: 144,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 144,
            column: 31
          },
          end: {
            line: 144,
            column: 63
          }
        }, {
          start: {
            line: 144,
            column: 67
          },
          end: {
            line: 144,
            column: 69
          }
        }],
        line: 144
      },
      "20": {
        loc: {
          start: {
            line: 148,
            column: 113
          },
          end: {
            line: 148,
            column: 189
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 148,
            column: 144
          },
          end: {
            line: 148,
            column: 184
          }
        }, {
          start: {
            line: 148,
            column: 187
          },
          end: {
            line: 148,
            column: 189
          }
        }],
        line: 148
      },
      "21": {
        loc: {
          start: {
            line: 148,
            column: 192
          },
          end: {
            line: 148,
            column: 277
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 148,
            column: 227
          },
          end: {
            line: 148,
            column: 272
          }
        }, {
          start: {
            line: 148,
            column: 275
          },
          end: {
            line: 148,
            column: 277
          }
        }],
        line: 148
      },
      "22": {
        loc: {
          start: {
            line: 150,
            column: 23
          },
          end: {
            line: 159,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 150,
            column: 23
          },
          end: {
            line: 159,
            column: 23
          }
        }, {
          start: {
            line: 159,
            column: 27
          },
          end: {
            line: 159,
            column: 29
          }
        }],
        line: 150
      },
      "23": {
        loc: {
          start: {
            line: 153,
            column: 37
          },
          end: {
            line: 153,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 153,
            column: 37
          },
          end: {
            line: 153,
            column: 56
          }
        }, {
          start: {
            line: 153,
            column: 60
          },
          end: {
            line: 153,
            column: 82
          }
        }],
        line: 153
      },
      "24": {
        loc: {
          start: {
            line: 154,
            column: 37
          },
          end: {
            line: 154,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 154,
            column: 37
          },
          end: {
            line: 154,
            column: 63
          }
        }, {
          start: {
            line: 154,
            column: 67
          },
          end: {
            line: 154,
            column: 69
          }
        }],
        line: 154
      },
      "25": {
        loc: {
          start: {
            line: 160,
            column: 28
          },
          end: {
            line: 160,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 160,
            column: 28
          },
          end: {
            line: 160,
            column: 90
          }
        }, {
          start: {
            line: 160,
            column: 94
          },
          end: {
            line: 160,
            column: 95
          }
        }],
        line: 160
      },
      "26": {
        loc: {
          start: {
            line: 169,
            column: 31
          },
          end: {
            line: 169,
            column: 147
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 169,
            column: 60
          },
          end: {
            line: 169,
            column: 143
          }
        }, {
          start: {
            line: 169,
            column: 146
          },
          end: {
            line: 169,
            column: 147
          }
        }],
        line: 169
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0, 0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\driver\\pending-orders\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n/**\r\n * API para obtener \xF3rdenes pendientes de entrega para drivers\r\n * GET /api/driver/pending-orders\r\n */\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { auth } from '@/lib/auth/config';\r\nimport { createAdminClient } from '@/lib/integrations/supabase/server';\r\n\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    // Verificar autenticaci\xF3n\r\n    const session = await auth();\r\n    if (!session?.user?.email) {\r\n      return NextResponse.json(\r\n        { error: 'No autorizado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    // Configurar Supabase con service role para acceso completo\r\n    const supabase = createAdminClient();\r\n\r\n    // Verificar que el usuario sea un driver\r\n    const { data: driver, error: driverError } = await supabase\r\n      .from('drivers')\r\n      .select('id, first_name, last_name, status')\r\n      .eq('email', session.user.email)\r\n      .eq('status', 'available')\r\n      .single();\r\n\r\n    if (driverError || !driver) {\r\n      return NextResponse.json(\r\n        { error: 'Driver no encontrado o no disponible' },\r\n        { status: 403 }\r\n      );\r\n    }\r\n\r\n    // Obtener par\xE1metros de consulta\r\n    const { searchParams } = new URL(request.url);\r\n    const date = searchParams.get('date') || new Date().toISOString().split('T')[0];\r\n    const limit = parseInt(searchParams.get('limit') || '50');\r\n\r\n    // Debug: Verificar configuraci\xF3n de Supabase\r\n    console.log('\uD83D\uDD27 Supabase client configured:', {\r\n      url: process.env.NEXT_PUBLIC_SUPABASE_URL ? 'SET' : 'NOT SET',\r\n      key: process.env.SUPABASE_SERVICE_ROLE_KEY ? 'SET' : 'NOT SET'\r\n    });\r\n\r\n    // Consultar \xF3rdenes pendientes de entrega\r\n    console.log('\uD83D\uDD0D Executing Supabase query...');\r\n    const { data: orders, error: ordersError } = await supabase\r\n      .from('orders')\r\n      .select(`\r\n        id,\r\n        total,\r\n        status,\r\n        payment_status,\r\n        fulfillment_status,\r\n        shipping_address,\r\n        estimated_delivery,\r\n        created_at,\r\n        order_number,\r\n        tracking_number,\r\n        notes\r\n      `)\r\n      .in('status', ['confirmed', 'paid'])\r\n      .eq('fulfillment_status', 'unfulfilled')\r\n      .not('shipping_address', 'is', null)\r\n      .order('created_at', { ascending: true })\r\n      .limit(limit);\r\n\r\n    console.log('\uD83D\uDD0D Raw Supabase response:', { data: orders, error: ordersError });\r\n\r\n    console.log('\uD83D\uDD0D Debug - Filters applied:', {\r\n      status: ['confirmed', 'paid'],\r\n      fulfillment_status: 'unfulfilled',\r\n      shipping_address: 'not null'\r\n    });\r\n\r\n    if (ordersError) {\r\n      console.error('Error fetching orders:', ordersError);\r\n      return NextResponse.json(\r\n        { error: 'Error al obtener \xF3rdenes' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    console.log('\uD83D\uDCE6 Orders fetched from database:', orders?.length || 0);\r\n    console.log('\uD83D\uDCE6 First order sample:', orders?.[0] ? JSON.stringify(orders[0], null, 2) : 'No orders');\r\n\r\n    // Si hay \xF3rdenes, obtener los order_items por separado\r\n    if (orders && orders.length > 0) {\r\n      const orderIds = orders.map(order => order.id);\r\n      console.log('\uD83D\uDD0D Fetching order_items for orders:', orderIds);\r\n\r\n      const { data: orderItems, error: itemsError } = await supabase\r\n        .from('order_items')\r\n        .select(`\r\n          id,\r\n          order_id,\r\n          product_id,\r\n          quantity,\r\n          price,\r\n          products (\r\n            id,\r\n            name,\r\n            description\r\n          )\r\n        `)\r\n        .in('order_id', orderIds);\r\n\r\n      if (itemsError) {\r\n        console.error('Error fetching order items:', itemsError);\r\n      } else {\r\n        console.log('\uD83D\uDCE6 Order items fetched:', orderItems?.length || 0);\r\n\r\n        // Agregar order_items a cada orden\r\n        orders.forEach(order => {\r\n          order.order_items = orderItems?.filter(item => item.order_id === order.id) || [];\r\n        });\r\n      }\r\n    }\r\n\r\n    // Filtrar \xF3rdenes que tienen direcci\xF3n de entrega v\xE1lida\r\n    const validOrders = orders?.filter(order => {\r\n      const address = order.shipping_address;\r\n      return address && \r\n             address.street_name && \r\n             address.street_number && \r\n             address.city_name;\r\n    }) || [];\r\n\r\n    // Formatear datos para el frontend\r\n    const formattedOrders = validOrders.map(order => ({\r\n      id: order.id,\r\n      orderNumber: order.order_number || `#${order.id}`,\r\n      total: parseFloat(order.total),\r\n      status: order.status,\r\n      paymentStatus: order.payment_status,\r\n      fulfillmentStatus: order.fulfillment_status,\r\n      createdAt: order.created_at,\r\n      estimatedDelivery: order.estimated_delivery,\r\n      trackingNumber: order.tracking_number,\r\n      notes: order.notes,\r\n      shippingAddress: {\r\n        streetName: order.shipping_address.street_name,\r\n        streetNumber: order.shipping_address.street_number,\r\n        floor: order.shipping_address.floor || '',\r\n        apartment: order.shipping_address.apartment || '',\r\n        cityName: order.shipping_address.city_name,\r\n        stateName: order.shipping_address.state_name,\r\n        zipCode: order.shipping_address.zip_code,\r\n        fullAddress: `${order.shipping_address.street_name} ${order.shipping_address.street_number}${\r\n          order.shipping_address.floor ? `, Piso ${order.shipping_address.floor}` : ''\r\n        }${\r\n          order.shipping_address.apartment ? `, Depto ${order.shipping_address.apartment}` : ''\r\n        }, ${order.shipping_address.city_name}, ${order.shipping_address.state_name} ${order.shipping_address.zip_code}`\r\n      },\r\n      items: order.order_items?.map(item => ({\r\n        id: item.id,\r\n        productId: item.product_id,\r\n        productName: item.products?.name || 'Producto desconocido',\r\n        description: item.products?.description || '',\r\n        quantity: item.quantity,\r\n        price: parseFloat(item.price),\r\n        weight: 0, // Peso por defecto hasta que se agregue la columna\r\n        dimensions: null // Dimensiones por defecto hasta que se agregue la columna\r\n      })) || [],\r\n      totalItems: order.order_items?.reduce((sum, item) => sum + item.quantity, 0) || 0,\r\n      totalWeight: 0 // Peso total por defecto hasta que se agregue la columna weight\r\n    }));\r\n\r\n    // Estad\xEDsticas del d\xEDa\r\n    const stats = {\r\n      totalOrders: formattedOrders.length,\r\n      totalValue: formattedOrders.reduce((sum, order) => sum + order.total, 0),\r\n      totalItems: formattedOrders.reduce((sum, order) => sum + order.totalItems, 0),\r\n      totalWeight: formattedOrders.reduce((sum, order) => sum + order.totalWeight, 0),\r\n      averageOrderValue: formattedOrders.length > 0 \r\n        ? formattedOrders.reduce((sum, order) => sum + order.total, 0) / formattedOrders.length \r\n        : 0\r\n    };\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: {\r\n        orders: formattedOrders,\r\n        stats,\r\n        driver: {\r\n          id: driver.id,\r\n          name: `${driver.first_name} ${driver.last_name}`,\r\n          status: driver.status\r\n        },\r\n        metadata: {\r\n          date,\r\n          limit,\r\n          total: formattedOrders.length\r\n        }\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Error in pending-orders API:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "runtime", "request", "session", "auth", "user", "email", "NextResponse", "json", "error", "status", "supabase", "createAdminClient", "data", "driver", "driverError", "from", "select", "eq", "single", "searchParams", "URL", "url", "date", "get", "Date", "toISOString", "split", "limit", "parseInt", "console", "log", "process", "env", "NEXT_PUBLIC_SUPABASE_URL", "key", "SUPABASE_SERVICE_ROLE_KEY", "orders", "ordersError", "in", "not", "order", "ascending", "fulfillment_status", "shipping_address", "length", "JSON", "stringify", "orderIds", "map", "id", "orderItems", "itemsError", "forEach", "order_items", "filter", "item", "order_id", "validOrders", "address", "street_name", "street_number", "city_name", "formattedOrders", "orderNumber", "order_number", "total", "parseFloat", "paymentStatus", "payment_status", "fulfillmentStatus", "createdAt", "created_at", "estimatedDelivery", "estimated_delivery", "trackingNumber", "tracking_number", "notes", "shippingAddress", "streetName", "streetNumber", "floor", "apartment", "cityName", "stateName", "state_name", "zipCode", "zip_code", "fullAddress", "items", "productId", "product_id", "productName", "products", "name", "description", "quantity", "price", "weight", "dimensions", "totalItems", "reduce", "sum", "totalWeight", "stats", "totalOrders", "totalValue", "averageOrderValue", "success", "first_name", "last_name", "metadata"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5828ce15f68af80772dae4312b5b54880c47cecc"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_104tjkltnn = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_104tjkltnn();
cov_104tjkltnn().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_104tjkltnn().f[0]++;
  cov_104tjkltnn().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_104tjkltnn().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_104tjkltnn().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_104tjkltnn().f[1]++;
    cov_104tjkltnn().s[4]++;
    return GET;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_104tjkltnn().f[2]++;
    cov_104tjkltnn().s[5]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_104tjkltnn().s[6]++, require("next/server"));
const _config =
/* istanbul ignore next */
(cov_104tjkltnn().s[7]++, require("../../../../lib/auth/config"));
const _server1 =
/* istanbul ignore next */
(cov_104tjkltnn().s[8]++, require("../../../../lib/integrations/supabase/server"));
const runtime =
/* istanbul ignore next */
(cov_104tjkltnn().s[9]++, 'nodejs');
async function GET(request) {
  /* istanbul ignore next */
  cov_104tjkltnn().f[3]++;
  cov_104tjkltnn().s[10]++;
  try {
    // Verificar autenticaciÃ³n
    const session =
    /* istanbul ignore next */
    (cov_104tjkltnn().s[11]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_104tjkltnn().s[12]++;
    if (!session?.user?.email) {
      /* istanbul ignore next */
      cov_104tjkltnn().b[0][0]++;
      cov_104tjkltnn().s[13]++;
      return _server.NextResponse.json({
        error: 'No autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_104tjkltnn().b[0][1]++;
    }
    // Configurar Supabase con service role para acceso completo
    const supabase =
    /* istanbul ignore next */
    (cov_104tjkltnn().s[14]++, (0, _server1.createAdminClient)());
    // Verificar que el usuario sea un driver
    const {
      data: driver,
      error: driverError
    } =
    /* istanbul ignore next */
    (cov_104tjkltnn().s[15]++, await supabase.from('drivers').select('id, first_name, last_name, status').eq('email', session.user.email).eq('status', 'available').single());
    /* istanbul ignore next */
    cov_104tjkltnn().s[16]++;
    if (
    /* istanbul ignore next */
    (cov_104tjkltnn().b[2][0]++, driverError) ||
    /* istanbul ignore next */
    (cov_104tjkltnn().b[2][1]++, !driver)) {
      /* istanbul ignore next */
      cov_104tjkltnn().b[1][0]++;
      cov_104tjkltnn().s[17]++;
      return _server.NextResponse.json({
        error: 'Driver no encontrado o no disponible'
      }, {
        status: 403
      });
    } else
    /* istanbul ignore next */
    {
      cov_104tjkltnn().b[1][1]++;
    }
    // Obtener parÃ¡metros de consulta
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_104tjkltnn().s[18]++, new URL(request.url));
    const date =
    /* istanbul ignore next */
    (cov_104tjkltnn().s[19]++,
    /* istanbul ignore next */
    (cov_104tjkltnn().b[3][0]++, searchParams.get('date')) ||
    /* istanbul ignore next */
    (cov_104tjkltnn().b[3][1]++, new Date().toISOString().split('T')[0]));
    const limit =
    /* istanbul ignore next */
    (cov_104tjkltnn().s[20]++, parseInt(
    /* istanbul ignore next */
    (cov_104tjkltnn().b[4][0]++, searchParams.get('limit')) ||
    /* istanbul ignore next */
    (cov_104tjkltnn().b[4][1]++, '50')));
    // Debug: Verificar configuraciÃ³n de Supabase
    /* istanbul ignore next */
    cov_104tjkltnn().s[21]++;
    console.log('ğ§ Supabase client configured:', {
      url: process.env.NEXT_PUBLIC_SUPABASE_URL ?
      /* istanbul ignore next */
      (cov_104tjkltnn().b[5][0]++, 'SET') :
      /* istanbul ignore next */
      (cov_104tjkltnn().b[5][1]++, 'NOT SET'),
      key: process.env.SUPABASE_SERVICE_ROLE_KEY ?
      /* istanbul ignore next */
      (cov_104tjkltnn().b[6][0]++, 'SET') :
      /* istanbul ignore next */
      (cov_104tjkltnn().b[6][1]++, 'NOT SET')
    });
    // Consultar Ã³rdenes pendientes de entrega
    /* istanbul ignore next */
    cov_104tjkltnn().s[22]++;
    console.log('ğ Executing Supabase query...');
    const {
      data: orders,
      error: ordersError
    } =
    /* istanbul ignore next */
    (cov_104tjkltnn().s[23]++, await supabase.from('orders').select(`
        id,
        total,
        status,
        payment_status,
        fulfillment_status,
        shipping_address,
        estimated_delivery,
        created_at,
        order_number,
        tracking_number,
        notes
      `).in('status', ['confirmed', 'paid']).eq('fulfillment_status', 'unfulfilled').not('shipping_address', 'is', null).order('created_at', {
      ascending: true
    }).limit(limit));
    /* istanbul ignore next */
    cov_104tjkltnn().s[24]++;
    console.log('ğ Raw Supabase response:', {
      data: orders,
      error: ordersError
    });
    /* istanbul ignore next */
    cov_104tjkltnn().s[25]++;
    console.log('ğ Debug - Filters applied:', {
      status: ['confirmed', 'paid'],
      fulfillment_status: 'unfulfilled',
      shipping_address: 'not null'
    });
    /* istanbul ignore next */
    cov_104tjkltnn().s[26]++;
    if (ordersError) {
      /* istanbul ignore next */
      cov_104tjkltnn().b[7][0]++;
      cov_104tjkltnn().s[27]++;
      console.error('Error fetching orders:', ordersError);
      /* istanbul ignore next */
      cov_104tjkltnn().s[28]++;
      return _server.NextResponse.json({
        error: 'Error al obtener Ã³rdenes'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_104tjkltnn().b[7][1]++;
    }
    cov_104tjkltnn().s[29]++;
    console.log('ğ¦ Orders fetched from database:',
    /* istanbul ignore next */
    (cov_104tjkltnn().b[8][0]++, orders?.length) ||
    /* istanbul ignore next */
    (cov_104tjkltnn().b[8][1]++, 0));
    /* istanbul ignore next */
    cov_104tjkltnn().s[30]++;
    console.log('ğ¦ First order sample:', orders?.[0] ?
    /* istanbul ignore next */
    (cov_104tjkltnn().b[9][0]++, JSON.stringify(orders[0], null, 2)) :
    /* istanbul ignore next */
    (cov_104tjkltnn().b[9][1]++, 'No orders'));
    // Si hay Ã³rdenes, obtener los order_items por separado
    /* istanbul ignore next */
    cov_104tjkltnn().s[31]++;
    if (
    /* istanbul ignore next */
    (cov_104tjkltnn().b[11][0]++, orders) &&
    /* istanbul ignore next */
    (cov_104tjkltnn().b[11][1]++, orders.length > 0)) {
      /* istanbul ignore next */
      cov_104tjkltnn().b[10][0]++;
      const orderIds =
      /* istanbul ignore next */
      (cov_104tjkltnn().s[32]++, orders.map(order => {
        /* istanbul ignore next */
        cov_104tjkltnn().f[4]++;
        cov_104tjkltnn().s[33]++;
        return order.id;
      }));
      /* istanbul ignore next */
      cov_104tjkltnn().s[34]++;
      console.log('ğ Fetching order_items for orders:', orderIds);
      const {
        data: orderItems,
        error: itemsError
      } =
      /* istanbul ignore next */
      (cov_104tjkltnn().s[35]++, await supabase.from('order_items').select(`
          id,
          order_id,
          product_id,
          quantity,
          price,
          products (
            id,
            name,
            description
          )
        `).in('order_id', orderIds));
      /* istanbul ignore next */
      cov_104tjkltnn().s[36]++;
      if (itemsError) {
        /* istanbul ignore next */
        cov_104tjkltnn().b[12][0]++;
        cov_104tjkltnn().s[37]++;
        console.error('Error fetching order items:', itemsError);
      } else {
        /* istanbul ignore next */
        cov_104tjkltnn().b[12][1]++;
        cov_104tjkltnn().s[38]++;
        console.log('ğ¦ Order items fetched:',
        /* istanbul ignore next */
        (cov_104tjkltnn().b[13][0]++, orderItems?.length) ||
        /* istanbul ignore next */
        (cov_104tjkltnn().b[13][1]++, 0));
        // Agregar order_items a cada orden
        /* istanbul ignore next */
        cov_104tjkltnn().s[39]++;
        orders.forEach(order => {
          /* istanbul ignore next */
          cov_104tjkltnn().f[5]++;
          cov_104tjkltnn().s[40]++;
          order.order_items =
          /* istanbul ignore next */
          (cov_104tjkltnn().b[14][0]++, orderItems?.filter(item => {
            /* istanbul ignore next */
            cov_104tjkltnn().f[6]++;
            cov_104tjkltnn().s[41]++;
            return item.order_id === order.id;
          })) ||
          /* istanbul ignore next */
          (cov_104tjkltnn().b[14][1]++, []);
        });
      }
    } else
    /* istanbul ignore next */
    {
      cov_104tjkltnn().b[10][1]++;
    }
    // Filtrar Ã³rdenes que tienen direcciÃ³n de entrega vÃ¡lida
    const validOrders =
    /* istanbul ignore next */
    (cov_104tjkltnn().s[42]++,
    /* istanbul ignore next */
    (cov_104tjkltnn().b[15][0]++, orders?.filter(order => {
      /* istanbul ignore next */
      cov_104tjkltnn().f[7]++;
      const address =
      /* istanbul ignore next */
      (cov_104tjkltnn().s[43]++, order.shipping_address);
      /* istanbul ignore next */
      cov_104tjkltnn().s[44]++;
      return /* istanbul ignore next */(cov_104tjkltnn().b[16][0]++, address) &&
      /* istanbul ignore next */
      (cov_104tjkltnn().b[16][1]++, address.street_name) &&
      /* istanbul ignore next */
      (cov_104tjkltnn().b[16][2]++, address.street_number) &&
      /* istanbul ignore next */
      (cov_104tjkltnn().b[16][3]++, address.city_name);
    })) ||
    /* istanbul ignore next */
    (cov_104tjkltnn().b[15][1]++, []));
    // Formatear datos para el frontend
    const formattedOrders =
    /* istanbul ignore next */
    (cov_104tjkltnn().s[45]++, validOrders.map(order => {
      /* istanbul ignore next */
      cov_104tjkltnn().f[8]++;
      cov_104tjkltnn().s[46]++;
      return {
        id: order.id,
        orderNumber:
        /* istanbul ignore next */
        (cov_104tjkltnn().b[17][0]++, order.order_number) ||
        /* istanbul ignore next */
        (cov_104tjkltnn().b[17][1]++, `#${order.id}`),
        total: parseFloat(order.total),
        status: order.status,
        paymentStatus: order.payment_status,
        fulfillmentStatus: order.fulfillment_status,
        createdAt: order.created_at,
        estimatedDelivery: order.estimated_delivery,
        trackingNumber: order.tracking_number,
        notes: order.notes,
        shippingAddress: {
          streetName: order.shipping_address.street_name,
          streetNumber: order.shipping_address.street_number,
          floor:
          /* istanbul ignore next */
          (cov_104tjkltnn().b[18][0]++, order.shipping_address.floor) ||
          /* istanbul ignore next */
          (cov_104tjkltnn().b[18][1]++, ''),
          apartment:
          /* istanbul ignore next */
          (cov_104tjkltnn().b[19][0]++, order.shipping_address.apartment) ||
          /* istanbul ignore next */
          (cov_104tjkltnn().b[19][1]++, ''),
          cityName: order.shipping_address.city_name,
          stateName: order.shipping_address.state_name,
          zipCode: order.shipping_address.zip_code,
          fullAddress: `${order.shipping_address.street_name} ${order.shipping_address.street_number}${order.shipping_address.floor ?
          /* istanbul ignore next */
          (cov_104tjkltnn().b[20][0]++, `, Piso ${order.shipping_address.floor}`) :
          /* istanbul ignore next */
          (cov_104tjkltnn().b[20][1]++, '')}${order.shipping_address.apartment ?
          /* istanbul ignore next */
          (cov_104tjkltnn().b[21][0]++, `, Depto ${order.shipping_address.apartment}`) :
          /* istanbul ignore next */
          (cov_104tjkltnn().b[21][1]++, '')}, ${order.shipping_address.city_name}, ${order.shipping_address.state_name} ${order.shipping_address.zip_code}`
        },
        items:
        /* istanbul ignore next */
        (cov_104tjkltnn().b[22][0]++, order.order_items?.map(item => {
          /* istanbul ignore next */
          cov_104tjkltnn().f[9]++;
          cov_104tjkltnn().s[47]++;
          return {
            id: item.id,
            productId: item.product_id,
            productName:
            /* istanbul ignore next */
            (cov_104tjkltnn().b[23][0]++, item.products?.name) ||
            /* istanbul ignore next */
            (cov_104tjkltnn().b[23][1]++, 'Producto desconocido'),
            description:
            /* istanbul ignore next */
            (cov_104tjkltnn().b[24][0]++, item.products?.description) ||
            /* istanbul ignore next */
            (cov_104tjkltnn().b[24][1]++, ''),
            quantity: item.quantity,
            price: parseFloat(item.price),
            weight: 0,
            dimensions: null // Dimensiones por defecto hasta que se agregue la columna
          };
        })) ||
        /* istanbul ignore next */
        (cov_104tjkltnn().b[22][1]++, []),
        totalItems:
        /* istanbul ignore next */
        (cov_104tjkltnn().b[25][0]++, order.order_items?.reduce((sum, item) => {
          /* istanbul ignore next */
          cov_104tjkltnn().f[10]++;
          cov_104tjkltnn().s[48]++;
          return sum + item.quantity;
        }, 0)) ||
        /* istanbul ignore next */
        (cov_104tjkltnn().b[25][1]++, 0),
        totalWeight: 0 // Peso total por defecto hasta que se agregue la columna weight
      };
    }));
    // EstadÃ­sticas del dÃ­a
    const stats =
    /* istanbul ignore next */
    (cov_104tjkltnn().s[49]++, {
      totalOrders: formattedOrders.length,
      totalValue: formattedOrders.reduce((sum, order) => {
        /* istanbul ignore next */
        cov_104tjkltnn().f[11]++;
        cov_104tjkltnn().s[50]++;
        return sum + order.total;
      }, 0),
      totalItems: formattedOrders.reduce((sum, order) => {
        /* istanbul ignore next */
        cov_104tjkltnn().f[12]++;
        cov_104tjkltnn().s[51]++;
        return sum + order.totalItems;
      }, 0),
      totalWeight: formattedOrders.reduce((sum, order) => {
        /* istanbul ignore next */
        cov_104tjkltnn().f[13]++;
        cov_104tjkltnn().s[52]++;
        return sum + order.totalWeight;
      }, 0),
      averageOrderValue: formattedOrders.length > 0 ?
      /* istanbul ignore next */
      (cov_104tjkltnn().b[26][0]++, formattedOrders.reduce((sum, order) => {
        /* istanbul ignore next */
        cov_104tjkltnn().f[14]++;
        cov_104tjkltnn().s[53]++;
        return sum + order.total;
      }, 0) / formattedOrders.length) :
      /* istanbul ignore next */
      (cov_104tjkltnn().b[26][1]++, 0)
    });
    /* istanbul ignore next */
    cov_104tjkltnn().s[54]++;
    return _server.NextResponse.json({
      success: true,
      data: {
        orders: formattedOrders,
        stats,
        driver: {
          id: driver.id,
          name: `${driver.first_name} ${driver.last_name}`,
          status: driver.status
        },
        metadata: {
          date,
          limit,
          total: formattedOrders.length
        }
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_104tjkltnn().s[55]++;
    console.error('Error in pending-orders API:', error);
    /* istanbul ignore next */
    cov_104tjkltnn().s[56]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,