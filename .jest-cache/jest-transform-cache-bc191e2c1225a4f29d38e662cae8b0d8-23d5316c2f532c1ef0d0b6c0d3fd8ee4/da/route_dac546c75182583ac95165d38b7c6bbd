9de99027363e5ebdc7798389c3d11f8d
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_10g70c23u() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\driver\\navigation\\directions\\route.ts";
  var hash = "b8bb50cca86a20131655bdffd11bad5d9a0a300f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\driver\\navigation\\directions\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 20
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 23
        }
      },
      "7": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "8": {
        start: {
          line: 24,
          column: 16
        },
        end: {
          line: 24,
          column: 57
        }
      },
      "9": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 24
        }
      },
      "10": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 156,
          column: 5
        }
      },
      "11": {
        start: {
          line: 29,
          column: 24
        },
        end: {
          line: 29,
          column: 49
        }
      },
      "12": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 36,
          column: 9
        }
      },
      "13": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 35,
          column: 15
        }
      },
      "14": {
        start: {
          line: 37,
          column: 21
        },
        end: {
          line: 37,
          column: 41
        }
      },
      "15": {
        start: {
          line: 38,
          column: 80
        },
        end: {
          line: 38,
          column: 84
        }
      },
      "16": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 46,
          column: 9
        }
      },
      "17": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 45,
          column: 15
        }
      },
      "18": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 53,
          column: 9
        }
      },
      "19": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 52,
          column: 15
        }
      },
      "20": {
        start: {
          line: 55,
          column: 24
        },
        end: {
          line: 55,
          column: 78
        }
      },
      "21": {
        start: {
          line: 56,
          column: 23
        },
        end: {
          line: 66,
          column: 10
        }
      },
      "22": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 71,
          column: 9
        }
      },
      "23": {
        start: {
          line: 69,
          column: 33
        },
        end: {
          line: 69,
          column: 85
        }
      },
      "24": {
        start: {
          line: 69,
          column: 53
        },
        end: {
          line: 69,
          column: 74
        }
      },
      "25": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 70,
          column: 72
        }
      },
      "26": {
        start: {
          line: 73,
          column: 25
        },
        end: {
          line: 73,
          column: 60
        }
      },
      "27": {
        start: {
          line: 74,
          column: 21
        },
        end: {
          line: 74,
          column: 42
        }
      },
      "28": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 82,
          column: 9
        }
      },
      "29": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 64
        }
      },
      "30": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 81,
          column: 15
        }
      },
      "31": {
        start: {
          line: 83,
          column: 22
        },
        end: {
          line: 83,
          column: 36
        }
      },
      "32": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 90,
          column: 9
        }
      },
      "33": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 89,
          column: 15
        }
      },
      "34": {
        start: {
          line: 92,
          column: 29
        },
        end: {
          line: 92,
          column: 31
        }
      },
      "35": {
        start: {
          line: 93,
          column: 28
        },
        end: {
          line: 93,
          column: 29
        }
      },
      "36": {
        start: {
          line: 94,
          column: 28
        },
        end: {
          line: 94,
          column: 29
        }
      },
      "37": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 114,
          column: 9
        }
      },
      "38": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 96,
          column: 48
        }
      },
      "39": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 97,
          column: 48
        }
      },
      "40": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 113,
          column: 13
        }
      },
      "41": {
        start: {
          line: 99,
          column: 16
        },
        end: {
          line: 112,
          column: 19
        }
      },
      "42": {
        start: {
          line: 116,
          column: 31
        },
        end: {
          line: 147,
          column: 9
        }
      },
      "43": {
        start: {
          line: 120,
          column: 45
        },
        end: {
          line: 127,
          column: 21
        }
      },
      "44": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 148,
          column: 57
        }
      },
      "45": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 150,
          column: 68
        }
      },
      "46": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 155,
          column: 11
        }
      },
      "47": {
        start: {
          line: 161,
          column: 18
        },
        end: {
          line: 161,
          column: 44
        }
      },
      "48": {
        start: {
          line: 162,
          column: 20
        },
        end: {
          line: 162,
          column: 51
        }
      },
      "49": {
        start: {
          line: 163,
          column: 4
        },
        end: {
          line: 167,
          column: 5
        }
      },
      "50": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 164,
          column: 39
        }
      },
      "51": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 166,
          column: 29
        }
      },
      "52": {
        start: {
          line: 170,
          column: 4
        },
        end: {
          line: 218,
          column: 5
        }
      },
      "53": {
        start: {
          line: 172,
          column: 24
        },
        end: {
          line: 172,
          column: 49
        }
      },
      "54": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 179,
          column: 9
        }
      },
      "55": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 178,
          column: 15
        }
      },
      "56": {
        start: {
          line: 181,
          column: 33
        },
        end: {
          line: 181,
          column: 53
        }
      },
      "57": {
        start: {
          line: 182,
          column: 23
        },
        end: {
          line: 182,
          column: 49
        }
      },
      "58": {
        start: {
          line: 183,
          column: 28
        },
        end: {
          line: 183,
          column: 59
        }
      },
      "59": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 190,
          column: 9
        }
      },
      "60": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 189,
          column: 15
        }
      },
      "61": {
        start: {
          line: 192,
          column: 39
        },
        end: {
          line: 192,
          column: 68
        }
      },
      "62": {
        start: {
          line: 193,
          column: 35
        },
        end: {
          line: 193,
          column: 69
        }
      },
      "63": {
        start: {
          line: 194,
          column: 21
        },
        end: {
          line: 203,
          column: 9
        }
      },
      "64": {
        start: {
          line: 205,
          column: 28
        },
        end: {
          line: 209,
          column: 10
        }
      },
      "65": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 210,
          column: 39
        }
      },
      "66": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 212,
          column: 68
        }
      },
      "67": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 217,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "POST",
        decl: {
          start: {
            line: 26,
            column: 15
          },
          end: {
            line: 26,
            column: 19
          }
        },
        loc: {
          start: {
            line: 26,
            column: 29
          },
          end: {
            line: 157,
            column: 1
          }
        },
        line: 26
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 69,
            column: 47
          },
          end: {
            line: 69,
            column: 48
          }
        },
        loc: {
          start: {
            line: 69,
            column: 53
          },
          end: {
            line: 69,
            column: 74
          }
        },
        line: 69
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 120,
            column: 37
          },
          end: {
            line: 120,
            column: 38
          }
        },
        loc: {
          start: {
            line: 120,
            column: 45
          },
          end: {
            line: 127,
            column: 21
          }
        },
        line: 120
      },
      "7": {
        name: "formatDuration",
        decl: {
          start: {
            line: 160,
            column: 13
          },
          end: {
            line: 160,
            column: 27
          }
        },
        loc: {
          start: {
            line: 160,
            column: 37
          },
          end: {
            line: 168,
            column: 1
          }
        },
        line: 160
      },
      "8": {
        name: "GET",
        decl: {
          start: {
            line: 169,
            column: 15
          },
          end: {
            line: 169,
            column: 18
          }
        },
        loc: {
          start: {
            line: 169,
            column: 28
          },
          end: {
            line: 219,
            column: 1
          }
        },
        line: 169
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "1": {
        loc: {
          start: {
            line: 38,
            column: 37
          },
          end: {
            line: 38,
            column: 51
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 38,
            column: 49
          },
          end: {
            line: 38,
            column: 51
          }
        }],
        line: 38
      },
      "2": {
        loc: {
          start: {
            line: 38,
            column: 53
          },
          end: {
            line: 38,
            column: 75
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 38,
            column: 66
          },
          end: {
            line: 38,
            column: 75
          }
        }],
        line: 38
      },
      "3": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "4": {
        loc: {
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 40,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 40,
            column: 19
          }
        }, {
          start: {
            line: 40,
            column: 23
          },
          end: {
            line: 40,
            column: 35
          }
        }],
        line: 40
      },
      "5": {
        loc: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "6": {
        loc: {
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "7": {
        loc: {
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 82,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 82,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 75
      },
      "8": {
        loc: {
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 90,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 90,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 84
      },
      "9": {
        loc: {
          start: {
            line: 103,
            column: 30
          },
          end: {
            line: 103,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 103,
            column: 30
          },
          end: {
            line: 103,
            column: 43
          }
        }, {
          start: {
            line: 103,
            column: 47
          },
          end: {
            line: 103,
            column: 57
          }
        }],
        line: 103
      },
      "10": {
        loc: {
          start: {
            line: 139,
            column: 33
          },
          end: {
            line: 139,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 139,
            column: 33
          },
          end: {
            line: 139,
            column: 53
          }
        }, {
          start: {
            line: 139,
            column: 57
          },
          end: {
            line: 139,
            column: 59
          }
        }],
        line: 139
      },
      "11": {
        loc: {
          start: {
            line: 163,
            column: 4
          },
          end: {
            line: 167,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 163,
            column: 4
          },
          end: {
            line: 167,
            column: 5
          }
        }, {
          start: {
            line: 165,
            column: 11
          },
          end: {
            line: 167,
            column: 5
          }
        }],
        line: 163
      },
      "12": {
        loc: {
          start: {
            line: 173,
            column: 8
          },
          end: {
            line: 179,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 8
          },
          end: {
            line: 179,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 173
      },
      "13": {
        loc: {
          start: {
            line: 184,
            column: 8
          },
          end: {
            line: 190,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 184,
            column: 8
          },
          end: {
            line: 190,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 184
      },
      "14": {
        loc: {
          start: {
            line: 184,
            column: 12
          },
          end: {
            line: 184,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 184,
            column: 12
          },
          end: {
            line: 184,
            column: 19
          }
        }, {
          start: {
            line: 184,
            column: 23
          },
          end: {
            line: 184,
            column: 35
          }
        }],
        line: 184
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0],
      "1": [0],
      "2": [0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\driver\\navigation\\directions\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n/**\r\n * API para obtener direcciones de navegaci\xF3n usando Google Maps Directions API\r\n * POST /api/driver/navigation/directions\r\n */\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { auth } from '@/lib/auth/config';\r\n\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    // Verificar autenticaci\xF3n\r\n    const session = await auth();\r\n    \r\n    if (!session?.user?.email) {\r\n      return NextResponse.json(\r\n        { error: 'No autorizado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    const body = await request.json();\r\n    const { origin, destination, waypoints = [], travelMode = 'DRIVING' } = body;\r\n\r\n    // Validar par\xE1metros\r\n    if (!origin || !destination) {\r\n      return NextResponse.json(\r\n        { error: 'Origen y destino son requeridos' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    if (!process.env.GOOGLE_MAPS_API_KEY) {\r\n      return NextResponse.json(\r\n        { error: 'Google Maps API key no configurada' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Construir URL para Google Directions API\r\n    const baseUrl = 'https://maps.googleapis.com/maps/api/directions/json';\r\n    const params = new URLSearchParams({\r\n      origin: `${origin.lat},${origin.lng}`,\r\n      destination: `${destination.lat},${destination.lng}`,\r\n      mode: travelMode.toLowerCase(),\r\n      key: process.env.GOOGLE_MAPS_API_KEY,\r\n      language: 'es',\r\n      region: 'AR',\r\n      units: 'metric',\r\n      alternatives: 'false',\r\n      avoid: 'tolls'\r\n    });\r\n\r\n    // Agregar waypoints si existen\r\n    if (waypoints.length > 0) {\r\n      const waypointsStr = waypoints\r\n        .map((wp: any) => `${wp.lat},${wp.lng}`)\r\n        .join('|');\r\n      params.append('waypoints', `optimize:true|${waypointsStr}`);\r\n    }\r\n\r\n    // Hacer petici\xF3n a Google Directions API\r\n    const response = await fetch(`${baseUrl}?${params}`);\r\n    const data = await response.json();\r\n\r\n    if (data.status !== 'OK') {\r\n      console.error('Google Directions API error:', data);\r\n      return NextResponse.json(\r\n        { error: `Error de Google Maps: ${data.status}` },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    const route = data.routes[0];\r\n    if (!route) {\r\n      return NextResponse.json(\r\n        { error: 'No se encontr\xF3 ruta' },\r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    // Procesar instrucciones de navegaci\xF3n\r\n    const instructions = [];\r\n    let totalDistance = 0;\r\n    let totalDuration = 0;\r\n\r\n    for (const leg of route.legs) {\r\n      totalDistance += leg.distance.value;\r\n      totalDuration += leg.duration.value;\r\n\r\n      for (const step of leg.steps) {\r\n        instructions.push({\r\n          instruction: step.html_instructions.replace(/<[^>]*>/g, ''), // Remover HTML\r\n          distance: step.distance.text,\r\n          duration: step.duration.text,\r\n          maneuver: step.maneuver || 'straight',\r\n          coordinates: {\r\n            lat: step.start_location.lat,\r\n            lng: step.start_location.lng\r\n          },\r\n          end_coordinates: {\r\n            lat: step.end_location.lat,\r\n            lng: step.end_location.lng\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    // Respuesta estructurada\r\n    const navigationData = {\r\n      route: {\r\n        overview_polyline: route.overview_polyline.points,\r\n        bounds: route.bounds,\r\n        legs: route.legs.map(leg => ({\r\n          distance: leg.distance,\r\n          duration: leg.duration,\r\n          start_address: leg.start_address,\r\n          end_address: leg.end_address,\r\n          start_location: leg.start_location,\r\n          end_location: leg.end_location\r\n        }))\r\n      },\r\n      instructions,\r\n      summary: {\r\n        total_distance: {\r\n          value: totalDistance,\r\n          text: `${(totalDistance / 1000).toFixed(1)} km`\r\n        },\r\n        total_duration: {\r\n          value: totalDuration,\r\n          text: formatDuration(totalDuration)\r\n        },\r\n        waypoints_order: route.waypoint_order || []\r\n      },\r\n      metadata: {\r\n        generated_at: new Date().toISOString(),\r\n        travel_mode: travelMode,\r\n        language: 'es',\r\n        region: 'AR'\r\n      }\r\n    };\r\n\r\n    return NextResponse.json(navigationData);\r\n\r\n  } catch (error) {\r\n    console.error('Error in navigation directions API:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Formatear duraci\xF3n en segundos a formato legible\r\n */\r\nfunction formatDuration(seconds: number): string {\r\n  const hours = Math.floor(seconds / 3600);\r\n  const minutes = Math.floor((seconds % 3600) / 60);\r\n  \r\n  if (hours > 0) {\r\n    return `${hours}h ${minutes}m`;\r\n  } else {\r\n    return `${minutes}m`;\r\n  }\r\n}\r\n\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    // Verificar autenticaci\xF3n\r\n    const session = await auth();\r\n    \r\n    if (!session?.user?.email) {\r\n      return NextResponse.json(\r\n        { error: 'No autorizado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    // Obtener par\xE1metros de la URL\r\n    const { searchParams } = new URL(request.url);\r\n    const origin = searchParams.get('origin');\r\n    const destination = searchParams.get('destination');\r\n\r\n    if (!origin || !destination) {\r\n      return NextResponse.json(\r\n        { error: 'Par\xE1metros origin y destination requeridos' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Redirigir a POST con los par\xE1metros\r\n    const [originLat, originLng] = origin.split(',').map(Number);\r\n    const [destLat, destLng] = destination.split(',').map(Number);\r\n\r\n    const body = {\r\n      origin: { lat: originLat, lng: originLng },\r\n      destination: { lat: destLat, lng: destLng }\r\n    };\r\n\r\n    // Simular POST request\r\n    const postRequest = new NextRequest(request.url, {\r\n      method: 'POST',\r\n      headers: request.headers,\r\n      body: JSON.stringify(body)\r\n    });\r\n\r\n    return await POST(postRequest);\r\n\r\n  } catch (error) {\r\n    console.error('Error in navigation directions GET:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "POST", "runtime", "request", "session", "auth", "user", "email", "NextResponse", "json", "error", "status", "body", "origin", "destination", "waypoints", "travelMode", "process", "env", "GOOGLE_MAPS_API_KEY", "baseUrl", "params", "URLSearchParams", "lat", "lng", "mode", "toLowerCase", "key", "language", "region", "units", "alternatives", "avoid", "length", "waypointsStr", "map", "wp", "join", "append", "response", "fetch", "data", "console", "route", "routes", "instructions", "totalDistance", "totalDuration", "leg", "legs", "distance", "value", "duration", "step", "steps", "push", "instruction", "html_instructions", "replace", "text", "maneuver", "coordinates", "start_location", "end_coordinates", "end_location", "navigationData", "overview_polyline", "points", "bounds", "start_address", "end_address", "summary", "total_distance", "toFixed", "total_duration", "formatDuration", "waypoints_order", "waypoint_order", "metadata", "generated_at", "Date", "toISOString", "travel_mode", "seconds", "hours", "Math", "floor", "minutes", "searchParams", "URL", "url", "get", "originLat", "originLng", "split", "Number", "destLat", "destLng", "postRequest", "NextRequest", "method", "headers", "JSON", "stringify"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b8bb50cca86a20131655bdffd11bad5d9a0a300f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_10g70c23u = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_10g70c23u();
cov_10g70c23u().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_10g70c23u().f[0]++;
  cov_10g70c23u().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_10g70c23u().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_10g70c23u().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_10g70c23u().f[1]++;
    cov_10g70c23u().s[4]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_10g70c23u().f[2]++;
    cov_10g70c23u().s[5]++;
    return POST;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_10g70c23u().f[3]++;
    cov_10g70c23u().s[6]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_10g70c23u().s[7]++, require("next/server"));
const _config =
/* istanbul ignore next */
(cov_10g70c23u().s[8]++, require("../../../../../lib/auth/config"));
const runtime =
/* istanbul ignore next */
(cov_10g70c23u().s[9]++, 'nodejs');
async function POST(request) {
  /* istanbul ignore next */
  cov_10g70c23u().f[4]++;
  cov_10g70c23u().s[10]++;
  try {
    // Verificar autenticaciÃ³n
    const session =
    /* istanbul ignore next */
    (cov_10g70c23u().s[11]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_10g70c23u().s[12]++;
    if (!session?.user?.email) {
      /* istanbul ignore next */
      cov_10g70c23u().b[0][0]++;
      cov_10g70c23u().s[13]++;
      return _server.NextResponse.json({
        error: 'No autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_10g70c23u().b[0][1]++;
    }
    const body =
    /* istanbul ignore next */
    (cov_10g70c23u().s[14]++, await request.json());
    const {
      origin,
      destination,
      waypoints =
      /* istanbul ignore next */
      (cov_10g70c23u().b[1][0]++, []),
      travelMode =
      /* istanbul ignore next */
      (cov_10g70c23u().b[2][0]++, 'DRIVING')
    } =
    /* istanbul ignore next */
    (cov_10g70c23u().s[15]++, body);
    // Validar parÃ¡metros
    /* istanbul ignore next */
    cov_10g70c23u().s[16]++;
    if (
    /* istanbul ignore next */
    (cov_10g70c23u().b[4][0]++, !origin) ||
    /* istanbul ignore next */
    (cov_10g70c23u().b[4][1]++, !destination)) {
      /* istanbul ignore next */
      cov_10g70c23u().b[3][0]++;
      cov_10g70c23u().s[17]++;
      return _server.NextResponse.json({
        error: 'Origen y destino son requeridos'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_10g70c23u().b[3][1]++;
    }
    cov_10g70c23u().s[18]++;
    if (!process.env.GOOGLE_MAPS_API_KEY) {
      /* istanbul ignore next */
      cov_10g70c23u().b[5][0]++;
      cov_10g70c23u().s[19]++;
      return _server.NextResponse.json({
        error: 'Google Maps API key no configurada'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_10g70c23u().b[5][1]++;
    }
    // Construir URL para Google Directions API
    const baseUrl =
    /* istanbul ignore next */
    (cov_10g70c23u().s[20]++, 'https://maps.googleapis.com/maps/api/directions/json');
    const params =
    /* istanbul ignore next */
    (cov_10g70c23u().s[21]++, new URLSearchParams({
      origin: `${origin.lat},${origin.lng}`,
      destination: `${destination.lat},${destination.lng}`,
      mode: travelMode.toLowerCase(),
      key: process.env.GOOGLE_MAPS_API_KEY,
      language: 'es',
      region: 'AR',
      units: 'metric',
      alternatives: 'false',
      avoid: 'tolls'
    }));
    // Agregar waypoints si existen
    /* istanbul ignore next */
    cov_10g70c23u().s[22]++;
    if (waypoints.length > 0) {
      /* istanbul ignore next */
      cov_10g70c23u().b[6][0]++;
      const waypointsStr =
      /* istanbul ignore next */
      (cov_10g70c23u().s[23]++, waypoints.map(wp => {
        /* istanbul ignore next */
        cov_10g70c23u().f[5]++;
        cov_10g70c23u().s[24]++;
        return `${wp.lat},${wp.lng}`;
      }).join('|'));
      /* istanbul ignore next */
      cov_10g70c23u().s[25]++;
      params.append('waypoints', `optimize:true|${waypointsStr}`);
    } else
    /* istanbul ignore next */
    {
      cov_10g70c23u().b[6][1]++;
    }
    // Hacer peticiÃ³n a Google Directions API
    const response =
    /* istanbul ignore next */
    (cov_10g70c23u().s[26]++, await fetch(`${baseUrl}?${params}`));
    const data =
    /* istanbul ignore next */
    (cov_10g70c23u().s[27]++, await response.json());
    /* istanbul ignore next */
    cov_10g70c23u().s[28]++;
    if (data.status !== 'OK') {
      /* istanbul ignore next */
      cov_10g70c23u().b[7][0]++;
      cov_10g70c23u().s[29]++;
      console.error('Google Directions API error:', data);
      /* istanbul ignore next */
      cov_10g70c23u().s[30]++;
      return _server.NextResponse.json({
        error: `Error de Google Maps: ${data.status}`
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_10g70c23u().b[7][1]++;
    }
    const route =
    /* istanbul ignore next */
    (cov_10g70c23u().s[31]++, data.routes[0]);
    /* istanbul ignore next */
    cov_10g70c23u().s[32]++;
    if (!route) {
      /* istanbul ignore next */
      cov_10g70c23u().b[8][0]++;
      cov_10g70c23u().s[33]++;
      return _server.NextResponse.json({
        error: 'No se encontrÃ³ ruta'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_10g70c23u().b[8][1]++;
    }
    // Procesar instrucciones de navegaciÃ³n
    const instructions =
    /* istanbul ignore next */
    (cov_10g70c23u().s[34]++, []);
    let totalDistance =
    /* istanbul ignore next */
    (cov_10g70c23u().s[35]++, 0);
    let totalDuration =
    /* istanbul ignore next */
    (cov_10g70c23u().s[36]++, 0);
    /* istanbul ignore next */
    cov_10g70c23u().s[37]++;
    for (const leg of route.legs) {
      /* istanbul ignore next */
      cov_10g70c23u().s[38]++;
      totalDistance += leg.distance.value;
      /* istanbul ignore next */
      cov_10g70c23u().s[39]++;
      totalDuration += leg.duration.value;
      /* istanbul ignore next */
      cov_10g70c23u().s[40]++;
      for (const step of leg.steps) {
        /* istanbul ignore next */
        cov_10g70c23u().s[41]++;
        instructions.push({
          instruction: step.html_instructions.replace(/<[^>]*>/g, ''),
          distance: step.distance.text,
          duration: step.duration.text,
          maneuver:
          /* istanbul ignore next */
          (cov_10g70c23u().b[9][0]++, step.maneuver) ||
          /* istanbul ignore next */
          (cov_10g70c23u().b[9][1]++, 'straight'),
          coordinates: {
            lat: step.start_location.lat,
            lng: step.start_location.lng
          },
          end_coordinates: {
            lat: step.end_location.lat,
            lng: step.end_location.lng
          }
        });
      }
    }
    // Respuesta estructurada
    const navigationData =
    /* istanbul ignore next */
    (cov_10g70c23u().s[42]++, {
      route: {
        overview_polyline: route.overview_polyline.points,
        bounds: route.bounds,
        legs: route.legs.map(leg => {
          /* istanbul ignore next */
          cov_10g70c23u().f[6]++;
          cov_10g70c23u().s[43]++;
          return {
            distance: leg.distance,
            duration: leg.duration,
            start_address: leg.start_address,
            end_address: leg.end_address,
            start_location: leg.start_location,
            end_location: leg.end_location
          };
        })
      },
      instructions,
      summary: {
        total_distance: {
          value: totalDistance,
          text: `${(totalDistance / 1000).toFixed(1)} km`
        },
        total_duration: {
          value: totalDuration,
          text: formatDuration(totalDuration)
        },
        waypoints_order:
        /* istanbul ignore next */
        (cov_10g70c23u().b[10][0]++, route.waypoint_order) ||
        /* istanbul ignore next */
        (cov_10g70c23u().b[10][1]++, [])
      },
      metadata: {
        generated_at: new Date().toISOString(),
        travel_mode: travelMode,
        language: 'es',
        region: 'AR'
      }
    });
    /* istanbul ignore next */
    cov_10g70c23u().s[44]++;
    return _server.NextResponse.json(navigationData);
  } catch (error) {
    /* istanbul ignore next */
    cov_10g70c23u().s[45]++;
    console.error('Error in navigation directions API:', error);
    /* istanbul ignore next */
    cov_10g70c23u().s[46]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
/**
 * Formatear duraciÃ³n en segundos a formato legible
 */
function formatDuration(seconds) {
  /* istanbul ignore next */
  cov_10g70c23u().f[7]++;
  const hours =
  /* istanbul ignore next */
  (cov_10g70c23u().s[47]++, Math.floor(seconds / 3600));
  const minutes =
  /* istanbul ignore next */
  (cov_10g70c23u().s[48]++, Math.floor(seconds % 3600 / 60));
  /* istanbul ignore next */
  cov_10g70c23u().s[49]++;
  if (hours > 0) {
    /* istanbul ignore next */
    cov_10g70c23u().b[11][0]++;
    cov_10g70c23u().s[50]++;
    return `${hours}h ${minutes}m`;
  } else {
    /* istanbul ignore next */
    cov_10g70c23u().b[11][1]++;
    cov_10g70c23u().s[51]++;
    return `${minutes}m`;
  }
}
async function GET(request) {
  /* istanbul ignore next */
  cov_10g70c23u().f[8]++;
  cov_10g70c23u().s[52]++;
  try {
    // Verificar autenticaciÃ³n
    const session =
    /* istanbul ignore next */
    (cov_10g70c23u().s[53]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_10g70c23u().s[54]++;
    if (!session?.user?.email) {
      /* istanbul ignore next */
      cov_10g70c23u().b[12][0]++;
      cov_10g70c23u().s[55]++;
      return _server.NextResponse.json({
        error: 'No autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_10g70c23u().b[12][1]++;
    }
    // Obtener parÃ¡metros de la URL
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_10g70c23u().s[56]++, new URL(request.url));
    const origin =
    /* istanbul ignore next */
    (cov_10g70c23u().s[57]++, searchParams.get('origin'));
    const destination =
    /* istanbul ignore next */
    (cov_10g70c23u().s[58]++, searchParams.get('destination'));
    /* istanbul ignore next */
    cov_10g70c23u().s[59]++;
    if (
    /* istanbul ignore next */
    (cov_10g70c23u().b[14][0]++, !origin) ||
    /* istanbul ignore next */
    (cov_10g70c23u().b[14][1]++, !destination)) {
      /* istanbul ignore next */
      cov_10g70c23u().b[13][0]++;
      cov_10g70c23u().s[60]++;
      return _server.NextResponse.json({
        error: 'ParÃ¡metros origin y destination requeridos'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_10g70c23u().b[13][1]++;
    }
    // Redirigir a POST con los parÃ¡metros
    const [originLat, originLng] =
    /* istanbul ignore next */
    (cov_10g70c23u().s[61]++, origin.split(',').map(Number));
    const [destLat, destLng] =
    /* istanbul ignore next */
    (cov_10g70c23u().s[62]++, destination.split(',').map(Number));
    const body =
    /* istanbul ignore next */
    (cov_10g70c23u().s[63]++, {
      origin: {
        lat: originLat,
        lng: originLng
      },
      destination: {
        lat: destLat,
        lng: destLng
      }
    });
    // Simular POST request
    const postRequest =
    /* istanbul ignore next */
    (cov_10g70c23u().s[64]++, new _server.NextRequest(request.url, {
      method: 'POST',
      headers: request.headers,
      body: JSON.stringify(body)
    }));
    /* istanbul ignore next */
    cov_10g70c23u().s[65]++;
    return await POST(postRequest);
  } catch (error) {
    /* istanbul ignore next */
    cov_10g70c23u().s[66]++;
    console.error('Error in navigation directions GET:', error);
    /* istanbul ignore next */
    cov_10g70c23u().s[67]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,