{"version":3,"names":["cov_llsqirgfg","actualCoverage","s","logAdminAction","f","withApiLogging","handler","request","context","startTime","Date","now","logEntry","timestamp","toISOString","method","path","URL","url","pathname","user_id","user","id","response","status_code","status","response_time_ms","console","log","error","b","statusCode","message","userId","action","resource","resourceId","oldData","newData","auditEntry","resource_id","old_data","new_data","ip_address","user_agent"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\api\\api-logger.ts"],"sourcesContent":["// ðŸ”§ Enterprise API Logger\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\n\r\ninterface ApiLogEntry {\r\n  timestamp: string;\r\n  method: string;\r\n  path: string;\r\n  user_id?: string;\r\n  status_code: number;\r\n  response_time_ms: number;\r\n  error?: string;\r\n  metadata?: any;\r\n}\r\n\r\nexport function withApiLogging(handler: Function) {\r\n  return async function (request: NextRequest, context: any) {\r\n    const startTime = Date.now();\r\n    const logEntry: Partial<ApiLogEntry> = {\r\n      timestamp: new Date().toISOString(),\r\n      method: request.method,\r\n      path: new URL(request.url).pathname,\r\n      user_id: (request as any).user?.id\r\n    };\r\n\r\n    try {\r\n      const response = await handler(request, context);\r\n      \r\n      logEntry.status_code = response.status;\r\n      logEntry.response_time_ms = Date.now() - startTime;\r\n      \r\n      // Log exitoso\r\n      console.log('API Success:', logEntry);\r\n      \r\n      return response;\r\n    } catch (error) {\r\n      logEntry.status_code = (error as any).statusCode || 500;\r\n      logEntry.response_time_ms = Date.now() - startTime;\r\n      logEntry.error = (error as Error).message;\r\n      \r\n      // Log de error\r\n      console.error('API Error:', logEntry);\r\n      \r\n      throw error;\r\n    }\r\n  };\r\n}\r\n\r\nexport function logAdminAction(\r\n  userId: string,\r\n  action: string,\r\n  resource: string,\r\n  resourceId: string,\r\n  oldData?: any,\r\n  newData?: any\r\n) {\r\n  const auditEntry = {\r\n    timestamp: new Date().toISOString(),\r\n    user_id: userId,\r\n    action,\r\n    resource,\r\n    resource_id: resourceId,\r\n    old_data: oldData,\r\n    new_data: newData,\r\n    ip_address: 'unknown', // TODO: Extract from request\r\n    user_agent: 'unknown'  // TODO: Extract from request\r\n  };\r\n\r\n  console.log('Admin Action:', auditEntry);\r\n  \r\n  // TODO: Store in audit table\r\n  return auditEntry;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]}