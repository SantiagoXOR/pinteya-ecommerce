{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\Dashboard\\EnterpriseMonitoringDashboard.tsx"],"sourcesContent":["/**\r\n * Dashboard Enterprise de Monitoreo Completo\r\n * Integra m√©tricas de todos los sistemas enterprise implementados\r\n */\r\n\r\n'use client';\r\n\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport {\r\n  Activity,\r\n  Shield,\r\n  Zap,\r\n  Database,\r\n  AlertTriangle,\r\n  CheckCircle,\r\n  Clock,\r\n  Users,\r\n  Server,\r\n  TrendingUp,\r\n  TrendingDown,\r\n  RefreshCw,\r\n  Download,\r\n  Settings,\r\n  Eye,\r\n  Lock,\r\n  Cpu,\r\n  HardDrive,\r\n  Network,\r\n  BarChart3\r\n} from 'lucide-react';\r\n\r\n// =====================================================\r\n// TIPOS E INTERFACES\r\n// =====================================================\r\n\r\ninterface SystemHealth {\r\n  status: 'healthy' | 'warning' | 'critical' | 'unknown';\r\n  uptime: number;\r\n  lastCheck: string;\r\n  responseTime: number;\r\n  errorRate: number;\r\n}\r\n\r\ninterface SecurityMetrics {\r\n  rateLimitingStats: {\r\n    totalRequests: number;\r\n    blockedRequests: number;\r\n    allowedRequests: number;\r\n    topBlockedIPs: Array<{ ip: string; count: number }>;\r\n    averageResponseTime: number;\r\n  };\r\n  auditingStats: {\r\n    totalEvents: number;\r\n    criticalEvents: number;\r\n    anomaliesDetected: number;\r\n    lastIncident: string | null;\r\n  };\r\n  validationStats: {\r\n    totalValidations: number;\r\n    failedValidations: number;\r\n    attacksBlocked: number;\r\n    successRate: number;\r\n  };\r\n}\r\n\r\ninterface CacheMetrics {\r\n  hitRate: number;\r\n  totalHits: number;\r\n  totalMisses: number;\r\n  averageResponseTime: number;\r\n  memoryUsage: number;\r\n  evictions: number;\r\n  topKeys: Array<{ key: string; hits: number }>;\r\n}\r\n\r\ninterface PerformanceMetrics {\r\n  apiResponseTimes: {\r\n    p50: number;\r\n    p95: number;\r\n    p99: number;\r\n  };\r\n  throughput: number;\r\n  errorRates: {\r\n    '4xx': number;\r\n    '5xx': number;\r\n  };\r\n  resourceUsage: {\r\n    cpu: number;\r\n    memory: number;\r\n    disk: number;\r\n  };\r\n}\r\n\r\ninterface EnterpriseMetrics {\r\n  systemHealth: Record<string, SystemHealth>;\r\n  security: SecurityMetrics;\r\n  cache: CacheMetrics;\r\n  performance: PerformanceMetrics;\r\n  lastUpdated: string;\r\n}\r\n\r\n// =====================================================\r\n// COMPONENTES DE M√âTRICAS\r\n// =====================================================\r\n\r\nconst MetricCard: React.FC<{\r\n  title: string;\r\n  value: string | number;\r\n  change?: number;\r\n  icon: React.ReactNode;\r\n  status?: 'success' | 'warning' | 'error' | 'info';\r\n  subtitle?: string;\r\n}> = ({ title, value, change, icon, status = 'info', subtitle }) => {\r\n  const getStatusColor = () => {\r\n    switch (status) {\r\n      case 'success': return 'text-green-600 bg-green-50';\r\n      case 'warning': return 'text-yellow-600 bg-yellow-50';\r\n      case 'error': return 'text-red-600 bg-red-50';\r\n      default: return 'text-blue-600 bg-blue-50';\r\n    }\r\n  };\r\n\r\n  const getChangeColor = () => {\r\n    if (change === undefined) {return '';}\r\n    return change >= 0 ? 'text-green-600' : 'text-red-600';\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent className=\"p-6\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center space-x-3\">\r\n            <div className={`p-2 rounded-lg ${getStatusColor()}`}>\r\n              {icon}\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm font-medium text-gray-600\">{title}</p>\r\n              <p className=\"text-2xl font-bold text-gray-900\">{value}</p>\r\n              {subtitle && (\r\n                <p className=\"text-xs text-gray-500\">{subtitle}</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n          {change !== undefined && (\r\n            <div className={`flex items-center ${getChangeColor()}`}>\r\n              {change >= 0 ? <TrendingUp className=\"w-4 h-4\" /> : <TrendingDown className=\"w-4 h-4\" />}\r\n              <span className=\"text-sm font-medium ml-1\">\r\n                {Math.abs(change).toFixed(1)}%\r\n              </span>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst SystemHealthIndicator: React.FC<{\r\n  name: string;\r\n  health: SystemHealth;\r\n}> = ({ name, health }) => {\r\n  const getStatusBadge = () => {\r\n    switch (health.status) {\r\n      case 'healthy':\r\n        return <Badge className=\"bg-green-100 text-green-800\">Saludable</Badge>;\r\n      case 'warning':\r\n        return <Badge className=\"bg-yellow-100 text-yellow-800\">Advertencia</Badge>;\r\n      case 'critical':\r\n        return <Badge className=\"bg-red-100 text-red-800\">Cr√≠tico</Badge>;\r\n      default:\r\n        return <Badge className=\"bg-gray-100 text-gray-800\">Desconocido</Badge>;\r\n    }\r\n  };\r\n\r\n  const formatUptime = (seconds: number) => {\r\n    const days = Math.floor(seconds / 86400);\r\n    const hours = Math.floor((seconds % 86400) / 3600);\r\n    const minutes = Math.floor((seconds % 3600) / 60);\r\n    return `${days}d ${hours}h ${minutes}m`;\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent className=\"p-4\">\r\n        <div className=\"flex items-center justify-between mb-3\">\r\n          <h3 className=\"font-semibold text-gray-900\">{name}</h3>\r\n          {getStatusBadge()}\r\n        </div>\r\n        <div className=\"space-y-2 text-sm\">\r\n          <div className=\"flex justify-between\">\r\n            <span className=\"text-gray-600\">Uptime:</span>\r\n            <span className=\"font-medium\">{formatUptime(health.uptime)}</span>\r\n          </div>\r\n          <div className=\"flex justify-between\">\r\n            <span className=\"text-gray-600\">Tiempo respuesta:</span>\r\n            <span className=\"font-medium\">{health.responseTime}ms</span>\r\n          </div>\r\n          <div className=\"flex justify-between\">\r\n            <span className=\"text-gray-600\">Tasa de error:</span>\r\n            <span className=\"font-medium\">{(health.errorRate * 100).toFixed(2)}%</span>\r\n          </div>\r\n          <div className=\"flex justify-between\">\r\n            <span className=\"text-gray-600\">√öltima verificaci√≥n:</span>\r\n            <span className=\"font-medium\">{new Date(health.lastCheck).toLocaleTimeString()}</span>\r\n          </div>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\n// =====================================================\r\n// COMPONENTE PRINCIPAL\r\n// =====================================================\r\n\r\nexport const EnterpriseMonitoringDashboard: React.FC = () => {\r\n  const [metrics, setMetrics] = useState<EnterpriseMetrics | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [autoRefresh, setAutoRefresh] = useState(false); // üö´ TEMPORALMENTE DESHABILITADO PARA EVITAR RECURSI√ìN\r\n  const [refreshInterval, setRefreshInterval] = useState(30); // segundos\r\n\r\n  // Funci√≥n para obtener m√©tricas\r\n  const fetchMetrics = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Simular llamada a API de m√©tricas enterprise\r\n      // En producci√≥n, esto ser√≠a una llamada real a /api/admin/monitoring/metrics\r\n      const response = await fetch('/api/admin/monitoring/enterprise-metrics');\r\n      \r\n      if (!response.ok) {\r\n        throw new Error('Error fetching metrics');\r\n      }\r\n      \r\n      const data = await response.json();\r\n      setMetrics(data);\r\n    } catch (error) {\r\n      console.error('Error fetching enterprise metrics:', error);\r\n      \r\n      // Datos de ejemplo para desarrollo\r\n      setMetrics({\r\n        systemHealth: {\r\n          'Rate Limiting': {\r\n            status: 'healthy',\r\n            uptime: 2592000, // 30 d√≠as\r\n            lastCheck: new Date().toISOString(),\r\n            responseTime: 45,\r\n            errorRate: 0.001\r\n          },\r\n          'Auditor√≠a': {\r\n            status: 'healthy',\r\n            uptime: 2592000,\r\n            lastCheck: new Date().toISOString(),\r\n            responseTime: 120,\r\n            errorRate: 0.002\r\n          },\r\n          'Validaci√≥n': {\r\n            status: 'warning',\r\n            uptime: 2580000,\r\n            lastCheck: new Date().toISOString(),\r\n            responseTime: 85,\r\n            errorRate: 0.015\r\n          },\r\n          'Cache': {\r\n            status: 'healthy',\r\n            uptime: 2592000,\r\n            lastCheck: new Date().toISOString(),\r\n            responseTime: 15,\r\n            errorRate: 0.0005\r\n          }\r\n        },\r\n        security: {\r\n          rateLimitingStats: {\r\n            totalRequests: 1250000,\r\n            blockedRequests: 15000,\r\n            allowedRequests: 1235000,\r\n            topBlockedIPs: [\r\n              { ip: '192.168.1.100', count: 2500 },\r\n              { ip: '10.0.0.50', count: 1800 },\r\n              { ip: '172.16.0.100', count: 1200 }\r\n            ],\r\n            averageResponseTime: 45\r\n          },\r\n          auditingStats: {\r\n            totalEvents: 850000,\r\n            criticalEvents: 125,\r\n            anomaliesDetected: 45,\r\n            lastIncident: '2025-01-31T10:30:00Z'\r\n          },\r\n          validationStats: {\r\n            totalValidations: 2100000,\r\n            failedValidations: 31500,\r\n            attacksBlocked: 8500,\r\n            successRate: 0.985\r\n          }\r\n        },\r\n        cache: {\r\n          hitRate: 0.892,\r\n          totalHits: 1850000,\r\n          totalMisses: 225000,\r\n          averageResponseTime: 15,\r\n          memoryUsage: 245 * 1024 * 1024, // 245MB\r\n          evictions: 1250,\r\n          topKeys: [\r\n            { key: 'products:featured', hits: 125000 },\r\n            { key: 'categories:all', hits: 98000 },\r\n            { key: 'auth:sessions', hits: 87000 }\r\n          ]\r\n        },\r\n        performance: {\r\n          apiResponseTimes: {\r\n            p50: 120,\r\n            p95: 450,\r\n            p99: 850\r\n          },\r\n          throughput: 2500, // requests per minute\r\n          errorRates: {\r\n            '4xx': 0.025,\r\n            '5xx': 0.008\r\n          },\r\n          resourceUsage: {\r\n            cpu: 35,\r\n            memory: 68,\r\n            disk: 42\r\n          }\r\n        },\r\n        lastUpdated: new Date().toISOString()\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // Efecto para cargar m√©tricas iniciales\r\n  useEffect(() => {\r\n    fetchMetrics();\r\n  }, [fetchMetrics]);\r\n\r\n  // Efecto para auto-refresh\r\n  // üö´ TEMPORALMENTE DESHABILITADO PARA EVITAR RECURSI√ìN EN APIS DE AUTH\r\n  useEffect(() => {\r\n    console.log('[ENTERPRISE_DASHBOARD] üö´ Auto-refresh temporalmente deshabilitado para evitar recursi√≥n');\r\n    if (!autoRefresh) {return;}\r\n\r\n    const interval = setInterval(fetchMetrics, refreshInterval * 1000);\r\n    return () => clearInterval(interval);\r\n  }, [autoRefresh, refreshInterval, fetchMetrics]);\r\n\r\n  // Funci√≥n para exportar m√©tricas\r\n  const exportMetrics = () => {\r\n    if (!metrics) {return;}\r\n\r\n    const dataStr = JSON.stringify(metrics, null, 2);\r\n    const dataBlob = new Blob([dataStr], { type: 'application/json' });\r\n    const url = URL.createObjectURL(dataBlob);\r\n    \r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.download = `enterprise-metrics-${new Date().toISOString().split('T')[0]}.json`;\r\n    link.click();\r\n    \r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  if (loading && !metrics) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-64\">\r\n        <div className=\"flex items-center space-x-2\">\r\n          <RefreshCw className=\"w-6 h-6 animate-spin text-blue-600\" />\r\n          <span className=\"text-lg font-medium text-gray-600\">Cargando m√©tricas enterprise...</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!metrics) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-64\">\r\n        <div className=\"text-center\">\r\n          <AlertTriangle className=\"w-12 h-12 text-red-500 mx-auto mb-4\" />\r\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Error cargando m√©tricas</h3>\r\n          <p className=\"text-gray-600 mb-4\">No se pudieron cargar las m√©tricas del sistema</p>\r\n          <Button onClick={fetchMetrics} variant=\"outline\">\r\n            <RefreshCw className=\"w-4 h-4 mr-2\" />\r\n            Reintentar\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex justify-between items-center\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold text-gray-900\">Dashboard Enterprise</h1>\r\n          <p className=\"text-gray-600\">\r\n            Monitoreo completo de sistemas enterprise\r\n            <span className=\"ml-2 text-sm\">\r\n              ‚Ä¢ √öltima actualizaci√≥n: {new Date(metrics.lastUpdated).toLocaleTimeString()}\r\n            </span>\r\n          </p>\r\n        </div>\r\n        <div className=\"flex items-center space-x-3\">\r\n          <div className=\"flex items-center space-x-2\">\r\n            <label className=\"text-sm font-medium text-gray-700\">Auto-refresh:</label>\r\n            <Button\r\n              variant={autoRefresh ? \"default\" : \"outline\"}\r\n              size=\"sm\"\r\n              onClick={() => setAutoRefresh(!autoRefresh)}\r\n            >\r\n              {autoRefresh ? <CheckCircle className=\"w-4 h-4\" /> : <Clock className=\"w-4 h-4\" />}\r\n            </Button>\r\n          </div>\r\n          <Button onClick={exportMetrics} variant=\"outline\" size=\"sm\">\r\n            <Download className=\"w-4 h-4 mr-2\" />\r\n            Exportar\r\n          </Button>\r\n          <Button onClick={fetchMetrics} variant=\"outline\" size=\"sm\" disabled={loading}>\r\n            <RefreshCw className={`w-4 h-4 mr-2 ${loading ? 'animate-spin' : ''}`} />\r\n            Actualizar\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* M√©tricas principales */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n        <MetricCard\r\n          title=\"Requests Totales\"\r\n          value={metrics.security.rateLimitingStats.totalRequests.toLocaleString()}\r\n          icon={<Activity className=\"w-5 h-5\" />}\r\n          status=\"info\"\r\n          subtitle=\"√öltimas 24 horas\"\r\n        />\r\n        \r\n        <MetricCard\r\n          title=\"Tasa de Cache Hit\"\r\n          value={`${(metrics.cache.hitRate * 100).toFixed(1)}%`}\r\n          change={5.2}\r\n          icon={<Database className=\"w-5 h-5\" />}\r\n          status=\"success\"\r\n          subtitle=\"Promedio semanal\"\r\n        />\r\n        \r\n        <MetricCard\r\n          title=\"Ataques Bloqueados\"\r\n          value={metrics.security.validationStats.attacksBlocked.toLocaleString()}\r\n          icon={<Shield className=\"w-5 h-5\" />}\r\n          status=\"warning\"\r\n          subtitle=\"Sistema de validaci√≥n\"\r\n        />\r\n        \r\n        <MetricCard\r\n          title=\"Tiempo Respuesta P95\"\r\n          value={`${metrics.performance.apiResponseTimes.p95}ms`}\r\n          change={-2.8}\r\n          icon={<Zap className=\"w-5 h-5\" />}\r\n          status=\"success\"\r\n          subtitle=\"APIs enterprise\"\r\n        />\r\n      </div>\r\n\r\n      {/* Tabs de m√©tricas detalladas */}\r\n      <Tabs defaultValue=\"overview\" className=\"space-y-6\">\r\n        <TabsList className=\"grid w-full grid-cols-5\">\r\n          <TabsTrigger value=\"overview\">Resumen</TabsTrigger>\r\n          <TabsTrigger value=\"security\">Seguridad</TabsTrigger>\r\n          <TabsTrigger value=\"performance\">Performance</TabsTrigger>\r\n          <TabsTrigger value=\"cache\">Cache</TabsTrigger>\r\n          <TabsTrigger value=\"systems\">Sistemas</TabsTrigger>\r\n        </TabsList>\r\n\r\n        {/* Tab Resumen */}\r\n        <TabsContent value=\"overview\" className=\"space-y-6\">\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n            {/* Estado de sistemas */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center\">\r\n                  <Server className=\"w-5 h-5 mr-2 text-blue-600\" />\r\n                  Estado de Sistemas\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                  {Object.entries(metrics.systemHealth).map(([name, health]) => (\r\n                    <SystemHealthIndicator key={name} name={name} health={health} />\r\n                  ))}\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* M√©tricas de recursos */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center\">\r\n                  <Cpu className=\"w-5 h-5 mr-2 text-green-600\" />\r\n                  Uso de Recursos\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <div className=\"space-y-3\">\r\n                  <div>\r\n                    <div className=\"flex justify-between text-sm mb-1\">\r\n                      <span>CPU</span>\r\n                      <span>{metrics.performance.resourceUsage.cpu}%</span>\r\n                    </div>\r\n                    <div className=\"w-full bg-gray-200 rounded-full h-2\">\r\n                      <div \r\n                        className=\"bg-blue-600 h-2 rounded-full\" \r\n                        style={{ width: `${metrics.performance.resourceUsage.cpu}%` }}\r\n                      ></div>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div>\r\n                    <div className=\"flex justify-between text-sm mb-1\">\r\n                      <span>Memoria</span>\r\n                      <span>{metrics.performance.resourceUsage.memory}%</span>\r\n                    </div>\r\n                    <div className=\"w-full bg-gray-200 rounded-full h-2\">\r\n                      <div \r\n                        className=\"bg-green-600 h-2 rounded-full\" \r\n                        style={{ width: `${metrics.performance.resourceUsage.memory}%` }}\r\n                      ></div>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div>\r\n                    <div className=\"flex justify-between text-sm mb-1\">\r\n                      <span>Disco</span>\r\n                      <span>{metrics.performance.resourceUsage.disk}%</span>\r\n                    </div>\r\n                    <div className=\"w-full bg-gray-200 rounded-full h-2\">\r\n                      <div \r\n                        className=\"bg-yellow-600 h-2 rounded-full\" \r\n                        style={{ width: `${metrics.performance.resourceUsage.disk}%` }}\r\n                      ></div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </TabsContent>\r\n\r\n        {/* Tab Seguridad */}\r\n        <TabsContent value=\"security\" className=\"space-y-6\">\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n            {/* Rate Limiting */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center\">\r\n                  <Shield className=\"w-5 h-5 mr-2 text-red-600\" />\r\n                  Rate Limiting\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <div className=\"grid grid-cols-2 gap-4 text-sm\">\r\n                  <div>\r\n                    <p className=\"text-gray-600\">Total</p>\r\n                    <p className=\"font-semibold\">{metrics.security.rateLimitingStats.totalRequests.toLocaleString()}</p>\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"text-gray-600\">Bloqueados</p>\r\n                    <p className=\"font-semibold text-red-600\">{metrics.security.rateLimitingStats.blockedRequests.toLocaleString()}</p>\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"text-gray-600\">Permitidos</p>\r\n                    <p className=\"font-semibold text-green-600\">{metrics.security.rateLimitingStats.allowedRequests.toLocaleString()}</p>\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"text-gray-600\">Tiempo Resp.</p>\r\n                    <p className=\"font-semibold\">{metrics.security.rateLimitingStats.averageResponseTime}ms</p>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div>\r\n                  <h4 className=\"font-medium text-gray-900 mb-2\">IPs m√°s bloqueadas</h4>\r\n                  <div className=\"space-y-1\">\r\n                    {metrics.security.rateLimitingStats.topBlockedIPs.map((item, index) => (\r\n                      <div key={index} className=\"flex justify-between text-xs\">\r\n                        <span className=\"font-mono\">{item.ip}</span>\r\n                        <span className=\"font-semibold\">{item.count}</span>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Auditor√≠a */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center\">\r\n                  <Eye className=\"w-5 h-5 mr-2 text-blue-600\" />\r\n                  Auditor√≠a\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <div className=\"grid grid-cols-2 gap-4 text-sm\">\r\n                  <div>\r\n                    <p className=\"text-gray-600\">Eventos Totales</p>\r\n                    <p className=\"font-semibold\">{metrics.security.auditingStats.totalEvents.toLocaleString()}</p>\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"text-gray-600\">Cr√≠ticos</p>\r\n                    <p className=\"font-semibold text-red-600\">{metrics.security.auditingStats.criticalEvents}</p>\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"text-gray-600\">Anomal√≠as</p>\r\n                    <p className=\"font-semibold text-yellow-600\">{metrics.security.auditingStats.anomaliesDetected}</p>\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"text-gray-600\">√öltimo Incidente</p>\r\n                    <p className=\"font-semibold text-xs\">\r\n                      {metrics.security.auditingStats.lastIncident ? \r\n                        new Date(metrics.security.auditingStats.lastIncident).toLocaleDateString() : \r\n                        'Ninguno'\r\n                      }\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Validaci√≥n */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center\">\r\n                  <Lock className=\"w-5 h-5 mr-2 text-green-600\" />\r\n                  Validaci√≥n\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <div className=\"grid grid-cols-2 gap-4 text-sm\">\r\n                  <div>\r\n                    <p className=\"text-gray-600\">Validaciones</p>\r\n                    <p className=\"font-semibold\">{metrics.security.validationStats.totalValidations.toLocaleString()}</p>\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"text-gray-600\">Fallidas</p>\r\n                    <p className=\"font-semibold text-red-600\">{metrics.security.validationStats.failedValidations.toLocaleString()}</p>\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"text-gray-600\">Ataques</p>\r\n                    <p className=\"font-semibold text-red-600\">{metrics.security.validationStats.attacksBlocked.toLocaleString()}</p>\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"text-gray-600\">Tasa √âxito</p>\r\n                    <p className=\"font-semibold text-green-600\">{(metrics.security.validationStats.successRate * 100).toFixed(1)}%</p>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </TabsContent>\r\n\r\n        {/* Tab Performance */}\r\n        <TabsContent value=\"performance\" className=\"space-y-6\">\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n            {/* Tiempos de respuesta */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center\">\r\n                  <BarChart3 className=\"w-5 h-5 mr-2 text-purple-600\" />\r\n                  Tiempos de Respuesta\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <div className=\"grid grid-cols-3 gap-4 text-center\">\r\n                  <div>\r\n                    <p className=\"text-2xl font-bold text-green-600\">{metrics.performance.apiResponseTimes.p50}ms</p>\r\n                    <p className=\"text-sm text-gray-600\">P50</p>\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"text-2xl font-bold text-yellow-600\">{metrics.performance.apiResponseTimes.p95}ms</p>\r\n                    <p className=\"text-sm text-gray-600\">P95</p>\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"text-2xl font-bold text-red-600\">{metrics.performance.apiResponseTimes.p99}ms</p>\r\n                    <p className=\"text-sm text-gray-600\">P99</p>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Throughput y errores */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center\">\r\n                  <Network className=\"w-5 h-5 mr-2 text-blue-600\" />\r\n                  Throughput y Errores\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <div className=\"text-center\">\r\n                  <p className=\"text-3xl font-bold text-blue-600\">{metrics.performance.throughput}</p>\r\n                  <p className=\"text-sm text-gray-600\">Requests por minuto</p>\r\n                </div>\r\n                \r\n                <div className=\"grid grid-cols-2 gap-4 text-sm\">\r\n                  <div>\r\n                    <p className=\"text-gray-600\">Errores 4xx</p>\r\n                    <p className=\"font-semibold text-yellow-600\">{(metrics.performance.errorRates['4xx'] * 100).toFixed(2)}%</p>\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"text-gray-600\">Errores 5xx</p>\r\n                    <p className=\"font-semibold text-red-600\">{(metrics.performance.errorRates['5xx'] * 100).toFixed(2)}%</p>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </TabsContent>\r\n\r\n        {/* Tab Cache */}\r\n        <TabsContent value=\"cache\" className=\"space-y-6\">\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n            {/* Estad√≠sticas de cache */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center\">\r\n                  <Database className=\"w-5 h-5 mr-2 text-green-600\" />\r\n                  Estad√≠sticas de Cache\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <div className=\"grid grid-cols-2 gap-4 text-sm\">\r\n                  <div>\r\n                    <p className=\"text-gray-600\">Hit Rate</p>\r\n                    <p className=\"text-2xl font-bold text-green-600\">{(metrics.cache.hitRate * 100).toFixed(1)}%</p>\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"text-gray-600\">Tiempo Resp.</p>\r\n                    <p className=\"text-2xl font-bold text-blue-600\">{metrics.cache.averageResponseTime}ms</p>\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"text-gray-600\">Total Hits</p>\r\n                    <p className=\"font-semibold\">{metrics.cache.totalHits.toLocaleString()}</p>\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"text-gray-600\">Total Misses</p>\r\n                    <p className=\"font-semibold\">{metrics.cache.totalMisses.toLocaleString()}</p>\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"text-gray-600\">Uso Memoria</p>\r\n                    <p className=\"font-semibold\">{(metrics.cache.memoryUsage / 1024 / 1024).toFixed(0)}MB</p>\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"text-gray-600\">Evictions</p>\r\n                    <p className=\"font-semibold\">{metrics.cache.evictions}</p>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Top keys */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center\">\r\n                  <HardDrive className=\"w-5 h-5 mr-2 text-purple-600\" />\r\n                  Claves M√°s Accedidas\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-3\">\r\n                  {metrics.cache.topKeys.map((item, index) => (\r\n                    <div key={index} className=\"flex justify-between items-center\">\r\n                      <span className=\"font-mono text-sm text-gray-700\">{item.key}</span>\r\n                      <Badge variant=\"outline\">{item.hits.toLocaleString()}</Badge>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </TabsContent>\r\n\r\n        {/* Tab Sistemas */}\r\n        <TabsContent value=\"systems\" className=\"space-y-6\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n            {Object.entries(metrics.systemHealth).map(([name, health]) => (\r\n              <SystemHealthIndicator key={name} name={name} health={health} />\r\n            ))}\r\n          </div>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EnterpriseMonitoringDashboard;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["EnterpriseMonitoringDashboard","MetricCard","title","value","change","icon","status","subtitle","getStatusColor","getChangeColor","undefined","Card","CardContent","className","div","p","TrendingUp","TrendingDown","span","Math","abs","toFixed","SystemHealthIndicator","name","health","getStatusBadge","Badge","formatUptime","seconds","days","floor","hours","minutes","h3","uptime","responseTime","errorRate","Date","lastCheck","toLocaleTimeString","metrics","setMetrics","useState","loading","setLoading","autoRefresh","setAutoRefresh","refreshInterval","setRefreshInterval","fetchMetrics","useCallback","response","fetch","ok","Error","data","json","error","console","systemHealth","toISOString","security","rateLimitingStats","totalRequests","blockedRequests","allowedRequests","topBlockedIPs","ip","count","averageResponseTime","auditingStats","totalEvents","criticalEvents","anomaliesDetected","lastIncident","validationStats","totalValidations","failedValidations","attacksBlocked","successRate","cache","hitRate","totalHits","totalMisses","memoryUsage","evictions","topKeys","key","hits","performance","apiResponseTimes","p50","p95","p99","throughput","errorRates","resourceUsage","cpu","memory","disk","lastUpdated","useEffect","log","interval","setInterval","clearInterval","exportMetrics","dataStr","JSON","stringify","dataBlob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","split","click","revokeObjectURL","RefreshCw","AlertTriangle","Button","onClick","variant","h1","label","size","CheckCircle","Clock","Download","disabled","toLocaleString","Activity","Database","Shield","Zap","Tabs","defaultValue","TabsList","TabsTrigger","TabsContent","CardHeader","CardTitle","Server","Object","entries","map","Cpu","style","width","h4","item","index","Eye","toLocaleDateString","Lock","BarChart3","Network","HardDrive"],"mappings":"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"}