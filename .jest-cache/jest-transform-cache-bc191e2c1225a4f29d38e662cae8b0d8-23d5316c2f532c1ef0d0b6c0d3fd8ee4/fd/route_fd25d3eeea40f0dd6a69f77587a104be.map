{"version":3,"names":["cov_2d2wy0gjnr","actualCoverage","s","GET","f","POST","runtime","supabase","_supabasejs","createClient","process","env","NEXT_PUBLIC_SUPABASE_URL","SUPABASE_SERVICE_ROLE_KEY","RATE_LIMIT_CONFIGS","admin","windowMs","maxRequests","message","PromotionFiltersSchema","_zod","z","object","status","enum","optional","type","category_id","string","uuid","product_id","search","date_from","date_to","page","coerce","number","min","default","limit","max","sort_by","sort_order","CreatePromotionSchema","name","description","priority","int","discount_percentage","discount_amount","buy_quantity","get_quantity","get_discount_percentage","bundle_products","array","quantity","bundle_price","minimum_order_amount","maximum_discount_amount","minimum_quantity","applicable_to","category_ids","product_ids","brand_ids","exclude_sale_items","boolean","exclude_categories","exclude_products","usage_limit","usage_limit_per_user","starts_at","ends_at","is_active","is_stackable","requires_coupon_code","coupon_code","customer_groups","first_time_customers_only","banner_text","banner_color","show_on_product_page","show_on_category_page","show_on_homepage","UpdatePromotionSchema","partial","BulkPromotionActionSchema","promotion_ids","action","extend_days","validateAdminAuth","session","_config","auth","user","b","error","data","profile","from","select","eq","id","single","includes","role","userId","getPromotions","filters","query","now","Date","toISOString","lte","or","gt","not","lt","gte","count","head","offset","order","ascending","range","Error","processedData","map","promotion","startsAt","endsAt","is_paused","categories","pc","category","products","pp","product","brands","pb","brand","promotions","total","totalPages","Math","ceil","createPromotion","promotionData","length","existingPromotion","promotionInsertData","newPromotion","promotionError","insert","usage_count","created_by","created_at","updated_at","categoryInserts","categoryId","promotion_id","categoryError","productInserts","productId","productError","brandInserts","brandId","brand_id","brandError","bundleInserts","item","bundleError","getPromotionStats","last24h","getTime","last7d","last30d","usage","totalPromotions","activePromotions","scheduledPromotions","expiredPromotions","pausedPromotions","forEach","totalUsage","totalDiscountGiven","reduce","sum","u","averageDiscount","totalOrders","ordersWithPromotions","filter","conversionRate","performanceMetrics","last_24h","discount_given","orders_affected","Set","order_id","size","last_7d","last_30d","promotionUsageMap","acc","totalDiscount","orders","add","topPromotions","Object","entries","promotionId","stats","find","p","total_discount","conversion_rate","sort","a","slice","usageByType","total_promotions","active_promotions","scheduled_promotions","expired_promotions","paused_promotions","total_usage","total_discount_given","average_discount","top_promotions","usage_by_type","performance_metrics","request","startTime","rateLimitResult","_ratelimiter","checkRateLimit","success","response","_server","NextResponse","json","addRateLimitHeaders","authResult","errorResponse","searchParams","URL","url","get","_metrics","metricsCollector","recordApiCall","endpoint","method","statusCode","responseTime","nextResponse","parse","pagination","_logger","logger","log","LogLevel","ERROR","LogCategory","API","floor","body","bulkAction","results","updateData","newEndDate","setDate","getDate","deleteError","delete","push","updateError","update","r"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\promotions\\route.ts"],"sourcesContent":["// Configuración para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { z } from 'zod';\r\nimport { createClient } from '@supabase/supabase-js';\r\nimport { auth } from '@/lib/auth/config';\r\nimport { checkRateLimit, addRateLimitHeaders } from '@/lib/enterprise/rate-limiter';\r\nimport { logger, LogLevel, LogCategory } from '@/lib/enterprise/logger';\r\nimport { metricsCollector } from '@/lib/enterprise/metrics';\r\n\r\n// ===================================\r\n// CONFIGURACIÓN\r\n// ===================================\r\nconst supabase = createClient(\r\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\r\n  process.env.SUPABASE_SERVICE_ROLE_KEY!\r\n);\r\n\r\nconst RATE_LIMIT_CONFIGS = {\r\n  admin: {\r\n    windowMs: 15 * 60 * 1000, // 15 minutos\r\n    maxRequests: 100,\r\n    message: 'Demasiadas solicitudes de promociones'\r\n  }\r\n};\r\n\r\n// ===================================\r\n// ESQUEMAS DE VALIDACIÓN\r\n// ===================================\r\nconst PromotionFiltersSchema = z.object({\r\n  status: z.enum(['active', 'inactive', 'scheduled', 'expired', 'paused']).optional(),\r\n  type: z.enum(['percentage_discount', 'fixed_discount', 'buy_x_get_y', 'free_shipping', 'bundle_deal']).optional(),\r\n  category_id: z.string().uuid().optional(),\r\n  product_id: z.string().uuid().optional(),\r\n  search: z.string().optional(),\r\n  date_from: z.string().optional(),\r\n  date_to: z.string().optional(),\r\n  page: z.coerce.number().min(1).default(1),\r\n  limit: z.coerce.number().min(1).max(100).default(20),\r\n  sort_by: z.enum(['created_at', 'name', 'priority', 'starts_at', 'ends_at', 'usage_count']).default('created_at'),\r\n  sort_order: z.enum(['asc', 'desc']).default('desc')\r\n});\r\n\r\nconst CreatePromotionSchema = z.object({\r\n  name: z.string().min(1, 'El nombre es requerido'),\r\n  description: z.string().optional(),\r\n  type: z.enum(['percentage_discount', 'fixed_discount', 'buy_x_get_y', 'free_shipping', 'bundle_deal']),\r\n  priority: z.number().int().min(1).max(100).default(50),\r\n  \r\n  // Configuración de descuento\r\n  discount_percentage: z.number().min(0).max(100).optional(),\r\n  discount_amount: z.number().min(0).optional(),\r\n  \r\n  // Configuración Buy X Get Y\r\n  buy_quantity: z.number().int().min(1).optional(),\r\n  get_quantity: z.number().int().min(1).optional(),\r\n  get_discount_percentage: z.number().min(0).max(100).optional(),\r\n  \r\n  // Configuración de bundle\r\n  bundle_products: z.array(z.object({\r\n    product_id: z.string().uuid(),\r\n    quantity: z.number().int().min(1)\r\n  })).optional(),\r\n  bundle_price: z.number().min(0).optional(),\r\n  \r\n  // Condiciones\r\n  minimum_order_amount: z.number().min(0).optional(),\r\n  maximum_discount_amount: z.number().min(0).optional(),\r\n  minimum_quantity: z.number().int().min(1).optional(),\r\n  \r\n  // Aplicabilidad\r\n  applicable_to: z.enum(['all', 'categories', 'products', 'brands']).default('all'),\r\n  category_ids: z.array(z.string().uuid()).optional(),\r\n  product_ids: z.array(z.string().uuid()).optional(),\r\n  brand_ids: z.array(z.string().uuid()).optional(),\r\n  \r\n  // Exclusiones\r\n  exclude_sale_items: z.boolean().default(false),\r\n  exclude_categories: z.array(z.string().uuid()).optional(),\r\n  exclude_products: z.array(z.string().uuid()).optional(),\r\n  \r\n  // Límites de uso\r\n  usage_limit: z.number().int().min(1).optional(),\r\n  usage_limit_per_user: z.number().int().min(1).optional(),\r\n  \r\n  // Fechas\r\n  starts_at: z.string(),\r\n  ends_at: z.string().optional(),\r\n  \r\n  // Configuración\r\n  is_active: z.boolean().default(true),\r\n  is_stackable: z.boolean().default(false),\r\n  requires_coupon_code: z.boolean().default(false),\r\n  coupon_code: z.string().optional(),\r\n  \r\n  // Targeting\r\n  customer_groups: z.array(z.string()).optional(),\r\n  first_time_customers_only: z.boolean().default(false),\r\n  \r\n  // Display\r\n  banner_text: z.string().optional(),\r\n  banner_color: z.string().optional(),\r\n  show_on_product_page: z.boolean().default(true),\r\n  show_on_category_page: z.boolean().default(true),\r\n  show_on_homepage: z.boolean().default(false)\r\n});\r\n\r\nconst UpdatePromotionSchema = CreatePromotionSchema.partial();\r\n\r\nconst BulkPromotionActionSchema = z.object({\r\n  promotion_ids: z.array(z.string().uuid()).min(1),\r\n  action: z.enum(['activate', 'deactivate', 'pause', 'resume', 'delete', 'extend']),\r\n  extend_days: z.number().int().min(1).optional()\r\n});\r\n\r\n// ===================================\r\n// TIPOS\r\n// ===================================\r\ninterface ApiResponse<T> {\r\n  data: T;\r\n  success: boolean;\r\n  message?: string;\r\n  error?: string;\r\n  pagination?: {\r\n    page: number;\r\n    limit: number;\r\n    total: number;\r\n    totalPages: number;\r\n  };\r\n}\r\n\r\ninterface PromotionData {\r\n  id: string;\r\n  name: string;\r\n  description?: string;\r\n  type: 'percentage_discount' | 'fixed_discount' | 'buy_x_get_y' | 'free_shipping' | 'bundle_deal';\r\n  priority: number;\r\n  \r\n  // Configuración de descuento\r\n  discount_percentage?: number;\r\n  discount_amount?: number;\r\n  \r\n  // Configuración Buy X Get Y\r\n  buy_quantity?: number;\r\n  get_quantity?: number;\r\n  get_discount_percentage?: number;\r\n  \r\n  // Configuración de bundle\r\n  bundle_products?: Array<{\r\n    product_id: string;\r\n    quantity: number;\r\n    product?: {\r\n      name: string;\r\n      sku: string;\r\n      price: number;\r\n    };\r\n  }>;\r\n  bundle_price?: number;\r\n  \r\n  // Condiciones\r\n  minimum_order_amount?: number;\r\n  maximum_discount_amount?: number;\r\n  minimum_quantity?: number;\r\n  \r\n  // Aplicabilidad\r\n  applicable_to: 'all' | 'categories' | 'products' | 'brands';\r\n  category_ids?: string[];\r\n  product_ids?: string[];\r\n  brand_ids?: string[];\r\n  \r\n  // Exclusiones\r\n  exclude_sale_items: boolean;\r\n  exclude_categories?: string[];\r\n  exclude_products?: string[];\r\n  \r\n  // Límites de uso\r\n  usage_limit?: number;\r\n  usage_limit_per_user?: number;\r\n  usage_count: number;\r\n  \r\n  // Fechas\r\n  starts_at: string;\r\n  ends_at?: string;\r\n  \r\n  // Configuración\r\n  is_active: boolean;\r\n  is_stackable: boolean;\r\n  requires_coupon_code: boolean;\r\n  coupon_code?: string;\r\n  \r\n  // Targeting\r\n  customer_groups?: string[];\r\n  first_time_customers_only: boolean;\r\n  \r\n  // Display\r\n  banner_text?: string;\r\n  banner_color?: string;\r\n  show_on_product_page: boolean;\r\n  show_on_category_page: boolean;\r\n  show_on_homepage: boolean;\r\n  \r\n  // Metadata\r\n  created_at: string;\r\n  updated_at: string;\r\n  created_by: string;\r\n  \r\n  // Estado calculado\r\n  status: 'active' | 'inactive' | 'scheduled' | 'expired' | 'paused';\r\n  \r\n  // Relaciones\r\n  categories?: Array<{\r\n    id: string;\r\n    name: string;\r\n  }>;\r\n  products?: Array<{\r\n    id: string;\r\n    name: string;\r\n    sku: string;\r\n  }>;\r\n  brands?: Array<{\r\n    id: string;\r\n    name: string;\r\n  }>;\r\n  creator?: {\r\n    full_name: string;\r\n    email: string;\r\n  };\r\n}\r\n\r\ninterface PromotionStats {\r\n  total_promotions: number;\r\n  active_promotions: number;\r\n  scheduled_promotions: number;\r\n  expired_promotions: number;\r\n  paused_promotions: number;\r\n  total_usage: number;\r\n  total_discount_given: number;\r\n  average_discount: number;\r\n  conversion_rate: number;\r\n  top_promotions: Array<{\r\n    id: string;\r\n    name: string;\r\n    type: string;\r\n    usage_count: number;\r\n    total_discount: number;\r\n    conversion_rate: number;\r\n  }>;\r\n  usage_by_type: Record<string, number>;\r\n  performance_metrics: {\r\n    last_24h: {\r\n      usage: number;\r\n      discount_given: number;\r\n      orders_affected: number;\r\n    };\r\n    last_7d: {\r\n      usage: number;\r\n      discount_given: number;\r\n      orders_affected: number;\r\n    };\r\n    last_30d: {\r\n      usage: number;\r\n      discount_given: number;\r\n      orders_affected: number;\r\n    };\r\n  };\r\n}\r\n\r\n// ===================================\r\n// FUNCIONES AUXILIARES\r\n// ===================================\r\nasync function validateAdminAuth() {\r\n  const session = await auth();\r\n  \r\n  if (!session?.user) {\r\n    return { error: 'No autorizado', status: 401 };\r\n  }\r\n\r\n  // Verificar rol de administrador o manager\r\n  const { data: profile } = await supabase\r\n    .from('profiles')\r\n    .select('role')\r\n    .eq('id', session.user.id)\r\n    .single();\r\n\r\n  if (!['admin', 'manager'].includes(profile?.role)) {\r\n    return { error: 'Acceso denegado', status: 403 };\r\n  }\r\n\r\n  return { userId: session.user.id, role: profile.role };\r\n}\r\n\r\nasync function getPromotions(filters: z.infer<typeof PromotionFiltersSchema>) {\r\n  let query = supabase\r\n    .from('promotions')\r\n    .select(`\r\n      *,\r\n      categories:promotion_categories!promotion_categories_promotion_id_fkey(\r\n        category:categories!promotion_categories_category_id_fkey(\r\n          id,\r\n          name\r\n        )\r\n      ),\r\n      products:promotion_products!promotion_products_promotion_id_fkey(\r\n        product:products!promotion_products_product_id_fkey(\r\n          id,\r\n          name,\r\n          sku\r\n        )\r\n      ),\r\n      brands:promotion_brands!promotion_brands_promotion_id_fkey(\r\n        brand:brands!promotion_brands_brand_id_fkey(\r\n          id,\r\n          name\r\n        )\r\n      ),\r\n      creator:profiles!promotions_created_by_fkey(\r\n        full_name,\r\n        email\r\n      )\r\n    `);\r\n\r\n  // Aplicar filtros\r\n  if (filters.status) {\r\n    const now = new Date().toISOString();\r\n    switch (filters.status) {\r\n      case 'active':\r\n        query = query\r\n          .eq('is_active', true)\r\n          .lte('starts_at', now)\r\n          .or(`ends_at.is.null,ends_at.gt.${now}`);\r\n        break;\r\n      case 'inactive':\r\n        query = query.eq('is_active', false);\r\n        break;\r\n      case 'scheduled':\r\n        query = query\r\n          .eq('is_active', true)\r\n          .gt('starts_at', now);\r\n        break;\r\n      case 'expired':\r\n        query = query\r\n          .eq('is_active', true)\r\n          .not('ends_at', 'is', null)\r\n          .lt('ends_at', now);\r\n        break;\r\n      case 'paused':\r\n        query = query.eq('is_paused', true);\r\n        break;\r\n    }\r\n  }\r\n\r\n  if (filters.type) {\r\n    query = query.eq('type', filters.type);\r\n  }\r\n\r\n  if (filters.search) {\r\n    query = query.or(`name.ilike.%${filters.search}%,description.ilike.%${filters.search}%,banner_text.ilike.%${filters.search}%`);\r\n  }\r\n\r\n  if (filters.date_from) {\r\n    query = query.gte('created_at', filters.date_from);\r\n  }\r\n\r\n  if (filters.date_to) {\r\n    query = query.lte('created_at', filters.date_to);\r\n  }\r\n\r\n  // Contar total\r\n  const { count } = await query.select('*', { count: 'exact', head: true });\r\n\r\n  // Aplicar paginación y ordenamiento\r\n  const offset = (filters.page - 1) * filters.limit;\r\n  query = query\r\n    .order(filters.sort_by, { ascending: filters.sort_order === 'asc' })\r\n    .range(offset, offset + filters.limit - 1);\r\n\r\n  const { data, error } = await query;\r\n\r\n  if (error) {\r\n    throw new Error(`Error al obtener promociones: ${error.message}`);\r\n  }\r\n\r\n  // Procesar datos para incluir estado calculado\r\n  const processedData = (data || []).map(promotion => {\r\n    const now = new Date();\r\n    const startsAt = new Date(promotion.starts_at);\r\n    const endsAt = promotion.ends_at ? new Date(promotion.ends_at) : null;\r\n    \r\n    let status: 'active' | 'inactive' | 'scheduled' | 'expired' | 'paused';\r\n    \r\n    if (promotion.is_paused) {\r\n      status = 'paused';\r\n    } else if (!promotion.is_active) {\r\n      status = 'inactive';\r\n    } else if (now < startsAt) {\r\n      status = 'scheduled';\r\n    } else if (endsAt && now > endsAt) {\r\n      status = 'expired';\r\n    } else {\r\n      status = 'active';\r\n    }\r\n\r\n    return {\r\n      ...promotion,\r\n      status,\r\n      categories: promotion.categories?.map((pc: any) => pc.category) || [],\r\n      products: promotion.products?.map((pp: any) => pp.product) || [],\r\n      brands: promotion.brands?.map((pb: any) => pb.brand) || []\r\n    };\r\n  });\r\n\r\n  return {\r\n    promotions: processedData,\r\n    total: count || 0,\r\n    totalPages: Math.ceil((count || 0) / filters.limit)\r\n  };\r\n}\r\n\r\nasync function createPromotion(promotionData: z.infer<typeof CreatePromotionSchema>, userId: string) {\r\n  // Validar fechas\r\n  const startsAt = new Date(promotionData.starts_at);\r\n  const endsAt = promotionData.ends_at ? new Date(promotionData.ends_at) : null;\r\n  \r\n  if (endsAt && startsAt >= endsAt) {\r\n    throw new Error('La fecha de inicio debe ser anterior a la fecha de finalización');\r\n  }\r\n\r\n  // Validar configuración según el tipo\r\n  switch (promotionData.type) {\r\n    case 'percentage_discount':\r\n      if (!promotionData.discount_percentage) {\r\n        throw new Error('El porcentaje de descuento es requerido para este tipo de promoción');\r\n      }\r\n      break;\r\n    case 'fixed_discount':\r\n      if (!promotionData.discount_amount) {\r\n        throw new Error('El monto de descuento es requerido para este tipo de promoción');\r\n      }\r\n      break;\r\n    case 'buy_x_get_y':\r\n      if (!promotionData.buy_quantity || !promotionData.get_quantity) {\r\n        throw new Error('Las cantidades de compra y obsequio son requeridas para este tipo de promoción');\r\n      }\r\n      break;\r\n    case 'bundle_deal':\r\n      if (!promotionData.bundle_products?.length || !promotionData.bundle_price) {\r\n        throw new Error('Los productos del bundle y el precio son requeridos para este tipo de promoción');\r\n      }\r\n      break;\r\n  }\r\n\r\n  // Validar código de cupón si es requerido\r\n  if (promotionData.requires_coupon_code) {\r\n    if (!promotionData.coupon_code) {\r\n      throw new Error('El código de cupón es requerido cuando se habilita esta opción');\r\n    }\r\n    \r\n    // Verificar que el código no exista\r\n    const { data: existingPromotion } = await supabase\r\n      .from('promotions')\r\n      .select('id')\r\n      .eq('coupon_code', promotionData.coupon_code)\r\n      .single();\r\n\r\n    if (existingPromotion) {\r\n      throw new Error('Ya existe una promoción con este código de cupón');\r\n    }\r\n  }\r\n\r\n  // Preparar datos para inserción\r\n  const { category_ids, product_ids, brand_ids, bundle_products, ...promotionInsertData } = promotionData;\r\n  \r\n  // Crear promoción\r\n  const { data: newPromotion, error: promotionError } = await supabase\r\n    .from('promotions')\r\n    .insert({\r\n      ...promotionInsertData,\r\n      usage_count: 0,\r\n      created_by: userId,\r\n      created_at: new Date().toISOString(),\r\n      updated_at: new Date().toISOString()\r\n    })\r\n    .select()\r\n    .single();\r\n\r\n  if (promotionError) {\r\n    throw new Error(`Error al crear promoción: ${promotionError.message}`);\r\n  }\r\n\r\n  // Asociar categorías si aplica\r\n  if (promotionData.applicable_to === 'categories' && category_ids?.length) {\r\n    const categoryInserts = category_ids.map(categoryId => ({\r\n      promotion_id: newPromotion.id,\r\n      category_id: categoryId\r\n    }));\r\n\r\n    const { error: categoryError } = await supabase\r\n      .from('promotion_categories')\r\n      .insert(categoryInserts);\r\n\r\n    if (categoryError) {\r\n      throw new Error(`Error al asociar categorías: ${categoryError.message}`);\r\n    }\r\n  }\r\n\r\n  // Asociar productos si aplica\r\n  if (promotionData.applicable_to === 'products' && product_ids?.length) {\r\n    const productInserts = product_ids.map(productId => ({\r\n      promotion_id: newPromotion.id,\r\n      product_id: productId\r\n    }));\r\n\r\n    const { error: productError } = await supabase\r\n      .from('promotion_products')\r\n      .insert(productInserts);\r\n\r\n    if (productError) {\r\n      throw new Error(`Error al asociar productos: ${productError.message}`);\r\n    }\r\n  }\r\n\r\n  // Asociar marcas si aplica\r\n  if (promotionData.applicable_to === 'brands' && brand_ids?.length) {\r\n    const brandInserts = brand_ids.map(brandId => ({\r\n      promotion_id: newPromotion.id,\r\n      brand_id: brandId\r\n    }));\r\n\r\n    const { error: brandError } = await supabase\r\n      .from('promotion_brands')\r\n      .insert(brandInserts);\r\n\r\n    if (brandError) {\r\n      throw new Error(`Error al asociar marcas: ${brandError.message}`);\r\n    }\r\n  }\r\n\r\n  // Crear productos del bundle si aplica\r\n  if (promotionData.type === 'bundle_deal' && bundle_products?.length) {\r\n    const bundleInserts = bundle_products.map(item => ({\r\n      promotion_id: newPromotion.id,\r\n      product_id: item.product_id,\r\n      quantity: item.quantity\r\n    }));\r\n\r\n    const { error: bundleError } = await supabase\r\n      .from('promotion_bundle_products')\r\n      .insert(bundleInserts);\r\n\r\n    if (bundleError) {\r\n      throw new Error(`Error al crear bundle de productos: ${bundleError.message}`);\r\n    }\r\n  }\r\n\r\n  return newPromotion;\r\n}\r\n\r\nasync function getPromotionStats(): Promise<PromotionStats> {\r\n  // Obtener todas las promociones\r\n  const { data: promotions, error } = await supabase\r\n    .from('promotions')\r\n    .select('*');\r\n\r\n  if (error) {\r\n    throw new Error(`Error al obtener estadísticas de promociones: ${error.message}`);\r\n  }\r\n\r\n  const now = new Date();\r\n  const last24h = new Date(now.getTime() - 24 * 60 * 60 * 1000);\r\n  const last7d = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);\r\n  const last30d = new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000);\r\n\r\n  // Obtener uso de promociones\r\n  const { data: usage } = await supabase\r\n    .from('promotion_usage')\r\n    .select('*');\r\n\r\n  const totalPromotions = promotions?.length || 0;\r\n  let activePromotions = 0;\r\n  let scheduledPromotions = 0;\r\n  let expiredPromotions = 0;\r\n  let pausedPromotions = 0;\r\n\r\n  // Clasificar promociones por estado\r\n  (promotions || []).forEach(promotion => {\r\n    const startsAt = new Date(promotion.starts_at);\r\n    const endsAt = promotion.ends_at ? new Date(promotion.ends_at) : null;\r\n    \r\n    if (promotion.is_paused) {\r\n      pausedPromotions++;\r\n    } else if (!promotion.is_active) {\r\n      \r\n    } else if (now < startsAt) {\r\n      scheduledPromotions++;\r\n    } else if (endsAt && now > endsAt) {\r\n      expiredPromotions++;\r\n    } else {\r\n      activePromotions++;\r\n    }\r\n  });\r\n\r\n  // Estadísticas de uso\r\n  const totalUsage = (usage || []).length;\r\n  const totalDiscountGiven = (usage || []).reduce((sum, u) => sum + (u.discount_amount || 0), 0);\r\n  const averageDiscount = totalUsage > 0 ? totalDiscountGiven / totalUsage : 0;\r\n\r\n  // Calcular tasa de conversión (simplificada)\r\n  const { count: totalOrders } = await supabase\r\n    .from('orders')\r\n    .select('*', { count: 'exact', head: true })\r\n    .gte('created_at', last30d.toISOString());\r\n\r\n  const ordersWithPromotions = (usage || []).filter(u => \r\n    new Date(u.created_at) >= last30d\r\n  ).length;\r\n\r\n  const conversionRate = totalOrders ? (ordersWithPromotions / totalOrders) * 100 : 0;\r\n\r\n  // Métricas de rendimiento\r\n  const performanceMetrics = {\r\n    last_24h: {\r\n      usage: (usage || []).filter(u => new Date(u.created_at) >= last24h).length,\r\n      discount_given: (usage || []).filter(u => new Date(u.created_at) >= last24h)\r\n        .reduce((sum, u) => sum + (u.discount_amount || 0), 0),\r\n      orders_affected: new Set((usage || []).filter(u => new Date(u.created_at) >= last24h)\r\n        .map(u => u.order_id)).size\r\n    },\r\n    last_7d: {\r\n      usage: (usage || []).filter(u => new Date(u.created_at) >= last7d).length,\r\n      discount_given: (usage || []).filter(u => new Date(u.created_at) >= last7d)\r\n        .reduce((sum, u) => sum + (u.discount_amount || 0), 0),\r\n      orders_affected: new Set((usage || []).filter(u => new Date(u.created_at) >= last7d)\r\n        .map(u => u.order_id)).size\r\n    },\r\n    last_30d: {\r\n      usage: (usage || []).filter(u => new Date(u.created_at) >= last30d).length,\r\n      discount_given: (usage || []).filter(u => new Date(u.created_at) >= last30d)\r\n        .reduce((sum, u) => sum + (u.discount_amount || 0), 0),\r\n      orders_affected: new Set((usage || []).filter(u => new Date(u.created_at) >= last30d)\r\n        .map(u => u.order_id)).size\r\n    }\r\n  };\r\n\r\n  // Top promociones\r\n  const promotionUsageMap = (usage || []).reduce((acc, u) => {\r\n    if (!acc[u.promotion_id]) {\r\n      acc[u.promotion_id] = { count: 0, totalDiscount: 0, orders: new Set() };\r\n    }\r\n    acc[u.promotion_id].count++;\r\n    acc[u.promotion_id].totalDiscount += u.discount_amount || 0;\r\n    acc[u.promotion_id].orders.add(u.order_id);\r\n    return acc;\r\n  }, {} as Record<string, { count: number; totalDiscount: number; orders: Set<string> }>);\r\n\r\n  const topPromotions = Object.entries(promotionUsageMap)\r\n    .map(([promotionId, stats]) => {\r\n      const promotion = promotions?.find(p => p.id === promotionId);\r\n      return {\r\n        id: promotionId,\r\n        name: promotion?.name || '',\r\n        type: promotion?.type || '',\r\n        usage_count: stats.count,\r\n        total_discount: stats.totalDiscount,\r\n        conversion_rate: stats.orders.size > 0 ? (stats.count / stats.orders.size) * 100 : 0\r\n      };\r\n    })\r\n    .sort((a, b) => b.usage_count - a.usage_count)\r\n    .slice(0, 10);\r\n\r\n  // Uso por tipo\r\n  const usageByType = (promotions || []).reduce((acc, promotion) => {\r\n    acc[promotion.type] = (acc[promotion.type] || 0) + promotion.usage_count;\r\n    return acc;\r\n  }, {} as Record<string, number>);\r\n\r\n  return {\r\n    total_promotions: totalPromotions,\r\n    active_promotions: activePromotions,\r\n    scheduled_promotions: scheduledPromotions,\r\n    expired_promotions: expiredPromotions,\r\n    paused_promotions: pausedPromotions,\r\n    total_usage: totalUsage,\r\n    total_discount_given: totalDiscountGiven,\r\n    average_discount: averageDiscount,\r\n    conversion_rate: conversionRate,\r\n    top_promotions: topPromotions,\r\n    usage_by_type: usageByType,\r\n    performance_metrics: performanceMetrics\r\n  };\r\n}\r\n\r\n// ===================================\r\n// GET - Obtener promociones\r\n// ===================================\r\nexport async function GET(request: NextRequest) {\r\n  const startTime = Date.now();\r\n\r\n  try {\r\n    // Rate limiting\r\n    const rateLimitResult = await checkRateLimit(\r\n      request,\r\n      {\r\n        windowMs: RATE_LIMIT_CONFIGS.admin.windowMs,\r\n        maxRequests: RATE_LIMIT_CONFIGS.admin.maxRequests,\r\n        message: RATE_LIMIT_CONFIGS.admin.message\r\n      },\r\n      'admin-promotions'\r\n    );\r\n\r\n    if (!rateLimitResult.success) {\r\n      const response = NextResponse.json(\r\n        { error: rateLimitResult.message },\r\n        { status: 429 }\r\n      );\r\n      addRateLimitHeaders(response, rateLimitResult);\r\n      return response;\r\n    }\r\n\r\n    // Validar autenticación admin\r\n    const authResult = await validateAdminAuth();\r\n    if (authResult.error) {\r\n      const errorResponse: ApiResponse<null> = {\r\n        data: null,\r\n        success: false,\r\n        error: authResult.error,\r\n      };\r\n      return NextResponse.json(errorResponse, { status: authResult.status });\r\n    }\r\n\r\n    // Parsear parámetros de consulta\r\n    const { searchParams } = new URL(request.url);\r\n    const action = searchParams.get('action');\r\n\r\n    // Manejar diferentes acciones\r\n    if (action === 'stats') {\r\n      // Obtener estadísticas\r\n      const stats = await getPromotionStats();\r\n\r\n      // Registrar métricas\r\n      metricsCollector.recordApiCall({\r\n        endpoint: '/api/admin/promotions',\r\n        method: 'GET',\r\n        statusCode: 200,\r\n        responseTime: Date.now() - startTime,\r\n        userId: authResult.userId\r\n      });\r\n\r\n      const response: ApiResponse<PromotionStats> = {\r\n        data: stats,\r\n        success: true,\r\n        message: 'Estadísticas de promociones obtenidas exitosamente'\r\n      };\r\n\r\n      const nextResponse = NextResponse.json(response);\r\n      addRateLimitHeaders(nextResponse, rateLimitResult);\r\n      return nextResponse;\r\n    }\r\n\r\n    // Obtener promociones normales\r\n    const filters = PromotionFiltersSchema.parse({\r\n      status: searchParams.get('status'),\r\n      type: searchParams.get('type'),\r\n      category_id: searchParams.get('category_id'),\r\n      product_id: searchParams.get('product_id'),\r\n      search: searchParams.get('search'),\r\n      date_from: searchParams.get('date_from'),\r\n      date_to: searchParams.get('date_to'),\r\n      page: searchParams.get('page'),\r\n      limit: searchParams.get('limit'),\r\n      sort_by: searchParams.get('sort_by'),\r\n      sort_order: searchParams.get('sort_order')\r\n    });\r\n\r\n    const { promotions, total, totalPages } = await getPromotions(filters);\r\n\r\n    // Registrar métricas\r\n    metricsCollector.recordApiCall({\r\n      endpoint: '/api/admin/promotions',\r\n      method: 'GET',\r\n      statusCode: 200,\r\n      responseTime: Date.now() - startTime,\r\n      userId: authResult.userId\r\n    });\r\n\r\n    const response: ApiResponse<PromotionData[]> = {\r\n      data: promotions,\r\n      success: true,\r\n      message: 'Promociones obtenidas exitosamente',\r\n      pagination: {\r\n        page: filters.page,\r\n        limit: filters.limit,\r\n        total,\r\n        totalPages\r\n      }\r\n    };\r\n\r\n    const nextResponse = NextResponse.json(response);\r\n    addRateLimitHeaders(nextResponse, rateLimitResult);\r\n    return nextResponse;\r\n\r\n  } catch (error) {\r\n    logger.log(LogLevel.ERROR, LogCategory.API, 'Error en GET /api/admin/promotions', { error });\r\n\r\n    // Registrar métricas de error\r\n    metricsCollector.recordApiCall({\r\n      endpoint: '/api/admin/promotions',\r\n      method: 'GET',\r\n      statusCode: 500,\r\n      responseTime: Date.now() - startTime,\r\n      error: error instanceof Error ? error.message : 'Unknown error'\r\n    });\r\n\r\n    const errorResponse: ApiResponse<null> = {\r\n      data: null,\r\n      success: false,\r\n      error: error instanceof Error ? error.message : 'Error interno del servidor',\r\n    };\r\n\r\n    return NextResponse.json(errorResponse, { status: 500 });\r\n  }\r\n}\r\n\r\n// ===================================\r\n// POST - Crear promoción o acción masiva\r\n// ===================================\r\nexport async function POST(request: NextRequest) {\r\n  const startTime = Date.now();\r\n\r\n  try {\r\n    // Rate limiting\r\n    const rateLimitResult = await checkRateLimit(\r\n      request,\r\n      {\r\n        windowMs: RATE_LIMIT_CONFIGS.admin.windowMs,\r\n        maxRequests: Math.floor(RATE_LIMIT_CONFIGS.admin.maxRequests / 2),\r\n        message: 'Demasiadas operaciones de promociones'\r\n      },\r\n      'admin-promotions-modify'\r\n    );\r\n\r\n    if (!rateLimitResult.success) {\r\n      const response = NextResponse.json(\r\n        { error: rateLimitResult.message },\r\n        { status: 429 }\r\n      );\r\n      addRateLimitHeaders(response, rateLimitResult);\r\n      return response;\r\n    }\r\n\r\n    // Validar autenticación admin\r\n    const authResult = await validateAdminAuth();\r\n    if (authResult.error) {\r\n      const errorResponse: ApiResponse<null> = {\r\n        data: null,\r\n        success: false,\r\n        error: authResult.error,\r\n      };\r\n      return NextResponse.json(errorResponse, { status: authResult.status });\r\n    }\r\n\r\n    // Validar datos de entrada\r\n    const body = await request.json();\r\n    const { action } = body;\r\n\r\n    if (action === 'bulk') {\r\n      // Acción masiva\r\n      const bulkAction = BulkPromotionActionSchema.parse(body);\r\n      const results = [];\r\n\r\n      for (const promotionId of bulkAction.promotion_ids) {\r\n        try {\r\n          const updateData: any = { updated_at: new Date().toISOString() };\r\n\r\n          switch (bulkAction.action) {\r\n            case 'activate':\r\n              updateData.is_active = true;\r\n              updateData.is_paused = false;\r\n              break;\r\n            case 'deactivate':\r\n              updateData.is_active = false;\r\n              break;\r\n            case 'pause':\r\n              updateData.is_paused = true;\r\n              break;\r\n            case 'resume':\r\n              updateData.is_paused = false;\r\n              break;\r\n            case 'extend':\r\n              if (bulkAction.extend_days) {\r\n                const { data: promotion } = await supabase\r\n                  .from('promotions')\r\n                  .select('ends_at')\r\n                  .eq('id', promotionId)\r\n                  .single();\r\n                \r\n                if (promotion?.ends_at) {\r\n                  const newEndDate = new Date(promotion.ends_at);\r\n                  newEndDate.setDate(newEndDate.getDate() + bulkAction.extend_days);\r\n                  updateData.ends_at = newEndDate.toISOString();\r\n                }\r\n              }\r\n              break;\r\n            case 'delete':\r\n              const { error: deleteError } = await supabase\r\n                .from('promotions')\r\n                .delete()\r\n                .eq('id', promotionId);\r\n              \r\n              if (deleteError) {throw deleteError;}\r\n              results.push({ promotion_id: promotionId, success: true, action: 'deleted' });\r\n              continue;\r\n          }\r\n\r\n          if (bulkAction.action !== 'delete') {\r\n            const { error: updateError } = await supabase\r\n              .from('promotions')\r\n              .update(updateData)\r\n              .eq('id', promotionId);\r\n            \r\n            if (updateError) {throw updateError;}\r\n          }\r\n\r\n          results.push({ promotion_id: promotionId, success: true, action: bulkAction.action });\r\n        } catch (error) {\r\n          results.push({ \r\n            promotion_id: promotionId, \r\n            success: false, \r\n            error: error instanceof Error ? error.message : 'Error desconocido'\r\n          });\r\n        }\r\n      }\r\n\r\n      // Registrar métricas\r\n      metricsCollector.recordApiCall({\r\n        endpoint: '/api/admin/promotions',\r\n        method: 'POST',\r\n        statusCode: 200,\r\n        responseTime: Date.now() - startTime,\r\n        userId: authResult.userId\r\n      });\r\n\r\n      const response: ApiResponse<typeof results> = {\r\n        data: results,\r\n        success: true,\r\n        message: `Acción masiva completada. ${results.filter(r => r.success).length}/${results.length} exitosos`\r\n      };\r\n\r\n      const nextResponse = NextResponse.json(response);\r\n      addRateLimitHeaders(nextResponse, rateLimitResult);\r\n      return nextResponse;\r\n    }\r\n\r\n    // Crear promoción normal\r\n    const promotionData = CreatePromotionSchema.parse(body);\r\n    const newPromotion = await createPromotion(promotionData, authResult.userId!);\r\n\r\n    // Registrar métricas\r\n    metricsCollector.recordApiCall({\r\n      endpoint: '/api/admin/promotions',\r\n      method: 'POST',\r\n      statusCode: 201,\r\n      responseTime: Date.now() - startTime,\r\n      userId: authResult.userId\r\n    });\r\n\r\n    const response: ApiResponse<typeof newPromotion> = {\r\n      data: newPromotion,\r\n      success: true,\r\n      message: 'Promoción creada exitosamente'\r\n    };\r\n\r\n    const nextResponse = NextResponse.json(response, { status: 201 });\r\n    addRateLimitHeaders(nextResponse, rateLimitResult);\r\n    return nextResponse;\r\n\r\n  } catch (error) {\r\n    logger.log(LogLevel.ERROR, LogCategory.API, 'Error en POST /api/admin/promotions', { error });\r\n\r\n    // Registrar métricas de error\r\n    metricsCollector.recordApiCall({\r\n      endpoint: '/api/admin/promotions',\r\n      method: 'POST',\r\n      statusCode: 500,\r\n      responseTime: Date.now() - startTime,\r\n      error: error instanceof Error ? error.message : 'Unknown error'\r\n    });\r\n\r\n    const errorResponse: ApiResponse<null> = {\r\n      data: null,\r\n      success: false,\r\n      error: error instanceof Error ? error.message : 'Error interno del servidor',\r\n    };\r\n\r\n    return NextResponse.json(errorResponse, { status: 500 });\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}