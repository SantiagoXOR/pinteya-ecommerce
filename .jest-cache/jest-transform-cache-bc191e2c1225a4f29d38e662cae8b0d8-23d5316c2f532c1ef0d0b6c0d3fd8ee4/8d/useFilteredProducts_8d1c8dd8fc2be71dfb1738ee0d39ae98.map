{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useFilteredProducts.ts"],"sourcesContent":["'use client';\r\n\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { ProductWithCategory, PaginatedResponse } from '@/types/api';\r\nimport { safeApiResponseJson } from '@/lib/json-utils';\r\n\r\n// ===================================\r\n// TIPOS PARA FILTROS DE PRODUCTOS\r\n// ===================================\r\n\r\nexport interface ProductFilters {\r\n  // Filtros básicos\r\n  category?: string;\r\n  brand?: string;\r\n  search?: string;\r\n  priceMin?: number;\r\n  priceMax?: number;\r\n  hasDiscount?: boolean;\r\n  \r\n  // Filtros avanzados (múltiples valores)\r\n  categories?: string[];\r\n  brands?: string[];\r\n  paintTypes?: string[];\r\n  \r\n  // Paginación y ordenamiento\r\n  page?: number;\r\n  limit?: number;\r\n  sortBy?: 'price' | 'name' | 'created_at' | 'brand';\r\n  sortOrder?: 'asc' | 'desc';\r\n}\r\n\r\n// ===================================\r\n// HOOK PARA PRODUCTOS FILTRADOS\r\n// ===================================\r\n\r\nexport const useFilteredProducts = (filters: ProductFilters = {}) => {\r\n  return useQuery({\r\n    queryKey: ['filtered-products', filters],\r\n    queryFn: async (): Promise<PaginatedResponse<ProductWithCategory>> => {\r\n      \r\n      // Construir URL con parámetros\r\n      const searchParams = new URLSearchParams();\r\n      \r\n      // Filtros básicos\r\n      if (filters.category) {searchParams.set('category', filters.category);}\r\n      if (filters.brand) {searchParams.set('brand', filters.brand);}\r\n      if (filters.search) {searchParams.set('search', filters.search);}\r\n      if (filters.priceMin !== undefined) {searchParams.set('priceMin', filters.priceMin.toString());}\r\n      if (filters.priceMax !== undefined) {searchParams.set('priceMax', filters.priceMax.toString());}\r\n      \r\n      // Filtros avanzados (arrays)\r\n      if (filters.categories && filters.categories.length > 0) {\r\n        searchParams.set('categories', filters.categories.join(','));\r\n      }\r\n      if (filters.brands && filters.brands.length > 0) {\r\n        searchParams.set('brands', filters.brands.join(','));\r\n      }\r\n      if (filters.paintTypes && filters.paintTypes.length > 0) {\r\n        searchParams.set('paintTypes', filters.paintTypes.join(','));\r\n      }\r\n      \r\n      // Filtro de descuento\r\n      if (filters.hasDiscount !== undefined) {\r\n        searchParams.set('hasDiscount', filters.hasDiscount.toString());\r\n      }\r\n      \r\n      // Paginación y ordenamiento\r\n      if (filters.page) {searchParams.set('page', filters.page.toString());}\r\n      if (filters.limit) {searchParams.set('limit', filters.limit.toString());}\r\n      if (filters.sortBy) {searchParams.set('sortBy', filters.sortBy);}\r\n      if (filters.sortOrder) {searchParams.set('sortOrder', filters.sortOrder);}\r\n      \r\n      const url = `/api/products?${searchParams.toString()}`;\r\n      \r\n      const response = await fetch(url);\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Error ${response.status}: ${response.statusText}`);\r\n      }\r\n      \r\n      const result = await safeApiResponseJson<PaginatedResponse<ProductWithCategory>>(response);\r\n      \r\n      if (!result.success) {\r\n        throw new Error(result.error || 'Error parsing response');\r\n      }\r\n\r\n      return result.data!;\r\n    },\r\n    staleTime: 5 * 60 * 1000, // 5 minutos\r\n    gcTime: 10 * 60 * 1000, // 10 minutos\r\n    retry: 2,\r\n    retryDelay: (attemptIndex) => Math.min(1000 * 2 ** attemptIndex, 30000),\r\n    enabled: true, // Siempre habilitado, incluso sin filtros\r\n  });\r\n};\r\n\r\n// ===================================\r\n// HOOK PARA CONTEO DE PRODUCTOS\r\n// ===================================\r\n\r\nexport const useProductCount = (filters: Omit<ProductFilters, 'page' | 'limit'> = {}) => {\r\n  return useQuery({\r\n    queryKey: ['product-count', filters],\r\n    queryFn: async (): Promise<number> => {\r\n\r\n      // Usar los mismos filtros pero con limit=1 para obtener solo el count\r\n      const countFilters = { ...filters, page: 1, limit: 1 };\r\n      const searchParams = new URLSearchParams();\r\n\r\n      // Aplicar los mismos filtros que useFilteredProducts\r\n      if (countFilters.category) {searchParams.set('category', countFilters.category);}\r\n      if (countFilters.brand) {searchParams.set('brand', countFilters.brand);}\r\n      if (countFilters.search) {searchParams.set('search', countFilters.search);}\r\n      if (countFilters.priceMin !== undefined) {searchParams.set('priceMin', countFilters.priceMin.toString());}\r\n      if (countFilters.priceMax !== undefined) {searchParams.set('priceMax', countFilters.priceMax.toString());}\r\n\r\n      if (countFilters.categories && countFilters.categories.length > 0) {\r\n        searchParams.set('categories', countFilters.categories.join(','));\r\n      }\r\n      if (countFilters.brands && countFilters.brands.length > 0) {\r\n        searchParams.set('brands', countFilters.brands.join(','));\r\n      }\r\n      if (countFilters.paintTypes && countFilters.paintTypes.length > 0) {\r\n        searchParams.set('paintTypes', countFilters.paintTypes.join(','));\r\n      }\r\n\r\n      // Filtro de descuento\r\n      if (countFilters.hasDiscount !== undefined) {\r\n        searchParams.set('hasDiscount', countFilters.hasDiscount.toString());\r\n      }\r\n\r\n      searchParams.set('page', '1');\r\n      searchParams.set('limit', '1');\r\n\r\n      const url = `/api/products?${searchParams.toString()}`;\r\n      const response = await fetch(url);\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Error ${response.status}: ${response.statusText}`);\r\n      }\r\n\r\n      const result = await safeApiResponseJson<PaginatedResponse<ProductWithCategory>>(response);\r\n\r\n      if (!result.success) {\r\n        throw new Error(result.error || 'Error parsing response');\r\n      }\r\n\r\n      const count = result.data?.pagination?.total || 0;\r\n\r\n      return count;\r\n    },\r\n    staleTime: 5 * 60 * 1000, // 5 minutos\r\n    gcTime: 10 * 60 * 1000, // 10 minutos\r\n    retry: 2,\r\n    enabled: true,\r\n  });\r\n};\r\n\r\n// ===================================\r\n// HOOK PARA CONTEO DINÁMICO POR CATEGORÍA\r\n// ===================================\r\n\r\nexport const useCategoryProductCounts = (\r\n  categoryIds: string[],\r\n  baseFilters: Omit<ProductFilters, 'categories' | 'category'> = {}\r\n) => {\r\n  return useQuery({\r\n    queryKey: ['category-product-counts', categoryIds, baseFilters],\r\n    queryFn: async (): Promise<Record<string, number>> => {\r\n      const counts: Record<string, number> = {};\r\n\r\n      // Obtener conteo para cada categoría individualmente\r\n      const promises = categoryIds.map(async (categoryId) => {\r\n        const filters = { ...baseFilters, categories: [categoryId] };\r\n        const searchParams = new URLSearchParams();\r\n\r\n        // IMPORTANTE: Aplicar filtro de categoría PRIMERO para evitar conflictos de parámetros\r\n        searchParams.set('categories', categoryId);\r\n\r\n        // Aplicar filtros base\r\n        if (filters.brand) {searchParams.set('brand', filters.brand);}\r\n        if (filters.search) {searchParams.set('search', filters.search);}\r\n        if (filters.priceMin !== undefined) {searchParams.set('priceMin', filters.priceMin.toString());}\r\n        if (filters.priceMax !== undefined) {searchParams.set('priceMax', filters.priceMax.toString());}\r\n        if (filters.brands && filters.brands.length > 0) {\r\n          searchParams.set('brands', filters.brands.join(','));\r\n        }\r\n        if (filters.paintTypes && filters.paintTypes.length > 0) {\r\n          searchParams.set('paintTypes', filters.paintTypes.join(','));\r\n        }\r\n\r\n        // Filtro de descuento\r\n        if (filters.hasDiscount !== undefined) {\r\n          searchParams.set('hasDiscount', filters.hasDiscount.toString());\r\n        }\r\n\r\n        // Aplicar paginación al final\r\n        searchParams.set('limit', '1');\r\n        searchParams.set('page', '1');\r\n\r\n        const url = `/api/products?${searchParams.toString()}`;\r\n\r\n        const response = await fetch(url);\r\n\r\n        if (!response.ok) {\r\n          return { categoryId, count: 0 };\r\n        }\r\n\r\n        const result = await safeApiResponseJson<PaginatedResponse<ProductWithCategory>>(response);\r\n\r\n        if (!result.success) {\r\n          return { categoryId, count: 0 };\r\n        }\r\n\r\n        const count = result.data?.pagination?.total || 0;\r\n        return { categoryId, count };\r\n      });\r\n\r\n      const results = await Promise.all(promises);\r\n\r\n      results.forEach(({ categoryId, count }) => {\r\n        counts[categoryId] = count;\r\n      });\r\n\r\n      return counts;\r\n    },\r\n    staleTime: 2 * 60 * 1000, // 2 minutos (más frecuente para conteos dinámicos)\r\n    gcTime: 5 * 60 * 1000, // 5 minutos\r\n    retry: 1,\r\n    enabled: categoryIds.length > 0,\r\n  });\r\n};\r\n\r\n// ===================================\r\n// UTILIDADES\r\n// ===================================\r\n\r\nexport const getActiveFiltersCount = (filters: ProductFilters): number => {\r\n  let count = 0;\r\n  \r\n  if (filters.categories && filters.categories.length > 0) {count += filters.categories.length;}\r\n  if (filters.brands && filters.brands.length > 0) {count += filters.brands.length;}\r\n  if (filters.paintTypes && filters.paintTypes.length > 0) {count += filters.paintTypes.length;}\r\n  if (filters.priceMin !== undefined || filters.priceMax !== undefined) {count += 1;}\r\n  if (filters.search) {count += 1;}\r\n  \r\n  return count;\r\n};\r\n\r\nexport const hasActiveFilters = (filters: ProductFilters): boolean => {\r\n  return getActiveFiltersCount(filters) > 0;\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["getActiveFiltersCount","hasActiveFilters","useCategoryProductCounts","useFilteredProducts","useProductCount","filters","useQuery","queryKey","queryFn","searchParams","URLSearchParams","category","set","brand","search","priceMin","undefined","toString","priceMax","categories","length","join","brands","paintTypes","hasDiscount","page","limit","sortBy","sortOrder","url","response","fetch","ok","Error","status","statusText","result","safeApiResponseJson","success","error","data","staleTime","gcTime","retry","retryDelay","attemptIndex","Math","min","enabled","countFilters","count","pagination","total","categoryIds","baseFilters","counts","promises","map","categoryId","results","Promise","all","forEach"],"mappings":"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"}