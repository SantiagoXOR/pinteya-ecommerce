d4cb9aed50e9db5be5237e3f2cc69a1e
// ===================================
// PINTEYA E-COMMERCE - CIRCUIT BREAKER PATTERN ENTERPRISE
// ===================================
"use strict";

/* istanbul ignore next */
function cov_16lthjwxz5() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\integrations\\mercadopago\\circuit-breaker.ts";
  var hash = "31c7abe2c7815c09f9ce7e01935ff3fb61a1f72a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\integrations\\mercadopago\\circuit-breaker.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "2": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "3": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 42,
          column: 3
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 39
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 30
        }
      },
      "6": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 35
        }
      },
      "7": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 42
        }
      },
      "8": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 42
        }
      },
      "9": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 40
        }
      },
      "10": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 42
        }
      },
      "11": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 42
        }
      },
      "12": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 40
        }
      },
      "13": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 43,
          column: 50
        }
      },
      "14": {
        start: {
          line: 44,
          column: 17
        },
        end: {
          line: 44,
          column: 52
        }
      },
      "15": {
        start: {
          line: 45,
          column: 40
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "16": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 46,
          column: 45
        }
      },
      "17": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 47,
          column: 41
        }
      },
      "18": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 48,
          column: 51
        }
      },
      "19": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 49,
          column: 31
        }
      },
      "20": {
        start: {
          line: 51,
          column: 32
        },
        end: {
          line: 73,
          column: 1
        }
      },
      "21": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 25
        }
      },
      "22": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 29
        }
      },
      "23": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 30
        }
      },
      "24": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 26
        }
      },
      "25": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 27
        }
      },
      "26": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 81,
          column: 33
        }
      },
      "27": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 33
        }
      },
      "28": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 83,
          column: 31
        }
      },
      "29": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 30
        }
      },
      "30": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 93,
          column: 10
        }
      },
      "31": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 96,
          column: 39
        }
      },
      "32": {
        start: {
          line: 101,
          column: 26
        },
        end: {
          line: 101,
          column: 36
        }
      },
      "33": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 102,
          column: 34
        }
      },
      "34": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 114,
          column: 9
        }
      },
      "35": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 41
        }
      },
      "36": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 49
        }
      },
      "37": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 113,
          column: 14
        }
      },
      "38": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 141,
          column: 9
        }
      },
      "39": {
        start: {
          line: 117,
          column: 27
        },
        end: {
          line: 117,
          column: 44
        }
      },
      "40": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 119,
          column: 35
        }
      },
      "41": {
        start: {
          line: 120,
          column: 34
        },
        end: {
          line: 120,
          column: 56
        }
      },
      "42": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 121,
          column: 63
        }
      },
      "43": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 128,
          column: 14
        }
      },
      "44": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 131,
          column: 40
        }
      },
      "45": {
        start: {
          line: 132,
          column: 34
        },
        end: {
          line: 132,
          column: 56
        }
      },
      "46": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 133,
          column: 63
        }
      },
      "47": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 140,
          column: 14
        }
      },
      "48": {
        start: {
          line: 146,
          column: 20
        },
        end: {
          line: 146,
          column: 30
        }
      },
      "49": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 162,
          column: 9
        }
      },
      "50": {
        start: {
          line: 149,
          column: 16
        },
        end: {
          line: 149,
          column: 29
        }
      },
      "51": {
        start: {
          line: 152,
          column: 16
        },
        end: {
          line: 155,
          column: 17
        }
      },
      "52": {
        start: {
          line: 153,
          column: 20
        },
        end: {
          line: 153,
          column: 48
        }
      },
      "53": {
        start: {
          line: 154,
          column: 20
        },
        end: {
          line: 154,
          column: 33
        }
      },
      "54": {
        start: {
          line: 156,
          column: 16
        },
        end: {
          line: 156,
          column: 28
        }
      },
      "55": {
        start: {
          line: 159,
          column: 16
        },
        end: {
          line: 159,
          column: 74
        }
      },
      "56": {
        start: {
          line: 161,
          column: 16
        },
        end: {
          line: 161,
          column: 29
        }
      },
      "57": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 167,
          column: 42
        }
      },
      "58": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 168,
          column: 39
        }
      },
      "59": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 183,
          column: 9
        }
      },
      "60": {
        start: {
          line: 171,
          column: 16
        },
        end: {
          line: 171,
          column: 33
        }
      },
      "61": {
        start: {
          line: 172,
          column: 16
        },
        end: {
          line: 172,
          column: 37
        }
      },
      "62": {
        start: {
          line: 173,
          column: 16
        },
        end: {
          line: 175,
          column: 17
        }
      },
      "63": {
        start: {
          line: 174,
          column: 20
        },
        end: {
          line: 174,
          column: 46
        }
      },
      "64": {
        start: {
          line: 176,
          column: 16
        },
        end: {
          line: 176,
          column: 22
        }
      },
      "65": {
        start: {
          line: 179,
          column: 16
        },
        end: {
          line: 181,
          column: 17
        }
      },
      "66": {
        start: {
          line: 180,
          column: 20
        },
        end: {
          line: 180,
          column: 38
        }
      },
      "67": {
        start: {
          line: 182,
          column: 16
        },
        end: {
          line: 182,
          column: 22
        }
      },
      "68": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 188,
          column: 42
        }
      },
      "69": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 189,
          column: 35
        }
      },
      "70": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 190,
          column: 24
        }
      },
      "71": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 195,
          column: 39
        }
      },
      "72": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 205,
          column: 9
        }
      },
      "73": {
        start: {
          line: 198,
          column: 16
        },
        end: {
          line: 200,
          column: 17
        }
      },
      "74": {
        start: {
          line: 199,
          column: 20
        },
        end: {
          line: 199,
          column: 44
        }
      },
      "75": {
        start: {
          line: 201,
          column: 16
        },
        end: {
          line: 201,
          column: 22
        }
      },
      "76": {
        start: {
          line: 203,
          column: 16
        },
        end: {
          line: 203,
          column: 40
        }
      },
      "77": {
        start: {
          line: 204,
          column: 16
        },
        end: {
          line: 204,
          column: 22
        }
      },
      "78": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 210,
          column: 28
        }
      },
      "79": {
        start: {
          line: 211,
          column: 8
        },
        end: {
          line: 211,
          column: 28
        }
      },
      "80": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 212,
          column: 36
        }
      },
      "81": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 213,
          column: 31
        }
      },
      "82": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 214,
          column: 27
        }
      },
      "83": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 218,
          column: 39
        }
      },
      "84": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 223,
          column: 33
        }
      },
      "85": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 224,
          column: 28
        }
      },
      "86": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 225,
          column: 36
        }
      },
      "87": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 226,
          column: 31
        }
      },
      "88": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 227,
          column: 27
        }
      },
      "89": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 230,
          column: 39
        }
      },
      "90": {
        start: {
          line: 235,
          column: 8
        },
        end: {
          line: 235,
          column: 30
        }
      },
      "91": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 236,
          column: 28
        }
      },
      "92": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 237,
          column: 36
        }
      },
      "93": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 238,
          column: 26
        }
      },
      "94": {
        start: {
          line: 239,
          column: 8
        },
        end: {
          line: 239,
          column: 27
        }
      },
      "95": {
        start: {
          line: 240,
          column: 8
        },
        end: {
          line: 240,
          column: 31
        }
      },
      "96": {
        start: {
          line: 241,
          column: 8
        },
        end: {
          line: 243,
          column: 39
        }
      },
      "97": {
        start: {
          line: 248,
          column: 20
        },
        end: {
          line: 248,
          column: 30
        }
      },
      "98": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 249,
          column: 74
        }
      },
      "99": {
        start: {
          line: 254,
          column: 8
        },
        end: {
          line: 271,
          column: 9
        }
      },
      "100": {
        start: {
          line: 255,
          column: 12
        },
        end: {
          line: 258,
          column: 15
        }
      },
      "101": {
        start: {
          line: 259,
          column: 12
        },
        end: {
          line: 263,
          column: 13
        }
      },
      "102": {
        start: {
          line: 260,
          column: 16
        },
        end: {
          line: 262,
          column: 19
        }
      },
      "103": {
        start: {
          line: 265,
          column: 12
        },
        end: {
          line: 265,
          column: 122
        }
      },
      "104": {
        start: {
          line: 266,
          column: 12
        },
        end: {
          line: 266,
          column: 188
        }
      },
      "105": {
        start: {
          line: 268,
          column: 12
        },
        end: {
          line: 270,
          column: 43
        }
      },
      "106": {
        start: {
          line: 276,
          column: 8
        },
        end: {
          line: 276,
          column: 26
        }
      },
      "107": {
        start: {
          line: 281,
          column: 8
        },
        end: {
          line: 285,
          column: 10
        }
      },
      "108": {
        start: {
          line: 290,
          column: 8
        },
        end: {
          line: 290,
          column: 30
        }
      },
      "109": {
        start: {
          line: 291,
          column: 8
        },
        end: {
          line: 291,
          column: 26
        }
      },
      "110": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 292,
          column: 27
        }
      },
      "111": {
        start: {
          line: 293,
          column: 8
        },
        end: {
          line: 293,
          column: 31
        }
      },
      "112": {
        start: {
          line: 294,
          column: 8
        },
        end: {
          line: 294,
          column: 33
        }
      },
      "113": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 295,
          column: 33
        }
      },
      "114": {
        start: {
          line: 296,
          column: 8
        },
        end: {
          line: 296,
          column: 131
        }
      },
      "115": {
        start: {
          line: 299,
          column: 35
        },
        end: {
          line: 299,
          column: 123
        }
      },
      "116": {
        start: {
          line: 300,
          column: 35
        },
        end: {
          line: 300,
          column: 123
        }
      },
      "117": {
        start: {
          line: 301,
          column: 33
        },
        end: {
          line: 301,
          column: 117
        }
      },
      "118": {
        start: {
          line: 303,
          column: 4
        },
        end: {
          line: 303,
          column: 57
        }
      },
      "119": {
        start: {
          line: 306,
          column: 4
        },
        end: {
          line: 306,
          column: 57
        }
      },
      "120": {
        start: {
          line: 309,
          column: 4
        },
        end: {
          line: 309,
          column: 55
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 16
          }
        },
        loc: {
          start: {
            line: 8,
            column: 30
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 35
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 26
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 31
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 38
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 38
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 36
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        loc: {
          start: {
            line: 33,
            column: 38
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 33
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        loc: {
          start: {
            line: 36,
            column: 38
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 36
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        loc: {
          start: {
            line: 39,
            column: 36
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 39
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 45,
            column: 40
          },
          end: {
            line: 45,
            column: 41
          }
        },
        loc: {
          start: {
            line: 45,
            column: 70
          },
          end: {
            line: 50,
            column: 1
          }
        },
        line: 45
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 75,
            column: 4
          },
          end: {
            line: 75,
            column: 5
          }
        },
        loc: {
          start: {
            line: 75,
            column: 29
          },
          end: {
            line: 97,
            column: 5
          }
        },
        line: 75
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 100,
            column: 6
          },
          end: {
            line: 100,
            column: 7
          }
        },
        loc: {
          start: {
            line: 100,
            column: 31
          },
          end: {
            line: 142,
            column: 5
          }
        },
        line: 100
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 145,
            column: 6
          },
          end: {
            line: 145,
            column: 7
          }
        },
        loc: {
          start: {
            line: 145,
            column: 21
          },
          end: {
            line: 163,
            column: 5
          }
        },
        line: 145
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 166,
            column: 6
          },
          end: {
            line: 166,
            column: 7
          }
        },
        loc: {
          start: {
            line: 166,
            column: 24
          },
          end: {
            line: 184,
            column: 5
          }
        },
        line: 166
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 187,
            column: 6
          },
          end: {
            line: 187,
            column: 7
          }
        },
        loc: {
          start: {
            line: 187,
            column: 29
          },
          end: {
            line: 206,
            column: 5
          }
        },
        line: 187
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 209,
            column: 6
          },
          end: {
            line: 209,
            column: 7
          }
        },
        loc: {
          start: {
            line: 209,
            column: 25
          },
          end: {
            line: 219,
            column: 5
          }
        },
        line: 209
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 222,
            column: 6
          },
          end: {
            line: 222,
            column: 7
          }
        },
        loc: {
          start: {
            line: 222,
            column: 29
          },
          end: {
            line: 231,
            column: 5
          }
        },
        line: 222
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 234,
            column: 6
          },
          end: {
            line: 234,
            column: 7
          }
        },
        loc: {
          start: {
            line: 234,
            column: 27
          },
          end: {
            line: 244,
            column: 5
          }
        },
        line: 234
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 247,
            column: 6
          },
          end: {
            line: 247,
            column: 7
          }
        },
        loc: {
          start: {
            line: 247,
            column: 29
          },
          end: {
            line: 250,
            column: 5
          }
        },
        line: 247
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 253,
            column: 6
          },
          end: {
            line: 253,
            column: 7
          }
        },
        loc: {
          start: {
            line: 253,
            column: 52
          },
          end: {
            line: 272,
            column: 5
          }
        },
        line: 253
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 275,
            column: 6
          },
          end: {
            line: 275,
            column: 7
          }
        },
        loc: {
          start: {
            line: 275,
            column: 17
          },
          end: {
            line: 277,
            column: 5
          }
        },
        line: 275
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 280,
            column: 6
          },
          end: {
            line: 280,
            column: 7
          }
        },
        loc: {
          start: {
            line: 280,
            column: 19
          },
          end: {
            line: 286,
            column: 5
          }
        },
        line: 280
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 289,
            column: 6
          },
          end: {
            line: 289,
            column: 7
          }
        },
        loc: {
          start: {
            line: 289,
            column: 14
          },
          end: {
            line: 297,
            column: 5
          }
        },
        line: 289
      },
      "24": {
        name: "executeMercadoPagoCritical",
        decl: {
          start: {
            line: 302,
            column: 15
          },
          end: {
            line: 302,
            column: 41
          }
        },
        loc: {
          start: {
            line: 302,
            column: 53
          },
          end: {
            line: 304,
            column: 1
          }
        },
        line: 302
      },
      "25": {
        name: "executeMercadoPagoStandard",
        decl: {
          start: {
            line: 305,
            column: 15
          },
          end: {
            line: 305,
            column: 41
          }
        },
        loc: {
          start: {
            line: 305,
            column: 53
          },
          end: {
            line: 307,
            column: 1
          }
        },
        line: 305
      },
      "26": {
        name: "executeWebhookProcessing",
        decl: {
          start: {
            line: 308,
            column: 15
          },
          end: {
            line: 308,
            column: 39
          }
        },
        loc: {
          start: {
            line: 308,
            column: 51
          },
          end: {
            line: 310,
            column: 1
          }
        },
        line: 308
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 114,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 114,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 104
      },
      "1": {
        loc: {
          start: {
            line: 147,
            column: 8
          },
          end: {
            line: 162,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 148,
            column: 12
          },
          end: {
            line: 149,
            column: 29
          }
        }, {
          start: {
            line: 150,
            column: 12
          },
          end: {
            line: 156,
            column: 28
          }
        }, {
          start: {
            line: 157,
            column: 12
          },
          end: {
            line: 159,
            column: 74
          }
        }, {
          start: {
            line: 160,
            column: 12
          },
          end: {
            line: 161,
            column: 29
          }
        }],
        line: 147
      },
      "2": {
        loc: {
          start: {
            line: 152,
            column: 16
          },
          end: {
            line: 155,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 16
          },
          end: {
            line: 155,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 152
      },
      "3": {
        loc: {
          start: {
            line: 169,
            column: 8
          },
          end: {
            line: 183,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 170,
            column: 12
          },
          end: {
            line: 176,
            column: 22
          }
        }, {
          start: {
            line: 177,
            column: 12
          },
          end: {
            line: 182,
            column: 22
          }
        }],
        line: 169
      },
      "4": {
        loc: {
          start: {
            line: 173,
            column: 16
          },
          end: {
            line: 175,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 16
          },
          end: {
            line: 175,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 173
      },
      "5": {
        loc: {
          start: {
            line: 179,
            column: 16
          },
          end: {
            line: 181,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 179,
            column: 16
          },
          end: {
            line: 181,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 179
      },
      "6": {
        loc: {
          start: {
            line: 196,
            column: 8
          },
          end: {
            line: 205,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 197,
            column: 12
          },
          end: {
            line: 201,
            column: 22
          }
        }, {
          start: {
            line: 202,
            column: 12
          },
          end: {
            line: 204,
            column: 22
          }
        }],
        line: 196
      },
      "7": {
        loc: {
          start: {
            line: 198,
            column: 16
          },
          end: {
            line: 200,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 198,
            column: 16
          },
          end: {
            line: 200,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 198
      },
      "8": {
        loc: {
          start: {
            line: 259,
            column: 12
          },
          end: {
            line: 263,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 259,
            column: 12
          },
          end: {
            line: 263,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 259
      },
      "9": {
        loc: {
          start: {
            line: 266,
            column: 102
          },
          end: {
            line: 266,
            column: 186
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 266,
            column: 132
          },
          end: {
            line: 266,
            column: 182
          }
        }, {
          start: {
            line: 266,
            column: 185
          },
          end: {
            line: 266,
            column: 186
          }
        }],
        line: 266
      },
      "10": {
        loc: {
          start: {
            line: 269,
            column: 23
          },
          end: {
            line: 269,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 269,
            column: 48
          },
          end: {
            line: 269,
            column: 61
          }
        }, {
          start: {
            line: 269,
            column: 64
          },
          end: {
            line: 269,
            column: 79
          }
        }],
        line: 269
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0, 0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\integrations\\mercadopago\\circuit-breaker.ts"],
      sourcesContent: ["// ===================================\r\n// PINTEYA E-COMMERCE - CIRCUIT BREAKER PATTERN ENTERPRISE\r\n// ===================================\r\n\r\nimport { logger, LogLevel, LogCategory } from '@/lib/enterprise/logger';\r\nimport { metricsCollector } from '@/lib/enterprise/metrics';\r\n\r\n// Estados del Circuit Breaker\r\nexport enum CircuitBreakerState {\r\n  CLOSED = 'CLOSED',     // Funcionamiento normal\r\n  OPEN = 'OPEN',         // Circuito abierto, rechaza requests\r\n  HALF_OPEN = 'HALF_OPEN' // Probando si el servicio se recuper\xF3\r\n}\r\n\r\n// Configuraci\xF3n del Circuit Breaker\r\nexport interface CircuitBreakerConfig {\r\n  failureThreshold: number;      // N\xFAmero de fallos para abrir el circuito\r\n  recoveryTimeout: number;       // Tiempo antes de intentar recuperaci\xF3n (ms)\r\n  monitoringWindow: number;      // Ventana de monitoreo para contar fallos (ms)\r\n  halfOpenMaxCalls: number;      // M\xE1ximo de llamadas en estado HALF_OPEN\r\n  successThreshold: number;      // \xC9xitos necesarios para cerrar el circuito\r\n}\r\n\r\n// Configuraciones predefinidas\r\nexport const CIRCUIT_BREAKER_CONFIGS = {\r\n  MERCADOPAGO_CRITICAL: {\r\n    failureThreshold: 5,\r\n    recoveryTimeout: 60000,      // 1 minuto\r\n    monitoringWindow: 120000,    // 2 minutos\r\n    halfOpenMaxCalls: 3,\r\n    successThreshold: 2\r\n  },\r\n  MERCADOPAGO_STANDARD: {\r\n    failureThreshold: 3,\r\n    recoveryTimeout: 30000,      // 30 segundos\r\n    monitoringWindow: 60000,     // 1 minuto\r\n    halfOpenMaxCalls: 2,\r\n    successThreshold: 1\r\n  },\r\n  WEBHOOK_PROCESSING: {\r\n    failureThreshold: 10,\r\n    recoveryTimeout: 15000,      // 15 segundos\r\n    monitoringWindow: 30000,     // 30 segundos\r\n    halfOpenMaxCalls: 5,\r\n    successThreshold: 3\r\n  }\r\n} as const;\r\n\r\n// M\xE9tricas del Circuit Breaker\r\ninterface CircuitBreakerMetrics {\r\n  totalCalls: number;\r\n  successfulCalls: number;\r\n  failedCalls: number;\r\n  rejectedCalls: number;\r\n  lastFailureTime: number;\r\n  lastSuccessTime: number;\r\n  stateChanges: number;\r\n}\r\n\r\n// Resultado de ejecuci\xF3n\r\nexport interface CircuitBreakerResult<T> {\r\n  success: boolean;\r\n  data?: T;\r\n  error?: Error;\r\n  state: CircuitBreakerState;\r\n  executionTime: number;\r\n  wasRejected: boolean;\r\n}\r\n\r\n/**\r\n * Circuit Breaker Enterprise para MercadoPago\r\n * Implementa el patr\xF3n Circuit Breaker con estados y recuperaci\xF3n autom\xE1tica\r\n */\r\nexport class CircuitBreaker {\r\n  private state: CircuitBreakerState = CircuitBreakerState.CLOSED;\r\n  private failures: number = 0;\r\n  private successes: number = 0;\r\n  private lastFailureTime: number = 0;\r\n  private lastSuccessTime: number = 0;\r\n  private halfOpenCalls: number = 0;\r\n  private stateChanges: number = 0;\r\n  private metrics: CircuitBreakerMetrics;\r\n\r\n  constructor(\r\n    private name: string,\r\n    private config: CircuitBreakerConfig\r\n  ) {\r\n    this.metrics = {\r\n      totalCalls: 0,\r\n      successfulCalls: 0,\r\n      failedCalls: 0,\r\n      rejectedCalls: 0,\r\n      lastFailureTime: 0,\r\n      lastSuccessTime: 0,\r\n      stateChanges: 0\r\n    };\r\n\r\n    logger.debug(LogLevel.DEBUG, `Circuit Breaker initialized: ${name}`, {\r\n      config: this.config\r\n    }, LogCategory.SYSTEM);\r\n  }\r\n\r\n  /**\r\n   * Ejecuta una operaci\xF3n protegida por el circuit breaker\r\n   */\r\n  async execute<T>(operation: () => Promise<T>): Promise<CircuitBreakerResult<T>> {\r\n    const startTime = Date.now();\r\n    this.metrics.totalCalls++;\r\n\r\n    // Verificar si debemos rechazar la llamada\r\n    if (this.shouldReject()) {\r\n      this.metrics.rejectedCalls++;\r\n      \r\n      await this.recordMetrics('rejected');\r\n      \r\n      return {\r\n        success: false,\r\n        error: new Error(`Circuit breaker is ${this.state} - operation rejected`),\r\n        state: this.state,\r\n        executionTime: Date.now() - startTime,\r\n        wasRejected: true\r\n      };\r\n    }\r\n\r\n    try {\r\n      // Ejecutar la operaci\xF3n\r\n      const result = await operation();\r\n      \r\n      // Registrar \xE9xito\r\n      await this.onSuccess();\r\n      \r\n      const executionTime = Date.now() - startTime;\r\n      await this.recordMetrics('success', executionTime);\r\n      \r\n      return {\r\n        success: true,\r\n        data: result,\r\n        state: this.state,\r\n        executionTime,\r\n        wasRejected: false\r\n      };\r\n\r\n    } catch (error) {\r\n      // Registrar fallo\r\n      await this.onFailure(error as Error);\r\n      \r\n      const executionTime = Date.now() - startTime;\r\n      await this.recordMetrics('failure', executionTime);\r\n      \r\n      return {\r\n        success: false,\r\n        error: error as Error,\r\n        state: this.state,\r\n        executionTime,\r\n        wasRejected: false\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Determina si debemos rechazar la operaci\xF3n\r\n   */\r\n  private shouldReject(): boolean {\r\n    const now = Date.now();\r\n\r\n    switch (this.state) {\r\n      case CircuitBreakerState.CLOSED:\r\n        return false;\r\n\r\n      case CircuitBreakerState.OPEN:\r\n        // Verificar si es tiempo de intentar recuperaci\xF3n\r\n        if (now - this.lastFailureTime >= this.config.recoveryTimeout) {\r\n          this.transitionToHalfOpen();\r\n          return false;\r\n        }\r\n        return true;\r\n\r\n      case CircuitBreakerState.HALF_OPEN:\r\n        // Limitar llamadas en estado HALF_OPEN\r\n        return this.halfOpenCalls >= this.config.halfOpenMaxCalls;\r\n\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Maneja un \xE9xito en la operaci\xF3n\r\n   */\r\n  private async onSuccess(): Promise<void> {\r\n    this.lastSuccessTime = Date.now();\r\n    this.metrics.successfulCalls++;\r\n\r\n    switch (this.state) {\r\n      case CircuitBreakerState.HALF_OPEN:\r\n        this.successes++;\r\n        this.halfOpenCalls++;\r\n        \r\n        if (this.successes >= this.config.successThreshold) {\r\n          this.transitionToClosed();\r\n        }\r\n        break;\r\n\r\n      case CircuitBreakerState.CLOSED:\r\n        // Reset failure counter en ventana de monitoreo\r\n        if (this.isInMonitoringWindow()) {\r\n          this.failures = 0;\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Maneja un fallo en la operaci\xF3n\r\n   */\r\n  private async onFailure(error: Error): Promise<void> {\r\n    this.lastFailureTime = Date.now();\r\n    this.metrics.failedCalls++;\r\n    this.failures++;\r\n\r\n    logger.warn(LogLevel.WARN, `Circuit Breaker failure: ${this.name}`, {\r\n      error: error.message,\r\n      failures: this.failures,\r\n      state: this.state\r\n    }, LogCategory.SYSTEM);\r\n\r\n    switch (this.state) {\r\n      case CircuitBreakerState.CLOSED:\r\n        if (this.failures >= this.config.failureThreshold) {\r\n          this.transitionToOpen();\r\n        }\r\n        break;\r\n\r\n      case CircuitBreakerState.HALF_OPEN:\r\n        this.transitionToOpen();\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Transici\xF3n a estado OPEN\r\n   */\r\n  private transitionToOpen(): void {\r\n    this.state = CircuitBreakerState.OPEN;\r\n    this.stateChanges++;\r\n    this.metrics.stateChanges++;\r\n    this.halfOpenCalls = 0;\r\n    this.successes = 0;\r\n\r\n    logger.warn(LogLevel.WARN, `Circuit Breaker OPENED: ${this.name}`, {\r\n      failures: this.failures,\r\n      threshold: this.config.failureThreshold\r\n    }, LogCategory.SYSTEM);\r\n  }\r\n\r\n  /**\r\n   * Transici\xF3n a estado HALF_OPEN\r\n   */\r\n  private transitionToHalfOpen(): void {\r\n    this.state = CircuitBreakerState.HALF_OPEN;\r\n    this.stateChanges++;\r\n    this.metrics.stateChanges++;\r\n    this.halfOpenCalls = 0;\r\n    this.successes = 0;\r\n\r\n    logger.info(LogLevel.INFO, `Circuit Breaker HALF-OPEN: ${this.name}`, {\r\n      recoveryTimeout: this.config.recoveryTimeout\r\n    }, LogCategory.SYSTEM);\r\n  }\r\n\r\n  /**\r\n   * Transici\xF3n a estado CLOSED\r\n   */\r\n  private transitionToClosed(): void {\r\n    this.state = CircuitBreakerState.CLOSED;\r\n    this.stateChanges++;\r\n    this.metrics.stateChanges++;\r\n    this.failures = 0;\r\n    this.successes = 0;\r\n    this.halfOpenCalls = 0;\r\n\r\n    logger.info(LogLevel.INFO, `Circuit Breaker CLOSED: ${this.name}`, {\r\n      successThreshold: this.config.successThreshold\r\n    }, LogCategory.SYSTEM);\r\n  }\r\n\r\n  /**\r\n   * Verifica si estamos en la ventana de monitoreo\r\n   */\r\n  private isInMonitoringWindow(): boolean {\r\n    const now = Date.now();\r\n    return (now - this.lastFailureTime) <= this.config.monitoringWindow;\r\n  }\r\n\r\n  /**\r\n   * Registra m\xE9tricas del circuit breaker\r\n   */\r\n  private async recordMetrics(\r\n    operation: 'success' | 'failure' | 'rejected',\r\n    executionTime?: number\r\n  ): Promise<void> {\r\n    try {\r\n      await metricsCollector.recordMetric(`circuit_breaker.${this.name}.${operation}`, 1, {\r\n        state: this.state,\r\n        operation\r\n      });\r\n\r\n      if (executionTime) {\r\n        await metricsCollector.recordMetric(\r\n          `circuit_breaker.${this.name}.execution_time`,\r\n          executionTime,\r\n          { state: this.state }\r\n        );\r\n      }\r\n\r\n      // M\xE9tricas de estado\r\n      await metricsCollector.recordMetric(`circuit_breaker.${this.name}.state_changes`, this.stateChanges);\r\n      await metricsCollector.recordMetric(`circuit_breaker.${this.name}.failure_rate`, \r\n        this.metrics.totalCalls > 0 ? this.metrics.failedCalls / this.metrics.totalCalls : 0\r\n      );\r\n\r\n    } catch (error) {\r\n      logger.error(LogLevel.ERROR, `Failed to record circuit breaker metrics: ${this.name}`, {\r\n        error: error instanceof Error ? error.message : 'Unknown error'\r\n      }, LogCategory.SYSTEM);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Obtiene el estado actual del circuit breaker\r\n   */\r\n  getState(): CircuitBreakerState {\r\n    return this.state;\r\n  }\r\n\r\n  /**\r\n   * Obtiene las m\xE9tricas del circuit breaker\r\n   */\r\n  getMetrics(): CircuitBreakerMetrics & { state: CircuitBreakerState; config: CircuitBreakerConfig } {\r\n    return {\r\n      ...this.metrics,\r\n      state: this.state,\r\n      config: this.config\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Fuerza el reset del circuit breaker (solo para testing/admin)\r\n   */\r\n  reset(): void {\r\n    this.state = CircuitBreakerState.CLOSED;\r\n    this.failures = 0;\r\n    this.successes = 0;\r\n    this.halfOpenCalls = 0;\r\n    this.lastFailureTime = 0;\r\n    this.lastSuccessTime = 0;\r\n\r\n    logger.info(LogLevel.INFO, `Circuit Breaker manually reset: ${this.name}`, {}, LogCategory.SYSTEM);\r\n  }\r\n}\r\n\r\n// Instancias globales de circuit breakers\r\nexport const mercadoPagoCriticalBreaker = new CircuitBreaker(\r\n  'mercadopago_critical',\r\n  CIRCUIT_BREAKER_CONFIGS.MERCADOPAGO_CRITICAL\r\n);\r\n\r\nexport const mercadoPagoStandardBreaker = new CircuitBreaker(\r\n  'mercadopago_standard', \r\n  CIRCUIT_BREAKER_CONFIGS.MERCADOPAGO_STANDARD\r\n);\r\n\r\nexport const webhookProcessingBreaker = new CircuitBreaker(\r\n  'webhook_processing',\r\n  CIRCUIT_BREAKER_CONFIGS.WEBHOOK_PROCESSING\r\n);\r\n\r\n/**\r\n * Wrapper para operaciones cr\xEDticas de MercadoPago\r\n */\r\nexport async function executeMercadoPagoCritical<T>(\r\n  operation: () => Promise<T>\r\n): Promise<CircuitBreakerResult<T>> {\r\n  return mercadoPagoCriticalBreaker.execute(operation);\r\n}\r\n\r\n/**\r\n * Wrapper para operaciones est\xE1ndar de MercadoPago\r\n */\r\nexport async function executeMercadoPagoStandard<T>(\r\n  operation: () => Promise<T>\r\n): Promise<CircuitBreakerResult<T>> {\r\n  return mercadoPagoStandardBreaker.execute(operation);\r\n}\r\n\r\n/**\r\n * Wrapper para procesamiento de webhooks\r\n */\r\nexport async function executeWebhookProcessing<T>(\r\n  operation: () => Promise<T>\r\n): Promise<CircuitBreakerResult<T>> {\r\n  return webhookProcessingBreaker.execute(operation);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["CIRCUIT_BREAKER_CONFIGS", "CircuitBreaker", "CircuitBreakerState", "executeMercadoPagoCritical", "executeMercadoPagoStandard", "executeWebhookProcessing", "mercadoPagoCriticalBreaker", "mercadoPagoStandardBreaker", "webhookProcessingBreaker", "MERCADOPAGO_CRITICAL", "failureThreshold", "recoveryTimeout", "monitoringWindow", "halfOpenMaxCalls", "successThreshold", "MERCADOPAGO_STANDARD", "WEBHOOK_PROCESSING", "name", "config", "state", "failures", "successes", "lastFailureTime", "lastSuccessTime", "halfOpenCalls", "stateChanges", "metrics", "totalCalls", "successfulCalls", "failedCalls", "rejectedCalls", "logger", "debug", "LogLevel", "DEBUG", "LogCategory", "SYSTEM", "execute", "operation", "startTime", "Date", "now", "shouldReject", "recordMetrics", "success", "error", "Error", "executionTime", "wasRejected", "result", "onSuccess", "data", "onFailure", "transitionToHalfOpen", "transitionToClosed", "isInMonitoringWindow", "warn", "WARN", "message", "transitionToOpen", "threshold", "info", "INFO", "metricsCollector", "recordMetric", "ERROR", "getState", "getMetrics", "reset"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "31c7abe2c7815c09f9ce7e01935ff3fb61a1f72a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_16lthjwxz5 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_16lthjwxz5();
cov_16lthjwxz5().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_16lthjwxz5().f[0]++;
  cov_16lthjwxz5().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_16lthjwxz5().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_16lthjwxz5().s[3]++;
_export(exports, {
  get CIRCUIT_BREAKER_CONFIGS() {
    /* istanbul ignore next */
    cov_16lthjwxz5().f[1]++;
    cov_16lthjwxz5().s[4]++;
    return CIRCUIT_BREAKER_CONFIGS;
  },
  get CircuitBreaker() {
    /* istanbul ignore next */
    cov_16lthjwxz5().f[2]++;
    cov_16lthjwxz5().s[5]++;
    return CircuitBreaker;
  },
  get CircuitBreakerState() {
    /* istanbul ignore next */
    cov_16lthjwxz5().f[3]++;
    cov_16lthjwxz5().s[6]++;
    return CircuitBreakerState;
  },
  get executeMercadoPagoCritical() {
    /* istanbul ignore next */
    cov_16lthjwxz5().f[4]++;
    cov_16lthjwxz5().s[7]++;
    return executeMercadoPagoCritical;
  },
  get executeMercadoPagoStandard() {
    /* istanbul ignore next */
    cov_16lthjwxz5().f[5]++;
    cov_16lthjwxz5().s[8]++;
    return executeMercadoPagoStandard;
  },
  get executeWebhookProcessing() {
    /* istanbul ignore next */
    cov_16lthjwxz5().f[6]++;
    cov_16lthjwxz5().s[9]++;
    return executeWebhookProcessing;
  },
  get mercadoPagoCriticalBreaker() {
    /* istanbul ignore next */
    cov_16lthjwxz5().f[7]++;
    cov_16lthjwxz5().s[10]++;
    return mercadoPagoCriticalBreaker;
  },
  get mercadoPagoStandardBreaker() {
    /* istanbul ignore next */
    cov_16lthjwxz5().f[8]++;
    cov_16lthjwxz5().s[11]++;
    return mercadoPagoStandardBreaker;
  },
  get webhookProcessingBreaker() {
    /* istanbul ignore next */
    cov_16lthjwxz5().f[9]++;
    cov_16lthjwxz5().s[12]++;
    return webhookProcessingBreaker;
  }
});
const _logger =
/* istanbul ignore next */
(cov_16lthjwxz5().s[13]++, require("../../enterprise/logger"));
const _metrics =
/* istanbul ignore next */
(cov_16lthjwxz5().s[14]++, require("../../enterprise/metrics"));
var CircuitBreakerState =
/* istanbul ignore next */
(/*#__PURE__*/cov_16lthjwxz5().s[15]++, function (CircuitBreakerState) {
  /* istanbul ignore next */
  cov_16lthjwxz5().f[10]++;
  cov_16lthjwxz5().s[16]++;
  CircuitBreakerState["CLOSED"] = "CLOSED";
  /* istanbul ignore next */
  cov_16lthjwxz5().s[17]++;
  CircuitBreakerState["OPEN"] = "OPEN";
  /* istanbul ignore next */
  cov_16lthjwxz5().s[18]++;
  CircuitBreakerState["HALF_OPEN"] = "HALF_OPEN"; // Probando si el servicio se recuperó
  /* istanbul ignore next */
  cov_16lthjwxz5().s[19]++;
  return CircuitBreakerState;
}({}));
const CIRCUIT_BREAKER_CONFIGS =
/* istanbul ignore next */
(cov_16lthjwxz5().s[20]++, {
  MERCADOPAGO_CRITICAL: {
    failureThreshold: 5,
    recoveryTimeout: 60000,
    monitoringWindow: 120000,
    halfOpenMaxCalls: 3,
    successThreshold: 2
  },
  MERCADOPAGO_STANDARD: {
    failureThreshold: 3,
    recoveryTimeout: 30000,
    monitoringWindow: 60000,
    halfOpenMaxCalls: 2,
    successThreshold: 1
  },
  WEBHOOK_PROCESSING: {
    failureThreshold: 10,
    recoveryTimeout: 15000,
    monitoringWindow: 30000,
    halfOpenMaxCalls: 5,
    successThreshold: 3
  }
});
class CircuitBreaker {
  constructor(name, config) {
    /* istanbul ignore next */
    cov_16lthjwxz5().f[11]++;
    cov_16lthjwxz5().s[21]++;
    this.name = name;
    /* istanbul ignore next */
    cov_16lthjwxz5().s[22]++;
    this.config = config;
    /* istanbul ignore next */
    cov_16lthjwxz5().s[23]++;
    this.state = "CLOSED";
    /* istanbul ignore next */
    cov_16lthjwxz5().s[24]++;
    this.failures = 0;
    /* istanbul ignore next */
    cov_16lthjwxz5().s[25]++;
    this.successes = 0;
    /* istanbul ignore next */
    cov_16lthjwxz5().s[26]++;
    this.lastFailureTime = 0;
    /* istanbul ignore next */
    cov_16lthjwxz5().s[27]++;
    this.lastSuccessTime = 0;
    /* istanbul ignore next */
    cov_16lthjwxz5().s[28]++;
    this.halfOpenCalls = 0;
    /* istanbul ignore next */
    cov_16lthjwxz5().s[29]++;
    this.stateChanges = 0;
    /* istanbul ignore next */
    cov_16lthjwxz5().s[30]++;
    this.metrics = {
      totalCalls: 0,
      successfulCalls: 0,
      failedCalls: 0,
      rejectedCalls: 0,
      lastFailureTime: 0,
      lastSuccessTime: 0,
      stateChanges: 0
    };
    /* istanbul ignore next */
    cov_16lthjwxz5().s[31]++;
    _logger.logger.debug(_logger.LogLevel.DEBUG, `Circuit Breaker initialized: ${name}`, {
      config: this.config
    }, _logger.LogCategory.SYSTEM);
  }
  /**
  * Ejecuta una operación protegida por el circuit breaker
  */
  async execute(operation) {
    /* istanbul ignore next */
    cov_16lthjwxz5().f[12]++;
    const startTime =
    /* istanbul ignore next */
    (cov_16lthjwxz5().s[32]++, Date.now());
    /* istanbul ignore next */
    cov_16lthjwxz5().s[33]++;
    this.metrics.totalCalls++;
    // Verificar si debemos rechazar la llamada
    /* istanbul ignore next */
    cov_16lthjwxz5().s[34]++;
    if (this.shouldReject()) {
      /* istanbul ignore next */
      cov_16lthjwxz5().b[0][0]++;
      cov_16lthjwxz5().s[35]++;
      this.metrics.rejectedCalls++;
      /* istanbul ignore next */
      cov_16lthjwxz5().s[36]++;
      await this.recordMetrics('rejected');
      /* istanbul ignore next */
      cov_16lthjwxz5().s[37]++;
      return {
        success: false,
        error: new Error(`Circuit breaker is ${this.state} - operation rejected`),
        state: this.state,
        executionTime: Date.now() - startTime,
        wasRejected: true
      };
    } else
    /* istanbul ignore next */
    {
      cov_16lthjwxz5().b[0][1]++;
    }
    cov_16lthjwxz5().s[38]++;
    try {
      // Ejecutar la operación
      const result =
      /* istanbul ignore next */
      (cov_16lthjwxz5().s[39]++, await operation());
      // Registrar éxito
      /* istanbul ignore next */
      cov_16lthjwxz5().s[40]++;
      await this.onSuccess();
      const executionTime =
      /* istanbul ignore next */
      (cov_16lthjwxz5().s[41]++, Date.now() - startTime);
      /* istanbul ignore next */
      cov_16lthjwxz5().s[42]++;
      await this.recordMetrics('success', executionTime);
      /* istanbul ignore next */
      cov_16lthjwxz5().s[43]++;
      return {
        success: true,
        data: result,
        state: this.state,
        executionTime,
        wasRejected: false
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_16lthjwxz5().s[44]++;
      // Registrar fallo
      await this.onFailure(error);
      const executionTime =
      /* istanbul ignore next */
      (cov_16lthjwxz5().s[45]++, Date.now() - startTime);
      /* istanbul ignore next */
      cov_16lthjwxz5().s[46]++;
      await this.recordMetrics('failure', executionTime);
      /* istanbul ignore next */
      cov_16lthjwxz5().s[47]++;
      return {
        success: false,
        error: error,
        state: this.state,
        executionTime,
        wasRejected: false
      };
    }
  }
  /**
  * Determina si debemos rechazar la operación
  */
  shouldReject() {
    /* istanbul ignore next */
    cov_16lthjwxz5().f[13]++;
    const now =
    /* istanbul ignore next */
    (cov_16lthjwxz5().s[48]++, Date.now());
    /* istanbul ignore next */
    cov_16lthjwxz5().s[49]++;
    switch (this.state) {
      case "CLOSED":
        /* istanbul ignore next */
        cov_16lthjwxz5().b[1][0]++;
        cov_16lthjwxz5().s[50]++;
        return false;
      case "OPEN":
        /* istanbul ignore next */
        cov_16lthjwxz5().b[1][1]++;
        cov_16lthjwxz5().s[51]++;
        // Verificar si es tiempo de intentar recuperación
        if (now - this.lastFailureTime >= this.config.recoveryTimeout) {
          /* istanbul ignore next */
          cov_16lthjwxz5().b[2][0]++;
          cov_16lthjwxz5().s[52]++;
          this.transitionToHalfOpen();
          /* istanbul ignore next */
          cov_16lthjwxz5().s[53]++;
          return false;
        } else
        /* istanbul ignore next */
        {
          cov_16lthjwxz5().b[2][1]++;
        }
        cov_16lthjwxz5().s[54]++;
        return true;
      case "HALF_OPEN":
        /* istanbul ignore next */
        cov_16lthjwxz5().b[1][2]++;
        cov_16lthjwxz5().s[55]++;
        // Limitar llamadas en estado HALF_OPEN
        return this.halfOpenCalls >= this.config.halfOpenMaxCalls;
      default:
        /* istanbul ignore next */
        cov_16lthjwxz5().b[1][3]++;
        cov_16lthjwxz5().s[56]++;
        return false;
    }
  }
  /**
  * Maneja un éxito en la operación
  */
  async onSuccess() {
    /* istanbul ignore next */
    cov_16lthjwxz5().f[14]++;
    cov_16lthjwxz5().s[57]++;
    this.lastSuccessTime = Date.now();
    /* istanbul ignore next */
    cov_16lthjwxz5().s[58]++;
    this.metrics.successfulCalls++;
    /* istanbul ignore next */
    cov_16lthjwxz5().s[59]++;
    switch (this.state) {
      case "HALF_OPEN":
        /* istanbul ignore next */
        cov_16lthjwxz5().b[3][0]++;
        cov_16lthjwxz5().s[60]++;
        this.successes++;
        /* istanbul ignore next */
        cov_16lthjwxz5().s[61]++;
        this.halfOpenCalls++;
        /* istanbul ignore next */
        cov_16lthjwxz5().s[62]++;
        if (this.successes >= this.config.successThreshold) {
          /* istanbul ignore next */
          cov_16lthjwxz5().b[4][0]++;
          cov_16lthjwxz5().s[63]++;
          this.transitionToClosed();
        } else
        /* istanbul ignore next */
        {
          cov_16lthjwxz5().b[4][1]++;
        }
        cov_16lthjwxz5().s[64]++;
        break;
      case "CLOSED":
        /* istanbul ignore next */
        cov_16lthjwxz5().b[3][1]++;
        cov_16lthjwxz5().s[65]++;
        // Reset failure counter en ventana de monitoreo
        if (this.isInMonitoringWindow()) {
          /* istanbul ignore next */
          cov_16lthjwxz5().b[5][0]++;
          cov_16lthjwxz5().s[66]++;
          this.failures = 0;
        } else
        /* istanbul ignore next */
        {
          cov_16lthjwxz5().b[5][1]++;
        }
        cov_16lthjwxz5().s[67]++;
        break;
    }
  }
  /**
  * Maneja un fallo en la operación
  */
  async onFailure(error) {
    /* istanbul ignore next */
    cov_16lthjwxz5().f[15]++;
    cov_16lthjwxz5().s[68]++;
    this.lastFailureTime = Date.now();
    /* istanbul ignore next */
    cov_16lthjwxz5().s[69]++;
    this.metrics.failedCalls++;
    /* istanbul ignore next */
    cov_16lthjwxz5().s[70]++;
    this.failures++;
    /* istanbul ignore next */
    cov_16lthjwxz5().s[71]++;
    _logger.logger.warn(_logger.LogLevel.WARN, `Circuit Breaker failure: ${this.name}`, {
      error: error.message,
      failures: this.failures,
      state: this.state
    }, _logger.LogCategory.SYSTEM);
    /* istanbul ignore next */
    cov_16lthjwxz5().s[72]++;
    switch (this.state) {
      case "CLOSED":
        /* istanbul ignore next */
        cov_16lthjwxz5().b[6][0]++;
        cov_16lthjwxz5().s[73]++;
        if (this.failures >= this.config.failureThreshold) {
          /* istanbul ignore next */
          cov_16lthjwxz5().b[7][0]++;
          cov_16lthjwxz5().s[74]++;
          this.transitionToOpen();
        } else
        /* istanbul ignore next */
        {
          cov_16lthjwxz5().b[7][1]++;
        }
        cov_16lthjwxz5().s[75]++;
        break;
      case "HALF_OPEN":
        /* istanbul ignore next */
        cov_16lthjwxz5().b[6][1]++;
        cov_16lthjwxz5().s[76]++;
        this.transitionToOpen();
        /* istanbul ignore next */
        cov_16lthjwxz5().s[77]++;
        break;
    }
  }
  /**
  * Transición a estado OPEN
  */
  transitionToOpen() {
    /* istanbul ignore next */
    cov_16lthjwxz5().f[16]++;
    cov_16lthjwxz5().s[78]++;
    this.state = "OPEN";
    /* istanbul ignore next */
    cov_16lthjwxz5().s[79]++;
    this.stateChanges++;
    /* istanbul ignore next */
    cov_16lthjwxz5().s[80]++;
    this.metrics.stateChanges++;
    /* istanbul ignore next */
    cov_16lthjwxz5().s[81]++;
    this.halfOpenCalls = 0;
    /* istanbul ignore next */
    cov_16lthjwxz5().s[82]++;
    this.successes = 0;
    /* istanbul ignore next */
    cov_16lthjwxz5().s[83]++;
    _logger.logger.warn(_logger.LogLevel.WARN, `Circuit Breaker OPENED: ${this.name}`, {
      failures: this.failures,
      threshold: this.config.failureThreshold
    }, _logger.LogCategory.SYSTEM);
  }
  /**
  * Transición a estado HALF_OPEN
  */
  transitionToHalfOpen() {
    /* istanbul ignore next */
    cov_16lthjwxz5().f[17]++;
    cov_16lthjwxz5().s[84]++;
    this.state = "HALF_OPEN";
    /* istanbul ignore next */
    cov_16lthjwxz5().s[85]++;
    this.stateChanges++;
    /* istanbul ignore next */
    cov_16lthjwxz5().s[86]++;
    this.metrics.stateChanges++;
    /* istanbul ignore next */
    cov_16lthjwxz5().s[87]++;
    this.halfOpenCalls = 0;
    /* istanbul ignore next */
    cov_16lthjwxz5().s[88]++;
    this.successes = 0;
    /* istanbul ignore next */
    cov_16lthjwxz5().s[89]++;
    _logger.logger.info(_logger.LogLevel.INFO, `Circuit Breaker HALF-OPEN: ${this.name}`, {
      recoveryTimeout: this.config.recoveryTimeout
    }, _logger.LogCategory.SYSTEM);
  }
  /**
  * Transición a estado CLOSED
  */
  transitionToClosed() {
    /* istanbul ignore next */
    cov_16lthjwxz5().f[18]++;
    cov_16lthjwxz5().s[90]++;
    this.state = "CLOSED";
    /* istanbul ignore next */
    cov_16lthjwxz5().s[91]++;
    this.stateChanges++;
    /* istanbul ignore next */
    cov_16lthjwxz5().s[92]++;
    this.metrics.stateChanges++;
    /* istanbul ignore next */
    cov_16lthjwxz5().s[93]++;
    this.failures = 0;
    /* istanbul ignore next */
    cov_16lthjwxz5().s[94]++;
    this.successes = 0;
    /* istanbul ignore next */
    cov_16lthjwxz5().s[95]++;
    this.halfOpenCalls = 0;
    /* istanbul ignore next */
    cov_16lthjwxz5().s[96]++;
    _logger.logger.info(_logger.LogLevel.INFO, `Circuit Breaker CLOSED: ${this.name}`, {
      successThreshold: this.config.successThreshold
    }, _logger.LogCategory.SYSTEM);
  }
  /**
  * Verifica si estamos en la ventana de monitoreo
  */
  isInMonitoringWindow() {
    /* istanbul ignore next */
    cov_16lthjwxz5().f[19]++;
    const now =
    /* istanbul ignore next */
    (cov_16lthjwxz5().s[97]++, Date.now());
    /* istanbul ignore next */
    cov_16lthjwxz5().s[98]++;
    return now - this.lastFailureTime <= this.config.monitoringWindow;
  }
  /**
  * Registra métricas del circuit breaker
  */
  async recordMetrics(operation, executionTime) {
    /* istanbul ignore next */
    cov_16lthjwxz5().f[20]++;
    cov_16lthjwxz5().s[99]++;
    try {
      /* istanbul ignore next */
      cov_16lthjwxz5().s[100]++;
      await _metrics.metricsCollector.recordMetric(`circuit_breaker.${this.name}.${operation}`, 1, {
        state: this.state,
        operation
      });
      /* istanbul ignore next */
      cov_16lthjwxz5().s[101]++;
      if (executionTime) {
        /* istanbul ignore next */
        cov_16lthjwxz5().b[8][0]++;
        cov_16lthjwxz5().s[102]++;
        await _metrics.metricsCollector.recordMetric(`circuit_breaker.${this.name}.execution_time`, executionTime, {
          state: this.state
        });
      } else
      /* istanbul ignore next */
      {
        cov_16lthjwxz5().b[8][1]++;
      }
      // Métricas de estado
      cov_16lthjwxz5().s[103]++;
      await _metrics.metricsCollector.recordMetric(`circuit_breaker.${this.name}.state_changes`, this.stateChanges);
      /* istanbul ignore next */
      cov_16lthjwxz5().s[104]++;
      await _metrics.metricsCollector.recordMetric(`circuit_breaker.${this.name}.failure_rate`, this.metrics.totalCalls > 0 ?
      /* istanbul ignore next */
      (cov_16lthjwxz5().b[9][0]++, this.metrics.failedCalls / this.metrics.totalCalls) :
      /* istanbul ignore next */
      (cov_16lthjwxz5().b[9][1]++, 0));
    } catch (error) {
      /* istanbul ignore next */
      cov_16lthjwxz5().s[105]++;
      _logger.logger.error(_logger.LogLevel.ERROR, `Failed to record circuit breaker metrics: ${this.name}`, {
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_16lthjwxz5().b[10][0]++, error.message) :
        /* istanbul ignore next */
        (cov_16lthjwxz5().b[10][1]++, 'Unknown error')
      }, _logger.LogCategory.SYSTEM);
    }
  }
  /**
  * Obtiene el estado actual del circuit breaker
  */
  getState() {
    /* istanbul ignore next */
    cov_16lthjwxz5().f[21]++;
    cov_16lthjwxz5().s[106]++;
    return this.state;
  }
  /**
  * Obtiene las métricas del circuit breaker
  */
  getMetrics() {
    /* istanbul ignore next */
    cov_16lthjwxz5().f[22]++;
    cov_16lthjwxz5().s[107]++;
    return {
      ...this.metrics,
      state: this.state,
      config: this.config
    };
  }
  /**
  * Fuerza el reset del circuit breaker (solo para testing/admin)
  */
  reset() {
    /* istanbul ignore next */
    cov_16lthjwxz5().f[23]++;
    cov_16lthjwxz5().s[108]++;
    this.state = "CLOSED";
    /* istanbul ignore next */
    cov_16lthjwxz5().s[109]++;
    this.failures = 0;
    /* istanbul ignore next */
    cov_16lthjwxz5().s[110]++;
    this.successes = 0;
    /* istanbul ignore next */
    cov_16lthjwxz5().s[111]++;
    this.halfOpenCalls = 0;
    /* istanbul ignore next */
    cov_16lthjwxz5().s[112]++;
    this.lastFailureTime = 0;
    /* istanbul ignore next */
    cov_16lthjwxz5().s[113]++;
    this.lastSuccessTime = 0;
    /* istanbul ignore next */
    cov_16lthjwxz5().s[114]++;
    _logger.logger.info(_logger.LogLevel.INFO, `Circuit Breaker manually reset: ${this.name}`, {}, _logger.LogCategory.SYSTEM);
  }
}
const mercadoPagoCriticalBreaker =
/* istanbul ignore next */
(cov_16lthjwxz5().s[115]++, new CircuitBreaker('mercadopago_critical', CIRCUIT_BREAKER_CONFIGS.MERCADOPAGO_CRITICAL));
const mercadoPagoStandardBreaker =
/* istanbul ignore next */
(cov_16lthjwxz5().s[116]++, new CircuitBreaker('mercadopago_standard', CIRCUIT_BREAKER_CONFIGS.MERCADOPAGO_STANDARD));
const webhookProcessingBreaker =
/* istanbul ignore next */
(cov_16lthjwxz5().s[117]++, new CircuitBreaker('webhook_processing', CIRCUIT_BREAKER_CONFIGS.WEBHOOK_PROCESSING));
async function executeMercadoPagoCritical(operation) {
  /* istanbul ignore next */
  cov_16lthjwxz5().f[24]++;
  cov_16lthjwxz5().s[118]++;
  return mercadoPagoCriticalBreaker.execute(operation);
}
async function executeMercadoPagoStandard(operation) {
  /* istanbul ignore next */
  cov_16lthjwxz5().f[25]++;
  cov_16lthjwxz5().s[119]++;
  return mercadoPagoStandardBreaker.execute(operation);
}
async function executeWebhookProcessing(operation) {
  /* istanbul ignore next */
  cov_16lthjwxz5().f[26]++;
  cov_16lthjwxz5().s[120]++;
  return webhookProcessingBreaker.execute(operation);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,