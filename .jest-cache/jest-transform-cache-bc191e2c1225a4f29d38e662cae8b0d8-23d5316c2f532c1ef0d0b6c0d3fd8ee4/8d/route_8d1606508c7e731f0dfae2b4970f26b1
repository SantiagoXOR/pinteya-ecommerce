4e0ed3bba86bf821caa56110ccd428a6
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_1h87t3rrju() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\monitoring\\stats\\route.ts";
  var hash = "c1ac41498d1883eefb4d7978a767f5ef030b463f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\monitoring\\stats\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 23
        }
      },
      "6": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 38
        }
      },
      "7": {
        start: {
          line: 21,
          column: 16
        },
        end: {
          line: 21,
          column: 60
        }
      },
      "8": {
        start: {
          line: 22,
          column: 36
        },
        end: {
          line: 22,
          column: 103
        }
      },
      "9": {
        start: {
          line: 23,
          column: 32
        },
        end: {
          line: 23,
          column: 94
        }
      },
      "10": {
        start: {
          line: 24,
          column: 35
        },
        end: {
          line: 24,
          column: 100
        }
      },
      "11": {
        start: {
          line: 25,
          column: 34
        },
        end: {
          line: 25,
          column: 99
        }
      },
      "12": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 24
        }
      },
      "13": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 70,
          column: 5
        }
      },
      "14": {
        start: {
          line: 29,
          column: 33
        },
        end: {
          line: 29,
          column: 53
        }
      },
      "15": {
        start: {
          line: 30,
          column: 21
        },
        end: {
          line: 30,
          column: 54
        }
      },
      "16": {
        start: {
          line: 31,
          column: 23
        },
        end: {
          line: 31,
          column: 67
        }
      },
      "17": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 35,
          column: 11
        }
      },
      "18": {
        start: {
          line: 36,
          column: 20
        },
        end: {
          line: 36,
          column: 22
        }
      },
      "19": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 54,
          column: 9
        }
      },
      "20": {
        start: {
          line: 39,
          column: 16
        },
        end: {
          line: 39,
          column: 58
        }
      },
      "21": {
        start: {
          line: 40,
          column: 16
        },
        end: {
          line: 40,
          column: 22
        }
      },
      "22": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 42,
          column: 52
        }
      },
      "23": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 43,
          column: 22
        }
      },
      "24": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 45,
          column: 53
        }
      },
      "25": {
        start: {
          line: 46,
          column: 16
        },
        end: {
          line: 46,
          column: 22
        }
      },
      "26": {
        start: {
          line: 48,
          column: 16
        },
        end: {
          line: 48,
          column: 50
        }
      },
      "27": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 49,
          column: 22
        }
      },
      "28": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 52,
          column: 50
        }
      },
      "29": {
        start: {
          line: 53,
          column: 16
        },
        end: {
          line: 53,
          column: 22
        }
      },
      "30": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 60,
          column: 11
        }
      },
      "31": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 95
        }
      },
      "32": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 69,
          column: 11
        }
      },
      "33": {
        start: {
          line: 75,
          column: 27
        },
        end: {
          line: 75,
          column: 101
        }
      },
      "34": {
        start: {
          line: 76,
          column: 26
        },
        end: {
          line: 76,
          column: 85
        }
      },
      "35": {
        start: {
          line: 78,
          column: 16
        },
        end: {
          line: 78,
          column: 26
        }
      },
      "36": {
        start: {
          line: 79,
          column: 24
        },
        end: {
          line: 79,
          column: 58
        }
      },
      "37": {
        start: {
          line: 80,
          column: 26
        },
        end: {
          line: 80,
          column: 89
        }
      },
      "38": {
        start: {
          line: 80,
          column: 62
        },
        end: {
          line: 80,
          column: 88
        }
      },
      "39": {
        start: {
          line: 81,
          column: 28
        },
        end: {
          line: 81,
          column: 92
        }
      },
      "40": {
        start: {
          line: 81,
          column: 65
        },
        end: {
          line: 81,
          column: 91
        }
      },
      "41": {
        start: {
          line: 82,
          column: 29
        },
        end: {
          line: 82,
          column: 94
        }
      },
      "42": {
        start: {
          line: 82,
          column: 67
        },
        end: {
          line: 82,
          column: 93
        }
      },
      "43": {
        start: {
          line: 83,
          column: 28
        },
        end: {
          line: 83,
          column: 137
        }
      },
      "44": {
        start: {
          line: 83,
          column: 86
        },
        end: {
          line: 83,
          column: 106
        }
      },
      "45": {
        start: {
          line: 84,
          column: 25
        },
        end: {
          line: 84,
          column: 131
        }
      },
      "46": {
        start: {
          line: 84,
          column: 83
        },
        end: {
          line: 84,
          column: 100
        }
      },
      "47": {
        start: {
          line: 85,
          column: 26
        },
        end: {
          line: 85,
          column: 133
        }
      },
      "48": {
        start: {
          line: 85,
          column: 84
        },
        end: {
          line: 85,
          column: 102
        }
      },
      "49": {
        start: {
          line: 87,
          column: 19
        },
        end: {
          line: 87,
          column: 125
        }
      },
      "50": {
        start: {
          line: 87,
          column: 81
        },
        end: {
          line: 87,
          column: 92
        }
      },
      "51": {
        start: {
          line: 88,
          column: 19
        },
        end: {
          line: 88,
          column: 125
        }
      },
      "52": {
        start: {
          line: 88,
          column: 81
        },
        end: {
          line: 88,
          column: 92
        }
      },
      "53": {
        start: {
          line: 89,
          column: 19
        },
        end: {
          line: 89,
          column: 125
        }
      },
      "54": {
        start: {
          line: 89,
          column: 81
        },
        end: {
          line: 89,
          column: 92
        }
      },
      "55": {
        start: {
          line: 90,
          column: 4
        },
        end: {
          line: 114,
          column: 6
        }
      },
      "56": {
        start: {
          line: 110,
          column: 64
        },
        end: {
          line: 110,
          column: 78
        }
      },
      "57": {
        start: {
          line: 111,
          column: 61
        },
        end: {
          line: 111,
          column: 72
        }
      },
      "58": {
        start: {
          line: 112,
          column: 62
        },
        end: {
          line: 112,
          column: 74
        }
      },
      "59": {
        start: {
          line: 119,
          column: 23
        },
        end: {
          line: 119,
          column: 85
        }
      },
      "60": {
        start: {
          line: 120,
          column: 25
        },
        end: {
          line: 120,
          column: 89
        }
      },
      "61": {
        start: {
          line: 122,
          column: 16
        },
        end: {
          line: 122,
          column: 26
        }
      },
      "62": {
        start: {
          line: 123,
          column: 24
        },
        end: {
          line: 123,
          column: 58
        }
      },
      "63": {
        start: {
          line: 124,
          column: 25
        },
        end: {
          line: 124,
          column: 85
        }
      },
      "64": {
        start: {
          line: 124,
          column: 54
        },
        end: {
          line: 124,
          column: 84
        }
      },
      "65": {
        start: {
          line: 126,
          column: 29
        },
        end: {
          line: 129,
          column: 10
        }
      },
      "66": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 127,
          column: 61
        }
      },
      "67": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 128,
          column: 19
        }
      },
      "68": {
        start: {
          line: 131,
          column: 25
        },
        end: {
          line: 134,
          column: 10
        }
      },
      "69": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 132,
          column: 53
        }
      },
      "70": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 133,
          column: 19
        }
      },
      "71": {
        start: {
          line: 136,
          column: 25
        },
        end: {
          line: 143,
          column: 11
        }
      },
      "72": {
        start: {
          line: 136,
          column: 51
        },
        end: {
          line: 136,
          column: 76
        }
      },
      "73": {
        start: {
          line: 136,
          column: 105
        },
        end: {
          line: 143,
          column: 9
        }
      },
      "74": {
        start: {
          line: 144,
          column: 4
        },
        end: {
          line: 156,
          column: 6
        }
      },
      "75": {
        start: {
          line: 153,
          column: 54
        },
        end: {
          line: 153,
          column: 75
        }
      },
      "76": {
        start: {
          line: 154,
          column: 92
        },
        end: {
          line: 154,
          column: 115
        }
      },
      "77": {
        start: {
          line: 161,
          column: 25
        },
        end: {
          line: 161,
          column: 105
        }
      },
      "78": {
        start: {
          line: 162,
          column: 26
        },
        end: {
          line: 162,
          column: 97
        }
      },
      "79": {
        start: {
          line: 164,
          column: 28
        },
        end: {
          line: 167,
          column: 10
        }
      },
      "80": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 165,
          column: 59
        }
      },
      "81": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 166,
          column: 19
        }
      },
      "82": {
        start: {
          line: 168,
          column: 27
        },
        end: {
          line: 171,
          column: 10
        }
      },
      "83": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 169,
          column: 57
        }
      },
      "84": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 170,
          column: 19
        }
      },
      "85": {
        start: {
          line: 173,
          column: 26
        },
        end: {
          line: 179,
          column: 11
        }
      },
      "86": {
        start: {
          line: 173,
          column: 70
        },
        end: {
          line: 173,
          column: 91
        }
      },
      "87": {
        start: {
          line: 173,
          column: 106
        },
        end: {
          line: 173,
          column: 133
        }
      },
      "88": {
        start: {
          line: 173,
          column: 162
        },
        end: {
          line: 179,
          column: 9
        }
      },
      "89": {
        start: {
          line: 180,
          column: 4
        },
        end: {
          line: 190,
          column: 6
        }
      },
      "90": {
        start: {
          line: 195,
          column: 27
        },
        end: {
          line: 195,
          column: 88
        }
      },
      "91": {
        start: {
          line: 196,
          column: 26
        },
        end: {
          line: 196,
          column: 95
        }
      },
      "92": {
        start: {
          line: 197,
          column: 25
        },
        end: {
          line: 197,
          column: 95
        }
      },
      "93": {
        start: {
          line: 199,
          column: 34
        },
        end: {
          line: 204,
          column: 10
        }
      },
      "94": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 202,
          column: 11
        }
      },
      "95": {
        start: {
          line: 201,
          column: 12
        },
        end: {
          line: 201,
          column: 43
        }
      },
      "96": {
        start: {
          line: 203,
          column: 8
        },
        end: {
          line: 203,
          column: 19
        }
      },
      "97": {
        start: {
          line: 206,
          column: 25
        },
        end: {
          line: 209,
          column: 10
        }
      },
      "98": {
        start: {
          line: 207,
          column: 8
        },
        end: {
          line: 207,
          column: 53
        }
      },
      "99": {
        start: {
          line: 208,
          column: 8
        },
        end: {
          line: 208,
          column: 19
        }
      },
      "100": {
        start: {
          line: 210,
          column: 4
        },
        end: {
          line: 231,
          column: 6
        }
      },
      "101": {
        start: {
          line: 215,
          column: 50
        },
        end: {
          line: 220,
          column: 17
        }
      },
      "102": {
        start: {
          line: 225,
          column: 59
        },
        end: {
          line: 229,
          column: 17
        }
      },
      "103": {
        start: {
          line: 236,
          column: 54
        },
        end: {
          line: 241,
          column: 6
        }
      },
      "104": {
        start: {
          line: 243,
          column: 24
        },
        end: {
          line: 243,
          column: 74
        }
      },
      "105": {
        start: {
          line: 244,
          column: 4
        },
        end: {
          line: 257,
          column: 6
        }
      },
      "106": {
        start: {
          line: 262,
          column: 4
        },
        end: {
          line: 264,
          column: 5
        }
      },
      "107": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 263,
          column: 17
        }
      },
      "108": {
        start: {
          line: 265,
          column: 17
        },
        end: {
          line: 265,
          column: 46
        }
      },
      "109": {
        start: {
          line: 266,
          column: 22
        },
        end: {
          line: 266,
          column: 43
        }
      },
      "110": {
        start: {
          line: 267,
          column: 23
        },
        end: {
          line: 267,
          column: 41
        }
      },
      "111": {
        start: {
          line: 268,
          column: 21
        },
        end: {
          line: 268,
          column: 82
        }
      },
      "112": {
        start: {
          line: 268,
          column: 50
        },
        end: {
          line: 268,
          column: 59
        }
      },
      "113": {
        start: {
          line: 269,
          column: 22
        },
        end: {
          line: 269,
          column: 85
        }
      },
      "114": {
        start: {
          line: 269,
          column: 52
        },
        end: {
          line: 269,
          column: 61
        }
      },
      "115": {
        start: {
          line: 270,
          column: 4
        },
        end: {
          line: 270,
          column: 72
        }
      },
      "116": {
        start: {
          line: 275,
          column: 16
        },
        end: {
          line: 275,
          column: 19
        }
      },
      "117": {
        start: {
          line: 277,
          column: 4
        },
        end: {
          line: 277,
          column: 39
        }
      },
      "118": {
        start: {
          line: 278,
          column: 4
        },
        end: {
          line: 278,
          column: 45
        }
      },
      "119": {
        start: {
          line: 280,
          column: 4
        },
        end: {
          line: 280,
          column: 49
        }
      },
      "120": {
        start: {
          line: 281,
          column: 4
        },
        end: {
          line: 281,
          column: 48
        }
      },
      "121": {
        start: {
          line: 283,
          column: 4
        },
        end: {
          line: 296,
          column: 5
        }
      },
      "122": {
        start: {
          line: 284,
          column: 8
        },
        end: {
          line: 286,
          column: 9
        }
      },
      "123": {
        start: {
          line: 285,
          column: 12
        },
        end: {
          line: 285,
          column: 24
        }
      },
      "124": {
        start: {
          line: 287,
          column: 8
        },
        end: {
          line: 289,
          column: 9
        }
      },
      "125": {
        start: {
          line: 288,
          column: 12
        },
        end: {
          line: 288,
          column: 24
        }
      },
      "126": {
        start: {
          line: 290,
          column: 8
        },
        end: {
          line: 292,
          column: 9
        }
      },
      "127": {
        start: {
          line: 291,
          column: 12
        },
        end: {
          line: 291,
          column: 24
        }
      },
      "128": {
        start: {
          line: 293,
          column: 8
        },
        end: {
          line: 295,
          column: 9
        }
      },
      "129": {
        start: {
          line: 294,
          column: 12
        },
        end: {
          line: 294,
          column: 24
        }
      },
      "130": {
        start: {
          line: 297,
          column: 4
        },
        end: {
          line: 297,
          column: 57
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 19
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "GET",
        decl: {
          start: {
            line: 27,
            column: 15
          },
          end: {
            line: 27,
            column: 18
          }
        },
        loc: {
          start: {
            line: 27,
            column: 28
          },
          end: {
            line: 71,
            column: 1
          }
        },
        line: 27
      },
      "4": {
        name: "getPerformanceStats",
        decl: {
          start: {
            line: 74,
            column: 19
          },
          end: {
            line: 74,
            column: 38
          }
        },
        loc: {
          start: {
            line: 74,
            column: 52
          },
          end: {
            line: 115,
            column: 1
          }
        },
        line: 74
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 80,
            column: 57
          },
          end: {
            line: 80,
            column: 58
          }
        },
        loc: {
          start: {
            line: 80,
            column: 62
          },
          end: {
            line: 80,
            column: 88
          }
        },
        line: 80
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 81,
            column: 60
          },
          end: {
            line: 81,
            column: 61
          }
        },
        loc: {
          start: {
            line: 81,
            column: 65
          },
          end: {
            line: 81,
            column: 91
          }
        },
        line: 81
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 82,
            column: 62
          },
          end: {
            line: 82,
            column: 63
          }
        },
        loc: {
          start: {
            line: 82,
            column: 67
          },
          end: {
            line: 82,
            column: 93
          }
        },
        line: 82
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 83,
            column: 76
          },
          end: {
            line: 83,
            column: 77
          }
        },
        loc: {
          start: {
            line: 83,
            column: 86
          },
          end: {
            line: 83,
            column: 106
          }
        },
        line: 83
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 84,
            column: 73
          },
          end: {
            line: 84,
            column: 74
          }
        },
        loc: {
          start: {
            line: 84,
            column: 83
          },
          end: {
            line: 84,
            column: 100
          }
        },
        line: 84
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 85,
            column: 74
          },
          end: {
            line: 85,
            column: 75
          }
        },
        loc: {
          start: {
            line: 85,
            column: 84
          },
          end: {
            line: 85,
            column: 102
          }
        },
        line: 85
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 87,
            column: 71
          },
          end: {
            line: 87,
            column: 72
          }
        },
        loc: {
          start: {
            line: 87,
            column: 81
          },
          end: {
            line: 87,
            column: 92
          }
        },
        line: 87
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 88,
            column: 71
          },
          end: {
            line: 88,
            column: 72
          }
        },
        loc: {
          start: {
            line: 88,
            column: 81
          },
          end: {
            line: 88,
            column: 92
          }
        },
        line: 88
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 89,
            column: 71
          },
          end: {
            line: 89,
            column: 72
          }
        },
        loc: {
          start: {
            line: 89,
            column: 81
          },
          end: {
            line: 89,
            column: 92
          }
        },
        line: 89
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 110,
            column: 59
          },
          end: {
            line: 110,
            column: 60
          }
        },
        loc: {
          start: {
            line: 110,
            column: 64
          },
          end: {
            line: 110,
            column: 78
          }
        },
        line: 110
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 111,
            column: 56
          },
          end: {
            line: 111,
            column: 57
          }
        },
        loc: {
          start: {
            line: 111,
            column: 61
          },
          end: {
            line: 111,
            column: 72
          }
        },
        line: 111
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 112,
            column: 57
          },
          end: {
            line: 112,
            column: 58
          }
        },
        loc: {
          start: {
            line: 112,
            column: 62
          },
          end: {
            line: 112,
            column: 74
          }
        },
        line: 112
      },
      "17": {
        name: "getAlertStats",
        decl: {
          start: {
            line: 118,
            column: 19
          },
          end: {
            line: 118,
            column: 32
          }
        },
        loc: {
          start: {
            line: 118,
            column: 46
          },
          end: {
            line: 157,
            column: 1
          }
        },
        line: 118
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 124,
            column: 45
          },
          end: {
            line: 124,
            column: 46
          }
        },
        loc: {
          start: {
            line: 124,
            column: 54
          },
          end: {
            line: 124,
            column: 84
          }
        },
        line: 124
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 126,
            column: 49
          },
          end: {
            line: 126,
            column: 50
          }
        },
        loc: {
          start: {
            line: 126,
            column: 63
          },
          end: {
            line: 129,
            column: 5
          }
        },
        line: 126
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 131,
            column: 45
          },
          end: {
            line: 131,
            column: 46
          }
        },
        loc: {
          start: {
            line: 131,
            column: 59
          },
          end: {
            line: 134,
            column: 5
          }
        },
        line: 131
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 136,
            column: 43
          },
          end: {
            line: 136,
            column: 44
          }
        },
        loc: {
          start: {
            line: 136,
            column: 51
          },
          end: {
            line: 136,
            column: 76
          }
        },
        line: 136
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 136,
            column: 95
          },
          end: {
            line: 136,
            column: 96
          }
        },
        loc: {
          start: {
            line: 136,
            column: 105
          },
          end: {
            line: 143,
            column: 9
          }
        },
        line: 136
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 153,
            column: 49
          },
          end: {
            line: 153,
            column: 50
          }
        },
        loc: {
          start: {
            line: 153,
            column: 54
          },
          end: {
            line: 153,
            column: 75
          }
        },
        line: 153
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 154,
            column: 82
          },
          end: {
            line: 154,
            column: 83
          }
        },
        loc: {
          start: {
            line: 154,
            column: 92
          },
          end: {
            line: 154,
            column: 115
          }
        },
        line: 154
      },
      "25": {
        name: "getBudgetStats",
        decl: {
          start: {
            line: 160,
            column: 19
          },
          end: {
            line: 160,
            column: 33
          }
        },
        loc: {
          start: {
            line: 160,
            column: 47
          },
          end: {
            line: 191,
            column: 1
          }
        },
        line: 160
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 164,
            column: 62
          },
          end: {
            line: 164,
            column: 63
          }
        },
        loc: {
          start: {
            line: 164,
            column: 77
          },
          end: {
            line: 167,
            column: 5
          }
        },
        line: 164
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 168,
            column: 61
          },
          end: {
            line: 168,
            column: 62
          }
        },
        loc: {
          start: {
            line: 168,
            column: 76
          },
          end: {
            line: 171,
            column: 5
          }
        },
        line: 168
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 173,
            column: 60
          },
          end: {
            line: 173,
            column: 61
          }
        },
        loc: {
          start: {
            line: 173,
            column: 70
          },
          end: {
            line: 173,
            column: 91
          }
        },
        line: 173
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 173,
            column: 98
          },
          end: {
            line: 173,
            column: 99
          }
        },
        loc: {
          start: {
            line: 173,
            column: 106
          },
          end: {
            line: 173,
            column: 133
          }
        },
        line: 173
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 173,
            column: 151
          },
          end: {
            line: 173,
            column: 152
          }
        },
        loc: {
          start: {
            line: 173,
            column: 162
          },
          end: {
            line: 179,
            column: 9
          }
        },
        line: 173
      },
      "31": {
        name: "getStreamingStats",
        decl: {
          start: {
            line: 194,
            column: 19
          },
          end: {
            line: 194,
            column: 36
          }
        },
        loc: {
          start: {
            line: 194,
            column: 39
          },
          end: {
            line: 232,
            column: 1
          }
        },
        line: 194
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 199,
            column: 55
          },
          end: {
            line: 199,
            column: 56
          }
        },
        loc: {
          start: {
            line: 199,
            column: 70
          },
          end: {
            line: 204,
            column: 5
          }
        },
        line: 199
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 200,
            column: 37
          },
          end: {
            line: 200,
            column: 38
          }
        },
        loc: {
          start: {
            line: 200,
            column: 44
          },
          end: {
            line: 202,
            column: 9
          }
        },
        line: 200
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 206,
            column: 45
          },
          end: {
            line: 206,
            column: 46
          }
        },
        loc: {
          start: {
            line: 206,
            column: 59
          },
          end: {
            line: 209,
            column: 5
          }
        },
        line: 206
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 215,
            column: 39
          },
          end: {
            line: 215,
            column: 40
          }
        },
        loc: {
          start: {
            line: 215,
            column: 50
          },
          end: {
            line: 220,
            column: 17
          }
        },
        line: 215
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 225,
            column: 49
          },
          end: {
            line: 225,
            column: 50
          }
        },
        loc: {
          start: {
            line: 225,
            column: 59
          },
          end: {
            line: 229,
            column: 17
          }
        },
        line: 225
      },
      "37": {
        name: "getAllStats",
        decl: {
          start: {
            line: 235,
            column: 19
          },
          end: {
            line: 235,
            column: 30
          }
        },
        loc: {
          start: {
            line: 235,
            column: 44
          },
          end: {
            line: 258,
            column: 1
          }
        },
        line: 235
      },
      "38": {
        name: "calculateTrend",
        decl: {
          start: {
            line: 261,
            column: 13
          },
          end: {
            line: 261,
            column: 27
          }
        },
        loc: {
          start: {
            line: 261,
            column: 36
          },
          end: {
            line: 271,
            column: 1
          }
        },
        line: 261
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 268,
            column: 38
          },
          end: {
            line: 268,
            column: 39
          }
        },
        loc: {
          start: {
            line: 268,
            column: 50
          },
          end: {
            line: 268,
            column: 59
          }
        },
        line: 268
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 269,
            column: 40
          },
          end: {
            line: 269,
            column: 41
          }
        },
        loc: {
          start: {
            line: 269,
            column: 52
          },
          end: {
            line: 269,
            column: 61
          }
        },
        line: 269
      },
      "41": {
        name: "calculateSystemScore",
        decl: {
          start: {
            line: 274,
            column: 13
          },
          end: {
            line: 274,
            column: 33
          }
        },
        loc: {
          start: {
            line: 274,
            column: 64
          },
          end: {
            line: 298,
            column: 1
          }
        },
        line: 274
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 30,
            column: 21
          },
          end: {
            line: 30,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 21
          },
          end: {
            line: 30,
            column: 45
          }
        }, {
          start: {
            line: 30,
            column: 49
          },
          end: {
            line: 30,
            column: 54
          }
        }],
        line: 30
      },
      "1": {
        loc: {
          start: {
            line: 31,
            column: 32
          },
          end: {
            line: 31,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 32
          },
          end: {
            line: 31,
            column: 58
          }
        }, {
          start: {
            line: 31,
            column: 62
          },
          end: {
            line: 31,
            column: 66
          }
        }],
        line: 31
      },
      "2": {
        loc: {
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 40,
            column: 22
          }
        }, {
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 43,
            column: 22
          }
        }, {
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 46,
            column: 22
          }
        }, {
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 49,
            column: 22
          }
        }, {
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 50,
            column: 23
          }
        }, {
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 53,
            column: 22
          }
        }],
        line: 37
      },
      "3": {
        loc: {
          start: {
            line: 59,
            column: 20
          },
          end: {
            line: 59,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 59,
            column: 43
          },
          end: {
            line: 59,
            column: 52
          }
        }, {
          start: {
            line: 59,
            column: 55
          },
          end: {
            line: 59,
            column: 61
          }
        }],
        line: 59
      },
      "4": {
        loc: {
          start: {
            line: 66,
            column: 21
          },
          end: {
            line: 66,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 66,
            column: 46
          },
          end: {
            line: 66,
            column: 59
          }
        }, {
          start: {
            line: 66,
            column: 62
          },
          end: {
            line: 66,
            column: 77
          }
        }],
        line: 66
      },
      "5": {
        loc: {
          start: {
            line: 83,
            column: 28
          },
          end: {
            line: 83,
            column: 137
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 83,
            column: 55
          },
          end: {
            line: 83,
            column: 133
          }
        }, {
          start: {
            line: 83,
            column: 136
          },
          end: {
            line: 83,
            column: 137
          }
        }],
        line: 83
      },
      "6": {
        loc: {
          start: {
            line: 84,
            column: 25
          },
          end: {
            line: 84,
            column: 131
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 84,
            column: 52
          },
          end: {
            line: 84,
            column: 127
          }
        }, {
          start: {
            line: 84,
            column: 130
          },
          end: {
            line: 84,
            column: 131
          }
        }],
        line: 84
      },
      "7": {
        loc: {
          start: {
            line: 85,
            column: 26
          },
          end: {
            line: 85,
            column: 133
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 85,
            column: 53
          },
          end: {
            line: 85,
            column: 129
          }
        }, {
          start: {
            line: 85,
            column: 132
          },
          end: {
            line: 85,
            column: 133
          }
        }],
        line: 85
      },
      "8": {
        loc: {
          start: {
            line: 87,
            column: 19
          },
          end: {
            line: 87,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 87,
            column: 48
          },
          end: {
            line: 87,
            column: 121
          }
        }, {
          start: {
            line: 87,
            column: 124
          },
          end: {
            line: 87,
            column: 125
          }
        }],
        line: 87
      },
      "9": {
        loc: {
          start: {
            line: 88,
            column: 19
          },
          end: {
            line: 88,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 88,
            column: 48
          },
          end: {
            line: 88,
            column: 121
          }
        }, {
          start: {
            line: 88,
            column: 124
          },
          end: {
            line: 88,
            column: 125
          }
        }],
        line: 88
      },
      "10": {
        loc: {
          start: {
            line: 89,
            column: 19
          },
          end: {
            line: 89,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 89,
            column: 48
          },
          end: {
            line: 89,
            column: 121
          }
        }, {
          start: {
            line: 89,
            column: 124
          },
          end: {
            line: 89,
            column: 125
          }
        }],
        line: 89
      },
      "11": {
        loc: {
          start: {
            line: 91,
            column: 17
          },
          end: {
            line: 91,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 91,
            column: 17
          },
          end: {
            line: 91,
            column: 30
          }
        }, {
          start: {
            line: 91,
            column: 34
          },
          end: {
            line: 91,
            column: 38
          }
        }],
        line: 91
      },
      "12": {
        loc: {
          start: {
            line: 127,
            column: 31
          },
          end: {
            line: 127,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 127,
            column: 31
          },
          end: {
            line: 127,
            column: 50
          }
        }, {
          start: {
            line: 127,
            column: 54
          },
          end: {
            line: 127,
            column: 55
          }
        }],
        line: 127
      },
      "13": {
        loc: {
          start: {
            line: 132,
            column: 27
          },
          end: {
            line: 132,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 132,
            column: 27
          },
          end: {
            line: 132,
            column: 42
          }
        }, {
          start: {
            line: 132,
            column: 46
          },
          end: {
            line: 132,
            column: 47
          }
        }],
        line: 132
      },
      "14": {
        loc: {
          start: {
            line: 154,
            column: 36
          },
          end: {
            line: 154,
            column: 145
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 154,
            column: 62
          },
          end: {
            line: 154,
            column: 141
          }
        }, {
          start: {
            line: 154,
            column: 144
          },
          end: {
            line: 154,
            column: 145
          }
        }],
        line: 154
      },
      "15": {
        loc: {
          start: {
            line: 165,
            column: 30
          },
          end: {
            line: 165,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 165,
            column: 30
          },
          end: {
            line: 165,
            column: 48
          }
        }, {
          start: {
            line: 165,
            column: 52
          },
          end: {
            line: 165,
            column: 53
          }
        }],
        line: 165
      },
      "16": {
        loc: {
          start: {
            line: 169,
            column: 29
          },
          end: {
            line: 169,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 169,
            column: 29
          },
          end: {
            line: 169,
            column: 46
          }
        }, {
          start: {
            line: 169,
            column: 50
          },
          end: {
            line: 169,
            column: 51
          }
        }],
        line: 169
      },
      "17": {
        loc: {
          start: {
            line: 201,
            column: 24
          },
          end: {
            line: 201,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 201,
            column: 24
          },
          end: {
            line: 201,
            column: 32
          }
        }, {
          start: {
            line: 201,
            column: 36
          },
          end: {
            line: 201,
            column: 37
          }
        }],
        line: 201
      },
      "18": {
        loc: {
          start: {
            line: 207,
            column: 27
          },
          end: {
            line: 207,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 207,
            column: 27
          },
          end: {
            line: 207,
            column: 42
          }
        }, {
          start: {
            line: 207,
            column: 46
          },
          end: {
            line: 207,
            column: 47
          }
        }],
        line: 207
      },
      "19": {
        loc: {
          start: {
            line: 262,
            column: 4
          },
          end: {
            line: 264,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 262,
            column: 4
          },
          end: {
            line: 264,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 262
      },
      "20": {
        loc: {
          start: {
            line: 270,
            column: 11
          },
          end: {
            line: 270,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 270,
            column: 28
          },
          end: {
            line: 270,
            column: 29
          }
        }, {
          start: {
            line: 270,
            column: 32
          },
          end: {
            line: 270,
            column: 71
          }
        }],
        line: 270
      },
      "21": {
        loc: {
          start: {
            line: 283,
            column: 4
          },
          end: {
            line: 296,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 283,
            column: 4
          },
          end: {
            line: 296,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 283
      },
      "22": {
        loc: {
          start: {
            line: 284,
            column: 8
          },
          end: {
            line: 286,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 284,
            column: 8
          },
          end: {
            line: 286,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 284
      },
      "23": {
        loc: {
          start: {
            line: 287,
            column: 8
          },
          end: {
            line: 289,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 287,
            column: 8
          },
          end: {
            line: 289,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 287
      },
      "24": {
        loc: {
          start: {
            line: 290,
            column: 8
          },
          end: {
            line: 292,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 290,
            column: 8
          },
          end: {
            line: 292,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 290
      },
      "25": {
        loc: {
          start: {
            line: 293,
            column: 8
          },
          end: {
            line: 295,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 293,
            column: 8
          },
          end: {
            line: 295,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 293
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0, 0, 0, 0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\monitoring\\stats\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - MONITORING STATS API\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { logger, LogCategory } from '@/lib/enterprise/logger';\r\nimport { realTimePerformanceMonitor } from '@/lib/monitoring/real-time-performance-monitor';\r\nimport { advancedAlertingEngine } from '@/lib/monitoring/advanced-alerting-engine';\r\nimport { performanceBudgetsMonitor } from '@/lib/monitoring/performance-budgets-monitor';\r\nimport { realTimeMetricsStreaming } from '@/lib/monitoring/real-time-metrics-streaming';\r\n\r\n/**\r\n * GET - Obtiene estad\xEDsticas de monitoreo\r\n */\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    const { searchParams } = new URL(request.url);\r\n    const type = searchParams.get('type') || 'all';\r\n    const period = parseInt(searchParams.get('period') || '24'); // horas\r\n\r\n    logger.info(LogCategory.API, 'Monitoring stats requested', {\r\n      type,\r\n      period\r\n    });\r\n\r\n    let stats: any = {};\r\n\r\n    switch (type) {\r\n      case 'performance':\r\n        stats = await getPerformanceStats(period);\r\n        break;\r\n      \r\n      case 'alerts':\r\n        stats = await getAlertStats(period);\r\n        break;\r\n      \r\n      case 'budgets':\r\n        stats = await getBudgetStats(period);\r\n        break;\r\n      \r\n      case 'streaming':\r\n        stats = await getStreamingStats();\r\n        break;\r\n      \r\n      case 'all':\r\n      default:\r\n        stats = await getAllStats(period);\r\n        break;\r\n    }\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: stats,\r\n      timestamp: Date.now(),\r\n      period: type === 'streaming' ? undefined : period\r\n    });\r\n\r\n  } catch (error) {\r\n    logger.error(LogCategory.API, 'Error getting monitoring stats', error as Error);\r\n    \r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Error retrieving monitoring statistics',\r\n      details: error instanceof Error ? error.message : 'Unknown error'\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n/**\r\n * Obtiene estad\xEDsticas de performance\r\n */\r\nasync function getPerformanceStats(periodHours: number) {\r\n  const currentMetrics = realTimePerformanceMonitor.getCurrentMetrics();\r\n  const latestMetrics = currentMetrics.realTime[currentMetrics.realTime.length - 1];\r\n\r\n  // Calcular promedios del per\xEDodo\r\n  const now = Date.now();\r\n  const periodStart = now - (periodHours * 60 * 60 * 1000);\r\n  \r\n  const periodMetrics = currentMetrics.realTime.filter(m => m.timestamp >= periodStart);\r\n  const periodWebVitals = currentMetrics.webVitals.filter(v => v.timestamp >= periodStart);\r\n  const periodApiMetrics = currentMetrics.apiMetrics.filter(a => a.timestamp >= periodStart);\r\n\r\n  const avgResponseTime = periodMetrics.length > 0 \r\n    ? periodMetrics.reduce((sum, m) => sum + m.responseTime, 0) / periodMetrics.length \r\n    : 0;\r\n\r\n  const avgErrorRate = periodMetrics.length > 0 \r\n    ? periodMetrics.reduce((sum, m) => sum + m.errorRate, 0) / periodMetrics.length \r\n    : 0;\r\n\r\n  const avgThroughput = periodMetrics.length > 0 \r\n    ? periodMetrics.reduce((sum, m) => sum + m.throughput, 0) / periodMetrics.length \r\n    : 0;\r\n\r\n  // Core Web Vitals promedios\r\n  const avgLCP = periodWebVitals.length > 0 \r\n    ? periodWebVitals.reduce((sum, v) => sum + v.lcp, 0) / periodWebVitals.length \r\n    : 0;\r\n\r\n  const avgFID = periodWebVitals.length > 0 \r\n    ? periodWebVitals.reduce((sum, v) => sum + v.fid, 0) / periodWebVitals.length \r\n    : 0;\r\n\r\n  const avgCLS = periodWebVitals.length > 0 \r\n    ? periodWebVitals.reduce((sum, v) => sum + v.cls, 0) / periodWebVitals.length \r\n    : 0;\r\n\r\n  return {\r\n    current: latestMetrics || null,\r\n    period: {\r\n      averages: {\r\n        responseTime: Math.round(avgResponseTime),\r\n        errorRate: Number((avgErrorRate * 100).toFixed(2)),\r\n        throughput: Number(avgThroughput.toFixed(2)),\r\n        coreWebVitals: {\r\n          lcp: Math.round(avgLCP),\r\n          fid: Math.round(avgFID),\r\n          cls: Number(avgCLS.toFixed(3))\r\n        }\r\n      },\r\n      counts: {\r\n        totalMetrics: periodMetrics.length,\r\n        webVitalsRecords: periodWebVitals.length,\r\n        apiCalls: periodApiMetrics.length\r\n      }\r\n    },\r\n    trends: {\r\n      responseTime: calculateTrend(periodMetrics.map(m => m.responseTime)),\r\n      errorRate: calculateTrend(periodMetrics.map(m => m.errorRate)),\r\n      throughput: calculateTrend(periodMetrics.map(m => m.throughput))\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Obtiene estad\xEDsticas de alertas\r\n */\r\nasync function getAlertStats(periodHours: number) {\r\n  const alertStats = advancedAlertingEngine.getAlertStats();\r\n  const activeAlerts = advancedAlertingEngine.getActiveAlerts();\r\n\r\n  // Filtrar alertas del per\xEDodo\r\n  const now = Date.now();\r\n  const periodStart = now - (periodHours * 60 * 60 * 1000);\r\n  const periodAlerts = activeAlerts.filter(alert => alert.timestamp >= periodStart);\r\n\r\n  // Agrupar por severidad\r\n  const alertsBySeverity = periodAlerts.reduce((acc, alert) => {\r\n    acc[alert.severity] = (acc[alert.severity] || 0) + 1;\r\n    return acc;\r\n  }, {} as Record<string, number>);\r\n\r\n  // Agrupar por tipo\r\n  const alertsByType = periodAlerts.reduce((acc, alert) => {\r\n    acc[alert.type] = (acc[alert.type] || 0) + 1;\r\n    return acc;\r\n  }, {} as Record<string, number>);\r\n\r\n  // Alertas m\xE1s recientes\r\n  const recentAlerts = activeAlerts\r\n    .sort((a, b) => b.timestamp - a.timestamp)\r\n    .slice(0, 10)\r\n    .map(alert => ({\r\n      id: alert.id,\r\n      type: alert.type,\r\n      severity: alert.severity,\r\n      title: alert.title,\r\n      timestamp: alert.timestamp,\r\n      status: alert.status\r\n    }));\r\n\r\n  return {\r\n    summary: alertStats,\r\n    period: {\r\n      total: periodAlerts.length,\r\n      bySeverity: alertsBySeverity,\r\n      byType: alertsByType\r\n    },\r\n    recent: recentAlerts,\r\n    escalation: {\r\n      escalatedAlerts: activeAlerts.filter(a => a.escalationLevel > 0).length,\r\n      averageEscalationLevel: activeAlerts.length > 0 \r\n        ? activeAlerts.reduce((sum, a) => sum + a.escalationLevel, 0) / activeAlerts.length \r\n        : 0\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Obtiene estad\xEDsticas de presupuestos\r\n */\r\nasync function getBudgetStats(periodHours: number) {\r\n  const budgetReport = performanceBudgetsMonitor.generateReport(periodHours);\r\n  const activeBudgets = performanceBudgetsMonitor.getActiveBudgets();\r\n\r\n  // Calcular m\xE9tricas adicionales\r\n  const budgetsByStatus = budgetReport.budgetResults.reduce((acc, result) => {\r\n    acc[result.status] = (acc[result.status] || 0) + 1;\r\n    return acc;\r\n  }, {} as Record<string, number>);\r\n\r\n  const budgetsByTrend = budgetReport.budgetResults.reduce((acc, result) => {\r\n    acc[result.trend] = (acc[result.trend] || 0) + 1;\r\n    return acc;\r\n  }, {} as Record<string, number>);\r\n\r\n  // Top violaciones\r\n  const topViolations = budgetReport.budgetResults\r\n    .filter(result => result.violations > 0)\r\n    .sort((a, b) => b.violations - a.violations)\r\n    .slice(0, 5)\r\n    .map(result => ({\r\n      budgetName: result.budget.name,\r\n      violations: result.violations,\r\n      averageValue: result.averageValue,\r\n      target: result.budget.target,\r\n      unit: result.budget.unit\r\n    }));\r\n\r\n  return {\r\n    summary: budgetReport.summary,\r\n    period: budgetReport.period,\r\n    distribution: {\r\n      byStatus: budgetsByStatus,\r\n      byTrend: budgetsByTrend\r\n    },\r\n    topViolations,\r\n    recommendations: budgetReport.recommendations,\r\n    activeBudgets: activeBudgets.length\r\n  };\r\n}\r\n\r\n/**\r\n * Obtiene estad\xEDsticas de streaming\r\n */\r\nasync function getStreamingStats() {\r\n  const streamingStats = realTimeMetricsStreaming.getStats();\r\n  const activeClients = realTimeMetricsStreaming.getActiveClients();\r\n  const recentEvents = realTimeMetricsStreaming.getRecentEvents(20);\r\n\r\n  // Agrupar clientes por tipo de suscripci\xF3n\r\n  const clientsBySubscription = activeClients.reduce((acc, client) => {\r\n    client.subscriptions.forEach(sub => {\r\n      acc[sub] = (acc[sub] || 0) + 1;\r\n    });\r\n    return acc;\r\n  }, {} as Record<string, number>);\r\n\r\n  // Eventos recientes por tipo\r\n  const eventsByType = recentEvents.reduce((acc, event) => {\r\n    acc[event.type] = (acc[event.type] || 0) + 1;\r\n    return acc;\r\n  }, {} as Record<string, number>);\r\n\r\n  return {\r\n    overview: streamingStats,\r\n    clients: {\r\n      active: activeClients.length,\r\n      bySubscription: clientsBySubscription,\r\n      details: activeClients.map(client => ({\r\n        id: client.id,\r\n        subscriptions: client.subscriptions.length,\r\n        lastActivity: client.lastActivity,\r\n        queueSize: client.queueSize\r\n      }))\r\n    },\r\n    events: {\r\n      recent: recentEvents.length,\r\n      byType: eventsByType,\r\n      latest: recentEvents.slice(0, 5).map(event => ({\r\n        type: event.type,\r\n        timestamp: event.timestamp,\r\n        id: event.id\r\n      }))\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Obtiene todas las estad\xEDsticas\r\n */\r\nasync function getAllStats(periodHours: number) {\r\n  const [performance, alerts, budgets, streaming] = await Promise.all([\r\n    getPerformanceStats(periodHours),\r\n    getAlertStats(periodHours),\r\n    getBudgetStats(periodHours),\r\n    getStreamingStats()\r\n  ]);\r\n\r\n  // Calcular score general del sistema\r\n  const systemScore = calculateSystemScore(performance, alerts, budgets);\r\n\r\n  return {\r\n    systemScore,\r\n    performance,\r\n    alerts,\r\n    budgets,\r\n    streaming,\r\n    summary: {\r\n      healthy: systemScore >= 80,\r\n      activeAlerts: alerts.summary.active,\r\n      budgetViolations: budgets.topViolations.length,\r\n      streamingClients: streaming.clients.active,\r\n      lastUpdate: Date.now()\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Calcula tendencia de una serie de valores\r\n */\r\nfunction calculateTrend(values: number[]): number {\r\n  if (values.length < 2) {return 0;}\r\n\r\n  const half = Math.floor(values.length / 2);\r\n  const firstHalf = values.slice(0, half);\r\n  const secondHalf = values.slice(half);\r\n\r\n  const firstAvg = firstHalf.reduce((sum, val) => sum + val, 0) / firstHalf.length;\r\n  const secondAvg = secondHalf.reduce((sum, val) => sum + val, 0) / secondHalf.length;\r\n\r\n  return firstAvg === 0 ? 0 : ((secondAvg - firstAvg) / firstAvg) * 100;\r\n}\r\n\r\n/**\r\n * Calcula score general del sistema\r\n */\r\nfunction calculateSystemScore(performance: any, alerts: any, budgets: any): number {\r\n  let score = 100;\r\n\r\n  // Penalizar por alertas activas\r\n  score -= alerts.summary.active * 5;\r\n  score -= alerts.summary.acknowledged * 2;\r\n\r\n  // Penalizar por presupuestos fallidos\r\n  score -= budgets.summary.failingBudgets * 10;\r\n  score -= budgets.summary.warningBudgets * 5;\r\n\r\n  // Penalizar por performance pobre\r\n  if (performance.current) {\r\n    if (performance.current.errorRate > 0.05) {score -= 15;} // >5% error rate\r\n    if (performance.current.responseTime > 2000) {score -= 10;} // >2s response time\r\n    if (performance.current.memoryUsage > 0.9) {score -= 10;} // >90% memory\r\n    if (performance.current.cpuUsage > 0.8) {score -= 10;} // >80% CPU\r\n  }\r\n\r\n  return Math.max(0, Math.min(100, Math.round(score)));\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "runtime", "request", "searchParams", "URL", "url", "type", "get", "period", "parseInt", "logger", "info", "LogCategory", "API", "stats", "getPerformanceStats", "getAlertStats", "getBudgetStats", "getStreamingStats", "getAllStats", "NextResponse", "json", "success", "data", "timestamp", "Date", "now", "undefined", "error", "details", "Error", "message", "status", "periodHours", "currentMetrics", "realTimePerformanceMonitor", "getCurrentMetrics", "latestMetrics", "realTime", "length", "periodStart", "periodMetrics", "filter", "m", "periodWebVitals", "webVitals", "v", "periodApiMetrics", "apiMetrics", "a", "avgResponseTime", "reduce", "sum", "responseTime", "avgErrorRate", "errorRate", "avgThroughput", "throughput", "avgLCP", "lcp", "avgFID", "fid", "avgCLS", "cls", "current", "averages", "Math", "round", "Number", "toFixed", "coreWebVitals", "counts", "totalMetrics", "webVitalsRecords", "apiCalls", "trends", "calculateTrend", "map", "alertStats", "advancedAlertingEngine", "activeAlerts", "getActiveAlerts", "periodAlerts", "alert", "alertsBySeverity", "acc", "severity", "alertsByType", "recentAlerts", "sort", "b", "slice", "id", "title", "summary", "total", "bySeverity", "byType", "recent", "escalation", "escalatedAlerts", "escalationLevel", "averageEscalationLevel", "budgetReport", "performanceBudgetsMonitor", "generateReport", "activeBudgets", "getActiveBudgets", "budgetsByStatus", "budgetResults", "result", "budgetsByTrend", "trend", "topViolations", "violations", "budgetName", "budget", "name", "averageValue", "target", "unit", "distribution", "byStatus", "byTrend", "recommendations", "streamingStats", "realTimeMetricsStreaming", "getStats", "activeClients", "getActiveClients", "recentEvents", "getRecentEvents", "clientsBySubscription", "client", "subscriptions", "forEach", "sub", "eventsByType", "event", "overview", "clients", "active", "bySubscription", "lastActivity", "queueSize", "events", "latest", "performance", "alerts", "budgets", "streaming", "Promise", "all", "systemScore", "calculateSystemScore", "healthy", "budgetViolations", "streamingClients", "lastUpdate", "values", "half", "floor", "firstHalf", "secondHalf", "firstAvg", "val", "secondAvg", "score", "acknowledged", "failingBudgets", "warningBudgets", "memoryUsage", "cpuUsage", "max", "min"],
      mappings: "AAAA,qCAAqC;;;;;;;;;;;;QAiBfA;eAAAA;;QAhBTC;eAAAA;;;wBAM6B;wBACN;4CACO;wCACJ;2CACG;0CACD;AAXlC,MAAMA,UAAU;AAgBhB,eAAeD,IAAIE,OAAoB;IAC5C,IAAI;QACF,MAAM,EAAEC,YAAY,EAAE,GAAG,IAAIC,IAAIF,QAAQG,GAAG;QAC5C,MAAMC,OAAOH,aAAaI,GAAG,CAAC,WAAW;QACzC,MAAMC,SAASC,SAASN,aAAaI,GAAG,CAAC,aAAa,OAAO,QAAQ;QAErEG,cAAM,CAACC,IAAI,CAACC,mBAAW,CAACC,GAAG,EAAE,8BAA8B;YACzDP;YACAE;QACF;QAEA,IAAIM,QAAa,CAAC;QAElB,OAAQR;YACN,KAAK;gBACHQ,QAAQ,MAAMC,oBAAoBP;gBAClC;YAEF,KAAK;gBACHM,QAAQ,MAAME,cAAcR;gBAC5B;YAEF,KAAK;gBACHM,QAAQ,MAAMG,eAAeT;gBAC7B;YAEF,KAAK;gBACHM,QAAQ,MAAMI;gBACd;YAEF,KAAK;YACL;gBACEJ,QAAQ,MAAMK,YAAYX;gBAC1B;QACJ;QAEA,OAAOY,oBAAY,CAACC,IAAI,CAAC;YACvBC,SAAS;YACTC,MAAMT;YACNU,WAAWC,KAAKC,GAAG;YACnBlB,QAAQF,SAAS,cAAcqB,YAAYnB;QAC7C;IAEF,EAAE,OAAOoB,OAAO;QACdlB,cAAM,CAACkB,KAAK,CAAChB,mBAAW,CAACC,GAAG,EAAE,kCAAkCe;QAEhE,OAAOR,oBAAY,CAACC,IAAI,CAAC;YACvBC,SAAS;YACTM,OAAO;YACPC,SAASD,iBAAiBE,QAAQF,MAAMG,OAAO,GAAG;QACpD,GAAG;YAAEC,QAAQ;QAAI;IACnB;AACF;AAEA;;CAEC,GACD,eAAejB,oBAAoBkB,WAAmB;IACpD,MAAMC,iBAAiBC,sDAA0B,CAACC,iBAAiB;IACnE,MAAMC,gBAAgBH,eAAeI,QAAQ,CAACJ,eAAeI,QAAQ,CAACC,MAAM,GAAG,EAAE;IAEjF,iCAAiC;IACjC,MAAMb,MAAMD,KAAKC,GAAG;IACpB,MAAMc,cAAcd,MAAOO,cAAc,KAAK,KAAK;IAEnD,MAAMQ,gBAAgBP,eAAeI,QAAQ,CAACI,MAAM,CAACC,CAAAA,IAAKA,EAAEnB,SAAS,IAAIgB;IACzE,MAAMI,kBAAkBV,eAAeW,SAAS,CAACH,MAAM,CAACI,CAAAA,IAAKA,EAAEtB,SAAS,IAAIgB;IAC5E,MAAMO,mBAAmBb,eAAec,UAAU,CAACN,MAAM,CAACO,CAAAA,IAAKA,EAAEzB,SAAS,IAAIgB;IAE9E,MAAMU,kBAAkBT,cAAcF,MAAM,GAAG,IAC3CE,cAAcU,MAAM,CAAC,CAACC,KAAKT,IAAMS,MAAMT,EAAEU,YAAY,EAAE,KAAKZ,cAAcF,MAAM,GAChF;IAEJ,MAAMe,eAAeb,cAAcF,MAAM,GAAG,IACxCE,cAAcU,MAAM,CAAC,CAACC,KAAKT,IAAMS,MAAMT,EAAEY,SAAS,EAAE,KAAKd,cAAcF,MAAM,GAC7E;IAEJ,MAAMiB,gBAAgBf,cAAcF,MAAM,GAAG,IACzCE,cAAcU,MAAM,CAAC,CAACC,KAAKT,IAAMS,MAAMT,EAAEc,UAAU,EAAE,KAAKhB,cAAcF,MAAM,GAC9E;IAEJ,4BAA4B;IAC5B,MAAMmB,SAASd,gBAAgBL,MAAM,GAAG,IACpCK,gBAAgBO,MAAM,CAAC,CAACC,KAAKN,IAAMM,MAAMN,EAAEa,GAAG,EAAE,KAAKf,gBAAgBL,MAAM,GAC3E;IAEJ,MAAMqB,SAAShB,gBAAgBL,MAAM,GAAG,IACpCK,gBAAgBO,MAAM,CAAC,CAACC,KAAKN,IAAMM,MAAMN,EAAEe,GAAG,EAAE,KAAKjB,gBAAgBL,MAAM,GAC3E;IAEJ,MAAMuB,SAASlB,gBAAgBL,MAAM,GAAG,IACpCK,gBAAgBO,MAAM,CAAC,CAACC,KAAKN,IAAMM,MAAMN,EAAEiB,GAAG,EAAE,KAAKnB,gBAAgBL,MAAM,GAC3E;IAEJ,OAAO;QACLyB,SAAS3B,iBAAiB;QAC1B7B,QAAQ;YACNyD,UAAU;gBACRZ,cAAca,KAAKC,KAAK,CAACjB;gBACzBK,WAAWa,OAAO,AAACd,CAAAA,eAAe,GAAE,EAAGe,OAAO,CAAC;gBAC/CZ,YAAYW,OAAOZ,cAAca,OAAO,CAAC;gBACzCC,eAAe;oBACbX,KAAKO,KAAKC,KAAK,CAACT;oBAChBG,KAAKK,KAAKC,KAAK,CAACP;oBAChBG,KAAKK,OAAON,OAAOO,OAAO,CAAC;gBAC7B;YACF;YACAE,QAAQ;gBACNC,cAAc/B,cAAcF,MAAM;gBAClCkC,kBAAkB7B,gBAAgBL,MAAM;gBACxCmC,UAAU3B,iBAAiBR,MAAM;YACnC;QACF;QACAoC,QAAQ;YACNtB,cAAcuB,eAAenC,cAAcoC,GAAG,CAAClC,CAAAA,IAAKA,EAAEU,YAAY;YAClEE,WAAWqB,eAAenC,cAAcoC,GAAG,CAAClC,CAAAA,IAAKA,EAAEY,SAAS;YAC5DE,YAAYmB,eAAenC,cAAcoC,GAAG,CAAClC,CAAAA,IAAKA,EAAEc,UAAU;QAChE;IACF;AACF;AAEA;;CAEC,GACD,eAAezC,cAAciB,WAAmB;IAC9C,MAAM6C,aAAaC,8CAAsB,CAAC/D,aAAa;IACvD,MAAMgE,eAAeD,8CAAsB,CAACE,eAAe;IAE3D,8BAA8B;IAC9B,MAAMvD,MAAMD,KAAKC,GAAG;IACpB,MAAMc,cAAcd,MAAOO,cAAc,KAAK,KAAK;IACnD,MAAMiD,eAAeF,aAAatC,MAAM,CAACyC,CAAAA,QAASA,MAAM3D,SAAS,IAAIgB;IAErE,wBAAwB;IACxB,MAAM4C,mBAAmBF,aAAa/B,MAAM,CAAC,CAACkC,KAAKF;QACjDE,GAAG,CAACF,MAAMG,QAAQ,CAAC,GAAG,AAACD,CAAAA,GAAG,CAACF,MAAMG,QAAQ,CAAC,IAAI,CAAA,IAAK;QACnD,OAAOD;IACT,GAAG,CAAC;IAEJ,mBAAmB;IACnB,MAAME,eAAeL,aAAa/B,MAAM,CAAC,CAACkC,KAAKF;QAC7CE,GAAG,CAACF,MAAM7E,IAAI,CAAC,GAAG,AAAC+E,CAAAA,GAAG,CAACF,MAAM7E,IAAI,CAAC,IAAI,CAAA,IAAK;QAC3C,OAAO+E;IACT,GAAG,CAAC;IAEJ,wBAAwB;IACxB,MAAMG,eAAeR,aAClBS,IAAI,CAAC,CAACxC,GAAGyC,IAAMA,EAAElE,SAAS,GAAGyB,EAAEzB,SAAS,EACxCmE,KAAK,CAAC,GAAG,IACTd,GAAG,CAACM,CAAAA,QAAU,CAAA;YACbS,IAAIT,MAAMS,EAAE;YACZtF,MAAM6E,MAAM7E,IAAI;YAChBgF,UAAUH,MAAMG,QAAQ;YACxBO,OAAOV,MAAMU,KAAK;YAClBrE,WAAW2D,MAAM3D,SAAS;YAC1BQ,QAAQmD,MAAMnD,MAAM;QACtB,CAAA;IAEF,OAAO;QACL8D,SAAShB;QACTtE,QAAQ;YACNuF,OAAOb,aAAa3C,MAAM;YAC1ByD,YAAYZ;YACZa,QAAQV;QACV;QACAW,QAAQV;QACRW,YAAY;YACVC,iBAAiBpB,aAAatC,MAAM,CAACO,CAAAA,IAAKA,EAAEoD,eAAe,GAAG,GAAG9D,MAAM;YACvE+D,wBAAwBtB,aAAazC,MAAM,GAAG,IAC1CyC,aAAa7B,MAAM,CAAC,CAACC,KAAKH,IAAMG,MAAMH,EAAEoD,eAAe,EAAE,KAAKrB,aAAazC,MAAM,GACjF;QACN;IACF;AACF;AAEA;;CAEC,GACD,eAAetB,eAAegB,WAAmB;IAC/C,MAAMsE,eAAeC,oDAAyB,CAACC,cAAc,CAACxE;IAC9D,MAAMyE,gBAAgBF,oDAAyB,CAACG,gBAAgB;IAEhE,gCAAgC;IAChC,MAAMC,kBAAkBL,aAAaM,aAAa,CAAC1D,MAAM,CAAC,CAACkC,KAAKyB;QAC9DzB,GAAG,CAACyB,OAAO9E,MAAM,CAAC,GAAG,AAACqD,CAAAA,GAAG,CAACyB,OAAO9E,MAAM,CAAC,IAAI,CAAA,IAAK;QACjD,OAAOqD;IACT,GAAG,CAAC;IAEJ,MAAM0B,iBAAiBR,aAAaM,aAAa,CAAC1D,MAAM,CAAC,CAACkC,KAAKyB;QAC7DzB,GAAG,CAACyB,OAAOE,KAAK,CAAC,GAAG,AAAC3B,CAAAA,GAAG,CAACyB,OAAOE,KAAK,CAAC,IAAI,CAAA,IAAK;QAC/C,OAAO3B;IACT,GAAG,CAAC;IAEJ,kBAAkB;IAClB,MAAM4B,gBAAgBV,aAAaM,aAAa,CAC7CnE,MAAM,CAACoE,CAAAA,SAAUA,OAAOI,UAAU,GAAG,GACrCzB,IAAI,CAAC,CAACxC,GAAGyC,IAAMA,EAAEwB,UAAU,GAAGjE,EAAEiE,UAAU,EAC1CvB,KAAK,CAAC,GAAG,GACTd,GAAG,CAACiC,CAAAA,SAAW,CAAA;YACdK,YAAYL,OAAOM,MAAM,CAACC,IAAI;YAC9BH,YAAYJ,OAAOI,UAAU;YAC7BI,cAAcR,OAAOQ,YAAY;YACjCC,QAAQT,OAAOM,MAAM,CAACG,MAAM;YAC5BC,MAAMV,OAAOM,MAAM,CAACI,IAAI;QAC1B,CAAA;IAEF,OAAO;QACL1B,SAASS,aAAaT,OAAO;QAC7BtF,QAAQ+F,aAAa/F,MAAM;QAC3BiH,cAAc;YACZC,UAAUd;YACVe,SAASZ;QACX;QACAE;QACAW,iBAAiBrB,aAAaqB,eAAe;QAC7ClB,eAAeA,cAAcnE,MAAM;IACrC;AACF;AAEA;;CAEC,GACD,eAAerB;IACb,MAAM2G,iBAAiBC,kDAAwB,CAACC,QAAQ;IACxD,MAAMC,gBAAgBF,kDAAwB,CAACG,gBAAgB;IAC/D,MAAMC,eAAeJ,kDAAwB,CAACK,eAAe,CAAC;IAE9D,2CAA2C;IAC3C,MAAMC,wBAAwBJ,cAAc7E,MAAM,CAAC,CAACkC,KAAKgD;QACvDA,OAAOC,aAAa,CAACC,OAAO,CAACC,CAAAA;YAC3BnD,GAAG,CAACmD,IAAI,GAAG,AAACnD,CAAAA,GAAG,CAACmD,IAAI,IAAI,CAAA,IAAK;QAC/B;QACA,OAAOnD;IACT,GAAG,CAAC;IAEJ,6BAA6B;IAC7B,MAAMoD,eAAeP,aAAa/E,MAAM,CAAC,CAACkC,KAAKqD;QAC7CrD,GAAG,CAACqD,MAAMpI,IAAI,CAAC,GAAG,AAAC+E,CAAAA,GAAG,CAACqD,MAAMpI,IAAI,CAAC,IAAI,CAAA,IAAK;QAC3C,OAAO+E;IACT,GAAG,CAAC;IAEJ,OAAO;QACLsD,UAAUd;QACVe,SAAS;YACPC,QAAQb,cAAczF,MAAM;YAC5BuG,gBAAgBV;YAChBvG,SAASmG,cAAcnD,GAAG,CAACwD,CAAAA,SAAW,CAAA;oBACpCzC,IAAIyC,OAAOzC,EAAE;oBACb0C,eAAeD,OAAOC,aAAa,CAAC/F,MAAM;oBAC1CwG,cAAcV,OAAOU,YAAY;oBACjCC,WAAWX,OAAOW,SAAS;gBAC7B,CAAA;QACF;QACAC,QAAQ;YACN/C,QAAQgC,aAAa3F,MAAM;YAC3B0D,QAAQwC;YACRS,QAAQhB,aAAavC,KAAK,CAAC,GAAG,GAAGd,GAAG,CAAC6D,CAAAA,QAAU,CAAA;oBAC7CpI,MAAMoI,MAAMpI,IAAI;oBAChBkB,WAAWkH,MAAMlH,SAAS;oBAC1BoE,IAAI8C,MAAM9C,EAAE;gBACd,CAAA;QACF;IACF;AACF;AAEA;;CAEC,GACD,eAAezE,YAAYc,WAAmB;IAC5C,MAAM,CAACkH,aAAaC,QAAQC,SAASC,UAAU,GAAG,MAAMC,QAAQC,GAAG,CAAC;QAClEzI,oBAAoBkB;QACpBjB,cAAciB;QACdhB,eAAegB;QACff;KACD;IAED,qCAAqC;IACrC,MAAMuI,cAAcC,qBAAqBP,aAAaC,QAAQC;IAE9D,OAAO;QACLI;QACAN;QACAC;QACAC;QACAC;QACAxD,SAAS;YACP6D,SAASF,eAAe;YACxBzE,cAAcoE,OAAOtD,OAAO,CAAC+C,MAAM;YACnCe,kBAAkBP,QAAQpC,aAAa,CAAC1E,MAAM;YAC9CsH,kBAAkBP,UAAUV,OAAO,CAACC,MAAM;YAC1CiB,YAAYrI,KAAKC,GAAG;QACtB;IACF;AACF;AAEA;;CAEC,GACD,SAASkD,eAAemF,MAAgB;IACtC,IAAIA,OAAOxH,MAAM,GAAG,GAAG;QAAC,OAAO;IAAE;IAEjC,MAAMyH,OAAO9F,KAAK+F,KAAK,CAACF,OAAOxH,MAAM,GAAG;IACxC,MAAM2H,YAAYH,OAAOpE,KAAK,CAAC,GAAGqE;IAClC,MAAMG,aAAaJ,OAAOpE,KAAK,CAACqE;IAEhC,MAAMI,WAAWF,UAAU/G,MAAM,CAAC,CAACC,KAAKiH,MAAQjH,MAAMiH,KAAK,KAAKH,UAAU3H,MAAM;IAChF,MAAM+H,YAAYH,WAAWhH,MAAM,CAAC,CAACC,KAAKiH,MAAQjH,MAAMiH,KAAK,KAAKF,WAAW5H,MAAM;IAEnF,OAAO6H,aAAa,IAAI,IAAI,AAAEE,CAAAA,YAAYF,QAAO,IAAKA,WAAY;AACpE;AAEA;;CAEC,GACD,SAASV,qBAAqBP,WAAgB,EAAEC,MAAW,EAAEC,OAAY;IACvE,IAAIkB,QAAQ;IAEZ,gCAAgC;IAChCA,SAASnB,OAAOtD,OAAO,CAAC+C,MAAM,GAAG;IACjC0B,SAASnB,OAAOtD,OAAO,CAAC0E,YAAY,GAAG;IAEvC,sCAAsC;IACtCD,SAASlB,QAAQvD,OAAO,CAAC2E,cAAc,GAAG;IAC1CF,SAASlB,QAAQvD,OAAO,CAAC4E,cAAc,GAAG;IAE1C,kCAAkC;IAClC,IAAIvB,YAAYnF,OAAO,EAAE;QACvB,IAAImF,YAAYnF,OAAO,CAACT,SAAS,GAAG,MAAM;YAACgH,SAAS;QAAG,EAAE,iBAAiB;QAC1E,IAAIpB,YAAYnF,OAAO,CAACX,YAAY,GAAG,MAAM;YAACkH,SAAS;QAAG,EAAE,oBAAoB;QAChF,IAAIpB,YAAYnF,OAAO,CAAC2G,WAAW,GAAG,KAAK;YAACJ,SAAS;QAAG,EAAE,cAAc;QACxE,IAAIpB,YAAYnF,OAAO,CAAC4G,QAAQ,GAAG,KAAK;YAACL,SAAS;QAAG,EAAE,WAAW;IACpE;IAEA,OAAOrG,KAAK2G,GAAG,CAAC,GAAG3G,KAAK4G,GAAG,CAAC,KAAK5G,KAAKC,KAAK,CAACoG;AAC9C"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c1ac41498d1883eefb4d7978a767f5ef030b463f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1h87t3rrju = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1h87t3rrju();
cov_1h87t3rrju().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1h87t3rrju().f[0]++;
  cov_1h87t3rrju().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1h87t3rrju().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1h87t3rrju().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_1h87t3rrju().f[1]++;
    cov_1h87t3rrju().s[4]++;
    return GET;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_1h87t3rrju().f[2]++;
    cov_1h87t3rrju().s[5]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_1h87t3rrju().s[6]++, require("next/server"));
const _logger =
/* istanbul ignore next */
(cov_1h87t3rrju().s[7]++, require("../../../../lib/enterprise/logger"));
const _realtimeperformancemonitor =
/* istanbul ignore next */
(cov_1h87t3rrju().s[8]++, require("../../../../lib/monitoring/real-time-performance-monitor"));
const _advancedalertingengine =
/* istanbul ignore next */
(cov_1h87t3rrju().s[9]++, require("../../../../lib/monitoring/advanced-alerting-engine"));
const _performancebudgetsmonitor =
/* istanbul ignore next */
(cov_1h87t3rrju().s[10]++, require("../../../../lib/monitoring/performance-budgets-monitor"));
const _realtimemetricsstreaming =
/* istanbul ignore next */
(cov_1h87t3rrju().s[11]++, require("../../../../lib/monitoring/real-time-metrics-streaming"));
const runtime =
/* istanbul ignore next */
(cov_1h87t3rrju().s[12]++, 'nodejs');
async function GET(request) {
  /* istanbul ignore next */
  cov_1h87t3rrju().f[3]++;
  cov_1h87t3rrju().s[13]++;
  try {
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_1h87t3rrju().s[14]++, new URL(request.url));
    const type =
    /* istanbul ignore next */
    (cov_1h87t3rrju().s[15]++,
    /* istanbul ignore next */
    (cov_1h87t3rrju().b[0][0]++, searchParams.get('type')) ||
    /* istanbul ignore next */
    (cov_1h87t3rrju().b[0][1]++, 'all'));
    const period =
    /* istanbul ignore next */
    (cov_1h87t3rrju().s[16]++, parseInt(
    /* istanbul ignore next */
    (cov_1h87t3rrju().b[1][0]++, searchParams.get('period')) ||
    /* istanbul ignore next */
    (cov_1h87t3rrju().b[1][1]++, '24'))); // horas
    /* istanbul ignore next */
    cov_1h87t3rrju().s[17]++;
    _logger.logger.info(_logger.LogCategory.API, 'Monitoring stats requested', {
      type,
      period
    });
    let stats =
    /* istanbul ignore next */
    (cov_1h87t3rrju().s[18]++, {});
    /* istanbul ignore next */
    cov_1h87t3rrju().s[19]++;
    switch (type) {
      case 'performance':
        /* istanbul ignore next */
        cov_1h87t3rrju().b[2][0]++;
        cov_1h87t3rrju().s[20]++;
        stats = await getPerformanceStats(period);
        /* istanbul ignore next */
        cov_1h87t3rrju().s[21]++;
        break;
      case 'alerts':
        /* istanbul ignore next */
        cov_1h87t3rrju().b[2][1]++;
        cov_1h87t3rrju().s[22]++;
        stats = await getAlertStats(period);
        /* istanbul ignore next */
        cov_1h87t3rrju().s[23]++;
        break;
      case 'budgets':
        /* istanbul ignore next */
        cov_1h87t3rrju().b[2][2]++;
        cov_1h87t3rrju().s[24]++;
        stats = await getBudgetStats(period);
        /* istanbul ignore next */
        cov_1h87t3rrju().s[25]++;
        break;
      case 'streaming':
        /* istanbul ignore next */
        cov_1h87t3rrju().b[2][3]++;
        cov_1h87t3rrju().s[26]++;
        stats = await getStreamingStats();
        /* istanbul ignore next */
        cov_1h87t3rrju().s[27]++;
        break;
      case 'all':
        /* istanbul ignore next */
        cov_1h87t3rrju().b[2][4]++;
      default:
        /* istanbul ignore next */
        cov_1h87t3rrju().b[2][5]++;
        cov_1h87t3rrju().s[28]++;
        stats = await getAllStats(period);
        /* istanbul ignore next */
        cov_1h87t3rrju().s[29]++;
        break;
    }
    /* istanbul ignore next */
    cov_1h87t3rrju().s[30]++;
    return _server.NextResponse.json({
      success: true,
      data: stats,
      timestamp: Date.now(),
      period: type === 'streaming' ?
      /* istanbul ignore next */
      (cov_1h87t3rrju().b[3][0]++, undefined) :
      /* istanbul ignore next */
      (cov_1h87t3rrju().b[3][1]++, period)
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1h87t3rrju().s[31]++;
    _logger.logger.error(_logger.LogCategory.API, 'Error getting monitoring stats', error);
    /* istanbul ignore next */
    cov_1h87t3rrju().s[32]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Error retrieving monitoring statistics',
      details: error instanceof Error ?
      /* istanbul ignore next */
      (cov_1h87t3rrju().b[4][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1h87t3rrju().b[4][1]++, 'Unknown error')
    }, {
      status: 500
    });
  }
}
/**
 * Obtiene estadÃ­sticas de performance
 */
async function getPerformanceStats(periodHours) {
  /* istanbul ignore next */
  cov_1h87t3rrju().f[4]++;
  const currentMetrics =
  /* istanbul ignore next */
  (cov_1h87t3rrju().s[33]++, _realtimeperformancemonitor.realTimePerformanceMonitor.getCurrentMetrics());
  const latestMetrics =
  /* istanbul ignore next */
  (cov_1h87t3rrju().s[34]++, currentMetrics.realTime[currentMetrics.realTime.length - 1]);
  // Calcular promedios del perÃ­odo
  const now =
  /* istanbul ignore next */
  (cov_1h87t3rrju().s[35]++, Date.now());
  const periodStart =
  /* istanbul ignore next */
  (cov_1h87t3rrju().s[36]++, now - periodHours * 60 * 60 * 1000);
  const periodMetrics =
  /* istanbul ignore next */
  (cov_1h87t3rrju().s[37]++, currentMetrics.realTime.filter(m => {
    /* istanbul ignore next */
    cov_1h87t3rrju().f[5]++;
    cov_1h87t3rrju().s[38]++;
    return m.timestamp >= periodStart;
  }));
  const periodWebVitals =
  /* istanbul ignore next */
  (cov_1h87t3rrju().s[39]++, currentMetrics.webVitals.filter(v => {
    /* istanbul ignore next */
    cov_1h87t3rrju().f[6]++;
    cov_1h87t3rrju().s[40]++;
    return v.timestamp >= periodStart;
  }));
  const periodApiMetrics =
  /* istanbul ignore next */
  (cov_1h87t3rrju().s[41]++, currentMetrics.apiMetrics.filter(a => {
    /* istanbul ignore next */
    cov_1h87t3rrju().f[7]++;
    cov_1h87t3rrju().s[42]++;
    return a.timestamp >= periodStart;
  }));
  const avgResponseTime =
  /* istanbul ignore next */
  (cov_1h87t3rrju().s[43]++, periodMetrics.length > 0 ?
  /* istanbul ignore next */
  (cov_1h87t3rrju().b[5][0]++, periodMetrics.reduce((sum, m) => {
    /* istanbul ignore next */
    cov_1h87t3rrju().f[8]++;
    cov_1h87t3rrju().s[44]++;
    return sum + m.responseTime;
  }, 0) / periodMetrics.length) :
  /* istanbul ignore next */
  (cov_1h87t3rrju().b[5][1]++, 0));
  const avgErrorRate =
  /* istanbul ignore next */
  (cov_1h87t3rrju().s[45]++, periodMetrics.length > 0 ?
  /* istanbul ignore next */
  (cov_1h87t3rrju().b[6][0]++, periodMetrics.reduce((sum, m) => {
    /* istanbul ignore next */
    cov_1h87t3rrju().f[9]++;
    cov_1h87t3rrju().s[46]++;
    return sum + m.errorRate;
  }, 0) / periodMetrics.length) :
  /* istanbul ignore next */
  (cov_1h87t3rrju().b[6][1]++, 0));
  const avgThroughput =
  /* istanbul ignore next */
  (cov_1h87t3rrju().s[47]++, periodMetrics.length > 0 ?
  /* istanbul ignore next */
  (cov_1h87t3rrju().b[7][0]++, periodMetrics.reduce((sum, m) => {
    /* istanbul ignore next */
    cov_1h87t3rrju().f[10]++;
    cov_1h87t3rrju().s[48]++;
    return sum + m.throughput;
  }, 0) / periodMetrics.length) :
  /* istanbul ignore next */
  (cov_1h87t3rrju().b[7][1]++, 0));
  // Core Web Vitals promedios
  const avgLCP =
  /* istanbul ignore next */
  (cov_1h87t3rrju().s[49]++, periodWebVitals.length > 0 ?
  /* istanbul ignore next */
  (cov_1h87t3rrju().b[8][0]++, periodWebVitals.reduce((sum, v) => {
    /* istanbul ignore next */
    cov_1h87t3rrju().f[11]++;
    cov_1h87t3rrju().s[50]++;
    return sum + v.lcp;
  }, 0) / periodWebVitals.length) :
  /* istanbul ignore next */
  (cov_1h87t3rrju().b[8][1]++, 0));
  const avgFID =
  /* istanbul ignore next */
  (cov_1h87t3rrju().s[51]++, periodWebVitals.length > 0 ?
  /* istanbul ignore next */
  (cov_1h87t3rrju().b[9][0]++, periodWebVitals.reduce((sum, v) => {
    /* istanbul ignore next */
    cov_1h87t3rrju().f[12]++;
    cov_1h87t3rrju().s[52]++;
    return sum + v.fid;
  }, 0) / periodWebVitals.length) :
  /* istanbul ignore next */
  (cov_1h87t3rrju().b[9][1]++, 0));
  const avgCLS =
  /* istanbul ignore next */
  (cov_1h87t3rrju().s[53]++, periodWebVitals.length > 0 ?
  /* istanbul ignore next */
  (cov_1h87t3rrju().b[10][0]++, periodWebVitals.reduce((sum, v) => {
    /* istanbul ignore next */
    cov_1h87t3rrju().f[13]++;
    cov_1h87t3rrju().s[54]++;
    return sum + v.cls;
  }, 0) / periodWebVitals.length) :
  /* istanbul ignore next */
  (cov_1h87t3rrju().b[10][1]++, 0));
  /* istanbul ignore next */
  cov_1h87t3rrju().s[55]++;
  return {
    current:
    /* istanbul ignore next */
    (cov_1h87t3rrju().b[11][0]++, latestMetrics) ||
    /* istanbul ignore next */
    (cov_1h87t3rrju().b[11][1]++, null),
    period: {
      averages: {
        responseTime: Math.round(avgResponseTime),
        errorRate: Number((avgErrorRate * 100).toFixed(2)),
        throughput: Number(avgThroughput.toFixed(2)),
        coreWebVitals: {
          lcp: Math.round(avgLCP),
          fid: Math.round(avgFID),
          cls: Number(avgCLS.toFixed(3))
        }
      },
      counts: {
        totalMetrics: periodMetrics.length,
        webVitalsRecords: periodWebVitals.length,
        apiCalls: periodApiMetrics.length
      }
    },
    trends: {
      responseTime: calculateTrend(periodMetrics.map(m => {
        /* istanbul ignore next */
        cov_1h87t3rrju().f[14]++;
        cov_1h87t3rrju().s[56]++;
        return m.responseTime;
      })),
      errorRate: calculateTrend(periodMetrics.map(m => {
        /* istanbul ignore next */
        cov_1h87t3rrju().f[15]++;
        cov_1h87t3rrju().s[57]++;
        return m.errorRate;
      })),
      throughput: calculateTrend(periodMetrics.map(m => {
        /* istanbul ignore next */
        cov_1h87t3rrju().f[16]++;
        cov_1h87t3rrju().s[58]++;
        return m.throughput;
      }))
    }
  };
}
/**
 * Obtiene estadÃ­sticas de alertas
 */
async function getAlertStats(periodHours) {
  /* istanbul ignore next */
  cov_1h87t3rrju().f[17]++;
  const alertStats =
  /* istanbul ignore next */
  (cov_1h87t3rrju().s[59]++, _advancedalertingengine.advancedAlertingEngine.getAlertStats());
  const activeAlerts =
  /* istanbul ignore next */
  (cov_1h87t3rrju().s[60]++, _advancedalertingengine.advancedAlertingEngine.getActiveAlerts());
  // Filtrar alertas del perÃ­odo
  const now =
  /* istanbul ignore next */
  (cov_1h87t3rrju().s[61]++, Date.now());
  const periodStart =
  /* istanbul ignore next */
  (cov_1h87t3rrju().s[62]++, now - periodHours * 60 * 60 * 1000);
  const periodAlerts =
  /* istanbul ignore next */
  (cov_1h87t3rrju().s[63]++, activeAlerts.filter(alert => {
    /* istanbul ignore next */
    cov_1h87t3rrju().f[18]++;
    cov_1h87t3rrju().s[64]++;
    return alert.timestamp >= periodStart;
  }));
  // Agrupar por severidad
  const alertsBySeverity =
  /* istanbul ignore next */
  (cov_1h87t3rrju().s[65]++, periodAlerts.reduce((acc, alert) => {
    /* istanbul ignore next */
    cov_1h87t3rrju().f[19]++;
    cov_1h87t3rrju().s[66]++;
    acc[alert.severity] = (
    /* istanbul ignore next */
    (cov_1h87t3rrju().b[12][0]++, acc[alert.severity]) ||
    /* istanbul ignore next */
    (cov_1h87t3rrju().b[12][1]++, 0)) + 1;
    /* istanbul ignore next */
    cov_1h87t3rrju().s[67]++;
    return acc;
  }, {}));
  // Agrupar por tipo
  const alertsByType =
  /* istanbul ignore next */
  (cov_1h87t3rrju().s[68]++, periodAlerts.reduce((acc, alert) => {
    /* istanbul ignore next */
    cov_1h87t3rrju().f[20]++;
    cov_1h87t3rrju().s[69]++;
    acc[alert.type] = (
    /* istanbul ignore next */
    (cov_1h87t3rrju().b[13][0]++, acc[alert.type]) ||
    /* istanbul ignore next */
    (cov_1h87t3rrju().b[13][1]++, 0)) + 1;
    /* istanbul ignore next */
    cov_1h87t3rrju().s[70]++;
    return acc;
  }, {}));
  // Alertas mÃ¡s recientes
  const recentAlerts =
  /* istanbul ignore next */
  (cov_1h87t3rrju().s[71]++, activeAlerts.sort((a, b) => {
    /* istanbul ignore next */
    cov_1h87t3rrju().f[21]++;
    cov_1h87t3rrju().s[72]++;
    return b.timestamp - a.timestamp;
  }).slice(0, 10).map(alert => {
    /* istanbul ignore next */
    cov_1h87t3rrju().f[22]++;
    cov_1h87t3rrju().s[73]++;
    return {
      id: alert.id,
      type: alert.type,
      severity: alert.severity,
      title: alert.title,
      timestamp: alert.timestamp,
      status: alert.status
    };
  }));
  /* istanbul ignore next */
  cov_1h87t3rrju().s[74]++;
  return {
    summary: alertStats,
    period: {
      total: periodAlerts.length,
      bySeverity: alertsBySeverity,
      byType: alertsByType
    },
    recent: recentAlerts,
    escalation: {
      escalatedAlerts: activeAlerts.filter(a => {
        /* istanbul ignore next */
        cov_1h87t3rrju().f[23]++;
        cov_1h87t3rrju().s[75]++;
        return a.escalationLevel > 0;
      }).length,
      averageEscalationLevel: activeAlerts.length > 0 ?
      /* istanbul ignore next */
      (cov_1h87t3rrju().b[14][0]++, activeAlerts.reduce((sum, a) => {
        /* istanbul ignore next */
        cov_1h87t3rrju().f[24]++;
        cov_1h87t3rrju().s[76]++;
        return sum + a.escalationLevel;
      }, 0) / activeAlerts.length) :
      /* istanbul ignore next */
      (cov_1h87t3rrju().b[14][1]++, 0)
    }
  };
}
/**
 * Obtiene estadÃ­sticas de presupuestos
 */
async function getBudgetStats(periodHours) {
  /* istanbul ignore next */
  cov_1h87t3rrju().f[25]++;
  const budgetReport =
  /* istanbul ignore next */
  (cov_1h87t3rrju().s[77]++, _performancebudgetsmonitor.performanceBudgetsMonitor.generateReport(periodHours));
  const activeBudgets =
  /* istanbul ignore next */
  (cov_1h87t3rrju().s[78]++, _performancebudgetsmonitor.performanceBudgetsMonitor.getActiveBudgets());
  // Calcular mÃ©tricas adicionales
  const budgetsByStatus =
  /* istanbul ignore next */
  (cov_1h87t3rrju().s[79]++, budgetReport.budgetResults.reduce((acc, result) => {
    /* istanbul ignore next */
    cov_1h87t3rrju().f[26]++;
    cov_1h87t3rrju().s[80]++;
    acc[result.status] = (
    /* istanbul ignore next */
    (cov_1h87t3rrju().b[15][0]++, acc[result.status]) ||
    /* istanbul ignore next */
    (cov_1h87t3rrju().b[15][1]++, 0)) + 1;
    /* istanbul ignore next */
    cov_1h87t3rrju().s[81]++;
    return acc;
  }, {}));
  const budgetsByTrend =
  /* istanbul ignore next */
  (cov_1h87t3rrju().s[82]++, budgetReport.budgetResults.reduce((acc, result) => {
    /* istanbul ignore next */
    cov_1h87t3rrju().f[27]++;
    cov_1h87t3rrju().s[83]++;
    acc[result.trend] = (
    /* istanbul ignore next */
    (cov_1h87t3rrju().b[16][0]++, acc[result.trend]) ||
    /* istanbul ignore next */
    (cov_1h87t3rrju().b[16][1]++, 0)) + 1;
    /* istanbul ignore next */
    cov_1h87t3rrju().s[84]++;
    return acc;
  }, {}));
  // Top violaciones
  const topViolations =
  /* istanbul ignore next */
  (cov_1h87t3rrju().s[85]++, budgetReport.budgetResults.filter(result => {
    /* istanbul ignore next */
    cov_1h87t3rrju().f[28]++;
    cov_1h87t3rrju().s[86]++;
    return result.violations > 0;
  }).sort((a, b) => {
    /* istanbul ignore next */
    cov_1h87t3rrju().f[29]++;
    cov_1h87t3rrju().s[87]++;
    return b.violations - a.violations;
  }).slice(0, 5).map(result => {
    /* istanbul ignore next */
    cov_1h87t3rrju().f[30]++;
    cov_1h87t3rrju().s[88]++;
    return {
      budgetName: result.budget.name,
      violations: result.violations,
      averageValue: result.averageValue,
      target: result.budget.target,
      unit: result.budget.unit
    };
  }));
  /* istanbul ignore next */
  cov_1h87t3rrju().s[89]++;
  return {
    summary: budgetReport.summary,
    period: budgetReport.period,
    distribution: {
      byStatus: budgetsByStatus,
      byTrend: budgetsByTrend
    },
    topViolations,
    recommendations: budgetReport.recommendations,
    activeBudgets: activeBudgets.length
  };
}
/**
 * Obtiene estadÃ­sticas de streaming
 */
async function getStreamingStats() {
  /* istanbul ignore next */
  cov_1h87t3rrju().f[31]++;
  const streamingStats =
  /* istanbul ignore next */
  (cov_1h87t3rrju().s[90]++, _realtimemetricsstreaming.realTimeMetricsStreaming.getStats());
  const activeClients =
  /* istanbul ignore next */
  (cov_1h87t3rrju().s[91]++, _realtimemetricsstreaming.realTimeMetricsStreaming.getActiveClients());
  const recentEvents =
  /* istanbul ignore next */
  (cov_1h87t3rrju().s[92]++, _realtimemetricsstreaming.realTimeMetricsStreaming.getRecentEvents(20));
  // Agrupar clientes por tipo de suscripciÃ³n
  const clientsBySubscription =
  /* istanbul ignore next */
  (cov_1h87t3rrju().s[93]++, activeClients.reduce((acc, client) => {
    /* istanbul ignore next */
    cov_1h87t3rrju().f[32]++;
    cov_1h87t3rrju().s[94]++;
    client.subscriptions.forEach(sub => {
      /* istanbul ignore next */
      cov_1h87t3rrju().f[33]++;
      cov_1h87t3rrju().s[95]++;
      acc[sub] = (
      /* istanbul ignore next */
      (cov_1h87t3rrju().b[17][0]++, acc[sub]) ||
      /* istanbul ignore next */
      (cov_1h87t3rrju().b[17][1]++, 0)) + 1;
    });
    /* istanbul ignore next */
    cov_1h87t3rrju().s[96]++;
    return acc;
  }, {}));
  // Eventos recientes por tipo
  const eventsByType =
  /* istanbul ignore next */
  (cov_1h87t3rrju().s[97]++, recentEvents.reduce((acc, event) => {
    /* istanbul ignore next */
    cov_1h87t3rrju().f[34]++;
    cov_1h87t3rrju().s[98]++;
    acc[event.type] = (
    /* istanbul ignore next */
    (cov_1h87t3rrju().b[18][0]++, acc[event.type]) ||
    /* istanbul ignore next */
    (cov_1h87t3rrju().b[18][1]++, 0)) + 1;
    /* istanbul ignore next */
    cov_1h87t3rrju().s[99]++;
    return acc;
  }, {}));
  /* istanbul ignore next */
  cov_1h87t3rrju().s[100]++;
  return {
    overview: streamingStats,
    clients: {
      active: activeClients.length,
      bySubscription: clientsBySubscription,
      details: activeClients.map(client => {
        /* istanbul ignore next */
        cov_1h87t3rrju().f[35]++;
        cov_1h87t3rrju().s[101]++;
        return {
          id: client.id,
          subscriptions: client.subscriptions.length,
          lastActivity: client.lastActivity,
          queueSize: client.queueSize
        };
      })
    },
    events: {
      recent: recentEvents.length,
      byType: eventsByType,
      latest: recentEvents.slice(0, 5).map(event => {
        /* istanbul ignore next */
        cov_1h87t3rrju().f[36]++;
        cov_1h87t3rrju().s[102]++;
        return {
          type: event.type,
          timestamp: event.timestamp,
          id: event.id
        };
      })
    }
  };
}
/**
 * Obtiene todas las estadÃ­sticas
 */
async function getAllStats(periodHours) {
  /* istanbul ignore next */
  cov_1h87t3rrju().f[37]++;
  const [performance, alerts, budgets, streaming] =
  /* istanbul ignore next */
  (cov_1h87t3rrju().s[103]++, await Promise.all([getPerformanceStats(periodHours), getAlertStats(periodHours), getBudgetStats(periodHours), getStreamingStats()]));
  // Calcular score general del sistema
  const systemScore =
  /* istanbul ignore next */
  (cov_1h87t3rrju().s[104]++, calculateSystemScore(performance, alerts, budgets));
  /* istanbul ignore next */
  cov_1h87t3rrju().s[105]++;
  return {
    systemScore,
    performance,
    alerts,
    budgets,
    streaming,
    summary: {
      healthy: systemScore >= 80,
      activeAlerts: alerts.summary.active,
      budgetViolations: budgets.topViolations.length,
      streamingClients: streaming.clients.active,
      lastUpdate: Date.now()
    }
  };
}
/**
 * Calcula tendencia de una serie de valores
 */
function calculateTrend(values) {
  /* istanbul ignore next */
  cov_1h87t3rrju().f[38]++;
  cov_1h87t3rrju().s[106]++;
  if (values.length < 2) {
    /* istanbul ignore next */
    cov_1h87t3rrju().b[19][0]++;
    cov_1h87t3rrju().s[107]++;
    return 0;
  } else
  /* istanbul ignore next */
  {
    cov_1h87t3rrju().b[19][1]++;
  }
  const half =
  /* istanbul ignore next */
  (cov_1h87t3rrju().s[108]++, Math.floor(values.length / 2));
  const firstHalf =
  /* istanbul ignore next */
  (cov_1h87t3rrju().s[109]++, values.slice(0, half));
  const secondHalf =
  /* istanbul ignore next */
  (cov_1h87t3rrju().s[110]++, values.slice(half));
  const firstAvg =
  /* istanbul ignore next */
  (cov_1h87t3rrju().s[111]++, firstHalf.reduce((sum, val) => {
    /* istanbul ignore next */
    cov_1h87t3rrju().f[39]++;
    cov_1h87t3rrju().s[112]++;
    return sum + val;
  }, 0) / firstHalf.length);
  const secondAvg =
  /* istanbul ignore next */
  (cov_1h87t3rrju().s[113]++, secondHalf.reduce((sum, val) => {
    /* istanbul ignore next */
    cov_1h87t3rrju().f[40]++;
    cov_1h87t3rrju().s[114]++;
    return sum + val;
  }, 0) / secondHalf.length);
  /* istanbul ignore next */
  cov_1h87t3rrju().s[115]++;
  return firstAvg === 0 ?
  /* istanbul ignore next */
  (cov_1h87t3rrju().b[20][0]++, 0) :
  /* istanbul ignore next */
  (cov_1h87t3rrju().b[20][1]++, (secondAvg - firstAvg) / firstAvg * 100);
}
/**
 * Calcula score general del sistema
 */
function calculateSystemScore(performance, alerts, budgets) {
  /* istanbul ignore next */
  cov_1h87t3rrju().f[41]++;
  let score =
  /* istanbul ignore next */
  (cov_1h87t3rrju().s[116]++, 100);
  // Penalizar por alertas activas
  /* istanbul ignore next */
  cov_1h87t3rrju().s[117]++;
  score -= alerts.summary.active * 5;
  /* istanbul ignore next */
  cov_1h87t3rrju().s[118]++;
  score -= alerts.summary.acknowledged * 2;
  // Penalizar por presupuestos fallidos
  /* istanbul ignore next */
  cov_1h87t3rrju().s[119]++;
  score -= budgets.summary.failingBudgets * 10;
  /* istanbul ignore next */
  cov_1h87t3rrju().s[120]++;
  score -= budgets.summary.warningBudgets * 5;
  // Penalizar por performance pobre
  /* istanbul ignore next */
  cov_1h87t3rrju().s[121]++;
  if (performance.current) {
    /* istanbul ignore next */
    cov_1h87t3rrju().b[21][0]++;
    cov_1h87t3rrju().s[122]++;
    if (performance.current.errorRate > 0.05) {
      /* istanbul ignore next */
      cov_1h87t3rrju().b[22][0]++;
      cov_1h87t3rrju().s[123]++;
      score -= 15;
    } else
    /* istanbul ignore next */
    {
      cov_1h87t3rrju().b[22][1]++;
    } // >5% error rate
    cov_1h87t3rrju().s[124]++;
    if (performance.current.responseTime > 2000) {
      /* istanbul ignore next */
      cov_1h87t3rrju().b[23][0]++;
      cov_1h87t3rrju().s[125]++;
      score -= 10;
    } else
    /* istanbul ignore next */
    {
      cov_1h87t3rrju().b[23][1]++;
    } // >2s response time
    cov_1h87t3rrju().s[126]++;
    if (performance.current.memoryUsage > 0.9) {
      /* istanbul ignore next */
      cov_1h87t3rrju().b[24][0]++;
      cov_1h87t3rrju().s[127]++;
      score -= 10;
    } else
    /* istanbul ignore next */
    {
      cov_1h87t3rrju().b[24][1]++;
    } // >90% memory
    cov_1h87t3rrju().s[128]++;
    if (performance.current.cpuUsage > 0.8) {
      /* istanbul ignore next */
      cov_1h87t3rrju().b[25][0]++;
      cov_1h87t3rrju().s[129]++;
      score -= 10;
    } else
    /* istanbul ignore next */
    {
      cov_1h87t3rrju().b[25][1]++;
    } // >80% CPU
  } else
  /* istanbul ignore next */
  {
    cov_1h87t3rrju().b[21][1]++;
  }
  cov_1h87t3rrju().s[130]++;
  return Math.max(0, Math.min(100, Math.round(score)));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,