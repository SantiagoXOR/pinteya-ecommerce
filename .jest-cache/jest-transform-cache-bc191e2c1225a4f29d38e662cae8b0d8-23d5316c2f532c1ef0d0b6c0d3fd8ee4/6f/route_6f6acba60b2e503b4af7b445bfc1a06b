efb2a7725776f2e70aa6ffbf3f220716
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_cud1ux1t8() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\payments\\reports\\route.ts";
  var hash = "2f93cea0e4c3e1aa7c4fbcb08ec2dcba8aa8a3c1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\payments\\reports\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 20
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 23
        }
      },
      "7": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "8": {
        start: {
          line: 24,
          column: 16
        },
        end: {
          line: 24,
          column: 54
        }
      },
      "9": {
        start: {
          line: 25,
          column: 18
        },
        end: {
          line: 25,
          column: 66
        }
      },
      "10": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 60
        }
      },
      "11": {
        start: {
          line: 27,
          column: 21
        },
        end: {
          line: 27,
          column: 71
        }
      },
      "12": {
        start: {
          line: 28,
          column: 17
        },
        end: {
          line: 28,
          column: 62
        }
      },
      "13": {
        start: {
          line: 29,
          column: 16
        },
        end: {
          line: 29,
          column: 24
        }
      },
      "14": {
        start: {
          line: 31,
          column: 22
        },
        end: {
          line: 31,
          column: 32
        }
      },
      "15": {
        start: {
          line: 32,
          column: 21
        },
        end: {
          line: 32,
          column: 72
        }
      },
      "16": {
        start: {
          line: 33,
          column: 22
        },
        end: {
          line: 33,
          column: 68
        }
      },
      "17": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 128,
          column: 5
        }
      },
      "18": {
        start: {
          line: 36,
          column: 24
        },
        end: {
          line: 36,
          column: 49
        }
      },
      "19": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 44,
          column: 9
        }
      },
      "20": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 43,
          column: 15
        }
      },
      "21": {
        start: {
          line: 46,
          column: 32
        },
        end: {
          line: 46,
          column: 122
        }
      },
      "22": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 60,
          column: 9
        }
      },
      "23": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 51,
          column: 15
        }
      },
      "24": {
        start: {
          line: 52,
          column: 29
        },
        end: {
          line: 57,
          column: 14
        }
      },
      "25": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 120
        }
      },
      "26": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 59,
          column: 28
        }
      },
      "27": {
        start: {
          line: 62,
          column: 20
        },
        end: {
          line: 62,
          column: 40
        }
      },
      "28": {
        start: {
          line: 63,
          column: 27
        },
        end: {
          line: 63,
          column: 74
        }
      },
      "29": {
        start: {
          line: 64,
          column: 25
        },
        end: {
          line: 64,
          column: 58
        }
      },
      "30": {
        start: {
          line: 65,
          column: 23
        },
        end: {
          line: 65,
          column: 54
        }
      },
      "31": {
        start: {
          line: 66,
          column: 31
        },
        end: {
          line: 66,
          column: 81
        }
      },
      "32": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 79,
          column: 9
        }
      },
      "33": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 78,
          column: 15
        }
      },
      "34": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 87,
          column: 11
        }
      },
      "35": {
        start: {
          line: 89,
          column: 27
        },
        end: {
          line: 89,
          column: 93
        }
      },
      "36": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 94,
          column: 11
        }
      },
      "37": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 100,
          column: 11
        }
      },
      "38": {
        start: {
          line: 101,
          column: 25
        },
        end: {
          line: 106,
          column: 10
        }
      },
      "39": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 107,
          column: 116
        }
      },
      "40": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 108,
          column: 24
        }
      },
      "41": {
        start: {
          line: 110,
          column: 31
        },
        end: {
          line: 110,
          column: 53
        }
      },
      "42": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 118,
          column: 11
        }
      },
      "43": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 121,
          column: 11
        }
      },
      "44": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 127,
          column: 11
        }
      },
      "45": {
        start: {
          line: 131,
          column: 22
        },
        end: {
          line: 131,
          column: 32
        }
      },
      "46": {
        start: {
          line: 132,
          column: 21
        },
        end: {
          line: 132,
          column: 72
        }
      },
      "47": {
        start: {
          line: 133,
          column: 4
        },
        end: {
          line: 215,
          column: 5
        }
      },
      "48": {
        start: {
          line: 135,
          column: 24
        },
        end: {
          line: 135,
          column: 49
        }
      },
      "49": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 143,
          column: 9
        }
      },
      "50": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 142,
          column: 15
        }
      },
      "51": {
        start: {
          line: 145,
          column: 32
        },
        end: {
          line: 145,
          column: 124
        }
      },
      "52": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 155,
          column: 9
        }
      },
      "53": {
        start: {
          line: 147,
          column: 29
        },
        end: {
          line: 152,
          column: 14
        }
      },
      "54": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 153,
          column: 122
        }
      },
      "55": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 154,
          column: 28
        }
      },
      "56": {
        start: {
          line: 156,
          column: 21
        },
        end: {
          line: 156,
          column: 41
        }
      },
      "57": {
        start: {
          line: 157,
          column: 54
        },
        end: {
          line: 157,
          column: 58
        }
      },
      "58": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 166,
          column: 9
        }
      },
      "59": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 165,
          column: 15
        }
      },
      "60": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 173,
          column: 11
        }
      },
      "61": {
        start: {
          line: 175,
          column: 23
        },
        end: {
          line: 175,
          column: 87
        }
      },
      "62": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 180,
          column: 11
        }
      },
      "63": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 186,
          column: 11
        }
      },
      "64": {
        start: {
          line: 187,
          column: 25
        },
        end: {
          line: 194,
          column: 10
        }
      },
      "65": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 195,
          column: 118
        }
      },
      "66": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 196,
          column: 24
        }
      },
      "67": {
        start: {
          line: 198,
          column: 31
        },
        end: {
          line: 198,
          column: 53
        }
      },
      "68": {
        start: {
          line: 199,
          column: 8
        },
        end: {
          line: 205,
          column: 11
        }
      },
      "69": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 208,
          column: 11
        }
      },
      "70": {
        start: {
          line: 209,
          column: 8
        },
        end: {
          line: 214,
          column: 11
        }
      },
      "71": {
        start: {
          line: 220,
          column: 21
        },
        end: {
          line: 220,
          column: 55
        }
      },
      "72": {
        start: {
          line: 221,
          column: 4
        },
        end: {
          line: 223,
          column: 5
        }
      },
      "73": {
        start: {
          line: 222,
          column: 8
        },
        end: {
          line: 222,
          column: 67
        }
      },
      "74": {
        start: {
          line: 225,
          column: 20
        },
        end: {
          line: 225,
          column: 58
        }
      },
      "75": {
        start: {
          line: 226,
          column: 22
        },
        end: {
          line: 226,
          column: 101
        }
      },
      "76": {
        start: {
          line: 227,
          column: 16
        },
        end: {
          line: 242,
          column: 90
        }
      },
      "77": {
        start: {
          line: 244,
          column: 4
        },
        end: {
          line: 256,
          column: 5
        }
      },
      "78": {
        start: {
          line: 246,
          column: 12
        },
        end: {
          line: 246,
          column: 59
        }
      },
      "79": {
        start: {
          line: 247,
          column: 12
        },
        end: {
          line: 247,
          column: 18
        }
      },
      "80": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 249,
          column: 18
        }
      },
      "81": {
        start: {
          line: 251,
          column: 12
        },
        end: {
          line: 254,
          column: 15
        }
      },
      "82": {
        start: {
          line: 255,
          column: 12
        },
        end: {
          line: 255,
          column: 18
        }
      },
      "83": {
        start: {
          line: 257,
          column: 36
        },
        end: {
          line: 257,
          column: 47
        }
      },
      "84": {
        start: {
          line: 258,
          column: 4
        },
        end: {
          line: 260,
          column: 5
        }
      },
      "85": {
        start: {
          line: 259,
          column: 8
        },
        end: {
          line: 259,
          column: 68
        }
      },
      "86": {
        start: {
          line: 262,
          column: 26
        },
        end: {
          line: 262,
          column: 63
        }
      },
      "87": {
        start: {
          line: 264,
          column: 20
        },
        end: {
          line: 264,
          column: 85
        }
      },
      "88": {
        start: {
          line: 265,
          column: 4
        },
        end: {
          line: 273,
          column: 6
        }
      },
      "89": {
        start: {
          line: 278,
          column: 4
        },
        end: {
          line: 314,
          column: 7
        }
      },
      "90": {
        start: {
          line: 279,
          column: 25
        },
        end: {
          line: 285,
          column: 9
        }
      },
      "91": {
        start: {
          line: 286,
          column: 8
        },
        end: {
          line: 313,
          column: 9
        }
      },
      "92": {
        start: {
          line: 288,
          column: 16
        },
        end: {
          line: 293,
          column: 18
        }
      },
      "93": {
        start: {
          line: 295,
          column: 16
        },
        end: {
          line: 299,
          column: 18
        }
      },
      "94": {
        start: {
          line: 301,
          column: 16
        },
        end: {
          line: 310,
          column: 18
        }
      },
      "95": {
        start: {
          line: 303,
          column: 59
        },
        end: {
          line: 308,
          column: 25
        }
      },
      "96": {
        start: {
          line: 312,
          column: 16
        },
        end: {
          line: 312,
          column: 32
        }
      },
      "97": {
        start: {
          line: 319,
          column: 30
        },
        end: {
          line: 319,
          column: 43
        }
      },
      "98": {
        start: {
          line: 320,
          column: 31
        },
        end: {
          line: 320,
          column: 89
        }
      },
      "99": {
        start: {
          line: 320,
          column: 50
        },
        end: {
          line: 320,
          column: 81
        }
      },
      "100": {
        start: {
          line: 321,
          column: 27
        },
        end: {
          line: 321,
          column: 85
        }
      },
      "101": {
        start: {
          line: 321,
          column: 46
        },
        end: {
          line: 321,
          column: 77
        }
      },
      "102": {
        start: {
          line: 322,
          column: 24
        },
        end: {
          line: 322,
          column: 79
        }
      },
      "103": {
        start: {
          line: 322,
          column: 48
        },
        end: {
          line: 322,
          column: 75
        }
      },
      "104": {
        start: {
          line: 323,
          column: 4
        },
        end: {
          line: 332,
          column: 6
        }
      },
      "105": {
        start: {
          line: 339,
          column: 21
        },
        end: {
          line: 339,
          column: 86
        }
      },
      "106": {
        start: {
          line: 340,
          column: 4
        },
        end: {
          line: 347,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "GET",
        decl: {
          start: {
            line: 30,
            column: 15
          },
          end: {
            line: 30,
            column: 18
          }
        },
        loc: {
          start: {
            line: 30,
            column: 28
          },
          end: {
            line: 129,
            column: 1
          }
        },
        line: 30
      },
      "5": {
        name: "POST",
        decl: {
          start: {
            line: 130,
            column: 15
          },
          end: {
            line: 130,
            column: 19
          }
        },
        loc: {
          start: {
            line: 130,
            column: 29
          },
          end: {
            line: 216,
            column: 1
          }
        },
        line: 130
      },
      "6": {
        name: "generateReport",
        decl: {
          start: {
            line: 219,
            column: 19
          },
          end: {
            line: 219,
            column: 33
          }
        },
        loc: {
          start: {
            line: 219,
            column: 82
          },
          end: {
            line: 274,
            column: 1
          }
        },
        line: 219
      },
      "7": {
        name: "processReportData",
        decl: {
          start: {
            line: 277,
            column: 13
          },
          end: {
            line: 277,
            column: 30
          }
        },
        loc: {
          start: {
            line: 277,
            column: 45
          },
          end: {
            line: 315,
            column: 1
          }
        },
        line: 277
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 278,
            column: 22
          },
          end: {
            line: 278,
            column: 23
          }
        },
        loc: {
          start: {
            line: 278,
            column: 31
          },
          end: {
            line: 314,
            column: 5
          }
        },
        line: 278
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 303,
            column: 50
          },
          end: {
            line: 303,
            column: 51
          }
        },
        loc: {
          start: {
            line: 303,
            column: 59
          },
          end: {
            line: 308,
            column: 25
          }
        },
        line: 303
      },
      "10": {
        name: "calculateReportMetrics",
        decl: {
          start: {
            line: 318,
            column: 13
          },
          end: {
            line: 318,
            column: 35
          }
        },
        loc: {
          start: {
            line: 318,
            column: 44
          },
          end: {
            line: 333,
            column: 1
          }
        },
        line: 318
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 320,
            column: 45
          },
          end: {
            line: 320,
            column: 46
          }
        },
        loc: {
          start: {
            line: 320,
            column: 50
          },
          end: {
            line: 320,
            column: 81
          }
        },
        line: 320
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 321,
            column: 41
          },
          end: {
            line: 321,
            column: 42
          }
        },
        loc: {
          start: {
            line: 321,
            column: 46
          },
          end: {
            line: 321,
            column: 77
          }
        },
        line: 321
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 322,
            column: 38
          },
          end: {
            line: 322,
            column: 39
          }
        },
        loc: {
          start: {
            line: 322,
            column: 48
          },
          end: {
            line: 322,
            column: 75
          }
        },
        line: 322
      },
      "14": {
        name: "createMercadoPagoReport",
        decl: {
          start: {
            line: 336,
            column: 19
          },
          end: {
            line: 336,
            column: 42
          }
        },
        loc: {
          start: {
            line: 336,
            column: 76
          },
          end: {
            line: 348,
            column: 1
          }
        },
        line: 336
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 32,
            column: 21
          },
          end: {
            line: 32,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 21
          },
          end: {
            line: 32,
            column: 59
          }
        }, {
          start: {
            line: 32,
            column: 63
          },
          end: {
            line: 32,
            column: 72
          }
        }],
        line: 32
      },
      "1": {
        loc: {
          start: {
            line: 33,
            column: 22
          },
          end: {
            line: 33,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 22
          },
          end: {
            line: 33,
            column: 55
          }
        }, {
          start: {
            line: 33,
            column: 59
          },
          end: {
            line: 33,
            column: 68
          }
        }],
        line: 33
      },
      "2": {
        loc: {
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "3": {
        loc: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "4": {
        loc: {
          start: {
            line: 63,
            column: 27
          },
          end: {
            line: 63,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 27
          },
          end: {
            line: 63,
            column: 55
          }
        }, {
          start: {
            line: 63,
            column: 59
          },
          end: {
            line: 63,
            column: 74
          }
        }],
        line: 63
      },
      "5": {
        loc: {
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "6": {
        loc: {
          start: {
            line: 98,
            column: 26
          },
          end: {
            line: 98,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 98,
            column: 26
          },
          end: {
            line: 98,
            column: 52
          }
        }, {
          start: {
            line: 98,
            column: 56
          },
          end: {
            line: 98,
            column: 57
          }
        }],
        line: 98
      },
      "7": {
        loc: {
          start: {
            line: 132,
            column: 21
          },
          end: {
            line: 132,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 132,
            column: 21
          },
          end: {
            line: 132,
            column: 59
          }
        }, {
          start: {
            line: 132,
            column: 63
          },
          end: {
            line: 132,
            column: 72
          }
        }],
        line: 132
      },
      "8": {
        loc: {
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 143,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 143,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 136
      },
      "9": {
        loc: {
          start: {
            line: 146,
            column: 8
          },
          end: {
            line: 155,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 146,
            column: 8
          },
          end: {
            line: 155,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 146
      },
      "10": {
        loc: {
          start: {
            line: 159,
            column: 8
          },
          end: {
            line: 166,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 159,
            column: 8
          },
          end: {
            line: 166,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 159
      },
      "11": {
        loc: {
          start: {
            line: 159,
            column: 12
          },
          end: {
            line: 159,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 159,
            column: 12
          },
          end: {
            line: 159,
            column: 17
          }
        }, {
          start: {
            line: 159,
            column: 21
          },
          end: {
            line: 159,
            column: 31
          }
        }, {
          start: {
            line: 159,
            column: 35
          },
          end: {
            line: 159,
            column: 43
          }
        }],
        line: 159
      },
      "12": {
        loc: {
          start: {
            line: 219,
            column: 58
          },
          end: {
            line: 219,
            column: 80
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 219,
            column: 75
          },
          end: {
            line: 219,
            column: 80
          }
        }],
        line: 219
      },
      "13": {
        loc: {
          start: {
            line: 221,
            column: 4
          },
          end: {
            line: 223,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 221,
            column: 4
          },
          end: {
            line: 223,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 221
      },
      "14": {
        loc: {
          start: {
            line: 225,
            column: 20
          },
          end: {
            line: 225,
            column: 58
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 225,
            column: 29
          },
          end: {
            line: 225,
            column: 45
          }
        }, {
          start: {
            line: 225,
            column: 48
          },
          end: {
            line: 225,
            column: 58
          }
        }],
        line: 225
      },
      "15": {
        loc: {
          start: {
            line: 226,
            column: 22
          },
          end: {
            line: 226,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 226,
            column: 33
          },
          end: {
            line: 226,
            column: 51
          }
        }, {
          start: {
            line: 226,
            column: 54
          },
          end: {
            line: 226,
            column: 101
          }
        }],
        line: 226
      },
      "16": {
        loc: {
          start: {
            line: 244,
            column: 4
          },
          end: {
            line: 256,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 245,
            column: 8
          },
          end: {
            line: 247,
            column: 18
          }
        }, {
          start: {
            line: 248,
            column: 8
          },
          end: {
            line: 249,
            column: 18
          }
        }, {
          start: {
            line: 250,
            column: 8
          },
          end: {
            line: 255,
            column: 18
          }
        }],
        line: 244
      },
      "17": {
        loc: {
          start: {
            line: 258,
            column: 4
          },
          end: {
            line: 260,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 258,
            column: 4
          },
          end: {
            line: 260,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 258
      },
      "18": {
        loc: {
          start: {
            line: 262,
            column: 44
          },
          end: {
            line: 262,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 262,
            column: 44
          },
          end: {
            line: 262,
            column: 50
          }
        }, {
          start: {
            line: 262,
            column: 54
          },
          end: {
            line: 262,
            column: 56
          }
        }],
        line: 262
      },
      "19": {
        loc: {
          start: {
            line: 264,
            column: 20
          },
          end: {
            line: 264,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 264,
            column: 37
          },
          end: {
            line: 264,
            column: 73
          }
        }, {
          start: {
            line: 264,
            column: 76
          },
          end: {
            line: 264,
            column: 85
          }
        }],
        line: 264
      },
      "20": {
        loc: {
          start: {
            line: 264,
            column: 60
          },
          end: {
            line: 264,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 264,
            column: 60
          },
          end: {
            line: 264,
            column: 66
          }
        }, {
          start: {
            line: 264,
            column: 70
          },
          end: {
            line: 264,
            column: 72
          }
        }],
        line: 264
      },
      "21": {
        loc: {
          start: {
            line: 282,
            column: 20
          },
          end: {
            line: 282,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 282,
            column: 20
          },
          end: {
            line: 282,
            column: 40
          }
        }, {
          start: {
            line: 282,
            column: 44
          },
          end: {
            line: 282,
            column: 56
          }
        }],
        line: 282
      },
      "22": {
        loc: {
          start: {
            line: 286,
            column: 8
          },
          end: {
            line: 313,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 287,
            column: 12
          },
          end: {
            line: 293,
            column: 18
          }
        }, {
          start: {
            line: 294,
            column: 12
          },
          end: {
            line: 299,
            column: 18
          }
        }, {
          start: {
            line: 300,
            column: 12
          },
          end: {
            line: 310,
            column: 18
          }
        }, {
          start: {
            line: 311,
            column: 12
          },
          end: {
            line: 312,
            column: 32
          }
        }],
        line: 286
      },
      "23": {
        loc: {
          start: {
            line: 298,
            column: 36
          },
          end: {
            line: 298,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 298,
            column: 74
          },
          end: {
            line: 298,
            column: 92
          }
        }, {
          start: {
            line: 298,
            column: 95
          },
          end: {
            line: 298,
            column: 96
          }
        }],
        line: 298
      },
      "24": {
        loc: {
          start: {
            line: 303,
            column: 27
          },
          end: {
            line: 308,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 303,
            column: 27
          },
          end: {
            line: 308,
            column: 27
          }
        }, {
          start: {
            line: 308,
            column: 31
          },
          end: {
            line: 308,
            column: 33
          }
        }],
        line: 303
      },
      "25": {
        loc: {
          start: {
            line: 309,
            column: 33
          },
          end: {
            line: 309,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 309,
            column: 33
          },
          end: {
            line: 309,
            column: 58
          }
        }, {
          start: {
            line: 309,
            column: 62
          },
          end: {
            line: 309,
            column: 63
          }
        }],
        line: 309
      },
      "26": {
        loc: {
          start: {
            line: 322,
            column: 55
          },
          end: {
            line: 322,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 322,
            column: 55
          },
          end: {
            line: 322,
            column: 69
          }
        }, {
          start: {
            line: 322,
            column: 73
          },
          end: {
            line: 322,
            column: 74
          }
        }],
        line: 322
      },
      "27": {
        loc: {
          start: {
            line: 330,
            column: 24
          },
          end: {
            line: 330,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 330,
            column: 48
          },
          end: {
            line: 330,
            column: 79
          }
        }, {
          start: {
            line: 330,
            column: 82
          },
          end: {
            line: 330,
            column: 83
          }
        }],
        line: 330
      },
      "28": {
        loc: {
          start: {
            line: 331,
            column: 25
          },
          end: {
            line: 331,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 331,
            column: 49
          },
          end: {
            line: 331,
            column: 93
          }
        }, {
          start: {
            line: 331,
            column: 96
          },
          end: {
            line: 331,
            column: 97
          }
        }],
        line: 331
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0, 0],
      "12": [0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0, 0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\payments\\reports\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - MERCADOPAGO REPORTS API\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { auth } from '@/lib/auth/config';\r\nimport { getSupabaseClient } from '@/lib/integrations/supabase';\r\nimport { logger, LogLevel, LogCategory } from '@/lib/enterprise/logger';\r\nimport { checkRateLimit, addRateLimitHeaders, RATE_LIMIT_CONFIGS } from '@/lib/enterprise/rate-limiter';\r\nimport { metricsCollector } from '@/lib/enterprise/metrics';\r\nimport { MercadoPagoReport, ReportMetrics } from '@/types/api';\r\n\r\n/**\r\n * GET /api/payments/reports\r\n * Obtiene reportes de MercadoPago seg\xFAn documentaci\xF3n oficial\r\n */\r\nexport async function GET(request: NextRequest) {\r\n  const startTime = Date.now();\r\n  const clientIP = request.headers.get('x-forwarded-for') || 'unknown';\r\n  const userAgent = request.headers.get('user-agent') || 'unknown';\r\n\r\n  try {\r\n    // Verificar autenticaci\xF3n\r\n    const session = await auth();\r\n    if (!session?.user) {\r\n      return NextResponse.json(\r\n        { success: false, error: 'No autorizado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    // Rate limiting\r\n    const rateLimitResult = await checkRateLimit(\r\n      request,\r\n      RATE_LIMIT_CONFIGS.QUERY_API\r\n    );\r\n\r\n    if (!rateLimitResult.success) {\r\n      logger.warn(LogCategory.API, 'Rate limit exceeded for reports', {\r\n        clientIP,\r\n        userId,\r\n      });\r\n\r\n      const response = NextResponse.json(\r\n        { success: false, error: 'Demasiadas solicitudes' },\r\n        { status: 429 }\r\n      );\r\n      addRateLimitHeaders(response, rateLimitResult, RATE_LIMIT_CONFIGS.QUERY_API);\r\n      return response;\r\n    }\r\n\r\n    // Obtener par\xE1metros de consulta\r\n    const url = new URL(request.url);\r\n    const reportType = url.searchParams.get('type') || 'account_money';\r\n    const dateFrom = url.searchParams.get('date_from');\r\n    const dateTo = url.searchParams.get('date_to');\r\n    const includeMetrics = url.searchParams.get('include_metrics') === 'true';\r\n\r\n    // Validar par\xE1metros\r\n    if (!['released_money', 'account_money', 'sales_report'].includes(reportType)) {\r\n      return NextResponse.json(\r\n        { success: false, error: 'Tipo de reporte inv\xE1lido' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    logger.info(LogCategory.API, 'Reports request started', {\r\n      userId,\r\n      reportType,\r\n      dateFrom,\r\n      dateTo,\r\n      includeMetrics,\r\n      clientIP,\r\n    });\r\n\r\n    // Generar reporte\r\n    const reportData = await generateReport(reportType, dateFrom, dateTo, includeMetrics);\r\n\r\n    // Registrar m\xE9tricas\r\n    await metricsCollector.recordRequest(\r\n      '/api/payments/reports',\r\n      'GET',\r\n      200,\r\n      Date.now() - startTime,\r\n      { userId, reportType }\r\n    );\r\n\r\n    logger.info(LogCategory.API, 'Reports request completed', {\r\n      userId,\r\n      reportType,\r\n      recordsCount: reportData.records?.length || 0,\r\n      processingTime: Date.now() - startTime,\r\n    });\r\n\r\n    const response = NextResponse.json({\r\n      success: true,\r\n      data: reportData,\r\n      timestamp: Date.now(),\r\n      processing_time: Date.now() - startTime,\r\n    });\r\n\r\n    addRateLimitHeaders(response, rateLimitResult, RATE_LIMIT_CONFIGS.QUERY_API);\r\n    return response;\r\n\r\n  } catch (error) {\r\n    const processingTime = Date.now() - startTime;\r\n    \r\n    logger.performance(LogLevel.ERROR, 'Reports request failed', {\r\n      operation: 'reports-api',\r\n      duration: processingTime,\r\n      statusCode: 500,\r\n    }, {\r\n      clientIP,\r\n      userAgent,\r\n    });\r\n\r\n    await metricsCollector.recordRequest(\r\n      '/api/payments/reports',\r\n      'GET',\r\n      500,\r\n      processingTime,\r\n      { error: (error as Error).message }\r\n    );\r\n\r\n    return NextResponse.json(\r\n      { success: false, error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * POST /api/payments/reports\r\n * Crea un nuevo reporte seg\xFAn documentaci\xF3n oficial de MercadoPago\r\n */\r\nexport async function POST(request: NextRequest) {\r\n  const startTime = Date.now();\r\n  const clientIP = request.headers.get('x-forwarded-for') || 'unknown';\r\n\r\n  try {\r\n    // Verificar autenticaci\xF3n\r\n    const session = await auth();\r\n    if (!session?.user) {\r\n      return NextResponse.json(\r\n        { success: false, error: 'No autorizado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    // Rate limiting\r\n    const rateLimitResult = await checkRateLimit(\r\n      request,\r\n      RATE_LIMIT_CONFIGS.PAYMENT_API\r\n    );\r\n\r\n    if (!rateLimitResult.success) {\r\n      const response = NextResponse.json(\r\n        { success: false, error: 'Demasiadas solicitudes' },\r\n        { status: 429 }\r\n      );\r\n      addRateLimitHeaders(response, rateLimitResult, RATE_LIMIT_CONFIGS.PAYMENT_API);\r\n      return response;\r\n    }\r\n\r\n    const body = await request.json();\r\n    const { type, date_from, date_to, columns } = body;\r\n\r\n    // Validar datos requeridos\r\n    if (!type || !date_from || !date_to) {\r\n      return NextResponse.json(\r\n        { success: false, error: 'Faltan par\xE1metros requeridos' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    logger.info(LogCategory.API, 'Report creation started', {\r\n      userId,\r\n      type,\r\n      date_from,\r\n      date_to,\r\n      clientIP,\r\n    });\r\n\r\n    // Crear reporte\r\n    const report = await createMercadoPagoReport(type, date_from, date_to, columns);\r\n\r\n    // Registrar m\xE9tricas\r\n    await metricsCollector.recordRequest(\r\n      '/api/payments/reports',\r\n      'POST',\r\n      201,\r\n      Date.now() - startTime,\r\n      { userId, reportType: type }\r\n    );\r\n\r\n    logger.info(LogCategory.API, 'Report creation completed', {\r\n      userId,\r\n      reportId: report.id,\r\n      type,\r\n      processingTime: Date.now() - startTime,\r\n    });\r\n\r\n    const response = NextResponse.json({\r\n      success: true,\r\n      data: report,\r\n      timestamp: Date.now(),\r\n      processing_time: Date.now() - startTime,\r\n    }, { status: 201 });\r\n\r\n    addRateLimitHeaders(response, rateLimitResult, RATE_LIMIT_CONFIGS.PAYMENT_API);\r\n    return response;\r\n\r\n  } catch (error) {\r\n    const processingTime = Date.now() - startTime;\r\n    \r\n    logger.performance(LogLevel.ERROR, 'Report creation failed', {\r\n      operation: 'report-creation-api',\r\n      duration: processingTime,\r\n      statusCode: 500,\r\n    }, {\r\n      clientIP,\r\n    });\r\n\r\n    await metricsCollector.recordRequest(\r\n      '/api/payments/reports',\r\n      'POST',\r\n      500,\r\n      processingTime,\r\n      { error: (error as Error).message }\r\n    );\r\n\r\n    return NextResponse.json(\r\n      { success: false, error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Genera reporte basado en datos de Supabase (simulando API de MercadoPago)\r\n */\r\nasync function generateReport(\r\n  type: string,\r\n  dateFrom?: string | null,\r\n  dateTo?: string | null,\r\n  includeMetrics: boolean = false\r\n) {\r\n  const supabase = getSupabaseClient();\r\n  if (!supabase) {\r\n    throw new Error('Error de configuraci\xF3n de base de datos');\r\n  }\r\n\r\n  // Configurar fechas por defecto (\xFAltimos 30 d\xEDas)\r\n  const endDate = dateTo ? new Date(dateTo) : new Date();\r\n  const startDate = dateFrom ? new Date(dateFrom) : new Date(Date.now() - 30 * 24 * 60 * 60 * 1000);\r\n\r\n  let query = supabase\r\n    .from('orders')\r\n    .select(`\r\n      id,\r\n      total_amount,\r\n      status,\r\n      payment_status,\r\n      created_at,\r\n      updated_at,\r\n      order_items (\r\n        quantity,\r\n        unit_price,\r\n        products (\r\n          name,\r\n          category_id\r\n        )\r\n      )\r\n    `)\r\n    .gte('created_at', startDate.toISOString())\r\n    .lte('created_at', endDate.toISOString());\r\n\r\n  // Filtrar seg\xFAn tipo de reporte\r\n  switch (type) {\r\n    case 'released_money':\r\n      query = query.eq('payment_status', 'approved');\r\n      break;\r\n    case 'account_money':\r\n      // Incluir todos los estados\r\n      break;\r\n    case 'sales_report':\r\n      query = query.in('status', ['completed', 'processing']);\r\n      break;\r\n  }\r\n\r\n  const { data: orders, error } = await query;\r\n\r\n  if (error) {\r\n    throw new Error(`Error al obtener datos: ${error.message}`);\r\n  }\r\n\r\n  // Procesar datos seg\xFAn tipo de reporte\r\n  const processedData = processReportData(orders || [], type);\r\n  \r\n  // Calcular m\xE9tricas si se solicitan\r\n  const metrics = includeMetrics ? calculateReportMetrics(orders || []) : undefined;\r\n\r\n  return {\r\n    type,\r\n    date_from: startDate.toISOString(),\r\n    date_to: endDate.toISOString(),\r\n    records: processedData,\r\n    metrics,\r\n    total_records: processedData.length,\r\n    generated_at: new Date().toISOString(),\r\n  };\r\n}\r\n\r\n/**\r\n * Procesa los datos seg\xFAn el tipo de reporte\r\n */\r\nfunction processReportData(orders: Array<{\r\n  id: string;\r\n  total_amount: number;\r\n  payment_status?: string;\r\n  status: string;\r\n  created_at: string;\r\n  updated_at: string;\r\n  external_reference?: string;\r\n  order_items?: Array<{\r\n    id: string;\r\n    quantity: number;\r\n    price: number;\r\n    product: {\r\n      id: string;\r\n      name: string;\r\n    };\r\n  }>;\r\n}>, type: string) {\r\n  return orders.map(order => {\r\n    const baseData = {\r\n      order_id: order.id,\r\n      amount: order.total_amount,\r\n      status: order.payment_status || order.status,\r\n      created_at: order.created_at,\r\n      updated_at: order.updated_at,\r\n    };\r\n\r\n    switch (type) {\r\n      case 'released_money':\r\n        return {\r\n          ...baseData,\r\n          release_date: order.updated_at,\r\n          net_amount: order.total_amount * 0.96, // Simular comisi\xF3n MP\r\n          fee_amount: order.total_amount * 0.04,\r\n        };\r\n      \r\n      case 'account_money':\r\n        return {\r\n          ...baseData,\r\n          transaction_type: 'payment',\r\n          balance_impact: order.payment_status === 'approved' ? order.total_amount : 0,\r\n        };\r\n      \r\n      case 'sales_report':\r\n        return {\r\n          ...baseData,\r\n          items: order.order_items?.map((item: {\r\n            id: string;\r\n            quantity: number;\r\n            price: number;\r\n            unit_price?: number;\r\n            products?: {\r\n              name: string;\r\n              category_id?: string;\r\n            };\r\n            product: {\r\n              id: string;\r\n              name: string;\r\n            };\r\n          }) => ({\r\n            name: item.products?.name,\r\n            quantity: item.quantity,\r\n            unit_price: item.unit_price,\r\n            category: item.products?.category_id,\r\n          })) || [],\r\n          items_count: order.order_items?.length || 0,\r\n        };\r\n      \r\n      default:\r\n        return baseData;\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Calcula m\xE9tricas del reporte\r\n */\r\nfunction calculateReportMetrics(orders: Array<{\r\n  payment_status?: string;\r\n  total_amount?: number;\r\n}>): ReportMetrics {\r\n  const totalTransactions = orders.length;\r\n  const successfulPayments = orders.filter(o => o.payment_status === 'approved').length;\r\n  const failedPayments = orders.filter(o => o.payment_status === 'rejected').length;\r\n  const totalAmount = orders.reduce((sum, o) => sum + (o.total_amount || 0), 0);\r\n  \r\n  return {\r\n    total_transactions: totalTransactions,\r\n    total_amount: totalAmount,\r\n    successful_payments: successfulPayments,\r\n    failed_payments: failedPayments,\r\n    refunds: 0, // TODO: Implementar cuando se agregue tabla de refunds\r\n    chargebacks: 0, // TODO: Implementar cuando se agregue tabla de chargebacks\r\n    average_ticket: totalTransactions > 0 ? totalAmount / totalTransactions : 0,\r\n    conversion_rate: totalTransactions > 0 ? (successfulPayments / totalTransactions) * 100 : 0,\r\n  };\r\n}\r\n\r\n/**\r\n * Crea un reporte en MercadoPago (simulado)\r\n */\r\nasync function createMercadoPagoReport(\r\n  type: string,\r\n  dateFrom: string,\r\n  dateTo: string,\r\n  columns?: string[]\r\n): Promise<MercadoPagoReport> {\r\n  // En una implementaci\xF3n real, aqu\xED se har\xEDa la llamada a la API de MercadoPago\r\n  // Por ahora simulamos la creaci\xF3n del reporte\r\n  \r\n  const reportId = `report_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n  \r\n  return {\r\n    id: reportId,\r\n    type: type as any,\r\n    date_from: dateFrom,\r\n    date_to: dateTo,\r\n    status: 'pending',\r\n    created_at: new Date().toISOString(),\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "POST", "runtime", "request", "startTime", "Date", "now", "clientIP", "headers", "get", "userAgent", "session", "auth", "user", "NextResponse", "json", "success", "error", "status", "rateLimitResult", "checkRateLimit", "RATE_LIMIT_CONFIGS", "QUERY_API", "logger", "warn", "LogCategory", "API", "userId", "response", "addRateLimitHeaders", "url", "URL", "reportType", "searchParams", "dateFrom", "dateTo", "includeMetrics", "includes", "info", "reportData", "generateReport", "metricsCollector", "recordRequest", "recordsCount", "records", "length", "processingTime", "data", "timestamp", "processing_time", "performance", "LogLevel", "ERROR", "operation", "duration", "statusCode", "message", "PAYMENT_API", "body", "type", "date_from", "date_to", "columns", "report", "createMercadoPagoReport", "reportId", "id", "supabase", "getSupabaseClient", "Error", "endDate", "startDate", "query", "from", "select", "gte", "toISOString", "lte", "eq", "in", "orders", "processedData", "processReportData", "metrics", "calculateReportMetrics", "undefined", "total_records", "generated_at", "map", "order", "baseData", "order_id", "amount", "total_amount", "payment_status", "created_at", "updated_at", "release_date", "net_amount", "fee_amount", "transaction_type", "balance_impact", "items", "order_items", "item", "name", "products", "quantity", "unit_price", "category", "category_id", "items_count", "totalTransactions", "successfulPayments", "filter", "o", "failedPayments", "totalAmount", "reduce", "sum", "total_transactions", "successful_payments", "failed_payments", "refunds", "chargebacks", "average_ticket", "conversion_rate", "Math", "random", "toString", "substr"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2f93cea0e4c3e1aa7c4fbcb08ec2dcba8aa8a3c1"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_cud1ux1t8 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_cud1ux1t8();
cov_cud1ux1t8().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_cud1ux1t8().f[0]++;
  cov_cud1ux1t8().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_cud1ux1t8().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_cud1ux1t8().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_cud1ux1t8().f[1]++;
    cov_cud1ux1t8().s[4]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_cud1ux1t8().f[2]++;
    cov_cud1ux1t8().s[5]++;
    return POST;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_cud1ux1t8().f[3]++;
    cov_cud1ux1t8().s[6]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_cud1ux1t8().s[7]++, require("next/server"));
const _config =
/* istanbul ignore next */
(cov_cud1ux1t8().s[8]++, require("../../../../lib/auth/config"));
const _supabase =
/* istanbul ignore next */
(cov_cud1ux1t8().s[9]++, require("../../../../lib/integrations/supabase"));
const _logger =
/* istanbul ignore next */
(cov_cud1ux1t8().s[10]++, require("../../../../lib/enterprise/logger"));
const _ratelimiter =
/* istanbul ignore next */
(cov_cud1ux1t8().s[11]++, require("../../../../lib/enterprise/rate-limiter"));
const _metrics =
/* istanbul ignore next */
(cov_cud1ux1t8().s[12]++, require("../../../../lib/enterprise/metrics"));
const runtime =
/* istanbul ignore next */
(cov_cud1ux1t8().s[13]++, 'nodejs');
async function GET(request) {
  /* istanbul ignore next */
  cov_cud1ux1t8().f[4]++;
  const startTime =
  /* istanbul ignore next */
  (cov_cud1ux1t8().s[14]++, Date.now());
  const clientIP =
  /* istanbul ignore next */
  (cov_cud1ux1t8().s[15]++,
  /* istanbul ignore next */
  (cov_cud1ux1t8().b[0][0]++, request.headers.get('x-forwarded-for')) ||
  /* istanbul ignore next */
  (cov_cud1ux1t8().b[0][1]++, 'unknown'));
  const userAgent =
  /* istanbul ignore next */
  (cov_cud1ux1t8().s[16]++,
  /* istanbul ignore next */
  (cov_cud1ux1t8().b[1][0]++, request.headers.get('user-agent')) ||
  /* istanbul ignore next */
  (cov_cud1ux1t8().b[1][1]++, 'unknown'));
  /* istanbul ignore next */
  cov_cud1ux1t8().s[17]++;
  try {
    // Verificar autenticaciÃ³n
    const session =
    /* istanbul ignore next */
    (cov_cud1ux1t8().s[18]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_cud1ux1t8().s[19]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_cud1ux1t8().b[2][0]++;
      cov_cud1ux1t8().s[20]++;
      return _server.NextResponse.json({
        success: false,
        error: 'No autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_cud1ux1t8().b[2][1]++;
    }
    // Rate limiting
    const rateLimitResult =
    /* istanbul ignore next */
    (cov_cud1ux1t8().s[21]++, await (0, _ratelimiter.checkRateLimit)(request, _ratelimiter.RATE_LIMIT_CONFIGS.QUERY_API));
    /* istanbul ignore next */
    cov_cud1ux1t8().s[22]++;
    if (!rateLimitResult.success) {
      /* istanbul ignore next */
      cov_cud1ux1t8().b[3][0]++;
      cov_cud1ux1t8().s[23]++;
      _logger.logger.warn(_logger.LogCategory.API, 'Rate limit exceeded for reports', {
        clientIP,
        userId
      });
      const response =
      /* istanbul ignore next */
      (cov_cud1ux1t8().s[24]++, _server.NextResponse.json({
        success: false,
        error: 'Demasiadas solicitudes'
      }, {
        status: 429
      }));
      /* istanbul ignore next */
      cov_cud1ux1t8().s[25]++;
      (0, _ratelimiter.addRateLimitHeaders)(response, rateLimitResult, _ratelimiter.RATE_LIMIT_CONFIGS.QUERY_API);
      /* istanbul ignore next */
      cov_cud1ux1t8().s[26]++;
      return response;
    } else
    /* istanbul ignore next */
    {
      cov_cud1ux1t8().b[3][1]++;
    }
    // Obtener parÃ¡metros de consulta
    const url =
    /* istanbul ignore next */
    (cov_cud1ux1t8().s[27]++, new URL(request.url));
    const reportType =
    /* istanbul ignore next */
    (cov_cud1ux1t8().s[28]++,
    /* istanbul ignore next */
    (cov_cud1ux1t8().b[4][0]++, url.searchParams.get('type')) ||
    /* istanbul ignore next */
    (cov_cud1ux1t8().b[4][1]++, 'account_money'));
    const dateFrom =
    /* istanbul ignore next */
    (cov_cud1ux1t8().s[29]++, url.searchParams.get('date_from'));
    const dateTo =
    /* istanbul ignore next */
    (cov_cud1ux1t8().s[30]++, url.searchParams.get('date_to'));
    const includeMetrics =
    /* istanbul ignore next */
    (cov_cud1ux1t8().s[31]++, url.searchParams.get('include_metrics') === 'true');
    // Validar parÃ¡metros
    /* istanbul ignore next */
    cov_cud1ux1t8().s[32]++;
    if (!['released_money', 'account_money', 'sales_report'].includes(reportType)) {
      /* istanbul ignore next */
      cov_cud1ux1t8().b[5][0]++;
      cov_cud1ux1t8().s[33]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Tipo de reporte invÃ¡lido'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_cud1ux1t8().b[5][1]++;
    }
    cov_cud1ux1t8().s[34]++;
    _logger.logger.info(_logger.LogCategory.API, 'Reports request started', {
      userId,
      reportType,
      dateFrom,
      dateTo,
      includeMetrics,
      clientIP
    });
    // Generar reporte
    const reportData =
    /* istanbul ignore next */
    (cov_cud1ux1t8().s[35]++, await generateReport(reportType, dateFrom, dateTo, includeMetrics));
    // Registrar mÃ©tricas
    /* istanbul ignore next */
    cov_cud1ux1t8().s[36]++;
    await _metrics.metricsCollector.recordRequest('/api/payments/reports', 'GET', 200, Date.now() - startTime, {
      userId,
      reportType
    });
    /* istanbul ignore next */
    cov_cud1ux1t8().s[37]++;
    _logger.logger.info(_logger.LogCategory.API, 'Reports request completed', {
      userId,
      reportType,
      recordsCount:
      /* istanbul ignore next */
      (cov_cud1ux1t8().b[6][0]++, reportData.records?.length) ||
      /* istanbul ignore next */
      (cov_cud1ux1t8().b[6][1]++, 0),
      processingTime: Date.now() - startTime
    });
    const response =
    /* istanbul ignore next */
    (cov_cud1ux1t8().s[38]++, _server.NextResponse.json({
      success: true,
      data: reportData,
      timestamp: Date.now(),
      processing_time: Date.now() - startTime
    }));
    /* istanbul ignore next */
    cov_cud1ux1t8().s[39]++;
    (0, _ratelimiter.addRateLimitHeaders)(response, rateLimitResult, _ratelimiter.RATE_LIMIT_CONFIGS.QUERY_API);
    /* istanbul ignore next */
    cov_cud1ux1t8().s[40]++;
    return response;
  } catch (error) {
    const processingTime =
    /* istanbul ignore next */
    (cov_cud1ux1t8().s[41]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_cud1ux1t8().s[42]++;
    _logger.logger.performance(_logger.LogLevel.ERROR, 'Reports request failed', {
      operation: 'reports-api',
      duration: processingTime,
      statusCode: 500
    }, {
      clientIP,
      userAgent
    });
    /* istanbul ignore next */
    cov_cud1ux1t8().s[43]++;
    await _metrics.metricsCollector.recordRequest('/api/payments/reports', 'GET', 500, processingTime, {
      error: error.message
    });
    /* istanbul ignore next */
    cov_cud1ux1t8().s[44]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
async function POST(request) {
  /* istanbul ignore next */
  cov_cud1ux1t8().f[5]++;
  const startTime =
  /* istanbul ignore next */
  (cov_cud1ux1t8().s[45]++, Date.now());
  const clientIP =
  /* istanbul ignore next */
  (cov_cud1ux1t8().s[46]++,
  /* istanbul ignore next */
  (cov_cud1ux1t8().b[7][0]++, request.headers.get('x-forwarded-for')) ||
  /* istanbul ignore next */
  (cov_cud1ux1t8().b[7][1]++, 'unknown'));
  /* istanbul ignore next */
  cov_cud1ux1t8().s[47]++;
  try {
    // Verificar autenticaciÃ³n
    const session =
    /* istanbul ignore next */
    (cov_cud1ux1t8().s[48]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_cud1ux1t8().s[49]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_cud1ux1t8().b[8][0]++;
      cov_cud1ux1t8().s[50]++;
      return _server.NextResponse.json({
        success: false,
        error: 'No autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_cud1ux1t8().b[8][1]++;
    }
    // Rate limiting
    const rateLimitResult =
    /* istanbul ignore next */
    (cov_cud1ux1t8().s[51]++, await (0, _ratelimiter.checkRateLimit)(request, _ratelimiter.RATE_LIMIT_CONFIGS.PAYMENT_API));
    /* istanbul ignore next */
    cov_cud1ux1t8().s[52]++;
    if (!rateLimitResult.success) {
      /* istanbul ignore next */
      cov_cud1ux1t8().b[9][0]++;
      const response =
      /* istanbul ignore next */
      (cov_cud1ux1t8().s[53]++, _server.NextResponse.json({
        success: false,
        error: 'Demasiadas solicitudes'
      }, {
        status: 429
      }));
      /* istanbul ignore next */
      cov_cud1ux1t8().s[54]++;
      (0, _ratelimiter.addRateLimitHeaders)(response, rateLimitResult, _ratelimiter.RATE_LIMIT_CONFIGS.PAYMENT_API);
      /* istanbul ignore next */
      cov_cud1ux1t8().s[55]++;
      return response;
    } else
    /* istanbul ignore next */
    {
      cov_cud1ux1t8().b[9][1]++;
    }
    const body =
    /* istanbul ignore next */
    (cov_cud1ux1t8().s[56]++, await request.json());
    const {
      type,
      date_from,
      date_to,
      columns
    } =
    /* istanbul ignore next */
    (cov_cud1ux1t8().s[57]++, body);
    // Validar datos requeridos
    /* istanbul ignore next */
    cov_cud1ux1t8().s[58]++;
    if (
    /* istanbul ignore next */
    (cov_cud1ux1t8().b[11][0]++, !type) ||
    /* istanbul ignore next */
    (cov_cud1ux1t8().b[11][1]++, !date_from) ||
    /* istanbul ignore next */
    (cov_cud1ux1t8().b[11][2]++, !date_to)) {
      /* istanbul ignore next */
      cov_cud1ux1t8().b[10][0]++;
      cov_cud1ux1t8().s[59]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Faltan parÃ¡metros requeridos'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_cud1ux1t8().b[10][1]++;
    }
    cov_cud1ux1t8().s[60]++;
    _logger.logger.info(_logger.LogCategory.API, 'Report creation started', {
      userId,
      type,
      date_from,
      date_to,
      clientIP
    });
    // Crear reporte
    const report =
    /* istanbul ignore next */
    (cov_cud1ux1t8().s[61]++, await createMercadoPagoReport(type, date_from, date_to, columns));
    // Registrar mÃ©tricas
    /* istanbul ignore next */
    cov_cud1ux1t8().s[62]++;
    await _metrics.metricsCollector.recordRequest('/api/payments/reports', 'POST', 201, Date.now() - startTime, {
      userId,
      reportType: type
    });
    /* istanbul ignore next */
    cov_cud1ux1t8().s[63]++;
    _logger.logger.info(_logger.LogCategory.API, 'Report creation completed', {
      userId,
      reportId: report.id,
      type,
      processingTime: Date.now() - startTime
    });
    const response =
    /* istanbul ignore next */
    (cov_cud1ux1t8().s[64]++, _server.NextResponse.json({
      success: true,
      data: report,
      timestamp: Date.now(),
      processing_time: Date.now() - startTime
    }, {
      status: 201
    }));
    /* istanbul ignore next */
    cov_cud1ux1t8().s[65]++;
    (0, _ratelimiter.addRateLimitHeaders)(response, rateLimitResult, _ratelimiter.RATE_LIMIT_CONFIGS.PAYMENT_API);
    /* istanbul ignore next */
    cov_cud1ux1t8().s[66]++;
    return response;
  } catch (error) {
    const processingTime =
    /* istanbul ignore next */
    (cov_cud1ux1t8().s[67]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_cud1ux1t8().s[68]++;
    _logger.logger.performance(_logger.LogLevel.ERROR, 'Report creation failed', {
      operation: 'report-creation-api',
      duration: processingTime,
      statusCode: 500
    }, {
      clientIP
    });
    /* istanbul ignore next */
    cov_cud1ux1t8().s[69]++;
    await _metrics.metricsCollector.recordRequest('/api/payments/reports', 'POST', 500, processingTime, {
      error: error.message
    });
    /* istanbul ignore next */
    cov_cud1ux1t8().s[70]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
/**
 * Genera reporte basado en datos de Supabase (simulando API de MercadoPago)
 */
async function generateReport(type, dateFrom, dateTo, includeMetrics =
/* istanbul ignore next */
(cov_cud1ux1t8().b[12][0]++, false)) {
  /* istanbul ignore next */
  cov_cud1ux1t8().f[6]++;
  const supabase =
  /* istanbul ignore next */
  (cov_cud1ux1t8().s[71]++, (0, _supabase.getSupabaseClient)());
  /* istanbul ignore next */
  cov_cud1ux1t8().s[72]++;
  if (!supabase) {
    /* istanbul ignore next */
    cov_cud1ux1t8().b[13][0]++;
    cov_cud1ux1t8().s[73]++;
    throw new Error('Error de configuraciÃ³n de base de datos');
  } else
  /* istanbul ignore next */
  {
    cov_cud1ux1t8().b[13][1]++;
  }
  // Configurar fechas por defecto (Ãºltimos 30 dÃ­as)
  const endDate =
  /* istanbul ignore next */
  (cov_cud1ux1t8().s[74]++, dateTo ?
  /* istanbul ignore next */
  (cov_cud1ux1t8().b[14][0]++, new Date(dateTo)) :
  /* istanbul ignore next */
  (cov_cud1ux1t8().b[14][1]++, new Date()));
  const startDate =
  /* istanbul ignore next */
  (cov_cud1ux1t8().s[75]++, dateFrom ?
  /* istanbul ignore next */
  (cov_cud1ux1t8().b[15][0]++, new Date(dateFrom)) :
  /* istanbul ignore next */
  (cov_cud1ux1t8().b[15][1]++, new Date(Date.now() - 30 * 24 * 60 * 60 * 1000)));
  let query =
  /* istanbul ignore next */
  (cov_cud1ux1t8().s[76]++, supabase.from('orders').select(`
      id,
      total_amount,
      status,
      payment_status,
      created_at,
      updated_at,
      order_items (
        quantity,
        unit_price,
        products (
          name,
          category_id
        )
      )
    `).gte('created_at', startDate.toISOString()).lte('created_at', endDate.toISOString()));
  // Filtrar segÃºn tipo de reporte
  /* istanbul ignore next */
  cov_cud1ux1t8().s[77]++;
  switch (type) {
    case 'released_money':
      /* istanbul ignore next */
      cov_cud1ux1t8().b[16][0]++;
      cov_cud1ux1t8().s[78]++;
      query = query.eq('payment_status', 'approved');
      /* istanbul ignore next */
      cov_cud1ux1t8().s[79]++;
      break;
    case 'account_money':
      /* istanbul ignore next */
      cov_cud1ux1t8().b[16][1]++;
      cov_cud1ux1t8().s[80]++;
      break;
    case 'sales_report':
      /* istanbul ignore next */
      cov_cud1ux1t8().b[16][2]++;
      cov_cud1ux1t8().s[81]++;
      query = query.in('status', ['completed', 'processing']);
      /* istanbul ignore next */
      cov_cud1ux1t8().s[82]++;
      break;
  }
  const {
    data: orders,
    error
  } =
  /* istanbul ignore next */
  (cov_cud1ux1t8().s[83]++, await query);
  /* istanbul ignore next */
  cov_cud1ux1t8().s[84]++;
  if (error) {
    /* istanbul ignore next */
    cov_cud1ux1t8().b[17][0]++;
    cov_cud1ux1t8().s[85]++;
    throw new Error(`Error al obtener datos: ${error.message}`);
  } else
  /* istanbul ignore next */
  {
    cov_cud1ux1t8().b[17][1]++;
  }
  // Procesar datos segÃºn tipo de reporte
  const processedData =
  /* istanbul ignore next */
  (cov_cud1ux1t8().s[86]++, processReportData(
  /* istanbul ignore next */
  (cov_cud1ux1t8().b[18][0]++, orders) ||
  /* istanbul ignore next */
  (cov_cud1ux1t8().b[18][1]++, []), type));
  // Calcular mÃ©tricas si se solicitan
  const metrics =
  /* istanbul ignore next */
  (cov_cud1ux1t8().s[87]++, includeMetrics ?
  /* istanbul ignore next */
  (cov_cud1ux1t8().b[19][0]++, calculateReportMetrics(
  /* istanbul ignore next */
  (cov_cud1ux1t8().b[20][0]++, orders) ||
  /* istanbul ignore next */
  (cov_cud1ux1t8().b[20][1]++, []))) :
  /* istanbul ignore next */
  (cov_cud1ux1t8().b[19][1]++, undefined));
  /* istanbul ignore next */
  cov_cud1ux1t8().s[88]++;
  return {
    type,
    date_from: startDate.toISOString(),
    date_to: endDate.toISOString(),
    records: processedData,
    metrics,
    total_records: processedData.length,
    generated_at: new Date().toISOString()
  };
}
/**
 * Procesa los datos segÃºn el tipo de reporte
 */
function processReportData(orders, type) {
  /* istanbul ignore next */
  cov_cud1ux1t8().f[7]++;
  cov_cud1ux1t8().s[89]++;
  return orders.map(order => {
    /* istanbul ignore next */
    cov_cud1ux1t8().f[8]++;
    const baseData =
    /* istanbul ignore next */
    (cov_cud1ux1t8().s[90]++, {
      order_id: order.id,
      amount: order.total_amount,
      status:
      /* istanbul ignore next */
      (cov_cud1ux1t8().b[21][0]++, order.payment_status) ||
      /* istanbul ignore next */
      (cov_cud1ux1t8().b[21][1]++, order.status),
      created_at: order.created_at,
      updated_at: order.updated_at
    });
    /* istanbul ignore next */
    cov_cud1ux1t8().s[91]++;
    switch (type) {
      case 'released_money':
        /* istanbul ignore next */
        cov_cud1ux1t8().b[22][0]++;
        cov_cud1ux1t8().s[92]++;
        return {
          ...baseData,
          release_date: order.updated_at,
          net_amount: order.total_amount * 0.96,
          fee_amount: order.total_amount * 0.04
        };
      case 'account_money':
        /* istanbul ignore next */
        cov_cud1ux1t8().b[22][1]++;
        cov_cud1ux1t8().s[93]++;
        return {
          ...baseData,
          transaction_type: 'payment',
          balance_impact: order.payment_status === 'approved' ?
          /* istanbul ignore next */
          (cov_cud1ux1t8().b[23][0]++, order.total_amount) :
          /* istanbul ignore next */
          (cov_cud1ux1t8().b[23][1]++, 0)
        };
      case 'sales_report':
        /* istanbul ignore next */
        cov_cud1ux1t8().b[22][2]++;
        cov_cud1ux1t8().s[94]++;
        return {
          ...baseData,
          items:
          /* istanbul ignore next */
          (cov_cud1ux1t8().b[24][0]++, order.order_items?.map(item => {
            /* istanbul ignore next */
            cov_cud1ux1t8().f[9]++;
            cov_cud1ux1t8().s[95]++;
            return {
              name: item.products?.name,
              quantity: item.quantity,
              unit_price: item.unit_price,
              category: item.products?.category_id
            };
          })) ||
          /* istanbul ignore next */
          (cov_cud1ux1t8().b[24][1]++, []),
          items_count:
          /* istanbul ignore next */
          (cov_cud1ux1t8().b[25][0]++, order.order_items?.length) ||
          /* istanbul ignore next */
          (cov_cud1ux1t8().b[25][1]++, 0)
        };
      default:
        /* istanbul ignore next */
        cov_cud1ux1t8().b[22][3]++;
        cov_cud1ux1t8().s[96]++;
        return baseData;
    }
  });
}
/**
 * Calcula mÃ©tricas del reporte
 */
function calculateReportMetrics(orders) {
  /* istanbul ignore next */
  cov_cud1ux1t8().f[10]++;
  const totalTransactions =
  /* istanbul ignore next */
  (cov_cud1ux1t8().s[97]++, orders.length);
  const successfulPayments =
  /* istanbul ignore next */
  (cov_cud1ux1t8().s[98]++, orders.filter(o => {
    /* istanbul ignore next */
    cov_cud1ux1t8().f[11]++;
    cov_cud1ux1t8().s[99]++;
    return o.payment_status === 'approved';
  }).length);
  const failedPayments =
  /* istanbul ignore next */
  (cov_cud1ux1t8().s[100]++, orders.filter(o => {
    /* istanbul ignore next */
    cov_cud1ux1t8().f[12]++;
    cov_cud1ux1t8().s[101]++;
    return o.payment_status === 'rejected';
  }).length);
  const totalAmount =
  /* istanbul ignore next */
  (cov_cud1ux1t8().s[102]++, orders.reduce((sum, o) => {
    /* istanbul ignore next */
    cov_cud1ux1t8().f[13]++;
    cov_cud1ux1t8().s[103]++;
    return sum + (
    /* istanbul ignore next */
    (cov_cud1ux1t8().b[26][0]++, o.total_amount) ||
    /* istanbul ignore next */
    (cov_cud1ux1t8().b[26][1]++, 0));
  }, 0));
  /* istanbul ignore next */
  cov_cud1ux1t8().s[104]++;
  return {
    total_transactions: totalTransactions,
    total_amount: totalAmount,
    successful_payments: successfulPayments,
    failed_payments: failedPayments,
    refunds: 0,
    chargebacks: 0,
    average_ticket: totalTransactions > 0 ?
    /* istanbul ignore next */
    (cov_cud1ux1t8().b[27][0]++, totalAmount / totalTransactions) :
    /* istanbul ignore next */
    (cov_cud1ux1t8().b[27][1]++, 0),
    conversion_rate: totalTransactions > 0 ?
    /* istanbul ignore next */
    (cov_cud1ux1t8().b[28][0]++, successfulPayments / totalTransactions * 100) :
    /* istanbul ignore next */
    (cov_cud1ux1t8().b[28][1]++, 0)
  };
}
/**
 * Crea un reporte en MercadoPago (simulado)
 */
async function createMercadoPagoReport(type, dateFrom, dateTo, columns) {
  /* istanbul ignore next */
  cov_cud1ux1t8().f[14]++;
  // En una implementaciÃ³n real, aquÃ­ se harÃ­a la llamada a la API de MercadoPago
  // Por ahora simulamos la creaciÃ³n del reporte
  const reportId =
  /* istanbul ignore next */
  (cov_cud1ux1t8().s[105]++, `report_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`);
  /* istanbul ignore next */
  cov_cud1ux1t8().s[106]++;
  return {
    id: reportId,
    type: type,
    date_from: dateFrom,
    date_to: dateTo,
    status: 'pending',
    created_at: new Date().toISOString()
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,