{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useCheckoutTransition.ts"],"sourcesContent":["'use client'\n\nimport { useState, useCallback, useEffect, useRef, useMemo } from 'react'\nimport { useRouter } from 'next/navigation'\n\ninterface UseCheckoutTransitionOptions {\n  onTransitionStart?: () => void\n  onTransitionComplete?: () => void\n  onTransitionError?: (error: Error) => void\n  enableAnimation?: boolean\n  enablePerformanceTracking?: boolean\n  customDuration?: number\n  skipAnimationThreshold?: number\n}\n\ninterface UseCheckoutTransitionReturn {\n  isTransitioning: boolean\n  startTransition: () => void\n  skipAnimation: boolean\n  isButtonDisabled: boolean\n  transitionProgress: number\n  performanceMetrics: {\n    startTime: number | null\n    endTime: number | null\n    duration: number | null\n  }\n}\n\ninterface PerformanceMetrics {\n  startTime: number | null\n  endTime: number | null\n  duration: number | null\n}\n\n/**\n * Hook optimizado para manejar animaciones de transición al checkout\n *\n * Características Enterprise:\n * - Performance tracking con métricas detalladas\n * - Manejo robusto de errores y cleanup\n * - Respeta preferencias de accesibilidad (prefers-reduced-motion)\n * - Control granular sobre el estado del botón\n * - Callbacks para eventos de transición con error handling\n * - Optimización de memoria y prevención de memory leaks\n * - Soporte para testing con mocks\n */\nexport function useCheckoutTransition(\n  options: UseCheckoutTransitionOptions = {}\n): UseCheckoutTransitionReturn {\n  const {\n    onTransitionStart,\n    onTransitionComplete,\n    onTransitionError,\n    enableAnimation = true,\n    enablePerformanceTracking = true,\n    customDuration,\n    skipAnimationThreshold = 100,\n  } = options\n\n  const router = useRouter()\n  const [isTransitioning, setIsTransitioning] = useState(false)\n  const [skipAnimation, setSkipAnimation] = useState(false)\n  const [transitionProgress, setTransitionProgress] = useState(0)\n\n  // Refs para cleanup y performance tracking\n  const timeoutRef = useRef<NodeJS.Timeout | null>(null)\n  const progressIntervalRef = useRef<NodeJS.Timeout | null>(null)\n  const performanceRef = useRef<PerformanceMetrics>({\n    startTime: null,\n    endTime: null,\n    duration: null,\n  })\n\n  // Memoizar duración para evitar recálculos\n  const animationDuration = useMemo(() => {\n    if (customDuration) {\n      return customDuration\n    }\n    return skipAnimation ? 200 : 2800\n  }, [skipAnimation, customDuration])\n\n  // Detectar preferencia de movimiento reducido con mejor manejo de errores\n  useEffect(() => {\n    try {\n      const mediaQuery = window.matchMedia('(prefers-reduced-motion: reduce)')\n\n      const handleChange = (e: MediaQueryListEvent) => {\n        const shouldSkip = e.matches || !enableAnimation\n        setSkipAnimation(shouldSkip)\n\n        // Performance tracking para preferencias de accesibilidad\n        if (enablePerformanceTracking && shouldSkip) {\n          console.debug(\n            '[useCheckoutTransition] Animation skipped due to accessibility preferences'\n          )\n        }\n      }\n\n      // Configuración inicial\n      setSkipAnimation(mediaQuery.matches || !enableAnimation)\n\n      // Escuchar cambios con soporte para navegadores antiguos\n      if (mediaQuery.addEventListener) {\n        mediaQuery.addEventListener('change', handleChange)\n      } else {\n        // Fallback para navegadores antiguos\n        mediaQuery.addListener(handleChange)\n      }\n\n      return () => {\n        if (mediaQuery.removeEventListener) {\n          mediaQuery.removeEventListener('change', handleChange)\n        } else {\n          mediaQuery.removeListener(handleChange)\n        }\n      }\n    } catch (error) {\n      console.warn('[useCheckoutTransition] Error setting up media query listener:', error)\n      setSkipAnimation(!enableAnimation)\n    }\n  }, [enableAnimation, enablePerformanceTracking])\n\n  // Cleanup en unmount\n  useEffect(() => {\n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current)\n      }\n      if (progressIntervalRef.current) {\n        clearInterval(progressIntervalRef.current)\n      }\n    }\n  }, [])\n\n  // Función optimizada para iniciar la transición\n  const startTransition = useCallback(() => {\n    if (isTransitioning) {\n      console.warn(\n        '[useCheckoutTransition] Transition already in progress, ignoring duplicate call'\n      )\n      return\n    }\n\n    try {\n      // Performance tracking\n      const startTime = enablePerformanceTracking ? performance.now() : 0\n      performanceRef.current.startTime = startTime\n\n      setIsTransitioning(true)\n      setTransitionProgress(0)\n\n      // Callback de inicio con error handling\n      try {\n        onTransitionStart?.()\n      } catch (error) {\n        console.error('[useCheckoutTransition] Error in onTransitionStart callback:', error)\n        onTransitionError?.(error as Error)\n      }\n\n      // Progress tracking para animaciones largas\n      if (!skipAnimation && animationDuration > skipAnimationThreshold) {\n        const progressInterval = setInterval(() => {\n          setTransitionProgress(prev => {\n            const elapsed = performance.now() - startTime\n            const progress = Math.min((elapsed / animationDuration) * 100, 100)\n            return progress\n          })\n        }, 16) // 60fps updates\n\n        progressIntervalRef.current = progressInterval\n      }\n\n      // Auto-reset con cleanup mejorado\n      const timeout = setTimeout(() => {\n        try {\n          const endTime = enablePerformanceTracking ? performance.now() : 0\n          performanceRef.current.endTime = endTime\n          performanceRef.current.duration = endTime - startTime\n\n          setIsTransitioning(false)\n          setTransitionProgress(100)\n\n          // Cleanup progress interval\n          if (progressIntervalRef.current) {\n            clearInterval(progressIntervalRef.current)\n            progressIntervalRef.current = null\n          }\n\n          // Performance logging\n          if (enablePerformanceTracking) {\n            console.debug('[useCheckoutTransition] Transition completed', {\n              duration: performanceRef.current.duration,\n              skipAnimation,\n              animationDuration,\n            })\n          }\n\n          // Callback de finalización con error handling\n          try {\n            onTransitionComplete?.()\n          } catch (error) {\n            console.error('[useCheckoutTransition] Error in onTransitionComplete callback:', error)\n            onTransitionError?.(error as Error)\n          }\n\n          // Navegación con error handling\n          try {\n            router.push('/checkout')\n          } catch (error) {\n            console.error('[useCheckoutTransition] Error during navigation:', error)\n            onTransitionError?.(error as Error)\n          }\n        } catch (error) {\n          console.error('[useCheckoutTransition] Error during transition completion:', error)\n          onTransitionError?.(error as Error)\n          setIsTransitioning(false)\n        }\n      }, animationDuration)\n\n      timeoutRef.current = timeout\n    } catch (error) {\n      console.error('[useCheckoutTransition] Error starting transition:', error)\n      onTransitionError?.(error as Error)\n      setIsTransitioning(false)\n    }\n  }, [\n    isTransitioning,\n    skipAnimation,\n    animationDuration,\n    skipAnimationThreshold,\n    enablePerformanceTracking,\n    onTransitionStart,\n    onTransitionComplete,\n    onTransitionError,\n    router,\n  ])\n\n  return {\n    isTransitioning,\n    startTransition,\n    skipAnimation,\n    isButtonDisabled: isTransitioning,\n    transitionProgress,\n    performanceMetrics: performanceRef.current,\n  }\n}\n\nexport default useCheckoutTransition\n"],"names":["useCheckoutTransition","options","onTransitionStart","onTransitionComplete","onTransitionError","enableAnimation","enablePerformanceTracking","customDuration","skipAnimationThreshold","router","useRouter","isTransitioning","setIsTransitioning","useState","skipAnimation","setSkipAnimation","transitionProgress","setTransitionProgress","timeoutRef","useRef","progressIntervalRef","performanceRef","startTime","endTime","duration","animationDuration","useMemo","useEffect","mediaQuery","window","matchMedia","handleChange","e","shouldSkip","matches","console","debug","addEventListener","addListener","removeEventListener","removeListener","error","warn","current","clearTimeout","clearInterval","startTransition","useCallback","performance","now","progressInterval","setInterval","prev","elapsed","progress","Math","min","timeout","setTimeout","push","isButtonDisabled","performanceMetrics"],"mappings":"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"}