{"version":3,"names":["PerformanceTracker","cov_x0g14bkt0","f","s","default","_default","enabled","b","endpoint","trackBundleSize","getCurrentMetrics","isEnabled","_usePerformanceTracking","usePerformanceTracking","batchSize","flushInterval","_react","useEffect","isDevelopment","process","env","NODE_ENV","timer","setTimeout","error","console","warn","initialTimer","metrics","hasValidMetrics","Object","values","some","value","undefined","debug","clearTimeout"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\PerformanceTracker.tsx"],"sourcesContent":["// ===================================\r\n// PERFORMANCE TRACKER COMPONENT\r\n// Componente para tracking autom√°tico de performance\r\n// ===================================\r\n\r\n'use client';\r\n\r\nimport { useEffect } from 'react';\r\nimport { usePerformanceTracking } from '@/hooks/usePerformanceTracking';\r\n\r\ninterface PerformanceTrackerProps {\r\n  enabled?: boolean;\r\n  endpoint?: string;\r\n}\r\n\r\nexport const PerformanceTracker: React.FC<PerformanceTrackerProps> = ({\r\n  enabled = true,\r\n  endpoint = '/api/admin/performance/metrics'\r\n}) => {\r\n  const { trackBundleSize, getCurrentMetrics, isEnabled } = usePerformanceTracking({\r\n    enabled,\r\n    endpoint,\r\n    batchSize: 3, // Reducir batch size para evitar sobrecarga\r\n    flushInterval: 45000, // Aumentar intervalo a 45 segundos\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!isEnabled) {return;}\r\n\r\n    // Solo ejecutar en desarrollo para evitar spam en producci√≥n\r\n    const isDevelopment = process.env.NODE_ENV === 'development';\r\n    if (!isDevelopment) {return;}\r\n\r\n    // Trackear bundle size al cargar (con delay mayor)\r\n    const timer = setTimeout(() => {\r\n      try {\r\n        trackBundleSize();\r\n      } catch (error) {\r\n        console.warn('Error tracking bundle size:', error);\r\n      }\r\n    }, 3000);\r\n\r\n    // Trackear m√©tricas iniciales (sin log en consola)\r\n    const initialTimer = setTimeout(() => {\r\n      try {\r\n        const metrics = getCurrentMetrics();\r\n        // Remover log de consola para evitar spam\r\n        if (metrics && process.env.NODE_ENV === 'development') {\r\n          // Solo log en desarrollo y si hay m√©tricas v√°lidas\r\n          const hasValidMetrics = Object.values(metrics).some(value => \r\n            value !== undefined && value !== null && value > 0\r\n          );\r\n          if (hasValidMetrics) {\r\n            console.debug('üìä Performance metrics captured:', metrics);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.warn('Error getting current metrics:', error);\r\n      }\r\n    }, 2000);\r\n\r\n    return () => {\r\n      clearTimeout(timer);\r\n      clearTimeout(initialTimer);\r\n    };\r\n  }, [isEnabled, trackBundleSize, getCurrentMetrics]);\r\n\r\n  // Este componente no renderiza nada visible\r\n  return null;\r\n};\r\n\r\nexport default PerformanceTracker;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}