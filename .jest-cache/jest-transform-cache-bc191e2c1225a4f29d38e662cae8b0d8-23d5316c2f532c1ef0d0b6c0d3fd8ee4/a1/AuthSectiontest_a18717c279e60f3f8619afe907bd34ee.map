{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\Header\\__tests__\\AuthSection.test.tsx"],"sourcesContent":["/**\r\n * AuthSection Enterprise Test - Versión NextAuth\r\n * Enfocado en validar la nueva estructura NextAuth sin dependencias Clerk\r\n */\r\n\r\nimport React from 'react'\r\nimport { render, screen, fireEvent } from '@testing-library/react'\r\nimport { useSession, signIn } from 'next-auth/react'\r\nimport AuthSection from '../AuthSection'\r\n\r\n// Mock NextAuth\r\njest.mock('next-auth/react', () => ({\r\n  useSession: jest.fn(),\r\n  signIn: jest.fn()\r\n}))\r\n\r\nconst mockUseSession = useSession as jest.MockedFunction<typeof useSession>\r\nconst mockSignIn = signIn as jest.MockedFunction<typeof signIn>\r\n\r\n// Mock user data\r\nconst mockUser = {\r\n  id: 'user_123',\r\n  name: 'Juan Pérez',\r\n  email: 'juan@example.com'\r\n}\r\n\r\ndescribe('AuthSection Enterprise - NextAuth Structure', () => {\r\n  beforeEach(() => {\r\n    jest.clearAllMocks()\r\n  })\r\n\r\n  describe('Usuario no autenticado', () => {\r\n    beforeEach(() => {\r\n      mockUseSession.mockReturnValue({\r\n        data: null,\r\n        status: 'unauthenticated'\r\n      } as any)\r\n    })\r\n\r\n    it('debe renderizar botón de Google sign in', () => {\r\n      render(<AuthSection />)\r\n      \r\n      const button = screen.getByRole('button')\r\n      expect(button).toBeInTheDocument()\r\n      expect(button).toHaveClass('bg-white/20', 'hover:bg-white/30')\r\n    })\r\n\r\n    it('debe mostrar SVG de Google en el botón', () => {\r\n      render(<AuthSection />)\r\n      \r\n      const svg = screen.getByRole('button').querySelector('svg')\r\n      expect(svg).toBeInTheDocument()\r\n      expect(svg).toHaveClass('w-5', 'h-5')\r\n    })\r\n\r\n    it('debe llamar signIn cuando se hace click', () => {\r\n      render(<AuthSection />)\r\n      \r\n      const button = screen.getByRole('button')\r\n      fireEvent.click(button)\r\n      \r\n      expect(mockSignIn).toHaveBeenCalledWith('google')\r\n    })\r\n\r\n    it('debe tener estilos correctos para botón translúcido', () => {\r\n      render(<AuthSection />)\r\n      \r\n      const button = screen.getByRole('button')\r\n      expect(button).toHaveClass(\r\n        'backdrop-blur-sm',\r\n        'border-2',\r\n        'border-white/30',\r\n        'rounded-full',\r\n        'shadow-lg'\r\n      )\r\n    })\r\n  })\r\n\r\n  describe('Usuario autenticado', () => {\r\n    beforeEach(() => {\r\n      mockUseSession.mockReturnValue({\r\n        data: { user: mockUser },\r\n        status: 'authenticated'\r\n      } as any)\r\n    })\r\n\r\n    it('debe mostrar enlace de admin cuando está autenticado', () => {\r\n      render(<AuthSection />)\r\n      \r\n      const adminLink = screen.getByRole('link')\r\n      expect(adminLink).toBeInTheDocument()\r\n      expect(adminLink).toHaveAttribute('href', '/admin')\r\n    })\r\n\r\n    it('debe mostrar avatar del usuario', () => {\r\n      render(<AuthSection />)\r\n\r\n      const avatar = screen.getByText('J') // Primera letra de Juan\r\n      expect(avatar).toBeInTheDocument()\r\n      // Verificar que tiene un contenedor padre\r\n      expect(avatar.parentElement).toBeInTheDocument()\r\n    })\r\n\r\n    it('debe tener botón admin con estilos correctos', () => {\r\n      render(<AuthSection />)\r\n      \r\n      const adminLink = screen.getByRole('link')\r\n      expect(adminLink).toHaveClass(\r\n        'bg-orange-600',\r\n        'hover:bg-orange-700',\r\n        'text-white'\r\n      )\r\n    })\r\n\r\n    it('debe mostrar texto Admin en desktop', () => {\r\n      render(<AuthSection />)\r\n      \r\n      const adminText = screen.getByText('Admin')\r\n      expect(adminText).toBeInTheDocument()\r\n    })\r\n  })\r\n\r\n  describe('Estado de carga', () => {\r\n    beforeEach(() => {\r\n      mockUseSession.mockReturnValue({\r\n        data: null,\r\n        status: 'loading'\r\n      } as any)\r\n    })\r\n\r\n    it('debe mostrar skeleton de carga', () => {\r\n      render(<AuthSection />)\r\n      \r\n      const skeleton = screen.getByText((content, element) => {\r\n        return element?.classList.contains('animate-pulse') || false\r\n      })\r\n      expect(skeleton).toBeInTheDocument()\r\n    })\r\n  })\r\n\r\n  describe('Variantes del componente', () => {\r\n    beforeEach(() => {\r\n      mockUseSession.mockReturnValue({\r\n        data: null,\r\n        status: 'unauthenticated'\r\n      } as any)\r\n    })\r\n\r\n    it('debe renderizar variante mobile correctamente', () => {\r\n      render(<AuthSection variant=\"mobile\" />)\r\n      \r\n      const button = screen.getByRole('button')\r\n      expect(button).toHaveClass('hover:scale-110')\r\n    })\r\n\r\n    it('debe renderizar variante topbar con texto', () => {\r\n      render(<AuthSection variant=\"topbar\" />)\r\n      \r\n      const button = screen.getByText('Iniciar Sesión')\r\n      expect(button).toBeInTheDocument()\r\n      expect(button).toHaveClass('text-gray-800')\r\n    })\r\n\r\n    it('debe renderizar variante default con efectos', () => {\r\n      render(<AuthSection variant=\"default\" />)\r\n      \r\n      const button = screen.getByRole('button')\r\n      expect(button).toHaveClass('hover:scale-105')\r\n    })\r\n  })\r\n\r\n  describe('Variante mobile autenticado', () => {\r\n    beforeEach(() => {\r\n      mockUseSession.mockReturnValue({\r\n        data: { user: mockUser },\r\n        status: 'authenticated'\r\n      } as any)\r\n    })\r\n\r\n    it('debe mostrar botón admin y avatar en mobile', () => {\r\n      render(<AuthSection variant=\"mobile\" />)\r\n      \r\n      const adminLink = screen.getByRole('link')\r\n      const avatar = screen.getByText('J')\r\n      \r\n      expect(adminLink).toHaveAttribute('href', '/admin')\r\n      expect(avatar).toBeInTheDocument()\r\n    })\r\n  })\r\n\r\n  describe('Variante topbar autenticado', () => {\r\n    beforeEach(() => {\r\n      mockUseSession.mockReturnValue({\r\n        data: { user: mockUser },\r\n        status: 'authenticated'\r\n      } as any)\r\n    })\r\n\r\n    it('debe mostrar solo avatar en topbar', () => {\r\n      render(<AuthSection variant=\"topbar\" />)\r\n\r\n      const avatar = screen.getByText('J')\r\n      expect(avatar).toBeInTheDocument()\r\n      // Verificar que tiene un contenedor padre apropiado\r\n      expect(avatar.parentElement).toBeInTheDocument()\r\n    })\r\n  })\r\n\r\n  describe('Accesibilidad básica', () => {\r\n    beforeEach(() => {\r\n      mockUseSession.mockReturnValue({\r\n        data: null,\r\n        status: 'unauthenticated'\r\n      } as any)\r\n    })\r\n\r\n    it('debe ser accesible por teclado', () => {\r\n      render(<AuthSection />)\r\n      \r\n      const button = screen.getByRole('button')\r\n      button.focus()\r\n      expect(document.activeElement).toBe(button)\r\n    })\r\n\r\n    it('debe tener rol de botón correcto', () => {\r\n      render(<AuthSection />)\r\n      \r\n      const button = screen.getByRole('button')\r\n      expect(button).toBeInTheDocument()\r\n    })\r\n  })\r\n\r\n  describe('Colores de Google branding', () => {\r\n    beforeEach(() => {\r\n      mockUseSession.mockReturnValue({\r\n        data: null,\r\n        status: 'unauthenticated'\r\n      } as any)\r\n    })\r\n\r\n    it('debe tener colores correctos de Google en SVG', () => {\r\n      render(<AuthSection />)\r\n      \r\n      const svg = screen.getByRole('button').querySelector('svg')\r\n      const paths = svg?.querySelectorAll('path')\r\n      \r\n      expect(paths).toHaveLength(4)\r\n      \r\n      const colors = Array.from(paths || []).map(path => path.getAttribute('fill'))\r\n      expect(colors).toContain('#4285F4') // Google Blue\r\n      expect(colors).toContain('#34A853') // Google Green\r\n      expect(colors).toContain('#FBBC05') // Google Yellow\r\n      expect(colors).toContain('#EA4335') // Google Red\r\n    })\r\n  })\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["jest","mock","useSession","fn","signIn","mockUseSession","mockSignIn","mockUser","id","name","email","describe","beforeEach","clearAllMocks","mockReturnValue","data","status","it","render","AuthSection","button","screen","getByRole","expect","toBeInTheDocument","toHaveClass","svg","querySelector","fireEvent","click","toHaveBeenCalledWith","user","adminLink","toHaveAttribute","avatar","getByText","parentElement","adminText","skeleton","content","element","classList","contains","variant","focus","document","activeElement","toBe","paths","querySelectorAll","toHaveLength","colors","Array","from","map","path","getAttribute","toContain"],"mappings":"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"}