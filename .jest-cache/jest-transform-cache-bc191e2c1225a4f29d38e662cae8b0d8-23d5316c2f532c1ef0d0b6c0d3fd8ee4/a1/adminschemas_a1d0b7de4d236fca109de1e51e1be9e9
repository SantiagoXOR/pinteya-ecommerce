f7f1cf6211ec9778fc42f80f3ce496f6
// ğŸ”§ Enterprise Validation Schemas
"use strict";

/* istanbul ignore next */
function cov_wk84njj5r() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\validation\\admin-schemas.ts";
  var hash = "b5c4059aec21e61f66da31b3184958cd99abe26f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\validation\\admin-schemas.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 25,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 36
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 35
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 29
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 30
        }
      },
      "8": {
        start: {
          line: 26,
          column: 13
        },
        end: {
          line: 26,
          column: 27
        }
      },
      "9": {
        start: {
          line: 27,
          column: 16
        },
        end: {
          line: 27,
          column: 38
        }
      },
      "10": {
        start: {
          line: 28,
          column: 22
        },
        end: {
          line: 50,
          column: 2
        }
      },
      "11": {
        start: {
          line: 51,
          column: 29
        },
        end: {
          line: 70,
          column: 2
        }
      },
      "12": {
        start: {
          line: 71,
          column: 28
        },
        end: {
          line: 73,
          column: 2
        }
      },
      "13": {
        start: {
          line: 75,
          column: 4
        },
        end: {
          line: 125,
          column: 6
        }
      },
      "14": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 124,
          column: 10
        }
      },
      "15": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 123,
          column: 13
        }
      },
      "16": {
        start: {
          line: 79,
          column: 16
        },
        end: {
          line: 96,
          column: 17
        }
      },
      "17": {
        start: {
          line: 81,
          column: 45
        },
        end: {
          line: 81,
          column: 65
        }
      },
      "18": {
        start: {
          line: 82,
          column: 20
        },
        end: {
          line: 82,
          column: 70
        }
      },
      "19": {
        start: {
          line: 84,
          column: 20
        },
        end: {
          line: 92,
          column: 23
        }
      },
      "20": {
        start: {
          line: 85,
          column: 24
        },
        end: {
          line: 91,
          column: 25
        }
      },
      "21": {
        start: {
          line: 86,
          column: 28
        },
        end: {
          line: 86,
          column: 45
        }
      },
      "22": {
        start: {
          line: 87,
          column: 31
        },
        end: {
          line: 91,
          column: 25
        }
      },
      "23": {
        start: {
          line: 88,
          column: 28
        },
        end: {
          line: 88,
          column: 46
        }
      },
      "24": {
        start: {
          line: 89,
          column: 31
        },
        end: {
          line: 91,
          column: 25
        }
      },
      "25": {
        start: {
          line: 90,
          column: 28
        },
        end: {
          line: 90,
          column: 58
        }
      },
      "26": {
        start: {
          line: 95,
          column: 20
        },
        end: {
          line: 95,
          column: 48
        }
      },
      "27": {
        start: {
          line: 97,
          column: 41
        },
        end: {
          line: 97,
          column: 63
        }
      },
      "28": {
        start: {
          line: 98,
          column: 16
        },
        end: {
          line: 109,
          column: 17
        }
      },
      "29": {
        start: {
          line: 99,
          column: 20
        },
        end: {
          line: 108,
          column: 23
        }
      },
      "30": {
        start: {
          line: 110,
          column: 16
        },
        end: {
          line: 110,
          column: 62
        }
      },
      "31": {
        start: {
          line: 111,
          column: 16
        },
        end: {
          line: 111,
          column: 55
        }
      },
      "32": {
        start: {
          line: 113,
          column: 16
        },
        end: {
          line: 113,
          column: 69
        }
      },
      "33": {
        start: {
          line: 114,
          column: 16
        },
        end: {
          line: 122,
          column: 19
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 32
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 31
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 25
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 26
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "withValidation",
        decl: {
          start: {
            line: 74,
            column: 9
          },
          end: {
            line: 74,
            column: 23
          }
        },
        loc: {
          start: {
            line: 74,
            column: 32
          },
          end: {
            line: 126,
            column: 1
          }
        },
        line: 74
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 75,
            column: 11
          },
          end: {
            line: 75,
            column: 12
          }
        },
        loc: {
          start: {
            line: 75,
            column: 29
          },
          end: {
            line: 125,
            column: 5
          }
        },
        line: 75
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 76,
            column: 15
          },
          end: {
            line: 76,
            column: 16
          }
        },
        loc: {
          start: {
            line: 76,
            column: 48
          },
          end: {
            line: 124,
            column: 9
          }
        },
        line: 76
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 84,
            column: 46
          },
          end: {
            line: 84,
            column: 47
          }
        },
        loc: {
          start: {
            line: 84,
            column: 53
          },
          end: {
            line: 92,
            column: 21
          }
        },
        line: 84
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 79,
            column: 16
          },
          end: {
            line: 96,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 79,
            column: 16
          },
          end: {
            line: 96,
            column: 17
          }
        }, {
          start: {
            line: 93,
            column: 23
          },
          end: {
            line: 96,
            column: 17
          }
        }],
        line: 79
      },
      "1": {
        loc: {
          start: {
            line: 85,
            column: 24
          },
          end: {
            line: 91,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 24
          },
          end: {
            line: 91,
            column: 25
          }
        }, {
          start: {
            line: 87,
            column: 31
          },
          end: {
            line: 91,
            column: 25
          }
        }],
        line: 85
      },
      "2": {
        loc: {
          start: {
            line: 87,
            column: 31
          },
          end: {
            line: 91,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 31
          },
          end: {
            line: 91,
            column: 25
          }
        }, {
          start: {
            line: 89,
            column: 31
          },
          end: {
            line: 91,
            column: 25
          }
        }],
        line: 87
      },
      "3": {
        loc: {
          start: {
            line: 89,
            column: 31
          },
          end: {
            line: 91,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 89,
            column: 31
          },
          end: {
            line: 91,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 89
      },
      "4": {
        loc: {
          start: {
            line: 89,
            column: 35
          },
          end: {
            line: 89,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 89,
            column: 35
          },
          end: {
            line: 89,
            column: 60
          }
        }, {
          start: {
            line: 89,
            column: 64
          },
          end: {
            line: 89,
            column: 80
          }
        }],
        line: 89
      },
      "5": {
        loc: {
          start: {
            line: 98,
            column: 16
          },
          end: {
            line: 109,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 16
          },
          end: {
            line: 109,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 98
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\validation\\admin-schemas.ts"],
      sourcesContent: ["// \uD83D\uDD27 Enterprise Validation Schemas\r\n\r\nimport { z } from 'zod';\r\nimport { NextRequest, NextResponse } from 'next/server';\r\n\r\nexport const ProductSchema = z.object({\r\n  name: z.string().min(1, 'Nombre requerido').max(255),\r\n  description: z.string().optional(),\r\n  short_description: z.string().max(500).optional(),\r\n  price: z.number().positive('Precio debe ser positivo'),\r\n  discounted_price: z.number().positive().optional(),\r\n  stock: z.number().int().min(0, 'Stock no puede ser negativo'),\r\n  low_stock_threshold: z.number().int().min(0).optional(),\r\n  category_id: z.string().uuid('ID de categor\xEDa inv\xE1lido'),\r\n  brand: z.string().optional(),\r\n  images: z.array(z.object({\r\n    url: z.string().url(),\r\n    alt_text: z.string().optional(),\r\n    is_primary: z.boolean().default(false)\r\n  })).optional(),\r\n  is_active: z.boolean().default(true),\r\n  is_featured: z.boolean().default(false),\r\n  status: z.enum(['active', 'inactive', 'draft']).default('draft')\r\n});\r\n\r\nexport const ProductFiltersSchema = z.object({\r\n  page: z.coerce.number().int().positive().default(1),\r\n  limit: z.coerce.number().int().min(1).max(100).default(10),\r\n  search: z.string().optional(),\r\n  category_id: z.string().uuid().optional(),\r\n  is_active: z.boolean().optional(),\r\n  is_featured: z.boolean().optional(),\r\n  price_min: z.coerce.number().positive().optional(),\r\n  price_max: z.coerce.number().positive().optional(),\r\n  sort_by: z.enum(['name', 'price', 'stock', 'created_at']).default('created_at'),\r\n  sort_order: z.enum(['asc', 'desc']).default('desc')\r\n});\r\n\r\nexport const ProductParamsSchema = z.object({\r\n  id: z.string().uuid('ID de producto inv\xE1lido')\r\n});\r\n\r\n// Middleware de validaci\xF3n\r\nexport function withValidation(schema: z.ZodSchema) {\r\n  return function (handler: Function) {\r\n    return async function (request: NextRequest, context: any) {\r\n      try {\r\n        let data;\r\n        \r\n        if (request.method === 'GET') {\r\n          // Validar query parameters\r\n          const { searchParams } = new URL(request.url);\r\n          data = Object.fromEntries(searchParams.entries());\r\n          \r\n          // Convertir tipos para n\xFAmeros y booleans\r\n          Object.keys(data).forEach(key => {\r\n            if (data[key] === 'true') {data[key] = true;}\r\n            else if (data[key] === 'false') {data[key] = false;}\r\n            else if (!isNaN(Number(data[key])) && data[key] !== '') {\r\n              data[key] = Number(data[key]);\r\n            }\r\n          });\r\n        } else {\r\n          // Validar body para POST/PUT\r\n          data = await request.json();\r\n        }\r\n\r\n        const validationResult = schema.safeParse(data);\r\n\r\n        if (!validationResult.success) {\r\n          return NextResponse.json(\r\n            {\r\n              success: false,\r\n              error: 'Datos de entrada inv\xE1lidos',\r\n              code: 'VALIDATION_ERROR',\r\n              details: validationResult.error.errors,\r\n              timestamp: new Date().toISOString(),\r\n              path: request.url\r\n            },\r\n            { status: 422 }\r\n          );\r\n        }\r\n\r\n        (request as any).validatedData = validationResult.data;\r\n        return await handler(request, context);\r\n      } catch (error) {\r\n        console.error('Validation middleware error:', error);\r\n        return NextResponse.json(\r\n          {\r\n            success: false,\r\n            error: 'Error de validaci\xF3n',\r\n            code: 'VALIDATION_MIDDLEWARE_ERROR',\r\n            timestamp: new Date().toISOString(),\r\n            path: request.url\r\n          },\r\n          { status: 500 }\r\n        );\r\n      }\r\n    };\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["ProductFiltersSchema", "ProductParamsSchema", "ProductSchema", "withValidation", "z", "object", "name", "string", "min", "max", "description", "optional", "short_description", "price", "number", "positive", "discounted_price", "stock", "int", "low_stock_threshold", "category_id", "uuid", "brand", "images", "array", "url", "alt_text", "is_primary", "boolean", "default", "is_active", "is_featured", "status", "enum", "page", "coerce", "limit", "search", "price_min", "price_max", "sort_by", "sort_order", "id", "schema", "handler", "request", "context", "data", "method", "searchParams", "URL", "Object", "fromEntries", "entries", "keys", "forEach", "key", "isNaN", "Number", "json", "validationResult", "safeParse", "success", "NextResponse", "error", "code", "details", "errors", "timestamp", "Date", "toISOString", "path", "validatedData", "console"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b5c4059aec21e61f66da31b3184958cd99abe26f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_wk84njj5r = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_wk84njj5r();
cov_wk84njj5r().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_wk84njj5r().f[0]++;
  cov_wk84njj5r().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_wk84njj5r().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_wk84njj5r().s[3]++;
_export(exports, {
  get ProductFiltersSchema() {
    /* istanbul ignore next */
    cov_wk84njj5r().f[1]++;
    cov_wk84njj5r().s[4]++;
    return ProductFiltersSchema;
  },
  get ProductParamsSchema() {
    /* istanbul ignore next */
    cov_wk84njj5r().f[2]++;
    cov_wk84njj5r().s[5]++;
    return ProductParamsSchema;
  },
  get ProductSchema() {
    /* istanbul ignore next */
    cov_wk84njj5r().f[3]++;
    cov_wk84njj5r().s[6]++;
    return ProductSchema;
  },
  get withValidation() {
    /* istanbul ignore next */
    cov_wk84njj5r().f[4]++;
    cov_wk84njj5r().s[7]++;
    return withValidation;
  }
});
const _zod =
/* istanbul ignore next */
(cov_wk84njj5r().s[8]++, require("zod"));
const _server =
/* istanbul ignore next */
(cov_wk84njj5r().s[9]++, require("next/server"));
const ProductSchema =
/* istanbul ignore next */
(cov_wk84njj5r().s[10]++, _zod.z.object({
  name: _zod.z.string().min(1, 'Nombre requerido').max(255),
  description: _zod.z.string().optional(),
  short_description: _zod.z.string().max(500).optional(),
  price: _zod.z.number().positive('Precio debe ser positivo'),
  discounted_price: _zod.z.number().positive().optional(),
  stock: _zod.z.number().int().min(0, 'Stock no puede ser negativo'),
  low_stock_threshold: _zod.z.number().int().min(0).optional(),
  category_id: _zod.z.string().uuid('ID de categorÃ­a invÃ¡lido'),
  brand: _zod.z.string().optional(),
  images: _zod.z.array(_zod.z.object({
    url: _zod.z.string().url(),
    alt_text: _zod.z.string().optional(),
    is_primary: _zod.z.boolean().default(false)
  })).optional(),
  is_active: _zod.z.boolean().default(true),
  is_featured: _zod.z.boolean().default(false),
  status: _zod.z.enum(['active', 'inactive', 'draft']).default('draft')
}));
const ProductFiltersSchema =
/* istanbul ignore next */
(cov_wk84njj5r().s[11]++, _zod.z.object({
  page: _zod.z.coerce.number().int().positive().default(1),
  limit: _zod.z.coerce.number().int().min(1).max(100).default(10),
  search: _zod.z.string().optional(),
  category_id: _zod.z.string().uuid().optional(),
  is_active: _zod.z.boolean().optional(),
  is_featured: _zod.z.boolean().optional(),
  price_min: _zod.z.coerce.number().positive().optional(),
  price_max: _zod.z.coerce.number().positive().optional(),
  sort_by: _zod.z.enum(['name', 'price', 'stock', 'created_at']).default('created_at'),
  sort_order: _zod.z.enum(['asc', 'desc']).default('desc')
}));
const ProductParamsSchema =
/* istanbul ignore next */
(cov_wk84njj5r().s[12]++, _zod.z.object({
  id: _zod.z.string().uuid('ID de producto invÃ¡lido')
}));
function withValidation(schema) {
  /* istanbul ignore next */
  cov_wk84njj5r().f[5]++;
  cov_wk84njj5r().s[13]++;
  return function (handler) {
    /* istanbul ignore next */
    cov_wk84njj5r().f[6]++;
    cov_wk84njj5r().s[14]++;
    return async function (request, context) {
      /* istanbul ignore next */
      cov_wk84njj5r().f[7]++;
      cov_wk84njj5r().s[15]++;
      try {
        let data;
        /* istanbul ignore next */
        cov_wk84njj5r().s[16]++;
        if (request.method === 'GET') {
          /* istanbul ignore next */
          cov_wk84njj5r().b[0][0]++;
          // Validar query parameters
          const {
            searchParams
          } =
          /* istanbul ignore next */
          (cov_wk84njj5r().s[17]++, new URL(request.url));
          /* istanbul ignore next */
          cov_wk84njj5r().s[18]++;
          data = Object.fromEntries(searchParams.entries());
          // Convertir tipos para nÃºmeros y booleans
          /* istanbul ignore next */
          cov_wk84njj5r().s[19]++;
          Object.keys(data).forEach(key => {
            /* istanbul ignore next */
            cov_wk84njj5r().f[8]++;
            cov_wk84njj5r().s[20]++;
            if (data[key] === 'true') {
              /* istanbul ignore next */
              cov_wk84njj5r().b[1][0]++;
              cov_wk84njj5r().s[21]++;
              data[key] = true;
            } else {
              /* istanbul ignore next */
              cov_wk84njj5r().b[1][1]++;
              cov_wk84njj5r().s[22]++;
              if (data[key] === 'false') {
                /* istanbul ignore next */
                cov_wk84njj5r().b[2][0]++;
                cov_wk84njj5r().s[23]++;
                data[key] = false;
              } else {
                /* istanbul ignore next */
                cov_wk84njj5r().b[2][1]++;
                cov_wk84njj5r().s[24]++;
                if (
                /* istanbul ignore next */
                (cov_wk84njj5r().b[4][0]++, !isNaN(Number(data[key]))) &&
                /* istanbul ignore next */
                (cov_wk84njj5r().b[4][1]++, data[key] !== '')) {
                  /* istanbul ignore next */
                  cov_wk84njj5r().b[3][0]++;
                  cov_wk84njj5r().s[25]++;
                  data[key] = Number(data[key]);
                } else
                /* istanbul ignore next */
                {
                  cov_wk84njj5r().b[3][1]++;
                }
              }
            }
          });
        } else {
          /* istanbul ignore next */
          cov_wk84njj5r().b[0][1]++;
          cov_wk84njj5r().s[26]++;
          // Validar body para POST/PUT
          data = await request.json();
        }
        const validationResult =
        /* istanbul ignore next */
        (cov_wk84njj5r().s[27]++, schema.safeParse(data));
        /* istanbul ignore next */
        cov_wk84njj5r().s[28]++;
        if (!validationResult.success) {
          /* istanbul ignore next */
          cov_wk84njj5r().b[5][0]++;
          cov_wk84njj5r().s[29]++;
          return _server.NextResponse.json({
            success: false,
            error: 'Datos de entrada invÃ¡lidos',
            code: 'VALIDATION_ERROR',
            details: validationResult.error.errors,
            timestamp: new Date().toISOString(),
            path: request.url
          }, {
            status: 422
          });
        } else
        /* istanbul ignore next */
        {
          cov_wk84njj5r().b[5][1]++;
        }
        cov_wk84njj5r().s[30]++;
        request.validatedData = validationResult.data;
        /* istanbul ignore next */
        cov_wk84njj5r().s[31]++;
        return await handler(request, context);
      } catch (error) {
        /* istanbul ignore next */
        cov_wk84njj5r().s[32]++;
        console.error('Validation middleware error:', error);
        /* istanbul ignore next */
        cov_wk84njj5r().s[33]++;
        return _server.NextResponse.json({
          success: false,
          error: 'Error de validaciÃ³n',
          code: 'VALIDATION_MIDDLEWARE_ERROR',
          timestamp: new Date().toISOString(),
          path: request.url
        }, {
          status: 500
        });
      }
    };
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,