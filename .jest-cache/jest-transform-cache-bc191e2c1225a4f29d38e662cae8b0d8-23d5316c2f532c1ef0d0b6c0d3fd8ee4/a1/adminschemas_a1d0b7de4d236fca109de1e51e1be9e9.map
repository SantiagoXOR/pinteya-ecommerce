{"version":3,"names":["cov_wk84njj5r","actualCoverage","s","ProductFiltersSchema","f","ProductParamsSchema","ProductSchema","withValidation","_zod","z","object","name","string","min","max","description","optional","short_description","price","number","positive","discounted_price","stock","int","low_stock_threshold","category_id","uuid","brand","images","array","url","alt_text","is_primary","boolean","default","is_active","is_featured","status","enum","page","coerce","limit","search","price_min","price_max","sort_by","sort_order","id","schema","handler","request","context","data","method","b","searchParams","URL","Object","fromEntries","entries","keys","forEach","key","isNaN","Number","json","validationResult","safeParse","success","_server","NextResponse","error","code","details","errors","timestamp","Date","toISOString","path","validatedData","console"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\validation\\admin-schemas.ts"],"sourcesContent":["// 游댢 Enterprise Validation Schemas\r\n\r\nimport { z } from 'zod';\r\nimport { NextRequest, NextResponse } from 'next/server';\r\n\r\nexport const ProductSchema = z.object({\r\n  name: z.string().min(1, 'Nombre requerido').max(255),\r\n  description: z.string().optional(),\r\n  short_description: z.string().max(500).optional(),\r\n  price: z.number().positive('Precio debe ser positivo'),\r\n  discounted_price: z.number().positive().optional(),\r\n  stock: z.number().int().min(0, 'Stock no puede ser negativo'),\r\n  low_stock_threshold: z.number().int().min(0).optional(),\r\n  category_id: z.string().uuid('ID de categor칤a inv치lido'),\r\n  brand: z.string().optional(),\r\n  images: z.array(z.object({\r\n    url: z.string().url(),\r\n    alt_text: z.string().optional(),\r\n    is_primary: z.boolean().default(false)\r\n  })).optional(),\r\n  is_active: z.boolean().default(true),\r\n  is_featured: z.boolean().default(false),\r\n  status: z.enum(['active', 'inactive', 'draft']).default('draft')\r\n});\r\n\r\nexport const ProductFiltersSchema = z.object({\r\n  page: z.coerce.number().int().positive().default(1),\r\n  limit: z.coerce.number().int().min(1).max(100).default(10),\r\n  search: z.string().optional(),\r\n  category_id: z.string().uuid().optional(),\r\n  is_active: z.boolean().optional(),\r\n  is_featured: z.boolean().optional(),\r\n  price_min: z.coerce.number().positive().optional(),\r\n  price_max: z.coerce.number().positive().optional(),\r\n  sort_by: z.enum(['name', 'price', 'stock', 'created_at']).default('created_at'),\r\n  sort_order: z.enum(['asc', 'desc']).default('desc')\r\n});\r\n\r\nexport const ProductParamsSchema = z.object({\r\n  id: z.string().uuid('ID de producto inv치lido')\r\n});\r\n\r\n// Middleware de validaci칩n\r\nexport function withValidation(schema: z.ZodSchema) {\r\n  return function (handler: Function) {\r\n    return async function (request: NextRequest, context: any) {\r\n      try {\r\n        let data;\r\n        \r\n        if (request.method === 'GET') {\r\n          // Validar query parameters\r\n          const { searchParams } = new URL(request.url);\r\n          data = Object.fromEntries(searchParams.entries());\r\n          \r\n          // Convertir tipos para n칰meros y booleans\r\n          Object.keys(data).forEach(key => {\r\n            if (data[key] === 'true') {data[key] = true;}\r\n            else if (data[key] === 'false') {data[key] = false;}\r\n            else if (!isNaN(Number(data[key])) && data[key] !== '') {\r\n              data[key] = Number(data[key]);\r\n            }\r\n          });\r\n        } else {\r\n          // Validar body para POST/PUT\r\n          data = await request.json();\r\n        }\r\n\r\n        const validationResult = schema.safeParse(data);\r\n\r\n        if (!validationResult.success) {\r\n          return NextResponse.json(\r\n            {\r\n              success: false,\r\n              error: 'Datos de entrada inv치lidos',\r\n              code: 'VALIDATION_ERROR',\r\n              details: validationResult.error.errors,\r\n              timestamp: new Date().toISOString(),\r\n              path: request.url\r\n            },\r\n            { status: 422 }\r\n          );\r\n        }\r\n\r\n        (request as any).validatedData = validationResult.data;\r\n        return await handler(request, context);\r\n      } catch (error) {\r\n        console.error('Validation middleware error:', error);\r\n        return NextResponse.json(\r\n          {\r\n            success: false,\r\n            error: 'Error de validaci칩n',\r\n            code: 'VALIDATION_MIDDLEWARE_ERROR',\r\n            timestamp: new Date().toISOString(),\r\n            path: request.url\r\n          },\r\n          { status: 500 }\r\n        );\r\n      }\r\n    };\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}