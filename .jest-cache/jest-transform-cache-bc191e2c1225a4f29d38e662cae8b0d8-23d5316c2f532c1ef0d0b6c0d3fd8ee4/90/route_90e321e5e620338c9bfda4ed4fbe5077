cfc5aaf980a32710b8c0aa6bfa464d15
// ===================================
// PINTEYA E-COMMERCE - API DE PRODUCTO INDIVIDUAL
// ===================================
"use strict";

/* istanbul ignore next */
function cov_cgqt8xve3() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\products\\[id]\\route.ts";
  var hash = "2b5df2a298aa8b1837783480e82ddee3c9f45550";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\products\\[id]\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "2": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "3": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 24,
          column: 3
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 22
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 19
        }
      },
      "6": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 19
        }
      },
      "7": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 38
        }
      },
      "8": {
        start: {
          line: 26,
          column: 18
        },
        end: {
          line: 26,
          column: 66
        }
      },
      "9": {
        start: {
          line: 27,
          column: 21
        },
        end: {
          line: 27,
          column: 59
        }
      },
      "10": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 90,
          column: 5
        }
      },
      "11": {
        start: {
          line: 30,
          column: 23
        },
        end: {
          line: 30,
          column: 43
        }
      },
      "12": {
        start: {
          line: 32,
          column: 19
        },
        end: {
          line: 32,
          column: 42
        }
      },
      "13": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 42,
          column: 9
        }
      },
      "14": {
        start: {
          line: 34,
          column: 34
        },
        end: {
          line: 38,
          column: 13
        }
      },
      "15": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 41,
          column: 15
        }
      },
      "16": {
        start: {
          line: 43,
          column: 25
        },
        end: {
          line: 43,
          column: 59
        }
      },
      "17": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 55,
          column: 9
        }
      },
      "18": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 46,
          column: 89
        }
      },
      "19": {
        start: {
          line: 47,
          column: 34
        },
        end: {
          line: 51,
          column: 13
        }
      },
      "20": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 54,
          column: 15
        }
      },
      "21": {
        start: {
          line: 57,
          column: 41
        },
        end: {
          line: 60,
          column: 30
        }
      },
      "22": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 73,
          column: 9
        }
      },
      "23": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 71,
          column: 13
        }
      },
      "24": {
        start: {
          line: 63,
          column: 41
        },
        end: {
          line: 67,
          column: 17
        }
      },
      "25": {
        start: {
          line: 68,
          column: 16
        },
        end: {
          line: 70,
          column: 19
        }
      },
      "26": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 81
        }
      },
      "27": {
        start: {
          line: 74,
          column: 25
        },
        end: {
          line: 78,
          column: 9
        }
      },
      "28": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 51
        }
      },
      "29": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 81,
          column: 65
        }
      },
      "30": {
        start: {
          line: 82,
          column: 30
        },
        end: {
          line: 86,
          column: 9
        }
      },
      "31": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 89,
          column: 11
        }
      },
      "32": {
        start: {
          line: 93,
          column: 4
        },
        end: {
          line: 162,
          column: 5
        }
      },
      "33": {
        start: {
          line: 94,
          column: 23
        },
        end: {
          line: 94,
          column: 43
        }
      },
      "34": {
        start: {
          line: 101,
          column: 19
        },
        end: {
          line: 101,
          column: 42
        }
      },
      "35": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 111,
          column: 9
        }
      },
      "36": {
        start: {
          line: 103,
          column: 34
        },
        end: {
          line: 107,
          column: 13
        }
      },
      "37": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 110,
          column: 15
        }
      },
      "38": {
        start: {
          line: 112,
          column: 21
        },
        end: {
          line: 112,
          column: 41
        }
      },
      "39": {
        start: {
          line: 114,
          column: 28
        },
        end: {
          line: 114,
          column: 102
        }
      },
      "40": {
        start: {
          line: 115,
          column: 25
        },
        end: {
          line: 115,
          column: 63
        }
      },
      "41": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 127,
          column: 9
        }
      },
      "42": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 118,
          column: 104
        }
      },
      "43": {
        start: {
          line: 119,
          column: 34
        },
        end: {
          line: 123,
          column: 13
        }
      },
      "44": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 126,
          column: 15
        }
      },
      "45": {
        start: {
          line: 129,
          column: 41
        },
        end: {
          line: 132,
          column: 17
        }
      },
      "46": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 145,
          column: 9
        }
      },
      "47": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 143,
          column: 13
        }
      },
      "48": {
        start: {
          line: 135,
          column: 41
        },
        end: {
          line: 139,
          column: 17
        }
      },
      "49": {
        start: {
          line: 140,
          column: 16
        },
        end: {
          line: 142,
          column: 19
        }
      },
      "50": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 144,
          column: 81
        }
      },
      "51": {
        start: {
          line: 146,
          column: 25
        },
        end: {
          line: 150,
          column: 9
        }
      },
      "52": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 151,
          column: 51
        }
      },
      "53": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 153,
          column: 65
        }
      },
      "54": {
        start: {
          line: 154,
          column: 30
        },
        end: {
          line: 158,
          column: 9
        }
      },
      "55": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 161,
          column: 11
        }
      },
      "56": {
        start: {
          line: 165,
          column: 4
        },
        end: {
          line: 218,
          column: 5
        }
      },
      "57": {
        start: {
          line: 166,
          column: 23
        },
        end: {
          line: 166,
          column: 43
        }
      },
      "58": {
        start: {
          line: 173,
          column: 19
        },
        end: {
          line: 173,
          column: 42
        }
      },
      "59": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 183,
          column: 9
        }
      },
      "60": {
        start: {
          line: 175,
          column: 34
        },
        end: {
          line: 179,
          column: 13
        }
      },
      "61": {
        start: {
          line: 180,
          column: 12
        },
        end: {
          line: 182,
          column: 15
        }
      },
      "62": {
        start: {
          line: 184,
          column: 25
        },
        end: {
          line: 184,
          column: 63
        }
      },
      "63": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 196,
          column: 9
        }
      },
      "64": {
        start: {
          line: 187,
          column: 12
        },
        end: {
          line: 187,
          column: 107
        }
      },
      "65": {
        start: {
          line: 188,
          column: 34
        },
        end: {
          line: 192,
          column: 13
        }
      },
      "66": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 195,
          column: 15
        }
      },
      "67": {
        start: {
          line: 198,
          column: 26
        },
        end: {
          line: 198,
          column: 79
        }
      },
      "68": {
        start: {
          line: 199,
          column: 8
        },
        end: {
          line: 201,
          column: 9
        }
      },
      "69": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 200,
          column: 84
        }
      },
      "70": {
        start: {
          line: 202,
          column: 25
        },
        end: {
          line: 206,
          column: 9
        }
      },
      "71": {
        start: {
          line: 207,
          column: 8
        },
        end: {
          line: 207,
          column: 51
        }
      },
      "72": {
        start: {
          line: 209,
          column: 8
        },
        end: {
          line: 209,
          column: 68
        }
      },
      "73": {
        start: {
          line: 210,
          column: 30
        },
        end: {
          line: 214,
          column: 9
        }
      },
      "74": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 217,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 16
          }
        },
        loc: {
          start: {
            line: 8,
            column: 30
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 18
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 15
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 15
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "4": {
        name: "GET",
        decl: {
          start: {
            line: 28,
            column: 15
          },
          end: {
            line: 28,
            column: 18
          }
        },
        loc: {
          start: {
            line: 28,
            column: 37
          },
          end: {
            line: 91,
            column: 1
          }
        },
        line: 28
      },
      "5": {
        name: "PUT",
        decl: {
          start: {
            line: 92,
            column: 15
          },
          end: {
            line: 92,
            column: 18
          }
        },
        loc: {
          start: {
            line: 92,
            column: 37
          },
          end: {
            line: 163,
            column: 1
          }
        },
        line: 92
      },
      "6": {
        name: "DELETE",
        decl: {
          start: {
            line: 164,
            column: 15
          },
          end: {
            line: 164,
            column: 21
          }
        },
        loc: {
          start: {
            line: 164,
            column: 40
          },
          end: {
            line: 219,
            column: 1
          }
        },
        line: 164
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 42,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 42,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "1": {
        loc: {
          start: {
            line: 33,
            column: 12
          },
          end: {
            line: 33,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 12
          },
          end: {
            line: 33,
            column: 21
          }
        }, {
          start: {
            line: 33,
            column: 25
          },
          end: {
            line: 33,
            column: 32
          }
        }],
        line: 33
      },
      "2": {
        loc: {
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 45
      },
      "3": {
        loc: {
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 73,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 73,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "4": {
        loc: {
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 71,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 71,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "5": {
        loc: {
          start: {
            line: 85,
            column: 19
          },
          end: {
            line: 85,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 85,
            column: 19
          },
          end: {
            line: 85,
            column: 32
          }
        }, {
          start: {
            line: 85,
            column: 36
          },
          end: {
            line: 85,
            column: 64
          }
        }],
        line: 85
      },
      "6": {
        loc: {
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 111,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 111,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 102
      },
      "7": {
        loc: {
          start: {
            line: 102,
            column: 12
          },
          end: {
            line: 102,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 102,
            column: 12
          },
          end: {
            line: 102,
            column: 21
          }
        }, {
          start: {
            line: 102,
            column: 25
          },
          end: {
            line: 102,
            column: 32
          }
        }],
        line: 102
      },
      "8": {
        loc: {
          start: {
            line: 117,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 117,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 117
      },
      "9": {
        loc: {
          start: {
            line: 133,
            column: 8
          },
          end: {
            line: 145,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 133,
            column: 8
          },
          end: {
            line: 145,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 133
      },
      "10": {
        loc: {
          start: {
            line: 134,
            column: 12
          },
          end: {
            line: 143,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 12
          },
          end: {
            line: 143,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      },
      "11": {
        loc: {
          start: {
            line: 157,
            column: 19
          },
          end: {
            line: 157,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 157,
            column: 19
          },
          end: {
            line: 157,
            column: 32
          }
        }, {
          start: {
            line: 157,
            column: 36
          },
          end: {
            line: 157,
            column: 64
          }
        }],
        line: 157
      },
      "12": {
        loc: {
          start: {
            line: 174,
            column: 8
          },
          end: {
            line: 183,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 174,
            column: 8
          },
          end: {
            line: 183,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 174
      },
      "13": {
        loc: {
          start: {
            line: 174,
            column: 12
          },
          end: {
            line: 174,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 174,
            column: 12
          },
          end: {
            line: 174,
            column: 21
          }
        }, {
          start: {
            line: 174,
            column: 25
          },
          end: {
            line: 174,
            column: 32
          }
        }],
        line: 174
      },
      "14": {
        loc: {
          start: {
            line: 186,
            column: 8
          },
          end: {
            line: 196,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 186,
            column: 8
          },
          end: {
            line: 196,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 186
      },
      "15": {
        loc: {
          start: {
            line: 199,
            column: 8
          },
          end: {
            line: 201,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 199,
            column: 8
          },
          end: {
            line: 201,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 199
      },
      "16": {
        loc: {
          start: {
            line: 213,
            column: 19
          },
          end: {
            line: 213,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 213,
            column: 19
          },
          end: {
            line: 213,
            column: 32
          }
        }, {
          start: {
            line: 213,
            column: 36
          },
          end: {
            line: 213,
            column: 64
          }
        }],
        line: 213
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\products\\[id]\\route.ts"],
      sourcesContent: ["// ===================================\n// PINTEYA E-COMMERCE - API DE PRODUCTO INDIVIDUAL\n// ===================================\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { getSupabaseClient, handleSupabaseError } from '@/lib/integrations/supabase';\nimport { validateData, ProductSchema } from '@/lib/validations';\nimport { ApiResponse, ProductWithCategory } from '@/types/api';\n\n// ===================================\n// GET /api/products/[id] - Obtener producto por ID\n// ===================================\nexport async function GET(\n  request: NextRequest,\n  context: { params: Promise<{ id: string }> }\n) {\n  try {\n    const params = await context.params;\n    // Validar par\xE1metro ID\n    const id = parseInt(params.id, 10);\n    if (isNaN(id) || id <= 0) {\n      const errorResponse: ApiResponse<null> = {\n        data: null,\n        success: false,\n        error: 'ID de producto inv\xE1lido',\n      };\n      return NextResponse.json(errorResponse, { status: 400 });\n    }\n    \n    const supabase = getSupabaseClient();\n\n    // Verificar que el cliente de Supabase est\xE9 disponible\n    if (!supabase) {\n      console.error('Cliente de Supabase no disponible en GET /api/products/[id]');\n      const errorResponse: ApiResponse<null> = {\n        data: null,\n        success: false,\n        error: 'Servicio de base de datos no disponible',\n      };\n      return NextResponse.json(errorResponse, { status: 503 });\n    }\n\n    // Obtener producto con categor\xEDa\n    const { data: product, error } = await supabase\n      .from('products')\n      .select(`\n        id, name, slug, description, price, discounted_price, brand, stock, images, created_at, updated_at,\n        category:categories(id, name, slug)\n      `)\n      .eq('id', id)\n      .single();\n\n    if (error) {\n      if (error.code === 'PGRST116') {\n        const notFoundResponse: ApiResponse<null> = {\n          data: null,\n          success: false,\n          error: 'Producto no encontrado',\n        };\n        return NextResponse.json(notFoundResponse, { status: 404 });\n      }\n      handleSupabaseError(error, `GET /api/products/${id}`);\n    }\n\n    const response: ApiResponse<ProductWithCategory> = {\n      data: product,\n      success: true,\n      message: 'Producto obtenido exitosamente',\n    };\n\n    return NextResponse.json(response);\n\n  } catch (error: any) {\n    console.error('Error en GET /api/products/[id]:', error);\n    \n    const errorResponse: ApiResponse<null> = {\n      data: null,\n      success: false,\n      error: error.message || 'Error interno del servidor',\n    };\n\n    return NextResponse.json(errorResponse, { status: 500 });\n  }\n}\n\n// ===================================\n// PUT /api/products/[id] - Actualizar producto (Admin)\n// ===================================\nexport async function PUT(\n  request: NextRequest,\n  context: { params: Promise<{ id: string }> }\n) {\n  try {\n    const params = await context.params;\n    // TODO: Verificar permisos de administrador\n    // const { userId } = auth();\n    // if (!userId || !isAdmin(userId)) {\n    //   return NextResponse.json({ error: 'No autorizado' }, { status: 401 });\n    // }\n\n    // Validar par\xE1metro ID\n    const id = parseInt(params.id, 10);\n    if (isNaN(id) || id <= 0) {\n      const errorResponse: ApiResponse<null> = {\n        data: null,\n        success: false,\n        error: 'ID de producto inv\xE1lido',\n      };\n      return NextResponse.json(errorResponse, { status: 400 });\n    }\n    \n    const body = await request.json();\n    \n    // Validar datos del producto (permitir actualizaciones parciales)\n    const productData = validateData(ProductSchema.partial(), body);\n    \n    const supabase = getSupabaseClient(true); // Usar cliente admin\n\n    // Verificar que el cliente administrativo est\xE9 disponible\n    if (!supabase) {\n      console.error('Cliente administrativo de Supabase no disponible en PUT /api/products/[id]');\n      const errorResponse: ApiResponse<null> = {\n        data: null,\n        success: false,\n        error: 'Servicio administrativo no disponible',\n      };\n      return NextResponse.json(errorResponse, { status: 503 });\n    }\n\n    // Actualizar producto\n    const { data: product, error } = await supabase\n      .from('products')\n      .update(productData)\n      .eq('id', id)\n      .select(`\n        *,\n        category:categories(id, name, slug)\n      `)\n      .single();\n\n    if (error) {\n      if (error.code === 'PGRST116') {\n        const notFoundResponse: ApiResponse<null> = {\n          data: null,\n          success: false,\n          error: 'Producto no encontrado',\n        };\n        return NextResponse.json(notFoundResponse, { status: 404 });\n      }\n      handleSupabaseError(error, `PUT /api/products/${id}`);\n    }\n\n    const response: ApiResponse<ProductWithCategory> = {\n      data: product,\n      success: true,\n      message: 'Producto actualizado exitosamente',\n    };\n\n    return NextResponse.json(response);\n\n  } catch (error: any) {\n    console.error('Error en PUT /api/products/[id]:', error);\n    \n    const errorResponse: ApiResponse<null> = {\n      data: null,\n      success: false,\n      error: error.message || 'Error interno del servidor',\n    };\n\n    return NextResponse.json(errorResponse, { status: 500 });\n  }\n}\n\n// ===================================\n// DELETE /api/products/[id] - Eliminar producto (Admin)\n// ===================================\nexport async function DELETE(\n  request: NextRequest,\n  context: { params: Promise<{ id: string }> }\n) {\n  try {\n    const params = await context.params;\n    // TODO: Verificar permisos de administrador\n    // const { userId } = auth();\n    // if (!userId || !isAdmin(userId)) {\n    //   return NextResponse.json({ error: 'No autorizado' }, { status: 401 });\n    // }\n\n    // Validar par\xE1metro ID\n    const id = parseInt(params.id, 10);\n    if (isNaN(id) || id <= 0) {\n      const errorResponse: ApiResponse<null> = {\n        data: null,\n        success: false,\n        error: 'ID de producto inv\xE1lido',\n      };\n      return NextResponse.json(errorResponse, { status: 400 });\n    }\n    \n    const supabase = getSupabaseClient(true); // Usar cliente admin\n\n    // Verificar que el cliente administrativo est\xE9 disponible\n    if (!supabase) {\n      console.error('Cliente administrativo de Supabase no disponible en DELETE /api/products/[id]');\n      const errorResponse: ApiResponse<null> = {\n        data: null,\n        success: false,\n        error: 'Servicio administrativo no disponible',\n      };\n      return NextResponse.json(errorResponse, { status: 503 });\n    }\n\n    // Eliminar producto\n    const { error } = await supabase\n      .from('products')\n      .delete()\n      .eq('id', id);\n\n    if (error) {\n      handleSupabaseError(error, `DELETE /api/products/${id}`);\n    }\n\n    const response: ApiResponse<null> = {\n      data: null,\n      success: true,\n      message: 'Producto eliminado exitosamente',\n    };\n\n    return NextResponse.json(response);\n\n  } catch (error: any) {\n    console.error('Error en DELETE /api/products/[id]:', error);\n    \n    const errorResponse: ApiResponse<null> = {\n      data: null,\n      success: false,\n      error: error.message || 'Error interno del servidor',\n    };\n\n    return NextResponse.json(errorResponse, { status: 500 });\n  }\n}\n"],
      names: ["DELETE", "GET", "PUT", "request", "context", "params", "id", "parseInt", "isNaN", "errorResponse", "data", "success", "error", "NextResponse", "json", "status", "supabase", "getSupabaseClient", "console", "product", "from", "select", "eq", "single", "code", "notFoundResponse", "handleSupabaseError", "response", "message", "body", "productData", "validateData", "ProductSchema", "partial", "update", "delete"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2b5df2a298aa8b1837783480e82ddee3c9f45550"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_cgqt8xve3 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_cgqt8xve3();
cov_cgqt8xve3().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_cgqt8xve3().f[0]++;
  cov_cgqt8xve3().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_cgqt8xve3().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_cgqt8xve3().s[3]++;
_export(exports, {
  get DELETE() {
    /* istanbul ignore next */
    cov_cgqt8xve3().f[1]++;
    cov_cgqt8xve3().s[4]++;
    return DELETE;
  },
  get GET() {
    /* istanbul ignore next */
    cov_cgqt8xve3().f[2]++;
    cov_cgqt8xve3().s[5]++;
    return GET;
  },
  get PUT() {
    /* istanbul ignore next */
    cov_cgqt8xve3().f[3]++;
    cov_cgqt8xve3().s[6]++;
    return PUT;
  }
});
const _server =
/* istanbul ignore next */
(cov_cgqt8xve3().s[7]++, require("next/server"));
const _supabase =
/* istanbul ignore next */
(cov_cgqt8xve3().s[8]++, require("../../../../lib/integrations/supabase"));
const _validations =
/* istanbul ignore next */
(cov_cgqt8xve3().s[9]++, require("../../../../lib/validations"));
async function GET(request, context) {
  /* istanbul ignore next */
  cov_cgqt8xve3().f[4]++;
  cov_cgqt8xve3().s[10]++;
  try {
    const params =
    /* istanbul ignore next */
    (cov_cgqt8xve3().s[11]++, await context.params);
    // Validar parámetro ID
    const id =
    /* istanbul ignore next */
    (cov_cgqt8xve3().s[12]++, parseInt(params.id, 10));
    /* istanbul ignore next */
    cov_cgqt8xve3().s[13]++;
    if (
    /* istanbul ignore next */
    (cov_cgqt8xve3().b[1][0]++, isNaN(id)) ||
    /* istanbul ignore next */
    (cov_cgqt8xve3().b[1][1]++, id <= 0)) {
      /* istanbul ignore next */
      cov_cgqt8xve3().b[0][0]++;
      const errorResponse =
      /* istanbul ignore next */
      (cov_cgqt8xve3().s[14]++, {
        data: null,
        success: false,
        error: 'ID de producto inválido'
      });
      /* istanbul ignore next */
      cov_cgqt8xve3().s[15]++;
      return _server.NextResponse.json(errorResponse, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_cgqt8xve3().b[0][1]++;
    }
    const supabase =
    /* istanbul ignore next */
    (cov_cgqt8xve3().s[16]++, (0, _supabase.getSupabaseClient)());
    // Verificar que el cliente de Supabase esté disponible
    /* istanbul ignore next */
    cov_cgqt8xve3().s[17]++;
    if (!supabase) {
      /* istanbul ignore next */
      cov_cgqt8xve3().b[2][0]++;
      cov_cgqt8xve3().s[18]++;
      console.error('Cliente de Supabase no disponible en GET /api/products/[id]');
      const errorResponse =
      /* istanbul ignore next */
      (cov_cgqt8xve3().s[19]++, {
        data: null,
        success: false,
        error: 'Servicio de base de datos no disponible'
      });
      /* istanbul ignore next */
      cov_cgqt8xve3().s[20]++;
      return _server.NextResponse.json(errorResponse, {
        status: 503
      });
    } else
    /* istanbul ignore next */
    {
      cov_cgqt8xve3().b[2][1]++;
    }
    // Obtener producto con categoría
    const {
      data: product,
      error
    } =
    /* istanbul ignore next */
    (cov_cgqt8xve3().s[21]++, await supabase.from('products').select(`
        id, name, slug, description, price, discounted_price, brand, stock, images, created_at, updated_at,
        category:categories(id, name, slug)
      `).eq('id', id).single());
    /* istanbul ignore next */
    cov_cgqt8xve3().s[22]++;
    if (error) {
      /* istanbul ignore next */
      cov_cgqt8xve3().b[3][0]++;
      cov_cgqt8xve3().s[23]++;
      if (error.code === 'PGRST116') {
        /* istanbul ignore next */
        cov_cgqt8xve3().b[4][0]++;
        const notFoundResponse =
        /* istanbul ignore next */
        (cov_cgqt8xve3().s[24]++, {
          data: null,
          success: false,
          error: 'Producto no encontrado'
        });
        /* istanbul ignore next */
        cov_cgqt8xve3().s[25]++;
        return _server.NextResponse.json(notFoundResponse, {
          status: 404
        });
      } else
      /* istanbul ignore next */
      {
        cov_cgqt8xve3().b[4][1]++;
      }
      cov_cgqt8xve3().s[26]++;
      (0, _supabase.handleSupabaseError)(error, `GET /api/products/${id}`);
    } else
    /* istanbul ignore next */
    {
      cov_cgqt8xve3().b[3][1]++;
    }
    const response =
    /* istanbul ignore next */
    (cov_cgqt8xve3().s[27]++, {
      data: product,
      success: true,
      message: 'Producto obtenido exitosamente'
    });
    /* istanbul ignore next */
    cov_cgqt8xve3().s[28]++;
    return _server.NextResponse.json(response);
  } catch (error) {
    /* istanbul ignore next */
    cov_cgqt8xve3().s[29]++;
    console.error('Error en GET /api/products/[id]:', error);
    const errorResponse =
    /* istanbul ignore next */
    (cov_cgqt8xve3().s[30]++, {
      data: null,
      success: false,
      error:
      /* istanbul ignore next */
      (cov_cgqt8xve3().b[5][0]++, error.message) ||
      /* istanbul ignore next */
      (cov_cgqt8xve3().b[5][1]++, 'Error interno del servidor')
    });
    /* istanbul ignore next */
    cov_cgqt8xve3().s[31]++;
    return _server.NextResponse.json(errorResponse, {
      status: 500
    });
  }
}
async function PUT(request, context) {
  /* istanbul ignore next */
  cov_cgqt8xve3().f[5]++;
  cov_cgqt8xve3().s[32]++;
  try {
    const params =
    /* istanbul ignore next */
    (cov_cgqt8xve3().s[33]++, await context.params);
    // TODO: Verificar permisos de administrador
    // const { userId } = auth();
    // if (!userId || !isAdmin(userId)) {
    //   return NextResponse.json({ error: 'No autorizado' }, { status: 401 });
    // }
    // Validar parámetro ID
    const id =
    /* istanbul ignore next */
    (cov_cgqt8xve3().s[34]++, parseInt(params.id, 10));
    /* istanbul ignore next */
    cov_cgqt8xve3().s[35]++;
    if (
    /* istanbul ignore next */
    (cov_cgqt8xve3().b[7][0]++, isNaN(id)) ||
    /* istanbul ignore next */
    (cov_cgqt8xve3().b[7][1]++, id <= 0)) {
      /* istanbul ignore next */
      cov_cgqt8xve3().b[6][0]++;
      const errorResponse =
      /* istanbul ignore next */
      (cov_cgqt8xve3().s[36]++, {
        data: null,
        success: false,
        error: 'ID de producto inválido'
      });
      /* istanbul ignore next */
      cov_cgqt8xve3().s[37]++;
      return _server.NextResponse.json(errorResponse, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_cgqt8xve3().b[6][1]++;
    }
    const body =
    /* istanbul ignore next */
    (cov_cgqt8xve3().s[38]++, await request.json());
    // Validar datos del producto (permitir actualizaciones parciales)
    const productData =
    /* istanbul ignore next */
    (cov_cgqt8xve3().s[39]++, (0, _validations.validateData)(_validations.ProductSchema.partial(), body));
    const supabase =
    /* istanbul ignore next */
    (cov_cgqt8xve3().s[40]++, (0, _supabase.getSupabaseClient)(true)); // Usar cliente admin
    // Verificar que el cliente administrativo esté disponible
    /* istanbul ignore next */
    cov_cgqt8xve3().s[41]++;
    if (!supabase) {
      /* istanbul ignore next */
      cov_cgqt8xve3().b[8][0]++;
      cov_cgqt8xve3().s[42]++;
      console.error('Cliente administrativo de Supabase no disponible en PUT /api/products/[id]');
      const errorResponse =
      /* istanbul ignore next */
      (cov_cgqt8xve3().s[43]++, {
        data: null,
        success: false,
        error: 'Servicio administrativo no disponible'
      });
      /* istanbul ignore next */
      cov_cgqt8xve3().s[44]++;
      return _server.NextResponse.json(errorResponse, {
        status: 503
      });
    } else
    /* istanbul ignore next */
    {
      cov_cgqt8xve3().b[8][1]++;
    }
    // Actualizar producto
    const {
      data: product,
      error
    } =
    /* istanbul ignore next */
    (cov_cgqt8xve3().s[45]++, await supabase.from('products').update(productData).eq('id', id).select(`
        *,
        category:categories(id, name, slug)
      `).single());
    /* istanbul ignore next */
    cov_cgqt8xve3().s[46]++;
    if (error) {
      /* istanbul ignore next */
      cov_cgqt8xve3().b[9][0]++;
      cov_cgqt8xve3().s[47]++;
      if (error.code === 'PGRST116') {
        /* istanbul ignore next */
        cov_cgqt8xve3().b[10][0]++;
        const notFoundResponse =
        /* istanbul ignore next */
        (cov_cgqt8xve3().s[48]++, {
          data: null,
          success: false,
          error: 'Producto no encontrado'
        });
        /* istanbul ignore next */
        cov_cgqt8xve3().s[49]++;
        return _server.NextResponse.json(notFoundResponse, {
          status: 404
        });
      } else
      /* istanbul ignore next */
      {
        cov_cgqt8xve3().b[10][1]++;
      }
      cov_cgqt8xve3().s[50]++;
      (0, _supabase.handleSupabaseError)(error, `PUT /api/products/${id}`);
    } else
    /* istanbul ignore next */
    {
      cov_cgqt8xve3().b[9][1]++;
    }
    const response =
    /* istanbul ignore next */
    (cov_cgqt8xve3().s[51]++, {
      data: product,
      success: true,
      message: 'Producto actualizado exitosamente'
    });
    /* istanbul ignore next */
    cov_cgqt8xve3().s[52]++;
    return _server.NextResponse.json(response);
  } catch (error) {
    /* istanbul ignore next */
    cov_cgqt8xve3().s[53]++;
    console.error('Error en PUT /api/products/[id]:', error);
    const errorResponse =
    /* istanbul ignore next */
    (cov_cgqt8xve3().s[54]++, {
      data: null,
      success: false,
      error:
      /* istanbul ignore next */
      (cov_cgqt8xve3().b[11][0]++, error.message) ||
      /* istanbul ignore next */
      (cov_cgqt8xve3().b[11][1]++, 'Error interno del servidor')
    });
    /* istanbul ignore next */
    cov_cgqt8xve3().s[55]++;
    return _server.NextResponse.json(errorResponse, {
      status: 500
    });
  }
}
async function DELETE(request, context) {
  /* istanbul ignore next */
  cov_cgqt8xve3().f[6]++;
  cov_cgqt8xve3().s[56]++;
  try {
    const params =
    /* istanbul ignore next */
    (cov_cgqt8xve3().s[57]++, await context.params);
    // TODO: Verificar permisos de administrador
    // const { userId } = auth();
    // if (!userId || !isAdmin(userId)) {
    //   return NextResponse.json({ error: 'No autorizado' }, { status: 401 });
    // }
    // Validar parámetro ID
    const id =
    /* istanbul ignore next */
    (cov_cgqt8xve3().s[58]++, parseInt(params.id, 10));
    /* istanbul ignore next */
    cov_cgqt8xve3().s[59]++;
    if (
    /* istanbul ignore next */
    (cov_cgqt8xve3().b[13][0]++, isNaN(id)) ||
    /* istanbul ignore next */
    (cov_cgqt8xve3().b[13][1]++, id <= 0)) {
      /* istanbul ignore next */
      cov_cgqt8xve3().b[12][0]++;
      const errorResponse =
      /* istanbul ignore next */
      (cov_cgqt8xve3().s[60]++, {
        data: null,
        success: false,
        error: 'ID de producto inválido'
      });
      /* istanbul ignore next */
      cov_cgqt8xve3().s[61]++;
      return _server.NextResponse.json(errorResponse, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_cgqt8xve3().b[12][1]++;
    }
    const supabase =
    /* istanbul ignore next */
    (cov_cgqt8xve3().s[62]++, (0, _supabase.getSupabaseClient)(true)); // Usar cliente admin
    // Verificar que el cliente administrativo esté disponible
    /* istanbul ignore next */
    cov_cgqt8xve3().s[63]++;
    if (!supabase) {
      /* istanbul ignore next */
      cov_cgqt8xve3().b[14][0]++;
      cov_cgqt8xve3().s[64]++;
      console.error('Cliente administrativo de Supabase no disponible en DELETE /api/products/[id]');
      const errorResponse =
      /* istanbul ignore next */
      (cov_cgqt8xve3().s[65]++, {
        data: null,
        success: false,
        error: 'Servicio administrativo no disponible'
      });
      /* istanbul ignore next */
      cov_cgqt8xve3().s[66]++;
      return _server.NextResponse.json(errorResponse, {
        status: 503
      });
    } else
    /* istanbul ignore next */
    {
      cov_cgqt8xve3().b[14][1]++;
    }
    // Eliminar producto
    const {
      error
    } =
    /* istanbul ignore next */
    (cov_cgqt8xve3().s[67]++, await supabase.from('products').delete().eq('id', id));
    /* istanbul ignore next */
    cov_cgqt8xve3().s[68]++;
    if (error) {
      /* istanbul ignore next */
      cov_cgqt8xve3().b[15][0]++;
      cov_cgqt8xve3().s[69]++;
      (0, _supabase.handleSupabaseError)(error, `DELETE /api/products/${id}`);
    } else
    /* istanbul ignore next */
    {
      cov_cgqt8xve3().b[15][1]++;
    }
    const response =
    /* istanbul ignore next */
    (cov_cgqt8xve3().s[70]++, {
      data: null,
      success: true,
      message: 'Producto eliminado exitosamente'
    });
    /* istanbul ignore next */
    cov_cgqt8xve3().s[71]++;
    return _server.NextResponse.json(response);
  } catch (error) {
    /* istanbul ignore next */
    cov_cgqt8xve3().s[72]++;
    console.error('Error en DELETE /api/products/[id]:', error);
    const errorResponse =
    /* istanbul ignore next */
    (cov_cgqt8xve3().s[73]++, {
      data: null,
      success: false,
      error:
      /* istanbul ignore next */
      (cov_cgqt8xve3().b[16][0]++, error.message) ||
      /* istanbul ignore next */
      (cov_cgqt8xve3().b[16][1]++, 'Error interno del servidor')
    });
    /* istanbul ignore next */
    cov_cgqt8xve3().s[74]++;
    return _server.NextResponse.json(errorResponse, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,