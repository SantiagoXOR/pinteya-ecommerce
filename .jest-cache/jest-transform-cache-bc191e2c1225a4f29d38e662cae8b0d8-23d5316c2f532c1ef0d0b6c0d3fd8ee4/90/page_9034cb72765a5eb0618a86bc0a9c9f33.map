{"version":3,"names":["_default","TestReportsDashboard","cov_1v83j47mj","f","currentReport","setCurrentReport","s","_react","useState","isRunning","setIsRunning","lastUpdate","setLastUpdate","Date","screenshots","setScreenshots","selectedScreenshot","setSelectedScreenshot","showScreenshotModal","setShowScreenshotModal","selectedSuite","setSelectedSuite","screenshotFilter","setScreenshotFilter","flowView","setFlowView","ScreenshotDisplay","screenshotId","fallbackIcon","FallbackIcon","fallbackColor","fallbackText","title","description","className","b","screenshot","realScreenshots","find","id","_jsxruntime","jsxs","onClick","jsx","src","previewUrl","alt","stepName","onError","e","currentTarget","style","display","nextElementSibling","setRealScreenshots","isGeneratingScreenshots","setIsGeneratingScreenshots","loadScreenshots","executionId","defaultExecutionId","response","fetch","ok","data","json","generateMockScreenshots","error","console","url","timestamp","now","status","metadata","width","height","size","loadRealScreenshots","metadataResponse","length","log","success","generateCheckoutScreenshots","method","headers","body","JSON","stringify","flow","result","count","useEffect","mockReport","totalSuites","totalTests","passed","failed","skipped","duration","coverage","statements","branches","functions","lines","total","byStatus","failure","info","totalSize","suites","name","tests","lastRun","screenshotCount","runAllTests","generateReport","screenshotOptions","enabled","captureOnFailure","captureSteps","quality","setTimeout","loadLatestReport","reports","latestReport","reportResponse","reportData","convertToAdminFormat","steps","totalSteps","completedSteps","failedSteps","parseFloat","summary","generateSuitesFromReport","defaultSuites","map","step","index","Math","random","getStatusIcon","_lucidereact","CheckCircle","XCircle","RefreshCw","Clock","TestTube","getStatusColor","getCoverageColor","openScreenshotModal","downloadScreenshot","blob","window","URL","createObjectURL","a","document","createElement","href","download","appendChild","click","revokeObjectURL","removeChild","getScreenshotStatusColor","successRate","round","_badge","Badge","variant","_button","Button","disabled","Play","_card","Card","CardHeader","CardTitle","CardContent","toFixed","Target","Camera","_tabs","Tabs","defaultValue","TabsList","TabsTrigger","value","TabsContent","FileText","CardDescription","suite","toLocaleTimeString","slice","Eye","onChange","target","Fragment","ShoppingCart","ArrowRight","CreditCard","AlertCircle","Array","from","_","i","stepIcons","User","stepColors","iconIndex","floor","colorIndex","Icon","color","filter","some","Object","entries","key","TrendingUp","BarChart3","toLocaleString","Download","X"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\admin\\test-reports\\page.tsx"],"sourcesContent":["// ===================================\r\n// ADMIN TEST REPORTS DASHBOARD\r\n// Dashboard completo de reportes de testing automatizado\r\n// ===================================\r\n\r\n'use client';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport {\r\n  TestTube,\r\n  CheckCircle,\r\n  XCircle,\r\n  Clock,\r\n  AlertTriangle,\r\n  AlertCircle,\r\n  TrendingUp,\r\n  Play,\r\n  RefreshCw,\r\n  FileText,\r\n  BarChart3,\r\n  Target,\r\n  Camera,\r\n  Image,\r\n  Eye,\r\n  Download,\r\n  ZoomIn,\r\n  X,\r\n  ShoppingCart,\r\n  ArrowRight,\r\n  CreditCard,\r\n  User\r\n} from 'lucide-react';\r\n\r\ninterface TestSuite {\r\n  name: string;\r\n  status: 'passed' | 'failed' | 'running' | 'pending';\r\n  tests: number;\r\n  passed: number;\r\n  failed: number;\r\n  duration: number;\r\n  coverage: number;\r\n  lastRun: Date;\r\n  screenshots?: ScreenshotInfo[];\r\n  screenshotCount?: number;\r\n}\r\n\r\ninterface ScreenshotInfo {\r\n  id: string;\r\n  stepName: string;\r\n  url: string;\r\n  previewUrl: string;\r\n  timestamp: Date;\r\n  status: 'success' | 'failure' | 'info';\r\n  metadata?: {\r\n    width: number;\r\n    height: number;\r\n    size: number;\r\n  };\r\n}\r\n\r\ninterface TestReport {\r\n  id: string;\r\n  timestamp: Date;\r\n  totalSuites: number;\r\n  totalTests: number;\r\n  passed: number;\r\n  failed: number;\r\n  skipped: number;\r\n  duration: number;\r\n  coverage: {\r\n    statements: number;\r\n    branches: number;\r\n    functions: number;\r\n    lines: number;\r\n  };\r\n  suites: TestSuite[];\r\n  screenshots?: {\r\n    total: number;\r\n    byStatus: {\r\n      success: number;\r\n      failure: number;\r\n      info: number;\r\n    };\r\n    totalSize: number;\r\n  };\r\n}\r\n\r\nconst TestReportsDashboard = () => {\r\n  const [currentReport, setCurrentReport] = useState<TestReport | null>(null);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [lastUpdate, setLastUpdate] = useState<Date>(new Date());\r\n  const [screenshots, setScreenshots] = useState<ScreenshotInfo[]>([]);\r\n  const [selectedScreenshot, setSelectedScreenshot] = useState<ScreenshotInfo | null>(null);\r\n  const [showScreenshotModal, setShowScreenshotModal] = useState(false);\r\n  const [selectedSuite, setSelectedSuite] = useState<string | null>(null);\r\n  const [screenshotFilter, setScreenshotFilter] = useState<'all' | 'success' | 'failure' | 'info'>('all');\r\n  const [flowView, setFlowView] = useState<'grid' | 'timeline'>('timeline');\r\n\r\n  // Helper para mostrar screenshot con fallback\r\n  const ScreenshotDisplay = ({\r\n    screenshotId,\r\n    fallbackIcon: FallbackIcon,\r\n    fallbackColor,\r\n    fallbackText,\r\n    title,\r\n    description,\r\n    className = \"w-full h-32\"\r\n  }: {\r\n    screenshotId: string;\r\n    fallbackIcon: any;\r\n    fallbackColor: string;\r\n    fallbackText: string;\r\n    title: string;\r\n    description: string;\r\n    className?: string;\r\n  }) => {\r\n    const screenshot = realScreenshots.find(s => s.id === screenshotId);\r\n\r\n    return (\r\n      <div className=\"border rounded-lg p-3 hover:shadow-md transition-shadow cursor-pointer\"\r\n           onClick={() => {\r\n             if (screenshot) {\r\n               setSelectedScreenshot(screenshot);\r\n               setShowScreenshotModal(true);\r\n             }\r\n           }}>\r\n        {screenshot ? (\r\n          <img\r\n            src={screenshot.previewUrl}\r\n            alt={screenshot.stepName}\r\n            className={`${className} object-cover rounded mb-2`}\r\n            onError={(e) => {\r\n              e.currentTarget.style.display = 'none';\r\n              e.currentTarget.nextElementSibling.style.display = 'flex';\r\n            }}\r\n          />\r\n        ) : null}\r\n        <div className={`${className} bg-gradient-to-br from-${fallbackColor}-100 to-${fallbackColor}-200 rounded mb-2 flex items-center justify-center ${screenshot ? 'hidden' : ''}`}>\r\n          <div className=\"text-center\">\r\n            <FallbackIcon className={`w-8 h-8 text-${fallbackColor}-600 mx-auto mb-1`} />\r\n            <span className={`text-xs text-${fallbackColor}-700`}>{fallbackText}</span>\r\n          </div>\r\n        </div>\r\n        <p className=\"text-xs font-medium\">{screenshot?.stepName || title}</p>\r\n        <p className=\"text-xs text-gray-500\">{description}</p>\r\n      </div>\r\n    );\r\n  };\r\n  const [realScreenshots, setRealScreenshots] = useState<any[]>([]);\r\n  const [isGeneratingScreenshots, setIsGeneratingScreenshots] = useState(false);\r\n\r\n  // Cargar screenshots del reporte actual\r\n  const loadScreenshots = async (executionId?: string) => {\r\n    try {\r\n      // Si no hay executionId, usar uno por defecto para mostrar datos mock\r\n      const defaultExecutionId = executionId || 'default-execution-id';\r\n      const response = await fetch(`/api/admin/test-screenshots?action=list&executionId=${defaultExecutionId}`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setScreenshots(data.data || []);\r\n      } else {\r\n        // Si falla, usar screenshots mock para demostración\r\n        setScreenshots(generateMockScreenshots());\r\n      }\r\n    } catch (error) {\r\n      console.error('Error cargando screenshots:', error);\r\n      // Fallback a datos mock\r\n      setScreenshots(generateMockScreenshots());\r\n    }\r\n  };\r\n\r\n  // Generar screenshots mock para demostración\r\n  const generateMockScreenshots = (): ScreenshotInfo[] => {\r\n    return [\r\n      {\r\n        id: 'mock-ss-1',\r\n        stepName: 'Product Page Load Test',\r\n        url: '/images/products/product-1-bg-1.png',\r\n        previewUrl: '/images/products/product-1-bg-1.png',\r\n        timestamp: new Date(Date.now() - 300000), // 5 min ago\r\n        status: 'success',\r\n        metadata: { width: 1920, height: 1080, size: 245000 }\r\n      },\r\n      {\r\n        id: 'mock-ss-2',\r\n        stepName: 'Cart Functionality Test',\r\n        url: '/images/cart/cart-01.png',\r\n        previewUrl: '/images/cart/cart-01.png',\r\n        timestamp: new Date(Date.now() - 180000), // 3 min ago\r\n        status: 'success',\r\n        metadata: { width: 1920, height: 1080, size: 198000 }\r\n      },\r\n      {\r\n        id: 'mock-ss-3',\r\n        stepName: 'Checkout Process Error',\r\n        url: '/images/404.svg',\r\n        previewUrl: '/images/404.svg',\r\n        timestamp: new Date(Date.now() - 60000), // 1 min ago\r\n        status: 'failure',\r\n        metadata: { width: 1920, height: 1080, size: 312000 }\r\n      },\r\n      {\r\n        id: 'mock-ss-4',\r\n        stepName: 'Hero Section Render',\r\n        url: '/images/hero/hero-01.png',\r\n        previewUrl: '/images/hero/hero-01.png',\r\n        timestamp: new Date(Date.now() - 120000), // 2 min ago\r\n        status: 'info',\r\n        metadata: { width: 1920, height: 1080, size: 456000 }\r\n      },\r\n      {\r\n        id: 'mock-ss-5',\r\n        stepName: 'Category Navigation',\r\n        url: '/images/categories/interiores.png',\r\n        previewUrl: '/images/categories/interiores.png',\r\n        timestamp: new Date(Date.now() - 90000), // 1.5 min ago\r\n        status: 'success',\r\n        metadata: { width: 1920, height: 1080, size: 189000 }\r\n      }\r\n    ];\r\n  };\r\n\r\n  // Cargar screenshots reales del servidor\r\n  const loadRealScreenshots = async () => {\r\n    try {\r\n      // Primero intentar cargar desde metadata.json\r\n      const metadataResponse = await fetch('/test-screenshots/metadata.json');\r\n      if (metadataResponse.ok) {\r\n        const metadata = await metadataResponse.json();\r\n        if (metadata.screenshots && metadata.screenshots.length > 0) {\r\n          setRealScreenshots(metadata.screenshots);\r\n          console.log(`📸 Cargados ${metadata.screenshots.length} screenshots desde metadata`);\r\n          return;\r\n        }\r\n      }\r\n\r\n      // Fallback a API\r\n      const response = await fetch('/api/test-screenshots');\r\n      const data = await response.json();\r\n\r\n      if (data.success) {\r\n        setRealScreenshots(data.screenshots);\r\n        console.log(`📸 Cargados ${data.screenshots.length} screenshots desde API`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error cargando screenshots reales:', error);\r\n      // Usar screenshots vacío como fallback\r\n      setRealScreenshots([]);\r\n    }\r\n  };\r\n\r\n  // Generar screenshots del flujo de checkout\r\n  const generateCheckoutScreenshots = async () => {\r\n    setIsGeneratingScreenshots(true);\r\n    try {\r\n      console.log('🚀 Iniciando generación de screenshots...');\r\n\r\n      // Llamar al script de generación\r\n      const response = await fetch('/api/admin/generate-screenshots', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ flow: 'checkout' })\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (result.success) {\r\n        console.log(`✅ Screenshots generados: ${result.count}`);\r\n        await loadRealScreenshots(); // Recargar lista\r\n      } else {\r\n        console.error('Error generando screenshots:', result.error);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error en generación:', error);\r\n    } finally {\r\n      setIsGeneratingScreenshots(false);\r\n    }\r\n  };\r\n\r\n  // Datos simulados para demostración\r\n  useEffect(() => {\r\n    const mockReport: TestReport = {\r\n      id: 'mock-report-fixed',\r\n      timestamp: new Date(),\r\n      totalSuites: 8,\r\n      totalTests: 47,\r\n      passed: 43,\r\n      failed: 2,\r\n      skipped: 2,\r\n      duration: 12.5,\r\n      coverage: {\r\n        statements: 89.2,\r\n        branches: 85.7,\r\n        functions: 92.1,\r\n        lines: 88.9\r\n      },\r\n      screenshots: {\r\n        total: 24,\r\n        byStatus: {\r\n          success: 18,\r\n          failure: 4,\r\n          info: 2\r\n        },\r\n        totalSize: 2.8 // MB\r\n      },\r\n      suites: [\r\n        {\r\n          name: 'Flujo de Compra sin Autenticación',\r\n          status: 'passed',\r\n          tests: 11,\r\n          passed: 11,\r\n          failed: 0,\r\n          duration: 4.8,\r\n          coverage: 92.5,\r\n          lastRun: new Date(),\r\n          screenshotCount: 15,\r\n          screenshots: [\r\n            {\r\n              id: 'checkout-flow-step1-cart-sidebar',\r\n              stepName: 'Paso 1: Sidebar del carrito',\r\n              url: '/test-screenshots/checkout-flow-step1-cart-sidebar.png',\r\n              previewUrl: '/test-screenshots/thumbs/checkout-flow-step1-cart-sidebar.png',\r\n              timestamp: new Date(),\r\n              status: 'success',\r\n              metadata: { width: 1920, height: 1080, size: 245000 }\r\n            },\r\n            {\r\n              id: 'checkout-flow-step1-checkout-transition',\r\n              stepName: 'Paso 1: Transición a checkout',\r\n              url: '/test-screenshots/checkout-flow-step1-checkout-transition.png',\r\n              previewUrl: '/test-screenshots/thumbs/checkout-flow-step1-checkout-transition.png',\r\n              timestamp: new Date(),\r\n              status: 'success',\r\n              metadata: { width: 1920, height: 1080, size: 312000 }\r\n            },\r\n            {\r\n              id: 'checkout-flow-step2-form-initial',\r\n              stepName: 'Paso 2: Formulario inicial',\r\n              url: '/test-screenshots/checkout-flow-step2-form-initial.png',\r\n              previewUrl: '/test-screenshots/thumbs/checkout-flow-step2-form-initial.png',\r\n              timestamp: new Date(),\r\n              status: 'success',\r\n              metadata: { width: 1920, height: 1080, size: 298000 }\r\n            },\r\n            {\r\n              id: 'checkout-flow-step3-validation-errors',\r\n              stepName: 'Paso 3: Errores de validación',\r\n              url: '/test-screenshots/checkout-flow-step3-validation-errors.png',\r\n              previewUrl: '/test-screenshots/thumbs/checkout-flow-step3-validation-errors.png',\r\n              timestamp: new Date(),\r\n              status: 'info',\r\n              metadata: { width: 1920, height: 1080, size: 267000 }\r\n            },\r\n            {\r\n              id: 'checkout-flow-step4-final-redirect',\r\n              stepName: 'Paso 4: Redirección final exitosa',\r\n              url: '/test-screenshots/checkout-flow-step4-final-redirect.png',\r\n              previewUrl: '/test-screenshots/thumbs/checkout-flow-step4-final-redirect.png',\r\n              timestamp: new Date(),\r\n              status: 'success',\r\n              metadata: { width: 1920, height: 1080, size: 189000 }\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          name: 'UI Components Optimization',\r\n          status: 'passed',\r\n          tests: 11,\r\n          passed: 11,\r\n          failed: 0,\r\n          duration: 2.1,\r\n          coverage: 95.2,\r\n          lastRun: new Date(),\r\n          screenshotCount: 6,\r\n          screenshots: []\r\n        },\r\n        {\r\n          name: 'E2E Lazy Loading',\r\n          status: 'passed',\r\n          tests: 8,\r\n          passed: 8,\r\n          failed: 0,\r\n          duration: 4.2,\r\n          coverage: 87.3,\r\n          lastRun: new Date(),\r\n          screenshotCount: 4,\r\n          screenshots: []\r\n        },\r\n        {\r\n          name: 'Performance Tracking',\r\n          status: 'passed',\r\n          tests: 6,\r\n          passed: 6,\r\n          failed: 0,\r\n          duration: 1.8,\r\n          coverage: 91.5,\r\n          lastRun: new Date()\r\n        },\r\n        {\r\n          name: 'Admin Orders Enterprise',\r\n          status: 'failed',\r\n          tests: 12,\r\n          passed: 10,\r\n          failed: 2,\r\n          duration: 2.9,\r\n          coverage: 78.4,\r\n          lastRun: new Date(),\r\n          screenshotCount: 8,\r\n          screenshots: []\r\n        },\r\n        {\r\n          name: 'API Integration',\r\n          status: 'passed',\r\n          tests: 7,\r\n          passed: 7,\r\n          failed: 0,\r\n          duration: 1.1,\r\n          coverage: 93.7,\r\n          lastRun: new Date()\r\n        },\r\n        {\r\n          name: 'Responsive Hooks',\r\n          status: 'pending',\r\n          tests: 3,\r\n          passed: 1,\r\n          failed: 0,\r\n          duration: 0.4,\r\n          coverage: 65.2,\r\n          lastRun: new Date()\r\n        }\r\n      ]\r\n    };\r\n\r\n    setCurrentReport(mockReport);\r\n    setLastUpdate(new Date());\r\n\r\n    // Cargar screenshots usando executionId por defecto\r\n    loadScreenshots('default-execution-id');\r\n\r\n    // Cargar screenshots reales si existen\r\n    loadRealScreenshots();\r\n  }, []);\r\n\r\n  const runAllTests = async () => {\r\n    setIsRunning(true);\r\n    try {\r\n      // Ejecutar tests reales a través de la API con screenshots habilitados\r\n      const response = await fetch('/api/admin/test-execution', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          suites: ['unit', 'components', 'e2e', 'performance'],\r\n          generateReport: true,\r\n          screenshotOptions: {\r\n            enabled: true,\r\n            captureOnFailure: true,\r\n            captureSteps: true,\r\n            quality: 80\r\n          }\r\n        })\r\n      });\r\n\r\n      if (response.ok) {\r\n        const result = await response.json();\r\n        console.log('Tests ejecutados:', result);\r\n\r\n        // Actualizar datos después de la ejecución\r\n        setTimeout(() => {\r\n          setLastUpdate(new Date());\r\n          // Recargar datos del reporte y screenshots\r\n          loadLatestReport();\r\n          if (result.executionId) {\r\n          loadScreenshots(result.executionId);\r\n          }\r\n        }, 1000);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error ejecutando tests:', error);\r\n    } finally {\r\n      setIsRunning(false);\r\n    }\r\n  };\r\n\r\n  const loadLatestReport = async () => {\r\n    try {\r\n      const response = await fetch('/api/test-reports');\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        if (data.reports && data.reports.length > 0) {\r\n          // Cargar el reporte más reciente\r\n          const latestReport = data.reports[0];\r\n          const reportResponse = await fetch(`/test-reports/${latestReport}`);\r\n          if (reportResponse.ok) {\r\n            const reportData = await reportResponse.json();\r\n            // Convertir a formato del dashboard\r\n            setCurrentReport(convertToAdminFormat(reportData));\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error cargando reporte:', error);\r\n    }\r\n  };\r\n\r\n  const convertToAdminFormat = (reportData: any): TestReport => {\r\n    // Convertir formato de reporte público a formato admin\r\n    return {\r\n      id: reportData.id || 'mock-report-fixed',\r\n      timestamp: new Date(reportData.timestamp || Date.now()),\r\n      totalSuites: reportData.steps?.length || 8,\r\n      totalTests: reportData.totalSteps || 47,\r\n      passed: reportData.completedSteps || 43,\r\n      failed: reportData.failedSteps || 2,\r\n      skipped: 2,\r\n      duration: parseFloat(reportData.summary?.duration || '12.5'),\r\n      coverage: {\r\n        statements: 89.2,\r\n        branches: 85.7,\r\n        functions: 92.1,\r\n        lines: 88.9\r\n      },\r\n      suites: generateSuitesFromReport(reportData)\r\n    };\r\n  };\r\n\r\n  const generateSuitesFromReport = (reportData: any): TestSuite[] => {\r\n    const defaultSuites = [\r\n      {\r\n        name: 'UI Components Optimization',\r\n        status: 'passed' as const,\r\n        tests: 11,\r\n        passed: 11,\r\n        failed: 0,\r\n        duration: 2.1,\r\n        coverage: 95.2,\r\n        lastRun: new Date()\r\n      },\r\n      {\r\n        name: 'E2E Lazy Loading',\r\n        status: 'passed' as const,\r\n        tests: 8,\r\n        passed: 8,\r\n        failed: 0,\r\n        duration: 4.2,\r\n        coverage: 87.3,\r\n        lastRun: new Date()\r\n      },\r\n      {\r\n        name: 'Performance Tracking',\r\n        status: 'passed' as const,\r\n        tests: 6,\r\n        passed: 6,\r\n        failed: 0,\r\n        duration: 1.8,\r\n        coverage: 91.5,\r\n        lastRun: new Date()\r\n      }\r\n    ];\r\n\r\n    // Si hay datos reales del reporte, usarlos\r\n    if (reportData.steps && reportData.steps.length > 0) {\r\n      return reportData.steps.map((step: any, index: number) => ({\r\n        name: step.name || `Test Suite ${index + 1}`,\r\n        status: step.status === 'success' ? 'passed' as const : 'failed' as const,\r\n        tests: 1,\r\n        passed: step.status === 'success' ? 1 : 0,\r\n        failed: step.status === 'success' ? 0 : 1,\r\n        duration: step.duration || 1.0,\r\n        coverage: Math.random() * 20 + 80, // Simular coverage\r\n        lastRun: new Date(step.timestamp || Date.now())\r\n      }));\r\n    }\r\n\r\n    return defaultSuites;\r\n  };\r\n\r\n  const getStatusIcon = (status: string) => {\r\n    switch (status) {\r\n      case 'passed': return <CheckCircle className=\"w-4 h-4 text-green-600\" />;\r\n      case 'failed': return <XCircle className=\"w-4 h-4 text-red-600\" />;\r\n      case 'running': return <RefreshCw className=\"w-4 h-4 text-blue-600 animate-spin\" />;\r\n      case 'pending': return <Clock className=\"w-4 h-4 text-yellow-600\" />;\r\n      default: return <TestTube className=\"w-4 h-4 text-gray-600\" />;\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'passed': return 'text-green-600 bg-green-50';\r\n      case 'failed': return 'text-red-600 bg-red-50';\r\n      case 'running': return 'text-blue-600 bg-blue-50';\r\n      case 'pending': return 'text-yellow-600 bg-yellow-50';\r\n      default: return 'text-gray-600 bg-gray-50';\r\n    }\r\n  };\r\n\r\n  const getCoverageColor = (coverage: number) => {\r\n    if (coverage >= 90) {return 'text-green-600';}\r\n    if (coverage >= 80) {return 'text-yellow-600';}\r\n    return 'text-red-600';\r\n  };\r\n\r\n  const openScreenshotModal = (screenshot: ScreenshotInfo) => {\r\n    setSelectedScreenshot(screenshot);\r\n    setShowScreenshotModal(true);\r\n  };\r\n\r\n  const downloadScreenshot = async (screenshot: ScreenshotInfo) => {\r\n    try {\r\n      const response = await fetch(screenshot.url);\r\n      const blob = await response.blob();\r\n      const url = window.URL.createObjectURL(blob);\r\n      const a = document.createElement('a');\r\n      a.href = url;\r\n      a.download = `screenshot-${screenshot.stepName}-${screenshot.id}.png`;\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      window.URL.revokeObjectURL(url);\r\n      document.body.removeChild(a);\r\n    } catch (error) {\r\n      console.error('Error descargando screenshot:', error);\r\n    }\r\n  };\r\n\r\n  const getScreenshotStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'success': return 'border-green-200 bg-green-50';\r\n      case 'failure': return 'border-red-200 bg-red-50';\r\n      case 'info': return 'border-blue-200 bg-blue-50';\r\n      default: return 'border-gray-200 bg-gray-50';\r\n    }\r\n  };\r\n\r\n  const successRate = currentReport ? \r\n    Math.round((currentReport.passed / currentReport.totalTests) * 100) : 0;\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-6 space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold text-gray-900\">Test Reports Dashboard</h1>\r\n          <p className=\"text-gray-600 mt-1\">\r\n            Monitoreo completo de testing automatizado y coverage\r\n          </p>\r\n        </div>\r\n        <div className=\"flex items-center gap-4\">\r\n          <Badge variant={successRate >= 90 ? \"default\" : \"destructive\"}>\r\n            {successRate}% Success Rate\r\n          </Badge>\r\n          <Button \r\n            onClick={runAllTests} \r\n            disabled={isRunning}\r\n            className=\"flex items-center gap-2\"\r\n          >\r\n            {isRunning ? (\r\n              <RefreshCw className=\"w-4 h-4 animate-spin\" />\r\n            ) : (\r\n              <Play className=\"w-4 h-4\" />\r\n            )}\r\n            {isRunning ? 'Ejecutando...' : 'Ejecutar Tests'}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Summary Cards */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n        <Card>\r\n          <CardHeader className=\"pb-3\">\r\n            <CardTitle className=\"text-sm font-medium text-gray-600\">Total Tests</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"text-2xl font-bold\">{currentReport?.totalTests || 0}</div>\r\n              <TestTube className=\"w-8 h-8 text-blue-500\" />\r\n            </div>\r\n            <div className=\"text-xs text-gray-500 mt-1\">\r\n              {currentReport?.totalSuites || 0} test suites\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardHeader className=\"pb-3\">\r\n            <CardTitle className=\"text-sm font-medium text-gray-600\">Tests Pasando</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"text-2xl font-bold text-green-600\">\r\n                {currentReport?.passed || 0}\r\n              </div>\r\n              <CheckCircle className=\"w-8 h-8 text-green-500\" />\r\n            </div>\r\n            <div className=\"text-xs text-gray-500 mt-1\">\r\n              {successRate}% success rate\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardHeader className=\"pb-3\">\r\n            <CardTitle className=\"text-sm font-medium text-gray-600\">Tests Fallando</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"text-2xl font-bold text-red-600\">\r\n                {currentReport?.failed || 0}\r\n              </div>\r\n              <XCircle className=\"w-8 h-8 text-red-500\" />\r\n            </div>\r\n            <div className=\"text-xs text-gray-500 mt-1\">\r\n              {currentReport?.skipped || 0} skipped\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardHeader className=\"pb-3\">\r\n            <CardTitle className=\"text-sm font-medium text-gray-600\">Coverage</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className={`text-2xl font-bold ${getCoverageColor(currentReport?.coverage.statements || 0)}`}>\r\n                {currentReport?.coverage.statements.toFixed(1) || 0}%\r\n              </div>\r\n              <Target className=\"w-8 h-8 text-purple-500\" />\r\n            </div>\r\n            <div className=\"text-xs text-gray-500 mt-1\">\r\n              Statements coverage\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardHeader className=\"pb-3\">\r\n            <CardTitle className=\"text-sm font-medium text-gray-600\">Screenshots</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"text-2xl font-bold\">\r\n                {currentReport?.screenshots?.total || 0}\r\n              </div>\r\n              <Camera className=\"w-8 h-8 text-indigo-500\" />\r\n            </div>\r\n            <div className=\"text-xs text-gray-500 mt-1\">\r\n              {currentReport?.screenshots?.totalSize || 0} MB total\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Detailed Reports */}\r\n      <Tabs defaultValue=\"suites\" className=\"space-y-6\">\r\n        <TabsList>\r\n          <TabsTrigger value=\"suites\">Test Suites</TabsTrigger>\r\n          <TabsTrigger value=\"checkout-flow\">Flujo Checkout</TabsTrigger>\r\n          <TabsTrigger value=\"screenshots\">Screenshots</TabsTrigger>\r\n          <TabsTrigger value=\"coverage\">Coverage Report</TabsTrigger>\r\n          <TabsTrigger value=\"trends\">Trends</TabsTrigger>\r\n        </TabsList>\r\n\r\n        <TabsContent value=\"suites\" className=\"space-y-4\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <FileText className=\"w-5 h-5\" />\r\n                Test Suites Status\r\n              </CardTitle>\r\n              <CardDescription>\r\n                Estado detallado de cada suite de tests\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-4\">\r\n                {currentReport?.suites.map((suite, index) => (\r\n                  <div key={index} className=\"p-4 border rounded-lg space-y-3\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div className=\"flex items-center gap-3\">\r\n                        {getStatusIcon(suite.status)}\r\n                        <div>\r\n                          <div className=\"flex items-center gap-2\">\r\n                            <div className=\"font-medium\">{suite.name}</div>\r\n                            {suite.screenshotCount && suite.screenshotCount > 0 && (\r\n                              <div className=\"flex items-center gap-1 text-xs text-gray-500\">\r\n                                <Camera className=\"w-3 h-3\" />\r\n                                <span>{suite.screenshotCount}</span>\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                          <div className=\"text-sm text-gray-500\">\r\n                            {suite.tests} tests • {suite.duration}s • {suite.coverage}% coverage\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"flex items-center gap-4\">\r\n                        <Badge className={getStatusColor(suite.status)}>\r\n                          {suite.passed}/{suite.tests} passed\r\n                        </Badge>\r\n                        <div className=\"text-sm text-gray-500\">\r\n                          {suite.lastRun.toLocaleTimeString()}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    {/* Screenshots preview */}\r\n                    {suite.screenshots && suite.screenshots.length > 0 && (\r\n                      <div>\r\n                        <div className=\"text-xs font-medium text-gray-600 mb-2\">Screenshots:</div>\r\n                        <div className=\"flex flex-wrap gap-2\">\r\n                          {suite.screenshots.slice(0, 3).map((screenshot) => (\r\n                            <div\r\n                              key={screenshot.id}\r\n                              className={`relative group cursor-pointer rounded border-2 overflow-hidden ${getScreenshotStatusColor(screenshot.status)}`}\r\n                              onClick={() => openScreenshotModal(screenshot)}\r\n                            >\r\n                              <img\r\n                                src={screenshot.previewUrl}\r\n                                alt={screenshot.stepName}\r\n                                className=\"w-16 h-12 object-cover\"\r\n                              />\r\n                              <div className=\"absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-20 transition-all duration-200 flex items-center justify-center\">\r\n                                <Eye className=\"h-3 w-3 text-white opacity-0 group-hover:opacity-100 transition-opacity\" />\r\n                              </div>\r\n                              <div className=\"absolute bottom-0 left-0 right-0 bg-black bg-opacity-75 text-white text-xs px-1 py-0.5 truncate\">\r\n                                {screenshot.stepName}\r\n                              </div>\r\n                            </div>\r\n                          ))}\r\n                          {suite.screenshots.length > 3 && (\r\n                            <div className=\"w-16 h-12 border-2 border-dashed border-gray-300 rounded flex items-center justify-center text-xs text-gray-500\">\r\n                              +{suite.screenshots.length - 3}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"checkout-flow\" className=\"space-y-4\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <Target className=\"h-5 w-5\" />\r\n                Flujo de Compra sin Autenticación\r\n              </CardTitle>\r\n              <CardDescription>\r\n                Visualización paso a paso del proceso de checkout completo\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              {/* Controles de visualización */}\r\n              <div className=\"flex items-center justify-between mb-6\">\r\n                <div className=\"flex items-center gap-4\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <span className=\"text-sm font-medium\">Vista:</span>\r\n                    <div className=\"flex border rounded-lg\">\r\n                      <Button\r\n                        variant={flowView === 'timeline' ? 'default' : 'ghost'}\r\n                        size=\"sm\"\r\n                        onClick={() => setFlowView('timeline')}\r\n                        className=\"rounded-r-none\"\r\n                      >\r\n                        Timeline\r\n                      </Button>\r\n                      <Button\r\n                        variant={flowView === 'grid' ? 'default' : 'ghost'}\r\n                        size=\"sm\"\r\n                        onClick={() => setFlowView('grid')}\r\n                        className=\"rounded-l-none\"\r\n                      >\r\n                        Grid\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <span className=\"text-sm font-medium\">Filtro:</span>\r\n                    <select\r\n                      value={screenshotFilter}\r\n                      onChange={(e) => setScreenshotFilter(e.target.value as any)}\r\n                      className=\"px-3 py-1 border rounded text-sm\"\r\n                    >\r\n                      <option value=\"all\">Todos</option>\r\n                      <option value=\"success\">Exitosos</option>\r\n                      <option value=\"failure\">Fallos</option>\r\n                      <option value=\"info\">Info</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex items-center gap-2\">\r\n                  <Badge variant=\"secondary\" className=\"text-xs\">\r\n                    {realScreenshots.length > 0 ? `${realScreenshots.length} screenshots reales` : '14 screenshots simulados'}\r\n                  </Badge>\r\n                  <Button\r\n                    size=\"sm\"\r\n                    variant=\"outline\"\r\n                    onClick={generateCheckoutScreenshots}\r\n                    disabled={isGeneratingScreenshots}\r\n                    className=\"text-xs\"\r\n                  >\r\n                    {isGeneratingScreenshots ? (\r\n                      <>\r\n                        <RefreshCw className=\"w-3 h-3 mr-1 animate-spin\" />\r\n                        Generando...\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <Camera className=\"w-3 h-3 mr-1\" />\r\n                        Generar Screenshots\r\n                      </>\r\n                    )}\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Flujo paso a paso */}\r\n              {flowView === 'timeline' ? (\r\n                <div className=\"space-y-6\">\r\n                  {/* Paso 1: Navegación */}\r\n                  <div className=\"border-l-4 border-blue-500 pl-6 relative\">\r\n                    <div className=\"absolute -left-2 top-0 w-4 h-4 bg-blue-500 rounded-full\"></div>\r\n                    <div className=\"space-y-4\">\r\n                      <div>\r\n                        <h3 className=\"font-semibold text-lg\">Paso 1: Navegación al Checkout</h3>\r\n                        <p className=\"text-sm text-gray-600\">Usuario navega desde carrito hacia checkout</p>\r\n                      </div>\r\n                      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                        {(() => {\r\n                          const screenshot = realScreenshots.find(s => s.id === 'step1-cart-sidebar');\r\n                          return (\r\n                            <div className=\"border rounded-lg p-3 hover:shadow-md transition-shadow cursor-pointer\"\r\n                                 onClick={() => {\r\n                                   if (screenshot) {\r\n                                     setSelectedScreenshot(screenshot);\r\n                                     setShowScreenshotModal(true);\r\n                                   }\r\n                                 }}>\r\n                              {screenshot ? (\r\n                                <img\r\n                                  src={screenshot.previewUrl}\r\n                                  alt={screenshot.stepName}\r\n                                  className=\"w-full h-32 object-cover rounded mb-2\"\r\n                                  onError={(e) => {\r\n                                    // Fallback a icono si la imagen no carga\r\n                                    e.currentTarget.style.display = 'none';\r\n                                    e.currentTarget.nextElementSibling.style.display = 'flex';\r\n                                  }}\r\n                                />\r\n                              ) : null}\r\n                              <div className={`w-full h-32 bg-gradient-to-br from-blue-100 to-blue-200 rounded mb-2 flex items-center justify-center ${screenshot ? 'hidden' : ''}`}>\r\n                                <div className=\"text-center\">\r\n                                  <ShoppingCart className=\"w-8 h-8 text-blue-600 mx-auto mb-1\" />\r\n                                  <span className=\"text-xs text-blue-700\">Carrito Sidebar</span>\r\n                                </div>\r\n                              </div>\r\n                              <p className=\"text-xs font-medium\">{screenshot?.stepName || 'Sidebar del carrito'}</p>\r\n                              <p className=\"text-xs text-gray-500\">Productos visibles, botón checkout activo</p>\r\n                            </div>\r\n                          );\r\n                        })()}\r\n                        {(() => {\r\n                          const screenshot = realScreenshots.find(s => s.id === 'step1-checkout-transition');\r\n                          return (\r\n                            <div className=\"border rounded-lg p-3 hover:shadow-md transition-shadow cursor-pointer\"\r\n                                 onClick={() => {\r\n                                   if (screenshot) {\r\n                                     setSelectedScreenshot(screenshot);\r\n                                     setShowScreenshotModal(true);\r\n                                   }\r\n                                 }}>\r\n                              {screenshot ? (\r\n                                <img\r\n                                  src={screenshot.previewUrl}\r\n                                  alt={screenshot.stepName}\r\n                                  className=\"w-full h-32 object-cover rounded mb-2\"\r\n                                  onError={(e) => {\r\n                                    e.currentTarget.style.display = 'none';\r\n                                    e.currentTarget.nextElementSibling.style.display = 'flex';\r\n                                  }}\r\n                                />\r\n                              ) : null}\r\n                              <div className={`w-full h-32 bg-gradient-to-br from-purple-100 to-purple-200 rounded mb-2 flex items-center justify-center ${screenshot ? 'hidden' : ''}`}>\r\n                                <div className=\"text-center\">\r\n                                  <ArrowRight className=\"w-8 h-8 text-purple-600 mx-auto mb-1\" />\r\n                                  <span className=\"text-xs text-purple-700\">Navegación</span>\r\n                                </div>\r\n                              </div>\r\n                              <p className=\"text-xs font-medium\">{screenshot?.stepName || 'Transición a checkout'}</p>\r\n                              <p className=\"text-xs text-gray-500\">Loading state durante navegación</p>\r\n                            </div>\r\n                          );\r\n                        })()}\r\n                        {(() => {\r\n                          const screenshot = realScreenshots.find(s => s.id === 'step1-checkout-page');\r\n                          return (\r\n                            <div className=\"border rounded-lg p-3 hover:shadow-md transition-shadow cursor-pointer\"\r\n                                 onClick={() => {\r\n                                   if (screenshot) {\r\n                                     setSelectedScreenshot(screenshot);\r\n                                     setShowScreenshotModal(true);\r\n                                   }\r\n                                 }}>\r\n                              {screenshot ? (\r\n                                <img\r\n                                  src={screenshot.previewUrl}\r\n                                  alt={screenshot.stepName}\r\n                                  className=\"w-full h-32 object-cover rounded mb-2\"\r\n                                  onError={(e) => {\r\n                                    e.currentTarget.style.display = 'none';\r\n                                    e.currentTarget.nextElementSibling.style.display = 'flex';\r\n                                  }}\r\n                                />\r\n                              ) : null}\r\n                              <div className={`w-full h-32 bg-gradient-to-br from-green-100 to-green-200 rounded mb-2 flex items-center justify-center ${screenshot ? 'hidden' : ''}`}>\r\n                                <div className=\"text-center\">\r\n                                  <CreditCard className=\"w-8 h-8 text-green-600 mx-auto mb-1\" />\r\n                                  <span className=\"text-xs text-green-700\">Checkout</span>\r\n                                </div>\r\n                              </div>\r\n                              <p className=\"text-xs font-medium\">{screenshot?.stepName || 'Página de checkout'}</p>\r\n                              <p className=\"text-xs text-gray-500\">Formulario inicial visible</p>\r\n                            </div>\r\n                          );\r\n                        })()}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Paso 2: Validación */}\r\n                  <div className=\"border-l-4 border-yellow-500 pl-6 relative\">\r\n                    <div className=\"absolute -left-2 top-0 w-4 h-4 bg-yellow-500 rounded-full\"></div>\r\n                    <div className=\"space-y-4\">\r\n                      <div>\r\n                        <h3 className=\"font-semibold text-lg\">Paso 2: Validación de Formulario</h3>\r\n                        <p className=\"text-sm text-gray-600\">Pruebas de validación y manejo de errores</p>\r\n                      </div>\r\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                        <div className=\"border rounded-lg p-3 hover:shadow-md transition-shadow cursor-pointer\">\r\n                          <div className=\"w-full h-32 bg-gradient-to-br from-red-100 to-red-200 rounded mb-2 flex items-center justify-center\">\r\n                            <div className=\"text-center\">\r\n                              <AlertCircle className=\"w-8 h-8 text-red-600 mx-auto mb-1\" />\r\n                              <span className=\"text-xs text-red-700\">Errores</span>\r\n                            </div>\r\n                          </div>\r\n                          <p className=\"text-xs font-medium\">Errores de validación</p>\r\n                          <p className=\"text-xs text-gray-500\">Campos obligatorios resaltados</p>\r\n                        </div>\r\n                        <div className=\"border rounded-lg p-3 hover:shadow-md transition-shadow cursor-pointer\">\r\n                          <div className=\"w-full h-32 bg-gradient-to-br from-orange-100 to-orange-200 rounded mb-2 flex items-center justify-center\">\r\n                            <div className=\"text-center\">\r\n                              <XCircle className=\"w-8 h-8 text-orange-600 mx-auto mb-1\" />\r\n                              <span className=\"text-xs text-orange-700\">Email</span>\r\n                            </div>\r\n                          </div>\r\n                          <p className=\"text-xs font-medium\">Validación de email</p>\r\n                          <p className=\"text-xs text-gray-500\">Error de formato de email</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Paso 3: Completado */}\r\n                  <div className=\"border-l-4 border-green-500 pl-6 relative\">\r\n                    <div className=\"absolute -left-2 top-0 w-4 h-4 bg-green-500 rounded-full\"></div>\r\n                    <div className=\"space-y-4\">\r\n                      <div>\r\n                        <h3 className=\"font-semibold text-lg\">Paso 3: Checkout Exitoso</h3>\r\n                        <p className=\"text-sm text-gray-600\">Formulario completado y redirección final</p>\r\n                      </div>\r\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                        <div className=\"border rounded-lg p-3 hover:shadow-md transition-shadow cursor-pointer\">\r\n                          <div className=\"w-full h-32 bg-gradient-to-br from-green-100 to-green-200 rounded mb-2 flex items-center justify-center\">\r\n                            <div className=\"text-center\">\r\n                              <CheckCircle className=\"w-8 h-8 text-green-600 mx-auto mb-1\" />\r\n                              <span className=\"text-xs text-green-700\">Completo</span>\r\n                            </div>\r\n                          </div>\r\n                          <p className=\"text-xs font-medium\">Formulario completo</p>\r\n                          <p className=\"text-xs text-gray-500\">Todos los campos validados</p>\r\n                        </div>\r\n                        <div className=\"border rounded-lg p-3 hover:shadow-md transition-shadow cursor-pointer\">\r\n                          <div className=\"w-full h-32 bg-gradient-to-br from-blue-100 to-blue-200 rounded mb-2 flex items-center justify-center\">\r\n                            <div className=\"text-center\">\r\n                              <Target className=\"w-8 h-8 text-blue-600 mx-auto mb-1\" />\r\n                              <span className=\"text-xs text-blue-700\">Éxito</span>\r\n                            </div>\r\n                          </div>\r\n                          <p className=\"text-xs font-medium\">Redirección exitosa</p>\r\n                          <p className=\"text-xs text-gray-500\">MercadoPago o página de éxito</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\r\n                  {/* Vista en grid de todos los screenshots */}\r\n                  {(realScreenshots.length > 0 ? realScreenshots : Array.from({ length: 14 }, (_, i) => ({\r\n                    id: `demo-${i}`,\r\n                    stepName: `Screenshot ${i + 1}`,\r\n                    url: '',\r\n                    previewUrl: '',\r\n                    status: 'demo'\r\n                  }))).map((screenshot, i) => {\r\n                    const stepIcons = [ShoppingCart, ArrowRight, CreditCard, User, CheckCircle];\r\n                    const stepColors = ['blue', 'purple', 'green', 'orange', 'emerald'];\r\n                    const iconIndex = Math.floor(i / 3) % stepIcons.length;\r\n                    const colorIndex = Math.floor(i / 3) % stepColors.length;\r\n                    const Icon = stepIcons[iconIndex];\r\n                    const color = stepColors[colorIndex];\r\n\r\n                    return (\r\n                      <div key={screenshot.id || i}\r\n                           className=\"border rounded-lg p-3 hover:shadow-md transition-shadow cursor-pointer\"\r\n                           onClick={() => {\r\n                             if (screenshot.url) {\r\n                               setSelectedScreenshot(screenshot);\r\n                               setShowScreenshotModal(true);\r\n                             }\r\n                           }}>\r\n                        {screenshot.previewUrl ? (\r\n                          <img\r\n                            src={screenshot.previewUrl}\r\n                            alt={screenshot.stepName}\r\n                            className=\"w-full h-24 object-cover rounded mb-2\"\r\n                            onError={(e) => {\r\n                              e.currentTarget.style.display = 'none';\r\n                              e.currentTarget.nextElementSibling.style.display = 'flex';\r\n                            }}\r\n                          />\r\n                        ) : null}\r\n                        <div className={`w-full h-24 bg-gradient-to-br from-${color}-100 to-${color}-200 rounded mb-2 flex items-center justify-center ${screenshot.previewUrl ? 'hidden' : ''}`}>\r\n                          <div className=\"text-center\">\r\n                            <Icon className={`w-6 h-6 text-${color}-600 mx-auto mb-1`} />\r\n                            <span className={`text-xs text-${color}-700`}>{i + 1}</span>\r\n                          </div>\r\n                        </div>\r\n                        <p className=\"text-xs font-medium\">{screenshot.stepName}</p>\r\n                        <p className=\"text-xs text-gray-500\">\r\n                          {screenshot.status === 'demo' ? `Screenshot ${i + 1}` :\r\n                           `Paso ${Math.floor(i / 5) + 1}.${(i % 5) + 1}`}\r\n                        </p>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              )}\r\n\r\n              {/* Métricas del flujo */}\r\n              <div className=\"mt-8 grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n                <div className=\"text-center p-4 bg-blue-50 rounded-lg\">\r\n                  <div className=\"text-2xl font-bold text-blue-600\">4.8s</div>\r\n                  <div className=\"text-sm text-gray-600\">Duración total</div>\r\n                </div>\r\n                <div className=\"text-center p-4 bg-green-50 rounded-lg\">\r\n                  <div className=\"text-2xl font-bold text-green-600\">11/11</div>\r\n                  <div className=\"text-sm text-gray-600\">Tests pasados</div>\r\n                </div>\r\n                <div className=\"text-center p-4 bg-purple-50 rounded-lg\">\r\n                  <div className=\"text-2xl font-bold text-purple-600\">{realScreenshots.length || 14}</div>\r\n                  <div className=\"text-sm text-gray-600\">Screenshots</div>\r\n                </div>\r\n                <div className=\"text-center p-4 bg-orange-50 rounded-lg\">\r\n                  <div className=\"text-2xl font-bold text-orange-600\">92.5%</div>\r\n                  <div className=\"text-sm text-gray-600\">Cobertura</div>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"screenshots\" className=\"space-y-4\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <Camera className=\"h-5 w-5\" />\r\n                Screenshots del Reporte\r\n              </CardTitle>\r\n              <CardDescription>\r\n                Capturas de pantalla organizadas por suite y estado\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              {/* Estadísticas de Screenshots */}\r\n              <div className=\"grid grid-cols-4 gap-4 mb-6\">\r\n                <div className=\"text-center p-4 bg-gray-50 rounded-lg\">\r\n                  <div className=\"text-2xl font-bold text-gray-900\">\r\n                    {currentReport?.screenshots?.total || 0}\r\n                  </div>\r\n                  <div className=\"text-sm text-gray-600\">Total</div>\r\n                </div>\r\n                <div className=\"text-center p-4 bg-green-50 rounded-lg\">\r\n                  <div className=\"text-2xl font-bold text-green-600\">\r\n                    {currentReport?.screenshots?.byStatus?.success || 0}\r\n                  </div>\r\n                  <div className=\"text-sm text-gray-600\">Exitosos</div>\r\n                </div>\r\n                <div className=\"text-center p-4 bg-red-50 rounded-lg\">\r\n                  <div className=\"text-2xl font-bold text-red-600\">\r\n                    {currentReport?.screenshots?.byStatus?.failure || 0}\r\n                  </div>\r\n                  <div className=\"text-sm text-gray-600\">Fallos</div>\r\n                </div>\r\n                <div className=\"text-center p-4 bg-blue-50 rounded-lg\">\r\n                  <div className=\"text-2xl font-bold text-blue-600\">\r\n                    {currentReport?.screenshots?.byStatus?.info || 0}\r\n                  </div>\r\n                  <div className=\"text-sm text-gray-600\">Info</div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Screenshots por Suite */}\r\n              <div className=\"space-y-6\">\r\n                {currentReport?.suites\r\n                  .filter(suite => suite.screenshots && suite.screenshots.length > 0)\r\n                  .map((suite, index) => (\r\n                  <div key={index} className=\"border rounded-lg p-4\">\r\n                    <div className=\"flex items-center justify-between mb-4\">\r\n                      <div className=\"flex items-center gap-3\">\r\n                        {getStatusIcon(suite.status)}\r\n                        <h3 className=\"font-semibold\">{suite.name}</h3>\r\n                        <Badge variant=\"outline\">\r\n                          {suite.screenshots?.length || 0} screenshots\r\n                        </Badge>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-4\">\r\n                      {suite.screenshots?.map((screenshot) => (\r\n                        <div\r\n                          key={screenshot.id}\r\n                          className={`relative group cursor-pointer rounded-lg border-2 overflow-hidden transition-all hover:shadow-lg ${\r\n                            getScreenshotStatusColor(screenshot.status)\r\n                          }`}\r\n                          onClick={() => openScreenshotModal(screenshot)}\r\n                        >\r\n                          <img\r\n                            src={screenshot.previewUrl}\r\n                            alt={screenshot.stepName}\r\n                            className=\"w-full h-24 object-cover\"\r\n                          />\r\n                          <div className=\"absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-30 transition-all duration-200 flex items-center justify-center\">\r\n                            <div className=\"opacity-0 group-hover:opacity-100 transition-opacity\">\r\n                              <Eye className=\"h-6 w-6 text-white\" />\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black to-transparent p-2\">\r\n                            <div className=\"text-white text-xs font-medium truncate\">\r\n                              {screenshot.stepName}\r\n                            </div>\r\n                            <div className=\"text-white text-xs opacity-75\">\r\n                              {screenshot.timestamp.toLocaleTimeString()}\r\n                            </div>\r\n                          </div>\r\n                          <div className={`absolute top-2 right-2 w-3 h-3 rounded-full ${\r\n                            screenshot.status === 'success' ? 'bg-green-500' :\r\n                            screenshot.status === 'failure' ? 'bg-red-500' :\r\n                            'bg-blue-500'\r\n                          }`} />\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n                \r\n                {(!currentReport?.suites.some(suite => suite.screenshots && suite.screenshots.length > 0)) && (\r\n                  <div className=\"text-center py-12 text-gray-500\">\r\n                    <Camera className=\"h-12 w-12 mx-auto mb-4 opacity-50\" />\r\n                    <p>No hay screenshots disponibles en este reporte</p>\r\n                    <p className=\"text-sm\">Los screenshots se capturan automáticamente durante la ejecución de tests</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"coverage\" className=\"space-y-4\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Coverage Breakdown</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                {currentReport && Object.entries(currentReport.coverage).map(([key, value]) => (\r\n                  <div key={key} className=\"space-y-2\">\r\n                    <div className=\"flex justify-between text-sm\">\r\n                      <span className=\"capitalize\">{key}</span>\r\n                      <span className={getCoverageColor(value)}>{value.toFixed(1)}%</span>\r\n                    </div>\r\n                    <div className=\"w-full bg-gray-200 rounded-full h-2\">\r\n                      <div \r\n                        className={`h-2 rounded-full ${\r\n                          value >= 90 ? 'bg-green-500' : \r\n                          value >= 80 ? 'bg-yellow-500' : 'bg-red-500'\r\n                        }`}\r\n                        style={{ width: `${value}%` }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Coverage Goals</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <div className=\"space-y-3\">\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span className=\"text-sm\">Statements</span>\r\n                    <Badge variant={currentReport && currentReport.coverage.statements >= 90 ? \"default\" : \"secondary\"}>\r\n                      {currentReport && currentReport.coverage.statements >= 90 ? 'Met' : 'Pending'}\r\n                    </Badge>\r\n                  </div>\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span className=\"text-sm\">Branches</span>\r\n                    <Badge variant={currentReport && currentReport.coverage.branches >= 85 ? \"default\" : \"secondary\"}>\r\n                      {currentReport && currentReport.coverage.branches >= 85 ? 'Met' : 'Pending'}\r\n                    </Badge>\r\n                  </div>\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span className=\"text-sm\">Functions</span>\r\n                    <Badge variant={currentReport && currentReport.coverage.functions >= 90 ? \"default\" : \"secondary\"}>\r\n                      {currentReport && currentReport.coverage.functions >= 90 ? 'Met' : 'Pending'}\r\n                    </Badge>\r\n                  </div>\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span className=\"text-sm\">Lines</span>\r\n                    <Badge variant={currentReport && currentReport.coverage.lines >= 85 ? \"default\" : \"secondary\"}>\r\n                      {currentReport && currentReport.coverage.lines >= 85 ? 'Met' : 'Pending'}\r\n                    </Badge>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"trends\" className=\"space-y-4\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <TrendingUp className=\"w-5 h-5\" />\r\n                Testing Trends\r\n              </CardTitle>\r\n              <CardDescription>\r\n                Evolución histórica de métricas de testing\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-6\">\r\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                  <div className=\"text-center p-4 border rounded-lg\">\r\n                    <div className=\"text-2xl font-bold text-green-600\">+15%</div>\r\n                    <div className=\"text-sm text-gray-600\">Coverage improvement</div>\r\n                    <div className=\"text-xs text-gray-500\">Last 30 days</div>\r\n                  </div>\r\n                  <div className=\"text-center p-4 border rounded-lg\">\r\n                    <div className=\"text-2xl font-bold text-blue-600\">-23%</div>\r\n                    <div className=\"text-sm text-gray-600\">Test execution time</div>\r\n                    <div className=\"text-xs text-gray-500\">Last 30 days</div>\r\n                  </div>\r\n                  <div className=\"text-center p-4 border rounded-lg\">\r\n                    <div className=\"text-2xl font-bold text-purple-600\">+8</div>\r\n                    <div className=\"text-sm text-gray-600\">New test suites</div>\r\n                    <div className=\"text-xs text-gray-500\">Last 30 days</div>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"text-center text-gray-500\">\r\n                  <BarChart3 className=\"w-12 h-12 mx-auto mb-2 opacity-50\" />\r\n                  <p>Gráficos de tendencias disponibles próximamente</p>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n      </Tabs>\r\n\r\n      {/* Footer Info */}\r\n      <Card>\r\n        <CardContent className=\"pt-6\">\r\n          <div className=\"flex items-center justify-between text-sm text-gray-500\">\r\n            <div>\r\n              Última actualización: {lastUpdate.toLocaleString()}\r\n            </div>\r\n            <div>\r\n              Duración total: {currentReport?.duration.toFixed(1)}s\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n      \r\n      {/* Screenshot Modal */}\r\n      {showScreenshotModal && selectedScreenshot && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n          <div className=\"bg-white rounded-lg max-w-4xl max-h-[90vh] overflow-auto\">\r\n            <div className=\"p-6\">\r\n              <div className=\"flex items-center justify-between mb-4\">\r\n                <div>\r\n                  <h3 className=\"text-lg font-semibold\">{selectedScreenshot.stepName}</h3>\r\n                  <p className=\"text-sm text-muted-foreground\">\r\n                    {selectedScreenshot.timestamp.toLocaleString()}\r\n                  </p>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <Button\r\n                    variant=\"outline\"\r\n                    size=\"sm\"\r\n                    onClick={() => downloadScreenshot(selectedScreenshot)}\r\n                  >\r\n                    <Download className=\"h-4 w-4 mr-2\" />\r\n                    Descargar\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"outline\"\r\n                    size=\"sm\"\r\n                    onClick={() => setShowScreenshotModal(false)}\r\n                  >\r\n                    <X className=\"h-4 w-4\" />\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"mb-4\">\r\n                <img\r\n                  src={selectedScreenshot.url}\r\n                  alt={selectedScreenshot.stepName}\r\n                  className=\"max-w-full h-auto rounded border\"\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"grid grid-cols-2 gap-4 text-sm\">\r\n                <div>\r\n                  <span className=\"font-medium\">Estado:</span>\r\n                  <Badge className={`ml-2 ${\r\n                    selectedScreenshot.status === 'success' ? 'bg-green-100 text-green-800' :\r\n                    selectedScreenshot.status === 'failure' ? 'bg-red-100 text-red-800' :\r\n                    'bg-blue-100 text-blue-800'\r\n                  }`}>\r\n                    {selectedScreenshot.status}\r\n                  </Badge>\r\n                </div>\r\n                <div>\r\n                  <span className=\"font-medium\">Tamaño:</span>\r\n                  <span className=\"ml-2\">\r\n                    {selectedScreenshot.metadata.width} x {selectedScreenshot.metadata.height}\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  <span className=\"font-medium\">Archivo:</span>\r\n                  <span className=\"ml-2\">\r\n                    {(selectedScreenshot.metadata.size / 1024).toFixed(1)} KB\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  <span className=\"font-medium\">ID:</span>\r\n                  <span className=\"ml-2 font-mono text-xs\">{selectedScreenshot.id}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TestReportsDashboard;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}