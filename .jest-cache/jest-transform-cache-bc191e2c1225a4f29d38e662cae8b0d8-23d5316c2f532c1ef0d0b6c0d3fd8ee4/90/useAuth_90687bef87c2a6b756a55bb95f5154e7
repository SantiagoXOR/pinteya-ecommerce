7dd7d6d71fbaebb3fc82eab284b6ef91
/**
 * Hook de Autenticaci칩n para NextAuth.js
 * Reemplaza los hooks de Clerk con NextAuth.js
 */ "use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: Object.getOwnPropertyDescriptor(all, name).get
    });
}
_export(exports, {
    get useAuth () {
        return useAuth;
    },
    get useIsAdmin () {
        return useIsAdmin;
    },
    get useRequireAuth () {
        return useRequireAuth;
    }
});
const _react = require("next-auth/react");
const _navigation = require("next/navigation");
function useAuth() {
    const { data: session, status } = (0, _react.useSession)();
    const router = (0, _navigation.useRouter)();
    const handleSignIn = useCallback(async (provider = "google", options)=>{
        try {
            await (0, _react.signIn)(provider, {
                callbackUrl: options?.callbackUrl || "/admin",
                redirect: true
            });
        } catch (error) {
            console.error("Error al iniciar sesi칩n:", error);
        }
    }, []);
    const handleSignOut = useCallback(async (options)=>{
        try {
            await (0, _react.signOut)({
                callbackUrl: options?.callbackUrl || "/",
                redirect: true
            });
        } catch (error) {
            console.error("Error al cerrar sesi칩n:", error);
        }
    }, []);
    // Mapear usuario de NextAuth a nuestro formato
    const user = session?.user ? {
        id: session.user.id || session.user.email || '',
        name: session.user.name,
        email: session.user.email,
        image: session.user.image
    } : null;
    return {
        user,
        isLoaded: status !== "loading",
        isSignedIn: status === "authenticated",
        signIn: handleSignIn,
        signOut: handleSignOut,
        session,
        status
    };
}
function useIsAdmin() {
    const { user, isSignedIn } = useAuth();
    // Por ahora, todos los usuarios autenticados son admin
    // TODO: Implementar sistema de roles m치s granular
    return isSignedIn && !!user;
}
function useRequireAuth(redirectTo = "/api/auth/signin") {
    const { isSignedIn, isLoaded } = useAuth();
    const router = (0, _navigation.useRouter)();
    if (isLoaded && !isSignedIn) {
        router.push(redirectTo);
    }
    return {
        isSignedIn,
        isLoaded
    };
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbWFydGlcXERlc2t0b3BcXERFU0FSUk9MTE9TV1xcQk9JTEVSUExBVFRFIEUtQ09NTUVSQ0VcXHNyY1xcaG9va3NcXHVzZUF1dGgudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEhvb2sgZGUgQXV0ZW50aWNhY2nDs24gcGFyYSBOZXh0QXV0aC5qc1xyXG4gKiBSZWVtcGxhemEgbG9zIGhvb2tzIGRlIENsZXJrIGNvbiBOZXh0QXV0aC5qc1xyXG4gKi9cclxuXHJcblwidXNlIGNsaWVudFwiXHJcblxyXG5pbXBvcnQgeyB1c2VTZXNzaW9uLCBzaWduSW4sIHNpZ25PdXQgfSBmcm9tICduZXh0LWF1dGgvcmVhY3QnO1xyXG5pbXBvcnQgeyB1c2VSb3V0ZXIgfSBmcm9tICduZXh0L25hdmlnYXRpb24nO1xyXG5pbXBvcnQgeyB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IFVzZUF1dGhSZXR1cm4sIEF1dGhVc2VyIH0gZnJvbSAnQC90eXBlcy9ob29rcyc7XHJcblxyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4vLyBJTlRFUkZBQ0VTXHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbi8vIEludGVyZmFjZXMgbW92aWRhcyBhIEAvdHlwZXMvaG9va3MgcGFyYSByZXV0aWxpemFjacOzblxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHVzZUF1dGgoKTogVXNlQXV0aFJldHVybiB7XHJcbiAgY29uc3QgeyBkYXRhOiBzZXNzaW9uLCBzdGF0dXMgfSA9IHVzZVNlc3Npb24oKVxyXG4gIGNvbnN0IHJvdXRlciA9IHVzZVJvdXRlcigpXHJcblxyXG4gIGNvbnN0IGhhbmRsZVNpZ25JbiA9IHVzZUNhbGxiYWNrKGFzeW5jIChwcm92aWRlcjogc3RyaW5nID0gXCJnb29nbGVcIiwgb3B0aW9ucz86IHsgY2FsbGJhY2tVcmw/OiBzdHJpbmcgfSkgPT4ge1xyXG4gICAgdHJ5IHtcclxuICAgICAgYXdhaXQgc2lnbkluKHByb3ZpZGVyLCB7XHJcbiAgICAgICAgY2FsbGJhY2tVcmw6IG9wdGlvbnM/LmNhbGxiYWNrVXJsIHx8IFwiL2FkbWluXCIsXHJcbiAgICAgICAgcmVkaXJlY3Q6IHRydWUsXHJcbiAgICAgIH0pXHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgYWwgaW5pY2lhciBzZXNpw7NuOlwiLCBlcnJvcilcclxuICAgIH1cclxuICB9LCBbXSlcclxuXHJcbiAgY29uc3QgaGFuZGxlU2lnbk91dCA9IHVzZUNhbGxiYWNrKGFzeW5jIChvcHRpb25zPzogeyBjYWxsYmFja1VybD86IHN0cmluZyB9KSA9PiB7XHJcbiAgICB0cnkge1xyXG4gICAgICBhd2FpdCBzaWduT3V0KHtcclxuICAgICAgICBjYWxsYmFja1VybDogb3B0aW9ucz8uY2FsbGJhY2tVcmwgfHwgXCIvXCIsXHJcbiAgICAgICAgcmVkaXJlY3Q6IHRydWUsXHJcbiAgICAgIH0pXHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgYWwgY2VycmFyIHNlc2nDs246XCIsIGVycm9yKVxyXG4gICAgfVxyXG4gIH0sIFtdKVxyXG5cclxuICAvLyBNYXBlYXIgdXN1YXJpbyBkZSBOZXh0QXV0aCBhIG51ZXN0cm8gZm9ybWF0b1xyXG4gIGNvbnN0IHVzZXI6IEF1dGhVc2VyIHwgbnVsbCA9IHNlc3Npb24/LnVzZXIgPyB7XHJcbiAgICBpZDogc2Vzc2lvbi51c2VyLmlkIHx8IHNlc3Npb24udXNlci5lbWFpbCB8fCAnJyxcclxuICAgIG5hbWU6IHNlc3Npb24udXNlci5uYW1lLFxyXG4gICAgZW1haWw6IHNlc3Npb24udXNlci5lbWFpbCxcclxuICAgIGltYWdlOiBzZXNzaW9uLnVzZXIuaW1hZ2UsXHJcbiAgfSA6IG51bGxcclxuXHJcbiAgcmV0dXJuIHtcclxuICAgIHVzZXIsXHJcbiAgICBpc0xvYWRlZDogc3RhdHVzICE9PSBcImxvYWRpbmdcIixcclxuICAgIGlzU2lnbmVkSW46IHN0YXR1cyA9PT0gXCJhdXRoZW50aWNhdGVkXCIsXHJcbiAgICBzaWduSW46IGhhbmRsZVNpZ25JbixcclxuICAgIHNpZ25PdXQ6IGhhbmRsZVNpZ25PdXQsXHJcbiAgICBzZXNzaW9uLFxyXG4gICAgc3RhdHVzLFxyXG4gIH1cclxufVxyXG5cclxuLy8gSG9vayBwYXJhIHZlcmlmaWNhciBzaSBlbCB1c3VhcmlvIGVzIGFkbWluaXN0cmFkb3JcclxuZXhwb3J0IGZ1bmN0aW9uIHVzZUlzQWRtaW4oKTogYm9vbGVhbiB7XHJcbiAgY29uc3QgeyB1c2VyLCBpc1NpZ25lZEluIH0gPSB1c2VBdXRoKClcclxuICBcclxuICAvLyBQb3IgYWhvcmEsIHRvZG9zIGxvcyB1c3VhcmlvcyBhdXRlbnRpY2Fkb3Mgc29uIGFkbWluXHJcbiAgLy8gVE9ETzogSW1wbGVtZW50YXIgc2lzdGVtYSBkZSByb2xlcyBtw6FzIGdyYW51bGFyXHJcbiAgcmV0dXJuIGlzU2lnbmVkSW4gJiYgISF1c2VyXHJcbn1cclxuXHJcbi8vIEhvb2sgcGFyYSBwcm90ZWdlciBydXRhc1xyXG5leHBvcnQgZnVuY3Rpb24gdXNlUmVxdWlyZUF1dGgocmVkaXJlY3RUbzogc3RyaW5nID0gXCIvYXBpL2F1dGgvc2lnbmluXCIpIHtcclxuICBjb25zdCB7IGlzU2lnbmVkSW4sIGlzTG9hZGVkIH0gPSB1c2VBdXRoKClcclxuICBjb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKVxyXG5cclxuICBpZiAoaXNMb2FkZWQgJiYgIWlzU2lnbmVkSW4pIHtcclxuICAgIHJvdXRlci5wdXNoKHJlZGlyZWN0VG8pXHJcbiAgfVxyXG5cclxuICByZXR1cm4geyBpc1NpZ25lZEluLCBpc0xvYWRlZCB9XHJcbn1cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuIl0sIm5hbWVzIjpbInVzZUF1dGgiLCJ1c2VJc0FkbWluIiwidXNlUmVxdWlyZUF1dGgiLCJkYXRhIiwic2Vzc2lvbiIsInN0YXR1cyIsInVzZVNlc3Npb24iLCJyb3V0ZXIiLCJ1c2VSb3V0ZXIiLCJoYW5kbGVTaWduSW4iLCJ1c2VDYWxsYmFjayIsInByb3ZpZGVyIiwib3B0aW9ucyIsInNpZ25JbiIsImNhbGxiYWNrVXJsIiwicmVkaXJlY3QiLCJlcnJvciIsImNvbnNvbGUiLCJoYW5kbGVTaWduT3V0Iiwic2lnbk91dCIsInVzZXIiLCJpZCIsImVtYWlsIiwibmFtZSIsImltYWdlIiwiaXNMb2FkZWQiLCJpc1NpZ25lZEluIiwicmVkaXJlY3RUbyIsInB1c2giXSwibWFwcGluZ3MiOiJBQUFBOzs7Q0FHQyxHQUVEOzs7Ozs7Ozs7Ozs7UUFZZ0JBO2VBQUFBOztRQThDQUM7ZUFBQUE7O1FBU0FDO2VBQUFBOzs7dUJBakU0Qjs0QkFDbEI7QUFTbkIsU0FBU0Y7SUFDZCxNQUFNLEVBQUVHLE1BQU1DLE9BQU8sRUFBRUMsTUFBTSxFQUFFLEdBQUdDLElBQUFBLGlCQUFVO0lBQzVDLE1BQU1DLFNBQVNDLElBQUFBLHFCQUFTO0lBRXhCLE1BQU1DLGVBQWVDLFlBQVksT0FBT0MsV0FBbUIsUUFBUSxFQUFFQztRQUNuRSxJQUFJO1lBQ0YsTUFBTUMsSUFBQUEsYUFBTSxFQUFDRixVQUFVO2dCQUNyQkcsYUFBYUYsU0FBU0UsZUFBZTtnQkFDckNDLFVBQVU7WUFDWjtRQUNGLEVBQUUsT0FBT0MsT0FBTztZQUNkQyxRQUFRRCxLQUFLLENBQUMsNEJBQTRCQTtRQUM1QztJQUNGLEdBQUcsRUFBRTtJQUVMLE1BQU1FLGdCQUFnQlIsWUFBWSxPQUFPRTtRQUN2QyxJQUFJO1lBQ0YsTUFBTU8sSUFBQUEsY0FBTyxFQUFDO2dCQUNaTCxhQUFhRixTQUFTRSxlQUFlO2dCQUNyQ0MsVUFBVTtZQUNaO1FBQ0YsRUFBRSxPQUFPQyxPQUFPO1lBQ2RDLFFBQVFELEtBQUssQ0FBQywyQkFBMkJBO1FBQzNDO0lBQ0YsR0FBRyxFQUFFO0lBRUwsK0NBQStDO0lBQy9DLE1BQU1JLE9BQXdCaEIsU0FBU2dCLE9BQU87UUFDNUNDLElBQUlqQixRQUFRZ0IsSUFBSSxDQUFDQyxFQUFFLElBQUlqQixRQUFRZ0IsSUFBSSxDQUFDRSxLQUFLLElBQUk7UUFDN0NDLE1BQU1uQixRQUFRZ0IsSUFBSSxDQUFDRyxJQUFJO1FBQ3ZCRCxPQUFPbEIsUUFBUWdCLElBQUksQ0FBQ0UsS0FBSztRQUN6QkUsT0FBT3BCLFFBQVFnQixJQUFJLENBQUNJLEtBQUs7SUFDM0IsSUFBSTtJQUVKLE9BQU87UUFDTEo7UUFDQUssVUFBVXBCLFdBQVc7UUFDckJxQixZQUFZckIsV0FBVztRQUN2QlEsUUFBUUo7UUFDUlUsU0FBU0Q7UUFDVGQ7UUFDQUM7SUFDRjtBQUNGO0FBR08sU0FBU0o7SUFDZCxNQUFNLEVBQUVtQixJQUFJLEVBQUVNLFVBQVUsRUFBRSxHQUFHMUI7SUFFN0IsdURBQXVEO0lBQ3ZELGtEQUFrRDtJQUNsRCxPQUFPMEIsY0FBYyxDQUFDLENBQUNOO0FBQ3pCO0FBR08sU0FBU2xCLGVBQWV5QixhQUFxQixrQkFBa0I7SUFDcEUsTUFBTSxFQUFFRCxVQUFVLEVBQUVELFFBQVEsRUFBRSxHQUFHekI7SUFDakMsTUFBTU8sU0FBU0MsSUFBQUEscUJBQVM7SUFFeEIsSUFBSWlCLFlBQVksQ0FBQ0MsWUFBWTtRQUMzQm5CLE9BQU9xQixJQUFJLENBQUNEO0lBQ2Q7SUFFQSxPQUFPO1FBQUVEO1FBQVlEO0lBQVM7QUFDaEMifQ==