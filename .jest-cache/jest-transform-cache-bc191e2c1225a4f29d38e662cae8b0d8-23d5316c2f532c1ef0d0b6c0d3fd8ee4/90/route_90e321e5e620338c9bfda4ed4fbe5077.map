{"version":3,"names":["DELETE","cov_cgqt8xve3","f","s","GET","PUT","request","context","params","id","parseInt","b","isNaN","errorResponse","data","success","error","_server","NextResponse","json","status","supabase","_supabase","getSupabaseClient","console","product","from","select","eq","single","code","notFoundResponse","handleSupabaseError","response","message","body","productData","_validations","validateData","ProductSchema","partial","update","delete"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\products\\[id]\\route.ts"],"sourcesContent":["// ===================================\n// PINTEYA E-COMMERCE - API DE PRODUCTO INDIVIDUAL\n// ===================================\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { getSupabaseClient, handleSupabaseError } from '@/lib/integrations/supabase';\nimport { validateData, ProductSchema } from '@/lib/validations';\nimport { ApiResponse, ProductWithCategory } from '@/types/api';\n\n// ===================================\n// GET /api/products/[id] - Obtener producto por ID\n// ===================================\nexport async function GET(\n  request: NextRequest,\n  context: { params: Promise<{ id: string }> }\n) {\n  try {\n    const params = await context.params;\n    // Validar parámetro ID\n    const id = parseInt(params.id, 10);\n    if (isNaN(id) || id <= 0) {\n      const errorResponse: ApiResponse<null> = {\n        data: null,\n        success: false,\n        error: 'ID de producto inválido',\n      };\n      return NextResponse.json(errorResponse, { status: 400 });\n    }\n    \n    const supabase = getSupabaseClient();\n\n    // Verificar que el cliente de Supabase esté disponible\n    if (!supabase) {\n      console.error('Cliente de Supabase no disponible en GET /api/products/[id]');\n      const errorResponse: ApiResponse<null> = {\n        data: null,\n        success: false,\n        error: 'Servicio de base de datos no disponible',\n      };\n      return NextResponse.json(errorResponse, { status: 503 });\n    }\n\n    // Obtener producto con categoría\n    const { data: product, error } = await supabase\n      .from('products')\n      .select(`\n        id, name, slug, description, price, discounted_price, brand, stock, images, created_at, updated_at,\n        category:categories(id, name, slug)\n      `)\n      .eq('id', id)\n      .single();\n\n    if (error) {\n      if (error.code === 'PGRST116') {\n        const notFoundResponse: ApiResponse<null> = {\n          data: null,\n          success: false,\n          error: 'Producto no encontrado',\n        };\n        return NextResponse.json(notFoundResponse, { status: 404 });\n      }\n      handleSupabaseError(error, `GET /api/products/${id}`);\n    }\n\n    const response: ApiResponse<ProductWithCategory> = {\n      data: product,\n      success: true,\n      message: 'Producto obtenido exitosamente',\n    };\n\n    return NextResponse.json(response);\n\n  } catch (error: any) {\n    console.error('Error en GET /api/products/[id]:', error);\n    \n    const errorResponse: ApiResponse<null> = {\n      data: null,\n      success: false,\n      error: error.message || 'Error interno del servidor',\n    };\n\n    return NextResponse.json(errorResponse, { status: 500 });\n  }\n}\n\n// ===================================\n// PUT /api/products/[id] - Actualizar producto (Admin)\n// ===================================\nexport async function PUT(\n  request: NextRequest,\n  context: { params: Promise<{ id: string }> }\n) {\n  try {\n    const params = await context.params;\n    // TODO: Verificar permisos de administrador\n    // const { userId } = auth();\n    // if (!userId || !isAdmin(userId)) {\n    //   return NextResponse.json({ error: 'No autorizado' }, { status: 401 });\n    // }\n\n    // Validar parámetro ID\n    const id = parseInt(params.id, 10);\n    if (isNaN(id) || id <= 0) {\n      const errorResponse: ApiResponse<null> = {\n        data: null,\n        success: false,\n        error: 'ID de producto inválido',\n      };\n      return NextResponse.json(errorResponse, { status: 400 });\n    }\n    \n    const body = await request.json();\n    \n    // Validar datos del producto (permitir actualizaciones parciales)\n    const productData = validateData(ProductSchema.partial(), body);\n    \n    const supabase = getSupabaseClient(true); // Usar cliente admin\n\n    // Verificar que el cliente administrativo esté disponible\n    if (!supabase) {\n      console.error('Cliente administrativo de Supabase no disponible en PUT /api/products/[id]');\n      const errorResponse: ApiResponse<null> = {\n        data: null,\n        success: false,\n        error: 'Servicio administrativo no disponible',\n      };\n      return NextResponse.json(errorResponse, { status: 503 });\n    }\n\n    // Actualizar producto\n    const { data: product, error } = await supabase\n      .from('products')\n      .update(productData)\n      .eq('id', id)\n      .select(`\n        *,\n        category:categories(id, name, slug)\n      `)\n      .single();\n\n    if (error) {\n      if (error.code === 'PGRST116') {\n        const notFoundResponse: ApiResponse<null> = {\n          data: null,\n          success: false,\n          error: 'Producto no encontrado',\n        };\n        return NextResponse.json(notFoundResponse, { status: 404 });\n      }\n      handleSupabaseError(error, `PUT /api/products/${id}`);\n    }\n\n    const response: ApiResponse<ProductWithCategory> = {\n      data: product,\n      success: true,\n      message: 'Producto actualizado exitosamente',\n    };\n\n    return NextResponse.json(response);\n\n  } catch (error: any) {\n    console.error('Error en PUT /api/products/[id]:', error);\n    \n    const errorResponse: ApiResponse<null> = {\n      data: null,\n      success: false,\n      error: error.message || 'Error interno del servidor',\n    };\n\n    return NextResponse.json(errorResponse, { status: 500 });\n  }\n}\n\n// ===================================\n// DELETE /api/products/[id] - Eliminar producto (Admin)\n// ===================================\nexport async function DELETE(\n  request: NextRequest,\n  context: { params: Promise<{ id: string }> }\n) {\n  try {\n    const params = await context.params;\n    // TODO: Verificar permisos de administrador\n    // const { userId } = auth();\n    // if (!userId || !isAdmin(userId)) {\n    //   return NextResponse.json({ error: 'No autorizado' }, { status: 401 });\n    // }\n\n    // Validar parámetro ID\n    const id = parseInt(params.id, 10);\n    if (isNaN(id) || id <= 0) {\n      const errorResponse: ApiResponse<null> = {\n        data: null,\n        success: false,\n        error: 'ID de producto inválido',\n      };\n      return NextResponse.json(errorResponse, { status: 400 });\n    }\n    \n    const supabase = getSupabaseClient(true); // Usar cliente admin\n\n    // Verificar que el cliente administrativo esté disponible\n    if (!supabase) {\n      console.error('Cliente administrativo de Supabase no disponible en DELETE /api/products/[id]');\n      const errorResponse: ApiResponse<null> = {\n        data: null,\n        success: false,\n        error: 'Servicio administrativo no disponible',\n      };\n      return NextResponse.json(errorResponse, { status: 503 });\n    }\n\n    // Eliminar producto\n    const { error } = await supabase\n      .from('products')\n      .delete()\n      .eq('id', id);\n\n    if (error) {\n      handleSupabaseError(error, `DELETE /api/products/${id}`);\n    }\n\n    const response: ApiResponse<null> = {\n      data: null,\n      success: true,\n      message: 'Producto eliminado exitosamente',\n    };\n\n    return NextResponse.json(response);\n\n  } catch (error: any) {\n    console.error('Error en DELETE /api/products/[id]:', error);\n    \n    const errorResponse: ApiResponse<null> = {\n      data: null,\n      success: false,\n      error: error.message || 'Error interno del servidor',\n    };\n\n    return NextResponse.json(errorResponse, { status: 500 });\n  }\n}\n"],"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","ignoreList":[]}