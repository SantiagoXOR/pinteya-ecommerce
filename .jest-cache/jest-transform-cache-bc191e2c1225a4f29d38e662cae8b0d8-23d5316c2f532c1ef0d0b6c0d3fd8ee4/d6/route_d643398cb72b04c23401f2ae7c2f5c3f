62c9e6ae9d1e07cf4573da223c6ac120
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_18qrosp443() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\debug\\route.ts";
  var hash = "52a27e89f03107c437c33a74cdc5517cd6228e88";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\debug\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 23
        }
      },
      "6": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 38
        }
      },
      "7": {
        start: {
          line: 21,
          column: 20
        },
        end: {
          line: 21,
          column: 52
        }
      },
      "8": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 24
        }
      },
      "9": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 104,
          column: 5
        }
      },
      "10": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 62
        }
      },
      "11": {
        start: {
          line: 26,
          column: 28
        },
        end: {
          line: 46,
          column: 9
        }
      },
      "12": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 76,
          column: 9
        }
      },
      "13": {
        start: {
          line: 49,
          column: 32
        },
        end: {
          line: 49,
          column: 68
        }
      },
      "14": {
        start: {
          line: 50,
          column: 39
        },
        end: {
          line: 50,
          column: 76
        }
      },
      "15": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 72,
          column: 13
        }
      },
      "16": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 52,
          column: 72
        }
      },
      "17": {
        start: {
          line: 53,
          column: 16
        },
        end: {
          line: 53,
          column: 97
        }
      },
      "18": {
        start: {
          line: 55,
          column: 33
        },
        end: {
          line: 55,
          column: 95
        }
      },
      "19": {
        start: {
          line: 57,
          column: 65
        },
        end: {
          line: 57,
          column: 118
        }
      },
      "20": {
        start: {
          line: 58,
          column: 16
        },
        end: {
          line: 64,
          column: 17
        }
      },
      "21": {
        start: {
          line: 59,
          column: 20
        },
        end: {
          line: 59,
          column: 65
        }
      },
      "22": {
        start: {
          line: 60,
          column: 20
        },
        end: {
          line: 60,
          column: 71
        }
      },
      "23": {
        start: {
          line: 62,
          column: 20
        },
        end: {
          line: 62,
          column: 62
        }
      },
      "24": {
        start: {
          line: 63,
          column: 20
        },
        end: {
          line: 63,
          column: 59
        }
      },
      "25": {
        start: {
          line: 66,
          column: 69
        },
        end: {
          line: 66,
          column: 124
        }
      },
      "26": {
        start: {
          line: 67,
          column: 16
        },
        end: {
          line: 71,
          column: 17
        }
      },
      "27": {
        start: {
          line: 68,
          column: 20
        },
        end: {
          line: 68,
          column: 67
        }
      },
      "28": {
        start: {
          line: 70,
          column: 20
        },
        end: {
          line: 70,
          column: 64
        }
      },
      "29": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 54
        }
      },
      "30": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 98
        }
      },
      "31": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 86,
          column: 9
        }
      },
      "32": {
        start: {
          line: 80,
          column: 23
        },
        end: {
          line: 80,
          column: 36
        }
      },
      "33": {
        start: {
          line: 81,
          column: 25
        },
        end: {
          line: 81,
          column: 40
        }
      },
      "34": {
        start: {
          line: 82,
          column: 39
        },
        end: {
          line: 82,
          column: 109
        }
      },
      "35": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 86
        }
      },
      "36": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 94
        }
      },
      "37": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 87,
          column: 72
        }
      },
      "38": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 93,
          column: 11
        }
      },
      "39": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 95,
          column: 56
        }
      },
      "40": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 103,
          column: 11
        }
      },
      "41": {
        start: {
          line: 107,
          column: 28
        },
        end: {
          line: 107,
          column: 30
        }
      },
      "42": {
        start: {
          line: 108,
          column: 4
        },
        end: {
          line: 110,
          column: 5
        }
      },
      "43": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 109,
          column: 74
        }
      },
      "44": {
        start: {
          line: 111,
          column: 4
        },
        end: {
          line: 113,
          column: 5
        }
      },
      "45": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 75
        }
      },
      "46": {
        start: {
          line: 114,
          column: 4
        },
        end: {
          line: 116,
          column: 5
        }
      },
      "47": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 115,
          column: 90
        }
      },
      "48": {
        start: {
          line: 117,
          column: 4
        },
        end: {
          line: 119,
          column: 5
        }
      },
      "49": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 118,
          column: 91
        }
      },
      "50": {
        start: {
          line: 120,
          column: 4
        },
        end: {
          line: 122,
          column: 5
        }
      },
      "51": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 121,
          column: 96
        }
      },
      "52": {
        start: {
          line: 123,
          column: 4
        },
        end: {
          line: 125,
          column: 5
        }
      },
      "53": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 124,
          column: 90
        }
      },
      "54": {
        start: {
          line: 126,
          column: 4
        },
        end: {
          line: 126,
          column: 27
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 19
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "GET",
        decl: {
          start: {
            line: 23,
            column: 15
          },
          end: {
            line: 23,
            column: 18
          }
        },
        loc: {
          start: {
            line: 23,
            column: 28
          },
          end: {
            line: 105,
            column: 1
          }
        },
        line: 23
      },
      "4": {
        name: "generateRecommendations",
        decl: {
          start: {
            line: 106,
            column: 9
          },
          end: {
            line: 106,
            column: 32
          }
        },
        loc: {
          start: {
            line: 106,
            column: 46
          },
          end: {
            line: 127,
            column: 1
          }
        },
        line: 106
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 72,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 72,
            column: 13
          }
        }, {
          start: {
            line: 54,
            column: 19
          },
          end: {
            line: 72,
            column: 13
          }
        }],
        line: 51
      },
      "1": {
        loc: {
          start: {
            line: 51,
            column: 16
          },
          end: {
            line: 51,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 16
          },
          end: {
            line: 51,
            column: 28
          }
        }, {
          start: {
            line: 51,
            column: 32
          },
          end: {
            line: 51,
            column: 51
          }
        }],
        line: 51
      },
      "2": {
        loc: {
          start: {
            line: 58,
            column: 16
          },
          end: {
            line: 64,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 16
          },
          end: {
            line: 64,
            column: 17
          }
        }, {
          start: {
            line: 61,
            column: 23
          },
          end: {
            line: 64,
            column: 17
          }
        }],
        line: 58
      },
      "3": {
        loc: {
          start: {
            line: 67,
            column: 16
          },
          end: {
            line: 71,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 16
          },
          end: {
            line: 71,
            column: 17
          }
        }, {
          start: {
            line: 69,
            column: 23
          },
          end: {
            line: 71,
            column: 17
          }
        }],
        line: 67
      },
      "4": {
        loc: {
          start: {
            line: 75,
            column: 41
          },
          end: {
            line: 75,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 75,
            column: 66
          },
          end: {
            line: 75,
            column: 79
          }
        }, {
          start: {
            line: 75,
            column: 82
          },
          end: {
            line: 75,
            column: 97
          }
        }],
        line: 75
      },
      "5": {
        loc: {
          start: {
            line: 85,
            column: 37
          },
          end: {
            line: 85,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 85,
            column: 62
          },
          end: {
            line: 85,
            column: 75
          }
        }, {
          start: {
            line: 85,
            column: 78
          },
          end: {
            line: 85,
            column: 93
          }
        }],
        line: 85
      },
      "6": {
        loc: {
          start: {
            line: 99,
            column: 21
          },
          end: {
            line: 99,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 99,
            column: 46
          },
          end: {
            line: 99,
            column: 59
          }
        }, {
          start: {
            line: 99,
            column: 62
          },
          end: {
            line: 99,
            column: 81
          }
        }],
        line: 99
      },
      "7": {
        loc: {
          start: {
            line: 108,
            column: 4
          },
          end: {
            line: 110,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 108,
            column: 4
          },
          end: {
            line: 110,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 108
      },
      "8": {
        loc: {
          start: {
            line: 111,
            column: 4
          },
          end: {
            line: 113,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 111,
            column: 4
          },
          end: {
            line: 113,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 111
      },
      "9": {
        loc: {
          start: {
            line: 114,
            column: 4
          },
          end: {
            line: 116,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 4
          },
          end: {
            line: 116,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      },
      "10": {
        loc: {
          start: {
            line: 117,
            column: 4
          },
          end: {
            line: 119,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 117,
            column: 4
          },
          end: {
            line: 119,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 117
      },
      "11": {
        loc: {
          start: {
            line: 120,
            column: 4
          },
          end: {
            line: 122,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 120,
            column: 4
          },
          end: {
            line: 122,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 120
      },
      "12": {
        loc: {
          start: {
            line: 123,
            column: 4
          },
          end: {
            line: 125,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 123,
            column: 4
          },
          end: {
            line: 125,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 123
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\debug\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { createClient } from '@supabase/supabase-js';\r\n\r\n/**\r\n * API de diagn\xF3stico para el panel administrativo\r\n * Esta API NO requiere autenticaci\xF3n para poder diagnosticar problemas\r\n */\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    console.log('\uD83D\uDD0D Admin Debug: Starting diagnostic...');\r\n\r\n    const diagnostics = {\r\n      timestamp: new Date().toISOString(),\r\n      environment: {\r\n        nodeEnv: process.env.NODE_ENV,\r\n        hasSupabaseUrl: !!process.env.NEXT_PUBLIC_SUPABASE_URL,\r\n        hasSupabaseServiceKey: !!process.env.SUPABASE_SERVICE_ROLE_KEY,\r\n        hasClerkSecretKey: !!process.env.CLERK_SECRET_KEY,\r\n        hasClerkPublishableKey: !!process.env.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY,\r\n      },\r\n      supabase: {\r\n        connection: 'unknown',\r\n        productsTable: 'unknown',\r\n        categoriesTable: 'unknown',\r\n        error: null\r\n      },\r\n      apis: {\r\n        productsDirectExists: true,\r\n        productsSimpleExists: false,\r\n        error: null\r\n      }\r\n    };\r\n\r\n    // Test Supabase connection\r\n    try {\r\n      const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\r\n      const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;\r\n\r\n      if (!supabaseUrl || !supabaseServiceKey) {\r\n        diagnostics.supabase.connection = 'missing_credentials';\r\n        diagnostics.supabase.error = 'Missing SUPABASE_URL or SUPABASE_SERVICE_ROLE_KEY';\r\n      } else {\r\n        const supabase = createClient(supabaseUrl, supabaseServiceKey);\r\n\r\n        // Test products table\r\n        const { data: products, error: productsError } = await supabase\r\n          .from('products')\r\n          .select('id')\r\n          .limit(1);\r\n\r\n        if (productsError) {\r\n          diagnostics.supabase.productsTable = 'error';\r\n          diagnostics.supabase.error = productsError.message;\r\n        } else {\r\n          diagnostics.supabase.productsTable = 'ok';\r\n          diagnostics.supabase.connection = 'ok';\r\n        }\r\n\r\n        // Test categories table\r\n        const { data: categories, error: categoriesError } = await supabase\r\n          .from('categories')\r\n          .select('id')\r\n          .limit(1);\r\n\r\n        if (categoriesError) {\r\n          diagnostics.supabase.categoriesTable = 'error';\r\n        } else {\r\n          diagnostics.supabase.categoriesTable = 'ok';\r\n        }\r\n      }\r\n    } catch (error) {\r\n      diagnostics.supabase.connection = 'error';\r\n      diagnostics.supabase.error = error instanceof Error ? error.message : 'Unknown error';\r\n    }\r\n\r\n    // Test API endpoints existence\r\n    try {\r\n      // Check if products-simple API exists\r\n      const fs = require('fs');\r\n      const path = require('path');\r\n      const productsSimplePath = path.join(process.cwd(), 'src/app/api/admin/products-simple/route.ts');\r\n      diagnostics.apis.productsSimpleExists = fs.existsSync(productsSimplePath);\r\n    } catch (error) {\r\n      diagnostics.apis.error = error instanceof Error ? error.message : 'Unknown error';\r\n    }\r\n\r\n    console.log('\u2705 Admin Debug: Diagnostic completed', diagnostics);\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      message: 'Diagn\xF3stico completado',\r\n      data: diagnostics,\r\n      recommendations: generateRecommendations(diagnostics)\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('\u274C Error in admin debug:', error);\r\n    return NextResponse.json(\r\n      {\r\n        success: false,\r\n        error: 'Error en diagn\xF3stico',\r\n        details: error instanceof Error ? error.message : 'Error desconocido',\r\n        timestamp: new Date().toISOString()\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\nfunction generateRecommendations(diagnostics: any): string[] {\r\n  const recommendations: string[] = [];\r\n\r\n  if (!diagnostics.environment.hasSupabaseUrl) {\r\n    recommendations.push('\u274C Falta variable NEXT_PUBLIC_SUPABASE_URL');\r\n  }\r\n\r\n  if (!diagnostics.environment.hasSupabaseServiceKey) {\r\n    recommendations.push('\u274C Falta variable SUPABASE_SERVICE_ROLE_KEY');\r\n  }\r\n\r\n  if (diagnostics.supabase.connection === 'error') {\r\n    recommendations.push('\u274C Error de conexi\xF3n con Supabase - Verificar credenciales');\r\n  }\r\n\r\n  if (diagnostics.supabase.productsTable === 'error') {\r\n    recommendations.push('\u274C Error accediendo tabla products - Verificar RLS policies');\r\n  }\r\n\r\n  if (!diagnostics.apis.productsSimpleExists) {\r\n    recommendations.push('\u26A0\uFE0F API products-simple no existe - Crear o usar products-direct');\r\n  }\r\n\r\n  if (recommendations.length === 0) {\r\n    recommendations.push('\u2705 Configuraci\xF3n parece correcta - Verificar autenticaci\xF3n');\r\n  }\r\n\r\n  return recommendations;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "runtime", "request", "console", "log", "diagnostics", "timestamp", "Date", "toISOString", "environment", "nodeEnv", "process", "env", "NODE_ENV", "hasSupabaseUrl", "NEXT_PUBLIC_SUPABASE_URL", "hasSupabaseServiceKey", "SUPABASE_SERVICE_ROLE_KEY", "hasClerkSecretKey", "CLERK_SECRET_KEY", "hasClerkPublishableKey", "NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY", "supabase", "connection", "productsTable", "categoriesTable", "error", "apis", "productsDirectExists", "productsSimpleExists", "supabaseUrl", "supabaseServiceKey", "createClient", "data", "products", "productsError", "from", "select", "limit", "message", "categories", "categoriesError", "Error", "fs", "require", "path", "productsSimplePath", "join", "cwd", "existsSync", "NextResponse", "json", "success", "recommendations", "generateRecommendations", "details", "status", "push", "length"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "52a27e89f03107c437c33a74cdc5517cd6228e88"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_18qrosp443 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_18qrosp443();
cov_18qrosp443().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_18qrosp443().f[0]++;
  cov_18qrosp443().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_18qrosp443().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_18qrosp443().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_18qrosp443().f[1]++;
    cov_18qrosp443().s[4]++;
    return GET;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_18qrosp443().f[2]++;
    cov_18qrosp443().s[5]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_18qrosp443().s[6]++, require("next/server"));
const _supabasejs =
/* istanbul ignore next */
(cov_18qrosp443().s[7]++, require("@supabase/supabase-js"));
const runtime =
/* istanbul ignore next */
(cov_18qrosp443().s[8]++, 'nodejs');
async function GET(request) {
  /* istanbul ignore next */
  cov_18qrosp443().f[3]++;
  cov_18qrosp443().s[9]++;
  try {
    /* istanbul ignore next */
    cov_18qrosp443().s[10]++;
    console.log('ğ Admin Debug: Starting diagnostic...');
    const diagnostics =
    /* istanbul ignore next */
    (cov_18qrosp443().s[11]++, {
      timestamp: new Date().toISOString(),
      environment: {
        nodeEnv: process.env.NODE_ENV,
        hasSupabaseUrl: !!process.env.NEXT_PUBLIC_SUPABASE_URL,
        hasSupabaseServiceKey: !!process.env.SUPABASE_SERVICE_ROLE_KEY,
        hasClerkSecretKey: !!process.env.CLERK_SECRET_KEY,
        hasClerkPublishableKey: !!process.env.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY
      },
      supabase: {
        connection: 'unknown',
        productsTable: 'unknown',
        categoriesTable: 'unknown',
        error: null
      },
      apis: {
        productsDirectExists: true,
        productsSimpleExists: false,
        error: null
      }
    });
    // Test Supabase connection
    /* istanbul ignore next */
    cov_18qrosp443().s[12]++;
    try {
      const supabaseUrl =
      /* istanbul ignore next */
      (cov_18qrosp443().s[13]++, process.env.NEXT_PUBLIC_SUPABASE_URL);
      const supabaseServiceKey =
      /* istanbul ignore next */
      (cov_18qrosp443().s[14]++, process.env.SUPABASE_SERVICE_ROLE_KEY);
      /* istanbul ignore next */
      cov_18qrosp443().s[15]++;
      if (
      /* istanbul ignore next */
      (cov_18qrosp443().b[1][0]++, !supabaseUrl) ||
      /* istanbul ignore next */
      (cov_18qrosp443().b[1][1]++, !supabaseServiceKey)) {
        /* istanbul ignore next */
        cov_18qrosp443().b[0][0]++;
        cov_18qrosp443().s[16]++;
        diagnostics.supabase.connection = 'missing_credentials';
        /* istanbul ignore next */
        cov_18qrosp443().s[17]++;
        diagnostics.supabase.error = 'Missing SUPABASE_URL or SUPABASE_SERVICE_ROLE_KEY';
      } else {
        /* istanbul ignore next */
        cov_18qrosp443().b[0][1]++;
        const supabase =
        /* istanbul ignore next */
        (cov_18qrosp443().s[18]++, (0, _supabasejs.createClient)(supabaseUrl, supabaseServiceKey));
        // Test products table
        const {
          data: products,
          error: productsError
        } =
        /* istanbul ignore next */
        (cov_18qrosp443().s[19]++, await supabase.from('products').select('id').limit(1));
        /* istanbul ignore next */
        cov_18qrosp443().s[20]++;
        if (productsError) {
          /* istanbul ignore next */
          cov_18qrosp443().b[2][0]++;
          cov_18qrosp443().s[21]++;
          diagnostics.supabase.productsTable = 'error';
          /* istanbul ignore next */
          cov_18qrosp443().s[22]++;
          diagnostics.supabase.error = productsError.message;
        } else {
          /* istanbul ignore next */
          cov_18qrosp443().b[2][1]++;
          cov_18qrosp443().s[23]++;
          diagnostics.supabase.productsTable = 'ok';
          /* istanbul ignore next */
          cov_18qrosp443().s[24]++;
          diagnostics.supabase.connection = 'ok';
        }
        // Test categories table
        const {
          data: categories,
          error: categoriesError
        } =
        /* istanbul ignore next */
        (cov_18qrosp443().s[25]++, await supabase.from('categories').select('id').limit(1));
        /* istanbul ignore next */
        cov_18qrosp443().s[26]++;
        if (categoriesError) {
          /* istanbul ignore next */
          cov_18qrosp443().b[3][0]++;
          cov_18qrosp443().s[27]++;
          diagnostics.supabase.categoriesTable = 'error';
        } else {
          /* istanbul ignore next */
          cov_18qrosp443().b[3][1]++;
          cov_18qrosp443().s[28]++;
          diagnostics.supabase.categoriesTable = 'ok';
        }
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_18qrosp443().s[29]++;
      diagnostics.supabase.connection = 'error';
      /* istanbul ignore next */
      cov_18qrosp443().s[30]++;
      diagnostics.supabase.error = error instanceof Error ?
      /* istanbul ignore next */
      (cov_18qrosp443().b[4][0]++, error.message) :
      /* istanbul ignore next */
      (cov_18qrosp443().b[4][1]++, 'Unknown error');
    }
    // Test API endpoints existence
    /* istanbul ignore next */
    cov_18qrosp443().s[31]++;
    try {
      // Check if products-simple API exists
      const fs =
      /* istanbul ignore next */
      (cov_18qrosp443().s[32]++, require('fs'));
      const path =
      /* istanbul ignore next */
      (cov_18qrosp443().s[33]++, require('path'));
      const productsSimplePath =
      /* istanbul ignore next */
      (cov_18qrosp443().s[34]++, path.join(process.cwd(), 'src/app/api/admin/products-simple/route.ts'));
      /* istanbul ignore next */
      cov_18qrosp443().s[35]++;
      diagnostics.apis.productsSimpleExists = fs.existsSync(productsSimplePath);
    } catch (error) {
      /* istanbul ignore next */
      cov_18qrosp443().s[36]++;
      diagnostics.apis.error = error instanceof Error ?
      /* istanbul ignore next */
      (cov_18qrosp443().b[5][0]++, error.message) :
      /* istanbul ignore next */
      (cov_18qrosp443().b[5][1]++, 'Unknown error');
    }
    /* istanbul ignore next */
    cov_18qrosp443().s[37]++;
    console.log('â Admin Debug: Diagnostic completed', diagnostics);
    /* istanbul ignore next */
    cov_18qrosp443().s[38]++;
    return _server.NextResponse.json({
      success: true,
      message: 'DiagnÃ³stico completado',
      data: diagnostics,
      recommendations: generateRecommendations(diagnostics)
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_18qrosp443().s[39]++;
    console.error('â Error in admin debug:', error);
    /* istanbul ignore next */
    cov_18qrosp443().s[40]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Error en diagnÃ³stico',
      details: error instanceof Error ?
      /* istanbul ignore next */
      (cov_18qrosp443().b[6][0]++, error.message) :
      /* istanbul ignore next */
      (cov_18qrosp443().b[6][1]++, 'Error desconocido'),
      timestamp: new Date().toISOString()
    }, {
      status: 500
    });
  }
}
function generateRecommendations(diagnostics) {
  /* istanbul ignore next */
  cov_18qrosp443().f[4]++;
  const recommendations =
  /* istanbul ignore next */
  (cov_18qrosp443().s[41]++, []);
  /* istanbul ignore next */
  cov_18qrosp443().s[42]++;
  if (!diagnostics.environment.hasSupabaseUrl) {
    /* istanbul ignore next */
    cov_18qrosp443().b[7][0]++;
    cov_18qrosp443().s[43]++;
    recommendations.push('â Falta variable NEXT_PUBLIC_SUPABASE_URL');
  } else
  /* istanbul ignore next */
  {
    cov_18qrosp443().b[7][1]++;
  }
  cov_18qrosp443().s[44]++;
  if (!diagnostics.environment.hasSupabaseServiceKey) {
    /* istanbul ignore next */
    cov_18qrosp443().b[8][0]++;
    cov_18qrosp443().s[45]++;
    recommendations.push('â Falta variable SUPABASE_SERVICE_ROLE_KEY');
  } else
  /* istanbul ignore next */
  {
    cov_18qrosp443().b[8][1]++;
  }
  cov_18qrosp443().s[46]++;
  if (diagnostics.supabase.connection === 'error') {
    /* istanbul ignore next */
    cov_18qrosp443().b[9][0]++;
    cov_18qrosp443().s[47]++;
    recommendations.push('â Error de conexiÃ³n con Supabase - Verificar credenciales');
  } else
  /* istanbul ignore next */
  {
    cov_18qrosp443().b[9][1]++;
  }
  cov_18qrosp443().s[48]++;
  if (diagnostics.supabase.productsTable === 'error') {
    /* istanbul ignore next */
    cov_18qrosp443().b[10][0]++;
    cov_18qrosp443().s[49]++;
    recommendations.push('â Error accediendo tabla products - Verificar RLS policies');
  } else
  /* istanbul ignore next */
  {
    cov_18qrosp443().b[10][1]++;
  }
  cov_18qrosp443().s[50]++;
  if (!diagnostics.apis.productsSimpleExists) {
    /* istanbul ignore next */
    cov_18qrosp443().b[11][0]++;
    cov_18qrosp443().s[51]++;
    recommendations.push('â ï¸ API products-simple no existe - Crear o usar products-direct');
  } else
  /* istanbul ignore next */
  {
    cov_18qrosp443().b[11][1]++;
  }
  cov_18qrosp443().s[52]++;
  if (recommendations.length === 0) {
    /* istanbul ignore next */
    cov_18qrosp443().b[12][0]++;
    cov_18qrosp443().s[53]++;
    recommendations.push('â ConfiguraciÃ³n parece correcta - Verificar autenticaciÃ³n');
  } else
  /* istanbul ignore next */
  {
    cov_18qrosp443().b[12][1]++;
  }
  cov_18qrosp443().s[54]++;
  return recommendations;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,