08fdc76ced2c7401c02eb3e725d1f896
// =====================================================
// COMPONENTE: LOGISTICS MAP ENTERPRISE
// Descripción: Mapa interactivo con tracking tiempo real usando MapLibre GL JS
// Basado en: MapLibre GL JS + React + WebSockets
// =====================================================
'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "LogisticsMap", {
    enumerable: true,
    get: function() {
        return LogisticsMap;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _card = require("../../ui/card");
const _button = require("../../ui/button");
const _badge = require("../../ui/badge");
const _switch = require("../../ui/switch");
const _select = require("../../ui/select");
const _lucidereact = require("lucide-react");
const _utils = require("../../../lib/core/utils");
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
// =====================================================
// CONFIGURACIÓN DEL MAPA
// =====================================================
const MAP_CONFIG = {
    style: 'https://api.maptiler.com/maps/streets/style.json?key=demo',
    center: [
        -58.3816,
        -34.6037
    ],
    zoom: 10,
    pitch: 45,
    bearing: 0
};
const MARKER_COLORS = {
    pending: '#6b7280',
    confirmed: '#3b82f6',
    picked_up: '#f59e0b',
    in_transit: '#f97316',
    out_for_delivery: '#8b5cf6',
    delivered: '#10b981',
    exception: '#ef4444',
    cancelled: '#6b7280',
    returned: '#ef4444'
};
function LogisticsMap({ shipments = [], selectedShipment, onShipmentSelect, realTimeEnabled = false, className }) {
    const mapContainer = (0, _react.useRef)(null);
    const map = (0, _react.useRef)(null);
    const [mapLoaded, setMapLoaded] = (0, _react.useState)(false);
    const [isFullscreen, setIsFullscreen] = (0, _react.useState)(false);
    const [mapStyle, setMapStyle] = (0, _react.useState)('streets');
    const [showGeofences, setShowGeofences] = (0, _react.useState)(true);
    const [showRoutes, setShowRoutes] = (0, _react.useState)(true);
    const [filterStatus, setFilterStatus] = (0, _react.useState)('all');
    // Estados del mapa
    const [markers, setMarkers] = (0, _react.useState)([]);
    const [geofences, setGeofences] = (0, _react.useState)([]);
    const [activeRoutes, setActiveRoutes] = (0, _react.useState)([]);
    // =====================================================
    // INICIALIZACIÓN DEL MAPA
    // =====================================================
    (0, _react.useEffect)(()=>{
        if (!mapContainer.current || map.current) {
            return;
        }
        // Importar MapLibre GL JS dinámicamente
        Promise.resolve().then(()=>/*#__PURE__*/ _interop_require_wildcard(require("maplibre-gl"))).then((maplibregl)=>{
            map.current = new maplibregl.Map({
                container: mapContainer.current,
                style: MAP_CONFIG.style,
                center: MAP_CONFIG.center,
                zoom: MAP_CONFIG.zoom,
                pitch: MAP_CONFIG.pitch,
                bearing: MAP_CONFIG.bearing
            });
            map.current.on('load', ()=>{
                setMapLoaded(true);
                initializeMapLayers();
                loadInitialData();
            });
            // Eventos del mapa
            map.current.on('click', 'shipments-layer', (e)=>{
                const shipmentId = e.features[0].properties.shipmentId;
                const shipment = shipments.find((s)=>s.id.toString() === shipmentId);
                if (shipment && onShipmentSelect) {
                    onShipmentSelect(shipment);
                }
            });
            // Cursor pointer en markers
            map.current.on('mouseenter', 'shipments-layer', ()=>{
                map.current.getCanvas().style.cursor = 'pointer';
            });
            map.current.on('mouseleave', 'shipments-layer', ()=>{
                map.current.getCanvas().style.cursor = '';
            });
        });
        return ()=>{
            if (map.current) {
                map.current.remove();
                map.current = null;
            }
        };
    }, []);
    // =====================================================
    // INICIALIZAR CAPAS DEL MAPA
    // =====================================================
    const initializeMapLayers = (0, _react.useCallback)(()=>{
        if (!map.current || !mapLoaded) {
            return;
        }
        // Capa de geofences
        map.current.addSource('geofences', {
            type: 'geojson',
            data: {
                type: 'FeatureCollection',
                features: []
            }
        });
        map.current.addLayer({
            id: 'geofences-fill',
            type: 'fill',
            source: 'geofences',
            paint: {
                'fill-color': [
                    'match',
                    [
                        'get',
                        'type'
                    ],
                    'delivery_zone',
                    '#10b981',
                    'restricted',
                    '#ef4444',
                    'priority',
                    '#f59e0b',
                    '#6b7280'
                ],
                'fill-opacity': 0.2
            }
        });
        map.current.addLayer({
            id: 'geofences-border',
            type: 'line',
            source: 'geofences',
            paint: {
                'line-color': [
                    'match',
                    [
                        'get',
                        'type'
                    ],
                    'delivery_zone',
                    '#10b981',
                    'restricted',
                    '#ef4444',
                    'priority',
                    '#f59e0b',
                    '#6b7280'
                ],
                'line-width': 2,
                'line-dasharray': [
                    2,
                    2
                ]
            }
        });
        // Capa de envíos
        map.current.addSource('shipments', {
            type: 'geojson',
            data: {
                type: 'FeatureCollection',
                features: []
            }
        });
        map.current.addLayer({
            id: 'shipments-layer',
            type: 'circle',
            source: 'shipments',
            paint: {
                'circle-radius': [
                    'case',
                    [
                        '==',
                        [
                            'get',
                            'selected'
                        ],
                        true
                    ],
                    12,
                    8
                ],
                'circle-color': [
                    'match',
                    [
                        'get',
                        'status'
                    ],
                    'pending',
                    MARKER_COLORS.pending,
                    'confirmed',
                    MARKER_COLORS.confirmed,
                    'picked_up',
                    MARKER_COLORS.picked_up,
                    'in_transit',
                    MARKER_COLORS.in_transit,
                    'out_for_delivery',
                    MARKER_COLORS.out_for_delivery,
                    'delivered',
                    MARKER_COLORS.delivered,
                    'exception',
                    MARKER_COLORS.exception,
                    'cancelled',
                    MARKER_COLORS.cancelled,
                    'returned',
                    MARKER_COLORS.returned,
                    MARKER_COLORS.pending
                ],
                'circle-stroke-width': 2,
                'circle-stroke-color': '#ffffff'
            }
        });
        // Capa de rutas
        map.current.addSource('routes', {
            type: 'geojson',
            data: {
                type: 'FeatureCollection',
                features: []
            }
        });
        map.current.addLayer({
            id: 'routes-layer',
            type: 'line',
            source: 'routes',
            paint: {
                'line-color': '#3b82f6',
                'line-width': 3,
                'line-opacity': 0.7
            }
        });
    }, [
        mapLoaded
    ]);
    // =====================================================
    // CARGAR DATOS INICIALES
    // =====================================================
    const loadInitialData = (0, _react.useCallback)(()=>{
        // Cargar geofences de ejemplo
        const sampleGeofences = [
            {
                id: 'caba',
                name: 'CABA - Zona Prioritaria',
                coordinates: [
                    [
                        -58.5315,
                        -34.5264
                    ],
                    [
                        -58.3354,
                        -34.5264
                    ],
                    [
                        -58.3354,
                        -34.7051
                    ],
                    [
                        -58.5315,
                        -34.7051
                    ],
                    [
                        -58.5315,
                        -34.5264
                    ]
                ],
                type: 'priority',
                active: true
            },
            {
                id: 'gba_norte',
                name: 'GBA Norte - Zona de Entrega',
                coordinates: [
                    [
                        -58.6,
                        -34.4
                    ],
                    [
                        -58.4,
                        -34.4
                    ],
                    [
                        -58.4,
                        -34.55
                    ],
                    [
                        -58.6,
                        -34.55
                    ],
                    [
                        -58.6,
                        -34.4
                    ]
                ],
                type: 'delivery_zone',
                active: true
            }
        ];
        setGeofences(sampleGeofences);
        updateGeofencesLayer(sampleGeofences);
    }, []);
    // =====================================================
    // ACTUALIZAR CAPAS DEL MAPA
    // =====================================================
    const updateShipmentsLayer = (0, _react.useCallback)((shipmentsData)=>{
        if (!map.current || !mapLoaded) {
            return;
        }
        const filteredShipments = filterStatus === 'all' ? shipmentsData : shipmentsData.filter((s)=>s.status === filterStatus);
        const features = filteredShipments.map((shipment)=>{
            // Generar coordenadas aleatorias en Buenos Aires para demo
            const lat = -34.6037 + (Math.random() - 0.5) * 0.2;
            const lng = -58.3816 + (Math.random() - 0.5) * 0.2;
            return {
                type: 'Feature',
                geometry: {
                    type: 'Point',
                    coordinates: [
                        lng,
                        lat
                    ]
                },
                properties: {
                    shipmentId: shipment.id.toString(),
                    status: shipment.status,
                    shipmentNumber: shipment.shipment_number,
                    selected: selectedShipment?.id === shipment.id
                }
            };
        });
        map.current.getSource('shipments').setData({
            type: 'FeatureCollection',
            features
        });
    }, [
        mapLoaded,
        filterStatus,
        selectedShipment
    ]);
    const updateGeofencesLayer = (0, _react.useCallback)((geofencesData)=>{
        if (!map.current || !mapLoaded) {
            return;
        }
        const features = geofencesData.filter((zone)=>zone.active && showGeofences).map((zone)=>({
                type: 'Feature',
                geometry: {
                    type: 'Polygon',
                    coordinates: [
                        zone.coordinates
                    ]
                },
                properties: {
                    id: zone.id,
                    name: zone.name,
                    type: zone.type
                }
            }));
        map.current.getSource('geofences').setData({
            type: 'FeatureCollection',
            features
        });
    }, [
        mapLoaded,
        showGeofences
    ]);
    // =====================================================
    // EFECTOS
    // =====================================================
    (0, _react.useEffect)(()=>{
        if (mapLoaded && shipments.length > 0) {
            updateShipmentsLayer(shipments);
        }
    }, [
        shipments,
        mapLoaded,
        updateShipmentsLayer
    ]);
    (0, _react.useEffect)(()=>{
        if (mapLoaded) {
            updateGeofencesLayer(geofences);
        }
    }, [
        geofences,
        mapLoaded,
        updateGeofencesLayer
    ]);
    // =====================================================
    // HANDLERS
    // =====================================================
    const handleStyleChange = (style)=>{
        setMapStyle(style);
        if (map.current) {
            const styleUrls = {
                streets: 'https://api.maptiler.com/maps/streets/style.json?key=demo',
                satellite: 'https://api.maptiler.com/maps/satellite/style.json?key=demo',
                terrain: 'https://api.maptiler.com/maps/terrain/style.json?key=demo'
            };
            map.current.setStyle(styleUrls[style]);
        }
    };
    const handleFullscreen = ()=>{
        setIsFullscreen(!isFullscreen);
    // TODO: Implementar fullscreen real
    };
    const handleFitBounds = ()=>{
        if (map.current && shipments.length > 0) {
            // Calcular bounds basado en los shipments
            const bounds = new window.maplibregl.LngLatBounds();
            shipments.forEach(()=>{
                // Coordenadas de ejemplo - en producción usar coordenadas reales
                const lat = -34.6037 + (Math.random() - 0.5) * 0.2;
                const lng = -58.3816 + (Math.random() - 0.5) * 0.2;
                bounds.extend([
                    lng,
                    lat
                ]);
            });
            map.current.fitBounds(bounds, {
                padding: 50
            });
        }
    };
    const handleRefresh = ()=>{
        if (mapLoaded) {
            updateShipmentsLayer(shipments);
            updateGeofencesLayer(geofences);
        }
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.Card, {
        className: (0, _utils.cn)('relative', className, isFullscreen && 'fixed inset-0 z-50'),
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.CardHeader, {
                className: "pb-3",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "flex items-center justify-between",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.CardTitle, {
                                        className: "flex items-center gap-2",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Map, {
                                                className: "w-5 h-5"
                                            }),
                                            "Mapa de Log\xedstica"
                                        ]
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.CardDescription, {
                                        children: [
                                            "Tracking en tiempo real de ",
                                            shipments.length,
                                            " env\xedos"
                                        ]
                                    })
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "flex items-center gap-2",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_select.Select, {
                                        value: filterStatus,
                                        onValueChange: setFilterStatus,
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectTrigger, {
                                                className: "w-32",
                                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectValue, {})
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_select.SelectContent, {
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectItem, {
                                                        value: "all",
                                                        children: "Todos"
                                                    }),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectItem, {
                                                        value: "in_transit",
                                                        children: "En Tr\xe1nsito"
                                                    }),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectItem, {
                                                        value: "out_for_delivery",
                                                        children: "En Reparto"
                                                    }),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectItem, {
                                                        value: "delivered",
                                                        children: "Entregados"
                                                    })
                                                ]
                                            })
                                        ]
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                        className: "flex items-center gap-2",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_switch.Switch, {
                                                checked: showGeofences,
                                                onCheckedChange: setShowGeofences,
                                                size: "sm"
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                className: "text-sm",
                                                children: "Zonas"
                                            })
                                        ]
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                        className: "flex items-center gap-2",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_switch.Switch, {
                                                checked: showRoutes,
                                                onCheckedChange: setShowRoutes,
                                                size: "sm"
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                className: "text-sm",
                                                children: "Rutas"
                                            })
                                        ]
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                        variant: "outline",
                                        size: "sm",
                                        onClick: handleRefresh,
                                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.RefreshCw, {
                                            className: "w-4 h-4"
                                        })
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                        variant: "outline",
                                        size: "sm",
                                        onClick: handleFitBounds,
                                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Navigation, {
                                            className: "w-4 h-4"
                                        })
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                        variant: "outline",
                                        size: "sm",
                                        onClick: handleFullscreen,
                                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Maximize2, {
                                            className: "w-4 h-4"
                                        })
                                    })
                                ]
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "flex items-center gap-4",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_select.Select, {
                                value: mapStyle,
                                onValueChange: handleStyleChange,
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectTrigger, {
                                        className: "w-32",
                                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectValue, {})
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_select.SelectContent, {
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectItem, {
                                                value: "streets",
                                                children: "Calles"
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectItem, {
                                                value: "satellite",
                                                children: "Sat\xe9lite"
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectItem, {
                                                value: "terrain",
                                                children: "Terreno"
                                            })
                                        ]
                                    })
                                ]
                            }),
                            realTimeEnabled && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_badge.Badge, {
                                variant: "secondary",
                                className: "flex items-center gap-1",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Zap, {
                                        className: "w-3 h-3"
                                    }),
                                    "Tiempo Real"
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "flex items-center gap-4 text-sm",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                        className: "flex items-center gap-1",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                className: "w-3 h-3 rounded-full bg-blue-500"
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                children: "En Tr\xe1nsito"
                                            })
                                        ]
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                        className: "flex items-center gap-1",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                className: "w-3 h-3 rounded-full bg-purple-500"
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                children: "En Reparto"
                                            })
                                        ]
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                        className: "flex items-center gap-1",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                className: "w-3 h-3 rounded-full bg-green-500"
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                children: "Entregado"
                                            })
                                        ]
                                    })
                                ]
                            })
                        ]
                    })
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.CardContent, {
                className: "p-0",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        ref: mapContainer,
                        className: (0, _utils.cn)('w-full bg-gray-100 rounded-b-lg', isFullscreen ? 'h-screen' : 'h-96'),
                        style: {
                            minHeight: isFullscreen ? '100vh' : '400px'
                        }
                    }),
                    !mapLoaded && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: "absolute inset-0 flex items-center justify-center bg-gray-100 rounded-b-lg",
                        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "text-center",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Map, {
                                    className: "w-8 h-8 text-gray-400 mx-auto mb-2 animate-pulse"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                    className: "text-gray-500",
                                    children: "Cargando mapa..."
                                })
                            ]
                        })
                    })
                ]
            })
        ]
    });
}

//# sourceMappingURL=data:application/json;base64,