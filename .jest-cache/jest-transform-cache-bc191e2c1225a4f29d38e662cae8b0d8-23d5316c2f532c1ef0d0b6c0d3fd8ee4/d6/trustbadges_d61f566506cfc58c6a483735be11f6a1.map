{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\ui\\trust-badges.tsx"],"sourcesContent":["'use client'\n\nimport * as React from 'react'\nimport { cva, type VariantProps } from 'class-variance-authority'\nimport { cn } from '@/lib/utils'\nimport {\n  Shield,\n  ShieldCheck,\n  Truck,\n  Clock,\n  Star,\n  Award,\n  Lock,\n  CreditCard,\n  Phone,\n  MapPin,\n  Zap,\n  MessageCircle,\n} from 'lucide-react'\n\nconst trustBadgeVariants = cva(\n  'inline-flex items-center gap-2 rounded-lg font-medium transition-all duration-200',\n  {\n    variants: {\n      variant: {\n        security: 'bg-green-50 text-green-700 border border-green-200 hover:bg-green-100',\n        guarantee: 'bg-blue-50 text-blue-700 border border-blue-200 hover:bg-blue-100',\n        shipping: 'bg-orange-50 text-orange-700 border border-orange-200 hover:bg-orange-100',\n        quality: 'bg-purple-50 text-purple-700 border border-purple-200 hover:bg-purple-100',\n        support: 'bg-teal-50 text-teal-700 border border-teal-200 hover:bg-teal-100',\n        payment: 'bg-primary/10 text-primary border border-primary/20 hover:bg-primary/20',\n      },\n      size: {\n        sm: 'px-2 py-1 text-xs',\n        md: 'px-3 py-1.5 text-sm',\n        lg: 'px-4 py-2 text-base',\n      },\n      animation: {\n        none: '',\n        pulse: 'animate-pulse',\n        bounce: 'animate-bounce',\n        glow: 'animate-pulse shadow-lg',\n      },\n    },\n    defaultVariants: {\n      variant: 'security',\n      size: 'md',\n      animation: 'none',\n    },\n  }\n)\n\nexport interface TrustBadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof trustBadgeVariants> {\n  icon?: React.ReactNode\n  children: React.ReactNode\n}\n\nconst TrustBadge = React.forwardRef<HTMLDivElement, TrustBadgeProps>(\n  ({ className, variant, size, animation, icon, children, ...props }, ref) => (\n    <div\n      ref={ref}\n      className={cn(trustBadgeVariants({ variant, size, animation }), className)}\n      {...props}\n    >\n      {icon}\n      {children}\n    </div>\n  )\n)\nTrustBadge.displayName = 'TrustBadge'\n\n// Badges especializados para e-commerce de pinturería\n\ninterface SecurePurchaseBadgeProps extends Omit<TrustBadgeProps, 'children' | 'icon'> {\n  text?: string\n}\n\nconst SecurePurchaseBadge = React.forwardRef<HTMLDivElement, SecurePurchaseBadgeProps>(\n  ({ text = 'Compra Protegida', className, ...props }, ref) => (\n    <TrustBadge\n      ref={ref}\n      variant='security'\n      icon={<ShieldCheck className='w-4 h-4' />}\n      className={cn('', className)}\n      {...props}\n    >\n      {text}\n    </TrustBadge>\n  )\n)\nSecurePurchaseBadge.displayName = 'SecurePurchaseBadge'\n\ninterface MoneyBackBadgeProps extends Omit<TrustBadgeProps, 'children' | 'icon'> {\n  days?: number\n}\n\nconst MoneyBackBadge = React.forwardRef<HTMLDivElement, MoneyBackBadgeProps>(\n  ({ days = 30, className, ...props }, ref) => (\n    <TrustBadge\n      ref={ref}\n      variant='guarantee'\n      icon={<Shield className='w-4 h-4' />}\n      className={cn('', className)}\n      {...props}\n    >\n      {days} días de garantía\n    </TrustBadge>\n  )\n)\nMoneyBackBadge.displayName = 'MoneyBackBadge'\n\ninterface FastShippingBadgeProps extends Omit<TrustBadgeProps, 'children' | 'icon'> {\n  hours?: number\n  text?: string\n}\n\nconst FastShippingBadge = React.forwardRef<HTMLDivElement, FastShippingBadgeProps>(\n  ({ hours = 24, text, className, ...props }, ref) => (\n    <TrustBadge\n      ref={ref}\n      variant='shipping'\n      icon={<Truck className='w-4 h-4' />}\n      className={cn('', className)}\n      {...props}\n    >\n      {text || `Envío en ${hours}hs`}\n    </TrustBadge>\n  )\n)\nFastShippingBadge.displayName = 'FastShippingBadge'\n\ninterface QualityBadgeProps extends Omit<TrustBadgeProps, 'children' | 'icon'> {\n  text?: string\n  rating?: number\n}\n\nconst QualityBadge = React.forwardRef<HTMLDivElement, QualityBadgeProps>(\n  ({ text = 'Calidad Premium', rating, className, ...props }, ref) => {\n    // Validación segura del rating para prevenir errores de template literal\n    const safeRating = typeof rating === 'number' && rating > 0 ? rating : null\n    const displayText = safeRating ? `${safeRating}★ ${text}` : text\n\n    return (\n      <TrustBadge\n        ref={ref}\n        variant='quality'\n        icon={\n          safeRating ? <Star className='w-4 h-4 fill-current' /> : <Award className='w-4 h-4' />\n        }\n        className={cn('', className)}\n        {...props}\n      >\n        {displayText}\n      </TrustBadge>\n    )\n  }\n)\nQualityBadge.displayName = 'QualityBadge'\n\ninterface SupportBadgeProps extends Omit<TrustBadgeProps, 'children' | 'icon'> {\n  type?: 'phone' | 'chat' | 'email'\n  hours?: string\n}\n\nconst SupportBadge = React.forwardRef<HTMLDivElement, SupportBadgeProps>(\n  ({ type = 'phone', hours = '24/7', className, ...props }, ref) => {\n    const getIcon = () => {\n      switch (type) {\n        case 'phone':\n          return <Phone className='w-4 h-4' />\n        case 'chat':\n          return <MessageCircle className='w-4 h-4' />\n        case 'email':\n          return <Clock className='w-4 h-4' />\n        default:\n          return <Phone className='w-4 h-4' />\n      }\n    }\n\n    const getText = () => {\n      switch (type) {\n        case 'phone':\n          return `Soporte ${hours}`\n        case 'chat':\n          return `Chat en vivo`\n        case 'email':\n          return `Respuesta ${hours}`\n        default:\n          return `Soporte ${hours}`\n      }\n    }\n\n    return (\n      <TrustBadge\n        ref={ref}\n        variant='support'\n        icon={getIcon()}\n        className={cn('', className)}\n        {...props}\n      >\n        {getText()}\n      </TrustBadge>\n    )\n  }\n)\nSupportBadge.displayName = 'SupportBadge'\n\ninterface PaymentSecurityBadgeProps extends Omit<TrustBadgeProps, 'children' | 'icon'> {\n  provider?: 'mercadopago' | 'ssl' | 'secure'\n}\n\nconst PaymentSecurityBadge = React.forwardRef<HTMLDivElement, PaymentSecurityBadgeProps>(\n  ({ provider = 'mercadopago', className, ...props }, ref) => {\n    const getContent = () => {\n      switch (provider) {\n        case 'mercadopago':\n          return {\n            icon: <CreditCard className='w-4 h-4' />,\n            text: 'MercadoPago Seguro',\n          }\n        case 'ssl':\n          return {\n            icon: <Lock className='w-4 h-4' />,\n            text: 'SSL Certificado',\n          }\n        case 'secure':\n          return {\n            icon: <ShieldCheck className='w-4 h-4' />,\n            text: 'Pago 100% Seguro',\n          }\n        default:\n          return {\n            icon: <CreditCard className='w-4 h-4' />,\n            text: 'Pago Seguro',\n          }\n      }\n    }\n\n    const { icon, text } = getContent()\n\n    return (\n      <TrustBadge ref={ref} variant='payment' icon={icon} className={cn('', className)} {...props}>\n        {text}\n      </TrustBadge>\n    )\n  }\n)\nPaymentSecurityBadge.displayName = 'PaymentSecurityBadge'\n\ninterface LocalBusinessBadgeProps extends Omit<TrustBadgeProps, 'children' | 'icon'> {\n  city?: string\n  years?: number\n}\n\nconst LocalBusinessBadge = React.forwardRef<HTMLDivElement, LocalBusinessBadgeProps>(\n  ({ city = 'Córdoba', years = 15, className, ...props }, ref) => (\n    <TrustBadge\n      ref={ref}\n      variant='quality'\n      icon={<MapPin className='w-4 h-4' />}\n      className={cn('', className)}\n      {...props}\n    >\n      {years} años en {city}\n    </TrustBadge>\n  )\n)\nLocalBusinessBadge.displayName = 'LocalBusinessBadge'\n\ninterface InstantDeliveryBadgeProps extends Omit<TrustBadgeProps, 'children' | 'icon'> {\n  text?: string\n}\n\nconst InstantDeliveryBadge = React.forwardRef<HTMLDivElement, InstantDeliveryBadgeProps>(\n  ({ text = 'Entrega Inmediata', className, ...props }, ref) => (\n    <TrustBadge\n      ref={ref}\n      variant='shipping'\n      icon={<Zap className='w-4 h-4' />}\n      animation='glow'\n      className={cn('', className)}\n      {...props}\n    >\n      {text}\n    </TrustBadge>\n  )\n)\nInstantDeliveryBadge.displayName = 'InstantDeliveryBadge'\n\n// Componente combinado para mostrar múltiples badges de confianza\ninterface TrustBadgeGroupProps extends React.HTMLAttributes<HTMLDivElement> {\n  badges?: (\n    | 'secure'\n    | 'guarantee'\n    | 'shipping'\n    | 'quality'\n    | 'support'\n    | 'payment'\n    | 'local'\n    | 'instant'\n  )[]\n  layout?: 'horizontal' | 'vertical' | 'grid'\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst TrustBadgeGroup = React.forwardRef<HTMLDivElement, TrustBadgeGroupProps>(\n  (\n    {\n      badges = ['secure', 'guarantee', 'shipping'],\n      layout = 'horizontal',\n      size = 'md',\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const layoutClasses = {\n      horizontal: 'flex flex-wrap gap-2',\n      vertical: 'flex flex-col gap-2',\n      grid: 'grid grid-cols-2 md:grid-cols-3 gap-2',\n    }\n\n    const renderBadge = (badge: string) => {\n      const commonProps = { size }\n\n      switch (badge) {\n        case 'secure':\n          return <SecurePurchaseBadge key={badge} {...commonProps} />\n        case 'guarantee':\n          return <MoneyBackBadge key={badge} {...commonProps} />\n        case 'shipping':\n          return <FastShippingBadge key={badge} {...commonProps} />\n        case 'quality':\n          return <QualityBadge key={badge} {...commonProps} />\n        case 'support':\n          return <SupportBadge key={badge} {...commonProps} />\n        case 'payment':\n          return <PaymentSecurityBadge key={badge} {...commonProps} />\n        case 'local':\n          return <LocalBusinessBadge key={badge} {...commonProps} />\n        case 'instant':\n          return <InstantDeliveryBadge key={badge} {...commonProps} />\n        default:\n          return null\n      }\n    }\n\n    return (\n      <div ref={ref} className={cn(layoutClasses[layout], className)} {...props}>\n        {badges.map(renderBadge)}\n      </div>\n    )\n  }\n)\nTrustBadgeGroup.displayName = 'TrustBadgeGroup'\n\nexport {\n  TrustBadge,\n  SecurePurchaseBadge,\n  MoneyBackBadge,\n  FastShippingBadge,\n  QualityBadge,\n  SupportBadge,\n  PaymentSecurityBadge,\n  LocalBusinessBadge,\n  InstantDeliveryBadge,\n  TrustBadgeGroup,\n  trustBadgeVariants,\n}\n"],"names":["FastShippingBadge","InstantDeliveryBadge","LocalBusinessBadge","MoneyBackBadge","PaymentSecurityBadge","QualityBadge","SecurePurchaseBadge","SupportBadge","TrustBadge","TrustBadgeGroup","trustBadgeVariants","cva","variants","variant","security","guarantee","shipping","quality","support","payment","size","sm","md","lg","animation","none","pulse","bounce","glow","defaultVariants","React","forwardRef","className","icon","children","props","ref","div","cn","displayName","text","ShieldCheck","days","Shield","hours","Truck","rating","safeRating","displayText","Star","Award","type","getIcon","Phone","MessageCircle","Clock","getText","provider","getContent","CreditCard","Lock","city","years","MapPin","Zap","badges","layout","layoutClasses","horizontal","vertical","grid","renderBadge","badge","commonProps","map"],"mappings":"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"}