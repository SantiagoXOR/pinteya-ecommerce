{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\driver\\DeliveryCard.tsx"],"sourcesContent":["/**\n * Componente de tarjeta de entrega para drivers\n * Muestra información detallada de cada entrega y controles de acción\n */\n\n'use client'\n\nimport React, { useState } from 'react'\nimport { Card, CardContent, CardHeader } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Badge } from '@/components/ui/badge'\nimport {\n  MapPin,\n  Phone,\n  MessageCircle,\n  Package,\n  Clock,\n  CheckCircle,\n  AlertTriangle,\n  Navigation,\n  User,\n  Home,\n  Info,\n} from 'lucide-react'\nimport { cn } from '@/lib/core/utils'\n\ninterface DeliveryCardProps {\n  delivery: {\n    id: string\n    tracking_number: string\n    customer_name: string\n    customer_phone?: string\n    destination: {\n      address: string\n      city: string\n      postal_code: string\n      coordinates?: { lat: number; lng: number }\n      notes?: string\n    }\n    items: Array<{\n      name: string\n      quantity: number\n      weight?: number\n    }>\n    status: 'pending' | 'confirmed' | 'in_transit' | 'delivered' | 'exception'\n    estimated_delivery_time?: string\n    special_instructions?: string\n    requires_signature?: boolean\n    cash_on_delivery?: number\n  }\n  isActive: boolean\n  onComplete: () => void\n  onStartNavigation: () => void\n  isNavigating: boolean\n}\n\nexport function DeliveryCard({\n  delivery,\n  isActive,\n  onComplete,\n  onStartNavigation,\n  isNavigating,\n}: DeliveryCardProps) {\n  const [showDetails, setShowDetails] = useState(false)\n  const [completionNotes, setCompletionNotes] = useState('')\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'pending':\n        return 'bg-yellow-100 text-yellow-800'\n      case 'confirmed':\n        return 'bg-blue-100 text-blue-800'\n      case 'in_transit':\n        return 'bg-purple-100 text-purple-800'\n      case 'delivered':\n        return 'bg-green-100 text-green-800'\n      case 'exception':\n        return 'bg-red-100 text-red-800'\n      default:\n        return 'bg-gray-100 text-gray-800'\n    }\n  }\n\n  const getStatusText = (status: string) => {\n    switch (status) {\n      case 'pending':\n        return 'Pendiente'\n      case 'confirmed':\n        return 'Confirmado'\n      case 'in_transit':\n        return 'En Tránsito'\n      case 'delivered':\n        return 'Entregado'\n      case 'exception':\n        return 'Excepción'\n      default:\n        return status\n    }\n  }\n\n  const handleCallCustomer = () => {\n    if (delivery.customer_phone) {\n      window.open(`tel:${delivery.customer_phone}`, '_self')\n    }\n  }\n\n  const handleSendMessage = () => {\n    if (delivery.customer_phone) {\n      const message = `Hola ${delivery.customer_name}, soy tu driver de Pinteya. Estoy en camino con tu pedido #${delivery.tracking_number}`\n      window.open(`sms:${delivery.customer_phone}?body=${encodeURIComponent(message)}`, '_self')\n    }\n  }\n\n  const handleOpenMaps = () => {\n    const address = encodeURIComponent(delivery.destination.address)\n    window.open(`https://maps.google.com/maps?q=${address}`, '_blank')\n  }\n\n  return (\n    <Card className={cn('m-4', isActive ? 'border-blue-500 bg-blue-50' : 'border-gray-200')}>\n      <CardHeader className='pb-3'>\n        <div className='flex items-center justify-between'>\n          <div className='flex items-center space-x-3'>\n            <div className='bg-blue-600 text-white rounded-full w-8 h-8 flex items-center justify-center text-sm font-medium'>\n              {delivery.tracking_number.slice(-3)}\n            </div>\n            <div>\n              <h3 className='font-semibold text-gray-900'>{delivery.customer_name}</h3>\n              <Badge className={getStatusColor(delivery.status)}>\n                {getStatusText(delivery.status)}\n              </Badge>\n            </div>\n          </div>\n\n          {isActive && (\n            <div className='flex space-x-2'>\n              <Button\n                size='sm'\n                variant={isNavigating ? 'secondary' : 'default'}\n                onClick={onStartNavigation}\n                disabled={isNavigating}\n              >\n                <Navigation className='h-4 w-4 mr-1' />\n                {isNavigating ? 'Navegando' : 'Navegar'}\n              </Button>\n            </div>\n          )}\n        </div>\n      </CardHeader>\n\n      <CardContent className='space-y-4'>\n        {/* Dirección de entrega */}\n        <div className='flex items-start space-x-3'>\n          <MapPin className='h-5 w-5 text-gray-400 mt-0.5' />\n          <div className='flex-1'>\n            <p className='font-medium text-gray-900'>{delivery.destination.address}</p>\n            <p className='text-sm text-gray-600'>\n              {delivery.destination.city}, {delivery.destination.postal_code}\n            </p>\n            {delivery.destination.notes && (\n              <p className='text-sm text-blue-600 mt-1'>\n                <Info className='h-4 w-4 inline mr-1' />\n                {delivery.destination.notes}\n              </p>\n            )}\n          </div>\n        </div>\n\n        {/* Información del pedido */}\n        <div className='grid grid-cols-2 gap-4 text-sm'>\n          <div className='flex items-center space-x-2'>\n            <Package className='h-4 w-4 text-gray-400' />\n            <span>\n              {delivery.items.length} producto{delivery.items.length !== 1 ? 's' : ''}\n            </span>\n          </div>\n          {delivery.estimated_delivery_time && (\n            <div className='flex items-center space-x-2'>\n              <Clock className='h-4 w-4 text-gray-400' />\n              <span>{delivery.estimated_delivery_time}</span>\n            </div>\n          )}\n        </div>\n\n        {/* Instrucciones especiales */}\n        {delivery.special_instructions && (\n          <div className='bg-yellow-50 border border-yellow-200 rounded-lg p-3'>\n            <div className='flex items-start space-x-2'>\n              <AlertTriangle className='h-4 w-4 text-yellow-600 mt-0.5' />\n              <div>\n                <p className='text-sm font-medium text-yellow-800'>Instrucciones especiales:</p>\n                <p className='text-sm text-yellow-700'>{delivery.special_instructions}</p>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Pago contra entrega */}\n        {delivery.cash_on_delivery && (\n          <div className='bg-green-50 border border-green-200 rounded-lg p-3'>\n            <div className='flex items-center space-x-2'>\n              <Package className='h-4 w-4 text-green-600' />\n              <span className='text-sm font-medium text-green-800'>\n                Cobrar: ${delivery.cash_on_delivery.toLocaleString()}\n              </span>\n            </div>\n          </div>\n        )}\n\n        {/* Acciones */}\n        <div className='flex space-x-2'>\n          {delivery.customer_phone && (\n            <>\n              <Button size='sm' variant='outline' onClick={handleCallCustomer} className='flex-1'>\n                <Phone className='h-4 w-4 mr-1' />\n                Llamar\n              </Button>\n              <Button size='sm' variant='outline' onClick={handleSendMessage} className='flex-1'>\n                <MessageCircle className='h-4 w-4 mr-1' />\n                SMS\n              </Button>\n            </>\n          )}\n          <Button size='sm' variant='outline' onClick={handleOpenMaps}>\n            <MapPin className='h-4 w-4' />\n          </Button>\n        </div>\n\n        {/* Detalles expandibles */}\n        <Button\n          variant='ghost'\n          size='sm'\n          onClick={() => setShowDetails(!showDetails)}\n          className='w-full'\n        >\n          {showDetails ? 'Ocultar detalles' : 'Ver detalles'}\n        </Button>\n\n        {showDetails && (\n          <div className='space-y-3 pt-3 border-t border-gray-200'>\n            <div>\n              <h4 className='font-medium text-gray-900 mb-2'>Productos:</h4>\n              <div className='space-y-1'>\n                {delivery.items.map((item, index) => (\n                  <div key={index} className='flex justify-between text-sm'>\n                    <span>{item.name}</span>\n                    <span className='text-gray-600'>x{item.quantity}</span>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {delivery.requires_signature && (\n              <div className='flex items-center space-x-2 text-sm text-orange-600'>\n                <AlertTriangle className='h-4 w-4' />\n                <span>Requiere firma del cliente</span>\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Botón de completar entrega */}\n        {isActive && (\n          <Button onClick={onComplete} className='w-full' size='lg'>\n            <CheckCircle className='h-5 w-5 mr-2' />\n            Marcar como Entregado\n          </Button>\n        )}\n      </CardContent>\n    </Card>\n  )\n}\n"],"names":["DeliveryCard","delivery","isActive","onComplete","onStartNavigation","isNavigating","showDetails","setShowDetails","useState","completionNotes","setCompletionNotes","getStatusColor","status","getStatusText","handleCallCustomer","customer_phone","window","open","handleSendMessage","message","customer_name","tracking_number","encodeURIComponent","handleOpenMaps","address","destination","Card","className","cn","CardHeader","div","slice","h3","Badge","Button","size","variant","onClick","disabled","Navigation","CardContent","MapPin","p","city","postal_code","notes","Info","Package","span","items","length","estimated_delivery_time","Clock","special_instructions","AlertTriangle","cash_on_delivery","toLocaleString","Phone","MessageCircle","h4","map","item","index","name","quantity","requires_signature","CheckCircle"],"mappings":"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"}