{"version":3,"names":["cov_18qrosp443","actualCoverage","s","GET","f","runtime","request","console","log","diagnostics","timestamp","Date","toISOString","environment","nodeEnv","process","env","NODE_ENV","hasSupabaseUrl","NEXT_PUBLIC_SUPABASE_URL","hasSupabaseServiceKey","SUPABASE_SERVICE_ROLE_KEY","hasClerkSecretKey","CLERK_SECRET_KEY","hasClerkPublishableKey","NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY","supabase","connection","productsTable","categoriesTable","error","apis","productsDirectExists","productsSimpleExists","supabaseUrl","supabaseServiceKey","b","_supabasejs","createClient","data","products","productsError","from","select","limit","message","categories","categoriesError","Error","fs","require","path","productsSimplePath","join","cwd","existsSync","_server","NextResponse","json","success","recommendations","generateRecommendations","details","status","push","length"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\debug\\route.ts"],"sourcesContent":["// Configuraci√≥n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { createClient } from '@supabase/supabase-js';\r\n\r\n/**\r\n * API de diagn√≥stico para el panel administrativo\r\n * Esta API NO requiere autenticaci√≥n para poder diagnosticar problemas\r\n */\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    console.log('üîç Admin Debug: Starting diagnostic...');\r\n\r\n    const diagnostics = {\r\n      timestamp: new Date().toISOString(),\r\n      environment: {\r\n        nodeEnv: process.env.NODE_ENV,\r\n        hasSupabaseUrl: !!process.env.NEXT_PUBLIC_SUPABASE_URL,\r\n        hasSupabaseServiceKey: !!process.env.SUPABASE_SERVICE_ROLE_KEY,\r\n        hasClerkSecretKey: !!process.env.CLERK_SECRET_KEY,\r\n        hasClerkPublishableKey: !!process.env.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY,\r\n      },\r\n      supabase: {\r\n        connection: 'unknown',\r\n        productsTable: 'unknown',\r\n        categoriesTable: 'unknown',\r\n        error: null\r\n      },\r\n      apis: {\r\n        productsDirectExists: true,\r\n        productsSimpleExists: false,\r\n        error: null\r\n      }\r\n    };\r\n\r\n    // Test Supabase connection\r\n    try {\r\n      const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\r\n      const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;\r\n\r\n      if (!supabaseUrl || !supabaseServiceKey) {\r\n        diagnostics.supabase.connection = 'missing_credentials';\r\n        diagnostics.supabase.error = 'Missing SUPABASE_URL or SUPABASE_SERVICE_ROLE_KEY';\r\n      } else {\r\n        const supabase = createClient(supabaseUrl, supabaseServiceKey);\r\n\r\n        // Test products table\r\n        const { data: products, error: productsError } = await supabase\r\n          .from('products')\r\n          .select('id')\r\n          .limit(1);\r\n\r\n        if (productsError) {\r\n          diagnostics.supabase.productsTable = 'error';\r\n          diagnostics.supabase.error = productsError.message;\r\n        } else {\r\n          diagnostics.supabase.productsTable = 'ok';\r\n          diagnostics.supabase.connection = 'ok';\r\n        }\r\n\r\n        // Test categories table\r\n        const { data: categories, error: categoriesError } = await supabase\r\n          .from('categories')\r\n          .select('id')\r\n          .limit(1);\r\n\r\n        if (categoriesError) {\r\n          diagnostics.supabase.categoriesTable = 'error';\r\n        } else {\r\n          diagnostics.supabase.categoriesTable = 'ok';\r\n        }\r\n      }\r\n    } catch (error) {\r\n      diagnostics.supabase.connection = 'error';\r\n      diagnostics.supabase.error = error instanceof Error ? error.message : 'Unknown error';\r\n    }\r\n\r\n    // Test API endpoints existence\r\n    try {\r\n      // Check if products-simple API exists\r\n      const fs = require('fs');\r\n      const path = require('path');\r\n      const productsSimplePath = path.join(process.cwd(), 'src/app/api/admin/products-simple/route.ts');\r\n      diagnostics.apis.productsSimpleExists = fs.existsSync(productsSimplePath);\r\n    } catch (error) {\r\n      diagnostics.apis.error = error instanceof Error ? error.message : 'Unknown error';\r\n    }\r\n\r\n    console.log('‚úÖ Admin Debug: Diagnostic completed', diagnostics);\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      message: 'Diagn√≥stico completado',\r\n      data: diagnostics,\r\n      recommendations: generateRecommendations(diagnostics)\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('‚ùå Error in admin debug:', error);\r\n    return NextResponse.json(\r\n      {\r\n        success: false,\r\n        error: 'Error en diagn√≥stico',\r\n        details: error instanceof Error ? error.message : 'Error desconocido',\r\n        timestamp: new Date().toISOString()\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\nfunction generateRecommendations(diagnostics: any): string[] {\r\n  const recommendations: string[] = [];\r\n\r\n  if (!diagnostics.environment.hasSupabaseUrl) {\r\n    recommendations.push('‚ùå Falta variable NEXT_PUBLIC_SUPABASE_URL');\r\n  }\r\n\r\n  if (!diagnostics.environment.hasSupabaseServiceKey) {\r\n    recommendations.push('‚ùå Falta variable SUPABASE_SERVICE_ROLE_KEY');\r\n  }\r\n\r\n  if (diagnostics.supabase.connection === 'error') {\r\n    recommendations.push('‚ùå Error de conexi√≥n con Supabase - Verificar credenciales');\r\n  }\r\n\r\n  if (diagnostics.supabase.productsTable === 'error') {\r\n    recommendations.push('‚ùå Error accediendo tabla products - Verificar RLS policies');\r\n  }\r\n\r\n  if (!diagnostics.apis.productsSimpleExists) {\r\n    recommendations.push('‚ö†Ô∏è API products-simple no existe - Crear o usar products-direct');\r\n  }\r\n\r\n  if (recommendations.length === 0) {\r\n    recommendations.push('‚úÖ Configuraci√≥n parece correcta - Verificar autenticaci√≥n');\r\n  }\r\n\r\n  return recommendations;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}