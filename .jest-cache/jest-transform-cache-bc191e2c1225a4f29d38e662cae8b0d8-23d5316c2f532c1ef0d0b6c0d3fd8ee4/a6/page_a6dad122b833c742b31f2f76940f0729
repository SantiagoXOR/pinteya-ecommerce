6d01c775896ecc9817e78ad39f124325
'use client';
"use strict";

/* istanbul ignore next */
function cov_1bt1cl04yd() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\(site)\\(pages)\\test-address\\page.tsx";
  var hash = "ba33ed7cc3253d416f2d08a4ef3b1c521ea2bd6b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\(site)\\(pages)\\test-address\\page.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 31
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 23
        }
      },
      "6": {
        start: {
          line: 20,
          column: 20
        },
        end: {
          line: 20,
          column: 48
        }
      },
      "7": {
        start: {
          line: 21,
          column: 29
        },
        end: {
          line: 21,
          column: 72
        }
      },
      "8": {
        start: {
          line: 22,
          column: 27
        },
        end: {
          line: 22,
          column: 86
        }
      },
      "9": {
        start: {
          line: 23,
          column: 29
        },
        end: {
          line: 23,
          column: 90
        }
      },
      "10": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 25,
          column: 51
        }
      },
      "11": {
        start: {
          line: 25,
          column: 39
        },
        end: {
          line: 25,
          column: 51
        }
      },
      "12": {
        start: {
          line: 26,
          column: 28
        },
        end: {
          line: 26,
          column: 41
        }
      },
      "13": {
        start: {
          line: 27,
          column: 27
        },
        end: {
          line: 27,
          column: 40
        }
      },
      "14": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 30,
          column: 20
        }
      },
      "15": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 66
        }
      },
      "16": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 35,
          column: 5
        }
      },
      "17": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 19
        }
      },
      "18": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "19": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 39,
          column: 10
        }
      },
      "20": {
        start: {
          line: 41,
          column: 16
        },
        end: {
          line: 41,
          column: 53
        }
      },
      "21": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "22": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 30
        }
      },
      "23": {
        start: {
          line: 45,
          column: 17
        },
        end: {
          line: 47,
          column: 5
        }
      },
      "24": {
        start: {
          line: 48,
          column: 32
        },
        end: {
          line: 48,
          column: 88
        }
      },
      "25": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 58,
          column: 5
        }
      },
      "26": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 57,
          column: 9
        }
      },
      "27": {
        start: {
          line: 51,
          column: 23
        },
        end: {
          line: 51,
          column: 95
        }
      },
      "28": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 56,
          column: 13
        }
      },
      "29": {
        start: {
          line: 53,
          column: 16
        },
        end: {
          line: 53,
          column: 57
        }
      },
      "30": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 55,
          column: 39
        }
      },
      "31": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 59,
          column: 25
        }
      },
      "32": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 62,
          column: 5
        }
      },
      "33": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 31
        }
      },
      "34": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 63,
          column: 18
        }
      },
      "35": {
        start: {
          line: 65,
          column: 16
        },
        end: {
          line: 65,
          column: 31
        }
      },
      "36": {
        start: {
          line: 67,
          column: 32
        },
        end: {
          line: 67,
          column: 58
        }
      },
      "37": {
        start: {
          line: 68,
          column: 44
        },
        end: {
          line: 68,
          column: 70
        }
      },
      "38": {
        start: {
          line: 69,
          column: 25
        },
        end: {
          line: 72,
          column: 5
        }
      },
      "39": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 70,
          column: 64
        }
      },
      "40": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 24
        }
      },
      "41": {
        start: {
          line: 73,
          column: 31
        },
        end: {
          line: 76,
          column: 5
        }
      },
      "42": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 62
        }
      },
      "43": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 30
        }
      },
      "44": {
        start: {
          line: 77,
          column: 25
        },
        end: {
          line: 79,
          column: 5
        }
      },
      "45": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 38
        }
      },
      "46": {
        start: {
          line: 80,
          column: 4
        },
        end: {
          line: 171,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 19
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 19
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 24,
            column: 9
          },
          end: {
            line: 24,
            column: 33
          }
        },
        loc: {
          start: {
            line: 24,
            column: 47
          },
          end: {
            line: 31,
            column: 1
          }
        },
        line: 24
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 28,
            column: 39
          },
          end: {
            line: 28,
            column: 40
          }
        },
        loc: {
          start: {
            line: 28,
            column: 61
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 28
      },
      "5": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 32,
            column: 9
          },
          end: {
            line: 32,
            column: 34
          }
        },
        loc: {
          start: {
            line: 32,
            column: 53
          },
          end: {
            line: 64,
            column: 1
          }
        },
        line: 32
      },
      "6": {
        name: "TestAddressPage",
        decl: {
          start: {
            line: 66,
            column: 9
          },
          end: {
            line: 66,
            column: 24
          }
        },
        loc: {
          start: {
            line: 66,
            column: 27
          },
          end: {
            line: 172,
            column: 1
          }
        },
        line: 66
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 69,
            column: 25
          },
          end: {
            line: 69,
            column: 26
          }
        },
        loc: {
          start: {
            line: 69,
            column: 39
          },
          end: {
            line: 72,
            column: 5
          }
        },
        line: 69
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 73,
            column: 31
          },
          end: {
            line: 73,
            column: 32
          }
        },
        loc: {
          start: {
            line: 73,
            column: 39
          },
          end: {
            line: 76,
            column: 5
          }
        },
        line: 73
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 77,
            column: 25
          },
          end: {
            line: 77,
            column: 26
          }
        },
        loc: {
          start: {
            line: 77,
            column: 29
          },
          end: {
            line: 79,
            column: 5
          }
        },
        line: 77
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "1": {
        loc: {
          start: {
            line: 29,
            column: 15
          },
          end: {
            line: 29,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 29,
            column: 29
          },
          end: {
            line: 29,
            column: 45
          }
        }, {
          start: {
            line: 29,
            column: 48
          },
          end: {
            line: 29,
            column: 65
          }
        }],
        line: 29
      },
      "2": {
        loc: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "3": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 20
          }
        }, {
          start: {
            line: 33,
            column: 24
          },
          end: {
            line: 33,
            column: 27
          }
        }, {
          start: {
            line: 33,
            column: 31
          },
          end: {
            line: 33,
            column: 45
          }
        }],
        line: 33
      },
      "4": {
        loc: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "5": {
        loc: {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 20
          }
        }, {
          start: {
            line: 36,
            column: 24
          },
          end: {
            line: 36,
            column: 47
          }
        }, {
          start: {
            line: 36,
            column: 51
          },
          end: {
            line: 36,
            column: 76
          }
        }],
        line: 36
      },
      "6": {
        loc: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "7": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 42,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 42,
            column: 13
          }
        }, {
          start: {
            line: 42,
            column: 17
          },
          end: {
            line: 42,
            column: 31
          }
        }],
        line: 42
      },
      "8": {
        loc: {
          start: {
            line: 48,
            column: 32
          },
          end: {
            line: 48,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 32
          },
          end: {
            line: 48,
            column: 53
          }
        }, {
          start: {
            line: 48,
            column: 57
          },
          end: {
            line: 48,
            column: 88
          }
        }],
        line: 48
      },
      "9": {
        loc: {
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "10": {
        loc: {
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 50,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 50,
            column: 29
          }
        }, {
          start: {
            line: 50,
            column: 33
          },
          end: {
            line: 50,
            column: 79
          }
        }],
        line: 50
      },
      "11": {
        loc: {
          start: {
            line: 51,
            column: 23
          },
          end: {
            line: 51,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 51,
            column: 47
          },
          end: {
            line: 51,
            column: 88
          }
        }, {
          start: {
            line: 51,
            column: 91
          },
          end: {
            line: 51,
            column: 95
          }
        }],
        line: 51
      },
      "12": {
        loc: {
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 56,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 56,
            column: 13
          }
        }, {
          start: {
            line: 54,
            column: 19
          },
          end: {
            line: 56,
            column: 13
          }
        }],
        line: 52
      },
      "13": {
        loc: {
          start: {
            line: 52,
            column: 16
          },
          end: {
            line: 52,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 16
          },
          end: {
            line: 52,
            column: 20
          }
        }, {
          start: {
            line: 52,
            column: 25
          },
          end: {
            line: 52,
            column: 33
          }
        }, {
          start: {
            line: 52,
            column: 37
          },
          end: {
            line: 52,
            column: 45
          }
        }],
        line: 52
      },
      "14": {
        loc: {
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "15": {
        loc: {
          start: {
            line: 110,
            column: 54
          },
          end: {
            line: 110,
            column: 132
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 110,
            column: 69
          },
          end: {
            line: 110,
            column: 106
          }
        }, {
          start: {
            line: 110,
            column: 109
          },
          end: {
            line: 110,
            column: 132
          }
        }],
        line: 110
      },
      "16": {
        loc: {
          start: {
            line: 163,
            column: 46
          },
          end: {
            line: 163,
            column: 112
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 163,
            column: 55
          },
          end: {
            line: 163,
            column: 86
          }
        }, {
          start: {
            line: 163,
            column: 89
          },
          end: {
            line: 163,
            column: 112
          }
        }],
        line: 163
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\(site)\\(pages)\\test-address\\page.tsx"],
      sourcesContent: ["'use client';\r\n\r\n\n// Forzar renderizado din\xE1mico para evitar problemas con prerendering\nexport const dynamic = 'force-dynamic';\nimport React, { useState } from 'react';\r\nimport { SimpleAddressForm } from '@/components/Address/SimpleAddressForm';\r\nimport { AddressFormAdvanced, AdvancedAddress } from '@/components/Address/AddressFormAdvanced';\r\n\r\nexport default function TestAddressPage() {\r\n  const [result, setResult] = useState<any>(null);\r\n  const [simpleResult, setSimpleResult] = useState<any>(null);\r\n\r\n  const handleSubmit = async (data: Omit<AdvancedAddress, 'id' | 'user_id' | 'created_at' | 'updated_at'>) => {\r\n    console.log('Advanced form submitted with data:', data);\r\n    setResult(data);\r\n  };\r\n\r\n  const handleSimpleSubmit = (data: any) => {\r\n    console.log('Simple form submitted with data:', data);\r\n    setSimpleResult(data);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    console.log('Form cancelled');\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 py-12\">\r\n      <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-8\">\r\n          Test Address Forms\r\n        </h1>\r\n\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\r\n          {/* Simple Form */}\r\n          <div>\r\n            <h2 className=\"text-xl font-semibold mb-4\">Simple Form</h2>\r\n            <SimpleAddressForm onSubmit={handleSimpleSubmit} />\r\n            <div className=\"mt-4\">\r\n              <h3 className=\"text-lg font-medium mb-2\">Simple Form Data:</h3>\r\n              <pre className=\"bg-gray-100 p-4 rounded-lg overflow-auto text-xs\">\r\n                {simpleResult ? JSON.stringify(simpleResult, null, 2) : 'No data submitted yet'}\r\n              </pre>\r\n            </div>\r\n\r\n            <div className=\"mt-4 p-4 bg-blue-50 rounded-lg\">\r\n              <h4 className=\"font-medium text-blue-900 mb-2\">Instrucciones de Prueba:</h4>\r\n              <ul className=\"text-sm text-blue-800 space-y-1\">\r\n                <li>\u2022 Completa todos los campos</li>\r\n                <li>\u2022 Prueba diferentes tipos de direcci\xF3n</li>\r\n                <li>\u2022 Haz clic en \"Validar\" para probar la validaci\xF3n</li>\r\n                <li>\u2022 Observa los badges de estado</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Advanced Form */}\r\n          <div>\r\n            <h2 className=\"text-xl font-semibold mb-4\">Advanced Form</h2>\r\n            <AddressFormAdvanced\r\n              mode=\"create\"\r\n              onSubmit={handleSubmit}\r\n              onCancel={handleCancel}\r\n            />\r\n          </div>\r\n\r\n          {/* Results */}\r\n          <div>\r\n            <h2 className=\"text-xl font-semibold mb-4\">Advanced Form Data:</h2>\r\n            <pre className=\"bg-gray-100 p-4 rounded-lg overflow-auto text-xs\">\r\n              {result ? JSON.stringify(result, null, 2) : 'No data submitted yet'}\r\n            </pre>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["TestAddressPage", "dynamic", "result", "setResult", "useState", "simpleResult", "setSimpleResult", "handleSubmit", "data", "console", "log", "handleSimpleSubmit", "handleCancel", "div", "className", "h1", "h2", "SimpleAddressForm", "onSubmit", "h3", "pre", "JSON", "stringify", "h4", "ul", "li", "AddressFormAdvanced", "mode", "onCancel"],
      mappings: "AAAA;;;;;;;;;;;;QASA;eAAwBA;;QALXC;eAAAA;;;;+DACmB;mCACE;qCACmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAH9C,MAAMA,UAAU;AAKR,SAASD;IACtB,MAAM,CAACE,QAAQC,UAAU,GAAGC,IAAAA,eAAQ,EAAM;IAC1C,MAAM,CAACC,cAAcC,gBAAgB,GAAGF,IAAAA,eAAQ,EAAM;IAEtD,MAAMG,eAAe,OAAOC;QAC1BC,QAAQC,GAAG,CAAC,sCAAsCF;QAClDL,UAAUK;IACZ;IAEA,MAAMG,qBAAqB,CAACH;QAC1BC,QAAQC,GAAG,CAAC,oCAAoCF;QAChDF,gBAAgBE;IAClB;IAEA,MAAMI,eAAe;QACnBH,QAAQC,GAAG,CAAC;IACd;IAEA,qBACE,qBAACG;QAAIC,WAAU;kBACb,cAAA,sBAACD;YAAIC,WAAU;;8BACb,qBAACC;oBAAGD,WAAU;8BAAwC;;8BAItD,sBAACD;oBAAIC,WAAU;;sCAEb,sBAACD;;8CACC,qBAACG;oCAAGF,WAAU;8CAA6B;;8CAC3C,qBAACG,oCAAiB;oCAACC,UAAUP;;8CAC7B,sBAACE;oCAAIC,WAAU;;sDACb,qBAACK;4CAAGL,WAAU;sDAA2B;;sDACzC,qBAACM;4CAAIN,WAAU;sDACZT,eAAegB,KAAKC,SAAS,CAACjB,cAAc,MAAM,KAAK;;;;8CAI5D,sBAACQ;oCAAIC,WAAU;;sDACb,qBAACS;4CAAGT,WAAU;sDAAiC;;sDAC/C,sBAACU;4CAAGV,WAAU;;8DACZ,qBAACW;8DAAG;;8DACJ,qBAACA;8DAAG;;8DACJ,qBAACA;8DAAG;;8DACJ,qBAACA;8DAAG;;;;;;;;sCAMV,sBAACZ;;8CACC,qBAACG;oCAAGF,WAAU;8CAA6B;;8CAC3C,qBAACY,wCAAmB;oCAClBC,MAAK;oCACLT,UAAUX;oCACVqB,UAAUhB;;;;sCAKd,sBAACC;;8CACC,qBAACG;oCAAGF,WAAU;8CAA6B;;8CAC3C,qBAACM;oCAAIN,WAAU;8CACZZ,SAASmB,KAAKC,SAAS,CAACpB,QAAQ,MAAM,KAAK;;;;;;;;;AAO1D"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ba33ed7cc3253d416f2d08a4ef3b1c521ea2bd6b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1bt1cl04yd = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1bt1cl04yd();
cov_1bt1cl04yd().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1bt1cl04yd().f[0]++;
  cov_1bt1cl04yd().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1bt1cl04yd().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1bt1cl04yd().s[3]++;
_export(exports, {
  get default() {
    /* istanbul ignore next */
    cov_1bt1cl04yd().f[1]++;
    cov_1bt1cl04yd().s[4]++;
    return TestAddressPage;
  },
  get dynamic() {
    /* istanbul ignore next */
    cov_1bt1cl04yd().f[2]++;
    cov_1bt1cl04yd().s[5]++;
    return dynamic;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1bt1cl04yd().s[6]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_1bt1cl04yd().s[7]++, _interop_require_wildcard(require("react")));
const _SimpleAddressForm =
/* istanbul ignore next */
(cov_1bt1cl04yd().s[8]++, require("../../../../components/Address/SimpleAddressForm"));
const _AddressFormAdvanced =
/* istanbul ignore next */
(cov_1bt1cl04yd().s[9]++, require("../../../../components/Address/AddressFormAdvanced"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_1bt1cl04yd().f[3]++;
  cov_1bt1cl04yd().s[10]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_1bt1cl04yd().b[0][0]++;
    cov_1bt1cl04yd().s[11]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1bt1cl04yd().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_1bt1cl04yd().s[12]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_1bt1cl04yd().s[13]++, new WeakMap());
  /* istanbul ignore next */
  cov_1bt1cl04yd().s[14]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_1bt1cl04yd().f[4]++;
    cov_1bt1cl04yd().s[15]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_1bt1cl04yd().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_1bt1cl04yd().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_1bt1cl04yd().f[5]++;
  cov_1bt1cl04yd().s[16]++;
  if (
  /* istanbul ignore next */
  (cov_1bt1cl04yd().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_1bt1cl04yd().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_1bt1cl04yd().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_1bt1cl04yd().b[2][0]++;
    cov_1bt1cl04yd().s[17]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1bt1cl04yd().b[2][1]++;
  }
  cov_1bt1cl04yd().s[18]++;
  if (
  /* istanbul ignore next */
  (cov_1bt1cl04yd().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_1bt1cl04yd().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_1bt1cl04yd().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_1bt1cl04yd().b[4][0]++;
    cov_1bt1cl04yd().s[19]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_1bt1cl04yd().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_1bt1cl04yd().s[20]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_1bt1cl04yd().s[21]++;
  if (
  /* istanbul ignore next */
  (cov_1bt1cl04yd().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_1bt1cl04yd().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_1bt1cl04yd().b[6][0]++;
    cov_1bt1cl04yd().s[22]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_1bt1cl04yd().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_1bt1cl04yd().s[23]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_1bt1cl04yd().s[24]++,
  /* istanbul ignore next */
  (cov_1bt1cl04yd().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_1bt1cl04yd().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_1bt1cl04yd().s[25]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_1bt1cl04yd().s[26]++;
    if (
    /* istanbul ignore next */
    (cov_1bt1cl04yd().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_1bt1cl04yd().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_1bt1cl04yd().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_1bt1cl04yd().s[27]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_1bt1cl04yd().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_1bt1cl04yd().b[11][1]++, null));
      /* istanbul ignore next */
      cov_1bt1cl04yd().s[28]++;
      if (
      /* istanbul ignore next */
      (cov_1bt1cl04yd().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_1bt1cl04yd().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_1bt1cl04yd().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_1bt1cl04yd().b[12][0]++;
        cov_1bt1cl04yd().s[29]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_1bt1cl04yd().b[12][1]++;
        cov_1bt1cl04yd().s[30]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_1bt1cl04yd().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1bt1cl04yd().s[31]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_1bt1cl04yd().s[32]++;
  if (cache) {
    /* istanbul ignore next */
    cov_1bt1cl04yd().b[14][0]++;
    cov_1bt1cl04yd().s[33]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_1bt1cl04yd().b[14][1]++;
  }
  cov_1bt1cl04yd().s[34]++;
  return newObj;
}
const dynamic =
/* istanbul ignore next */
(cov_1bt1cl04yd().s[35]++, 'force-dynamic');
function TestAddressPage() {
  /* istanbul ignore next */
  cov_1bt1cl04yd().f[6]++;
  const [result, setResult] =
  /* istanbul ignore next */
  (cov_1bt1cl04yd().s[36]++, (0, _react.useState)(null));
  const [simpleResult, setSimpleResult] =
  /* istanbul ignore next */
  (cov_1bt1cl04yd().s[37]++, (0, _react.useState)(null));
  /* istanbul ignore next */
  cov_1bt1cl04yd().s[38]++;
  const handleSubmit = async data => {
    /* istanbul ignore next */
    cov_1bt1cl04yd().f[7]++;
    cov_1bt1cl04yd().s[39]++;
    console.log('Advanced form submitted with data:', data);
    /* istanbul ignore next */
    cov_1bt1cl04yd().s[40]++;
    setResult(data);
  };
  /* istanbul ignore next */
  cov_1bt1cl04yd().s[41]++;
  const handleSimpleSubmit = data => {
    /* istanbul ignore next */
    cov_1bt1cl04yd().f[8]++;
    cov_1bt1cl04yd().s[42]++;
    console.log('Simple form submitted with data:', data);
    /* istanbul ignore next */
    cov_1bt1cl04yd().s[43]++;
    setSimpleResult(data);
  };
  /* istanbul ignore next */
  cov_1bt1cl04yd().s[44]++;
  const handleCancel = () => {
    /* istanbul ignore next */
    cov_1bt1cl04yd().f[9]++;
    cov_1bt1cl04yd().s[45]++;
    console.log('Form cancelled');
  };
  /* istanbul ignore next */
  cov_1bt1cl04yd().s[46]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
    className: "min-h-screen bg-gray-50 py-12",
    children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "max-w-6xl mx-auto px-4 sm:px-6 lg:px-8",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h1", {
        className: "text-3xl font-bold text-gray-900 mb-8",
        children: "Test Address Forms"
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "grid grid-cols-1 lg:grid-cols-3 gap-8",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h2", {
            className: "text-xl font-semibold mb-4",
            children: "Simple Form"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_SimpleAddressForm.SimpleAddressForm, {
            onSubmit: handleSimpleSubmit
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "mt-4",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
              className: "text-lg font-medium mb-2",
              children: "Simple Form Data:"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("pre", {
              className: "bg-gray-100 p-4 rounded-lg overflow-auto text-xs",
              children: simpleResult ?
              /* istanbul ignore next */
              (cov_1bt1cl04yd().b[15][0]++, JSON.stringify(simpleResult, null, 2)) :
              /* istanbul ignore next */
              (cov_1bt1cl04yd().b[15][1]++, 'No data submitted yet')
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "mt-4 p-4 bg-blue-50 rounded-lg",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h4", {
              className: "font-medium text-blue-900 mb-2",
              children: "Instrucciones de Prueba:"
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("ul", {
              className: "text-sm text-blue-800 space-y-1",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("li", {
                children: "• Completa todos los campos"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("li", {
                children: "• Prueba diferentes tipos de direcci\xf3n"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("li", {
                children: '• Haz clic en "Validar" para probar la validaci\xf3n'
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("li", {
                children: "• Observa los badges de estado"
              })]
            })]
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h2", {
            className: "text-xl font-semibold mb-4",
            children: "Advanced Form"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_AddressFormAdvanced.AddressFormAdvanced, {
            mode: "create",
            onSubmit: handleSubmit,
            onCancel: handleCancel
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h2", {
            className: "text-xl font-semibold mb-4",
            children: "Advanced Form Data:"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("pre", {
            className: "bg-gray-100 p-4 rounded-lg overflow-auto text-xs",
            children: result ?
            /* istanbul ignore next */
            (cov_1bt1cl04yd().b[16][0]++, JSON.stringify(result, null, 2)) :
            /* istanbul ignore next */
            (cov_1bt1cl04yd().b[16][1]++, 'No data submitted yet')
          })]
        })]
      })]
    })
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,