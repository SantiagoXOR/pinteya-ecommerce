782603dfa39934710f8b441e751040c4
"use strict";

/* istanbul ignore next */
function cov_iefmi4l09() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\categories\\[id]\\route.ts";
  var hash = "55e33dc77058febe8b58e940e34a5427766592d5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\categories\\[id]\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 21,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 22
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 19
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 19
        }
      },
      "7": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 38
        }
      },
      "8": {
        start: {
          line: 23,
          column: 13
        },
        end: {
          line: 23,
          column: 27
        }
      },
      "9": {
        start: {
          line: 24,
          column: 17
        },
        end: {
          line: 24,
          column: 75
        }
      },
      "10": {
        start: {
          line: 25,
          column: 19
        },
        end: {
          line: 25,
          column: 64
        }
      },
      "11": {
        start: {
          line: 26,
          column: 21
        },
        end: {
          line: 26,
          column: 74
        }
      },
      "12": {
        start: {
          line: 27,
          column: 16
        },
        end: {
          line: 27,
          column: 63
        }
      },
      "13": {
        start: {
          line: 28,
          column: 17
        },
        end: {
          line: 28,
          column: 65
        }
      },
      "14": {
        start: {
          line: 32,
          column: 27
        },
        end: {
          line: 37,
          column: 1
        }
      },
      "15": {
        start: {
          line: 41,
          column: 29
        },
        end: {
          line: 53,
          column: 2
        }
      },
      "16": {
        start: {
          line: 58,
          column: 21
        },
        end: {
          line: 58,
          column: 55
        }
      },
      "17": {
        start: {
          line: 59,
          column: 38
        },
        end: {
          line: 73,
          column: 36
        }
      },
      "18": {
        start: {
          line: 74,
          column: 4
        },
        end: {
          line: 79,
          column: 5
        }
      },
      "19": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 77,
          column: 9
        }
      },
      "20": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 24
        }
      },
      "21": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 72
        }
      },
      "22": {
        start: {
          line: 80,
          column: 4
        },
        end: {
          line: 80,
          column: 20
        }
      },
      "23": {
        start: {
          line: 83,
          column: 21
        },
        end: {
          line: 83,
          column: 55
        }
      },
      "24": {
        start: {
          line: 85,
          column: 29
        },
        end: {
          line: 85,
          column: 62
        }
      },
      "25": {
        start: {
          line: 86,
          column: 4
        },
        end: {
          line: 88,
          column: 5
        }
      },
      "26": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 87,
          column: 51
        }
      },
      "27": {
        start: {
          line: 90,
          column: 4
        },
        end: {
          line: 95,
          column: 5
        }
      },
      "28": {
        start: {
          line: 91,
          column: 39
        },
        end: {
          line: 91,
          column: 144
        }
      },
      "29": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 94,
          column: 9
        }
      },
      "30": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 68
        }
      },
      "31": {
        start: {
          line: 97,
          column: 4
        },
        end: {
          line: 102,
          column: 5
        }
      },
      "32": {
        start: {
          line: 98,
          column: 27
        },
        end: {
          line: 98,
          column: 89
        }
      },
      "33": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 101,
          column: 9
        }
      },
      "34": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 72
        }
      },
      "35": {
        start: {
          line: 103,
          column: 45
        },
        end: {
          line: 120,
          column: 15
        }
      },
      "36": {
        start: {
          line: 121,
          column: 4
        },
        end: {
          line: 123,
          column: 5
        }
      },
      "37": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 122,
          column: 74
        }
      },
      "38": {
        start: {
          line: 124,
          column: 4
        },
        end: {
          line: 124,
          column: 27
        }
      },
      "39": {
        start: {
          line: 127,
          column: 21
        },
        end: {
          line: 127,
          column: 55
        }
      },
      "40": {
        start: {
          line: 129,
          column: 21
        },
        end: {
          line: 129,
          column: 54
        }
      },
      "41": {
        start: {
          line: 130,
          column: 4
        },
        end: {
          line: 132,
          column: 5
        }
      },
      "42": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 131,
          column: 51
        }
      },
      "43": {
        start: {
          line: 134,
          column: 4
        },
        end: {
          line: 136,
          column: 5
        }
      },
      "44": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 135,
          column: 82
        }
      },
      "45": {
        start: {
          line: 138,
          column: 4
        },
        end: {
          line: 140,
          column: 5
        }
      },
      "46": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 139,
          column: 86
        }
      },
      "47": {
        start: {
          line: 141,
          column: 22
        },
        end: {
          line: 141,
          column: 85
        }
      },
      "48": {
        start: {
          line: 142,
          column: 4
        },
        end: {
          line: 144,
          column: 5
        }
      },
      "49": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 143,
          column: 72
        }
      },
      "50": {
        start: {
          line: 147,
          column: 21
        },
        end: {
          line: 147,
          column: 55
        }
      },
      "51": {
        start: {
          line: 149,
          column: 35
        },
        end: {
          line: 149,
          column: 123
        }
      },
      "52": {
        start: {
          line: 151,
          column: 36
        },
        end: {
          line: 151,
          column: 110
        }
      },
      "53": {
        start: {
          line: 153,
          column: 26
        },
        end: {
          line: 153,
          column: 51
        }
      },
      "54": {
        start: {
          line: 154,
          column: 27
        },
        end: {
          line: 154,
          column: 77
        }
      },
      "55": {
        start: {
          line: 154,
          column: 53
        },
        end: {
          line: 154,
          column: 64
        }
      },
      "56": {
        start: {
          line: 155,
          column: 29
        },
        end: {
          line: 155,
          column: 59
        }
      },
      "57": {
        start: {
          line: 156,
          column: 31
        },
        end: {
          line: 156,
          column: 57
        }
      },
      "58": {
        start: {
          line: 157,
          column: 19
        },
        end: {
          line: 157,
          column: 75
        }
      },
      "59": {
        start: {
          line: 157,
          column: 42
        },
        end: {
          line: 157,
          column: 49
        }
      },
      "60": {
        start: {
          line: 157,
          column: 63
        },
        end: {
          line: 157,
          column: 68
        }
      },
      "61": {
        start: {
          line: 158,
          column: 28
        },
        end: {
          line: 158,
          column: 99
        }
      },
      "62": {
        start: {
          line: 158,
          column: 70
        },
        end: {
          line: 158,
          column: 75
        }
      },
      "63": {
        start: {
          line: 160,
          column: 25
        },
        end: {
          line: 160,
          column: 26
        }
      },
      "64": {
        start: {
          line: 161,
          column: 4
        },
        end: {
          line: 168,
          column: 6
        }
      },
      "65": {
        start: {
          line: 171,
          column: 21
        },
        end: {
          line: 171,
          column: 55
        }
      },
      "66": {
        start: {
          line: 173,
          column: 4
        },
        end: {
          line: 175,
          column: 5
        }
      },
      "67": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 174,
          column: 20
        }
      },
      "68": {
        start: {
          line: 177,
          column: 26
        },
        end: {
          line: 177,
          column: 34
        }
      },
      "69": {
        start: {
          line: 178,
          column: 20
        },
        end: {
          line: 178,
          column: 29
        }
      },
      "70": {
        start: {
          line: 179,
          column: 4
        },
        end: {
          line: 186,
          column: 5
        }
      },
      "71": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 180,
          column: 37
        }
      },
      "72": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 183,
          column: 9
        }
      },
      "73": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 182,
          column: 24
        }
      },
      "74": {
        start: {
          line: 184,
          column: 33
        },
        end: {
          line: 184,
          column: 121
        }
      },
      "75": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 185,
          column: 44
        }
      },
      "76": {
        start: {
          line: 187,
          column: 4
        },
        end: {
          line: 187,
          column: 17
        }
      },
      "77": {
        start: {
          line: 190,
          column: 4
        },
        end: {
          line: 209,
          column: 5
        }
      },
      "78": {
        start: {
          line: 191,
          column: 25
        },
        end: {
          line: 191,
          column: 59
        }
      },
      "79": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 202,
          column: 11
        }
      },
      "80": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 208,
          column: 11
        }
      },
      "81": {
        start: {
          line: 212,
          column: 22
        },
        end: {
          line: 212,
          column: 32
        }
      },
      "82": {
        start: {
          line: 213,
          column: 4
        },
        end: {
          line: 301,
          column: 5
        }
      },
      "83": {
        start: {
          line: 215,
          column: 32
        },
        end: {
          line: 215,
          column: 129
        }
      },
      "84": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 224,
          column: 9
        }
      },
      "85": {
        start: {
          line: 217,
          column: 29
        },
        end: {
          line: 221,
          column: 14
        }
      },
      "86": {
        start: {
          line: 223,
          column: 12
        },
        end: {
          line: 223,
          column: 28
        }
      },
      "87": {
        start: {
          line: 226,
          column: 27
        },
        end: {
          line: 228,
          column: 10
        }
      },
      "88": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 238,
          column: 9
        }
      },
      "89": {
        start: {
          line: 230,
          column: 12
        },
        end: {
          line: 237,
          column: 15
        }
      },
      "90": {
        start: {
          line: 239,
          column: 27
        },
        end: {
          line: 239,
          column: 36
        }
      },
      "91": {
        start: {
          line: 240,
          column: 20
        },
        end: {
          line: 240,
          column: 40
        }
      },
      "92": {
        start: {
          line: 241,
          column: 29
        },
        end: {
          line: 241,
          column: 77
        }
      },
      "93": {
        start: {
          line: 243,
          column: 25
        },
        end: {
          line: 243,
          column: 58
        }
      },
      "94": {
        start: {
          line: 244,
          column: 8
        },
        end: {
          line: 253,
          column: 9
        }
      },
      "95": {
        start: {
          line: 245,
          column: 37
        },
        end: {
          line: 249,
          column: 13
        }
      },
      "96": {
        start: {
          line: 250,
          column: 12
        },
        end: {
          line: 252,
          column: 15
        }
      },
      "97": {
        start: {
          line: 256,
          column: 8
        },
        end: {
          line: 258,
          column: 9
        }
      },
      "98": {
        start: {
          line: 257,
          column: 12
        },
        end: {
          line: 257,
          column: 55
        }
      },
      "99": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 266,
          column: 11
        }
      },
      "100": {
        start: {
          line: 267,
          column: 25
        },
        end: {
          line: 276,
          column: 9
        }
      },
      "101": {
        start: {
          line: 277,
          column: 29
        },
        end: {
          line: 277,
          column: 64
        }
      },
      "102": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 279,
          column: 28
        }
      },
      "103": {
        start: {
          line: 281,
          column: 8
        },
        end: {
          line: 284,
          column: 11
        }
      },
      "104": {
        start: {
          line: 286,
          column: 8
        },
        end: {
          line: 292,
          column: 11
        }
      },
      "105": {
        start: {
          line: 293,
          column: 30
        },
        end: {
          line: 297,
          column: 9
        }
      },
      "106": {
        start: {
          line: 298,
          column: 8
        },
        end: {
          line: 300,
          column: 11
        }
      },
      "107": {
        start: {
          line: 304,
          column: 22
        },
        end: {
          line: 304,
          column: 32
        }
      },
      "108": {
        start: {
          line: 305,
          column: 4
        },
        end: {
          line: 397,
          column: 5
        }
      },
      "109": {
        start: {
          line: 307,
          column: 32
        },
        end: {
          line: 311,
          column: 37
        }
      },
      "110": {
        start: {
          line: 312,
          column: 8
        },
        end: {
          line: 320,
          column: 9
        }
      },
      "111": {
        start: {
          line: 313,
          column: 29
        },
        end: {
          line: 317,
          column: 14
        }
      },
      "112": {
        start: {
          line: 319,
          column: 12
        },
        end: {
          line: 319,
          column: 28
        }
      },
      "113": {
        start: {
          line: 322,
          column: 27
        },
        end: {
          line: 324,
          column: 10
        }
      },
      "114": {
        start: {
          line: 325,
          column: 8
        },
        end: {
          line: 334,
          column: 9
        }
      },
      "115": {
        start: {
          line: 326,
          column: 12
        },
        end: {
          line: 333,
          column: 15
        }
      },
      "116": {
        start: {
          line: 335,
          column: 27
        },
        end: {
          line: 335,
          column: 36
        }
      },
      "117": {
        start: {
          line: 336,
          column: 21
        },
        end: {
          line: 336,
          column: 41
        }
      },
      "118": {
        start: {
          line: 338,
          column: 27
        },
        end: {
          line: 338,
          column: 59
        }
      },
      "119": {
        start: {
          line: 340,
          column: 28
        },
        end: {
          line: 340,
          column: 61
        }
      },
      "120": {
        start: {
          line: 341,
          column: 8
        },
        end: {
          line: 350,
          column: 9
        }
      },
      "121": {
        start: {
          line: 342,
          column: 37
        },
        end: {
          line: 346,
          column: 13
        }
      },
      "122": {
        start: {
          line: 347,
          column: 12
        },
        end: {
          line: 349,
          column: 15
        }
      },
      "123": {
        start: {
          line: 352,
          column: 32
        },
        end: {
          line: 352,
          column: 97
        }
      },
      "124": {
        start: {
          line: 354,
          column: 8
        },
        end: {
          line: 359,
          column: 11
        }
      },
      "125": {
        start: {
          line: 361,
          column: 8
        },
        end: {
          line: 367,
          column: 11
        }
      },
      "126": {
        start: {
          line: 368,
          column: 25
        },
        end: {
          line: 372,
          column: 9
        }
      },
      "127": {
        start: {
          line: 373,
          column: 29
        },
        end: {
          line: 373,
          column: 64
        }
      },
      "128": {
        start: {
          line: 375,
          column: 8
        },
        end: {
          line: 375,
          column: 28
        }
      },
      "129": {
        start: {
          line: 377,
          column: 8
        },
        end: {
          line: 380,
          column: 11
        }
      },
      "130": {
        start: {
          line: 382,
          column: 8
        },
        end: {
          line: 388,
          column: 11
        }
      },
      "131": {
        start: {
          line: 389,
          column: 30
        },
        end: {
          line: 393,
          column: 9
        }
      },
      "132": {
        start: {
          line: 394,
          column: 8
        },
        end: {
          line: 396,
          column: 11
        }
      },
      "133": {
        start: {
          line: 400,
          column: 22
        },
        end: {
          line: 400,
          column: 32
        }
      },
      "134": {
        start: {
          line: 401,
          column: 4
        },
        end: {
          line: 489,
          column: 5
        }
      },
      "135": {
        start: {
          line: 403,
          column: 32
        },
        end: {
          line: 407,
          column: 37
        }
      },
      "136": {
        start: {
          line: 408,
          column: 8
        },
        end: {
          line: 416,
          column: 9
        }
      },
      "137": {
        start: {
          line: 409,
          column: 29
        },
        end: {
          line: 413,
          column: 14
        }
      },
      "138": {
        start: {
          line: 415,
          column: 12
        },
        end: {
          line: 415,
          column: 28
        }
      },
      "139": {
        start: {
          line: 418,
          column: 27
        },
        end: {
          line: 420,
          column: 10
        }
      },
      "140": {
        start: {
          line: 421,
          column: 8
        },
        end: {
          line: 430,
          column: 9
        }
      },
      "141": {
        start: {
          line: 422,
          column: 12
        },
        end: {
          line: 429,
          column: 15
        }
      },
      "142": {
        start: {
          line: 431,
          column: 27
        },
        end: {
          line: 431,
          column: 36
        }
      },
      "143": {
        start: {
          line: 433,
          column: 25
        },
        end: {
          line: 433,
          column: 58
        }
      },
      "144": {
        start: {
          line: 434,
          column: 8
        },
        end: {
          line: 443,
          column: 9
        }
      },
      "145": {
        start: {
          line: 435,
          column: 37
        },
        end: {
          line: 439,
          column: 13
        }
      },
      "146": {
        start: {
          line: 440,
          column: 12
        },
        end: {
          line: 442,
          column: 15
        }
      },
      "147": {
        start: {
          line: 445,
          column: 8
        },
        end: {
          line: 445,
          column: 62
        }
      },
      "148": {
        start: {
          line: 447,
          column: 8
        },
        end: {
          line: 451,
          column: 11
        }
      },
      "149": {
        start: {
          line: 453,
          column: 8
        },
        end: {
          line: 459,
          column: 11
        }
      },
      "150": {
        start: {
          line: 460,
          column: 25
        },
        end: {
          line: 464,
          column: 9
        }
      },
      "151": {
        start: {
          line: 465,
          column: 29
        },
        end: {
          line: 465,
          column: 64
        }
      },
      "152": {
        start: {
          line: 467,
          column: 8
        },
        end: {
          line: 467,
          column: 28
        }
      },
      "153": {
        start: {
          line: 469,
          column: 8
        },
        end: {
          line: 472,
          column: 11
        }
      },
      "154": {
        start: {
          line: 474,
          column: 8
        },
        end: {
          line: 480,
          column: 11
        }
      },
      "155": {
        start: {
          line: 481,
          column: 30
        },
        end: {
          line: 485,
          column: 9
        }
      },
      "156": {
        start: {
          line: 486,
          column: 8
        },
        end: {
          line: 488,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 18
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 15
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 15
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "getCategoryById",
        decl: {
          start: {
            line: 57,
            column: 15
          },
          end: {
            line: 57,
            column: 30
          }
        },
        loc: {
          start: {
            line: 57,
            column: 43
          },
          end: {
            line: 81,
            column: 1
          }
        },
        line: 57
      },
      "5": {
        name: "updateCategory",
        decl: {
          start: {
            line: 82,
            column: 15
          },
          end: {
            line: 82,
            column: 29
          }
        },
        loc: {
          start: {
            line: 82,
            column: 62
          },
          end: {
            line: 125,
            column: 1
          }
        },
        line: 82
      },
      "6": {
        name: "deleteCategory",
        decl: {
          start: {
            line: 126,
            column: 15
          },
          end: {
            line: 126,
            column: 29
          }
        },
        loc: {
          start: {
            line: 126,
            column: 50
          },
          end: {
            line: 145,
            column: 1
          }
        },
        line: 126
      },
      "7": {
        name: "getCategoryStats",
        decl: {
          start: {
            line: 146,
            column: 15
          },
          end: {
            line: 146,
            column: 31
          }
        },
        loc: {
          start: {
            line: 146,
            column: 44
          },
          end: {
            line: 169,
            column: 1
          }
        },
        line: 146
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 154,
            column: 48
          },
          end: {
            line: 154,
            column: 49
          }
        },
        loc: {
          start: {
            line: 154,
            column: 53
          },
          end: {
            line: 154,
            column: 64
          }
        },
        line: 154
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 157,
            column: 37
          },
          end: {
            line: 157,
            column: 38
          }
        },
        loc: {
          start: {
            line: 157,
            column: 42
          },
          end: {
            line: 157,
            column: 49
          }
        },
        line: 157
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 157,
            column: 58
          },
          end: {
            line: 157,
            column: 59
          }
        },
        loc: {
          start: {
            line: 157,
            column: 63
          },
          end: {
            line: 157,
            column: 68
          }
        },
        line: 157
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 158,
            column: 62
          },
          end: {
            line: 158,
            column: 63
          }
        },
        loc: {
          start: {
            line: 158,
            column: 70
          },
          end: {
            line: 158,
            column: 75
          }
        },
        line: 158
      },
      "12": {
        name: "checkCircularHierarchy",
        decl: {
          start: {
            line: 170,
            column: 15
          },
          end: {
            line: 170,
            column: 37
          }
        },
        loc: {
          start: {
            line: 170,
            column: 60
          },
          end: {
            line: 188,
            column: 1
          }
        },
        line: 170
      },
      "13": {
        name: "logAuditAction",
        decl: {
          start: {
            line: 189,
            column: 15
          },
          end: {
            line: 189,
            column: 29
          }
        },
        loc: {
          start: {
            line: 189,
            column: 67
          },
          end: {
            line: 210,
            column: 1
          }
        },
        line: 189
      },
      "14": {
        name: "GET",
        decl: {
          start: {
            line: 211,
            column: 15
          },
          end: {
            line: 211,
            column: 18
          }
        },
        loc: {
          start: {
            line: 211,
            column: 40
          },
          end: {
            line: 302,
            column: 1
          }
        },
        line: 211
      },
      "15": {
        name: "PUT",
        decl: {
          start: {
            line: 303,
            column: 15
          },
          end: {
            line: 303,
            column: 18
          }
        },
        loc: {
          start: {
            line: 303,
            column: 40
          },
          end: {
            line: 398,
            column: 1
          }
        },
        line: 303
      },
      "16": {
        name: "DELETE",
        decl: {
          start: {
            line: 399,
            column: 15
          },
          end: {
            line: 399,
            column: 21
          }
        },
        loc: {
          start: {
            line: 399,
            column: 43
          },
          end: {
            line: 490,
            column: 1
          }
        },
        line: 399
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 74,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "1": {
        loc: {
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 77,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 77,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 75
      },
      "2": {
        loc: {
          start: {
            line: 86,
            column: 4
          },
          end: {
            line: 88,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 4
          },
          end: {
            line: 88,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "3": {
        loc: {
          start: {
            line: 90,
            column: 4
          },
          end: {
            line: 95,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 4
          },
          end: {
            line: 95,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "4": {
        loc: {
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 90,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 90,
            column: 23
          }
        }, {
          start: {
            line: 90,
            column: 27
          },
          end: {
            line: 90,
            column: 68
          }
        }],
        line: 90
      },
      "5": {
        loc: {
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 92
      },
      "6": {
        loc: {
          start: {
            line: 97,
            column: 4
          },
          end: {
            line: 102,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 4
          },
          end: {
            line: 102,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "7": {
        loc: {
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 101,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 101,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      },
      "8": {
        loc: {
          start: {
            line: 121,
            column: 4
          },
          end: {
            line: 123,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 4
          },
          end: {
            line: 123,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      },
      "9": {
        loc: {
          start: {
            line: 130,
            column: 4
          },
          end: {
            line: 132,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 130,
            column: 4
          },
          end: {
            line: 132,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 130
      },
      "10": {
        loc: {
          start: {
            line: 134,
            column: 4
          },
          end: {
            line: 136,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 4
          },
          end: {
            line: 136,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      },
      "11": {
        loc: {
          start: {
            line: 138,
            column: 4
          },
          end: {
            line: 140,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 138,
            column: 4
          },
          end: {
            line: 140,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 138
      },
      "12": {
        loc: {
          start: {
            line: 138,
            column: 8
          },
          end: {
            line: 138,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 138,
            column: 8
          },
          end: {
            line: 138,
            column: 25
          }
        }, {
          start: {
            line: 138,
            column: 29
          },
          end: {
            line: 138,
            column: 57
          }
        }],
        line: 138
      },
      "13": {
        loc: {
          start: {
            line: 142,
            column: 4
          },
          end: {
            line: 144,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 4
          },
          end: {
            line: 144,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "14": {
        loc: {
          start: {
            line: 153,
            column: 26
          },
          end: {
            line: 153,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 153,
            column: 26
          },
          end: {
            line: 153,
            column: 46
          }
        }, {
          start: {
            line: 153,
            column: 50
          },
          end: {
            line: 153,
            column: 51
          }
        }],
        line: 153
      },
      "15": {
        loc: {
          start: {
            line: 154,
            column: 27
          },
          end: {
            line: 154,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 154,
            column: 27
          },
          end: {
            line: 154,
            column: 72
          }
        }, {
          start: {
            line: 154,
            column: 76
          },
          end: {
            line: 154,
            column: 77
          }
        }],
        line: 154
      },
      "16": {
        loc: {
          start: {
            line: 156,
            column: 31
          },
          end: {
            line: 156,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 156,
            column: 31
          },
          end: {
            line: 156,
            column: 52
          }
        }, {
          start: {
            line: 156,
            column: 56
          },
          end: {
            line: 156,
            column: 57
          }
        }],
        line: 156
      },
      "17": {
        loc: {
          start: {
            line: 157,
            column: 19
          },
          end: {
            line: 157,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 157,
            column: 19
          },
          end: {
            line: 157,
            column: 69
          }
        }, {
          start: {
            line: 157,
            column: 73
          },
          end: {
            line: 157,
            column: 75
          }
        }],
        line: 157
      },
      "18": {
        loc: {
          start: {
            line: 158,
            column: 28
          },
          end: {
            line: 158,
            column: 99
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 158,
            column: 48
          },
          end: {
            line: 158,
            column: 95
          }
        }, {
          start: {
            line: 158,
            column: 98
          },
          end: {
            line: 158,
            column: 99
          }
        }],
        line: 158
      },
      "19": {
        loc: {
          start: {
            line: 173,
            column: 4
          },
          end: {
            line: 175,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 4
          },
          end: {
            line: 175,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 173
      },
      "20": {
        loc: {
          start: {
            line: 179,
            column: 10
          },
          end: {
            line: 179,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 179,
            column: 10
          },
          end: {
            line: 179,
            column: 25
          }
        }, {
          start: {
            line: 179,
            column: 29
          },
          end: {
            line: 179,
            column: 58
          }
        }],
        line: 179
      },
      "21": {
        loc: {
          start: {
            line: 181,
            column: 8
          },
          end: {
            line: 183,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 181,
            column: 8
          },
          end: {
            line: 183,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 181
      },
      "22": {
        loc: {
          start: {
            line: 197,
            column: 24
          },
          end: {
            line: 197,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 197,
            column: 24
          },
          end: {
            line: 197,
            column: 42
          }
        }, {
          start: {
            line: 197,
            column: 46
          },
          end: {
            line: 197,
            column: 50
          }
        }],
        line: 197
      },
      "23": {
        loc: {
          start: {
            line: 198,
            column: 24
          },
          end: {
            line: 198,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 198,
            column: 24
          },
          end: {
            line: 198,
            column: 42
          }
        }, {
          start: {
            line: 198,
            column: 46
          },
          end: {
            line: 198,
            column: 53
          }
        }, {
          start: {
            line: 198,
            column: 57
          },
          end: {
            line: 198,
            column: 61
          }
        }],
        line: 198
      },
      "24": {
        loc: {
          start: {
            line: 199,
            column: 24
          },
          end: {
            line: 199,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 199,
            column: 24
          },
          end: {
            line: 199,
            column: 42
          }
        }, {
          start: {
            line: 199,
            column: 46
          },
          end: {
            line: 199,
            column: 50
          }
        }],
        line: 199
      },
      "25": {
        loc: {
          start: {
            line: 200,
            column: 24
          },
          end: {
            line: 200,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 200,
            column: 24
          },
          end: {
            line: 200,
            column: 42
          }
        }, {
          start: {
            line: 200,
            column: 46
          },
          end: {
            line: 200,
            column: 50
          }
        }],
        line: 200
      },
      "26": {
        loc: {
          start: {
            line: 216,
            column: 8
          },
          end: {
            line: 224,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 216,
            column: 8
          },
          end: {
            line: 224,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 216
      },
      "27": {
        loc: {
          start: {
            line: 229,
            column: 8
          },
          end: {
            line: 238,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 229,
            column: 8
          },
          end: {
            line: 238,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 229
      },
      "28": {
        loc: {
          start: {
            line: 236,
            column: 24
          },
          end: {
            line: 236,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 236,
            column: 24
          },
          end: {
            line: 236,
            column: 41
          }
        }, {
          start: {
            line: 236,
            column: 45
          },
          end: {
            line: 236,
            column: 48
          }
        }],
        line: 236
      },
      "29": {
        loc: {
          start: {
            line: 244,
            column: 8
          },
          end: {
            line: 253,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 244,
            column: 8
          },
          end: {
            line: 253,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 244
      },
      "30": {
        loc: {
          start: {
            line: 256,
            column: 8
          },
          end: {
            line: 258,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 256,
            column: 8
          },
          end: {
            line: 258,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 256
      },
      "31": {
        loc: {
          start: {
            line: 270,
            column: 19
          },
          end: {
            line: 272,
            column: 17
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 270,
            column: 19
          },
          end: {
            line: 270,
            column: 24
          }
        }, {
          start: {
            line: 270,
            column: 28
          },
          end: {
            line: 272,
            column: 17
          }
        }],
        line: 270
      },
      "32": {
        loc: {
          start: {
            line: 291,
            column: 19
          },
          end: {
            line: 291,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 291,
            column: 19
          },
          end: {
            line: 291,
            column: 32
          }
        }, {
          start: {
            line: 291,
            column: 36
          },
          end: {
            line: 291,
            column: 51
          }
        }],
        line: 291
      },
      "33": {
        loc: {
          start: {
            line: 296,
            column: 19
          },
          end: {
            line: 296,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 296,
            column: 19
          },
          end: {
            line: 296,
            column: 32
          }
        }, {
          start: {
            line: 296,
            column: 36
          },
          end: {
            line: 296,
            column: 64
          }
        }],
        line: 296
      },
      "34": {
        loc: {
          start: {
            line: 312,
            column: 8
          },
          end: {
            line: 320,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 312,
            column: 8
          },
          end: {
            line: 320,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 312
      },
      "35": {
        loc: {
          start: {
            line: 325,
            column: 8
          },
          end: {
            line: 334,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 325,
            column: 8
          },
          end: {
            line: 334,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 325
      },
      "36": {
        loc: {
          start: {
            line: 332,
            column: 24
          },
          end: {
            line: 332,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 332,
            column: 24
          },
          end: {
            line: 332,
            column: 41
          }
        }, {
          start: {
            line: 332,
            column: 45
          },
          end: {
            line: 332,
            column: 48
          }
        }],
        line: 332
      },
      "37": {
        loc: {
          start: {
            line: 341,
            column: 8
          },
          end: {
            line: 350,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 341,
            column: 8
          },
          end: {
            line: 350,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 341
      },
      "38": {
        loc: {
          start: {
            line: 357,
            column: 23
          },
          end: {
            line: 357,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 357,
            column: 23
          },
          end: {
            line: 357,
            column: 61
          }
        }, {
          start: {
            line: 357,
            column: 65
          },
          end: {
            line: 357,
            column: 97
          }
        }],
        line: 357
      },
      "39": {
        loc: {
          start: {
            line: 387,
            column: 19
          },
          end: {
            line: 387,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 387,
            column: 19
          },
          end: {
            line: 387,
            column: 32
          }
        }, {
          start: {
            line: 387,
            column: 36
          },
          end: {
            line: 387,
            column: 51
          }
        }],
        line: 387
      },
      "40": {
        loc: {
          start: {
            line: 392,
            column: 19
          },
          end: {
            line: 392,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 392,
            column: 19
          },
          end: {
            line: 392,
            column: 32
          }
        }, {
          start: {
            line: 392,
            column: 36
          },
          end: {
            line: 392,
            column: 64
          }
        }],
        line: 392
      },
      "41": {
        loc: {
          start: {
            line: 408,
            column: 8
          },
          end: {
            line: 416,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 408,
            column: 8
          },
          end: {
            line: 416,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 408
      },
      "42": {
        loc: {
          start: {
            line: 421,
            column: 8
          },
          end: {
            line: 430,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 421,
            column: 8
          },
          end: {
            line: 430,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 421
      },
      "43": {
        loc: {
          start: {
            line: 428,
            column: 24
          },
          end: {
            line: 428,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 428,
            column: 24
          },
          end: {
            line: 428,
            column: 41
          }
        }, {
          start: {
            line: 428,
            column: 45
          },
          end: {
            line: 428,
            column: 48
          }
        }],
        line: 428
      },
      "44": {
        loc: {
          start: {
            line: 434,
            column: 8
          },
          end: {
            line: 443,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 434,
            column: 8
          },
          end: {
            line: 443,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 434
      },
      "45": {
        loc: {
          start: {
            line: 449,
            column: 23
          },
          end: {
            line: 449,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 449,
            column: 23
          },
          end: {
            line: 449,
            column: 61
          }
        }, {
          start: {
            line: 449,
            column: 65
          },
          end: {
            line: 449,
            column: 97
          }
        }],
        line: 449
      },
      "46": {
        loc: {
          start: {
            line: 479,
            column: 19
          },
          end: {
            line: 479,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 479,
            column: 19
          },
          end: {
            line: 479,
            column: 32
          }
        }, {
          start: {
            line: 479,
            column: 36
          },
          end: {
            line: 479,
            column: 51
          }
        }],
        line: 479
      },
      "47": {
        loc: {
          start: {
            line: 484,
            column: 19
          },
          end: {
            line: 484,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 484,
            column: 19
          },
          end: {
            line: 484,
            column: 32
          }
        }, {
          start: {
            line: 484,
            column: 36
          },
          end: {
            line: 484,
            column: 64
          }
        }],
        line: 484
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\categories\\[id]\\route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\r\nimport { z } from 'zod';\r\nimport { createClient } from '@/lib/integrations/supabase/server';\r\nimport { requireAdminAuth } from '@/lib/auth/admin-auth';\r\nimport { checkRateLimit } from '@/lib/enterprise/rate-limiter';\r\nimport { logger, LogLevel, LogCategory } from '@/lib/enterprise/logger';\r\nimport { metricsCollector } from '@/lib/enterprise/metrics';\r\n\r\n// ===================================\r\n// CONFIGURACI\xD3N\r\n// ===================================\r\nconst RATE_LIMIT_CONFIGS = {\r\n  admin: {\r\n    windowMs: 15 * 60 * 1000, // 15 minutos\r\n    maxRequests: 100,\r\n  },\r\n};\r\n\r\n// ===================================\r\n// ESQUEMAS DE VALIDACI\xD3N\r\n// ===================================\r\nconst UpdateCategorySchema = z.object({\r\n  name: z.string().min(1, 'El nombre es requerido').max(100, 'El nombre es muy largo').optional(),\r\n  slug: z.string().min(1, 'El slug es requerido').max(100, 'El slug es muy largo').optional(),\r\n  description: z.string().max(500, 'La descripci\xF3n es muy larga').optional(),\r\n  image_url: z.string().url('URL de imagen inv\xE1lida').optional().nullable(),\r\n  parent_id: z.string().uuid('ID de categor\xEDa padre inv\xE1lido').optional().nullable(),\r\n  is_active: z.boolean().optional(),\r\n  is_featured: z.boolean().optional(),\r\n  sort_order: z.number().int().min(0, 'El orden debe ser positivo').optional(),\r\n  meta_title: z.string().max(60, 'El meta t\xEDtulo es muy largo').optional().nullable(),\r\n  meta_description: z.string().max(160, 'La meta descripci\xF3n es muy larga').optional().nullable(),\r\n  meta_keywords: z.string().max(255, 'Las meta keywords son muy largas').optional().nullable(),\r\n});\r\n\r\n// ===================================\r\n// TIPOS\r\n// ===================================\r\ninterface ApiResponse<T> {\r\n  data: T;\r\n  success: boolean;\r\n  message?: string;\r\n  error?: string;\r\n  meta?: {\r\n    total?: number;\r\n    page?: number;\r\n    limit?: number;\r\n    pages?: number;\r\n  };\r\n}\r\n\r\ninterface Category {\r\n  id: string;\r\n  name: string;\r\n  slug: string;\r\n  description?: string;\r\n  image_url?: string;\r\n  parent_id?: string;\r\n  is_active: boolean;\r\n  is_featured: boolean;\r\n  sort_order: number;\r\n  product_count: number;\r\n  meta_title?: string;\r\n  meta_description?: string;\r\n  meta_keywords?: string;\r\n  created_at: string;\r\n  updated_at: string;\r\n  parent?: Category;\r\n  children?: Category[];\r\n}\r\n\r\ninterface CategoryStats {\r\n  total_products: number;\r\n  active_products: number;\r\n  inactive_products: number;\r\n  subcategories_count: number;\r\n  avg_product_price: number;\r\n  total_revenue: number;\r\n}\r\n\r\n// ===================================\r\n// FUNCIONES AUXILIARES\r\n// ===================================\r\nasync function getCategoryById(categoryId: string): Promise<Category | null> {\r\n  const supabase = await createClient();\r\n\r\n  const { data: category, error } = await supabase\r\n    .from('categories')\r\n    .select(`\r\n      *,\r\n      parent:parent_id(\r\n        id,\r\n        name,\r\n        slug\r\n      ),\r\n      children:categories!parent_id(\r\n        id,\r\n        name,\r\n        slug,\r\n        is_active,\r\n        product_count\r\n      )\r\n    `)\r\n    .eq('id', categoryId)\r\n    .single();\r\n\r\n  if (error) {\r\n    if (error.code === 'PGRST116') {\r\n      return null; // No encontrado\r\n    }\r\n    throw new Error(`Error obteniendo categor\xEDa: ${error.message}`);\r\n  }\r\n\r\n  return category;\r\n}\r\n\r\nasync function updateCategory(categoryId: string, updateData: any, userId: string): Promise<Category> {\r\n  const supabase = await createClient();\r\n\r\n  // Verificar que la categor\xEDa existe\r\n  const existingCategory = await getCategoryById(categoryId);\r\n  if (!existingCategory) {\r\n    throw new Error('Categor\xEDa no encontrada');\r\n  }\r\n\r\n  // Verificar slug \xFAnico si se est\xE1 actualizando\r\n  if (updateData.slug && updateData.slug !== existingCategory.slug) {\r\n    const { data: existingSlug } = await supabase\r\n      .from('categories')\r\n      .select('id')\r\n      .eq('slug', updateData.slug)\r\n      .neq('id', categoryId)\r\n      .single();\r\n\r\n    if (existingSlug) {\r\n      throw new Error('Ya existe una categor\xEDa con ese slug');\r\n    }\r\n  }\r\n\r\n  // Verificar jerarqu\xEDa circular si se est\xE1 actualizando parent_id\r\n  if (updateData.parent_id) {\r\n    const isCircular = await checkCircularHierarchy(categoryId, updateData.parent_id);\r\n    if (isCircular) {\r\n      throw new Error('No se puede crear una jerarqu\xEDa circular');\r\n    }\r\n  }\r\n\r\n  const { data: updatedCategory, error } = await supabase\r\n    .from('categories')\r\n    .update({\r\n      ...updateData,\r\n      updated_at: new Date().toISOString()\r\n    })\r\n    .eq('id', categoryId)\r\n    .select(`\r\n      *,\r\n      parent:parent_id(\r\n        id,\r\n        name,\r\n        slug\r\n      ),\r\n      children:categories!parent_id(\r\n        id,\r\n        name,\r\n        slug,\r\n        is_active,\r\n        product_count\r\n      )\r\n    `)\r\n    .single();\r\n\r\n  if (error) {\r\n    throw new Error(`Error actualizando categor\xEDa: ${error.message}`);\r\n  }\r\n\r\n  return updatedCategory;\r\n}\r\n\r\nasync function deleteCategory(categoryId: string, userId: string): Promise<void> {\r\n  const supabase = await createClient();\r\n\r\n  // Verificar que la categor\xEDa existe\r\n  const category = await getCategoryById(categoryId);\r\n  if (!category) {\r\n    throw new Error('Categor\xEDa no encontrada');\r\n  }\r\n\r\n  // Verificar que no tenga productos\r\n  if (category.product_count > 0) {\r\n    throw new Error('No se puede eliminar una categor\xEDa que tiene productos');\r\n  }\r\n\r\n  // Verificar que no tenga subcategor\xEDas\r\n  if (category.children && category.children.length > 0) {\r\n    throw new Error('No se puede eliminar una categor\xEDa que tiene subcategor\xEDas');\r\n  }\r\n\r\n  const { error } = await supabase\r\n    .from('categories')\r\n    .delete()\r\n    .eq('id', categoryId);\r\n\r\n  if (error) {\r\n    throw new Error(`Error eliminando categor\xEDa: ${error.message}`);\r\n  }\r\n}\r\n\r\nasync function getCategoryStats(categoryId: string): Promise<CategoryStats> {\r\n  const supabase = await createClient();\r\n\r\n  // Obtener estad\xEDsticas de productos\r\n  const { data: productStats } = await supabase\r\n    .from('products')\r\n    .select('is_active, price')\r\n    .eq('category_id', categoryId);\r\n\r\n  // Obtener subcategor\xEDas\r\n  const { data: subcategories } = await supabase\r\n    .from('categories')\r\n    .select('id')\r\n    .eq('parent_id', categoryId);\r\n\r\n  // Calcular estad\xEDsticas\r\n  const totalProducts = productStats?.length || 0;\r\n  const activeProducts = productStats?.filter(p => p.is_active).length || 0;\r\n  const inactiveProducts = totalProducts - activeProducts;\r\n  const subcategoriesCount = subcategories?.length || 0;\r\n  \r\n  const prices = productStats?.map(p => p.price).filter(p => p > 0) || [];\r\n  const avgProductPrice = prices.length > 0 ? prices.reduce((a, b) => a + b, 0) / prices.length : 0;\r\n\r\n  // TODO: Calcular revenue real desde orders\r\n  const totalRevenue = 0;\r\n\r\n  return {\r\n    total_products: totalProducts,\r\n    active_products: activeProducts,\r\n    inactive_products: inactiveProducts,\r\n    subcategories_count: subcategoriesCount,\r\n    avg_product_price: avgProductPrice,\r\n    total_revenue: totalRevenue\r\n  };\r\n}\r\n\r\nasync function checkCircularHierarchy(categoryId: string, parentId: string): Promise<boolean> {\r\n  const supabase = await createClient();\r\n\r\n  // Si el parent_id es el mismo categoryId, es circular\r\n  if (categoryId === parentId) {\r\n    return true;\r\n  }\r\n\r\n  // Buscar hacia arriba en la jerarqu\xEDa\r\n  let currentParentId = parentId;\r\n  const visited = new Set<string>();\r\n\r\n  while (currentParentId && !visited.has(currentParentId)) {\r\n    visited.add(currentParentId);\r\n\r\n    if (currentParentId === categoryId) {\r\n      return true; // Encontramos una referencia circular\r\n    }\r\n\r\n    const { data: parent } = await supabase\r\n      .from('categories')\r\n      .select('parent_id')\r\n      .eq('id', currentParentId)\r\n      .single();\r\n\r\n    currentParentId = parent?.parent_id;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nasync function logAuditAction(action: string, categoryId: string, userId: string, details?: any): Promise<void> {\r\n  try {\r\n    const supabase = await createClient();\r\n\r\n    await supabase.from('audit_logs').insert({\r\n      table_name: 'categories',\r\n      record_id: categoryId,\r\n      action,\r\n      user_id: userId,\r\n      old_values: details?.oldValues || null,\r\n      new_values: details?.newValues || details || null,\r\n      ip_address: details?.ipAddress || null,\r\n      user_agent: details?.userAgent || null,\r\n      created_at: new Date().toISOString()\r\n    });\r\n  } catch (error) {\r\n    logger.log(LogLevel.ERROR, LogCategory.AUDIT, 'Error registrando auditor\xEDa', { error, action, categoryId });\r\n  }\r\n}\r\n\r\n// ===================================\r\n// GET /api/admin/categories/[id] - Obtener categor\xEDa espec\xEDfica (Admin)\r\n// ===================================\r\nexport async function GET(\r\n  request: NextRequest,\r\n  { params }: { params: { id: string } }\r\n) {\r\n  const startTime = Date.now();\r\n\r\n  try {\r\n    // Rate limiting\r\n    const rateLimitResult = await checkRateLimit(\r\n      request,\r\n      RATE_LIMIT_CONFIGS.admin,\r\n      'admin-categories-get'\r\n    );\r\n\r\n    if (!rateLimitResult.success) {\r\n      const response = NextResponse.json(\r\n        { error: rateLimitResult.message },\r\n        { status: 429 }\r\n      );\r\n      // Rate limit headers are handled internally\r\n      return response;\r\n    }\r\n\r\n    // Verificar autenticaci\xF3n de admin\r\n    const authResult = await requireAdminAuth(request, ['categories_read']);\r\n\r\n    if (!authResult.success) {\r\n      return NextResponse.json(\r\n        {\r\n          error: authResult.error,\r\n          code: authResult.code,\r\n          enterprise: true,\r\n          timestamp: new Date().toISOString()\r\n        },\r\n        { status: authResult.status || 401 }\r\n      );\r\n    }\r\n\r\n    const categoryId = params.id;\r\n    const url = new URL(request.url);\r\n    const includeStats = url.searchParams.get('include_stats') === 'true';\r\n\r\n    // Obtener categor\xEDa\r\n    const category = await getCategoryById(categoryId);\r\n\r\n    if (!category) {\r\n      const notFoundResponse: ApiResponse<null> = {\r\n        data: null,\r\n        success: false,\r\n        error: 'Categor\xEDa no encontrada'\r\n      };\r\n      return NextResponse.json(notFoundResponse, { status: 404 });\r\n    }\r\n\r\n    // Obtener estad\xEDsticas si se solicitan\r\n    let stats: CategoryStats | undefined;\r\n    if (includeStats) {\r\n      stats = await getCategoryStats(categoryId);\r\n    }\r\n\r\n    // Registrar m\xE9tricas\r\n    metricsCollector.recordApiCall({\r\n      endpoint: '/api/admin/categories/[id]',\r\n      method: 'GET',\r\n      statusCode: 200,\r\n      responseTime: Date.now() - startTime,\r\n      userId: authResult.user?.id\r\n    });\r\n\r\n    const response: ApiResponse<Category & { stats?: CategoryStats }> = {\r\n      data: {\r\n        ...category,\r\n        ...(stats && { stats })\r\n      },\r\n      success: true,\r\n      message: 'Categor\xEDa obtenida exitosamente'\r\n    };\r\n\r\n    const nextResponse = NextResponse.json(response);\r\n    // Rate limit headers are handled internally\r\n    return nextResponse;\r\n\r\n  } catch (error: any) {\r\n    logger.log(LogLevel.ERROR, LogCategory.API, 'Error en GET /api/admin/categories/[id]', { error, categoryId: params.id });\r\n\r\n    // Registrar m\xE9tricas de error\r\n    metricsCollector.recordApiCall({\r\n      endpoint: '/api/admin/categories/[id]',\r\n      method: 'GET',\r\n      statusCode: 500,\r\n      responseTime: Date.now() - startTime,\r\n      error: error.message || 'Unknown error'\r\n    });\r\n\r\n    const errorResponse: ApiResponse<null> = {\r\n      data: null,\r\n      success: false,\r\n      error: error.message || 'Error interno del servidor'\r\n    };\r\n\r\n    return NextResponse.json(errorResponse, { status: 500 });\r\n  }\r\n}\r\n\r\n// ===================================\r\n// PUT /api/admin/categories/[id] - Actualizar categor\xEDa (Admin)\r\n// ===================================\r\nexport async function PUT(\r\n  request: NextRequest,\r\n  { params }: { params: { id: string } }\r\n) {\r\n  const startTime = Date.now();\r\n\r\n  try {\r\n    // Rate limiting\r\n    const rateLimitResult = await checkRateLimit(\r\n      request,\r\n      {\r\n        windowMs: RATE_LIMIT_CONFIGS.admin.windowMs,\r\n        maxRequests: Math.floor(RATE_LIMIT_CONFIGS.admin.maxRequests / 2),\r\n        message: 'Demasiadas actualizaciones de categor\xEDas'\r\n      },\r\n      'admin-categories-update'\r\n    );\r\n\r\n    if (!rateLimitResult.success) {\r\n      const response = NextResponse.json(\r\n        { error: rateLimitResult.message },\r\n        { status: 429 }\r\n      );\r\n      // Rate limit headers are handled internally\r\n      return response;\r\n    }\r\n\r\n    // Verificar autenticaci\xF3n de admin\r\n    const authResult = await requireAdminAuth(request, ['categories_update']);\r\n\r\n    if (!authResult.success) {\r\n      return NextResponse.json(\r\n        {\r\n          error: authResult.error,\r\n          code: authResult.code,\r\n          enterprise: true,\r\n          timestamp: new Date().toISOString()\r\n        },\r\n        { status: authResult.status || 401 }\r\n      );\r\n    }\r\n\r\n    const categoryId = params.id;\r\n    const body = await request.json();\r\n    \r\n    // Validar datos de entrada\r\n    const updateData = UpdateCategorySchema.parse(body);\r\n\r\n    // Obtener categor\xEDa actual para auditor\xEDa\r\n    const oldCategory = await getCategoryById(categoryId);\r\n    if (!oldCategory) {\r\n      const notFoundResponse: ApiResponse<null> = {\r\n        data: null,\r\n        success: false,\r\n        error: 'Categor\xEDa no encontrada'\r\n      };\r\n      return NextResponse.json(notFoundResponse, { status: 404 });\r\n    }\r\n\r\n    // Actualizar categor\xEDa\r\n    const updatedCategory = await updateCategory(categoryId, updateData, authResult.user?.id!);\r\n\r\n    // Registrar auditor\xEDa\r\n    await logAuditAction('update', categoryId, authResult.user?.id!, {\r\n      oldValues: oldCategory,\r\n      newValues: updatedCategory,\r\n      ipAddress: request.headers.get('x-forwarded-for') || request.headers.get('x-real-ip'),\r\n      userAgent: request.headers.get('user-agent')\r\n    });\r\n\r\n    // Registrar m\xE9tricas\r\n    metricsCollector.recordApiCall({\r\n      endpoint: '/api/admin/categories/[id]',\r\n      method: 'PUT',\r\n      statusCode: 200,\r\n      responseTime: Date.now() - startTime,\r\n      userId: authResult.user?.id\r\n    });\r\n\r\n    const response: ApiResponse<Category> = {\r\n      data: updatedCategory,\r\n      success: true,\r\n      message: 'Categor\xEDa actualizada exitosamente'\r\n    };\r\n\r\n    const nextResponse = NextResponse.json(response);\r\n    // Rate limit headers are handled internally\r\n    return nextResponse;\r\n\r\n  } catch (error: any) {\r\n    logger.log(LogLevel.ERROR, LogCategory.API, 'Error en PUT /api/admin/categories/[id]', { error, categoryId: params.id });\r\n\r\n    // Registrar m\xE9tricas de error\r\n    metricsCollector.recordApiCall({\r\n      endpoint: '/api/admin/categories/[id]',\r\n      method: 'PUT',\r\n      statusCode: 500,\r\n      responseTime: Date.now() - startTime,\r\n      error: error.message || 'Unknown error'\r\n    });\r\n\r\n    const errorResponse: ApiResponse<null> = {\r\n      data: null,\r\n      success: false,\r\n      error: error.message || 'Error interno del servidor'\r\n    };\r\n\r\n    return NextResponse.json(errorResponse, { status: 500 });\r\n  }\r\n}\r\n\r\n// ===================================\r\n// DELETE /api/admin/categories/[id] - Eliminar categor\xEDa (Admin)\r\n// ===================================\r\nexport async function DELETE(\r\n  request: NextRequest,\r\n  { params }: { params: { id: string } }\r\n) {\r\n  const startTime = Date.now();\r\n\r\n  try {\r\n    // Rate limiting\r\n    const rateLimitResult = await checkRateLimit(\r\n      request,\r\n      {\r\n        windowMs: RATE_LIMIT_CONFIGS.admin.windowMs,\r\n        maxRequests: Math.floor(RATE_LIMIT_CONFIGS.admin.maxRequests / 4),\r\n        message: 'Demasiadas eliminaciones de categor\xEDas'\r\n      },\r\n      'admin-categories-delete'\r\n    );\r\n\r\n    if (!rateLimitResult.success) {\r\n      const response = NextResponse.json(\r\n        { error: rateLimitResult.message },\r\n        { status: 429 }\r\n      );\r\n      // Rate limit headers are handled internally\r\n      return response;\r\n    }\r\n\r\n    // Verificar autenticaci\xF3n de admin\r\n    const authResult = await requireAdminAuth(request, ['categories_delete']);\r\n\r\n    if (!authResult.success) {\r\n      return NextResponse.json(\r\n        {\r\n          error: authResult.error,\r\n          code: authResult.code,\r\n          enterprise: true,\r\n          timestamp: new Date().toISOString()\r\n        },\r\n        { status: authResult.status || 401 }\r\n      );\r\n    }\r\n\r\n    const categoryId = params.id;\r\n\r\n    // Obtener categor\xEDa para auditor\xEDa\r\n    const category = await getCategoryById(categoryId);\r\n    if (!category) {\r\n      const notFoundResponse: ApiResponse<null> = {\r\n        data: null,\r\n        success: false,\r\n        error: 'Categor\xEDa no encontrada'\r\n      };\r\n      return NextResponse.json(notFoundResponse, { status: 404 });\r\n    }\r\n\r\n    // Eliminar categor\xEDa\r\n    await deleteCategory(categoryId, authResult.user?.id!);\r\n\r\n    // Registrar auditor\xEDa\r\n    await logAuditAction('delete', categoryId, authResult.user?.id!, {\r\n      oldValues: category,\r\n      ipAddress: request.headers.get('x-forwarded-for') || request.headers.get('x-real-ip'),\r\n      userAgent: request.headers.get('user-agent')\r\n    });\r\n\r\n    // Registrar m\xE9tricas\r\n    metricsCollector.recordApiCall({\r\n      endpoint: '/api/admin/categories/[id]',\r\n      method: 'DELETE',\r\n      statusCode: 200,\r\n      responseTime: Date.now() - startTime,\r\n      userId: authResult.user?.id\r\n    });\r\n\r\n    const response: ApiResponse<null> = {\r\n      data: null,\r\n      success: true,\r\n      message: 'Categor\xEDa eliminada exitosamente'\r\n    };\r\n\r\n    const nextResponse = NextResponse.json(response);\r\n    // Rate limit headers are handled internally\r\n    return nextResponse;\r\n\r\n  } catch (error: any) {\r\n    logger.log(LogLevel.ERROR, LogCategory.API, 'Error en DELETE /api/admin/categories/[id]', { error, categoryId: params.id });\r\n\r\n    // Registrar m\xE9tricas de error\r\n    metricsCollector.recordApiCall({\r\n      endpoint: '/api/admin/categories/[id]',\r\n      method: 'DELETE',\r\n      statusCode: 500,\r\n      responseTime: Date.now() - startTime,\r\n      error: error.message || 'Unknown error'\r\n    });\r\n\r\n    const errorResponse: ApiResponse<null> = {\r\n      data: null,\r\n      success: false,\r\n      error: error.message || 'Error interno del servidor'\r\n    };\r\n\r\n    return NextResponse.json(errorResponse, { status: 500 });\r\n  }\r\n}"],
      names: ["DELETE", "GET", "PUT", "RATE_LIMIT_CONFIGS", "admin", "windowMs", "maxRequests", "UpdateCategorySchema", "z", "object", "name", "string", "min", "max", "optional", "slug", "description", "image_url", "url", "nullable", "parent_id", "uuid", "is_active", "boolean", "is_featured", "sort_order", "number", "int", "meta_title", "meta_description", "meta_keywords", "getCategoryById", "categoryId", "supabase", "createClient", "data", "category", "error", "from", "select", "eq", "single", "code", "Error", "message", "updateCategory", "updateData", "userId", "existingCategory", "existingSlug", "neq", "isCircular", "checkCircularHierarchy", "updatedCategory", "update", "updated_at", "Date", "toISOString", "deleteCategory", "product_count", "children", "length", "delete", "getCategoryStats", "productStats", "subcategories", "totalProducts", "activeProducts", "filter", "p", "inactiveProducts", "subcategoriesCount", "prices", "map", "price", "avgProductPrice", "reduce", "a", "b", "totalRevenue", "total_products", "active_products", "inactive_products", "subcategories_count", "avg_product_price", "total_revenue", "parentId", "currentParentId", "visited", "Set", "has", "add", "parent", "logAuditAction", "action", "details", "insert", "table_name", "record_id", "user_id", "old_values", "oldValues", "new_values", "newValues", "ip_address", "ipAddress", "user_agent", "userAgent", "created_at", "logger", "log", "LogLevel", "ERROR", "LogCategory", "AUDIT", "request", "params", "startTime", "now", "rateLimitResult", "checkRateLimit", "success", "response", "NextResponse", "json", "status", "authResult", "requireAdminAuth", "enterprise", "timestamp", "id", "URL", "includeStats", "searchParams", "get", "notFoundResponse", "stats", "metricsCollector", "recordApiCall", "endpoint", "method", "statusCode", "responseTime", "user", "nextResponse", "API", "errorResponse", "Math", "floor", "body", "parse", "oldCategory", "headers"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "55e33dc77058febe8b58e940e34a5427766592d5"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_iefmi4l09 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_iefmi4l09();
cov_iefmi4l09().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_iefmi4l09().f[0]++;
  cov_iefmi4l09().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_iefmi4l09().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_iefmi4l09().s[3]++;
_export(exports, {
  get DELETE() {
    /* istanbul ignore next */
    cov_iefmi4l09().f[1]++;
    cov_iefmi4l09().s[4]++;
    return DELETE;
  },
  get GET() {
    /* istanbul ignore next */
    cov_iefmi4l09().f[2]++;
    cov_iefmi4l09().s[5]++;
    return GET;
  },
  get PUT() {
    /* istanbul ignore next */
    cov_iefmi4l09().f[3]++;
    cov_iefmi4l09().s[6]++;
    return PUT;
  }
});
const _server =
/* istanbul ignore next */
(cov_iefmi4l09().s[7]++, require("next/server"));
const _zod =
/* istanbul ignore next */
(cov_iefmi4l09().s[8]++, require("zod"));
const _server1 =
/* istanbul ignore next */
(cov_iefmi4l09().s[9]++, require("../../../../../lib/integrations/supabase/server"));
const _adminauth =
/* istanbul ignore next */
(cov_iefmi4l09().s[10]++, require("../../../../../lib/auth/admin-auth"));
const _ratelimiter =
/* istanbul ignore next */
(cov_iefmi4l09().s[11]++, require("../../../../../lib/enterprise/rate-limiter"));
const _logger =
/* istanbul ignore next */
(cov_iefmi4l09().s[12]++, require("../../../../../lib/enterprise/logger"));
const _metrics =
/* istanbul ignore next */
(cov_iefmi4l09().s[13]++, require("../../../../../lib/enterprise/metrics"));
// ===================================
// CONFIGURACIÓN
// ===================================
const RATE_LIMIT_CONFIGS =
/* istanbul ignore next */
(cov_iefmi4l09().s[14]++, {
  admin: {
    windowMs: 15 * 60 * 1000,
    maxRequests: 100
  }
});
// ===================================
// ESQUEMAS DE VALIDACIÓN
// ===================================
const UpdateCategorySchema =
/* istanbul ignore next */
(cov_iefmi4l09().s[15]++, _zod.z.object({
  name: _zod.z.string().min(1, 'El nombre es requerido').max(100, 'El nombre es muy largo').optional(),
  slug: _zod.z.string().min(1, 'El slug es requerido').max(100, 'El slug es muy largo').optional(),
  description: _zod.z.string().max(500, 'La descripción es muy larga').optional(),
  image_url: _zod.z.string().url('URL de imagen inválida').optional().nullable(),
  parent_id: _zod.z.string().uuid('ID de categoría padre inválido').optional().nullable(),
  is_active: _zod.z.boolean().optional(),
  is_featured: _zod.z.boolean().optional(),
  sort_order: _zod.z.number().int().min(0, 'El orden debe ser positivo').optional(),
  meta_title: _zod.z.string().max(60, 'El meta título es muy largo').optional().nullable(),
  meta_description: _zod.z.string().max(160, 'La meta descripción es muy larga').optional().nullable(),
  meta_keywords: _zod.z.string().max(255, 'Las meta keywords son muy largas').optional().nullable()
}));
// ===================================
// FUNCIONES AUXILIARES
// ===================================
async function getCategoryById(categoryId) {
  /* istanbul ignore next */
  cov_iefmi4l09().f[4]++;
  const supabase =
  /* istanbul ignore next */
  (cov_iefmi4l09().s[16]++, await (0, _server1.createClient)());
  const {
    data: category,
    error
  } =
  /* istanbul ignore next */
  (cov_iefmi4l09().s[17]++, await supabase.from('categories').select(`
      *,
      parent:parent_id(
        id,
        name,
        slug
      ),
      children:categories!parent_id(
        id,
        name,
        slug,
        is_active,
        product_count
      )
    `).eq('id', categoryId).single());
  /* istanbul ignore next */
  cov_iefmi4l09().s[18]++;
  if (error) {
    /* istanbul ignore next */
    cov_iefmi4l09().b[0][0]++;
    cov_iefmi4l09().s[19]++;
    if (error.code === 'PGRST116') {
      /* istanbul ignore next */
      cov_iefmi4l09().b[1][0]++;
      cov_iefmi4l09().s[20]++;
      return null; // No encontrado
    } else
    /* istanbul ignore next */
    {
      cov_iefmi4l09().b[1][1]++;
    }
    cov_iefmi4l09().s[21]++;
    throw new Error(`Error obteniendo categoría: ${error.message}`);
  } else
  /* istanbul ignore next */
  {
    cov_iefmi4l09().b[0][1]++;
  }
  cov_iefmi4l09().s[22]++;
  return category;
}
async function updateCategory(categoryId, updateData, userId) {
  /* istanbul ignore next */
  cov_iefmi4l09().f[5]++;
  const supabase =
  /* istanbul ignore next */
  (cov_iefmi4l09().s[23]++, await (0, _server1.createClient)());
  // Verificar que la categoría existe
  const existingCategory =
  /* istanbul ignore next */
  (cov_iefmi4l09().s[24]++, await getCategoryById(categoryId));
  /* istanbul ignore next */
  cov_iefmi4l09().s[25]++;
  if (!existingCategory) {
    /* istanbul ignore next */
    cov_iefmi4l09().b[2][0]++;
    cov_iefmi4l09().s[26]++;
    throw new Error('Categoría no encontrada');
  } else
  /* istanbul ignore next */
  {
    cov_iefmi4l09().b[2][1]++;
  }
  // Verificar slug único si se está actualizando
  cov_iefmi4l09().s[27]++;
  if (
  /* istanbul ignore next */
  (cov_iefmi4l09().b[4][0]++, updateData.slug) &&
  /* istanbul ignore next */
  (cov_iefmi4l09().b[4][1]++, updateData.slug !== existingCategory.slug)) {
    /* istanbul ignore next */
    cov_iefmi4l09().b[3][0]++;
    const {
      data: existingSlug
    } =
    /* istanbul ignore next */
    (cov_iefmi4l09().s[28]++, await supabase.from('categories').select('id').eq('slug', updateData.slug).neq('id', categoryId).single());
    /* istanbul ignore next */
    cov_iefmi4l09().s[29]++;
    if (existingSlug) {
      /* istanbul ignore next */
      cov_iefmi4l09().b[5][0]++;
      cov_iefmi4l09().s[30]++;
      throw new Error('Ya existe una categoría con ese slug');
    } else
    /* istanbul ignore next */
    {
      cov_iefmi4l09().b[5][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_iefmi4l09().b[3][1]++;
  }
  // Verificar jerarquía circular si se está actualizando parent_id
  cov_iefmi4l09().s[31]++;
  if (updateData.parent_id) {
    /* istanbul ignore next */
    cov_iefmi4l09().b[6][0]++;
    const isCircular =
    /* istanbul ignore next */
    (cov_iefmi4l09().s[32]++, await checkCircularHierarchy(categoryId, updateData.parent_id));
    /* istanbul ignore next */
    cov_iefmi4l09().s[33]++;
    if (isCircular) {
      /* istanbul ignore next */
      cov_iefmi4l09().b[7][0]++;
      cov_iefmi4l09().s[34]++;
      throw new Error('No se puede crear una jerarquía circular');
    } else
    /* istanbul ignore next */
    {
      cov_iefmi4l09().b[7][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_iefmi4l09().b[6][1]++;
  }
  const {
    data: updatedCategory,
    error
  } =
  /* istanbul ignore next */
  (cov_iefmi4l09().s[35]++, await supabase.from('categories').update({
    ...updateData,
    updated_at: new Date().toISOString()
  }).eq('id', categoryId).select(`
      *,
      parent:parent_id(
        id,
        name,
        slug
      ),
      children:categories!parent_id(
        id,
        name,
        slug,
        is_active,
        product_count
      )
    `).single());
  /* istanbul ignore next */
  cov_iefmi4l09().s[36]++;
  if (error) {
    /* istanbul ignore next */
    cov_iefmi4l09().b[8][0]++;
    cov_iefmi4l09().s[37]++;
    throw new Error(`Error actualizando categoría: ${error.message}`);
  } else
  /* istanbul ignore next */
  {
    cov_iefmi4l09().b[8][1]++;
  }
  cov_iefmi4l09().s[38]++;
  return updatedCategory;
}
async function deleteCategory(categoryId, userId) {
  /* istanbul ignore next */
  cov_iefmi4l09().f[6]++;
  const supabase =
  /* istanbul ignore next */
  (cov_iefmi4l09().s[39]++, await (0, _server1.createClient)());
  // Verificar que la categoría existe
  const category =
  /* istanbul ignore next */
  (cov_iefmi4l09().s[40]++, await getCategoryById(categoryId));
  /* istanbul ignore next */
  cov_iefmi4l09().s[41]++;
  if (!category) {
    /* istanbul ignore next */
    cov_iefmi4l09().b[9][0]++;
    cov_iefmi4l09().s[42]++;
    throw new Error('Categoría no encontrada');
  } else
  /* istanbul ignore next */
  {
    cov_iefmi4l09().b[9][1]++;
  }
  // Verificar que no tenga productos
  cov_iefmi4l09().s[43]++;
  if (category.product_count > 0) {
    /* istanbul ignore next */
    cov_iefmi4l09().b[10][0]++;
    cov_iefmi4l09().s[44]++;
    throw new Error('No se puede eliminar una categoría que tiene productos');
  } else
  /* istanbul ignore next */
  {
    cov_iefmi4l09().b[10][1]++;
  }
  // Verificar que no tenga subcategorías
  cov_iefmi4l09().s[45]++;
  if (
  /* istanbul ignore next */
  (cov_iefmi4l09().b[12][0]++, category.children) &&
  /* istanbul ignore next */
  (cov_iefmi4l09().b[12][1]++, category.children.length > 0)) {
    /* istanbul ignore next */
    cov_iefmi4l09().b[11][0]++;
    cov_iefmi4l09().s[46]++;
    throw new Error('No se puede eliminar una categoría que tiene subcategorías');
  } else
  /* istanbul ignore next */
  {
    cov_iefmi4l09().b[11][1]++;
  }
  const {
    error
  } =
  /* istanbul ignore next */
  (cov_iefmi4l09().s[47]++, await supabase.from('categories').delete().eq('id', categoryId));
  /* istanbul ignore next */
  cov_iefmi4l09().s[48]++;
  if (error) {
    /* istanbul ignore next */
    cov_iefmi4l09().b[13][0]++;
    cov_iefmi4l09().s[49]++;
    throw new Error(`Error eliminando categoría: ${error.message}`);
  } else
  /* istanbul ignore next */
  {
    cov_iefmi4l09().b[13][1]++;
  }
}
async function getCategoryStats(categoryId) {
  /* istanbul ignore next */
  cov_iefmi4l09().f[7]++;
  const supabase =
  /* istanbul ignore next */
  (cov_iefmi4l09().s[50]++, await (0, _server1.createClient)());
  // Obtener estadísticas de productos
  const {
    data: productStats
  } =
  /* istanbul ignore next */
  (cov_iefmi4l09().s[51]++, await supabase.from('products').select('is_active, price').eq('category_id', categoryId));
  // Obtener subcategorías
  const {
    data: subcategories
  } =
  /* istanbul ignore next */
  (cov_iefmi4l09().s[52]++, await supabase.from('categories').select('id').eq('parent_id', categoryId));
  // Calcular estadísticas
  const totalProducts =
  /* istanbul ignore next */
  (cov_iefmi4l09().s[53]++,
  /* istanbul ignore next */
  (cov_iefmi4l09().b[14][0]++, productStats?.length) ||
  /* istanbul ignore next */
  (cov_iefmi4l09().b[14][1]++, 0));
  const activeProducts =
  /* istanbul ignore next */
  (cov_iefmi4l09().s[54]++,
  /* istanbul ignore next */
  (cov_iefmi4l09().b[15][0]++, productStats?.filter(p => {
    /* istanbul ignore next */
    cov_iefmi4l09().f[8]++;
    cov_iefmi4l09().s[55]++;
    return p.is_active;
  }).length) ||
  /* istanbul ignore next */
  (cov_iefmi4l09().b[15][1]++, 0));
  const inactiveProducts =
  /* istanbul ignore next */
  (cov_iefmi4l09().s[56]++, totalProducts - activeProducts);
  const subcategoriesCount =
  /* istanbul ignore next */
  (cov_iefmi4l09().s[57]++,
  /* istanbul ignore next */
  (cov_iefmi4l09().b[16][0]++, subcategories?.length) ||
  /* istanbul ignore next */
  (cov_iefmi4l09().b[16][1]++, 0));
  const prices =
  /* istanbul ignore next */
  (cov_iefmi4l09().s[58]++,
  /* istanbul ignore next */
  (cov_iefmi4l09().b[17][0]++, productStats?.map(p => {
    /* istanbul ignore next */
    cov_iefmi4l09().f[9]++;
    cov_iefmi4l09().s[59]++;
    return p.price;
  }).filter(p => {
    /* istanbul ignore next */
    cov_iefmi4l09().f[10]++;
    cov_iefmi4l09().s[60]++;
    return p > 0;
  })) ||
  /* istanbul ignore next */
  (cov_iefmi4l09().b[17][1]++, []));
  const avgProductPrice =
  /* istanbul ignore next */
  (cov_iefmi4l09().s[61]++, prices.length > 0 ?
  /* istanbul ignore next */
  (cov_iefmi4l09().b[18][0]++, prices.reduce((a, b) => {
    /* istanbul ignore next */
    cov_iefmi4l09().f[11]++;
    cov_iefmi4l09().s[62]++;
    return a + b;
  }, 0) / prices.length) :
  /* istanbul ignore next */
  (cov_iefmi4l09().b[18][1]++, 0));
  // TODO: Calcular revenue real desde orders
  const totalRevenue =
  /* istanbul ignore next */
  (cov_iefmi4l09().s[63]++, 0);
  /* istanbul ignore next */
  cov_iefmi4l09().s[64]++;
  return {
    total_products: totalProducts,
    active_products: activeProducts,
    inactive_products: inactiveProducts,
    subcategories_count: subcategoriesCount,
    avg_product_price: avgProductPrice,
    total_revenue: totalRevenue
  };
}
async function checkCircularHierarchy(categoryId, parentId) {
  /* istanbul ignore next */
  cov_iefmi4l09().f[12]++;
  const supabase =
  /* istanbul ignore next */
  (cov_iefmi4l09().s[65]++, await (0, _server1.createClient)());
  // Si el parent_id es el mismo categoryId, es circular
  /* istanbul ignore next */
  cov_iefmi4l09().s[66]++;
  if (categoryId === parentId) {
    /* istanbul ignore next */
    cov_iefmi4l09().b[19][0]++;
    cov_iefmi4l09().s[67]++;
    return true;
  } else
  /* istanbul ignore next */
  {
    cov_iefmi4l09().b[19][1]++;
  }
  // Buscar hacia arriba en la jerarquía
  let currentParentId =
  /* istanbul ignore next */
  (cov_iefmi4l09().s[68]++, parentId);
  const visited =
  /* istanbul ignore next */
  (cov_iefmi4l09().s[69]++, new Set());
  /* istanbul ignore next */
  cov_iefmi4l09().s[70]++;
  while (
  /* istanbul ignore next */
  (cov_iefmi4l09().b[20][0]++, currentParentId) &&
  /* istanbul ignore next */
  (cov_iefmi4l09().b[20][1]++, !visited.has(currentParentId))) {
    /* istanbul ignore next */
    cov_iefmi4l09().s[71]++;
    visited.add(currentParentId);
    /* istanbul ignore next */
    cov_iefmi4l09().s[72]++;
    if (currentParentId === categoryId) {
      /* istanbul ignore next */
      cov_iefmi4l09().b[21][0]++;
      cov_iefmi4l09().s[73]++;
      return true; // Encontramos una referencia circular
    } else
    /* istanbul ignore next */
    {
      cov_iefmi4l09().b[21][1]++;
    }
    const {
      data: parent
    } =
    /* istanbul ignore next */
    (cov_iefmi4l09().s[74]++, await supabase.from('categories').select('parent_id').eq('id', currentParentId).single());
    /* istanbul ignore next */
    cov_iefmi4l09().s[75]++;
    currentParentId = parent?.parent_id;
  }
  /* istanbul ignore next */
  cov_iefmi4l09().s[76]++;
  return false;
}
async function logAuditAction(action, categoryId, userId, details) {
  /* istanbul ignore next */
  cov_iefmi4l09().f[13]++;
  cov_iefmi4l09().s[77]++;
  try {
    const supabase =
    /* istanbul ignore next */
    (cov_iefmi4l09().s[78]++, await (0, _server1.createClient)());
    /* istanbul ignore next */
    cov_iefmi4l09().s[79]++;
    await supabase.from('audit_logs').insert({
      table_name: 'categories',
      record_id: categoryId,
      action,
      user_id: userId,
      old_values:
      /* istanbul ignore next */
      (cov_iefmi4l09().b[22][0]++, details?.oldValues) ||
      /* istanbul ignore next */
      (cov_iefmi4l09().b[22][1]++, null),
      new_values:
      /* istanbul ignore next */
      (cov_iefmi4l09().b[23][0]++, details?.newValues) ||
      /* istanbul ignore next */
      (cov_iefmi4l09().b[23][1]++, details) ||
      /* istanbul ignore next */
      (cov_iefmi4l09().b[23][2]++, null),
      ip_address:
      /* istanbul ignore next */
      (cov_iefmi4l09().b[24][0]++, details?.ipAddress) ||
      /* istanbul ignore next */
      (cov_iefmi4l09().b[24][1]++, null),
      user_agent:
      /* istanbul ignore next */
      (cov_iefmi4l09().b[25][0]++, details?.userAgent) ||
      /* istanbul ignore next */
      (cov_iefmi4l09().b[25][1]++, null),
      created_at: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_iefmi4l09().s[80]++;
    _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.AUDIT, 'Error registrando auditoría', {
      error,
      action,
      categoryId
    });
  }
}
async function GET(request, {
  params
}) {
  /* istanbul ignore next */
  cov_iefmi4l09().f[14]++;
  const startTime =
  /* istanbul ignore next */
  (cov_iefmi4l09().s[81]++, Date.now());
  /* istanbul ignore next */
  cov_iefmi4l09().s[82]++;
  try {
    // Rate limiting
    const rateLimitResult =
    /* istanbul ignore next */
    (cov_iefmi4l09().s[83]++, await (0, _ratelimiter.checkRateLimit)(request, RATE_LIMIT_CONFIGS.admin, 'admin-categories-get'));
    /* istanbul ignore next */
    cov_iefmi4l09().s[84]++;
    if (!rateLimitResult.success) {
      /* istanbul ignore next */
      cov_iefmi4l09().b[26][0]++;
      const response =
      /* istanbul ignore next */
      (cov_iefmi4l09().s[85]++, _server.NextResponse.json({
        error: rateLimitResult.message
      }, {
        status: 429
      }));
      // Rate limit headers are handled internally
      /* istanbul ignore next */
      cov_iefmi4l09().s[86]++;
      return response;
    } else
    /* istanbul ignore next */
    {
      cov_iefmi4l09().b[26][1]++;
    }
    // Verificar autenticación de admin
    const authResult =
    /* istanbul ignore next */
    (cov_iefmi4l09().s[87]++, await (0, _adminauth.requireAdminAuth)(request, ['categories_read']));
    /* istanbul ignore next */
    cov_iefmi4l09().s[88]++;
    if (!authResult.success) {
      /* istanbul ignore next */
      cov_iefmi4l09().b[27][0]++;
      cov_iefmi4l09().s[89]++;
      return _server.NextResponse.json({
        error: authResult.error,
        code: authResult.code,
        enterprise: true,
        timestamp: new Date().toISOString()
      }, {
        status:
        /* istanbul ignore next */
        (cov_iefmi4l09().b[28][0]++, authResult.status) ||
        /* istanbul ignore next */
        (cov_iefmi4l09().b[28][1]++, 401)
      });
    } else
    /* istanbul ignore next */
    {
      cov_iefmi4l09().b[27][1]++;
    }
    const categoryId =
    /* istanbul ignore next */
    (cov_iefmi4l09().s[90]++, params.id);
    const url =
    /* istanbul ignore next */
    (cov_iefmi4l09().s[91]++, new URL(request.url));
    const includeStats =
    /* istanbul ignore next */
    (cov_iefmi4l09().s[92]++, url.searchParams.get('include_stats') === 'true');
    // Obtener categoría
    const category =
    /* istanbul ignore next */
    (cov_iefmi4l09().s[93]++, await getCategoryById(categoryId));
    /* istanbul ignore next */
    cov_iefmi4l09().s[94]++;
    if (!category) {
      /* istanbul ignore next */
      cov_iefmi4l09().b[29][0]++;
      const notFoundResponse =
      /* istanbul ignore next */
      (cov_iefmi4l09().s[95]++, {
        data: null,
        success: false,
        error: 'Categoría no encontrada'
      });
      /* istanbul ignore next */
      cov_iefmi4l09().s[96]++;
      return _server.NextResponse.json(notFoundResponse, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_iefmi4l09().b[29][1]++;
    }
    // Obtener estadísticas si se solicitan
    let stats;
    /* istanbul ignore next */
    cov_iefmi4l09().s[97]++;
    if (includeStats) {
      /* istanbul ignore next */
      cov_iefmi4l09().b[30][0]++;
      cov_iefmi4l09().s[98]++;
      stats = await getCategoryStats(categoryId);
    } else
    /* istanbul ignore next */
    {
      cov_iefmi4l09().b[30][1]++;
    }
    // Registrar métricas
    cov_iefmi4l09().s[99]++;
    _metrics.metricsCollector.recordApiCall({
      endpoint: '/api/admin/categories/[id]',
      method: 'GET',
      statusCode: 200,
      responseTime: Date.now() - startTime,
      userId: authResult.user?.id
    });
    const response =
    /* istanbul ignore next */
    (cov_iefmi4l09().s[100]++, {
      data: {
        ...category,
        ...(
        /* istanbul ignore next */
        (cov_iefmi4l09().b[31][0]++, stats) &&
        /* istanbul ignore next */
        (cov_iefmi4l09().b[31][1]++, {
          stats
        }))
      },
      success: true,
      message: 'Categoría obtenida exitosamente'
    });
    const nextResponse =
    /* istanbul ignore next */
    (cov_iefmi4l09().s[101]++, _server.NextResponse.json(response));
    // Rate limit headers are handled internally
    /* istanbul ignore next */
    cov_iefmi4l09().s[102]++;
    return nextResponse;
  } catch (error) {
    /* istanbul ignore next */
    cov_iefmi4l09().s[103]++;
    _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.API, 'Error en GET /api/admin/categories/[id]', {
      error,
      categoryId: params.id
    });
    // Registrar métricas de error
    /* istanbul ignore next */
    cov_iefmi4l09().s[104]++;
    _metrics.metricsCollector.recordApiCall({
      endpoint: '/api/admin/categories/[id]',
      method: 'GET',
      statusCode: 500,
      responseTime: Date.now() - startTime,
      error:
      /* istanbul ignore next */
      (cov_iefmi4l09().b[32][0]++, error.message) ||
      /* istanbul ignore next */
      (cov_iefmi4l09().b[32][1]++, 'Unknown error')
    });
    const errorResponse =
    /* istanbul ignore next */
    (cov_iefmi4l09().s[105]++, {
      data: null,
      success: false,
      error:
      /* istanbul ignore next */
      (cov_iefmi4l09().b[33][0]++, error.message) ||
      /* istanbul ignore next */
      (cov_iefmi4l09().b[33][1]++, 'Error interno del servidor')
    });
    /* istanbul ignore next */
    cov_iefmi4l09().s[106]++;
    return _server.NextResponse.json(errorResponse, {
      status: 500
    });
  }
}
async function PUT(request, {
  params
}) {
  /* istanbul ignore next */
  cov_iefmi4l09().f[15]++;
  const startTime =
  /* istanbul ignore next */
  (cov_iefmi4l09().s[107]++, Date.now());
  /* istanbul ignore next */
  cov_iefmi4l09().s[108]++;
  try {
    // Rate limiting
    const rateLimitResult =
    /* istanbul ignore next */
    (cov_iefmi4l09().s[109]++, await (0, _ratelimiter.checkRateLimit)(request, {
      windowMs: RATE_LIMIT_CONFIGS.admin.windowMs,
      maxRequests: Math.floor(RATE_LIMIT_CONFIGS.admin.maxRequests / 2),
      message: 'Demasiadas actualizaciones de categorías'
    }, 'admin-categories-update'));
    /* istanbul ignore next */
    cov_iefmi4l09().s[110]++;
    if (!rateLimitResult.success) {
      /* istanbul ignore next */
      cov_iefmi4l09().b[34][0]++;
      const response =
      /* istanbul ignore next */
      (cov_iefmi4l09().s[111]++, _server.NextResponse.json({
        error: rateLimitResult.message
      }, {
        status: 429
      }));
      // Rate limit headers are handled internally
      /* istanbul ignore next */
      cov_iefmi4l09().s[112]++;
      return response;
    } else
    /* istanbul ignore next */
    {
      cov_iefmi4l09().b[34][1]++;
    }
    // Verificar autenticación de admin
    const authResult =
    /* istanbul ignore next */
    (cov_iefmi4l09().s[113]++, await (0, _adminauth.requireAdminAuth)(request, ['categories_update']));
    /* istanbul ignore next */
    cov_iefmi4l09().s[114]++;
    if (!authResult.success) {
      /* istanbul ignore next */
      cov_iefmi4l09().b[35][0]++;
      cov_iefmi4l09().s[115]++;
      return _server.NextResponse.json({
        error: authResult.error,
        code: authResult.code,
        enterprise: true,
        timestamp: new Date().toISOString()
      }, {
        status:
        /* istanbul ignore next */
        (cov_iefmi4l09().b[36][0]++, authResult.status) ||
        /* istanbul ignore next */
        (cov_iefmi4l09().b[36][1]++, 401)
      });
    } else
    /* istanbul ignore next */
    {
      cov_iefmi4l09().b[35][1]++;
    }
    const categoryId =
    /* istanbul ignore next */
    (cov_iefmi4l09().s[116]++, params.id);
    const body =
    /* istanbul ignore next */
    (cov_iefmi4l09().s[117]++, await request.json());
    // Validar datos de entrada
    const updateData =
    /* istanbul ignore next */
    (cov_iefmi4l09().s[118]++, UpdateCategorySchema.parse(body));
    // Obtener categoría actual para auditoría
    const oldCategory =
    /* istanbul ignore next */
    (cov_iefmi4l09().s[119]++, await getCategoryById(categoryId));
    /* istanbul ignore next */
    cov_iefmi4l09().s[120]++;
    if (!oldCategory) {
      /* istanbul ignore next */
      cov_iefmi4l09().b[37][0]++;
      const notFoundResponse =
      /* istanbul ignore next */
      (cov_iefmi4l09().s[121]++, {
        data: null,
        success: false,
        error: 'Categoría no encontrada'
      });
      /* istanbul ignore next */
      cov_iefmi4l09().s[122]++;
      return _server.NextResponse.json(notFoundResponse, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_iefmi4l09().b[37][1]++;
    }
    // Actualizar categoría
    const updatedCategory =
    /* istanbul ignore next */
    (cov_iefmi4l09().s[123]++, await updateCategory(categoryId, updateData, authResult.user?.id));
    // Registrar auditoría
    /* istanbul ignore next */
    cov_iefmi4l09().s[124]++;
    await logAuditAction('update', categoryId, authResult.user?.id, {
      oldValues: oldCategory,
      newValues: updatedCategory,
      ipAddress:
      /* istanbul ignore next */
      (cov_iefmi4l09().b[38][0]++, request.headers.get('x-forwarded-for')) ||
      /* istanbul ignore next */
      (cov_iefmi4l09().b[38][1]++, request.headers.get('x-real-ip')),
      userAgent: request.headers.get('user-agent')
    });
    // Registrar métricas
    /* istanbul ignore next */
    cov_iefmi4l09().s[125]++;
    _metrics.metricsCollector.recordApiCall({
      endpoint: '/api/admin/categories/[id]',
      method: 'PUT',
      statusCode: 200,
      responseTime: Date.now() - startTime,
      userId: authResult.user?.id
    });
    const response =
    /* istanbul ignore next */
    (cov_iefmi4l09().s[126]++, {
      data: updatedCategory,
      success: true,
      message: 'Categoría actualizada exitosamente'
    });
    const nextResponse =
    /* istanbul ignore next */
    (cov_iefmi4l09().s[127]++, _server.NextResponse.json(response));
    // Rate limit headers are handled internally
    /* istanbul ignore next */
    cov_iefmi4l09().s[128]++;
    return nextResponse;
  } catch (error) {
    /* istanbul ignore next */
    cov_iefmi4l09().s[129]++;
    _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.API, 'Error en PUT /api/admin/categories/[id]', {
      error,
      categoryId: params.id
    });
    // Registrar métricas de error
    /* istanbul ignore next */
    cov_iefmi4l09().s[130]++;
    _metrics.metricsCollector.recordApiCall({
      endpoint: '/api/admin/categories/[id]',
      method: 'PUT',
      statusCode: 500,
      responseTime: Date.now() - startTime,
      error:
      /* istanbul ignore next */
      (cov_iefmi4l09().b[39][0]++, error.message) ||
      /* istanbul ignore next */
      (cov_iefmi4l09().b[39][1]++, 'Unknown error')
    });
    const errorResponse =
    /* istanbul ignore next */
    (cov_iefmi4l09().s[131]++, {
      data: null,
      success: false,
      error:
      /* istanbul ignore next */
      (cov_iefmi4l09().b[40][0]++, error.message) ||
      /* istanbul ignore next */
      (cov_iefmi4l09().b[40][1]++, 'Error interno del servidor')
    });
    /* istanbul ignore next */
    cov_iefmi4l09().s[132]++;
    return _server.NextResponse.json(errorResponse, {
      status: 500
    });
  }
}
async function DELETE(request, {
  params
}) {
  /* istanbul ignore next */
  cov_iefmi4l09().f[16]++;
  const startTime =
  /* istanbul ignore next */
  (cov_iefmi4l09().s[133]++, Date.now());
  /* istanbul ignore next */
  cov_iefmi4l09().s[134]++;
  try {
    // Rate limiting
    const rateLimitResult =
    /* istanbul ignore next */
    (cov_iefmi4l09().s[135]++, await (0, _ratelimiter.checkRateLimit)(request, {
      windowMs: RATE_LIMIT_CONFIGS.admin.windowMs,
      maxRequests: Math.floor(RATE_LIMIT_CONFIGS.admin.maxRequests / 4),
      message: 'Demasiadas eliminaciones de categorías'
    }, 'admin-categories-delete'));
    /* istanbul ignore next */
    cov_iefmi4l09().s[136]++;
    if (!rateLimitResult.success) {
      /* istanbul ignore next */
      cov_iefmi4l09().b[41][0]++;
      const response =
      /* istanbul ignore next */
      (cov_iefmi4l09().s[137]++, _server.NextResponse.json({
        error: rateLimitResult.message
      }, {
        status: 429
      }));
      // Rate limit headers are handled internally
      /* istanbul ignore next */
      cov_iefmi4l09().s[138]++;
      return response;
    } else
    /* istanbul ignore next */
    {
      cov_iefmi4l09().b[41][1]++;
    }
    // Verificar autenticación de admin
    const authResult =
    /* istanbul ignore next */
    (cov_iefmi4l09().s[139]++, await (0, _adminauth.requireAdminAuth)(request, ['categories_delete']));
    /* istanbul ignore next */
    cov_iefmi4l09().s[140]++;
    if (!authResult.success) {
      /* istanbul ignore next */
      cov_iefmi4l09().b[42][0]++;
      cov_iefmi4l09().s[141]++;
      return _server.NextResponse.json({
        error: authResult.error,
        code: authResult.code,
        enterprise: true,
        timestamp: new Date().toISOString()
      }, {
        status:
        /* istanbul ignore next */
        (cov_iefmi4l09().b[43][0]++, authResult.status) ||
        /* istanbul ignore next */
        (cov_iefmi4l09().b[43][1]++, 401)
      });
    } else
    /* istanbul ignore next */
    {
      cov_iefmi4l09().b[42][1]++;
    }
    const categoryId =
    /* istanbul ignore next */
    (cov_iefmi4l09().s[142]++, params.id);
    // Obtener categoría para auditoría
    const category =
    /* istanbul ignore next */
    (cov_iefmi4l09().s[143]++, await getCategoryById(categoryId));
    /* istanbul ignore next */
    cov_iefmi4l09().s[144]++;
    if (!category) {
      /* istanbul ignore next */
      cov_iefmi4l09().b[44][0]++;
      const notFoundResponse =
      /* istanbul ignore next */
      (cov_iefmi4l09().s[145]++, {
        data: null,
        success: false,
        error: 'Categoría no encontrada'
      });
      /* istanbul ignore next */
      cov_iefmi4l09().s[146]++;
      return _server.NextResponse.json(notFoundResponse, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_iefmi4l09().b[44][1]++;
    }
    // Eliminar categoría
    cov_iefmi4l09().s[147]++;
    await deleteCategory(categoryId, authResult.user?.id);
    // Registrar auditoría
    /* istanbul ignore next */
    cov_iefmi4l09().s[148]++;
    await logAuditAction('delete', categoryId, authResult.user?.id, {
      oldValues: category,
      ipAddress:
      /* istanbul ignore next */
      (cov_iefmi4l09().b[45][0]++, request.headers.get('x-forwarded-for')) ||
      /* istanbul ignore next */
      (cov_iefmi4l09().b[45][1]++, request.headers.get('x-real-ip')),
      userAgent: request.headers.get('user-agent')
    });
    // Registrar métricas
    /* istanbul ignore next */
    cov_iefmi4l09().s[149]++;
    _metrics.metricsCollector.recordApiCall({
      endpoint: '/api/admin/categories/[id]',
      method: 'DELETE',
      statusCode: 200,
      responseTime: Date.now() - startTime,
      userId: authResult.user?.id
    });
    const response =
    /* istanbul ignore next */
    (cov_iefmi4l09().s[150]++, {
      data: null,
      success: true,
      message: 'Categoría eliminada exitosamente'
    });
    const nextResponse =
    /* istanbul ignore next */
    (cov_iefmi4l09().s[151]++, _server.NextResponse.json(response));
    // Rate limit headers are handled internally
    /* istanbul ignore next */
    cov_iefmi4l09().s[152]++;
    return nextResponse;
  } catch (error) {
    /* istanbul ignore next */
    cov_iefmi4l09().s[153]++;
    _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.API, 'Error en DELETE /api/admin/categories/[id]', {
      error,
      categoryId: params.id
    });
    // Registrar métricas de error
    /* istanbul ignore next */
    cov_iefmi4l09().s[154]++;
    _metrics.metricsCollector.recordApiCall({
      endpoint: '/api/admin/categories/[id]',
      method: 'DELETE',
      statusCode: 500,
      responseTime: Date.now() - startTime,
      error:
      /* istanbul ignore next */
      (cov_iefmi4l09().b[46][0]++, error.message) ||
      /* istanbul ignore next */
      (cov_iefmi4l09().b[46][1]++, 'Unknown error')
    });
    const errorResponse =
    /* istanbul ignore next */
    (cov_iefmi4l09().s[155]++, {
      data: null,
      success: false,
      error:
      /* istanbul ignore next */
      (cov_iefmi4l09().b[47][0]++, error.message) ||
      /* istanbul ignore next */
      (cov_iefmi4l09().b[47][1]++, 'Error interno del servidor')
    });
    /* istanbul ignore next */
    cov_iefmi4l09().s[156]++;
    return _server.NextResponse.json(errorResponse, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,