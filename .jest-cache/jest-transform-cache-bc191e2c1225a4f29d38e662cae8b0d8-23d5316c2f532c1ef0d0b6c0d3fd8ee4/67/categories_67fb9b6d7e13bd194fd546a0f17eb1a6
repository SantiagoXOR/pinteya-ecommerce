c8822f0e99a77782122ef64d24e34e67
/**
 * Types and interfaces for Categories Filter System
 * Pinteya E-commerce - Enterprise-ready TypeScript definitions
 */ // ===================================
// CORE CATEGORY TYPES
// ===================================
/**
 * Base category interface
 */"use strict";

/* istanbul ignore next */
function cov_1wii5bpas7() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\types\\categories.ts";
  var hash = "2b024dec9170c0438d06884ec5ac29097f0ebc93";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\types\\categories.ts",
    statementMap: {
      "0": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 12,
          column: 3
        }
      },
      "1": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 17,
          column: 7
        }
      },
      "2": {
        start: {
          line: 14,
          column: 24
        },
        end: {
          line: 17,
          column: 7
        }
      },
      "3": {
        start: {
          line: 19,
          column: 0
        },
        end: {
          line: 29,
          column: 3
        }
      },
      "4": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 27
        }
      },
      "5": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 41
        }
      },
      "6": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 29
        }
      },
      "7": {
        start: {
          line: 30,
          column: 34
        },
        end: {
          line: 38,
          column: 1
        }
      },
      "8": {
        start: {
          line: 39,
          column: 22
        },
        end: {
          line: 48,
          column: 1
        }
      },
      "9": {
        start: {
          line: 49,
          column: 20
        },
        end: {
          line: 55,
          column: 1
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 13,
            column: 9
          },
          end: {
            line: 13,
            column: 16
          }
        },
        loc: {
          start: {
            line: 13,
            column: 30
          },
          end: {
            line: 18,
            column: 1
          }
        },
        line: 13
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        loc: {
          start: {
            line: 20,
            column: 23
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 20
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        loc: {
          start: {
            line: 23,
            column: 37
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 23
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        loc: {
          start: {
            line: 26,
            column: 25
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 26
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {},
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\types\\categories.ts"],
      sourcesContent: ["/**\r\n * Types and interfaces for Categories Filter System\r\n * Pinteya E-commerce - Enterprise-ready TypeScript definitions\r\n */\r\n\r\n// ===================================\r\n// CORE CATEGORY TYPES\r\n// ===================================\r\n\r\n/**\r\n * Base category interface\r\n */\r\nexport interface Category {\r\n  /** Unique identifier for the category */\r\n  id: string;\r\n  /** Display name of the category */\r\n  name: string;\r\n  /** Icon path or URL for the category */\r\n  icon: string;\r\n  /** URL-friendly slug for the category */\r\n  slug?: string;\r\n  /** Number of products in this category */\r\n  count?: number;\r\n  /** Category description for accessibility */\r\n  description?: string;\r\n  /** Whether the category is currently available */\r\n  isAvailable?: boolean;\r\n}\r\n\r\n/**\r\n * Extended category with metadata\r\n */\r\nexport interface CategoryWithMetadata extends Category {\r\n  /** Last updated timestamp */\r\n  updatedAt?: Date;\r\n  /** Category priority for sorting */\r\n  priority?: number;\r\n  /** Parent category ID for nested categories */\r\n  parentId?: string;\r\n  /** Child categories */\r\n  children?: Category[];\r\n}\r\n\r\n// ===================================\r\n// COMPONENT PROPS INTERFACES\r\n// ===================================\r\n\r\n/**\r\n * Props for the main Categories component\r\n */\r\nexport interface CategoriesProps {\r\n  /** Array of categories to display */\r\n  categories?: Category[];\r\n  /** Currently selected category IDs */\r\n  selectedCategories?: string[];\r\n  /** Callback when category selection changes */\r\n  onCategoryChange?: (event: CategoryChangeEvent) => void;\r\n  /** Visual variant of the component */\r\n  variant?: 'default' | 'compact' | 'minimal';\r\n  /** Size of the category pills */\r\n  size?: 'sm' | 'md' | 'lg';\r\n  /** Maximum number of categories to display */\r\n  maxCategories?: number;\r\n  /** Whether to show category counts */\r\n  showCounts?: boolean;\r\n  /** Whether the component is disabled */\r\n  disabled?: boolean;\r\n  /** Loading state */\r\n  loading?: boolean;\r\n  /** Error state */\r\n  error?: string | null;\r\n  /** Custom CSS classes */\r\n  className?: string;\r\n  /** Test ID for testing */\r\n  testId?: string;\r\n}\r\n\r\n/**\r\n * Props for individual CategoryPill component\r\n */\r\nexport interface CategoryPillProps {\r\n  /** Category data */\r\n  category: Category;\r\n  /** Whether this category is selected */\r\n  isSelected: boolean;\r\n  /** Click handler */\r\n  onClick: (categoryId: string) => void;\r\n  /** Key handler for accessibility */\r\n  onKeyDown?: (event: React.KeyboardEvent, categoryId: string) => void;\r\n  /** Size variant */\r\n  size?: 'sm' | 'md' | 'lg';\r\n  /** Whether the pill is disabled */\r\n  disabled?: boolean;\r\n  /** Custom CSS classes */\r\n  className?: string;\r\n  /** Test ID for testing */\r\n  testId?: string;\r\n}\r\n\r\n// ===================================\r\n// HOOK INTERFACES\r\n// ===================================\r\n\r\n/**\r\n * Return type for useCategoryFilter hook\r\n */\r\nexport interface UseCategoryFilterReturn {\r\n  /** Currently selected categories */\r\n  selectedCategories: string[];\r\n  /** Toggle a category selection */\r\n  toggleCategory: (categoryId: string) => void;\r\n  /** Clear all selections */\r\n  clearAll: () => void;\r\n  /** Select all categories */\r\n  selectAll: (categoryIds: string[]) => void;\r\n  /** Check if a category is selected */\r\n  isSelected: (categoryId: string) => boolean;\r\n  /** Get count of selected categories */\r\n  selectedCount: number;\r\n}\r\n\r\n/**\r\n * Return type for useCategoryNavigation hook\r\n */\r\nexport interface UseCategoryNavigationReturn {\r\n  /** Navigate to filtered view */\r\n  navigateToFiltered: (categories: string[]) => void;\r\n  /** Navigate to home (clear filters) */\r\n  navigateToHome: () => void;\r\n  /** Get current URL with categories */\r\n  getCurrentUrl: () => string;\r\n  /** Check if navigation is in progress */\r\n  isNavigating: boolean;\r\n}\r\n\r\n/**\r\n * Return type for useCategoryData hook\r\n */\r\nexport interface UseCategoryDataReturn {\r\n  /** Categories data */\r\n  categories: Category[];\r\n  /** Loading state */\r\n  loading: boolean;\r\n  /** Error state */\r\n  error: string | null;\r\n  /** Refresh categories */\r\n  refresh: () => Promise<void>;\r\n  /** Get category by ID */\r\n  getCategoryById: (id: string) => Category | undefined;\r\n}\r\n\r\n// ===================================\r\n// EVENT INTERFACES\r\n// ===================================\r\n\r\n/**\r\n * Category change event data\r\n */\r\nexport interface CategoryChangeEvent {\r\n  /** Type of change */\r\n  type: 'select' | 'deselect' | 'clear' | 'selectAll';\r\n  /** Category ID that changed */\r\n  categoryId?: string;\r\n  /** All selected categories after change */\r\n  selectedCategories: string[];\r\n  /** Previous selected categories */\r\n  previousCategories: string[];\r\n  /** Timestamp of the event */\r\n  timestamp: Date;\r\n}\r\n\r\n/**\r\n * Category interaction event for analytics\r\n */\r\nexport interface CategoryInteractionEvent {\r\n  /** Type of interaction */\r\n  action: 'click' | 'keydown' | 'focus' | 'blur';\r\n  /** Category that was interacted with */\r\n  categoryId: string;\r\n  /** Method of interaction */\r\n  method: 'mouse' | 'keyboard' | 'touch';\r\n  /** Additional metadata */\r\n  metadata?: Record<string, any>;\r\n}\r\n\r\n// ===================================\r\n// CONFIGURATION INTERFACES\r\n// ===================================\r\n\r\n/**\r\n * Configuration for Categories component\r\n */\r\nexport interface CategoriesConfig {\r\n  /** Default variant */\r\n  defaultVariant: CategoriesProps['variant'];\r\n  /** Default size */\r\n  defaultSize: CategoriesProps['size'];\r\n  /** Maximum categories to show */\r\n  maxCategories: number;\r\n  /** Whether to enable analytics */\r\n  enableAnalytics: boolean;\r\n  /** Whether to enable keyboard navigation */\r\n  enableKeyboardNavigation: boolean;\r\n  /** Animation duration in ms */\r\n  animationDuration: number;\r\n  /** Debounce delay for URL updates */\r\n  urlUpdateDelay: number;\r\n}\r\n\r\n// ===================================\r\n// UTILITY TYPES\r\n// ===================================\r\n\r\n/**\r\n * Category ID type for type safety\r\n */\r\nexport type CategoryId = string;\r\n\r\n/**\r\n * Category selection state\r\n */\r\nexport type CategorySelectionState = Record<CategoryId, boolean>;\r\n\r\n/**\r\n * Category filter state for URL\r\n */\r\nexport type CategoryFilterState = {\r\n  categories: CategoryId[];\r\n  timestamp: number;\r\n};\r\n\r\n// ===================================\r\n// CONSTANTS\r\n// ===================================\r\n\r\n/**\r\n * Default categories configuration\r\n */\r\nexport const DEFAULT_CATEGORIES_CONFIG: CategoriesConfig = {\r\n  defaultVariant: 'default',\r\n  defaultSize: 'md',\r\n  maxCategories: 20,\r\n  enableAnalytics: true,\r\n  enableKeyboardNavigation: true,\r\n  animationDuration: 200,\r\n  urlUpdateDelay: 300,\r\n};\r\n\r\n/**\r\n * Keyboard navigation keys\r\n */\r\nexport const KEYBOARD_KEYS = {\r\n  ENTER: 'Enter',\r\n  SPACE: ' ',\r\n  ARROW_LEFT: 'ArrowLeft',\r\n  ARROW_RIGHT: 'ArrowRight',\r\n  ARROW_UP: 'ArrowUp',\r\n  ARROW_DOWN: 'ArrowDown',\r\n  TAB: 'Tab',\r\n  ESCAPE: 'Escape',\r\n} as const;\r\n\r\n/**\r\n * ARIA labels and descriptions\r\n */\r\nexport const ARIA_LABELS = {\r\n  CATEGORY_FILTER: 'Filtrar por categor\xEDa',\r\n  CATEGORY_SELECTED: 'Categor\xEDa seleccionada',\r\n  CATEGORY_NOT_SELECTED: 'Categor\xEDa no seleccionada',\r\n  CLEAR_FILTERS: 'Limpiar todos los filtros',\r\n  FILTER_GROUP: 'Grupo de filtros de categor\xEDas',\r\n} as const;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["ARIA_LABELS", "DEFAULT_CATEGORIES_CONFIG", "KEYBOARD_KEYS", "defaultVariant", "defaultSize", "maxCategories", "enableAnalytics", "enableKeyboardNavigation", "animationDuration", "urlUpdateDelay", "ENTER", "SPACE", "ARROW_LEFT", "ARROW_RIGHT", "ARROW_UP", "ARROW_DOWN", "TAB", "ESCAPE", "CATEGORY_FILTER", "CATEGORY_SELECTED", "CATEGORY_NOT_SELECTED", "CLEAR_FILTERS", "FILTER_GROUP"],
      mappings: "AAAA;;;CAGC,GAED,sCAAsC;AACtC,sBAAsB;AACtB,sCAAsC;AAEtC;;CAEC;;;;;;;;;;;QA8PYA;eAAAA;;QA3BAC;eAAAA;;QAaAC;eAAAA;;;AAbN,MAAMD,4BAA8C;IACzDE,gBAAgB;IAChBC,aAAa;IACbC,eAAe;IACfC,iBAAiB;IACjBC,0BAA0B;IAC1BC,mBAAmB;IACnBC,gBAAgB;AAClB;AAKO,MAAMP,gBAAgB;IAC3BQ,OAAO;IACPC,OAAO;IACPC,YAAY;IACZC,aAAa;IACbC,UAAU;IACVC,YAAY;IACZC,KAAK;IACLC,QAAQ;AACV;AAKO,MAAMjB,cAAc;IACzBkB,iBAAiB;IACjBC,mBAAmB;IACnBC,uBAAuB;IACvBC,eAAe;IACfC,cAAc;AAChB"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2b024dec9170c0438d06884ec5ac29097f0ebc93"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1wii5bpas7 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1wii5bpas7();
cov_1wii5bpas7().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1wii5bpas7().f[0]++;
  cov_1wii5bpas7().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1wii5bpas7().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1wii5bpas7().s[3]++;
_export(exports, {
  get ARIA_LABELS() {
    /* istanbul ignore next */
    cov_1wii5bpas7().f[1]++;
    cov_1wii5bpas7().s[4]++;
    return ARIA_LABELS;
  },
  get DEFAULT_CATEGORIES_CONFIG() {
    /* istanbul ignore next */
    cov_1wii5bpas7().f[2]++;
    cov_1wii5bpas7().s[5]++;
    return DEFAULT_CATEGORIES_CONFIG;
  },
  get KEYBOARD_KEYS() {
    /* istanbul ignore next */
    cov_1wii5bpas7().f[3]++;
    cov_1wii5bpas7().s[6]++;
    return KEYBOARD_KEYS;
  }
});
const DEFAULT_CATEGORIES_CONFIG =
/* istanbul ignore next */
(cov_1wii5bpas7().s[7]++, {
  defaultVariant: 'default',
  defaultSize: 'md',
  maxCategories: 20,
  enableAnalytics: true,
  enableKeyboardNavigation: true,
  animationDuration: 200,
  urlUpdateDelay: 300
});
const KEYBOARD_KEYS =
/* istanbul ignore next */
(cov_1wii5bpas7().s[8]++, {
  ENTER: 'Enter',
  SPACE: ' ',
  ARROW_LEFT: 'ArrowLeft',
  ARROW_RIGHT: 'ArrowRight',
  ARROW_UP: 'ArrowUp',
  ARROW_DOWN: 'ArrowDown',
  TAB: 'Tab',
  ESCAPE: 'Escape'
});
const ARIA_LABELS =
/* istanbul ignore next */
(cov_1wii5bpas7().s[9]++, {
  CATEGORY_FILTER: 'Filtrar por categoría',
  CATEGORY_SELECTED: 'Categoría seleccionada',
  CATEGORY_NOT_SELECTED: 'Categoría no seleccionada',
  CLEAR_FILTERS: 'Limpiar todos los filtros',
  FILTER_GROUP: 'Grupo de filtros de categorías'
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,