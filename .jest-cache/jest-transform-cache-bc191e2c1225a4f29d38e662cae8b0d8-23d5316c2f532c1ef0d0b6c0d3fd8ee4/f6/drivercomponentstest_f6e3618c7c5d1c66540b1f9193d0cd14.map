{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\__tests__\\driver\\driver-components.test.tsx"],"sourcesContent":["interface MockSession {\r\n  data: {\r\n    user: { email: string; name: string };\r\n  };\r\n  status: 'authenticated' | 'loading' | 'unauthenticated';\r\n}\r\n\r\ninterface MockRouter {\r\n  push: jest.MockedFunction<(url: string) => void>;\r\n  replace: jest.MockedFunction<(url: string) => void>;\r\n  back: jest.MockedFunction<() => void>;\r\n}\r\n\r\n/**\r\n * Tests unitarios para los componentes del sistema de drivers\r\n * Verifica la funcionalidad de todos los componentes React\r\n */\r\n\r\nimport { describe, it, expect, beforeEach, jest } from '@jest/globals';\r\nimport { render, screen, fireEvent, waitFor } from '@testing-library/react';\r\nimport { useSession } from 'next-auth/react';\r\nimport { useRouter } from 'next/navigation';\r\n\r\n// Mock de NextAuth\r\njest.mock('next-auth/react');\r\n\r\n// Mock de Next.js router\r\njest.mock('next/navigation', () => ({\r\n  useRouter: jest.fn(),\r\n  useParams: jest.fn(() => ({ id: 'route-1' })),\r\n  usePathname: jest.fn(() => '/driver/dashboard')\r\n}));\r\n\r\n// Mock del contexto de drivers\r\njest.mock('@/contexts/DriverContext', () => ({\r\n  useDriver: jest.fn(),\r\n  DriverProvider: ({ children }: { children: React.ReactNode }) => <div>{children}</div>\r\n}));\r\n\r\n// Mock de Google Maps\r\njest.mock('@vis.gl/react-google-maps', () => ({\r\n  APIProvider: ({ children }: { children: React.ReactNode }) => <div data-testid=\"api-provider\">{children}</div>,\r\n  Map: ({ children }: { children: React.ReactNode }) => <div data-testid=\"google-map\">{children}</div>,\r\n  Marker: () => <div data-testid=\"marker\" />,\r\n  DirectionsRenderer: () => <div data-testid=\"directions-renderer\" />\r\n}));\r\n\r\n// Importar componentes a testear\r\nimport { DriverNavigation } from '@/components/driver/DriverNavigation';\r\nimport { DeliveryCard } from '@/components/driver/DeliveryCard';\r\nimport { NavigationInstructions } from '@/components/driver/NavigationInstructions';\r\nimport DriverDashboardPage from '@/app/driver/dashboard/page';\r\n\r\ndescribe('Driver Components Unit Tests', () => {\r\n  const mockUseSession = useSession as jest.MockedFunction<typeof useSession>;\r\n  const mockUseRouter = useRouter as jest.MockedFunction<typeof useRouter>;\r\n  const mockUseDriver = require('@/contexts/DriverContext').useDriver;\r\n\r\n  const mockDriverState = {\r\n    driver: {\r\n      id: 'driver-1',\r\n      name: 'Carlos Rodríguez',\r\n      email: 'carlos@pinteya.com',\r\n      vehicle_type: 'Van',\r\n      license_plate: 'ABC123',\r\n      status: 'available'\r\n    },\r\n    currentRoute: null,\r\n    assignedRoutes: [],\r\n    currentLocation: { lat: -34.6037, lng: -58.3816 },\r\n    isTracking: false,\r\n    isOnline: true,\r\n    notifications: [],\r\n    loading: false,\r\n    error: null\r\n  };\r\n\r\n  const mockDriverActions = {\r\n    startLocationTracking: jest.fn(),\r\n    stopLocationTracking: jest.fn(),\r\n    updateDriverLocation: jest.fn(),\r\n    startRoute: jest.fn(),\r\n    completeRoute: jest.fn(),\r\n    completeDelivery: jest.fn(),\r\n    goOnline: jest.fn(),\r\n    goOffline: jest.fn()\r\n  };\r\n\r\n  beforeEach(() => {\r\n    jest.clearAllMocks();\r\n    \r\n    mockUseSession.mockReturnValue({\r\n      data: {\r\n        user: { email: 'carlos@pinteya.com', name: 'Carlos Rodríguez' }\r\n      },\r\n      status: 'authenticated'\r\n    } as MockSession);\r\n\r\n    mockUseRouter.mockReturnValue({\r\n      push: jest.fn(),\r\n      replace: jest.fn(),\r\n      back: jest.fn()\r\n    } as MockRouter);\r\n\r\n    mockUseDriver.mockReturnValue({\r\n      state: mockDriverState,\r\n      ...mockDriverActions\r\n    });\r\n  });\r\n\r\n  describe('DriverNavigation Component', () => {\r\n    it('should render navigation items correctly', () => {\r\n      render(<DriverNavigation />);\r\n\r\n      expect(screen.getByText('Inicio')).toBeInTheDocument();\r\n      expect(screen.getByText('Rutas')).toBeInTheDocument();\r\n      expect(screen.getByText('Entregas')).toBeInTheDocument();\r\n      expect(screen.getByText('Perfil')).toBeInTheDocument();\r\n    });\r\n\r\n    it('should show driver name and online status', () => {\r\n      render(<DriverNavigation />);\r\n\r\n      expect(screen.getByText('Carlos Rodríguez')).toBeInTheDocument();\r\n      expect(screen.getByText('En línea')).toBeInTheDocument();\r\n    });\r\n\r\n    it('should show offline status when driver is offline', () => {\r\n      mockUseDriver.mockReturnValue({\r\n        state: { ...mockDriverState, isOnline: false },\r\n        ...mockDriverActions\r\n      });\r\n\r\n      render(<DriverNavigation />);\r\n\r\n      expect(screen.getByText('Desconectado')).toBeInTheDocument();\r\n    });\r\n\r\n    it('should show active route indicator', () => {\r\n      const activeRoute = {\r\n        id: 'route-1',\r\n        name: 'Ruta Centro',\r\n        status: 'active' as const,\r\n        shipments: [],\r\n        waypoints: [],\r\n        total_distance: 10,\r\n        estimated_time: 60,\r\n        optimization_score: 85\r\n      };\r\n\r\n      mockUseDriver.mockReturnValue({\r\n        state: { ...mockDriverState, currentRoute: activeRoute },\r\n        ...mockDriverActions\r\n      });\r\n\r\n      render(<DriverNavigation />);\r\n\r\n      expect(screen.getByText('Ruta Activa')).toBeInTheDocument();\r\n    });\r\n  });\r\n\r\n  describe('DeliveryCard Component', () => {\r\n    const mockDelivery = {\r\n      id: 'delivery-1',\r\n      tracking_number: 'TRK-001',\r\n      customer_name: 'Juan Pérez',\r\n      customer_phone: '+54 11 1234-5678',\r\n      destination: {\r\n        address: 'Av. Corrientes 1234',\r\n        city: 'Buenos Aires',\r\n        postal_code: '1043',\r\n        coordinates: { lat: -34.6037, lng: -58.3816 },\r\n        notes: 'Timbre 2B'\r\n      },\r\n      items: [\r\n        { name: 'Producto 1', quantity: 2, weight: 1.5 }\r\n      ],\r\n      status: 'confirmed' as const,\r\n      estimated_delivery_time: '14:00 - 18:00',\r\n      special_instructions: 'Llamar antes de llegar',\r\n      requires_signature: true,\r\n      cash_on_delivery: 5000\r\n    };\r\n\r\n    const mockProps = {\r\n      delivery: mockDelivery,\r\n      isActive: true,\r\n      onComplete: jest.fn(),\r\n      onStartNavigation: jest.fn(),\r\n      isNavigating: false\r\n    };\r\n\r\n    it('should render delivery information correctly', () => {\r\n      render(<DeliveryCard {...mockProps} />);\r\n\r\n      expect(screen.getByText('Juan Pérez')).toBeInTheDocument();\r\n      expect(screen.getByText('TRK-001')).toBeInTheDocument();\r\n      expect(screen.getByText('Av. Corrientes 1234')).toBeInTheDocument();\r\n      expect(screen.getByText('Buenos Aires, 1043')).toBeInTheDocument();\r\n    });\r\n\r\n    it('should show special instructions', () => {\r\n      render(<DeliveryCard {...mockProps} />);\r\n\r\n      expect(screen.getByText('Llamar antes de llegar')).toBeInTheDocument();\r\n    });\r\n\r\n    it('should show cash on delivery amount', () => {\r\n      render(<DeliveryCard {...mockProps} />);\r\n\r\n      expect(screen.getByText('Cobrar: $5.000')).toBeInTheDocument();\r\n    });\r\n\r\n    it('should call onStartNavigation when navigation button is clicked', () => {\r\n      render(<DeliveryCard {...mockProps} />);\r\n\r\n      const navButton = screen.getByText('Navegar');\r\n      fireEvent.click(navButton);\r\n\r\n      expect(mockProps.onStartNavigation).toHaveBeenCalled();\r\n    });\r\n\r\n    it('should call onComplete when complete button is clicked', () => {\r\n      render(<DeliveryCard {...mockProps} />);\r\n\r\n      const completeButton = screen.getByText('Marcar como Entregado');\r\n      fireEvent.click(completeButton);\r\n\r\n      expect(mockProps.onComplete).toHaveBeenCalled();\r\n    });\r\n\r\n    it('should show call and SMS buttons when phone is available', () => {\r\n      render(<DeliveryCard {...mockProps} />);\r\n\r\n      expect(screen.getByText('Llamar')).toBeInTheDocument();\r\n      expect(screen.getByText('SMS')).toBeInTheDocument();\r\n    });\r\n  });\r\n\r\n  describe('NavigationInstructions Component', () => {\r\n    const mockInstructions = [\r\n      {\r\n        instruction: 'Head north on Av. Corrientes',\r\n        distance: '500 m',\r\n        duration: '2 mins',\r\n        maneuver: 'straight',\r\n        coordinates: { lat: -34.6037, lng: -58.3816 }\r\n      },\r\n      {\r\n        instruction: 'Turn right onto Av. 9 de Julio',\r\n        distance: '1.2 km',\r\n        duration: '4 mins',\r\n        maneuver: 'turn-right',\r\n        coordinates: { lat: -34.6000, lng: -58.3816 }\r\n      }\r\n    ];\r\n\r\n    const mockProps = {\r\n      instructions: mockInstructions,\r\n      currentLocation: { lat: -34.6037, lng: -58.3816 }\r\n    };\r\n\r\n    it('should render current instruction', () => {\r\n      render(<NavigationInstructions {...mockProps} />);\r\n\r\n      expect(screen.getByText('Head north on Av. Corrientes')).toBeInTheDocument();\r\n      expect(screen.getByText('500 m')).toBeInTheDocument();\r\n      expect(screen.getByText('2 mins')).toBeInTheDocument();\r\n    });\r\n\r\n    it('should show next instruction', () => {\r\n      render(<NavigationInstructions {...mockProps} />);\r\n\r\n      expect(screen.getByText('Luego: Turn right onto Av. 9 de Julio')).toBeInTheDocument();\r\n    });\r\n\r\n    it('should show progress indicator', () => {\r\n      render(<NavigationInstructions {...mockProps} />);\r\n\r\n      expect(screen.getByText('Paso 1 de 2')).toBeInTheDocument();\r\n      expect(screen.getByText('50%')).toBeInTheDocument();\r\n    });\r\n  });\r\n\r\n  describe('DriverDashboardPage Component', () => {\r\n    it('should render dashboard with driver information', () => {\r\n      render(<DriverDashboardPage />);\r\n\r\n      expect(screen.getByText('Estado del Driver')).toBeInTheDocument();\r\n      expect(screen.getByText('Van - ABC123')).toBeInTheDocument();\r\n    });\r\n\r\n    it('should show online/offline controls', () => {\r\n      render(<DriverDashboardPage />);\r\n\r\n      expect(screen.getByText('En Línea')).toBeInTheDocument();\r\n      expect(screen.getByText('Desconectar')).toBeInTheDocument();\r\n    });\r\n\r\n    it('should call goOnline when connect button is clicked', () => {\r\n      mockUseDriver.mockReturnValue({\r\n        state: { ...mockDriverState, isOnline: false },\r\n        ...mockDriverActions\r\n      });\r\n\r\n      render(<DriverDashboardPage />);\r\n\r\n      const connectButton = screen.getByText('Conectarse');\r\n      fireEvent.click(connectButton);\r\n\r\n      expect(mockDriverActions.goOnline).toHaveBeenCalled();\r\n    });\r\n\r\n    it('should show current location when available', () => {\r\n      render(<DriverDashboardPage />);\r\n\r\n      expect(screen.getByText(/Ubicación: -34.6037, -58.3816/)).toBeInTheDocument();\r\n    });\r\n\r\n    it('should show today statistics', () => {\r\n      render(<DriverDashboardPage />);\r\n\r\n      expect(screen.getByText('Estadísticas de Hoy')).toBeInTheDocument();\r\n      expect(screen.getByText('Entregas')).toBeInTheDocument();\r\n      expect(screen.getByText('Distancia')).toBeInTheDocument();\r\n      expect(screen.getByText('Tiempo Activo')).toBeInTheDocument();\r\n      expect(screen.getByText('Eficiencia')).toBeInTheDocument();\r\n    });\r\n  });\r\n});\r\n"],"names":["jest","mock","useRouter","fn","useParams","id","usePathname","useDriver","DriverProvider","children","div","APIProvider","data-testid","Map","Marker","DirectionsRenderer","describe","mockUseSession","useSession","mockUseRouter","mockUseDriver","require","mockDriverState","driver","name","email","vehicle_type","license_plate","status","currentRoute","assignedRoutes","currentLocation","lat","lng","isTracking","isOnline","notifications","loading","error","mockDriverActions","startLocationTracking","stopLocationTracking","updateDriverLocation","startRoute","completeRoute","completeDelivery","goOnline","goOffline","beforeEach","clearAllMocks","mockReturnValue","data","user","push","replace","back","state","it","render","DriverNavigation","expect","screen","getByText","toBeInTheDocument","activeRoute","shipments","waypoints","total_distance","estimated_time","optimization_score","mockDelivery","tracking_number","customer_name","customer_phone","destination","address","city","postal_code","coordinates","notes","items","quantity","weight","estimated_delivery_time","special_instructions","requires_signature","cash_on_delivery","mockProps","delivery","isActive","onComplete","onStartNavigation","isNavigating","DeliveryCard","navButton","fireEvent","click","toHaveBeenCalled","completeButton","mockInstructions","instruction","distance","duration","maneuver","instructions","NavigationInstructions","DriverDashboardPage","connectButton"],"mappings":"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"}