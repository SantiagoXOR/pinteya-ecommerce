b9a5b64141ded1d54a1df34a9703b168
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_kby4pu8de() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\driver\\tracking\\update\\route.ts";
  var hash = "f802d01c8fa546fd3d517bddffcb0fa708b19287";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\driver\\tracking\\update\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 20
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 23
        }
      },
      "7": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "8": {
        start: {
          line: 24,
          column: 17
        },
        end: {
          line: 24,
          column: 75
        }
      },
      "9": {
        start: {
          line: 25,
          column: 14
        },
        end: {
          line: 25,
          column: 48
        }
      },
      "10": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 24
        }
      },
      "11": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 144,
          column: 5
        }
      },
      "12": {
        start: {
          line: 29,
          column: 24
        },
        end: {
          line: 29,
          column: 47
        }
      },
      "13": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 36,
          column: 9
        }
      },
      "14": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 35,
          column: 15
        }
      },
      "15": {
        start: {
          line: 37,
          column: 23
        },
        end: {
          line: 37,
          column: 38
        }
      },
      "16": {
        start: {
          line: 38,
          column: 21
        },
        end: {
          line: 38,
          column: 41
        }
      },
      "17": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 46,
          column: 9
        }
      },
      "18": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 45,
          column: 15
        }
      },
      "19": {
        start: {
          line: 47,
          column: 25
        },
        end: {
          line: 47,
          column: 59
        }
      },
      "20": {
        start: {
          line: 49,
          column: 57
        },
        end: {
          line: 49,
          column: 164
        }
      },
      "21": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "22": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 55,
          column: 15
        }
      },
      "23": {
        start: {
          line: 58,
          column: 55
        },
        end: {
          line: 58,
          column: 199
        }
      },
      "24": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 65,
          column: 9
        }
      },
      "25": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 64,
          column: 15
        }
      },
      "26": {
        start: {
          line: 67,
          column: 41
        },
        end: {
          line: 80,
          column: 10
        }
      },
      "27": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 88,
          column: 9
        }
      },
      "28": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 76
        }
      },
      "29": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 87,
          column: 15
        }
      },
      "30": {
        start: {
          line: 90,
          column: 40
        },
        end: {
          line: 100,
          column: 10
        }
      },
      "31": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 104,
          column: 9
        }
      },
      "32": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 77
        }
      },
      "33": {
        start: {
          line: 106,
          column: 31
        },
        end: {
          line: 106,
          column: 35
        }
      },
      "34": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 113,
          column: 9
        }
      },
      "35": {
        start: {
          line: 110,
          column: 33
        },
        end: {
          line: 110,
          column: 57
        }
      },
      "36": {
        start: {
          line: 111,
          column: 37
        },
        end: {
          line: 111,
          column: 39
        }
      },
      "37": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 112,
          column: 83
        }
      },
      "38": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 120,
          column: 9
        }
      },
      "39": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 119,
          column: 38
        }
      },
      "40": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 124,
          column: 9
        }
      },
      "41": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 123,
          column: 111
        }
      },
      "42": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 136,
          column: 11
        }
      },
      "43": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 138,
          column: 58
        }
      },
      "44": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 143,
          column: 11
        }
      },
      "45": {
        start: {
          line: 148,
          column: 4
        },
        end: {
          line: 181,
          column: 5
        }
      },
      "46": {
        start: {
          line: 149,
          column: 25
        },
        end: {
          line: 149,
          column: 59
        }
      },
      "47": {
        start: {
          line: 151,
          column: 39
        },
        end: {
          line: 151,
          column: 133
        }
      },
      "48": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 152,
          column: 34
        }
      },
      "49": {
        start: {
          line: 152,
          column: 27
        },
        end: {
          line: 152,
          column: 34
        }
      },
      "50": {
        start: {
          line: 153,
          column: 22
        },
        end: {
          line: 153,
          column: 24
        }
      },
      "51": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 163,
          column: 9
        }
      },
      "52": {
        start: {
          line: 156,
          column: 16
        },
        end: {
          line: 156,
          column: 95
        }
      },
      "53": {
        start: {
          line: 157,
          column: 16
        },
        end: {
          line: 157,
          column: 22
        }
      },
      "54": {
        start: {
          line: 159,
          column: 16
        },
        end: {
          line: 159,
          column: 200
        }
      },
      "55": {
        start: {
          line: 160,
          column: 16
        },
        end: {
          line: 160,
          column: 22
        }
      },
      "56": {
        start: {
          line: 162,
          column: 16
        },
        end: {
          line: 162,
          column: 23
        }
      },
      "57": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 176,
          column: 11
        }
      },
      "58": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 180,
          column: 69
        }
      },
      "59": {
        start: {
          line: 184,
          column: 4
        },
        end: {
          line: 237,
          column: 5
        }
      },
      "60": {
        start: {
          line: 185,
          column: 27
        },
        end: {
          line: 185,
          column: 50
        }
      },
      "61": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 192,
          column: 9
        }
      },
      "62": {
        start: {
          line: 187,
          column: 12
        },
        end: {
          line: 191,
          column: 15
        }
      },
      "63": {
        start: {
          line: 193,
          column: 20
        },
        end: {
          line: 193,
          column: 40
        }
      },
      "64": {
        start: {
          line: 194,
          column: 25
        },
        end: {
          line: 194,
          column: 57
        }
      },
      "65": {
        start: {
          line: 195,
          column: 24
        },
        end: {
          line: 195,
          column: 55
        }
      },
      "66": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 202,
          column: 9
        }
      },
      "67": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 201,
          column: 15
        }
      },
      "68": {
        start: {
          line: 203,
          column: 25
        },
        end: {
          line: 203,
          column: 59
        }
      },
      "69": {
        start: {
          line: 205,
          column: 46
        },
        end: {
          line: 205,
          column: 156
        }
      },
      "70": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 212,
          column: 9
        }
      },
      "71": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 211,
          column: 15
        }
      },
      "72": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 229,
          column: 11
        }
      },
      "73": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 231,
          column: 63
        }
      },
      "74": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 236,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "POST",
        decl: {
          start: {
            line: 27,
            column: 15
          },
          end: {
            line: 27,
            column: 19
          }
        },
        loc: {
          start: {
            line: 27,
            column: 29
          },
          end: {
            line: 145,
            column: 1
          }
        },
        line: 27
      },
      "5": {
        name: "sendCustomerNotification",
        decl: {
          start: {
            line: 147,
            column: 15
          },
          end: {
            line: 147,
            column: 39
          }
        },
        loc: {
          start: {
            line: 147,
            column: 87
          },
          end: {
            line: 182,
            column: 1
          }
        },
        line: 147
      },
      "6": {
        name: "GET",
        decl: {
          start: {
            line: 183,
            column: 15
          },
          end: {
            line: 183,
            column: 18
          }
        },
        loc: {
          start: {
            line: 183,
            column: 28
          },
          end: {
            line: 238,
            column: 1
          }
        },
        line: 183
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "1": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "2": {
        loc: {
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 40,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 40,
            column: 26
          }
        }, {
          start: {
            line: 40,
            column: 30
          },
          end: {
            line: 40,
            column: 43
          }
        }, {
          start: {
            line: 40,
            column: 47
          },
          end: {
            line: 40,
            column: 68
          }
        }],
        line: 40
      },
      "3": {
        loc: {
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "4": {
        loc: {
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 50,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 50,
            column: 23
          }
        }, {
          start: {
            line: 50,
            column: 27
          },
          end: {
            line: 50,
            column: 38
          }
        }],
        line: 50
      },
      "5": {
        loc: {
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 65,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 65,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "6": {
        loc: {
          start: {
            line: 59,
            column: 12
          },
          end: {
            line: 59,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 12
          },
          end: {
            line: 59,
            column: 22
          }
        }, {
          start: {
            line: 59,
            column: 26
          },
          end: {
            line: 59,
            column: 36
          }
        }],
        line: 59
      },
      "7": {
        loc: {
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 81
      },
      "8": {
        loc: {
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 104,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 104,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 101
      },
      "9": {
        loc: {
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 113,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 113,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "10": {
        loc: {
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 120,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 120,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 115
      },
      "11": {
        loc: {
          start: {
            line: 115,
            column: 12
          },
          end: {
            line: 115,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 115,
            column: 12
          },
          end: {
            line: 115,
            column: 28
          }
        }, {
          start: {
            line: 115,
            column: 32
          },
          end: {
            line: 115,
            column: 58
          }
        }],
        line: 115
      },
      "12": {
        loc: {
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 124,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 124,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 122
      },
      "13": {
        loc: {
          start: {
            line: 122,
            column: 12
          },
          end: {
            line: 122,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 122,
            column: 12
          },
          end: {
            line: 122,
            column: 37
          }
        }, {
          start: {
            line: 122,
            column: 41
          },
          end: {
            line: 122,
            column: 66
          }
        }],
        line: 122
      },
      "14": {
        loc: {
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 152,
            column: 34
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 152,
            column: 34
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 152
      },
      "15": {
        loc: {
          start: {
            line: 154,
            column: 8
          },
          end: {
            line: 163,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 155,
            column: 12
          },
          end: {
            line: 157,
            column: 22
          }
        }, {
          start: {
            line: 158,
            column: 12
          },
          end: {
            line: 160,
            column: 22
          }
        }, {
          start: {
            line: 161,
            column: 12
          },
          end: {
            line: 162,
            column: 23
          }
        }],
        line: 154
      },
      "16": {
        loc: {
          start: {
            line: 159,
            column: 68
          },
          end: {
            line: 159,
            column: 197
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 159,
            column: 87
          },
          end: {
            line: 159,
            column: 157
          }
        }, {
          start: {
            line: 159,
            column: 160
          },
          end: {
            line: 159,
            column: 197
          }
        }],
        line: 159
      },
      "17": {
        loc: {
          start: {
            line: 186,
            column: 8
          },
          end: {
            line: 192,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 186,
            column: 8
          },
          end: {
            line: 192,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 186
      },
      "18": {
        loc: {
          start: {
            line: 196,
            column: 8
          },
          end: {
            line: 202,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 196,
            column: 8
          },
          end: {
            line: 202,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 196
      },
      "19": {
        loc: {
          start: {
            line: 196,
            column: 12
          },
          end: {
            line: 196,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 196,
            column: 12
          },
          end: {
            line: 196,
            column: 21
          }
        }, {
          start: {
            line: 196,
            column: 25
          },
          end: {
            line: 196,
            column: 33
          }
        }],
        line: 196
      },
      "20": {
        loc: {
          start: {
            line: 206,
            column: 8
          },
          end: {
            line: 212,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 206,
            column: 8
          },
          end: {
            line: 212,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 206
      },
      "21": {
        loc: {
          start: {
            line: 206,
            column: 12
          },
          end: {
            line: 206,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 206,
            column: 12
          },
          end: {
            line: 206,
            column: 17
          }
        }, {
          start: {
            line: 206,
            column: 21
          },
          end: {
            line: 206,
            column: 34
          }
        }],
        line: 206
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\driver\\tracking\\update\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n/**\r\n * API para actualizar el tracking en tiempo real de drivers\r\n * Maneja ubicaciones, progreso de entregas y notificaciones a clientes\r\n */\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { createClient } from '@/lib/integrations/supabase/server';\r\nimport { auth } from '@/lib/auth';\r\n\r\ninterface TrackingUpdateRequest {\r\n  driverId: string;\r\n  orderId: string;\r\n  currentLocation: { lat: number; lng: number };\r\n  timestamp: Date;\r\n  speed: number;\r\n  heading: number;\r\n  accuracy: number;\r\n  status: 'en_route' | 'arrived' | 'delayed' | 'offline';\r\n}\r\n\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    const session = await auth();\r\n    \r\n    if (!session?.user?.id) {\r\n      return NextResponse.json(\r\n        { error: 'No autorizado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    const userId = session.user.id;\r\n\r\n    const body: TrackingUpdateRequest = await request.json();\r\n    \r\n    // Validar datos requeridos\r\n    if (!body.driverId || !body.orderId || !body.currentLocation) {\r\n      return NextResponse.json(\r\n        { error: 'Datos de tracking incompletos' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    const supabase = await createClient();\r\n\r\n    // Verificar que el usuario es el driver autorizado\r\n    const { data: driverData, error: driverError } = await supabase\r\n      .from('drivers')\r\n      .select('id, user_id')\r\n      .eq('id', body.driverId)\r\n      .eq('user_id', userId)\r\n      .single();\r\n\r\n    if (driverError || !driverData) {\r\n      return NextResponse.json(\r\n        { error: 'Driver no encontrado o no autorizado' },\r\n        { status: 403 }\r\n      );\r\n    }\r\n\r\n    // Verificar que la orden existe y est\xE1 asignada al driver\r\n    const { data: orderData, error: orderError } = await supabase\r\n      .from('orders')\r\n      .select('id, status, customer_id, delivery_address')\r\n      .eq('id', body.orderId)\r\n      .eq('driver_id', body.driverId)\r\n      .single();\r\n\r\n    if (orderError || !orderData) {\r\n      return NextResponse.json(\r\n        { error: 'Orden no encontrada o no asignada al driver' },\r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    // Insertar/actualizar ubicaci\xF3n del driver\r\n    const { error: locationError } = await supabase\r\n      .from('driver_locations')\r\n      .upsert({\r\n        driver_id: body.driverId,\r\n        order_id: body.orderId,\r\n        latitude: body.currentLocation.lat,\r\n        longitude: body.currentLocation.lng,\r\n        speed: body.speed,\r\n        heading: body.heading,\r\n        accuracy: body.accuracy,\r\n        status: body.status,\r\n        timestamp: new Date().toISOString(),\r\n        updated_at: new Date().toISOString()\r\n      }, {\r\n        onConflict: 'driver_id,order_id'\r\n      });\r\n\r\n    if (locationError) {\r\n      console.error('Error updating driver location:', locationError);\r\n      return NextResponse.json(\r\n        { error: 'Error actualizando ubicaci\xF3n' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Insertar historial de tracking\r\n    const { error: historyError } = await supabase\r\n      .from('tracking_history')\r\n      .insert({\r\n        driver_id: body.driverId,\r\n        order_id: body.orderId,\r\n        latitude: body.currentLocation.lat,\r\n        longitude: body.currentLocation.lng,\r\n        speed: body.speed,\r\n        heading: body.heading,\r\n        accuracy: body.accuracy,\r\n        status: body.status,\r\n        timestamp: new Date().toISOString()\r\n      });\r\n\r\n    if (historyError) {\r\n      console.error('Error inserting tracking history:', historyError);\r\n      // No retornar error, el historial es opcional\r\n    }\r\n\r\n    // Calcular ETA estimado basado en distancia y velocidad\r\n    let estimatedArrival = null;\r\n    if (body.speed > 0) {\r\n      // Aqu\xED podr\xEDas integrar con Google Maps Distance Matrix API\r\n      // Por ahora, usamos una estimaci\xF3n simple\r\n      const averageSpeed = Math.max(body.speed, 30); // km/h m\xEDnimo\r\n      const estimatedMinutes = 15; // Estimaci\xF3n base\r\n      estimatedArrival = new Date(Date.now() + estimatedMinutes * 60 * 1000);\r\n    }\r\n\r\n    // Actualizar ETA en la orden si es necesario\r\n    if (estimatedArrival && body.status === 'en_route') {\r\n      await supabase\r\n        .from('orders')\r\n        .update({\r\n          estimated_delivery_time: estimatedArrival.toISOString(),\r\n          updated_at: new Date().toISOString()\r\n        })\r\n        .eq('id', body.orderId);\r\n    }\r\n\r\n    // Enviar notificaci\xF3n al cliente si hay cambios significativos\r\n    if (body.status === 'arrived' || body.status === 'delayed') {\r\n      await sendCustomerNotification(\r\n        orderData.customer_id,\r\n        body.orderId,\r\n        body.status,\r\n        estimatedArrival\r\n      );\r\n    }\r\n\r\n    // Respuesta exitosa\r\n    return NextResponse.json({\r\n      success: true,\r\n      message: 'Tracking actualizado correctamente',\r\n      data: {\r\n        driverId: body.driverId,\r\n        orderId: body.orderId,\r\n        status: body.status,\r\n        timestamp: new Date().toISOString(),\r\n        estimatedArrival: estimatedArrival?.toISOString()\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Error in tracking update:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// Funci\xF3n auxiliar para enviar notificaciones a clientes\r\nasync function sendCustomerNotification(\r\n  customerId: string,\r\n  orderId: string,\r\n  status: string,\r\n  estimatedArrival: Date | null\r\n) {\r\n  try {\r\n    const supabase = await createClient();\r\n\r\n    // Obtener informaci\xF3n del cliente\r\n    const { data: customerData } = await supabase\r\n      .from('user_profiles')\r\n      .select('email, phone')\r\n      .eq('user_id', customerId)\r\n      .single();\r\n\r\n    if (!customerData) return;\r\n\r\n    let message = '';\r\n    switch (status) {\r\n      case 'arrived':\r\n        message = `\xA1Tu pedido #${orderId} ha llegado! El driver est\xE1 en tu ubicaci\xF3n.`;\r\n        break;\r\n      case 'delayed':\r\n        message = `Tu pedido #${orderId} se ha retrasado. ${estimatedArrival ? `Nueva hora estimada: ${estimatedArrival.toLocaleTimeString('es-ES')}` : 'Te notificaremos cuando est\xE9 cerca.'}`;\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n\r\n    // Insertar notificaci\xF3n en la base de datos\r\n    await supabase\r\n      .from('notifications')\r\n      .insert({\r\n        user_id: customerId,\r\n        title: 'Actualizaci\xF3n de entrega',\r\n        message,\r\n        type: 'delivery_update',\r\n        data: {\r\n          orderId,\r\n          status,\r\n          estimatedArrival: estimatedArrival?.toISOString()\r\n        },\r\n        created_at: new Date().toISOString()\r\n      });\r\n\r\n    // Aqu\xED podr\xEDas integrar con servicios de email/SMS\r\n    // Por ejemplo: SendGrid, Twilio, etc.\r\n\r\n  } catch (error) {\r\n    console.error('Error sending customer notification:', error);\r\n  }\r\n}\r\n\r\n// Endpoint para obtener ubicaci\xF3n actual del driver\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    const { userId } = await auth();\r\n    \r\n    if (!userId) {\r\n      return NextResponse.json(\r\n        { error: 'No autorizado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    const url = new URL(request.url);\r\n    const driverId = url.searchParams.get('driverId');\r\n    const orderId = url.searchParams.get('orderId');\r\n\r\n    if (!driverId || !orderId) {\r\n      return NextResponse.json(\r\n        { error: 'Driver ID y Order ID requeridos' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    const supabase = await createClient();\r\n\r\n    // Obtener ubicaci\xF3n actual del driver\r\n    const { data: locationData, error } = await supabase\r\n      .from('driver_locations')\r\n      .select('*')\r\n      .eq('driver_id', driverId)\r\n      .eq('order_id', orderId)\r\n      .single();\r\n\r\n    if (error || !locationData) {\r\n      return NextResponse.json(\r\n        { error: 'Ubicaci\xF3n no encontrada' },\r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: {\r\n        driverId: locationData.driver_id,\r\n        orderId: locationData.order_id,\r\n        currentLocation: {\r\n          lat: locationData.latitude,\r\n          lng: locationData.longitude\r\n        },\r\n        speed: locationData.speed,\r\n        heading: locationData.heading,\r\n        accuracy: locationData.accuracy,\r\n        status: locationData.status,\r\n        timestamp: locationData.timestamp,\r\n        lastUpdate: locationData.updated_at\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Error getting driver location:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "POST", "runtime", "request", "session", "auth", "user", "id", "NextResponse", "json", "error", "status", "userId", "body", "driverId", "orderId", "currentLocation", "supabase", "createClient", "data", "driverData", "driverError", "from", "select", "eq", "single", "orderData", "orderError", "locationError", "upsert", "driver_id", "order_id", "latitude", "lat", "longitude", "lng", "speed", "heading", "accuracy", "timestamp", "Date", "toISOString", "updated_at", "onConflict", "console", "historyError", "insert", "estimatedArrival", "averageSpeed", "Math", "max", "estimatedMinutes", "now", "update", "estimated_delivery_time", "sendCustomerNotification", "customer_id", "success", "message", "customerId", "customerData", "toLocaleTimeString", "user_id", "title", "type", "created_at", "url", "URL", "searchParams", "get", "locationData", "lastUpdate"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f802d01c8fa546fd3d517bddffcb0fa708b19287"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_kby4pu8de = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_kby4pu8de();
cov_kby4pu8de().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_kby4pu8de().f[0]++;
  cov_kby4pu8de().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_kby4pu8de().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_kby4pu8de().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_kby4pu8de().f[1]++;
    cov_kby4pu8de().s[4]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_kby4pu8de().f[2]++;
    cov_kby4pu8de().s[5]++;
    return POST;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_kby4pu8de().f[3]++;
    cov_kby4pu8de().s[6]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_kby4pu8de().s[7]++, require("next/server"));
const _server1 =
/* istanbul ignore next */
(cov_kby4pu8de().s[8]++, require("../../../../../lib/integrations/supabase/server"));
const _auth =
/* istanbul ignore next */
(cov_kby4pu8de().s[9]++, require("../../../../../lib/auth"));
const runtime =
/* istanbul ignore next */
(cov_kby4pu8de().s[10]++, 'nodejs');
async function POST(request) {
  /* istanbul ignore next */
  cov_kby4pu8de().f[4]++;
  cov_kby4pu8de().s[11]++;
  try {
    const session =
    /* istanbul ignore next */
    (cov_kby4pu8de().s[12]++, await (0, _auth.auth)());
    /* istanbul ignore next */
    cov_kby4pu8de().s[13]++;
    if (!session?.user?.id) {
      /* istanbul ignore next */
      cov_kby4pu8de().b[0][0]++;
      cov_kby4pu8de().s[14]++;
      return _server.NextResponse.json({
        error: 'No autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_kby4pu8de().b[0][1]++;
    }
    const userId =
    /* istanbul ignore next */
    (cov_kby4pu8de().s[15]++, session.user.id);
    const body =
    /* istanbul ignore next */
    (cov_kby4pu8de().s[16]++, await request.json());
    // Validar datos requeridos
    /* istanbul ignore next */
    cov_kby4pu8de().s[17]++;
    if (
    /* istanbul ignore next */
    (cov_kby4pu8de().b[2][0]++, !body.driverId) ||
    /* istanbul ignore next */
    (cov_kby4pu8de().b[2][1]++, !body.orderId) ||
    /* istanbul ignore next */
    (cov_kby4pu8de().b[2][2]++, !body.currentLocation)) {
      /* istanbul ignore next */
      cov_kby4pu8de().b[1][0]++;
      cov_kby4pu8de().s[18]++;
      return _server.NextResponse.json({
        error: 'Datos de tracking incompletos'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_kby4pu8de().b[1][1]++;
    }
    const supabase =
    /* istanbul ignore next */
    (cov_kby4pu8de().s[19]++, await (0, _server1.createClient)());
    // Verificar que el usuario es el driver autorizado
    const {
      data: driverData,
      error: driverError
    } =
    /* istanbul ignore next */
    (cov_kby4pu8de().s[20]++, await supabase.from('drivers').select('id, user_id').eq('id', body.driverId).eq('user_id', userId).single());
    /* istanbul ignore next */
    cov_kby4pu8de().s[21]++;
    if (
    /* istanbul ignore next */
    (cov_kby4pu8de().b[4][0]++, driverError) ||
    /* istanbul ignore next */
    (cov_kby4pu8de().b[4][1]++, !driverData)) {
      /* istanbul ignore next */
      cov_kby4pu8de().b[3][0]++;
      cov_kby4pu8de().s[22]++;
      return _server.NextResponse.json({
        error: 'Driver no encontrado o no autorizado'
      }, {
        status: 403
      });
    } else
    /* istanbul ignore next */
    {
      cov_kby4pu8de().b[3][1]++;
    }
    // Verificar que la orden existe y estÃ¡ asignada al driver
    const {
      data: orderData,
      error: orderError
    } =
    /* istanbul ignore next */
    (cov_kby4pu8de().s[23]++, await supabase.from('orders').select('id, status, customer_id, delivery_address').eq('id', body.orderId).eq('driver_id', body.driverId).single());
    /* istanbul ignore next */
    cov_kby4pu8de().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_kby4pu8de().b[6][0]++, orderError) ||
    /* istanbul ignore next */
    (cov_kby4pu8de().b[6][1]++, !orderData)) {
      /* istanbul ignore next */
      cov_kby4pu8de().b[5][0]++;
      cov_kby4pu8de().s[25]++;
      return _server.NextResponse.json({
        error: 'Orden no encontrada o no asignada al driver'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_kby4pu8de().b[5][1]++;
    }
    // Insertar/actualizar ubicaciÃ³n del driver
    const {
      error: locationError
    } =
    /* istanbul ignore next */
    (cov_kby4pu8de().s[26]++, await supabase.from('driver_locations').upsert({
      driver_id: body.driverId,
      order_id: body.orderId,
      latitude: body.currentLocation.lat,
      longitude: body.currentLocation.lng,
      speed: body.speed,
      heading: body.heading,
      accuracy: body.accuracy,
      status: body.status,
      timestamp: new Date().toISOString(),
      updated_at: new Date().toISOString()
    }, {
      onConflict: 'driver_id,order_id'
    }));
    /* istanbul ignore next */
    cov_kby4pu8de().s[27]++;
    if (locationError) {
      /* istanbul ignore next */
      cov_kby4pu8de().b[7][0]++;
      cov_kby4pu8de().s[28]++;
      console.error('Error updating driver location:', locationError);
      /* istanbul ignore next */
      cov_kby4pu8de().s[29]++;
      return _server.NextResponse.json({
        error: 'Error actualizando ubicaciÃ³n'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_kby4pu8de().b[7][1]++;
    }
    // Insertar historial de tracking
    const {
      error: historyError
    } =
    /* istanbul ignore next */
    (cov_kby4pu8de().s[30]++, await supabase.from('tracking_history').insert({
      driver_id: body.driverId,
      order_id: body.orderId,
      latitude: body.currentLocation.lat,
      longitude: body.currentLocation.lng,
      speed: body.speed,
      heading: body.heading,
      accuracy: body.accuracy,
      status: body.status,
      timestamp: new Date().toISOString()
    }));
    /* istanbul ignore next */
    cov_kby4pu8de().s[31]++;
    if (historyError) {
      /* istanbul ignore next */
      cov_kby4pu8de().b[8][0]++;
      cov_kby4pu8de().s[32]++;
      console.error('Error inserting tracking history:', historyError);
      // No retornar error, el historial es opcional
    } else
    /* istanbul ignore next */
    {
      cov_kby4pu8de().b[8][1]++;
    }
    // Calcular ETA estimado basado en distancia y velocidad
    let estimatedArrival =
    /* istanbul ignore next */
    (cov_kby4pu8de().s[33]++, null);
    /* istanbul ignore next */
    cov_kby4pu8de().s[34]++;
    if (body.speed > 0) {
      /* istanbul ignore next */
      cov_kby4pu8de().b[9][0]++;
      // AquÃ­ podrÃ­as integrar con Google Maps Distance Matrix API
      // Por ahora, usamos una estimaciÃ³n simple
      const averageSpeed =
      /* istanbul ignore next */
      (cov_kby4pu8de().s[35]++, Math.max(body.speed, 30)); // km/h mÃ­nimo
      const estimatedMinutes =
      /* istanbul ignore next */
      (cov_kby4pu8de().s[36]++, 15); // EstimaciÃ³n base
      /* istanbul ignore next */
      cov_kby4pu8de().s[37]++;
      estimatedArrival = new Date(Date.now() + estimatedMinutes * 60 * 1000);
    } else
    /* istanbul ignore next */
    {
      cov_kby4pu8de().b[9][1]++;
    }
    // Actualizar ETA en la orden si es necesario
    cov_kby4pu8de().s[38]++;
    if (
    /* istanbul ignore next */
    (cov_kby4pu8de().b[11][0]++, estimatedArrival) &&
    /* istanbul ignore next */
    (cov_kby4pu8de().b[11][1]++, body.status === 'en_route')) {
      /* istanbul ignore next */
      cov_kby4pu8de().b[10][0]++;
      cov_kby4pu8de().s[39]++;
      await supabase.from('orders').update({
        estimated_delivery_time: estimatedArrival.toISOString(),
        updated_at: new Date().toISOString()
      }).eq('id', body.orderId);
    } else
    /* istanbul ignore next */
    {
      cov_kby4pu8de().b[10][1]++;
    }
    // Enviar notificaciÃ³n al cliente si hay cambios significativos
    cov_kby4pu8de().s[40]++;
    if (
    /* istanbul ignore next */
    (cov_kby4pu8de().b[13][0]++, body.status === 'arrived') ||
    /* istanbul ignore next */
    (cov_kby4pu8de().b[13][1]++, body.status === 'delayed')) {
      /* istanbul ignore next */
      cov_kby4pu8de().b[12][0]++;
      cov_kby4pu8de().s[41]++;
      await sendCustomerNotification(orderData.customer_id, body.orderId, body.status, estimatedArrival);
    } else
    /* istanbul ignore next */
    {
      cov_kby4pu8de().b[12][1]++;
    }
    // Respuesta exitosa
    cov_kby4pu8de().s[42]++;
    return _server.NextResponse.json({
      success: true,
      message: 'Tracking actualizado correctamente',
      data: {
        driverId: body.driverId,
        orderId: body.orderId,
        status: body.status,
        timestamp: new Date().toISOString(),
        estimatedArrival: estimatedArrival?.toISOString()
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_kby4pu8de().s[43]++;
    console.error('Error in tracking update:', error);
    /* istanbul ignore next */
    cov_kby4pu8de().s[44]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
// FunciÃ³n auxiliar para enviar notificaciones a clientes
async function sendCustomerNotification(customerId, orderId, status, estimatedArrival) {
  /* istanbul ignore next */
  cov_kby4pu8de().f[5]++;
  cov_kby4pu8de().s[45]++;
  try {
    const supabase =
    /* istanbul ignore next */
    (cov_kby4pu8de().s[46]++, await (0, _server1.createClient)());
    // Obtener informaciÃ³n del cliente
    const {
      data: customerData
    } =
    /* istanbul ignore next */
    (cov_kby4pu8de().s[47]++, await supabase.from('user_profiles').select('email, phone').eq('user_id', customerId).single());
    /* istanbul ignore next */
    cov_kby4pu8de().s[48]++;
    if (!customerData) {
      /* istanbul ignore next */
      cov_kby4pu8de().b[14][0]++;
      cov_kby4pu8de().s[49]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_kby4pu8de().b[14][1]++;
    }
    let message =
    /* istanbul ignore next */
    (cov_kby4pu8de().s[50]++, '');
    /* istanbul ignore next */
    cov_kby4pu8de().s[51]++;
    switch (status) {
      case 'arrived':
        /* istanbul ignore next */
        cov_kby4pu8de().b[15][0]++;
        cov_kby4pu8de().s[52]++;
        message = `Â¡Tu pedido #${orderId} ha llegado! El driver estÃ¡ en tu ubicaciÃ³n.`;
        /* istanbul ignore next */
        cov_kby4pu8de().s[53]++;
        break;
      case 'delayed':
        /* istanbul ignore next */
        cov_kby4pu8de().b[15][1]++;
        cov_kby4pu8de().s[54]++;
        message = `Tu pedido #${orderId} se ha retrasado. ${estimatedArrival ?
        /* istanbul ignore next */
        (cov_kby4pu8de().b[16][0]++, `Nueva hora estimada: ${estimatedArrival.toLocaleTimeString('es-ES')}`) :
        /* istanbul ignore next */
        (cov_kby4pu8de().b[16][1]++, 'Te notificaremos cuando estÃ© cerca.')}`;
        /* istanbul ignore next */
        cov_kby4pu8de().s[55]++;
        break;
      default:
        /* istanbul ignore next */
        cov_kby4pu8de().b[15][2]++;
        cov_kby4pu8de().s[56]++;
        return;
    }
    // Insertar notificaciÃ³n en la base de datos
    /* istanbul ignore next */
    cov_kby4pu8de().s[57]++;
    await supabase.from('notifications').insert({
      user_id: customerId,
      title: 'ActualizaciÃ³n de entrega',
      message,
      type: 'delivery_update',
      data: {
        orderId,
        status,
        estimatedArrival: estimatedArrival?.toISOString()
      },
      created_at: new Date().toISOString()
    });
    // AquÃ­ podrÃ­as integrar con servicios de email/SMS
    // Por ejemplo: SendGrid, Twilio, etc.
  } catch (error) {
    /* istanbul ignore next */
    cov_kby4pu8de().s[58]++;
    console.error('Error sending customer notification:', error);
  }
}
async function GET(request) {
  /* istanbul ignore next */
  cov_kby4pu8de().f[6]++;
  cov_kby4pu8de().s[59]++;
  try {
    const {
      userId
    } =
    /* istanbul ignore next */
    (cov_kby4pu8de().s[60]++, await (0, _auth.auth)());
    /* istanbul ignore next */
    cov_kby4pu8de().s[61]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_kby4pu8de().b[17][0]++;
      cov_kby4pu8de().s[62]++;
      return _server.NextResponse.json({
        error: 'No autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_kby4pu8de().b[17][1]++;
    }
    const url =
    /* istanbul ignore next */
    (cov_kby4pu8de().s[63]++, new URL(request.url));
    const driverId =
    /* istanbul ignore next */
    (cov_kby4pu8de().s[64]++, url.searchParams.get('driverId'));
    const orderId =
    /* istanbul ignore next */
    (cov_kby4pu8de().s[65]++, url.searchParams.get('orderId'));
    /* istanbul ignore next */
    cov_kby4pu8de().s[66]++;
    if (
    /* istanbul ignore next */
    (cov_kby4pu8de().b[19][0]++, !driverId) ||
    /* istanbul ignore next */
    (cov_kby4pu8de().b[19][1]++, !orderId)) {
      /* istanbul ignore next */
      cov_kby4pu8de().b[18][0]++;
      cov_kby4pu8de().s[67]++;
      return _server.NextResponse.json({
        error: 'Driver ID y Order ID requeridos'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_kby4pu8de().b[18][1]++;
    }
    const supabase =
    /* istanbul ignore next */
    (cov_kby4pu8de().s[68]++, await (0, _server1.createClient)());
    // Obtener ubicaciÃ³n actual del driver
    const {
      data: locationData,
      error
    } =
    /* istanbul ignore next */
    (cov_kby4pu8de().s[69]++, await supabase.from('driver_locations').select('*').eq('driver_id', driverId).eq('order_id', orderId).single());
    /* istanbul ignore next */
    cov_kby4pu8de().s[70]++;
    if (
    /* istanbul ignore next */
    (cov_kby4pu8de().b[21][0]++, error) ||
    /* istanbul ignore next */
    (cov_kby4pu8de().b[21][1]++, !locationData)) {
      /* istanbul ignore next */
      cov_kby4pu8de().b[20][0]++;
      cov_kby4pu8de().s[71]++;
      return _server.NextResponse.json({
        error: 'UbicaciÃ³n no encontrada'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_kby4pu8de().b[20][1]++;
    }
    cov_kby4pu8de().s[72]++;
    return _server.NextResponse.json({
      success: true,
      data: {
        driverId: locationData.driver_id,
        orderId: locationData.order_id,
        currentLocation: {
          lat: locationData.latitude,
          lng: locationData.longitude
        },
        speed: locationData.speed,
        heading: locationData.heading,
        accuracy: locationData.accuracy,
        status: locationData.status,
        timestamp: locationData.timestamp,
        lastUpdate: locationData.updated_at
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_kby4pu8de().s[73]++;
    console.error('Error getting driver location:', error);
    /* istanbul ignore next */
    cov_kby4pu8de().s[74]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,