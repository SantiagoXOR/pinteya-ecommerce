{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\admin\\logistics\\TrackingTimeline.tsx"],"sourcesContent":["// =====================================================\n// COMPONENTE: TRACKING TIMELINE ENTERPRISE\n// Descripción: Timeline visual de tracking con estados tiempo real\n// Basado en: Patrones Spree Commerce + shadcn/ui\n// =====================================================\n\n'use client'\n\nimport { useState, useEffect } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Badge } from '@/components/ui/badge'\nimport { Progress } from '@/components/ui/progress'\nimport { Separator } from '@/components/ui/separator'\nimport { ScrollArea } from '@/components/ui/scroll-area'\nimport {\n  Package,\n  CheckCircle,\n  Clock,\n  Truck,\n  MapPin,\n  Navigation,\n  AlertTriangle,\n  RefreshCw,\n  Eye,\n  Calendar,\n  User,\n  Building,\n} from 'lucide-react'\nimport { TrackingEvent, Shipment, ShipmentStatus } from '@/types/logistics'\nimport { useTrackingTimeline, useRealTimeTracking } from '@/hooks/admin/useTrackingEvents'\nimport { cn } from '@/lib/core/utils'\nimport { formatDate, formatRelativeTime } from '@/lib/utils/consolidated-utils'\n\n// =====================================================\n// INTERFACES\n// =====================================================\n\ninterface TrackingTimelineProps {\n  shipmentId: number\n  realTime?: boolean\n  compact?: boolean\n  showProgress?: boolean\n  className?: string\n}\n\ninterface TimelineStepProps {\n  step: TimelineStep\n  isLast: boolean\n  compact?: boolean\n}\n\ninterface TimelineStep {\n  status: string\n  label: string\n  description: string\n  hasEvent: boolean\n  isCurrent: boolean\n  isCompleted: boolean\n  isPending: boolean\n  event?: TrackingEvent\n}\n\n// =====================================================\n// CONFIGURACIÓN DE ESTADOS\n// =====================================================\n\nconst statusConfig = {\n  pending: {\n    icon: Clock,\n    color: 'text-gray-500',\n    bgColor: 'bg-gray-100',\n    borderColor: 'border-gray-300',\n  },\n  confirmed: {\n    icon: CheckCircle,\n    color: 'text-blue-600',\n    bgColor: 'bg-blue-100',\n    borderColor: 'border-blue-300',\n  },\n  picked_up: {\n    icon: Package,\n    color: 'text-yellow-600',\n    bgColor: 'bg-yellow-100',\n    borderColor: 'border-yellow-300',\n  },\n  in_transit: {\n    icon: Truck,\n    color: 'text-orange-600',\n    bgColor: 'bg-orange-100',\n    borderColor: 'border-orange-300',\n  },\n  out_for_delivery: {\n    icon: Navigation,\n    color: 'text-purple-600',\n    bgColor: 'bg-purple-100',\n    borderColor: 'border-purple-300',\n  },\n  delivered: {\n    icon: CheckCircle,\n    color: 'text-green-600',\n    bgColor: 'bg-green-100',\n    borderColor: 'border-green-300',\n  },\n  exception: {\n    icon: AlertTriangle,\n    color: 'text-red-600',\n    bgColor: 'bg-red-100',\n    borderColor: 'border-red-300',\n  },\n  cancelled: {\n    icon: AlertTriangle,\n    color: 'text-gray-600',\n    bgColor: 'bg-gray-100',\n    borderColor: 'border-gray-300',\n  },\n  returned: {\n    icon: Package,\n    color: 'text-red-600',\n    bgColor: 'bg-red-100',\n    borderColor: 'border-red-300',\n  },\n}\n\n// =====================================================\n// COMPONENTE PRINCIPAL\n// =====================================================\n\nexport function TrackingTimeline({\n  shipmentId,\n  realTime = false,\n  compact = false,\n  showProgress = true,\n  className,\n}: TrackingTimelineProps) {\n  const { events, timelineStates, shipment, currentStatus, lastEvent, isLoading, error, progress } =\n    useTrackingTimeline(shipmentId)\n\n  const { isRealTimeEnabled, lastUpdate, enableRealTime, disableRealTime, forceRefresh } =\n    useRealTimeTracking(shipmentId)\n\n  // Auto-enable real time if prop is true\n  useEffect(() => {\n    if (realTime && !isRealTimeEnabled) {\n      enableRealTime()\n    }\n  }, [realTime, isRealTimeEnabled, enableRealTime])\n\n  if (isLoading) {\n    return <TrackingTimelineSkeleton compact={compact} />\n  }\n\n  if (error) {\n    return (\n      <Card className={className}>\n        <CardContent className='p-6'>\n          <div className='flex flex-col items-center gap-4'>\n            <AlertTriangle className='w-8 h-8 text-red-500' />\n            <div className='text-center'>\n              <h3 className='font-semibold'>Error al cargar tracking</h3>\n              <p className='text-sm text-muted-foreground'>{error.message}</p>\n            </div>\n            <Button onClick={forceRefresh} variant='outline' size='sm'>\n              <RefreshCw className='w-4 h-4 mr-2' />\n              Reintentar\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n    )\n  }\n\n  if (!shipment || !timelineStates) {\n    return null\n  }\n\n  return (\n    <Card className={className}>\n      <CardHeader className={compact ? 'pb-3' : undefined}>\n        <div className='flex items-center justify-between'>\n          <div>\n            <CardTitle className={cn('flex items-center gap-2', compact ? 'text-base' : 'text-lg')}>\n              <MapPin className='w-5 h-5' />\n              Tracking: {shipment.shipment_number}\n            </CardTitle>\n            <CardDescription className={compact ? 'text-xs' : undefined}>\n              {shipment.carrier?.name || 'Sin courier asignado'}\n              {shipment.tracking_number && ` • ${shipment.tracking_number}`}\n            </CardDescription>\n          </div>\n\n          <div className='flex items-center gap-2'>\n            {lastUpdate && (\n              <span className='text-xs text-muted-foreground'>\n                Actualizado {formatRelativeTime(lastUpdate.toISOString())}\n              </span>\n            )}\n\n            <Button\n              variant='outline'\n              size='sm'\n              onClick={isRealTimeEnabled ? disableRealTime : enableRealTime}\n              className={cn(\n                'flex items-center gap-1',\n                isRealTimeEnabled && 'bg-green-50 border-green-200 text-green-700'\n              )}\n            >\n              <Eye className='w-3 h-3' />\n              {isRealTimeEnabled ? 'Tiempo Real' : 'Activar TR'}\n            </Button>\n\n            <Button variant='ghost' size='sm' onClick={forceRefresh}>\n              <RefreshCw className='w-4 h-4' />\n            </Button>\n          </div>\n        </div>\n\n        {/* Progress bar */}\n        {showProgress && progress && (\n          <div className='space-y-2'>\n            <div className='flex justify-between text-sm'>\n              <span>Progreso del envío</span>\n              <span>{progress.percentage.toFixed(0)}%</span>\n            </div>\n            <Progress value={progress.percentage} className='h-2' />\n            <div className='text-xs text-muted-foreground'>\n              {progress.completed} de {progress.total} etapas completadas\n            </div>\n          </div>\n        )}\n      </CardHeader>\n\n      <CardContent className={compact ? 'px-4 pb-4' : undefined}>\n        <div className='space-y-6'>\n          {/* Timeline principal */}\n          <div className='space-y-4'>\n            {timelineStates.map((step, index) => (\n              <TimelineStep\n                key={step.status}\n                step={step}\n                isLast={index === timelineStates.length - 1}\n                compact={compact}\n              />\n            ))}\n          </div>\n\n          {/* Eventos detallados */}\n          {!compact && events && events.length > 0 && (\n            <>\n              <Separator />\n              <div className='space-y-3'>\n                <h4 className='font-semibold text-sm'>Historial Detallado</h4>\n                <ScrollArea className='h-48'>\n                  <div className='space-y-3'>\n                    {events.map(event => (\n                      <EventCard key={event.id} event={event} />\n                    ))}\n                  </div>\n                </ScrollArea>\n              </div>\n            </>\n          )}\n\n          {/* Información del envío */}\n          {!compact && (\n            <>\n              <Separator />\n              <div className='grid grid-cols-1 md:grid-cols-2 gap-4 text-sm'>\n                <div className='space-y-2'>\n                  <div className='flex items-center gap-2'>\n                    <Calendar className='w-4 h-4 text-muted-foreground' />\n                    <span className='font-medium'>Creado:</span>\n                    <span>{formatDate(shipment.created_at)}</span>\n                  </div>\n\n                  {shipment.estimated_delivery_date && (\n                    <div className='flex items-center gap-2'>\n                      <Clock className='w-4 h-4 text-muted-foreground' />\n                      <span className='font-medium'>Entrega estimada:</span>\n                      <span>{formatDate(shipment.estimated_delivery_date)}</span>\n                    </div>\n                  )}\n                </div>\n\n                <div className='space-y-2'>\n                  <div className='flex items-center gap-2'>\n                    <Building className='w-4 h-4 text-muted-foreground' />\n                    <span className='font-medium'>Destino:</span>\n                    <span>\n                      {shipment.recipient_city || 'N/A'}, {shipment.recipient_country || 'N/A'}\n                    </span>\n                  </div>\n\n                  {shipment.package_weight_kg && (\n                    <div className='flex items-center gap-2'>\n                      <Package className='w-4 h-4 text-muted-foreground' />\n                      <span className='font-medium'>Peso:</span>\n                      <span>{shipment.package_weight_kg} kg</span>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n\n// =====================================================\n// COMPONENTE TIMELINE STEP\n// =====================================================\n\nfunction TimelineStep({ step, isLast, compact }: TimelineStepProps) {\n  const config = statusConfig[step.status as keyof typeof statusConfig] || statusConfig.pending\n  const Icon = config.icon\n\n  return (\n    <div className='flex items-start gap-3'>\n      {/* Icono y línea */}\n      <div className='flex flex-col items-center'>\n        <div\n          className={cn(\n            'flex items-center justify-center rounded-full border-2',\n            compact ? 'w-8 h-8' : 'w-10 h-10',\n            step.isCompleted && 'bg-green-100 border-green-300',\n            step.isCurrent && config.bgColor + ' ' + config.borderColor,\n            step.isPending && 'bg-gray-50 border-gray-200'\n          )}\n        >\n          <Icon\n            className={cn(\n              compact ? 'w-4 h-4' : 'w-5 h-5',\n              step.isCompleted && 'text-green-600',\n              step.isCurrent && config.color,\n              step.isPending && 'text-gray-400'\n            )}\n          />\n        </div>\n\n        {!isLast && (\n          <div\n            className={cn(\n              'w-0.5 mt-2',\n              compact ? 'h-8' : 'h-12',\n              step.isCompleted ? 'bg-green-300' : 'bg-gray-200'\n            )}\n          />\n        )}\n      </div>\n\n      {/* Contenido */}\n      <div className='flex-1 min-w-0'>\n        <div className='flex items-center gap-2 mb-1'>\n          <h4\n            className={cn(\n              'font-medium',\n              compact ? 'text-sm' : 'text-base',\n              step.isCompleted && 'text-green-800',\n              step.isCurrent && 'text-gray-900',\n              step.isPending && 'text-gray-500'\n            )}\n          >\n            {step.label}\n          </h4>\n\n          {step.isCurrent && (\n            <Badge variant='secondary' className='text-xs'>\n              Actual\n            </Badge>\n          )}\n\n          {step.isCompleted && (\n            <Badge variant='default' className='text-xs bg-green-100 text-green-800'>\n              Completado\n            </Badge>\n          )}\n        </div>\n\n        <p className={cn('text-muted-foreground', compact ? 'text-xs' : 'text-sm')}>\n          {step.description}\n        </p>\n\n        {step.event && (\n          <div className={cn('mt-2 space-y-1', compact ? 'text-xs' : 'text-sm')}>\n            <div className='flex items-center gap-2 text-muted-foreground'>\n              <Clock className='w-3 h-3' />\n              <span>\n                {formatDate(step.event.occurred_at)} a las {formatTime(step.event.occurred_at)}\n              </span>\n            </div>\n\n            {step.event.location && (\n              <div className='flex items-center gap-2 text-muted-foreground'>\n                <MapPin className='w-3 h-3' />\n                <span>{step.event.location}</span>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\n// =====================================================\n// COMPONENTE EVENT CARD\n// =====================================================\n\nfunction EventCard({ event }: { event: TrackingEvent }) {\n  const config = statusConfig[event.status as keyof typeof statusConfig] || statusConfig.pending\n  const Icon = config.icon\n\n  return (\n    <div className='flex items-start gap-3 p-3 rounded-lg border bg-card'>\n      <div className={cn('flex items-center justify-center w-8 h-8 rounded-full', config.bgColor)}>\n        <Icon className={cn('w-4 h-4', config.color)} />\n      </div>\n\n      <div className='flex-1 min-w-0'>\n        <div className='flex items-center justify-between mb-1'>\n          <h5 className='font-medium text-sm'>{event.description}</h5>\n          <time className='text-xs text-muted-foreground'>{formatTime(event.occurred_at)}</time>\n        </div>\n\n        {event.location && (\n          <div className='flex items-center gap-1 text-xs text-muted-foreground'>\n            <MapPin className='w-3 h-3' />\n            <span>{event.location}</span>\n          </div>\n        )}\n\n        <div className='text-xs text-muted-foreground mt-1'>{formatDate(event.occurred_at)}</div>\n      </div>\n    </div>\n  )\n}\n\n// =====================================================\n// COMPONENTE SKELETON\n// =====================================================\n\nfunction TrackingTimelineSkeleton({ compact }: { compact?: boolean }) {\n  return (\n    <Card>\n      <CardHeader className={compact ? 'pb-3' : undefined}>\n        <div className='space-y-2'>\n          <div className='h-6 w-48 bg-gray-200 rounded animate-pulse' />\n          <div className='h-4 w-32 bg-gray-200 rounded animate-pulse' />\n        </div>\n      </CardHeader>\n      <CardContent>\n        <div className='space-y-4'>\n          {[...Array(5)].map((_, i) => (\n            <div key={i} className='flex items-start gap-3'>\n              <div\n                className={cn(\n                  'rounded-full bg-gray-200 animate-pulse',\n                  compact ? 'w-8 h-8' : 'w-10 h-10'\n                )}\n              />\n              <div className='flex-1 space-y-2'>\n                <div className='h-4 w-24 bg-gray-200 rounded animate-pulse' />\n                <div className='h-3 w-48 bg-gray-200 rounded animate-pulse' />\n              </div>\n            </div>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n"],"names":["TrackingTimeline","statusConfig","pending","icon","Clock","color","bgColor","borderColor","confirmed","CheckCircle","picked_up","Package","in_transit","Truck","out_for_delivery","Navigation","delivered","exception","AlertTriangle","cancelled","returned","shipmentId","realTime","compact","showProgress","className","events","timelineStates","shipment","currentStatus","lastEvent","isLoading","error","progress","useTrackingTimeline","isRealTimeEnabled","lastUpdate","enableRealTime","disableRealTime","forceRefresh","useRealTimeTracking","useEffect","TrackingTimelineSkeleton","Card","CardContent","div","h3","p","message","Button","onClick","variant","size","RefreshCw","CardHeader","undefined","CardTitle","cn","MapPin","shipment_number","CardDescription","carrier","name","tracking_number","span","formatRelativeTime","toISOString","Eye","percentage","toFixed","Progress","value","completed","total","map","step","index","TimelineStep","isLast","length","status","Separator","h4","ScrollArea","event","EventCard","id","Calendar","formatDate","created_at","estimated_delivery_date","Building","recipient_city","recipient_country","package_weight_kg","config","Icon","isCompleted","isCurrent","isPending","label","Badge","description","occurred_at","formatTime","location","h5","time","Array","_","i"],"mappings":"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"}