{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\utils\\consolidated-utils.ts"],"sourcesContent":["// =====================================================\r\n// UTILIDADES CONSOLIDADAS - PINTEYA E-COMMERCE\r\n// Descripción: Funciones unificadas de formateo, validación y utilidades\r\n// Basado en: Intl API + Zod + patrones enterprise\r\n// =====================================================\r\n\r\nimport { z } from 'zod';\r\n\r\n// =====================================================\r\n// FORMATEO DE FECHAS - VERSIÓN CONSOLIDADA\r\n// =====================================================\r\n\r\nexport function formatDate(\r\n  date: string | Date, \r\n  options?: Intl.DateTimeFormatOptions | string\r\n): string {\r\n  try {\r\n    const dateObj = typeof date === 'string' ? new Date(date) : date;\r\n    \r\n    if (isNaN(dateObj.getTime())) {\r\n      return 'Fecha inválida';\r\n    }\r\n\r\n    // Si options es un string (patrón legacy), convertir a formato nativo\r\n    if (typeof options === 'string') {\r\n      const day = dateObj.getDate().toString().padStart(2, '0');\r\n      const month = (dateObj.getMonth() + 1).toString().padStart(2, '0');\r\n      const year = dateObj.getFullYear();\r\n      const hours = dateObj.getHours().toString().padStart(2, '0');\r\n      const minutes = dateObj.getMinutes().toString().padStart(2, '0');\r\n\r\n      if (options === 'dd/MM/yyyy hh:mm') {\r\n        return `${day}/${month}/${year} ${hours}:${minutes}`;\r\n      }\r\n      return `${day}/${month}/${year}`;\r\n    }\r\n\r\n    // Usar Intl.DateTimeFormat para mejor internacionalización\r\n    const defaultOptions: Intl.DateTimeFormatOptions = {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric',\r\n      ...options\r\n    };\r\n    \r\n    return dateObj.toLocaleDateString('es-AR', defaultOptions);\r\n  } catch (error) {\r\n    console.error('Error formatting date:', error);\r\n    return 'Fecha inválida';\r\n  }\r\n}\r\n\r\nexport function formatDateTime(date: string | Date): string {\r\n  return formatDate(date, {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    hour: '2-digit',\r\n    minute: '2-digit'\r\n  });\r\n}\r\n\r\nexport function formatDateShort(date: string | Date): string {\r\n  return formatDate(date, {\r\n    month: 'short',\r\n    day: 'numeric'\r\n  });\r\n}\r\n\r\nexport function formatTimeAgo(date: string | Date): string {\r\n  try {\r\n    const dateObj = typeof date === 'string' ? new Date(date) : date;\r\n    \r\n    if (isNaN(dateObj.getTime())) {\r\n      return 'Fecha inválida';\r\n    }\r\n\r\n    const now = new Date();\r\n    const diffInSeconds = Math.floor((now.getTime() - dateObj.getTime()) / 1000);\r\n\r\n    if (diffInSeconds < 60) {\r\n      return 'hace menos de un minuto';\r\n    }\r\n\r\n    const diffInMinutes = Math.floor(diffInSeconds / 60);\r\n    if (diffInMinutes < 60) {\r\n      return `hace ${diffInMinutes} minuto${diffInMinutes > 1 ? 's' : ''}`;\r\n    }\r\n\r\n    const diffInHours = Math.floor(diffInMinutes / 60);\r\n    if (diffInHours < 24) {\r\n      return `hace ${diffInHours} hora${diffInHours > 1 ? 's' : ''}`;\r\n    }\r\n\r\n    const diffInDays = Math.floor(diffInHours / 24);\r\n    if (diffInDays < 7) {\r\n      return `hace ${diffInDays} día${diffInDays > 1 ? 's' : ''}`;\r\n    }\r\n\r\n    const diffInWeeks = Math.floor(diffInDays / 7);\r\n    if (diffInWeeks < 4) {\r\n      return `hace ${diffInWeeks} semana${diffInWeeks > 1 ? 's' : ''}`;\r\n    }\r\n\r\n    return formatDate(dateObj, { month: 'short', day: 'numeric', year: 'numeric' });\r\n  } catch (error) {\r\n    console.error('Error formatting time ago:', error);\r\n    return 'Fecha inválida';\r\n  }\r\n}\r\n\r\n// Alias para compatibilidad\r\nexport const formatDateRelative = formatTimeAgo;\r\nexport const formatRelativeTime = formatTimeAgo;\r\n\r\n// =====================================================\r\n// FORMATEO DE MONEDAS - VERSIÓN CONSOLIDADA\r\n// =====================================================\r\n\r\nexport function formatCurrency(\r\n  amount: number | string | null | undefined,\r\n  currency: string = 'ARS',\r\n  options?: Intl.NumberFormatOptions\r\n): string {\r\n  try {\r\n    // Normalizar el amount a número\r\n    let safeAmount: number;\r\n\r\n    if (typeof amount === 'number' && !isNaN(amount) && isFinite(amount)) {\r\n      safeAmount = amount;\r\n    } else if (typeof amount === 'string') {\r\n      const parsed = parseFloat(amount);\r\n      if (!isNaN(parsed) && isFinite(parsed)) {\r\n        safeAmount = parsed;\r\n      } else {\r\n        safeAmount = 0;\r\n      }\r\n    } else {\r\n      safeAmount = 0;\r\n    }\r\n\r\n    const defaultOptions: Intl.NumberFormatOptions = {\r\n      style: 'currency',\r\n      currency: currency.toUpperCase(),\r\n      minimumFractionDigits: 0,\r\n      maximumFractionDigits: 2,\r\n      ...options\r\n    };\r\n\r\n    return new Intl.NumberFormat('es-AR', defaultOptions).format(safeAmount);\r\n  } catch (error) {\r\n    console.error('Error formatting currency:', error);\r\n    return `$${amount || 0}`;\r\n  }\r\n}\r\n\r\nexport function formatPrice(amount: number | string): string {\r\n  return formatCurrency(amount);\r\n}\r\n\r\nexport function formatNumber(\r\n  value: number | string,\r\n  options?: Intl.NumberFormatOptions\r\n): string {\r\n  try {\r\n    const numValue = typeof value === 'string' ? parseFloat(value) : value;\r\n    \r\n    if (isNaN(numValue)) {\r\n      return '0';\r\n    }\r\n\r\n    return new Intl.NumberFormat('es-AR', options).format(numValue);\r\n  } catch (error) {\r\n    console.error('Error formatting number:', error);\r\n    return String(value || 0);\r\n  }\r\n}\r\n\r\nexport function formatPercentage(value: number, decimals: number = 1): string {\r\n  try {\r\n    return new Intl.NumberFormat('es-AR', {\r\n      style: 'percent',\r\n      minimumFractionDigits: decimals,\r\n      maximumFractionDigits: decimals\r\n    }).format(value / 100);\r\n  } catch (error) {\r\n    console.error('Error formatting percentage:', error);\r\n    return `${value}%`;\r\n  }\r\n}\r\n\r\n// =====================================================\r\n// VALIDACIÓN - VERSIÓN CONSOLIDADA\r\n// =====================================================\r\n\r\nexport function validateEmail(email: string): boolean {\r\n  if (!email || typeof email !== 'string') {\r\n    return false;\r\n  }\r\n  \r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  return emailRegex.test(email.trim());\r\n}\r\n\r\nexport function isValidEmail(email: string): boolean {\r\n  return validateEmail(email);\r\n}\r\n\r\nexport function validatePhoneNumber(phone: string): boolean {\r\n  if (!phone || typeof phone !== 'string') {\r\n    return false;\r\n  }\r\n\r\n  // Formato argentino: +54 9 351 123 4567, +54 351 123-4567, 351 123 4567, etc.\r\n  const cleanPhone = phone.replace(/[\\s\\-\\(\\)]/g, '');\r\n  const phoneRegex = /^(\\+54(9)?)?\\d{10}$|^\\d{10}$/;\r\n\r\n  return phoneRegex.test(cleanPhone) && cleanPhone.length >= 10;\r\n}\r\n\r\nexport function validateDNI(dni: string): boolean {\r\n  if (!dni || typeof dni !== 'string') {\r\n    return false;\r\n  }\r\n\r\n  const cleanDNI = dni.replace(/[\\s\\-\\.]/g, '');\r\n  const dniRegex = /^\\d{8}$/;\r\n  const cuitRegex = /^\\d{11}$/;\r\n\r\n  return dniRegex.test(cleanDNI) || cuitRegex.test(cleanDNI);\r\n}\r\n\r\n// =====================================================\r\n// UTILIDADES DE TEXTO\r\n// =====================================================\r\n\r\nexport function sanitizeInput(input: string): string {\r\n  if (!input || typeof input !== 'string') {\r\n    return '';\r\n  }\r\n  \r\n  return input\r\n    .trim()\r\n    .replace(/[<>]/g, '') // Remover caracteres peligrosos básicos\r\n    .substring(0, 1000); // Limitar longitud\r\n}\r\n\r\nexport function sanitizeName(name: string): string {\r\n  if (!name || typeof name !== 'string') {\r\n    return '';\r\n  }\r\n  \r\n  return name\r\n    .trim()\r\n    .replace(/[^a-zA-ZáéíóúÁÉÍÓÚñÑ\\s]/g, '') // Solo letras y espacios\r\n    .replace(/\\s+/g, ' ') // Normalizar espacios\r\n    .substring(0, 100); // Limitar longitud\r\n}\r\n\r\nexport function slugify(text: string): string {\r\n  if (!text || typeof text !== 'string') {\r\n    return '';\r\n  }\r\n  \r\n  return text\r\n    .toLowerCase()\r\n    .trim()\r\n    .replace(/[áàäâ]/g, 'a')\r\n    .replace(/[éèëê]/g, 'e')\r\n    .replace(/[íìïî]/g, 'i')\r\n    .replace(/[óòöô]/g, 'o')\r\n    .replace(/[úùüû]/g, 'u')\r\n    .replace(/ñ/g, 'n')\r\n    .replace(/[^a-z0-9\\s-]/g, '')\r\n    .replace(/\\s+/g, '-')\r\n    .replace(/-+/g, '-')\r\n    .replace(/^-|-$/g, '');\r\n}\r\n\r\n// =====================================================\r\n// UTILIDADES DE PERFORMANCE\r\n// =====================================================\r\n\r\nexport function debounce<T extends (...args: any[]) => any>(\r\n  func: T,\r\n  delay: number\r\n): (...args: Parameters<T>) => void {\r\n  let timeoutId: NodeJS.Timeout;\r\n  \r\n  return (...args: Parameters<T>) => {\r\n    clearTimeout(timeoutId);\r\n    timeoutId = setTimeout(() => func(...args), delay);\r\n  };\r\n}\r\n\r\nexport function throttle<T extends (...args: any[]) => any>(\r\n  func: T,\r\n  limit: number\r\n): (...args: Parameters<T>) => void {\r\n  let inThrottle: boolean;\r\n  \r\n  return (...args: Parameters<T>) => {\r\n    if (!inThrottle) {\r\n      func(...args);\r\n      inThrottle = true;\r\n      setTimeout(() => inThrottle = false, limit);\r\n    }\r\n  };\r\n}\r\n\r\n// =====================================================\r\n// SCHEMAS DE VALIDACIÓN ZOD\r\n// =====================================================\r\n\r\nexport const addressSchema = z.object({\r\n  street: z.string().min(1, 'La calle es requerida'),\r\n  number: z.string().min(1, 'El número es requerido'),\r\n  apartment: z.string().optional(),\r\n  neighborhood: z.string().min(1, 'El barrio es requerido'),\r\n  city: z.string().min(1, 'La ciudad es requerida'),\r\n  state: z.string().min(1, 'La provincia es requerida'),\r\n  postal_code: z.string().min(4, 'El código postal debe tener al menos 4 dígitos'),\r\n  country: z.string().default('AR'),\r\n  latitude: z.number().optional(),\r\n  longitude: z.number().optional(),\r\n  reference: z.string().optional()\r\n});\r\n\r\nexport const emailSchema = z.string().email('Email inválido');\r\nexport const phoneSchema = z.string().refine(validatePhoneNumber, 'Teléfono inválido');\r\nexport const dniSchema = z.string().refine(validateDNI, 'DNI/CUIT inválido');\r\n\r\n// =====================================================\r\n// FORMATEO DE ESTADOS Y BADGES\r\n// =====================================================\r\n\r\nexport function formatShipmentStatus(status: string): {\r\n  label: string;\r\n  color: 'default' | 'secondary' | 'destructive' | 'outline';\r\n} {\r\n  const statusMap: Record<string, { label: string; color: any }> = {\r\n    pending: { label: 'Pendiente', color: 'secondary' },\r\n    confirmed: { label: 'Confirmado', color: 'default' },\r\n    picked_up: { label: 'Retirado', color: 'default' },\r\n    in_transit: { label: 'En Tránsito', color: 'default' },\r\n    out_for_delivery: { label: 'En Reparto', color: 'default' },\r\n    delivered: { label: 'Entregado', color: 'default' },\r\n    exception: { label: 'Excepción', color: 'destructive' },\r\n    cancelled: { label: 'Cancelado', color: 'destructive' },\r\n    returned: { label: 'Devuelto', color: 'outline' }\r\n  };\r\n  \r\n  return statusMap[status] || { label: status, color: 'outline' };\r\n}\r\n\r\nexport function formatOrderStatus(status: string): {\r\n  label: string;\r\n  color: 'default' | 'secondary' | 'destructive' | 'outline';\r\n} {\r\n  const statusMap: Record<string, { label: string; color: any }> = {\r\n    pending: { label: 'Pendiente', color: 'secondary' },\r\n    confirmed: { label: 'Confirmado', color: 'default' },\r\n    processing: { label: 'Procesando', color: 'default' },\r\n    shipped: { label: 'Enviado', color: 'default' },\r\n    delivered: { label: 'Entregado', color: 'default' },\r\n    cancelled: { label: 'Cancelado', color: 'destructive' },\r\n    refunded: { label: 'Reembolsado', color: 'outline' },\r\n    returned: { label: 'Devuelto', color: 'outline' }\r\n  };\r\n  \r\n  return statusMap[status] || { label: status, color: 'outline' };\r\n}\r\n\r\n// =====================================================\r\n// TIPOS TYPESCRIPT\r\n// =====================================================\r\n\r\nexport type Address = z.infer<typeof addressSchema>;\r\nexport type FormatDateOptions = Intl.DateTimeFormatOptions | string;\r\nexport type FormatCurrencyOptions = Intl.NumberFormatOptions;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["addressSchema","debounce","dniSchema","emailSchema","formatCurrency","formatDate","formatDateRelative","formatDateShort","formatDateTime","formatNumber","formatOrderStatus","formatPercentage","formatPrice","formatRelativeTime","formatShipmentStatus","formatTimeAgo","isValidEmail","phoneSchema","sanitizeInput","sanitizeName","slugify","throttle","validateDNI","validateEmail","validatePhoneNumber","date","options","dateObj","Date","isNaN","getTime","day","getDate","toString","padStart","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","defaultOptions","toLocaleDateString","error","console","hour","minute","now","diffInSeconds","Math","floor","diffInMinutes","diffInHours","diffInDays","diffInWeeks","amount","currency","safeAmount","isFinite","parsed","parseFloat","style","toUpperCase","minimumFractionDigits","maximumFractionDigits","Intl","NumberFormat","format","value","numValue","String","decimals","email","emailRegex","test","trim","phone","cleanPhone","replace","phoneRegex","length","dni","cleanDNI","dniRegex","cuitRegex","input","substring","name","text","toLowerCase","func","delay","timeoutId","args","clearTimeout","setTimeout","limit","inThrottle","z","object","street","string","min","number","apartment","optional","neighborhood","city","state","postal_code","country","default","latitude","longitude","reference","refine","status","statusMap","pending","label","color","confirmed","picked_up","in_transit","out_for_delivery","delivered","exception","cancelled","returned","processing","shipped","refunded"],"mappings":"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"}