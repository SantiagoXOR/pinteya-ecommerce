{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\ui\\__tests__\\cart-summary.test.tsx"],"sourcesContent":["import React from 'react'\nimport { render, screen, fireEvent } from '@testing-library/react'\nimport '@testing-library/jest-dom'\nimport { CartSummary } from '../cart-summary'\n\ninterface PriceDisplayProps {\n  amount: number\n  originalAmount?: number\n  className?: string\n}\n\ninterface ShippingInfoProps {\n  options: string[]\n  selectedOption: string\n}\n\ninterface EnhancedProductCardProps {\n  title: string\n  context: string\n}\n\n// Mock de los componentes del Design System\njest.mock('../price-display', () => ({\n  PriceDisplay: ({ amount, originalAmount, className }: PriceDisplayProps) => (\n    <div data-testid='price-display' className={className}>\n      ${(amount / 100).toFixed(2)}\n      {originalAmount && ` (was $${(originalAmount / 100).toFixed(2)})`}\n    </div>\n  ),\n}))\n\njest.mock('../shipping-info', () => ({\n  ShippingInfo: ({ options, selectedOption }: ShippingInfoProps) => (\n    <div data-testid='shipping-info'>Shipping: {selectedOption}</div>\n  ),\n}))\n\njest.mock('../product-card-enhanced', () => ({\n  EnhancedProductCard: ({ title, context }: EnhancedProductCardProps) => (\n    <div data-testid='enhanced-product-card'>\n      {title} - {context}\n    </div>\n  ),\n}))\n\nconst mockCartItems = [\n  {\n    id: 1,\n    title: 'Pintura Sherwin Williams 4L',\n    price: 10000,\n    discountedPrice: 8500,\n    quantity: 2,\n    image: '/test-image.jpg',\n    category: 'pinturas',\n  },\n  {\n    id: 2,\n    title: 'Esmalte Petrilac 1L',\n    price: 2300,\n    discountedPrice: 2300,\n    quantity: 1,\n    category: 'esmaltes',\n  },\n]\n\ndescribe('CartSummary', () => {\n  const defaultProps = {\n    cartItems: mockCartItems,\n    totalPrice: 19300,\n    shippingCost: 2500,\n    discount: 0,\n    finalTotal: 21800,\n  }\n\n  it('renders cart summary with items', () => {\n    render(<CartSummary {...defaultProps} />)\n\n    expect(screen.getByText('Resumen del Pedido')).toBeInTheDocument()\n    expect(screen.getByText('2 items')).toBeInTheDocument()\n    expect(screen.getByText('Pintura Sherwin Williams 4L')).toBeInTheDocument()\n    expect(screen.getByText('Esmalte Petrilac 1L')).toBeInTheDocument()\n  })\n\n  it('shows empty cart message when no items', () => {\n    render(<CartSummary {...defaultProps} cartItems={[]} />)\n\n    expect(screen.getByText('No hay productos en el carrito')).toBeInTheDocument()\n  })\n\n  it('displays price calculations correctly', () => {\n    render(<CartSummary {...defaultProps} />)\n\n    expect(screen.getByText('Subtotal')).toBeInTheDocument()\n    expect(screen.getByText('Envío')).toBeInTheDocument()\n    expect(screen.getByText('Total')).toBeInTheDocument()\n  })\n\n  it('shows free shipping badge when applicable', () => {\n    const propsWithFreeShipping = {\n      ...defaultProps,\n      totalPrice: 60000,\n      shippingCost: 0,\n    }\n\n    render(<CartSummary {...propsWithFreeShipping} />)\n\n    // Buscar específicamente el badge de envío gratis\n    expect(screen.getByText('Gratis', { selector: '.bg-success' })).toBeInTheDocument()\n  })\n\n  it('displays discount when applied', () => {\n    const propsWithDiscount = {\n      ...defaultProps,\n      discount: 1000,\n      appliedCoupon: {\n        code: 'PROMO10',\n        discount: 1000,\n        type: 'fixed' as const,\n      },\n    }\n\n    render(<CartSummary {...propsWithDiscount} />)\n\n    expect(screen.getByText('Descuento')).toBeInTheDocument()\n    expect(screen.getByText('PROMO10')).toBeInTheDocument()\n  })\n\n  it('calls onCheckout when checkout button is clicked', () => {\n    const mockOnCheckout = jest.fn()\n\n    render(<CartSummary {...defaultProps} onCheckout={mockOnCheckout} />)\n\n    const checkoutButton = screen.getByText('Proceder al Pago')\n    fireEvent.click(checkoutButton)\n\n    expect(mockOnCheckout).toHaveBeenCalledTimes(1)\n  })\n\n  it('renders in compact variant', () => {\n    render(<CartSummary {...defaultProps} variant='compact' />)\n\n    // En variante compact, debería tener altura máxima reducida\n    const itemsContainer = screen.getByText('Pintura Sherwin Williams 4L').closest('.max-h-40')\n    expect(itemsContainer).toBeInTheDocument()\n  })\n\n  it('shows product cards when enabled', () => {\n    render(<CartSummary {...defaultProps} showProductCards={true} productCardContext='checkout' />)\n\n    expect(screen.getAllByTestId('enhanced-product-card')).toHaveLength(2)\n    expect(screen.getByText('Pintura Sherwin Williams 4L - checkout')).toBeInTheDocument()\n  })\n\n  it('shows shipping details in detailed variant', () => {\n    render(<CartSummary {...defaultProps} variant='detailed' showShippingDetails={true} />)\n\n    expect(screen.getByTestId('shipping-info')).toBeInTheDocument()\n  })\n\n  it('disables checkout button when cart is empty', () => {\n    const mockOnCheckout = jest.fn()\n\n    render(<CartSummary {...defaultProps} cartItems={[]} onCheckout={mockOnCheckout} />)\n\n    // El botón de checkout no debería aparecer cuando el carrito está vacío\n    expect(screen.queryByText('Proceder al Pago')).not.toBeInTheDocument()\n  })\n\n  it('calculates final total correctly when not provided', () => {\n    const propsWithoutFinalTotal = {\n      cartItems: mockCartItems,\n      totalPrice: 19300,\n      shippingCost: 2500,\n      discount: 1000,\n      // finalTotal no proporcionado\n    }\n\n    render(<CartSummary {...propsWithoutFinalTotal} />)\n\n    // Debería calcular: 19300 + 2500 - 1000 = 20800\n    expect(screen.getByText('Total')).toBeInTheDocument()\n  })\n\n  it('shows benefits section when not compact', () => {\n    render(<CartSummary {...defaultProps} variant='default' />)\n\n    expect(screen.getByText('Compra protegida')).toBeInTheDocument()\n    expect(screen.getByText('Tu dinero está protegido con MercadoPago')).toBeInTheDocument()\n  })\n\n  it('handles single item correctly', () => {\n    const singleItemProps = {\n      ...defaultProps,\n      cartItems: [mockCartItems[0]],\n    }\n\n    render(<CartSummary {...singleItemProps} />)\n\n    expect(screen.getByText('1 item')).toBeInTheDocument()\n  })\n})\n"],"names":["jest","mock","PriceDisplay","amount","originalAmount","className","div","data-testid","toFixed","ShippingInfo","options","selectedOption","EnhancedProductCard","title","context","mockCartItems","id","price","discountedPrice","quantity","image","category","describe","defaultProps","cartItems","totalPrice","shippingCost","discount","finalTotal","it","render","CartSummary","expect","screen","getByText","toBeInTheDocument","propsWithFreeShipping","selector","propsWithDiscount","appliedCoupon","code","type","mockOnCheckout","fn","onCheckout","checkoutButton","fireEvent","click","toHaveBeenCalledTimes","variant","itemsContainer","closest","showProductCards","productCardContext","getAllByTestId","toHaveLength","showShippingDetails","getByTestId","queryByText","not","propsWithoutFinalTotal","singleItemProps"],"mappings":"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"}