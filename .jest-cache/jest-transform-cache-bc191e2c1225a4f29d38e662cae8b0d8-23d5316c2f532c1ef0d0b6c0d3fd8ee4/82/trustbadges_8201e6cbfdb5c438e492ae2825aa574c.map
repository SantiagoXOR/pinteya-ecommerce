{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\ui\\trust-badges.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport {\r\n  Shield,\r\n  ShieldCheck,\r\n  Truck,\r\n  Clock,\r\n  Star,\r\n  Award,\r\n  Lock,\r\n  CreditCard,\r\n  Phone,\r\n  MapPin,\r\n  Zap,\r\n  MessageCircle\r\n} from \"lucide-react\";\r\n\r\nconst trustBadgeVariants = cva(\r\n  \"inline-flex items-center gap-2 rounded-lg font-medium transition-all duration-200\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        security: \"bg-green-50 text-green-700 border border-green-200 hover:bg-green-100\",\r\n        guarantee: \"bg-blue-50 text-blue-700 border border-blue-200 hover:bg-blue-100\",\r\n        shipping: \"bg-orange-50 text-orange-700 border border-orange-200 hover:bg-orange-100\",\r\n        quality: \"bg-purple-50 text-purple-700 border border-purple-200 hover:bg-purple-100\",\r\n        support: \"bg-teal-50 text-teal-700 border border-teal-200 hover:bg-teal-100\",\r\n        payment: \"bg-primary/10 text-primary border border-primary/20 hover:bg-primary/20\",\r\n      },\r\n      size: {\r\n        sm: \"px-2 py-1 text-xs\",\r\n        md: \"px-3 py-1.5 text-sm\",\r\n        lg: \"px-4 py-2 text-base\",\r\n      },\r\n      animation: {\r\n        none: \"\",\r\n        pulse: \"animate-pulse\",\r\n        bounce: \"animate-bounce\",\r\n        glow: \"animate-pulse shadow-lg\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"security\",\r\n      size: \"md\",\r\n      animation: \"none\",\r\n    },\r\n  }\r\n);\r\n\r\nexport interface TrustBadgeProps\r\n  extends React.HTMLAttributes<HTMLDivElement>,\r\n    VariantProps<typeof trustBadgeVariants> {\r\n  icon?: React.ReactNode;\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst TrustBadge = React.forwardRef<HTMLDivElement, TrustBadgeProps>(\r\n  ({ className, variant, size, animation, icon, children, ...props }, ref) => (\r\n    <div\r\n      ref={ref}\r\n      className={cn(trustBadgeVariants({ variant, size, animation }), className)}\r\n      {...props}\r\n    >\r\n      {icon}\r\n      {children}\r\n    </div>\r\n  )\r\n);\r\nTrustBadge.displayName = \"TrustBadge\";\r\n\r\n// Badges especializados para e-commerce de pinturería\r\n\r\ninterface SecurePurchaseBadgeProps extends Omit<TrustBadgeProps, 'children' | 'icon'> {\r\n  text?: string;\r\n}\r\n\r\nconst SecurePurchaseBadge = React.forwardRef<HTMLDivElement, SecurePurchaseBadgeProps>(\r\n  ({ text = \"Compra Protegida\", className, ...props }, ref) => (\r\n    <TrustBadge\r\n      ref={ref}\r\n      variant=\"security\"\r\n      icon={<ShieldCheck className=\"w-4 h-4\" />}\r\n      className={cn(\"\", className)}\r\n      {...props}\r\n    >\r\n      {text}\r\n    </TrustBadge>\r\n  )\r\n);\r\nSecurePurchaseBadge.displayName = \"SecurePurchaseBadge\";\r\n\r\ninterface MoneyBackBadgeProps extends Omit<TrustBadgeProps, 'children' | 'icon'> {\r\n  days?: number;\r\n}\r\n\r\nconst MoneyBackBadge = React.forwardRef<HTMLDivElement, MoneyBackBadgeProps>(\r\n  ({ days = 30, className, ...props }, ref) => (\r\n    <TrustBadge\r\n      ref={ref}\r\n      variant=\"guarantee\"\r\n      icon={<Shield className=\"w-4 h-4\" />}\r\n      className={cn(\"\", className)}\r\n      {...props}\r\n    >\r\n      {days} días de garantía\r\n    </TrustBadge>\r\n  )\r\n);\r\nMoneyBackBadge.displayName = \"MoneyBackBadge\";\r\n\r\ninterface FastShippingBadgeProps extends Omit<TrustBadgeProps, 'children' | 'icon'> {\r\n  hours?: number;\r\n  text?: string;\r\n}\r\n\r\nconst FastShippingBadge = React.forwardRef<HTMLDivElement, FastShippingBadgeProps>(\r\n  ({ hours = 24, text, className, ...props }, ref) => (\r\n    <TrustBadge\r\n      ref={ref}\r\n      variant=\"shipping\"\r\n      icon={<Truck className=\"w-4 h-4\" />}\r\n      className={cn(\"\", className)}\r\n      {...props}\r\n    >\r\n      {text || `Envío en ${hours}hs`}\r\n    </TrustBadge>\r\n  )\r\n);\r\nFastShippingBadge.displayName = \"FastShippingBadge\";\r\n\r\ninterface QualityBadgeProps extends Omit<TrustBadgeProps, 'children' | 'icon'> {\r\n  text?: string;\r\n  rating?: number;\r\n}\r\n\r\nconst QualityBadge = React.forwardRef<HTMLDivElement, QualityBadgeProps>(\r\n  ({ text = \"Calidad Premium\", rating, className, ...props }, ref) => {\r\n    // Validación segura del rating para prevenir errores de template literal\r\n    const safeRating = typeof rating === 'number' && rating > 0 ? rating : null;\r\n    const displayText = safeRating ? `${safeRating}★ ${text}` : text;\r\n\r\n    return (\r\n      <TrustBadge\r\n        ref={ref}\r\n        variant=\"quality\"\r\n        icon={safeRating ? <Star className=\"w-4 h-4 fill-current\" /> : <Award className=\"w-4 h-4\" />}\r\n        className={cn(\"\", className)}\r\n        {...props}\r\n      >\r\n        {displayText}\r\n      </TrustBadge>\r\n    );\r\n  }\r\n);\r\nQualityBadge.displayName = \"QualityBadge\";\r\n\r\ninterface SupportBadgeProps extends Omit<TrustBadgeProps, 'children' | 'icon'> {\r\n  type?: 'phone' | 'chat' | 'email';\r\n  hours?: string;\r\n}\r\n\r\nconst SupportBadge = React.forwardRef<HTMLDivElement, SupportBadgeProps>(\r\n  ({ type = 'phone', hours = '24/7', className, ...props }, ref) => {\r\n    const getIcon = () => {\r\n      switch (type) {\r\n        case 'phone': return <Phone className=\"w-4 h-4\" />;\r\n        case 'chat': return <MessageCircle className=\"w-4 h-4\" />;\r\n        case 'email': return <Clock className=\"w-4 h-4\" />;\r\n        default: return <Phone className=\"w-4 h-4\" />;\r\n      }\r\n    };\r\n\r\n    const getText = () => {\r\n      switch (type) {\r\n        case 'phone': return `Soporte ${hours}`;\r\n        case 'chat': return `Chat en vivo`;\r\n        case 'email': return `Respuesta ${hours}`;\r\n        default: return `Soporte ${hours}`;\r\n      }\r\n    };\r\n\r\n    return (\r\n      <TrustBadge\r\n        ref={ref}\r\n        variant=\"support\"\r\n        icon={getIcon()}\r\n        className={cn(\"\", className)}\r\n        {...props}\r\n      >\r\n        {getText()}\r\n      </TrustBadge>\r\n    );\r\n  }\r\n);\r\nSupportBadge.displayName = \"SupportBadge\";\r\n\r\ninterface PaymentSecurityBadgeProps extends Omit<TrustBadgeProps, 'children' | 'icon'> {\r\n  provider?: 'mercadopago' | 'ssl' | 'secure';\r\n}\r\n\r\nconst PaymentSecurityBadge = React.forwardRef<HTMLDivElement, PaymentSecurityBadgeProps>(\r\n  ({ provider = 'mercadopago', className, ...props }, ref) => {\r\n    const getContent = () => {\r\n      switch (provider) {\r\n        case 'mercadopago':\r\n          return {\r\n            icon: <CreditCard className=\"w-4 h-4\" />,\r\n            text: \"MercadoPago Seguro\"\r\n          };\r\n        case 'ssl':\r\n          return {\r\n            icon: <Lock className=\"w-4 h-4\" />,\r\n            text: \"SSL Certificado\"\r\n          };\r\n        case 'secure':\r\n          return {\r\n            icon: <ShieldCheck className=\"w-4 h-4\" />,\r\n            text: \"Pago 100% Seguro\"\r\n          };\r\n        default:\r\n          return {\r\n            icon: <CreditCard className=\"w-4 h-4\" />,\r\n            text: \"Pago Seguro\"\r\n          };\r\n      }\r\n    };\r\n\r\n    const { icon, text } = getContent();\r\n\r\n    return (\r\n      <TrustBadge\r\n        ref={ref}\r\n        variant=\"payment\"\r\n        icon={icon}\r\n        className={cn(\"\", className)}\r\n        {...props}\r\n      >\r\n        {text}\r\n      </TrustBadge>\r\n    );\r\n  }\r\n);\r\nPaymentSecurityBadge.displayName = \"PaymentSecurityBadge\";\r\n\r\ninterface LocalBusinessBadgeProps extends Omit<TrustBadgeProps, 'children' | 'icon'> {\r\n  city?: string;\r\n  years?: number;\r\n}\r\n\r\nconst LocalBusinessBadge = React.forwardRef<HTMLDivElement, LocalBusinessBadgeProps>(\r\n  ({ city = \"Córdoba\", years = 15, className, ...props }, ref) => (\r\n    <TrustBadge\r\n      ref={ref}\r\n      variant=\"quality\"\r\n      icon={<MapPin className=\"w-4 h-4\" />}\r\n      className={cn(\"\", className)}\r\n      {...props}\r\n    >\r\n      {years} años en {city}\r\n    </TrustBadge>\r\n  )\r\n);\r\nLocalBusinessBadge.displayName = \"LocalBusinessBadge\";\r\n\r\ninterface InstantDeliveryBadgeProps extends Omit<TrustBadgeProps, 'children' | 'icon'> {\r\n  text?: string;\r\n}\r\n\r\nconst InstantDeliveryBadge = React.forwardRef<HTMLDivElement, InstantDeliveryBadgeProps>(\r\n  ({ text = \"Entrega Inmediata\", className, ...props }, ref) => (\r\n    <TrustBadge\r\n      ref={ref}\r\n      variant=\"shipping\"\r\n      icon={<Zap className=\"w-4 h-4\" />}\r\n      animation=\"glow\"\r\n      className={cn(\"\", className)}\r\n      {...props}\r\n    >\r\n      {text}\r\n    </TrustBadge>\r\n  )\r\n);\r\nInstantDeliveryBadge.displayName = \"InstantDeliveryBadge\";\r\n\r\n// Componente combinado para mostrar múltiples badges de confianza\r\ninterface TrustBadgeGroupProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  badges?: ('secure' | 'guarantee' | 'shipping' | 'quality' | 'support' | 'payment' | 'local' | 'instant')[];\r\n  layout?: 'horizontal' | 'vertical' | 'grid';\r\n  size?: 'sm' | 'md' | 'lg';\r\n}\r\n\r\nconst TrustBadgeGroup = React.forwardRef<HTMLDivElement, TrustBadgeGroupProps>(\r\n  ({ \r\n    badges = ['secure', 'guarantee', 'shipping'], \r\n    layout = 'horizontal', \r\n    size = 'md',\r\n    className, \r\n    ...props \r\n  }, ref) => {\r\n    const layoutClasses = {\r\n      horizontal: \"flex flex-wrap gap-2\",\r\n      vertical: \"flex flex-col gap-2\",\r\n      grid: \"grid grid-cols-2 md:grid-cols-3 gap-2\"\r\n    };\r\n\r\n    const renderBadge = (badge: string) => {\r\n      const commonProps = { size };\r\n      \r\n      switch (badge) {\r\n        case 'secure':\r\n          return <SecurePurchaseBadge key={badge} {...commonProps} />;\r\n        case 'guarantee':\r\n          return <MoneyBackBadge key={badge} {...commonProps} />;\r\n        case 'shipping':\r\n          return <FastShippingBadge key={badge} {...commonProps} />;\r\n        case 'quality':\r\n          return <QualityBadge key={badge} {...commonProps} />;\r\n        case 'support':\r\n          return <SupportBadge key={badge} {...commonProps} />;\r\n        case 'payment':\r\n          return <PaymentSecurityBadge key={badge} {...commonProps} />;\r\n        case 'local':\r\n          return <LocalBusinessBadge key={badge} {...commonProps} />;\r\n        case 'instant':\r\n          return <InstantDeliveryBadge key={badge} {...commonProps} />;\r\n        default:\r\n          return null;\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        className={cn(layoutClasses[layout], className)}\r\n        {...props}\r\n      >\r\n        {badges.map(renderBadge)}\r\n      </div>\r\n    );\r\n  }\r\n);\r\nTrustBadgeGroup.displayName = \"TrustBadgeGroup\";\r\n\r\nexport {\r\n  TrustBadge,\r\n  SecurePurchaseBadge,\r\n  MoneyBackBadge,\r\n  FastShippingBadge,\r\n  QualityBadge,\r\n  SupportBadge,\r\n  PaymentSecurityBadge,\r\n  LocalBusinessBadge,\r\n  InstantDeliveryBadge,\r\n  TrustBadgeGroup,\r\n  trustBadgeVariants,\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["FastShippingBadge","InstantDeliveryBadge","LocalBusinessBadge","MoneyBackBadge","PaymentSecurityBadge","QualityBadge","SecurePurchaseBadge","SupportBadge","TrustBadge","TrustBadgeGroup","trustBadgeVariants","cva","variants","variant","security","guarantee","shipping","quality","support","payment","size","sm","md","lg","animation","none","pulse","bounce","glow","defaultVariants","React","forwardRef","className","icon","children","props","ref","div","cn","displayName","text","ShieldCheck","days","Shield","hours","Truck","rating","safeRating","displayText","Star","Award","type","getIcon","Phone","MessageCircle","Clock","getText","provider","getContent","CreditCard","Lock","city","years","MapPin","Zap","badges","layout","layoutClasses","horizontal","vertical","grid","renderBadge","badge","commonProps","map"],"mappings":"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"}