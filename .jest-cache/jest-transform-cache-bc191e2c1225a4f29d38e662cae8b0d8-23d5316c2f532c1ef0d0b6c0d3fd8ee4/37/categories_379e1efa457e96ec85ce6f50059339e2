3b707bd2dfe8f354cebdc0e9604e808c
// ===================================
// PINTEYA E-COMMERCE - FUNCIONES DE API PARA CATEGORÍAS
// ===================================
"use strict";

/* istanbul ignore next */
function cov_1yuzhktzbi() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\api\\categories.ts";
  var hash = "f0a967559dec35f1b50dddd5c36895e12635166b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\api\\categories.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "2": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "3": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 48,
          column: 3
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 34
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 29
        }
      },
      "6": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 38
        }
      },
      "7": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 37
        }
      },
      "8": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 33
        }
      },
      "9": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 32
        }
      },
      "10": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 30
        }
      },
      "11": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 33
        }
      },
      "12": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 32
        }
      },
      "13": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 32
        }
      },
      "14": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 32
        }
      },
      "15": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 72,
          column: 5
        }
      },
      "16": {
        start: {
          line: 51,
          column: 29
        },
        end: {
          line: 51,
          column: 50
        }
      },
      "17": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 58,
          column: 9
        }
      },
      "18": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 57,
          column: 15
        }
      },
      "19": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 56,
          column: 17
        }
      },
      "20": {
        start: {
          line: 55,
          column: 20
        },
        end: {
          line: 55,
          column: 63
        }
      },
      "21": {
        start: {
          line: 59,
          column: 25
        },
        end: {
          line: 64,
          column: 10
        }
      },
      "22": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 67,
          column: 9
        }
      },
      "23": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 66,
          column: 80
        }
      },
      "24": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 37
        }
      },
      "25": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 70,
          column: 61
        }
      },
      "26": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 20
        }
      },
      "27": {
        start: {
          line: 75,
          column: 4
        },
        end: {
          line: 81,
          column: 5
        }
      },
      "28": {
        start: {
          line: 76,
          column: 25
        },
        end: {
          line: 76,
          column: 46
        }
      },
      "29": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 35
        }
      },
      "30": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 61
        }
      },
      "31": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 18
        }
      },
      "32": {
        start: {
          line: 86,
          column: 4
        },
        end: {
          line: 86,
          column: 80
        }
      },
      "33": {
        start: {
          line: 87,
          column: 4
        },
        end: {
          line: 87,
          column: 14
        }
      },
      "34": {
        start: {
          line: 90,
          column: 4
        },
        end: {
          line: 98,
          column: 5
        }
      },
      "35": {
        start: {
          line: 91,
          column: 25
        },
        end: {
          line: 93,
          column: 10
        }
      },
      "36": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 94,
          column: 35
        }
      },
      "37": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 96,
          column: 59
        }
      },
      "38": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 97,
          column: 18
        }
      },
      "39": {
        start: {
          line: 101,
          column: 4
        },
        end: {
          line: 117,
          column: 5
        }
      },
      "40": {
        start: {
          line: 102,
          column: 25
        },
        end: {
          line: 107,
          column: 10
        }
      },
      "41": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 111,
          column: 9
        }
      },
      "42": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 110,
          column: 52
        }
      },
      "43": {
        start: {
          line: 112,
          column: 21
        },
        end: {
          line: 112,
          column: 42
        }
      },
      "44": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 113,
          column: 31
        }
      },
      "45": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 115,
          column: 74
        }
      },
      "46": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 116,
          column: 48
        }
      },
      "47": {
        start: {
          line: 123,
          column: 4
        },
        end: {
          line: 135,
          column: 5
        }
      },
      "48": {
        start: {
          line: 124,
          column: 25
        },
        end: {
          line: 124,
          column: 46
        }
      },
      "49": {
        start: {
          line: 125,
          column: 27
        },
        end: {
          line: 125,
          column: 46
        }
      },
      "50": {
        start: {
          line: 127,
          column: 31
        },
        end: {
          line: 130,
          column: 15
        }
      },
      "51": {
        start: {
          line: 127,
          column: 59
        },
        end: {
          line: 130,
          column: 13
        }
      },
      "52": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 131,
          column: 30
        }
      },
      "53": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 133,
          column: 76
        }
      },
      "54": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 134,
          column: 18
        }
      },
      "55": {
        start: {
          line: 138,
          column: 4
        },
        end: {
          line: 147,
          column: 5
        }
      },
      "56": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 142,
          column: 9
        }
      },
      "57": {
        start: {
          line: 140,
          column: 29
        },
        end: {
          line: 140,
          column: 50
        }
      },
      "58": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 141,
          column: 45
        }
      },
      "59": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 143,
          column: 75
        }
      },
      "60": {
        start: {
          line: 143,
          column: 43
        },
        end: {
          line: 143,
          column: 65
        }
      },
      "61": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 145,
          column: 77
        }
      },
      "62": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 146,
          column: 20
        }
      },
      "63": {
        start: {
          line: 150,
          column: 4
        },
        end: {
          line: 163,
          column: 5
        }
      },
      "64": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 154,
          column: 9
        }
      },
      "65": {
        start: {
          line: 152,
          column: 29
        },
        end: {
          line: 152,
          column: 50
        }
      },
      "66": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 153,
          column: 45
        }
      },
      "67": {
        start: {
          line: 156,
          column: 32
        },
        end: {
          line: 156,
          column: 77
        }
      },
      "68": {
        start: {
          line: 156,
          column: 55
        },
        end: {
          line: 156,
          column: 76
        }
      },
      "69": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 159,
          column: 15
        }
      },
      "70": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 161,
          column: 88
        }
      },
      "71": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 162,
          column: 18
        }
      },
      "72": {
        start: {
          line: 167,
          column: 4
        },
        end: {
          line: 167,
          column: 17
        }
      },
      "73": {
        start: {
          line: 170,
          column: 4
        },
        end: {
          line: 170,
          column: 88
        }
      },
      "74": {
        start: {
          line: 173,
          column: 4
        },
        end: {
          line: 173,
          column: 45
        }
      },
      "75": {
        start: {
          line: 176,
          column: 4
        },
        end: {
          line: 176,
          column: 88
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 16
          }
        },
        loc: {
          start: {
            line: 8,
            column: 30
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 30
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 25
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 34
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 33
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 29
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 28
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        loc: {
          start: {
            line: 33,
            column: 26
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 33
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        loc: {
          start: {
            line: 36,
            column: 29
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 36
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        loc: {
          start: {
            line: 39,
            column: 28
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 39
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        loc: {
          start: {
            line: 42,
            column: 28
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 42
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        },
        loc: {
          start: {
            line: 45,
            column: 28
          },
          end: {
            line: 47,
            column: 5
          }
        },
        line: 45
      },
      "12": {
        name: "getCategories",
        decl: {
          start: {
            line: 49,
            column: 15
          },
          end: {
            line: 49,
            column: 28
          }
        },
        loc: {
          start: {
            line: 49,
            column: 38
          },
          end: {
            line: 73,
            column: 1
          }
        },
        line: 49
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 53,
            column: 44
          },
          end: {
            line: 53,
            column: 45
          }
        },
        loc: {
          start: {
            line: 53,
            column: 60
          },
          end: {
            line: 57,
            column: 13
          }
        },
        line: 53
      },
      "14": {
        name: "getMainCategories",
        decl: {
          start: {
            line: 74,
            column: 15
          },
          end: {
            line: 74,
            column: 32
          }
        },
        loc: {
          start: {
            line: 74,
            column: 35
          },
          end: {
            line: 82,
            column: 1
          }
        },
        line: 74
      },
      "15": {
        name: "getSubcategories",
        decl: {
          start: {
            line: 83,
            column: 15
          },
          end: {
            line: 83,
            column: 31
          }
        },
        loc: {
          start: {
            line: 83,
            column: 42
          },
          end: {
            line: 88,
            column: 1
          }
        },
        line: 83
      },
      "16": {
        name: "searchCategories",
        decl: {
          start: {
            line: 89,
            column: 15
          },
          end: {
            line: 89,
            column: 31
          }
        },
        loc: {
          start: {
            line: 89,
            column: 44
          },
          end: {
            line: 99,
            column: 1
          }
        },
        line: 89
      },
      "17": {
        name: "getCategoriesHierarchy",
        decl: {
          start: {
            line: 100,
            column: 15
          },
          end: {
            line: 100,
            column: 37
          }
        },
        loc: {
          start: {
            line: 100,
            column: 40
          },
          end: {
            line: 118,
            column: 1
          }
        },
        line: 100
      },
      "18": {
        name: "buildCategoriesHierarchy",
        decl: {
          start: {
            line: 122,
            column: 19
          },
          end: {
            line: 122,
            column: 43
          }
        },
        loc: {
          start: {
            line: 122,
            column: 46
          },
          end: {
            line: 136,
            column: 1
          }
        },
        line: 122
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 127,
            column: 46
          },
          end: {
            line: 127,
            column: 47
          }
        },
        loc: {
          start: {
            line: 127,
            column: 59
          },
          end: {
            line: 130,
            column: 13
          }
        },
        line: 127
      },
      "20": {
        name: "getCategoryBySlug",
        decl: {
          start: {
            line: 137,
            column: 15
          },
          end: {
            line: 137,
            column: 32
          }
        },
        loc: {
          start: {
            line: 137,
            column: 51
          },
          end: {
            line: 148,
            column: 1
          }
        },
        line: 137
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 143,
            column: 31
          },
          end: {
            line: 143,
            column: 32
          }
        },
        loc: {
          start: {
            line: 143,
            column: 43
          },
          end: {
            line: 143,
            column: 65
          }
        },
        line: 143
      },
      "22": {
        name: "getCategoryBreadcrumb",
        decl: {
          start: {
            line: 149,
            column: 15
          },
          end: {
            line: 149,
            column: 36
          }
        },
        loc: {
          start: {
            line: 149,
            column: 61
          },
          end: {
            line: 164,
            column: 1
          }
        },
        line: 149
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 156,
            column: 48
          },
          end: {
            line: 156,
            column: 49
          }
        },
        loc: {
          start: {
            line: 156,
            column: 55
          },
          end: {
            line: 156,
            column: 76
          }
        },
        line: 156
      },
      "24": {
        name: "hasSubcategories",
        decl: {
          start: {
            line: 165,
            column: 15
          },
          end: {
            line: 165,
            column: 31
          }
        },
        loc: {
          start: {
            line: 165,
            column: 56
          },
          end: {
            line: 168,
            column: 1
          }
        },
        line: 165
      },
      "25": {
        name: "formatCategoryName",
        decl: {
          start: {
            line: 169,
            column: 9
          },
          end: {
            line: 169,
            column: 27
          }
        },
        loc: {
          start: {
            line: 169,
            column: 38
          },
          end: {
            line: 171,
            column: 1
          }
        },
        line: 169
      },
      "26": {
        name: "getCategoryUrl",
        decl: {
          start: {
            line: 172,
            column: 9
          },
          end: {
            line: 172,
            column: 23
          }
        },
        loc: {
          start: {
            line: 172,
            column: 34
          },
          end: {
            line: 174,
            column: 1
          }
        },
        line: 172
      },
      "27": {
        name: "getCategoryImage",
        decl: {
          start: {
            line: 175,
            column: 9
          },
          end: {
            line: 175,
            column: 25
          }
        },
        loc: {
          start: {
            line: 175,
            column: 36
          },
          end: {
            line: 177,
            column: 1
          }
        },
        line: 175
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 58,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 58,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "1": {
        loc: {
          start: {
            line: 54,
            column: 16
          },
          end: {
            line: 56,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 16
          },
          end: {
            line: 56,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "2": {
        loc: {
          start: {
            line: 54,
            column: 20
          },
          end: {
            line: 54,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 20
          },
          end: {
            line: 54,
            column: 39
          }
        }, {
          start: {
            line: 54,
            column: 43
          },
          end: {
            line: 54,
            column: 57
          }
        }],
        line: 54
      },
      "3": {
        loc: {
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 67,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 67,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "4": {
        loc: {
          start: {
            line: 77,
            column: 15
          },
          end: {
            line: 77,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 77,
            column: 15
          },
          end: {
            line: 77,
            column: 28
          }
        }, {
          start: {
            line: 77,
            column: 32
          },
          end: {
            line: 77,
            column: 34
          }
        }],
        line: 77
      },
      "5": {
        loc: {
          start: {
            line: 94,
            column: 15
          },
          end: {
            line: 94,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 94,
            column: 15
          },
          end: {
            line: 94,
            column: 28
          }
        }, {
          start: {
            line: 94,
            column: 32
          },
          end: {
            line: 94,
            column: 34
          }
        }],
        line: 94
      },
      "6": {
        loc: {
          start: {
            line: 108,
            column: 8
          },
          end: {
            line: 111,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 108,
            column: 8
          },
          end: {
            line: 111,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 108
      },
      "7": {
        loc: {
          start: {
            line: 113,
            column: 15
          },
          end: {
            line: 113,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 113,
            column: 15
          },
          end: {
            line: 113,
            column: 24
          }
        }, {
          start: {
            line: 113,
            column: 28
          },
          end: {
            line: 113,
            column: 30
          }
        }],
        line: 113
      },
      "8": {
        loc: {
          start: {
            line: 125,
            column: 27
          },
          end: {
            line: 125,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 125,
            column: 27
          },
          end: {
            line: 125,
            column: 40
          }
        }, {
          start: {
            line: 125,
            column: 44
          },
          end: {
            line: 125,
            column: 46
          }
        }],
        line: 125
      },
      "9": {
        loc: {
          start: {
            line: 139,
            column: 8
          },
          end: {
            line: 142,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 139,
            column: 8
          },
          end: {
            line: 142,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 139
      },
      "10": {
        loc: {
          start: {
            line: 141,
            column: 25
          },
          end: {
            line: 141,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 141,
            column: 25
          },
          end: {
            line: 141,
            column: 38
          }
        }, {
          start: {
            line: 141,
            column: 42
          },
          end: {
            line: 141,
            column: 44
          }
        }],
        line: 141
      },
      "11": {
        loc: {
          start: {
            line: 143,
            column: 15
          },
          end: {
            line: 143,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 143,
            column: 15
          },
          end: {
            line: 143,
            column: 66
          }
        }, {
          start: {
            line: 143,
            column: 70
          },
          end: {
            line: 143,
            column: 74
          }
        }],
        line: 143
      },
      "12": {
        loc: {
          start: {
            line: 151,
            column: 8
          },
          end: {
            line: 154,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 151,
            column: 8
          },
          end: {
            line: 154,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 151
      },
      "13": {
        loc: {
          start: {
            line: 153,
            column: 25
          },
          end: {
            line: 153,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 153,
            column: 25
          },
          end: {
            line: 153,
            column: 38
          }
        }, {
          start: {
            line: 153,
            column: 42
          },
          end: {
            line: 153,
            column: 44
          }
        }],
        line: 153
      },
      "14": {
        loc: {
          start: {
            line: 157,
            column: 15
          },
          end: {
            line: 159,
            column: 14
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 157,
            column: 33
          },
          end: {
            line: 159,
            column: 9
          }
        }, {
          start: {
            line: 159,
            column: 12
          },
          end: {
            line: 159,
            column: 14
          }
        }],
        line: 157
      },
      "15": {
        loc: {
          start: {
            line: 176,
            column: 11
          },
          end: {
            line: 176,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 176,
            column: 39
          },
          end: {
            line: 176,
            column: 52
          }
        }, {
          start: {
            line: 176,
            column: 55
          },
          end: {
            line: 176,
            column: 87
          }
        }],
        line: 176
      },
      "16": {
        loc: {
          start: {
            line: 176,
            column: 11
          },
          end: {
            line: 176,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 176,
            column: 11
          },
          end: {
            line: 176,
            column: 19
          }
        }, {
          start: {
            line: 176,
            column: 23
          },
          end: {
            line: 176,
            column: 36
          }
        }],
        line: 176
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\api\\categories.ts"],
      sourcesContent: ["// ===================================\r\n// PINTEYA E-COMMERCE - FUNCIONES DE API PARA CATEGOR\xCDAS\r\n// ===================================\r\n\r\nimport { CategoryFilters, ApiResponse } from '@/types/api';\r\nimport { Category } from '@/types/database';\r\n\r\n// ===================================\r\n// FUNCIONES PARA EL FRONTEND\r\n// ===================================\r\n\r\n/**\r\n * Obtiene todas las categor\xEDas desde la API\r\n * @param filters - Filtros de categor\xEDas\r\n * @returns Promise<ApiResponse<Category[]>>\r\n */\r\nexport async function getCategories(filters?: CategoryFilters): Promise<ApiResponse<Category[]>> {\r\n  try {\r\n    const searchParams = new URLSearchParams();\r\n    \r\n    if (filters) {\r\n      Object.entries(filters).forEach(([key, value]) => {\r\n        if (value !== undefined && value !== null) {\r\n          searchParams.append(key, value.toString());\r\n        }\r\n      });\r\n    }\r\n\r\n    const response = await fetch(`/api/categories?${searchParams.toString()}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Error ${response.status}: ${response.statusText}`);\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error obteniendo categor\xEDas:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n/**\r\n * Obtiene todas las categor\xEDas (simplificado para la estructura actual)\r\n * @returns Promise<Category[]>\r\n */\r\nexport async function getMainCategories(): Promise<Category[]> {\r\n  try {\r\n    const response = await getCategories();\r\n    return response.data || [];\r\n  } catch (error) {\r\n    console.error('Error obteniendo categor\xEDas:', error);\r\n    return [];\r\n  }\r\n}\r\n\r\n/**\r\n * Obtiene subcategor\xEDas de una categor\xEDa padre\r\n * @param parentId - ID de la categor\xEDa padre\r\n * @returns Promise<Category[]>\r\n */\r\nexport async function getSubcategories(parentId: number): Promise<Category[]> {\r\n  // Nota: La tabla categories actual no soporta jerarqu\xEDas (no tiene parent_id)\r\n  // Retornamos array vac\xEDo por ahora\r\n  console.warn('getSubcategories: La tabla categories no soporta jerarqu\xEDas');\r\n  return [];\r\n}\r\n\r\n/**\r\n * Busca categor\xEDas por nombre\r\n * @param searchTerm - T\xE9rmino de b\xFAsqueda\r\n * @returns Promise<Category[]>\r\n */\r\nexport async function searchCategories(searchTerm: string): Promise<Category[]> {\r\n  try {\r\n    const response = await getCategories({ search: searchTerm });\r\n    return response.data || [];\r\n  } catch (error) {\r\n    console.error('Error buscando categor\xEDas:', error);\r\n    return [];\r\n  }\r\n}\r\n\r\n/**\r\n * Obtiene la jerarqu\xEDa completa de categor\xEDas\r\n * @returns Promise<CategoryHierarchy[]>\r\n */\r\nexport async function getCategoriesHierarchy(): Promise<CategoryHierarchy[]> {\r\n  try {\r\n    const response = await fetch('/api/categories/hierarchy', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      // Si no existe el endpoint de jerarqu\xEDa, construirla manualmente\r\n      return await buildCategoriesHierarchy();\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data.data || [];\r\n  } catch (error) {\r\n    console.error('Error obteniendo jerarqu\xEDa de categor\xEDas:', error);\r\n    return await buildCategoriesHierarchy();\r\n  }\r\n}\r\n\r\n// ===================================\r\n// FUNCIONES AUXILIARES\r\n// ===================================\r\n\r\nexport interface CategoryHierarchy extends Category {\r\n  children: CategoryHierarchy[];\r\n}\r\n\r\n/**\r\n * Construye la jerarqu\xEDa de categor\xEDas manualmente\r\n * @returns Promise<CategoryHierarchy[]>\r\n */\r\nasync function buildCategoriesHierarchy(): Promise<CategoryHierarchy[]> {\r\n  try {\r\n    const response = await getCategories();\r\n    const categories = response.data || [];\r\n\r\n    // Como no hay parent_id, todas las categor\xEDas son de nivel ra\xEDz\r\n    const rootCategories: CategoryHierarchy[] = categories.map(category => ({\r\n      ...category,\r\n      children: []\r\n    }));\r\n\r\n    return rootCategories;\r\n  } catch (error) {\r\n    console.error('Error construyendo jerarqu\xEDa de categor\xEDas:', error);\r\n    return [];\r\n  }\r\n}\r\n\r\n/**\r\n * Encuentra una categor\xEDa por slug\r\n * @param slug - Slug de la categor\xEDa\r\n * @param categories - Lista de categor\xEDas (opcional)\r\n * @returns Promise<Category | null>\r\n */\r\nexport async function getCategoryBySlug(\r\n  slug: string,\r\n  categories?: Category[]\r\n): Promise<Category | null> {\r\n  try {\r\n    if (!categories) {\r\n      const response = await getCategories();\r\n      categories = response.data || [];\r\n    }\r\n\r\n    return categories.find(category => category.slug === slug) || null;\r\n  } catch (error) {\r\n    console.error(`Error obteniendo categor\xEDa por slug ${slug}:`, error);\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * Obtiene el breadcrumb de una categor\xEDa\r\n * @param categoryId - ID de la categor\xEDa\r\n * @param categories - Lista de categor\xEDas (opcional)\r\n * @returns Promise<Category[]>\r\n */\r\nexport async function getCategoryBreadcrumb(\r\n  categoryId: number,\r\n  categories?: Category[]\r\n): Promise<Category[]> {\r\n  try {\r\n    if (!categories) {\r\n      const response = await getCategories();\r\n      categories = response.data || [];\r\n    }\r\n\r\n    // Como no hay jerarqu\xEDas, el breadcrumb solo incluye la categor\xEDa actual\r\n    const currentCategory = categories.find(cat => cat.id === categoryId);\r\n    return currentCategory ? [currentCategory] : [];\r\n  } catch (error) {\r\n    console.error(`Error obteniendo breadcrumb de categor\xEDa ${categoryId}:`, error);\r\n    return [];\r\n  }\r\n}\r\n\r\n/**\r\n * Verifica si una categor\xEDa tiene subcategor\xEDas\r\n * @param categoryId - ID de la categor\xEDa\r\n * @param categories - Lista de categor\xEDas (opcional)\r\n * @returns Promise<boolean>\r\n */\r\nexport async function hasSubcategories(\r\n  categoryId: number,\r\n  categories?: Category[]\r\n): Promise<boolean> {\r\n  // Como no hay jerarqu\xEDas, ninguna categor\xEDa tiene subcategor\xEDas\r\n  return false;\r\n}\r\n\r\n/**\r\n * Formatea el nombre de la categor\xEDa para mostrar\r\n * @param category - Categor\xEDa\r\n * @returns string\r\n */\r\nexport function formatCategoryName(category: Category): string {\r\n  return category.name.charAt(0).toUpperCase() + category.name.slice(1).toLowerCase();\r\n}\r\n\r\n/**\r\n * Genera la URL de la categor\xEDa\r\n * @param category - Categor\xEDa\r\n * @returns string\r\n */\r\nexport function getCategoryUrl(category: Category): string {\r\n  return `/shop?category=${category.slug}`;\r\n}\r\n\r\n/**\r\n * Obtiene la imagen de la categor\xEDa o una por defecto\r\n * @param category - Categor\xEDa\r\n * @returns string\r\n */\r\nexport function getCategoryImage(category: Category): string {\r\n  return (category && category.icon) ? category.icon : '/images/categories/default.jpg';\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["formatCategoryName", "getCategories", "getCategoriesHierarchy", "getCategoryBreadcrumb", "getCategoryBySlug", "getCategoryImage", "getCategoryUrl", "getMainCategories", "getSubcategories", "hasSubcategories", "searchCategories", "filters", "searchParams", "URLSearchParams", "Object", "entries", "forEach", "key", "value", "undefined", "append", "toString", "response", "fetch", "method", "headers", "ok", "Error", "status", "statusText", "json", "error", "console", "data", "parentId", "warn", "searchTerm", "search", "buildCategoriesHierarchy", "categories", "rootCategories", "map", "category", "children", "slug", "find", "categoryId", "currentCategory", "cat", "id", "name", "charAt", "toUpperCase", "slice", "toLowerCase", "icon"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f0a967559dec35f1b50dddd5c36895e12635166b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1yuzhktzbi = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1yuzhktzbi();
cov_1yuzhktzbi().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1yuzhktzbi().f[0]++;
  cov_1yuzhktzbi().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1yuzhktzbi().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1yuzhktzbi().s[3]++;
_export(exports, {
  get formatCategoryName() {
    /* istanbul ignore next */
    cov_1yuzhktzbi().f[1]++;
    cov_1yuzhktzbi().s[4]++;
    return formatCategoryName;
  },
  get getCategories() {
    /* istanbul ignore next */
    cov_1yuzhktzbi().f[2]++;
    cov_1yuzhktzbi().s[5]++;
    return getCategories;
  },
  get getCategoriesHierarchy() {
    /* istanbul ignore next */
    cov_1yuzhktzbi().f[3]++;
    cov_1yuzhktzbi().s[6]++;
    return getCategoriesHierarchy;
  },
  get getCategoryBreadcrumb() {
    /* istanbul ignore next */
    cov_1yuzhktzbi().f[4]++;
    cov_1yuzhktzbi().s[7]++;
    return getCategoryBreadcrumb;
  },
  get getCategoryBySlug() {
    /* istanbul ignore next */
    cov_1yuzhktzbi().f[5]++;
    cov_1yuzhktzbi().s[8]++;
    return getCategoryBySlug;
  },
  get getCategoryImage() {
    /* istanbul ignore next */
    cov_1yuzhktzbi().f[6]++;
    cov_1yuzhktzbi().s[9]++;
    return getCategoryImage;
  },
  get getCategoryUrl() {
    /* istanbul ignore next */
    cov_1yuzhktzbi().f[7]++;
    cov_1yuzhktzbi().s[10]++;
    return getCategoryUrl;
  },
  get getMainCategories() {
    /* istanbul ignore next */
    cov_1yuzhktzbi().f[8]++;
    cov_1yuzhktzbi().s[11]++;
    return getMainCategories;
  },
  get getSubcategories() {
    /* istanbul ignore next */
    cov_1yuzhktzbi().f[9]++;
    cov_1yuzhktzbi().s[12]++;
    return getSubcategories;
  },
  get hasSubcategories() {
    /* istanbul ignore next */
    cov_1yuzhktzbi().f[10]++;
    cov_1yuzhktzbi().s[13]++;
    return hasSubcategories;
  },
  get searchCategories() {
    /* istanbul ignore next */
    cov_1yuzhktzbi().f[11]++;
    cov_1yuzhktzbi().s[14]++;
    return searchCategories;
  }
});
async function getCategories(filters) {
  /* istanbul ignore next */
  cov_1yuzhktzbi().f[12]++;
  cov_1yuzhktzbi().s[15]++;
  try {
    const searchParams =
    /* istanbul ignore next */
    (cov_1yuzhktzbi().s[16]++, new URLSearchParams());
    /* istanbul ignore next */
    cov_1yuzhktzbi().s[17]++;
    if (filters) {
      /* istanbul ignore next */
      cov_1yuzhktzbi().b[0][0]++;
      cov_1yuzhktzbi().s[18]++;
      Object.entries(filters).forEach(([key, value]) => {
        /* istanbul ignore next */
        cov_1yuzhktzbi().f[13]++;
        cov_1yuzhktzbi().s[19]++;
        if (
        /* istanbul ignore next */
        (cov_1yuzhktzbi().b[2][0]++, value !== undefined) &&
        /* istanbul ignore next */
        (cov_1yuzhktzbi().b[2][1]++, value !== null)) {
          /* istanbul ignore next */
          cov_1yuzhktzbi().b[1][0]++;
          cov_1yuzhktzbi().s[20]++;
          searchParams.append(key, value.toString());
        } else
        /* istanbul ignore next */
        {
          cov_1yuzhktzbi().b[1][1]++;
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_1yuzhktzbi().b[0][1]++;
    }
    const response =
    /* istanbul ignore next */
    (cov_1yuzhktzbi().s[21]++, await fetch(`/api/categories?${searchParams.toString()}`, {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json'
      }
    }));
    /* istanbul ignore next */
    cov_1yuzhktzbi().s[22]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_1yuzhktzbi().b[3][0]++;
      cov_1yuzhktzbi().s[23]++;
      throw new Error(`Error ${response.status}: ${response.statusText}`);
    } else
    /* istanbul ignore next */
    {
      cov_1yuzhktzbi().b[3][1]++;
    }
    cov_1yuzhktzbi().s[24]++;
    return await response.json();
  } catch (error) {
    /* istanbul ignore next */
    cov_1yuzhktzbi().s[25]++;
    console.error('Error obteniendo categorías:', error);
    /* istanbul ignore next */
    cov_1yuzhktzbi().s[26]++;
    throw error;
  }
}
async function getMainCategories() {
  /* istanbul ignore next */
  cov_1yuzhktzbi().f[14]++;
  cov_1yuzhktzbi().s[27]++;
  try {
    const response =
    /* istanbul ignore next */
    (cov_1yuzhktzbi().s[28]++, await getCategories());
    /* istanbul ignore next */
    cov_1yuzhktzbi().s[29]++;
    return /* istanbul ignore next */(cov_1yuzhktzbi().b[4][0]++, response.data) ||
    /* istanbul ignore next */
    (cov_1yuzhktzbi().b[4][1]++, []);
  } catch (error) {
    /* istanbul ignore next */
    cov_1yuzhktzbi().s[30]++;
    console.error('Error obteniendo categorías:', error);
    /* istanbul ignore next */
    cov_1yuzhktzbi().s[31]++;
    return [];
  }
}
async function getSubcategories(parentId) {
  /* istanbul ignore next */
  cov_1yuzhktzbi().f[15]++;
  cov_1yuzhktzbi().s[32]++;
  // Nota: La tabla categories actual no soporta jerarquías (no tiene parent_id)
  // Retornamos array vacío por ahora
  console.warn('getSubcategories: La tabla categories no soporta jerarquías');
  /* istanbul ignore next */
  cov_1yuzhktzbi().s[33]++;
  return [];
}
async function searchCategories(searchTerm) {
  /* istanbul ignore next */
  cov_1yuzhktzbi().f[16]++;
  cov_1yuzhktzbi().s[34]++;
  try {
    const response =
    /* istanbul ignore next */
    (cov_1yuzhktzbi().s[35]++, await getCategories({
      search: searchTerm
    }));
    /* istanbul ignore next */
    cov_1yuzhktzbi().s[36]++;
    return /* istanbul ignore next */(cov_1yuzhktzbi().b[5][0]++, response.data) ||
    /* istanbul ignore next */
    (cov_1yuzhktzbi().b[5][1]++, []);
  } catch (error) {
    /* istanbul ignore next */
    cov_1yuzhktzbi().s[37]++;
    console.error('Error buscando categorías:', error);
    /* istanbul ignore next */
    cov_1yuzhktzbi().s[38]++;
    return [];
  }
}
async function getCategoriesHierarchy() {
  /* istanbul ignore next */
  cov_1yuzhktzbi().f[17]++;
  cov_1yuzhktzbi().s[39]++;
  try {
    const response =
    /* istanbul ignore next */
    (cov_1yuzhktzbi().s[40]++, await fetch('/api/categories/hierarchy', {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json'
      }
    }));
    /* istanbul ignore next */
    cov_1yuzhktzbi().s[41]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_1yuzhktzbi().b[6][0]++;
      cov_1yuzhktzbi().s[42]++;
      // Si no existe el endpoint de jerarquía, construirla manualmente
      return await buildCategoriesHierarchy();
    } else
    /* istanbul ignore next */
    {
      cov_1yuzhktzbi().b[6][1]++;
    }
    const data =
    /* istanbul ignore next */
    (cov_1yuzhktzbi().s[43]++, await response.json());
    /* istanbul ignore next */
    cov_1yuzhktzbi().s[44]++;
    return /* istanbul ignore next */(cov_1yuzhktzbi().b[7][0]++, data.data) ||
    /* istanbul ignore next */
    (cov_1yuzhktzbi().b[7][1]++, []);
  } catch (error) {
    /* istanbul ignore next */
    cov_1yuzhktzbi().s[45]++;
    console.error('Error obteniendo jerarquía de categorías:', error);
    /* istanbul ignore next */
    cov_1yuzhktzbi().s[46]++;
    return await buildCategoriesHierarchy();
  }
}
/**
 * Construye la jerarquía de categorías manualmente
 * @returns Promise<CategoryHierarchy[]>
 */
async function buildCategoriesHierarchy() {
  /* istanbul ignore next */
  cov_1yuzhktzbi().f[18]++;
  cov_1yuzhktzbi().s[47]++;
  try {
    const response =
    /* istanbul ignore next */
    (cov_1yuzhktzbi().s[48]++, await getCategories());
    const categories =
    /* istanbul ignore next */
    (cov_1yuzhktzbi().s[49]++,
    /* istanbul ignore next */
    (cov_1yuzhktzbi().b[8][0]++, response.data) ||
    /* istanbul ignore next */
    (cov_1yuzhktzbi().b[8][1]++, []));
    // Como no hay parent_id, todas las categorías son de nivel raíz
    const rootCategories =
    /* istanbul ignore next */
    (cov_1yuzhktzbi().s[50]++, categories.map(category => {
      /* istanbul ignore next */
      cov_1yuzhktzbi().f[19]++;
      cov_1yuzhktzbi().s[51]++;
      return {
        ...category,
        children: []
      };
    }));
    /* istanbul ignore next */
    cov_1yuzhktzbi().s[52]++;
    return rootCategories;
  } catch (error) {
    /* istanbul ignore next */
    cov_1yuzhktzbi().s[53]++;
    console.error('Error construyendo jerarquía de categorías:', error);
    /* istanbul ignore next */
    cov_1yuzhktzbi().s[54]++;
    return [];
  }
}
async function getCategoryBySlug(slug, categories) {
  /* istanbul ignore next */
  cov_1yuzhktzbi().f[20]++;
  cov_1yuzhktzbi().s[55]++;
  try {
    /* istanbul ignore next */
    cov_1yuzhktzbi().s[56]++;
    if (!categories) {
      /* istanbul ignore next */
      cov_1yuzhktzbi().b[9][0]++;
      const response =
      /* istanbul ignore next */
      (cov_1yuzhktzbi().s[57]++, await getCategories());
      /* istanbul ignore next */
      cov_1yuzhktzbi().s[58]++;
      categories =
      /* istanbul ignore next */
      (cov_1yuzhktzbi().b[10][0]++, response.data) ||
      /* istanbul ignore next */
      (cov_1yuzhktzbi().b[10][1]++, []);
    } else
    /* istanbul ignore next */
    {
      cov_1yuzhktzbi().b[9][1]++;
    }
    cov_1yuzhktzbi().s[59]++;
    return /* istanbul ignore next */(cov_1yuzhktzbi().b[11][0]++, categories.find(category => {
      /* istanbul ignore next */
      cov_1yuzhktzbi().f[21]++;
      cov_1yuzhktzbi().s[60]++;
      return category.slug === slug;
    })) ||
    /* istanbul ignore next */
    (cov_1yuzhktzbi().b[11][1]++, null);
  } catch (error) {
    /* istanbul ignore next */
    cov_1yuzhktzbi().s[61]++;
    console.error(`Error obteniendo categoría por slug ${slug}:`, error);
    /* istanbul ignore next */
    cov_1yuzhktzbi().s[62]++;
    return null;
  }
}
async function getCategoryBreadcrumb(categoryId, categories) {
  /* istanbul ignore next */
  cov_1yuzhktzbi().f[22]++;
  cov_1yuzhktzbi().s[63]++;
  try {
    /* istanbul ignore next */
    cov_1yuzhktzbi().s[64]++;
    if (!categories) {
      /* istanbul ignore next */
      cov_1yuzhktzbi().b[12][0]++;
      const response =
      /* istanbul ignore next */
      (cov_1yuzhktzbi().s[65]++, await getCategories());
      /* istanbul ignore next */
      cov_1yuzhktzbi().s[66]++;
      categories =
      /* istanbul ignore next */
      (cov_1yuzhktzbi().b[13][0]++, response.data) ||
      /* istanbul ignore next */
      (cov_1yuzhktzbi().b[13][1]++, []);
    } else
    /* istanbul ignore next */
    {
      cov_1yuzhktzbi().b[12][1]++;
    }
    // Como no hay jerarquías, el breadcrumb solo incluye la categoría actual
    const currentCategory =
    /* istanbul ignore next */
    (cov_1yuzhktzbi().s[67]++, categories.find(cat => {
      /* istanbul ignore next */
      cov_1yuzhktzbi().f[23]++;
      cov_1yuzhktzbi().s[68]++;
      return cat.id === categoryId;
    }));
    /* istanbul ignore next */
    cov_1yuzhktzbi().s[69]++;
    return currentCategory ?
    /* istanbul ignore next */
    (cov_1yuzhktzbi().b[14][0]++, [currentCategory]) :
    /* istanbul ignore next */
    (cov_1yuzhktzbi().b[14][1]++, []);
  } catch (error) {
    /* istanbul ignore next */
    cov_1yuzhktzbi().s[70]++;
    console.error(`Error obteniendo breadcrumb de categoría ${categoryId}:`, error);
    /* istanbul ignore next */
    cov_1yuzhktzbi().s[71]++;
    return [];
  }
}
async function hasSubcategories(categoryId, categories) {
  /* istanbul ignore next */
  cov_1yuzhktzbi().f[24]++;
  cov_1yuzhktzbi().s[72]++;
  // Como no hay jerarquías, ninguna categoría tiene subcategorías
  return false;
}
function formatCategoryName(category) {
  /* istanbul ignore next */
  cov_1yuzhktzbi().f[25]++;
  cov_1yuzhktzbi().s[73]++;
  return category.name.charAt(0).toUpperCase() + category.name.slice(1).toLowerCase();
}
function getCategoryUrl(category) {
  /* istanbul ignore next */
  cov_1yuzhktzbi().f[26]++;
  cov_1yuzhktzbi().s[74]++;
  return `/shop?category=${category.slug}`;
}
function getCategoryImage(category) {
  /* istanbul ignore next */
  cov_1yuzhktzbi().f[27]++;
  cov_1yuzhktzbi().s[75]++;
  return /* istanbul ignore next */(cov_1yuzhktzbi().b[16][0]++, category) &&
  /* istanbul ignore next */
  (cov_1yuzhktzbi().b[16][1]++, category.icon) ?
  /* istanbul ignore next */
  (cov_1yuzhktzbi().b[15][0]++, category.icon) :
  /* istanbul ignore next */
  (cov_1yuzhktzbi().b[15][1]++, '/images/categories/default.jpg');
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,