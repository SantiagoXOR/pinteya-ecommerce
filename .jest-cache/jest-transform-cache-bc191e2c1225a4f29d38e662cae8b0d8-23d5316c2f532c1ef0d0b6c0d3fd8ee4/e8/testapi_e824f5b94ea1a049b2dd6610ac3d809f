b352a7a881931673035ca803e1c0da4c
// Test directo de la API para verificar la respuesta
"use strict";

/* istanbul ignore next */
function cov_ai2abn5gc() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\testing\\test-api.js";
  var hash = "23f47e77fa6b23a43d3ee72a8e7b243ad62b9ce1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\testing\\test-api.js",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 24,
          column: 5
        }
      },
      "1": {
        start: {
          line: 5,
          column: 8
        },
        end: {
          line: 5,
          column: 57
        }
      },
      "2": {
        start: {
          line: 6,
          column: 25
        },
        end: {
          line: 6,
          column: 75
        }
      },
      "3": {
        start: {
          line: 7,
          column: 8
        },
        end: {
          line: 7,
          column: 66
        }
      },
      "4": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 58
        }
      },
      "5": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 11,
          column: 9
        }
      },
      "6": {
        start: {
          line: 10,
          column: 12
        },
        end: {
          line: 10,
          column: 80
        }
      },
      "7": {
        start: {
          line: 12,
          column: 21
        },
        end: {
          line: 12,
          column: 42
        }
      },
      "8": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 58
        }
      },
      "9": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 60
        }
      },
      "10": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 54
        }
      },
      "11": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 73
        }
      },
      "12": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 103
        }
      },
      "13": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 21,
          column: 9
        }
      },
      "14": {
        start: {
          line: 19,
          column: 12
        },
        end: {
          line: 19,
          column: 84
        }
      },
      "15": {
        start: {
          line: 20,
          column: 12
        },
        end: {
          line: 20,
          column: 76
        }
      },
      "16": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 48
        }
      },
      "17": {
        start: {
          line: 27,
          column: 0
        },
        end: {
          line: 30,
          column: 1
        }
      },
      "18": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 29
        }
      },
      "19": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 29,
          column: 96
        }
      }
    },
    fnMap: {
      "0": {
        name: "testAPI",
        decl: {
          start: {
            line: 3,
            column: 15
          },
          end: {
            line: 3,
            column: 22
          }
        },
        loc: {
          start: {
            line: 3,
            column: 25
          },
          end: {
            line: 25,
            column: 1
          }
        },
        line: 3
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 11,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 11,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 9
      },
      "1": {
        loc: {
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 21,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 21,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 18
      },
      "2": {
        loc: {
          start: {
            line: 18,
            column: 12
          },
          end: {
            line: 18,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 12
          },
          end: {
            line: 18,
            column: 24
          }
        }, {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 37
          }
        }, {
          start: {
            line: 18,
            column: 41
          },
          end: {
            line: 18,
            column: 59
          }
        }],
        line: 18
      },
      "3": {
        loc: {
          start: {
            line: 27,
            column: 0
          },
          end: {
            line: 30,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 0
          },
          end: {
            line: 30,
            column: 1
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0, 0],
      "3": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\testing\\test-api.js"],
      sourcesContent: ["// Test directo de la API para verificar la respuesta\r\nasync function testAPI() {\r\n  try {\r\n    console.log('\uD83D\uDD0D TEST: Iniciando test de API...');\r\n    \r\n    const response = await fetch('/api/admin/products-direct?limit=10');\r\n    console.log('\uD83D\uDD0D TEST: Response status:', response.status);\r\n    console.log('\uD83D\uDD0D TEST: Response ok:', response.ok);\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`Error ${response.status}: ${response.statusText}`);\r\n    }\r\n    \r\n    const data = await response.json();\r\n    console.log('\uD83D\uDD0D TEST: Respuesta completa:', data);\r\n    console.log('\uD83D\uDD0D TEST: data.success:', data.success);\r\n    console.log('\uD83D\uDD0D TEST: data.data:', data.data);\r\n    console.log('\uD83D\uDD0D TEST: data.data.products:', data.data?.products);\r\n    console.log('\uD83D\uDD0D TEST: Array.isArray(data.data.products):', Array.isArray(data.data?.products));\r\n    \r\n    if (data.success && data.data && data.data.products) {\r\n      console.log('\uD83D\uDD0D TEST: N\xFAmero de productos:', data.data.products.length);\r\n      console.log('\uD83D\uDD0D TEST: Primer producto:', data.data.products[0]);\r\n    }\r\n    \r\n  } catch (error) {\r\n    console.error('\uD83D\uDD0D TEST: Error:', error);\r\n  }\r\n}\r\n\r\n// Ejecutar el test cuando se cargue la p\xE1gina\r\nif (typeof window !== 'undefined') {\r\n  window.testAPI = testAPI;\r\n  console.log('\uD83D\uDD0D TEST: Funci\xF3n testAPI disponible. Ejecuta window.testAPI() en la consola.');\r\n}\r\n\r\n\r\n\r\n\r\n"],
      names: ["testAPI", "console", "log", "response", "fetch", "status", "ok", "Error", "statusText", "data", "json", "success", "products", "Array", "isArray", "length", "error", "window"],
      mappings: "AAAA,qDAAqD;;AACrD,eAAeA;IACb,IAAI;QACFC,QAAQC,GAAG,CAAC;QAEZ,MAAMC,WAAW,MAAMC,MAAM;QAC7BH,QAAQC,GAAG,CAAC,6BAA6BC,SAASE,MAAM;QACxDJ,QAAQC,GAAG,CAAC,yBAAyBC,SAASG,EAAE;QAEhD,IAAI,CAACH,SAASG,EAAE,EAAE;YAChB,MAAM,IAAIC,MAAM,CAAC,MAAM,EAAEJ,SAASE,MAAM,CAAC,EAAE,EAAEF,SAASK,UAAU,EAAE;QACpE;QAEA,MAAMC,OAAO,MAAMN,SAASO,IAAI;QAChCT,QAAQC,GAAG,CAAC,gCAAgCO;QAC5CR,QAAQC,GAAG,CAAC,0BAA0BO,KAAKE,OAAO;QAClDV,QAAQC,GAAG,CAAC,uBAAuBO,KAAKA,IAAI;QAC5CR,QAAQC,GAAG,CAAC,gCAAgCO,KAAKA,IAAI,EAAEG;QACvDX,QAAQC,GAAG,CAAC,+CAA+CW,MAAMC,OAAO,CAACL,KAAKA,IAAI,EAAEG;QAEpF,IAAIH,KAAKE,OAAO,IAAIF,KAAKA,IAAI,IAAIA,KAAKA,IAAI,CAACG,QAAQ,EAAE;YACnDX,QAAQC,GAAG,CAAC,iCAAiCO,KAAKA,IAAI,CAACG,QAAQ,CAACG,MAAM;YACtEd,QAAQC,GAAG,CAAC,6BAA6BO,KAAKA,IAAI,CAACG,QAAQ,CAAC,EAAE;QAChE;IAEF,EAAE,OAAOI,OAAO;QACdf,QAAQe,KAAK,CAAC,mBAAmBA;IACnC;AACF;AAEA,8CAA8C;AAC9C,IAAI,OAAOC,WAAW,aAAa;IACjCA,OAAOjB,OAAO,GAAGA;IACjBC,QAAQC,GAAG,CAAC;AACd"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "23f47e77fa6b23a43d3ee72a8e7b243ad62b9ce1"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_ai2abn5gc = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_ai2abn5gc();
async function testAPI() {
  /* istanbul ignore next */
  cov_ai2abn5gc().f[0]++;
  cov_ai2abn5gc().s[0]++;
  try {
    /* istanbul ignore next */
    cov_ai2abn5gc().s[1]++;
    console.log('🔍 TEST: Iniciando test de API...');
    const response =
    /* istanbul ignore next */
    (cov_ai2abn5gc().s[2]++, await fetch('/api/admin/products-direct?limit=10'));
    /* istanbul ignore next */
    cov_ai2abn5gc().s[3]++;
    console.log('🔍 TEST: Response status:', response.status);
    /* istanbul ignore next */
    cov_ai2abn5gc().s[4]++;
    console.log('🔍 TEST: Response ok:', response.ok);
    /* istanbul ignore next */
    cov_ai2abn5gc().s[5]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_ai2abn5gc().b[0][0]++;
      cov_ai2abn5gc().s[6]++;
      throw new Error(`Error ${response.status}: ${response.statusText}`);
    } else
    /* istanbul ignore next */
    {
      cov_ai2abn5gc().b[0][1]++;
    }
    const data =
    /* istanbul ignore next */
    (cov_ai2abn5gc().s[7]++, await response.json());
    /* istanbul ignore next */
    cov_ai2abn5gc().s[8]++;
    console.log('🔍 TEST: Respuesta completa:', data);
    /* istanbul ignore next */
    cov_ai2abn5gc().s[9]++;
    console.log('🔍 TEST: data.success:', data.success);
    /* istanbul ignore next */
    cov_ai2abn5gc().s[10]++;
    console.log('🔍 TEST: data.data:', data.data);
    /* istanbul ignore next */
    cov_ai2abn5gc().s[11]++;
    console.log('🔍 TEST: data.data.products:', data.data?.products);
    /* istanbul ignore next */
    cov_ai2abn5gc().s[12]++;
    console.log('🔍 TEST: Array.isArray(data.data.products):', Array.isArray(data.data?.products));
    /* istanbul ignore next */
    cov_ai2abn5gc().s[13]++;
    if (
    /* istanbul ignore next */
    (cov_ai2abn5gc().b[2][0]++, data.success) &&
    /* istanbul ignore next */
    (cov_ai2abn5gc().b[2][1]++, data.data) &&
    /* istanbul ignore next */
    (cov_ai2abn5gc().b[2][2]++, data.data.products)) {
      /* istanbul ignore next */
      cov_ai2abn5gc().b[1][0]++;
      cov_ai2abn5gc().s[14]++;
      console.log('🔍 TEST: Número de productos:', data.data.products.length);
      /* istanbul ignore next */
      cov_ai2abn5gc().s[15]++;
      console.log('🔍 TEST: Primer producto:', data.data.products[0]);
    } else
    /* istanbul ignore next */
    {
      cov_ai2abn5gc().b[1][1]++;
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_ai2abn5gc().s[16]++;
    console.error('🔍 TEST: Error:', error);
  }
}
// Ejecutar el test cuando se cargue la página
/* istanbul ignore next */
cov_ai2abn5gc().s[17]++;
if (typeof window !== 'undefined') {
  /* istanbul ignore next */
  cov_ai2abn5gc().b[3][0]++;
  cov_ai2abn5gc().s[18]++;
  window.testAPI = testAPI;
  /* istanbul ignore next */
  cov_ai2abn5gc().s[19]++;
  console.log('🔍 TEST: Función testAPI disponible. Ejecuta window.testAPI() en la consola.');
} else
/* istanbul ignore next */
{
  cov_ai2abn5gc().b[3][1]++;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfYWkyYWJuNWdjIiwiYWN0dWFsQ292ZXJhZ2UiLCJ0ZXN0QVBJIiwiZiIsInMiLCJjb25zb2xlIiwibG9nIiwicmVzcG9uc2UiLCJmZXRjaCIsInN0YXR1cyIsIm9rIiwiYiIsIkVycm9yIiwic3RhdHVzVGV4dCIsImRhdGEiLCJqc29uIiwic3VjY2VzcyIsInByb2R1Y3RzIiwiQXJyYXkiLCJpc0FycmF5IiwibGVuZ3RoIiwiZXJyb3IiLCJ3aW5kb3ciXSwic291cmNlcyI6WyJDOlxcVXNlcnNcXG1hcnRpXFxEZXNrdG9wXFxERVNBUlJPTExPU1dcXEJPSUxFUlBMQVRURSBFLUNPTU1FUkNFXFxzcmNcXGxpYlxcdGVzdGluZ1xcdGVzdC1hcGkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVGVzdCBkaXJlY3RvIGRlIGxhIEFQSSBwYXJhIHZlcmlmaWNhciBsYSByZXNwdWVzdGFcclxuYXN5bmMgZnVuY3Rpb24gdGVzdEFQSSgpIHtcclxuICB0cnkge1xyXG4gICAgY29uc29sZS5sb2coJ/CflI0gVEVTVDogSW5pY2lhbmRvIHRlc3QgZGUgQVBJLi4uJyk7XHJcbiAgICBcclxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJy9hcGkvYWRtaW4vcHJvZHVjdHMtZGlyZWN0P2xpbWl0PTEwJyk7XHJcbiAgICBjb25zb2xlLmxvZygn8J+UjSBURVNUOiBSZXNwb25zZSBzdGF0dXM6JywgcmVzcG9uc2Uuc3RhdHVzKTtcclxuICAgIGNvbnNvbGUubG9nKCfwn5SNIFRFU1Q6IFJlc3BvbnNlIG9rOicsIHJlc3BvbnNlLm9rKTtcclxuICAgIFxyXG4gICAgaWYgKCFyZXNwb25zZS5vaykge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYEVycm9yICR7cmVzcG9uc2Uuc3RhdHVzfTogJHtyZXNwb25zZS5zdGF0dXNUZXh0fWApO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xyXG4gICAgY29uc29sZS5sb2coJ/CflI0gVEVTVDogUmVzcHVlc3RhIGNvbXBsZXRhOicsIGRhdGEpO1xyXG4gICAgY29uc29sZS5sb2coJ/CflI0gVEVTVDogZGF0YS5zdWNjZXNzOicsIGRhdGEuc3VjY2Vzcyk7XHJcbiAgICBjb25zb2xlLmxvZygn8J+UjSBURVNUOiBkYXRhLmRhdGE6JywgZGF0YS5kYXRhKTtcclxuICAgIGNvbnNvbGUubG9nKCfwn5SNIFRFU1Q6IGRhdGEuZGF0YS5wcm9kdWN0czonLCBkYXRhLmRhdGE/LnByb2R1Y3RzKTtcclxuICAgIGNvbnNvbGUubG9nKCfwn5SNIFRFU1Q6IEFycmF5LmlzQXJyYXkoZGF0YS5kYXRhLnByb2R1Y3RzKTonLCBBcnJheS5pc0FycmF5KGRhdGEuZGF0YT8ucHJvZHVjdHMpKTtcclxuICAgIFxyXG4gICAgaWYgKGRhdGEuc3VjY2VzcyAmJiBkYXRhLmRhdGEgJiYgZGF0YS5kYXRhLnByb2R1Y3RzKSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKCfwn5SNIFRFU1Q6IE7Dum1lcm8gZGUgcHJvZHVjdG9zOicsIGRhdGEuZGF0YS5wcm9kdWN0cy5sZW5ndGgpO1xyXG4gICAgICBjb25zb2xlLmxvZygn8J+UjSBURVNUOiBQcmltZXIgcHJvZHVjdG86JywgZGF0YS5kYXRhLnByb2R1Y3RzWzBdKTtcclxuICAgIH1cclxuICAgIFxyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCfwn5SNIFRFU1Q6IEVycm9yOicsIGVycm9yKTtcclxuICB9XHJcbn1cclxuXHJcbi8vIEVqZWN1dGFyIGVsIHRlc3QgY3VhbmRvIHNlIGNhcmd1ZSBsYSBww6FnaW5hXHJcbmlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xyXG4gIHdpbmRvdy50ZXN0QVBJID0gdGVzdEFQSTtcclxuICBjb25zb2xlLmxvZygn8J+UjSBURVNUOiBGdW5jacOzbiB0ZXN0QVBJIGRpc3BvbmlibGUuIEVqZWN1dGEgd2luZG93LnRlc3RBUEkoKSBlbiBsYSBjb25zb2xhLicpO1xyXG59XHJcblxyXG5cclxuXHJcblxyXG4iXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFpQkk7SUFBQUEsYUFBQSxZQUFBQSxDQUFBO01BQUEsT0FBQUMsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQUQsYUFBQTtBQWhCSixlQUFlRSxRQUFBO0VBQUE7RUFBQUYsYUFBQSxHQUFBRyxDQUFBO0VBQUFILGFBQUEsR0FBQUksQ0FBQTtFQUNiLElBQUk7SUFBQTtJQUFBSixhQUFBLEdBQUFJLENBQUE7SUFDRkMsT0FBQSxDQUFRQyxHQUFHLENBQUM7SUFFWixNQUFNQyxRQUFBO0lBQUE7SUFBQSxDQUFBUCxhQUFBLEdBQUFJLENBQUEsT0FBVyxNQUFNSSxLQUFBLENBQU07SUFBQTtJQUFBUixhQUFBLEdBQUFJLENBQUE7SUFDN0JDLE9BQUEsQ0FBUUMsR0FBRyxDQUFDLDZCQUE2QkMsUUFBQSxDQUFTRSxNQUFNO0lBQUE7SUFBQVQsYUFBQSxHQUFBSSxDQUFBO0lBQ3hEQyxPQUFBLENBQVFDLEdBQUcs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