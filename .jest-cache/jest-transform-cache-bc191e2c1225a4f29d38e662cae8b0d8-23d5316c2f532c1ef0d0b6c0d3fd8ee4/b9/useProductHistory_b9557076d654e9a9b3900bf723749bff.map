{"version":3,"names":["cov_g710kkqux","actualCoverage","s","useFormChangeTracking","f","useProductHistory","fetchProductHistory","productId","limit","b","response","fetch","ok","Error","data","json","enabled","localChanges","setLocalChanges","_react","useState","historyData","isLoading","error","refetch","_reactquery","useQuery","queryKey","queryFn","refetchInterval","trackChange","useCallback","field","oldValue","newValue","changeEntry","id","Date","now","action","field_name","old_value","new_value","user_id","user_name","timestamp","toISOString","metadata","local","prev","slice","clearLocalChanges","combinedHistory","formatHistoryEntry","entry","date","timeAgo","getTimeAgo","description","getFieldDisplayName","undefined","isLocal","formattedHistory","map","history","fieldName","fieldMap","name","short_description","price","compare_price","cost_price","stock","low_stock_threshold","category_id","status","is_active","is_featured","slug","seo_title","seo_description","track_inventory","allow_backorder","diffInSeconds","Math","floor","getTime","diffInMinutes","diffInHours","diffInDays","diffInWeeks","toLocaleDateString","watchedData","previousData","setPreviousData","useEffect","Object","keys","forEach","key","JSON","stringify","includes"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\admin\\useProductHistory.ts"],"sourcesContent":["// 📚 Enterprise Product History Hook\r\n\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport { useQuery } from '@tanstack/react-query';\r\n\r\ninterface ProductHistoryEntry {\r\n  id: string;\r\n  action: 'CREATE' | 'UPDATE' | 'DELETE' | 'SOFT_DELETE';\r\n  field_name?: string;\r\n  old_value?: any;\r\n  new_value?: any;\r\n  user_id: string;\r\n  user_name?: string;\r\n  timestamp: string;\r\n  metadata?: any;\r\n}\r\n\r\ninterface ProductHistoryOptions {\r\n  productId: string;\r\n  enabled?: boolean;\r\n  limit?: number;\r\n}\r\n\r\n// API function to fetch product history\r\nasync function fetchProductHistory(productId: string, limit: number = 50): Promise<ProductHistoryEntry[]> {\r\n  const response = await fetch(`/api/admin/products/${productId}/history?limit=${limit}`);\r\n  \r\n  if (!response.ok) {\r\n    throw new Error('Error fetching product history');\r\n  }\r\n  \r\n  const data = await response.json();\r\n  return data.data;\r\n}\r\n\r\nexport function useProductHistory({ productId, enabled = true, limit = 50 }: ProductHistoryOptions) {\r\n  const [localChanges, setLocalChanges] = useState<ProductHistoryEntry[]>([]);\r\n\r\n  const {\r\n    data: historyData = [],\r\n    isLoading,\r\n    error,\r\n    refetch\r\n  } = useQuery({\r\n    queryKey: ['product-history', productId],\r\n    queryFn: () => fetchProductHistory(productId, limit),\r\n    enabled: enabled && !!productId,\r\n    refetchInterval: 30000, // Refetch every 30 seconds\r\n  });\r\n\r\n  // Track local changes before they're saved\r\n  const trackChange = useCallback((field: string, oldValue: any, newValue: any) => {\r\n    const changeEntry: ProductHistoryEntry = {\r\n      id: `local-${Date.now()}`,\r\n      action: 'UPDATE',\r\n      field_name: field,\r\n      old_value: oldValue,\r\n      new_value: newValue,\r\n      user_id: 'current-user',\r\n      user_name: 'Tú',\r\n      timestamp: new Date().toISOString(),\r\n      metadata: { local: true }\r\n    };\r\n\r\n    setLocalChanges(prev => [changeEntry, ...prev.slice(0, 9)]); // Keep last 10 local changes\r\n  }, []);\r\n\r\n  // Clear local changes when data is saved\r\n  const clearLocalChanges = useCallback(() => {\r\n    setLocalChanges([]);\r\n  }, []);\r\n\r\n  // Combine server history with local changes\r\n  const combinedHistory = [...localChanges, ...historyData];\r\n\r\n  // Format history entries for display\r\n  const formatHistoryEntry = useCallback((entry: ProductHistoryEntry) => {\r\n    const date = new Date(entry.timestamp);\r\n    const timeAgo = getTimeAgo(date);\r\n    \r\n    let description = '';\r\n    \r\n    switch (entry.action) {\r\n      case 'CREATE':\r\n        description = 'Producto creado';\r\n        break;\r\n      case 'UPDATE':\r\n        if (entry.field_name) {\r\n          description = `Actualizó ${getFieldDisplayName(entry.field_name)}`;\r\n          if (entry.old_value !== undefined && entry.new_value !== undefined) {\r\n            description += ` de \"${entry.old_value}\" a \"${entry.new_value}\"`;\r\n          }\r\n        } else {\r\n          description = 'Producto actualizado';\r\n        }\r\n        break;\r\n      case 'DELETE':\r\n        description = 'Producto eliminado';\r\n        break;\r\n      case 'SOFT_DELETE':\r\n        description = 'Producto marcado como inactivo';\r\n        break;\r\n      default:\r\n        description = 'Acción desconocida';\r\n    }\r\n\r\n    return {\r\n      ...entry,\r\n      description,\r\n      timeAgo,\r\n      isLocal: entry.metadata?.local || false\r\n    };\r\n  }, []);\r\n\r\n  const formattedHistory = combinedHistory.map(formatHistoryEntry);\r\n\r\n  return {\r\n    history: formattedHistory,\r\n    isLoading,\r\n    error,\r\n    refetch,\r\n    trackChange,\r\n    clearLocalChanges\r\n  };\r\n}\r\n\r\n// Helper function to get human-readable field names\r\nfunction getFieldDisplayName(fieldName: string): string {\r\n  const fieldMap: Record<string, string> = {\r\n    name: 'nombre',\r\n    description: 'descripción',\r\n    short_description: 'descripción corta',\r\n    price: 'precio',\r\n    compare_price: 'precio de comparación',\r\n    cost_price: 'precio de costo',\r\n    stock: 'stock',\r\n    low_stock_threshold: 'umbral de stock bajo',\r\n    category_id: 'categoría',\r\n    status: 'estado',\r\n    is_active: 'estado activo',\r\n    is_featured: 'producto destacado',\r\n    slug: 'URL slug',\r\n    seo_title: 'título SEO',\r\n    seo_description: 'descripción SEO',\r\n    track_inventory: 'seguimiento de inventario',\r\n    allow_backorder: 'permitir pedidos pendientes'\r\n  };\r\n\r\n  return fieldMap[fieldName] || fieldName;\r\n}\r\n\r\n// Helper function to get time ago string\r\nfunction getTimeAgo(date: Date): string {\r\n  const now = new Date();\r\n  const diffInSeconds = Math.floor((now.getTime() - date.getTime()) / 1000);\r\n\r\n  if (diffInSeconds < 60) {\r\n    return 'hace unos segundos';\r\n  }\r\n\r\n  const diffInMinutes = Math.floor(diffInSeconds / 60);\r\n  if (diffInMinutes < 60) {\r\n    return `hace ${diffInMinutes} minuto${diffInMinutes > 1 ? 's' : ''}`;\r\n  }\r\n\r\n  const diffInHours = Math.floor(diffInMinutes / 60);\r\n  if (diffInHours < 24) {\r\n    return `hace ${diffInHours} hora${diffInHours > 1 ? 's' : ''}`;\r\n  }\r\n\r\n  const diffInDays = Math.floor(diffInHours / 24);\r\n  if (diffInDays < 7) {\r\n    return `hace ${diffInDays} día${diffInDays > 1 ? 's' : ''}`;\r\n  }\r\n\r\n  const diffInWeeks = Math.floor(diffInDays / 7);\r\n  if (diffInWeeks < 4) {\r\n    return `hace ${diffInWeeks} semana${diffInWeeks > 1 ? 's' : ''}`;\r\n  }\r\n\r\n  return date.toLocaleDateString();\r\n}\r\n\r\n// Hook for tracking form changes\r\nexport function useFormChangeTracking(productId: string, watchedData: any) {\r\n  const { trackChange } = useProductHistory({ productId });\r\n  const [previousData, setPreviousData] = useState(watchedData);\r\n\r\n  useEffect(() => {\r\n    if (!previousData || !watchedData) {return;}\r\n\r\n    // Compare current data with previous data\r\n    Object.keys(watchedData).forEach(key => {\r\n      const oldValue = previousData[key];\r\n      const newValue = watchedData[key];\r\n\r\n      // Skip if values are the same\r\n      if (JSON.stringify(oldValue) === JSON.stringify(newValue)) {return;}\r\n\r\n      // Skip certain fields\r\n      if (['updated_at', 'created_at'].includes(key)) {return;}\r\n\r\n      // Track the change\r\n      trackChange(key, oldValue, newValue);\r\n    });\r\n\r\n    setPreviousData(watchedData);\r\n  }, [watchedData, previousData, trackChange]);\r\n\r\n  return { trackChange };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}