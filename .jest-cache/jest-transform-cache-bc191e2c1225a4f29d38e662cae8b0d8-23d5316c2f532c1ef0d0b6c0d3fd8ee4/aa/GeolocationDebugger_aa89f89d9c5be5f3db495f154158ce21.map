{"version":3,"names":["_default","GeolocationDebugger","cov_1s8z985s1u","f","detectedZone","requestLocation","permissionStatus","isLoading","error","location","getAvailableZones","testLocation","s","_useGeolocation","useGeolocation","renderCount","setRenderCount","_react","default","useState","useEffect","prev","_jsxruntime","jsxs","className","jsx","b","lat","toFixed","lng","name","id","onClick","disabled","Error","message","String","map","z","join"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\Header\\GeolocationDebugger.tsx"],"sourcesContent":["/**\r\n * Componente de debugging en tiempo real para geolocalización\r\n * Se muestra temporalmente en el header para diagnosticar problemas\r\n */\r\n\r\n'use client';\r\n\r\nimport React from 'react';\r\nimport { useGeolocation } from '@/hooks/useGeolocation';\r\n\r\nconst GeolocationDebugger = () => {\r\n  const {\r\n    detectedZone,\r\n    requestLocation,\r\n    permissionStatus,\r\n    isLoading,\r\n    error,\r\n    location,\r\n    getAvailableZones,\r\n    testLocation\r\n  } = useGeolocation();\r\n\r\n  const [renderCount, setRenderCount] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    setRenderCount(prev => prev + 1);\r\n  }, [detectedZone, permissionStatus, isLoading, error, location]); // Solo re-render cuando cambie el estado de geolocalización\r\n\r\n  return (\r\n    <div className=\"fixed top-0 left-0 right-0 z-[99999] bg-black/90 text-white p-2 text-xs font-mono\">\r\n      <div className=\"max-w-4xl mx-auto grid grid-cols-2 md:grid-cols-4 gap-2\">\r\n        <div>\r\n          <strong>Renders:</strong> {renderCount}\r\n        </div>\r\n        <div>\r\n          <strong>Status:</strong> {permissionStatus}\r\n        </div>\r\n        <div>\r\n          <strong>Loading:</strong> {isLoading ? 'YES' : 'NO'}\r\n        </div>\r\n        <div>\r\n          <strong>Error:</strong> {error ? 'YES' : 'NO'}\r\n        </div>\r\n        <div>\r\n          <strong>Location:</strong> {location ? `${location.lat.toFixed(4)}, ${location.lng.toFixed(4)}` : 'NULL'}\r\n        </div>\r\n        <div>\r\n          <strong>Zone:</strong> {detectedZone?.name || 'NULL'}\r\n        </div>\r\n        <div>\r\n          <strong>Zone ID:</strong> {detectedZone?.id || 'NULL'}\r\n        </div>\r\n        <div className=\"flex gap-1\">\r\n          <button\r\n            onClick={requestLocation}\r\n            className=\"bg-blue-600 px-2 py-1 rounded text-xs hover:bg-blue-700\"\r\n            disabled={isLoading}\r\n          >\r\n            {isLoading ? 'Loading...' : 'Test Geo'}\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              testLocation(-31.4201, -64.1888);\r\n            }}\r\n            className=\"bg-green-600 px-2 py-1 rounded text-xs hover:bg-green-700\"\r\n          >\r\n            Force Test\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      {error && (\r\n        <div className=\"mt-1 text-red-300\">\r\n          <strong>Error Details:</strong> {error instanceof Error ? error.message : String(error) || 'Error desconocido'}\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"mt-1 text-gray-300\">\r\n        <strong>Available Zones:</strong> {getAvailableZones().map(z => z.name).join(', ')}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GeolocationDebugger;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}