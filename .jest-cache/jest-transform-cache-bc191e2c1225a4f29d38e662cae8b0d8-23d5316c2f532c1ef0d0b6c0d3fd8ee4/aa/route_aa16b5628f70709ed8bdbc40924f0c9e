1fd4e3061e1171106c75407a6bf9388b
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_1278znm8x9() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\customers\\route.ts";
  var hash = "bb8f62f8b1320b276a09531413e33c819c6546eb";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\customers\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 20
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 23
        }
      },
      "7": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "8": {
        start: {
          line: 24,
          column: 16
        },
        end: {
          line: 24,
          column: 54
        }
      },
      "9": {
        start: {
          line: 25,
          column: 17
        },
        end: {
          line: 25,
          column: 72
        }
      },
      "10": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 60
        }
      },
      "11": {
        start: {
          line: 27,
          column: 16
        },
        end: {
          line: 27,
          column: 24
        }
      },
      "12": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 127,
          column: 5
        }
      },
      "13": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 71
        }
      },
      "14": {
        start: {
          line: 32,
          column: 24
        },
        end: {
          line: 32,
          column: 49
        }
      },
      "15": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 41,
          column: 9
        }
      },
      "16": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 34,
          column: 52
        }
      },
      "17": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 40,
          column: 15
        }
      },
      "18": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 44,
          column: 11
        }
      },
      "19": {
        start: {
          line: 46,
          column: 33
        },
        end: {
          line: 46,
          column: 53
        }
      },
      "20": {
        start: {
          line: 47,
          column: 21
        },
        end: {
          line: 47,
          column: 62
        }
      },
      "21": {
        start: {
          line: 48,
          column: 22
        },
        end: {
          line: 48,
          column: 65
        }
      },
      "22": {
        start: {
          line: 49,
          column: 23
        },
        end: {
          line: 49,
          column: 55
        }
      },
      "23": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 54,
          column: 11
        }
      },
      "24": {
        start: {
          line: 56,
          column: 23
        },
        end: {
          line: 56,
          column: 41
        }
      },
      "25": {
        start: {
          line: 58,
          column: 25
        },
        end: {
          line: 58,
          column: 58
        }
      },
      "26": {
        start: {
          line: 59,
          column: 20
        },
        end: {
          line: 61,
          column: 10
        }
      },
      "27": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 65,
          column: 9
        }
      },
      "28": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 64,
          column: 79
        }
      },
      "29": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 69,
          column: 45
        }
      },
      "30": {
        start: {
          line: 70,
          column: 50
        },
        end: {
          line: 70,
          column: 61
        }
      },
      "31": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 81,
          column: 9
        }
      },
      "32": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 74,
          column: 15
        }
      },
      "33": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 80,
          column: 15
        }
      },
      "34": {
        start: {
          line: 83,
          column: 35
        },
        end: {
          line: 90,
          column: 21
        }
      },
      "35": {
        start: {
          line: 83,
          column: 63
        },
        end: {
          line: 90,
          column: 13
        }
      },
      "36": {
        start: {
          line: 91,
          column: 25
        },
        end: {
          line: 103,
          column: 9
        }
      },
      "37": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 109,
          column: 11
        }
      },
      "38": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 113,
          column: 11
        }
      },
      "39": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 114,
          column: 51
        }
      },
      "40": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 116,
          column: 69
        }
      },
      "41": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 119,
          column: 11
        }
      },
      "42": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 126,
          column: 11
        }
      },
      "43": {
        start: {
          line: 130,
          column: 4
        },
        end: {
          line: 159,
          column: 5
        }
      },
      "44": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 131,
          column: 72
        }
      },
      "45": {
        start: {
          line: 133,
          column: 24
        },
        end: {
          line: 133,
          column: 49
        }
      },
      "46": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 141,
          column: 9
        }
      },
      "47": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 140,
          column: 15
        }
      },
      "48": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 149,
          column: 11
        }
      },
      "49": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 151,
          column: 70
        }
      },
      "50": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 158,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "GET",
        decl: {
          start: {
            line: 28,
            column: 15
          },
          end: {
            line: 28,
            column: 18
          }
        },
        loc: {
          start: {
            line: 28,
            column: 28
          },
          end: {
            line: 128,
            column: 1
          }
        },
        line: 28
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 83,
            column: 50
          },
          end: {
            line: 83,
            column: 51
          }
        },
        loc: {
          start: {
            line: 83,
            column: 63
          },
          end: {
            line: 90,
            column: 13
          }
        },
        line: 83
      },
      "6": {
        name: "POST",
        decl: {
          start: {
            line: 129,
            column: 15
          },
          end: {
            line: 129,
            column: 19
          }
        },
        loc: {
          start: {
            line: 129,
            column: 29
          },
          end: {
            line: 160,
            column: 1
          }
        },
        line: 129
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 41,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 41,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "1": {
        loc: {
          start: {
            line: 47,
            column: 30
          },
          end: {
            line: 47,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 30
          },
          end: {
            line: 47,
            column: 54
          }
        }, {
          start: {
            line: 47,
            column: 58
          },
          end: {
            line: 47,
            column: 61
          }
        }],
        line: 47
      },
      "2": {
        loc: {
          start: {
            line: 48,
            column: 31
          },
          end: {
            line: 48,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 31
          },
          end: {
            line: 48,
            column: 56
          }
        }, {
          start: {
            line: 48,
            column: 60
          },
          end: {
            line: 48,
            column: 64
          }
        }],
        line: 48
      },
      "3": {
        loc: {
          start: {
            line: 49,
            column: 23
          },
          end: {
            line: 49,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 23
          },
          end: {
            line: 49,
            column: 49
          }
        }, {
          start: {
            line: 49,
            column: 53
          },
          end: {
            line: 49,
            column: 55
          }
        }],
        line: 49
      },
      "4": {
        loc: {
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 65,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 65,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "5": {
        loc: {
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 81,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 81,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "6": {
        loc: {
          start: {
            line: 83,
            column: 35
          },
          end: {
            line: 90,
            column: 21
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 83,
            column: 35
          },
          end: {
            line: 90,
            column: 15
          }
        }, {
          start: {
            line: 90,
            column: 19
          },
          end: {
            line: 90,
            column: 21
          }
        }],
        line: 83
      },
      "7": {
        loc: {
          start: {
            line: 85,
            column: 22
          },
          end: {
            line: 85,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 85,
            column: 22
          },
          end: {
            line: 85,
            column: 35
          }
        }, {
          start: {
            line: 85,
            column: 39
          },
          end: {
            line: 85,
            column: 51
          }
        }],
        line: 85
      },
      "8": {
        loc: {
          start: {
            line: 94,
            column: 19
          },
          end: {
            line: 94,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 94,
            column: 19
          },
          end: {
            line: 94,
            column: 24
          }
        }, {
          start: {
            line: 94,
            column: 28
          },
          end: {
            line: 94,
            column: 29
          }
        }],
        line: 94
      },
      "9": {
        loc: {
          start: {
            line: 98,
            column: 39
          },
          end: {
            line: 98,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 98,
            column: 39
          },
          end: {
            line: 98,
            column: 44
          }
        }, {
          start: {
            line: 98,
            column: 48
          },
          end: {
            line: 98,
            column: 49
          }
        }],
        line: 98
      },
      "10": {
        loc: {
          start: {
            line: 99,
            column: 43
          },
          end: {
            line: 99,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 99,
            column: 43
          },
          end: {
            line: 99,
            column: 48
          }
        }, {
          start: {
            line: 99,
            column: 52
          },
          end: {
            line: 99,
            column: 53
          }
        }],
        line: 99
      },
      "11": {
        loc: {
          start: {
            line: 102,
            column: 77
          },
          end: {
            line: 102,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 102,
            column: 77
          },
          end: {
            line: 102,
            column: 82
          }
        }, {
          start: {
            line: 102,
            column: 86
          },
          end: {
            line: 102,
            column: 87
          }
        }],
        line: 102
      },
      "12": {
        loc: {
          start: {
            line: 108,
            column: 35
          },
          end: {
            line: 108,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 108,
            column: 35
          },
          end: {
            line: 108,
            column: 40
          }
        }, {
          start: {
            line: 108,
            column: 44
          },
          end: {
            line: 108,
            column: 45
          }
        }],
        line: 108
      },
      "13": {
        loc: {
          start: {
            line: 123,
            column: 21
          },
          end: {
            line: 123,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 123,
            column: 46
          },
          end: {
            line: 123,
            column: 59
          }
        }, {
          start: {
            line: 123,
            column: 62
          },
          end: {
            line: 123,
            column: 81
          }
        }],
        line: 123
      },
      "14": {
        loc: {
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 141,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 141,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      },
      "15": {
        loc: {
          start: {
            line: 155,
            column: 21
          },
          end: {
            line: 155,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 155,
            column: 46
          },
          end: {
            line: 155,
            column: 59
          }
        }, {
          start: {
            line: 155,
            column: 62
          },
          end: {
            line: 155,
            column: 81
          }
        }],
        line: 155
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\customers\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { auth } from '@/lib/auth/config';\r\nimport { createAdminClient } from '@/lib/integrations/supabase/server';\r\nimport { logger, LogLevel, LogCategory } from '@/lib/enterprise/logger';\r\n\r\n// Tipos para clientes\r\ninterface Customer {\r\n  id: string;\r\n  name: string;\r\n  email: string;\r\n  phone?: string;\r\n  address?: string;\r\n  created_at: string;\r\n}\r\n\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    console.log('\uD83D\uDD0D API: GET /api/admin/customers - Iniciando...');\r\n\r\n    // Verificar autenticaci\xF3n\r\n    const session = await auth();\r\n    if (!session?.user) {\r\n      console.log('\u274C Usuario no autenticado');\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: 'No autorizado'\r\n      }, { status: 401 });\r\n    }\r\n\r\n    logger.log(LogLevel.INFO, LogCategory.API, 'Fetching customers for admin', {\r\n      userId: session.user.id\r\n    });\r\n\r\n    // Obtener par\xE1metros de query\r\n    const { searchParams } = new URL(request.url);\r\n    const page = parseInt(searchParams.get('page') || '1');\r\n    const limit = parseInt(searchParams.get('limit') || '50');\r\n    const search = searchParams.get('search') || '';\r\n\r\n    console.log('\uD83D\uDCCA Par\xE1metros:', { page, limit, search });\r\n\r\n    // Calcular offset\r\n    const offset = (page - 1) * limit;\r\n\r\n    // Construir query base\r\n    const supabase = createAdminClient();\r\n    let query = supabase\r\n      .from('users')\r\n      .select('id, name, email, created_at', { count: 'exact' });\r\n\r\n    // Aplicar filtros de b\xFAsqueda si se proporciona\r\n    if (search) {\r\n      query = query.or(`name.ilike.%${search}%,email.ilike.%${search}%`);\r\n    }\r\n\r\n    // Aplicar paginaci\xF3n y ordenamiento\r\n    query = query\r\n      .order('created_at', { ascending: false })\r\n      .range(offset, offset + limit - 1);\r\n\r\n    const { data: customers, error, count } = await query;\r\n\r\n    if (error) {\r\n      logger.log(LogLevel.ERROR, LogCategory.DATABASE, 'Error fetching customers', { error });\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: 'Error al obtener clientes'\r\n      }, { status: 500 });\r\n    }\r\n\r\n    // Formatear datos para el frontend\r\n    const formattedCustomers: Customer[] = customers?.map(customer => ({\r\n      id: customer.id,\r\n      name: customer.name || 'Sin nombre',\r\n      email: customer.email,\r\n      phone: '', // TODO: Agregar campo phone a la tabla users si es necesario\r\n      address: '', // TODO: Agregar campo address a la tabla users si es necesario\r\n      created_at: customer.created_at\r\n    })) || [];\r\n\r\n    const response = {\r\n      success: true,\r\n      data: formattedCustomers,\r\n      total: count || 0,\r\n      pagination: {\r\n        page,\r\n        limit,\r\n        totalPages: Math.ceil((count || 0) / limit),\r\n        hasNext: page < Math.ceil((count || 0) / limit),\r\n        hasPrev: page > 1,\r\n      },\r\n      message: `${formattedCustomers.length} clientes encontrados de ${count || 0} totales`\r\n    };\r\n\r\n    console.log('\u2705 Respuesta exitosa:', {\r\n      customersCount: formattedCustomers.length,\r\n      total: count,\r\n      page,\r\n      totalPages: Math.ceil((count || 0) / limit)\r\n    });\r\n\r\n    logger.log(LogLevel.INFO, LogCategory.API, 'Customers fetched successfully', {\r\n      count: formattedCustomers.length,\r\n      total: count\r\n    });\r\n\r\n    return NextResponse.json(response);\r\n\r\n  } catch (error) {\r\n    console.error('\u274C Error en GET /api/admin/customers:', error);\r\n    logger.log(LogLevel.ERROR, LogCategory.API, 'Unexpected error in customers API', { error });\r\n\r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Error interno del servidor',\r\n      details: error instanceof Error ? error.message : 'Error desconocido'\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    console.log('\uD83D\uDD0D API: POST /api/admin/customers - Iniciando...');\r\n\r\n    // Verificar autenticaci\xF3n\r\n    const session = await auth();\r\n    if (!session?.user) {\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: 'No autorizado'\r\n      }, { status: 401 });\r\n    }\r\n\r\n    // TODO: Implementar creaci\xF3n de clientes\r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Funcionalidad no implementada a\xFAn',\r\n      message: 'La creaci\xF3n de clientes estar\xE1 disponible en una pr\xF3xima versi\xF3n'\r\n    }, { status: 501 });\r\n\r\n  } catch (error) {\r\n    console.error('\u274C Error en POST /api/admin/customers:', error);\r\n    \r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Error interno del servidor',\r\n      details: error instanceof Error ? error.message : 'Error desconocido'\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "POST", "runtime", "request", "console", "log", "session", "auth", "user", "NextResponse", "json", "success", "error", "status", "logger", "LogLevel", "INFO", "LogCategory", "API", "userId", "id", "searchParams", "URL", "url", "page", "parseInt", "get", "limit", "search", "offset", "supabase", "createAdminClient", "query", "from", "select", "count", "or", "order", "ascending", "range", "data", "customers", "ERROR", "DATABASE", "formattedCustomers", "map", "customer", "name", "email", "phone", "address", "created_at", "response", "total", "pagination", "totalPages", "Math", "ceil", "hasNext", "hasPrev", "message", "length", "customersCount", "details", "Error"],
      mappings: "AAAA,qCAAqC;;;;;;;;;;;;QAkBfA;eAAAA;;QAyGAC;eAAAA;;QA1HTC;eAAAA;;;wBAE6B;wBACrB;yBACa;wBACY;AALvC,MAAMA,UAAU;AAiBhB,eAAeF,IAAIG,OAAoB;IAC5C,IAAI;QACFC,QAAQC,GAAG,CAAC;QAEZ,0BAA0B;QAC1B,MAAMC,UAAU,MAAMC,IAAAA,YAAI;QAC1B,IAAI,CAACD,SAASE,MAAM;YAClBJ,QAAQC,GAAG,CAAC;YACZ,OAAOI,oBAAY,CAACC,IAAI,CAAC;gBACvBC,SAAS;gBACTC,OAAO;YACT,GAAG;gBAAEC,QAAQ;YAAI;QACnB;QAEAC,cAAM,CAACT,GAAG,CAACU,gBAAQ,CAACC,IAAI,EAAEC,mBAAW,CAACC,GAAG,EAAE,gCAAgC;YACzEC,QAAQb,QAAQE,IAAI,CAACY,EAAE;QACzB;QAEA,8BAA8B;QAC9B,MAAM,EAAEC,YAAY,EAAE,GAAG,IAAIC,IAAInB,QAAQoB,GAAG;QAC5C,MAAMC,OAAOC,SAASJ,aAAaK,GAAG,CAAC,WAAW;QAClD,MAAMC,QAAQF,SAASJ,aAAaK,GAAG,CAAC,YAAY;QACpD,MAAME,SAASP,aAAaK,GAAG,CAAC,aAAa;QAE7CtB,QAAQC,GAAG,CAAC,kBAAkB;YAAEmB;YAAMG;YAAOC;QAAO;QAEpD,kBAAkB;QAClB,MAAMC,SAAS,AAACL,CAAAA,OAAO,CAAA,IAAKG;QAE5B,uBAAuB;QACvB,MAAMG,WAAWC,IAAAA,0BAAiB;QAClC,IAAIC,QAAQF,SACTG,IAAI,CAAC,SACLC,MAAM,CAAC,+BAA+B;YAAEC,OAAO;QAAQ;QAE1D,gDAAgD;QAChD,IAAIP,QAAQ;YACVI,QAAQA,MAAMI,EAAE,CAAC,CAAC,YAAY,EAAER,OAAO,eAAe,EAAEA,OAAO,CAAC,CAAC;QACnE;QAEA,oCAAoC;QACpCI,QAAQA,MACLK,KAAK,CAAC,cAAc;YAAEC,WAAW;QAAM,GACvCC,KAAK,CAACV,QAAQA,SAASF,QAAQ;QAElC,MAAM,EAAEa,MAAMC,SAAS,EAAE7B,KAAK,EAAEuB,KAAK,EAAE,GAAG,MAAMH;QAEhD,IAAIpB,OAAO;YACTE,cAAM,CAACT,GAAG,CAACU,gBAAQ,CAAC2B,KAAK,EAAEzB,mBAAW,CAAC0B,QAAQ,EAAE,4BAA4B;gBAAE/B;YAAM;YACrF,OAAOH,oBAAY,CAACC,IAAI,CAAC;gBACvBC,SAAS;gBACTC,OAAO;YACT,GAAG;gBAAEC,QAAQ;YAAI;QACnB;QAEA,mCAAmC;QACnC,MAAM+B,qBAAiCH,WAAWI,IAAIC,CAAAA,WAAa,CAAA;gBACjE1B,IAAI0B,SAAS1B,EAAE;gBACf2B,MAAMD,SAASC,IAAI,IAAI;gBACvBC,OAAOF,SAASE,KAAK;gBACrBC,OAAO;gBACPC,SAAS;gBACTC,YAAYL,SAASK,UAAU;YACjC,CAAA,MAAO,EAAE;QAET,MAAMC,WAAW;YACfzC,SAAS;YACT6B,MAAMI;YACNS,OAAOlB,SAAS;YAChBmB,YAAY;gBACV9B;gBACAG;gBACA4B,YAAYC,KAAKC,IAAI,CAAC,AAACtB,CAAAA,SAAS,CAAA,IAAKR;gBACrC+B,SAASlC,OAAOgC,KAAKC,IAAI,CAAC,AAACtB,CAAAA,SAAS,CAAA,IAAKR;gBACzCgC,SAASnC,OAAO;YAClB;YACAoC,SAAS,GAAGhB,mBAAmBiB,MAAM,CAAC,yBAAyB,EAAE1B,SAAS,EAAE,QAAQ,CAAC;QACvF;QAEA/B,QAAQC,GAAG,CAAC,wBAAwB;YAClCyD,gBAAgBlB,mBAAmBiB,MAAM;YACzCR,OAAOlB;YACPX;YACA+B,YAAYC,KAAKC,IAAI,CAAC,AAACtB,CAAAA,SAAS,CAAA,IAAKR;QACvC;QAEAb,cAAM,CAACT,GAAG,CAACU,gBAAQ,CAACC,IAAI,EAAEC,mBAAW,CAACC,GAAG,EAAE,kCAAkC;YAC3EiB,OAAOS,mBAAmBiB,MAAM;YAChCR,OAAOlB;QACT;QAEA,OAAO1B,oBAAY,CAACC,IAAI,CAAC0C;IAE3B,EAAE,OAAOxC,OAAO;QACdR,QAAQQ,KAAK,CAAC,wCAAwCA;QACtDE,cAAM,CAACT,GAAG,CAACU,gBAAQ,CAAC2B,KAAK,EAAEzB,mBAAW,CAACC,GAAG,EAAE,qCAAqC;YAAEN;QAAM;QAEzF,OAAOH,oBAAY,CAACC,IAAI,CAAC;YACvBC,SAAS;YACTC,OAAO;YACPmD,SAASnD,iBAAiBoD,QAAQpD,MAAMgD,OAAO,GAAG;QACpD,GAAG;YAAE/C,QAAQ;QAAI;IACnB;AACF;AAEO,eAAeZ,KAAKE,OAAoB;IAC7C,IAAI;QACFC,QAAQC,GAAG,CAAC;QAEZ,0BAA0B;QAC1B,MAAMC,UAAU,MAAMC,IAAAA,YAAI;QAC1B,IAAI,CAACD,SAASE,MAAM;YAClB,OAAOC,oBAAY,CAACC,IAAI,CAAC;gBACvBC,SAAS;gBACTC,OAAO;YACT,GAAG;gBAAEC,QAAQ;YAAI;QACnB;QAEA,yCAAyC;QACzC,OAAOJ,oBAAY,CAACC,IAAI,CAAC;YACvBC,SAAS;YACTC,OAAO;YACPgD,SAAS;QACX,GAAG;YAAE/C,QAAQ;QAAI;IAEnB,EAAE,OAAOD,OAAO;QACdR,QAAQQ,KAAK,CAAC,yCAAyCA;QAEvD,OAAOH,oBAAY,CAACC,IAAI,CAAC;YACvBC,SAAS;YACTC,OAAO;YACPmD,SAASnD,iBAAiBoD,QAAQpD,MAAMgD,OAAO,GAAG;QACpD,GAAG;YAAE/C,QAAQ;QAAI;IACnB;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "bb8f62f8b1320b276a09531413e33c819c6546eb"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1278znm8x9 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1278znm8x9();
cov_1278znm8x9().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1278znm8x9().f[0]++;
  cov_1278znm8x9().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1278znm8x9().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1278znm8x9().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_1278znm8x9().f[1]++;
    cov_1278znm8x9().s[4]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_1278znm8x9().f[2]++;
    cov_1278znm8x9().s[5]++;
    return POST;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_1278znm8x9().f[3]++;
    cov_1278znm8x9().s[6]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_1278znm8x9().s[7]++, require("next/server"));
const _config =
/* istanbul ignore next */
(cov_1278znm8x9().s[8]++, require("../../../../lib/auth/config"));
const _server1 =
/* istanbul ignore next */
(cov_1278znm8x9().s[9]++, require("../../../../lib/integrations/supabase/server"));
const _logger =
/* istanbul ignore next */
(cov_1278znm8x9().s[10]++, require("../../../../lib/enterprise/logger"));
const runtime =
/* istanbul ignore next */
(cov_1278znm8x9().s[11]++, 'nodejs');
async function GET(request) {
  /* istanbul ignore next */
  cov_1278znm8x9().f[4]++;
  cov_1278znm8x9().s[12]++;
  try {
    /* istanbul ignore next */
    cov_1278znm8x9().s[13]++;
    console.log('ğ API: GET /api/admin/customers - Iniciando...');
    // Verificar autenticaciÃ³n
    const session =
    /* istanbul ignore next */
    (cov_1278znm8x9().s[14]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_1278znm8x9().s[15]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_1278znm8x9().b[0][0]++;
      cov_1278znm8x9().s[16]++;
      console.log('â Usuario no autenticado');
      /* istanbul ignore next */
      cov_1278znm8x9().s[17]++;
      return _server.NextResponse.json({
        success: false,
        error: 'No autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_1278znm8x9().b[0][1]++;
    }
    cov_1278znm8x9().s[18]++;
    _logger.logger.log(_logger.LogLevel.INFO, _logger.LogCategory.API, 'Fetching customers for admin', {
      userId: session.user.id
    });
    // Obtener parÃ¡metros de query
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_1278znm8x9().s[19]++, new URL(request.url));
    const page =
    /* istanbul ignore next */
    (cov_1278znm8x9().s[20]++, parseInt(
    /* istanbul ignore next */
    (cov_1278znm8x9().b[1][0]++, searchParams.get('page')) ||
    /* istanbul ignore next */
    (cov_1278znm8x9().b[1][1]++, '1')));
    const limit =
    /* istanbul ignore next */
    (cov_1278znm8x9().s[21]++, parseInt(
    /* istanbul ignore next */
    (cov_1278znm8x9().b[2][0]++, searchParams.get('limit')) ||
    /* istanbul ignore next */
    (cov_1278znm8x9().b[2][1]++, '50')));
    const search =
    /* istanbul ignore next */
    (cov_1278znm8x9().s[22]++,
    /* istanbul ignore next */
    (cov_1278znm8x9().b[3][0]++, searchParams.get('search')) ||
    /* istanbul ignore next */
    (cov_1278znm8x9().b[3][1]++, ''));
    /* istanbul ignore next */
    cov_1278znm8x9().s[23]++;
    console.log('ğ ParÃ¡metros:', {
      page,
      limit,
      search
    });
    // Calcular offset
    const offset =
    /* istanbul ignore next */
    (cov_1278znm8x9().s[24]++, (page - 1) * limit);
    // Construir query base
    const supabase =
    /* istanbul ignore next */
    (cov_1278znm8x9().s[25]++, (0, _server1.createAdminClient)());
    let query =
    /* istanbul ignore next */
    (cov_1278znm8x9().s[26]++, supabase.from('users').select('id, name, email, created_at', {
      count: 'exact'
    }));
    // Aplicar filtros de bÃºsqueda si se proporciona
    /* istanbul ignore next */
    cov_1278znm8x9().s[27]++;
    if (search) {
      /* istanbul ignore next */
      cov_1278znm8x9().b[4][0]++;
      cov_1278znm8x9().s[28]++;
      query = query.or(`name.ilike.%${search}%,email.ilike.%${search}%`);
    } else
    /* istanbul ignore next */
    {
      cov_1278znm8x9().b[4][1]++;
    }
    // Aplicar paginaciÃ³n y ordenamiento
    cov_1278znm8x9().s[29]++;
    query = query.order('created_at', {
      ascending: false
    }).range(offset, offset + limit - 1);
    const {
      data: customers,
      error,
      count
    } =
    /* istanbul ignore next */
    (cov_1278znm8x9().s[30]++, await query);
    /* istanbul ignore next */
    cov_1278znm8x9().s[31]++;
    if (error) {
      /* istanbul ignore next */
      cov_1278znm8x9().b[5][0]++;
      cov_1278znm8x9().s[32]++;
      _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.DATABASE, 'Error fetching customers', {
        error
      });
      /* istanbul ignore next */
      cov_1278znm8x9().s[33]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Error al obtener clientes'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_1278znm8x9().b[5][1]++;
    }
    // Formatear datos para el frontend
    const formattedCustomers =
    /* istanbul ignore next */
    (cov_1278znm8x9().s[34]++,
    /* istanbul ignore next */
    (cov_1278znm8x9().b[6][0]++, customers?.map(customer => {
      /* istanbul ignore next */
      cov_1278znm8x9().f[5]++;
      cov_1278znm8x9().s[35]++;
      return {
        id: customer.id,
        name:
        /* istanbul ignore next */
        (cov_1278znm8x9().b[7][0]++, customer.name) ||
        /* istanbul ignore next */
        (cov_1278znm8x9().b[7][1]++, 'Sin nombre'),
        email: customer.email,
        phone: '',
        address: '',
        created_at: customer.created_at
      };
    })) ||
    /* istanbul ignore next */
    (cov_1278znm8x9().b[6][1]++, []));
    const response =
    /* istanbul ignore next */
    (cov_1278znm8x9().s[36]++, {
      success: true,
      data: formattedCustomers,
      total:
      /* istanbul ignore next */
      (cov_1278znm8x9().b[8][0]++, count) ||
      /* istanbul ignore next */
      (cov_1278znm8x9().b[8][1]++, 0),
      pagination: {
        page,
        limit,
        totalPages: Math.ceil((
        /* istanbul ignore next */
        (cov_1278znm8x9().b[9][0]++, count) ||
        /* istanbul ignore next */
        (cov_1278znm8x9().b[9][1]++, 0)) / limit),
        hasNext: page < Math.ceil((
        /* istanbul ignore next */
        (cov_1278znm8x9().b[10][0]++, count) ||
        /* istanbul ignore next */
        (cov_1278znm8x9().b[10][1]++, 0)) / limit),
        hasPrev: page > 1
      },
      message: `${formattedCustomers.length} clientes encontrados de ${
      /* istanbul ignore next */
      (cov_1278znm8x9().b[11][0]++, count) ||
      /* istanbul ignore next */
      (cov_1278znm8x9().b[11][1]++, 0)} totales`
    });
    /* istanbul ignore next */
    cov_1278znm8x9().s[37]++;
    console.log('â Respuesta exitosa:', {
      customersCount: formattedCustomers.length,
      total: count,
      page,
      totalPages: Math.ceil((
      /* istanbul ignore next */
      (cov_1278znm8x9().b[12][0]++, count) ||
      /* istanbul ignore next */
      (cov_1278znm8x9().b[12][1]++, 0)) / limit)
    });
    /* istanbul ignore next */
    cov_1278znm8x9().s[38]++;
    _logger.logger.log(_logger.LogLevel.INFO, _logger.LogCategory.API, 'Customers fetched successfully', {
      count: formattedCustomers.length,
      total: count
    });
    /* istanbul ignore next */
    cov_1278znm8x9().s[39]++;
    return _server.NextResponse.json(response);
  } catch (error) {
    /* istanbul ignore next */
    cov_1278znm8x9().s[40]++;
    console.error('â Error en GET /api/admin/customers:', error);
    /* istanbul ignore next */
    cov_1278znm8x9().s[41]++;
    _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.API, 'Unexpected error in customers API', {
      error
    });
    /* istanbul ignore next */
    cov_1278znm8x9().s[42]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Error interno del servidor',
      details: error instanceof Error ?
      /* istanbul ignore next */
      (cov_1278znm8x9().b[13][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1278znm8x9().b[13][1]++, 'Error desconocido')
    }, {
      status: 500
    });
  }
}
async function POST(request) {
  /* istanbul ignore next */
  cov_1278znm8x9().f[6]++;
  cov_1278znm8x9().s[43]++;
  try {
    /* istanbul ignore next */
    cov_1278znm8x9().s[44]++;
    console.log('ğ API: POST /api/admin/customers - Iniciando...');
    // Verificar autenticaciÃ³n
    const session =
    /* istanbul ignore next */
    (cov_1278znm8x9().s[45]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_1278znm8x9().s[46]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_1278znm8x9().b[14][0]++;
      cov_1278znm8x9().s[47]++;
      return _server.NextResponse.json({
        success: false,
        error: 'No autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_1278znm8x9().b[14][1]++;
    }
    // TODO: Implementar creaciÃ³n de clientes
    cov_1278znm8x9().s[48]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Funcionalidad no implementada aÃºn',
      message: 'La creaciÃ³n de clientes estarÃ¡ disponible en una prÃ³xima versiÃ³n'
    }, {
      status: 501
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1278znm8x9().s[49]++;
    console.error('â Error en POST /api/admin/customers:', error);
    /* istanbul ignore next */
    cov_1278znm8x9().s[50]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Error interno del servidor',
      details: error instanceof Error ?
      /* istanbul ignore next */
      (cov_1278znm8x9().b[15][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1278znm8x9().b[15][1]++, 'Error desconocido')
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,