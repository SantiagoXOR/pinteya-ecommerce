c436f102b72311f641b47537ea83dbab
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_2e9k2aj7gc() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\debug\\simple-auth-check\\route.ts";
  var hash = "506cfdccff9ff85d6ba0f1c37f4d5446e61a1071";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\debug\\simple-auth-check\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 23
        }
      },
      "6": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 38
        }
      },
      "7": {
        start: {
          line: 21,
          column: 16
        },
        end: {
          line: 21,
          column: 54
        }
      },
      "8": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 24
        }
      },
      "9": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 84,
          column: 5
        }
      },
      "10": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 57
        }
      },
      "11": {
        start: {
          line: 27,
          column: 42
        },
        end: {
          line: 27,
          column: 67
        }
      },
      "12": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 36,
          column: 9
        }
      },
      "13": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 35,
          column: 15
        }
      },
      "14": {
        start: {
          line: 38,
          column: 29
        },
        end: {
          line: 38,
          column: 94
        }
      },
      "15": {
        start: {
          line: 38,
          column: 78
        },
        end: {
          line: 38,
          column: 87
        }
      },
      "16": {
        start: {
          line: 39,
          column: 34
        },
        end: {
          line: 39,
          column: 63
        }
      },
      "17": {
        start: {
          line: 41,
          column: 28
        },
        end: {
          line: 49,
          column: 9
        }
      },
      "18": {
        start: {
          line: 51,
          column: 27
        },
        end: {
          line: 57,
          column: 9
        }
      },
      "19": {
        start: {
          line: 58,
          column: 25
        },
        end: {
          line: 69,
          column: 9
        }
      },
      "20": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 70,
          column: 87
        }
      },
      "21": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 73,
          column: 11
        }
      },
      "22": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 59
        }
      },
      "23": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 83,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 19
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "GET",
        decl: {
          start: {
            line: 23,
            column: 15
          },
          end: {
            line: 23,
            column: 18
          }
        },
        loc: {
          start: {
            line: 23,
            column: 28
          },
          end: {
            line: 85,
            column: 1
          }
        },
        line: 23
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 38,
            column: 72
          },
          end: {
            line: 38,
            column: 73
          }
        },
        loc: {
          start: {
            line: 38,
            column: 78
          },
          end: {
            line: 38,
            column: 87
          }
        },
        line: 38
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "1": {
        loc: {
          start: {
            line: 38,
            column: 29
          },
          end: {
            line: 38,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 29
          },
          end: {
            line: 38,
            column: 88
          }
        }, {
          start: {
            line: 38,
            column: 92
          },
          end: {
            line: 38,
            column: 94
          }
        }],
        line: 38
      },
      "2": {
        loc: {
          start: {
            line: 54,
            column: 30
          },
          end: {
            line: 54,
            column: 129
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 30
          },
          end: {
            line: 54,
            column: 77
          }
        }, {
          start: {
            line: 54,
            column: 81
          },
          end: {
            line: 54,
            column: 129
          }
        }],
        line: 54
      },
      "3": {
        loc: {
          start: {
            line: 56,
            column: 30
          },
          end: {
            line: 56,
            column: 150
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 30
          },
          end: {
            line: 56,
            column: 77
          }
        }, {
          start: {
            line: 56,
            column: 81
          },
          end: {
            line: 56,
            column: 129
          }
        }, {
          start: {
            line: 56,
            column: 133
          },
          end: {
            line: 56,
            column: 150
          }
        }],
        line: 56
      },
      "4": {
        loc: {
          start: {
            line: 79,
            column: 21
          },
          end: {
            line: 79,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 79,
            column: 46
          },
          end: {
            line: 79,
            column: 59
          }
        }, {
          start: {
            line: 79,
            column: 62
          },
          end: {
            line: 79,
            column: 77
          }
        }],
        line: 79
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\debug\\simple-auth-check\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { auth } from '@/lib/auth/config';\r\n\r\n/**\r\n * API simple para verificar el estado de autenticaci\xF3n sin dependencias complejas\r\n * GET /api/debug/simple-auth-check\r\n */\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    console.log('\uD83D\uDD0D Simple Auth Check: Starting...');\r\n\r\n    // Verificar autenticaci\xF3n b\xE1sica\r\n    const { userId, sessionClaims } = await auth();\r\n    \r\n    if (!session?.user) {\r\n      return NextResponse.json(\r\n        { \r\n          success: false,\r\n          authenticated: false,\r\n          error: 'No authenticated user'\r\n        },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    // Verificar allowlist temporal\r\n    const adminUserIds = process.env.ADMIN_USER_IDS?.split(',').map(id => id.trim()) || [];\r\n    const isAllowlistedUser = adminUserIds.includes(userId);\r\n\r\n    // Informaci\xF3n b\xE1sica de la sesi\xF3n\r\n    const sessionInfo = {\r\n      userId,\r\n      isAllowlistedUser,\r\n      adminUserIdsCount: adminUserIds.length,\r\n      sessionClaims: {\r\n        publicMetadata: sessionClaims?.publicMetadata,\r\n        privateMetadata: sessionClaims?.privateMetadata\r\n      }\r\n    };\r\n\r\n    // Verificaciones de rol\r\n    const roleChecks = {\r\n      sessionPublicRole: sessionClaims?.publicMetadata?.role,\r\n      sessionPrivateRole: sessionClaims?.privateMetadata?.role,\r\n      isAdminBySession: (\r\n        sessionClaims?.publicMetadata?.role === 'admin' ||\r\n        sessionClaims?.privateMetadata?.role === 'admin'\r\n      ),\r\n      isAllowlistedUser,\r\n      finalAdminAccess: (\r\n        sessionClaims?.publicMetadata?.role === 'admin' ||\r\n        sessionClaims?.privateMetadata?.role === 'admin' ||\r\n        isAllowlistedUser\r\n      )\r\n    };\r\n\r\n    const response = {\r\n      success: true,\r\n      timestamp: new Date().toISOString(),\r\n      authenticated: true,\r\n      sessionInfo,\r\n      roleChecks,\r\n      debugInfo: {\r\n        environment: process.env.NODE_ENV,\r\n        hasAdminUserIds: !!process.env.ADMIN_USER_IDS,\r\n        adminUserIdsLength: adminUserIds.length\r\n      }\r\n    };\r\n\r\n    console.log('\u2705 Simple Auth Check: Success', JSON.stringify(response, null, 2));\r\n\r\n    return NextResponse.json(response, { status: 200 });\r\n\r\n  } catch (error) {\r\n    console.error('\u274C Simple Auth Check Error:', error);\r\n    \r\n    return NextResponse.json(\r\n      { \r\n        success: false,\r\n        error: 'Internal server error',\r\n        details: error instanceof Error ? error.message : 'Unknown error',\r\n        timestamp: new Date().toISOString()\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "runtime", "request", "console", "log", "userId", "sessionClaims", "auth", "session", "user", "NextResponse", "json", "success", "authenticated", "error", "status", "adminUserIds", "process", "env", "ADMIN_USER_IDS", "split", "map", "id", "trim", "isAllowlistedUser", "includes", "sessionInfo", "adminUserIdsCount", "length", "publicMetadata", "privateMetadata", "roleChecks", "sessionPublicRole", "role", "sessionPrivateRole", "isAdminBySession", "finalAdminAccess", "response", "timestamp", "Date", "toISOString", "debugInfo", "environment", "NODE_ENV", "hasAdminUserIds", "adminUserIdsLength", "JSON", "stringify", "details", "Error", "message"],
      mappings: "AAAA,qCAAqC;;;;;;;;;;;;QAUfA;eAAAA;;QATTC;eAAAA;;;wBAE6B;wBACrB;AAHd,MAAMA,UAAU;AAShB,eAAeD,IAAIE,OAAoB;IAC5C,IAAI;QACFC,QAAQC,GAAG,CAAC;QAEZ,iCAAiC;QACjC,MAAM,EAAEC,MAAM,EAAEC,aAAa,EAAE,GAAG,MAAMC,IAAAA,YAAI;QAE5C,IAAI,CAACC,SAASC,MAAM;YAClB,OAAOC,oBAAY,CAACC,IAAI,CACtB;gBACEC,SAAS;gBACTC,eAAe;gBACfC,OAAO;YACT,GACA;gBAAEC,QAAQ;YAAI;QAElB;QAEA,+BAA+B;QAC/B,MAAMC,eAAeC,QAAQC,GAAG,CAACC,cAAc,EAAEC,MAAM,KAAKC,IAAIC,CAAAA,KAAMA,GAAGC,IAAI,OAAO,EAAE;QACtF,MAAMC,oBAAoBR,aAAaS,QAAQ,CAACpB;QAEhD,kCAAkC;QAClC,MAAMqB,cAAc;YAClBrB;YACAmB;YACAG,mBAAmBX,aAAaY,MAAM;YACtCtB,eAAe;gBACbuB,gBAAgBvB,eAAeuB;gBAC/BC,iBAAiBxB,eAAewB;YAClC;QACF;QAEA,wBAAwB;QACxB,MAAMC,aAAa;YACjBC,mBAAmB1B,eAAeuB,gBAAgBI;YAClDC,oBAAoB5B,eAAewB,iBAAiBG;YACpDE,kBACE7B,eAAeuB,gBAAgBI,SAAS,WACxC3B,eAAewB,iBAAiBG,SAAS;YAE3CT;YACAY,kBACE9B,eAAeuB,gBAAgBI,SAAS,WACxC3B,eAAewB,iBAAiBG,SAAS,WACzCT;QAEJ;QAEA,MAAMa,WAAW;YACfzB,SAAS;YACT0B,WAAW,IAAIC,OAAOC,WAAW;YACjC3B,eAAe;YACfa;YACAK;YACAU,WAAW;gBACTC,aAAazB,QAAQC,GAAG,CAACyB,QAAQ;gBACjCC,iBAAiB,CAAC,CAAC3B,QAAQC,GAAG,CAACC,cAAc;gBAC7C0B,oBAAoB7B,aAAaY,MAAM;YACzC;QACF;QAEAzB,QAAQC,GAAG,CAAC,gCAAgC0C,KAAKC,SAAS,CAACV,UAAU,MAAM;QAE3E,OAAO3B,oBAAY,CAACC,IAAI,CAAC0B,UAAU;YAAEtB,QAAQ;QAAI;IAEnD,EAAE,OAAOD,OAAO;QACdX,QAAQW,KAAK,CAAC,8BAA8BA;QAE5C,OAAOJ,oBAAY,CAACC,IAAI,CACtB;YACEC,SAAS;YACTE,OAAO;YACPkC,SAASlC,iBAAiBmC,QAAQnC,MAAMoC,OAAO,GAAG;YAClDZ,WAAW,IAAIC,OAAOC,WAAW;QACnC,GACA;YAAEzB,QAAQ;QAAI;IAElB;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "506cfdccff9ff85d6ba0f1c37f4d5446e61a1071"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2e9k2aj7gc = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2e9k2aj7gc();
cov_2e9k2aj7gc().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2e9k2aj7gc().f[0]++;
  cov_2e9k2aj7gc().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2e9k2aj7gc().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_2e9k2aj7gc().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_2e9k2aj7gc().f[1]++;
    cov_2e9k2aj7gc().s[4]++;
    return GET;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_2e9k2aj7gc().f[2]++;
    cov_2e9k2aj7gc().s[5]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_2e9k2aj7gc().s[6]++, require("next/server"));
const _config =
/* istanbul ignore next */
(cov_2e9k2aj7gc().s[7]++, require("../../../../lib/auth/config"));
const runtime =
/* istanbul ignore next */
(cov_2e9k2aj7gc().s[8]++, 'nodejs');
async function GET(request) {
  /* istanbul ignore next */
  cov_2e9k2aj7gc().f[3]++;
  cov_2e9k2aj7gc().s[9]++;
  try {
    /* istanbul ignore next */
    cov_2e9k2aj7gc().s[10]++;
    console.log('ğ Simple Auth Check: Starting...');
    // Verificar autenticaciÃ³n bÃ¡sica
    const {
      userId,
      sessionClaims
    } =
    /* istanbul ignore next */
    (cov_2e9k2aj7gc().s[11]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_2e9k2aj7gc().s[12]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_2e9k2aj7gc().b[0][0]++;
      cov_2e9k2aj7gc().s[13]++;
      return _server.NextResponse.json({
        success: false,
        authenticated: false,
        error: 'No authenticated user'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_2e9k2aj7gc().b[0][1]++;
    }
    // Verificar allowlist temporal
    const adminUserIds =
    /* istanbul ignore next */
    (cov_2e9k2aj7gc().s[14]++,
    /* istanbul ignore next */
    (cov_2e9k2aj7gc().b[1][0]++, process.env.ADMIN_USER_IDS?.split(',').map(id => {
      /* istanbul ignore next */
      cov_2e9k2aj7gc().f[4]++;
      cov_2e9k2aj7gc().s[15]++;
      return id.trim();
    })) ||
    /* istanbul ignore next */
    (cov_2e9k2aj7gc().b[1][1]++, []));
    const isAllowlistedUser =
    /* istanbul ignore next */
    (cov_2e9k2aj7gc().s[16]++, adminUserIds.includes(userId));
    // InformaciÃ³n bÃ¡sica de la sesiÃ³n
    const sessionInfo =
    /* istanbul ignore next */
    (cov_2e9k2aj7gc().s[17]++, {
      userId,
      isAllowlistedUser,
      adminUserIdsCount: adminUserIds.length,
      sessionClaims: {
        publicMetadata: sessionClaims?.publicMetadata,
        privateMetadata: sessionClaims?.privateMetadata
      }
    });
    // Verificaciones de rol
    const roleChecks =
    /* istanbul ignore next */
    (cov_2e9k2aj7gc().s[18]++, {
      sessionPublicRole: sessionClaims?.publicMetadata?.role,
      sessionPrivateRole: sessionClaims?.privateMetadata?.role,
      isAdminBySession:
      /* istanbul ignore next */
      (cov_2e9k2aj7gc().b[2][0]++, sessionClaims?.publicMetadata?.role === 'admin') ||
      /* istanbul ignore next */
      (cov_2e9k2aj7gc().b[2][1]++, sessionClaims?.privateMetadata?.role === 'admin'),
      isAllowlistedUser,
      finalAdminAccess:
      /* istanbul ignore next */
      (cov_2e9k2aj7gc().b[3][0]++, sessionClaims?.publicMetadata?.role === 'admin') ||
      /* istanbul ignore next */
      (cov_2e9k2aj7gc().b[3][1]++, sessionClaims?.privateMetadata?.role === 'admin') ||
      /* istanbul ignore next */
      (cov_2e9k2aj7gc().b[3][2]++, isAllowlistedUser)
    });
    const response =
    /* istanbul ignore next */
    (cov_2e9k2aj7gc().s[19]++, {
      success: true,
      timestamp: new Date().toISOString(),
      authenticated: true,
      sessionInfo,
      roleChecks,
      debugInfo: {
        environment: process.env.NODE_ENV,
        hasAdminUserIds: !!process.env.ADMIN_USER_IDS,
        adminUserIdsLength: adminUserIds.length
      }
    });
    /* istanbul ignore next */
    cov_2e9k2aj7gc().s[20]++;
    console.log('â Simple Auth Check: Success', JSON.stringify(response, null, 2));
    /* istanbul ignore next */
    cov_2e9k2aj7gc().s[21]++;
    return _server.NextResponse.json(response, {
      status: 200
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2e9k2aj7gc().s[22]++;
    console.error('â Simple Auth Check Error:', error);
    /* istanbul ignore next */
    cov_2e9k2aj7gc().s[23]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Internal server error',
      details: error instanceof Error ?
      /* istanbul ignore next */
      (cov_2e9k2aj7gc().b[4][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2e9k2aj7gc().b[4][1]++, 'Unknown error'),
      timestamp: new Date().toISOString()
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,