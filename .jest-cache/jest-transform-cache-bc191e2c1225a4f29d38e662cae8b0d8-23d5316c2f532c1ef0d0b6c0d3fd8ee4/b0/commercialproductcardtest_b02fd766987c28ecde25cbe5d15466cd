f3beae3ceca45807831de8a18aa1a2ae
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_default(require("react"));
const _react1 = require("@testing-library/react");
const _productcardcommercial = require("../product-card-commercial");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
describe('CommercialProductCard', ()=>{
    const defaultProps = {
        image: '/test-image.jpg',
        title: 'Barniz Campbell 4L',
        brand: 'Petrilac',
        price: 19350,
        originalPrice: 21500,
        discount: '10%',
        stock: 12,
        onAddToCart: jest.fn()
    };
    beforeEach(()=>{
        jest.clearAllMocks();
    });
    it('renders correctly with all props', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_productcardcommercial.CommercialProductCard, {
            ...defaultProps
        }));
        expect(_react1.screen.getByTestId('commercial-product-card')).toBeInTheDocument();
        expect(_react1.screen.getByText('Barniz Campbell 4L')).toBeInTheDocument();
        expect(_react1.screen.getByText('Petrilac')).toBeInTheDocument();
        expect(_react1.screen.getByText('$19.350')).toBeInTheDocument();
        expect(_react1.screen.getByText('$21.500')).toBeInTheDocument();
    });
    it('shows "Nuevo" badge when isNew is true', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_productcardcommercial.CommercialProductCard, {
            ...defaultProps,
            isNew: true
        }));
        expect(_react1.screen.getByText('Nuevo')).toBeInTheDocument();
    });
    it('shows discount badge when discount is provided', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_productcardcommercial.CommercialProductCard, {
            ...defaultProps
        }));
        expect(_react1.screen.getByText('10%')).toBeInTheDocument();
        expect(_react1.screen.getByText('Descuento')).toBeInTheDocument();
        expect(_react1.screen.getByText('especial')).toBeInTheDocument();
    });
    it('shows installments information when provided', ()=>{
        const installments = {
            quantity: 3,
            amount: 6450,
            interestFree: true
        };
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_productcardcommercial.CommercialProductCard, {
            ...defaultProps,
            installments: installments
        }));
        expect(_react1.screen.getByText('3x de $6.450 sin interés')).toBeInTheDocument();
    });
    it('shows free shipping when freeShipping is true', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_productcardcommercial.CommercialProductCard, {
            ...defaultProps,
            freeShipping: true
        }));
        expect(_react1.screen.getByAltText('Envío gratis')).toBeInTheDocument();
    });
    it('shows free shipping automatically for prices >= 15000', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_productcardcommercial.CommercialProductCard, {
            ...defaultProps,
            price: 20000
        }));
        expect(_react1.screen.getByAltText('Envío gratis')).toBeInTheDocument();
    });
    it('shows delivery location when provided', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_productcardcommercial.CommercialProductCard, {
            ...defaultProps,
            freeShipping: true,
            deliveryLocation: "Llega gratis hoy en C\xf3rdoba Capital"
        }));
        // Ahora solo muestra el ícono, no el texto de ubicación
        expect(_react1.screen.getByAltText('Envío gratis')).toBeInTheDocument();
    });
    it('calls onAddToCart when button is clicked', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_productcardcommercial.CommercialProductCard, {
            ...defaultProps
        }));
        const button = _react1.screen.getByTestId('add-to-cart-btn');
        _react1.fireEvent.click(button);
        expect(defaultProps.onAddToCart).toHaveBeenCalledTimes(1);
    });
    it('shows loading state when adding to cart', async ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_productcardcommercial.CommercialProductCard, {
            ...defaultProps,
            showCartAnimation: true
        }));
        const button = _react1.screen.getByTestId('add-to-cart-btn');
        _react1.fireEvent.click(button);
        // Verificar que el botón está deshabilitado durante la carga
        expect(button).toBeDisabled();
        // Verificar que aparece el texto "Agregando..." (puede estar oculto en mobile)
        await (0, _react1.waitFor)(()=>{
            const loadingTexts = _react1.screen.getAllByText(/Agregando|\.\.\./);
            expect(loadingTexts.length).toBeGreaterThan(0);
        }, {
            timeout: 100
        });
        // Verificar que después de 1 segundo el botón vuelve a estar habilitado
        await (0, _react1.waitFor)(()=>{
            expect(button).not.toBeDisabled();
        }, {
            timeout: 1200
        });
    });
    it('disables button when stock is 0', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_productcardcommercial.CommercialProductCard, {
            ...defaultProps,
            stock: 0
        }));
        const button = _react1.screen.getByTestId('add-to-cart-btn');
        expect(button).toBeDisabled();
        expect(_react1.screen.getByText('Sin stock')).toBeInTheDocument();
    });
    it('shows placeholder when no image is provided', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_productcardcommercial.CommercialProductCard, {
            ...defaultProps,
            image: undefined
        }));
        const placeholder = _react1.screen.getByAltText('Sin imagen');
        expect(placeholder).toBeInTheDocument();
    });
    it('handles image error by showing placeholder', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_productcardcommercial.CommercialProductCard, {
            ...defaultProps
        }));
        const image = _react1.screen.getByAltText('Barniz Campbell 4L');
        _react1.fireEvent.error(image);
        expect(image).toHaveAttribute('src', '/images/products/placeholder.svg');
    });
    it('applies custom className', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_productcardcommercial.CommercialProductCard, {
            ...defaultProps,
            className: "custom-class"
        }));
        const card = _react1.screen.getByTestId('commercial-product-card');
        expect(card).toHaveClass('custom-class');
    });
    it('renders without brand when not provided', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_productcardcommercial.CommercialProductCard, {
            ...defaultProps,
            brand: undefined
        }));
        expect(_react1.screen.queryByText('Petrilac')).not.toBeInTheDocument();
    });
    it('renders without original price when not provided', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_productcardcommercial.CommercialProductCard, {
            ...defaultProps,
            originalPrice: undefined
        }));
        expect(_react1.screen.queryByText('$21.500')).not.toBeInTheDocument();
    });
    it('renders without discount badge when not provided', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_productcardcommercial.CommercialProductCard, {
            ...defaultProps,
            discount: undefined
        }));
        expect(_react1.screen.queryByText('10%')).not.toBeInTheDocument();
        expect(_react1.screen.queryByText('Descuento')).not.toBeInTheDocument();
        expect(_react1.screen.queryByText('especial')).not.toBeInTheDocument();
    });
    it('uses custom CTA text', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_productcardcommercial.CommercialProductCard, {
            ...defaultProps,
            cta: "Comprar ahora"
        }));
        expect(_react1.screen.getByText('Comprar ahora')).toBeInTheDocument();
    });
    it('renders children when provided', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_productcardcommercial.CommercialProductCard, {
            ...defaultProps,
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                "data-testid": "custom-child",
                children: "Custom content"
            })
        }));
        expect(_react1.screen.getByTestId('custom-child')).toBeInTheDocument();
        expect(_react1.screen.getByText('Custom content')).toBeInTheDocument();
    });
    it('handles zero price correctly', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_productcardcommercial.CommercialProductCard, {
            ...defaultProps,
            price: 0
        }));
        expect(_react1.screen.getByText('$0')).toBeInTheDocument();
    });
    it('formats large prices correctly', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_productcardcommercial.CommercialProductCard, {
            ...defaultProps,
            price: 123456
        }));
        expect(_react1.screen.getByText('$123.456')).toBeInTheDocument();
    });
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbWFydGlcXERlc2t0b3BcXERFU0FSUk9MTE9TV1xcQk9JTEVSUExBVFRFIEUtQ09NTUVSQ0VcXHNyY1xcY29tcG9uZW50c1xcdWlcXF9fdGVzdHNfX1xcY29tbWVyY2lhbC1wcm9kdWN0LWNhcmQudGVzdC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgcmVuZGVyLCBzY3JlZW4sIGZpcmVFdmVudCwgd2FpdEZvciB9IGZyb20gJ0B0ZXN0aW5nLWxpYnJhcnkvcmVhY3QnXG5pbXBvcnQgeyBDb21tZXJjaWFsUHJvZHVjdENhcmQgfSBmcm9tICcuLi9wcm9kdWN0LWNhcmQtY29tbWVyY2lhbCdcblxuZGVzY3JpYmUoJ0NvbW1lcmNpYWxQcm9kdWN0Q2FyZCcsICgpID0+IHtcbiAgY29uc3QgZGVmYXVsdFByb3BzID0ge1xuICAgIGltYWdlOiAnL3Rlc3QtaW1hZ2UuanBnJyxcbiAgICB0aXRsZTogJ0Jhcm5peiBDYW1wYmVsbCA0TCcsXG4gICAgYnJhbmQ6ICdQZXRyaWxhYycsXG4gICAgcHJpY2U6IDE5MzUwLFxuICAgIG9yaWdpbmFsUHJpY2U6IDIxNTAwLFxuICAgIGRpc2NvdW50OiAnMTAlJyxcbiAgICBzdG9jazogMTIsXG4gICAgb25BZGRUb0NhcnQ6IGplc3QuZm4oKSxcbiAgfVxuXG4gIGJlZm9yZUVhY2goKCkgPT4ge1xuICAgIGplc3QuY2xlYXJBbGxNb2NrcygpXG4gIH0pXG5cbiAgaXQoJ3JlbmRlcnMgY29ycmVjdGx5IHdpdGggYWxsIHByb3BzJywgKCkgPT4ge1xuICAgIHJlbmRlcig8Q29tbWVyY2lhbFByb2R1Y3RDYXJkIHsuLi5kZWZhdWx0UHJvcHN9IC8+KVxuXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRlc3RJZCgnY29tbWVyY2lhbC1wcm9kdWN0LWNhcmQnKSkudG9CZUluVGhlRG9jdW1lbnQoKVxuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KCdCYXJuaXogQ2FtcGJlbGwgNEwnKSkudG9CZUluVGhlRG9jdW1lbnQoKVxuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KCdQZXRyaWxhYycpKS50b0JlSW5UaGVEb2N1bWVudCgpXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoJyQxOS4zNTAnKSkudG9CZUluVGhlRG9jdW1lbnQoKVxuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KCckMjEuNTAwJykpLnRvQmVJblRoZURvY3VtZW50KClcbiAgfSlcblxuICBpdCgnc2hvd3MgXCJOdWV2b1wiIGJhZGdlIHdoZW4gaXNOZXcgaXMgdHJ1ZScsICgpID0+IHtcbiAgICByZW5kZXIoPENvbW1lcmNpYWxQcm9kdWN0Q2FyZCB7Li4uZGVmYXVsdFByb3BzfSBpc05ldz17dHJ1ZX0gLz4pXG5cbiAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGV4dCgnTnVldm8nKSkudG9CZUluVGhlRG9jdW1lbnQoKVxuICB9KVxuXG4gIGl0KCdzaG93cyBkaXNjb3VudCBiYWRnZSB3aGVuIGRpc2NvdW50IGlzIHByb3ZpZGVkJywgKCkgPT4ge1xuICAgIHJlbmRlcig8Q29tbWVyY2lhbFByb2R1Y3RDYXJkIHsuLi5kZWZhdWx0UHJvcHN9IC8+KVxuXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoJzEwJScpKS50b0JlSW5UaGVEb2N1bWVudCgpXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoJ0Rlc2N1ZW50bycpKS50b0JlSW5UaGVEb2N1bWVudCgpXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoJ2VzcGVjaWFsJykpLnRvQmVJblRoZURvY3VtZW50KClcbiAgfSlcblxuICBpdCgnc2hvd3MgaW5zdGFsbG1lbnRzIGluZm9ybWF0aW9uIHdoZW4gcHJvdmlkZWQnLCAoKSA9PiB7XG4gICAgY29uc3QgaW5zdGFsbG1lbnRzID0ge1xuICAgICAgcXVhbnRpdHk6IDMsXG4gICAgICBhbW91bnQ6IDY0NTAsXG4gICAgICBpbnRlcmVzdEZyZWU6IHRydWUsXG4gICAgfVxuXG4gICAgcmVuZGVyKDxDb21tZXJjaWFsUHJvZHVjdENhcmQgey4uLmRlZmF1bHRQcm9wc30gaW5zdGFsbG1lbnRzPXtpbnN0YWxsbWVudHN9IC8+KVxuXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoJzN4IGRlICQ2LjQ1MCBzaW4gaW50ZXLDqXMnKSkudG9CZUluVGhlRG9jdW1lbnQoKVxuICB9KVxuXG4gIGl0KCdzaG93cyBmcmVlIHNoaXBwaW5nIHdoZW4gZnJlZVNoaXBwaW5nIGlzIHRydWUnLCAoKSA9PiB7XG4gICAgcmVuZGVyKDxDb21tZXJjaWFsUHJvZHVjdENhcmQgey4uLmRlZmF1bHRQcm9wc30gZnJlZVNoaXBwaW5nPXt0cnVlfSAvPilcblxuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlBbHRUZXh0KCdFbnbDrW8gZ3JhdGlzJykpLnRvQmVJblRoZURvY3VtZW50KClcbiAgfSlcblxuICBpdCgnc2hvd3MgZnJlZSBzaGlwcGluZyBhdXRvbWF0aWNhbGx5IGZvciBwcmljZXMgPj0gMTUwMDAnLCAoKSA9PiB7XG4gICAgcmVuZGVyKDxDb21tZXJjaWFsUHJvZHVjdENhcmQgey4uLmRlZmF1bHRQcm9wc30gcHJpY2U9ezIwMDAwfSAvPilcblxuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlBbHRUZXh0KCdFbnbDrW8gZ3JhdGlzJykpLnRvQmVJblRoZURvY3VtZW50KClcbiAgfSlcblxuICBpdCgnc2hvd3MgZGVsaXZlcnkgbG9jYXRpb24gd2hlbiBwcm92aWRlZCcsICgpID0+IHtcbiAgICByZW5kZXIoXG4gICAgICA8Q29tbWVyY2lhbFByb2R1Y3RDYXJkXG4gICAgICAgIHsuLi5kZWZhdWx0UHJvcHN9XG4gICAgICAgIGZyZWVTaGlwcGluZz17dHJ1ZX1cbiAgICAgICAgZGVsaXZlcnlMb2NhdGlvbj0nTGxlZ2EgZ3JhdGlzIGhveSBlbiBDw7NyZG9iYSBDYXBpdGFsJ1xuICAgICAgLz5cbiAgICApXG5cbiAgICAvLyBBaG9yYSBzb2xvIG11ZXN0cmEgZWwgw61jb25vLCBubyBlbCB0ZXh0byBkZSB1YmljYWNpw7NuXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeUFsdFRleHQoJ0VudsOtbyBncmF0aXMnKSkudG9CZUluVGhlRG9jdW1lbnQoKVxuICB9KVxuXG4gIGl0KCdjYWxscyBvbkFkZFRvQ2FydCB3aGVuIGJ1dHRvbiBpcyBjbGlja2VkJywgKCkgPT4ge1xuICAgIHJlbmRlcig8Q29tbWVyY2lhbFByb2R1Y3RDYXJkIHsuLi5kZWZhdWx0UHJvcHN9IC8+KVxuXG4gICAgY29uc3QgYnV0dG9uID0gc2NyZWVuLmdldEJ5VGVzdElkKCdhZGQtdG8tY2FydC1idG4nKVxuICAgIGZpcmVFdmVudC5jbGljayhidXR0b24pXG5cbiAgICBleHBlY3QoZGVmYXVsdFByb3BzLm9uQWRkVG9DYXJ0KS50b0hhdmVCZWVuQ2FsbGVkVGltZXMoMSlcbiAgfSlcblxuICBpdCgnc2hvd3MgbG9hZGluZyBzdGF0ZSB3aGVuIGFkZGluZyB0byBjYXJ0JywgYXN5bmMgKCkgPT4ge1xuICAgIHJlbmRlcig8Q29tbWVyY2lhbFByb2R1Y3RDYXJkIHsuLi5kZWZhdWx0UHJvcHN9IHNob3dDYXJ0QW5pbWF0aW9uPXt0cnVlfSAvPilcblxuICAgIGNvbnN0IGJ1dHRvbiA9IHNjcmVlbi5nZXRCeVRlc3RJZCgnYWRkLXRvLWNhcnQtYnRuJylcbiAgICBmaXJlRXZlbnQuY2xpY2soYnV0dG9uKVxuXG4gICAgLy8gVmVyaWZpY2FyIHF1ZSBlbCBib3TDs24gZXN0w6EgZGVzaGFiaWxpdGFkbyBkdXJhbnRlIGxhIGNhcmdhXG4gICAgZXhwZWN0KGJ1dHRvbikudG9CZURpc2FibGVkKClcblxuICAgIC8vIFZlcmlmaWNhciBxdWUgYXBhcmVjZSBlbCB0ZXh0byBcIkFncmVnYW5kby4uLlwiIChwdWVkZSBlc3RhciBvY3VsdG8gZW4gbW9iaWxlKVxuICAgIGF3YWl0IHdhaXRGb3IoXG4gICAgICAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGxvYWRpbmdUZXh0cyA9IHNjcmVlbi5nZXRBbGxCeVRleHQoL0FncmVnYW5kb3xcXC5cXC5cXC4vKVxuICAgICAgICBleHBlY3QobG9hZGluZ1RleHRzLmxlbmd0aCkudG9CZUdyZWF0ZXJUaGFuKDApXG4gICAgICB9LFxuICAgICAgeyB0aW1lb3V0OiAxMDAgfVxuICAgIClcblxuICAgIC8vIFZlcmlmaWNhciBxdWUgZGVzcHXDqXMgZGUgMSBzZWd1bmRvIGVsIGJvdMOzbiB2dWVsdmUgYSBlc3RhciBoYWJpbGl0YWRvXG4gICAgYXdhaXQgd2FpdEZvcihcbiAgICAgICgpID0+IHtcbiAgICAgICAgZXhwZWN0KGJ1dHRvbikubm90LnRvQmVEaXNhYmxlZCgpXG4gICAgICB9LFxuICAgICAgeyB0aW1lb3V0OiAxMjAwIH1cbiAgICApXG4gIH0pXG5cbiAgaXQoJ2Rpc2FibGVzIGJ1dHRvbiB3aGVuIHN0b2NrIGlzIDAnLCAoKSA9PiB7XG4gICAgcmVuZGVyKDxDb21tZXJjaWFsUHJvZHVjdENhcmQgey4uLmRlZmF1bHRQcm9wc30gc3RvY2s9ezB9IC8+KVxuXG4gICAgY29uc3QgYnV0dG9uID0gc2NyZWVuLmdldEJ5VGVzdElkKCdhZGQtdG8tY2FydC1idG4nKVxuICAgIGV4cGVjdChidXR0b24pLnRvQmVEaXNhYmxlZCgpXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoJ1NpbiBzdG9jaycpKS50b0JlSW5UaGVEb2N1bWVudCgpXG4gIH0pXG5cbiAgaXQoJ3Nob3dzIHBsYWNlaG9sZGVyIHdoZW4gbm8gaW1hZ2UgaXMgcHJvdmlkZWQnLCAoKSA9PiB7XG4gICAgcmVuZGVyKDxDb21tZXJjaWFsUHJvZHVjdENhcmQgey4uLmRlZmF1bHRQcm9wc30gaW1hZ2U9e3VuZGVmaW5lZH0gLz4pXG5cbiAgICBjb25zdCBwbGFjZWhvbGRlciA9IHNjcmVlbi5nZXRCeUFsdFRleHQoJ1NpbiBpbWFnZW4nKVxuICAgIGV4cGVjdChwbGFjZWhvbGRlcikudG9CZUluVGhlRG9jdW1lbnQoKVxuICB9KVxuXG4gIGl0KCdoYW5kbGVzIGltYWdlIGVycm9yIGJ5IHNob3dpbmcgcGxhY2Vob2xkZXInLCAoKSA9PiB7XG4gICAgcmVuZGVyKDxDb21tZXJjaWFsUHJvZHVjdENhcmQgey4uLmRlZmF1bHRQcm9wc30gLz4pXG5cbiAgICBjb25zdCBpbWFnZSA9IHNjcmVlbi5nZXRCeUFsdFRleHQoJ0Jhcm5peiBDYW1wYmVsbCA0TCcpXG4gICAgZmlyZUV2ZW50LmVycm9yKGltYWdlKVxuXG4gICAgZXhwZWN0KGltYWdlKS50b0hhdmVBdHRyaWJ1dGUoJ3NyYycsICcvaW1hZ2VzL3Byb2R1Y3RzL3BsYWNlaG9sZGVyLnN2ZycpXG4gIH0pXG5cbiAgaXQoJ2FwcGxpZXMgY3VzdG9tIGNsYXNzTmFtZScsICgpID0+IHtcbiAgICByZW5kZXIoPENvbW1lcmNpYWxQcm9kdWN0Q2FyZCB7Li4uZGVmYXVsdFByb3BzfSBjbGFzc05hbWU9J2N1c3RvbS1jbGFzcycgLz4pXG5cbiAgICBjb25zdCBjYXJkID0gc2NyZWVuLmdldEJ5VGVzdElkKCdjb21tZXJjaWFsLXByb2R1Y3QtY2FyZCcpXG4gICAgZXhwZWN0KGNhcmQpLnRvSGF2ZUNsYXNzKCdjdXN0b20tY2xhc3MnKVxuICB9KVxuXG4gIGl0KCdyZW5kZXJzIHdpdGhvdXQgYnJhbmQgd2hlbiBub3QgcHJvdmlkZWQnLCAoKSA9PiB7XG4gICAgcmVuZGVyKDxDb21tZXJjaWFsUHJvZHVjdENhcmQgey4uLmRlZmF1bHRQcm9wc30gYnJhbmQ9e3VuZGVmaW5lZH0gLz4pXG5cbiAgICBleHBlY3Qoc2NyZWVuLnF1ZXJ5QnlUZXh0KCdQZXRyaWxhYycpKS5ub3QudG9CZUluVGhlRG9jdW1lbnQoKVxuICB9KVxuXG4gIGl0KCdyZW5kZXJzIHdpdGhvdXQgb3JpZ2luYWwgcHJpY2Ugd2hlbiBub3QgcHJvdmlkZWQnLCAoKSA9PiB7XG4gICAgcmVuZGVyKDxDb21tZXJjaWFsUHJvZHVjdENhcmQgey4uLmRlZmF1bHRQcm9wc30gb3JpZ2luYWxQcmljZT17dW5kZWZpbmVkfSAvPilcblxuICAgIGV4cGVjdChzY3JlZW4ucXVlcnlCeVRleHQoJyQyMS41MDAnKSkubm90LnRvQmVJblRoZURvY3VtZW50KClcbiAgfSlcblxuICBpdCgncmVuZGVycyB3aXRob3V0IGRpc2NvdW50IGJhZGdlIHdoZW4gbm90IHByb3ZpZGVkJywgKCkgPT4ge1xuICAgIHJlbmRlcig8Q29tbWVyY2lhbFByb2R1Y3RDYXJkIHsuLi5kZWZhdWx0UHJvcHN9IGRpc2NvdW50PXt1bmRlZmluZWR9IC8+KVxuXG4gICAgZXhwZWN0KHNjcmVlbi5xdWVyeUJ5VGV4dCgnMTAlJykpLm5vdC50b0JlSW5UaGVEb2N1bWVudCgpXG4gICAgZXhwZWN0KHNjcmVlbi5xdWVyeUJ5VGV4dCgnRGVzY3VlbnRvJykpLm5vdC50b0JlSW5UaGVEb2N1bWVudCgpXG4gICAgZXhwZWN0KHNjcmVlbi5xdWVyeUJ5VGV4dCgnZXNwZWNpYWwnKSkubm90LnRvQmVJblRoZURvY3VtZW50KClcbiAgfSlcblxuICBpdCgndXNlcyBjdXN0b20gQ1RBIHRleHQnLCAoKSA9PiB7XG4gICAgcmVuZGVyKDxDb21tZXJjaWFsUHJvZHVjdENhcmQgey4uLmRlZmF1bHRQcm9wc30gY3RhPSdDb21wcmFyIGFob3JhJyAvPilcblxuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KCdDb21wcmFyIGFob3JhJykpLnRvQmVJblRoZURvY3VtZW50KClcbiAgfSlcblxuICBpdCgncmVuZGVycyBjaGlsZHJlbiB3aGVuIHByb3ZpZGVkJywgKCkgPT4ge1xuICAgIHJlbmRlcihcbiAgICAgIDxDb21tZXJjaWFsUHJvZHVjdENhcmQgey4uLmRlZmF1bHRQcm9wc30+XG4gICAgICAgIDxkaXYgZGF0YS10ZXN0aWQ9J2N1c3RvbS1jaGlsZCc+Q3VzdG9tIGNvbnRlbnQ8L2Rpdj5cbiAgICAgIDwvQ29tbWVyY2lhbFByb2R1Y3RDYXJkPlxuICAgIClcblxuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXN0SWQoJ2N1c3RvbS1jaGlsZCcpKS50b0JlSW5UaGVEb2N1bWVudCgpXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoJ0N1c3RvbSBjb250ZW50JykpLnRvQmVJblRoZURvY3VtZW50KClcbiAgfSlcblxuICBpdCgnaGFuZGxlcyB6ZXJvIHByaWNlIGNvcnJlY3RseScsICgpID0+IHtcbiAgICByZW5kZXIoPENvbW1lcmNpYWxQcm9kdWN0Q2FyZCB7Li4uZGVmYXVsdFByb3BzfSBwcmljZT17MH0gLz4pXG5cbiAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGV4dCgnJDAnKSkudG9CZUluVGhlRG9jdW1lbnQoKVxuICB9KVxuXG4gIGl0KCdmb3JtYXRzIGxhcmdlIHByaWNlcyBjb3JyZWN0bHknLCAoKSA9PiB7XG4gICAgcmVuZGVyKDxDb21tZXJjaWFsUHJvZHVjdENhcmQgey4uLmRlZmF1bHRQcm9wc30gcHJpY2U9ezEyMzQ1Nn0gLz4pXG5cbiAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGV4dCgnJDEyMy40NTYnKSkudG9CZUluVGhlRG9jdW1lbnQoKVxuICB9KVxufSlcbiJdLCJuYW1lcyI6WyJkZXNjcmliZSIsImRlZmF1bHRQcm9wcyIsImltYWdlIiwidGl0bGUiLCJicmFuZCIsInByaWNlIiwib3JpZ2luYWxQcmljZSIsImRpc2NvdW50Iiwic3RvY2siLCJvbkFkZFRvQ2FydCIsImplc3QiLCJmbiIsImJlZm9yZUVhY2giLCJjbGVhckFsbE1vY2tzIiwiaXQiLCJyZW5kZXIiLCJDb21tZXJjaWFsUHJvZHVjdENhcmQiLCJleHBlY3QiLCJzY3JlZW4iLCJnZXRCeVRlc3RJZCIsInRvQmVJblRoZURvY3VtZW50IiwiZ2V0QnlUZXh0IiwiaXNOZXciLCJpbnN0YWxsbWVudHMiLCJxdWFudGl0eSIsImFtb3VudCIsImludGVyZXN0RnJlZSIsImZyZWVTaGlwcGluZyIsImdldEJ5QWx0VGV4dCIsImRlbGl2ZXJ5TG9jYXRpb24iLCJidXR0b24iLCJmaXJlRXZlbnQiLCJjbGljayIsInRvSGF2ZUJlZW5DYWxsZWRUaW1lcyIsInNob3dDYXJ0QW5pbWF0aW9uIiwidG9CZURpc2FibGVkIiwid2FpdEZvciIsImxvYWRpbmdUZXh0cyIsImdldEFsbEJ5VGV4dCIsImxlbmd0aCIsInRvQmVHcmVhdGVyVGhhbiIsInRpbWVvdXQiLCJub3QiLCJ1bmRlZmluZWQiLCJwbGFjZWhvbGRlciIsImVycm9yIiwidG9IYXZlQXR0cmlidXRlIiwiY2xhc3NOYW1lIiwiY2FyZCIsInRvSGF2ZUNsYXNzIiwicXVlcnlCeVRleHQiLCJjdGEiLCJkaXYiLCJkYXRhLXRlc3RpZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OERBQWtCO3dCQUNpQzt1Q0FDYjs7Ozs7O0FBRXRDQSxTQUFTLHlCQUF5QjtJQUNoQyxNQUFNQyxlQUFlO1FBQ25CQyxPQUFPO1FBQ1BDLE9BQU87UUFDUEMsT0FBTztRQUNQQyxPQUFPO1FBQ1BDLGVBQWU7UUFDZkMsVUFBVTtRQUNWQyxPQUFPO1FBQ1BDLGFBQWFDLEtBQUtDLEVBQUU7SUFDdEI7SUFFQUMsV0FBVztRQUNURixLQUFLRyxhQUFhO0lBQ3BCO0lBRUFDLEdBQUcsb0NBQW9DO1FBQ3JDQyxJQUFBQSxjQUFNLGdCQUFDLHFCQUFDQyw0Q0FBcUI7WUFBRSxHQUFHZixZQUFZOztRQUU5Q2dCLE9BQU9DLGNBQU0sQ0FBQ0MsV0FBVyxDQUFDLDRCQUE0QkMsaUJBQWlCO1FBQ3ZFSCxPQUFPQyxjQUFNLENBQUNHLFNBQVMsQ0FBQyx1QkFBdUJELGlCQUFpQjtRQUNoRUgsT0FBT0MsY0FBTSxDQUFDRyxTQUFTLENBQUMsYUFBYUQsaUJBQWlCO1FBQ3RESCxPQUFPQyxjQUFNLENBQUNHLFNBQVMsQ0FBQyxZQUFZRCxpQkFBaUI7UUFDckRILE9BQU9DLGNBQU0sQ0FBQ0csU0FBUyxDQUFDLFlBQVlELGlCQUFpQjtJQUN2RDtJQUVBTixHQUFHLDBDQUEwQztRQUMzQ0MsSUFBQUEsY0FBTSxnQkFBQyxxQkFBQ0MsNENBQXFCO1lBQUUsR0FBR2YsWUFBWTtZQUFFcUIsT0FBTzs7UUFFdkRMLE9BQU9DLGNBQU0sQ0FBQ0csU0FBUyxDQUFDLFVBQVVELGlCQUFpQjtJQUNyRDtJQUVBTixHQUFHLGtEQUFrRDtRQUNuREMsSUFBQUEsY0FBTSxnQkFBQyxx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