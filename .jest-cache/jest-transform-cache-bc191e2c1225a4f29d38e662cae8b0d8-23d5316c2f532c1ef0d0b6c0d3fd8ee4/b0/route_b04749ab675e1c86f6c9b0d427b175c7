0e82a2ce4588836a600a5f38dbb057b1
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_2p5aryfhh6() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\user\\sessions\\route.ts";
  var hash = "af54816d9c6f582bf6e4358895dccda096f9a9aa";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\user\\sessions\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 25,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 22
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 19
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 20
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 23
        }
      },
      "8": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 38
        }
      },
      "9": {
        start: {
          line: 27,
          column: 16
        },
        end: {
          line: 27,
          column: 54
        }
      },
      "10": {
        start: {
          line: 28,
          column: 18
        },
        end: {
          line: 28,
          column: 66
        }
      },
      "11": {
        start: {
          line: 29,
          column: 16
        },
        end: {
          line: 29,
          column: 24
        }
      },
      "12": {
        start: {
          line: 32,
          column: 15
        },
        end: {
          line: 32,
          column: 38
        }
      },
      "13": {
        start: {
          line: 34,
          column: 18
        },
        end: {
          line: 34,
          column: 27
        }
      },
      "14": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 38,
          column: 51
        }
      },
      "15": {
        start: {
          line: 35,
          column: 31
        },
        end: {
          line: 35,
          column: 50
        }
      },
      "16": {
        start: {
          line: 36,
          column: 9
        },
        end: {
          line: 38,
          column: 51
        }
      },
      "17": {
        start: {
          line: 36,
          column: 37
        },
        end: {
          line: 36,
          column: 57
        }
      },
      "18": {
        start: {
          line: 37,
          column: 9
        },
        end: {
          line: 38,
          column: 51
        }
      },
      "19": {
        start: {
          line: 37,
          column: 36
        },
        end: {
          line: 37,
          column: 55
        }
      },
      "20": {
        start: {
          line: 38,
          column: 9
        },
        end: {
          line: 38,
          column: 51
        }
      },
      "21": {
        start: {
          line: 38,
          column: 34
        },
        end: {
          line: 38,
          column: 51
        }
      },
      "22": {
        start: {
          line: 40,
          column: 13
        },
        end: {
          line: 40,
          column: 22
        }
      },
      "23": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 45,
          column: 44
        }
      },
      "24": {
        start: {
          line: 41,
          column: 32
        },
        end: {
          line: 41,
          column: 47
        }
      },
      "25": {
        start: {
          line: 42,
          column: 9
        },
        end: {
          line: 45,
          column: 44
        }
      },
      "26": {
        start: {
          line: 42,
          column: 33
        },
        end: {
          line: 42,
          column: 46
        }
      },
      "27": {
        start: {
          line: 43,
          column: 9
        },
        end: {
          line: 45,
          column: 44
        }
      },
      "28": {
        start: {
          line: 43,
          column: 35
        },
        end: {
          line: 43,
          column: 48
        }
      },
      "29": {
        start: {
          line: 44,
          column: 9
        },
        end: {
          line: 45,
          column: 44
        }
      },
      "30": {
        start: {
          line: 44,
          column: 37
        },
        end: {
          line: 44,
          column: 52
        }
      },
      "31": {
        start: {
          line: 45,
          column: 9
        },
        end: {
          line: 45,
          column: 44
        }
      },
      "32": {
        start: {
          line: 45,
          column: 33
        },
        end: {
          line: 45,
          column: 44
        }
      },
      "33": {
        start: {
          line: 47,
          column: 21
        },
        end: {
          line: 47,
          column: 30
        }
      },
      "34": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 49,
          column: 58
        }
      },
      "35": {
        start: {
          line: 48,
          column: 31
        },
        end: {
          line: 48,
          column: 53
        }
      },
      "36": {
        start: {
          line: 49,
          column: 9
        },
        end: {
          line: 49,
          column: 58
        }
      },
      "37": {
        start: {
          line: 49,
          column: 36
        },
        end: {
          line: 49,
          column: 58
        }
      },
      "38": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 54,
          column: 6
        }
      },
      "39": {
        start: {
          line: 58,
          column: 22
        },
        end: {
          line: 58,
          column: 60
        }
      },
      "40": {
        start: {
          line: 59,
          column: 19
        },
        end: {
          line: 59,
          column: 51
        }
      },
      "41": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 62,
          column: 5
        }
      },
      "42": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 46
        }
      },
      "43": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 65,
          column: 5
        }
      },
      "44": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 22
        }
      },
      "45": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 66,
          column: 35
        }
      },
      "46": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 120,
          column: 5
        }
      },
      "47": {
        start: {
          line: 71,
          column: 24
        },
        end: {
          line: 71,
          column: 49
        }
      },
      "48": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 78,
          column: 9
        }
      },
      "49": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 77,
          column: 15
        }
      },
      "50": {
        start: {
          line: 80,
          column: 26
        },
        end: {
          line: 80,
          column: 44
        }
      },
      "51": {
        start: {
          line: 81,
          column: 31
        },
        end: {
          line: 81,
          column: 119
        }
      },
      "52": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 88,
          column: 9
        }
      },
      "53": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 87,
          column: 15
        }
      },
      "54": {
        start: {
          line: 90,
          column: 42
        },
        end: {
          line: 92,
          column: 10
        }
      },
      "55": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 100,
          column: 9
        }
      },
      "56": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 94,
          column: 63
        }
      },
      "57": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 99,
          column: 15
        }
      },
      "58": {
        start: {
          line: 102,
          column: 26
        },
        end: {
          line: 102,
          column: 46
        }
      },
      "59": {
        start: {
          line: 103,
          column: 33
        },
        end: {
          line: 103,
          column: 72
        }
      },
      "60": {
        start: {
          line: 104,
          column: 36
        },
        end: {
          line: 107,
          column: 21
        }
      },
      "61": {
        start: {
          line: 104,
          column: 62
        },
        end: {
          line: 107,
          column: 13
        }
      },
      "62": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 112,
          column: 11
        }
      },
      "63": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 114,
          column: 65
        }
      },
      "64": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 119,
          column: 11
        }
      },
      "65": {
        start: {
          line: 123,
          column: 4
        },
        end: {
          line: 200,
          column: 5
        }
      },
      "66": {
        start: {
          line: 125,
          column: 24
        },
        end: {
          line: 125,
          column: 49
        }
      },
      "67": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 132,
          column: 9
        }
      },
      "68": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 131,
          column: 15
        }
      },
      "69": {
        start: {
          line: 134,
          column: 26
        },
        end: {
          line: 134,
          column: 44
        }
      },
      "70": {
        start: {
          line: 135,
          column: 31
        },
        end: {
          line: 135,
          column: 119
        }
      },
      "71": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 142,
          column: 9
        }
      },
      "72": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 141,
          column: 15
        }
      },
      "73": {
        start: {
          line: 144,
          column: 26
        },
        end: {
          line: 144,
          column: 65
        }
      },
      "74": {
        start: {
          line: 145,
          column: 25
        },
        end: {
          line: 145,
          column: 45
        }
      },
      "75": {
        start: {
          line: 146,
          column: 44
        },
        end: {
          line: 146,
          column: 69
        }
      },
      "76": {
        start: {
          line: 148,
          column: 42
        },
        end: {
          line: 148,
          column: 193
        }
      },
      "77": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 167,
          column: 9
        }
      },
      "78": {
        start: {
          line: 151,
          column: 52
        },
        end: {
          line: 153,
          column: 61
        }
      },
      "79": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 161,
          column: 13
        }
      },
      "80": {
        start: {
          line: 155,
          column: 16
        },
        end: {
          line: 155,
          column: 68
        }
      },
      "81": {
        start: {
          line: 156,
          column: 16
        },
        end: {
          line: 160,
          column: 19
        }
      },
      "82": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 166,
          column: 15
        }
      },
      "83": {
        start: {
          line: 169,
          column: 28
        },
        end: {
          line: 178,
          column: 9
        }
      },
      "84": {
        start: {
          line: 179,
          column: 44
        },
        end: {
          line: 179,
          column: 133
        }
      },
      "85": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 187,
          column: 9
        }
      },
      "86": {
        start: {
          line: 181,
          column: 12
        },
        end: {
          line: 181,
          column: 59
        }
      },
      "87": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 186,
          column: 15
        }
      },
      "88": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 192,
          column: 11
        }
      },
      "89": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 194,
          column: 66
        }
      },
      "90": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 199,
          column: 11
        }
      },
      "91": {
        start: {
          line: 203,
          column: 4
        },
        end: {
          line: 247,
          column: 5
        }
      },
      "92": {
        start: {
          line: 205,
          column: 24
        },
        end: {
          line: 205,
          column: 49
        }
      },
      "93": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 212,
          column: 9
        }
      },
      "94": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 211,
          column: 15
        }
      },
      "95": {
        start: {
          line: 214,
          column: 26
        },
        end: {
          line: 214,
          column: 44
        }
      },
      "96": {
        start: {
          line: 215,
          column: 31
        },
        end: {
          line: 215,
          column: 119
        }
      },
      "97": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 222,
          column: 9
        }
      },
      "98": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 221,
          column: 15
        }
      },
      "99": {
        start: {
          line: 224,
          column: 26
        },
        end: {
          line: 224,
          column: 46
        }
      },
      "100": {
        start: {
          line: 225,
          column: 33
        },
        end: {
          line: 225,
          column: 72
        }
      },
      "101": {
        start: {
          line: 227,
          column: 26
        },
        end: {
          line: 227,
          column: 174
        }
      },
      "102": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 235,
          column: 9
        }
      },
      "103": {
        start: {
          line: 229,
          column: 12
        },
        end: {
          line: 229,
          column: 62
        }
      },
      "104": {
        start: {
          line: 230,
          column: 12
        },
        end: {
          line: 234,
          column: 15
        }
      },
      "105": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 239,
          column: 11
        }
      },
      "106": {
        start: {
          line: 241,
          column: 8
        },
        end: {
          line: 241,
          column: 68
        }
      },
      "107": {
        start: {
          line: 242,
          column: 8
        },
        end: {
          line: 246,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 18
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 15
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 16
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 19
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "parseUserAgent",
        decl: {
          start: {
            line: 31,
            column: 9
          },
          end: {
            line: 31,
            column: 23
          }
        },
        loc: {
          start: {
            line: 31,
            column: 35
          },
          end: {
            line: 55,
            column: 1
          }
        },
        line: 31
      },
      "6": {
        name: "getClientIP",
        decl: {
          start: {
            line: 57,
            column: 9
          },
          end: {
            line: 57,
            column: 20
          }
        },
        loc: {
          start: {
            line: 57,
            column: 30
          },
          end: {
            line: 67,
            column: 1
          }
        },
        line: 57
      },
      "7": {
        name: "GET",
        decl: {
          start: {
            line: 68,
            column: 15
          },
          end: {
            line: 68,
            column: 18
          }
        },
        loc: {
          start: {
            line: 68,
            column: 28
          },
          end: {
            line: 121,
            column: 1
          }
        },
        line: 68
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 104,
            column: 50
          },
          end: {
            line: 104,
            column: 51
          }
        },
        loc: {
          start: {
            line: 104,
            column: 62
          },
          end: {
            line: 107,
            column: 13
          }
        },
        line: 104
      },
      "9": {
        name: "POST",
        decl: {
          start: {
            line: 122,
            column: 15
          },
          end: {
            line: 122,
            column: 19
          }
        },
        loc: {
          start: {
            line: 122,
            column: 29
          },
          end: {
            line: 201,
            column: 1
          }
        },
        line: 122
      },
      "10": {
        name: "DELETE",
        decl: {
          start: {
            line: 202,
            column: 15
          },
          end: {
            line: 202,
            column: 21
          }
        },
        loc: {
          start: {
            line: 202,
            column: 31
          },
          end: {
            line: 248,
            column: 1
          }
        },
        line: 202
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 38,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 38,
            column: 51
          }
        }, {
          start: {
            line: 36,
            column: 9
          },
          end: {
            line: 38,
            column: 51
          }
        }],
        line: 35
      },
      "1": {
        loc: {
          start: {
            line: 36,
            column: 9
          },
          end: {
            line: 38,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 9
          },
          end: {
            line: 38,
            column: 51
          }
        }, {
          start: {
            line: 37,
            column: 9
          },
          end: {
            line: 38,
            column: 51
          }
        }],
        line: 36
      },
      "2": {
        loc: {
          start: {
            line: 37,
            column: 9
          },
          end: {
            line: 38,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 9
          },
          end: {
            line: 38,
            column: 51
          }
        }, {
          start: {
            line: 38,
            column: 9
          },
          end: {
            line: 38,
            column: 51
          }
        }],
        line: 37
      },
      "3": {
        loc: {
          start: {
            line: 38,
            column: 9
          },
          end: {
            line: 38,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 9
          },
          end: {
            line: 38,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "4": {
        loc: {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 45,
            column: 44
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 45,
            column: 44
          }
        }, {
          start: {
            line: 42,
            column: 9
          },
          end: {
            line: 45,
            column: 44
          }
        }],
        line: 41
      },
      "5": {
        loc: {
          start: {
            line: 42,
            column: 9
          },
          end: {
            line: 45,
            column: 44
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 9
          },
          end: {
            line: 45,
            column: 44
          }
        }, {
          start: {
            line: 43,
            column: 9
          },
          end: {
            line: 45,
            column: 44
          }
        }],
        line: 42
      },
      "6": {
        loc: {
          start: {
            line: 43,
            column: 9
          },
          end: {
            line: 45,
            column: 44
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 9
          },
          end: {
            line: 45,
            column: 44
          }
        }, {
          start: {
            line: 44,
            column: 9
          },
          end: {
            line: 45,
            column: 44
          }
        }],
        line: 43
      },
      "7": {
        loc: {
          start: {
            line: 44,
            column: 9
          },
          end: {
            line: 45,
            column: 44
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 9
          },
          end: {
            line: 45,
            column: 44
          }
        }, {
          start: {
            line: 45,
            column: 9
          },
          end: {
            line: 45,
            column: 44
          }
        }],
        line: 44
      },
      "8": {
        loc: {
          start: {
            line: 45,
            column: 9
          },
          end: {
            line: 45,
            column: 44
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 9
          },
          end: {
            line: 45,
            column: 44
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 45
      },
      "9": {
        loc: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 49,
            column: 58
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 49,
            column: 58
          }
        }, {
          start: {
            line: 49,
            column: 9
          },
          end: {
            line: 49,
            column: 58
          }
        }],
        line: 48
      },
      "10": {
        loc: {
          start: {
            line: 49,
            column: 9
          },
          end: {
            line: 49,
            column: 58
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 9
          },
          end: {
            line: 49,
            column: 58
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "11": {
        loc: {
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "12": {
        loc: {
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "13": {
        loc: {
          start: {
            line: 66,
            column: 11
          },
          end: {
            line: 66,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 66,
            column: 11
          },
          end: {
            line: 66,
            column: 21
          }
        }, {
          start: {
            line: 66,
            column: 25
          },
          end: {
            line: 66,
            column: 34
          }
        }],
        line: 66
      },
      "14": {
        loc: {
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 78,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 78,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 72
      },
      "15": {
        loc: {
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "16": {
        loc: {
          start: {
            line: 93,
            column: 8
          },
          end: {
            line: 100,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 8
          },
          end: {
            line: 100,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 93
      },
      "17": {
        loc: {
          start: {
            line: 103,
            column: 33
          },
          end: {
            line: 103,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 103,
            column: 33
          },
          end: {
            line: 103,
            column: 66
          }
        }, {
          start: {
            line: 103,
            column: 70
          },
          end: {
            line: 103,
            column: 72
          }
        }],
        line: 103
      },
      "18": {
        loc: {
          start: {
            line: 104,
            column: 36
          },
          end: {
            line: 107,
            column: 21
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 104,
            column: 36
          },
          end: {
            line: 107,
            column: 15
          }
        }, {
          start: {
            line: 107,
            column: 19
          },
          end: {
            line: 107,
            column: 21
          }
        }],
        line: 104
      },
      "19": {
        loc: {
          start: {
            line: 106,
            column: 28
          },
          end: {
            line: 106,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 106,
            column: 28
          },
          end: {
            line: 106,
            column: 60
          }
        }, {
          start: {
            line: 106,
            column: 64
          },
          end: {
            line: 106,
            column: 103
          }
        }],
        line: 106
      },
      "20": {
        loc: {
          start: {
            line: 111,
            column: 19
          },
          end: {
            line: 111,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 111,
            column: 19
          },
          end: {
            line: 111,
            column: 35
          }
        }, {
          start: {
            line: 111,
            column: 39
          },
          end: {
            line: 111,
            column: 40
          }
        }],
        line: 111
      },
      "21": {
        loc: {
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 132,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 132,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 126
      },
      "22": {
        loc: {
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 142,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 142,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 136
      },
      "23": {
        loc: {
          start: {
            line: 144,
            column: 26
          },
          end: {
            line: 144,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 144,
            column: 26
          },
          end: {
            line: 144,
            column: 59
          }
        }, {
          start: {
            line: 144,
            column: 63
          },
          end: {
            line: 144,
            column: 65
          }
        }],
        line: 144
      },
      "24": {
        loc: {
          start: {
            line: 149,
            column: 8
          },
          end: {
            line: 167,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 149,
            column: 8
          },
          end: {
            line: 167,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 149
      },
      "25": {
        loc: {
          start: {
            line: 154,
            column: 12
          },
          end: {
            line: 161,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 154,
            column: 12
          },
          end: {
            line: 161,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 154
      },
      "26": {
        loc: {
          start: {
            line: 180,
            column: 8
          },
          end: {
            line: 187,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 180,
            column: 8
          },
          end: {
            line: 187,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 180
      },
      "27": {
        loc: {
          start: {
            line: 206,
            column: 8
          },
          end: {
            line: 212,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 206,
            column: 8
          },
          end: {
            line: 212,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 206
      },
      "28": {
        loc: {
          start: {
            line: 216,
            column: 8
          },
          end: {
            line: 222,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 216,
            column: 8
          },
          end: {
            line: 222,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 216
      },
      "29": {
        loc: {
          start: {
            line: 225,
            column: 33
          },
          end: {
            line: 225,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 225,
            column: 33
          },
          end: {
            line: 225,
            column: 66
          }
        }, {
          start: {
            line: 225,
            column: 70
          },
          end: {
            line: 225,
            column: 72
          }
        }],
        line: 225
      },
      "30": {
        loc: {
          start: {
            line: 228,
            column: 8
          },
          end: {
            line: 235,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 228,
            column: 8
          },
          end: {
            line: 235,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 228
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\user\\sessions\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - API DE GESTI\xD3N DE SESIONES\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { auth } from '@/lib/auth/config';\r\nimport { supabaseAdmin } from '@/lib/integrations/supabase';\r\n\r\n// Tipos para sesiones\r\nexport interface UserSession {\r\n  id: string;\r\n  user_id: string;\r\n  device_type: string;\r\n  device_name: string;\r\n  browser: string;\r\n  os: string;\r\n  ip_address: string;\r\n  location?: string;\r\n  is_current: boolean;\r\n  last_activity: string;\r\n  created_at: string;\r\n  user_agent: string;\r\n}\r\n\r\ninterface SessionCreateData {\r\n  device_type: string;\r\n  device_name: string;\r\n  browser: string;\r\n  os: string;\r\n  ip_address: string;\r\n  location?: string;\r\n  user_agent: string;\r\n}\r\n\r\n// Funci\xF3n para detectar informaci\xF3n del dispositivo\r\nfunction parseUserAgent(userAgent: string) {\r\n  const ua = userAgent.toLowerCase();\r\n  \r\n  // Detectar browser\r\n  let browser = 'Unknown';\r\n  if (ua.includes('chrome')) browser = 'Chrome';\r\n  else if (ua.includes('firefox')) browser = 'Firefox';\r\n  else if (ua.includes('safari')) browser = 'Safari';\r\n  else if (ua.includes('edge')) browser = 'Edge';\r\n  \r\n  // Detectar OS\r\n  let os = 'Unknown';\r\n  if (ua.includes('windows')) os = 'Windows';\r\n  else if (ua.includes('mac')) os = 'macOS';\r\n  else if (ua.includes('linux')) os = 'Linux';\r\n  else if (ua.includes('android')) os = 'Android';\r\n  else if (ua.includes('ios')) os = 'iOS';\r\n  \r\n  // Detectar tipo de dispositivo\r\n  let deviceType = 'desktop';\r\n  if (ua.includes('mobile')) deviceType = 'mobile';\r\n  else if (ua.includes('tablet')) deviceType = 'tablet';\r\n  \r\n  return { browser, os, deviceType };\r\n}\r\n\r\n// Funci\xF3n para obtener IP del cliente\r\nfunction getClientIP(request: NextRequest): string {\r\n  const forwarded = request.headers.get('x-forwarded-for');\r\n  const realIP = request.headers.get('x-real-ip');\r\n  \r\n  if (forwarded) {\r\n    return forwarded.split(',')[0].trim();\r\n  }\r\n  \r\n  if (realIP) {\r\n    return realIP;\r\n  }\r\n  \r\n  return request.ip || 'unknown';\r\n}\r\n\r\n// GET - Obtener sesiones activas del usuario\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    // Verificar autenticaci\xF3n\r\n    const session = await auth();\r\n    if (!session?.user) {\r\n      return NextResponse.json(\r\n        { error: 'Usuario no autenticado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    // Obtener usuario por email\r\n    const userEmail = session.user.email;\r\n    const { data: user } = await supabaseAdmin\r\n      .from('users')\r\n      .select('id')\r\n      .eq('email', userEmail)\r\n      .single();\r\n\r\n    if (!user) {\r\n      return NextResponse.json(\r\n        { error: 'Usuario no encontrado' },\r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    // Obtener sesiones activas del usuario\r\n    const { data: sessions, error } = await supabaseAdmin\r\n      .from('user_sessions')\r\n      .select('*')\r\n      .eq('user_id', user.id)\r\n      .order('last_activity', { ascending: false });\r\n\r\n    if (error) {\r\n      console.error('Error al obtener sesiones:', error);\r\n      return NextResponse.json(\r\n        { error: 'Error al obtener sesiones' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Marcar la sesi\xF3n actual\r\n    const currentIP = getClientIP(request);\r\n    const currentUserAgent = request.headers.get('user-agent') || '';\r\n    \r\n    const sessionsWithCurrent = sessions?.map(session => ({\r\n      ...session,\r\n      is_current: session.ip_address === currentIP && \r\n                  session.user_agent === currentUserAgent\r\n    })) || [];\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      sessions: sessionsWithCurrent,\r\n      total: sessions?.length || 0,\r\n    });\r\n  } catch (error) {\r\n    console.error('Error en GET /api/user/sessions:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// POST - Registrar nueva sesi\xF3n\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    // Verificar autenticaci\xF3n\r\n    const session = await auth();\r\n    if (!session?.user) {\r\n      return NextResponse.json(\r\n        { error: 'Usuario no autenticado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    // Obtener usuario por email\r\n    const userEmail = session.user.email;\r\n    const { data: user } = await supabaseAdmin\r\n      .from('users')\r\n      .select('id')\r\n      .eq('email', userEmail)\r\n      .single();\r\n\r\n    if (!user) {\r\n      return NextResponse.json(\r\n        { error: 'Usuario no encontrado' },\r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    // Obtener informaci\xF3n del dispositivo\r\n    const userAgent = request.headers.get('user-agent') || '';\r\n    const clientIP = getClientIP(request);\r\n    const { browser, os, deviceType } = parseUserAgent(userAgent);\r\n\r\n    // Verificar si ya existe una sesi\xF3n para este dispositivo\r\n    const { data: existingSession } = await supabaseAdmin\r\n      .from('user_sessions')\r\n      .select('id')\r\n      .eq('user_id', user.id)\r\n      .eq('ip_address', clientIP)\r\n      .eq('user_agent', userAgent)\r\n      .single();\r\n\r\n    if (existingSession) {\r\n      // Actualizar \xFAltima actividad\r\n      const { data: updatedSession, error } = await supabaseAdmin\r\n        .from('user_sessions')\r\n        .update({\r\n          last_activity: new Date().toISOString(),\r\n        })\r\n        .eq('id', existingSession.id)\r\n        .select()\r\n        .single();\r\n\r\n      if (error) {\r\n        console.error('Error al actualizar sesi\xF3n:', error);\r\n        return NextResponse.json(\r\n          { error: 'Error al actualizar sesi\xF3n' },\r\n          { status: 500 }\r\n        );\r\n      }\r\n\r\n      return NextResponse.json({\r\n        success: true,\r\n        session: updatedSession,\r\n        message: 'Sesi\xF3n actualizada',\r\n      });\r\n    }\r\n\r\n    // Crear nueva sesi\xF3n\r\n    const sessionData: Omit<UserSession, 'id' | 'created_at' | 'is_current'> = {\r\n      user_id: user.id,\r\n      device_type: deviceType,\r\n      device_name: `${os} ${browser}`,\r\n      browser,\r\n      os,\r\n      ip_address: clientIP,\r\n      user_agent: userAgent,\r\n      last_activity: new Date().toISOString(),\r\n    };\r\n\r\n    const { data: newSession, error } = await supabaseAdmin\r\n      .from('user_sessions')\r\n      .insert(sessionData)\r\n      .select()\r\n      .single();\r\n\r\n    if (error) {\r\n      console.error('Error al crear sesi\xF3n:', error);\r\n      return NextResponse.json(\r\n        { error: 'Error al crear sesi\xF3n' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      session: newSession,\r\n      message: 'Sesi\xF3n creada exitosamente',\r\n    });\r\n  } catch (error) {\r\n    console.error('Error en POST /api/user/sessions:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// DELETE - Cerrar todas las sesiones excepto la actual\r\nexport async function DELETE(request: NextRequest) {\r\n  try {\r\n    // Verificar autenticaci\xF3n\r\n    const session = await auth();\r\n    if (!session?.user) {\r\n      return NextResponse.json(\r\n        { error: 'Usuario no autenticado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    // Obtener usuario por email\r\n    const userEmail = session.user.email;\r\n    const { data: user } = await supabaseAdmin\r\n      .from('users')\r\n      .select('id')\r\n      .eq('email', userEmail)\r\n      .single();\r\n\r\n    if (!user) {\r\n      return NextResponse.json(\r\n        { error: 'Usuario no encontrado' },\r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    // Obtener informaci\xF3n de la sesi\xF3n actual\r\n    const currentIP = getClientIP(request);\r\n    const currentUserAgent = request.headers.get('user-agent') || '';\r\n\r\n    // Eliminar todas las sesiones excepto la actual\r\n    const { error } = await supabaseAdmin\r\n      .from('user_sessions')\r\n      .delete()\r\n      .eq('user_id', user.id)\r\n      .neq('ip_address', currentIP)\r\n      .neq('user_agent', currentUserAgent);\r\n\r\n    if (error) {\r\n      console.error('Error al cerrar sesiones:', error);\r\n      return NextResponse.json(\r\n        { error: 'Error al cerrar sesiones' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      message: 'Todas las sesiones remotas han sido cerradas',\r\n    });\r\n  } catch (error) {\r\n    console.error('Error en DELETE /api/user/sessions:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["DELETE", "GET", "POST", "runtime", "parseUserAgent", "userAgent", "ua", "toLowerCase", "browser", "includes", "os", "deviceType", "getClientIP", "request", "forwarded", "headers", "get", "realIP", "split", "trim", "ip", "session", "auth", "user", "NextResponse", "json", "error", "status", "userEmail", "email", "data", "supabaseAdmin", "from", "select", "eq", "single", "sessions", "id", "order", "ascending", "console", "currentIP", "currentUserAgent", "sessionsWithCurrent", "map", "is_current", "ip_address", "user_agent", "success", "total", "length", "clientIP", "existingSession", "updatedSession", "update", "last_activity", "Date", "toISOString", "message", "sessionData", "user_id", "device_type", "device_name", "newSession", "insert", "delete", "neq"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "af54816d9c6f582bf6e4358895dccda096f9a9aa"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2p5aryfhh6 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2p5aryfhh6();
cov_2p5aryfhh6().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2p5aryfhh6().f[0]++;
  cov_2p5aryfhh6().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2p5aryfhh6().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_2p5aryfhh6().s[3]++;
_export(exports, {
  get DELETE() {
    /* istanbul ignore next */
    cov_2p5aryfhh6().f[1]++;
    cov_2p5aryfhh6().s[4]++;
    return DELETE;
  },
  get GET() {
    /* istanbul ignore next */
    cov_2p5aryfhh6().f[2]++;
    cov_2p5aryfhh6().s[5]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_2p5aryfhh6().f[3]++;
    cov_2p5aryfhh6().s[6]++;
    return POST;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_2p5aryfhh6().f[4]++;
    cov_2p5aryfhh6().s[7]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_2p5aryfhh6().s[8]++, require("next/server"));
const _config =
/* istanbul ignore next */
(cov_2p5aryfhh6().s[9]++, require("../../../../lib/auth/config"));
const _supabase =
/* istanbul ignore next */
(cov_2p5aryfhh6().s[10]++, require("../../../../lib/integrations/supabase"));
const runtime =
/* istanbul ignore next */
(cov_2p5aryfhh6().s[11]++, 'nodejs');
// FunciÃ³n para detectar informaciÃ³n del dispositivo
function parseUserAgent(userAgent) {
  /* istanbul ignore next */
  cov_2p5aryfhh6().f[5]++;
  const ua =
  /* istanbul ignore next */
  (cov_2p5aryfhh6().s[12]++, userAgent.toLowerCase());
  // Detectar browser
  let browser =
  /* istanbul ignore next */
  (cov_2p5aryfhh6().s[13]++, 'Unknown');
  /* istanbul ignore next */
  cov_2p5aryfhh6().s[14]++;
  if (ua.includes('chrome')) {
    /* istanbul ignore next */
    cov_2p5aryfhh6().b[0][0]++;
    cov_2p5aryfhh6().s[15]++;
    browser = 'Chrome';
  } else {
    /* istanbul ignore next */
    cov_2p5aryfhh6().b[0][1]++;
    cov_2p5aryfhh6().s[16]++;
    if (ua.includes('firefox')) {
      /* istanbul ignore next */
      cov_2p5aryfhh6().b[1][0]++;
      cov_2p5aryfhh6().s[17]++;
      browser = 'Firefox';
    } else {
      /* istanbul ignore next */
      cov_2p5aryfhh6().b[1][1]++;
      cov_2p5aryfhh6().s[18]++;
      if (ua.includes('safari')) {
        /* istanbul ignore next */
        cov_2p5aryfhh6().b[2][0]++;
        cov_2p5aryfhh6().s[19]++;
        browser = 'Safari';
      } else {
        /* istanbul ignore next */
        cov_2p5aryfhh6().b[2][1]++;
        cov_2p5aryfhh6().s[20]++;
        if (ua.includes('edge')) {
          /* istanbul ignore next */
          cov_2p5aryfhh6().b[3][0]++;
          cov_2p5aryfhh6().s[21]++;
          browser = 'Edge';
        } else
        /* istanbul ignore next */
        {
          cov_2p5aryfhh6().b[3][1]++;
        }
      }
    }
  }
  // Detectar OS
  let os =
  /* istanbul ignore next */
  (cov_2p5aryfhh6().s[22]++, 'Unknown');
  /* istanbul ignore next */
  cov_2p5aryfhh6().s[23]++;
  if (ua.includes('windows')) {
    /* istanbul ignore next */
    cov_2p5aryfhh6().b[4][0]++;
    cov_2p5aryfhh6().s[24]++;
    os = 'Windows';
  } else {
    /* istanbul ignore next */
    cov_2p5aryfhh6().b[4][1]++;
    cov_2p5aryfhh6().s[25]++;
    if (ua.includes('mac')) {
      /* istanbul ignore next */
      cov_2p5aryfhh6().b[5][0]++;
      cov_2p5aryfhh6().s[26]++;
      os = 'macOS';
    } else {
      /* istanbul ignore next */
      cov_2p5aryfhh6().b[5][1]++;
      cov_2p5aryfhh6().s[27]++;
      if (ua.includes('linux')) {
        /* istanbul ignore next */
        cov_2p5aryfhh6().b[6][0]++;
        cov_2p5aryfhh6().s[28]++;
        os = 'Linux';
      } else {
        /* istanbul ignore next */
        cov_2p5aryfhh6().b[6][1]++;
        cov_2p5aryfhh6().s[29]++;
        if (ua.includes('android')) {
          /* istanbul ignore next */
          cov_2p5aryfhh6().b[7][0]++;
          cov_2p5aryfhh6().s[30]++;
          os = 'Android';
        } else {
          /* istanbul ignore next */
          cov_2p5aryfhh6().b[7][1]++;
          cov_2p5aryfhh6().s[31]++;
          if (ua.includes('ios')) {
            /* istanbul ignore next */
            cov_2p5aryfhh6().b[8][0]++;
            cov_2p5aryfhh6().s[32]++;
            os = 'iOS';
          } else
          /* istanbul ignore next */
          {
            cov_2p5aryfhh6().b[8][1]++;
          }
        }
      }
    }
  }
  // Detectar tipo de dispositivo
  let deviceType =
  /* istanbul ignore next */
  (cov_2p5aryfhh6().s[33]++, 'desktop');
  /* istanbul ignore next */
  cov_2p5aryfhh6().s[34]++;
  if (ua.includes('mobile')) {
    /* istanbul ignore next */
    cov_2p5aryfhh6().b[9][0]++;
    cov_2p5aryfhh6().s[35]++;
    deviceType = 'mobile';
  } else {
    /* istanbul ignore next */
    cov_2p5aryfhh6().b[9][1]++;
    cov_2p5aryfhh6().s[36]++;
    if (ua.includes('tablet')) {
      /* istanbul ignore next */
      cov_2p5aryfhh6().b[10][0]++;
      cov_2p5aryfhh6().s[37]++;
      deviceType = 'tablet';
    } else
    /* istanbul ignore next */
    {
      cov_2p5aryfhh6().b[10][1]++;
    }
  }
  /* istanbul ignore next */
  cov_2p5aryfhh6().s[38]++;
  return {
    browser,
    os,
    deviceType
  };
}
// FunciÃ³n para obtener IP del cliente
function getClientIP(request) {
  /* istanbul ignore next */
  cov_2p5aryfhh6().f[6]++;
  const forwarded =
  /* istanbul ignore next */
  (cov_2p5aryfhh6().s[39]++, request.headers.get('x-forwarded-for'));
  const realIP =
  /* istanbul ignore next */
  (cov_2p5aryfhh6().s[40]++, request.headers.get('x-real-ip'));
  /* istanbul ignore next */
  cov_2p5aryfhh6().s[41]++;
  if (forwarded) {
    /* istanbul ignore next */
    cov_2p5aryfhh6().b[11][0]++;
    cov_2p5aryfhh6().s[42]++;
    return forwarded.split(',')[0].trim();
  } else
  /* istanbul ignore next */
  {
    cov_2p5aryfhh6().b[11][1]++;
  }
  cov_2p5aryfhh6().s[43]++;
  if (realIP) {
    /* istanbul ignore next */
    cov_2p5aryfhh6().b[12][0]++;
    cov_2p5aryfhh6().s[44]++;
    return realIP;
  } else
  /* istanbul ignore next */
  {
    cov_2p5aryfhh6().b[12][1]++;
  }
  cov_2p5aryfhh6().s[45]++;
  return /* istanbul ignore next */(cov_2p5aryfhh6().b[13][0]++, request.ip) ||
  /* istanbul ignore next */
  (cov_2p5aryfhh6().b[13][1]++, 'unknown');
}
async function GET(request) {
  /* istanbul ignore next */
  cov_2p5aryfhh6().f[7]++;
  cov_2p5aryfhh6().s[46]++;
  try {
    // Verificar autenticaciÃ³n
    const session =
    /* istanbul ignore next */
    (cov_2p5aryfhh6().s[47]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_2p5aryfhh6().s[48]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_2p5aryfhh6().b[14][0]++;
      cov_2p5aryfhh6().s[49]++;
      return _server.NextResponse.json({
        error: 'Usuario no autenticado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_2p5aryfhh6().b[14][1]++;
    }
    // Obtener usuario por email
    const userEmail =
    /* istanbul ignore next */
    (cov_2p5aryfhh6().s[50]++, session.user.email);
    const {
      data: user
    } =
    /* istanbul ignore next */
    (cov_2p5aryfhh6().s[51]++, await _supabase.supabaseAdmin.from('users').select('id').eq('email', userEmail).single());
    /* istanbul ignore next */
    cov_2p5aryfhh6().s[52]++;
    if (!user) {
      /* istanbul ignore next */
      cov_2p5aryfhh6().b[15][0]++;
      cov_2p5aryfhh6().s[53]++;
      return _server.NextResponse.json({
        error: 'Usuario no encontrado'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_2p5aryfhh6().b[15][1]++;
    }
    // Obtener sesiones activas del usuario
    const {
      data: sessions,
      error
    } =
    /* istanbul ignore next */
    (cov_2p5aryfhh6().s[54]++, await _supabase.supabaseAdmin.from('user_sessions').select('*').eq('user_id', user.id).order('last_activity', {
      ascending: false
    }));
    /* istanbul ignore next */
    cov_2p5aryfhh6().s[55]++;
    if (error) {
      /* istanbul ignore next */
      cov_2p5aryfhh6().b[16][0]++;
      cov_2p5aryfhh6().s[56]++;
      console.error('Error al obtener sesiones:', error);
      /* istanbul ignore next */
      cov_2p5aryfhh6().s[57]++;
      return _server.NextResponse.json({
        error: 'Error al obtener sesiones'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_2p5aryfhh6().b[16][1]++;
    }
    // Marcar la sesiÃ³n actual
    const currentIP =
    /* istanbul ignore next */
    (cov_2p5aryfhh6().s[58]++, getClientIP(request));
    const currentUserAgent =
    /* istanbul ignore next */
    (cov_2p5aryfhh6().s[59]++,
    /* istanbul ignore next */
    (cov_2p5aryfhh6().b[17][0]++, request.headers.get('user-agent')) ||
    /* istanbul ignore next */
    (cov_2p5aryfhh6().b[17][1]++, ''));
    const sessionsWithCurrent =
    /* istanbul ignore next */
    (cov_2p5aryfhh6().s[60]++,
    /* istanbul ignore next */
    (cov_2p5aryfhh6().b[18][0]++, sessions?.map(session => {
      /* istanbul ignore next */
      cov_2p5aryfhh6().f[8]++;
      cov_2p5aryfhh6().s[61]++;
      return {
        ...session,
        is_current:
        /* istanbul ignore next */
        (cov_2p5aryfhh6().b[19][0]++, session.ip_address === currentIP) &&
        /* istanbul ignore next */
        (cov_2p5aryfhh6().b[19][1]++, session.user_agent === currentUserAgent)
      };
    })) ||
    /* istanbul ignore next */
    (cov_2p5aryfhh6().b[18][1]++, []));
    /* istanbul ignore next */
    cov_2p5aryfhh6().s[62]++;
    return _server.NextResponse.json({
      success: true,
      sessions: sessionsWithCurrent,
      total:
      /* istanbul ignore next */
      (cov_2p5aryfhh6().b[20][0]++, sessions?.length) ||
      /* istanbul ignore next */
      (cov_2p5aryfhh6().b[20][1]++, 0)
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2p5aryfhh6().s[63]++;
    console.error('Error en GET /api/user/sessions:', error);
    /* istanbul ignore next */
    cov_2p5aryfhh6().s[64]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
async function POST(request) {
  /* istanbul ignore next */
  cov_2p5aryfhh6().f[9]++;
  cov_2p5aryfhh6().s[65]++;
  try {
    // Verificar autenticaciÃ³n
    const session =
    /* istanbul ignore next */
    (cov_2p5aryfhh6().s[66]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_2p5aryfhh6().s[67]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_2p5aryfhh6().b[21][0]++;
      cov_2p5aryfhh6().s[68]++;
      return _server.NextResponse.json({
        error: 'Usuario no autenticado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_2p5aryfhh6().b[21][1]++;
    }
    // Obtener usuario por email
    const userEmail =
    /* istanbul ignore next */
    (cov_2p5aryfhh6().s[69]++, session.user.email);
    const {
      data: user
    } =
    /* istanbul ignore next */
    (cov_2p5aryfhh6().s[70]++, await _supabase.supabaseAdmin.from('users').select('id').eq('email', userEmail).single());
    /* istanbul ignore next */
    cov_2p5aryfhh6().s[71]++;
    if (!user) {
      /* istanbul ignore next */
      cov_2p5aryfhh6().b[22][0]++;
      cov_2p5aryfhh6().s[72]++;
      return _server.NextResponse.json({
        error: 'Usuario no encontrado'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_2p5aryfhh6().b[22][1]++;
    }
    // Obtener informaciÃ³n del dispositivo
    const userAgent =
    /* istanbul ignore next */
    (cov_2p5aryfhh6().s[73]++,
    /* istanbul ignore next */
    (cov_2p5aryfhh6().b[23][0]++, request.headers.get('user-agent')) ||
    /* istanbul ignore next */
    (cov_2p5aryfhh6().b[23][1]++, ''));
    const clientIP =
    /* istanbul ignore next */
    (cov_2p5aryfhh6().s[74]++, getClientIP(request));
    const {
      browser,
      os,
      deviceType
    } =
    /* istanbul ignore next */
    (cov_2p5aryfhh6().s[75]++, parseUserAgent(userAgent));
    // Verificar si ya existe una sesiÃ³n para este dispositivo
    const {
      data: existingSession
    } =
    /* istanbul ignore next */
    (cov_2p5aryfhh6().s[76]++, await _supabase.supabaseAdmin.from('user_sessions').select('id').eq('user_id', user.id).eq('ip_address', clientIP).eq('user_agent', userAgent).single());
    /* istanbul ignore next */
    cov_2p5aryfhh6().s[77]++;
    if (existingSession) {
      /* istanbul ignore next */
      cov_2p5aryfhh6().b[24][0]++;
      // Actualizar Ãºltima actividad
      const {
        data: updatedSession,
        error
      } =
      /* istanbul ignore next */
      (cov_2p5aryfhh6().s[78]++, await _supabase.supabaseAdmin.from('user_sessions').update({
        last_activity: new Date().toISOString()
      }).eq('id', existingSession.id).select().single());
      /* istanbul ignore next */
      cov_2p5aryfhh6().s[79]++;
      if (error) {
        /* istanbul ignore next */
        cov_2p5aryfhh6().b[25][0]++;
        cov_2p5aryfhh6().s[80]++;
        console.error('Error al actualizar sesiÃ³n:', error);
        /* istanbul ignore next */
        cov_2p5aryfhh6().s[81]++;
        return _server.NextResponse.json({
          error: 'Error al actualizar sesiÃ³n'
        }, {
          status: 500
        });
      } else
      /* istanbul ignore next */
      {
        cov_2p5aryfhh6().b[25][1]++;
      }
      cov_2p5aryfhh6().s[82]++;
      return _server.NextResponse.json({
        success: true,
        session: updatedSession,
        message: 'SesiÃ³n actualizada'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2p5aryfhh6().b[24][1]++;
    }
    // Crear nueva sesiÃ³n
    const sessionData =
    /* istanbul ignore next */
    (cov_2p5aryfhh6().s[83]++, {
      user_id: user.id,
      device_type: deviceType,
      device_name: `${os} ${browser}`,
      browser,
      os,
      ip_address: clientIP,
      user_agent: userAgent,
      last_activity: new Date().toISOString()
    });
    const {
      data: newSession,
      error
    } =
    /* istanbul ignore next */
    (cov_2p5aryfhh6().s[84]++, await _supabase.supabaseAdmin.from('user_sessions').insert(sessionData).select().single());
    /* istanbul ignore next */
    cov_2p5aryfhh6().s[85]++;
    if (error) {
      /* istanbul ignore next */
      cov_2p5aryfhh6().b[26][0]++;
      cov_2p5aryfhh6().s[86]++;
      console.error('Error al crear sesiÃ³n:', error);
      /* istanbul ignore next */
      cov_2p5aryfhh6().s[87]++;
      return _server.NextResponse.json({
        error: 'Error al crear sesiÃ³n'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_2p5aryfhh6().b[26][1]++;
    }
    cov_2p5aryfhh6().s[88]++;
    return _server.NextResponse.json({
      success: true,
      session: newSession,
      message: 'SesiÃ³n creada exitosamente'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2p5aryfhh6().s[89]++;
    console.error('Error en POST /api/user/sessions:', error);
    /* istanbul ignore next */
    cov_2p5aryfhh6().s[90]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
async function DELETE(request) {
  /* istanbul ignore next */
  cov_2p5aryfhh6().f[10]++;
  cov_2p5aryfhh6().s[91]++;
  try {
    // Verificar autenticaciÃ³n
    const session =
    /* istanbul ignore next */
    (cov_2p5aryfhh6().s[92]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_2p5aryfhh6().s[93]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_2p5aryfhh6().b[27][0]++;
      cov_2p5aryfhh6().s[94]++;
      return _server.NextResponse.json({
        error: 'Usuario no autenticado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_2p5aryfhh6().b[27][1]++;
    }
    // Obtener usuario por email
    const userEmail =
    /* istanbul ignore next */
    (cov_2p5aryfhh6().s[95]++, session.user.email);
    const {
      data: user
    } =
    /* istanbul ignore next */
    (cov_2p5aryfhh6().s[96]++, await _supabase.supabaseAdmin.from('users').select('id').eq('email', userEmail).single());
    /* istanbul ignore next */
    cov_2p5aryfhh6().s[97]++;
    if (!user) {
      /* istanbul ignore next */
      cov_2p5aryfhh6().b[28][0]++;
      cov_2p5aryfhh6().s[98]++;
      return _server.NextResponse.json({
        error: 'Usuario no encontrado'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_2p5aryfhh6().b[28][1]++;
    }
    // Obtener informaciÃ³n de la sesiÃ³n actual
    const currentIP =
    /* istanbul ignore next */
    (cov_2p5aryfhh6().s[99]++, getClientIP(request));
    const currentUserAgent =
    /* istanbul ignore next */
    (cov_2p5aryfhh6().s[100]++,
    /* istanbul ignore next */
    (cov_2p5aryfhh6().b[29][0]++, request.headers.get('user-agent')) ||
    /* istanbul ignore next */
    (cov_2p5aryfhh6().b[29][1]++, ''));
    // Eliminar todas las sesiones excepto la actual
    const {
      error
    } =
    /* istanbul ignore next */
    (cov_2p5aryfhh6().s[101]++, await _supabase.supabaseAdmin.from('user_sessions').delete().eq('user_id', user.id).neq('ip_address', currentIP).neq('user_agent', currentUserAgent));
    /* istanbul ignore next */
    cov_2p5aryfhh6().s[102]++;
    if (error) {
      /* istanbul ignore next */
      cov_2p5aryfhh6().b[30][0]++;
      cov_2p5aryfhh6().s[103]++;
      console.error('Error al cerrar sesiones:', error);
      /* istanbul ignore next */
      cov_2p5aryfhh6().s[104]++;
      return _server.NextResponse.json({
        error: 'Error al cerrar sesiones'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_2p5aryfhh6().b[30][1]++;
    }
    cov_2p5aryfhh6().s[105]++;
    return _server.NextResponse.json({
      success: true,
      message: 'Todas las sesiones remotas han sido cerradas'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2p5aryfhh6().s[106]++;
    console.error('Error en DELETE /api/user/sessions:', error);
    /* istanbul ignore next */
    cov_2p5aryfhh6().s[107]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,