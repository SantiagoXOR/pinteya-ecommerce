{"version":3,"names":["OrdersStatsDisplay","safeNumber","value","cov_10jdfdqir7","f","s","b","isNaN","isFinite","parsed","parseFloat","stats","isLoading","className","_jsxruntime","jsx","map","i","jsxs","safeStats","totalOrders","total_orders","pendingOrders","pending_orders","completedOrders","completed_orders","todayOrders","today_orders"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\admin\\orders\\OrdersStatsDisplay.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React from 'react';\r\n\r\ninterface OrderStats {\r\n  total_orders?: number | string;\r\n  pending_orders?: number | string;\r\n  completed_orders?: number | string;\r\n  today_orders?: number | string;\r\n}\r\n\r\ninterface OrdersStatsDisplayProps {\r\n  stats: OrderStats | null;\r\n  isLoading?: boolean;\r\n  className?: string;\r\n}\r\n\r\n// Función auxiliar para convertir cualquier valor a número seguro\r\nfunction safeNumber(value: any): number {\r\n  if (typeof value === 'number' && !isNaN(value) && isFinite(value)) {\r\n    return value;\r\n  }\r\n  if (typeof value === 'string') {\r\n    const parsed = parseFloat(value);\r\n    if (!isNaN(parsed) && isFinite(parsed)) {\r\n      return parsed;\r\n    }\r\n  }\r\n  return 0;\r\n}\r\n\r\nexport function OrdersStatsDisplay({ \r\n  stats, \r\n  isLoading = false, \r\n  className = \"\" \r\n}: OrdersStatsDisplayProps) {\r\n  if (isLoading) {\r\n    return (\r\n      <div className={`grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 ${className}`}>\r\n        {[1, 2, 3, 4].map((i) => (\r\n          <div key={i} className=\"animate-pulse\">\r\n            <div className=\"bg-white border rounded-lg p-6\">\r\n              <div className=\"h-4 bg-gray-200 rounded w-3/4 mb-2\"></div>\r\n              <div className=\"h-8 bg-gray-200 rounded w-1/2\"></div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // PROTECCIÓN TOTAL: Verificar que stats existe y convertir todos los valores a números seguros\r\n  const safeStats = stats || {};\r\n  const totalOrders = safeNumber(safeStats.total_orders);\r\n  const pendingOrders = safeNumber(safeStats.pending_orders);\r\n  const completedOrders = safeNumber(safeStats.completed_orders);\r\n  const todayOrders = safeNumber(safeStats.today_orders);\r\n\r\n  return (\r\n    <div className={`grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 ${className}`}>\r\n      <div className=\"bg-white border rounded-lg p-6\">\r\n        <h3 className=\"text-sm font-medium text-gray-500\">Total Órdenes</h3>\r\n        <p className=\"text-2xl font-bold\">{totalOrders}</p>\r\n      </div>\r\n      <div className=\"bg-white border rounded-lg p-6\">\r\n        <h3 className=\"text-sm font-medium text-gray-500\">Pendientes</h3>\r\n        <p className=\"text-2xl font-bold\">{pendingOrders}</p>\r\n      </div>\r\n      <div className=\"bg-white border rounded-lg p-6\">\r\n        <h3 className=\"text-sm font-medium text-gray-500\">Completadas</h3>\r\n        <p className=\"text-2xl font-bold\">{completedOrders}</p>\r\n      </div>\r\n      <div className=\"bg-white border rounded-lg p-6\">\r\n        <h3 className=\"text-sm font-medium text-gray-500\">Hoy</h3>\r\n        <p className=\"text-2xl font-bold\">{todayOrders}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappingsgB;;;;;;WAAAA,kBAAA;;;;;;;;wEA7BE;;;;;;;;;;;;;;;AAelB;AACA,SAASC,WAAWC,KAAU;EAAA;EAAAC,cAAA,GAAAC,CAAA;EAAAD,cAAA,GAAAE,CAAA;EAC5B;EAAI;EAAA,CAAAF,cAAA,GAAAG,CAAA,iBAAOJ,KAAA,KAAU;EAAA;EAAA,CAAAC,cAAA,GAAAG,CAAA,UAAY,CAACC,KAAA,CAAML,KAAA;EAAA;EAAA,CAAAC,cAAA,GAAAG,CAAA,UAAUE,QAAA,CAASN,KAAA,IAAQ;IAAA;IAAAC,cAAA,GAAAG,CAAA;IAAAH,cAAA,GAAAE,CAAA;IACjE,OAAOH,KAAA;EACT;EAAA;EAAA;IAAAC,cAAA,GAAAG,CAAA;EAAA;EAAAH,cAAA,GAAAE,CAAA;EACA,IAAI,OAAOH,KAAA,KAAU,UAAU;IAAA;IAAAC,cAAA,GAAAG,CAAA;IAC7B,MAAMG,MAAA;IAAA;IAAA,CAAAN,cAAA,GAAAE,CAAA,OAASK,UAAA,CAAWR,KAAA;IAAA;IAAAC,cAAA,GAAAE,CAAA;IAC1B;IAAI;IAAA,CAAAF,cAAA,GAAAG,CAAA,WAACC,KAAA,CAAME,MAAA;IAAA;IAAA,CAAAN,cAAA,GAAAG,CAAA,UAAWE,QAAA,CAASC,MAAA,IAAS;MAAA;MAAAN,cAAA,GAAAG,CAAA;MAAAH,cAAA,GAAAE,CAAA;MACtC,OAAOI,MAAA;IACT;IAAA;IAAA;MAAAN,cAAA,GAAAG,CAAA;IAAA;EACF;EAAA;EAAA;IAAAH,cAAA,GAAAG,CAAA;EAAA;EAAAH,cAAA,GAAAE,CAAA;EACA,OAAO;AACT;AAEO,SAASL,mBAAmB;EACjCW,KAAK;EACLC,SAAA;EAAA;EAAA,CAAAT,cAAA,GAAAG,CAAA,UAAY,KAAK;EACjBO,SAAA;EAAA;EAAA,CAAAV,cAAA,GAAAG,CAAA,UAAY,EAAE;AAAA,CACU;EAAA;EAAAH,cAAA,GAAAC,CAAA;EAAAD,cAAA,GAAAE,CAAA;EACxB,IAAIO,SAAA,EAAW;IAAA;IAAAT,cAAA,GAAAG,CAAA;IAAAH,cAAA,GAAAE,CAAA;IACb,oBACE,IAAAS,WAAA,CAAAC,GAAA,EAAC;MAAIF,SAAA,EAAW,wDAAwDA,SAAA,EAAW;gBAChF,CAAC,GAAG,GAAG,GAAG,EAAE,CAACG,GAAG,CAAEC,CAAA,IACjB;QAAA;QAAAd,cAAA,GAAAC,CAAA;QAAAD,cAAA,GAAAE,CAAA;QAAA,OADiB,aACjB,IAAAS,WAAA,CAAAC,GAAA,EAAC;UAAYF,SAAA,EAAU;oBACrB,iBAAAC,WAAA,CAAAI,IAAA,EAAC;YAAIL,SAAA,EAAU;oCACb,IAAAC,WAAA,CAAAC,GAAA,EAAC;cAAIF,SAAA,EAAU;6BACf,IAAAC,WAAA,CAAAC,GAAA,EAAC;cAAIF,SAAA,EAAU;;;WAHTI,CAAA;MAAA;;EASlB;EAAA;EAAA;IAAAd,cAAA,GAAAG,CAAA;EAAA;EAEA;EACA,MAAMa,SAAA;EAAA;EAAA,CAAAhB,cAAA,GAAAE,CAAA;EAAY;EAAA,CAAAF,cAAA,GAAAG,CAAA,WAAAK,KAAA;EAAA;EAAA,CAAAR,cAAA,GAAAG,CAAA,WAAS,CAAC;EAC5B,MAAMc,WAAA;EAAA;EAAA,CAAAjB,cAAA,GAAAE,CAAA,QAAcJ,UAAA,CAAWkB,SAAA,CAAUE,YAAY;EACrD,MAAMC,aAAA;EAAA;EAAA,CAAAnB,cAAA,GAAAE,CAAA,QAAgBJ,UAAA,CAAWkB,SAAA,CAAUI,cAAc;EACzD,MAAMC,eAAA;EAAA;EAAA,CAAArB,cAAA,GAAAE,CAAA,QAAkBJ,UAAA,CAAWkB,SAAA,CAAUM,gBAAgB;EAC7D,MAAMC,WAAA;EAAA;EAAA,CAAAvB,cAAA,GAAAE,CAAA,QAAcJ,UAAA,CAAWkB,SAAA,CAAUQ,YAAY;EAAA;EAAAxB,cAAA,GAAAE,CAAA;EAErD,oBACE,IAAAS,WAAA,CAAAI,IAAA,EAAC;IAAIL,SAAA,EAAW,wDAAwDA,SAAA,EAAW;4BACjF,IAAAC,WAAA,CAAAI,IAAA,EAAC;MAAIL,SAAA,EAAU;8BACb,IAAAC,WAAA,CAAAC,GAAA,EAAC;QAAGF,SAAA,EAAU;kBAAoC;uBAClD,IAAAC,WAAA,CAAAC,GAAA,EAAC;QAAEF,SAAA,EAAU;kBAAsBO;;qBAErC,IAAAN,WAAA,CAAAI,IAAA,EAAC;MAAIL,SAAA,EAAU;8BACb,IAAAC,WAAA,CAAAC,GAAA,EAAC;QAAGF,SAAA,EAAU;kBAAoC;uBAClD,IAAAC,WAAA,CAAAC,GAAA,EAAC;QAAEF,SAAA,EAAU;kBAAsBS;;qBAErC,IAAAR,WAAA,CAAAI,IAAA,EAAC;MAAIL,SAAA,EAAU;8BACb,IAAAC,WAAA,CAAAC,GAAA,EAAC;QAAGF,SAAA,EAAU;kBAAoC;uBAClD,IAAAC,WAAA,CAAAC,GAAA,EAAC;QAAEF,SAAA,EAAU;kBAAsBW;;qBAErC,IAAAV,WAAA,CAAAI,IAAA,EAAC;MAAIL,SAAA,EAAU;8BACb,IAAAC,WAAA,CAAAC,GAAA,EAAC;QAAGF,SAAA,EAAU;kBAAoC;uBAClD,IAAAC,WAAA,CAAAC,GAAA,EAAC;QAAEF,SAAA,EAAU;kBAAsBa;;;;AAI3C","ignoreList":[]}