d22007b31e500711949957ec08582e99
'use client';
"use strict";

/* istanbul ignore next */
function cov_2bnwzb2kh9() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\error-boundary\\advanced-error-boundary.tsx";
  var hash = "3b93246c6307175daf0694e2c372e824229e1c33";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\error-boundary\\advanced-error-boundary.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 37
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 72
        }
      },
      "5": {
        start: {
          line: 14,
          column: 21
        },
        end: {
          line: 14,
          column: 44
        }
      },
      "6": {
        start: {
          line: 15,
          column: 16
        },
        end: {
          line: 15,
          column: 53
        }
      },
      "7": {
        start: {
          line: 16,
          column: 14
        },
        end: {
          line: 16,
          column: 49
        }
      },
      "8": {
        start: {
          line: 17,
          column: 15
        },
        end: {
          line: 17,
          column: 51
        }
      },
      "9": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 51
        }
      },
      "10": {
        start: {
          line: 19,
          column: 39
        },
        end: {
          line: 19,
          column: 51
        }
      },
      "11": {
        start: {
          line: 20,
          column: 28
        },
        end: {
          line: 20,
          column: 41
        }
      },
      "12": {
        start: {
          line: 21,
          column: 27
        },
        end: {
          line: 21,
          column: 40
        }
      },
      "13": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 24,
          column: 20
        }
      },
      "14": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 66
        }
      },
      "15": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 29,
          column: 5
        }
      },
      "16": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 19
        }
      },
      "17": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 34,
          column: 5
        }
      },
      "18": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 33,
          column: 10
        }
      },
      "19": {
        start: {
          line: 35,
          column: 16
        },
        end: {
          line: 35,
          column: 53
        }
      },
      "20": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 38,
          column: 5
        }
      },
      "21": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 30
        }
      },
      "22": {
        start: {
          line: 39,
          column: 17
        },
        end: {
          line: 41,
          column: 5
        }
      },
      "23": {
        start: {
          line: 42,
          column: 32
        },
        end: {
          line: 42,
          column: 88
        }
      },
      "24": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 52,
          column: 5
        }
      },
      "25": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 51,
          column: 9
        }
      },
      "26": {
        start: {
          line: 45,
          column: 23
        },
        end: {
          line: 45,
          column: 95
        }
      },
      "27": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 50,
          column: 13
        }
      },
      "28": {
        start: {
          line: 47,
          column: 16
        },
        end: {
          line: 47,
          column: 57
        }
      },
      "29": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 49,
          column: 39
        }
      },
      "30": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 53,
          column: 25
        }
      },
      "31": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 56,
          column: 5
        }
      },
      "32": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 31
        }
      },
      "33": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 57,
          column: 18
        }
      },
      "34": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 151,
          column: 10
        }
      },
      "35": {
        start: {
          line: 65,
          column: 47
        },
        end: {
          line: 65,
          column: 57
        }
      },
      "36": {
        start: {
          line: 66,
          column: 41
        },
        end: {
          line: 66,
          column: 51
        }
      },
      "37": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 81,
          column: 32
        }
      },
      "38": {
        start: {
          line: 68,
          column: 16
        },
        end: {
          line: 80,
          column: 17
        }
      },
      "39": {
        start: {
          line: 70,
          column: 24
        },
        end: {
          line: 70,
          column: 43
        }
      },
      "40": {
        start: {
          line: 71,
          column: 24
        },
        end: {
          line: 71,
          column: 30
        }
      },
      "41": {
        start: {
          line: 73,
          column: 24
        },
        end: {
          line: 73,
          column: 49
        }
      },
      "42": {
        start: {
          line: 74,
          column: 24
        },
        end: {
          line: 74,
          column: 30
        }
      },
      "43": {
        start: {
          line: 76,
          column: 24
        },
        end: {
          line: 76,
          column: 51
        }
      },
      "44": {
        start: {
          line: 77,
          column: 24
        },
        end: {
          line: 77,
          column: 30
        }
      },
      "45": {
        start: {
          line: 79,
          column: 24
        },
        end: {
          line: 79,
          column: 30
        }
      },
      "46": {
        start: {
          line: 83,
          column: 58
        },
        end: {
          line: 83,
          column: 68
        }
      },
      "47": {
        start: {
          line: 84,
          column: 35
        },
        end: {
          line: 84,
          column: 45
        }
      },
      "48": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 88,
          column: 13
        }
      },
      "49": {
        start: {
          line: 86,
          column: 16
        },
        end: {
          line: 86,
          column: 76
        }
      },
      "50": {
        start: {
          line: 87,
          column: 16
        },
        end: {
          line: 87,
          column: 23
        }
      },
      "51": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 96,
          column: 46
        }
      },
      "52": {
        start: {
          line: 90,
          column: 16
        },
        end: {
          line: 95,
          column: 24
        }
      },
      "53": {
        start: {
          line: 90,
          column: 44
        },
        end: {
          line: 95,
          column: 21
        }
      },
      "54": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 103,
          column: 15
        }
      },
      "55": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 37
        }
      },
      "56": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 39
        }
      },
      "57": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 145,
          column: 13
        }
      },
      "58": {
        start: {
          line: 113,
          column: 31
        },
        end: {
          line: 140,
          column: 17
        }
      },
      "59": {
        start: {
          line: 142,
          column: 16
        },
        end: {
          line: 142,
          column: 51
        }
      },
      "60": {
        start: {
          line: 144,
          column: 16
        },
        end: {
          line: 144,
          column: 72
        }
      },
      "61": {
        start: {
          line: 147,
          column: 28
        },
        end: {
          line: 147,
          column: 66
        }
      },
      "62": {
        start: {
          line: 148,
          column: 25
        },
        end: {
          line: 148,
          column: 155
        }
      },
      "63": {
        start: {
          line: 149,
          column: 30
        },
        end: {
          line: 149,
          column: 130
        }
      },
      "64": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 150,
          column: 35
        }
      },
      "65": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 161,
          column: 10
        }
      },
      "66": {
        start: {
          line: 164,
          column: 24
        },
        end: {
          line: 164,
          column: 88
        }
      },
      "67": {
        start: {
          line: 165,
          column: 26
        },
        end: {
          line: 165,
          column: 68
        }
      },
      "68": {
        start: {
          line: 166,
          column: 33
        },
        end: {
          line: 166,
          column: 98
        }
      },
      "69": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 174,
          column: 10
        }
      },
      "70": {
        start: {
          line: 177,
          column: 52
        },
        end: {
          line: 177,
          column: 62
        }
      },
      "71": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 180,
          column: 11
        }
      },
      "72": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 184,
          column: 9
        }
      },
      "73": {
        start: {
          line: 183,
          column: 12
        },
        end: {
          line: 183,
          column: 47
        }
      },
      "74": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 188,
          column: 9
        }
      },
      "75": {
        start: {
          line: 187,
          column: 12
        },
        end: {
          line: 187,
          column: 58
        }
      },
      "76": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 192,
          column: 9
        }
      },
      "77": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 191,
          column: 39
        }
      },
      "78": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 193,
          column: 67
        }
      },
      "79": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 194,
          column: 51
        }
      },
      "80": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 199,
          column: 9
        }
      },
      "81": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 198,
          column: 46
        }
      },
      "82": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 202,
          column: 9
        }
      },
      "83": {
        start: {
          line: 201,
          column: 12
        },
        end: {
          line: 201,
          column: 49
        }
      },
      "84": {
        start: {
          line: 208,
          column: 24
        },
        end: {
          line: 208,
          column: 51
        }
      },
      "85": {
        start: {
          line: 209,
          column: 22
        },
        end: {
          line: 209,
          column: 54
        }
      },
      "86": {
        start: {
          line: 211,
          column: 8
        },
        end: {
          line: 213,
          column: 9
        }
      },
      "87": {
        start: {
          line: 212,
          column: 12
        },
        end: {
          line: 212,
          column: 27
        }
      },
      "88": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 217,
          column: 9
        }
      },
      "89": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 216,
          column: 29
        }
      },
      "90": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 221,
          column: 9
        }
      },
      "91": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 220,
          column: 31
        }
      },
      "92": {
        start: {
          line: 222,
          column: 8
        },
        end: {
          line: 222,
          column: 25
        }
      },
      "93": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 234,
          column: 9
        }
      },
      "94": {
        start: {
          line: 227,
          column: 16
        },
        end: {
          line: 227,
          column: 32
        }
      },
      "95": {
        start: {
          line: 229,
          column: 16
        },
        end: {
          line: 229,
          column: 31
        }
      },
      "96": {
        start: {
          line: 231,
          column: 16
        },
        end: {
          line: 231,
          column: 34
        }
      },
      "97": {
        start: {
          line: 233,
          column: 16
        },
        end: {
          line: 233,
          column: 31
        }
      },
      "98": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 253,
          column: 9
        }
      },
      "99": {
        start: {
          line: 240,
          column: 30
        },
        end: {
          line: 240,
          column: 49
        }
      },
      "100": {
        start: {
          line: 241,
          column: 12
        },
        end: {
          line: 243,
          column: 13
        }
      },
      "101": {
        start: {
          line: 242,
          column: 16
        },
        end: {
          line: 242,
          column: 36
        }
      },
      "102": {
        start: {
          line: 245,
          column: 31
        },
        end: {
          line: 245,
          column: 59
        }
      },
      "103": {
        start: {
          line: 246,
          column: 12
        },
        end: {
          line: 249,
          column: 13
        }
      },
      "104": {
        start: {
          line: 247,
          column: 29
        },
        end: {
          line: 247,
          column: 51
        }
      },
      "105": {
        start: {
          line: 248,
          column: 16
        },
        end: {
          line: 248,
          column: 31
        }
      },
      "106": {
        start: {
          line: 250,
          column: 12
        },
        end: {
          line: 250,
          column: 29
        }
      },
      "107": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 252,
          column: 29
        }
      },
      "108": {
        start: {
          line: 256,
          column: 8
        },
        end: {
          line: 263,
          column: 9
        }
      },
      "109": {
        start: {
          line: 257,
          column: 12
        },
        end: {
          line: 259,
          column: 13
        }
      },
      "110": {
        start: {
          line: 258,
          column: 16
        },
        end: {
          line: 258,
          column: 57
        }
      },
      "111": {
        start: {
          line: 260,
          column: 12
        },
        end: {
          line: 260,
          column: 29
        }
      },
      "112": {
        start: {
          line: 262,
          column: 12
        },
        end: {
          line: 262,
          column: 29
        }
      },
      "113": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 276,
          column: 9
        }
      },
      "114": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 273,
          column: 15
        }
      },
      "115": {
        start: {
          line: 275,
          column: 12
        },
        end: {
          line: 275,
          column: 67
        }
      },
      "116": {
        start: {
          line: 282,
          column: 77
        },
        end: {
          line: 282,
          column: 87
        }
      },
      "117": {
        start: {
          line: 283,
          column: 96
        },
        end: {
          line: 283,
          column: 106
        }
      },
      "118": {
        start: {
          line: 284,
          column: 8
        },
        end: {
          line: 291,
          column: 9
        }
      },
      "119": {
        start: {
          line: 286,
          column: 12
        },
        end: {
          line: 288,
          column: 13
        }
      },
      "120": {
        start: {
          line: 287,
          column: 16
        },
        end: {
          line: 287,
          column: 32
        }
      },
      "121": {
        start: {
          line: 290,
          column: 12
        },
        end: {
          line: 290,
          column: 118
        }
      },
      "122": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 292,
          column: 24
        }
      },
      "123": {
        start: {
          line: 295,
          column: 28
        },
        end: {
          line: 295,
          column: 44
        }
      },
      "124": {
        start: {
          line: 296,
          column: 25
        },
        end: {
          line: 296,
          column: 63
        }
      },
      "125": {
        start: {
          line: 297,
          column: 8
        },
        end: {
          line: 301,
          column: 9
        }
      },
      "126": {
        start: {
          line: 298,
          column: 12
        },
        end: {
          line: 298,
          column: 70
        }
      },
      "127": {
        start: {
          line: 300,
          column: 12
        },
        end: {
          line: 300,
          column: 75
        }
      },
      "128": {
        start: {
          line: 304,
          column: 8
        },
        end: {
          line: 412,
          column: 11
        }
      },
      "129": {
        start: {
          line: 399,
          column: 49
        },
        end: {
          line: 399,
          column: 67
        }
      },
      "130": {
        start: {
          line: 415,
          column: 8
        },
        end: {
          line: 446,
          column: 11
        }
      },
      "131": {
        start: {
          line: 449,
          column: 8
        },
        end: {
          line: 458,
          column: 9
        }
      },
      "132": {
        start: {
          line: 451,
          column: 16
        },
        end: {
          line: 451,
          column: 90
        }
      },
      "133": {
        start: {
          line: 453,
          column: 16
        },
        end: {
          line: 453,
          column: 77
        }
      },
      "134": {
        start: {
          line: 455,
          column: 16
        },
        end: {
          line: 455,
          column: 85
        }
      },
      "135": {
        start: {
          line: 457,
          column: 16
        },
        end: {
          line: 457,
          column: 96
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 18,
            column: 9
          },
          end: {
            line: 18,
            column: 33
          }
        },
        loc: {
          start: {
            line: 18,
            column: 47
          },
          end: {
            line: 25,
            column: 1
          }
        },
        line: 18
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 22,
            column: 39
          },
          end: {
            line: 22,
            column: 40
          }
        },
        loc: {
          start: {
            line: 22,
            column: 61
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 26,
            column: 9
          },
          end: {
            line: 26,
            column: 34
          }
        },
        loc: {
          start: {
            line: 26,
            column: 53
          },
          end: {
            line: 58,
            column: 1
          }
        },
        line: 26
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        },
        loc: {
          start: {
            line: 60,
            column: 22
          },
          end: {
            line: 162,
            column: 5
          }
        },
        line: 60
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 64,
            column: 35
          },
          end: {
            line: 64,
            column: 36
          }
        },
        loc: {
          start: {
            line: 64,
            column: 39
          },
          end: {
            line: 82,
            column: 9
          }
        },
        line: 64
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 67,
            column: 48
          },
          end: {
            line: 67,
            column: 49
          }
        },
        loc: {
          start: {
            line: 67,
            column: 52
          },
          end: {
            line: 81,
            column: 13
          }
        },
        line: 67
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 82,
            column: 30
          },
          end: {
            line: 82,
            column: 31
          }
        },
        loc: {
          start: {
            line: 82,
            column: 34
          },
          end: {
            line: 97,
            column: 9
          }
        },
        line: 82
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 89,
            column: 45
          },
          end: {
            line: 89,
            column: 46
          }
        },
        loc: {
          start: {
            line: 89,
            column: 49
          },
          end: {
            line: 96,
            column: 13
          }
        },
        line: 89
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 90,
            column: 30
          },
          end: {
            line: 90,
            column: 31
          }
        },
        loc: {
          start: {
            line: 90,
            column: 44
          },
          end: {
            line: 95,
            column: 21
          }
        },
        line: 90
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 97,
            column: 36
          },
          end: {
            line: 97,
            column: 37
          }
        },
        loc: {
          start: {
            line: 97,
            column: 40
          },
          end: {
            line: 104,
            column: 9
          }
        },
        line: 97
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 104,
            column: 31
          },
          end: {
            line: 104,
            column: 32
          }
        },
        loc: {
          start: {
            line: 104,
            column: 35
          },
          end: {
            line: 106,
            column: 9
          }
        },
        line: 104
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 106,
            column: 31
          },
          end: {
            line: 106,
            column: 32
          }
        },
        loc: {
          start: {
            line: 106,
            column: 35
          },
          end: {
            line: 108,
            column: 9
          }
        },
        line: 106
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 111,
            column: 27
          },
          end: {
            line: 111,
            column: 28
          }
        },
        loc: {
          start: {
            line: 111,
            column: 53
          },
          end: {
            line: 146,
            column: 9
          }
        },
        line: 111
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 146,
            column: 30
          },
          end: {
            line: 146,
            column: 31
          }
        },
        loc: {
          start: {
            line: 146,
            column: 34
          },
          end: {
            line: 151,
            column: 9
          }
        },
        line: 146
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 163,
            column: 4
          },
          end: {
            line: 163,
            column: 5
          }
        },
        loc: {
          start: {
            line: 163,
            column: 43
          },
          end: {
            line: 175,
            column: 5
          }
        },
        line: 163
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 176,
            column: 4
          },
          end: {
            line: 176,
            column: 5
          }
        },
        loc: {
          start: {
            line: 176,
            column: 40
          },
          end: {
            line: 195,
            column: 5
          }
        },
        line: 176
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 196,
            column: 4
          },
          end: {
            line: 196,
            column: 5
          }
        },
        loc: {
          start: {
            line: 196,
            column: 27
          },
          end: {
            line: 203,
            column: 5
          }
        },
        line: 196
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 207,
            column: 4
          },
          end: {
            line: 207,
            column: 5
          }
        },
        loc: {
          start: {
            line: 207,
            column: 32
          },
          end: {
            line: 223,
            column: 5
          }
        },
        line: 207
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 224,
            column: 4
          },
          end: {
            line: 224,
            column: 5
          }
        },
        loc: {
          start: {
            line: 224,
            column: 55
          },
          end: {
            line: 235,
            column: 5
          }
        },
        line: 224
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 236,
            column: 4
          },
          end: {
            line: 236,
            column: 5
          }
        },
        loc: {
          start: {
            line: 236,
            column: 16
          },
          end: {
            line: 254,
            column: 5
          }
        },
        line: 236
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 255,
            column: 4
          },
          end: {
            line: 255,
            column: 5
          }
        },
        loc: {
          start: {
            line: 255,
            column: 21
          },
          end: {
            line: 264,
            column: 5
          }
        },
        line: 255
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 265,
            column: 4
          },
          end: {
            line: 265,
            column: 5
          }
        },
        loc: {
          start: {
            line: 265,
            column: 34
          },
          end: {
            line: 277,
            column: 5
          }
        },
        line: 265
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 281,
            column: 4
          },
          end: {
            line: 281,
            column: 5
          }
        },
        loc: {
          start: {
            line: 281,
            column: 13
          },
          end: {
            line: 293,
            column: 5
          }
        },
        line: 281
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 294,
            column: 4
          },
          end: {
            line: 294,
            column: 5
          }
        },
        loc: {
          start: {
            line: 294,
            column: 98
          },
          end: {
            line: 302,
            column: 5
          }
        },
        line: 294
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 303,
            column: 4
          },
          end: {
            line: 303,
            column: 5
          }
        },
        loc: {
          start: {
            line: 303,
            column: 50
          },
          end: {
            line: 413,
            column: 5
          }
        },
        line: 303
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 399,
            column: 45
          },
          end: {
            line: 399,
            column: 46
          }
        },
        loc: {
          start: {
            line: 399,
            column: 49
          },
          end: {
            line: 399,
            column: 67
          }
        },
        line: 399
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 414,
            column: 4
          },
          end: {
            line: 414,
            column: 5
          }
        },
        loc: {
          start: {
            line: 414,
            column: 55
          },
          end: {
            line: 447,
            column: 5
          }
        },
        line: 414
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 448,
            column: 4
          },
          end: {
            line: 448,
            column: 5
          }
        },
        loc: {
          start: {
            line: 448,
            column: 31
          },
          end: {
            line: 459,
            column: 5
          }
        },
        line: 448
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "1": {
        loc: {
          start: {
            line: 23,
            column: 15
          },
          end: {
            line: 23,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 23,
            column: 29
          },
          end: {
            line: 23,
            column: 45
          }
        }, {
          start: {
            line: 23,
            column: 48
          },
          end: {
            line: 23,
            column: 65
          }
        }],
        line: 23
      },
      "2": {
        loc: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "3": {
        loc: {
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 27,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 27,
            column: 20
          }
        }, {
          start: {
            line: 27,
            column: 24
          },
          end: {
            line: 27,
            column: 27
          }
        }, {
          start: {
            line: 27,
            column: 31
          },
          end: {
            line: 27,
            column: 45
          }
        }],
        line: 27
      },
      "4": {
        loc: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "5": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 20
          }
        }, {
          start: {
            line: 30,
            column: 24
          },
          end: {
            line: 30,
            column: 47
          }
        }, {
          start: {
            line: 30,
            column: 51
          },
          end: {
            line: 30,
            column: 76
          }
        }],
        line: 30
      },
      "6": {
        loc: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "7": {
        loc: {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 13
          }
        }, {
          start: {
            line: 36,
            column: 17
          },
          end: {
            line: 36,
            column: 31
          }
        }],
        line: 36
      },
      "8": {
        loc: {
          start: {
            line: 42,
            column: 32
          },
          end: {
            line: 42,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 32
          },
          end: {
            line: 42,
            column: 53
          }
        }, {
          start: {
            line: 42,
            column: 57
          },
          end: {
            line: 42,
            column: 88
          }
        }],
        line: 42
      },
      "9": {
        loc: {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 51,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 51,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "10": {
        loc: {
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 44,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 44,
            column: 29
          }
        }, {
          start: {
            line: 44,
            column: 33
          },
          end: {
            line: 44,
            column: 79
          }
        }],
        line: 44
      },
      "11": {
        loc: {
          start: {
            line: 45,
            column: 23
          },
          end: {
            line: 45,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 45,
            column: 47
          },
          end: {
            line: 45,
            column: 88
          }
        }, {
          start: {
            line: 45,
            column: 91
          },
          end: {
            line: 45,
            column: 95
          }
        }],
        line: 45
      },
      "12": {
        loc: {
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 50,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 50,
            column: 13
          }
        }, {
          start: {
            line: 48,
            column: 19
          },
          end: {
            line: 50,
            column: 13
          }
        }],
        line: 46
      },
      "13": {
        loc: {
          start: {
            line: 46,
            column: 16
          },
          end: {
            line: 46,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 16
          },
          end: {
            line: 46,
            column: 20
          }
        }, {
          start: {
            line: 46,
            column: 25
          },
          end: {
            line: 46,
            column: 33
          }
        }, {
          start: {
            line: 46,
            column: 37
          },
          end: {
            line: 46,
            column: 45
          }
        }],
        line: 46
      },
      "14": {
        loc: {
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "15": {
        loc: {
          start: {
            line: 65,
            column: 20
          },
          end: {
            line: 65,
            column: 42
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 65,
            column: 38
          },
          end: {
            line: 65,
            column: 42
          }
        }],
        line: 65
      },
      "16": {
        loc: {
          start: {
            line: 68,
            column: 16
          },
          end: {
            line: 80,
            column: 17
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 69,
            column: 20
          },
          end: {
            line: 71,
            column: 30
          }
        }, {
          start: {
            line: 72,
            column: 20
          },
          end: {
            line: 74,
            column: 30
          }
        }, {
          start: {
            line: 75,
            column: 20
          },
          end: {
            line: 77,
            column: 30
          }
        }, {
          start: {
            line: 78,
            column: 20
          },
          end: {
            line: 79,
            column: 30
          }
        }],
        line: 68
      },
      "17": {
        loc: {
          start: {
            line: 83,
            column: 20
          },
          end: {
            line: 83,
            column: 34
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 83,
            column: 33
          },
          end: {
            line: 83,
            column: 34
          }
        }],
        line: 83
      },
      "18": {
        loc: {
          start: {
            line: 83,
            column: 36
          },
          end: {
            line: 83,
            column: 53
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 83,
            column: 49
          },
          end: {
            line: 83,
            column: 53
          }
        }],
        line: 83
      },
      "19": {
        loc: {
          start: {
            line: 85,
            column: 12
          },
          end: {
            line: 88,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 12
          },
          end: {
            line: 88,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "20": {
        loc: {
          start: {
            line: 125,
            column: 31
          },
          end: {
            line: 125,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 125,
            column: 31
          },
          end: {
            line: 125,
            column: 47
          }
        }, {
          start: {
            line: 125,
            column: 51
          },
          end: {
            line: 125,
            column: 62
          }
        }],
        line: 125
      },
      "21": {
        loc: {
          start: {
            line: 126,
            column: 35
          },
          end: {
            line: 126,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 126,
            column: 35
          },
          end: {
            line: 126,
            column: 53
          }
        }, {
          start: {
            line: 126,
            column: 57
          },
          end: {
            line: 126,
            column: 66
          }
        }],
        line: 126
      },
      "22": {
        loc: {
          start: {
            line: 177,
            column: 25
          },
          end: {
            line: 177,
            column: 47
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 177,
            column: 43
          },
          end: {
            line: 177,
            column: 47
          }
        }],
        line: 177
      },
      "23": {
        loc: {
          start: {
            line: 182,
            column: 8
          },
          end: {
            line: 184,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 182,
            column: 8
          },
          end: {
            line: 184,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 182
      },
      "24": {
        loc: {
          start: {
            line: 186,
            column: 8
          },
          end: {
            line: 188,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 186,
            column: 8
          },
          end: {
            line: 188,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 186
      },
      "25": {
        loc: {
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 192,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 192,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 190
      },
      "26": {
        loc: {
          start: {
            line: 197,
            column: 8
          },
          end: {
            line: 199,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 197,
            column: 8
          },
          end: {
            line: 199,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 197
      },
      "27": {
        loc: {
          start: {
            line: 200,
            column: 8
          },
          end: {
            line: 202,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 200,
            column: 8
          },
          end: {
            line: 202,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 200
      },
      "28": {
        loc: {
          start: {
            line: 209,
            column: 22
          },
          end: {
            line: 209,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 209,
            column: 22
          },
          end: {
            line: 209,
            column: 48
          }
        }, {
          start: {
            line: 209,
            column: 52
          },
          end: {
            line: 209,
            column: 54
          }
        }],
        line: 209
      },
      "29": {
        loc: {
          start: {
            line: 211,
            column: 8
          },
          end: {
            line: 213,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 211,
            column: 8
          },
          end: {
            line: 213,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 211
      },
      "30": {
        loc: {
          start: {
            line: 211,
            column: 12
          },
          end: {
            line: 211,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 211,
            column: 12
          },
          end: {
            line: 211,
            column: 45
          }
        }, {
          start: {
            line: 211,
            column: 49
          },
          end: {
            line: 211,
            column: 86
          }
        }],
        line: 211
      },
      "31": {
        loc: {
          start: {
            line: 215,
            column: 8
          },
          end: {
            line: 217,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 215,
            column: 8
          },
          end: {
            line: 217,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 215
      },
      "32": {
        loc: {
          start: {
            line: 215,
            column: 12
          },
          end: {
            line: 215,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 215,
            column: 12
          },
          end: {
            line: 215,
            column: 39
          }
        }, {
          start: {
            line: 215,
            column: 43
          },
          end: {
            line: 215,
            column: 68
          }
        }, {
          start: {
            line: 215,
            column: 72
          },
          end: {
            line: 215,
            column: 99
          }
        }],
        line: 215
      },
      "33": {
        loc: {
          start: {
            line: 219,
            column: 8
          },
          end: {
            line: 221,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 219,
            column: 8
          },
          end: {
            line: 221,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 219
      },
      "34": {
        loc: {
          start: {
            line: 219,
            column: 12
          },
          end: {
            line: 219,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 219,
            column: 12
          },
          end: {
            line: 219,
            column: 35
          }
        }, {
          start: {
            line: 219,
            column: 39
          },
          end: {
            line: 219,
            column: 65
          }
        }, {
          start: {
            line: 219,
            column: 69
          },
          end: {
            line: 219,
            column: 98
          }
        }],
        line: 219
      },
      "35": {
        loc: {
          start: {
            line: 225,
            column: 8
          },
          end: {
            line: 234,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 226,
            column: 12
          },
          end: {
            line: 227,
            column: 32
          }
        }, {
          start: {
            line: 228,
            column: 12
          },
          end: {
            line: 229,
            column: 31
          }
        }, {
          start: {
            line: 230,
            column: 12
          },
          end: {
            line: 231,
            column: 34
          }
        }, {
          start: {
            line: 232,
            column: 12
          },
          end: {
            line: 233,
            column: 31
          }
        }],
        line: 225
      },
      "36": {
        loc: {
          start: {
            line: 241,
            column: 12
          },
          end: {
            line: 243,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 241,
            column: 12
          },
          end: {
            line: 243,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 241
      },
      "37": {
        loc: {
          start: {
            line: 246,
            column: 12
          },
          end: {
            line: 249,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 246,
            column: 12
          },
          end: {
            line: 249,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 246
      },
      "38": {
        loc: {
          start: {
            line: 257,
            column: 12
          },
          end: {
            line: 259,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 257,
            column: 12
          },
          end: {
            line: 259,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 257
      },
      "39": {
        loc: {
          start: {
            line: 283,
            column: 36
          },
          end: {
            line: 283,
            column: 54
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 283,
            column: 50
          },
          end: {
            line: 283,
            column: 54
          }
        }],
        line: 283
      },
      "40": {
        loc: {
          start: {
            line: 283,
            column: 56
          },
          end: {
            line: 283,
            column: 70
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 283,
            column: 69
          },
          end: {
            line: 283,
            column: 70
          }
        }],
        line: 283
      },
      "41": {
        loc: {
          start: {
            line: 283,
            column: 72
          },
          end: {
            line: 283,
            column: 91
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 283,
            column: 80
          },
          end: {
            line: 283,
            column: 91
          }
        }],
        line: 283
      },
      "42": {
        loc: {
          start: {
            line: 284,
            column: 8
          },
          end: {
            line: 291,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 284,
            column: 8
          },
          end: {
            line: 291,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 284
      },
      "43": {
        loc: {
          start: {
            line: 284,
            column: 12
          },
          end: {
            line: 284,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 284,
            column: 12
          },
          end: {
            line: 284,
            column: 20
          }
        }, {
          start: {
            line: 284,
            column: 24
          },
          end: {
            line: 284,
            column: 29
          }
        }],
        line: 284
      },
      "44": {
        loc: {
          start: {
            line: 286,
            column: 12
          },
          end: {
            line: 288,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 286,
            column: 12
          },
          end: {
            line: 288,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 286
      },
      "45": {
        loc: {
          start: {
            line: 296,
            column: 25
          },
          end: {
            line: 296,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 296,
            column: 25
          },
          end: {
            line: 296,
            column: 36
          }
        }, {
          start: {
            line: 296,
            column: 40
          },
          end: {
            line: 296,
            column: 63
          }
        }],
        line: 296
      },
      "46": {
        loc: {
          start: {
            line: 297,
            column: 8
          },
          end: {
            line: 301,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 297,
            column: 8
          },
          end: {
            line: 301,
            column: 9
          }
        }, {
          start: {
            line: 299,
            column: 15
          },
          end: {
            line: 301,
            column: 9
          }
        }],
        line: 297
      },
      "47": {
        loc: {
          start: {
            line: 347,
            column: 44
          },
          end: {
            line: 352,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 347,
            column: 44
          },
          end: {
            line: 347,
            column: 82
          }
        }, {
          start: {
            line: 347,
            column: 100
          },
          end: {
            line: 352,
            column: 46
          }
        }],
        line: 347
      },
      "48": {
        loc: {
          start: {
            line: 360,
            column: 36
          },
          end: {
            line: 369,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 360,
            column: 36
          },
          end: {
            line: 360,
            column: 44
          }
        }, {
          start: {
            line: 360,
            column: 62
          },
          end: {
            line: 369,
            column: 38
          }
        }],
        line: 360
      },
      "49": {
        loc: {
          start: {
            line: 434,
            column: 16
          },
          end: {
            line: 444,
            column: 18
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 434,
            column: 16
          },
          end: {
            line: 434,
            column: 24
          }
        }, {
          start: {
            line: 434,
            column: 42
          },
          end: {
            line: 444,
            column: 18
          }
        }],
        line: 434
      },
      "50": {
        loc: {
          start: {
            line: 449,
            column: 8
          },
          end: {
            line: 458,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 450,
            column: 12
          },
          end: {
            line: 451,
            column: 90
          }
        }, {
          start: {
            line: 452,
            column: 12
          },
          end: {
            line: 453,
            column: 77
          }
        }, {
          start: {
            line: 454,
            column: 12
          },
          end: {
            line: 455,
            column: 85
          }
        }, {
          start: {
            line: 456,
            column: 12
          },
          end: {
            line: 457,
            column: 96
          }
        }],
        line: 449
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0, 0, 0, 0],
      "17": [0],
      "18": [0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0, 0],
      "33": [0, 0],
      "34": [0, 0, 0],
      "35": [0, 0, 0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0],
      "40": [0],
      "41": [0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0, 0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\error-boundary\\advanced-error-boundary.tsx"],
      sourcesContent: ["'use client';\r\n\r\n// ===================================\r\n// ADVANCED ERROR BOUNDARY SYSTEM\r\n// ===================================\r\n// Sistema avanzado de manejo de errores con recuperaci\xF3n autom\xE1tica\r\n\r\nimport React, { Component, ReactNode, ErrorInfo } from 'react';\r\nimport { AlertTriangle, RefreshCw, Home, Bug, Mail } from 'lucide-react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\r\n\r\n// ===================================\r\n// INTERFACES Y TIPOS\r\n// ===================================\r\n\r\nexport interface ErrorBoundaryState {\r\n  hasError: boolean;\r\n  error: Error | null;\r\n  errorInfo: ErrorInfo | null;\r\n  errorId: string;\r\n  retryCount: number;\r\n  lastErrorTime: number;\r\n  errorType: 'component' | 'chunk' | 'network' | 'unknown';\r\n  recoveryStrategy: 'retry' | 'fallback' | 'redirect' | 'reload';\r\n}\r\n\r\nexport interface ErrorBoundaryProps {\r\n  children: ReactNode;\r\n  fallback?: ReactNode;\r\n  onError?: (error: Error, errorInfo: ErrorInfo, errorId: string) => void;\r\n  enableRetry?: boolean;\r\n  maxRetries?: number;\r\n  retryDelay?: number;\r\n  enableAutoRecovery?: boolean;\r\n  recoveryTimeout?: number;\r\n  level?: 'page' | 'section' | 'component';\r\n  context?: string;\r\n  enableReporting?: boolean;\r\n}\r\n\r\nexport interface ErrorReport {\r\n  errorId: string;\r\n  timestamp: number;\r\n  error: {\r\n    name: string;\r\n    message: string;\r\n    stack?: string;\r\n  };\r\n  errorInfo: {\r\n    componentStack: string;\r\n  };\r\n  context: {\r\n    level: string;\r\n    component: string;\r\n    url: string;\r\n    userAgent: string;\r\n    userId?: string;\r\n  };\r\n  recovery: {\r\n    strategy: string;\r\n    retryCount: number;\r\n    successful: boolean;\r\n  };\r\n  performance: {\r\n    timeToError: number;\r\n    memoryUsage?: number;\r\n  };\r\n}\r\n\r\n// ===================================\r\n// ERROR BOUNDARY PRINCIPAL\r\n// ===================================\r\n\r\nexport class AdvancedErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {\r\n  private retryTimeoutId: NodeJS.Timeout | null = null;\r\n  private recoveryTimeoutId: NodeJS.Timeout | null = null;\r\n  private startTime: number = Date.now();\r\n\r\n  constructor(props: ErrorBoundaryProps) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      hasError: false,\r\n      error: null,\r\n      errorInfo: null,\r\n      errorId: '',\r\n      retryCount: 0,\r\n      lastErrorTime: 0,\r\n      errorType: 'unknown',\r\n      recoveryStrategy: 'retry'\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromError(error: Error): Partial<ErrorBoundaryState> {\r\n    const errorId = `error_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n    const errorType = AdvancedErrorBoundary.classifyError(error);\r\n    const recoveryStrategy = AdvancedErrorBoundary.determineRecoveryStrategy(error, errorType);\r\n\r\n    return {\r\n      hasError: true,\r\n      error,\r\n      errorId,\r\n      errorType,\r\n      recoveryStrategy,\r\n      lastErrorTime: Date.now()\r\n    };\r\n  }\r\n\r\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\r\n    const { onError, enableReporting = true } = this.props;\r\n    \r\n    this.setState({ errorInfo });\r\n\r\n    // Reportar error\r\n    if (enableReporting) {\r\n      this.reportError(error, errorInfo);\r\n    }\r\n\r\n    // Callback personalizado\r\n    if (onError) {\r\n      onError(error, errorInfo, this.state.errorId);\r\n    }\r\n\r\n    // Intentar recuperaci\xF3n autom\xE1tica\r\n    if (this.props.enableAutoRecovery) {\r\n      this.attemptAutoRecovery();\r\n    }\r\n\r\n    console.error('\uD83D\uDEA8 Error Boundary caught an error:', error);\r\n    console.error('\uD83D\uDCCD Error Info:', errorInfo);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.retryTimeoutId) {\r\n      clearTimeout(this.retryTimeoutId);\r\n    }\r\n    if (this.recoveryTimeoutId) {\r\n      clearTimeout(this.recoveryTimeoutId);\r\n    }\r\n  }\r\n\r\n  // ===================================\r\n  // M\xC9TODOS DE CLASIFICACI\xD3N\r\n  // ===================================\r\n\r\n  static classifyError(error: Error): ErrorBoundaryState['errorType'] {\r\n    const message = error.message.toLowerCase();\r\n    const stack = error.stack?.toLowerCase() || '';\r\n\r\n    // Error de chunk loading (lazy loading)\r\n    if (message.includes('loading chunk') || message.includes('loading css chunk')) {\r\n      return 'chunk';\r\n    }\r\n\r\n    // Error de red\r\n    if (message.includes('network') || message.includes('fetch') || message.includes('timeout')) {\r\n      return 'network';\r\n    }\r\n\r\n    // Error de componente\r\n    if (stack.includes('react') || message.includes('render') || message.includes('component')) {\r\n      return 'component';\r\n    }\r\n\r\n    return 'unknown';\r\n  }\r\n\r\n  static determineRecoveryStrategy(\r\n    error: Error, \r\n    errorType: ErrorBoundaryState['errorType']\r\n  ): ErrorBoundaryState['recoveryStrategy'] {\r\n    switch (errorType) {\r\n      case 'chunk':\r\n        return 'reload'; // Recargar para obtener chunks actualizados\r\n      case 'network':\r\n        return 'retry'; // Reintentar operaci\xF3n de red\r\n      case 'component':\r\n        return 'fallback'; // Mostrar UI de fallback\r\n      default:\r\n        return 'retry';\r\n    }\r\n  }\r\n\r\n  // ===================================\r\n  // M\xC9TODOS DE RECUPERACI\xD3N\r\n  // ===================================\r\n\r\n  attemptAutoRecovery = () => {\r\n    const { recoveryTimeout = 5000 } = this.props;\r\n    const { recoveryStrategy } = this.state;\r\n\r\n    this.recoveryTimeoutId = setTimeout(() => {\r\n      switch (recoveryStrategy) {\r\n        case 'retry':\r\n          this.handleRetry();\r\n          break;\r\n        case 'reload':\r\n          window.location.reload();\r\n          break;\r\n        case 'redirect':\r\n          window.location.href = '/';\r\n          break;\r\n        default:\r\n          // Fallback ya se maneja en render\r\n          break;\r\n      }\r\n    }, recoveryTimeout);\r\n  };\r\n\r\n  handleRetry = () => {\r\n    const { maxRetries = 3, retryDelay = 1000 } = this.props;\r\n    const { retryCount } = this.state;\r\n\r\n    if (retryCount >= maxRetries) {\r\n      console.warn('\uD83D\uDD04 Max retries reached, showing fallback UI');\r\n      return;\r\n    }\r\n\r\n    this.retryTimeoutId = setTimeout(() => {\r\n      this.setState(prevState => ({\r\n        hasError: false,\r\n        error: null,\r\n        errorInfo: null,\r\n        retryCount: prevState.retryCount + 1\r\n      }));\r\n    }, retryDelay * (retryCount + 1)); // Backoff exponencial\r\n  };\r\n\r\n  handleManualRetry = () => {\r\n    this.setState({\r\n      hasError: false,\r\n      error: null,\r\n      errorInfo: null,\r\n      retryCount: 0\r\n    });\r\n  };\r\n\r\n  handleReload = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  handleGoHome = () => {\r\n    window.location.href = '/';\r\n  };\r\n\r\n  // ===================================\r\n  // REPORTE DE ERRORES\r\n  // ===================================\r\n\r\n  reportError = async (error: Error, errorInfo: ErrorInfo) => {\r\n    try {\r\n      const report: ErrorReport = {\r\n        errorId: this.state.errorId,\r\n        timestamp: Date.now(),\r\n        error: {\r\n          name: error.name,\r\n          message: error.message,\r\n          stack: error.stack\r\n        },\r\n        errorInfo: {\r\n          componentStack: errorInfo.componentStack\r\n        },\r\n        context: {\r\n          level: this.props.level || 'component',\r\n          component: this.props.context || 'unknown',\r\n          url: window.location.href,\r\n          userAgent: navigator.userAgent,\r\n          userId: this.getUserId()\r\n        },\r\n        recovery: {\r\n          strategy: this.state.recoveryStrategy,\r\n          retryCount: this.state.retryCount,\r\n          successful: false\r\n        },\r\n        performance: {\r\n          timeToError: Date.now() - this.startTime,\r\n          memoryUsage: this.getMemoryUsage()\r\n        }\r\n      };\r\n\r\n      // Enviar reporte al sistema de monitoreo\r\n      await this.sendErrorReport(report);\r\n\r\n    } catch (reportError) {\r\n      console.error('\u274C Failed to report error:', reportError);\r\n    }\r\n  };\r\n\r\n  private getUserId(): string | undefined {\r\n    // Intentar obtener ID de usuario de diferentes fuentes\r\n    try {\r\n      // Clerk\r\n      const clerkUser = (window as any).__clerk_user;\r\n      if (clerkUser?.id) {return clerkUser.id;}\r\n\r\n      // LocalStorage\r\n      const storedUser = localStorage.getItem('user');\r\n      if (storedUser) {\r\n        const user = JSON.parse(storedUser);\r\n        return user.id;\r\n      }\r\n\r\n      return undefined;\r\n    } catch {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  private getMemoryUsage(): number | undefined {\r\n    try {\r\n      if ('memory' in performance) {\r\n        return (performance as any).memory.usedJSHeapSize;\r\n      }\r\n      return undefined;\r\n    } catch {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  private async sendErrorReport(report: ErrorReport): Promise<void> {\r\n    try {\r\n      await fetch('/api/monitoring/errors', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(report)\r\n      });\r\n    } catch (error) {\r\n      console.error('\u274C Failed to send error report:', error);\r\n    }\r\n  }\r\n\r\n  // ===================================\r\n  // RENDER\r\n  // ===================================\r\n\r\n  render() {\r\n    const { hasError, error, errorType, recoveryStrategy, retryCount } = this.state;\r\n    const { children, fallback, enableRetry = true, maxRetries = 3, level = 'component' } = this.props;\r\n\r\n    if (hasError && error) {\r\n      // Si hay un fallback personalizado, usarlo\r\n      if (fallback) {\r\n        return fallback;\r\n      }\r\n\r\n      // Renderizar UI de error apropiada seg\xFAn el nivel\r\n      return this.renderErrorUI(error, errorType, recoveryStrategy, retryCount, maxRetries, enableRetry, level);\r\n    }\r\n\r\n    return children;\r\n  }\r\n\r\n  private renderErrorUI(\r\n    error: Error,\r\n    errorType: ErrorBoundaryState['errorType'],\r\n    recoveryStrategy: ErrorBoundaryState['recoveryStrategy'],\r\n    retryCount: number,\r\n    maxRetries: number,\r\n    enableRetry: boolean,\r\n    level: string\r\n  ) {\r\n    const isPageLevel = level === 'page';\r\n    const canRetry = enableRetry && retryCount < maxRetries;\r\n\r\n    if (isPageLevel) {\r\n      return this.renderPageErrorUI(error, errorType, canRetry);\r\n    } else {\r\n      return this.renderComponentErrorUI(error, errorType, canRetry);\r\n    }\r\n  }\r\n\r\n  private renderPageErrorUI(error: Error, errorType: ErrorBoundaryState['errorType'], canRetry: boolean) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50 px-4\">\r\n        <Card className=\"w-full max-w-md\">\r\n          <CardHeader className=\"text-center\">\r\n            <div className=\"mx-auto w-12 h-12 bg-red-100 rounded-full flex items-center justify-center mb-4\">\r\n              <AlertTriangle className=\"w-6 h-6 text-red-600\" />\r\n            </div>\r\n            <CardTitle className=\"text-xl\">\xA1Oops! Algo sali\xF3 mal</CardTitle>\r\n            <CardDescription>\r\n              {this.getErrorMessage(errorType)}\r\n            </CardDescription>\r\n          </CardHeader>\r\n          <CardContent className=\"space-y-4\">\r\n            <Alert>\r\n              <Bug className=\"h-4 w-4\" />\r\n              <AlertTitle>Detalles del Error</AlertTitle>\r\n              <AlertDescription className=\"text-sm\">\r\n                ID: {this.state.errorId}<br />\r\n                Tipo: {errorType}<br />\r\n                {process.env.NODE_ENV === 'development' && (\r\n                  <>Mensaje: {error.message}</>\r\n                )}\r\n              </AlertDescription>\r\n            </Alert>\r\n\r\n            <div className=\"flex flex-col gap-2\">\r\n              {canRetry && (\r\n                <Button onClick={this.handleManualRetry} className=\"w-full\">\r\n                  <RefreshCw className=\"w-4 h-4 mr-2\" />\r\n                  Intentar de nuevo\r\n                </Button>\r\n              )}\r\n              <Button variant=\"outline\" onClick={this.handleGoHome} className=\"w-full\">\r\n                <Home className=\"w-4 h-4 mr-2\" />\r\n                Ir al inicio\r\n              </Button>\r\n              <Button variant=\"outline\" onClick={this.handleReload} className=\"w-full\">\r\n                <RefreshCw className=\"w-4 h-4 mr-2\" />\r\n                Recargar p\xE1gina\r\n              </Button>\r\n            </div>\r\n\r\n            <div className=\"text-center\">\r\n              <Button variant=\"link\" size=\"sm\" onClick={() => this.reportIssue()}>\r\n                <Mail className=\"w-4 h-4 mr-2\" />\r\n                Reportar problema\r\n              </Button>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderComponentErrorUI(error: Error, errorType: ErrorBoundaryState['errorType'], canRetry: boolean) {\r\n    return (\r\n      <div className=\"p-4 border border-red-200 rounded-lg bg-red-50\">\r\n        <div className=\"flex items-center gap-2 mb-2\">\r\n          <AlertTriangle className=\"w-4 h-4 text-red-600\" />\r\n          <span className=\"text-sm font-medium text-red-800\">Error en componente</span>\r\n        </div>\r\n        <p className=\"text-sm text-red-700 mb-3\">\r\n          {this.getErrorMessage(errorType)}\r\n        </p>\r\n        {canRetry && (\r\n          <Button size=\"sm\" variant=\"outline\" onClick={this.handleManualRetry}>\r\n            <RefreshCw className=\"w-3 h-3 mr-1\" />\r\n            Reintentar\r\n          </Button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private getErrorMessage(errorType: ErrorBoundaryState['errorType']): string {\r\n    switch (errorType) {\r\n      case 'chunk':\r\n        return 'Error cargando recursos. La p\xE1gina se recargar\xE1 autom\xE1ticamente.';\r\n      case 'network':\r\n        return 'Error de conexi\xF3n. Verifica tu conexi\xF3n a internet.';\r\n      case 'component':\r\n        return 'Error en el componente. Intentando recuperaci\xF3n autom\xE1tica.';\r\n      default:\r\n        return 'Ha ocurrido un error inesperado. Estamos trabajando para solucionarlo.';\r\n    }\r\n  }\r\n\r\n  private reportIssue = () => {\r\n    const subject = `Error Report - ${this.state.errorId}`;\r\n    const body = `Error ID: ${this.state.errorId}\\nTipo: ${this.state.errorType}\\nURL: ${window.location.href}\\nFecha: ${new Date().toISOString()}`;\r\n    const mailtoUrl = `mailto:soporte@pinteya.com?subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(body)}`;\r\n    window.open(mailtoUrl);\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["AdvancedErrorBoundary", "Component", "props", "retryTimeoutId", "recoveryTimeoutId", "startTime", "Date", "now", "attemptAutoRecovery", "recoveryTimeout", "recoveryStrategy", "state", "setTimeout", "handleRetry", "window", "location", "reload", "href", "maxRetries", "retryDelay", "retryCount", "console", "warn", "setState", "prevState", "hasError", "error", "errorInfo", "handleManualRetry", "handleReload", "handleGoHome", "reportError", "report", "errorId", "timestamp", "name", "message", "stack", "componentStack", "context", "level", "component", "url", "userAgent", "navigator", "userId", "getUserId", "recovery", "strategy", "successful", "performance", "timeToError", "memoryUsage", "getMemoryUsage", "sendErrorReport", "reportIssue", "subject", "body", "errorType", "toISOString", "mailtoUrl", "encodeURIComponent", "open", "lastErrorTime", "getDerivedStateFromError", "Math", "random", "toString", "substr", "classifyError", "determineRecoveryStrategy", "componentDidCatch", "onError", "enableReporting", "enableAutoRecovery", "componentWillUnmount", "clearTimeout", "toLowerCase", "includes", "clerkUser", "__clerk_user", "id", "storedUser", "localStorage", "getItem", "user", "JSON", "parse", "undefined", "memory", "usedJSHeapSize", "fetch", "method", "headers", "stringify", "render", "children", "fallback", "enableRetry", "renderErrorUI", "isPageLevel", "canRetry", "renderPageErrorUI", "renderComponentErrorUI", "div", "className", "Card", "CardHeader", "AlertTriangle", "CardTitle", "CardDescription", "getErrorMessage", "CardContent", "Alert", "Bug", "AlertTitle", "AlertDescription", "br", "process", "env", "NODE_ENV", "Button", "onClick", "RefreshCw", "variant", "Home", "size", "Mail", "span", "p"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3b93246c6307175daf0694e2c372e824229e1c33"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2bnwzb2kh9 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2bnwzb2kh9();
cov_2bnwzb2kh9().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2bnwzb2kh9().s[1]++;
Object.defineProperty(exports, "AdvancedErrorBoundary", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2bnwzb2kh9().f[0]++;
    cov_2bnwzb2kh9().s[2]++;
    return AdvancedErrorBoundary;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_2bnwzb2kh9().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_2bnwzb2kh9().s[4]++, _interop_require_wildcard(require("react")));
const _lucidereact =
/* istanbul ignore next */
(cov_2bnwzb2kh9().s[5]++, require("lucide-react"));
const _button =
/* istanbul ignore next */
(cov_2bnwzb2kh9().s[6]++, require("../../components/ui/button"));
const _card =
/* istanbul ignore next */
(cov_2bnwzb2kh9().s[7]++, require("../../components/ui/card"));
const _alert =
/* istanbul ignore next */
(cov_2bnwzb2kh9().s[8]++, require("../../components/ui/alert"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_2bnwzb2kh9().f[1]++;
  cov_2bnwzb2kh9().s[9]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_2bnwzb2kh9().b[0][0]++;
    cov_2bnwzb2kh9().s[10]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_2bnwzb2kh9().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_2bnwzb2kh9().s[11]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_2bnwzb2kh9().s[12]++, new WeakMap());
  /* istanbul ignore next */
  cov_2bnwzb2kh9().s[13]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_2bnwzb2kh9().f[2]++;
    cov_2bnwzb2kh9().s[14]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_2bnwzb2kh9().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_2bnwzb2kh9().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_2bnwzb2kh9().f[3]++;
  cov_2bnwzb2kh9().s[15]++;
  if (
  /* istanbul ignore next */
  (cov_2bnwzb2kh9().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_2bnwzb2kh9().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_2bnwzb2kh9().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_2bnwzb2kh9().b[2][0]++;
    cov_2bnwzb2kh9().s[16]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_2bnwzb2kh9().b[2][1]++;
  }
  cov_2bnwzb2kh9().s[17]++;
  if (
  /* istanbul ignore next */
  (cov_2bnwzb2kh9().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_2bnwzb2kh9().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_2bnwzb2kh9().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_2bnwzb2kh9().b[4][0]++;
    cov_2bnwzb2kh9().s[18]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_2bnwzb2kh9().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_2bnwzb2kh9().s[19]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_2bnwzb2kh9().s[20]++;
  if (
  /* istanbul ignore next */
  (cov_2bnwzb2kh9().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_2bnwzb2kh9().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_2bnwzb2kh9().b[6][0]++;
    cov_2bnwzb2kh9().s[21]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_2bnwzb2kh9().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_2bnwzb2kh9().s[22]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_2bnwzb2kh9().s[23]++,
  /* istanbul ignore next */
  (cov_2bnwzb2kh9().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_2bnwzb2kh9().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_2bnwzb2kh9().s[24]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_2bnwzb2kh9().s[25]++;
    if (
    /* istanbul ignore next */
    (cov_2bnwzb2kh9().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_2bnwzb2kh9().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_2bnwzb2kh9().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_2bnwzb2kh9().s[26]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_2bnwzb2kh9().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_2bnwzb2kh9().b[11][1]++, null));
      /* istanbul ignore next */
      cov_2bnwzb2kh9().s[27]++;
      if (
      /* istanbul ignore next */
      (cov_2bnwzb2kh9().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_2bnwzb2kh9().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_2bnwzb2kh9().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_2bnwzb2kh9().b[12][0]++;
        cov_2bnwzb2kh9().s[28]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_2bnwzb2kh9().b[12][1]++;
        cov_2bnwzb2kh9().s[29]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_2bnwzb2kh9().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_2bnwzb2kh9().s[30]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_2bnwzb2kh9().s[31]++;
  if (cache) {
    /* istanbul ignore next */
    cov_2bnwzb2kh9().b[14][0]++;
    cov_2bnwzb2kh9().s[32]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_2bnwzb2kh9().b[14][1]++;
  }
  cov_2bnwzb2kh9().s[33]++;
  return newObj;
}
class AdvancedErrorBoundary extends
/* istanbul ignore next */
(_react.Component) {
  constructor(props) {
    /* istanbul ignore next */
    cov_2bnwzb2kh9().f[4]++;
    cov_2bnwzb2kh9().s[34]++;
    super(props), this.retryTimeoutId = null, this.recoveryTimeoutId = null, this.startTime = Date.now(),
    // ===================================
    // MÉTODOS DE RECUPERACIÓN
    // ===================================
    this.attemptAutoRecovery = () => {
      /* istanbul ignore next */
      cov_2bnwzb2kh9().f[5]++;
      const {
        recoveryTimeout =
        /* istanbul ignore next */
        (cov_2bnwzb2kh9().b[15][0]++, 5000)
      } =
      /* istanbul ignore next */
      (cov_2bnwzb2kh9().s[35]++, this.props);
      const {
        recoveryStrategy
      } =
      /* istanbul ignore next */
      (cov_2bnwzb2kh9().s[36]++, this.state);
      /* istanbul ignore next */
      cov_2bnwzb2kh9().s[37]++;
      this.recoveryTimeoutId = setTimeout(() => {
        /* istanbul ignore next */
        cov_2bnwzb2kh9().f[6]++;
        cov_2bnwzb2kh9().s[38]++;
        switch (recoveryStrategy) {
          case 'retry':
            /* istanbul ignore next */
            cov_2bnwzb2kh9().b[16][0]++;
            cov_2bnwzb2kh9().s[39]++;
            this.handleRetry();
            /* istanbul ignore next */
            cov_2bnwzb2kh9().s[40]++;
            break;
          case 'reload':
            /* istanbul ignore next */
            cov_2bnwzb2kh9().b[16][1]++;
            cov_2bnwzb2kh9().s[41]++;
            window.location.reload();
            /* istanbul ignore next */
            cov_2bnwzb2kh9().s[42]++;
            break;
          case 'redirect':
            /* istanbul ignore next */
            cov_2bnwzb2kh9().b[16][2]++;
            cov_2bnwzb2kh9().s[43]++;
            window.location.href = '/';
            /* istanbul ignore next */
            cov_2bnwzb2kh9().s[44]++;
            break;
          default:
            /* istanbul ignore next */
            cov_2bnwzb2kh9().b[16][3]++;
            cov_2bnwzb2kh9().s[45]++;
            break;
        }
      }, recoveryTimeout);
    }, this.handleRetry = () => {
      /* istanbul ignore next */
      cov_2bnwzb2kh9().f[7]++;
      const {
        maxRetries =
        /* istanbul ignore next */
        (cov_2bnwzb2kh9().b[17][0]++, 3),
        retryDelay =
        /* istanbul ignore next */
        (cov_2bnwzb2kh9().b[18][0]++, 1000)
      } =
      /* istanbul ignore next */
      (cov_2bnwzb2kh9().s[46]++, this.props);
      const {
        retryCount
      } =
      /* istanbul ignore next */
      (cov_2bnwzb2kh9().s[47]++, this.state);
      /* istanbul ignore next */
      cov_2bnwzb2kh9().s[48]++;
      if (retryCount >= maxRetries) {
        /* istanbul ignore next */
        cov_2bnwzb2kh9().b[19][0]++;
        cov_2bnwzb2kh9().s[49]++;
        console.warn('🔄 Max retries reached, showing fallback UI');
        /* istanbul ignore next */
        cov_2bnwzb2kh9().s[50]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_2bnwzb2kh9().b[19][1]++;
      }
      cov_2bnwzb2kh9().s[51]++;
      this.retryTimeoutId = setTimeout(() => {
        /* istanbul ignore next */
        cov_2bnwzb2kh9().f[8]++;
        cov_2bnwzb2kh9().s[52]++;
        this.setState(prevState => {
          /* istanbul ignore next */
          cov_2bnwzb2kh9().f[9]++;
          cov_2bnwzb2kh9().s[53]++;
          return {
            hasError: false,
            error: null,
            errorInfo: null,
            retryCount: prevState.retryCount + 1
          };
        });
      }, retryDelay * (retryCount + 1)); // Backoff exponencial
    }, this.handleManualRetry = () => {
      /* istanbul ignore next */
      cov_2bnwzb2kh9().f[10]++;
      cov_2bnwzb2kh9().s[54]++;
      this.setState({
        hasError: false,
        error: null,
        errorInfo: null,
        retryCount: 0
      });
    }, this.handleReload = () => {
      /* istanbul ignore next */
      cov_2bnwzb2kh9().f[11]++;
      cov_2bnwzb2kh9().s[55]++;
      window.location.reload();
    }, this.handleGoHome = () => {
      /* istanbul ignore next */
      cov_2bnwzb2kh9().f[12]++;
      cov_2bnwzb2kh9().s[56]++;
      window.location.href = '/';
    },
    // ===================================
    // REPORTE DE ERRORES
    // ===================================
    this.reportError = async (error, errorInfo) => {
      /* istanbul ignore next */
      cov_2bnwzb2kh9().f[13]++;
      cov_2bnwzb2kh9().s[57]++;
      try {
        const report =
        /* istanbul ignore next */
        (cov_2bnwzb2kh9().s[58]++, {
          errorId: this.state.errorId,
          timestamp: Date.now(),
          error: {
            name: error.name,
            message: error.message,
            stack: error.stack
          },
          errorInfo: {
            componentStack: errorInfo.componentStack
          },
          context: {
            level:
            /* istanbul ignore next */
            (cov_2bnwzb2kh9().b[20][0]++, this.props.level) ||
            /* istanbul ignore next */
            (cov_2bnwzb2kh9().b[20][1]++, 'component'),
            component:
            /* istanbul ignore next */
            (cov_2bnwzb2kh9().b[21][0]++, this.props.context) ||
            /* istanbul ignore next */
            (cov_2bnwzb2kh9().b[21][1]++, 'unknown'),
            url: window.location.href,
            userAgent: navigator.userAgent,
            userId: this.getUserId()
          },
          recovery: {
            strategy: this.state.recoveryStrategy,
            retryCount: this.state.retryCount,
            successful: false
          },
          performance: {
            timeToError: Date.now() - this.startTime,
            memoryUsage: this.getMemoryUsage()
          }
        });
        // Enviar reporte al sistema de monitoreo
        /* istanbul ignore next */
        cov_2bnwzb2kh9().s[59]++;
        await this.sendErrorReport(report);
      } catch (reportError) {
        /* istanbul ignore next */
        cov_2bnwzb2kh9().s[60]++;
        console.error('❌ Failed to report error:', reportError);
      }
    }, this.reportIssue = () => {
      /* istanbul ignore next */
      cov_2bnwzb2kh9().f[14]++;
      const subject =
      /* istanbul ignore next */
      (cov_2bnwzb2kh9().s[61]++, `Error Report - ${this.state.errorId}`);
      const body =
      /* istanbul ignore next */
      (cov_2bnwzb2kh9().s[62]++, `Error ID: ${this.state.errorId}\nTipo: ${this.state.errorType}\nURL: ${window.location.href}\nFecha: ${new Date().toISOString()}`);
      const mailtoUrl =
      /* istanbul ignore next */
      (cov_2bnwzb2kh9().s[63]++, `mailto:soporte@pinteya.com?subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(body)}`);
      /* istanbul ignore next */
      cov_2bnwzb2kh9().s[64]++;
      window.open(mailtoUrl);
    };
    /* istanbul ignore next */
    cov_2bnwzb2kh9().s[65]++;
    this.state = {
      hasError: false,
      error: null,
      errorInfo: null,
      errorId: '',
      retryCount: 0,
      lastErrorTime: 0,
      errorType: 'unknown',
      recoveryStrategy: 'retry'
    };
  }
  static getDerivedStateFromError(error) {
    /* istanbul ignore next */
    cov_2bnwzb2kh9().f[15]++;
    const errorId =
    /* istanbul ignore next */
    (cov_2bnwzb2kh9().s[66]++, `error_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`);
    const errorType =
    /* istanbul ignore next */
    (cov_2bnwzb2kh9().s[67]++, AdvancedErrorBoundary.classifyError(error));
    const recoveryStrategy =
    /* istanbul ignore next */
    (cov_2bnwzb2kh9().s[68]++, AdvancedErrorBoundary.determineRecoveryStrategy(error, errorType));
    /* istanbul ignore next */
    cov_2bnwzb2kh9().s[69]++;
    return {
      hasError: true,
      error,
      errorId,
      errorType,
      recoveryStrategy,
      lastErrorTime: Date.now()
    };
  }
  componentDidCatch(error, errorInfo) {
    /* istanbul ignore next */
    cov_2bnwzb2kh9().f[16]++;
    const {
      onError,
      enableReporting =
      /* istanbul ignore next */
      (cov_2bnwzb2kh9().b[22][0]++, true)
    } =
    /* istanbul ignore next */
    (cov_2bnwzb2kh9().s[70]++, this.props);
    /* istanbul ignore next */
    cov_2bnwzb2kh9().s[71]++;
    this.setState({
      errorInfo
    });
    // Reportar error
    /* istanbul ignore next */
    cov_2bnwzb2kh9().s[72]++;
    if (enableReporting) {
      /* istanbul ignore next */
      cov_2bnwzb2kh9().b[23][0]++;
      cov_2bnwzb2kh9().s[73]++;
      this.reportError(error, errorInfo);
    } else
    /* istanbul ignore next */
    {
      cov_2bnwzb2kh9().b[23][1]++;
    }
    // Callback personalizado
    cov_2bnwzb2kh9().s[74]++;
    if (onError) {
      /* istanbul ignore next */
      cov_2bnwzb2kh9().b[24][0]++;
      cov_2bnwzb2kh9().s[75]++;
      onError(error, errorInfo, this.state.errorId);
    } else
    /* istanbul ignore next */
    {
      cov_2bnwzb2kh9().b[24][1]++;
    }
    // Intentar recuperación automática
    cov_2bnwzb2kh9().s[76]++;
    if (this.props.enableAutoRecovery) {
      /* istanbul ignore next */
      cov_2bnwzb2kh9().b[25][0]++;
      cov_2bnwzb2kh9().s[77]++;
      this.attemptAutoRecovery();
    } else
    /* istanbul ignore next */
    {
      cov_2bnwzb2kh9().b[25][1]++;
    }
    cov_2bnwzb2kh9().s[78]++;
    console.error('🚨 Error Boundary caught an error:', error);
    /* istanbul ignore next */
    cov_2bnwzb2kh9().s[79]++;
    console.error('📍 Error Info:', errorInfo);
  }
  componentWillUnmount() {
    /* istanbul ignore next */
    cov_2bnwzb2kh9().f[17]++;
    cov_2bnwzb2kh9().s[80]++;
    if (this.retryTimeoutId) {
      /* istanbul ignore next */
      cov_2bnwzb2kh9().b[26][0]++;
      cov_2bnwzb2kh9().s[81]++;
      clearTimeout(this.retryTimeoutId);
    } else
    /* istanbul ignore next */
    {
      cov_2bnwzb2kh9().b[26][1]++;
    }
    cov_2bnwzb2kh9().s[82]++;
    if (this.recoveryTimeoutId) {
      /* istanbul ignore next */
      cov_2bnwzb2kh9().b[27][0]++;
      cov_2bnwzb2kh9().s[83]++;
      clearTimeout(this.recoveryTimeoutId);
    } else
    /* istanbul ignore next */
    {
      cov_2bnwzb2kh9().b[27][1]++;
    }
  }
  // ===================================
  // MÉTODOS DE CLASIFICACIÓN
  // ===================================
  static classifyError(error) {
    /* istanbul ignore next */
    cov_2bnwzb2kh9().f[18]++;
    const message =
    /* istanbul ignore next */
    (cov_2bnwzb2kh9().s[84]++, error.message.toLowerCase());
    const stack =
    /* istanbul ignore next */
    (cov_2bnwzb2kh9().s[85]++,
    /* istanbul ignore next */
    (cov_2bnwzb2kh9().b[28][0]++, error.stack?.toLowerCase()) ||
    /* istanbul ignore next */
    (cov_2bnwzb2kh9().b[28][1]++, ''));
    // Error de chunk loading (lazy loading)
    /* istanbul ignore next */
    cov_2bnwzb2kh9().s[86]++;
    if (
    /* istanbul ignore next */
    (cov_2bnwzb2kh9().b[30][0]++, message.includes('loading chunk')) ||
    /* istanbul ignore next */
    (cov_2bnwzb2kh9().b[30][1]++, message.includes('loading css chunk'))) {
      /* istanbul ignore next */
      cov_2bnwzb2kh9().b[29][0]++;
      cov_2bnwzb2kh9().s[87]++;
      return 'chunk';
    } else
    /* istanbul ignore next */
    {
      cov_2bnwzb2kh9().b[29][1]++;
    }
    // Error de red
    cov_2bnwzb2kh9().s[88]++;
    if (
    /* istanbul ignore next */
    (cov_2bnwzb2kh9().b[32][0]++, message.includes('network')) ||
    /* istanbul ignore next */
    (cov_2bnwzb2kh9().b[32][1]++, message.includes('fetch')) ||
    /* istanbul ignore next */
    (cov_2bnwzb2kh9().b[32][2]++, message.includes('timeout'))) {
      /* istanbul ignore next */
      cov_2bnwzb2kh9().b[31][0]++;
      cov_2bnwzb2kh9().s[89]++;
      return 'network';
    } else
    /* istanbul ignore next */
    {
      cov_2bnwzb2kh9().b[31][1]++;
    }
    // Error de componente
    cov_2bnwzb2kh9().s[90]++;
    if (
    /* istanbul ignore next */
    (cov_2bnwzb2kh9().b[34][0]++, stack.includes('react')) ||
    /* istanbul ignore next */
    (cov_2bnwzb2kh9().b[34][1]++, message.includes('render')) ||
    /* istanbul ignore next */
    (cov_2bnwzb2kh9().b[34][2]++, message.includes('component'))) {
      /* istanbul ignore next */
      cov_2bnwzb2kh9().b[33][0]++;
      cov_2bnwzb2kh9().s[91]++;
      return 'component';
    } else
    /* istanbul ignore next */
    {
      cov_2bnwzb2kh9().b[33][1]++;
    }
    cov_2bnwzb2kh9().s[92]++;
    return 'unknown';
  }
  static determineRecoveryStrategy(error, errorType) {
    /* istanbul ignore next */
    cov_2bnwzb2kh9().f[19]++;
    cov_2bnwzb2kh9().s[93]++;
    switch (errorType) {
      case 'chunk':
        /* istanbul ignore next */
        cov_2bnwzb2kh9().b[35][0]++;
        cov_2bnwzb2kh9().s[94]++;
        return 'reload';
      // Recargar para obtener chunks actualizados
      case 'network':
        /* istanbul ignore next */
        cov_2bnwzb2kh9().b[35][1]++;
        cov_2bnwzb2kh9().s[95]++;
        return 'retry';
      // Reintentar operación de red
      case 'component':
        /* istanbul ignore next */
        cov_2bnwzb2kh9().b[35][2]++;
        cov_2bnwzb2kh9().s[96]++;
        return 'fallback';
      // Mostrar UI de fallback
      default:
        /* istanbul ignore next */
        cov_2bnwzb2kh9().b[35][3]++;
        cov_2bnwzb2kh9().s[97]++;
        return 'retry';
    }
  }
  getUserId() {
    /* istanbul ignore next */
    cov_2bnwzb2kh9().f[20]++;
    cov_2bnwzb2kh9().s[98]++;
    // Intentar obtener ID de usuario de diferentes fuentes
    try {
      // Clerk
      const clerkUser =
      /* istanbul ignore next */
      (cov_2bnwzb2kh9().s[99]++, window.__clerk_user);
      /* istanbul ignore next */
      cov_2bnwzb2kh9().s[100]++;
      if (clerkUser?.id) {
        /* istanbul ignore next */
        cov_2bnwzb2kh9().b[36][0]++;
        cov_2bnwzb2kh9().s[101]++;
        return clerkUser.id;
      } else
      /* istanbul ignore next */
      {
        cov_2bnwzb2kh9().b[36][1]++;
      }
      // LocalStorage
      const storedUser =
      /* istanbul ignore next */
      (cov_2bnwzb2kh9().s[102]++, localStorage.getItem('user'));
      /* istanbul ignore next */
      cov_2bnwzb2kh9().s[103]++;
      if (storedUser) {
        /* istanbul ignore next */
        cov_2bnwzb2kh9().b[37][0]++;
        const user =
        /* istanbul ignore next */
        (cov_2bnwzb2kh9().s[104]++, JSON.parse(storedUser));
        /* istanbul ignore next */
        cov_2bnwzb2kh9().s[105]++;
        return user.id;
      } else
      /* istanbul ignore next */
      {
        cov_2bnwzb2kh9().b[37][1]++;
      }
      cov_2bnwzb2kh9().s[106]++;
      return undefined;
    } catch {
      /* istanbul ignore next */
      cov_2bnwzb2kh9().s[107]++;
      return undefined;
    }
  }
  getMemoryUsage() {
    /* istanbul ignore next */
    cov_2bnwzb2kh9().f[21]++;
    cov_2bnwzb2kh9().s[108]++;
    try {
      /* istanbul ignore next */
      cov_2bnwzb2kh9().s[109]++;
      if ('memory' in performance) {
        /* istanbul ignore next */
        cov_2bnwzb2kh9().b[38][0]++;
        cov_2bnwzb2kh9().s[110]++;
        return performance.memory.usedJSHeapSize;
      } else
      /* istanbul ignore next */
      {
        cov_2bnwzb2kh9().b[38][1]++;
      }
      cov_2bnwzb2kh9().s[111]++;
      return undefined;
    } catch {
      /* istanbul ignore next */
      cov_2bnwzb2kh9().s[112]++;
      return undefined;
    }
  }
  async sendErrorReport(report) {
    /* istanbul ignore next */
    cov_2bnwzb2kh9().f[22]++;
    cov_2bnwzb2kh9().s[113]++;
    try {
      /* istanbul ignore next */
      cov_2bnwzb2kh9().s[114]++;
      await fetch('/api/monitoring/errors', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(report)
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_2bnwzb2kh9().s[115]++;
      console.error('❌ Failed to send error report:', error);
    }
  }
  // ===================================
  // RENDER
  // ===================================
  render() {
    /* istanbul ignore next */
    cov_2bnwzb2kh9().f[23]++;
    const {
      hasError,
      error,
      errorType,
      recoveryStrategy,
      retryCount
    } =
    /* istanbul ignore next */
    (cov_2bnwzb2kh9().s[116]++, this.state);
    const {
      children,
      fallback,
      enableRetry =
      /* istanbul ignore next */
      (cov_2bnwzb2kh9().b[39][0]++, true),
      maxRetries =
      /* istanbul ignore next */
      (cov_2bnwzb2kh9().b[40][0]++, 3),
      level =
      /* istanbul ignore next */
      (cov_2bnwzb2kh9().b[41][0]++, 'component')
    } =
    /* istanbul ignore next */
    (cov_2bnwzb2kh9().s[117]++, this.props);
    /* istanbul ignore next */
    cov_2bnwzb2kh9().s[118]++;
    if (
    /* istanbul ignore next */
    (cov_2bnwzb2kh9().b[43][0]++, hasError) &&
    /* istanbul ignore next */
    (cov_2bnwzb2kh9().b[43][1]++, error)) {
      /* istanbul ignore next */
      cov_2bnwzb2kh9().b[42][0]++;
      cov_2bnwzb2kh9().s[119]++;
      // Si hay un fallback personalizado, usarlo
      if (fallback) {
        /* istanbul ignore next */
        cov_2bnwzb2kh9().b[44][0]++;
        cov_2bnwzb2kh9().s[120]++;
        return fallback;
      } else
      /* istanbul ignore next */
      {
        cov_2bnwzb2kh9().b[44][1]++;
      }
      // Renderizar UI de error apropiada según el nivel
      cov_2bnwzb2kh9().s[121]++;
      return this.renderErrorUI(error, errorType, recoveryStrategy, retryCount, maxRetries, enableRetry, level);
    } else
    /* istanbul ignore next */
    {
      cov_2bnwzb2kh9().b[42][1]++;
    }
    cov_2bnwzb2kh9().s[122]++;
    return children;
  }
  renderErrorUI(error, errorType, recoveryStrategy, retryCount, maxRetries, enableRetry, level) {
    /* istanbul ignore next */
    cov_2bnwzb2kh9().f[24]++;
    const isPageLevel =
    /* istanbul ignore next */
    (cov_2bnwzb2kh9().s[123]++, level === 'page');
    const canRetry =
    /* istanbul ignore next */
    (cov_2bnwzb2kh9().s[124]++,
    /* istanbul ignore next */
    (cov_2bnwzb2kh9().b[45][0]++, enableRetry) &&
    /* istanbul ignore next */
    (cov_2bnwzb2kh9().b[45][1]++, retryCount < maxRetries));
    /* istanbul ignore next */
    cov_2bnwzb2kh9().s[125]++;
    if (isPageLevel) {
      /* istanbul ignore next */
      cov_2bnwzb2kh9().b[46][0]++;
      cov_2bnwzb2kh9().s[126]++;
      return this.renderPageErrorUI(error, errorType, canRetry);
    } else {
      /* istanbul ignore next */
      cov_2bnwzb2kh9().b[46][1]++;
      cov_2bnwzb2kh9().s[127]++;
      return this.renderComponentErrorUI(error, errorType, canRetry);
    }
  }
  renderPageErrorUI(error, errorType, canRetry) {
    /* istanbul ignore next */
    cov_2bnwzb2kh9().f[25]++;
    cov_2bnwzb2kh9().s[128]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "min-h-screen flex items-center justify-center bg-gray-50 px-4",
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
        className: "w-full max-w-md",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardHeader, {
          className: "text-center",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "mx-auto w-12 h-12 bg-red-100 rounded-full flex items-center justify-center mb-4",
            children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.AlertTriangle, {
              className: "w-6 h-6 text-red-600"
            })
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
            className: "text-xl",
            children: "\xa1Oops! Algo sali\xf3 mal"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardDescription, {
            children: this.getErrorMessage(errorType)
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardContent, {
          className: "space-y-4",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_alert.Alert, {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Bug, {
              className: "h-4 w-4"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_alert.AlertTitle, {
              children: "Detalles del Error"
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_alert.AlertDescription, {
              className: "text-sm",
              children: ["ID: ", this.state.errorId, /*#__PURE__*/(0, _jsxruntime.jsx)("br", {}), "Tipo: ", errorType, /*#__PURE__*/(0, _jsxruntime.jsx)("br", {}),
              /* istanbul ignore next */
              (cov_2bnwzb2kh9().b[47][0]++, process.env.NODE_ENV === 'development') &&
              /* istanbul ignore next */
              (cov_2bnwzb2kh9().b[47][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
                children: ["Mensaje: ", error.message]
              }))]
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex flex-col gap-2",
            children: [
            /* istanbul ignore next */
            (cov_2bnwzb2kh9().b[48][0]++, canRetry) &&
            /* istanbul ignore next */
            (cov_2bnwzb2kh9().b[48][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)(_button.Button, {
              onClick: this.handleManualRetry,
              className: "w-full",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.RefreshCw, {
                className: "w-4 h-4 mr-2"
              }), "Intentar de nuevo"]
            })), /*#__PURE__*/(0, _jsxruntime.jsxs)(_button.Button, {
              variant: "outline",
              onClick: this.handleGoHome,
              className: "w-full",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Home, {
                className: "w-4 h-4 mr-2"
              }), "Ir al inicio"]
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_button.Button, {
              variant: "outline",
              onClick: this.handleReload,
              className: "w-full",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.RefreshCw, {
                className: "w-4 h-4 mr-2"
              }), "Recargar p\xe1gina"]
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "text-center",
            children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_button.Button, {
              variant: "link",
              size: "sm",
              onClick: () => {
                /* istanbul ignore next */
                cov_2bnwzb2kh9().f[26]++;
                cov_2bnwzb2kh9().s[129]++;
                return this.reportIssue();
              },
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Mail, {
                className: "w-4 h-4 mr-2"
              }), "Reportar problema"]
            })
          })]
        })]
      })
    });
  }
  renderComponentErrorUI(error, errorType, canRetry) {
    /* istanbul ignore next */
    cov_2bnwzb2kh9().f[27]++;
    cov_2bnwzb2kh9().s[130]++;
    return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "p-4 border border-red-200 rounded-lg bg-red-50",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex items-center gap-2 mb-2",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.AlertTriangle, {
          className: "w-4 h-4 text-red-600"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
          className: "text-sm font-medium text-red-800",
          children: "Error en componente"
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
        className: "text-sm text-red-700 mb-3",
        children: this.getErrorMessage(errorType)
      }),
      /* istanbul ignore next */
      (cov_2bnwzb2kh9().b[49][0]++, canRetry) &&
      /* istanbul ignore next */
      (cov_2bnwzb2kh9().b[49][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)(_button.Button, {
        size: "sm",
        variant: "outline",
        onClick: this.handleManualRetry,
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.RefreshCw, {
          className: "w-3 h-3 mr-1"
        }), "Reintentar"]
      }))]
    });
  }
  getErrorMessage(errorType) {
    /* istanbul ignore next */
    cov_2bnwzb2kh9().f[28]++;
    cov_2bnwzb2kh9().s[131]++;
    switch (errorType) {
      case 'chunk':
        /* istanbul ignore next */
        cov_2bnwzb2kh9().b[50][0]++;
        cov_2bnwzb2kh9().s[132]++;
        return 'Error cargando recursos. La página se recargará automáticamente.';
      case 'network':
        /* istanbul ignore next */
        cov_2bnwzb2kh9().b[50][1]++;
        cov_2bnwzb2kh9().s[133]++;
        return 'Error de conexión. Verifica tu conexión a internet.';
      case 'component':
        /* istanbul ignore next */
        cov_2bnwzb2kh9().b[50][2]++;
        cov_2bnwzb2kh9().s[134]++;
        return 'Error en el componente. Intentando recuperación automática.';
      default:
        /* istanbul ignore next */
        cov_2bnwzb2kh9().b[50][3]++;
        cov_2bnwzb2kh9().s[135]++;
        return 'Ha ocurrido un error inesperado. Estamos trabajando para solucionarlo.';
    }
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,