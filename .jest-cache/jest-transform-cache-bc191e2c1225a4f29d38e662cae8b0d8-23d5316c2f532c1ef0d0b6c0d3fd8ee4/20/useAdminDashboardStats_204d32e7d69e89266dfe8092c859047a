d8e7b120e583c3a2d3cda69484b7bc85
"use strict";

/* istanbul ignore next */
function cov_1r1lm44xnt() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\admin\\useAdminDashboardStats.ts";
  var hash = "19d5a292b482065d36dbf562e99687975b5bf82c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\admin\\useAdminDashboardStats.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 38
        }
      },
      "3": {
        start: {
          line: 11,
          column: 15
        },
        end: {
          line: 11,
          column: 31
        }
      },
      "4": {
        start: {
          line: 12,
          column: 16
        },
        end: {
          line: 12,
          column: 42
        }
      },
      "5": {
        start: {
          line: 14,
          column: 30
        },
        end: {
          line: 14,
          column: 56
        }
      },
      "6": {
        start: {
          line: 15,
          column: 34
        },
        end: {
          line: 15,
          column: 60
        }
      },
      "7": {
        start: {
          line: 16,
          column: 30
        },
        end: {
          line: 16,
          column: 56
        }
      },
      "8": {
        start: {
          line: 17,
          column: 30
        },
        end: {
          line: 17,
          column: 55
        }
      },
      "9": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 20,
          column: 11
        }
      },
      "10": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 30
        }
      },
      "11": {
        start: {
          line: 21,
          column: 32
        },
        end: {
          line: 179,
          column: 5
        }
      },
      "12": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 178,
          column: 9
        }
      },
      "13": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 29
        }
      },
      "14": {
        start: {
          line: 24,
          column: 12
        },
        end: {
          line: 24,
          column: 27
        }
      },
      "15": {
        start: {
          line: 28,
          column: 70
        },
        end: {
          line: 47,
          column: 14
        }
      },
      "16": {
        start: {
          line: 49,
          column: 31
        },
        end: {
          line: 54,
          column: 13
        }
      },
      "17": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 65,
          column: 13
        }
      },
      "18": {
        start: {
          line: 56,
          column: 29
        },
        end: {
          line: 56,
          column: 64
        }
      },
      "19": {
        start: {
          line: 57,
          column: 16
        },
        end: {
          line: 64,
          column: 17
        }
      },
      "20": {
        start: {
          line: 58,
          column: 20
        },
        end: {
          line: 63,
          column: 22
        }
      },
      "21": {
        start: {
          line: 67,
          column: 29
        },
        end: {
          line: 73,
          column: 13
        }
      },
      "22": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 85,
          column: 13
        }
      },
      "23": {
        start: {
          line: 75,
          column: 29
        },
        end: {
          line: 75,
          column: 62
        }
      },
      "24": {
        start: {
          line: 76,
          column: 16
        },
        end: {
          line: 84,
          column: 17
        }
      },
      "25": {
        start: {
          line: 77,
          column: 20
        },
        end: {
          line: 83,
          column: 22
        }
      },
      "26": {
        start: {
          line: 87,
          column: 28
        },
        end: {
          line: 90,
          column: 13
        }
      },
      "27": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 99,
          column: 13
        }
      },
      "28": {
        start: {
          line: 92,
          column: 29
        },
        end: {
          line: 92,
          column: 61
        }
      },
      "29": {
        start: {
          line: 93,
          column: 16
        },
        end: {
          line: 98,
          column: 17
        }
      },
      "30": {
        start: {
          line: 94,
          column: 20
        },
        end: {
          line: 97,
          column: 22
        }
      },
      "31": {
        start: {
          line: 101,
          column: 34
        },
        end: {
          line: 105,
          column: 13
        }
      },
      "32": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 36
        }
      },
      "33": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 66
        }
      },
      "34": {
        start: {
          line: 109,
          column: 33
        },
        end: {
          line: 109,
          column: 89
        }
      },
      "35": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 79
        }
      },
      "36": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 175,
          column: 13
        }
      },
      "37": {
        start: {
          line: 114,
          column: 33
        },
        end: {
          line: 116,
          column: 18
        }
      },
      "38": {
        start: {
          line: 117,
          column: 16
        },
        end: {
          line: 157,
          column: 17
        }
      },
      "39": {
        start: {
          line: 118,
          column: 33
        },
        end: {
          line: 118,
          column: 54
        }
      },
      "40": {
        start: {
          line: 119,
          column: 37
        },
        end: {
          line: 119,
          column: 52
        }
      },
      "41": {
        start: {
          line: 120,
          column: 42
        },
        end: {
          line: 120,
          column: 57
        }
      },
      "42": {
        start: {
          line: 121,
          column: 38
        },
        end: {
          line: 121,
          column: 89
        }
      },
      "43": {
        start: {
          line: 121,
          column: 59
        },
        end: {
          line: 121,
          column: 81
        }
      },
      "44": {
        start: {
          line: 122,
          column: 37
        },
        end: {
          line: 122,
          column: 105
        }
      },
      "45": {
        start: {
          line: 122,
          column: 58
        },
        end: {
          line: 122,
          column: 97
        }
      },
      "46": {
        start: {
          line: 123,
          column: 36
        },
        end: {
          line: 123,
          column: 90
        }
      },
      "47": {
        start: {
          line: 123,
          column: 57
        },
        end: {
          line: 123,
          column: 82
        }
      },
      "48": {
        start: {
          line: 124,
          column: 20
        },
        end: {
          line: 136,
          column: 23
        }
      },
      "49": {
        start: {
          line: 138,
          column: 20
        },
        end: {
          line: 138,
          column: 70
        }
      },
      "50": {
        start: {
          line: 139,
          column: 20
        },
        end: {
          line: 139,
          column: 68
        }
      },
      "51": {
        start: {
          line: 141,
          column: 20
        },
        end: {
          line: 141,
          column: 78
        }
      },
      "52": {
        start: {
          line: 143,
          column: 20
        },
        end: {
          line: 155,
          column: 23
        }
      },
      "53": {
        start: {
          line: 156,
          column: 20
        },
        end: {
          line: 156,
          column: 72
        }
      },
      "54": {
        start: {
          line: 159,
          column: 16
        },
        end: {
          line: 159,
          column: 67
        }
      },
      "55": {
        start: {
          line: 161,
          column: 16
        },
        end: {
          line: 173,
          column: 19
        }
      },
      "56": {
        start: {
          line: 174,
          column: 16
        },
        end: {
          line: 174,
          column: 69
        }
      },
      "57": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 177,
          column: 30
        }
      },
      "58": {
        start: {
          line: 180,
          column: 27
        },
        end: {
          line: 187,
          column: 5
        }
      },
      "59": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 186,
          column: 26
        }
      },
      "60": {
        start: {
          line: 188,
          column: 28
        },
        end: {
          line: 207,
          column: 5
        }
      },
      "61": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 194,
          column: 9
        }
      },
      "62": {
        start: {
          line: 190,
          column: 12
        },
        end: {
          line: 193,
          column: 14
        }
      },
      "63": {
        start: {
          line: 195,
          column: 23
        },
        end: {
          line: 195,
          column: 60
        }
      },
      "64": {
        start: {
          line: 196,
          column: 26
        },
        end: {
          line: 196,
          column: 42
        }
      },
      "65": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 202,
          column: 9
        }
      },
      "66": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 201,
          column: 14
        }
      },
      "67": {
        start: {
          line: 203,
          column: 8
        },
        end: {
          line: 206,
          column: 10
        }
      },
      "68": {
        start: {
          line: 208,
          column: 4
        },
        end: {
          line: 215,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "useAdminDashboardStats",
        decl: {
          start: {
            line: 13,
            column: 9
          },
          end: {
            line: 13,
            column: 31
          }
        },
        loc: {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 216,
            column: 1
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 26
          },
          end: {
            line: 18,
            column: 27
          }
        },
        loc: {
          start: {
            line: 18,
            column: 30
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 32
          },
          end: {
            line: 21,
            column: 33
          }
        },
        loc: {
          start: {
            line: 21,
            column: 42
          },
          end: {
            line: 179,
            column: 5
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 121,
            column: 54
          },
          end: {
            line: 121,
            column: 55
          }
        },
        loc: {
          start: {
            line: 121,
            column: 59
          },
          end: {
            line: 121,
            column: 81
          }
        },
        line: 121
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 122,
            column: 53
          },
          end: {
            line: 122,
            column: 54
          }
        },
        loc: {
          start: {
            line: 122,
            column: 58
          },
          end: {
            line: 122,
            column: 97
          }
        },
        line: 122
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 123,
            column: 52
          },
          end: {
            line: 123,
            column: 53
          }
        },
        loc: {
          start: {
            line: 123,
            column: 57
          },
          end: {
            line: 123,
            column: 82
          }
        },
        line: 123
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 180,
            column: 27
          },
          end: {
            line: 180,
            column: 28
          }
        },
        loc: {
          start: {
            line: 180,
            column: 37
          },
          end: {
            line: 187,
            column: 5
          }
        },
        line: 180
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 188,
            column: 28
          },
          end: {
            line: 188,
            column: 29
          }
        },
        loc: {
          start: {
            line: 188,
            column: 49
          },
          end: {
            line: 207,
            column: 5
          }
        },
        line: 188
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 65,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 65,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "1": {
        loc: {
          start: {
            line: 55,
            column: 16
          },
          end: {
            line: 55,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 55,
            column: 16
          },
          end: {
            line: 55,
            column: 55
          }
        }, {
          start: {
            line: 55,
            column: 59
          },
          end: {
            line: 55,
            column: 84
          }
        }],
        line: 55
      },
      "2": {
        loc: {
          start: {
            line: 57,
            column: 16
          },
          end: {
            line: 64,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 16
          },
          end: {
            line: 64,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "3": {
        loc: {
          start: {
            line: 57,
            column: 20
          },
          end: {
            line: 57,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 57,
            column: 20
          },
          end: {
            line: 57,
            column: 32
          }
        }, {
          start: {
            line: 57,
            column: 36
          },
          end: {
            line: 57,
            column: 46
          }
        }],
        line: 57
      },
      "4": {
        loc: {
          start: {
            line: 59,
            column: 39
          },
          end: {
            line: 59,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 39
          },
          end: {
            line: 59,
            column: 64
          }
        }, {
          start: {
            line: 59,
            column: 68
          },
          end: {
            line: 59,
            column: 69
          }
        }],
        line: 59
      },
      "5": {
        loc: {
          start: {
            line: 60,
            column: 40
          },
          end: {
            line: 60,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 40
          },
          end: {
            line: 60,
            column: 66
          }
        }, {
          start: {
            line: 60,
            column: 70
          },
          end: {
            line: 60,
            column: 71
          }
        }],
        line: 60
      },
      "6": {
        loc: {
          start: {
            line: 61,
            column: 42
          },
          end: {
            line: 61,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 61,
            column: 42
          },
          end: {
            line: 61,
            column: 71
          }
        }, {
          start: {
            line: 61,
            column: 75
          },
          end: {
            line: 61,
            column: 76
          }
        }],
        line: 61
      },
      "7": {
        loc: {
          start: {
            line: 62,
            column: 41
          },
          end: {
            line: 62,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 62,
            column: 41
          },
          end: {
            line: 62,
            column: 69
          }
        }, {
          start: {
            line: 62,
            column: 73
          },
          end: {
            line: 62,
            column: 74
          }
        }],
        line: 62
      },
      "8": {
        loc: {
          start: {
            line: 74,
            column: 12
          },
          end: {
            line: 85,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 12
          },
          end: {
            line: 85,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "9": {
        loc: {
          start: {
            line: 74,
            column: 16
          },
          end: {
            line: 74,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 74,
            column: 16
          },
          end: {
            line: 74,
            column: 53
          }
        }, {
          start: {
            line: 74,
            column: 57
          },
          end: {
            line: 74,
            column: 80
          }
        }],
        line: 74
      },
      "10": {
        loc: {
          start: {
            line: 76,
            column: 16
          },
          end: {
            line: 84,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 76,
            column: 16
          },
          end: {
            line: 84,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 76
      },
      "11": {
        loc: {
          start: {
            line: 76,
            column: 20
          },
          end: {
            line: 76,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 76,
            column: 20
          },
          end: {
            line: 76,
            column: 32
          }
        }, {
          start: {
            line: 76,
            column: 36
          },
          end: {
            line: 76,
            column: 46
          }
        }],
        line: 76
      },
      "12": {
        loc: {
          start: {
            line: 78,
            column: 37
          },
          end: {
            line: 78,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 78,
            column: 37
          },
          end: {
            line: 78,
            column: 60
          }
        }, {
          start: {
            line: 78,
            column: 64
          },
          end: {
            line: 78,
            column: 65
          }
        }],
        line: 78
      },
      "13": {
        loc: {
          start: {
            line: 79,
            column: 39
          },
          end: {
            line: 79,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 79,
            column: 39
          },
          end: {
            line: 79,
            column: 64
          }
        }, {
          start: {
            line: 79,
            column: 68
          },
          end: {
            line: 79,
            column: 69
          }
        }],
        line: 79
      },
      "14": {
        loc: {
          start: {
            line: 80,
            column: 41
          },
          end: {
            line: 80,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 80,
            column: 41
          },
          end: {
            line: 80,
            column: 68
          }
        }, {
          start: {
            line: 80,
            column: 72
          },
          end: {
            line: 80,
            column: 73
          }
        }],
        line: 80
      },
      "15": {
        loc: {
          start: {
            line: 81,
            column: 38
          },
          end: {
            line: 81,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 81,
            column: 38
          },
          end: {
            line: 81,
            column: 62
          }
        }, {
          start: {
            line: 81,
            column: 66
          },
          end: {
            line: 81,
            column: 67
          }
        }],
        line: 81
      },
      "16": {
        loc: {
          start: {
            line: 82,
            column: 38
          },
          end: {
            line: 82,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 82,
            column: 38
          },
          end: {
            line: 82,
            column: 62
          }
        }, {
          start: {
            line: 82,
            column: 66
          },
          end: {
            line: 82,
            column: 67
          }
        }],
        line: 82
      },
      "17": {
        loc: {
          start: {
            line: 91,
            column: 12
          },
          end: {
            line: 99,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 12
          },
          end: {
            line: 99,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 91
      },
      "18": {
        loc: {
          start: {
            line: 91,
            column: 16
          },
          end: {
            line: 91,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 91,
            column: 16
          },
          end: {
            line: 91,
            column: 52
          }
        }, {
          start: {
            line: 91,
            column: 56
          },
          end: {
            line: 91,
            column: 78
          }
        }],
        line: 91
      },
      "19": {
        loc: {
          start: {
            line: 93,
            column: 16
          },
          end: {
            line: 98,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 16
          },
          end: {
            line: 98,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 93
      },
      "20": {
        loc: {
          start: {
            line: 93,
            column: 20
          },
          end: {
            line: 93,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 93,
            column: 20
          },
          end: {
            line: 93,
            column: 32
          }
        }, {
          start: {
            line: 93,
            column: 36
          },
          end: {
            line: 93,
            column: 46
          }
        }],
        line: 93
      },
      "21": {
        loc: {
          start: {
            line: 95,
            column: 36
          },
          end: {
            line: 95,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 95,
            column: 36
          },
          end: {
            line: 95,
            column: 58
          }
        }, {
          start: {
            line: 95,
            column: 62
          },
          end: {
            line: 95,
            column: 63
          }
        }],
        line: 95
      },
      "22": {
        loc: {
          start: {
            line: 96,
            column: 37
          },
          end: {
            line: 96,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 96,
            column: 37
          },
          end: {
            line: 96,
            column: 60
          }
        }, {
          start: {
            line: 96,
            column: 64
          },
          end: {
            line: 96,
            column: 65
          }
        }],
        line: 96
      },
      "23": {
        loc: {
          start: {
            line: 109,
            column: 33
          },
          end: {
            line: 109,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 109,
            column: 56
          },
          end: {
            line: 109,
            column: 67
          }
        }, {
          start: {
            line: 109,
            column: 70
          },
          end: {
            line: 109,
            column: 89
          }
        }],
        line: 109
      },
      "24": {
        loc: {
          start: {
            line: 117,
            column: 16
          },
          end: {
            line: 157,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 117,
            column: 16
          },
          end: {
            line: 157,
            column: 17
          }
        }, {
          start: {
            line: 140,
            column: 23
          },
          end: {
            line: 157,
            column: 17
          }
        }],
        line: 117
      },
      "25": {
        loc: {
          start: {
            line: 119,
            column: 37
          },
          end: {
            line: 119,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 119,
            column: 37
          },
          end: {
            line: 119,
            column: 46
          }
        }, {
          start: {
            line: 119,
            column: 50
          },
          end: {
            line: 119,
            column: 52
          }
        }],
        line: 119
      },
      "26": {
        loc: {
          start: {
            line: 121,
            column: 59
          },
          end: {
            line: 121,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 121,
            column: 59
          },
          end: {
            line: 121,
            column: 66
          }
        }, {
          start: {
            line: 121,
            column: 70
          },
          end: {
            line: 121,
            column: 81
          }
        }],
        line: 121
      },
      "27": {
        loc: {
          start: {
            line: 122,
            column: 58
          },
          end: {
            line: 122,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 122,
            column: 58
          },
          end: {
            line: 122,
            column: 65
          }
        }, {
          start: {
            line: 122,
            column: 69
          },
          end: {
            line: 122,
            column: 80
          }
        }, {
          start: {
            line: 122,
            column: 84
          },
          end: {
            line: 122,
            column: 97
          }
        }],
        line: 122
      },
      "28": {
        loc: {
          start: {
            line: 123,
            column: 57
          },
          end: {
            line: 123,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 123,
            column: 57
          },
          end: {
            line: 123,
            column: 65
          }
        }, {
          start: {
            line: 123,
            column: 69
          },
          end: {
            line: 123,
            column: 82
          }
        }],
        line: 123
      },
      "29": {
        loc: {
          start: {
            line: 189,
            column: 8
          },
          end: {
            line: 194,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 189,
            column: 8
          },
          end: {
            line: 194,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 189
      },
      "30": {
        loc: {
          start: {
            line: 197,
            column: 8
          },
          end: {
            line: 202,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 197,
            column: 8
          },
          end: {
            line: 202,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 197
      },
      "31": {
        loc: {
          start: {
            line: 204,
            column: 22
          },
          end: {
            line: 204,
            column: 43
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 204,
            column: 35
          },
          end: {
            line: 204,
            column: 38
          }
        }, {
          start: {
            line: 204,
            column: 41
          },
          end: {
            line: 204,
            column: 43
          }
        }],
        line: 204
      },
      "32": {
        loc: {
          start: {
            line: 205,
            column: 18
          },
          end: {
            line: 205,
            column: 54
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 205,
            column: 31
          },
          end: {
            line: 205,
            column: 41
          }
        }, {
          start: {
            line: 205,
            column: 44
          },
          end: {
            line: 205,
            column: 54
          }
        }],
        line: 205
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\admin\\useAdminDashboardStats.ts"],
      sourcesContent: ["import { useState, useEffect } from 'react';\r\nimport { useSession } from 'next-auth/react';\r\n\r\ninterface DashboardStats {\r\n  totalProducts: number;\r\n  activeProducts: number;\r\n  lowStockProducts: number;\r\n  noStockProducts: number;\r\n  totalOrders: number;\r\n  pendingOrders: number;\r\n  completedOrders: number;\r\n  totalRevenue: number;\r\n  todayRevenue: number;\r\n  totalUsers: number;\r\n  activeUsers: number;\r\n}\r\n\r\ninterface QuickStat {\r\n  title: string;\r\n  value: string;\r\n  change: string;\r\n  changeType: 'positive' | 'negative' | 'neutral';\r\n  icon: any;\r\n}\r\n\r\nexport function useAdminDashboardStats() {\r\n  const [stats, setStats] = useState<DashboardStats | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const { data: session } = useSession();\r\n\r\n  useEffect(() => {\r\n    fetchDashboardStats();\r\n  }, []);\r\n\r\n  const fetchDashboardStats = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      // NextAuth.js maneja las cookies de sesi\xF3n autom\xE1ticamente\r\n      // No necesitamos obtener token manualmente\r\n\r\n      // Hacer requests paralelos a diferentes APIs (con manejo de errores individual)\r\n      const [productsResponse, ordersResponse, usersResponse] = await Promise.allSettled([\r\n        fetch('/api/admin/products/stats', {\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          credentials: 'include'\r\n        }),\r\n        fetch('/api/admin/orders/stats', {\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          credentials: 'include'\r\n        }),\r\n        fetch('/api/admin/users/stats', {\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          credentials: 'include'\r\n        })\r\n      ]);\r\n\r\n      // Procesar respuesta de productos\r\n      let productStats = {\r\n        totalProducts: 0,\r\n        activeProducts: 0,\r\n        lowStockProducts: 0,\r\n        noStockProducts: 0\r\n      };\r\n\r\n      if (productsResponse.status === 'fulfilled' && productsResponse.value.ok) {\r\n        const data = await productsResponse.value.json();\r\n        if (data.success && data.stats) {\r\n          productStats = {\r\n            totalProducts: data.stats.total_products || 0,\r\n            activeProducts: data.stats.active_products || 0,\r\n            lowStockProducts: data.stats.low_stock_products || 0,\r\n            noStockProducts: data.stats.no_stock_products || 0\r\n          };\r\n        }\r\n      }\r\n\r\n      // Procesar respuesta de \xF3rdenes (con fallback si no existe la API)\r\n      let orderStats = {\r\n        totalOrders: 0,\r\n        pendingOrders: 0,\r\n        completedOrders: 0,\r\n        totalRevenue: 0,\r\n        todayRevenue: 0\r\n      };\r\n\r\n      if (ordersResponse.status === 'fulfilled' && ordersResponse.value.ok) {\r\n        const data = await ordersResponse.value.json();\r\n        if (data.success && data.stats) {\r\n          orderStats = {\r\n            totalOrders: data.stats.total_orders || 0,\r\n            pendingOrders: data.stats.pending_orders || 0,\r\n            completedOrders: data.stats.completed_orders || 0,\r\n            totalRevenue: data.stats.total_revenue || 0,\r\n            todayRevenue: data.stats.today_revenue || 0\r\n          };\r\n        }\r\n      }\r\n\r\n      // Procesar respuesta de usuarios (con fallback si no existe la API)\r\n      let userStats = {\r\n        totalUsers: 0,\r\n        activeUsers: 0\r\n      };\r\n\r\n      if (usersResponse.status === 'fulfilled' && usersResponse.value.ok) {\r\n        const data = await usersResponse.value.json();\r\n        if (data.success && data.stats) {\r\n          userStats = {\r\n            totalUsers: data.stats.total_users || 0,\r\n            activeUsers: data.stats.active_users || 0\r\n          };\r\n        }\r\n      }\r\n\r\n      // Combinar todas las estad\xEDsticas\r\n      const combinedStats: DashboardStats = {\r\n        ...productStats,\r\n        ...orderStats,\r\n        ...userStats\r\n      };\r\n\r\n      setStats(combinedStats);\r\n    } catch (err) {\r\n      console.error('Error fetching dashboard stats:', err);\r\n      const errorMessage = err instanceof Error ? err.message : 'Error desconocido';\r\n\r\n      // No establecer error inmediatamente, intentar fallback primero\r\n      console.log('Intentando fallback con API p\xFAblica de productos...');\r\n\r\n      // Fallback: obtener estad\xEDsticas b\xE1sicas directamente de la API p\xFAblica\r\n      try {\r\n        const response = await fetch('/api/products', {\r\n          credentials: 'include'\r\n        });\r\n\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          const products = data.data || [];\r\n\r\n          const totalProducts = products.length;\r\n          const withStock = products.filter((p: any) => p.stock && p.stock > 0).length;\r\n          const lowStock = products.filter((p: any) => p.stock && p.stock > 0 && p.stock <= 10).length;\r\n          const noStock = products.filter((p: any) => !p.stock || p.stock === 0).length;\r\n\r\n          setStats({\r\n            totalProducts,\r\n            activeProducts: withStock,\r\n            lowStockProducts: lowStock,\r\n            noStockProducts: noStock,\r\n            totalOrders: 0,\r\n            pendingOrders: 0,\r\n            completedOrders: 0,\r\n            totalRevenue: 0,\r\n            todayRevenue: 0,\r\n            totalUsers: 0,\r\n            activeUsers: 0\r\n          });\r\n\r\n          // Solo mostrar warning, no error completo\r\n          setError(`Usando datos b\xE1sicos: ${errorMessage}`);\r\n          console.log('Fallback exitoso con API p\xFAblica');\r\n        } else {\r\n          console.warn('API p\xFAblica fall\xF3, usando datos est\xE1ticos');\r\n          // Fallback final con datos conocidos\r\n          setStats({\r\n            totalProducts: 53,\r\n            activeProducts: 53,\r\n            lowStockProducts: 4,\r\n            noStockProducts: 0,\r\n            totalOrders: 0,\r\n            pendingOrders: 0,\r\n            completedOrders: 0,\r\n            totalRevenue: 0,\r\n            todayRevenue: 0,\r\n            totalUsers: 0,\r\n            activeUsers: 0\r\n          });\r\n          setError(`Usando datos est\xE1ticos: ${errorMessage}`);\r\n        }\r\n      } catch (fallbackError) {\r\n        console.error('Error en fallback:', fallbackError);\r\n        // Fallback final con datos est\xE1ticos\r\n        setStats({\r\n          totalProducts: 53,\r\n          activeProducts: 53,\r\n          lowStockProducts: 4,\r\n          noStockProducts: 0,\r\n          totalOrders: 0,\r\n          pendingOrders: 0,\r\n          completedOrders: 0,\r\n          totalRevenue: 0,\r\n          todayRevenue: 0,\r\n          totalUsers: 0,\r\n          activeUsers: 0\r\n        });\r\n        setError(`Fallback completo fall\xF3: ${errorMessage}`);\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const formatCurrency = (amount: number): string => {\r\n    return new Intl.NumberFormat('es-AR', {\r\n      style: 'currency',\r\n      currency: 'ARS',\r\n      minimumFractionDigits: 0,\r\n      maximumFractionDigits: 0\r\n    }).format(amount);\r\n  };\r\n\r\n  const calculateChange = (current: number, previous: number): { value: string; type: 'positive' | 'negative' | 'neutral' } => {\r\n    if (previous === 0) {\r\n      return { value: '+100%', type: 'positive' };\r\n    }\r\n    \r\n    const change = ((current - previous) / previous) * 100;\r\n    const absChange = Math.abs(change);\r\n    \r\n    if (absChange < 1) {\r\n      return { value: '0%', type: 'neutral' };\r\n    }\r\n    \r\n    return {\r\n      value: `${change > 0 ? '+' : ''}${change.toFixed(1)}%`,\r\n      type: change > 0 ? 'positive' : 'negative'\r\n    };\r\n  };\r\n\r\n  return {\r\n    stats,\r\n    loading,\r\n    error,\r\n    refetch: fetchDashboardStats,\r\n    formatCurrency,\r\n    calculateChange\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["useAdminDashboardStats", "stats", "setStats", "useState", "loading", "setLoading", "error", "setError", "data", "session", "useSession", "useEffect", "fetchDashboardStats", "productsResponse", "ordersResponse", "usersResponse", "Promise", "allSettled", "fetch", "headers", "credentials", "productStats", "totalProducts", "activeProducts", "lowStockProducts", "noStockProducts", "status", "value", "ok", "json", "success", "total_products", "active_products", "low_stock_products", "no_stock_products", "orderStats", "totalOrders", "pendingOrders", "completedOrders", "totalRevenue", "todayRevenue", "total_orders", "pending_orders", "completed_orders", "total_revenue", "today_revenue", "userStats", "totalUsers", "activeUsers", "total_users", "active_users", "combinedStats", "err", "console", "errorMessage", "Error", "message", "log", "response", "products", "length", "withStock", "filter", "p", "stock", "lowStock", "noStock", "warn", "fallbackError", "formatCurrency", "amount", "Intl", "NumberFormat", "style", "currency", "minimumFractionDigits", "maximumFractionDigits", "format", "calculateChange", "current", "previous", "type", "change", "absChange", "Math", "abs", "toFixed", "refetch"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "19d5a292b482065d36dbf562e99687975b5bf82c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1r1lm44xnt = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1r1lm44xnt();
cov_1r1lm44xnt().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1r1lm44xnt().s[1]++;
Object.defineProperty(exports, "useAdminDashboardStats", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1r1lm44xnt().f[0]++;
    cov_1r1lm44xnt().s[2]++;
    return useAdminDashboardStats;
  }
});
const _react =
/* istanbul ignore next */
(cov_1r1lm44xnt().s[3]++, require("react"));
const _react1 =
/* istanbul ignore next */
(cov_1r1lm44xnt().s[4]++, require("next-auth/react"));
function useAdminDashboardStats() {
  /* istanbul ignore next */
  cov_1r1lm44xnt().f[1]++;
  const [stats, setStats] =
  /* istanbul ignore next */
  (cov_1r1lm44xnt().s[5]++, (0, _react.useState)(null));
  const [loading, setLoading] =
  /* istanbul ignore next */
  (cov_1r1lm44xnt().s[6]++, (0, _react.useState)(true));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_1r1lm44xnt().s[7]++, (0, _react.useState)(null));
  const {
    data: session
  } =
  /* istanbul ignore next */
  (cov_1r1lm44xnt().s[8]++, (0, _react1.useSession)());
  /* istanbul ignore next */
  cov_1r1lm44xnt().s[9]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1r1lm44xnt().f[2]++;
    cov_1r1lm44xnt().s[10]++;
    fetchDashboardStats();
  }, []);
  /* istanbul ignore next */
  cov_1r1lm44xnt().s[11]++;
  const fetchDashboardStats = async () => {
    /* istanbul ignore next */
    cov_1r1lm44xnt().f[3]++;
    cov_1r1lm44xnt().s[12]++;
    try {
      /* istanbul ignore next */
      cov_1r1lm44xnt().s[13]++;
      setLoading(true);
      /* istanbul ignore next */
      cov_1r1lm44xnt().s[14]++;
      setError(null);
      // NextAuth.js maneja las cookies de sesión automáticamente
      // No necesitamos obtener token manualmente
      // Hacer requests paralelos a diferentes APIs (con manejo de errores individual)
      const [productsResponse, ordersResponse, usersResponse] =
      /* istanbul ignore next */
      (cov_1r1lm44xnt().s[15]++, await Promise.allSettled([fetch('/api/admin/products/stats', {
        headers: {
          'Content-Type': 'application/json'
        },
        credentials: 'include'
      }), fetch('/api/admin/orders/stats', {
        headers: {
          'Content-Type': 'application/json'
        },
        credentials: 'include'
      }), fetch('/api/admin/users/stats', {
        headers: {
          'Content-Type': 'application/json'
        },
        credentials: 'include'
      })]));
      // Procesar respuesta de productos
      let productStats =
      /* istanbul ignore next */
      (cov_1r1lm44xnt().s[16]++, {
        totalProducts: 0,
        activeProducts: 0,
        lowStockProducts: 0,
        noStockProducts: 0
      });
      /* istanbul ignore next */
      cov_1r1lm44xnt().s[17]++;
      if (
      /* istanbul ignore next */
      (cov_1r1lm44xnt().b[1][0]++, productsResponse.status === 'fulfilled') &&
      /* istanbul ignore next */
      (cov_1r1lm44xnt().b[1][1]++, productsResponse.value.ok)) {
        /* istanbul ignore next */
        cov_1r1lm44xnt().b[0][0]++;
        const data =
        /* istanbul ignore next */
        (cov_1r1lm44xnt().s[18]++, await productsResponse.value.json());
        /* istanbul ignore next */
        cov_1r1lm44xnt().s[19]++;
        if (
        /* istanbul ignore next */
        (cov_1r1lm44xnt().b[3][0]++, data.success) &&
        /* istanbul ignore next */
        (cov_1r1lm44xnt().b[3][1]++, data.stats)) {
          /* istanbul ignore next */
          cov_1r1lm44xnt().b[2][0]++;
          cov_1r1lm44xnt().s[20]++;
          productStats = {
            totalProducts:
            /* istanbul ignore next */
            (cov_1r1lm44xnt().b[4][0]++, data.stats.total_products) ||
            /* istanbul ignore next */
            (cov_1r1lm44xnt().b[4][1]++, 0),
            activeProducts:
            /* istanbul ignore next */
            (cov_1r1lm44xnt().b[5][0]++, data.stats.active_products) ||
            /* istanbul ignore next */
            (cov_1r1lm44xnt().b[5][1]++, 0),
            lowStockProducts:
            /* istanbul ignore next */
            (cov_1r1lm44xnt().b[6][0]++, data.stats.low_stock_products) ||
            /* istanbul ignore next */
            (cov_1r1lm44xnt().b[6][1]++, 0),
            noStockProducts:
            /* istanbul ignore next */
            (cov_1r1lm44xnt().b[7][0]++, data.stats.no_stock_products) ||
            /* istanbul ignore next */
            (cov_1r1lm44xnt().b[7][1]++, 0)
          };
        } else
        /* istanbul ignore next */
        {
          cov_1r1lm44xnt().b[2][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1r1lm44xnt().b[0][1]++;
      }
      // Procesar respuesta de órdenes (con fallback si no existe la API)
      let orderStats =
      /* istanbul ignore next */
      (cov_1r1lm44xnt().s[21]++, {
        totalOrders: 0,
        pendingOrders: 0,
        completedOrders: 0,
        totalRevenue: 0,
        todayRevenue: 0
      });
      /* istanbul ignore next */
      cov_1r1lm44xnt().s[22]++;
      if (
      /* istanbul ignore next */
      (cov_1r1lm44xnt().b[9][0]++, ordersResponse.status === 'fulfilled') &&
      /* istanbul ignore next */
      (cov_1r1lm44xnt().b[9][1]++, ordersResponse.value.ok)) {
        /* istanbul ignore next */
        cov_1r1lm44xnt().b[8][0]++;
        const data =
        /* istanbul ignore next */
        (cov_1r1lm44xnt().s[23]++, await ordersResponse.value.json());
        /* istanbul ignore next */
        cov_1r1lm44xnt().s[24]++;
        if (
        /* istanbul ignore next */
        (cov_1r1lm44xnt().b[11][0]++, data.success) &&
        /* istanbul ignore next */
        (cov_1r1lm44xnt().b[11][1]++, data.stats)) {
          /* istanbul ignore next */
          cov_1r1lm44xnt().b[10][0]++;
          cov_1r1lm44xnt().s[25]++;
          orderStats = {
            totalOrders:
            /* istanbul ignore next */
            (cov_1r1lm44xnt().b[12][0]++, data.stats.total_orders) ||
            /* istanbul ignore next */
            (cov_1r1lm44xnt().b[12][1]++, 0),
            pendingOrders:
            /* istanbul ignore next */
            (cov_1r1lm44xnt().b[13][0]++, data.stats.pending_orders) ||
            /* istanbul ignore next */
            (cov_1r1lm44xnt().b[13][1]++, 0),
            completedOrders:
            /* istanbul ignore next */
            (cov_1r1lm44xnt().b[14][0]++, data.stats.completed_orders) ||
            /* istanbul ignore next */
            (cov_1r1lm44xnt().b[14][1]++, 0),
            totalRevenue:
            /* istanbul ignore next */
            (cov_1r1lm44xnt().b[15][0]++, data.stats.total_revenue) ||
            /* istanbul ignore next */
            (cov_1r1lm44xnt().b[15][1]++, 0),
            todayRevenue:
            /* istanbul ignore next */
            (cov_1r1lm44xnt().b[16][0]++, data.stats.today_revenue) ||
            /* istanbul ignore next */
            (cov_1r1lm44xnt().b[16][1]++, 0)
          };
        } else
        /* istanbul ignore next */
        {
          cov_1r1lm44xnt().b[10][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1r1lm44xnt().b[8][1]++;
      }
      // Procesar respuesta de usuarios (con fallback si no existe la API)
      let userStats =
      /* istanbul ignore next */
      (cov_1r1lm44xnt().s[26]++, {
        totalUsers: 0,
        activeUsers: 0
      });
      /* istanbul ignore next */
      cov_1r1lm44xnt().s[27]++;
      if (
      /* istanbul ignore next */
      (cov_1r1lm44xnt().b[18][0]++, usersResponse.status === 'fulfilled') &&
      /* istanbul ignore next */
      (cov_1r1lm44xnt().b[18][1]++, usersResponse.value.ok)) {
        /* istanbul ignore next */
        cov_1r1lm44xnt().b[17][0]++;
        const data =
        /* istanbul ignore next */
        (cov_1r1lm44xnt().s[28]++, await usersResponse.value.json());
        /* istanbul ignore next */
        cov_1r1lm44xnt().s[29]++;
        if (
        /* istanbul ignore next */
        (cov_1r1lm44xnt().b[20][0]++, data.success) &&
        /* istanbul ignore next */
        (cov_1r1lm44xnt().b[20][1]++, data.stats)) {
          /* istanbul ignore next */
          cov_1r1lm44xnt().b[19][0]++;
          cov_1r1lm44xnt().s[30]++;
          userStats = {
            totalUsers:
            /* istanbul ignore next */
            (cov_1r1lm44xnt().b[21][0]++, data.stats.total_users) ||
            /* istanbul ignore next */
            (cov_1r1lm44xnt().b[21][1]++, 0),
            activeUsers:
            /* istanbul ignore next */
            (cov_1r1lm44xnt().b[22][0]++, data.stats.active_users) ||
            /* istanbul ignore next */
            (cov_1r1lm44xnt().b[22][1]++, 0)
          };
        } else
        /* istanbul ignore next */
        {
          cov_1r1lm44xnt().b[19][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1r1lm44xnt().b[17][1]++;
      }
      // Combinar todas las estadísticas
      const combinedStats =
      /* istanbul ignore next */
      (cov_1r1lm44xnt().s[31]++, {
        ...productStats,
        ...orderStats,
        ...userStats
      });
      /* istanbul ignore next */
      cov_1r1lm44xnt().s[32]++;
      setStats(combinedStats);
    } catch (err) {
      /* istanbul ignore next */
      cov_1r1lm44xnt().s[33]++;
      console.error('Error fetching dashboard stats:', err);
      const errorMessage =
      /* istanbul ignore next */
      (cov_1r1lm44xnt().s[34]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_1r1lm44xnt().b[23][0]++, err.message) :
      /* istanbul ignore next */
      (cov_1r1lm44xnt().b[23][1]++, 'Error desconocido'));
      // No establecer error inmediatamente, intentar fallback primero
      /* istanbul ignore next */
      cov_1r1lm44xnt().s[35]++;
      console.log('Intentando fallback con API pública de productos...');
      // Fallback: obtener estadísticas básicas directamente de la API pública
      /* istanbul ignore next */
      cov_1r1lm44xnt().s[36]++;
      try {
        const response =
        /* istanbul ignore next */
        (cov_1r1lm44xnt().s[37]++, await fetch('/api/products', {
          credentials: 'include'
        }));
        /* istanbul ignore next */
        cov_1r1lm44xnt().s[38]++;
        if (response.ok) {
          /* istanbul ignore next */
          cov_1r1lm44xnt().b[24][0]++;
          const data =
          /* istanbul ignore next */
          (cov_1r1lm44xnt().s[39]++, await response.json());
          const products =
          /* istanbul ignore next */
          (cov_1r1lm44xnt().s[40]++,
          /* istanbul ignore next */
          (cov_1r1lm44xnt().b[25][0]++, data.data) ||
          /* istanbul ignore next */
          (cov_1r1lm44xnt().b[25][1]++, []));
          const totalProducts =
          /* istanbul ignore next */
          (cov_1r1lm44xnt().s[41]++, products.length);
          const withStock =
          /* istanbul ignore next */
          (cov_1r1lm44xnt().s[42]++, products.filter(p => {
            /* istanbul ignore next */
            cov_1r1lm44xnt().f[4]++;
            cov_1r1lm44xnt().s[43]++;
            return /* istanbul ignore next */(cov_1r1lm44xnt().b[26][0]++, p.stock) &&
            /* istanbul ignore next */
            (cov_1r1lm44xnt().b[26][1]++, p.stock > 0);
          }).length);
          const lowStock =
          /* istanbul ignore next */
          (cov_1r1lm44xnt().s[44]++, products.filter(p => {
            /* istanbul ignore next */
            cov_1r1lm44xnt().f[5]++;
            cov_1r1lm44xnt().s[45]++;
            return /* istanbul ignore next */(cov_1r1lm44xnt().b[27][0]++, p.stock) &&
            /* istanbul ignore next */
            (cov_1r1lm44xnt().b[27][1]++, p.stock > 0) &&
            /* istanbul ignore next */
            (cov_1r1lm44xnt().b[27][2]++, p.stock <= 10);
          }).length);
          const noStock =
          /* istanbul ignore next */
          (cov_1r1lm44xnt().s[46]++, products.filter(p => {
            /* istanbul ignore next */
            cov_1r1lm44xnt().f[6]++;
            cov_1r1lm44xnt().s[47]++;
            return /* istanbul ignore next */(cov_1r1lm44xnt().b[28][0]++, !p.stock) ||
            /* istanbul ignore next */
            (cov_1r1lm44xnt().b[28][1]++, p.stock === 0);
          }).length);
          /* istanbul ignore next */
          cov_1r1lm44xnt().s[48]++;
          setStats({
            totalProducts,
            activeProducts: withStock,
            lowStockProducts: lowStock,
            noStockProducts: noStock,
            totalOrders: 0,
            pendingOrders: 0,
            completedOrders: 0,
            totalRevenue: 0,
            todayRevenue: 0,
            totalUsers: 0,
            activeUsers: 0
          });
          // Solo mostrar warning, no error completo
          /* istanbul ignore next */
          cov_1r1lm44xnt().s[49]++;
          setError(`Usando datos básicos: ${errorMessage}`);
          /* istanbul ignore next */
          cov_1r1lm44xnt().s[50]++;
          console.log('Fallback exitoso con API pública');
        } else {
          /* istanbul ignore next */
          cov_1r1lm44xnt().b[24][1]++;
          cov_1r1lm44xnt().s[51]++;
          console.warn('API pública falló, usando datos estáticos');
          // Fallback final con datos conocidos
          /* istanbul ignore next */
          cov_1r1lm44xnt().s[52]++;
          setStats({
            totalProducts: 53,
            activeProducts: 53,
            lowStockProducts: 4,
            noStockProducts: 0,
            totalOrders: 0,
            pendingOrders: 0,
            completedOrders: 0,
            totalRevenue: 0,
            todayRevenue: 0,
            totalUsers: 0,
            activeUsers: 0
          });
          /* istanbul ignore next */
          cov_1r1lm44xnt().s[53]++;
          setError(`Usando datos estáticos: ${errorMessage}`);
        }
      } catch (fallbackError) {
        /* istanbul ignore next */
        cov_1r1lm44xnt().s[54]++;
        console.error('Error en fallback:', fallbackError);
        // Fallback final con datos estáticos
        /* istanbul ignore next */
        cov_1r1lm44xnt().s[55]++;
        setStats({
          totalProducts: 53,
          activeProducts: 53,
          lowStockProducts: 4,
          noStockProducts: 0,
          totalOrders: 0,
          pendingOrders: 0,
          completedOrders: 0,
          totalRevenue: 0,
          todayRevenue: 0,
          totalUsers: 0,
          activeUsers: 0
        });
        /* istanbul ignore next */
        cov_1r1lm44xnt().s[56]++;
        setError(`Fallback completo falló: ${errorMessage}`);
      }
    } finally {
      /* istanbul ignore next */
      cov_1r1lm44xnt().s[57]++;
      setLoading(false);
    }
  };
  /* istanbul ignore next */
  cov_1r1lm44xnt().s[58]++;
  const formatCurrency = amount => {
    /* istanbul ignore next */
    cov_1r1lm44xnt().f[7]++;
    cov_1r1lm44xnt().s[59]++;
    return new Intl.NumberFormat('es-AR', {
      style: 'currency',
      currency: 'ARS',
      minimumFractionDigits: 0,
      maximumFractionDigits: 0
    }).format(amount);
  };
  /* istanbul ignore next */
  cov_1r1lm44xnt().s[60]++;
  const calculateChange = (current, previous) => {
    /* istanbul ignore next */
    cov_1r1lm44xnt().f[8]++;
    cov_1r1lm44xnt().s[61]++;
    if (previous === 0) {
      /* istanbul ignore next */
      cov_1r1lm44xnt().b[29][0]++;
      cov_1r1lm44xnt().s[62]++;
      return {
        value: '+100%',
        type: 'positive'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1r1lm44xnt().b[29][1]++;
    }
    const change =
    /* istanbul ignore next */
    (cov_1r1lm44xnt().s[63]++, (current - previous) / previous * 100);
    const absChange =
    /* istanbul ignore next */
    (cov_1r1lm44xnt().s[64]++, Math.abs(change));
    /* istanbul ignore next */
    cov_1r1lm44xnt().s[65]++;
    if (absChange < 1) {
      /* istanbul ignore next */
      cov_1r1lm44xnt().b[30][0]++;
      cov_1r1lm44xnt().s[66]++;
      return {
        value: '0%',
        type: 'neutral'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1r1lm44xnt().b[30][1]++;
    }
    cov_1r1lm44xnt().s[67]++;
    return {
      value: `${change > 0 ?
      /* istanbul ignore next */
      (cov_1r1lm44xnt().b[31][0]++, '+') :
      /* istanbul ignore next */
      (cov_1r1lm44xnt().b[31][1]++, '')}${change.toFixed(1)}%`,
      type: change > 0 ?
      /* istanbul ignore next */
      (cov_1r1lm44xnt().b[32][0]++, 'positive') :
      /* istanbul ignore next */
      (cov_1r1lm44xnt().b[32][1]++, 'negative')
    };
  };
  /* istanbul ignore next */
  cov_1r1lm44xnt().s[68]++;
  return {
    stats,
    loading,
    error,
    refetch: fetchDashboardStats,
    formatCurrency,
    calculateChange
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,