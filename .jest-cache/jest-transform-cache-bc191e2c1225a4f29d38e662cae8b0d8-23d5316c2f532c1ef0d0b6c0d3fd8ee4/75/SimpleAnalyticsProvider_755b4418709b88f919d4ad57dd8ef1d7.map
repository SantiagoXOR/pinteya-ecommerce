{"version":3,"names":["cov_ll7d9wt3k","actualCoverage","s","SimpleAnalyticsProvider","f","useAnalytics","AnalyticsContext","_react","createContext","undefined","context","useContext","b","Error","children","trackEvent","eventName","properties","console","log","trackPageView","pageName","trackClick","elementName","trackHover","trackScroll","scrollData","trackConversion","conversionType","trackSearch","searchTerm","results","trackCartAction","action","productId","trackProductView","productName","trackCategoryView","categoryName","trackUserAction","contextValue","isEnabled","_jsxruntime","jsx","Provider","value"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\Analytics\\SimpleAnalyticsProvider.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { createContext, useContext, ReactNode } from 'react';\r\n\r\n// Tipos simplificados\r\ninterface AnalyticsContextType {\r\n  trackEvent: (eventName: string, properties?: Record<string, any>) => void;\r\n  trackPageView: (pageName: string, properties?: Record<string, any>) => void;\r\n  trackClick: (elementName: string, properties?: Record<string, any>) => void;\r\n  trackHover: (elementName: string, properties?: Record<string, any>) => void;\r\n  trackScroll: (scrollData: { scrollY: number; scrollPercent: number }) => void;\r\n  trackConversion: (conversionType: string, properties?: Record<string, any>) => void;\r\n  trackSearch: (searchTerm: string, results?: number) => void;\r\n  trackCartAction: (action: string, productId?: string, properties?: Record<string, any>) => void;\r\n  trackProductView: (productId: string, productName: string, properties?: Record<string, any>) => void;\r\n  trackCategoryView: (categoryName: string, properties?: Record<string, any>) => void;\r\n  trackUserAction: (action: string, properties?: Record<string, any>) => void;\r\n  isEnabled: boolean;\r\n}\r\n\r\n// Contexto\r\nconst AnalyticsContext = createContext<AnalyticsContextType | undefined>(undefined);\r\n\r\n// Hook para usar el contexto\r\nexport const useAnalytics = (): AnalyticsContextType => {\r\n  const context = useContext(AnalyticsContext);\r\n  if (!context) {\r\n    throw new Error('useAnalytics must be used within an AnalyticsProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\n// Props del provider\r\ninterface SimpleAnalyticsProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\n// Provider simplificado\r\nexport const SimpleAnalyticsProvider: React.FC<SimpleAnalyticsProviderProps> = ({ children }) => {\r\n  // Funciones mock para analytics\r\n  const trackEvent = (eventName: string, properties?: Record<string, any>) => {\r\n    console.log('üìä Analytics Event:', eventName, properties);\r\n  };\r\n\r\n  const trackPageView = (pageName: string, properties?: Record<string, any>) => {\r\n    console.log('üìÑ Page View:', pageName, properties);\r\n  };\r\n\r\n  const trackClick = (elementName: string, properties?: Record<string, any>) => {\r\n    console.log('üñ±Ô∏è Click:', elementName, properties);\r\n  };\r\n\r\n  const trackHover = (elementName: string, properties?: Record<string, any>) => {\r\n    console.log('üëÜ Hover:', elementName, properties);\r\n  };\r\n\r\n  const trackScroll = (scrollData: { scrollY: number; scrollPercent: number }) => {\r\n    console.log('üìú Scroll:', scrollData);\r\n  };\r\n\r\n  const trackConversion = (conversionType: string, properties?: Record<string, any>) => {\r\n    console.log('üí∞ Conversion:', conversionType, properties);\r\n  };\r\n\r\n  const trackSearch = (searchTerm: string, results?: number) => {\r\n    console.log('üîç Search:', searchTerm, 'Results:', results);\r\n  };\r\n\r\n  const trackCartAction = (action: string, productId?: string, properties?: Record<string, any>) => {\r\n    console.log('üõí Cart Action:', action, productId, properties);\r\n  };\r\n\r\n  const trackProductView = (productId: string, productName: string, properties?: Record<string, any>) => {\r\n    console.log('üëÅÔ∏è Product View:', productId, productName, properties);\r\n  };\r\n\r\n  const trackCategoryView = (categoryName: string, properties?: Record<string, any>) => {\r\n    console.log('üìÇ Category View:', categoryName, properties);\r\n  };\r\n\r\n  const trackUserAction = (action: string, properties?: Record<string, any>) => {\r\n    console.log('üë§ User Action:', action, properties);\r\n  };\r\n\r\n  const contextValue: AnalyticsContextType = {\r\n    trackEvent,\r\n    trackPageView,\r\n    trackClick,\r\n    trackHover,\r\n    trackScroll,\r\n    trackConversion,\r\n    trackSearch,\r\n    trackCartAction,\r\n    trackProductView,\r\n    trackCategoryView,\r\n    trackUserAction,\r\n    isEnabled: true,\r\n  };\r\n\r\n  return (\r\n    <AnalyticsContext.Provider value={contextValue}>\r\n      {children}\r\n    </AnalyticsContext.Provider>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}