a96a4b2b3f5acd071e0230f08ad999c7
// ðŸ”§ Enterprise API Logger
"use strict";

/* istanbul ignore next */
function cov_llsqirgfg() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\api\\api-logger.ts";
  var hash = "9aaa6c5ae3d9e2b4cd5d2878b25c4754d851fc97";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\api\\api-logger.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 30
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 30
        }
      },
      "6": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 44,
          column: 6
        }
      },
      "7": {
        start: {
          line: 22,
          column: 26
        },
        end: {
          line: 22,
          column: 36
        }
      },
      "8": {
        start: {
          line: 23,
          column: 25
        },
        end: {
          line: 28,
          column: 9
        }
      },
      "9": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 43,
          column: 9
        }
      },
      "10": {
        start: {
          line: 30,
          column: 29
        },
        end: {
          line: 30,
          column: 60
        }
      },
      "11": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 31,
          column: 51
        }
      },
      "12": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 32,
          column: 63
        }
      },
      "13": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 34,
          column: 50
        }
      },
      "14": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 28
        }
      },
      "15": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 37,
          column: 59
        }
      },
      "16": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 38,
          column: 63
        }
      },
      "17": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 39,
          column: 43
        }
      },
      "18": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 41,
          column: 50
        }
      },
      "19": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 42,
          column: 24
        }
      },
      "20": {
        start: {
          line: 47,
          column: 23
        },
        end: {
          line: 57,
          column: 5
        }
      },
      "21": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 58,
          column: 45
        }
      },
      "22": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 60,
          column: 22
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 26
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "withApiLogging",
        decl: {
          start: {
            line: 20,
            column: 9
          },
          end: {
            line: 20,
            column: 23
          }
        },
        loc: {
          start: {
            line: 20,
            column: 33
          },
          end: {
            line: 45,
            column: 1
          }
        },
        line: 20
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 21,
            column: 11
          },
          end: {
            line: 21,
            column: 12
          }
        },
        loc: {
          start: {
            line: 21,
            column: 44
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 21
      },
      "5": {
        name: "logAdminAction",
        decl: {
          start: {
            line: 46,
            column: 9
          },
          end: {
            line: 46,
            column: 23
          }
        },
        loc: {
          start: {
            line: 46,
            column: 80
          },
          end: {
            line: 61,
            column: 1
          }
        },
        line: 46
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 37,
            column: 35
          },
          end: {
            line: 37,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 35
          },
          end: {
            line: 37,
            column: 51
          }
        }, {
          start: {
            line: 37,
            column: 55
          },
          end: {
            line: 37,
            column: 58
          }
        }],
        line: 37
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\api\\api-logger.ts"],
      sourcesContent: ["// \uD83D\uDD27 Enterprise API Logger\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\n\r\ninterface ApiLogEntry {\r\n  timestamp: string;\r\n  method: string;\r\n  path: string;\r\n  user_id?: string;\r\n  status_code: number;\r\n  response_time_ms: number;\r\n  error?: string;\r\n  metadata?: any;\r\n}\r\n\r\nexport function withApiLogging(handler: Function) {\r\n  return async function (request: NextRequest, context: any) {\r\n    const startTime = Date.now();\r\n    const logEntry: Partial<ApiLogEntry> = {\r\n      timestamp: new Date().toISOString(),\r\n      method: request.method,\r\n      path: new URL(request.url).pathname,\r\n      user_id: (request as any).user?.id\r\n    };\r\n\r\n    try {\r\n      const response = await handler(request, context);\r\n      \r\n      logEntry.status_code = response.status;\r\n      logEntry.response_time_ms = Date.now() - startTime;\r\n      \r\n      // Log exitoso\r\n      console.log('API Success:', logEntry);\r\n      \r\n      return response;\r\n    } catch (error) {\r\n      logEntry.status_code = (error as any).statusCode || 500;\r\n      logEntry.response_time_ms = Date.now() - startTime;\r\n      logEntry.error = (error as Error).message;\r\n      \r\n      // Log de error\r\n      console.error('API Error:', logEntry);\r\n      \r\n      throw error;\r\n    }\r\n  };\r\n}\r\n\r\nexport function logAdminAction(\r\n  userId: string,\r\n  action: string,\r\n  resource: string,\r\n  resourceId: string,\r\n  oldData?: any,\r\n  newData?: any\r\n) {\r\n  const auditEntry = {\r\n    timestamp: new Date().toISOString(),\r\n    user_id: userId,\r\n    action,\r\n    resource,\r\n    resource_id: resourceId,\r\n    old_data: oldData,\r\n    new_data: newData,\r\n    ip_address: 'unknown', // TODO: Extract from request\r\n    user_agent: 'unknown'  // TODO: Extract from request\r\n  };\r\n\r\n  console.log('Admin Action:', auditEntry);\r\n  \r\n  // TODO: Store in audit table\r\n  return auditEntry;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["logAdminAction", "withApiLogging", "handler", "request", "context", "startTime", "Date", "now", "logEntry", "timestamp", "toISOString", "method", "path", "URL", "url", "pathname", "user_id", "user", "id", "response", "status_code", "status", "response_time_ms", "console", "log", "error", "statusCode", "message", "userId", "action", "resource", "resourceId", "oldData", "newData", "auditEntry", "resource_id", "old_data", "new_data", "ip_address", "user_agent"],
      mappings: "AAAA,2BAA2B;;;;;;;;;;;;QAgDXA;eAAAA;;QAjCAC;eAAAA;;;AAAT,SAASA,eAAeC,OAAiB;IAC9C,OAAO,eAAgBC,OAAoB,EAAEC,OAAY;QACvD,MAAMC,YAAYC,KAAKC,GAAG;QAC1B,MAAMC,WAAiC;YACrCC,WAAW,IAAIH,OAAOI,WAAW;YACjCC,QAAQR,QAAQQ,MAAM;YACtBC,MAAM,IAAIC,IAAIV,QAAQW,GAAG,EAAEC,QAAQ;YACnCC,SAAS,AAACb,QAAgBc,IAAI,EAAEC;QAClC;QAEA,IAAI;YACF,MAAMC,WAAW,MAAMjB,QAAQC,SAASC;YAExCI,SAASY,WAAW,GAAGD,SAASE,MAAM;YACtCb,SAASc,gBAAgB,GAAGhB,KAAKC,GAAG,KAAKF;YAEzC,cAAc;YACdkB,QAAQC,GAAG,CAAC,gBAAgBhB;YAE5B,OAAOW;QACT,EAAE,OAAOM,OAAO;YACdjB,SAASY,WAAW,GAAG,AAACK,MAAcC,UAAU,IAAI;YACpDlB,SAASc,gBAAgB,GAAGhB,KAAKC,GAAG,KAAKF;YACzCG,SAASiB,KAAK,GAAG,AAACA,MAAgBE,OAAO;YAEzC,eAAe;YACfJ,QAAQE,KAAK,CAAC,cAAcjB;YAE5B,MAAMiB;QACR;IACF;AACF;AAEO,SAASzB,eACd4B,MAAc,EACdC,MAAc,EACdC,QAAgB,EAChBC,UAAkB,EAClBC,OAAa,EACbC,OAAa;IAEb,MAAMC,aAAa;QACjBzB,WAAW,IAAIH,OAAOI,WAAW;QACjCM,SAASY;QACTC;QACAC;QACAK,aAAaJ;QACbK,UAAUJ;QACVK,UAAUJ;QACVK,YAAY;QACZC,YAAY,UAAW,6BAA6B;IACtD;IAEAhB,QAAQC,GAAG,CAAC,iBAAiBU;IAE7B,6BAA6B;IAC7B,OAAOA;AACT"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9aaa6c5ae3d9e2b4cd5d2878b25c4754d851fc97"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_llsqirgfg = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_llsqirgfg();
cov_llsqirgfg().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_llsqirgfg().f[0]++;
  cov_llsqirgfg().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_llsqirgfg().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_llsqirgfg().s[3]++;
_export(exports, {
  get logAdminAction() {
    /* istanbul ignore next */
    cov_llsqirgfg().f[1]++;
    cov_llsqirgfg().s[4]++;
    return logAdminAction;
  },
  get withApiLogging() {
    /* istanbul ignore next */
    cov_llsqirgfg().f[2]++;
    cov_llsqirgfg().s[5]++;
    return withApiLogging;
  }
});
function withApiLogging(handler) {
  /* istanbul ignore next */
  cov_llsqirgfg().f[3]++;
  cov_llsqirgfg().s[6]++;
  return async function (request, context) {
    /* istanbul ignore next */
    cov_llsqirgfg().f[4]++;
    const startTime =
    /* istanbul ignore next */
    (cov_llsqirgfg().s[7]++, Date.now());
    const logEntry =
    /* istanbul ignore next */
    (cov_llsqirgfg().s[8]++, {
      timestamp: new Date().toISOString(),
      method: request.method,
      path: new URL(request.url).pathname,
      user_id: request.user?.id
    });
    /* istanbul ignore next */
    cov_llsqirgfg().s[9]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_llsqirgfg().s[10]++, await handler(request, context));
      /* istanbul ignore next */
      cov_llsqirgfg().s[11]++;
      logEntry.status_code = response.status;
      /* istanbul ignore next */
      cov_llsqirgfg().s[12]++;
      logEntry.response_time_ms = Date.now() - startTime;
      // Log exitoso
      /* istanbul ignore next */
      cov_llsqirgfg().s[13]++;
      console.log('API Success:', logEntry);
      /* istanbul ignore next */
      cov_llsqirgfg().s[14]++;
      return response;
    } catch (error) {
      /* istanbul ignore next */
      cov_llsqirgfg().s[15]++;
      logEntry.status_code =
      /* istanbul ignore next */
      (cov_llsqirgfg().b[0][0]++, error.statusCode) ||
      /* istanbul ignore next */
      (cov_llsqirgfg().b[0][1]++, 500);
      /* istanbul ignore next */
      cov_llsqirgfg().s[16]++;
      logEntry.response_time_ms = Date.now() - startTime;
      /* istanbul ignore next */
      cov_llsqirgfg().s[17]++;
      logEntry.error = error.message;
      // Log de error
      /* istanbul ignore next */
      cov_llsqirgfg().s[18]++;
      console.error('API Error:', logEntry);
      /* istanbul ignore next */
      cov_llsqirgfg().s[19]++;
      throw error;
    }
  };
}
function logAdminAction(userId, action, resource, resourceId, oldData, newData) {
  /* istanbul ignore next */
  cov_llsqirgfg().f[5]++;
  const auditEntry =
  /* istanbul ignore next */
  (cov_llsqirgfg().s[20]++, {
    timestamp: new Date().toISOString(),
    user_id: userId,
    action,
    resource,
    resource_id: resourceId,
    old_data: oldData,
    new_data: newData,
    ip_address: 'unknown',
    user_agent: 'unknown' // TODO: Extract from request
  });
  /* istanbul ignore next */
  cov_llsqirgfg().s[21]++;
  console.log('Admin Action:', auditEntry);
  // TODO: Store in audit table
  /* istanbul ignore next */
  cov_llsqirgfg().s[22]++;
  return auditEntry;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfbGxzcWlyZ2ZnIiwiYWN0dWFsQ292ZXJhZ2UiLCJzIiwibG9nQWRtaW5BY3Rpb24iLCJmIiwid2l0aEFwaUxvZ2dpbmciLCJoYW5kbGVyIiwicmVxdWVzdCIsImNvbnRleHQiLCJzdGFydFRpbWUiLCJEYXRlIiwibm93IiwibG9nRW50cnkiLCJ0aW1lc3RhbXAiLCJ0b0lTT1N0cmluZyIsIm1ldGhvZCIsInBhdGgiLCJVUkwiLCJ1cmwiLCJwYXRobmFtZSIsInVzZXJfaWQiLCJ1c2VyIiwiaWQiLCJyZXNwb25zZSIsInN0YXR1c19jb2RlIiwic3RhdHVzIiwicmVzcG9uc2VfdGltZV9tcyIsImNvbnNvbGUiLCJsb2ciLCJlcnJvciIsImIiLCJzdGF0dXNDb2RlIiwibWVzc2FnZSIsInVzZXJJZCIsImFjdGlvbiIsInJlc291cmNlIiwicmVzb3VyY2VJZCIsIm9sZERhdGEiLCJuZXdEYXRhIiwiYXVkaXRFbnRyeSIsInJlc291cmNlX2lkIiwib2xkX2RhdGEiLCJuZXdfZGF0YSIsImlwX2FkZHJlc3MiLCJ1c2VyX2FnZW50Il0sInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxtYXJ0aVxcRGVza3RvcFxcREVTQVJST0xMT1NXXFxCT0lMRVJQTEFUVEUgRS1DT01NRVJDRVxcc3JjXFxsaWJcXGFwaVxcYXBpLWxvZ2dlci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyDwn5SnIEVudGVycHJpc2UgQVBJIExvZ2dlclxyXG5cclxuaW1wb3J0IHsgTmV4dFJlcXVlc3QsIE5leHRSZXNwb25zZSB9IGZyb20gJ25leHQvc2VydmVyJztcclxuXHJcbmludGVyZmFjZSBBcGlMb2dFbnRyeSB7XHJcbiAgdGltZXN0YW1wOiBzdHJpbmc7XHJcbiAgbWV0aG9kOiBzdHJpbmc7XHJcbiAgcGF0aDogc3RyaW5nO1xyXG4gIHVzZXJfaWQ/OiBzdHJpbmc7XHJcbiAgc3RhdHVzX2NvZGU6IG51bWJlcjtcclxuICByZXNwb25zZV90aW1lX21zOiBudW1iZXI7XHJcbiAgZXJyb3I/OiBzdHJpbmc7XHJcbiAgbWV0YWRhdGE/OiBhbnk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiB3aXRoQXBpTG9nZ2luZyhoYW5kbGVyOiBGdW5jdGlvbikge1xyXG4gIHJldHVybiBhc3luYyBmdW5jdGlvbiAocmVxdWVzdDogTmV4dFJlcXVlc3QsIGNvbnRleHQ6IGFueSkge1xyXG4gICAgY29uc3Qgc3RhcnRUaW1lID0gRGF0ZS5ub3coKTtcclxuICAgIGNvbnN0IGxvZ0VudHJ5OiBQYXJ0aWFsPEFwaUxvZ0VudHJ5PiA9IHtcclxuICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXHJcbiAgICAgIG1ldGhvZDogcmVxdWVzdC5tZXRob2QsXHJcbiAgICAgIHBhdGg6IG5ldyBVUkwocmVxdWVzdC51cmwpLnBhdGhuYW1lLFxyXG4gICAgICB1c2VyX2lkOiAocmVxdWVzdCBhcyBhbnkpLnVzZXI/LmlkXHJcbiAgICB9O1xyXG5cclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgaGFuZGxlcihyZXF1ZXN0LCBjb250ZXh0KTtcclxuICAgICAgXHJcbiAgICAgIGxvZ0VudHJ5LnN0YXR1c19jb2RlID0gcmVzcG9uc2Uuc3RhdHVzO1xyXG4gICAgICBsb2dFbnRyeS5yZXNwb25zZV90aW1lX21zID0gRGF0ZS5ub3coKSAtIHN0YXJ0VGltZTtcclxuICAgICAgXHJcbiAgICAgIC8vIExvZyBleGl0b3NvXHJcbiAgICAgIGNvbnNvbGUubG9nKCdBUEkgU3VjY2VzczonLCBsb2dFbnRyeSk7XHJcbiAgICAgIFxyXG4gICAgICByZXR1cm4gcmVzcG9uc2U7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICBsb2dFbnRyeS5zdGF0dXNfY29kZSA9IChlcnJvciBhcyBhbnkpLnN0YXR1c0NvZGUgfHwgNTAwO1xyXG4gICAgICBsb2dFbnRyeS5yZXNwb25zZV90aW1lX21zID0gRGF0ZS5ub3coKSAtIHN0YXJ0VGltZTtcclxuICAgICAgbG9nRW50cnkuZXJyb3IgPSAoZXJyb3IgYXMgRXJyb3IpLm1lc3NhZ2U7XHJcbiAgICAgIFxyXG4gICAgICAvLyBMb2cgZGUgZXJyb3JcclxuICAgICAgY29uc29sZS5lcnJvcignQVBJIEVycm9yOicsIGxvZ0VudHJ5KTtcclxuICAgICAgXHJcbiAgICAgIHRocm93IGVycm9yO1xyXG4gICAgfVxyXG4gIH07XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBsb2dBZG1pbkFjdGlvbihcclxuICB1c2VySWQ6IHN0cmluZyxcclxuICBhY3Rpb246IHN0cmluZyxcclxuICByZXNvdXJjZTogc3RyaW5nLFxyXG4gIHJlc291cmNlSWQ6IHN0cmluZyxcclxuICBvbGREYXRhPzogYW55LFxyXG4gIG5ld0RhdGE/OiBhbnlcclxuKSB7XHJcbiAgY29uc3QgYXVkaXRFbnRyeSA9IHtcclxuICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxyXG4gICAgdXNlcl9pZDogdXNlcklkLFxyXG4gICAgYWN0aW9uLFxyXG4gICAgcmVzb3VyY2UsXHJcbiAgICByZXNvdXJjZV9pZDogcmVzb3VyY2VJZCxcclxuICAgIG9sZF9kYXRhOiBvbGREYXRhLFxyXG4gICAgbmV3X2RhdGE6IG5ld0RhdGEsXHJcbiAgICBpcF9hZGRyZXNzOiAndW5rbm93bicsIC8vIFRPRE86IEV4dHJhY3QgZnJvbSByZXF1ZXN0XHJcbiAgICB1c2VyX2FnZW50OiAndW5rbm93bicgIC8vIFRPRE86IEV4dHJhY3QgZnJvbSByZXF1ZXN0XHJcbiAgfTtcclxuXHJcbiAgY29uc29sZS5sb2coJ0FkbWluIEFjdGlvbjonLCBhdWRpdEVudHJ5KTtcclxuICBcclxuICAvLyBUT0RPOiBTdG9yZSBpbiBhdWRpdCB0YWJsZVxyXG4gIHJldHVybiBhdWRpdEVudHJ5O1xyXG59XHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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