{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\admin\\logistics\\TrackingTimeline.tsx"],"sourcesContent":["// =====================================================\r\n// COMPONENTE: TRACKING TIMELINE ENTERPRISE\r\n// Descripción: Timeline visual de tracking con estados tiempo real\r\n// Basado en: Patrones Spree Commerce + shadcn/ui\r\n// =====================================================\r\n\r\n'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Progress } from '@/components/ui/progress';\r\nimport { Separator } from '@/components/ui/separator';\r\nimport { ScrollArea } from '@/components/ui/scroll-area';\r\nimport { \r\n  Package, \r\n  CheckCircle, \r\n  Clock, \r\n  Truck, \r\n  MapPin, \r\n  Navigation, \r\n  AlertTriangle,\r\n  RefreshCw,\r\n  Eye,\r\n  Calendar,\r\n  User,\r\n  Building\r\n} from 'lucide-react';\r\nimport { TrackingEvent, Shipment, ShipmentStatus } from '@/types/logistics';\r\nimport { useTrackingTimeline, useRealTimeTracking } from '@/hooks/admin/useTrackingEvents';\r\nimport { cn } from '@/lib/core/utils';\r\nimport { formatDate, formatRelativeTime } from '@/lib/utils/consolidated-utils';\r\n\r\n// =====================================================\r\n// INTERFACES\r\n// =====================================================\r\n\r\ninterface TrackingTimelineProps {\r\n  shipmentId: number;\r\n  realTime?: boolean;\r\n  compact?: boolean;\r\n  showProgress?: boolean;\r\n  className?: string;\r\n}\r\n\r\ninterface TimelineStepProps {\r\n  step: TimelineStep;\r\n  isLast: boolean;\r\n  compact?: boolean;\r\n}\r\n\r\ninterface TimelineStep {\r\n  status: string;\r\n  label: string;\r\n  description: string;\r\n  hasEvent: boolean;\r\n  isCurrent: boolean;\r\n  isCompleted: boolean;\r\n  isPending: boolean;\r\n  event?: TrackingEvent;\r\n}\r\n\r\n// =====================================================\r\n// CONFIGURACIÓN DE ESTADOS\r\n// =====================================================\r\n\r\nconst statusConfig = {\r\n  pending: { \r\n    icon: Clock, \r\n    color: 'text-gray-500', \r\n    bgColor: 'bg-gray-100',\r\n    borderColor: 'border-gray-300'\r\n  },\r\n  confirmed: { \r\n    icon: CheckCircle, \r\n    color: 'text-blue-600', \r\n    bgColor: 'bg-blue-100',\r\n    borderColor: 'border-blue-300'\r\n  },\r\n  picked_up: { \r\n    icon: Package, \r\n    color: 'text-yellow-600', \r\n    bgColor: 'bg-yellow-100',\r\n    borderColor: 'border-yellow-300'\r\n  },\r\n  in_transit: { \r\n    icon: Truck, \r\n    color: 'text-orange-600', \r\n    bgColor: 'bg-orange-100',\r\n    borderColor: 'border-orange-300'\r\n  },\r\n  out_for_delivery: { \r\n    icon: Navigation, \r\n    color: 'text-purple-600', \r\n    bgColor: 'bg-purple-100',\r\n    borderColor: 'border-purple-300'\r\n  },\r\n  delivered: { \r\n    icon: CheckCircle, \r\n    color: 'text-green-600', \r\n    bgColor: 'bg-green-100',\r\n    borderColor: 'border-green-300'\r\n  },\r\n  exception: { \r\n    icon: AlertTriangle, \r\n    color: 'text-red-600', \r\n    bgColor: 'bg-red-100',\r\n    borderColor: 'border-red-300'\r\n  },\r\n  cancelled: { \r\n    icon: AlertTriangle, \r\n    color: 'text-gray-600', \r\n    bgColor: 'bg-gray-100',\r\n    borderColor: 'border-gray-300'\r\n  },\r\n  returned: { \r\n    icon: Package, \r\n    color: 'text-red-600', \r\n    bgColor: 'bg-red-100',\r\n    borderColor: 'border-red-300'\r\n  }\r\n};\r\n\r\n// =====================================================\r\n// COMPONENTE PRINCIPAL\r\n// =====================================================\r\n\r\nexport function TrackingTimeline({\r\n  shipmentId,\r\n  realTime = false,\r\n  compact = false,\r\n  showProgress = true,\r\n  className\r\n}: TrackingTimelineProps) {\r\n  \r\n  const {\r\n    events,\r\n    timelineStates,\r\n    shipment,\r\n    currentStatus,\r\n    lastEvent,\r\n    isLoading,\r\n    error,\r\n    progress\r\n  } = useTrackingTimeline(shipmentId);\r\n  \r\n  const {\r\n    isRealTimeEnabled,\r\n    lastUpdate,\r\n    enableRealTime,\r\n    disableRealTime,\r\n    forceRefresh\r\n  } = useRealTimeTracking(shipmentId);\r\n  \r\n  // Auto-enable real time if prop is true\r\n  useEffect(() => {\r\n    if (realTime && !isRealTimeEnabled) {\r\n      enableRealTime();\r\n    }\r\n  }, [realTime, isRealTimeEnabled, enableRealTime]);\r\n  \r\n  if (isLoading) {\r\n    return <TrackingTimelineSkeleton compact={compact} />;\r\n  }\r\n  \r\n  if (error) {\r\n    return (\r\n      <Card className={className}>\r\n        <CardContent className=\"p-6\">\r\n          <div className=\"flex flex-col items-center gap-4\">\r\n            <AlertTriangle className=\"w-8 h-8 text-red-500\" />\r\n            <div className=\"text-center\">\r\n              <h3 className=\"font-semibold\">Error al cargar tracking</h3>\r\n              <p className=\"text-sm text-muted-foreground\">{error.message}</p>\r\n            </div>\r\n            <Button onClick={forceRefresh} variant=\"outline\" size=\"sm\">\r\n              <RefreshCw className=\"w-4 h-4 mr-2\" />\r\n              Reintentar\r\n            </Button>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n  \r\n  if (!shipment || !timelineStates) {\r\n    return null;\r\n  }\r\n  \r\n  return (\r\n    <Card className={className}>\r\n      <CardHeader className={compact ? \"pb-3\" : undefined}>\r\n        <div className=\"flex items-center justify-between\">\r\n          <div>\r\n            <CardTitle className={cn(\r\n              \"flex items-center gap-2\",\r\n              compact ? \"text-base\" : \"text-lg\"\r\n            )}>\r\n              <MapPin className=\"w-5 h-5\" />\r\n              Tracking: {shipment.shipment_number}\r\n            </CardTitle>\r\n            <CardDescription className={compact ? \"text-xs\" : undefined}>\r\n              {shipment.carrier?.name || 'Sin courier asignado'}\r\n              {shipment.tracking_number && ` • ${shipment.tracking_number}`}\r\n            </CardDescription>\r\n          </div>\r\n          \r\n          <div className=\"flex items-center gap-2\">\r\n            {lastUpdate && (\r\n              <span className=\"text-xs text-muted-foreground\">\r\n                Actualizado {formatRelativeTime(lastUpdate.toISOString())}\r\n              </span>\r\n            )}\r\n            \r\n            <Button\r\n              variant=\"outline\"\r\n              size=\"sm\"\r\n              onClick={isRealTimeEnabled ? disableRealTime : enableRealTime}\r\n              className={cn(\r\n                \"flex items-center gap-1\",\r\n                isRealTimeEnabled && \"bg-green-50 border-green-200 text-green-700\"\r\n              )}\r\n            >\r\n              <Eye className=\"w-3 h-3\" />\r\n              {isRealTimeEnabled ? 'Tiempo Real' : 'Activar TR'}\r\n            </Button>\r\n            \r\n            <Button\r\n              variant=\"ghost\"\r\n              size=\"sm\"\r\n              onClick={forceRefresh}\r\n            >\r\n              <RefreshCw className=\"w-4 h-4\" />\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Progress bar */}\r\n        {showProgress && progress && (\r\n          <div className=\"space-y-2\">\r\n            <div className=\"flex justify-between text-sm\">\r\n              <span>Progreso del envío</span>\r\n              <span>{progress.percentage.toFixed(0)}%</span>\r\n            </div>\r\n            <Progress value={progress.percentage} className=\"h-2\" />\r\n            <div className=\"text-xs text-muted-foreground\">\r\n              {progress.completed} de {progress.total} etapas completadas\r\n            </div>\r\n          </div>\r\n        )}\r\n      </CardHeader>\r\n      \r\n      <CardContent className={compact ? \"px-4 pb-4\" : undefined}>\r\n        <div className=\"space-y-6\">\r\n          {/* Timeline principal */}\r\n          <div className=\"space-y-4\">\r\n            {timelineStates.map((step, index) => (\r\n              <TimelineStep\r\n                key={step.status}\r\n                step={step}\r\n                isLast={index === timelineStates.length - 1}\r\n                compact={compact}\r\n              />\r\n            ))}\r\n          </div>\r\n          \r\n          {/* Eventos detallados */}\r\n          {!compact && events && events.length > 0 && (\r\n            <>\r\n              <Separator />\r\n              <div className=\"space-y-3\">\r\n                <h4 className=\"font-semibold text-sm\">Historial Detallado</h4>\r\n                <ScrollArea className=\"h-48\">\r\n                  <div className=\"space-y-3\">\r\n                    {events.map((event) => (\r\n                      <EventCard key={event.id} event={event} />\r\n                    ))}\r\n                  </div>\r\n                </ScrollArea>\r\n              </div>\r\n            </>\r\n          )}\r\n          \r\n          {/* Información del envío */}\r\n          {!compact && (\r\n            <>\r\n              <Separator />\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\r\n                <div className=\"space-y-2\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <Calendar className=\"w-4 h-4 text-muted-foreground\" />\r\n                    <span className=\"font-medium\">Creado:</span>\r\n                    <span>{formatDate(shipment.created_at)}</span>\r\n                  </div>\r\n                  \r\n                  {shipment.estimated_delivery_date && (\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <Clock className=\"w-4 h-4 text-muted-foreground\" />\r\n                      <span className=\"font-medium\">Entrega estimada:</span>\r\n                      <span>{formatDate(shipment.estimated_delivery_date)}</span>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                \r\n                <div className=\"space-y-2\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <Building className=\"w-4 h-4 text-muted-foreground\" />\r\n                    <span className=\"font-medium\">Destino:</span>\r\n                    <span>\r\n                      {shipment.recipient_city || 'N/A'}, {shipment.recipient_country || 'N/A'}\r\n                    </span>\r\n                  </div>\r\n                  \r\n                  {shipment.package_weight_kg && (\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <Package className=\"w-4 h-4 text-muted-foreground\" />\r\n                      <span className=\"font-medium\">Peso:</span>\r\n                      <span>{shipment.package_weight_kg} kg</span>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\n// =====================================================\r\n// COMPONENTE TIMELINE STEP\r\n// =====================================================\r\n\r\nfunction TimelineStep({ step, isLast, compact }: TimelineStepProps) {\r\n  const config = statusConfig[step.status as keyof typeof statusConfig] || statusConfig.pending;\r\n  const Icon = config.icon;\r\n  \r\n  return (\r\n    <div className=\"flex items-start gap-3\">\r\n      {/* Icono y línea */}\r\n      <div className=\"flex flex-col items-center\">\r\n        <div className={cn(\r\n          \"flex items-center justify-center rounded-full border-2\",\r\n          compact ? \"w-8 h-8\" : \"w-10 h-10\",\r\n          step.isCompleted && \"bg-green-100 border-green-300\",\r\n          step.isCurrent && config.bgColor + \" \" + config.borderColor,\r\n          step.isPending && \"bg-gray-50 border-gray-200\"\r\n        )}>\r\n          <Icon className={cn(\r\n            compact ? \"w-4 h-4\" : \"w-5 h-5\",\r\n            step.isCompleted && \"text-green-600\",\r\n            step.isCurrent && config.color,\r\n            step.isPending && \"text-gray-400\"\r\n          )} />\r\n        </div>\r\n        \r\n        {!isLast && (\r\n          <div className={cn(\r\n            \"w-0.5 mt-2\",\r\n            compact ? \"h-8\" : \"h-12\",\r\n            step.isCompleted ? \"bg-green-300\" : \"bg-gray-200\"\r\n          )} />\r\n        )}\r\n      </div>\r\n      \r\n      {/* Contenido */}\r\n      <div className=\"flex-1 min-w-0\">\r\n        <div className=\"flex items-center gap-2 mb-1\">\r\n          <h4 className={cn(\r\n            \"font-medium\",\r\n            compact ? \"text-sm\" : \"text-base\",\r\n            step.isCompleted && \"text-green-800\",\r\n            step.isCurrent && \"text-gray-900\",\r\n            step.isPending && \"text-gray-500\"\r\n          )}>\r\n            {step.label}\r\n          </h4>\r\n          \r\n          {step.isCurrent && (\r\n            <Badge variant=\"secondary\" className=\"text-xs\">\r\n              Actual\r\n            </Badge>\r\n          )}\r\n          \r\n          {step.isCompleted && (\r\n            <Badge variant=\"default\" className=\"text-xs bg-green-100 text-green-800\">\r\n              Completado\r\n            </Badge>\r\n          )}\r\n        </div>\r\n        \r\n        <p className={cn(\r\n          \"text-muted-foreground\",\r\n          compact ? \"text-xs\" : \"text-sm\"\r\n        )}>\r\n          {step.description}\r\n        </p>\r\n        \r\n        {step.event && (\r\n          <div className={cn(\r\n            \"mt-2 space-y-1\",\r\n            compact ? \"text-xs\" : \"text-sm\"\r\n          )}>\r\n            <div className=\"flex items-center gap-2 text-muted-foreground\">\r\n              <Clock className=\"w-3 h-3\" />\r\n              <span>{formatDate(step.event.occurred_at)} a las {formatTime(step.event.occurred_at)}</span>\r\n            </div>\r\n            \r\n            {step.event.location && (\r\n              <div className=\"flex items-center gap-2 text-muted-foreground\">\r\n                <MapPin className=\"w-3 h-3\" />\r\n                <span>{step.event.location}</span>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// =====================================================\r\n// COMPONENTE EVENT CARD\r\n// =====================================================\r\n\r\nfunction EventCard({ event }: { event: TrackingEvent }) {\r\n  const config = statusConfig[event.status as keyof typeof statusConfig] || statusConfig.pending;\r\n  const Icon = config.icon;\r\n  \r\n  return (\r\n    <div className=\"flex items-start gap-3 p-3 rounded-lg border bg-card\">\r\n      <div className={cn(\r\n        \"flex items-center justify-center w-8 h-8 rounded-full\",\r\n        config.bgColor\r\n      )}>\r\n        <Icon className={cn(\"w-4 h-4\", config.color)} />\r\n      </div>\r\n      \r\n      <div className=\"flex-1 min-w-0\">\r\n        <div className=\"flex items-center justify-between mb-1\">\r\n          <h5 className=\"font-medium text-sm\">{event.description}</h5>\r\n          <time className=\"text-xs text-muted-foreground\">\r\n            {formatTime(event.occurred_at)}\r\n          </time>\r\n        </div>\r\n        \r\n        {event.location && (\r\n          <div className=\"flex items-center gap-1 text-xs text-muted-foreground\">\r\n            <MapPin className=\"w-3 h-3\" />\r\n            <span>{event.location}</span>\r\n          </div>\r\n        )}\r\n        \r\n        <div className=\"text-xs text-muted-foreground mt-1\">\r\n          {formatDate(event.occurred_at)}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// =====================================================\r\n// COMPONENTE SKELETON\r\n// =====================================================\r\n\r\nfunction TrackingTimelineSkeleton({ compact }: { compact?: boolean }) {\r\n  return (\r\n    <Card>\r\n      <CardHeader className={compact ? \"pb-3\" : undefined}>\r\n        <div className=\"space-y-2\">\r\n          <div className=\"h-6 w-48 bg-gray-200 rounded animate-pulse\" />\r\n          <div className=\"h-4 w-32 bg-gray-200 rounded animate-pulse\" />\r\n        </div>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <div className=\"space-y-4\">\r\n          {[...Array(5)].map((_, i) => (\r\n            <div key={i} className=\"flex items-start gap-3\">\r\n              <div className={cn(\r\n                \"rounded-full bg-gray-200 animate-pulse\",\r\n                compact ? \"w-8 h-8\" : \"w-10 h-10\"\r\n              )} />\r\n              <div className=\"flex-1 space-y-2\">\r\n                <div className=\"h-4 w-24 bg-gray-200 rounded animate-pulse\" />\r\n                <div className=\"h-3 w-48 bg-gray-200 rounded animate-pulse\" />\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["TrackingTimeline","statusConfig","pending","icon","Clock","color","bgColor","borderColor","confirmed","CheckCircle","picked_up","Package","in_transit","Truck","out_for_delivery","Navigation","delivered","exception","AlertTriangle","cancelled","returned","shipmentId","realTime","compact","showProgress","className","events","timelineStates","shipment","currentStatus","lastEvent","isLoading","error","progress","useTrackingTimeline","isRealTimeEnabled","lastUpdate","enableRealTime","disableRealTime","forceRefresh","useRealTimeTracking","useEffect","TrackingTimelineSkeleton","Card","CardContent","div","h3","p","message","Button","onClick","variant","size","RefreshCw","CardHeader","undefined","CardTitle","cn","MapPin","shipment_number","CardDescription","carrier","name","tracking_number","span","formatRelativeTime","toISOString","Eye","percentage","toFixed","Progress","value","completed","total","map","step","index","TimelineStep","isLast","length","status","Separator","h4","ScrollArea","event","EventCard","id","Calendar","formatDate","created_at","estimated_delivery_date","Building","recipient_city","recipient_country","package_weight_kg","config","Icon","isCompleted","isCurrent","isPending","label","Badge","description","occurred_at","formatTime","location","h5","time","Array","_","i"],"mappings":"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"}