{"version":3,"names":["API_TIMEOUTS","cov_1fiypughvg","f","s","ENDPOINT_TIMEOUTS","createTimeoutController","fetchWithTimeout","getEndpointTimeouts","getTimeout","logTimeoutConfig","validateTimeoutConfig","withDatabaseTimeout","withExternalTimeout","withTimeout","DEFAULT_TIMEOUTS","default","database","external","upload","payment","auth","admin","webhook","email","image","getTimeoutFromEnv","key","defaultValue","envValue","process","env","toUpperCase","b","parsed","parseInt","isNaN","console","warn","connection","request","response","total","Math","max","type","path","matchingPath","Object","keys","find","startsWith","timeout","controller","AbortController","timeoutId","setTimeout","abort","url","options","fetch","signal","clearTimeout","error","Error","name","operation","finally","Promise","resolve","reject","then","catch","log","environment","NODE_ENV","timeouts","customEnvVars","filter","reduce","acc","errors","entries","forEach","value","push","length"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\config\\api-timeouts.ts"],"sourcesContent":["// ===================================\r\n// PINTEYA E-COMMERCE - CONFIGURACIÓN CENTRALIZADA DE TIMEOUTS\r\n// ===================================\r\n// Configuración centralizada para todos los timeouts de APIs\r\n// con valores por defecto y variables de entorno\r\n\r\n// ===================================\r\n// TIPOS Y INTERFACES\r\n// ===================================\r\n\r\nexport interface TimeoutConfig {\r\n  default: number;\r\n  database: number;\r\n  external: number;\r\n  upload: number;\r\n  payment: number;\r\n  auth: number;\r\n  admin: number;\r\n  webhook: number;\r\n  email: number;\r\n  image: number;\r\n}\r\n\r\nexport interface EndpointTimeouts {\r\n  connection: number;\r\n  request: number;\r\n  response: number;\r\n  total: number;\r\n}\r\n\r\n// ===================================\r\n// CONFIGURACIÓN BASE DE TIMEOUTS\r\n// ===================================\r\n\r\nconst DEFAULT_TIMEOUTS = {\r\n  // Timeout por defecto para operaciones generales\r\n  default: 30000,        // 30 segundos\r\n  \r\n  // Timeout para operaciones de base de datos\r\n  database: 15000,       // 15 segundos\r\n  \r\n  // Timeout para APIs externas (MercadoPago, etc.)\r\n  external: 45000,       // 45 segundos\r\n  \r\n  // Timeout para uploads de archivos\r\n  upload: 120000,        // 2 minutos\r\n  \r\n  // Timeout para operaciones de pago\r\n  payment: 60000,        // 1 minuto\r\n  \r\n  // Timeout para operaciones de autenticación\r\n  auth: 20000,           // 20 segundos\r\n  \r\n  // Timeout para operaciones administrativas\r\n  admin: 45000,          // 45 segundos\r\n  \r\n  // Timeout para webhooks\r\n  webhook: 10000,        // 10 segundos\r\n  \r\n  // Timeout para envío de emails\r\n  email: 30000,          // 30 segundos\r\n  \r\n  // Timeout para procesamiento de imágenes\r\n  image: 90000,          // 1.5 minutos\r\n} as const;\r\n\r\n// ===================================\r\n// FUNCIÓN PARA OBTENER TIMEOUT DESDE ENV\r\n// ===================================\r\n\r\nfunction getTimeoutFromEnv(key: string, defaultValue: number): number {\r\n  const envValue = process.env[`API_TIMEOUT_${key.toUpperCase()}`];\r\n  if (!envValue) {return defaultValue;}\r\n  \r\n  const parsed = parseInt(envValue, 10);\r\n  if (isNaN(parsed) || parsed <= 0) {\r\n    console.warn(`[TIMEOUT_CONFIG] Invalid timeout value for ${key}: ${envValue}, using default: ${defaultValue}`);\r\n    return defaultValue;\r\n  }\r\n  \r\n  return parsed;\r\n}\r\n\r\n// ===================================\r\n// CONFIGURACIÓN FINAL DE TIMEOUTS\r\n// ===================================\r\n\r\nexport const API_TIMEOUTS: TimeoutConfig = {\r\n  default: getTimeoutFromEnv('DEFAULT', DEFAULT_TIMEOUTS.default),\r\n  database: getTimeoutFromEnv('DATABASE', DEFAULT_TIMEOUTS.database),\r\n  external: getTimeoutFromEnv('EXTERNAL', DEFAULT_TIMEOUTS.external),\r\n  upload: getTimeoutFromEnv('UPLOAD', DEFAULT_TIMEOUTS.upload),\r\n  payment: getTimeoutFromEnv('PAYMENT', DEFAULT_TIMEOUTS.payment),\r\n  auth: getTimeoutFromEnv('AUTH', DEFAULT_TIMEOUTS.auth),\r\n  admin: getTimeoutFromEnv('ADMIN', DEFAULT_TIMEOUTS.admin),\r\n  webhook: getTimeoutFromEnv('WEBHOOK', DEFAULT_TIMEOUTS.webhook),\r\n  email: getTimeoutFromEnv('EMAIL', DEFAULT_TIMEOUTS.email),\r\n  image: getTimeoutFromEnv('IMAGE', DEFAULT_TIMEOUTS.image),\r\n};\r\n\r\n// ===================================\r\n// TIMEOUTS ESPECÍFICOS POR ENDPOINT\r\n// ===================================\r\n\r\nexport const ENDPOINT_TIMEOUTS: Record<string, EndpointTimeouts> = {\r\n  // APIs de productos\r\n  '/api/products': {\r\n    connection: 5000,\r\n    request: API_TIMEOUTS.database,\r\n    response: 10000,\r\n    total: API_TIMEOUTS.database + 15000, // database + buffer\r\n  },\r\n\r\n  // APIs de órdenes\r\n  '/api/orders': {\r\n    connection: 5000,\r\n    request: API_TIMEOUTS.database,\r\n    response: 15000,\r\n    total: API_TIMEOUTS.database + 20000, // database + buffer\r\n  },\r\n  \r\n  // APIs de pagos\r\n  '/api/payments': {\r\n    connection: 10000,\r\n    request: API_TIMEOUTS.payment,\r\n    response: 20000,\r\n    total: Math.max(API_TIMEOUTS.payment + 30000, API_TIMEOUTS.external),\r\n  },\r\n\r\n  // APIs de autenticación\r\n  '/api/auth': {\r\n    connection: 3000,\r\n    request: API_TIMEOUTS.auth,\r\n    response: 5000,\r\n    total: API_TIMEOUTS.auth + 8000,\r\n  },\r\n\r\n  // APIs administrativas\r\n  '/api/admin': {\r\n    connection: 5000,\r\n    request: API_TIMEOUTS.admin,\r\n    response: 15000,\r\n    total: API_TIMEOUTS.admin + 20000,\r\n  },\r\n\r\n  // Webhooks\r\n  '/api/webhooks': {\r\n    connection: 2000,\r\n    request: API_TIMEOUTS.webhook,\r\n    response: 3000,\r\n    total: API_TIMEOUTS.webhook + 5000,\r\n  },\r\n\r\n  // APIs de upload\r\n  '/api/upload': {\r\n    connection: 10000,\r\n    request: API_TIMEOUTS.upload,\r\n    response: 30000,\r\n    total: API_TIMEOUTS.upload + 40000,\r\n  },\r\n};\r\n\r\n// ===================================\r\n// HELPERS PARA OBTENER TIMEOUTS\r\n// ===================================\r\n\r\n/**\r\n * Obtiene el timeout apropiado para un tipo de operación\r\n */\r\nexport function getTimeout(type: keyof TimeoutConfig): number {\r\n  return API_TIMEOUTS[type];\r\n}\r\n\r\n/**\r\n * Obtiene los timeouts específicos para un endpoint\r\n */\r\nexport function getEndpointTimeouts(path: string): EndpointTimeouts {\r\n  // Buscar coincidencia exacta primero\r\n  if (ENDPOINT_TIMEOUTS[path]) {\r\n    return ENDPOINT_TIMEOUTS[path];\r\n  }\r\n  \r\n  // Buscar coincidencia por prefijo\r\n  const matchingPath = Object.keys(ENDPOINT_TIMEOUTS).find(key => \r\n    path.startsWith(key)\r\n  );\r\n  \r\n  if (matchingPath) {\r\n    return ENDPOINT_TIMEOUTS[matchingPath];\r\n  }\r\n  \r\n  // Fallback a timeouts por defecto\r\n  return {\r\n    connection: 5000,\r\n    request: API_TIMEOUTS.default,\r\n    response: 10000,\r\n    total: API_TIMEOUTS.default,\r\n  };\r\n}\r\n\r\n/**\r\n * Crea un AbortController con timeout automático\r\n */\r\nexport function createTimeoutController(timeout: number): {\r\n  controller: AbortController;\r\n  timeoutId: NodeJS.Timeout;\r\n} {\r\n  const controller = new AbortController();\r\n  const timeoutId = setTimeout(() => {\r\n    controller.abort();\r\n  }, timeout);\r\n  \r\n  return { controller, timeoutId };\r\n}\r\n\r\n/**\r\n * Wrapper para fetch con timeout automático\r\n */\r\nexport async function fetchWithTimeout(\r\n  url: string,\r\n  options: RequestInit & { timeout?: number } = {}\r\n): Promise<Response> {\r\n  const timeout = options.timeout || API_TIMEOUTS.default;\r\n  const { controller, timeoutId } = createTimeoutController(timeout);\r\n  \r\n  try {\r\n    const response = await fetch(url, {\r\n      ...options,\r\n      signal: controller.signal,\r\n    });\r\n    \r\n    clearTimeout(timeoutId);\r\n    return response;\r\n  } catch (error) {\r\n    clearTimeout(timeoutId);\r\n    \r\n    if (error instanceof Error && error.name === 'AbortError') {\r\n      throw new Error(`Request timeout after ${timeout}ms`);\r\n    }\r\n    \r\n    throw error;\r\n  }\r\n}\r\n\r\n/**\r\n * Wrapper para operaciones de base de datos con timeout\r\n */\r\nexport function withDatabaseTimeout<T>(\r\n  operation: (signal: AbortSignal) => Promise<T>,\r\n  timeout: number = API_TIMEOUTS.database\r\n): Promise<T> {\r\n  const { controller, timeoutId } = createTimeoutController(timeout);\r\n  \r\n  return operation(controller.signal)\r\n    .finally(() => clearTimeout(timeoutId));\r\n}\r\n\r\n/**\r\n * Wrapper para operaciones externas con timeout\r\n */\r\nexport function withExternalTimeout<T>(\r\n  operation: (signal: AbortSignal) => Promise<T>,\r\n  timeout: number = API_TIMEOUTS.external\r\n): Promise<T> {\r\n  const { controller, timeoutId } = createTimeoutController(timeout);\r\n\r\n  return operation(controller.signal)\r\n    .finally(() => clearTimeout(timeoutId));\r\n}\r\n\r\n/**\r\n * Wrapper genérico para operaciones con timeout\r\n */\r\nexport function withTimeout<T>(\r\n  operation: () => Promise<T>,\r\n  timeout: number = API_TIMEOUTS.default\r\n): Promise<T> {\r\n  return new Promise((resolve, reject) => {\r\n    const timeoutId = setTimeout(() => {\r\n      reject(new Error(`Operation timeout after ${timeout}ms`));\r\n    }, timeout);\r\n\r\n    operation()\r\n      .then(resolve)\r\n      .catch(reject)\r\n      .finally(() => clearTimeout(timeoutId));\r\n  });\r\n}\r\n\r\n// ===================================\r\n// CONFIGURACIÓN DE LOGGING\r\n// ===================================\r\n\r\n/**\r\n * Log de timeout configurado\r\n */\r\nexport function logTimeoutConfig(): void {\r\n  console.log('[TIMEOUT_CONFIG] Configuración de timeouts cargada:', {\r\n    environment: process.env.NODE_ENV,\r\n    timeouts: API_TIMEOUTS,\r\n    customEnvVars: Object.keys(process.env)\r\n      .filter(key => key.startsWith('API_TIMEOUT_'))\r\n      .reduce((acc, key) => {\r\n        acc[key] = process.env[key];\r\n        return acc;\r\n      }, {} as Record<string, string | undefined>),\r\n  });\r\n}\r\n\r\n// ===================================\r\n// VALIDACIÓN DE CONFIGURACIÓN\r\n// ===================================\r\n\r\n/**\r\n * Valida que todos los timeouts estén configurados correctamente\r\n */\r\nexport function validateTimeoutConfig(): boolean {\r\n  const errors: string[] = [];\r\n  \r\n  Object.entries(API_TIMEOUTS).forEach(([key, value]) => {\r\n    if (typeof value !== 'number' || value <= 0) {\r\n      errors.push(`Invalid timeout for ${key}: ${value}`);\r\n    }\r\n    \r\n    if (value > 300000) { // 5 minutos máximo\r\n      errors.push(`Timeout too high for ${key}: ${value}ms (max: 300000ms)`);\r\n    }\r\n  });\r\n  \r\n  if (errors.length > 0) {\r\n    console.error('[TIMEOUT_CONFIG] Validation errors:', errors);\r\n    return false;\r\n  }\r\n  \r\n  return true;\r\n}\r\n\r\n// ===================================\r\n// INICIALIZACIÓN\r\n// ===================================\r\n\r\n// Validar configuración al cargar el módulo\r\nif (process.env.NODE_ENV !== 'test') {\r\n  validateTimeoutConfig();\r\n  \r\n  if (process.env.NODE_ENV === 'development') {\r\n    logTimeoutConfig();\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}