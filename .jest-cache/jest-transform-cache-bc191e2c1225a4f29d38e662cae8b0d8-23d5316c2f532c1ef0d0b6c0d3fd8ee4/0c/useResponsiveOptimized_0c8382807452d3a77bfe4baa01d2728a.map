{"version":3,"names":["default","cov_c4hw5q4tn","f","s","_default","useIsMobile","useOrientation","useResponsiveClasses","useResponsiveOptimized","BREAKPOINTS","sm","md","lg","xl","debounceMs","b","windowSize","setWindowSize","_react","useState","width","window","innerWidth","height","innerHeight","handleResize","useCallback","timeoutId","debouncedResize","clearTimeout","setTimeout","useEffect","resizeHandler","addEventListener","removeEventListener","responsiveState","useMemo","currentBreakpoint","isMobile","isTablet","isDesktop","isLargeDesktop","queries","isAbove","breakpoint","isBelow","isBetween","min","max","isExactly","raw","isPortrait","isLandscape","isSquare","isMobilePortrait","isMobileLandscape","base","device","container","text","spacing","grid","cols1","cols2","cols3","cols4"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useResponsiveOptimized.ts"],"sourcesContent":["// ===================================\r\n// HOOK: useResponsiveOptimized - Hook optimizado para responsive design\r\n// ===================================\r\n\r\nimport { useState, useEffect, useCallback, useMemo } from 'react';\r\n\r\n// Breakpoints estándar de Tailwind CSS\r\nconst BREAKPOINTS = {\r\n  sm: 640,\r\n  md: 768,\r\n  lg: 1024,\r\n  xl: 1280,\r\n  '2xl': 1536,\r\n} as const;\r\n\r\ntype Breakpoint = keyof typeof BREAKPOINTS;\r\n\r\ninterface ResponsiveState {\r\n  width: number;\r\n  height: number;\r\n  isMobile: boolean;\r\n  isTablet: boolean;\r\n  isDesktop: boolean;\r\n  isLargeDesktop: boolean;\r\n  currentBreakpoint: Breakpoint | 'xs';\r\n}\r\n\r\n/**\r\n * Hook optimizado para manejo de responsive design\r\n * \r\n * Características:\r\n * - Debounce automático para evitar re-renders excesivos\r\n * - Memoización de valores calculados\r\n * - Detección precisa de breakpoints\r\n * - Optimizado para performance\r\n */\r\nexport const useResponsiveOptimized = (debounceMs: number = 150) => {\r\n  const [windowSize, setWindowSize] = useState<{ width: number; height: number }>({\r\n    width: typeof window !== 'undefined' ? window.innerWidth : 1024,\r\n    height: typeof window !== 'undefined' ? window.innerHeight : 768,\r\n  });\r\n\r\n  // Handler optimizado con debounce\r\n  const handleResize = useCallback(() => {\r\n    let timeoutId: NodeJS.Timeout;\r\n    \r\n    const debouncedResize = () => {\r\n      clearTimeout(timeoutId);\r\n      timeoutId = setTimeout(() => {\r\n        setWindowSize({\r\n          width: window.innerWidth,\r\n          height: window.innerHeight,\r\n        });\r\n      }, debounceMs);\r\n    };\r\n\r\n    return debouncedResize;\r\n  }, [debounceMs]);\r\n\r\n  useEffect(() => {\r\n    if (typeof window === 'undefined') {return;}\r\n\r\n    const resizeHandler = handleResize();\r\n    \r\n    window.addEventListener('resize', resizeHandler);\r\n    \r\n    // Cleanup\r\n    return () => {\r\n      window.removeEventListener('resize', resizeHandler);\r\n    };\r\n  }, [handleResize]);\r\n\r\n  // Valores memoizados para evitar recálculos innecesarios\r\n  const responsiveState = useMemo((): ResponsiveState => {\r\n    const { width, height } = windowSize;\r\n    \r\n    // Determinar breakpoint actual\r\n    let currentBreakpoint: Breakpoint | 'xs' = 'xs';\r\n    if (width >= BREAKPOINTS['2xl']) {currentBreakpoint = '2xl';}\r\n    else if (width >= BREAKPOINTS.xl) {currentBreakpoint = 'xl';}\r\n    else if (width >= BREAKPOINTS.lg) {currentBreakpoint = 'lg';}\r\n    else if (width >= BREAKPOINTS.md) {currentBreakpoint = 'md';}\r\n    else if (width >= BREAKPOINTS.sm) {currentBreakpoint = 'sm';}\r\n\r\n    return {\r\n      width,\r\n      height,\r\n      isMobile: width < BREAKPOINTS.md,\r\n      isTablet: width >= BREAKPOINTS.md && width < BREAKPOINTS.lg,\r\n      isDesktop: width >= BREAKPOINTS.lg && width < BREAKPOINTS.xl,\r\n      isLargeDesktop: width >= BREAKPOINTS.xl,\r\n      currentBreakpoint,\r\n    };\r\n  }, [windowSize]);\r\n\r\n  // Helpers memoizados para queries específicas\r\n  const queries = useMemo(() => ({\r\n    isAbove: (breakpoint: Breakpoint) => windowSize.width >= BREAKPOINTS[breakpoint],\r\n    isBelow: (breakpoint: Breakpoint) => windowSize.width < BREAKPOINTS[breakpoint],\r\n    isBetween: (min: Breakpoint, max: Breakpoint) => \r\n      windowSize.width >= BREAKPOINTS[min] && windowSize.width < BREAKPOINTS[max],\r\n    isExactly: (breakpoint: Breakpoint | 'xs') => \r\n      responsiveState.currentBreakpoint === breakpoint,\r\n  }), [windowSize.width, responsiveState.currentBreakpoint]);\r\n\r\n  return {\r\n    ...responsiveState,\r\n    queries,\r\n    // Valores raw para casos específicos\r\n    raw: windowSize,\r\n  };\r\n};\r\n\r\n/**\r\n * Hook simplificado para casos comunes\r\n */\r\nexport const useIsMobile = () => {\r\n  const { isMobile } = useResponsiveOptimized();\r\n  return isMobile;\r\n};\r\n\r\n/**\r\n * Hook para detectar orientación en dispositivos móviles\r\n */\r\nexport const useOrientation = () => {\r\n  const { width, height, isMobile } = useResponsiveOptimized();\r\n  \r\n  return useMemo(() => ({\r\n    isPortrait: height > width,\r\n    isLandscape: width > height,\r\n    isSquare: width === height,\r\n    // Solo relevante en móviles\r\n    isMobilePortrait: isMobile && height > width,\r\n    isMobileLandscape: isMobile && width > height,\r\n  }), [width, height, isMobile]);\r\n};\r\n\r\n/**\r\n * Hook para clases CSS responsivas dinámicas\r\n */\r\nexport const useResponsiveClasses = () => {\r\n  const { currentBreakpoint, isMobile, isTablet, isDesktop } = useResponsiveOptimized();\r\n  \r\n  return useMemo(() => ({\r\n    // Clases base\r\n    base: `responsive-${currentBreakpoint}`,\r\n    device: isMobile ? 'mobile' : isTablet ? 'tablet' : 'desktop',\r\n    \r\n    // Helpers para componentes\r\n    container: isMobile ? 'px-4' : isTablet ? 'px-6' : 'px-8',\r\n    text: isMobile ? 'text-sm' : isTablet ? 'text-base' : 'text-lg',\r\n    spacing: isMobile ? 'space-y-4' : isTablet ? 'space-y-6' : 'space-y-8',\r\n    \r\n    // Grid responsivo\r\n    grid: {\r\n      cols1: 'grid-cols-1',\r\n      cols2: isMobile ? 'grid-cols-1' : 'grid-cols-2',\r\n      cols3: isMobile ? 'grid-cols-1' : isTablet ? 'grid-cols-2' : 'grid-cols-3',\r\n      cols4: isMobile ? 'grid-cols-2' : isTablet ? 'grid-cols-3' : 'grid-cols-4',\r\n    },\r\n  }), [currentBreakpoint, isMobile, isTablet, isDesktop]);\r\n};\r\n\r\nexport default useResponsiveOptimized;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}