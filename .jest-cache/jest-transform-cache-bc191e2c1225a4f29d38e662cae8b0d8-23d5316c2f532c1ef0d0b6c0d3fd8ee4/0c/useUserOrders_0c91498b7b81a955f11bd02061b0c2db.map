{"version":3,"names":["cov_2o1nnc9fr","actualCoverage","s","useUserOrders","initialPage","b","initialStatus","f","orders","setOrders","_react","useState","loading","setLoading","error","setError","pagination","setPagination","page","limit","total","pages","statistics","setStatistics","total_orders","total_spent","pending_orders","completed_orders","fetchOrders","status","params","URLSearchParams","toString","append","response","fetch","data","json","ok","Error","success","err","console","message","refreshOrders","useEffect"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useUserOrders.ts"],"sourcesContent":["// ===================================\r\n// PINTEYA E-COMMERCE - HOOK PARA ÓRDENES DE USUARIO\r\n// ===================================\r\n\r\nimport { useState, useEffect } from 'react';\r\n\r\nexport interface OrderItem {\r\n  id: number;\r\n  quantity: number;\r\n  price: string;\r\n  products: {\r\n    id: number;\r\n    name: string;\r\n    images: any;\r\n  };\r\n}\r\n\r\nexport interface UserOrder {\r\n  id: number;\r\n  user_id: string;\r\n  total: string;\r\n  status: 'pending' | 'paid' | 'shipped' | 'delivered' | 'cancelled';\r\n  payment_id: string;\r\n  shipping_address: any;\r\n  created_at: string;\r\n  updated_at: string;\r\n  order_items: OrderItem[];\r\n}\r\n\r\nexport interface OrderStatistics {\r\n  total_orders: number;\r\n  total_spent: number;\r\n  pending_orders: number;\r\n  completed_orders: number;\r\n}\r\n\r\nexport interface OrderPagination {\r\n  page: number;\r\n  limit: number;\r\n  total: number;\r\n  pages: number;\r\n}\r\n\r\nexport interface UseUserOrdersReturn {\r\n  orders: UserOrder[];\r\n  loading: boolean;\r\n  error: string | null;\r\n  pagination: OrderPagination;\r\n  statistics: OrderStatistics;\r\n  fetchOrders: (page?: number, status?: string) => void;\r\n  refreshOrders: () => void;\r\n}\r\n\r\nexport function useUserOrders(initialPage = 1, initialStatus = 'all'): UseUserOrdersReturn {\r\n  const [orders, setOrders] = useState<UserOrder[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [pagination, setPagination] = useState<OrderPagination>({\r\n    page: initialPage,\r\n    limit: 10,\r\n    total: 0,\r\n    pages: 0,\r\n  });\r\n  const [statistics, setStatistics] = useState<OrderStatistics>({\r\n    total_orders: 0,\r\n    total_spent: 0,\r\n    pending_orders: 0,\r\n    completed_orders: 0,\r\n  });\r\n\r\n  // Función para obtener las órdenes\r\n  const fetchOrders = async (page = 1, status = 'all') => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      const params = new URLSearchParams({\r\n        page: page.toString(),\r\n        limit: '10',\r\n      });\r\n\r\n      if (status && status !== 'all') {\r\n        params.append('status', status);\r\n      }\r\n\r\n      const response = await fetch(`/api/user/orders?${params}`);\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.error || 'Error al obtener órdenes');\r\n      }\r\n\r\n      if (data.success) {\r\n        setOrders(data.orders);\r\n        setPagination(data.pagination);\r\n        setStatistics(data.statistics);\r\n      } else {\r\n        throw new Error('Error al obtener órdenes');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error en useUserOrders:', err);\r\n      setError(err instanceof Error ? err.message : 'Error desconocido');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Función para refrescar las órdenes\r\n  const refreshOrders = () => {\r\n    fetchOrders(pagination.page, initialStatus);\r\n  };\r\n\r\n  // Cargar órdenes al montar el componente\r\n  useEffect(() => {\r\n    fetchOrders(initialPage, initialStatus);\r\n  }, [initialPage, initialStatus]);\r\n\r\n  return {\r\n    orders,\r\n    loading,\r\n    error,\r\n    pagination,\r\n    statistics,\r\n    fetchOrders,\r\n    refreshOrders,\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}