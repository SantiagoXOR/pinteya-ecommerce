{"version":3,"names":["useCheckout","initialFormData","cov_qxyiuxsma","s","billing","firstName","lastName","dni","companyName","country","streetAddress","apartment","city","state","zipCode","phone","email","orderNotes","observations","shipping","differentAddress","paymentMethod","shippingMethod","couponCode","f","dispatch","_store","useAppDispatch","cartItems","useAppSelector","_cartslice","selectCartItems","totalPrice","selectTotalPrice","user","isLoaded","_useAuth","useAuth","checkoutState","setCheckoutState","_react","useState","formData","isLoading","errors","step","preferenceId","undefined","initPoint","appliedCoupon","setAppliedCoupon","useEffect","b","userEmail","fullName","name","lastNameParts","split","join","prev","currentBilling","shouldUpdateFirstName","shouldUpdateLastName","shouldUpdateEmail","calculateShippingCost","useCallback","calculateDiscount","type","Math","round","discount","calculateTotal","total","max","console","log","updateFormData","updates","updateBillingData","billingData","updateShippingData","shippingData","applyCoupon","trim","coupon","validCoupons","toUpperCase","code","error","validateForm","_consolidatedutils","validateEmail","validatePhoneNumber","length","test","shippingStreetAddress","shippingCity","shippingState","shippingZipCode","cart","Object","keys","validateExpressForm","cartItemsLength","currentStep","validateDNI","processExpressCheckout","sessionStorage","setItem","shippingCost","sanitizedPhone","replace","startsWith","substring","payload","items","map","item","id","toString","title","price","discountedPrice","quantity","image","imgs","previews","payer","surname","cost","address","street_name","street_number","zip_code","city_name","state_name","external_reference","Date","now","response","fetch","method","headers","body","JSON","stringify","result","json","success","Error","data","init_point","preference_id","errorMessage","message","general","processCheckout","handleWalletReady","handleWalletError","payment","handleWalletSubmit","memoizedShippingCost","useMemo","isNaN","memoizedDiscount","disc","memoizedFinalTotal","finalTotal"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useCheckout.ts"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useCallback, useEffect, useMemo } from 'react';\r\nimport { useAppDispatch, useAppSelector } from '@/redux/store';\r\nimport { selectCartItems, selectTotalPrice, removeAllItemsFromCart } from '@/redux/features/cart-slice';\r\nimport { CheckoutFormData, CheckoutState, CreatePreferencePayload, PaymentPreferenceResponse } from '@/types/checkout';\r\nimport { ApiResponse } from '@/types/api';\r\nimport { useAuth } from './useAuth';\r\nimport { validateEmail, validatePhoneNumber, validateDNI } from '@/lib/utils/consolidated-utils';\r\n\r\nconst initialFormData: CheckoutFormData = {\r\n  billing: {\r\n    firstName: '',\r\n    lastName: '',\r\n    dni: '',\r\n    companyName: '',\r\n    country: 'Argentina',\r\n    streetAddress: '',\r\n    apartment: '',\r\n    city: '',\r\n    state: '',\r\n    zipCode: '',\r\n    phone: '',\r\n    email: '',\r\n    orderNotes: '',\r\n    observations: '',\r\n  },\r\n  shipping: {\r\n    differentAddress: false,\r\n  },\r\n  paymentMethod: 'mercadopago',\r\n  shippingMethod: 'free',\r\n  couponCode: '',\r\n};\r\n\r\nexport const useCheckout = () => {\r\n  const dispatch = useAppDispatch();\r\n  const cartItems = useAppSelector(selectCartItems);\r\n  const totalPrice = useAppSelector(selectTotalPrice);\r\n  const { user, isLoaded } = useAuth();\r\n\r\n  const [checkoutState, setCheckoutState] = useState<CheckoutState>({\r\n    formData: initialFormData,\r\n    isLoading: false,\r\n    errors: {},\r\n    step: 'form',\r\n    preferenceId: undefined,\r\n    initPoint: undefined,\r\n  });\r\n\r\n  // Estado para cupones\r\n  const [appliedCoupon, setAppliedCoupon] = useState<{\r\n    code: string;\r\n    discount: number;\r\n    type: 'percentage' | 'fixed';\r\n  } | null>(null);\r\n\r\n  // ===================================\r\n  // AUTO-COMPLETAR DATOS DEL USUARIO AUTENTICADO\r\n  // ===================================\r\n  useEffect(() => {\r\n    if (isLoaded && user) {\r\n      const userEmail = user.email || '';\r\n      const fullName = user.name || '';\r\n      const [firstName, ...lastNameParts] = fullName.split(' ');\r\n      const lastName = lastNameParts.join(' ');\r\n\r\n      // Solo actualizar si los datos han cambiado para evitar recursión\r\n      setCheckoutState(prev => {\r\n        const currentBilling = prev.formData.billing;\r\n        \r\n        // Verificar si realmente necesitamos actualizar\r\n        const shouldUpdateFirstName = !currentBilling.firstName && firstName;\r\n        const shouldUpdateLastName = !currentBilling.lastName && lastName;\r\n        const shouldUpdateEmail = !currentBilling.email && userEmail;\r\n        \r\n        if (!shouldUpdateFirstName && !shouldUpdateLastName && !shouldUpdateEmail) {\r\n          return prev;\r\n        }\r\n\r\n        return {\r\n          ...prev,\r\n          formData: {\r\n            ...prev.formData,\r\n            billing: {\r\n              ...currentBilling,\r\n              firstName: shouldUpdateFirstName ? firstName : currentBilling.firstName,\r\n              lastName: shouldUpdateLastName ? lastName : currentBilling.lastName,\r\n              email: shouldUpdateEmail ? userEmail : currentBilling.email,\r\n            },\r\n          },\r\n        };\r\n      });\r\n    }\r\n  }, [isLoaded, user?.email, user?.name]);\r\n\r\n  // ===================================\r\n  // FUNCIONES DE CÁLCULO\r\n  // ===================================\r\n  const calculateShippingCost = useCallback(() => {\r\n    const { shippingMethod } = checkoutState.formData;\r\n\r\n    switch (shippingMethod) {\r\n      case 'free':\r\n        return 0;\r\n      case 'standard':\r\n        return totalPrice > 50000 ? 0 : 5000; // Envío gratis por compras mayores a $50,000\r\n      case 'express':\r\n        return 8000;\r\n      default:\r\n        return 0;\r\n    }\r\n  }, [checkoutState.formData.shippingMethod, totalPrice]);\r\n\r\n  const calculateDiscount = useCallback(() => {\r\n    if (!appliedCoupon) {return 0;}\r\n\r\n    if (appliedCoupon.type === 'percentage') {\r\n      return Math.round((totalPrice * appliedCoupon.discount) / 100);\r\n    } else {\r\n      return appliedCoupon.discount;\r\n    }\r\n  }, [appliedCoupon, totalPrice]);\r\n\r\n  const calculateTotal = useCallback(() => {\r\n    const shipping = calculateShippingCost();\r\n    const discount = calculateDiscount();\r\n    const total = Math.max(0, totalPrice + shipping - discount);\r\n    console.log('🔍 calculateTotal:', { totalPrice, shipping, discount, total });\r\n    return total;\r\n  }, [totalPrice, calculateShippingCost, calculateDiscount]);\r\n\r\n  // Actualizar datos del formulario\r\n  const updateFormData = useCallback((updates: Partial<CheckoutFormData>) => {\r\n    setCheckoutState(prev => ({\r\n      ...prev,\r\n      formData: { ...prev.formData, ...updates },\r\n      errors: {}, // Limpiar errores al actualizar\r\n    }));\r\n  }, []);\r\n\r\n  // Actualizar datos de facturación\r\n  const updateBillingData = useCallback((billingData: Partial<CheckoutFormData['billing']>) => {\r\n    setCheckoutState(prev => ({\r\n      ...prev,\r\n      formData: {\r\n        ...prev.formData,\r\n        billing: { ...prev.formData.billing, ...billingData },\r\n      },\r\n      errors: {}, // Limpiar errores al actualizar\r\n    }));\r\n  }, []);\r\n\r\n  // Actualizar datos de envío\r\n  const updateShippingData = useCallback((shippingData: Partial<CheckoutFormData['shipping']>) => {\r\n    setCheckoutState(prev => ({\r\n      ...prev,\r\n      formData: {\r\n        ...prev.formData,\r\n        shipping: { ...prev.formData.shipping, ...shippingData },\r\n      },\r\n      errors: {}, // Limpiar errores al actualizar\r\n    }));\r\n  }, []);\r\n\r\n  // Aplicar cupón de descuento\r\n  const applyCoupon = useCallback(async (couponCode: string) => {\r\n    if (!couponCode.trim()) {\r\n      setCheckoutState(prev => ({\r\n        ...prev,\r\n        errors: { ...prev.errors, coupon: 'Ingresa un código de cupón' }\r\n      }));\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Simular validación de cupón (aquí iría la llamada a la API)\r\n      const validCoupons = {\r\n        'DESCUENTO10': { discount: 10, type: 'percentage' as const },\r\n        'ENVIOGRATIS': { discount: 5000, type: 'fixed' as const },\r\n        'BIENVENIDO': { discount: 15, type: 'percentage' as const },\r\n      };\r\n\r\n      const coupon = validCoupons[couponCode.toUpperCase() as keyof typeof validCoupons];\r\n\r\n      if (coupon) {\r\n        setAppliedCoupon({\r\n          code: couponCode.toUpperCase(),\r\n          ...coupon\r\n        });\r\n        setCheckoutState(prev => ({\r\n          ...prev,\r\n          formData: { ...prev.formData, couponCode: couponCode.toUpperCase() },\r\n          errors: { ...prev.errors, coupon: undefined }\r\n        }));\r\n      } else {\r\n        setCheckoutState(prev => ({\r\n          ...prev,\r\n          errors: { ...prev.errors, coupon: 'Código de cupón inválido' }\r\n        }));\r\n      }\r\n    } catch (error) {\r\n      setCheckoutState(prev => ({\r\n        ...prev,\r\n        errors: { ...prev.errors, coupon: 'Error validando el cupón' }\r\n      }));\r\n    }\r\n  }, []);\r\n\r\n  // ===================================\r\n  // FUNCIONES DE VALIDACIÓN\r\n  // ===================================\r\n\r\n  // Validar formulario completo\r\n  const validateForm = useCallback(() => {\r\n    const { billing, shipping } = checkoutState.formData;\r\n    const errors: Record<string, string> = {};\r\n\r\n    // Validaciones básicas\r\n    if (!billing.firstName?.trim()) {errors.firstName = 'Nombre es requerido';}\r\n    if (!billing.lastName?.trim()) {errors.lastName = 'Apellido es requerido';}\r\n    if (!billing.email?.trim()) {errors.email = 'Email es requerido';}\r\n    if (!billing.phone?.trim()) {errors.phone = 'Teléfono es requerido';}\r\n    if (!billing.streetAddress?.trim()) {errors.streetAddress = 'Dirección es requerida';}\r\n    if (!billing.city?.trim()) {errors.city = 'Ciudad es requerida';}\r\n    if (!billing.state?.trim()) {errors.state = 'Provincia es requerida';}\r\n    if (!billing.zipCode?.trim()) {errors.zipCode = 'Código postal es requerido';}\r\n\r\n    // Validaciones avanzadas\r\n    if (billing.email && !validateEmail(billing.email)) {\r\n      errors.email = 'Email inválido';\r\n    }\r\n\r\n    if (billing.phone && !validatePhoneNumber(billing.phone)) {\r\n      errors.phone = 'Teléfono inválido. Formato: +54 351 XXX XXXX';\r\n    }\r\n\r\n    if (billing.streetAddress && billing.streetAddress.length < 10) {\r\n      errors.streetAddress = 'La dirección debe tener al menos 10 caracteres';\r\n    }\r\n\r\n    // Validar código postal argentino (formato XXXX o AXXXX)\r\n    if (billing.zipCode && !/^[A-Z]?\\d{4}$/.test(billing.zipCode.toUpperCase())) {\r\n      errors.zipCode = 'Código postal inválido';\r\n    }\r\n\r\n    // Validar envío si es dirección diferente\r\n    if (shipping.differentAddress) {\r\n      if (!shipping.streetAddress?.trim()) {errors.shippingStreetAddress = 'Dirección de envío es requerida';}\r\n      if (!shipping.city?.trim()) {errors.shippingCity = 'Ciudad de envío es requerida';}\r\n      if (!shipping.state?.trim()) {errors.shippingState = 'Provincia de envío es requerida';}\r\n      if (!shipping.zipCode?.trim()) {errors.shippingZipCode = 'Código postal de envío es requerido';}\r\n\r\n      if (shipping.zipCode && !/^[A-Z]?\\d{4}$/.test(shipping.zipCode.toUpperCase())) {\r\n        errors.shippingZipCode = 'Código postal de envío inválido';\r\n      }\r\n    }\r\n\r\n    // Validar que hay items en el carrito\r\n    if (cartItems.length === 0) {\r\n      errors.cart = 'El carrito está vacío';\r\n    }\r\n\r\n    setCheckoutState(prev => ({ ...prev, errors }));\r\n    return Object.keys(errors).length === 0;\r\n  }, [cartItems.length]);\r\n\r\n  // Validar formulario express (solo campos esenciales)\r\n  const validateExpressForm = useCallback(() => {\r\n    const { billing } = checkoutState.formData;\r\n    const errors: Record<string, string> = {};\r\n\r\n    console.log('🔍 validateExpressForm - Datos del formulario:', {\r\n      firstName: billing.firstName,\r\n      lastName: billing.lastName,\r\n      dni: billing.dni,\r\n      email: billing.email,\r\n      phone: billing.phone,\r\n      streetAddress: billing.streetAddress,\r\n      paymentMethod: checkoutState.formData.paymentMethod,\r\n      cartItemsLength: cartItems.length,\r\n      currentStep: checkoutState.step // ✅ NUEVO: Agregar step actual\r\n    });\r\n\r\n    // Validaciones esenciales para checkout express\r\n    if (!billing.firstName?.trim()) {errors.firstName = 'Nombre es requerido';}\r\n    if (!billing.lastName?.trim()) {errors.lastName = 'Apellido es requerido';}\r\n    if (!billing.dni?.trim()) {errors.dni = 'DNI/CUIT es requerido';}\r\n    if (!billing.email?.trim()) {errors.email = 'Email es requerido';}\r\n    if (!billing.phone?.trim()) {errors.phone = 'Teléfono es requerido';}\r\n    if (!billing.streetAddress?.trim()) {errors.streetAddress = 'Dirección es requerida';}\r\n\r\n    // Validaciones avanzadas\r\n    if (billing.email && !validateEmail(billing.email)) {\r\n      errors.email = 'Email inválido';\r\n    }\r\n\r\n    if (billing.phone && !validatePhoneNumber(billing.phone)) {\r\n      errors.phone = 'Teléfono inválido. Formato: +54 351 XXX XXXX';\r\n    }\r\n\r\n    // Validación de DNI/CUIT argentino\r\n    if (billing.dni && !validateDNI(billing.dni)) {\r\n      errors.dni = 'DNI/CUIT inválido. Formato: 12345678 o 20-12345678-9';\r\n    }\r\n\r\n    // Validar método de pago\r\n    if (!checkoutState.formData.paymentMethod) {\r\n      errors.paymentMethod = 'Método de pago es requerido';\r\n    }\r\n\r\n    // ✅ NUEVO: Solo validar carrito si NO estamos en el step de pago\r\n    // Durante el step 'payment', el carrito ya se vació pero es normal\r\n    if (checkoutState.step !== 'payment' && cartItems.length === 0) {\r\n      errors.cart = 'El carrito está vacío';\r\n    }\r\n\r\n    console.log('🔍 validateExpressForm - Errores encontrados:', errors);\r\n    console.log('🔍 validateExpressForm - Formulario válido:', Object.keys(errors).length === 0);\r\n\r\n    setCheckoutState(prev => ({ ...prev, errors }));\r\n    return Object.keys(errors).length === 0;\r\n  }, [checkoutState.formData, checkoutState.step, cartItems.length]); // ✅ NUEVO: Agregar step a dependencias\r\n\r\n  // ===================================\r\n  // FUNCIONES DE PROCESAMIENTO\r\n  // ===================================\r\n\r\n  // Procesar checkout express\r\n  const processExpressCheckout = useCallback(async (): Promise<void> => {\r\n    if (!validateExpressForm()) {\r\n      return;\r\n    }\r\n\r\n    // Marcar que el checkout está en progreso\r\n    sessionStorage.setItem('checkout-in-progress', 'true');\r\n\r\n    setCheckoutState(prev => ({ ...prev, isLoading: true, step: 'processing' }));\r\n\r\n    try {\r\n      const { billing } = checkoutState.formData;\r\n      const shippingCost = calculateShippingCost();\r\n\r\n      // Sanitizar teléfono para el backend (solo números, formato argentino 10-11 dígitos)\r\n      let sanitizedPhone = billing.phone?.replace(/\\D/g, '') || '';\r\n\r\n      // Si empieza con 54 (código de Argentina), remover el código de país\r\n      if (sanitizedPhone.startsWith('54') && sanitizedPhone.length > 11) {\r\n        sanitizedPhone = sanitizedPhone.substring(2); // Remover \"54\"\r\n      }\r\n\r\n      // Si empieza con 9 (código de celular), mantenerlo para que sea 11 dígitos\r\n      // Si no empieza con 9, debería ser 10 dígitos (teléfono fijo)\r\n\r\n      console.log('🔍 processExpressCheckout - Teléfono original:', billing.phone);\r\n      console.log('🔍 processExpressCheckout - Teléfono sanitizado:', sanitizedPhone);\r\n      console.log('🔍 processExpressCheckout - Longitud del teléfono:', sanitizedPhone.length);\r\n\r\n      // Preparar datos para la API (Express Checkout - campos simplificados)\r\n      const payload: CreatePreferencePayload = {\r\n        items: cartItems.map((item: any) => ({\r\n          id: item.id.toString(),\r\n          name: item.title,\r\n          price: item.discountedPrice,\r\n          quantity: item.quantity,\r\n          image: item.imgs?.previews?.[0] || '',\r\n        })),\r\n        payer: {\r\n          name: billing.firstName || 'Cliente', // Valor por defecto para express checkout\r\n          surname: billing.lastName || 'Express', // Valor por defecto para express checkout\r\n          email: billing.email,\r\n          phone: sanitizedPhone, // Teléfono sanitizado (solo números)\r\n        },\r\n        shipping: shippingCost > 0 ? {\r\n          cost: shippingCost,\r\n          address: {\r\n            street_name: billing.streetAddress,\r\n            street_number: \"123\", // Número por defecto\r\n            zip_code: billing.zipCode || \"5000\", // Código postal por defecto para Córdoba\r\n            city_name: billing.city || \"Córdoba\",\r\n            state_name: billing.state || \"Córdoba\",\r\n          },\r\n        } : undefined,\r\n        external_reference: `express_checkout_${Date.now()}`,\r\n      };\r\n\r\n      console.log('🔍 processExpressCheckout - Payload enviado:', payload);\r\n\r\n      // Llamar a la API\r\n      const response = await fetch('/api/payments/create-preference', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(payload),\r\n      });\r\n\r\n      const result: ApiResponse<PaymentPreferenceResponse> = await response.json();\r\n\r\n      if (!result.success) {\r\n        throw new Error(result.error || 'Error procesando el pago');\r\n      }\r\n\r\n      // ✅ SOLUCIÓN FINAL: Redirección directa a MercadoPago\r\n      // Esto evita el problema de hooks con el Wallet Brick embebido\r\n      console.log('🔄 Redirigiendo directamente a MercadoPago:', result.data.init_point);\r\n\r\n      // Cambiar a estado de redirección inmediatamente\r\n      setCheckoutState(prev => ({\r\n        ...prev,\r\n        step: 'redirect',\r\n        preferenceId: result.data.preference_id,\r\n        initPoint: result.data.init_point,\r\n        isLoading: false\r\n      }));\r\n\r\n    } catch (error: unknown) {\r\n      const errorMessage = error instanceof Error ? error.message : 'Error procesando el pago';\r\n      console.error('Error en express checkout:', error);\r\n      setCheckoutState(prev => ({\r\n        ...prev,\r\n        isLoading: false,\r\n        step: 'form',\r\n        errors: { general: errorMessage },\r\n      }));\r\n    }\r\n  }, [checkoutState.formData, cartItems, validateExpressForm, calculateShippingCost, dispatch]);\r\n\r\n  // Procesar checkout completo\r\n  const processCheckout = useCallback(async (): Promise<void> => {\r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    // Marcar que el checkout está en progreso\r\n    sessionStorage.setItem('checkout-in-progress', 'true');\r\n\r\n    setCheckoutState(prev => ({ ...prev, isLoading: true, step: 'processing' }));\r\n\r\n    try {\r\n      const { billing, shipping } = checkoutState.formData;\r\n      const shippingCost = calculateShippingCost();\r\n\r\n      // Preparar datos para la API\r\n      const payload: CreatePreferencePayload = {\r\n        items: cartItems.map((item: any) => ({\r\n          id: item.id.toString(),\r\n          name: item.title,\r\n          price: item.discountedPrice,\r\n          quantity: item.quantity,\r\n          image: item.imgs?.previews?.[0] || '',\r\n        })),\r\n        payer: {\r\n          name: billing.firstName,\r\n          surname: billing.lastName,\r\n          email: billing.email,\r\n          phone: billing.phone,\r\n        },\r\n        shipping: shippingCost > 0 ? {\r\n          cost: shippingCost,\r\n          address: {\r\n            street_name: shipping.differentAddress ? shipping.streetAddress! : billing.streetAddress,\r\n            street_number: \"123\", // Número por defecto como string\r\n            zip_code: shipping.differentAddress ? shipping.zipCode! : billing.zipCode,\r\n            city_name: shipping.differentAddress ? shipping.city! : billing.city,\r\n            state_name: shipping.differentAddress ? shipping.state! : billing.state,\r\n          },\r\n        } : undefined,\r\n        external_reference: `checkout_${Date.now()}`,\r\n      };\r\n\r\n      // Llamar a la API\r\n      const response = await fetch('/api/payments/create-preference', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(payload),\r\n      });\r\n\r\n      const result: ApiResponse<PaymentPreferenceResponse> = await response.json();\r\n\r\n      if (!result.success) {\r\n        throw new Error(result.error || 'Error procesando el pago');\r\n      }\r\n\r\n      // Procesar resultado exitoso - mostrar paso de pago manual\r\n      // NOTA: No limpiar el carrito aquí, se limpiará cuando el pago se complete exitosamente\r\n\r\n      // ✅ CORREGIDO: Ir directamente a redirect para evitar error de hooks con MercadoPagoWallet\r\n      console.log('🔄 Redirigiendo directamente a MercadoPago:', result.data.init_point);\r\n      \r\n      setCheckoutState(prev => ({\r\n        ...prev,\r\n        step: 'redirect',\r\n        preferenceId: result.data.preference_id,\r\n        initPoint: result.data.init_point,\r\n        isLoading: false\r\n      }));\r\n\r\n    } catch (error: unknown) {\r\n      const errorMessage = error instanceof Error ? error.message : 'Error procesando el pago';\r\n      console.error('Error en checkout:', error);\r\n      setCheckoutState(prev => ({\r\n        ...prev,\r\n        isLoading: false,\r\n        step: 'form',\r\n        errors: { general: errorMessage },\r\n      }));\r\n    }\r\n  }, [checkoutState.formData, cartItems, validateForm, calculateShippingCost, dispatch]);\r\n\r\n  // ===================================\r\n  // CALLBACKS PARA WALLET BRICK\r\n  // ===================================\r\n  const handleWalletReady = useCallback(() => {\r\n    console.log('Wallet Brick está listo');\r\n  }, []);\r\n\r\n  const handleWalletError = useCallback((error: any) => {\r\n    console.error('Error en Wallet Brick:', error);\r\n    setCheckoutState(prev => ({\r\n      ...prev,\r\n      errors: { payment: error.message || 'Error en el sistema de pagos' },\r\n      isLoading: false,\r\n    }));\r\n  }, []);\r\n\r\n  const handleWalletSubmit = useCallback((data: any) => {\r\n    console.log('💳 Wallet Submit - Pago enviado desde Wallet Brick:', data);\r\n    console.log('💳 Wallet Submit - Cambiando a step redirect');\r\n\r\n    // IMPORTANTE: NO limpiar el carrito aquí\r\n    // El carrito se limpiará solo cuando el pago sea confirmado como exitoso\r\n    setCheckoutState(prev => ({\r\n      ...prev,\r\n      step: 'redirect',\r\n      isLoading: false\r\n    }));\r\n  }, []);\r\n\r\n  // Memorizar valores calculados para evitar recursión infinita\r\n  const memoizedShippingCost = useMemo(() => {\r\n    try {\r\n      const cost = calculateShippingCost();\r\n      return typeof cost === 'number' && !isNaN(cost) ? cost : 0;\r\n    } catch (error) {\r\n      console.error('❌ Error calculating shippingCost:', error);\r\n      return 0;\r\n    }\r\n  }, [calculateShippingCost]);\r\n\r\n  const memoizedDiscount = useMemo(() => {\r\n    try {\r\n      const disc = calculateDiscount();\r\n      return typeof disc === 'number' && !isNaN(disc) ? disc : 0;\r\n    } catch (error) {\r\n      console.error('❌ Error calculating discount:', error);\r\n      return 0;\r\n    }\r\n  }, [calculateDiscount]);\r\n\r\n  const memoizedFinalTotal = useMemo(() => {\r\n    try {\r\n      const total = calculateTotal();\r\n      return typeof total === 'number' && !isNaN(total) ? total : 0;\r\n    } catch (error) {\r\n      console.error('❌ Error calculating finalTotal:', error);\r\n      return 0;\r\n    }\r\n  }, [calculateTotal]);\r\n\r\n  return {\r\n    // Estado\r\n    formData: checkoutState.formData,\r\n    isLoading: checkoutState.isLoading,\r\n    errors: checkoutState.errors,\r\n    step: checkoutState.step,\r\n\r\n    // Datos para Wallet Brick\r\n    preferenceId: checkoutState.preferenceId,\r\n    initPoint: checkoutState.initPoint,\r\n\r\n    // Datos calculados\r\n    cartItems,\r\n    totalPrice,\r\n    shippingCost: memoizedShippingCost,\r\n    discount: memoizedDiscount,\r\n    finalTotal: memoizedFinalTotal,\r\n\r\n    // Cupones\r\n    appliedCoupon,\r\n    applyCoupon,\r\n\r\n    // Acciones\r\n    updateFormData,\r\n    updateBillingData,\r\n    updateShippingData,\r\n    validateForm,\r\n    validateExpressForm,\r\n    processCheckout,\r\n    processExpressCheckout,\r\n\r\n    // Callbacks para Wallet Brick\r\n    handleWalletReady,\r\n    handleWalletError,\r\n    handleWalletSubmit,\r\n  };\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}