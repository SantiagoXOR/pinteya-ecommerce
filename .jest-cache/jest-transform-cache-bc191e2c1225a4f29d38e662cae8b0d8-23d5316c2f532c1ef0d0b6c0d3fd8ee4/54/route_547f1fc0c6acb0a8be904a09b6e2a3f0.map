{"version":3,"names":["cov_6664vzfau","actualCoverage","s","GET","f","PUT","runtime","request","session","_config","auth","user","email","b","_server","NextResponse","json","error","status","supabase","_server1","createClient","data","driver","driverError","from","select","eq","single","console","routes","routesError","id","in","order","ascending","today","Date","toISOString","split","todayDeliveries","deliveriesError","gte","lte","completedDeliveries","totalDistance","forEach","route","shipments","Array","isArray","filter","shipment","length","todayRoutes","todayRoutesError","reduce","sum","total_distance","response","name","first_name","last_name","phone","rating","total_deliveries","todayStats","Math","round","activeTime","efficiency","optimization_score","body","current_location","update","undefined","updated_at"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\driver\\profile\\route.ts"],"sourcesContent":["// Configuración para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n/**\r\n * API para obtener el perfil del driver y sus rutas asignadas\r\n * GET /api/driver/profile\r\n */\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { auth } from '@/lib/auth/config';\r\nimport { createClient } from '@/lib/integrations/supabase/server';\r\n\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    // Verificar autenticación\r\n    const session = await auth();\r\n    \r\n    if (!session?.user?.email) {\r\n      return NextResponse.json(\r\n        { error: 'No autorizado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    const supabase = await createClient();\r\n\r\n    // Obtener información del driver\r\n    const { data: driver, error: driverError } = await supabase\r\n      .from('drivers')\r\n      .select('id, first_name, last_name, email, phone, status, rating, total_deliveries, created_at, updated_at')\r\n      .eq('email', session.user.email)\r\n      .single();\r\n\r\n    if (driverError || !driver) {\r\n      console.error('Driver not found:', driverError);\r\n      return NextResponse.json(\r\n        { error: 'Driver no encontrado' },\r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    // Obtener rutas asignadas al driver\r\n    const { data: routes, error: routesError } = await supabase\r\n      .from('optimized_routes')\r\n      .select('*')\r\n      .eq('driver_id', driver.id)\r\n      .in('status', ['planned', 'active'])\r\n      .order('created_at', { ascending: true });\r\n\r\n    if (routesError) {\r\n      console.error('Error fetching routes:', routesError);\r\n    }\r\n\r\n    // Obtener estadísticas del día\r\n    const today = new Date().toISOString().split('T')[0];\r\n    \r\n    const { data: todayDeliveries, error: deliveriesError } = await supabase\r\n      .from('optimized_routes')\r\n      .select('shipments')\r\n      .eq('driver_id', driver.id)\r\n      .eq('status', 'completed')\r\n      .gte('created_at', `${today}T00:00:00.000Z`)\r\n      .lte('created_at', `${today}T23:59:59.999Z`);\r\n\r\n    let completedDeliveries = 0;\r\n    let totalDistance = 0;\r\n\r\n    if (todayDeliveries) {\r\n      todayDeliveries.forEach(route => {\r\n        if (route.shipments && Array.isArray(route.shipments)) {\r\n          completedDeliveries += route.shipments.filter(\r\n            (shipment: any) => shipment.status === 'delivered'\r\n          ).length;\r\n        }\r\n      });\r\n    }\r\n\r\n    // Calcular distancia total del día\r\n    const { data: todayRoutes, error: todayRoutesError } = await supabase\r\n      .from('optimized_routes')\r\n      .select('total_distance')\r\n      .eq('driver_id', driver.id)\r\n      .gte('created_at', `${today}T00:00:00.000Z`)\r\n      .lte('created_at', `${today}T23:59:59.999Z`);\r\n\r\n    if (todayRoutes) {\r\n      totalDistance = todayRoutes.reduce(\r\n        (sum, route) => sum + (route.total_distance || 0), \r\n        0\r\n      );\r\n    }\r\n\r\n    const response = {\r\n      driver: {\r\n        id: driver.id,\r\n        name: `${driver.first_name} ${driver.last_name}`,\r\n        first_name: driver.first_name,\r\n        last_name: driver.last_name,\r\n        email: driver.email,\r\n        phone: driver.phone,\r\n        status: driver.status,\r\n        rating: driver.rating,\r\n        total_deliveries: driver.total_deliveries\r\n      },\r\n      routes: routes || [],\r\n      todayStats: {\r\n        completedDeliveries,\r\n        totalDistance: Math.round(totalDistance * 100) / 100,\r\n        activeTime: '0h 0m', // TODO: Implementar tracking de tiempo activo\r\n        efficiency: routes?.length > 0 ? \r\n          Math.round(routes.reduce((sum, route) => sum + (route.optimization_score || 0), 0) / routes.length) : 0\r\n      }\r\n    };\r\n\r\n    return NextResponse.json(response);\r\n\r\n  } catch (error) {\r\n    console.error('Error in driver profile API:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\nexport async function PUT(request: NextRequest) {\r\n  try {\r\n    // Verificar autenticación\r\n    const session = await auth();\r\n    \r\n    if (!session?.user?.email) {\r\n      return NextResponse.json(\r\n        { error: 'No autorizado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    const body = await request.json();\r\n    const { status, current_location } = body;\r\n\r\n    const supabase = await createClient();\r\n\r\n    // Actualizar información del driver\r\n    const { data: driver, error } = await supabase\r\n      .from('drivers')\r\n      .update({\r\n        status: status || undefined,\r\n        current_location: current_location || undefined,\r\n        updated_at: new Date().toISOString()\r\n      })\r\n      .eq('email', session.user.email)\r\n      .select()\r\n      .single();\r\n\r\n    if (error) {\r\n      console.error('Error updating driver:', error);\r\n      return NextResponse.json(\r\n        { error: 'Error actualizando driver' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    return NextResponse.json({ driver });\r\n\r\n  } catch (error) {\r\n    console.error('Error in driver profile update API:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}