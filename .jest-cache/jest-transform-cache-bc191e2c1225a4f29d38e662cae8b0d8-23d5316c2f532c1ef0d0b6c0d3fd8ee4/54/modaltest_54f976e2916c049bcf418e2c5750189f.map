{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\__tests__\\components\\ui\\modal.test.tsx"],"sourcesContent":["import { render, screen, fireEvent, waitFor } from '@testing-library/react'\nimport userEvent from '@testing-library/user-event'\nimport { Modal, ConfirmModal, AddToCartModal, useModal } from '@/components/ui/modal'\nimport { Button } from '@/components/ui/button'\n\n// Mock para Radix UI Portal\njest.mock('@radix-ui/react-dialog', () => ({\n  ...jest.requireActual('@radix-ui/react-dialog'),\n  Portal: ({ children }: { children: React.ReactNode }) => (\n    <div data-testid='portal'>{children}</div>\n  ),\n}))\n\njest.mock('@radix-ui/react-alert-dialog', () => ({\n  ...jest.requireActual('@radix-ui/react-alert-dialog'),\n  Portal: ({ children }: { children: React.ReactNode }) => (\n    <div data-testid='alert-portal'>{children}</div>\n  ),\n}))\n\ndescribe('Modal Components', () => {\n  describe('Modal', () => {\n    it('renders with title and description', () => {\n      render(\n        <Modal open={true} title='Test Modal' description='Test description'>\n          <div>Modal content</div>\n        </Modal>\n      )\n\n      expect(screen.getByText('Test Modal')).toBeInTheDocument()\n      expect(screen.getByText('Test description')).toBeInTheDocument()\n      expect(screen.getByText('Modal content')).toBeInTheDocument()\n    })\n\n    it('calls onOpenChange when close button is clicked', async () => {\n      const user = userEvent.setup()\n      const onOpenChange = jest.fn()\n\n      render(\n        <Modal open={true} onOpenChange={onOpenChange} title='Test Modal'>\n          <div>Content</div>\n        </Modal>\n      )\n\n      const closeButton = screen.getByRole('button', { name: /cerrar/i })\n      await user.click(closeButton)\n\n      expect(onOpenChange).toHaveBeenCalledWith(false)\n    })\n\n    it('renders with different sizes', () => {\n      const { rerender } = render(\n        <Modal open={true} size='sm' title='Small Modal'>\n          Content\n        </Modal>\n      )\n\n      expect(screen.getByRole('dialog')).toHaveClass('max-w-sm')\n\n      rerender(\n        <Modal open={true} size='lg' title='Large Modal'>\n          Content\n        </Modal>\n      )\n\n      expect(screen.getByRole('dialog')).toHaveClass('max-w-lg')\n    })\n\n    it('renders with trigger', async () => {\n      const user = userEvent.setup()\n\n      render(\n        <Modal trigger={<Button>Open Modal</Button>} title='Triggered Modal'>\n          Modal content\n        </Modal>\n      )\n\n      const trigger = screen.getByRole('button', { name: /open modal/i })\n      await user.click(trigger)\n\n      await waitFor(() => {\n        expect(screen.getByText('Triggered Modal')).toBeInTheDocument()\n      })\n    })\n  })\n\n  describe('ConfirmModal', () => {\n    it('renders with correct variant styling', () => {\n      render(\n        <ConfirmModal\n          open={true}\n          title='Confirm Action'\n          description='Are you sure?'\n          variant='destructive'\n          confirmText='Delete'\n          cancelText='Cancel'\n        />\n      )\n\n      expect(screen.getByText('Confirm Action')).toBeInTheDocument()\n      expect(screen.getByText('Are you sure?')).toBeInTheDocument()\n      expect(screen.getByRole('button', { name: /delete/i })).toBeInTheDocument()\n      expect(screen.getByRole('button', { name: /cancel/i })).toBeInTheDocument()\n    })\n\n    it('calls onConfirm when confirm button is clicked', async () => {\n      const user = userEvent.setup()\n      const onConfirm = jest.fn()\n\n      render(\n        <ConfirmModal open={true} title='Confirm' onConfirm={onConfirm} confirmText='Confirm' />\n      )\n\n      const confirmButton = screen.getByRole('button', { name: /confirm/i })\n      await user.click(confirmButton)\n\n      expect(onConfirm).toHaveBeenCalled()\n    })\n\n    it('calls onCancel when cancel button is clicked', async () => {\n      const user = userEvent.setup()\n      const onCancel = jest.fn()\n\n      render(<ConfirmModal open={true} title='Confirm' onCancel={onCancel} cancelText='Cancel' />)\n\n      const cancelButton = screen.getByRole('button', { name: /cancel/i })\n      await user.click(cancelButton)\n\n      expect(onCancel).toHaveBeenCalled()\n    })\n\n    it('shows loading state', () => {\n      render(<ConfirmModal open={true} title='Confirm' loading={true} confirmText='Confirm' />)\n\n      expect(screen.getByText('Procesando...')).toBeInTheDocument()\n      expect(screen.getByRole('button', { name: /procesando/i })).toBeDisabled()\n    })\n\n    it('renders different variants with correct icons', () => {\n      const variants = ['destructive', 'warning', 'success', 'info'] as const\n\n      variants.forEach(variant => {\n        const { unmount } = render(\n          <ConfirmModal open={true} title={`${variant} modal`} variant={variant} />\n        )\n\n        // Verificar que el modal se renderiza (el ícono específico es difícil de testear)\n        expect(screen.getByText(`${variant} modal`)).toBeInTheDocument()\n        unmount()\n      })\n    })\n  })\n\n  // Test de QuickViewModal eliminado ya que el componente fue removido\n  // describe('QuickViewModal', () => {\n  //   it('renders with large size by default', () => {\n  //     render(\n  //       <QuickViewModal open={true}>\n  //         <div>Product details</div>\n  //       </QuickViewModal>\n  //     )\n\n  //     expect(screen.getByText('Product details')).toBeInTheDocument()\n  //     expect(screen.getByRole('dialog')).toHaveClass('max-w-4xl')\n  //   })\n  // })\n\n  describe('AddToCartModal', () => {\n    it('renders product information', () => {\n      render(\n        <AddToCartModal open={true} productName='Test Product' productImage='/test-image.jpg' />\n      )\n\n      expect(screen.getByText('¡Producto agregado al carrito!')).toBeInTheDocument()\n      expect(screen.getByText(/test product/i)).toBeInTheDocument()\n      expect(screen.getByRole('img')).toHaveAttribute('src', '/test-image.jpg')\n    })\n\n    it('calls action handlers', async () => {\n      const user = userEvent.setup()\n      const onContinueShopping = jest.fn()\n      const onGoToCart = jest.fn()\n\n      render(\n        <AddToCartModal\n          open={true}\n          productName='Test Product'\n          onContinueShopping={onContinueShopping}\n          onGoToCart={onGoToCart}\n        />\n      )\n\n      const continueButton = screen.getByRole('button', { name: /seguir comprando/i })\n      const cartButton = screen.getByRole('button', { name: /ver carrito/i })\n\n      await user.click(continueButton)\n      expect(onContinueShopping).toHaveBeenCalled()\n\n      await user.click(cartButton)\n      expect(onGoToCart).toHaveBeenCalled()\n    })\n  })\n\n  describe('useModal hook', () => {\n    function TestComponent() {\n      const { open, openModal, closeModal, toggleModal } = useModal()\n\n      return (\n        <div>\n          <span data-testid='modal-state'>{open ? 'open' : 'closed'}</span>\n          <button onClick={openModal}>Open</button>\n          <button onClick={closeModal}>Close</button>\n          <button onClick={toggleModal}>Toggle</button>\n        </div>\n      )\n    }\n\n    it('manages modal state correctly', async () => {\n      const user = userEvent.setup()\n      render(<TestComponent />)\n\n      const state = screen.getByTestId('modal-state')\n      const openButton = screen.getByRole('button', { name: /open/i })\n      const closeButton = screen.getByRole('button', { name: /close/i })\n      const toggleButton = screen.getByRole('button', { name: /toggle/i })\n\n      // Initial state\n      expect(state).toHaveTextContent('closed')\n\n      // Open modal\n      await user.click(openButton)\n      expect(state).toHaveTextContent('open')\n\n      // Close modal\n      await user.click(closeButton)\n      expect(state).toHaveTextContent('closed')\n\n      // Toggle modal\n      await user.click(toggleButton)\n      expect(state).toHaveTextContent('open')\n\n      await user.click(toggleButton)\n      expect(state).toHaveTextContent('closed')\n    })\n\n    it('accepts default open state', () => {\n      function TestComponentWithDefault() {\n        const { open } = useModal(true)\n        return <span data-testid='modal-state'>{open ? 'open' : 'closed'}</span>\n      }\n\n      render(<TestComponentWithDefault />)\n      expect(screen.getByTestId('modal-state')).toHaveTextContent('open')\n    })\n  })\n\n  describe('Accessibility', () => {\n    it('has proper ARIA attributes', () => {\n      render(\n        <Modal open={true} title='Accessible Modal' description='Modal description'>\n          Content\n        </Modal>\n      )\n\n      const dialog = screen.getByRole('dialog')\n      expect(dialog).toBeInTheDocument()\n      expect(dialog).toHaveAttribute('aria-describedby')\n    })\n\n    it('focuses close button when opened', () => {\n      render(\n        <Modal open={true} title='Test Modal'>\n          Content\n        </Modal>\n      )\n\n      // El foco debería estar en el modal o en el botón de cerrar\n      const closeButton = screen.getByRole('button', { name: /cerrar/i })\n      expect(closeButton).toBeInTheDocument()\n    })\n\n    it('supports keyboard navigation', async () => {\n      const user = userEvent.setup()\n      const onOpenChange = jest.fn()\n\n      render(\n        <Modal open={true} onOpenChange={onOpenChange} title='Test Modal'>\n          Content\n        </Modal>\n      )\n\n      // Escape key should close modal\n      await user.keyboard('{Escape}')\n      expect(onOpenChange).toHaveBeenCalledWith(false)\n    })\n  })\n})\n"],"names":["jest","mock","requireActual","Portal","children","div","data-testid","describe","it","render","Modal","open","title","description","expect","screen","getByText","toBeInTheDocument","user","userEvent","setup","onOpenChange","fn","closeButton","getByRole","name","click","toHaveBeenCalledWith","rerender","size","toHaveClass","trigger","Button","waitFor","ConfirmModal","variant","confirmText","cancelText","onConfirm","confirmButton","toHaveBeenCalled","onCancel","cancelButton","loading","toBeDisabled","variants","forEach","unmount","AddToCartModal","productName","productImage","toHaveAttribute","onContinueShopping","onGoToCart","continueButton","cartButton","TestComponent","openModal","closeModal","toggleModal","useModal","span","button","onClick","state","getByTestId","openButton","toggleButton","toHaveTextContent","TestComponentWithDefault","dialog","keyboard"],"mappings":"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"}