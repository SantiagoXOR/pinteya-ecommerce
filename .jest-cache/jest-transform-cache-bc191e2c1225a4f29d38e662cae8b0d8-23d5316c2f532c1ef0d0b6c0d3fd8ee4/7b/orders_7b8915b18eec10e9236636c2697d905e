67bdbec86b1827d050912bf77cea9717
// ===================================
// PINTEYA E-COMMERCE - ORDERS API FUNCTIONS
// ===================================
"use strict";

/* istanbul ignore next */
function cov_1xr2f5y9r6() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\api\\orders.ts";
  var hash = "33b50c2ca2a12ee2daaca933e0169397cea7e1ca";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\api\\orders.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "2": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "3": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 42,
          column: 3
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 35
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 39
        }
      },
      "6": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 27
        }
      },
      "7": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 33
        }
      },
      "8": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 30
        }
      },
      "9": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 28
        }
      },
      "10": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 29
        }
      },
      "11": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 33
        }
      },
      "12": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 33
        }
      },
      "13": {
        start: {
          line: 43,
          column: 19
        },
        end: {
          line: 43,
          column: 43
        }
      },
      "14": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 85,
          column: 5
        }
      },
      "15": {
        start: {
          line: 46,
          column: 25
        },
        end: {
          line: 52,
          column: 10
        }
      },
      "16": {
        start: {
          line: 54,
          column: 28
        },
        end: {
          line: 54,
          column: 79
        }
      },
      "17": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 61,
          column: 9
        }
      },
      "18": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 60,
          column: 14
        }
      },
      "19": {
        start: {
          line: 62,
          column: 23
        },
        end: {
          line: 62,
          column: 39
        }
      },
      "20": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 69,
          column: 9
        }
      },
      "21": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 68,
          column: 14
        }
      },
      "22": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 76,
          column: 9
        }
      },
      "23": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 75,
          column: 14
        }
      },
      "24": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 22
        }
      },
      "25": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 54
        }
      },
      "26": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 84,
          column: 10
        }
      },
      "27": {
        start: {
          line: 88,
          column: 4
        },
        end: {
          line: 118,
          column: 5
        }
      },
      "28": {
        start: {
          line: 89,
          column: 25
        },
        end: {
          line: 94,
          column: 10
        }
      },
      "29": {
        start: {
          line: 95,
          column: 23
        },
        end: {
          line: 95,
          column: 44
        }
      },
      "30": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 102,
          column: 9
        }
      },
      "31": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 101,
          column: 14
        }
      },
      "32": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 109,
          column: 9
        }
      },
      "33": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 108,
          column: 14
        }
      },
      "34": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 110,
          column: 22
        }
      },
      "35": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 60
        }
      },
      "36": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 117,
          column: 10
        }
      },
      "37": {
        start: {
          line: 121,
          column: 4
        },
        end: {
          line: 152,
          column: 5
        }
      },
      "38": {
        start: {
          line: 122,
          column: 25
        },
        end: {
          line: 128,
          column: 10
        }
      },
      "39": {
        start: {
          line: 129,
          column: 23
        },
        end: {
          line: 129,
          column: 44
        }
      },
      "40": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 136,
          column: 9
        }
      },
      "41": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 135,
          column: 14
        }
      },
      "42": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 143,
          column: 9
        }
      },
      "43": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 142,
          column: 14
        }
      },
      "44": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 144,
          column: 22
        }
      },
      "45": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 146,
          column: 61
        }
      },
      "46": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 151,
          column: 10
        }
      },
      "47": {
        start: {
          line: 155,
          column: 4
        },
        end: {
          line: 185,
          column: 5
        }
      },
      "48": {
        start: {
          line: 156,
          column: 25
        },
        end: {
          line: 161,
          column: 10
        }
      },
      "49": {
        start: {
          line: 162,
          column: 23
        },
        end: {
          line: 162,
          column: 44
        }
      },
      "50": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 169,
          column: 9
        }
      },
      "51": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 168,
          column: 14
        }
      },
      "52": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 176,
          column: 9
        }
      },
      "53": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 175,
          column: 14
        }
      },
      "54": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 177,
          column: 22
        }
      },
      "55": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 179,
          column: 59
        }
      },
      "56": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 184,
          column: 10
        }
      },
      "57": {
        start: {
          line: 188,
          column: 4
        },
        end: {
          line: 218,
          column: 5
        }
      },
      "58": {
        start: {
          line: 189,
          column: 25
        },
        end: {
          line: 194,
          column: 10
        }
      },
      "59": {
        start: {
          line: 195,
          column: 23
        },
        end: {
          line: 195,
          column: 44
        }
      },
      "60": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 202,
          column: 9
        }
      },
      "61": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 201,
          column: 14
        }
      },
      "62": {
        start: {
          line: 203,
          column: 8
        },
        end: {
          line: 209,
          column: 9
        }
      },
      "63": {
        start: {
          line: 204,
          column: 12
        },
        end: {
          line: 208,
          column: 14
        }
      },
      "64": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 210,
          column: 22
        }
      },
      "65": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 212,
          column: 58
        }
      },
      "66": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 217,
          column: 10
        }
      },
      "67": {
        start: {
          line: 221,
          column: 4
        },
        end: {
          line: 227,
          column: 12
        }
      },
      "68": {
        start: {
          line: 221,
          column: 34
        },
        end: {
          line: 227,
          column: 9
        }
      },
      "69": {
        start: {
          line: 230,
          column: 23
        },
        end: {
          line: 232,
          column: 9
        }
      },
      "70": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 231,
          column: 50
        }
      },
      "71": {
        start: {
          line: 233,
          column: 4
        },
        end: {
          line: 233,
          column: 37
        }
      },
      "72": {
        start: {
          line: 236,
          column: 19
        },
        end: {
          line: 236,
          column: 21
        }
      },
      "73": {
        start: {
          line: 238,
          column: 4
        },
        end: {
          line: 240,
          column: 5
        }
      },
      "74": {
        start: {
          line: 239,
          column: 8
        },
        end: {
          line: 239,
          column: 64
        }
      },
      "75": {
        start: {
          line: 241,
          column: 4
        },
        end: {
          line: 251,
          column: 7
        }
      },
      "76": {
        start: {
          line: 242,
          column: 8
        },
        end: {
          line: 244,
          column: 9
        }
      },
      "77": {
        start: {
          line: 243,
          column: 12
        },
        end: {
          line: 243,
          column: 77
        }
      },
      "78": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 247,
          column: 9
        }
      },
      "79": {
        start: {
          line: 246,
          column: 12
        },
        end: {
          line: 246,
          column: 79
        }
      },
      "80": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 250,
          column: 9
        }
      },
      "81": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 249,
          column: 81
        }
      },
      "82": {
        start: {
          line: 253,
          column: 4
        },
        end: {
          line: 255,
          column: 5
        }
      },
      "83": {
        start: {
          line: 254,
          column: 8
        },
        end: {
          line: 254,
          column: 70
        }
      },
      "84": {
        start: {
          line: 256,
          column: 4
        },
        end: {
          line: 258,
          column: 5
        }
      },
      "85": {
        start: {
          line: 257,
          column: 8
        },
        end: {
          line: 257,
          column: 56
        }
      },
      "86": {
        start: {
          line: 260,
          column: 23
        },
        end: {
          line: 260,
          column: 51
        }
      },
      "87": {
        start: {
          line: 261,
          column: 4
        },
        end: {
          line: 263,
          column: 5
        }
      },
      "88": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 262,
          column: 57
        }
      },
      "89": {
        start: {
          line: 265,
          column: 4
        },
        end: {
          line: 272,
          column: 5
        }
      },
      "90": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 268,
          column: 9
        }
      },
      "91": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 267,
          column: 57
        }
      },
      "92": {
        start: {
          line: 269,
          column: 8
        },
        end: {
          line: 271,
          column: 9
        }
      },
      "93": {
        start: {
          line: 270,
          column: 12
        },
        end: {
          line: 270,
          column: 54
        }
      },
      "94": {
        start: {
          line: 273,
          column: 4
        },
        end: {
          line: 276,
          column: 6
        }
      },
      "95": {
        start: {
          line: 279,
          column: 22
        },
        end: {
          line: 310,
          column: 5
        }
      },
      "96": {
        start: {
          line: 311,
          column: 4
        },
        end: {
          line: 315,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 16
          }
        },
        loc: {
          start: {
            line: 8,
            column: 30
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 31
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 35
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 23
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 29
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 26
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 24
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        loc: {
          start: {
            line: 33,
            column: 25
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 33
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        loc: {
          start: {
            line: 36,
            column: 29
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 36
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        loc: {
          start: {
            line: 39,
            column: 29
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 39
      },
      "10": {
        name: "createOrder",
        decl: {
          start: {
            line: 44,
            column: 15
          },
          end: {
            line: 44,
            column: 26
          }
        },
        loc: {
          start: {
            line: 44,
            column: 38
          },
          end: {
            line: 86,
            column: 1
          }
        },
        line: 44
      },
      "11": {
        name: "getOrderStatus",
        decl: {
          start: {
            line: 87,
            column: 15
          },
          end: {
            line: 87,
            column: 29
          }
        },
        loc: {
          start: {
            line: 87,
            column: 39
          },
          end: {
            line: 119,
            column: 1
          }
        },
        line: 87
      },
      "12": {
        name: "updateOrderStatus",
        decl: {
          start: {
            line: 120,
            column: 15
          },
          end: {
            line: 120,
            column: 32
          }
        },
        loc: {
          start: {
            line: 120,
            column: 55
          },
          end: {
            line: 153,
            column: 1
          }
        },
        line: 120
      },
      "13": {
        name: "getUserOrders",
        decl: {
          start: {
            line: 154,
            column: 15
          },
          end: {
            line: 154,
            column: 28
          }
        },
        loc: {
          start: {
            line: 154,
            column: 31
          },
          end: {
            line: 186,
            column: 1
          }
        },
        line: 154
      },
      "14": {
        name: "getUserOrder",
        decl: {
          start: {
            line: 187,
            column: 15
          },
          end: {
            line: 187,
            column: 27
          }
        },
        loc: {
          start: {
            line: 187,
            column: 37
          },
          end: {
            line: 219,
            column: 1
          }
        },
        line: 187
      },
      "15": {
        name: "convertCartToOrderItems",
        decl: {
          start: {
            line: 220,
            column: 9
          },
          end: {
            line: 220,
            column: 32
          }
        },
        loc: {
          start: {
            line: 220,
            column: 44
          },
          end: {
            line: 228,
            column: 1
          }
        },
        line: 220
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 221,
            column: 25
          },
          end: {
            line: 221,
            column: 26
          }
        },
        loc: {
          start: {
            line: 221,
            column: 34
          },
          end: {
            line: 227,
            column: 9
          }
        },
        line: 221
      },
      "17": {
        name: "calculateOrderTotal",
        decl: {
          start: {
            line: 229,
            column: 9
          },
          end: {
            line: 229,
            column: 28
          }
        },
        loc: {
          start: {
            line: 229,
            column: 54
          },
          end: {
            line: 234,
            column: 1
          }
        },
        line: 229
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 230,
            column: 36
          },
          end: {
            line: 230,
            column: 37
          }
        },
        loc: {
          start: {
            line: 230,
            column: 51
          },
          end: {
            line: 232,
            column: 5
          }
        },
        line: 230
      },
      "19": {
        name: "validateOrderData",
        decl: {
          start: {
            line: 235,
            column: 9
          },
          end: {
            line: 235,
            column: 26
          }
        },
        loc: {
          start: {
            line: 235,
            column: 38
          },
          end: {
            line: 277,
            column: 1
          }
        },
        line: 235
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 241,
            column: 28
          },
          end: {
            line: 241,
            column: 29
          }
        },
        loc: {
          start: {
            line: 241,
            column: 43
          },
          end: {
            line: 251,
            column: 5
          }
        },
        line: 241
      },
      "21": {
        name: "formatOrderStatus",
        decl: {
          start: {
            line: 278,
            column: 9
          },
          end: {
            line: 278,
            column: 26
          }
        },
        loc: {
          start: {
            line: 278,
            column: 35
          },
          end: {
            line: 316,
            column: 1
          }
        },
        line: 278
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 61,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 61,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "1": {
        loc: {
          start: {
            line: 59,
            column: 23
          },
          end: {
            line: 59,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 23
          },
          end: {
            line: 59,
            column: 40
          }
        }, {
          start: {
            line: 59,
            column: 44
          },
          end: {
            line: 59,
            column: 72
          }
        }],
        line: 59
      },
      "2": {
        loc: {
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 69,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 69,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "3": {
        loc: {
          start: {
            line: 67,
            column: 23
          },
          end: {
            line: 67,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 23
          },
          end: {
            line: 67,
            column: 36
          }
        }, {
          start: {
            line: 67,
            column: 40
          },
          end: {
            line: 67,
            column: 61
          }
        }],
        line: 67
      },
      "4": {
        loc: {
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "5": {
        loc: {
          start: {
            line: 83,
            column: 19
          },
          end: {
            line: 83,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 83,
            column: 19
          },
          end: {
            line: 83,
            column: 32
          }
        }, {
          start: {
            line: 83,
            column: 36
          },
          end: {
            line: 83,
            column: 55
          }
        }],
        line: 83
      },
      "6": {
        loc: {
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 96
      },
      "7": {
        loc: {
          start: {
            line: 100,
            column: 23
          },
          end: {
            line: 100,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 100,
            column: 23
          },
          end: {
            line: 100,
            column: 36
          }
        }, {
          start: {
            line: 100,
            column: 40
          },
          end: {
            line: 100,
            column: 74
          }
        }],
        line: 100
      },
      "8": {
        loc: {
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "9": {
        loc: {
          start: {
            line: 116,
            column: 19
          },
          end: {
            line: 116,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 116,
            column: 19
          },
          end: {
            line: 116,
            column: 32
          }
        }, {
          start: {
            line: 116,
            column: 36
          },
          end: {
            line: 116,
            column: 55
          }
        }],
        line: 116
      },
      "10": {
        loc: {
          start: {
            line: 130,
            column: 8
          },
          end: {
            line: 136,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 130,
            column: 8
          },
          end: {
            line: 136,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 130
      },
      "11": {
        loc: {
          start: {
            line: 134,
            column: 23
          },
          end: {
            line: 134,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 134,
            column: 23
          },
          end: {
            line: 134,
            column: 36
          }
        }, {
          start: {
            line: 134,
            column: 40
          },
          end: {
            line: 134,
            column: 76
          }
        }],
        line: 134
      },
      "12": {
        loc: {
          start: {
            line: 137,
            column: 8
          },
          end: {
            line: 143,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 137,
            column: 8
          },
          end: {
            line: 143,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 137
      },
      "13": {
        loc: {
          start: {
            line: 150,
            column: 19
          },
          end: {
            line: 150,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 150,
            column: 19
          },
          end: {
            line: 150,
            column: 32
          }
        }, {
          start: {
            line: 150,
            column: 36
          },
          end: {
            line: 150,
            column: 55
          }
        }],
        line: 150
      },
      "14": {
        loc: {
          start: {
            line: 163,
            column: 8
          },
          end: {
            line: 169,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 163,
            column: 8
          },
          end: {
            line: 169,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 163
      },
      "15": {
        loc: {
          start: {
            line: 167,
            column: 23
          },
          end: {
            line: 167,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 167,
            column: 23
          },
          end: {
            line: 167,
            column: 36
          }
        }, {
          start: {
            line: 167,
            column: 40
          },
          end: {
            line: 167,
            column: 66
          }
        }],
        line: 167
      },
      "16": {
        loc: {
          start: {
            line: 170,
            column: 8
          },
          end: {
            line: 176,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 170,
            column: 8
          },
          end: {
            line: 176,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 170
      },
      "17": {
        loc: {
          start: {
            line: 183,
            column: 19
          },
          end: {
            line: 183,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 183,
            column: 19
          },
          end: {
            line: 183,
            column: 32
          }
        }, {
          start: {
            line: 183,
            column: 36
          },
          end: {
            line: 183,
            column: 55
          }
        }],
        line: 183
      },
      "18": {
        loc: {
          start: {
            line: 196,
            column: 8
          },
          end: {
            line: 202,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 196,
            column: 8
          },
          end: {
            line: 202,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 196
      },
      "19": {
        loc: {
          start: {
            line: 200,
            column: 23
          },
          end: {
            line: 200,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 200,
            column: 23
          },
          end: {
            line: 200,
            column: 36
          }
        }, {
          start: {
            line: 200,
            column: 40
          },
          end: {
            line: 200,
            column: 64
          }
        }],
        line: 200
      },
      "20": {
        loc: {
          start: {
            line: 203,
            column: 8
          },
          end: {
            line: 209,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 203,
            column: 8
          },
          end: {
            line: 209,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 203
      },
      "21": {
        loc: {
          start: {
            line: 216,
            column: 19
          },
          end: {
            line: 216,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 216,
            column: 19
          },
          end: {
            line: 216,
            column: 32
          }
        }, {
          start: {
            line: 216,
            column: 36
          },
          end: {
            line: 216,
            column: 55
          }
        }],
        line: 216
      },
      "22": {
        loc: {
          start: {
            line: 224,
            column: 19
          },
          end: {
            line: 224,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 224,
            column: 19
          },
          end: {
            line: 224,
            column: 40
          }
        }, {
          start: {
            line: 224,
            column: 44
          },
          end: {
            line: 224,
            column: 54
          }
        }],
        line: 224
      },
      "23": {
        loc: {
          start: {
            line: 226,
            column: 19
          },
          end: {
            line: 226,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 226,
            column: 19
          },
          end: {
            line: 226,
            column: 45
          }
        }, {
          start: {
            line: 226,
            column: 49
          },
          end: {
            line: 226,
            column: 51
          }
        }],
        line: 226
      },
      "24": {
        loc: {
          start: {
            line: 229,
            column: 36
          },
          end: {
            line: 229,
            column: 52
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 229,
            column: 51
          },
          end: {
            line: 229,
            column: 52
          }
        }],
        line: 229
      },
      "25": {
        loc: {
          start: {
            line: 238,
            column: 4
          },
          end: {
            line: 240,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 238,
            column: 4
          },
          end: {
            line: 240,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 238
      },
      "26": {
        loc: {
          start: {
            line: 238,
            column: 8
          },
          end: {
            line: 238,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 238,
            column: 8
          },
          end: {
            line: 238,
            column: 24
          }
        }, {
          start: {
            line: 238,
            column: 28
          },
          end: {
            line: 238,
            column: 56
          }
        }],
        line: 238
      },
      "27": {
        loc: {
          start: {
            line: 242,
            column: 8
          },
          end: {
            line: 244,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 242,
            column: 8
          },
          end: {
            line: 244,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 242
      },
      "28": {
        loc: {
          start: {
            line: 242,
            column: 12
          },
          end: {
            line: 242,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 242,
            column: 12
          },
          end: {
            line: 242,
            column: 20
          }
        }, {
          start: {
            line: 242,
            column: 24
          },
          end: {
            line: 242,
            column: 34
          }
        }],
        line: 242
      },
      "29": {
        loc: {
          start: {
            line: 245,
            column: 8
          },
          end: {
            line: 247,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 245,
            column: 8
          },
          end: {
            line: 247,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 245
      },
      "30": {
        loc: {
          start: {
            line: 248,
            column: 8
          },
          end: {
            line: 250,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 248,
            column: 8
          },
          end: {
            line: 250,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 248
      },
      "31": {
        loc: {
          start: {
            line: 253,
            column: 4
          },
          end: {
            line: 255,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 253,
            column: 4
          },
          end: {
            line: 255,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 253
      },
      "32": {
        loc: {
          start: {
            line: 253,
            column: 8
          },
          end: {
            line: 253,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 253,
            column: 8
          },
          end: {
            line: 253,
            column: 29
          }
        }, {
          start: {
            line: 253,
            column: 33
          },
          end: {
            line: 253,
            column: 57
          }
        }],
        line: 253
      },
      "33": {
        loc: {
          start: {
            line: 256,
            column: 4
          },
          end: {
            line: 258,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 256,
            column: 4
          },
          end: {
            line: 258,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 256
      },
      "34": {
        loc: {
          start: {
            line: 261,
            column: 4
          },
          end: {
            line: 263,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 261,
            column: 4
          },
          end: {
            line: 263,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 261
      },
      "35": {
        loc: {
          start: {
            line: 261,
            column: 8
          },
          end: {
            line: 261,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 261,
            column: 8
          },
          end: {
            line: 261,
            column: 29
          }
        }, {
          start: {
            line: 261,
            column: 33
          },
          end: {
            line: 261,
            column: 72
          }
        }],
        line: 261
      },
      "36": {
        loc: {
          start: {
            line: 265,
            column: 4
          },
          end: {
            line: 272,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 265,
            column: 4
          },
          end: {
            line: 272,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 265
      },
      "37": {
        loc: {
          start: {
            line: 266,
            column: 8
          },
          end: {
            line: 268,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 266,
            column: 8
          },
          end: {
            line: 268,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 266
      },
      "38": {
        loc: {
          start: {
            line: 266,
            column: 12
          },
          end: {
            line: 266,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 266,
            column: 12
          },
          end: {
            line: 266,
            column: 51
          }
        }, {
          start: {
            line: 266,
            column: 55
          },
          end: {
            line: 266,
            column: 92
          }
        }],
        line: 266
      },
      "39": {
        loc: {
          start: {
            line: 269,
            column: 8
          },
          end: {
            line: 271,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 269,
            column: 8
          },
          end: {
            line: 271,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 269
      },
      "40": {
        loc: {
          start: {
            line: 311,
            column: 11
          },
          end: {
            line: 315,
            column: 5
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 311,
            column: 11
          },
          end: {
            line: 311,
            column: 28
          }
        }, {
          start: {
            line: 311,
            column: 32
          },
          end: {
            line: 315,
            column: 5
          }
        }],
        line: 311
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\api\\orders.ts"],
      sourcesContent: ["// ===================================\r\n// PINTEYA E-COMMERCE - ORDERS API FUNCTIONS\r\n// ===================================\r\n\r\nimport { ApiResponse } from '@/types/api';\r\nimport { CreateOrderRequest } from '@/types/mercadopago';\r\nimport { safeApiResponseJson } from '@/lib/json-utils';\r\n\r\n/**\r\n * Crea una nueva orden y preferencia de pago\r\n */\r\nexport async function createOrder(orderData: CreateOrderRequest): Promise<ApiResponse<any>> {\r\n  try {\r\n    const response = await fetch('/api/payments/create-preference', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(orderData),\r\n    });\r\n\r\n    // Usar parsing seguro de JSON\r\n    const parseResult = await safeApiResponseJson<ApiResponse<any>>(response);\r\n\r\n    if (!parseResult.success) {\r\n      return {\r\n        data: null,\r\n        success: false,\r\n        error: parseResult.error || 'Error parsing API response',\r\n      };\r\n    }\r\n\r\n    const result = parseResult.data;\r\n\r\n    if (!response.ok) {\r\n      return {\r\n        data: null,\r\n        success: false,\r\n        error: result?.error || 'Error creando orden',\r\n      };\r\n    }\r\n\r\n    if (!result) {\r\n      return {\r\n        data: null,\r\n        success: false,\r\n        error: 'Error: respuesta nula del servidor',\r\n      };\r\n    }\r\n\r\n    return result;\r\n  } catch (error: any) {\r\n    console.error('Error creating order:', error);\r\n    return {\r\n      data: null,\r\n      success: false,\r\n      error: error.message || 'Error de conexi\xF3n',\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Obtiene el estado de una orden y su pago\r\n */\r\nexport async function getOrderStatus(orderId: string): Promise<ApiResponse<any>> {\r\n  try {\r\n    const response = await fetch(`/api/payments/status/${orderId}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n\r\n    const result = await response.json();\r\n\r\n    if (!response.ok) {\r\n      return {\r\n        data: null,\r\n        success: false,\r\n        error: result?.error || 'Error obteniendo estado de orden',\r\n      };\r\n    }\r\n\r\n    if (!result) {\r\n      return {\r\n        data: null,\r\n        success: false,\r\n        error: 'Error: respuesta nula del servidor',\r\n      };\r\n    }\r\n\r\n    return result;\r\n  } catch (error: any) {\r\n    console.error('Error getting order status:', error);\r\n    return {\r\n      data: null,\r\n      success: false,\r\n      error: error.message || 'Error de conexi\xF3n',\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Actualiza el estado de una orden despu\xE9s de redirecci\xF3n de MercadoPago\r\n */\r\nexport async function updateOrderStatus(\r\n  orderId: string, \r\n  paymentData: {\r\n    payment_id?: string;\r\n    status?: string;\r\n    merchant_order_id?: string;\r\n  }\r\n): Promise<ApiResponse<any>> {\r\n  try {\r\n    const response = await fetch(`/api/payments/status/${orderId}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(paymentData),\r\n    });\r\n\r\n    const result = await response.json();\r\n\r\n    if (!response.ok) {\r\n      return {\r\n        data: null,\r\n        success: false,\r\n        error: result?.error || 'Error actualizando estado de orden',\r\n      };\r\n    }\r\n\r\n    if (!result) {\r\n      return {\r\n        data: null,\r\n        success: false,\r\n        error: 'Error: respuesta nula del servidor',\r\n      };\r\n    }\r\n\r\n    return result;\r\n  } catch (error: any) {\r\n    console.error('Error updating order status:', error);\r\n    return {\r\n      data: null,\r\n      success: false,\r\n      error: error.message || 'Error de conexi\xF3n',\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Obtiene todas las \xF3rdenes del usuario autenticado\r\n */\r\nexport async function getUserOrders(): Promise<ApiResponse<any[]>> {\r\n  try {\r\n    const response = await fetch('/api/orders', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n\r\n    const result = await response.json();\r\n\r\n    if (!response.ok) {\r\n      return {\r\n        data: [],\r\n        success: false,\r\n        error: result?.error || 'Error obteniendo \xF3rdenes',\r\n      };\r\n    }\r\n\r\n    if (!result) {\r\n      return {\r\n        data: [],\r\n        success: false,\r\n        error: 'Error: respuesta nula del servidor',\r\n      };\r\n    }\r\n\r\n    return result;\r\n  } catch (error: any) {\r\n    console.error('Error getting user orders:', error);\r\n    return {\r\n      data: [],\r\n      success: false,\r\n      error: error.message || 'Error de conexi\xF3n',\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Obtiene una orden espec\xEDfica del usuario\r\n */\r\nexport async function getUserOrder(orderId: string): Promise<ApiResponse<any>> {\r\n  try {\r\n    const response = await fetch(`/api/orders/${orderId}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n\r\n    const result = await response.json();\r\n\r\n    if (!response.ok) {\r\n      return {\r\n        data: null,\r\n        success: false,\r\n        error: result?.error || 'Error obteniendo orden',\r\n      };\r\n    }\r\n\r\n    if (!result) {\r\n      return {\r\n        data: null,\r\n        success: false,\r\n        error: 'Error: respuesta nula del servidor',\r\n      };\r\n    }\r\n\r\n    return result;\r\n  } catch (error: any) {\r\n    console.error('Error getting user order:', error);\r\n    return {\r\n      data: null,\r\n      success: false,\r\n      error: error.message || 'Error de conexi\xF3n',\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Convierte items del carrito al formato requerido para crear orden\r\n */\r\nexport function convertCartToOrderItems(cartItems: any[]): CreateOrderRequest['items'] {\r\n  return cartItems.map(item => ({\r\n    id: item.id.toString(),\r\n    name: item.name,\r\n    price: item.discounted_price || item.price,\r\n    quantity: item.quantity,\r\n    image: item.images?.previews?.[0] || '',\r\n  }));\r\n}\r\n\r\n/**\r\n * Calcula el total de una orden\r\n */\r\nexport function calculateOrderTotal(items: CreateOrderRequest['items'], shippingCost: number = 0): number {\r\n  const itemsTotal = items.reduce((total, item) => {\r\n    return total + (item.price * item.quantity);\r\n  }, 0);\r\n  \r\n  return itemsTotal + shippingCost;\r\n}\r\n\r\n/**\r\n * Valida los datos de una orden antes de enviarla\r\n */\r\nexport function validateOrderData(orderData: CreateOrderRequest): { isValid: boolean; errors: string[] } {\r\n  const errors: string[] = [];\r\n\r\n  // Validar items\r\n  if (!orderData.items || orderData.items.length === 0) {\r\n    errors.push('La orden debe tener al menos un producto');\r\n  }\r\n\r\n  orderData.items.forEach((item, index) => {\r\n    if (!item.id || !item.name) {\r\n      errors.push(`Producto ${index + 1}: ID y nombre son requeridos`);\r\n    }\r\n    if (item.price <= 0) {\r\n      errors.push(`Producto ${index + 1}: El precio debe ser mayor a 0`);\r\n    }\r\n    if (item.quantity <= 0) {\r\n      errors.push(`Producto ${index + 1}: La cantidad debe ser mayor a 0`);\r\n    }\r\n  });\r\n\r\n  // Validar payer\r\n  if (!orderData.payer.name || !orderData.payer.surname) {\r\n    errors.push('Nombre y apellido del comprador son requeridos');\r\n  }\r\n  if (!orderData.payer.email) {\r\n    errors.push('Email del comprador es requerido');\r\n  }\r\n\r\n  // Validar email format\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  if (orderData.payer.email && !emailRegex.test(orderData.payer.email)) {\r\n    errors.push('El formato del email no es v\xE1lido');\r\n  }\r\n\r\n  // Validar shipping si est\xE1 presente\r\n  if (orderData.shipping) {\r\n    if (!orderData.shipping.address.street_name || !orderData.shipping.address.city_name) {\r\n      errors.push('Direcci\xF3n de env\xEDo incompleta');\r\n    }\r\n    if (!orderData.shipping.address.zip_code) {\r\n      errors.push('C\xF3digo postal es requerido');\r\n    }\r\n  }\r\n\r\n  return {\r\n    isValid: errors.length === 0,\r\n    errors,\r\n  };\r\n}\r\n\r\n/**\r\n * Formatea el estado de una orden para mostrar al usuario\r\n */\r\nexport function formatOrderStatus(status: string): { label: string; color: string; description: string } {\r\n  const statusMap: Record<string, { label: string; color: string; description: string }> = {\r\n    pending: {\r\n      label: 'Pendiente',\r\n      color: 'yellow',\r\n      description: 'Esperando confirmaci\xF3n de pago',\r\n    },\r\n    paid: {\r\n      label: 'Pagado',\r\n      color: 'green',\r\n      description: 'Pago confirmado, preparando env\xEDo',\r\n    },\r\n    shipped: {\r\n      label: 'Enviado',\r\n      color: 'blue',\r\n      description: 'Producto en camino',\r\n    },\r\n    delivered: {\r\n      label: 'Entregado',\r\n      color: 'green',\r\n      description: 'Producto entregado exitosamente',\r\n    },\r\n    cancelled: {\r\n      label: 'Cancelado',\r\n      color: 'red',\r\n      description: 'Orden cancelada',\r\n    },\r\n    refunded: {\r\n      label: 'Reembolsado',\r\n      color: 'gray',\r\n      description: 'Pago reembolsado',\r\n    },\r\n  };\r\n\r\n  return statusMap[status] || {\r\n    label: 'Desconocido',\r\n    color: 'gray',\r\n    description: 'Estado no reconocido',\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["calculateOrderTotal", "convertCartToOrderItems", "createOrder", "formatOrderStatus", "getOrderStatus", "getUserOrder", "getUserOrders", "updateOrderStatus", "validateOrderData", "orderData", "response", "fetch", "method", "headers", "body", "JSON", "stringify", "parseResult", "safeApiResponseJson", "success", "data", "error", "result", "ok", "console", "message", "orderId", "json", "paymentData", "cartItems", "map", "item", "id", "toString", "name", "price", "discounted_price", "quantity", "image", "images", "previews", "items", "shippingCost", "itemsTotal", "reduce", "total", "errors", "length", "push", "forEach", "index", "payer", "surname", "email", "emailRegex", "test", "shipping", "address", "street_name", "city_name", "zip_code", "isValid", "status", "statusMap", "pending", "label", "color", "description", "paid", "shipped", "delivered", "cancelled", "refunded"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "33b50c2ca2a12ee2daaca933e0169397cea7e1ca"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1xr2f5y9r6 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1xr2f5y9r6();
cov_1xr2f5y9r6().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1xr2f5y9r6().f[0]++;
  cov_1xr2f5y9r6().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1xr2f5y9r6().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1xr2f5y9r6().s[3]++;
_export(exports, {
  get calculateOrderTotal() {
    /* istanbul ignore next */
    cov_1xr2f5y9r6().f[1]++;
    cov_1xr2f5y9r6().s[4]++;
    return calculateOrderTotal;
  },
  get convertCartToOrderItems() {
    /* istanbul ignore next */
    cov_1xr2f5y9r6().f[2]++;
    cov_1xr2f5y9r6().s[5]++;
    return convertCartToOrderItems;
  },
  get createOrder() {
    /* istanbul ignore next */
    cov_1xr2f5y9r6().f[3]++;
    cov_1xr2f5y9r6().s[6]++;
    return createOrder;
  },
  get formatOrderStatus() {
    /* istanbul ignore next */
    cov_1xr2f5y9r6().f[4]++;
    cov_1xr2f5y9r6().s[7]++;
    return formatOrderStatus;
  },
  get getOrderStatus() {
    /* istanbul ignore next */
    cov_1xr2f5y9r6().f[5]++;
    cov_1xr2f5y9r6().s[8]++;
    return getOrderStatus;
  },
  get getUserOrder() {
    /* istanbul ignore next */
    cov_1xr2f5y9r6().f[6]++;
    cov_1xr2f5y9r6().s[9]++;
    return getUserOrder;
  },
  get getUserOrders() {
    /* istanbul ignore next */
    cov_1xr2f5y9r6().f[7]++;
    cov_1xr2f5y9r6().s[10]++;
    return getUserOrders;
  },
  get updateOrderStatus() {
    /* istanbul ignore next */
    cov_1xr2f5y9r6().f[8]++;
    cov_1xr2f5y9r6().s[11]++;
    return updateOrderStatus;
  },
  get validateOrderData() {
    /* istanbul ignore next */
    cov_1xr2f5y9r6().f[9]++;
    cov_1xr2f5y9r6().s[12]++;
    return validateOrderData;
  }
});
const _jsonutils =
/* istanbul ignore next */
(cov_1xr2f5y9r6().s[13]++, require("../json-utils"));
async function createOrder(orderData) {
  /* istanbul ignore next */
  cov_1xr2f5y9r6().f[10]++;
  cov_1xr2f5y9r6().s[14]++;
  try {
    const response =
    /* istanbul ignore next */
    (cov_1xr2f5y9r6().s[15]++, await fetch('/api/payments/create-preference', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(orderData)
    }));
    // Usar parsing seguro de JSON
    const parseResult =
    /* istanbul ignore next */
    (cov_1xr2f5y9r6().s[16]++, await (0, _jsonutils.safeApiResponseJson)(response));
    /* istanbul ignore next */
    cov_1xr2f5y9r6().s[17]++;
    if (!parseResult.success) {
      /* istanbul ignore next */
      cov_1xr2f5y9r6().b[0][0]++;
      cov_1xr2f5y9r6().s[18]++;
      return {
        data: null,
        success: false,
        error:
        /* istanbul ignore next */
        (cov_1xr2f5y9r6().b[1][0]++, parseResult.error) ||
        /* istanbul ignore next */
        (cov_1xr2f5y9r6().b[1][1]++, 'Error parsing API response')
      };
    } else
    /* istanbul ignore next */
    {
      cov_1xr2f5y9r6().b[0][1]++;
    }
    const result =
    /* istanbul ignore next */
    (cov_1xr2f5y9r6().s[19]++, parseResult.data);
    /* istanbul ignore next */
    cov_1xr2f5y9r6().s[20]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_1xr2f5y9r6().b[2][0]++;
      cov_1xr2f5y9r6().s[21]++;
      return {
        data: null,
        success: false,
        error:
        /* istanbul ignore next */
        (cov_1xr2f5y9r6().b[3][0]++, result?.error) ||
        /* istanbul ignore next */
        (cov_1xr2f5y9r6().b[3][1]++, 'Error creando orden')
      };
    } else
    /* istanbul ignore next */
    {
      cov_1xr2f5y9r6().b[2][1]++;
    }
    cov_1xr2f5y9r6().s[22]++;
    if (!result) {
      /* istanbul ignore next */
      cov_1xr2f5y9r6().b[4][0]++;
      cov_1xr2f5y9r6().s[23]++;
      return {
        data: null,
        success: false,
        error: 'Error: respuesta nula del servidor'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1xr2f5y9r6().b[4][1]++;
    }
    cov_1xr2f5y9r6().s[24]++;
    return result;
  } catch (error) {
    /* istanbul ignore next */
    cov_1xr2f5y9r6().s[25]++;
    console.error('Error creating order:', error);
    /* istanbul ignore next */
    cov_1xr2f5y9r6().s[26]++;
    return {
      data: null,
      success: false,
      error:
      /* istanbul ignore next */
      (cov_1xr2f5y9r6().b[5][0]++, error.message) ||
      /* istanbul ignore next */
      (cov_1xr2f5y9r6().b[5][1]++, 'Error de conexión')
    };
  }
}
async function getOrderStatus(orderId) {
  /* istanbul ignore next */
  cov_1xr2f5y9r6().f[11]++;
  cov_1xr2f5y9r6().s[27]++;
  try {
    const response =
    /* istanbul ignore next */
    (cov_1xr2f5y9r6().s[28]++, await fetch(`/api/payments/status/${orderId}`, {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json'
      }
    }));
    const result =
    /* istanbul ignore next */
    (cov_1xr2f5y9r6().s[29]++, await response.json());
    /* istanbul ignore next */
    cov_1xr2f5y9r6().s[30]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_1xr2f5y9r6().b[6][0]++;
      cov_1xr2f5y9r6().s[31]++;
      return {
        data: null,
        success: false,
        error:
        /* istanbul ignore next */
        (cov_1xr2f5y9r6().b[7][0]++, result?.error) ||
        /* istanbul ignore next */
        (cov_1xr2f5y9r6().b[7][1]++, 'Error obteniendo estado de orden')
      };
    } else
    /* istanbul ignore next */
    {
      cov_1xr2f5y9r6().b[6][1]++;
    }
    cov_1xr2f5y9r6().s[32]++;
    if (!result) {
      /* istanbul ignore next */
      cov_1xr2f5y9r6().b[8][0]++;
      cov_1xr2f5y9r6().s[33]++;
      return {
        data: null,
        success: false,
        error: 'Error: respuesta nula del servidor'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1xr2f5y9r6().b[8][1]++;
    }
    cov_1xr2f5y9r6().s[34]++;
    return result;
  } catch (error) {
    /* istanbul ignore next */
    cov_1xr2f5y9r6().s[35]++;
    console.error('Error getting order status:', error);
    /* istanbul ignore next */
    cov_1xr2f5y9r6().s[36]++;
    return {
      data: null,
      success: false,
      error:
      /* istanbul ignore next */
      (cov_1xr2f5y9r6().b[9][0]++, error.message) ||
      /* istanbul ignore next */
      (cov_1xr2f5y9r6().b[9][1]++, 'Error de conexión')
    };
  }
}
async function updateOrderStatus(orderId, paymentData) {
  /* istanbul ignore next */
  cov_1xr2f5y9r6().f[12]++;
  cov_1xr2f5y9r6().s[37]++;
  try {
    const response =
    /* istanbul ignore next */
    (cov_1xr2f5y9r6().s[38]++, await fetch(`/api/payments/status/${orderId}`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(paymentData)
    }));
    const result =
    /* istanbul ignore next */
    (cov_1xr2f5y9r6().s[39]++, await response.json());
    /* istanbul ignore next */
    cov_1xr2f5y9r6().s[40]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_1xr2f5y9r6().b[10][0]++;
      cov_1xr2f5y9r6().s[41]++;
      return {
        data: null,
        success: false,
        error:
        /* istanbul ignore next */
        (cov_1xr2f5y9r6().b[11][0]++, result?.error) ||
        /* istanbul ignore next */
        (cov_1xr2f5y9r6().b[11][1]++, 'Error actualizando estado de orden')
      };
    } else
    /* istanbul ignore next */
    {
      cov_1xr2f5y9r6().b[10][1]++;
    }
    cov_1xr2f5y9r6().s[42]++;
    if (!result) {
      /* istanbul ignore next */
      cov_1xr2f5y9r6().b[12][0]++;
      cov_1xr2f5y9r6().s[43]++;
      return {
        data: null,
        success: false,
        error: 'Error: respuesta nula del servidor'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1xr2f5y9r6().b[12][1]++;
    }
    cov_1xr2f5y9r6().s[44]++;
    return result;
  } catch (error) {
    /* istanbul ignore next */
    cov_1xr2f5y9r6().s[45]++;
    console.error('Error updating order status:', error);
    /* istanbul ignore next */
    cov_1xr2f5y9r6().s[46]++;
    return {
      data: null,
      success: false,
      error:
      /* istanbul ignore next */
      (cov_1xr2f5y9r6().b[13][0]++, error.message) ||
      /* istanbul ignore next */
      (cov_1xr2f5y9r6().b[13][1]++, 'Error de conexión')
    };
  }
}
async function getUserOrders() {
  /* istanbul ignore next */
  cov_1xr2f5y9r6().f[13]++;
  cov_1xr2f5y9r6().s[47]++;
  try {
    const response =
    /* istanbul ignore next */
    (cov_1xr2f5y9r6().s[48]++, await fetch('/api/orders', {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json'
      }
    }));
    const result =
    /* istanbul ignore next */
    (cov_1xr2f5y9r6().s[49]++, await response.json());
    /* istanbul ignore next */
    cov_1xr2f5y9r6().s[50]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_1xr2f5y9r6().b[14][0]++;
      cov_1xr2f5y9r6().s[51]++;
      return {
        data: [],
        success: false,
        error:
        /* istanbul ignore next */
        (cov_1xr2f5y9r6().b[15][0]++, result?.error) ||
        /* istanbul ignore next */
        (cov_1xr2f5y9r6().b[15][1]++, 'Error obteniendo órdenes')
      };
    } else
    /* istanbul ignore next */
    {
      cov_1xr2f5y9r6().b[14][1]++;
    }
    cov_1xr2f5y9r6().s[52]++;
    if (!result) {
      /* istanbul ignore next */
      cov_1xr2f5y9r6().b[16][0]++;
      cov_1xr2f5y9r6().s[53]++;
      return {
        data: [],
        success: false,
        error: 'Error: respuesta nula del servidor'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1xr2f5y9r6().b[16][1]++;
    }
    cov_1xr2f5y9r6().s[54]++;
    return result;
  } catch (error) {
    /* istanbul ignore next */
    cov_1xr2f5y9r6().s[55]++;
    console.error('Error getting user orders:', error);
    /* istanbul ignore next */
    cov_1xr2f5y9r6().s[56]++;
    return {
      data: [],
      success: false,
      error:
      /* istanbul ignore next */
      (cov_1xr2f5y9r6().b[17][0]++, error.message) ||
      /* istanbul ignore next */
      (cov_1xr2f5y9r6().b[17][1]++, 'Error de conexión')
    };
  }
}
async function getUserOrder(orderId) {
  /* istanbul ignore next */
  cov_1xr2f5y9r6().f[14]++;
  cov_1xr2f5y9r6().s[57]++;
  try {
    const response =
    /* istanbul ignore next */
    (cov_1xr2f5y9r6().s[58]++, await fetch(`/api/orders/${orderId}`, {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json'
      }
    }));
    const result =
    /* istanbul ignore next */
    (cov_1xr2f5y9r6().s[59]++, await response.json());
    /* istanbul ignore next */
    cov_1xr2f5y9r6().s[60]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_1xr2f5y9r6().b[18][0]++;
      cov_1xr2f5y9r6().s[61]++;
      return {
        data: null,
        success: false,
        error:
        /* istanbul ignore next */
        (cov_1xr2f5y9r6().b[19][0]++, result?.error) ||
        /* istanbul ignore next */
        (cov_1xr2f5y9r6().b[19][1]++, 'Error obteniendo orden')
      };
    } else
    /* istanbul ignore next */
    {
      cov_1xr2f5y9r6().b[18][1]++;
    }
    cov_1xr2f5y9r6().s[62]++;
    if (!result) {
      /* istanbul ignore next */
      cov_1xr2f5y9r6().b[20][0]++;
      cov_1xr2f5y9r6().s[63]++;
      return {
        data: null,
        success: false,
        error: 'Error: respuesta nula del servidor'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1xr2f5y9r6().b[20][1]++;
    }
    cov_1xr2f5y9r6().s[64]++;
    return result;
  } catch (error) {
    /* istanbul ignore next */
    cov_1xr2f5y9r6().s[65]++;
    console.error('Error getting user order:', error);
    /* istanbul ignore next */
    cov_1xr2f5y9r6().s[66]++;
    return {
      data: null,
      success: false,
      error:
      /* istanbul ignore next */
      (cov_1xr2f5y9r6().b[21][0]++, error.message) ||
      /* istanbul ignore next */
      (cov_1xr2f5y9r6().b[21][1]++, 'Error de conexión')
    };
  }
}
function convertCartToOrderItems(cartItems) {
  /* istanbul ignore next */
  cov_1xr2f5y9r6().f[15]++;
  cov_1xr2f5y9r6().s[67]++;
  return cartItems.map(item => {
    /* istanbul ignore next */
    cov_1xr2f5y9r6().f[16]++;
    cov_1xr2f5y9r6().s[68]++;
    return {
      id: item.id.toString(),
      name: item.name,
      price:
      /* istanbul ignore next */
      (cov_1xr2f5y9r6().b[22][0]++, item.discounted_price) ||
      /* istanbul ignore next */
      (cov_1xr2f5y9r6().b[22][1]++, item.price),
      quantity: item.quantity,
      image:
      /* istanbul ignore next */
      (cov_1xr2f5y9r6().b[23][0]++, item.images?.previews?.[0]) ||
      /* istanbul ignore next */
      (cov_1xr2f5y9r6().b[23][1]++, '')
    };
  });
}
function calculateOrderTotal(items, shippingCost =
/* istanbul ignore next */
(cov_1xr2f5y9r6().b[24][0]++, 0)) {
  /* istanbul ignore next */
  cov_1xr2f5y9r6().f[17]++;
  const itemsTotal =
  /* istanbul ignore next */
  (cov_1xr2f5y9r6().s[69]++, items.reduce((total, item) => {
    /* istanbul ignore next */
    cov_1xr2f5y9r6().f[18]++;
    cov_1xr2f5y9r6().s[70]++;
    return total + item.price * item.quantity;
  }, 0));
  /* istanbul ignore next */
  cov_1xr2f5y9r6().s[71]++;
  return itemsTotal + shippingCost;
}
function validateOrderData(orderData) {
  /* istanbul ignore next */
  cov_1xr2f5y9r6().f[19]++;
  const errors =
  /* istanbul ignore next */
  (cov_1xr2f5y9r6().s[72]++, []);
  // Validar items
  /* istanbul ignore next */
  cov_1xr2f5y9r6().s[73]++;
  if (
  /* istanbul ignore next */
  (cov_1xr2f5y9r6().b[26][0]++, !orderData.items) ||
  /* istanbul ignore next */
  (cov_1xr2f5y9r6().b[26][1]++, orderData.items.length === 0)) {
    /* istanbul ignore next */
    cov_1xr2f5y9r6().b[25][0]++;
    cov_1xr2f5y9r6().s[74]++;
    errors.push('La orden debe tener al menos un producto');
  } else
  /* istanbul ignore next */
  {
    cov_1xr2f5y9r6().b[25][1]++;
  }
  cov_1xr2f5y9r6().s[75]++;
  orderData.items.forEach((item, index) => {
    /* istanbul ignore next */
    cov_1xr2f5y9r6().f[20]++;
    cov_1xr2f5y9r6().s[76]++;
    if (
    /* istanbul ignore next */
    (cov_1xr2f5y9r6().b[28][0]++, !item.id) ||
    /* istanbul ignore next */
    (cov_1xr2f5y9r6().b[28][1]++, !item.name)) {
      /* istanbul ignore next */
      cov_1xr2f5y9r6().b[27][0]++;
      cov_1xr2f5y9r6().s[77]++;
      errors.push(`Producto ${index + 1}: ID y nombre son requeridos`);
    } else
    /* istanbul ignore next */
    {
      cov_1xr2f5y9r6().b[27][1]++;
    }
    cov_1xr2f5y9r6().s[78]++;
    if (item.price <= 0) {
      /* istanbul ignore next */
      cov_1xr2f5y9r6().b[29][0]++;
      cov_1xr2f5y9r6().s[79]++;
      errors.push(`Producto ${index + 1}: El precio debe ser mayor a 0`);
    } else
    /* istanbul ignore next */
    {
      cov_1xr2f5y9r6().b[29][1]++;
    }
    cov_1xr2f5y9r6().s[80]++;
    if (item.quantity <= 0) {
      /* istanbul ignore next */
      cov_1xr2f5y9r6().b[30][0]++;
      cov_1xr2f5y9r6().s[81]++;
      errors.push(`Producto ${index + 1}: La cantidad debe ser mayor a 0`);
    } else
    /* istanbul ignore next */
    {
      cov_1xr2f5y9r6().b[30][1]++;
    }
  });
  // Validar payer
  /* istanbul ignore next */
  cov_1xr2f5y9r6().s[82]++;
  if (
  /* istanbul ignore next */
  (cov_1xr2f5y9r6().b[32][0]++, !orderData.payer.name) ||
  /* istanbul ignore next */
  (cov_1xr2f5y9r6().b[32][1]++, !orderData.payer.surname)) {
    /* istanbul ignore next */
    cov_1xr2f5y9r6().b[31][0]++;
    cov_1xr2f5y9r6().s[83]++;
    errors.push('Nombre y apellido del comprador son requeridos');
  } else
  /* istanbul ignore next */
  {
    cov_1xr2f5y9r6().b[31][1]++;
  }
  cov_1xr2f5y9r6().s[84]++;
  if (!orderData.payer.email) {
    /* istanbul ignore next */
    cov_1xr2f5y9r6().b[33][0]++;
    cov_1xr2f5y9r6().s[85]++;
    errors.push('Email del comprador es requerido');
  } else
  /* istanbul ignore next */
  {
    cov_1xr2f5y9r6().b[33][1]++;
  }
  // Validar email format
  const emailRegex =
  /* istanbul ignore next */
  (cov_1xr2f5y9r6().s[86]++, /^[^\s@]+@[^\s@]+\.[^\s@]+$/);
  /* istanbul ignore next */
  cov_1xr2f5y9r6().s[87]++;
  if (
  /* istanbul ignore next */
  (cov_1xr2f5y9r6().b[35][0]++, orderData.payer.email) &&
  /* istanbul ignore next */
  (cov_1xr2f5y9r6().b[35][1]++, !emailRegex.test(orderData.payer.email))) {
    /* istanbul ignore next */
    cov_1xr2f5y9r6().b[34][0]++;
    cov_1xr2f5y9r6().s[88]++;
    errors.push('El formato del email no es válido');
  } else
  /* istanbul ignore next */
  {
    cov_1xr2f5y9r6().b[34][1]++;
  }
  // Validar shipping si está presente
  cov_1xr2f5y9r6().s[89]++;
  if (orderData.shipping) {
    /* istanbul ignore next */
    cov_1xr2f5y9r6().b[36][0]++;
    cov_1xr2f5y9r6().s[90]++;
    if (
    /* istanbul ignore next */
    (cov_1xr2f5y9r6().b[38][0]++, !orderData.shipping.address.street_name) ||
    /* istanbul ignore next */
    (cov_1xr2f5y9r6().b[38][1]++, !orderData.shipping.address.city_name)) {
      /* istanbul ignore next */
      cov_1xr2f5y9r6().b[37][0]++;
      cov_1xr2f5y9r6().s[91]++;
      errors.push('Dirección de envío incompleta');
    } else
    /* istanbul ignore next */
    {
      cov_1xr2f5y9r6().b[37][1]++;
    }
    cov_1xr2f5y9r6().s[92]++;
    if (!orderData.shipping.address.zip_code) {
      /* istanbul ignore next */
      cov_1xr2f5y9r6().b[39][0]++;
      cov_1xr2f5y9r6().s[93]++;
      errors.push('Código postal es requerido');
    } else
    /* istanbul ignore next */
    {
      cov_1xr2f5y9r6().b[39][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_1xr2f5y9r6().b[36][1]++;
  }
  cov_1xr2f5y9r6().s[94]++;
  return {
    isValid: errors.length === 0,
    errors
  };
}
function formatOrderStatus(status) {
  /* istanbul ignore next */
  cov_1xr2f5y9r6().f[21]++;
  const statusMap =
  /* istanbul ignore next */
  (cov_1xr2f5y9r6().s[95]++, {
    pending: {
      label: 'Pendiente',
      color: 'yellow',
      description: 'Esperando confirmación de pago'
    },
    paid: {
      label: 'Pagado',
      color: 'green',
      description: 'Pago confirmado, preparando envío'
    },
    shipped: {
      label: 'Enviado',
      color: 'blue',
      description: 'Producto en camino'
    },
    delivered: {
      label: 'Entregado',
      color: 'green',
      description: 'Producto entregado exitosamente'
    },
    cancelled: {
      label: 'Cancelado',
      color: 'red',
      description: 'Orden cancelada'
    },
    refunded: {
      label: 'Reembolsado',
      color: 'gray',
      description: 'Pago reembolsado'
    }
  });
  /* istanbul ignore next */
  cov_1xr2f5y9r6().s[96]++;
  return /* istanbul ignore next */(cov_1xr2f5y9r6().b[40][0]++, statusMap[status]) ||
  /* istanbul ignore next */
  (cov_1xr2f5y9r6().b[40][1]++, {
    label: 'Desconocido',
    color: 'gray',
    description: 'Estado no reconocido'
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,