{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\optimization\\useShopDetailsReducer.ts"],"sourcesContent":["import { useReducer, useCallback, useMemo } from 'react'\n\n// Tipos para el estado del componente ShopDetails\ninterface ShopDetailsState {\n  activeColor: string\n  previewImg: number\n  storage: string\n  type: string\n  sim: string\n  quantity: number\n  activeTab: string\n  isLoading: boolean\n  error: string | null\n}\n\n// Tipos de acciones\ntype ShopDetailsAction =\n  | { type: 'SET_ACTIVE_COLOR'; payload: string }\n  | { type: 'SET_PREVIEW_IMG'; payload: number }\n  | { type: 'SET_STORAGE'; payload: string }\n  | { type: 'SET_TYPE'; payload: string }\n  | { type: 'SET_SIM'; payload: string }\n  | { type: 'SET_QUANTITY'; payload: number }\n  | { type: 'SET_ACTIVE_TAB'; payload: string }\n  | { type: 'SET_LOADING'; payload: boolean }\n  | { type: 'SET_ERROR'; payload: string | null }\n  | { type: 'RESET_STATE' }\n  | { type: 'INCREMENT_QUANTITY' }\n  | { type: 'DECREMENT_QUANTITY' }\n\n// Estado inicial\nconst initialState: ShopDetailsState = {\n  activeColor: 'blanco-puro', // Usar ID del color por defecto\n  previewImg: 0,\n  storage: 'gb128',\n  type: 'active',\n  sim: 'dual',\n  quantity: 1,\n  activeTab: 'tabOne',\n  isLoading: false,\n  error: null,\n}\n\n// Reducer function\nfunction shopDetailsReducer(state: ShopDetailsState, action: ShopDetailsAction): ShopDetailsState {\n  switch (action.type) {\n    case 'SET_ACTIVE_COLOR':\n      return { ...state, activeColor: action.payload }\n\n    case 'SET_PREVIEW_IMG':\n      return { ...state, previewImg: action.payload }\n\n    case 'SET_STORAGE':\n      return { ...state, storage: action.payload }\n\n    case 'SET_TYPE':\n      return { ...state, type: action.payload }\n\n    case 'SET_SIM':\n      return { ...state, sim: action.payload }\n\n    case 'SET_QUANTITY':\n      return {\n        ...state,\n        quantity: Math.max(1, Math.min(99, action.payload)), // Límites de cantidad\n      }\n\n    case 'SET_ACTIVE_TAB':\n      return { ...state, activeTab: action.payload }\n\n    case 'SET_LOADING':\n      return { ...state, isLoading: action.payload }\n\n    case 'SET_ERROR':\n      return { ...state, error: action.payload }\n\n    case 'INCREMENT_QUANTITY':\n      return {\n        ...state,\n        quantity: Math.min(99, state.quantity + 1),\n      }\n\n    case 'DECREMENT_QUANTITY':\n      return {\n        ...state,\n        quantity: Math.max(1, state.quantity - 1),\n      }\n\n    case 'RESET_STATE':\n      return initialState\n\n    default:\n      return state\n  }\n}\n\n// Hook personalizado\nexport function useShopDetailsReducer() {\n  const [state, dispatch] = useReducer(shopDetailsReducer, initialState)\n\n  // Acciones memoizadas\n  const actions = useMemo(\n    () => ({\n      setActiveColor: (color: string) => dispatch({ type: 'SET_ACTIVE_COLOR', payload: color }),\n\n      setPreviewImg: (index: number) => dispatch({ type: 'SET_PREVIEW_IMG', payload: index }),\n\n      setStorage: (storage: string) => dispatch({ type: 'SET_STORAGE', payload: storage }),\n\n      setType: (type: string) => dispatch({ type: 'SET_TYPE', payload: type }),\n\n      setSim: (sim: string) => dispatch({ type: 'SET_SIM', payload: sim }),\n\n      setQuantity: (quantity: number) => dispatch({ type: 'SET_QUANTITY', payload: quantity }),\n\n      setActiveTab: (tab: string) => dispatch({ type: 'SET_ACTIVE_TAB', payload: tab }),\n\n      setLoading: (loading: boolean) => dispatch({ type: 'SET_LOADING', payload: loading }),\n\n      setError: (error: string | null) => dispatch({ type: 'SET_ERROR', payload: error }),\n\n      incrementQuantity: () => dispatch({ type: 'INCREMENT_QUANTITY' }),\n\n      decrementQuantity: () => dispatch({ type: 'DECREMENT_QUANTITY' }),\n\n      resetState: () => dispatch({ type: 'RESET_STATE' }),\n    }),\n    []\n  )\n\n  // Selectores memoizados para valores derivados\n  const selectors = useMemo(\n    () => ({\n      // Verificar si hay errores\n      hasError: Boolean(state.error),\n\n      // Verificar si está en estado de carga\n      isLoading: state.isLoading,\n\n      // Obtener configuración actual del producto\n      currentConfig: {\n        color: state.activeColor,\n        storage: state.storage,\n        type: state.type,\n        sim: state.sim,\n        quantity: state.quantity,\n      },\n\n      // Verificar si la cantidad está en el límite\n      isMaxQuantity: state.quantity >= 99,\n      isMinQuantity: state.quantity <= 1,\n\n      // Obtener precio total basado en cantidad\n      getTotalPrice: (unitPrice: number) => unitPrice * state.quantity,\n    }),\n    [state]\n  )\n\n  return {\n    state,\n    actions,\n    selectors,\n  }\n}\n\n// Hook para manejar la persistencia en localStorage\nexport function useShopDetailsWithPersistence(productId?: string) {\n  const { state, actions, selectors } = useShopDetailsReducer()\n\n  // Callbacks memoizados para persistencia\n  const persistenceActions = useMemo(\n    () => ({\n      saveToStorage: useCallback(() => {\n        if (productId) {\n          const key = `shop-details-${productId}`\n          localStorage.setItem(key, JSON.stringify(state))\n        }\n      }, [state, productId]),\n\n      loadFromStorage: useCallback(() => {\n        if (productId) {\n          const key = `shop-details-${productId}`\n          const saved = localStorage.getItem(key)\n          if (saved) {\n            try {\n              const parsedState = JSON.parse(saved)\n              // Restaurar estado desde localStorage\n              Object.entries(parsedState).forEach(([key, value]) => {\n                switch (key) {\n                  case 'activeColor':\n                    actions.setActiveColor(value as string)\n                    break\n                  case 'storage':\n                    actions.setStorage(value as string)\n                    break\n                  case 'type':\n                    actions.setType(value as string)\n                    break\n                  case 'sim':\n                    actions.setSim(value as string)\n                    break\n                  case 'quantity':\n                    actions.setQuantity(value as number)\n                    break\n                }\n              })\n            } catch (error) {\n              console.warn('Error loading shop details from storage:', error)\n            }\n          }\n        }\n      }, [productId, actions]),\n    }),\n    [state, productId, actions]\n  )\n\n  return {\n    state,\n    actions,\n    selectors,\n    persistenceActions,\n  }\n}\n\nexport type { ShopDetailsState, ShopDetailsAction }\n"],"names":["useShopDetailsReducer","useShopDetailsWithPersistence","initialState","activeColor","previewImg","storage","type","sim","quantity","activeTab","isLoading","error","shopDetailsReducer","state","action","payload","Math","max","min","dispatch","useReducer","actions","useMemo","setActiveColor","color","setPreviewImg","index","setStorage","setType","setSim","setQuantity","setActiveTab","tab","setLoading","loading","setError","incrementQuantity","decrementQuantity","resetState","selectors","hasError","Boolean","currentConfig","isMaxQuantity","isMinQuantity","getTotalPrice","unitPrice","productId","persistenceActions","saveToStorage","useCallback","key","localStorage","setItem","JSON","stringify","loadFromStorage","saved","getItem","parsedState","parse","Object","entries","forEach","value","console","warn"],"mappings":"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"}