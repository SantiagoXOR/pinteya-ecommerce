d354a06b0c3b21eab186b5fedef48c39
"use strict";

/* istanbul ignore next */
function cov_h4tnu49bh() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\auth.ts";
  var hash = "d0242157e9412e8731bc0db9dd570380d162cc75";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\auth.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 24,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 20
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 24
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 22
        }
      },
      "7": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 23
        }
      },
      "8": {
        start: {
          line: 25,
          column: 32
        },
        end: {
          line: 25,
          column: 78
        }
      },
      "9": {
        start: {
          line: 26,
          column: 30
        },
        end: {
          line: 26,
          column: 93
        }
      },
      "10": {
        start: {
          line: 27,
          column: 25
        },
        end: {
          line: 27,
          column: 80
        }
      },
      "11": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 31,
          column: 6
        }
      },
      "12": {
        start: {
          line: 34,
          column: 20
        },
        end: {
          line: 34,
          column: 56
        }
      },
      "13": {
        start: {
          line: 35,
          column: 31
        },
        end: {
          line: 35,
          column: 68
        }
      },
      "14": {
        start: {
          line: 36,
          column: 0
        },
        end: {
          line: 38,
          column: 1
        }
      },
      "15": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 37,
          column: 76
        }
      },
      "16": {
        start: {
          line: 39,
          column: 0
        },
        end: {
          line: 41,
          column: 1
        }
      },
      "17": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 40,
          column: 77
        }
      },
      "18": {
        start: {
          line: 42,
          column: 17
        },
        end: {
          line: 102,
          column: 2
        }
      },
      "19": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 68,
          column: 13
        }
      },
      "20": {
        start: {
          line: 65,
          column: 16
        },
        end: {
          line: 65,
          column: 57
        }
      },
      "21": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 66,
          column: 59
        }
      },
      "22": {
        start: {
          line: 67,
          column: 16
        },
        end: {
          line: 67,
          column: 39
        }
      },
      "23": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 25
        }
      },
      "24": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 76,
          column: 13
        }
      },
      "25": {
        start: {
          line: 73,
          column: 16
        },
        end: {
          line: 73,
          column: 56
        }
      },
      "26": {
        start: {
          line: 74,
          column: 16
        },
        end: {
          line: 74,
          column: 58
        }
      },
      "27": {
        start: {
          line: 75,
          column: 16
        },
        end: {
          line: 75,
          column: 47
        }
      },
      "28": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 27
        }
      },
      "29": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 83,
          column: 13
        }
      },
      "30": {
        start: {
          line: 82,
          column: 16
        },
        end: {
          line: 82,
          column: 28
        }
      },
      "31": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 25
        }
      },
      "32": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 60
        }
      },
      "33": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 48
        }
      },
      "34": {
        start: {
          line: 103,
          column: 44
        },
        end: {
          line: 103,
          column: 52
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 16
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 18
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 19
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "5": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 28,
            column: 9
          },
          end: {
            line: 28,
            column: 33
          }
        },
        loc: {
          start: {
            line: 28,
            column: 39
          },
          end: {
            line: 32,
            column: 1
          }
        },
        line: 28
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        },
        loc: {
          start: {
            line: 63,
            column: 45
          },
          end: {
            line: 70,
            column: 9
          }
        },
        line: 63
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        },
        loc: {
          start: {
            line: 71,
            column: 43
          },
          end: {
            line: 78,
            column: 9
          }
        },
        line: 71
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 79,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        },
        loc: {
          start: {
            line: 79,
            column: 50
          },
          end: {
            line: 85,
            column: 9
          }
        },
        line: 79
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        },
        loc: {
          start: {
            line: 88,
            column: 50
          },
          end: {
            line: 90,
            column: 9
          }
        },
        line: 88
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 91,
            column: 9
          }
        },
        loc: {
          start: {
            line: 91,
            column: 43
          },
          end: {
            line: 93,
            column: 9
          }
        },
        line: 91
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 29,
            column: 11
          },
          end: {
            line: 31,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 29,
            column: 35
          },
          end: {
            line: 29,
            column: 38
          }
        }, {
          start: {
            line: 29,
            column: 41
          },
          end: {
            line: 31,
            column: 5
          }
        }],
        line: 29
      },
      "1": {
        loc: {
          start: {
            line: 29,
            column: 11
          },
          end: {
            line: 29,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 11
          },
          end: {
            line: 29,
            column: 14
          }
        }, {
          start: {
            line: 29,
            column: 18
          },
          end: {
            line: 29,
            column: 32
          }
        }],
        line: 29
      },
      "2": {
        loc: {
          start: {
            line: 36,
            column: 0
          },
          end: {
            line: 38,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 0
          },
          end: {
            line: 38,
            column: 1
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "3": {
        loc: {
          start: {
            line: 39,
            column: 0
          },
          end: {
            line: 41,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 0
          },
          end: {
            line: 41,
            column: 1
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "4": {
        loc: {
          start: {
            line: 64,
            column: 12
          },
          end: {
            line: 68,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 12
          },
          end: {
            line: 68,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "5": {
        loc: {
          start: {
            line: 64,
            column: 16
          },
          end: {
            line: 64,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 64,
            column: 16
          },
          end: {
            line: 64,
            column: 23
          }
        }, {
          start: {
            line: 64,
            column: 27
          },
          end: {
            line: 64,
            column: 31
          }
        }],
        line: 64
      },
      "6": {
        loc: {
          start: {
            line: 72,
            column: 12
          },
          end: {
            line: 76,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 12
          },
          end: {
            line: 76,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 72
      },
      "7": {
        loc: {
          start: {
            line: 81,
            column: 12
          },
          end: {
            line: 83,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 12
          },
          end: {
            line: 83,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 81
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\auth.ts"],
      sourcesContent: ["import NextAuth from \"next-auth\"\r\nimport Google from \"next-auth/providers/google\"\r\nimport { SupabaseAdapter } from \"./lib/integrations/supabase/supabase-adapter\"\r\n\r\n// Validaci\xF3n de variables de entorno requeridas\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL\r\nconst supabaseServiceRoleKey = process.env.SUPABASE_SERVICE_ROLE_KEY\r\n\r\nif (!supabaseUrl) {\r\n  throw new Error(\"NEXT_PUBLIC_SUPABASE_URL is required but not defined\")\r\n}\r\n\r\nif (!supabaseServiceRoleKey) {\r\n  throw new Error(\"SUPABASE_SERVICE_ROLE_KEY is required but not defined\")\r\n}\r\n\r\nconst nextAuth = NextAuth({\r\n  adapter: SupabaseAdapter({\r\n    url: supabaseUrl,\r\n    secret: supabaseServiceRoleKey,\r\n  }),\r\n  providers: [\r\n    Google({\r\n      clientId: process.env.AUTH_GOOGLE_ID!,\r\n      clientSecret: process.env.AUTH_GOOGLE_SECRET!,\r\n      authorization: {\r\n        params: {\r\n          prompt: \"select_account\",\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  pages: {\r\n    signIn: \"/auth/signin\",\r\n    error: \"/auth/error\",\r\n  },\r\n  callbacks: {\r\n    async jwt({ token, user, account }) {\r\n      if (account && user) {\r\n        token.accessToken = account.access_token\r\n        token.refreshToken = account.refresh_token\r\n        token.userId = user.id\r\n      }\r\n      return token\r\n    },\r\n    async session({ session, token }) {\r\n      if (token) {\r\n        session.accessToken = token.accessToken as string\r\n        session.refreshToken = token.refreshToken as string\r\n        session.user.id = token.userId as string\r\n      }\r\n      return session\r\n    },\r\n    async signIn({ user, account, profile }) {\r\n      // Permitir el sign-in para todos los usuarios de Google\r\n      if (account?.provider === \"google\") {\r\n        return true\r\n      }\r\n      return false\r\n    },\r\n  },\r\n  events: {\r\n    async signIn({ user, account, profile }) {\r\n      console.log(\"Usuario autenticado:\", user.email)\r\n    },\r\n    async signOut({ session, token }) {\r\n      console.log(\"Usuario desconectado\")\r\n    },\r\n  },\r\n  session: {\r\n    strategy: \"jwt\" as const,\r\n    maxAge: 30 * 24 * 60 * 60, // 30 d\xEDas\r\n  },\r\n  jwt: {\r\n    maxAge: 30 * 24 * 60 * 60, // 30 d\xEDas\r\n  },\r\n})\r\n\r\nexport const { auth, handlers, signIn, signOut } = nextAuth\r\n\r\n// Tipos TypeScript para extender la sesi\xF3n\r\ndeclare module \"next-auth\" {\r\n  interface Session {\r\n    supabaseAccessToken?: string\r\n    user: {\r\n      id: string\r\n      name?: string | null\r\n      email?: string | null\r\n      image?: string | null\r\n    }\r\n  }\r\n}\r\n\r\ndeclare module \"next-auth/jwt\" {\r\n  interface JWT {\r\n    sub: string\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["auth", "handlers", "signIn", "signOut", "supabaseUrl", "process", "env", "NEXT_PUBLIC_SUPABASE_URL", "supabaseServiceRoleKey", "SUPABASE_SERVICE_ROLE_KEY", "Error", "nextAuth", "NextAuth", "adapter", "SupabaseAdapter", "url", "secret", "providers", "Google", "clientId", "AUTH_GOOGLE_ID", "clientSecret", "AUTH_GOOGLE_SECRET", "authorization", "params", "prompt", "pages", "error", "callbacks", "jwt", "token", "user", "account", "accessToken", "access_token", "refreshToken", "refresh_token", "userId", "id", "session", "profile", "provider", "events", "console", "log", "email", "strategy", "maxAge"],
      mappings: ";;;;;;;;;;;QA8EeA;eAAAA;;QAAMC;eAAAA;;QAAUC;eAAAA;;QAAQC;eAAAA;;;iEA9ElB;+DACF;iCACa;;;;;;AAEhC,gDAAgD;AAChD,MAAMC,cAAcC,QAAQC,GAAG,CAACC,wBAAwB;AACxD,MAAMC,yBAAyBH,QAAQC,GAAG,CAACG,yBAAyB;AAEpE,IAAI,CAACL,aAAa;IAChB,MAAM,IAAIM,MAAM;AAClB;AAEA,IAAI,CAACF,wBAAwB;IAC3B,MAAM,IAAIE,MAAM;AAClB;AAEA,MAAMC,WAAWC,IAAAA,iBAAQ,EAAC;IACxBC,SAASC,IAAAA,gCAAe,EAAC;QACvBC,KAAKX;QACLY,QAAQR;IACV;IACAS,WAAW;QACTC,IAAAA,eAAM,EAAC;YACLC,UAAUd,QAAQC,GAAG,CAACc,cAAc;YACpCC,cAAchB,QAAQC,GAAG,CAACgB,kBAAkB;YAC5CC,eAAe;gBACbC,QAAQ;oBACNC,QAAQ;gBACV;YACF;QACF;KACD;IACDC,OAAO;QACLxB,QAAQ;QACRyB,OAAO;IACT;IACAC,WAAW;QACT,MAAMC,KAAI,EAAEC,KAAK,EAAEC,IAAI,EAAEC,OAAO,EAAE;YAChC,IAAIA,WAAWD,MAAM;gBACnBD,MAAMG,WAAW,GAAGD,QAAQE,YAAY;gBACxCJ,MAAMK,YAAY,GAAGH,QAAQI,aAAa;gBAC1CN,MAAMO,MAAM,GAAGN,KAAKO,EAAE;YACxB;YACA,OAAOR;QACT;QACA,MAAMS,SAAQ,EAAEA,OAAO,EAAET,KAAK,EAAE;YAC9B,IAAIA,OAAO;gBACTS,QAAQN,WAAW,GAAGH,MAAMG,WAAW;gBACvCM,QAAQJ,YAAY,GAAGL,MAAMK,YAAY;gBACzCI,QAAQR,IAAI,CAACO,EAAE,GAAGR,MAAMO,MAAM;YAChC;YACA,OAAOE;QACT;QACA,MAAMrC,QAAO,EAAE6B,IAAI,EAAEC,OAAO,EAAEQ,OAAO,EAAE;YACrC,wDAAwD;YACxD,IAAIR,SAASS,aAAa,UAAU;gBAClC,OAAO;YACT;YACA,OAAO;QACT;IACF;IACAC,QAAQ;QACN,MAAMxC,QAAO,EAAE6B,IAAI,EAAEC,OAAO,EAAEQ,OAAO,EAAE;YACrCG,QAAQC,GAAG,CAAC,wBAAwBb,KAAKc,KAAK;QAChD;QACA,MAAM1C,SAAQ,EAAEoC,OAAO,EAAET,KAAK,EAAE;YAC9Ba,QAAQC,GAAG,CAAC;QACd;IACF;IACAL,SAAS;QACPO,UAAU;QACVC,QAAQ,KAAK,KAAK,KAAK;IACzB;IACAlB,KAAK;QACHkB,QAAQ,KAAK,KAAK,KAAK;IACzB;AACF;AAEO,MAAM,EAAE/C,IAAI,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,OAAO,EAAE,GAAGQ"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d0242157e9412e8731bc0db9dd570380d162cc75"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_h4tnu49bh = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_h4tnu49bh();
cov_h4tnu49bh().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_h4tnu49bh().f[0]++;
  cov_h4tnu49bh().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_h4tnu49bh().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_h4tnu49bh().s[3]++;
_export(exports, {
  get auth() {
    /* istanbul ignore next */
    cov_h4tnu49bh().f[1]++;
    cov_h4tnu49bh().s[4]++;
    return auth;
  },
  get handlers() {
    /* istanbul ignore next */
    cov_h4tnu49bh().f[2]++;
    cov_h4tnu49bh().s[5]++;
    return handlers;
  },
  get signIn() {
    /* istanbul ignore next */
    cov_h4tnu49bh().f[3]++;
    cov_h4tnu49bh().s[6]++;
    return signIn;
  },
  get signOut() {
    /* istanbul ignore next */
    cov_h4tnu49bh().f[4]++;
    cov_h4tnu49bh().s[7]++;
    return signOut;
  }
});
const _nextauth =
/* istanbul ignore next */
(/*#__PURE__*/cov_h4tnu49bh().s[8]++, _interop_require_default(require("next-auth")));
const _google =
/* istanbul ignore next */
(/*#__PURE__*/cov_h4tnu49bh().s[9]++, _interop_require_default(require("next-auth/providers/google")));
const _supabaseadapter =
/* istanbul ignore next */
(cov_h4tnu49bh().s[10]++, require("./lib/integrations/supabase/supabase-adapter"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_h4tnu49bh().f[5]++;
  cov_h4tnu49bh().s[11]++;
  return /* istanbul ignore next */(cov_h4tnu49bh().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_h4tnu49bh().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_h4tnu49bh().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_h4tnu49bh().b[0][1]++, {
    default: obj
  });
}
// Validación de variables de entorno requeridas
const supabaseUrl =
/* istanbul ignore next */
(cov_h4tnu49bh().s[12]++, process.env.NEXT_PUBLIC_SUPABASE_URL);
const supabaseServiceRoleKey =
/* istanbul ignore next */
(cov_h4tnu49bh().s[13]++, process.env.SUPABASE_SERVICE_ROLE_KEY);
/* istanbul ignore next */
cov_h4tnu49bh().s[14]++;
if (!supabaseUrl) {
  /* istanbul ignore next */
  cov_h4tnu49bh().b[2][0]++;
  cov_h4tnu49bh().s[15]++;
  throw new Error("NEXT_PUBLIC_SUPABASE_URL is required but not defined");
} else
/* istanbul ignore next */
{
  cov_h4tnu49bh().b[2][1]++;
}
cov_h4tnu49bh().s[16]++;
if (!supabaseServiceRoleKey) {
  /* istanbul ignore next */
  cov_h4tnu49bh().b[3][0]++;
  cov_h4tnu49bh().s[17]++;
  throw new Error("SUPABASE_SERVICE_ROLE_KEY is required but not defined");
} else
/* istanbul ignore next */
{
  cov_h4tnu49bh().b[3][1]++;
}
const nextAuth =
/* istanbul ignore next */
(cov_h4tnu49bh().s[18]++, (0, _nextauth.default)({
  adapter: (0, _supabaseadapter.SupabaseAdapter)({
    url: supabaseUrl,
    secret: supabaseServiceRoleKey
  }),
  providers: [(0, _google.default)({
    clientId: process.env.AUTH_GOOGLE_ID,
    clientSecret: process.env.AUTH_GOOGLE_SECRET,
    authorization: {
      params: {
        prompt: "select_account"
      }
    }
  })],
  pages: {
    signIn: "/auth/signin",
    error: "/auth/error"
  },
  callbacks: {
    async jwt({
      token,
      user,
      account
    }) {
      /* istanbul ignore next */
      cov_h4tnu49bh().f[6]++;
      cov_h4tnu49bh().s[19]++;
      if (
      /* istanbul ignore next */
      (cov_h4tnu49bh().b[5][0]++, account) &&
      /* istanbul ignore next */
      (cov_h4tnu49bh().b[5][1]++, user)) {
        /* istanbul ignore next */
        cov_h4tnu49bh().b[4][0]++;
        cov_h4tnu49bh().s[20]++;
        token.accessToken = account.access_token;
        /* istanbul ignore next */
        cov_h4tnu49bh().s[21]++;
        token.refreshToken = account.refresh_token;
        /* istanbul ignore next */
        cov_h4tnu49bh().s[22]++;
        token.userId = user.id;
      } else
      /* istanbul ignore next */
      {
        cov_h4tnu49bh().b[4][1]++;
      }
      cov_h4tnu49bh().s[23]++;
      return token;
    },
    async session({
      session,
      token
    }) {
      /* istanbul ignore next */
      cov_h4tnu49bh().f[7]++;
      cov_h4tnu49bh().s[24]++;
      if (token) {
        /* istanbul ignore next */
        cov_h4tnu49bh().b[6][0]++;
        cov_h4tnu49bh().s[25]++;
        session.accessToken = token.accessToken;
        /* istanbul ignore next */
        cov_h4tnu49bh().s[26]++;
        session.refreshToken = token.refreshToken;
        /* istanbul ignore next */
        cov_h4tnu49bh().s[27]++;
        session.user.id = token.userId;
      } else
      /* istanbul ignore next */
      {
        cov_h4tnu49bh().b[6][1]++;
      }
      cov_h4tnu49bh().s[28]++;
      return session;
    },
    async signIn({
      user,
      account,
      profile
    }) {
      /* istanbul ignore next */
      cov_h4tnu49bh().f[8]++;
      cov_h4tnu49bh().s[29]++;
      // Permitir el sign-in para todos los usuarios de Google
      if (account?.provider === "google") {
        /* istanbul ignore next */
        cov_h4tnu49bh().b[7][0]++;
        cov_h4tnu49bh().s[30]++;
        return true;
      } else
      /* istanbul ignore next */
      {
        cov_h4tnu49bh().b[7][1]++;
      }
      cov_h4tnu49bh().s[31]++;
      return false;
    }
  },
  events: {
    async signIn({
      user,
      account,
      profile
    }) {
      /* istanbul ignore next */
      cov_h4tnu49bh().f[9]++;
      cov_h4tnu49bh().s[32]++;
      console.log("Usuario autenticado:", user.email);
    },
    async signOut({
      session,
      token
    }) {
      /* istanbul ignore next */
      cov_h4tnu49bh().f[10]++;
      cov_h4tnu49bh().s[33]++;
      console.log("Usuario desconectado");
    }
  },
  session: {
    strategy: "jwt",
    maxAge: 30 * 24 * 60 * 60
  },
  jwt: {
    maxAge: 30 * 24 * 60 * 60
  }
}));
const {
  auth,
  handlers,
  signIn,
  signOut
} =
/* istanbul ignore next */
(cov_h4tnu49bh().s[34]++, nextAuth);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,