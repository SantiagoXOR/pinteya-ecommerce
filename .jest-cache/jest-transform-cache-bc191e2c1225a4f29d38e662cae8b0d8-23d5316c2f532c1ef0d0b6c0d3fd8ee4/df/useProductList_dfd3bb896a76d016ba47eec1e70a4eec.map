{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\admin\\useProductList.ts"],"sourcesContent":["import { useState, useEffect } from 'react'\n\ninterface Product {\n  id: number\n  name: string\n  description: string\n  price: number\n  stock: number\n  category_id: number\n  images: {\n    main: string\n    gallery: string[]\n    previews: string[]\n    thumbnails: string[]\n  }\n  created_at: string\n  updated_at: string\n  category_name: string\n}\n\ninterface ProductListResponse {\n  data: Product[]\n  total: number\n  page: number\n  pageSize: number\n  totalPages: number\n}\n\n/**\n * Hook est√°ndar para gesti√≥n de productos en el panel administrativo\n *\n * Funcionalidades:\n * - Consulta real a la API /api/admin/products\n * - Carga de 25 productos reales de Supabase por p√°gina\n * - Informaci√≥n de paginaci√≥n completa\n * - Datos completos (nombres, precios, stock, categor√≠as, im√°genes)\n *\n * @returns {Object} Estado del hook con productos, loading y error\n */\nexport function useProductList() {\n  console.log('üîß useProductList: Hook iniciado')\n  const [products, setProducts] = useState<Product[]>([])\n  const [isLoading, setIsLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        console.log('üîß useProductList: Iniciando fetch...')\n        setIsLoading(true)\n        setError(null)\n\n        const response = await fetch('/api/admin/products?limit=25', {\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        })\n        console.log('üîß useProductList: Response status:', response.status)\n\n        if (!response.ok) {\n          throw new Error(`Error ${response.status}: ${response.statusText}`)\n        }\n\n        const data: ProductListResponse = await response.json()\n        console.log('üîß useProductList: Respuesta completa:', data)\n        console.log('üîß useProductList: data.data:', data.data)\n\n        if (Array.isArray(data.data)) {\n          setProducts(data.data)\n          console.log('üîß useProductList: ‚úÖ Productos cargados:', data.data.length)\n        } else {\n          throw new Error('Estructura de respuesta inv√°lida - data no es un array')\n        }\n      } catch (err) {\n        console.error('üîß useProductList: ‚ùå Error:', err)\n        setError(err instanceof Error ? err.message : 'Error desconocido')\n        setProducts([])\n      } finally {\n        setIsLoading(false)\n      }\n    }\n\n    fetchProducts()\n  }, [])\n\n  return {\n    products,\n    isLoading,\n    error,\n  }\n}\n\nexport type { Product, ProductListResponse }\n"],"names":["useProductList","console","log","products","setProducts","useState","isLoading","setIsLoading","error","setError","useEffect","fetchProducts","response","fetch","credentials","headers","status","ok","Error","statusText","data","json","Array","isArray","length","err","message"],"mappings":";;;;+BAuCgBA;;;eAAAA;;;uBAvCoB;AAuC7B,SAASA;IACdC,QAAQC,GAAG,CAAC;IACZ,MAAM,CAACC,UAAUC,YAAY,GAAGC,IAAAA,eAAQ,EAAY,EAAE;IACtD,MAAM,CAACC,WAAWC,aAAa,GAAGF,IAAAA,eAAQ,EAAC;IAC3C,MAAM,CAACG,OAAOC,SAAS,GAAGJ,IAAAA,eAAQ,EAAgB;IAElDK,IAAAA,gBAAS,EAAC;QACR,MAAMC,gBAAgB;YACpB,IAAI;gBACFV,QAAQC,GAAG,CAAC;gBACZK,aAAa;gBACbE,SAAS;gBAET,MAAMG,WAAW,MAAMC,MAAM,gCAAgC;oBAC3DC,aAAa;oBACbC,SAAS;wBACP,gBAAgB;oBAClB;gBACF;gBACAd,QAAQC,GAAG,CAAC,uCAAuCU,SAASI,MAAM;gBAElE,IAAI,CAACJ,SAASK,EAAE,EAAE;oBAChB,MAAM,IAAIC,MAAM,CAAC,MAAM,EAAEN,SAASI,MAAM,CAAC,EAAE,EAAEJ,SAASO,UAAU,EAAE;gBACpE;gBAEA,MAAMC,OAA4B,MAAMR,SAASS,IAAI;gBACrDpB,QAAQC,GAAG,CAAC,0CAA0CkB;gBACtDnB,QAAQC,GAAG,CAAC,iCAAiCkB,KAAKA,IAAI;gBAEtD,IAAIE,MAAMC,OAAO,CAACH,KAAKA,IAAI,GAAG;oBAC5BhB,YAAYgB,KAAKA,IAAI;oBACrBnB,QAAQC,GAAG,CAAC,4CAA4CkB,KAAKA,IAAI,CAACI,MAAM;gBAC1E,OAAO;oBACL,MAAM,IAAIN,MAAM;gBAClB;YACF,EAAE,OAAOO,KAAK;gBACZxB,QAAQO,KAAK,CAAC,+BAA+BiB;gBAC7ChB,SAASgB,eAAeP,QAAQO,IAAIC,OAAO,GAAG;gBAC9CtB,YAAY,EAAE;YAChB,SAAU;gBACRG,aAAa;YACf;QACF;QAEAI;IACF,GAAG,EAAE;IAEL,OAAO;QACLR;QACAG;QACAE;IACF;AACF"}