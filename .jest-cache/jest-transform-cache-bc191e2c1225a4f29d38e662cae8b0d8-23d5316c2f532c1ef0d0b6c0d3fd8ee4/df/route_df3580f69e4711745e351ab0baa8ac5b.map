{"version":3,"names":["cov_29ibm2mff5","actualCoverage","s","POST","request","params","f","orderId","id","session","_auth","auth","user","b","_server","NextResponse","json","success","error","status","_logger","logger","log","LogLevel","INFO","LogCategory","API","userId","supabase","_server1","createAdminClient","data","order","orderError","from","select","eq","single","WARN","payment_status","orderItems","itemsError","ERROR","DATABASE","preferenceData","items","map","item","products","toString","title","name","description","quantity","unit_price","price","currency_id","payer","user_profiles","email","external_reference","back_urls","process","env","NEXT_PUBLIC_URL","failure","pending","auto_return","notification_url","preferenceResult","_mercadopago","createPaymentPreference","PAYMENT","updateError","update","payment_preference_id","updated_at","Date","toISOString","preferenceId","preference_id","payment_url","init_point","sandbox_payment_url","sandbox_init_point","message"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\orders\\[id]\\payment-link\\route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\r\nimport { auth } from '@/auth';\r\nimport { createAdminClient } from '@/lib/integrations/supabase/server';\r\nimport { logger, LogLevel, LogCategory } from '@/lib/enterprise/logger';\r\nimport { createPaymentPreference } from '@/lib/integrations/mercadopago';\r\n\r\n/**\r\n * POST /api/admin/orders/[id]/payment-link\r\n * Crea un link de pago para una orden manual\r\n */\r\nexport async function POST(\r\n  request: NextRequest,\r\n  { params }: { params: { id: string } }\r\n): Promise<NextResponse> {\r\n  try {\r\n    const orderId = params.id;\r\n\r\n    // Verificar autenticación\r\n    const session = await auth();\r\n    if (!session?.user) {\r\n      return NextResponse.json(\r\n        { success: false, error: 'No autorizado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    logger.log(LogLevel.INFO, LogCategory.API, 'Creating payment link for order', { \r\n      orderId,\r\n      userId: session.user.id \r\n    });\r\n\r\n    // Obtener datos de la orden\r\n    const supabase = createAdminClient();\r\n    const { data: order, error: orderError } = await supabase\r\n      .from('orders')\r\n      .select(`\r\n        id,\r\n        user_id,\r\n        total,\r\n        status,\r\n        payment_status,\r\n        external_reference,\r\n        user_profiles!orders_user_id_fkey (\r\n          name,\r\n          email\r\n        )\r\n      `)\r\n      .eq('id', orderId)\r\n      .single();\r\n\r\n    if (orderError || !order) {\r\n      logger.log(LogLevel.WARN, LogCategory.API, 'Order not found', { orderId, orderError });\r\n      return NextResponse.json(\r\n        { success: false, error: 'Orden no encontrada' },\r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    // Verificar que la orden esté pendiente de pago\r\n    if (order.payment_status !== 'pending') {\r\n      return NextResponse.json(\r\n        { success: false, error: 'La orden ya tiene un estado de pago diferente a pendiente' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Obtener items de la orden\r\n    const { data: orderItems, error: itemsError } = await supabase\r\n      .from('order_items')\r\n      .select(`\r\n        quantity,\r\n        price,\r\n        products!order_items_product_id_fkey (\r\n          id,\r\n          name,\r\n          description\r\n        )\r\n      `)\r\n      .eq('order_id', orderId);\r\n\r\n    if (itemsError || !orderItems) {\r\n      logger.log(LogLevel.ERROR, LogCategory.DATABASE, 'Error fetching order items', { orderId, itemsError });\r\n      return NextResponse.json(\r\n        { success: false, error: 'Error al obtener items de la orden' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Preparar datos para MercadoPago\r\n    const preferenceData = {\r\n      items: orderItems.map(item => ({\r\n        id: item.products.id.toString(),\r\n        title: item.products.name,\r\n        description: item.products.description || item.products.name,\r\n        quantity: item.quantity,\r\n        unit_price: item.price,\r\n        currency_id: 'ARS'\r\n      })),\r\n      payer: {\r\n        name: order.user_profiles?.name || 'Cliente',\r\n        email: order.user_profiles?.email || 'cliente@pinteya.com'\r\n      },\r\n      external_reference: order.external_reference || orderId.toString(),\r\n      back_urls: {\r\n        success: `${process.env.NEXT_PUBLIC_URL}/orders/success`,\r\n        failure: `${process.env.NEXT_PUBLIC_URL}/orders/failure`,\r\n        pending: `${process.env.NEXT_PUBLIC_URL}/orders/pending`\r\n      },\r\n      auto_return: 'approved',\r\n      notification_url: `${process.env.NEXT_PUBLIC_URL}/api/payments/webhook`\r\n    };\r\n\r\n    // Crear preferencia en MercadoPago\r\n    const preferenceResult = await createPaymentPreference(preferenceData);\r\n\r\n    if (!preferenceResult.success || !preferenceResult.data) {\r\n      logger.log(LogLevel.ERROR, LogCategory.PAYMENT, 'Error creating MercadoPago preference', { \r\n        orderId,\r\n        error: preferenceResult.error \r\n      });\r\n      return NextResponse.json(\r\n        { success: false, error: 'Error al crear preferencia de pago' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Actualizar orden con preference_id\r\n    const { error: updateError } = await supabase\r\n      .from('orders')\r\n      .update({\r\n        payment_preference_id: preferenceResult.data.id,\r\n        updated_at: new Date().toISOString()\r\n      })\r\n      .eq('id', orderId);\r\n\r\n    if (updateError) {\r\n      logger.log(LogLevel.ERROR, LogCategory.DATABASE, 'Error updating order with preference_id', { \r\n        orderId,\r\n        updateError \r\n      });\r\n    }\r\n\r\n    logger.log(LogLevel.INFO, LogCategory.API, 'Payment link created successfully', {\r\n      orderId,\r\n      preferenceId: preferenceResult.data.id\r\n    });\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: {\r\n        preference_id: preferenceResult.data.id,\r\n        payment_url: preferenceResult.data.init_point,\r\n        sandbox_payment_url: preferenceResult.data.sandbox_init_point\r\n      },\r\n      message: 'Link de pago creado exitosamente'\r\n    });\r\n\r\n  } catch (error) {\r\n    logger.log(LogLevel.ERROR, LogCategory.API, 'Unexpected error creating payment link', { \r\n      orderId: params.id,\r\n      error \r\n    });\r\n    \r\n    return NextResponse.json(\r\n      { success: false, error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]}