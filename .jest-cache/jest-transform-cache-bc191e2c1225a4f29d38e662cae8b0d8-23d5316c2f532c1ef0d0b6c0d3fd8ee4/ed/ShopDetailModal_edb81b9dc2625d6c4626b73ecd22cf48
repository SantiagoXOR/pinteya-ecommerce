c812b11e44fe2d1946adfe83c246edaf
'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: Object.getOwnPropertyDescriptor(all, name).get
    });
}
_export(exports, {
    get ShopDetailModal () {
        return ShopDetailModal;
    },
    get default () {
        return _default;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _modal = require("../ui/modal");
const _useShopDetailsReducer = require("../../hooks/optimization/useShopDetailsReducer");
const _button = require("../ui/button");
const _badge = require("../ui/badge");
const _separator = require("../ui/separator");
const _lucidereact = require("lucide-react");
const _utils = require("../../lib/core/utils");
const _freeshippingtext = require("../ui/free-shipping-text");
const _advancedcolorpicker = require("../ui/advanced-color-picker");
const _productutils = require("../../utils/product-utils");
const _productvariants = require("../../lib/api/product-variants");
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const ColorSelector = ({ colors, selectedColor, onColorChange })=>{
    const colorMap = {
        'blanco': '#FFFFFF',
        'negro': '#000000',
        'rojo': '#DC2626',
        'azul': '#2563EB',
        'verde': '#16A34A',
        'amarillo': '#EAB308',
        'naranja': '#EA580C',
        'gris': '#6B7280',
        'marron': '#92400E',
        'rosa': '#EC4899'
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        className: "space-y-3",
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)("h4", {
                className: "text-sm font-medium text-gray-900",
                children: "Color"
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "flex flex-wrap gap-2",
                children: colors.map((color)=>/*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                        onClick: ()=>onColorChange(color),
                        className: (0, _utils.cn)("w-8 h-8 rounded-full border-2 transition-all duration-200", selectedColor === color ? "border-blaze-orange-500 ring-2 ring-blaze-orange-200" : "border-gray-300 hover:border-gray-400"),
                        style: {
                            backgroundColor: colorMap[color.toLowerCase()] || '#E5E7EB',
                            boxShadow: color.toLowerCase() === 'blanco' ? 'inset 0 0 0 1px #E5E7EB' : 'none'
                        },
                        title: color,
                        "aria-label": `Seleccionar color ${color}`
                    }, color))
            }),
            selectedColor && /*#__PURE__*/ (0, _jsxruntime.jsxs)("p", {
                className: "text-sm text-gray-600 capitalize",
                children: [
                    "Color seleccionado: ",
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                        className: "font-medium",
                        children: _advancedcolorpicker.PAINT_COLORS.find((color)=>color.id === selectedColor)?.displayName
                    })
                ]
            })
        ]
    });
};
const CapacitySelector = ({ capacities, selectedCapacity, onCapacityChange })=>{
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        className: "space-y-3",
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)("h4", {
                className: "text-sm font-medium text-gray-900",
                children: "Capacidad"
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "grid grid-cols-2 sm:grid-cols-4 gap-2",
                children: capacities.map((capacity)=>/*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                        onClick: ()=>onCapacityChange(capacity),
                        className: (0, _utils.cn)("px-4 py-2 text-sm font-medium rounded-lg border transition-all duration-200", selectedCapacity === capacity ? "border-blaze-orange-500 bg-blaze-orange-50 text-blaze-orange-700" : "border-gray-300 bg-white text-gray-700 hover:border-gray-400 hover:bg-gray-50"),
                        children: capacity
                    }, capacity))
            }),
            selectedCapacity && /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                className: "text-sm text-gray-600",
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                    className: "font-medium",
                    children: selectedCapacity
                })
            })
        ]
    });
};
const QuantitySelector = ({ quantity, onQuantityChange, onIncrement, onDecrement, maxQuantity = 99, stock })=>{
    const isMinQuantity = quantity <= 1;
    const isMaxQuantity = quantity >= Math.min(maxQuantity, stock);
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        className: "space-y-4",
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsxs)("h4", {
                className: "text-base font-semibold text-gray-900 flex items-center gap-2",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.ShoppingCart, {
                        className: "w-5 h-5 text-blaze-orange-600"
                    }),
                    "Cantidad"
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "flex items-center justify-between",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "flex items-center border-2 border-gray-200 rounded-xl overflow-hidden bg-white shadow-sm",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                onClick: onDecrement,
                                disabled: isMinQuantity,
                                className: (0, _utils.cn)("p-3 transition-all duration-200", isMinQuantity ? "opacity-50 cursor-not-allowed bg-gray-50" : "hover:bg-blaze-orange-50 hover:text-blaze-orange-600"),
                                "aria-label": "Disminuir cantidad",
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Minus, {
                                    className: "w-4 h-4"
                                })
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                type: "number",
                                value: quantity,
                                onChange: (e)=>{
                                    const value = parseInt(e.target.value) || 1;
                                    const clampedValue = Math.max(1, Math.min(value, Math.min(maxQuantity, stock)));
                                    onQuantityChange(clampedValue);
                                },
                                className: "w-16 px-3 py-3 text-center border-0 focus:outline-none font-semibold text-gray-900 [appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none",
                                min: "1",
                                max: Math.min(maxQuantity, stock)
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                onClick: onIncrement,
                                disabled: isMaxQuantity,
                                className: (0, _utils.cn)("p-3 transition-all duration-200", isMaxQuantity ? "opacity-50 cursor-not-allowed bg-gray-50" : "hover:bg-blaze-orange-50 hover:text-blaze-orange-600"),
                                "aria-label": "Aumentar cantidad",
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Plus, {
                                    className: "w-4 h-4"
                                })
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: "bg-gray-50 px-3 py-2 rounded-lg hidden",
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                            className: (0, _utils.cn)("text-sm font-medium", stock > 0 ? "text-green-600" : "text-red-600"),
                            children: stock > 0 ? `${stock} disponibles` : 'Sin stock'
                        })
                    })
                ]
            })
        ]
    });
};
const GrainSelector = ({ grainOptions, selectedGrain, onGrainChange })=>{
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        className: "space-y-4",
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "flex items-center gap-2",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Layers, {
                        className: "w-5 h-5 text-blaze-orange-600"
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                        className: "text-base font-semibold text-gray-900",
                        children: "Grano"
                    })
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "grid grid-cols-4 gap-2",
                children: grainOptions.map((grain)=>/*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                        onClick: ()=>onGrainChange(grain),
                        className: (0, _utils.cn)("px-3 py-2 rounded-lg border-2 text-sm font-semibold transition-all duration-200 hover:shadow-md", selectedGrain === grain ? "border-blaze-orange-500 bg-blaze-orange-50 text-blaze-orange-700 shadow-sm" : "border-gray-200 bg-white text-gray-700 hover:border-blaze-orange-300 hover:bg-blaze-orange-25"),
                        children: grain
                    }, grain))
            }),
            selectedGrain && /*#__PURE__*/ (0, _jsxruntime.jsxs)("p", {
                className: "text-sm text-gray-600",
                children: [
                    "Grano seleccionado: ",
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                        className: "font-medium",
                        children: selectedGrain
                    })
                ]
            })
        ]
    });
};
const SizeSelector = ({ sizeOptions, selectedSize, onSizeChange })=>{
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        className: "space-y-4",
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "flex items-center gap-2",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Ruler, {
                        className: "w-5 h-5 text-blaze-orange-600"
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                        className: "text-base font-semibold text-gray-900",
                        children: "Tama\xf1o"
                    })
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "grid grid-cols-3 gap-2",
                children: sizeOptions.map((size)=>/*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                        onClick: ()=>onSizeChange(size),
                        className: (0, _utils.cn)("px-3 py-2 rounded-lg border-2 text-sm font-semibold transition-all duration-200 hover:shadow-md", selectedSize === size ? "border-blaze-orange-500 bg-blaze-orange-50 text-blaze-orange-700 shadow-sm" : "border-gray-200 bg-white text-gray-700 hover:border-blaze-orange-300 hover:bg-blaze-orange-25"),
                        children: size
                    }, size))
            }),
            selectedSize && /*#__PURE__*/ (0, _jsxruntime.jsxs)("p", {
                className: "text-sm text-gray-600",
                children: [
                    "Tama\xf1o seleccionado: ",
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                        className: "font-medium",
                        children: selectedSize
                    })
                ]
            })
        ]
    });
};
const WidthSelector = ({ widthOptions, selectedWidth, onWidthChange })=>{
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        className: "space-y-4",
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "flex items-center gap-2",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Maximize, {
                        className: "w-5 h-5 text-blaze-orange-600"
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                        className: "text-base font-semibold text-gray-900",
                        children: "Ancho"
                    })
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "grid grid-cols-3 gap-2",
                children: widthOptions.map((width)=>/*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                        onClick: ()=>onWidthChange(width),
                        className: (0, _utils.cn)("px-3 py-2 rounded-lg border-2 text-sm font-semibold transition-all duration-200 hover:shadow-md", selectedWidth === width ? "border-blaze-orange-500 bg-blaze-orange-50 text-blaze-orange-700 shadow-sm" : "border-gray-200 bg-white text-gray-700 hover:border-blaze-orange-300 hover:bg-blaze-orange-25"),
                        children: width
                    }, width))
            }),
            selectedWidth && /*#__PURE__*/ (0, _jsxruntime.jsxs)("p", {
                className: "text-sm text-gray-600",
                children: [
                    "Ancho seleccionado: ",
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                        className: "font-medium",
                        children: selectedWidth
                    })
                ]
            })
        ]
    });
};
const ShopDetailModal = ({ product, open, onOpenChange, onAddToCart, onAddToWishlist })=>{
    // Debug: Verificar que onOpenChange se recibe correctamente
    console.log('ShopDetailModal - onOpenChange recibido:', typeof onOpenChange, onOpenChange);
    const { state, actions, selectors } = (0, _useShopDetailsReducer.useShopDetailsReducer)();
    // Estados del modal
    const [selectedColor, setSelectedColor] = (0, _react.useState)('');
    const [selectedCapacity, setSelectedCapacity] = (0, _react.useState)('');
    const [selectedGrain, setSelectedGrain] = (0, _react.useState)('');
    const [selectedSize, setSelectedSize] = (0, _react.useState)('');
    const [selectedWidth, setSelectedWidth] = (0, _react.useState)('');
    const [quantity, setQuantity] = (0, _react.useState)(1);
    const [isLoading, setIsLoading] = (0, _react.useState)(false);
    const [variants, setVariants] = (0, _react.useState)([]);
    const [selectedVariant, setSelectedVariant] = (0, _react.useState)(null);
    const [loadingVariants, setLoadingVariants] = (0, _react.useState)(false);
    // Función para resetear estados
    const resetStates = ()=>{
        setSelectedColor('');
        setSelectedCapacity('');
        setSelectedGrain('');
        setSelectedSize('');
        setSelectedWidth('');
        setQuantity(1);
        setVariants([]);
        setSelectedVariant(null);
    };
    // Detectar tipo de producto
    const productType = (0, _productutils.detectProductType)(product.name, product.category);
    // Cargar variantes del producto
    (0, _react.useEffect)(()=>{
        if (open && product.id) {
            setLoadingVariants(true);
            (0, _productvariants.getProductVariants)(product.id).then((response)=>{
                if (response.success && response.data) {
                    setVariants(response.data);
                    // Seleccionar la primera variante por defecto
                    if (response.data.length > 0) {
                        const firstVariant = response.data[0];
                        setSelectedVariant(firstVariant);
                        setSelectedCapacity(firstVariant.capacity);
                    }
                }
            }).catch((error)=>{
                console.error('Error cargando variantes:', error);
                setVariants([]);
            }).finally(()=>{
                setLoadingVariants(false);
            });
        }
    }, [
        open,
        product.id
    ]);
    // Configurar valores por defecto
    (0, _react.useEffect)(()=>{
        if (!selectedColor && productType.hasColorSelector) {
            const defaultColorName = (0, _productutils.getDefaultColor)(productType);
            const defaultColor = _advancedcolorpicker.PAINT_COLORS.find((color)=>color.name.toLowerCase().includes(defaultColorName.toLowerCase()));
            if (defaultColor) {
                setSelectedColor(defaultColor.id);
            }
        }
        if (!selectedCapacity && productType.defaultCapacities.length > 0) {
            setSelectedCapacity(productType.defaultCapacities[0]);
        }
        // Configurar valores por defecto para los nuevos selectores
        if (!selectedGrain && productType.hasGrainSelector && productType.grainOptions.length > 0) {
            setSelectedGrain(productType.grainOptions[0]);
        }
        if (!selectedSize && productType.hasSizeSelector && productType.sizeOptions.length > 0) {
            setSelectedSize(productType.sizeOptions[0]);
        }
        if (!selectedWidth && productType.hasWidthSelector && productType.widthOptions.length > 0) {
            setSelectedWidth(productType.widthOptions[0]);
        }
    }, [
        productType,
        selectedColor,
        selectedCapacity,
        selectedGrain,
        selectedSize,
        selectedWidth
    ]);
    // Actualizar variante seleccionada cuando cambia la capacidad
    (0, _react.useEffect)(()=>{
        if (selectedCapacity && variants.length > 0) {
            const variant = (0, _productvariants.findVariantByCapacity)(variants, selectedCapacity);
            setSelectedVariant(variant);
        }
    }, [
        selectedCapacity,
        variants
    ]);
    // Calcular capacidades disponibles basándose en las variantes
    const availableCapacities = variants.length > 0 ? (0, _productvariants.getAvailableCapacities)(variants) : productType.defaultCapacities;
    // Calcular precio dinámico basado en selecciones
    const calculateDynamicPrice = (0, _react.useCallback)(()=>{
        let basePrice = selectedVariant ? (0, _productvariants.getEffectivePrice)(selectedVariant) : parseFloat(product.discounted_price || product.price);
        // Aplicar modificadores de precio por tamaño
        if (selectedSize && productType.hasSizeSelector) {
            const sizeMultipliers = {
                '1/2"': 1.0,
                '1"': 1.2,
                '1 1/2"': 1.4,
                '2"': 1.6,
                '2 1/2"': 1.8,
                '3"': 2.0,
                '4"': 2.4
            };
            const multiplier = sizeMultipliers[selectedSize] || 1.0;
            basePrice *= multiplier;
        }
        // Aplicar modificadores de precio por ancho/longitud
        if (selectedWidth && productType.hasWidthSelector) {
            const widthMultipliers = {
                '12mm': 1.0,
                '18mm': 1.2,
                '24mm': 1.4,
                '36mm': 1.6,
                '48mm': 1.8,
                '72mm': 2.0
            };
            const multiplier = widthMultipliers[selectedWidth] || 1.0;
            basePrice *= multiplier;
        }
        return basePrice;
    }, [
        selectedVariant,
        selectedSize,
        selectedWidth,
        productType,
        product
    ]);
    // Obtener precio actual basado en la variante seleccionada y modificadores
    const currentPrice = calculateDynamicPrice();
    const originalPrice = selectedVariant ? parseFloat(selectedVariant.price) : parseFloat(product.price);
    const hasVariantDiscount = selectedVariant ? (0, _productvariants.hasDiscount)(selectedVariant) : product.discounted_price && parseFloat(product.discounted_price) < parseFloat(product.price);
    // Datos por defecto para productos de pinturería
    const availableColors = product.colors || _advancedcolorpicker.PAINT_COLORS.slice(0, 12); // Usar colores del producto o los primeros 12 por defecto
    const defaultCapacities = product.capacities || [
        '1L',
        '4L',
        '10L',
        '20L'
    ];
    const handleAddToCart = ()=>{
        if (onAddToCart) {
            // Usar el producto de la variante seleccionada si está disponible
            const productToAdd = selectedVariant ? {
                ...product,
                id: selectedVariant.id,
                price: selectedVariant.price,
                discounted_price: selectedVariant.discounted_price,
                capacity: selectedVariant.capacity
            } : product;
            onAddToCart(productToAdd, quantity, selectedColor, selectedCapacity);
        }
        // Verificar que onOpenChange existe antes de llamarla
        if (onOpenChange) {
            onOpenChange(false);
        }
    };
    const handleAddToFavorites = ()=>{
        if (onAddToFavorites) {
            onAddToFavorites(product);
        }
    };
    // Calcular si hay descuento (renombrado para evitar conflicto)
    const hasProductDiscount = product.originalPrice && product.originalPrice > product.price;
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_modal.QuickViewModal, {
        open: open,
        onOpenChange: onOpenChange,
        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
            className: "grid grid-cols-1 lg:grid-cols-2 gap-8 max-w-4xl mx-auto",
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "space-y-4",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            className: "aspect-square bg-gray-100 rounded-lg overflow-hidden",
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)("img", {
                                src: product.images?.[0] || '/images/placeholder-product.jpg',
                                alt: product.name,
                                className: "w-full h-full object-cover"
                            })
                        }),
                        hasProductDiscount && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_badge.Badge, {
                            variant: "destructive",
                            className: "w-fit",
                            children: [
                                Math.round((product.originalPrice - product.price) / product.originalPrice * 100),
                                "% OFF"
                            ]
                        })
                    ]
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "space-y-6",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "space-y-2",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                    className: "text-sm text-gray-500 uppercase font-medium",
                                    children: product.brand
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("h2", {
                                    className: "text-2xl font-bold text-gray-900",
                                    children: product.name
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                    className: "flex items-center gap-3",
                                    children: hasVariantDiscount ? /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                                className: "text-3xl font-bold text-blaze-orange-600",
                                                children: [
                                                    "$",
                                                    currentPrice.toLocaleString()
                                                ]
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                                className: "text-xl text-gray-500 line-through",
                                                children: [
                                                    "$",
                                                    originalPrice.toLocaleString()
                                                ]
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_badge.Badge, {
                                                variant: "destructive",
                                                className: "text-sm",
                                                children: [
                                                    Math.round((originalPrice - currentPrice) / originalPrice * 100),
                                                    "% OFF"
                                                ]
                                            })
                                        ]
                                    }) : /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                        className: "text-3xl font-bold text-blaze-orange-600",
                                        children: [
                                            "$",
                                            currentPrice.toLocaleString()
                                        ]
                                    })
                                })
                            ]
                        }),
                        product.description && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                className: "text-gray-600 leading-relaxed",
                                children: product.description
                            })
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_separator.Separator, {}),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "space-y-6",
                            children: [
                                productType.hasColorSelector && /*#__PURE__*/ (0, _jsxruntime.jsx)(_advancedcolorpicker.AdvancedColorPicker, {
                                    colors: _advancedcolorpicker.PAINT_COLORS,
                                    selectedColor: selectedColor,
                                    onColorChange: setSelectedColor,
                                    showSearch: _advancedcolorpicker.PAINT_COLORS.length > 12,
                                    showCategories: _advancedcolorpicker.PAINT_COLORS.length > 20,
                                    maxDisplayColors: 16,
                                    className: "bg-white",
                                    productType: productType
                                }),
                                availableCapacities.length > 0 && !(availableCapacities.length === 1 && availableCapacities[0] === 'Sin especificar') && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "space-y-4",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            className: "flex items-center gap-2",
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Box, {
                                                    className: "w-5 h-5 text-blaze-orange-600"
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                    className: "text-base font-semibold text-gray-900",
                                                    children: productType.capacityUnit === 'litros' ? 'Capacidad' : productType.capacityUnit === 'kg' ? 'Peso' : productType.capacityUnit === 'metros' ? 'Longitud' : 'Cantidad'
                                                })
                                            ]
                                        }),
                                        loadingVariants ? /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            className: "grid grid-cols-2 gap-3",
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                    className: "animate-pulse bg-gray-200 rounded-xl h-12"
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                    className: "animate-pulse bg-gray-200 rounded-xl h-12"
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                    className: "animate-pulse bg-gray-200 rounded-xl h-12"
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                    className: "animate-pulse bg-gray-200 rounded-xl h-12"
                                                })
                                            ]
                                        }) : /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                            className: "grid grid-cols-2 gap-3",
                                            children: availableCapacities.map((capacity)=>/*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                                    onClick: ()=>setSelectedCapacity(capacity),
                                                    className: (0, _utils.cn)("px-4 py-3 rounded-xl border-2 text-sm font-semibold transition-all duration-200 hover:shadow-md", selectedCapacity === capacity ? "border-blaze-orange-500 bg-blaze-orange-50 text-blaze-orange-700 shadow-sm" : "border-gray-200 bg-white text-gray-700 hover:border-blaze-orange-300 hover:bg-blaze-orange-25"),
                                                    children: (0, _productutils.formatCapacity)(capacity, productType.capacityUnit)
                                                }, capacity))
                                        })
                                    ]
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(QuantitySelector, {
                                    quantity: quantity,
                                    onQuantityChange: setQuantity,
                                    onIncrement: ()=>setQuantity((prev)=>prev + 1),
                                    onDecrement: ()=>setQuantity((prev)=>Math.max(1, prev - 1)),
                                    stock: product.stock
                                }),
                                productType.hasGrainSelector && /*#__PURE__*/ (0, _jsxruntime.jsx)(GrainSelector, {
                                    grainOptions: productType.grainOptions,
                                    selectedGrain: selectedGrain,
                                    onGrainChange: setSelectedGrain
                                }),
                                productType.hasSizeSelector && /*#__PURE__*/ (0, _jsxruntime.jsx)(SizeSelector, {
                                    sizeOptions: productType.sizeOptions,
                                    selectedSize: selectedSize,
                                    onSizeChange: setSelectedSize
                                }),
                                productType.hasWidthSelector && /*#__PURE__*/ (0, _jsxruntime.jsx)(WidthSelector, {
                                    widthOptions: productType.widthOptions,
                                    selectedWidth: selectedWidth,
                                    onWidthChange: setSelectedWidth
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_separator.Separator, {}),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "bg-gray-50 p-4 rounded-lg",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "flex justify-between items-center",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                            className: "text-lg font-medium text-gray-900",
                                            children: "Total:"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                            className: "text-2xl font-bold text-blaze-orange-600",
                                            children: [
                                                "$",
                                                (currentPrice * quantity).toLocaleString()
                                            ]
                                        })
                                    ]
                                }),
                                quantity > 1 && /*#__PURE__*/ (0, _jsxruntime.jsxs)("p", {
                                    className: "text-sm text-gray-600 mt-1",
                                    children: [
                                        "$",
                                        currentPrice.toLocaleString(),
                                        " \xd7 ",
                                        quantity,
                                        " unidades"
                                    ]
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "mt-3 space-y-1",
                                    children: [
                                        productType.hasColorSelector && selectedColor && /*#__PURE__*/ (0, _jsxruntime.jsxs)("p", {
                                            className: "text-xs text-gray-500",
                                            children: [
                                                "Color: ",
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                    className: "font-medium capitalize",
                                                    children: _advancedcolorpicker.PAINT_COLORS.find((color)=>color.id === selectedColor)?.displayName || _advancedcolorpicker.PAINT_COLORS.find((color)=>color.id === selectedColor)?.name || selectedColor
                                                })
                                            ]
                                        }),
                                        selectedCapacity && /*#__PURE__*/ (0, _jsxruntime.jsxs)("p", {
                                            className: "text-xs text-gray-500",
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                                    className: "font-medium",
                                                    children: [
                                                        productType.capacityUnit === 'litros' ? 'Capacidad' : productType.capacityUnit === 'kg' ? 'Peso' : productType.capacityUnit === 'metros' ? 'Longitud' : 'Cantidad',
                                                        ":"
                                                    ]
                                                }),
                                                " ",
                                                (0, _productutils.formatCapacity)(selectedCapacity, productType.capacityUnit)
                                            ]
                                        }),
                                        productType.hasGrainSelector && selectedGrain && /*#__PURE__*/ (0, _jsxruntime.jsxs)("p", {
                                            className: "text-xs text-gray-500",
                                            children: [
                                                "Grano: ",
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                    className: "font-medium",
                                                    children: selectedGrain
                                                })
                                            ]
                                        }),
                                        productType.hasSizeSelector && selectedSize && /*#__PURE__*/ (0, _jsxruntime.jsxs)("p", {
                                            className: "text-xs text-gray-500",
                                            children: [
                                                "Tama\xf1o: ",
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                    className: "font-medium",
                                                    children: selectedSize
                                                })
                                            ]
                                        }),
                                        productType.hasWidthSelector && selectedWidth && /*#__PURE__*/ (0, _jsxruntime.jsxs)("p", {
                                            className: "text-xs text-gray-500",
                                            children: [
                                                "Ancho: ",
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                    className: "font-medium",
                                                    children: selectedWidth
                                                })
                                            ]
                                        })
                                    ]
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            className: "space-y-3",
                            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_button.Button, {
                                onClick: handleAddToCart,
                                disabled: product.stock === 0 || isLoading,
                                className: "w-full bg-yellow-400 hover:bg-yellow-500 text-black text-lg py-3 rounded-xl font-semibold",
                                size: "lg",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.ShoppingCart, {
                                        className: "mr-2 h-5 w-5"
                                    }),
                                    product.stock === 0 ? 'Sin Stock' : isLoading ? 'Agregando...' : 'Agregar al Carrito'
                                ]
                            })
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "text-sm text-gray-600 space-y-1",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_freeshippingtext.FreeShippingText, {}),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                    children: "• Garant\xeda de calidad en todos nuestros productos"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                    children: "• Asesoramiento t\xe9cnico especializado"
                                })
                            ]
                        })
                    ]
                })
            ]
        })
    });
};
const _default = ShopDetailModal;

//# sourceMappingURL=data:application/json;base64,