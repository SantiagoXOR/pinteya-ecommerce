9191918b118a6ead31b412cda52e14af
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_default(require("react"));
const _react1 = require("@testing-library/react");
const _productcardcommercial = require("../product-card-commercial");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
describe('CommercialProductCard', ()=>{
    const defaultProps = {
        image: '/test-image.jpg',
        title: 'Barniz Campbell 4L',
        brand: 'Petrilac',
        price: 19350,
        originalPrice: 21500,
        discount: '10%',
        stock: 12,
        onAddToCart: jest.fn()
    };
    beforeEach(()=>{
        jest.clearAllMocks();
    });
    it('renders correctly with all props', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_productcardcommercial.CommercialProductCard, {
            ...defaultProps
        }));
        expect(_react1.screen.getByTestId('commercial-product-card')).toBeInTheDocument();
        expect(_react1.screen.getByText('Barniz Campbell 4L')).toBeInTheDocument();
        expect(_react1.screen.getByText('Petrilac')).toBeInTheDocument();
        expect(_react1.screen.getByText('$19.350')).toBeInTheDocument();
        expect(_react1.screen.getByText('$21.500')).toBeInTheDocument();
    });
    it('shows "Nuevo" badge when isNew is true', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_productcardcommercial.CommercialProductCard, {
            ...defaultProps,
            isNew: true
        }));
        expect(_react1.screen.getByText('Nuevo')).toBeInTheDocument();
    });
    it('shows discount badge when discount is provided', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_productcardcommercial.CommercialProductCard, {
            ...defaultProps
        }));
        expect(_react1.screen.getByText('10%')).toBeInTheDocument();
        expect(_react1.screen.getByText('Descuento')).toBeInTheDocument();
        expect(_react1.screen.getByText('especial')).toBeInTheDocument();
    });
    it('shows installments information when provided', ()=>{
        const installments = {
            quantity: 3,
            amount: 6450,
            interestFree: true
        };
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_productcardcommercial.CommercialProductCard, {
            ...defaultProps,
            installments: installments
        }));
        expect(_react1.screen.getByText('3x de $6.450 sin interés')).toBeInTheDocument();
    });
    it('shows free shipping when freeShipping is true', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_productcardcommercial.CommercialProductCard, {
            ...defaultProps,
            freeShipping: true
        }));
        expect(_react1.screen.getByAltText('Envío gratis')).toBeInTheDocument();
    });
    it('shows free shipping automatically for prices >= 15000', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_productcardcommercial.CommercialProductCard, {
            ...defaultProps,
            price: 20000
        }));
        expect(_react1.screen.getByAltText('Envío gratis')).toBeInTheDocument();
    });
    it('shows delivery location when provided', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_productcardcommercial.CommercialProductCard, {
            ...defaultProps,
            freeShipping: true,
            deliveryLocation: "Llega gratis hoy en C\xf3rdoba Capital"
        }));
        // Ahora solo muestra el ícono, no el texto de ubicación
        expect(_react1.screen.getByAltText('Envío gratis')).toBeInTheDocument();
    });
    it('calls onAddToCart when button is clicked', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_productcardcommercial.CommercialProductCard, {
            ...defaultProps
        }));
        const button = _react1.screen.getByTestId('add-to-cart-btn');
        _react1.fireEvent.click(button);
        expect(defaultProps.onAddToCart).toHaveBeenCalledTimes(1);
    });
    it('shows loading state when adding to cart', async ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_productcardcommercial.CommercialProductCard, {
            ...defaultProps,
            showCartAnimation: true
        }));
        const button = _react1.screen.getByTestId('add-to-cart-btn');
        _react1.fireEvent.click(button);
        // Verificar que el botón está deshabilitado durante la carga
        expect(button).toBeDisabled();
        // Verificar que aparece el texto "Agregando..." (puede estar oculto en mobile)
        await (0, _react1.waitFor)(()=>{
            const loadingTexts = _react1.screen.getAllByText(/Agregando|\.\.\./);
            expect(loadingTexts.length).toBeGreaterThan(0);
        }, {
            timeout: 100
        });
        // Verificar que después de 1 segundo el botón vuelve a estar habilitado
        await (0, _react1.waitFor)(()=>{
            expect(button).not.toBeDisabled();
        }, {
            timeout: 1200
        });
    });
    it('disables button when stock is 0', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_productcardcommercial.CommercialProductCard, {
            ...defaultProps,
            stock: 0
        }));
        const button = _react1.screen.getByTestId('add-to-cart-btn');
        expect(button).toBeDisabled();
        expect(_react1.screen.getByText('Sin stock')).toBeInTheDocument();
    });
    it('shows placeholder when no image is provided', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_productcardcommercial.CommercialProductCard, {
            ...defaultProps,
            image: undefined
        }));
        const placeholder = _react1.screen.getByAltText('Sin imagen');
        expect(placeholder).toBeInTheDocument();
    });
    it('handles image error by showing placeholder', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_productcardcommercial.CommercialProductCard, {
            ...defaultProps
        }));
        const image = _react1.screen.getByAltText('Barniz Campbell 4L');
        _react1.fireEvent.error(image);
        expect(image).toHaveAttribute('src', '/images/products/placeholder.svg');
    });
    it('applies custom className', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_productcardcommercial.CommercialProductCard, {
            ...defaultProps,
            className: "custom-class"
        }));
        const card = _react1.screen.getByTestId('commercial-product-card');
        expect(card).toHaveClass('custom-class');
    });
    it('renders without brand when not provided', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_productcardcommercial.CommercialProductCard, {
            ...defaultProps,
            brand: undefined
        }));
        expect(_react1.screen.queryByText('Petrilac')).not.toBeInTheDocument();
    });
    it('renders without original price when not provided', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_productcardcommercial.CommercialProductCard, {
            ...defaultProps,
            originalPrice: undefined
        }));
        expect(_react1.screen.queryByText('$21.500')).not.toBeInTheDocument();
    });
    it('renders without discount badge when not provided', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_productcardcommercial.CommercialProductCard, {
            ...defaultProps,
            discount: undefined
        }));
        expect(_react1.screen.queryByText('10%')).not.toBeInTheDocument();
        expect(_react1.screen.queryByText('Descuento')).not.toBeInTheDocument();
        expect(_react1.screen.queryByText('especial')).not.toBeInTheDocument();
    });
    it('uses custom CTA text', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_productcardcommercial.CommercialProductCard, {
            ...defaultProps,
            cta: "Comprar ahora"
        }));
        expect(_react1.screen.getByText('Comprar ahora')).toBeInTheDocument();
    });
    it('renders children when provided', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_productcardcommercial.CommercialProductCard, {
            ...defaultProps,
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                "data-testid": "custom-child",
                children: "Custom content"
            })
        }));
        expect(_react1.screen.getByTestId('custom-child')).toBeInTheDocument();
        expect(_react1.screen.getByText('Custom content')).toBeInTheDocument();
    });
    it('handles zero price correctly', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_productcardcommercial.CommercialProductCard, {
            ...defaultProps,
            price: 0
        }));
        expect(_react1.screen.getByText('$0')).toBeInTheDocument();
    });
    it('formats large prices correctly', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_productcardcommercial.CommercialProductCard, {
            ...defaultProps,
            price: 123456
        }));
        expect(_react1.screen.getByText('$123.456')).toBeInTheDocument();
    });
});

//# sourceMappingURL=data:application/json;base64,