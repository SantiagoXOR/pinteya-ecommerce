14f8e34ce12e9038c34b473b7964be86
// ===================================
// HOOK: useBrandFilter
// ===================================
"use strict";

/* istanbul ignore next */
function cov_2e4jmttz5v() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useBrandFilter.ts";
  var hash = "515739615e938000e91bf74183df2215216d1901";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useBrandFilter.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "2": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "3": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 33,
          column: 3
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 33
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 33
        }
      },
      "6": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 33
        }
      },
      "7": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 30
        }
      },
      "8": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 36
        }
      },
      "9": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 29
        }
      },
      "10": {
        start: {
          line: 34,
          column: 15
        },
        end: {
          line: 34,
          column: 31
        }
      },
      "11": {
        start: {
          line: 35,
          column: 16
        },
        end: {
          line: 35,
          column: 44
        }
      },
      "12": {
        start: {
          line: 36,
          column: 20
        },
        end: {
          line: 36,
          column: 46
        }
      },
      "13": {
        start: {
          line: 38,
          column: 107
        },
        end: {
          line: 38,
          column: 114
        }
      },
      "14": {
        start: {
          line: 39,
          column: 19
        },
        end: {
          line: 39,
          column: 47
        }
      },
      "15": {
        start: {
          line: 40,
          column: 25
        },
        end: {
          line: 40,
          column: 59
        }
      },
      "16": {
        start: {
          line: 42,
          column: 32
        },
        end: {
          line: 42,
          column: 56
        }
      },
      "17": {
        start: {
          line: 43,
          column: 53
        },
        end: {
          line: 43,
          column: 77
        }
      },
      "18": {
        start: {
          line: 44,
          column: 38
        },
        end: {
          line: 44,
          column: 65
        }
      },
      "19": {
        start: {
          line: 45,
          column: 30
        },
        end: {
          line: 45,
          column: 56
        }
      },
      "20": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 59,
          column: 7
        }
      },
      "21": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 54,
          column: 9
        }
      },
      "22": {
        start: {
          line: 49,
          column: 30
        },
        end: {
          line: 49,
          column: 56
        }
      },
      "23": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 53,
          column: 13
        }
      },
      "24": {
        start: {
          line: 51,
          column: 36
        },
        end: {
          line: 51,
          column: 72
        }
      },
      "25": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 52,
          column: 52
        }
      },
      "26": {
        start: {
          line: 61,
          column: 24
        },
        end: {
          line: 80,
          column: 6
        }
      },
      "27": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 27
        }
      },
      "28": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 23
        }
      },
      "29": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 77,
          column: 9
        }
      },
      "30": {
        start: {
          line: 65,
          column: 29
        },
        end: {
          line: 67,
          column: 14
        }
      },
      "31": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 72,
          column: 13
        }
      },
      "32": {
        start: {
          line: 69,
          column: 16
        },
        end: {
          line: 69,
          column: 41
        }
      },
      "33": {
        start: {
          line: 71,
          column: 16
        },
        end: {
          line: 71,
          column: 68
        }
      },
      "34": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 79
        }
      },
      "35": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 32
        }
      },
      "36": {
        start: {
          line: 82,
          column: 4
        },
        end: {
          line: 89,
          column: 7
        }
      },
      "37": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 85,
          column: 9
        }
      },
      "38": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 26
        }
      },
      "39": {
        start: {
          line: 91,
          column: 22
        },
        end: {
          line: 110,
          column: 6
        }
      },
      "40": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 94,
          column: 9
        }
      },
      "41": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 19
        }
      },
      "42": {
        start: {
          line: 95,
          column: 23
        },
        end: {
          line: 95,
          column: 68
        }
      },
      "43": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 100,
          column: 9
        }
      },
      "44": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 97,
          column: 54
        }
      },
      "45": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 36
        }
      },
      "46": {
        start: {
          line: 101,
          column: 23
        },
        end: {
          line: 101,
          column: 73
        }
      },
      "47": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 104,
          column: 11
        }
      },
      "48": {
        start: {
          line: 112,
          column: 30
        },
        end: {
          line: 119,
          column: 6
        }
      },
      "49": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 113,
          column: 42
        }
      },
      "50": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 114,
          column: 29
        }
      },
      "51": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 115,
          column: 36
        }
      },
      "52": {
        start: {
          line: 121,
          column: 24
        },
        end: {
          line: 130,
          column: 6
        }
      },
      "53": {
        start: {
          line: 122,
          column: 26
        },
        end: {
          line: 125,
          column: 9
        }
      },
      "54": {
        start: {
          line: 122,
          column: 90
        },
        end: {
          line: 122,
          column: 105
        }
      },
      "55": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 126,
          column: 37
        }
      },
      "56": {
        start: {
          line: 132,
          column: 24
        },
        end: {
          line: 136,
          column: 6
        }
      },
      "57": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 133,
          column: 30
        }
      },
      "58": {
        start: {
          line: 138,
          column: 25
        },
        end: {
          line: 158,
          column: 6
        }
      },
      "59": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 139,
          column: 27
        }
      },
      "60": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 140,
          column: 23
        }
      },
      "61": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 155,
          column: 9
        }
      },
      "62": {
        start: {
          line: 142,
          column: 29
        },
        end: {
          line: 145,
          column: 14
        }
      },
      "63": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 150,
          column: 13
        }
      },
      "64": {
        start: {
          line: 147,
          column: 16
        },
        end: {
          line: 147,
          column: 41
        }
      },
      "65": {
        start: {
          line: 149,
          column: 16
        },
        end: {
          line: 149,
          column: 68
        }
      },
      "66": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 152,
          column: 79
        }
      },
      "67": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 154,
          column: 32
        }
      },
      "68": {
        start: {
          line: 159,
          column: 4
        },
        end: {
          line: 169,
          column: 6
        }
      },
      "69": {
        start: {
          line: 172,
          column: 48
        },
        end: {
          line: 172,
          column: 72
        }
      },
      "70": {
        start: {
          line: 173,
          column: 24
        },
        end: {
          line: 178,
          column: 10
        }
      },
      "71": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 177,
          column: 15
        }
      },
      "72": {
        start: {
          line: 174,
          column: 34
        },
        end: {
          line: 177,
          column: 13
        }
      },
      "73": {
        start: {
          line: 174,
          column: 78
        },
        end: {
          line: 174,
          column: 93
        }
      },
      "74": {
        start: {
          line: 179,
          column: 24
        },
        end: {
          line: 181,
          column: 10
        }
      },
      "75": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 180,
          column: 30
        }
      },
      "76": {
        start: {
          line: 182,
          column: 4
        },
        end: {
          line: 187,
          column: 6
        }
      },
      "77": {
        start: {
          line: 190,
          column: 4
        },
        end: {
          line: 190,
          column: 28
        }
      },
      "78": {
        start: {
          line: 193,
          column: 4
        },
        end: {
          line: 193,
          column: 48
        }
      },
      "79": {
        start: {
          line: 196,
          column: 4
        },
        end: {
          line: 196,
          column: 67
        }
      },
      "80": {
        start: {
          line: 196,
          column: 41
        },
        end: {
          line: 196,
          column: 65
        }
      },
      "81": {
        start: {
          line: 199,
          column: 4
        },
        end: {
          line: 199,
          column: 75
        }
      },
      "82": {
        start: {
          line: 199,
          column: 37
        },
        end: {
          line: 199,
          column: 73
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 16
          }
        },
        loc: {
          start: {
            line: 8,
            column: 30
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 29
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 29
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 29
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 26
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 32
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 25
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "7": {
        name: "useBrandFilter",
        decl: {
          start: {
            line: 37,
            column: 9
          },
          end: {
            line: 37,
            column: 23
          }
        },
        loc: {
          start: {
            line: 37,
            column: 38
          },
          end: {
            line: 170,
            column: 1
          }
        },
        line: 37
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 47,
            column: 26
          },
          end: {
            line: 47,
            column: 27
          }
        },
        loc: {
          start: {
            line: 47,
            column: 30
          },
          end: {
            line: 55,
            column: 5
          }
        },
        line: 47
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 61,
            column: 48
          },
          end: {
            line: 61,
            column: 49
          }
        },
        loc: {
          start: {
            line: 61,
            column: 58
          },
          end: {
            line: 78,
            column: 5
          }
        },
        line: 61
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 82,
            column: 26
          },
          end: {
            line: 82,
            column: 27
          }
        },
        loc: {
          start: {
            line: 82,
            column: 30
          },
          end: {
            line: 86,
            column: 5
          }
        },
        line: 82
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 91,
            column: 46
          },
          end: {
            line: 91,
            column: 47
          }
        },
        loc: {
          start: {
            line: 91,
            column: 59
          },
          end: {
            line: 105,
            column: 5
          }
        },
        line: 91
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 112,
            column: 54
          },
          end: {
            line: 112,
            column: 55
          }
        },
        loc: {
          start: {
            line: 112,
            column: 67
          },
          end: {
            line: 116,
            column: 5
          }
        },
        line: 112
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 121,
            column: 48
          },
          end: {
            line: 121,
            column: 49
          }
        },
        loc: {
          start: {
            line: 121,
            column: 61
          },
          end: {
            line: 127,
            column: 5
          }
        },
        line: 121
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 122,
            column: 85
          },
          end: {
            line: 122,
            column: 86
          }
        },
        loc: {
          start: {
            line: 122,
            column: 90
          },
          end: {
            line: 122,
            column: 105
          }
        },
        line: 122
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 132,
            column: 48
          },
          end: {
            line: 132,
            column: 49
          }
        },
        loc: {
          start: {
            line: 132,
            column: 52
          },
          end: {
            line: 134,
            column: 5
          }
        },
        line: 132
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 138,
            column: 49
          },
          end: {
            line: 138,
            column: 50
          }
        },
        loc: {
          start: {
            line: 138,
            column: 69
          },
          end: {
            line: 156,
            column: 5
          }
        },
        line: 138
      },
      "17": {
        name: "useSimpleBrandFilter",
        decl: {
          start: {
            line: 171,
            column: 9
          },
          end: {
            line: 171,
            column: 29
          }
        },
        loc: {
          start: {
            line: 171,
            column: 32
          },
          end: {
            line: 188,
            column: 1
          }
        },
        line: 171
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 173,
            column: 48
          },
          end: {
            line: 173,
            column: 49
          }
        },
        loc: {
          start: {
            line: 173,
            column: 61
          },
          end: {
            line: 178,
            column: 5
          }
        },
        line: 173
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 174,
            column: 26
          },
          end: {
            line: 174,
            column: 27
          }
        },
        loc: {
          start: {
            line: 174,
            column: 34
          },
          end: {
            line: 177,
            column: 13
          }
        },
        line: 174
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 174,
            column: 73
          },
          end: {
            line: 174,
            column: 74
          }
        },
        loc: {
          start: {
            line: 174,
            column: 78
          },
          end: {
            line: 174,
            column: 93
          }
        },
        line: 174
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 179,
            column: 48
          },
          end: {
            line: 179,
            column: 49
          }
        },
        loc: {
          start: {
            line: 179,
            column: 52
          },
          end: {
            line: 181,
            column: 5
          }
        },
        line: 179
      },
      "22": {
        name: "brandsToUrlString",
        decl: {
          start: {
            line: 189,
            column: 9
          },
          end: {
            line: 189,
            column: 26
          }
        },
        loc: {
          start: {
            line: 189,
            column: 35
          },
          end: {
            line: 191,
            column: 1
          }
        },
        line: 189
      },
      "23": {
        name: "urlStringToBrands",
        decl: {
          start: {
            line: 192,
            column: 9
          },
          end: {
            line: 192,
            column: 26
          }
        },
        loc: {
          start: {
            line: 192,
            column: 38
          },
          end: {
            line: 194,
            column: 1
          }
        },
        line: 192
      },
      "24": {
        name: "validateBrand",
        decl: {
          start: {
            line: 195,
            column: 9
          },
          end: {
            line: 195,
            column: 22
          }
        },
        loc: {
          start: {
            line: 195,
            column: 51
          },
          end: {
            line: 197,
            column: 1
          }
        },
        line: 195
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 196,
            column: 32
          },
          end: {
            line: 196,
            column: 33
          }
        },
        loc: {
          start: {
            line: 196,
            column: 41
          },
          end: {
            line: 196,
            column: 65
          }
        },
        line: 196
      },
      "26": {
        name: "filterValidBrands",
        decl: {
          start: {
            line: 198,
            column: 9
          },
          end: {
            line: 198,
            column: 26
          }
        },
        loc: {
          start: {
            line: 198,
            column: 56
          },
          end: {
            line: 200,
            column: 1
          }
        },
        line: 198
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 199,
            column: 29
          },
          end: {
            line: 199,
            column: 30
          }
        },
        loc: {
          start: {
            line: 199,
            column: 37
          },
          end: {
            line: 199,
            column: 73
          }
        },
        line: 199
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 37,
            column: 24
          },
          end: {
            line: 37,
            column: 36
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 37,
            column: 34
          },
          end: {
            line: 37,
            column: 36
          }
        }],
        line: 37
      },
      "1": {
        loc: {
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 38,
            column: 27
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 38,
            column: 23
          },
          end: {
            line: 38,
            column: 27
          }
        }],
        line: 38
      },
      "2": {
        loc: {
          start: {
            line: 38,
            column: 29
          },
          end: {
            line: 38,
            column: 48
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 38,
            column: 43
          },
          end: {
            line: 38,
            column: 48
          }
        }],
        line: 38
      },
      "3": {
        loc: {
          start: {
            line: 38,
            column: 50
          },
          end: {
            line: 38,
            column: 69
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 38,
            column: 61
          },
          end: {
            line: 38,
            column: 69
          }
        }],
        line: 38
      },
      "4": {
        loc: {
          start: {
            line: 38,
            column: 71
          },
          end: {
            line: 38,
            column: 86
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 38,
            column: 85
          },
          end: {
            line: 38,
            column: 86
          }
        }],
        line: 38
      },
      "5": {
        loc: {
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "6": {
        loc: {
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 48,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 48,
            column: 23
          }
        }, {
          start: {
            line: 48,
            column: 27
          },
          end: {
            line: 48,
            column: 39
          }
        }],
        line: 48
      },
      "7": {
        loc: {
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 53,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 53,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "8": {
        loc: {
          start: {
            line: 68,
            column: 12
          },
          end: {
            line: 72,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 12
          },
          end: {
            line: 72,
            column: 13
          }
        }, {
          start: {
            line: 70,
            column: 19
          },
          end: {
            line: 72,
            column: 13
          }
        }],
        line: 68
      },
      "9": {
        loc: {
          start: {
            line: 68,
            column: 16
          },
          end: {
            line: 68,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 68,
            column: 16
          },
          end: {
            line: 68,
            column: 32
          }
        }, {
          start: {
            line: 68,
            column: 36
          },
          end: {
            line: 68,
            column: 49
          }
        }],
        line: 68
      },
      "10": {
        loc: {
          start: {
            line: 71,
            column: 25
          },
          end: {
            line: 71,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 71,
            column: 25
          },
          end: {
            line: 71,
            column: 39
          }
        }, {
          start: {
            line: 71,
            column: 43
          },
          end: {
            line: 71,
            column: 66
          }
        }],
        line: 71
      },
      "11": {
        loc: {
          start: {
            line: 74,
            column: 21
          },
          end: {
            line: 74,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 74,
            column: 44
          },
          end: {
            line: 74,
            column: 55
          }
        }, {
          start: {
            line: 74,
            column: 58
          },
          end: {
            line: 74,
            column: 77
          }
        }],
        line: 74
      },
      "12": {
        loc: {
          start: {
            line: 83,
            column: 8
          },
          end: {
            line: 85,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 83,
            column: 8
          },
          end: {
            line: 85,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 83
      },
      "13": {
        loc: {
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 92
      },
      "14": {
        loc: {
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 100,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 100,
            column: 9
          }
        }, {
          start: {
            line: 98,
            column: 15
          },
          end: {
            line: 100,
            column: 9
          }
        }],
        line: 96
      },
      "15": {
        loc: {
          start: {
            line: 122,
            column: 26
          },
          end: {
            line: 125,
            column: 9
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 122,
            column: 63
          },
          end: {
            line: 122,
            column: 106
          }
        }, {
          start: {
            line: 122,
            column: 109
          },
          end: {
            line: 125,
            column: 9
          }
        }],
        line: 122
      },
      "16": {
        loc: {
          start: {
            line: 146,
            column: 12
          },
          end: {
            line: 150,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 146,
            column: 12
          },
          end: {
            line: 150,
            column: 13
          }
        }, {
          start: {
            line: 148,
            column: 19
          },
          end: {
            line: 150,
            column: 13
          }
        }],
        line: 146
      },
      "17": {
        loc: {
          start: {
            line: 146,
            column: 16
          },
          end: {
            line: 146,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 146,
            column: 16
          },
          end: {
            line: 146,
            column: 32
          }
        }, {
          start: {
            line: 146,
            column: 36
          },
          end: {
            line: 146,
            column: 49
          }
        }],
        line: 146
      },
      "18": {
        loc: {
          start: {
            line: 149,
            column: 25
          },
          end: {
            line: 149,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 149,
            column: 25
          },
          end: {
            line: 149,
            column: 39
          }
        }, {
          start: {
            line: 149,
            column: 43
          },
          end: {
            line: 149,
            column: 66
          }
        }],
        line: 149
      },
      "19": {
        loc: {
          start: {
            line: 152,
            column: 21
          },
          end: {
            line: 152,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 152,
            column: 44
          },
          end: {
            line: 152,
            column: 55
          }
        }, {
          start: {
            line: 152,
            column: 58
          },
          end: {
            line: 152,
            column: 77
          }
        }],
        line: 152
      },
      "20": {
        loc: {
          start: {
            line: 174,
            column: 34
          },
          end: {
            line: 177,
            column: 13
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 174,
            column: 61
          },
          end: {
            line: 174,
            column: 94
          }
        }, {
          start: {
            line: 174,
            column: 97
          },
          end: {
            line: 177,
            column: 13
          }
        }],
        line: 174
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0],
      "4": [0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useBrandFilter.ts"],
      sourcesContent: ["// ===================================\r\n// HOOK: useBrandFilter\r\n// ===================================\r\n\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport { getBrands, Brand } from '@/lib/api/brands';\r\nimport { useRouter, useSearchParams } from 'next/navigation';\r\n\r\n// ===================================\r\n// TIPOS\r\n// ===================================\r\n\r\nexport interface UseBrandFilterOptions {\r\n  /** Cargar marcas autom\xE1ticamente al montar */\r\n  autoLoad?: boolean;\r\n  /** Sincronizar con URL search params */\r\n  syncWithUrl?: boolean;\r\n  /** Par\xE1metro de URL para las marcas */\r\n  urlParam?: string;\r\n  /** M\xEDnimo n\xFAmero de productos por marca */\r\n  minProducts?: number;\r\n  /** Callback cuando cambian las marcas seleccionadas */\r\n  onBrandsChange?: (brands: string[]) => void;\r\n}\r\n\r\nexport interface UseBrandFilterReturn {\r\n  /** Lista de marcas disponibles */\r\n  brands: Brand[];\r\n  /** Marcas seleccionadas */\r\n  selectedBrands: string[];\r\n  /** Estado de carga */\r\n  isLoading: boolean;\r\n  /** Error si ocurre */\r\n  error: string | null;\r\n  /** Funci\xF3n para cambiar marcas seleccionadas */\r\n  setSelectedBrands: (brands: string[]) => void;\r\n  /** Funci\xF3n para alternar una marca */\r\n  toggleBrand: (brandName: string) => void;\r\n  /** Funci\xF3n para limpiar todas las marcas */\r\n  clearBrands: () => void;\r\n  /** Funci\xF3n para recargar marcas */\r\n  refetch: () => Promise<void>;\r\n  /** Funci\xF3n para buscar marcas */\r\n  searchBrands: (searchTerm: string) => void;\r\n}\r\n\r\n// ===================================\r\n// HOOK PRINCIPAL\r\n// ===================================\r\n\r\nexport function useBrandFilter(options: UseBrandFilterOptions = {}): UseBrandFilterReturn {\r\n  const {\r\n    autoLoad = true,\r\n    syncWithUrl = false,\r\n    urlParam = 'brands',\r\n    minProducts = 1,\r\n    onBrandsChange,\r\n  } = options;\r\n\r\n  const router = useRouter();\r\n  const searchParams = useSearchParams();\r\n\r\n  // Estados\r\n  const [brands, setBrands] = useState<Brand[]>([]);\r\n  const [selectedBrands, setSelectedBrandsState] = useState<string[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // Inicializar marcas seleccionadas desde URL\r\n  useEffect(() => {\r\n    if (syncWithUrl && searchParams) {\r\n      const urlBrands = searchParams.get(urlParam);\r\n      if (urlBrands) {\r\n        const brandsArray = urlBrands.split(',').filter(Boolean);\r\n        setSelectedBrandsState(brandsArray);\r\n      }\r\n    }\r\n  }, [syncWithUrl, urlParam, searchParams]);\r\n\r\n  // Cargar marcas\r\n  const fetchBrands = useCallback(async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await getBrands({ minProducts });\r\n      \r\n      if (response.success && response.data) {\r\n        setBrands(response.data);\r\n      } else {\r\n        setError(response.error || 'Error cargando marcas');\r\n      }\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Error desconocido');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [minProducts]);\r\n\r\n  // Cargar marcas autom\xE1ticamente\r\n  useEffect(() => {\r\n    if (autoLoad) {\r\n      fetchBrands();\r\n    }\r\n  }, [autoLoad, fetchBrands]);\r\n\r\n  // Actualizar URL cuando cambian las marcas seleccionadas\r\n  const updateUrl = useCallback((newBrands: string[]) => {\r\n    if (!syncWithUrl) {return;}\r\n\r\n    const params = new URLSearchParams(searchParams?.toString());\r\n    \r\n    if (newBrands.length > 0) {\r\n      params.set(urlParam, newBrands.join(','));\r\n    } else {\r\n      params.delete(urlParam);\r\n    }\r\n\r\n    const newUrl = `${window.location.pathname}?${params.toString()}`;\r\n    router.push(newUrl, { scroll: false });\r\n  }, [syncWithUrl, urlParam, searchParams, router]);\r\n\r\n  // Funci\xF3n para cambiar marcas seleccionadas\r\n  const setSelectedBrands = useCallback((newBrands: string[]) => {\r\n    setSelectedBrandsState(newBrands);\r\n    updateUrl(newBrands);\r\n    onBrandsChange?.(newBrands);\r\n  }, [updateUrl, onBrandsChange]);\r\n\r\n  // Funci\xF3n para alternar una marca\r\n  const toggleBrand = useCallback((brandName: string) => {\r\n    const newBrands = selectedBrands.includes(brandName)\r\n      ? selectedBrands.filter(b => b !== brandName)\r\n      : [...selectedBrands, brandName];\r\n    \r\n    setSelectedBrands(newBrands);\r\n  }, [selectedBrands, setSelectedBrands]);\r\n\r\n  // Funci\xF3n para limpiar todas las marcas\r\n  const clearBrands = useCallback(() => {\r\n    setSelectedBrands([]);\r\n  }, [setSelectedBrands]);\r\n\r\n  // Funci\xF3n para buscar marcas\r\n  const searchBrands = useCallback(async (searchTerm: string) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await getBrands({ \r\n        search: searchTerm,\r\n        minProducts \r\n      });\r\n      \r\n      if (response.success && response.data) {\r\n        setBrands(response.data);\r\n      } else {\r\n        setError(response.error || 'Error buscando marcas');\r\n      }\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Error desconocido');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [minProducts]);\r\n\r\n  return {\r\n    brands,\r\n    selectedBrands,\r\n    isLoading,\r\n    error,\r\n    setSelectedBrands,\r\n    toggleBrand,\r\n    clearBrands,\r\n    refetch: fetchBrands,\r\n    searchBrands,\r\n  };\r\n}\r\n\r\n// ===================================\r\n// HOOK SIMPLIFICADO\r\n// ===================================\r\n\r\nexport function useSimpleBrandFilter() {\r\n  const [selectedBrands, setSelectedBrands] = useState<string[]>([]);\r\n\r\n  const toggleBrand = useCallback((brandName: string) => {\r\n    setSelectedBrands(prev => \r\n      prev.includes(brandName)\r\n        ? prev.filter(b => b !== brandName)\r\n        : [...prev, brandName]\r\n    );\r\n  }, []);\r\n\r\n  const clearBrands = useCallback(() => {\r\n    setSelectedBrands([]);\r\n  }, []);\r\n\r\n  return {\r\n    selectedBrands,\r\n    setSelectedBrands,\r\n    toggleBrand,\r\n    clearBrands,\r\n  };\r\n}\r\n\r\n// ===================================\r\n// UTILIDADES\r\n// ===================================\r\n\r\n/**\r\n * Convierte array de marcas a string para URL\r\n */\r\nexport function brandsToUrlString(brands: string[]): string {\r\n  return brands.join(',');\r\n}\r\n\r\n/**\r\n * Convierte string de URL a array de marcas\r\n */\r\nexport function urlStringToBrands(urlString: string): string[] {\r\n  return urlString.split(',').filter(Boolean);\r\n}\r\n\r\n/**\r\n * Valida si una marca existe en la lista\r\n */\r\nexport function validateBrand(brandName: string, availableBrands: Brand[]): boolean {\r\n  return availableBrands.some(brand => brand.name === brandName);\r\n}\r\n\r\n/**\r\n * Filtra marcas v\xE1lidas de una lista\r\n */\r\nexport function filterValidBrands(brandNames: string[], availableBrands: Brand[]): string[] {\r\n  return brandNames.filter(name => validateBrand(name, availableBrands));\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["brandsToUrlString", "filterValidBrands", "urlStringToBrands", "useBrandFilter", "useSimpleBrandFilter", "validateBrand", "options", "autoLoad", "syncWithUrl", "urlParam", "minProducts", "onBrandsChange", "router", "useRouter", "searchParams", "useSearchParams", "brands", "setBrands", "useState", "selectedBrands", "setSelectedBrandsState", "isLoading", "setIsLoading", "error", "setError", "useEffect", "urlBrands", "get", "brandsArray", "split", "filter", "Boolean", "fetchBrands", "useCallback", "response", "getBrands", "success", "data", "err", "Error", "message", "updateUrl", "newBrands", "params", "URLSearchParams", "toString", "length", "set", "join", "delete", "newUrl", "window", "location", "pathname", "push", "scroll", "setSelectedBrands", "toggleBrand", "brandName", "includes", "b", "clearBrands", "searchBrands", "searchTerm", "search", "refetch", "prev", "urlString", "availableBrands", "some", "brand", "name", "brandNames"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "515739615e938000e91bf74183df2215216d1901"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2e4jmttz5v = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2e4jmttz5v();
cov_2e4jmttz5v().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2e4jmttz5v().f[0]++;
  cov_2e4jmttz5v().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2e4jmttz5v().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_2e4jmttz5v().s[3]++;
_export(exports, {
  get brandsToUrlString() {
    /* istanbul ignore next */
    cov_2e4jmttz5v().f[1]++;
    cov_2e4jmttz5v().s[4]++;
    return brandsToUrlString;
  },
  get filterValidBrands() {
    /* istanbul ignore next */
    cov_2e4jmttz5v().f[2]++;
    cov_2e4jmttz5v().s[5]++;
    return filterValidBrands;
  },
  get urlStringToBrands() {
    /* istanbul ignore next */
    cov_2e4jmttz5v().f[3]++;
    cov_2e4jmttz5v().s[6]++;
    return urlStringToBrands;
  },
  get useBrandFilter() {
    /* istanbul ignore next */
    cov_2e4jmttz5v().f[4]++;
    cov_2e4jmttz5v().s[7]++;
    return useBrandFilter;
  },
  get useSimpleBrandFilter() {
    /* istanbul ignore next */
    cov_2e4jmttz5v().f[5]++;
    cov_2e4jmttz5v().s[8]++;
    return useSimpleBrandFilter;
  },
  get validateBrand() {
    /* istanbul ignore next */
    cov_2e4jmttz5v().f[6]++;
    cov_2e4jmttz5v().s[9]++;
    return validateBrand;
  }
});
const _react =
/* istanbul ignore next */
(cov_2e4jmttz5v().s[10]++, require("react"));
const _brands =
/* istanbul ignore next */
(cov_2e4jmttz5v().s[11]++, require("../lib/api/brands"));
const _navigation =
/* istanbul ignore next */
(cov_2e4jmttz5v().s[12]++, require("next/navigation"));
function useBrandFilter(options =
/* istanbul ignore next */
(cov_2e4jmttz5v().b[0][0]++, {})) {
  /* istanbul ignore next */
  cov_2e4jmttz5v().f[7]++;
  const {
    autoLoad =
    /* istanbul ignore next */
    (cov_2e4jmttz5v().b[1][0]++, true),
    syncWithUrl =
    /* istanbul ignore next */
    (cov_2e4jmttz5v().b[2][0]++, false),
    urlParam =
    /* istanbul ignore next */
    (cov_2e4jmttz5v().b[3][0]++, 'brands'),
    minProducts =
    /* istanbul ignore next */
    (cov_2e4jmttz5v().b[4][0]++, 1),
    onBrandsChange
  } =
  /* istanbul ignore next */
  (cov_2e4jmttz5v().s[13]++, options);
  const router =
  /* istanbul ignore next */
  (cov_2e4jmttz5v().s[14]++, (0, _navigation.useRouter)());
  const searchParams =
  /* istanbul ignore next */
  (cov_2e4jmttz5v().s[15]++, (0, _navigation.useSearchParams)());
  // Estados
  const [brands, setBrands] =
  /* istanbul ignore next */
  (cov_2e4jmttz5v().s[16]++, (0, _react.useState)([]));
  const [selectedBrands, setSelectedBrandsState] =
  /* istanbul ignore next */
  (cov_2e4jmttz5v().s[17]++, (0, _react.useState)([]));
  const [isLoading, setIsLoading] =
  /* istanbul ignore next */
  (cov_2e4jmttz5v().s[18]++, (0, _react.useState)(false));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_2e4jmttz5v().s[19]++, (0, _react.useState)(null));
  // Inicializar marcas seleccionadas desde URL
  /* istanbul ignore next */
  cov_2e4jmttz5v().s[20]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_2e4jmttz5v().f[8]++;
    cov_2e4jmttz5v().s[21]++;
    if (
    /* istanbul ignore next */
    (cov_2e4jmttz5v().b[6][0]++, syncWithUrl) &&
    /* istanbul ignore next */
    (cov_2e4jmttz5v().b[6][1]++, searchParams)) {
      /* istanbul ignore next */
      cov_2e4jmttz5v().b[5][0]++;
      const urlBrands =
      /* istanbul ignore next */
      (cov_2e4jmttz5v().s[22]++, searchParams.get(urlParam));
      /* istanbul ignore next */
      cov_2e4jmttz5v().s[23]++;
      if (urlBrands) {
        /* istanbul ignore next */
        cov_2e4jmttz5v().b[7][0]++;
        const brandsArray =
        /* istanbul ignore next */
        (cov_2e4jmttz5v().s[24]++, urlBrands.split(',').filter(Boolean));
        /* istanbul ignore next */
        cov_2e4jmttz5v().s[25]++;
        setSelectedBrandsState(brandsArray);
      } else
      /* istanbul ignore next */
      {
        cov_2e4jmttz5v().b[7][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_2e4jmttz5v().b[5][1]++;
    }
  }, [syncWithUrl, urlParam, searchParams]);
  // Cargar marcas
  const fetchBrands =
  /* istanbul ignore next */
  (cov_2e4jmttz5v().s[26]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_2e4jmttz5v().f[9]++;
    cov_2e4jmttz5v().s[27]++;
    setIsLoading(true);
    /* istanbul ignore next */
    cov_2e4jmttz5v().s[28]++;
    setError(null);
    /* istanbul ignore next */
    cov_2e4jmttz5v().s[29]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_2e4jmttz5v().s[30]++, await (0, _brands.getBrands)({
        minProducts
      }));
      /* istanbul ignore next */
      cov_2e4jmttz5v().s[31]++;
      if (
      /* istanbul ignore next */
      (cov_2e4jmttz5v().b[9][0]++, response.success) &&
      /* istanbul ignore next */
      (cov_2e4jmttz5v().b[9][1]++, response.data)) {
        /* istanbul ignore next */
        cov_2e4jmttz5v().b[8][0]++;
        cov_2e4jmttz5v().s[32]++;
        setBrands(response.data);
      } else {
        /* istanbul ignore next */
        cov_2e4jmttz5v().b[8][1]++;
        cov_2e4jmttz5v().s[33]++;
        setError(
        /* istanbul ignore next */
        (cov_2e4jmttz5v().b[10][0]++, response.error) ||
        /* istanbul ignore next */
        (cov_2e4jmttz5v().b[10][1]++, 'Error cargando marcas'));
      }
    } catch (err) {
      /* istanbul ignore next */
      cov_2e4jmttz5v().s[34]++;
      setError(err instanceof Error ?
      /* istanbul ignore next */
      (cov_2e4jmttz5v().b[11][0]++, err.message) :
      /* istanbul ignore next */
      (cov_2e4jmttz5v().b[11][1]++, 'Error desconocido'));
    } finally {
      /* istanbul ignore next */
      cov_2e4jmttz5v().s[35]++;
      setIsLoading(false);
    }
  }, [minProducts]));
  // Cargar marcas automáticamente
  /* istanbul ignore next */
  cov_2e4jmttz5v().s[36]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_2e4jmttz5v().f[10]++;
    cov_2e4jmttz5v().s[37]++;
    if (autoLoad) {
      /* istanbul ignore next */
      cov_2e4jmttz5v().b[12][0]++;
      cov_2e4jmttz5v().s[38]++;
      fetchBrands();
    } else
    /* istanbul ignore next */
    {
      cov_2e4jmttz5v().b[12][1]++;
    }
  }, [autoLoad, fetchBrands]);
  // Actualizar URL cuando cambian las marcas seleccionadas
  const updateUrl =
  /* istanbul ignore next */
  (cov_2e4jmttz5v().s[39]++, (0, _react.useCallback)(newBrands => {
    /* istanbul ignore next */
    cov_2e4jmttz5v().f[11]++;
    cov_2e4jmttz5v().s[40]++;
    if (!syncWithUrl) {
      /* istanbul ignore next */
      cov_2e4jmttz5v().b[13][0]++;
      cov_2e4jmttz5v().s[41]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2e4jmttz5v().b[13][1]++;
    }
    const params =
    /* istanbul ignore next */
    (cov_2e4jmttz5v().s[42]++, new URLSearchParams(searchParams?.toString()));
    /* istanbul ignore next */
    cov_2e4jmttz5v().s[43]++;
    if (newBrands.length > 0) {
      /* istanbul ignore next */
      cov_2e4jmttz5v().b[14][0]++;
      cov_2e4jmttz5v().s[44]++;
      params.set(urlParam, newBrands.join(','));
    } else {
      /* istanbul ignore next */
      cov_2e4jmttz5v().b[14][1]++;
      cov_2e4jmttz5v().s[45]++;
      params.delete(urlParam);
    }
    const newUrl =
    /* istanbul ignore next */
    (cov_2e4jmttz5v().s[46]++, `${window.location.pathname}?${params.toString()}`);
    /* istanbul ignore next */
    cov_2e4jmttz5v().s[47]++;
    router.push(newUrl, {
      scroll: false
    });
  }, [syncWithUrl, urlParam, searchParams, router]));
  // Función para cambiar marcas seleccionadas
  const setSelectedBrands =
  /* istanbul ignore next */
  (cov_2e4jmttz5v().s[48]++, (0, _react.useCallback)(newBrands => {
    /* istanbul ignore next */
    cov_2e4jmttz5v().f[12]++;
    cov_2e4jmttz5v().s[49]++;
    setSelectedBrandsState(newBrands);
    /* istanbul ignore next */
    cov_2e4jmttz5v().s[50]++;
    updateUrl(newBrands);
    /* istanbul ignore next */
    cov_2e4jmttz5v().s[51]++;
    onBrandsChange?.(newBrands);
  }, [updateUrl, onBrandsChange]));
  // Función para alternar una marca
  const toggleBrand =
  /* istanbul ignore next */
  (cov_2e4jmttz5v().s[52]++, (0, _react.useCallback)(brandName => {
    /* istanbul ignore next */
    cov_2e4jmttz5v().f[13]++;
    const newBrands =
    /* istanbul ignore next */
    (cov_2e4jmttz5v().s[53]++, selectedBrands.includes(brandName) ?
    /* istanbul ignore next */
    (cov_2e4jmttz5v().b[15][0]++, selectedBrands.filter(b => {
      /* istanbul ignore next */
      cov_2e4jmttz5v().f[14]++;
      cov_2e4jmttz5v().s[54]++;
      return b !== brandName;
    })) :
    /* istanbul ignore next */
    (cov_2e4jmttz5v().b[15][1]++, [...selectedBrands, brandName]));
    /* istanbul ignore next */
    cov_2e4jmttz5v().s[55]++;
    setSelectedBrands(newBrands);
  }, [selectedBrands, setSelectedBrands]));
  // Función para limpiar todas las marcas
  const clearBrands =
  /* istanbul ignore next */
  (cov_2e4jmttz5v().s[56]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_2e4jmttz5v().f[15]++;
    cov_2e4jmttz5v().s[57]++;
    setSelectedBrands([]);
  }, [setSelectedBrands]));
  // Función para buscar marcas
  const searchBrands =
  /* istanbul ignore next */
  (cov_2e4jmttz5v().s[58]++, (0, _react.useCallback)(async searchTerm => {
    /* istanbul ignore next */
    cov_2e4jmttz5v().f[16]++;
    cov_2e4jmttz5v().s[59]++;
    setIsLoading(true);
    /* istanbul ignore next */
    cov_2e4jmttz5v().s[60]++;
    setError(null);
    /* istanbul ignore next */
    cov_2e4jmttz5v().s[61]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_2e4jmttz5v().s[62]++, await (0, _brands.getBrands)({
        search: searchTerm,
        minProducts
      }));
      /* istanbul ignore next */
      cov_2e4jmttz5v().s[63]++;
      if (
      /* istanbul ignore next */
      (cov_2e4jmttz5v().b[17][0]++, response.success) &&
      /* istanbul ignore next */
      (cov_2e4jmttz5v().b[17][1]++, response.data)) {
        /* istanbul ignore next */
        cov_2e4jmttz5v().b[16][0]++;
        cov_2e4jmttz5v().s[64]++;
        setBrands(response.data);
      } else {
        /* istanbul ignore next */
        cov_2e4jmttz5v().b[16][1]++;
        cov_2e4jmttz5v().s[65]++;
        setError(
        /* istanbul ignore next */
        (cov_2e4jmttz5v().b[18][0]++, response.error) ||
        /* istanbul ignore next */
        (cov_2e4jmttz5v().b[18][1]++, 'Error buscando marcas'));
      }
    } catch (err) {
      /* istanbul ignore next */
      cov_2e4jmttz5v().s[66]++;
      setError(err instanceof Error ?
      /* istanbul ignore next */
      (cov_2e4jmttz5v().b[19][0]++, err.message) :
      /* istanbul ignore next */
      (cov_2e4jmttz5v().b[19][1]++, 'Error desconocido'));
    } finally {
      /* istanbul ignore next */
      cov_2e4jmttz5v().s[67]++;
      setIsLoading(false);
    }
  }, [minProducts]));
  /* istanbul ignore next */
  cov_2e4jmttz5v().s[68]++;
  return {
    brands,
    selectedBrands,
    isLoading,
    error,
    setSelectedBrands,
    toggleBrand,
    clearBrands,
    refetch: fetchBrands,
    searchBrands
  };
}
function useSimpleBrandFilter() {
  /* istanbul ignore next */
  cov_2e4jmttz5v().f[17]++;
  const [selectedBrands, setSelectedBrands] =
  /* istanbul ignore next */
  (cov_2e4jmttz5v().s[69]++, (0, _react.useState)([]));
  const toggleBrand =
  /* istanbul ignore next */
  (cov_2e4jmttz5v().s[70]++, (0, _react.useCallback)(brandName => {
    /* istanbul ignore next */
    cov_2e4jmttz5v().f[18]++;
    cov_2e4jmttz5v().s[71]++;
    setSelectedBrands(prev => {
      /* istanbul ignore next */
      cov_2e4jmttz5v().f[19]++;
      cov_2e4jmttz5v().s[72]++;
      return prev.includes(brandName) ?
      /* istanbul ignore next */
      (cov_2e4jmttz5v().b[20][0]++, prev.filter(b => {
        /* istanbul ignore next */
        cov_2e4jmttz5v().f[20]++;
        cov_2e4jmttz5v().s[73]++;
        return b !== brandName;
      })) :
      /* istanbul ignore next */
      (cov_2e4jmttz5v().b[20][1]++, [...prev, brandName]);
    });
  }, []));
  const clearBrands =
  /* istanbul ignore next */
  (cov_2e4jmttz5v().s[74]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_2e4jmttz5v().f[21]++;
    cov_2e4jmttz5v().s[75]++;
    setSelectedBrands([]);
  }, []));
  /* istanbul ignore next */
  cov_2e4jmttz5v().s[76]++;
  return {
    selectedBrands,
    setSelectedBrands,
    toggleBrand,
    clearBrands
  };
}
function brandsToUrlString(brands) {
  /* istanbul ignore next */
  cov_2e4jmttz5v().f[22]++;
  cov_2e4jmttz5v().s[77]++;
  return brands.join(',');
}
function urlStringToBrands(urlString) {
  /* istanbul ignore next */
  cov_2e4jmttz5v().f[23]++;
  cov_2e4jmttz5v().s[78]++;
  return urlString.split(',').filter(Boolean);
}
function validateBrand(brandName, availableBrands) {
  /* istanbul ignore next */
  cov_2e4jmttz5v().f[24]++;
  cov_2e4jmttz5v().s[79]++;
  return availableBrands.some(brand => {
    /* istanbul ignore next */
    cov_2e4jmttz5v().f[25]++;
    cov_2e4jmttz5v().s[80]++;
    return brand.name === brandName;
  });
}
function filterValidBrands(brandNames, availableBrands) {
  /* istanbul ignore next */
  cov_2e4jmttz5v().f[26]++;
  cov_2e4jmttz5v().s[81]++;
  return brandNames.filter(name => {
    /* istanbul ignore next */
    cov_2e4jmttz5v().f[27]++;
    cov_2e4jmttz5v().s[82]++;
    return validateBrand(name, availableBrands);
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,