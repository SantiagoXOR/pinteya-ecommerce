{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\validations.ts"],"sourcesContent":["// ===================================\r\n// PINTEYA E-COMMERCE - VALIDACIONES CON ZOD\r\n// ===================================\r\n\r\nimport { z } from 'zod';\r\nimport { VALIDATION_CONSTANTS } from '@/constants/shop';\r\n\r\n// ===================================\r\n// VALIDACIONES DE PRODUCTOS\r\n// ===================================\r\nexport const ProductSchema = z.object({\r\n  name: z.string().min(1, 'El nombre es requerido').max(255, 'Nombre muy largo'),\r\n  brand: z.string().min(1, 'La marca es requerida').max(100, 'Marca muy larga').optional(),\r\n  slug: z.string().min(1, 'El slug es requerido').max(255, 'Slug muy largo'),\r\n  description: z.string().optional(),\r\n  price: z.number().positive('El precio debe ser positivo'),\r\n  discounted_price: z.number().positive().optional(),\r\n  stock: z.number().int().min(0, 'El stock no puede ser negativo').default(0),\r\n  category_id: z.number().int().positive().optional(),\r\n  images: z.object({\r\n    previews: z.array(z.string().url()).optional(),\r\n    main: z.string().url().optional(),\r\n  }).optional(),\r\n});\r\n\r\nexport const ProductFiltersSchema = z.object({\r\n  category: z.string().optional(),\r\n  categories: z.array(z.string()).optional(),\r\n  brand: z.string().optional(),\r\n  brands: z.array(z.string()).optional(),\r\n  paintType: z.string().optional(),\r\n  paintTypes: z.array(z.string()).optional(),\r\n  priceMin: z.number().positive().optional(),\r\n  priceMax: z.number().positive().optional(),\r\n  search: z.string().optional(),\r\n  hasDiscount: z.boolean().optional(),\r\n  page: z.number().int().positive().default(1),\r\n  limit: z.number().int().positive().max(100).default(12),\r\n  sortBy: z.enum(['price', 'name', 'created_at', 'brand']).default('created_at'),\r\n  sortOrder: z.enum(['asc', 'desc']).default('desc'),\r\n});\r\n\r\n// ===================================\r\n// VALIDACIONES DE CATEGORÍAS\r\n// ===================================\r\nexport const CategorySchema = z.object({\r\n  name: z.string().min(1, 'El nombre es requerido').max(255, 'Nombre muy largo'),\r\n  slug: z.string().min(1, 'El slug es requerido').max(255, 'Slug muy largo'),\r\n  description: z.string().optional().nullable(),\r\n  icon: z.string().optional().nullable(),\r\n});\r\n\r\nexport const CategoryFiltersSchema = z.object({\r\n  search: z.string().optional(),\r\n  parentId: z.number().optional(),\r\n});\r\n\r\n// ===================================\r\n// VALIDACIONES DE USUARIOS\r\n// ===================================\r\nexport const UserSchema = z.object({\r\n  clerk_id: z.string().min(1, 'ID de Clerk requerido'),\r\n  email: z.string().email('Email inválido'),\r\n  name: z.string().max(255, 'Nombre muy largo').optional(),\r\n});\r\n\r\nexport const UpdateUserProfileSchema = z.object({\r\n  name: z.string().max(255, 'Nombre muy largo').optional(),\r\n  email: z.string().email('Email inválido').optional(),\r\n});\r\n\r\n// ===================================\r\n// VALIDACIONES DE ÓRDENES\r\n// ===================================\r\nexport const OrderItemSchema = z.object({\r\n  productId: z.number().int().positive('ID de producto inválido'),\r\n  quantity: z.number().int().positive('La cantidad debe ser positiva'),\r\n  price: z.number().positive('El precio debe ser positivo'),\r\n});\r\n\r\nexport const CreateOrderSchema = z.object({\r\n  items: z.array(OrderItemSchema).min(1, 'Debe incluir al menos un producto'),\r\n  total: z.number().positive('El total debe ser positivo'),\r\n  shippingAddress: z.object({\r\n    street: z.string().min(1, 'La dirección es requerida'),\r\n    city: z.string().min(1, 'La ciudad es requerida'),\r\n    postalCode: z.string().min(1, 'El código postal es requerido'),\r\n    country: z.string().min(1, 'El país es requerido'),\r\n  }).optional(),\r\n});\r\n\r\nexport const OrderFiltersSchema = z.object({\r\n  status: z.string().optional(),\r\n  dateFrom: z.string().optional(),\r\n  dateTo: z.string().optional(),\r\n  page: z.number().int().positive().default(1),\r\n  limit: z.number().int().positive().max(100).default(10),\r\n});\r\n\r\n// ===================================\r\n// VALIDACIONES DE PAGOS\r\n// ===================================\r\nexport const MercadoPagoItemSchema = z.object({\r\n  title: z.string().min(1, 'El título es requerido'),\r\n  quantity: z.number().int().positive('La cantidad debe ser positiva'),\r\n  unit_price: z.number().positive('El precio debe ser positivo'),\r\n  currency_id: z.string().default('ARS'),\r\n});\r\n\r\nexport const CreatePreferenceSchema = z.object({\r\n  items: z.array(MercadoPagoItemSchema).min(1, 'Debe incluir al menos un item'),\r\n  external_reference: z.string().min(1, 'La referencia externa es requerida'),\r\n  back_urls: z.object({\r\n    success: z.string().url('URL de éxito inválida'),\r\n    failure: z.string().url('URL de fallo inválida'),\r\n    pending: z.string().url('URL de pendiente inválida'),\r\n  }),\r\n});\r\n\r\nexport const MercadoPagoWebhookSchema = z.object({\r\n  action: z.string(),\r\n  api_version: z.string(),\r\n  data: z.object({\r\n    id: z.string(),\r\n  }),\r\n  date_created: z.string(),\r\n  id: z.number(),\r\n  live_mode: z.boolean(),\r\n  type: z.string(),\r\n  user_id: z.string(),\r\n});\r\n\r\n// ===================================\r\n// VALIDACIONES DE FORMULARIOS\r\n// ===================================\r\nexport const ContactFormSchema = z.object({\r\n  name: z.string()\r\n    .min(VALIDATION_CONSTANTS.MIN_NAME_LENGTH, 'El nombre es requerido')\r\n    .max(VALIDATION_CONSTANTS.MAX_NAME_LENGTH, 'Nombre muy largo'),\r\n  email: z.string().email('Email inválido'),\r\n  subject: z.string().min(1, 'El asunto es requerido').max(200, 'Asunto muy largo'),\r\n  message: z.string()\r\n    .min(VALIDATION_CONSTANTS.MIN_MESSAGE_LENGTH, 'El mensaje debe tener al menos 10 caracteres')\r\n    .max(VALIDATION_CONSTANTS.MAX_MESSAGE_LENGTH, 'Mensaje muy largo'),\r\n});\r\n\r\nexport const NewsletterSchema = z.object({\r\n  email: z.string().email('Email inválido'),\r\n});\r\n\r\n// ===================================\r\n// VALIDACIONES DE DIRECCIONES\r\n// ===================================\r\nexport const AddressSchema = z.object({\r\n  name: z.string().min(1, 'El nombre es requerido').max(100, 'Nombre muy largo'),\r\n  street: z.string().min(1, 'La dirección es requerida').max(255, 'Dirección muy larga'),\r\n  city: z.string().min(1, 'La ciudad es requerida').max(100, 'Ciudad muy larga'),\r\n  postal_code: z.string().min(1, 'El código postal es requerido').max(20, 'Código postal muy largo'),\r\n  is_default: z.boolean().default(false),\r\n});\r\n\r\n// ===================================\r\n// VALIDACIONES DE PARÁMETROS DE URL\r\n// ===================================\r\nexport const IdParamSchema = z.object({\r\n  id: z.string().transform((val) => {\r\n    const num = parseInt(val, 10);\r\n    if (isNaN(num) || num <= 0) {\r\n      throw new Error('ID inválido');\r\n    }\r\n    return num;\r\n  }),\r\n});\r\n\r\nexport const SlugParamSchema = z.object({\r\n  slug: z.string().min(1, 'Slug requerido').max(255, 'Slug muy largo'),\r\n});\r\n\r\n// ===================================\r\n// FUNCIONES AUXILIARES\r\n// ===================================\r\n\r\n// Tipos genéricos para validación\r\ntype ValidationInput = Record<string, any> | any[] | string | number | boolean | null;\r\n\r\ninterface ValidationResult<T> {\r\n  success: boolean;\r\n  data?: T;\r\n  error?: string;\r\n}\r\n\r\n/**\r\n * Valida datos usando un schema de Zod\r\n * @param schema - Schema de Zod\r\n * @param data - Datos a validar\r\n * @returns Datos validados\r\n */\r\nexport function validateData<T>(schema: z.ZodSchema<T>, data: ValidationInput): T {\r\n  try {\r\n    return schema.parse(data);\r\n  } catch (error) {\r\n    if (error instanceof z.ZodError) {\r\n      const messages = error.errors.map(err => `${err.path.join('.')}: ${err.message}`);\r\n      throw new Error(`Errores de validación: ${messages.join(', ')}`);\r\n    }\r\n    throw error;\r\n  }\r\n}\r\n\r\n/**\r\n * Valida datos de manera segura, retornando un resultado\r\n * @param schema - Schema de Zod\r\n * @param data - Datos a validar\r\n * @returns Resultado de la validación\r\n */\r\nexport function safeValidateData<T>(schema: z.ZodSchema<T>, data: ValidationInput): ValidationResult<T> {\r\n  try {\r\n    const validatedData = schema.parse(data);\r\n    return { success: true, data: validatedData };\r\n  } catch (error) {\r\n    if (error instanceof z.ZodError) {\r\n      const messages = error.errors.map(err => `${err.path.join('.')}: ${err.message}`);\r\n      return { success: false, error: `Errores de validación: ${messages.join(', ')}` };\r\n    }\r\n    return { success: false, error: 'Error de validación desconocido' };\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["AddressSchema","CategoryFiltersSchema","CategorySchema","ContactFormSchema","CreateOrderSchema","CreatePreferenceSchema","IdParamSchema","MercadoPagoItemSchema","MercadoPagoWebhookSchema","NewsletterSchema","OrderFiltersSchema","OrderItemSchema","ProductFiltersSchema","ProductSchema","SlugParamSchema","UpdateUserProfileSchema","UserSchema","safeValidateData","validateData","z","object","name","string","min","max","brand","optional","slug","description","price","number","positive","discounted_price","stock","int","default","category_id","images","previews","array","url","main","category","categories","brands","paintType","paintTypes","priceMin","priceMax","search","hasDiscount","boolean","page","limit","sortBy","enum","sortOrder","nullable","icon","parentId","clerk_id","email","productId","quantity","items","total","shippingAddress","street","city","postalCode","country","status","dateFrom","dateTo","title","unit_price","currency_id","external_reference","back_urls","success","failure","pending","action","api_version","data","id","date_created","live_mode","type","user_id","VALIDATION_CONSTANTS","MIN_NAME_LENGTH","MAX_NAME_LENGTH","subject","message","MIN_MESSAGE_LENGTH","MAX_MESSAGE_LENGTH","postal_code","is_default","transform","val","num","parseInt","isNaN","Error","schema","parse","error","ZodError","messages","errors","map","err","path","join","validatedData"],"mappings":"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"}