{"version":3,"names":["_default","HeatmapViewer","interactions","page","className","cov_16f8vy3kqk","b","f","heatmapData","setHeatmapData","s","_react","useState","activeType","setActiveType","showOverlay","setShowOverlay","canvasRef","useRef","containerRef","useEffect","processInteractions","drawHeatmap","filteredInteractions","filter","interaction","type","gridSize","grid","forEach","gridX","Math","floor","x","gridY","y","key","intensity","points","Object","values","maxIntensity","max","map","p","normalizedPoints","point","canvas","current","container","ctx","getContext","rect","getBoundingClientRect","width","height","clearRect","radius","gradient","createRadialGradient","color","addColorStop","fillStyle","beginPath","arc","PI","fill","getInteractionStats","stats","total","length","clicks","i","hovers","scrolls","_jsxruntime","jsxs","jsx","label","icon","_lucidereact","BarChart3","MousePointer","Eye","Zap","Icon","onClick","ref","style","mixBlendMode","index","_framermotion","motion","div","initial","scale","opacity","animate","left","top"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\Analytics\\HeatmapViewer.tsx"],"sourcesContent":["/**\r\n * Componente de Heatmap para visualizar interacciones de usuarios\r\n * Muestra zonas de mayor actividad en las páginas\r\n */\r\n\r\n'use client';\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { Eye, MousePointer, Zap, BarChart3 } from 'lucide-react';\r\nimport { UserInteraction } from '@/lib/integrations/analytics';\r\n\r\ninterface HeatmapPoint {\r\n  x: number;\r\n  y: number;\r\n  intensity: number;\r\n  type: 'click' | 'hover' | 'scroll';\r\n}\r\n\r\ninterface HeatmapViewerProps {\r\n  interactions: UserInteraction[];\r\n  page: string;\r\n  className?: string;\r\n}\r\n\r\nconst HeatmapViewer: React.FC<HeatmapViewerProps> = ({ \r\n  interactions, \r\n  page, \r\n  className = '' \r\n}) => {\r\n  const [heatmapData, setHeatmapData] = useState<HeatmapPoint[]>([]);\r\n  const [activeType, setActiveType] = useState<'click' | 'hover' | 'scroll' | 'all'>('all');\r\n  const [showOverlay, setShowOverlay] = useState(true);\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    processInteractions();\r\n  }, [interactions, activeType]);\r\n\r\n  useEffect(() => {\r\n    if (showOverlay) {\r\n      drawHeatmap();\r\n    }\r\n  }, [heatmapData, showOverlay]);\r\n\r\n  const processInteractions = () => {\r\n    const filteredInteractions = interactions.filter(interaction => {\r\n      if (activeType === 'all') {return true;}\r\n      return interaction.type === activeType;\r\n    });\r\n\r\n    // Agrupar interacciones por proximidad\r\n    const gridSize = 20;\r\n    const grid: { [key: string]: HeatmapPoint } = {};\r\n\r\n    filteredInteractions.forEach(interaction => {\r\n      const gridX = Math.floor(interaction.x / gridSize) * gridSize;\r\n      const gridY = Math.floor(interaction.y / gridSize) * gridSize;\r\n      const key = `${gridX}-${gridY}`;\r\n\r\n      if (grid[key]) {\r\n        grid[key].intensity += 1;\r\n      } else {\r\n        grid[key] = {\r\n          x: gridX,\r\n          y: gridY,\r\n          intensity: 1,\r\n          type: interaction.type as 'click' | 'hover' | 'scroll',\r\n        };\r\n      }\r\n    });\r\n\r\n    // Normalizar intensidades\r\n    const points = Object.values(grid);\r\n    const maxIntensity = Math.max(...points.map(p => p.intensity));\r\n    \r\n    const normalizedPoints = points.map(point => ({\r\n      ...point,\r\n      intensity: point.intensity / maxIntensity,\r\n    }));\r\n\r\n    setHeatmapData(normalizedPoints);\r\n  };\r\n\r\n  const drawHeatmap = () => {\r\n    const canvas = canvasRef.current;\r\n    const container = containerRef.current;\r\n    \r\n    if (!canvas || !container) {return;}\r\n\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx) {return;}\r\n\r\n    // Ajustar tamaño del canvas\r\n    const rect = container.getBoundingClientRect();\r\n    canvas.width = rect.width;\r\n    canvas.height = rect.height;\r\n\r\n    // Limpiar canvas\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    // Dibujar puntos de calor\r\n    heatmapData.forEach(point => {\r\n      const radius = 30;\r\n      const gradient = ctx.createRadialGradient(\r\n        point.x, point.y, 0,\r\n        point.x, point.y, radius\r\n      );\r\n\r\n      // Color basado en el tipo de interacción\r\n      let color = 'rgba(255, 0, 0, '; // rojo para clicks por defecto\r\n      if (point.type === 'hover') {color = 'rgba(0, 255, 0, ';}\r\n      if (point.type === 'scroll') {color = 'rgba(0, 0, 255, ';}\r\n\r\n      gradient.addColorStop(0, `${color}${point.intensity * 0.8})`);\r\n      gradient.addColorStop(0.5, `${color}${point.intensity * 0.4})`);\r\n      gradient.addColorStop(1, `${color}0)`);\r\n\r\n      ctx.fillStyle = gradient;\r\n      ctx.beginPath();\r\n      ctx.arc(point.x, point.y, radius, 0, Math.PI * 2);\r\n      ctx.fill();\r\n    });\r\n  };\r\n\r\n  const getInteractionStats = () => {\r\n    const stats = {\r\n      total: interactions.length,\r\n      clicks: interactions.filter(i => i.type === 'click').length,\r\n      hovers: interactions.filter(i => i.type === 'hover').length,\r\n      scrolls: interactions.filter(i => i.type === 'scroll').length,\r\n    };\r\n\r\n    return stats;\r\n  };\r\n\r\n  const stats = getInteractionStats();\r\n\r\n  return (\r\n    <div className={`bg-white rounded-xl shadow-sm border border-gray-100 ${className}`}>\r\n      {/* Header */}\r\n      <div className=\"p-6 border-b border-gray-100\">\r\n        <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4\">\r\n          <div>\r\n            <h3 className=\"text-lg font-semibold text-gray-900\">Mapa de Calor</h3>\r\n            <p className=\"text-sm text-gray-600\">Interacciones de usuarios en {page}</p>\r\n          </div>\r\n\r\n          <div className=\"flex gap-2\">\r\n            {[\r\n              { type: 'all', label: 'Todas', icon: BarChart3 },\r\n              { type: 'click', label: 'Clicks', icon: MousePointer },\r\n              { type: 'hover', label: 'Hover', icon: Eye },\r\n              { type: 'scroll', label: 'Scroll', icon: Zap },\r\n            ].map(({ type, label, icon: Icon }) => (\r\n              <button\r\n                key={type}\r\n                onClick={() => setActiveType(type as any)}\r\n                className={`flex items-center gap-2 px-3 py-2 rounded-lg text-sm font-medium transition-colors ${\r\n                  activeType === type\r\n                    ? 'bg-yellow-400 text-gray-900'\r\n                    : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\r\n                }`}\r\n              >\r\n                <Icon className=\"w-4 h-4\" />\r\n                {label}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Toggle overlay */}\r\n        <div className=\"mt-4 flex items-center gap-2\">\r\n          <button\r\n            onClick={() => setShowOverlay(!showOverlay)}\r\n            className={`px-4 py-2 rounded-lg text-sm font-medium transition-colors ${\r\n              showOverlay\r\n                ? 'bg-blue-500 text-white'\r\n                : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\r\n            }`}\r\n          >\r\n            {showOverlay ? 'Ocultar Overlay' : 'Mostrar Overlay'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Stats */}\r\n      <div className=\"p-6 border-b border-gray-100\">\r\n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n          <div className=\"text-center\">\r\n            <p className=\"text-2xl font-bold text-gray-900\">{stats.total}</p>\r\n            <p className=\"text-sm text-gray-600\">Total interacciones</p>\r\n          </div>\r\n          <div className=\"text-center\">\r\n            <p className=\"text-2xl font-bold text-red-600\">{stats.clicks}</p>\r\n            <p className=\"text-sm text-gray-600\">Clicks</p>\r\n          </div>\r\n          <div className=\"text-center\">\r\n            <p className=\"text-2xl font-bold text-green-600\">{stats.hovers}</p>\r\n            <p className=\"text-sm text-gray-600\">Hovers</p>\r\n          </div>\r\n          <div className=\"text-center\">\r\n            <p className=\"text-2xl font-bold text-blue-600\">{stats.scrolls}</p>\r\n            <p className=\"text-sm text-gray-600\">Scrolls</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Heatmap Container */}\r\n      <div className=\"relative\">\r\n        <div \r\n          ref={containerRef}\r\n          className=\"relative w-full h-96 bg-gray-50 overflow-hidden\"\r\n        >\r\n          {/* Canvas overlay */}\r\n          {showOverlay && (\r\n            <canvas\r\n              ref={canvasRef}\r\n              className=\"absolute inset-0 pointer-events-none z-10\"\r\n              style={{ mixBlendMode: 'multiply' }}\r\n            />\r\n          )}\r\n\r\n          {/* Puntos de interacción individuales */}\r\n          {!showOverlay && heatmapData.map((point, index) => (\r\n            <motion.div\r\n              key={index}\r\n              initial={{ scale: 0, opacity: 0 }}\r\n              animate={{ scale: 1, opacity: point.intensity }}\r\n              className={`absolute w-4 h-4 rounded-full transform -translate-x-1/2 -translate-y-1/2 ${\r\n                point.type === 'click' ? 'bg-red-500' :\r\n                point.type === 'hover' ? 'bg-green-500' : 'bg-blue-500'\r\n              }`}\r\n              style={{\r\n                left: point.x,\r\n                top: point.y,\r\n              }}\r\n            />\r\n          ))}\r\n\r\n          {/* Placeholder content */}\r\n          <div className=\"absolute inset-0 flex items-center justify-center\">\r\n            <div className=\"text-center text-gray-400\">\r\n              <BarChart3 className=\"w-16 h-16 mx-auto mb-4\" />\r\n              <p className=\"text-lg font-medium\">Vista previa del contenido</p>\r\n              <p className=\"text-sm\">Las interacciones se muestran como overlay</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Leyenda */}\r\n        <div className=\"p-4 bg-gray-50 border-t border-gray-100\">\r\n          <div className=\"flex items-center justify-center gap-6 text-sm\">\r\n            <div className=\"flex items-center gap-2\">\r\n              <div className=\"w-3 h-3 bg-red-500 rounded-full\"></div>\r\n              <span>Clicks</span>\r\n            </div>\r\n            <div className=\"flex items-center gap-2\">\r\n              <div className=\"w-3 h-3 bg-green-500 rounded-full\"></div>\r\n              <span>Hovers</span>\r\n            </div>\r\n            <div className=\"flex items-center gap-2\">\r\n              <div className=\"w-3 h-3 bg-blue-500 rounded-full\"></div>\r\n              <span>Scrolls</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Insights */}\r\n      {heatmapData.length > 0 && (\r\n        <div className=\"p-6 bg-blue-50\">\r\n          <h4 className=\"font-medium text-blue-900 mb-2\">🔍 Insights</h4>\r\n          <ul className=\"text-sm text-blue-800 space-y-1\">\r\n            <li>• Se detectaron {heatmapData.length} zonas de alta actividad</li>\r\n            {stats.clicks > stats.hovers && (\r\n              <li>• Los usuarios prefieren hacer click directo vs explorar con hover</li>\r\n            )}\r\n            {stats.scrolls > stats.clicks && (\r\n              <li>• Alta actividad de scroll indica contenido extenso</li>\r\n            )}\r\n            <li>• Considera optimizar las zonas con mayor concentración de interacciones</li>\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeatmapViewer;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}