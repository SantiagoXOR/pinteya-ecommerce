{"version":3,"names":["BREAKPOINTS","cov_29sl8ia230","f","s","RESPONSIVE_PRESETS","compareBreakpoints","debounce","default","_default","generateImageSizes","generateResponsiveGrid","generateResponsiveMargin","generateResponsivePadding","generateResponsiveText","getBreakpointValue","isValidBreakpoint","mediaQueries","throttle","useDynamicClasses","xsm","lsm","sm","md","lg","xl","mobile","b","xxl","xxxl","gap","classes","filter","Boolean","join","direction","prefix","sizes","productGrid","ecommerce","catalog","featured","container","tight","normal","loose","text","body","heading","title","images","product","hero","thumbnail","currentBreakpoint","isMobile","isTablet","isDesktop","_useResponsiveOptimized","useResponsiveOptimized","showOnMobile","hideOnMobile","showOnTablet","showOnDesktop","flexDirection","textAlign","justifyContent","padding","margin","breakpoint","a","tablet","desktop","portrait","landscape","retina","func","wait","timeout","args","clearTimeout","setTimeout","limit","inThrottle"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\utils\\responsiveUtils.ts"],"sourcesContent":["// ===================================\r\n// UTILIDADES PARA RESPONSIVE DESIGN\r\n// ===================================\r\n\r\nimport { useResponsiveOptimized } from '@/hooks/useResponsiveOptimized';\r\n\r\n// ===================================\r\n// CONSTANTES DE BREAKPOINTS\r\n// ===================================\r\n\r\nexport const BREAKPOINTS = {\r\n  xsm: 375,\r\n  lsm: 425,\r\n  sm: 640,\r\n  md: 768,\r\n  lg: 1024,\r\n  xl: 1280,\r\n  '2xl': 1536,\r\n  '3xl': 2000,\r\n} as const;\r\n\r\nexport type BreakpointKey = keyof typeof BREAKPOINTS;\r\n\r\n// ===================================\r\n// UTILIDADES DE CLASES CSS\r\n// ===================================\r\n\r\n/**\r\n * Genera clases de grid responsive basadas en el número de columnas deseado\r\n */\r\nexport const generateResponsiveGrid = ({\r\n  mobile = 1,\r\n  xsm = 2,\r\n  sm = 2,\r\n  md = 3,\r\n  lg = 4,\r\n  xl = 5,\r\n  '2xl': xxl = 6,\r\n  '3xl': xxxl = 6,\r\n  gap = 'gap-4 xsm:gap-6 lg:gap-8'\r\n}: Partial<Record<BreakpointKey | 'mobile', number>> & { gap?: string } = {}) => {\r\n  const classes = [\r\n    `grid-cols-${mobile}`,\r\n    xsm && `xsm:grid-cols-${xsm}`,\r\n    sm && `sm:grid-cols-${sm}`,\r\n    md && `md:grid-cols-${md}`,\r\n    lg && `lg:grid-cols-${lg}`,\r\n    xl && `xl:grid-cols-${xl}`,\r\n    xxl && `2xl:grid-cols-${xxl}`,\r\n    xxxl && `3xl:grid-cols-${xxxl}`,\r\n  ].filter(Boolean);\r\n  \r\n  return `grid ${classes.join(' ')} ${gap}`;\r\n};\r\n\r\n/**\r\n * Genera clases de padding responsive\r\n */\r\nexport const generateResponsivePadding = ({\r\n  mobile = 4,\r\n  sm = 6,\r\n  lg = 8,\r\n  direction = 'all'\r\n}: {\r\n  mobile?: number;\r\n  sm?: number;\r\n  lg?: number;\r\n  direction?: 'all' | 'x' | 'y' | 't' | 'b' | 'l' | 'r';\r\n} = {}) => {\r\n  const prefix = direction === 'all' ? 'p' : `p${direction}`;\r\n  return `${prefix}-${mobile} sm:${prefix}-${sm} lg:${prefix}-${lg}`;\r\n};\r\n\r\n/**\r\n * Genera clases de margin responsive\r\n */\r\nexport const generateResponsiveMargin = ({\r\n  mobile = 4,\r\n  sm = 6,\r\n  lg = 8,\r\n  direction = 'all'\r\n}: {\r\n  mobile?: number;\r\n  sm?: number;\r\n  lg?: number;\r\n  direction?: 'all' | 'x' | 'y' | 't' | 'b' | 'l' | 'r';\r\n} = {}) => {\r\n  const prefix = direction === 'all' ? 'm' : `m${direction}`;\r\n  return `${prefix}-${mobile} sm:${prefix}-${sm} lg:${prefix}-${lg}`;\r\n};\r\n\r\n/**\r\n * Genera clases de texto responsive\r\n */\r\nexport const generateResponsiveText = ({\r\n  mobile = 'custom-sm',\r\n  sm = 'base',\r\n  lg = 'custom-lg'\r\n}: {\r\n  mobile?: string;\r\n  sm?: string;\r\n  lg?: string;\r\n} = {}) => {\r\n  return `text-${mobile} sm:text-${sm} lg:text-${lg}`;\r\n};\r\n\r\n// ===================================\r\n// UTILIDADES DE IMÁGENES RESPONSIVE\r\n// ===================================\r\n\r\n/**\r\n * Genera el atributo sizes para imágenes responsive\r\n */\r\nexport const generateImageSizes = ({\r\n  mobile = '100vw',\r\n  xsm = '50vw',\r\n  sm = '50vw',\r\n  md = '33vw',\r\n  lg = '25vw',\r\n  xl = '20vw',\r\n  '2xl': xxl = '16vw'\r\n}: Partial<Record<BreakpointKey | 'mobile', string>> = {}) => {\r\n  const sizes = [\r\n    `(max-width: ${BREAKPOINTS.xsm - 1}px) ${mobile}`,\r\n    `(max-width: ${BREAKPOINTS.lsm - 1}px) ${xsm}`,\r\n    `(max-width: ${BREAKPOINTS.sm - 1}px) ${sm}`,\r\n    `(max-width: ${BREAKPOINTS.md - 1}px) ${sm}`,\r\n    `(max-width: ${BREAKPOINTS.lg - 1}px) ${md}`,\r\n    `(max-width: ${BREAKPOINTS.xl - 1}px) ${lg}`,\r\n    `(max-width: ${BREAKPOINTS['2xl'] - 1}px) ${xl}`,\r\n    xxl\r\n  ];\r\n  \r\n  return sizes.join(', ');\r\n};\r\n\r\n// ===================================\r\n// PRESETS COMUNES\r\n// ===================================\r\n\r\nexport const RESPONSIVE_PRESETS = {\r\n  // Grids de productos\r\n  productGrid: {\r\n    ecommerce: generateResponsiveGrid({ mobile: 1, xsm: 2, md: 3, lg: 4, xl: 5, '3xl': 6 }),\r\n    catalog: generateResponsiveGrid({ mobile: 2, sm: 3, lg: 4, xl: 6 }),\r\n    featured: generateResponsiveGrid({ mobile: 1, sm: 2, lg: 3 }),\r\n  },\r\n  \r\n  // Padding de contenedores\r\n  container: {\r\n    tight: generateResponsivePadding({ mobile: 4, sm: 6, lg: 8 }),\r\n    normal: generateResponsivePadding({ mobile: 6, sm: 8, lg: 12 }),\r\n    loose: generateResponsivePadding({ mobile: 8, sm: 12, lg: 16 }),\r\n  },\r\n  \r\n  // Texto\r\n  text: {\r\n    body: generateResponsiveText({ mobile: 'custom-sm', sm: 'base', lg: 'custom-lg' }),\r\n    heading: generateResponsiveText({ mobile: 'custom-xl', sm: 'custom-2xl', lg: 'heading-6' }),\r\n    title: generateResponsiveText({ mobile: 'heading-6', sm: 'heading-5', lg: 'heading-3' }),\r\n  },\r\n  \r\n  // Imágenes\r\n  images: {\r\n    product: generateImageSizes({ mobile: '100vw', xsm: '50vw', md: '33vw', lg: '25vw' }),\r\n    hero: generateImageSizes({ mobile: '100vw', lg: '50vw' }),\r\n    thumbnail: generateImageSizes({ mobile: '25vw', sm: '20vw', lg: '15vw' }),\r\n  },\r\n};\r\n\r\n// ===================================\r\n// HOOK PARA CLASES DINÁMICAS\r\n// ===================================\r\n\r\n/**\r\n * Hook que retorna clases CSS basadas en el breakpoint actual\r\n */\r\nexport const useDynamicClasses = () => {\r\n  const { currentBreakpoint, isMobile, isTablet, isDesktop } = useResponsiveOptimized();\r\n  \r\n  return {\r\n    // Clases condicionales\r\n    showOnMobile: isMobile ? 'block' : 'hidden',\r\n    hideOnMobile: isMobile ? 'hidden' : 'block',\r\n    showOnTablet: isTablet ? 'block' : 'hidden',\r\n    showOnDesktop: isDesktop ? 'block' : 'hidden',\r\n    \r\n    // Clases de layout\r\n    flexDirection: isMobile ? 'flex-col' : 'flex-row',\r\n    textAlign: isMobile ? 'text-center' : 'text-left',\r\n    justifyContent: isMobile ? 'justify-center' : 'justify-between',\r\n    \r\n    // Clases de spacing\r\n    gap: isMobile ? 'gap-4' : isTablet ? 'gap-6' : 'gap-8',\r\n    padding: isMobile ? 'p-4' : isTablet ? 'p-6' : 'p-8',\r\n    margin: isMobile ? 'm-4' : isTablet ? 'm-6' : 'm-8',\r\n    \r\n    // Información del breakpoint\r\n    currentBreakpoint,\r\n    isMobile,\r\n    isTablet,\r\n    isDesktop,\r\n  };\r\n};\r\n\r\n// ===================================\r\n// UTILIDADES DE VALIDACIÓN\r\n// ===================================\r\n\r\n/**\r\n * Valida si un breakpoint es válido\r\n */\r\nexport const isValidBreakpoint = (breakpoint: string): breakpoint is BreakpointKey => {\r\n  return breakpoint in BREAKPOINTS;\r\n};\r\n\r\n/**\r\n * Obtiene el valor numérico de un breakpoint\r\n */\r\nexport const getBreakpointValue = (breakpoint: BreakpointKey): number => {\r\n  return BREAKPOINTS[breakpoint];\r\n};\r\n\r\n/**\r\n * Compara dos breakpoints\r\n */\r\nexport const compareBreakpoints = (a: BreakpointKey, b: BreakpointKey): number => {\r\n  return BREAKPOINTS[a] - BREAKPOINTS[b];\r\n};\r\n\r\n// ===================================\r\n// UTILIDADES DE MEDIA QUERIES\r\n// ===================================\r\n\r\n/**\r\n * Genera media queries para CSS-in-JS\r\n */\r\nexport const mediaQueries = {\r\n  xsm: `@media (min-width: ${BREAKPOINTS.xsm}px)`,\r\n  lsm: `@media (min-width: ${BREAKPOINTS.lsm}px)`,\r\n  sm: `@media (min-width: ${BREAKPOINTS.sm}px)`,\r\n  md: `@media (min-width: ${BREAKPOINTS.md}px)`,\r\n  lg: `@media (min-width: ${BREAKPOINTS.lg}px)`,\r\n  xl: `@media (min-width: ${BREAKPOINTS.xl}px)`,\r\n  '2xl': `@media (min-width: ${BREAKPOINTS['2xl']}px)`,\r\n  '3xl': `@media (min-width: ${BREAKPOINTS['3xl']}px)`,\r\n  \r\n  // Utilidades adicionales\r\n  mobile: `@media (max-width: ${BREAKPOINTS.md - 1}px)`,\r\n  tablet: `@media (min-width: ${BREAKPOINTS.md}px) and (max-width: ${BREAKPOINTS.lg - 1}px)`,\r\n  desktop: `@media (min-width: ${BREAKPOINTS.lg}px)`,\r\n  \r\n  // Para orientación\r\n  portrait: '@media (orientation: portrait)',\r\n  landscape: '@media (orientation: landscape)',\r\n  \r\n  // Para densidad de píxeles\r\n  retina: '@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)',\r\n};\r\n\r\n// ===================================\r\n// UTILIDADES DE PERFORMANCE\r\n// ===================================\r\n\r\n/**\r\n * Debounce para resize handlers\r\n */\r\nexport const debounce = <T extends (...args: unknown[]) => unknown>(\r\n  func: T,\r\n  wait: number\r\n): ((...args: Parameters<T>) => void) => {\r\n  let timeout: NodeJS.Timeout;\r\n  \r\n  return (...args: Parameters<T>) => {\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(() => func(...args), wait);\r\n  };\r\n};\r\n\r\n/**\r\n * Throttle para scroll handlers\r\n */\r\nexport const throttle = <T extends (...args: unknown[]) => unknown>(\r\n  func: T,\r\n  limit: number\r\n): ((...args: Parameters<T>) => void) => {\r\n  let inThrottle: boolean;\r\n  \r\n  return (...args: Parameters<T>) => {\r\n    if (!inThrottle) {\r\n      func(...args);\r\n      inThrottle = true;\r\n      setTimeout(() => inThrottle = false, limit);\r\n    }\r\n  };\r\n};\r\n\r\n// ===================================\r\n// EXPORTACIONES POR DEFECTO\r\n// ===================================\r\n\r\nexport default {\r\n  BREAKPOINTS,\r\n  RESPONSIVE_PRESETS,\r\n  generateResponsiveGrid,\r\n  generateResponsivePadding,\r\n  generateResponsiveMargin,\r\n  generateResponsiveText,\r\n  generateImageSizes,\r\n  useDynamicClasses,\r\n  mediaQueries,\r\n  debounce,\r\n  throttle,\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}