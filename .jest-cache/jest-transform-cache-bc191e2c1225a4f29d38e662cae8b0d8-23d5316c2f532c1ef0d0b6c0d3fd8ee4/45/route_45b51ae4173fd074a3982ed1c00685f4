3c49a8a4e690551768dba87aeb8ee49d
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_2jqmf9rr90() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\users\\bulk\\route.ts";
  var hash = "69d523266bf6dc33962b049cb06def71eb04764a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\users\\bulk\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 20
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 23
        }
      },
      "7": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "8": {
        start: {
          line: 24,
          column: 18
        },
        end: {
          line: 24,
          column: 69
        }
      },
      "9": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 57
        }
      },
      "10": {
        start: {
          line: 26,
          column: 13
        },
        end: {
          line: 26,
          column: 27
        }
      },
      "11": {
        start: {
          line: 27,
          column: 16
        },
        end: {
          line: 27,
          column: 63
        }
      },
      "12": {
        start: {
          line: 28,
          column: 22
        },
        end: {
          line: 28,
          column: 70
        }
      },
      "13": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 29,
          column: 74
        }
      },
      "14": {
        start: {
          line: 30,
          column: 17
        },
        end: {
          line: 30,
          column: 65
        }
      },
      "15": {
        start: {
          line: 31,
          column: 16
        },
        end: {
          line: 31,
          column: 24
        }
      },
      "16": {
        start: {
          line: 35,
          column: 28
        },
        end: {
          line: 35,
          column: 31
        }
      },
      "17": {
        start: {
          line: 36,
          column: 19
        },
        end: {
          line: 36,
          column: 21
        }
      },
      "18": {
        start: {
          line: 40,
          column: 32
        },
        end: {
          line: 66,
          column: 2
        }
      },
      "19": {
        start: {
          line: 67,
          column: 25
        },
        end: {
          line: 88,
          column: 2
        }
      },
      "20": {
        start: {
          line: 93,
          column: 4
        },
        end: {
          line: 132,
          column: 5
        }
      },
      "21": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 104,
          column: 9
        }
      },
      "22": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 103,
          column: 14
        }
      },
      "23": {
        start: {
          line: 105,
          column: 24
        },
        end: {
          line: 105,
          column: 49
        }
      },
      "24": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 111,
          column: 9
        }
      },
      "25": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 110,
          column: 14
        }
      },
      "26": {
        start: {
          line: 113,
          column: 24
        },
        end: {
          line: 113,
          column: 68
        }
      },
      "27": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 119,
          column: 9
        }
      },
      "28": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 118,
          column: 14
        }
      },
      "29": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 123,
          column: 10
        }
      },
      "30": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 127,
          column: 11
        }
      },
      "31": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 131,
          column: 10
        }
      },
      "32": {
        start: {
          line: 138,
          column: 20
        },
        end: {
          line: 138,
          column: 22
        }
      },
      "33": {
        start: {
          line: 139,
          column: 4
        },
        end: {
          line: 147,
          column: 5
        }
      },
      "34": {
        start: {
          line: 139,
          column: 16
        },
        end: {
          line: 139,
          column: 17
        }
      },
      "35": {
        start: {
          line: 140,
          column: 22
        },
        end: {
          line: 140,
          column: 54
        }
      },
      "36": {
        start: {
          line: 141,
          column: 29
        },
        end: {
          line: 141,
          column: 51
        }
      },
      "37": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 142,
          column: 38
        }
      },
      "38": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 146,
          column: 9
        }
      },
      "39": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 145,
          column: 67
        }
      },
      "40": {
        start: {
          line: 145,
          column: 41
        },
        end: {
          line: 145,
          column: 65
        }
      },
      "41": {
        start: {
          line: 148,
          column: 4
        },
        end: {
          line: 148,
          column: 19
        }
      },
      "42": {
        start: {
          line: 151,
          column: 19
        },
        end: {
          line: 155,
          column: 5
        }
      },
      "43": {
        start: {
          line: 156,
          column: 4
        },
        end: {
          line: 192,
          column: 7
        }
      },
      "44": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 190,
          column: 9
        }
      },
      "45": {
        start: {
          line: 158,
          column: 36
        },
        end: {
          line: 162,
          column: 25
        }
      },
      "46": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 181,
          column: 13
        }
      },
      "47": {
        start: {
          line: 164,
          column: 16
        },
        end: {
          line: 170,
          column: 19
        }
      },
      "48": {
        start: {
          line: 165,
          column: 20
        },
        end: {
          line: 168,
          column: 23
        }
      },
      "49": {
        start: {
          line: 169,
          column: 20
        },
        end: {
          line: 169,
          column: 36
        }
      },
      "50": {
        start: {
          line: 172,
          column: 16
        },
        end: {
          line: 172,
          column: 52
        }
      },
      "51": {
        start: {
          line: 173,
          column: 34
        },
        end: {
          line: 173,
          column: 83
        }
      },
      "52": {
        start: {
          line: 173,
          column: 53
        },
        end: {
          line: 173,
          column: 82
        }
      },
      "53": {
        start: {
          line: 173,
          column: 70
        },
        end: {
          line: 173,
          column: 81
        }
      },
      "54": {
        start: {
          line: 174,
          column: 16
        },
        end: {
          line: 180,
          column: 19
        }
      },
      "55": {
        start: {
          line: 175,
          column: 20
        },
        end: {
          line: 178,
          column: 23
        }
      },
      "56": {
        start: {
          line: 179,
          column: 20
        },
        end: {
          line: 179,
          column: 36
        }
      },
      "57": {
        start: {
          line: 183,
          column: 12
        },
        end: {
          line: 189,
          column: 15
        }
      },
      "58": {
        start: {
          line: 184,
          column: 16
        },
        end: {
          line: 187,
          column: 19
        }
      },
      "59": {
        start: {
          line: 188,
          column: 16
        },
        end: {
          line: 188,
          column: 32
        }
      },
      "60": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 191,
          column: 18
        }
      },
      "61": {
        start: {
          line: 193,
          column: 4
        },
        end: {
          line: 193,
          column: 18
        }
      },
      "62": {
        start: {
          line: 196,
          column: 19
        },
        end: {
          line: 200,
          column: 5
        }
      },
      "63": {
        start: {
          line: 201,
          column: 4
        },
        end: {
          line: 237,
          column: 7
        }
      },
      "64": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 235,
          column: 9
        }
      },
      "65": {
        start: {
          line: 203,
          column: 36
        },
        end: {
          line: 207,
          column: 25
        }
      },
      "66": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 226,
          column: 13
        }
      },
      "67": {
        start: {
          line: 209,
          column: 16
        },
        end: {
          line: 215,
          column: 19
        }
      },
      "68": {
        start: {
          line: 210,
          column: 20
        },
        end: {
          line: 213,
          column: 23
        }
      },
      "69": {
        start: {
          line: 214,
          column: 20
        },
        end: {
          line: 214,
          column: 36
        }
      },
      "70": {
        start: {
          line: 217,
          column: 16
        },
        end: {
          line: 217,
          column: 52
        }
      },
      "71": {
        start: {
          line: 218,
          column: 34
        },
        end: {
          line: 218,
          column: 83
        }
      },
      "72": {
        start: {
          line: 218,
          column: 53
        },
        end: {
          line: 218,
          column: 82
        }
      },
      "73": {
        start: {
          line: 218,
          column: 70
        },
        end: {
          line: 218,
          column: 81
        }
      },
      "74": {
        start: {
          line: 219,
          column: 16
        },
        end: {
          line: 225,
          column: 19
        }
      },
      "75": {
        start: {
          line: 220,
          column: 20
        },
        end: {
          line: 223,
          column: 23
        }
      },
      "76": {
        start: {
          line: 224,
          column: 20
        },
        end: {
          line: 224,
          column: 36
        }
      },
      "77": {
        start: {
          line: 228,
          column: 12
        },
        end: {
          line: 234,
          column: 15
        }
      },
      "78": {
        start: {
          line: 229,
          column: 16
        },
        end: {
          line: 232,
          column: 19
        }
      },
      "79": {
        start: {
          line: 233,
          column: 16
        },
        end: {
          line: 233,
          column: 32
        }
      },
      "80": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 236,
          column: 18
        }
      },
      "81": {
        start: {
          line: 238,
          column: 4
        },
        end: {
          line: 238,
          column: 18
        }
      },
      "82": {
        start: {
          line: 241,
          column: 19
        },
        end: {
          line: 245,
          column: 5
        }
      },
      "83": {
        start: {
          line: 246,
          column: 4
        },
        end: {
          line: 297,
          column: 7
        }
      },
      "84": {
        start: {
          line: 247,
          column: 8
        },
        end: {
          line: 295,
          column: 9
        }
      },
      "85": {
        start: {
          line: 248,
          column: 36
        },
        end: {
          line: 252,
          column: 32
        }
      },
      "86": {
        start: {
          line: 253,
          column: 12
        },
        end: {
          line: 286,
          column: 13
        }
      },
      "87": {
        start: {
          line: 254,
          column: 16
        },
        end: {
          line: 260,
          column: 19
        }
      },
      "88": {
        start: {
          line: 255,
          column: 20
        },
        end: {
          line: 258,
          column: 23
        }
      },
      "89": {
        start: {
          line: 259,
          column: 20
        },
        end: {
          line: 259,
          column: 36
        }
      },
      "90": {
        start: {
          line: 262,
          column: 16
        },
        end: {
          line: 262,
          column: 52
        }
      },
      "91": {
        start: {
          line: 264,
          column: 16
        },
        end: {
          line: 277,
          column: 17
        }
      },
      "92": {
        start: {
          line: 265,
          column: 20
        },
        end: {
          line: 276,
          column: 21
        }
      },
      "93": {
        start: {
          line: 266,
          column: 24
        },
        end: {
          line: 270,
          column: 27
        }
      },
      "94": {
        start: {
          line: 272,
          column: 24
        },
        end: {
          line: 275,
          column: 27
        }
      },
      "95": {
        start: {
          line: 278,
          column: 34
        },
        end: {
          line: 278,
          column: 83
        }
      },
      "96": {
        start: {
          line: 278,
          column: 53
        },
        end: {
          line: 278,
          column: 82
        }
      },
      "97": {
        start: {
          line: 278,
          column: 70
        },
        end: {
          line: 278,
          column: 81
        }
      },
      "98": {
        start: {
          line: 279,
          column: 16
        },
        end: {
          line: 285,
          column: 19
        }
      },
      "99": {
        start: {
          line: 280,
          column: 20
        },
        end: {
          line: 283,
          column: 23
        }
      },
      "100": {
        start: {
          line: 284,
          column: 20
        },
        end: {
          line: 284,
          column: 36
        }
      },
      "101": {
        start: {
          line: 288,
          column: 12
        },
        end: {
          line: 294,
          column: 15
        }
      },
      "102": {
        start: {
          line: 289,
          column: 16
        },
        end: {
          line: 292,
          column: 19
        }
      },
      "103": {
        start: {
          line: 293,
          column: 16
        },
        end: {
          line: 293,
          column: 32
        }
      },
      "104": {
        start: {
          line: 296,
          column: 8
        },
        end: {
          line: 296,
          column: 18
        }
      },
      "105": {
        start: {
          line: 298,
          column: 4
        },
        end: {
          line: 298,
          column: 18
        }
      },
      "106": {
        start: {
          line: 301,
          column: 19
        },
        end: {
          line: 305,
          column: 5
        }
      },
      "107": {
        start: {
          line: 307,
          column: 38
        },
        end: {
          line: 307,
          column: 123
        }
      },
      "108": {
        start: {
          line: 308,
          column: 30
        },
        end: {
          line: 308,
          column: 81
        }
      },
      "109": {
        start: {
          line: 308,
          column: 64
        },
        end: {
          line: 308,
          column: 73
        }
      },
      "110": {
        start: {
          line: 310,
          column: 29
        },
        end: {
          line: 310,
          column: 99
        }
      },
      "111": {
        start: {
          line: 310,
          column: 50
        },
        end: {
          line: 310,
          column: 98
        }
      },
      "112": {
        start: {
          line: 312,
          column: 4
        },
        end: {
          line: 326,
          column: 7
        }
      },
      "113": {
        start: {
          line: 313,
          column: 8
        },
        end: {
          line: 325,
          column: 9
        }
      },
      "114": {
        start: {
          line: 314,
          column: 12
        },
        end: {
          line: 317,
          column: 15
        }
      },
      "115": {
        start: {
          line: 318,
          column: 12
        },
        end: {
          line: 318,
          column: 28
        }
      },
      "116": {
        start: {
          line: 319,
          column: 15
        },
        end: {
          line: 325,
          column: 9
        }
      },
      "117": {
        start: {
          line: 320,
          column: 12
        },
        end: {
          line: 323,
          column: 15
        }
      },
      "118": {
        start: {
          line: 324,
          column: 12
        },
        end: {
          line: 324,
          column: 28
        }
      },
      "119": {
        start: {
          line: 327,
          column: 4
        },
        end: {
          line: 329,
          column: 5
        }
      },
      "120": {
        start: {
          line: 328,
          column: 8
        },
        end: {
          line: 328,
          column: 22
        }
      },
      "121": {
        start: {
          line: 330,
          column: 4
        },
        end: {
          line: 368,
          column: 7
        }
      },
      "122": {
        start: {
          line: 331,
          column: 8
        },
        end: {
          line: 366,
          column: 9
        }
      },
      "123": {
        start: {
          line: 333,
          column: 12
        },
        end: {
          line: 344,
          column: 13
        }
      },
      "124": {
        start: {
          line: 334,
          column: 16
        },
        end: {
          line: 343,
          column: 17
        }
      },
      "125": {
        start: {
          line: 335,
          column: 20
        },
        end: {
          line: 335,
          column: 80
        }
      },
      "126": {
        start: {
          line: 337,
          column: 20
        },
        end: {
          line: 340,
          column: 23
        }
      },
      "127": {
        start: {
          line: 341,
          column: 20
        },
        end: {
          line: 341,
          column: 36
        }
      },
      "128": {
        start: {
          line: 342,
          column: 20
        },
        end: {
          line: 342,
          column: 29
        }
      },
      "129": {
        start: {
          line: 346,
          column: 36
        },
        end: {
          line: 346,
          column: 117
        }
      },
      "130": {
        start: {
          line: 347,
          column: 12
        },
        end: {
          line: 357,
          column: 13
        }
      },
      "131": {
        start: {
          line: 348,
          column: 16
        },
        end: {
          line: 354,
          column: 19
        }
      },
      "132": {
        start: {
          line: 349,
          column: 20
        },
        end: {
          line: 352,
          column: 23
        }
      },
      "133": {
        start: {
          line: 353,
          column: 20
        },
        end: {
          line: 353,
          column: 36
        }
      },
      "134": {
        start: {
          line: 356,
          column: 16
        },
        end: {
          line: 356,
          column: 52
        }
      },
      "135": {
        start: {
          line: 359,
          column: 12
        },
        end: {
          line: 365,
          column: 15
        }
      },
      "136": {
        start: {
          line: 360,
          column: 16
        },
        end: {
          line: 363,
          column: 19
        }
      },
      "137": {
        start: {
          line: 364,
          column: 16
        },
        end: {
          line: 364,
          column: 32
        }
      },
      "138": {
        start: {
          line: 367,
          column: 8
        },
        end: {
          line: 367,
          column: 18
        }
      },
      "139": {
        start: {
          line: 369,
          column: 4
        },
        end: {
          line: 369,
          column: 18
        }
      },
      "140": {
        start: {
          line: 372,
          column: 16
        },
        end: {
          line: 384,
          column: 6
        }
      },
      "141": {
        start: {
          line: 386,
          column: 4
        },
        end: {
          line: 388,
          column: 5
        }
      },
      "142": {
        start: {
          line: 387,
          column: 8
        },
        end: {
          line: 387,
          column: 47
        }
      },
      "143": {
        start: {
          line: 389,
          column: 4
        },
        end: {
          line: 391,
          column: 5
        }
      },
      "144": {
        start: {
          line: 390,
          column: 8
        },
        end: {
          line: 390,
          column: 57
        }
      },
      "145": {
        start: {
          line: 392,
          column: 4
        },
        end: {
          line: 394,
          column: 5
        }
      },
      "146": {
        start: {
          line: 393,
          column: 8
        },
        end: {
          line: 393,
          column: 63
        }
      },
      "147": {
        start: {
          line: 395,
          column: 4
        },
        end: {
          line: 397,
          column: 5
        }
      },
      "148": {
        start: {
          line: 396,
          column: 8
        },
        end: {
          line: 396,
          column: 64
        }
      },
      "149": {
        start: {
          line: 398,
          column: 35
        },
        end: {
          line: 400,
          column: 6
        }
      },
      "150": {
        start: {
          line: 401,
          column: 4
        },
        end: {
          line: 403,
          column: 5
        }
      },
      "151": {
        start: {
          line: 402,
          column: 8
        },
        end: {
          line: 402,
          column: 71
        }
      },
      "152": {
        start: {
          line: 404,
          column: 25
        },
        end: {
          line: 404,
          column: 36
        }
      },
      "153": {
        start: {
          line: 406,
          column: 4
        },
        end: {
          line: 430,
          column: 5
        }
      },
      "154": {
        start: {
          line: 407,
          column: 24
        },
        end: {
          line: 407,
          column: 53
        }
      },
      "155": {
        start: {
          line: 407,
          column: 48
        },
        end: {
          line: 407,
          column: 52
        }
      },
      "156": {
        start: {
          line: 408,
          column: 37
        },
        end: {
          line: 408,
          column: 137
        }
      },
      "157": {
        start: {
          line: 409,
          column: 29
        },
        end: {
          line: 423,
          column: 14
        }
      },
      "158": {
        start: {
          line: 410,
          column: 12
        },
        end: {
          line: 416,
          column: 13
        }
      },
      "159": {
        start: {
          line: 411,
          column: 16
        },
        end: {
          line: 415,
          column: 18
        }
      },
      "160": {
        start: {
          line: 417,
          column: 12
        },
        end: {
          line: 417,
          column: 39
        }
      },
      "161": {
        start: {
          line: 418,
          column: 12
        },
        end: {
          line: 421,
          column: 13
        }
      },
      "162": {
        start: {
          line: 419,
          column: 16
        },
        end: {
          line: 419,
          column: 54
        }
      },
      "163": {
        start: {
          line: 420,
          column: 16
        },
        end: {
          line: 420,
          column: 67
        }
      },
      "164": {
        start: {
          line: 422,
          column: 12
        },
        end: {
          line: 422,
          column: 23
        }
      },
      "165": {
        start: {
          line: 424,
          column: 8
        },
        end: {
          line: 429,
          column: 16
        }
      },
      "166": {
        start: {
          line: 424,
          column: 53
        },
        end: {
          line: 429,
          column: 13
        }
      },
      "167": {
        start: {
          line: 432,
          column: 4
        },
        end: {
          line: 434,
          column: 5
        }
      },
      "168": {
        start: {
          line: 433,
          column: 8
        },
        end: {
          line: 433,
          column: 139
        }
      },
      "169": {
        start: {
          line: 433,
          column: 55
        },
        end: {
          line: 433,
          column: 137
        }
      },
      "170": {
        start: {
          line: 435,
          column: 4
        },
        end: {
          line: 437,
          column: 5
        }
      },
      "171": {
        start: {
          line: 436,
          column: 8
        },
        end: {
          line: 436,
          column: 103
        }
      },
      "172": {
        start: {
          line: 436,
          column: 55
        },
        end: {
          line: 436,
          column: 101
        }
      },
      "173": {
        start: {
          line: 438,
          column: 4
        },
        end: {
          line: 440,
          column: 5
        }
      },
      "174": {
        start: {
          line: 439,
          column: 8
        },
        end: {
          line: 439,
          column: 101
        }
      },
      "175": {
        start: {
          line: 439,
          column: 55
        },
        end: {
          line: 439,
          column: 99
        }
      },
      "176": {
        start: {
          line: 441,
          column: 4
        },
        end: {
          line: 446,
          column: 6
        }
      },
      "177": {
        start: {
          line: 449,
          column: 22
        },
        end: {
          line: 449,
          column: 32
        }
      },
      "178": {
        start: {
          line: 450,
          column: 4
        },
        end: {
          line: 583,
          column: 5
        }
      },
      "179": {
        start: {
          line: 452,
          column: 32
        },
        end: {
          line: 456,
          column: 30
        }
      },
      "180": {
        start: {
          line: 457,
          column: 8
        },
        end: {
          line: 465,
          column: 9
        }
      },
      "181": {
        start: {
          line: 458,
          column: 29
        },
        end: {
          line: 462,
          column: 14
        }
      },
      "182": {
        start: {
          line: 463,
          column: 12
        },
        end: {
          line: 463,
          column: 77
        }
      },
      "183": {
        start: {
          line: 464,
          column: 12
        },
        end: {
          line: 464,
          column: 28
        }
      },
      "184": {
        start: {
          line: 467,
          column: 27
        },
        end: {
          line: 467,
          column: 52
        }
      },
      "185": {
        start: {
          line: 468,
          column: 8
        },
        end: {
          line: 477,
          column: 9
        }
      },
      "186": {
        start: {
          line: 469,
          column: 34
        },
        end: {
          line: 473,
          column: 13
        }
      },
      "187": {
        start: {
          line: 474,
          column: 12
        },
        end: {
          line: 476,
          column: 15
        }
      },
      "188": {
        start: {
          line: 479,
          column: 21
        },
        end: {
          line: 479,
          column: 41
        }
      },
      "189": {
        start: {
          line: 480,
          column: 33
        },
        end: {
          line: 480,
          column: 72
        }
      },
      "190": {
        start: {
          line: 481,
          column: 8
        },
        end: {
          line: 490,
          column: 9
        }
      },
      "191": {
        start: {
          line: 482,
          column: 34
        },
        end: {
          line: 486,
          column: 13
        }
      },
      "192": {
        start: {
          line: 487,
          column: 12
        },
        end: {
          line: 489,
          column: 15
        }
      },
      "193": {
        start: {
          line: 491,
          column: 46
        },
        end: {
          line: 491,
          column: 67
        }
      },
      "194": {
        start: {
          line: 494,
          column: 8
        },
        end: {
          line: 538,
          column: 9
        }
      },
      "195": {
        start: {
          line: 496,
          column: 16
        },
        end: {
          line: 496,
          column: 78
        }
      },
      "196": {
        start: {
          line: 497,
          column: 16
        },
        end: {
          line: 497,
          column: 22
        }
      },
      "197": {
        start: {
          line: 499,
          column: 16
        },
        end: {
          line: 499,
          column: 80
        }
      },
      "198": {
        start: {
          line: 500,
          column: 16
        },
        end: {
          line: 500,
          column: 22
        }
      },
      "199": {
        start: {
          line: 502,
          column: 16
        },
        end: {
          line: 511,
          column: 17
        }
      },
      "200": {
        start: {
          line: 503,
          column: 42
        },
        end: {
          line: 507,
          column: 21
        }
      },
      "201": {
        start: {
          line: 508,
          column: 20
        },
        end: {
          line: 510,
          column: 23
        }
      },
      "202": {
        start: {
          line: 512,
          column: 16
        },
        end: {
          line: 512,
          column: 86
        }
      },
      "203": {
        start: {
          line: 513,
          column: 16
        },
        end: {
          line: 513,
          column: 22
        }
      },
      "204": {
        start: {
          line: 515,
          column: 16
        },
        end: {
          line: 515,
          column: 76
        }
      },
      "205": {
        start: {
          line: 516,
          column: 16
        },
        end: {
          line: 516,
          column: 22
        }
      },
      "206": {
        start: {
          line: 518,
          column: 35
        },
        end: {
          line: 518,
          column: 124
        }
      },
      "207": {
        start: {
          line: 520,
          column: 16
        },
        end: {
          line: 520,
          column: 95
        }
      },
      "208": {
        start: {
          line: 520,
          column: 67
        },
        end: {
          line: 520,
          column: 93
        }
      },
      "209": {
        start: {
          line: 521,
          column: 16
        },
        end: {
          line: 521,
          column: 65
        }
      },
      "210": {
        start: {
          line: 522,
          column: 16
        },
        end: {
          line: 527,
          column: 18
        }
      },
      "211": {
        start: {
          line: 528,
          column: 16
        },
        end: {
          line: 528,
          column: 22
        }
      },
      "212": {
        start: {
          line: 530,
          column: 38
        },
        end: {
          line: 534,
          column: 17
        }
      },
      "213": {
        start: {
          line: 535,
          column: 16
        },
        end: {
          line: 537,
          column: 19
        }
      },
      "214": {
        start: {
          line: 540,
          column: 8
        },
        end: {
          line: 546,
          column: 11
        }
      },
      "215": {
        start: {
          line: 548,
          column: 8
        },
        end: {
          line: 554,
          column: 11
        }
      },
      "216": {
        start: {
          line: 555,
          column: 25
        },
        end: {
          line: 559,
          column: 9
        }
      },
      "217": {
        start: {
          line: 560,
          column: 29
        },
        end: {
          line: 560,
          column: 64
        }
      },
      "218": {
        start: {
          line: 561,
          column: 8
        },
        end: {
          line: 561,
          column: 77
        }
      },
      "219": {
        start: {
          line: 562,
          column: 8
        },
        end: {
          line: 562,
          column: 28
        }
      },
      "220": {
        start: {
          line: 564,
          column: 8
        },
        end: {
          line: 566,
          column: 11
        }
      },
      "221": {
        start: {
          line: 568,
          column: 8
        },
        end: {
          line: 574,
          column: 11
        }
      },
      "222": {
        start: {
          line: 575,
          column: 30
        },
        end: {
          line: 579,
          column: 9
        }
      },
      "223": {
        start: {
          line: 580,
          column: 8
        },
        end: {
          line: 582,
          column: 11
        }
      },
      "224": {
        start: {
          line: 586,
          column: 22
        },
        end: {
          line: 586,
          column: 32
        }
      },
      "225": {
        start: {
          line: 587,
          column: 4
        },
        end: {
          line: 689,
          column: 5
        }
      },
      "226": {
        start: {
          line: 589,
          column: 32
        },
        end: {
          line: 593,
          column: 32
        }
      },
      "227": {
        start: {
          line: 594,
          column: 8
        },
        end: {
          line: 602,
          column: 9
        }
      },
      "228": {
        start: {
          line: 595,
          column: 29
        },
        end: {
          line: 599,
          column: 14
        }
      },
      "229": {
        start: {
          line: 600,
          column: 12
        },
        end: {
          line: 600,
          column: 77
        }
      },
      "230": {
        start: {
          line: 601,
          column: 12
        },
        end: {
          line: 601,
          column: 28
        }
      },
      "231": {
        start: {
          line: 604,
          column: 27
        },
        end: {
          line: 604,
          column: 52
        }
      },
      "232": {
        start: {
          line: 605,
          column: 8
        },
        end: {
          line: 614,
          column: 9
        }
      },
      "233": {
        start: {
          line: 606,
          column: 34
        },
        end: {
          line: 610,
          column: 13
        }
      },
      "234": {
        start: {
          line: 611,
          column: 12
        },
        end: {
          line: 613,
          column: 15
        }
      },
      "235": {
        start: {
          line: 616,
          column: 33
        },
        end: {
          line: 616,
          column: 53
        }
      },
      "236": {
        start: {
          line: 617,
          column: 29
        },
        end: {
          line: 630,
          column: 9
        }
      },
      "237": {
        start: {
          line: 632,
          column: 33
        },
        end: {
          line: 632,
          column: 73
        }
      },
      "238": {
        start: {
          line: 633,
          column: 8
        },
        end: {
          line: 642,
          column: 9
        }
      },
      "239": {
        start: {
          line: 634,
          column: 34
        },
        end: {
          line: 638,
          column: 13
        }
      },
      "240": {
        start: {
          line: 639,
          column: 12
        },
        end: {
          line: 641,
          column: 15
        }
      },
      "241": {
        start: {
          line: 643,
          column: 71
        },
        end: {
          line: 643,
          column: 92
        }
      },
      "242": {
        start: {
          line: 645,
          column: 27
        },
        end: {
          line: 645,
          column: 96
        }
      },
      "243": {
        start: {
          line: 647,
          column: 8
        },
        end: {
          line: 653,
          column: 11
        }
      },
      "244": {
        start: {
          line: 655,
          column: 8
        },
        end: {
          line: 660,
          column: 11
        }
      },
      "245": {
        start: {
          line: 661,
          column: 25
        },
        end: {
          line: 665,
          column: 9
        }
      },
      "246": {
        start: {
          line: 666,
          column: 29
        },
        end: {
          line: 666,
          column: 64
        }
      },
      "247": {
        start: {
          line: 667,
          column: 8
        },
        end: {
          line: 667,
          column: 77
        }
      },
      "248": {
        start: {
          line: 668,
          column: 8
        },
        end: {
          line: 668,
          column: 28
        }
      },
      "249": {
        start: {
          line: 670,
          column: 8
        },
        end: {
          line: 672,
          column: 11
        }
      },
      "250": {
        start: {
          line: 674,
          column: 8
        },
        end: {
          line: 680,
          column: 11
        }
      },
      "251": {
        start: {
          line: 681,
          column: 30
        },
        end: {
          line: 685,
          column: 9
        }
      },
      "252": {
        start: {
          line: 686,
          column: 8
        },
        end: {
          line: 688,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "validateAdminAuth",
        decl: {
          start: {
            line: 92,
            column: 15
          },
          end: {
            line: 92,
            column: 32
          }
        },
        loc: {
          start: {
            line: 92,
            column: 35
          },
          end: {
            line: 133,
            column: 1
          }
        },
        line: 92
      },
      "5": {
        name: "processUsersInBatches",
        decl: {
          start: {
            line: 137,
            column: 15
          },
          end: {
            line: 137,
            column: 36
          }
        },
        loc: {
          start: {
            line: 137,
            column: 57
          },
          end: {
            line: 149,
            column: 1
          }
        },
        line: 137
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 145,
            column: 30
          },
          end: {
            line: 145,
            column: 31
          }
        },
        loc: {
          start: {
            line: 145,
            column: 41
          },
          end: {
            line: 145,
            column: 65
          }
        },
        line: 145
      },
      "7": {
        name: "bulkActivateUsers",
        decl: {
          start: {
            line: 150,
            column: 15
          },
          end: {
            line: 150,
            column: 32
          }
        },
        loc: {
          start: {
            line: 150,
            column: 55
          },
          end: {
            line: 194,
            column: 1
          }
        },
        line: 150
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 156,
            column: 41
          },
          end: {
            line: 156,
            column: 42
          }
        },
        loc: {
          start: {
            line: 156,
            column: 56
          },
          end: {
            line: 192,
            column: 5
          }
        },
        line: 156
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 164,
            column: 30
          },
          end: {
            line: 164,
            column: 31
          }
        },
        loc: {
          start: {
            line: 164,
            column: 36
          },
          end: {
            line: 170,
            column: 17
          }
        },
        line: 164
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 173,
            column: 47
          },
          end: {
            line: 173,
            column: 48
          }
        },
        loc: {
          start: {
            line: 173,
            column: 53
          },
          end: {
            line: 173,
            column: 82
          }
        },
        line: 173
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 173,
            column: 65
          },
          end: {
            line: 173,
            column: 66
          }
        },
        loc: {
          start: {
            line: 173,
            column: 70
          },
          end: {
            line: 173,
            column: 81
          }
        },
        line: 173
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 174,
            column: 34
          },
          end: {
            line: 174,
            column: 35
          }
        },
        loc: {
          start: {
            line: 174,
            column: 40
          },
          end: {
            line: 180,
            column: 17
          }
        },
        line: 174
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 183,
            column: 26
          },
          end: {
            line: 183,
            column: 27
          }
        },
        loc: {
          start: {
            line: 183,
            column: 32
          },
          end: {
            line: 189,
            column: 13
          }
        },
        line: 183
      },
      "14": {
        name: "bulkDeactivateUsers",
        decl: {
          start: {
            line: 195,
            column: 15
          },
          end: {
            line: 195,
            column: 34
          }
        },
        loc: {
          start: {
            line: 195,
            column: 57
          },
          end: {
            line: 239,
            column: 1
          }
        },
        line: 195
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 201,
            column: 41
          },
          end: {
            line: 201,
            column: 42
          }
        },
        loc: {
          start: {
            line: 201,
            column: 56
          },
          end: {
            line: 237,
            column: 5
          }
        },
        line: 201
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 209,
            column: 30
          },
          end: {
            line: 209,
            column: 31
          }
        },
        loc: {
          start: {
            line: 209,
            column: 36
          },
          end: {
            line: 215,
            column: 17
          }
        },
        line: 209
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 218,
            column: 47
          },
          end: {
            line: 218,
            column: 48
          }
        },
        loc: {
          start: {
            line: 218,
            column: 53
          },
          end: {
            line: 218,
            column: 82
          }
        },
        line: 218
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 218,
            column: 65
          },
          end: {
            line: 218,
            column: 66
          }
        },
        loc: {
          start: {
            line: 218,
            column: 70
          },
          end: {
            line: 218,
            column: 81
          }
        },
        line: 218
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 219,
            column: 34
          },
          end: {
            line: 219,
            column: 35
          }
        },
        loc: {
          start: {
            line: 219,
            column: 40
          },
          end: {
            line: 225,
            column: 17
          }
        },
        line: 219
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 228,
            column: 26
          },
          end: {
            line: 228,
            column: 27
          }
        },
        loc: {
          start: {
            line: 228,
            column: 32
          },
          end: {
            line: 234,
            column: 13
          }
        },
        line: 228
      },
      "21": {
        name: "bulkUpdateRole",
        decl: {
          start: {
            line: 240,
            column: 15
          },
          end: {
            line: 240,
            column: 29
          }
        },
        loc: {
          start: {
            line: 240,
            column: 61
          },
          end: {
            line: 299,
            column: 1
          }
        },
        line: 240
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 246,
            column: 41
          },
          end: {
            line: 246,
            column: 42
          }
        },
        loc: {
          start: {
            line: 246,
            column: 56
          },
          end: {
            line: 297,
            column: 5
          }
        },
        line: 246
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 254,
            column: 30
          },
          end: {
            line: 254,
            column: 31
          }
        },
        loc: {
          start: {
            line: 254,
            column: 36
          },
          end: {
            line: 260,
            column: 17
          }
        },
        line: 254
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 278,
            column: 47
          },
          end: {
            line: 278,
            column: 48
          }
        },
        loc: {
          start: {
            line: 278,
            column: 53
          },
          end: {
            line: 278,
            column: 82
          }
        },
        line: 278
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 278,
            column: 65
          },
          end: {
            line: 278,
            column: 66
          }
        },
        loc: {
          start: {
            line: 278,
            column: 70
          },
          end: {
            line: 278,
            column: 81
          }
        },
        line: 278
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 279,
            column: 34
          },
          end: {
            line: 279,
            column: 35
          }
        },
        loc: {
          start: {
            line: 279,
            column: 40
          },
          end: {
            line: 285,
            column: 17
          }
        },
        line: 279
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 288,
            column: 26
          },
          end: {
            line: 288,
            column: 27
          }
        },
        loc: {
          start: {
            line: 288,
            column: 32
          },
          end: {
            line: 294,
            column: 13
          }
        },
        line: 288
      },
      "28": {
        name: "bulkDeleteUsers",
        decl: {
          start: {
            line: 300,
            column: 15
          },
          end: {
            line: 300,
            column: 30
          }
        },
        loc: {
          start: {
            line: 300,
            column: 53
          },
          end: {
            line: 370,
            column: 1
          }
        },
        line: 300
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 308,
            column: 59
          },
          end: {
            line: 308,
            column: 60
          }
        },
        loc: {
          start: {
            line: 308,
            column: 64
          },
          end: {
            line: 308,
            column: 73
          }
        },
        line: 308
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 310,
            column: 44
          },
          end: {
            line: 310,
            column: 45
          }
        },
        loc: {
          start: {
            line: 310,
            column: 50
          },
          end: {
            line: 310,
            column: 98
          }
        },
        line: 310
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 312,
            column: 20
          },
          end: {
            line: 312,
            column: 21
          }
        },
        loc: {
          start: {
            line: 312,
            column: 26
          },
          end: {
            line: 326,
            column: 5
          }
        },
        line: 312
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 330,
            column: 50
          },
          end: {
            line: 330,
            column: 51
          }
        },
        loc: {
          start: {
            line: 330,
            column: 65
          },
          end: {
            line: 368,
            column: 5
          }
        },
        line: 330
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 348,
            column: 30
          },
          end: {
            line: 348,
            column: 31
          }
        },
        loc: {
          start: {
            line: 348,
            column: 36
          },
          end: {
            line: 354,
            column: 17
          }
        },
        line: 348
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 359,
            column: 26
          },
          end: {
            line: 359,
            column: 27
          }
        },
        loc: {
          start: {
            line: 359,
            column: 32
          },
          end: {
            line: 365,
            column: 13
          }
        },
        line: 359
      },
      "35": {
        name: "exportUsers",
        decl: {
          start: {
            line: 371,
            column: 15
          },
          end: {
            line: 371,
            column: 26
          }
        },
        loc: {
          start: {
            line: 371,
            column: 77
          },
          end: {
            line: 447,
            column: 1
          }
        },
        line: 371
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 407,
            column: 43
          },
          end: {
            line: 407,
            column: 44
          }
        },
        loc: {
          start: {
            line: 407,
            column: 48
          },
          end: {
            line: 407,
            column: 52
          }
        },
        line: 407
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 409,
            column: 55
          },
          end: {
            line: 409,
            column: 56
          }
        },
        loc: {
          start: {
            line: 409,
            column: 69
          },
          end: {
            line: 423,
            column: 9
          }
        },
        line: 409
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 424,
            column: 44
          },
          end: {
            line: 424,
            column: 45
          }
        },
        loc: {
          start: {
            line: 424,
            column: 53
          },
          end: {
            line: 429,
            column: 13
          }
        },
        line: 424
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 433,
            column: 47
          },
          end: {
            line: 433,
            column: 48
          }
        },
        loc: {
          start: {
            line: 433,
            column: 55
          },
          end: {
            line: 433,
            column: 137
          }
        },
        line: 433
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 436,
            column: 47
          },
          end: {
            line: 436,
            column: 48
          }
        },
        loc: {
          start: {
            line: 436,
            column: 55
          },
          end: {
            line: 436,
            column: 101
          }
        },
        line: 436
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 439,
            column: 47
          },
          end: {
            line: 439,
            column: 48
          }
        },
        loc: {
          start: {
            line: 439,
            column: 55
          },
          end: {
            line: 439,
            column: 99
          }
        },
        line: 439
      },
      "42": {
        name: "POST",
        decl: {
          start: {
            line: 448,
            column: 15
          },
          end: {
            line: 448,
            column: 19
          }
        },
        loc: {
          start: {
            line: 448,
            column: 29
          },
          end: {
            line: 584,
            column: 1
          }
        },
        line: 448
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 520,
            column: 59
          },
          end: {
            line: 520,
            column: 60
          }
        },
        loc: {
          start: {
            line: 520,
            column: 67
          },
          end: {
            line: 520,
            column: 93
          }
        },
        line: 520
      },
      "44": {
        name: "GET",
        decl: {
          start: {
            line: 585,
            column: 15
          },
          end: {
            line: 585,
            column: 18
          }
        },
        loc: {
          start: {
            line: 585,
            column: 28
          },
          end: {
            line: 690,
            column: 1
          }
        },
        line: 585
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 104,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 104,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 95
      },
      "1": {
        loc: {
          start: {
            line: 95,
            column: 12
          },
          end: {
            line: 95,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 95,
            column: 12
          },
          end: {
            line: 95,
            column: 50
          }
        }, {
          start: {
            line: 95,
            column: 54
          },
          end: {
            line: 95,
            column: 88
          }
        }],
        line: 95
      },
      "2": {
        loc: {
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 111,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 111,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "3": {
        loc: {
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 119,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 119,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      },
      "4": {
        loc: {
          start: {
            line: 144,
            column: 8
          },
          end: {
            line: 146,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 144,
            column: 8
          },
          end: {
            line: 146,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 144
      },
      "5": {
        loc: {
          start: {
            line: 163,
            column: 12
          },
          end: {
            line: 181,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 163,
            column: 12
          },
          end: {
            line: 181,
            column: 13
          }
        }, {
          start: {
            line: 171,
            column: 19
          },
          end: {
            line: 181,
            column: 13
          }
        }],
        line: 163
      },
      "6": {
        loc: {
          start: {
            line: 172,
            column: 34
          },
          end: {
            line: 172,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 172,
            column: 34
          },
          end: {
            line: 172,
            column: 46
          }
        }, {
          start: {
            line: 172,
            column: 50
          },
          end: {
            line: 172,
            column: 51
          }
        }],
        line: 172
      },
      "7": {
        loc: {
          start: {
            line: 208,
            column: 12
          },
          end: {
            line: 226,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 208,
            column: 12
          },
          end: {
            line: 226,
            column: 13
          }
        }, {
          start: {
            line: 216,
            column: 19
          },
          end: {
            line: 226,
            column: 13
          }
        }],
        line: 208
      },
      "8": {
        loc: {
          start: {
            line: 217,
            column: 34
          },
          end: {
            line: 217,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 217,
            column: 34
          },
          end: {
            line: 217,
            column: 46
          }
        }, {
          start: {
            line: 217,
            column: 50
          },
          end: {
            line: 217,
            column: 51
          }
        }],
        line: 217
      },
      "9": {
        loc: {
          start: {
            line: 253,
            column: 12
          },
          end: {
            line: 286,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 253,
            column: 12
          },
          end: {
            line: 286,
            column: 13
          }
        }, {
          start: {
            line: 261,
            column: 19
          },
          end: {
            line: 286,
            column: 13
          }
        }],
        line: 253
      },
      "10": {
        loc: {
          start: {
            line: 262,
            column: 34
          },
          end: {
            line: 262,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 262,
            column: 34
          },
          end: {
            line: 262,
            column: 46
          }
        }, {
          start: {
            line: 262,
            column: 50
          },
          end: {
            line: 262,
            column: 51
          }
        }],
        line: 262
      },
      "11": {
        loc: {
          start: {
            line: 264,
            column: 35
          },
          end: {
            line: 264,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 264,
            column: 35
          },
          end: {
            line: 264,
            column: 39
          }
        }, {
          start: {
            line: 264,
            column: 43
          },
          end: {
            line: 264,
            column: 45
          }
        }],
        line: 264
      },
      "12": {
        loc: {
          start: {
            line: 308,
            column: 38
          },
          end: {
            line: 308,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 308,
            column: 38
          },
          end: {
            line: 308,
            column: 74
          }
        }, {
          start: {
            line: 308,
            column: 78
          },
          end: {
            line: 308,
            column: 80
          }
        }],
        line: 308
      },
      "13": {
        loc: {
          start: {
            line: 310,
            column: 50
          },
          end: {
            line: 310,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 310,
            column: 50
          },
          end: {
            line: 310,
            column: 68
          }
        }, {
          start: {
            line: 310,
            column: 72
          },
          end: {
            line: 310,
            column: 98
          }
        }],
        line: 310
      },
      "14": {
        loc: {
          start: {
            line: 313,
            column: 8
          },
          end: {
            line: 325,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 313,
            column: 8
          },
          end: {
            line: 325,
            column: 9
          }
        }, {
          start: {
            line: 319,
            column: 15
          },
          end: {
            line: 325,
            column: 9
          }
        }],
        line: 313
      },
      "15": {
        loc: {
          start: {
            line: 319,
            column: 15
          },
          end: {
            line: 325,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 319,
            column: 15
          },
          end: {
            line: 325,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 319
      },
      "16": {
        loc: {
          start: {
            line: 327,
            column: 4
          },
          end: {
            line: 329,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 327,
            column: 4
          },
          end: {
            line: 329,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 327
      },
      "17": {
        loc: {
          start: {
            line: 347,
            column: 12
          },
          end: {
            line: 357,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 347,
            column: 12
          },
          end: {
            line: 357,
            column: 13
          }
        }, {
          start: {
            line: 355,
            column: 19
          },
          end: {
            line: 357,
            column: 13
          }
        }],
        line: 347
      },
      "18": {
        loc: {
          start: {
            line: 356,
            column: 34
          },
          end: {
            line: 356,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 356,
            column: 34
          },
          end: {
            line: 356,
            column: 46
          }
        }, {
          start: {
            line: 356,
            column: 50
          },
          end: {
            line: 356,
            column: 51
          }
        }],
        line: 356
      },
      "19": {
        loc: {
          start: {
            line: 382,
            column: 8
          },
          end: {
            line: 382,
            column: 42
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 382,
            column: 27
          },
          end: {
            line: 382,
            column: 37
          }
        }, {
          start: {
            line: 382,
            column: 40
          },
          end: {
            line: 382,
            column: 42
          }
        }],
        line: 382
      },
      "20": {
        loc: {
          start: {
            line: 386,
            column: 4
          },
          end: {
            line: 388,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 386,
            column: 4
          },
          end: {
            line: 388,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 386
      },
      "21": {
        loc: {
          start: {
            line: 389,
            column: 4
          },
          end: {
            line: 391,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 389,
            column: 4
          },
          end: {
            line: 391,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 389
      },
      "22": {
        loc: {
          start: {
            line: 392,
            column: 4
          },
          end: {
            line: 394,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 392,
            column: 4
          },
          end: {
            line: 394,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 392
      },
      "23": {
        loc: {
          start: {
            line: 395,
            column: 4
          },
          end: {
            line: 397,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 395,
            column: 4
          },
          end: {
            line: 397,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 395
      },
      "24": {
        loc: {
          start: {
            line: 401,
            column: 4
          },
          end: {
            line: 403,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 401,
            column: 4
          },
          end: {
            line: 403,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 401
      },
      "25": {
        loc: {
          start: {
            line: 404,
            column: 25
          },
          end: {
            line: 404,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 404,
            column: 25
          },
          end: {
            line: 404,
            column: 30
          }
        }, {
          start: {
            line: 404,
            column: 34
          },
          end: {
            line: 404,
            column: 36
          }
        }],
        line: 404
      },
      "26": {
        loc: {
          start: {
            line: 406,
            column: 4
          },
          end: {
            line: 430,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 406,
            column: 4
          },
          end: {
            line: 430,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 406
      },
      "27": {
        loc: {
          start: {
            line: 409,
            column: 30
          },
          end: {
            line: 409,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 409,
            column: 30
          },
          end: {
            line: 409,
            column: 40
          }
        }, {
          start: {
            line: 409,
            column: 44
          },
          end: {
            line: 409,
            column: 46
          }
        }],
        line: 409
      },
      "28": {
        loc: {
          start: {
            line: 410,
            column: 12
          },
          end: {
            line: 416,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 410,
            column: 12
          },
          end: {
            line: 416,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 410
      },
      "29": {
        loc: {
          start: {
            line: 418,
            column: 12
          },
          end: {
            line: 421,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 418,
            column: 12
          },
          end: {
            line: 421,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 418
      },
      "30": {
        loc: {
          start: {
            line: 420,
            column: 50
          },
          end: {
            line: 420,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 420,
            column: 50
          },
          end: {
            line: 420,
            column: 61
          }
        }, {
          start: {
            line: 420,
            column: 65
          },
          end: {
            line: 420,
            column: 66
          }
        }],
        line: 420
      },
      "31": {
        loc: {
          start: {
            line: 426,
            column: 30
          },
          end: {
            line: 426,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 426,
            column: 30
          },
          end: {
            line: 426,
            column: 58
          }
        }, {
          start: {
            line: 426,
            column: 62
          },
          end: {
            line: 426,
            column: 63
          }
        }],
        line: 426
      },
      "32": {
        loc: {
          start: {
            line: 427,
            column: 34
          },
          end: {
            line: 427,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 427,
            column: 34
          },
          end: {
            line: 427,
            column: 73
          }
        }, {
          start: {
            line: 427,
            column: 77
          },
          end: {
            line: 427,
            column: 78
          }
        }],
        line: 427
      },
      "33": {
        loc: {
          start: {
            line: 428,
            column: 29
          },
          end: {
            line: 428,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 428,
            column: 29
          },
          end: {
            line: 428,
            column: 63
          }
        }, {
          start: {
            line: 428,
            column: 67
          },
          end: {
            line: 428,
            column: 68
          }
        }],
        line: 428
      },
      "34": {
        loc: {
          start: {
            line: 432,
            column: 4
          },
          end: {
            line: 434,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 432,
            column: 4
          },
          end: {
            line: 434,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 432
      },
      "35": {
        loc: {
          start: {
            line: 433,
            column: 55
          },
          end: {
            line: 433,
            column: 137
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 433,
            column: 76
          },
          end: {
            line: 433,
            column: 104
          }
        }, {
          start: {
            line: 433,
            column: 107
          },
          end: {
            line: 433,
            column: 137
          }
        }],
        line: 433
      },
      "36": {
        loc: {
          start: {
            line: 433,
            column: 77
          },
          end: {
            line: 433,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 433,
            column: 77
          },
          end: {
            line: 433,
            column: 94
          }
        }, {
          start: {
            line: 433,
            column: 98
          },
          end: {
            line: 433,
            column: 99
          }
        }],
        line: 433
      },
      "37": {
        loc: {
          start: {
            line: 433,
            column: 108
          },
          end: {
            line: 433,
            column: 130
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 433,
            column: 108
          },
          end: {
            line: 433,
            column: 125
          }
        }, {
          start: {
            line: 433,
            column: 129
          },
          end: {
            line: 433,
            column: 130
          }
        }],
        line: 433
      },
      "38": {
        loc: {
          start: {
            line: 435,
            column: 4
          },
          end: {
            line: 437,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 435,
            column: 4
          },
          end: {
            line: 437,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 435
      },
      "39": {
        loc: {
          start: {
            line: 436,
            column: 56
          },
          end: {
            line: 436,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 436,
            column: 56
          },
          end: {
            line: 436,
            column: 73
          }
        }, {
          start: {
            line: 436,
            column: 77
          },
          end: {
            line: 436,
            column: 78
          }
        }],
        line: 436
      },
      "40": {
        loc: {
          start: {
            line: 438,
            column: 4
          },
          end: {
            line: 440,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 438,
            column: 4
          },
          end: {
            line: 440,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 438
      },
      "41": {
        loc: {
          start: {
            line: 439,
            column: 56
          },
          end: {
            line: 439,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 439,
            column: 56
          },
          end: {
            line: 439,
            column: 72
          }
        }, {
          start: {
            line: 439,
            column: 76
          },
          end: {
            line: 439,
            column: 77
          }
        }],
        line: 439
      },
      "42": {
        loc: {
          start: {
            line: 457,
            column: 8
          },
          end: {
            line: 465,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 457,
            column: 8
          },
          end: {
            line: 465,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 457
      },
      "43": {
        loc: {
          start: {
            line: 468,
            column: 8
          },
          end: {
            line: 477,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 468,
            column: 8
          },
          end: {
            line: 477,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 468
      },
      "44": {
        loc: {
          start: {
            line: 481,
            column: 8
          },
          end: {
            line: 490,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 481,
            column: 8
          },
          end: {
            line: 490,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 481
      },
      "45": {
        loc: {
          start: {
            line: 494,
            column: 8
          },
          end: {
            line: 538,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 495,
            column: 12
          },
          end: {
            line: 497,
            column: 22
          }
        }, {
          start: {
            line: 498,
            column: 12
          },
          end: {
            line: 500,
            column: 22
          }
        }, {
          start: {
            line: 501,
            column: 12
          },
          end: {
            line: 513,
            column: 22
          }
        }, {
          start: {
            line: 514,
            column: 12
          },
          end: {
            line: 516,
            column: 22
          }
        }, {
          start: {
            line: 517,
            column: 12
          },
          end: {
            line: 528,
            column: 22
          }
        }, {
          start: {
            line: 529,
            column: 12
          },
          end: {
            line: 537,
            column: 19
          }
        }],
        line: 494
      },
      "46": {
        loc: {
          start: {
            line: 502,
            column: 16
          },
          end: {
            line: 511,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 502,
            column: 16
          },
          end: {
            line: 511,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 502
      },
      "47": {
        loc: {
          start: {
            line: 518,
            column: 57
          },
          end: {
            line: 518,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 518,
            column: 57
          },
          end: {
            line: 518,
            column: 76
          }
        }, {
          start: {
            line: 518,
            column: 80
          },
          end: {
            line: 518,
            column: 85
          }
        }],
        line: 518
      },
      "48": {
        loc: {
          start: {
            line: 518,
            column: 87
          },
          end: {
            line: 518,
            column: 116
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 518,
            column: 87
          },
          end: {
            line: 518,
            column: 107
          }
        }, {
          start: {
            line: 518,
            column: 111
          },
          end: {
            line: 518,
            column: 116
          }
        }],
        line: 518
      },
      "49": {
        loc: {
          start: {
            line: 573,
            column: 19
          },
          end: {
            line: 573,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 573,
            column: 44
          },
          end: {
            line: 573,
            column: 57
          }
        }, {
          start: {
            line: 573,
            column: 60
          },
          end: {
            line: 573,
            column: 75
          }
        }],
        line: 573
      },
      "50": {
        loc: {
          start: {
            line: 592,
            column: 21
          },
          end: {
            line: 592,
            column: 110
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 592,
            column: 21
          },
          end: {
            line: 592,
            column: 66
          }
        }, {
          start: {
            line: 592,
            column: 70
          },
          end: {
            line: 592,
            column: 110
          }
        }],
        line: 592
      },
      "51": {
        loc: {
          start: {
            line: 594,
            column: 8
          },
          end: {
            line: 602,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 594,
            column: 8
          },
          end: {
            line: 602,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 594
      },
      "52": {
        loc: {
          start: {
            line: 605,
            column: 8
          },
          end: {
            line: 614,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 605,
            column: 8
          },
          end: {
            line: 614,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 605
      },
      "53": {
        loc: {
          start: {
            line: 619,
            column: 22
          },
          end: {
            line: 619,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 619,
            column: 22
          },
          end: {
            line: 619,
            column: 46
          }
        }, {
          start: {
            line: 619,
            column: 50
          },
          end: {
            line: 619,
            column: 59
          }
        }],
        line: 619
      },
      "54": {
        loc: {
          start: {
            line: 620,
            column: 27
          },
          end: {
            line: 620,
            column: 111
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 620,
            column: 59
          },
          end: {
            line: 620,
            column: 99
          }
        }, {
          start: {
            line: 620,
            column: 102
          },
          end: {
            line: 620,
            column: 111
          }
        }],
        line: 620
      },
      "55": {
        loc: {
          start: {
            line: 621,
            column: 31
          },
          end: {
            line: 621,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 621,
            column: 31
          },
          end: {
            line: 621,
            column: 64
          }
        }, {
          start: {
            line: 621,
            column: 68
          },
          end: {
            line: 621,
            column: 77
          }
        }],
        line: 621
      },
      "56": {
        loc: {
          start: {
            line: 622,
            column: 32
          },
          end: {
            line: 622,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 622,
            column: 32
          },
          end: {
            line: 622,
            column: 66
          }
        }, {
          start: {
            line: 622,
            column: 70
          },
          end: {
            line: 622,
            column: 79
          }
        }],
        line: 622
      },
      "57": {
        loc: {
          start: {
            line: 623,
            column: 28
          },
          end: {
            line: 623,
            column: 114
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 623,
            column: 61
          },
          end: {
            line: 623,
            column: 102
          }
        }, {
          start: {
            line: 623,
            column: 105
          },
          end: {
            line: 623,
            column: 114
          }
        }],
        line: 623
      },
      "58": {
        loc: {
          start: {
            line: 624,
            column: 28
          },
          end: {
            line: 624,
            column: 113
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 624,
            column: 61
          },
          end: {
            line: 624,
            column: 101
          }
        }, {
          start: {
            line: 624,
            column: 104
          },
          end: {
            line: 624,
            column: 113
          }
        }],
        line: 624
      },
      "59": {
        loc: {
          start: {
            line: 625,
            column: 27
          },
          end: {
            line: 625,
            column: 112
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 625,
            column: 59
          },
          end: {
            line: 625,
            column: 100
          }
        }, {
          start: {
            line: 625,
            column: 103
          },
          end: {
            line: 625,
            column: 112
          }
        }],
        line: 625
      },
      "60": {
        loc: {
          start: {
            line: 627,
            column: 20
          },
          end: {
            line: 627,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 627,
            column: 20
          },
          end: {
            line: 627,
            column: 46
          }
        }, {
          start: {
            line: 627,
            column: 50
          },
          end: {
            line: 627,
            column: 55
          }
        }],
        line: 627
      },
      "61": {
        loc: {
          start: {
            line: 633,
            column: 8
          },
          end: {
            line: 642,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 633,
            column: 8
          },
          end: {
            line: 642,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 633
      },
      "62": {
        loc: {
          start: {
            line: 679,
            column: 19
          },
          end: {
            line: 679,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 679,
            column: 44
          },
          end: {
            line: 679,
            column: 57
          }
        }, {
          start: {
            line: 679,
            column: 60
          },
          end: {
            line: 679,
            column: 75
          }
        }],
        line: 679
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0, 0, 0, 0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\users\\bulk\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - ADMIN USERS BULK OPERATIONS API ENTERPRISE\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { supabaseAdmin } from '@/lib/integrations/supabase';\r\nimport { auth } from '@/lib/auth/config';\r\nimport { ApiResponse } from '@/types/api';\r\nimport { z } from 'zod';\r\nimport { logger, LogLevel, LogCategory } from '@/lib/enterprise/logger';\r\nimport { checkRateLimit } from '@/lib/auth/rate-limiting';\r\nimport { addRateLimitHeaders, RATE_LIMIT_CONFIGS } from '@/lib/enterprise/rate-limiter';\r\nimport { metricsCollector } from '@/lib/enterprise/metrics';\r\n\r\n// ===================================\r\n// CONFIGURACI\xD3N\r\n// ===================================\r\n\r\nconst MAX_BULK_OPERATIONS = 100;\r\nconst BATCH_SIZE = 10;\r\n\r\n// ===================================\r\n// SCHEMAS DE VALIDACI\xD3N\r\n// ===================================\r\n\r\nconst BulkUserOperationSchema = z.object({\r\n  operation: z.enum(['activate', 'deactivate', 'delete', 'update_role', 'export']),\r\n  user_ids: z.array(z.string().uuid()).min(1, 'Debe seleccionar al menos un usuario').max(MAX_BULK_OPERATIONS, `M\xE1ximo ${MAX_BULK_OPERATIONS} usuarios por operaci\xF3n`),\r\n  data: z.object({\r\n    role: z.enum(['user', 'admin', 'moderator']).optional(),\r\n    export_format: z.enum(['csv', 'json', 'xlsx']).optional(),\r\n    include_orders: z.boolean().optional(),\r\n    date_range: z.object({\r\n      start: z.string().optional(),\r\n      end: z.string().optional()\r\n    }).optional()\r\n  }).optional()\r\n});\r\n\r\nconst BulkExportSchema = z.object({\r\n  filters: z.object({\r\n    role: z.enum(['user', 'admin', 'moderator']).optional(),\r\n    is_active: z.boolean().optional(),\r\n    created_after: z.string().optional(),\r\n    created_before: z.string().optional(),\r\n    has_orders: z.boolean().optional(),\r\n    min_orders: z.number().min(0).optional(),\r\n    min_spent: z.number().min(0).optional()\r\n  }).optional(),\r\n  format: z.enum(['csv', 'json', 'xlsx']).default('csv'),\r\n  include_orders: z.boolean().default(false),\r\n  include_addresses: z.boolean().default(false)\r\n});\r\n\r\n// ===================================\r\n// TIPOS DE DATOS\r\n// ===================================\r\n\r\ninterface BulkOperationResult {\r\n  success: number;\r\n  failed: number;\r\n  errors: Array<{\r\n    user_id: string;\r\n    error: string;\r\n  }>;\r\n  processed_users?: any[];\r\n}\r\n\r\ninterface ExportData {\r\n  users: any[];\r\n  total_count: number;\r\n  export_date: string;\r\n  filters_applied: any;\r\n}\r\n\r\n// ===================================\r\n// MIDDLEWARE DE AUTENTICACI\xD3N ADMIN\r\n// ===================================\r\n\r\nasync function validateAdminAuth() {\r\n  try {\r\n    // BYPASS TEMPORAL PARA DESARROLLO\r\n    if (process.env.NODE_ENV === 'development' && process.env.BYPASS_AUTH === 'true') {\r\n      return {\r\n        user: {\r\n          id: 'dev-admin',\r\n          email: 'santiago@xor.com.ar',\r\n          name: 'Dev Admin'\r\n        },\r\n        userId: 'dev-admin'\r\n      };\r\n    }\r\n\r\n    const session = await auth();\r\n    if (!session?.user) {\r\n      return { error: 'Usuario no autenticado', status: 401 };\r\n    }\r\n\r\n    // Verificar si es admin\r\n    const isAdmin = session.user.email === 'santiago@xor.com.ar';\r\n    if (!isAdmin) {\r\n      return { error: 'Acceso denegado - Se requieren permisos de administrador', status: 403 };\r\n    }\r\n\r\n    return { user: session.user, userId: session.user.id };\r\n  } catch (error) {\r\n    logger.log(LogLevel.ERROR, LogCategory.AUTH, 'Error en validaci\xF3n admin', { error });\r\n    return { error: 'Error de autenticaci\xF3n', status: 500 };\r\n  }\r\n}\r\n\r\n// ===================================\r\n// FUNCIONES AUXILIARES\r\n// ===================================\r\n\r\nasync function processUsersInBatches<T>(\r\n  userIds: string[],\r\n  processor: (batch: string[]) => Promise<T[]>\r\n): Promise<T[]> {\r\n  const results: T[] = [];\r\n  \r\n  for (let i = 0; i < userIds.length; i += BATCH_SIZE) {\r\n    const batch = userIds.slice(i, i + BATCH_SIZE);\r\n    const batchResults = await processor(batch);\r\n    results.push(...batchResults);\r\n    \r\n    // Peque\xF1a pausa entre lotes para evitar sobrecarga\r\n    if (i + BATCH_SIZE < userIds.length) {\r\n      await new Promise(resolve => setTimeout(resolve, 100));\r\n    }\r\n  }\r\n  \r\n  return results;\r\n}\r\n\r\nasync function bulkActivateUsers(userIds: string[], adminUserId: string): Promise<BulkOperationResult> {\r\n  const result: BulkOperationResult = {\r\n    success: 0,\r\n    failed: 0,\r\n    errors: []\r\n  };\r\n\r\n  await processUsersInBatches(userIds, async (batch) => {\r\n    try {\r\n      const { data, error } = await supabaseAdmin\r\n        .from('users')\r\n        .update({ \r\n          is_active: true,\r\n          updated_at: new Date().toISOString()\r\n        })\r\n        .in('id', batch)\r\n        .neq('id', adminUserId) // Prevenir auto-modificaci\xF3n\r\n        .select('id');\r\n\r\n      if (error) {\r\n        batch.forEach(id => {\r\n          result.errors.push({ user_id: id, error: error.message });\r\n          result.failed++;\r\n        });\r\n      } else {\r\n        result.success += data?.length || 0;\r\n        const failedIds = batch.filter(id => !data?.some(u => u.id === id));\r\n        failedIds.forEach(id => {\r\n          result.errors.push({ user_id: id, error: 'Usuario no encontrado o no se pudo activar' });\r\n          result.failed++;\r\n        });\r\n      }\r\n    } catch (error) {\r\n      batch.forEach(id => {\r\n        result.errors.push({ user_id: id, error: 'Error interno' });\r\n        result.failed++;\r\n      });\r\n    }\r\n    return [];\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\nasync function bulkDeactivateUsers(userIds: string[], adminUserId: string): Promise<BulkOperationResult> {\r\n  const result: BulkOperationResult = {\r\n    success: 0,\r\n    failed: 0,\r\n    errors: []\r\n  };\r\n\r\n  await processUsersInBatches(userIds, async (batch) => {\r\n    try {\r\n      const { data, error } = await supabaseAdmin\r\n        .from('users')\r\n        .update({ \r\n          is_active: false,\r\n          updated_at: new Date().toISOString()\r\n        })\r\n        .in('id', batch)\r\n        .neq('id', adminUserId) // Prevenir auto-desactivaci\xF3n\r\n        .select('id');\r\n\r\n      if (error) {\r\n        batch.forEach(id => {\r\n          result.errors.push({ user_id: id, error: error.message });\r\n          result.failed++;\r\n        });\r\n      } else {\r\n        result.success += data?.length || 0;\r\n        const failedIds = batch.filter(id => !data?.some(u => u.id === id));\r\n        failedIds.forEach(id => {\r\n          result.errors.push({ user_id: id, error: 'Usuario no encontrado o no se pudo desactivar' });\r\n          result.failed++;\r\n        });\r\n      }\r\n    } catch (error) {\r\n      batch.forEach(id => {\r\n        result.errors.push({ user_id: id, error: 'Error interno' });\r\n        result.failed++;\r\n      });\r\n    }\r\n    return [];\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\nasync function bulkUpdateRole(userIds: string[], newRole: string, adminUserId: string): Promise<BulkOperationResult> {\r\n  const result: BulkOperationResult = {\r\n    success: 0,\r\n    failed: 0,\r\n    errors: []\r\n  };\r\n\r\n  await processUsersInBatches(userIds, async (batch) => {\r\n    try {\r\n      const { data, error } = await supabaseAdmin\r\n        .from('users')\r\n        .update({ \r\n          role: newRole,\r\n          updated_at: new Date().toISOString()\r\n        })\r\n        .in('id', batch)\r\n        .neq('id', adminUserId) // Prevenir auto-modificaci\xF3n de rol\r\n        .select('id, email');\r\n\r\n      if (error) {\r\n        batch.forEach(id => {\r\n          result.errors.push({ user_id: id, error: error.message });\r\n          result.failed++;\r\n        });\r\n      } else {\r\n        result.success += data?.length || 0;\r\n        \r\n        // Actualizar tambi\xE9n en Auth metadata\r\n        for (const user of data || []) {\r\n          try {\r\n            await supabaseAdmin.auth.admin.updateUserById(user.id, {\r\n              user_metadata: { role: newRole }\r\n            });\r\n          } catch (authError) {\r\n            logger.log(LogLevel.WARN, LogCategory.AUTH, 'Error actualizando rol en Auth', { \r\n              userId: user.id, \r\n              authError \r\n            });\r\n          }\r\n        }\r\n        \r\n        const failedIds = batch.filter(id => !data?.some(u => u.id === id));\r\n        failedIds.forEach(id => {\r\n          result.errors.push({ user_id: id, error: 'Usuario no encontrado o no se pudo actualizar' });\r\n          result.failed++;\r\n        });\r\n      }\r\n    } catch (error) {\r\n      batch.forEach(id => {\r\n        result.errors.push({ user_id: id, error: 'Error interno' });\r\n        result.failed++;\r\n      });\r\n    }\r\n    return [];\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\nasync function bulkDeleteUsers(userIds: string[], adminUserId: string): Promise<BulkOperationResult> {\r\n  const result: BulkOperationResult = {\r\n    success: 0,\r\n    failed: 0,\r\n    errors: []\r\n  };\r\n\r\n  // Verificar que ning\xFAn usuario tenga \xF3rdenes\r\n  const { data: usersWithOrders } = await supabaseAdmin\r\n    .from('orders')\r\n    .select('user_id')\r\n    .in('user_id', userIds);\r\n\r\n  const userIdsWithOrders = new Set(usersWithOrders?.map(o => o.user_id) || []);\r\n  \r\n  // Filtrar usuarios que se pueden eliminar\r\n  const deletableUserIds = userIds.filter(id => \r\n    id !== adminUserId && !userIdsWithOrders.has(id)\r\n  );\r\n  \r\n  // Marcar como error los que no se pueden eliminar\r\n  userIds.forEach(id => {\r\n    if (id === adminUserId) {\r\n      result.errors.push({ user_id: id, error: 'No puedes eliminar tu propia cuenta' });\r\n      result.failed++;\r\n    } else if (userIdsWithOrders.has(id)) {\r\n      result.errors.push({ user_id: id, error: 'Usuario tiene \xF3rdenes asociadas' });\r\n      result.failed++;\r\n    }\r\n  });\r\n\r\n  if (deletableUserIds.length === 0) {\r\n    return result;\r\n  }\r\n\r\n  await processUsersInBatches(deletableUserIds, async (batch) => {\r\n    try {\r\n      // Eliminar de Auth primero\r\n      for (const userId of batch) {\r\n        try {\r\n          await supabaseAdmin.auth.admin.deleteUser(userId);\r\n        } catch (authError) {\r\n          result.errors.push({ user_id: userId, error: 'Error eliminando de autenticaci\xF3n' });\r\n          result.failed++;\r\n          continue;\r\n        }\r\n      }\r\n\r\n      // Eliminar perfiles\r\n      const { data, error } = await supabaseAdmin\r\n        .from('users')\r\n        .delete()\r\n        .in('id', batch)\r\n        .select('id');\r\n\r\n      if (error) {\r\n        batch.forEach(id => {\r\n          result.errors.push({ user_id: id, error: error.message });\r\n          result.failed++;\r\n        });\r\n      } else {\r\n        result.success += data?.length || 0;\r\n      }\r\n    } catch (error) {\r\n      batch.forEach(id => {\r\n        result.errors.push({ user_id: id, error: 'Error interno' });\r\n        result.failed++;\r\n      });\r\n    }\r\n    return [];\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\nasync function exportUsers(filters: any, format: string, includeOrders: boolean, includeAddresses: boolean): Promise<ExportData> {\r\n  let query = supabaseAdmin\r\n    .from('users')\r\n    .select(`\r\n      id,\r\n      email,\r\n      name,\r\n      role,\r\n      is_active,\r\n      phone,\r\n      created_at,\r\n      updated_at,\r\n      last_login,\r\n      ${includeAddresses ? 'address,' : ''}\r\n      avatar_url\r\n    `);\r\n\r\n  // Aplicar filtros\r\n  if (filters?.role) {\r\n    query = query.eq('role', filters.role);\r\n  }\r\n  if (filters?.is_active !== undefined) {\r\n    query = query.eq('is_active', filters.is_active);\r\n  }\r\n  if (filters?.created_after) {\r\n    query = query.gte('created_at', filters.created_after);\r\n  }\r\n  if (filters?.created_before) {\r\n    query = query.lte('created_at', filters.created_before);\r\n  }\r\n\r\n  const { data: users, error } = await query.order('created_at', { ascending: false });\r\n\r\n  if (error) {\r\n    throw new Error(`Error exportando usuarios: ${error.message}`);\r\n  }\r\n\r\n  let processedUsers = users || [];\r\n\r\n  // Incluir estad\xEDsticas de \xF3rdenes si se solicita\r\n  if (includeOrders) {\r\n    const userIds = processedUsers.map(u => u.id);\r\n    const { data: orderStats } = await supabaseAdmin\r\n      .from('orders')\r\n      .select('user_id, total, status')\r\n      .in('user_id', userIds);\r\n\r\n    const ordersByUser = (orderStats || []).reduce((acc, order) => {\r\n      if (!acc[order.user_id]) {\r\n        acc[order.user_id] = { count: 0, total_spent: 0, completed_orders: 0 };\r\n      }\r\n      acc[order.user_id].count++;\r\n      if (order.status === 'completed') {\r\n        acc[order.user_id].completed_orders++;\r\n        acc[order.user_id].total_spent += order.total || 0;\r\n      }\r\n      return acc;\r\n    }, {} as Record<string, any>);\r\n\r\n    processedUsers = processedUsers.map(user => ({\r\n      ...user,\r\n      orders_count: ordersByUser[user.id]?.count || 0,\r\n      completed_orders: ordersByUser[user.id]?.completed_orders || 0,\r\n      total_spent: ordersByUser[user.id]?.total_spent || 0\r\n    }));\r\n  }\r\n\r\n  // Aplicar filtros adicionales basados en \xF3rdenes\r\n  if (filters?.has_orders !== undefined) {\r\n    processedUsers = processedUsers.filter(user => \r\n      filters.has_orders ? (user.orders_count || 0) > 0 : (user.orders_count || 0) === 0\r\n    );\r\n  }\r\n  if (filters?.min_orders) {\r\n    processedUsers = processedUsers.filter(user => (user.orders_count || 0) >= filters.min_orders);\r\n  }\r\n  if (filters?.min_spent) {\r\n    processedUsers = processedUsers.filter(user => (user.total_spent || 0) >= filters.min_spent);\r\n  }\r\n\r\n  return {\r\n    users: processedUsers,\r\n    total_count: processedUsers.length,\r\n    export_date: new Date().toISOString(),\r\n    filters_applied: filters\r\n  };\r\n}\r\n\r\n// ===================================\r\n// POST - Operaciones masivas\r\n// ===================================\r\nexport async function POST(request: NextRequest) {\r\n  const startTime = Date.now();\r\n\r\n  try {\r\n    // Rate limiting\r\n    const rateLimitResult = await checkRateLimit(\r\n      request,\r\n      {\r\n        windowMs: RATE_LIMIT_CONFIGS.admin.windowMs,\r\n        maxRequests: Math.floor(RATE_LIMIT_CONFIGS.admin.maxRequests / 2), // M\xE1s restrictivo para operaciones masivas\r\n        message: 'Demasiadas operaciones masivas'\r\n      },\r\n      'admin-users-bulk'\r\n    );\r\n\r\n    if (!rateLimitResult.success) {\r\n      const response = NextResponse.json(\r\n        { error: rateLimitResult.message },\r\n        { status: 429 }\r\n      );\r\n      addRateLimitHeaders(response, rateLimitResult);\r\n      return response;\r\n    }\r\n\r\n    // Validar autenticaci\xF3n admin\r\n    const authResult = await validateAdminAuth();\r\n    if (authResult.error) {\r\n      const errorResponse: ApiResponse<null> = {\r\n        data: null,\r\n        success: false,\r\n        error: authResult.error,\r\n      };\r\n      return NextResponse.json(errorResponse, { status: authResult.status });\r\n    }\r\n\r\n    // Validar datos de entrada\r\n    const body = await request.json();\r\n    const validationResult = BulkUserOperationSchema.safeParse(body);\r\n\r\n    if (!validationResult.success) {\r\n      const errorResponse: ApiResponse<null> = {\r\n        data: null,\r\n        success: false,\r\n        error: 'Datos de operaci\xF3n masiva inv\xE1lidos',\r\n      };\r\n      return NextResponse.json(errorResponse, { status: 400 });\r\n    }\r\n\r\n    const { operation, user_ids, data } = validationResult.data;\r\n    let result: BulkOperationResult;\r\n\r\n    // Ejecutar operaci\xF3n seg\xFAn el tipo\r\n    switch (operation) {\r\n      case 'activate':\r\n        result = await bulkActivateUsers(user_ids, authResult.userId!);\r\n        break;\r\n      \r\n      case 'deactivate':\r\n        result = await bulkDeactivateUsers(user_ids, authResult.userId!);\r\n        break;\r\n      \r\n      case 'update_role':\r\n        if (!data?.role) {\r\n          const errorResponse: ApiResponse<null> = {\r\n            data: null,\r\n            success: false,\r\n            error: 'Rol requerido para actualizaci\xF3n masiva',\r\n          };\r\n          return NextResponse.json(errorResponse, { status: 400 });\r\n        }\r\n        result = await bulkUpdateRole(user_ids, data.role, authResult.userId!);\r\n        break;\r\n      \r\n      case 'delete':\r\n        result = await bulkDeleteUsers(user_ids, authResult.userId!);\r\n        break;\r\n      \r\n      case 'export':\r\n        const exportData = await exportUsers(\r\n          {}, // Filtros vac\xEDos, se usan los user_ids\r\n          data?.export_format || 'csv',\r\n          data?.include_orders || false,\r\n          false\r\n        );\r\n        \r\n        // Filtrar solo los usuarios solicitados\r\n        exportData.users = exportData.users.filter(user => user_ids.includes(user.id));\r\n        exportData.total_count = exportData.users.length;\r\n        \r\n        result = {\r\n          success: exportData.users.length,\r\n          failed: 0,\r\n          errors: [],\r\n          processed_users: exportData.users\r\n        };\r\n        break;\r\n      \r\n      default:\r\n        const errorResponse: ApiResponse<null> = {\r\n          data: null,\r\n          success: false,\r\n          error: 'Operaci\xF3n no soportada',\r\n        };\r\n        return NextResponse.json(errorResponse, { status: 400 });\r\n    }\r\n\r\n    // Registrar m\xE9tricas\r\n    metricsCollector.recordApiCall({\r\n      endpoint: '/api/admin/users/bulk',\r\n      method: 'POST',\r\n      statusCode: 200,\r\n      responseTime: Date.now() - startTime,\r\n      userId: authResult.userId\r\n    });\r\n\r\n    // Log de auditor\xEDa\r\n    logger.log(LogLevel.INFO, LogCategory.ADMIN, 'Operaci\xF3n masiva de usuarios ejecutada', {\r\n      adminUserId: authResult.userId,\r\n      operation,\r\n      userCount: user_ids.length,\r\n      successCount: result.success,\r\n      failedCount: result.failed\r\n    });\r\n\r\n    const response: ApiResponse<BulkOperationResult> = {\r\n      data: result,\r\n      success: true,\r\n      message: `Operaci\xF3n ${operation} completada. ${result.success} exitosos, ${result.failed} fallidos.`\r\n    };\r\n\r\n    const nextResponse = NextResponse.json(response);\r\n    addRateLimitHeaders(nextResponse, rateLimitResult);\r\n    return nextResponse;\r\n\r\n  } catch (error) {\r\n    logger.log(LogLevel.ERROR, LogCategory.API, 'Error en POST /api/admin/users/bulk', { error });\r\n\r\n    // Registrar m\xE9tricas de error\r\n    metricsCollector.recordApiCall({\r\n      endpoint: '/api/admin/users/bulk',\r\n      method: 'POST',\r\n      statusCode: 500,\r\n      responseTime: Date.now() - startTime,\r\n      error: error instanceof Error ? error.message : 'Unknown error'\r\n    });\r\n\r\n    const errorResponse: ApiResponse<null> = {\r\n      data: null,\r\n      success: false,\r\n      error: 'Error interno del servidor',\r\n    };\r\n\r\n    return NextResponse.json(errorResponse, { status: 500 });\r\n  }\r\n}\r\n\r\n// ===================================\r\n// GET - Exportar usuarios con filtros\r\n// ===================================\r\nexport async function GET(request: NextRequest) {\r\n  const startTime = Date.now();\r\n\r\n  try {\r\n    // Rate limiting\r\n    const rateLimitResult = await checkRateLimit(\r\n      request,\r\n      {\r\n        windowMs: RATE_LIMIT_CONFIGS.admin.windowMs,\r\n        maxRequests: RATE_LIMIT_CONFIGS.admin.maxRequests,\r\n        message: RATE_LIMIT_CONFIGS.admin.message || 'Demasiadas solicitudes administrativas'\r\n      },\r\n      'admin-users-export'\r\n    );\r\n\r\n    if (!rateLimitResult.success) {\r\n      const response = NextResponse.json(\r\n        { error: rateLimitResult.message },\r\n        { status: 429 }\r\n      );\r\n      addRateLimitHeaders(response, rateLimitResult);\r\n      return response;\r\n    }\r\n\r\n    // Validar autenticaci\xF3n admin\r\n    const authResult = await validateAdminAuth();\r\n    if (authResult.error) {\r\n      const errorResponse: ApiResponse<null> = {\r\n        data: null,\r\n        success: false,\r\n        error: authResult.error,\r\n      };\r\n      return NextResponse.json(errorResponse, { status: authResult.status });\r\n    }\r\n\r\n    // Parsear par\xE1metros de consulta\r\n    const { searchParams } = new URL(request.url);\r\n    const exportParams = {\r\n      filters: {\r\n        role: searchParams.get('role') || undefined,\r\n        is_active: searchParams.get('is_active') ? searchParams.get('is_active') === 'true' : undefined,\r\n        created_after: searchParams.get('created_after') || undefined,\r\n        created_before: searchParams.get('created_before') || undefined,\r\n        has_orders: searchParams.get('has_orders') ? searchParams.get('has_orders') === 'true' : undefined,\r\n        min_orders: searchParams.get('min_orders') ? parseInt(searchParams.get('min_orders')!) : undefined,\r\n        min_spent: searchParams.get('min_spent') ? parseFloat(searchParams.get('min_spent')!) : undefined\r\n      },\r\n      format: (searchParams.get('format') as 'csv' | 'json' | 'xlsx') || 'csv',\r\n      include_orders: searchParams.get('include_orders') === 'true',\r\n      include_addresses: searchParams.get('include_addresses') === 'true'\r\n    };\r\n\r\n    // Validar par\xE1metros\r\n    const validationResult = BulkExportSchema.safeParse(exportParams);\r\n    if (!validationResult.success) {\r\n      const errorResponse: ApiResponse<null> = {\r\n        data: null,\r\n        success: false,\r\n        error: 'Par\xE1metros de exportaci\xF3n inv\xE1lidos',\r\n      };\r\n      return NextResponse.json(errorResponse, { status: 400 });\r\n    }\r\n\r\n    const { filters, format, include_orders, include_addresses } = validationResult.data;\r\n\r\n    // Exportar usuarios\r\n    const exportData = await exportUsers(filters, format, include_orders, include_addresses);\r\n\r\n    // Registrar m\xE9tricas\r\n    metricsCollector.recordApiCall({\r\n      endpoint: '/api/admin/users/bulk',\r\n      method: 'GET',\r\n      statusCode: 200,\r\n      responseTime: Date.now() - startTime,\r\n      userId: authResult.userId\r\n    });\r\n\r\n    // Log de auditor\xEDa\r\n    logger.log(LogLevel.INFO, LogCategory.ADMIN, 'Exportaci\xF3n de usuarios realizada', {\r\n      adminUserId: authResult.userId,\r\n      format,\r\n      userCount: exportData.total_count,\r\n      filters\r\n    });\r\n\r\n    const response: ApiResponse<ExportData> = {\r\n      data: exportData,\r\n      success: true,\r\n      message: `${exportData.total_count} usuarios exportados exitosamente`\r\n    };\r\n\r\n    const nextResponse = NextResponse.json(response);\r\n    addRateLimitHeaders(nextResponse, rateLimitResult);\r\n    return nextResponse;\r\n\r\n  } catch (error) {\r\n    logger.log(LogLevel.ERROR, LogCategory.API, 'Error en GET /api/admin/users/bulk', { error });\r\n\r\n    // Registrar m\xE9tricas de error\r\n    metricsCollector.recordApiCall({\r\n      endpoint: '/api/admin/users/bulk',\r\n      method: 'GET',\r\n      statusCode: 500,\r\n      responseTime: Date.now() - startTime,\r\n      error: error instanceof Error ? error.message : 'Unknown error'\r\n    });\r\n\r\n    const errorResponse: ApiResponse<null> = {\r\n      data: null,\r\n      success: false,\r\n      error: 'Error interno del servidor',\r\n    };\r\n\r\n    return NextResponse.json(errorResponse, { status: 500 });\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "POST", "runtime", "MAX_BULK_OPERATIONS", "BATCH_SIZE", "BulkUserOperationSchema", "z", "object", "operation", "enum", "user_ids", "array", "string", "uuid", "min", "max", "data", "role", "optional", "export_format", "include_orders", "boolean", "date_range", "start", "end", "BulkExportSchema", "filters", "is_active", "created_after", "created_before", "has_orders", "min_orders", "number", "min_spent", "format", "default", "include_addresses", "validateAdminAuth", "process", "env", "NODE_ENV", "BYPASS_AUTH", "user", "id", "email", "name", "userId", "session", "auth", "error", "status", "isAdmin", "logger", "log", "LogLevel", "ERROR", "LogCategory", "AUTH", "processUsersInBatches", "userIds", "processor", "results", "i", "length", "batch", "slice", "batchResults", "push", "Promise", "resolve", "setTimeout", "bulkActivateUsers", "adminUserId", "result", "success", "failed", "errors", "supabaseAdmin", "from", "update", "updated_at", "Date", "toISOString", "in", "neq", "select", "forEach", "user_id", "message", "failedIds", "filter", "some", "u", "bulkDeactivateUsers", "bulkUpdateRole", "newRole", "admin", "updateUserById", "user_metadata", "authError", "WARN", "bulkDeleteUsers", "usersWithOrders", "userIdsWithOrders", "Set", "map", "o", "deletableUserIds", "has", "deleteUser", "delete", "exportUsers", "includeOrders", "includeAddresses", "query", "eq", "undefined", "gte", "lte", "users", "order", "ascending", "Error", "processedUsers", "orderStats", "ordersByUser", "reduce", "acc", "count", "total_spent", "completed_orders", "total", "orders_count", "total_count", "export_date", "filters_applied", "request", "startTime", "now", "rateLimitResult", "checkRateLimit", "windowMs", "RATE_LIMIT_CONFIGS", "maxRequests", "Math", "floor", "response", "NextResponse", "json", "addRateLimitHeaders", "authResult", "errorResponse", "body", "validationResult", "safeParse", "exportData", "includes", "processed_users", "metricsCollector", "recordApiCall", "endpoint", "method", "statusCode", "responseTime", "INFO", "ADMIN", "userCount", "successCount", "failedCount", "nextResponse", "API", "searchParams", "URL", "url", "exportParams", "get", "parseInt", "parseFloat"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "69d523266bf6dc33962b049cb06def71eb04764a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2jqmf9rr90 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2jqmf9rr90();
cov_2jqmf9rr90().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2jqmf9rr90().f[0]++;
  cov_2jqmf9rr90().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2jqmf9rr90().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_2jqmf9rr90().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_2jqmf9rr90().f[1]++;
    cov_2jqmf9rr90().s[4]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_2jqmf9rr90().f[2]++;
    cov_2jqmf9rr90().s[5]++;
    return POST;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_2jqmf9rr90().f[3]++;
    cov_2jqmf9rr90().s[6]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_2jqmf9rr90().s[7]++, require("next/server"));
const _supabase =
/* istanbul ignore next */
(cov_2jqmf9rr90().s[8]++, require("../../../../../lib/integrations/supabase"));
const _config =
/* istanbul ignore next */
(cov_2jqmf9rr90().s[9]++, require("../../../../../lib/auth/config"));
const _zod =
/* istanbul ignore next */
(cov_2jqmf9rr90().s[10]++, require("zod"));
const _logger =
/* istanbul ignore next */
(cov_2jqmf9rr90().s[11]++, require("../../../../../lib/enterprise/logger"));
const _ratelimiting =
/* istanbul ignore next */
(cov_2jqmf9rr90().s[12]++, require("../../../../../lib/auth/rate-limiting"));
const _ratelimiter =
/* istanbul ignore next */
(cov_2jqmf9rr90().s[13]++, require("../../../../../lib/enterprise/rate-limiter"));
const _metrics =
/* istanbul ignore next */
(cov_2jqmf9rr90().s[14]++, require("../../../../../lib/enterprise/metrics"));
const runtime =
/* istanbul ignore next */
(cov_2jqmf9rr90().s[15]++, 'nodejs');
// ===================================
// CONFIGURACIÃN
// ===================================
const MAX_BULK_OPERATIONS =
/* istanbul ignore next */
(cov_2jqmf9rr90().s[16]++, 100);
const BATCH_SIZE =
/* istanbul ignore next */
(cov_2jqmf9rr90().s[17]++, 10);
// ===================================
// SCHEMAS DE VALIDACIÃN
// ===================================
const BulkUserOperationSchema =
/* istanbul ignore next */
(cov_2jqmf9rr90().s[18]++, _zod.z.object({
  operation: _zod.z.enum(['activate', 'deactivate', 'delete', 'update_role', 'export']),
  user_ids: _zod.z.array(_zod.z.string().uuid()).min(1, 'Debe seleccionar al menos un usuario').max(MAX_BULK_OPERATIONS, `MÃ¡ximo ${MAX_BULK_OPERATIONS} usuarios por operaciÃ³n`),
  data: _zod.z.object({
    role: _zod.z.enum(['user', 'admin', 'moderator']).optional(),
    export_format: _zod.z.enum(['csv', 'json', 'xlsx']).optional(),
    include_orders: _zod.z.boolean().optional(),
    date_range: _zod.z.object({
      start: _zod.z.string().optional(),
      end: _zod.z.string().optional()
    }).optional()
  }).optional()
}));
const BulkExportSchema =
/* istanbul ignore next */
(cov_2jqmf9rr90().s[19]++, _zod.z.object({
  filters: _zod.z.object({
    role: _zod.z.enum(['user', 'admin', 'moderator']).optional(),
    is_active: _zod.z.boolean().optional(),
    created_after: _zod.z.string().optional(),
    created_before: _zod.z.string().optional(),
    has_orders: _zod.z.boolean().optional(),
    min_orders: _zod.z.number().min(0).optional(),
    min_spent: _zod.z.number().min(0).optional()
  }).optional(),
  format: _zod.z.enum(['csv', 'json', 'xlsx']).default('csv'),
  include_orders: _zod.z.boolean().default(false),
  include_addresses: _zod.z.boolean().default(false)
}));
// ===================================
// MIDDLEWARE DE AUTENTICACIÃN ADMIN
// ===================================
async function validateAdminAuth() {
  /* istanbul ignore next */
  cov_2jqmf9rr90().f[4]++;
  cov_2jqmf9rr90().s[20]++;
  try {
    /* istanbul ignore next */
    cov_2jqmf9rr90().s[21]++;
    // BYPASS TEMPORAL PARA DESARROLLO
    if (
    /* istanbul ignore next */
    (cov_2jqmf9rr90().b[1][0]++, process.env.NODE_ENV === 'development') &&
    /* istanbul ignore next */
    (cov_2jqmf9rr90().b[1][1]++, process.env.BYPASS_AUTH === 'true')) {
      /* istanbul ignore next */
      cov_2jqmf9rr90().b[0][0]++;
      cov_2jqmf9rr90().s[22]++;
      return {
        user: {
          id: 'dev-admin',
          email: 'santiago@xor.com.ar',
          name: 'Dev Admin'
        },
        userId: 'dev-admin'
      };
    } else
    /* istanbul ignore next */
    {
      cov_2jqmf9rr90().b[0][1]++;
    }
    const session =
    /* istanbul ignore next */
    (cov_2jqmf9rr90().s[23]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_2jqmf9rr90().s[24]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_2jqmf9rr90().b[2][0]++;
      cov_2jqmf9rr90().s[25]++;
      return {
        error: 'Usuario no autenticado',
        status: 401
      };
    } else
    /* istanbul ignore next */
    {
      cov_2jqmf9rr90().b[2][1]++;
    }
    // Verificar si es admin
    const isAdmin =
    /* istanbul ignore next */
    (cov_2jqmf9rr90().s[26]++, session.user.email === 'santiago@xor.com.ar');
    /* istanbul ignore next */
    cov_2jqmf9rr90().s[27]++;
    if (!isAdmin) {
      /* istanbul ignore next */
      cov_2jqmf9rr90().b[3][0]++;
      cov_2jqmf9rr90().s[28]++;
      return {
        error: 'Acceso denegado - Se requieren permisos de administrador',
        status: 403
      };
    } else
    /* istanbul ignore next */
    {
      cov_2jqmf9rr90().b[3][1]++;
    }
    cov_2jqmf9rr90().s[29]++;
    return {
      user: session.user,
      userId: session.user.id
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_2jqmf9rr90().s[30]++;
    _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.AUTH, 'Error en validaciÃ³n admin', {
      error
    });
    /* istanbul ignore next */
    cov_2jqmf9rr90().s[31]++;
    return {
      error: 'Error de autenticaciÃ³n',
      status: 500
    };
  }
}
// ===================================
// FUNCIONES AUXILIARES
// ===================================
async function processUsersInBatches(userIds, processor) {
  /* istanbul ignore next */
  cov_2jqmf9rr90().f[5]++;
  const results =
  /* istanbul ignore next */
  (cov_2jqmf9rr90().s[32]++, []);
  /* istanbul ignore next */
  cov_2jqmf9rr90().s[33]++;
  for (let i =
  /* istanbul ignore next */
  (cov_2jqmf9rr90().s[34]++, 0); i < userIds.length; i += BATCH_SIZE) {
    const batch =
    /* istanbul ignore next */
    (cov_2jqmf9rr90().s[35]++, userIds.slice(i, i + BATCH_SIZE));
    const batchResults =
    /* istanbul ignore next */
    (cov_2jqmf9rr90().s[36]++, await processor(batch));
    /* istanbul ignore next */
    cov_2jqmf9rr90().s[37]++;
    results.push(...batchResults);
    // PequeÃ±a pausa entre lotes para evitar sobrecarga
    /* istanbul ignore next */
    cov_2jqmf9rr90().s[38]++;
    if (i + BATCH_SIZE < userIds.length) {
      /* istanbul ignore next */
      cov_2jqmf9rr90().b[4][0]++;
      cov_2jqmf9rr90().s[39]++;
      await new Promise(resolve => {
        /* istanbul ignore next */
        cov_2jqmf9rr90().f[6]++;
        cov_2jqmf9rr90().s[40]++;
        return setTimeout(resolve, 100);
      });
    } else
    /* istanbul ignore next */
    {
      cov_2jqmf9rr90().b[4][1]++;
    }
  }
  /* istanbul ignore next */
  cov_2jqmf9rr90().s[41]++;
  return results;
}
async function bulkActivateUsers(userIds, adminUserId) {
  /* istanbul ignore next */
  cov_2jqmf9rr90().f[7]++;
  const result =
  /* istanbul ignore next */
  (cov_2jqmf9rr90().s[42]++, {
    success: 0,
    failed: 0,
    errors: []
  });
  /* istanbul ignore next */
  cov_2jqmf9rr90().s[43]++;
  await processUsersInBatches(userIds, async batch => {
    /* istanbul ignore next */
    cov_2jqmf9rr90().f[8]++;
    cov_2jqmf9rr90().s[44]++;
    try {
      const {
        data,
        error
      } =
      /* istanbul ignore next */
      (cov_2jqmf9rr90().s[45]++, await _supabase.supabaseAdmin.from('users').update({
        is_active: true,
        updated_at: new Date().toISOString()
      }).in('id', batch).neq('id', adminUserId) // Prevenir auto-modificaciÃ³n
      .select('id'));
      /* istanbul ignore next */
      cov_2jqmf9rr90().s[46]++;
      if (error) {
        /* istanbul ignore next */
        cov_2jqmf9rr90().b[5][0]++;
        cov_2jqmf9rr90().s[47]++;
        batch.forEach(id => {
          /* istanbul ignore next */
          cov_2jqmf9rr90().f[9]++;
          cov_2jqmf9rr90().s[48]++;
          result.errors.push({
            user_id: id,
            error: error.message
          });
          /* istanbul ignore next */
          cov_2jqmf9rr90().s[49]++;
          result.failed++;
        });
      } else {
        /* istanbul ignore next */
        cov_2jqmf9rr90().b[5][1]++;
        cov_2jqmf9rr90().s[50]++;
        result.success +=
        /* istanbul ignore next */
        (cov_2jqmf9rr90().b[6][0]++, data?.length) ||
        /* istanbul ignore next */
        (cov_2jqmf9rr90().b[6][1]++, 0);
        const failedIds =
        /* istanbul ignore next */
        (cov_2jqmf9rr90().s[51]++, batch.filter(id => {
          /* istanbul ignore next */
          cov_2jqmf9rr90().f[10]++;
          cov_2jqmf9rr90().s[52]++;
          return !data?.some(u => {
            /* istanbul ignore next */
            cov_2jqmf9rr90().f[11]++;
            cov_2jqmf9rr90().s[53]++;
            return u.id === id;
          });
        }));
        /* istanbul ignore next */
        cov_2jqmf9rr90().s[54]++;
        failedIds.forEach(id => {
          /* istanbul ignore next */
          cov_2jqmf9rr90().f[12]++;
          cov_2jqmf9rr90().s[55]++;
          result.errors.push({
            user_id: id,
            error: 'Usuario no encontrado o no se pudo activar'
          });
          /* istanbul ignore next */
          cov_2jqmf9rr90().s[56]++;
          result.failed++;
        });
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_2jqmf9rr90().s[57]++;
      batch.forEach(id => {
        /* istanbul ignore next */
        cov_2jqmf9rr90().f[13]++;
        cov_2jqmf9rr90().s[58]++;
        result.errors.push({
          user_id: id,
          error: 'Error interno'
        });
        /* istanbul ignore next */
        cov_2jqmf9rr90().s[59]++;
        result.failed++;
      });
    }
    /* istanbul ignore next */
    cov_2jqmf9rr90().s[60]++;
    return [];
  });
  /* istanbul ignore next */
  cov_2jqmf9rr90().s[61]++;
  return result;
}
async function bulkDeactivateUsers(userIds, adminUserId) {
  /* istanbul ignore next */
  cov_2jqmf9rr90().f[14]++;
  const result =
  /* istanbul ignore next */
  (cov_2jqmf9rr90().s[62]++, {
    success: 0,
    failed: 0,
    errors: []
  });
  /* istanbul ignore next */
  cov_2jqmf9rr90().s[63]++;
  await processUsersInBatches(userIds, async batch => {
    /* istanbul ignore next */
    cov_2jqmf9rr90().f[15]++;
    cov_2jqmf9rr90().s[64]++;
    try {
      const {
        data,
        error
      } =
      /* istanbul ignore next */
      (cov_2jqmf9rr90().s[65]++, await _supabase.supabaseAdmin.from('users').update({
        is_active: false,
        updated_at: new Date().toISOString()
      }).in('id', batch).neq('id', adminUserId) // Prevenir auto-desactivaciÃ³n
      .select('id'));
      /* istanbul ignore next */
      cov_2jqmf9rr90().s[66]++;
      if (error) {
        /* istanbul ignore next */
        cov_2jqmf9rr90().b[7][0]++;
        cov_2jqmf9rr90().s[67]++;
        batch.forEach(id => {
          /* istanbul ignore next */
          cov_2jqmf9rr90().f[16]++;
          cov_2jqmf9rr90().s[68]++;
          result.errors.push({
            user_id: id,
            error: error.message
          });
          /* istanbul ignore next */
          cov_2jqmf9rr90().s[69]++;
          result.failed++;
        });
      } else {
        /* istanbul ignore next */
        cov_2jqmf9rr90().b[7][1]++;
        cov_2jqmf9rr90().s[70]++;
        result.success +=
        /* istanbul ignore next */
        (cov_2jqmf9rr90().b[8][0]++, data?.length) ||
        /* istanbul ignore next */
        (cov_2jqmf9rr90().b[8][1]++, 0);
        const failedIds =
        /* istanbul ignore next */
        (cov_2jqmf9rr90().s[71]++, batch.filter(id => {
          /* istanbul ignore next */
          cov_2jqmf9rr90().f[17]++;
          cov_2jqmf9rr90().s[72]++;
          return !data?.some(u => {
            /* istanbul ignore next */
            cov_2jqmf9rr90().f[18]++;
            cov_2jqmf9rr90().s[73]++;
            return u.id === id;
          });
        }));
        /* istanbul ignore next */
        cov_2jqmf9rr90().s[74]++;
        failedIds.forEach(id => {
          /* istanbul ignore next */
          cov_2jqmf9rr90().f[19]++;
          cov_2jqmf9rr90().s[75]++;
          result.errors.push({
            user_id: id,
            error: 'Usuario no encontrado o no se pudo desactivar'
          });
          /* istanbul ignore next */
          cov_2jqmf9rr90().s[76]++;
          result.failed++;
        });
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_2jqmf9rr90().s[77]++;
      batch.forEach(id => {
        /* istanbul ignore next */
        cov_2jqmf9rr90().f[20]++;
        cov_2jqmf9rr90().s[78]++;
        result.errors.push({
          user_id: id,
          error: 'Error interno'
        });
        /* istanbul ignore next */
        cov_2jqmf9rr90().s[79]++;
        result.failed++;
      });
    }
    /* istanbul ignore next */
    cov_2jqmf9rr90().s[80]++;
    return [];
  });
  /* istanbul ignore next */
  cov_2jqmf9rr90().s[81]++;
  return result;
}
async function bulkUpdateRole(userIds, newRole, adminUserId) {
  /* istanbul ignore next */
  cov_2jqmf9rr90().f[21]++;
  const result =
  /* istanbul ignore next */
  (cov_2jqmf9rr90().s[82]++, {
    success: 0,
    failed: 0,
    errors: []
  });
  /* istanbul ignore next */
  cov_2jqmf9rr90().s[83]++;
  await processUsersInBatches(userIds, async batch => {
    /* istanbul ignore next */
    cov_2jqmf9rr90().f[22]++;
    cov_2jqmf9rr90().s[84]++;
    try {
      const {
        data,
        error
      } =
      /* istanbul ignore next */
      (cov_2jqmf9rr90().s[85]++, await _supabase.supabaseAdmin.from('users').update({
        role: newRole,
        updated_at: new Date().toISOString()
      }).in('id', batch).neq('id', adminUserId) // Prevenir auto-modificaciÃ³n de rol
      .select('id, email'));
      /* istanbul ignore next */
      cov_2jqmf9rr90().s[86]++;
      if (error) {
        /* istanbul ignore next */
        cov_2jqmf9rr90().b[9][0]++;
        cov_2jqmf9rr90().s[87]++;
        batch.forEach(id => {
          /* istanbul ignore next */
          cov_2jqmf9rr90().f[23]++;
          cov_2jqmf9rr90().s[88]++;
          result.errors.push({
            user_id: id,
            error: error.message
          });
          /* istanbul ignore next */
          cov_2jqmf9rr90().s[89]++;
          result.failed++;
        });
      } else {
        /* istanbul ignore next */
        cov_2jqmf9rr90().b[9][1]++;
        cov_2jqmf9rr90().s[90]++;
        result.success +=
        /* istanbul ignore next */
        (cov_2jqmf9rr90().b[10][0]++, data?.length) ||
        /* istanbul ignore next */
        (cov_2jqmf9rr90().b[10][1]++, 0);
        // Actualizar tambiÃ©n en Auth metadata
        /* istanbul ignore next */
        cov_2jqmf9rr90().s[91]++;
        for (const user of
        /* istanbul ignore next */
        (cov_2jqmf9rr90().b[11][0]++, data) ||
        /* istanbul ignore next */
        (cov_2jqmf9rr90().b[11][1]++, [])) {
          /* istanbul ignore next */
          cov_2jqmf9rr90().s[92]++;
          try {
            /* istanbul ignore next */
            cov_2jqmf9rr90().s[93]++;
            await _supabase.supabaseAdmin.auth.admin.updateUserById(user.id, {
              user_metadata: {
                role: newRole
              }
            });
          } catch (authError) {
            /* istanbul ignore next */
            cov_2jqmf9rr90().s[94]++;
            _logger.logger.log(_logger.LogLevel.WARN, _logger.LogCategory.AUTH, 'Error actualizando rol en Auth', {
              userId: user.id,
              authError
            });
          }
        }
        const failedIds =
        /* istanbul ignore next */
        (cov_2jqmf9rr90().s[95]++, batch.filter(id => {
          /* istanbul ignore next */
          cov_2jqmf9rr90().f[24]++;
          cov_2jqmf9rr90().s[96]++;
          return !data?.some(u => {
            /* istanbul ignore next */
            cov_2jqmf9rr90().f[25]++;
            cov_2jqmf9rr90().s[97]++;
            return u.id === id;
          });
        }));
        /* istanbul ignore next */
        cov_2jqmf9rr90().s[98]++;
        failedIds.forEach(id => {
          /* istanbul ignore next */
          cov_2jqmf9rr90().f[26]++;
          cov_2jqmf9rr90().s[99]++;
          result.errors.push({
            user_id: id,
            error: 'Usuario no encontrado o no se pudo actualizar'
          });
          /* istanbul ignore next */
          cov_2jqmf9rr90().s[100]++;
          result.failed++;
        });
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_2jqmf9rr90().s[101]++;
      batch.forEach(id => {
        /* istanbul ignore next */
        cov_2jqmf9rr90().f[27]++;
        cov_2jqmf9rr90().s[102]++;
        result.errors.push({
          user_id: id,
          error: 'Error interno'
        });
        /* istanbul ignore next */
        cov_2jqmf9rr90().s[103]++;
        result.failed++;
      });
    }
    /* istanbul ignore next */
    cov_2jqmf9rr90().s[104]++;
    return [];
  });
  /* istanbul ignore next */
  cov_2jqmf9rr90().s[105]++;
  return result;
}
async function bulkDeleteUsers(userIds, adminUserId) {
  /* istanbul ignore next */
  cov_2jqmf9rr90().f[28]++;
  const result =
  /* istanbul ignore next */
  (cov_2jqmf9rr90().s[106]++, {
    success: 0,
    failed: 0,
    errors: []
  });
  // Verificar que ningÃºn usuario tenga Ã³rdenes
  const {
    data: usersWithOrders
  } =
  /* istanbul ignore next */
  (cov_2jqmf9rr90().s[107]++, await _supabase.supabaseAdmin.from('orders').select('user_id').in('user_id', userIds));
  const userIdsWithOrders =
  /* istanbul ignore next */
  (cov_2jqmf9rr90().s[108]++, new Set(
  /* istanbul ignore next */
  (cov_2jqmf9rr90().b[12][0]++, usersWithOrders?.map(o => {
    /* istanbul ignore next */
    cov_2jqmf9rr90().f[29]++;
    cov_2jqmf9rr90().s[109]++;
    return o.user_id;
  })) ||
  /* istanbul ignore next */
  (cov_2jqmf9rr90().b[12][1]++, [])));
  // Filtrar usuarios que se pueden eliminar
  const deletableUserIds =
  /* istanbul ignore next */
  (cov_2jqmf9rr90().s[110]++, userIds.filter(id => {
    /* istanbul ignore next */
    cov_2jqmf9rr90().f[30]++;
    cov_2jqmf9rr90().s[111]++;
    return /* istanbul ignore next */(cov_2jqmf9rr90().b[13][0]++, id !== adminUserId) &&
    /* istanbul ignore next */
    (cov_2jqmf9rr90().b[13][1]++, !userIdsWithOrders.has(id));
  }));
  // Marcar como error los que no se pueden eliminar
  /* istanbul ignore next */
  cov_2jqmf9rr90().s[112]++;
  userIds.forEach(id => {
    /* istanbul ignore next */
    cov_2jqmf9rr90().f[31]++;
    cov_2jqmf9rr90().s[113]++;
    if (id === adminUserId) {
      /* istanbul ignore next */
      cov_2jqmf9rr90().b[14][0]++;
      cov_2jqmf9rr90().s[114]++;
      result.errors.push({
        user_id: id,
        error: 'No puedes eliminar tu propia cuenta'
      });
      /* istanbul ignore next */
      cov_2jqmf9rr90().s[115]++;
      result.failed++;
    } else {
      /* istanbul ignore next */
      cov_2jqmf9rr90().b[14][1]++;
      cov_2jqmf9rr90().s[116]++;
      if (userIdsWithOrders.has(id)) {
        /* istanbul ignore next */
        cov_2jqmf9rr90().b[15][0]++;
        cov_2jqmf9rr90().s[117]++;
        result.errors.push({
          user_id: id,
          error: 'Usuario tiene Ã³rdenes asociadas'
        });
        /* istanbul ignore next */
        cov_2jqmf9rr90().s[118]++;
        result.failed++;
      } else
      /* istanbul ignore next */
      {
        cov_2jqmf9rr90().b[15][1]++;
      }
    }
  });
  /* istanbul ignore next */
  cov_2jqmf9rr90().s[119]++;
  if (deletableUserIds.length === 0) {
    /* istanbul ignore next */
    cov_2jqmf9rr90().b[16][0]++;
    cov_2jqmf9rr90().s[120]++;
    return result;
  } else
  /* istanbul ignore next */
  {
    cov_2jqmf9rr90().b[16][1]++;
  }
  cov_2jqmf9rr90().s[121]++;
  await processUsersInBatches(deletableUserIds, async batch => {
    /* istanbul ignore next */
    cov_2jqmf9rr90().f[32]++;
    cov_2jqmf9rr90().s[122]++;
    try {
      /* istanbul ignore next */
      cov_2jqmf9rr90().s[123]++;
      // Eliminar de Auth primero
      for (const userId of batch) {
        /* istanbul ignore next */
        cov_2jqmf9rr90().s[124]++;
        try {
          /* istanbul ignore next */
          cov_2jqmf9rr90().s[125]++;
          await _supabase.supabaseAdmin.auth.admin.deleteUser(userId);
        } catch (authError) {
          /* istanbul ignore next */
          cov_2jqmf9rr90().s[126]++;
          result.errors.push({
            user_id: userId,
            error: 'Error eliminando de autenticaciÃ³n'
          });
          /* istanbul ignore next */
          cov_2jqmf9rr90().s[127]++;
          result.failed++;
          /* istanbul ignore next */
          cov_2jqmf9rr90().s[128]++;
          continue;
        }
      }
      // Eliminar perfiles
      const {
        data,
        error
      } =
      /* istanbul ignore next */
      (cov_2jqmf9rr90().s[129]++, await _supabase.supabaseAdmin.from('users').delete().in('id', batch).select('id'));
      /* istanbul ignore next */
      cov_2jqmf9rr90().s[130]++;
      if (error) {
        /* istanbul ignore next */
        cov_2jqmf9rr90().b[17][0]++;
        cov_2jqmf9rr90().s[131]++;
        batch.forEach(id => {
          /* istanbul ignore next */
          cov_2jqmf9rr90().f[33]++;
          cov_2jqmf9rr90().s[132]++;
          result.errors.push({
            user_id: id,
            error: error.message
          });
          /* istanbul ignore next */
          cov_2jqmf9rr90().s[133]++;
          result.failed++;
        });
      } else {
        /* istanbul ignore next */
        cov_2jqmf9rr90().b[17][1]++;
        cov_2jqmf9rr90().s[134]++;
        result.success +=
        /* istanbul ignore next */
        (cov_2jqmf9rr90().b[18][0]++, data?.length) ||
        /* istanbul ignore next */
        (cov_2jqmf9rr90().b[18][1]++, 0);
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_2jqmf9rr90().s[135]++;
      batch.forEach(id => {
        /* istanbul ignore next */
        cov_2jqmf9rr90().f[34]++;
        cov_2jqmf9rr90().s[136]++;
        result.errors.push({
          user_id: id,
          error: 'Error interno'
        });
        /* istanbul ignore next */
        cov_2jqmf9rr90().s[137]++;
        result.failed++;
      });
    }
    /* istanbul ignore next */
    cov_2jqmf9rr90().s[138]++;
    return [];
  });
  /* istanbul ignore next */
  cov_2jqmf9rr90().s[139]++;
  return result;
}
async function exportUsers(filters, format, includeOrders, includeAddresses) {
  /* istanbul ignore next */
  cov_2jqmf9rr90().f[35]++;
  let query =
  /* istanbul ignore next */
  (cov_2jqmf9rr90().s[140]++, _supabase.supabaseAdmin.from('users').select(`
      id,
      email,
      name,
      role,
      is_active,
      phone,
      created_at,
      updated_at,
      last_login,
      ${includeAddresses ?
  /* istanbul ignore next */
  (cov_2jqmf9rr90().b[19][0]++, 'address,') :
  /* istanbul ignore next */
  (cov_2jqmf9rr90().b[19][1]++, '')}
      avatar_url
    `));
  // Aplicar filtros
  /* istanbul ignore next */
  cov_2jqmf9rr90().s[141]++;
  if (filters?.role) {
    /* istanbul ignore next */
    cov_2jqmf9rr90().b[20][0]++;
    cov_2jqmf9rr90().s[142]++;
    query = query.eq('role', filters.role);
  } else
  /* istanbul ignore next */
  {
    cov_2jqmf9rr90().b[20][1]++;
  }
  cov_2jqmf9rr90().s[143]++;
  if (filters?.is_active !== undefined) {
    /* istanbul ignore next */
    cov_2jqmf9rr90().b[21][0]++;
    cov_2jqmf9rr90().s[144]++;
    query = query.eq('is_active', filters.is_active);
  } else
  /* istanbul ignore next */
  {
    cov_2jqmf9rr90().b[21][1]++;
  }
  cov_2jqmf9rr90().s[145]++;
  if (filters?.created_after) {
    /* istanbul ignore next */
    cov_2jqmf9rr90().b[22][0]++;
    cov_2jqmf9rr90().s[146]++;
    query = query.gte('created_at', filters.created_after);
  } else
  /* istanbul ignore next */
  {
    cov_2jqmf9rr90().b[22][1]++;
  }
  cov_2jqmf9rr90().s[147]++;
  if (filters?.created_before) {
    /* istanbul ignore next */
    cov_2jqmf9rr90().b[23][0]++;
    cov_2jqmf9rr90().s[148]++;
    query = query.lte('created_at', filters.created_before);
  } else
  /* istanbul ignore next */
  {
    cov_2jqmf9rr90().b[23][1]++;
  }
  const {
    data: users,
    error
  } =
  /* istanbul ignore next */
  (cov_2jqmf9rr90().s[149]++, await query.order('created_at', {
    ascending: false
  }));
  /* istanbul ignore next */
  cov_2jqmf9rr90().s[150]++;
  if (error) {
    /* istanbul ignore next */
    cov_2jqmf9rr90().b[24][0]++;
    cov_2jqmf9rr90().s[151]++;
    throw new Error(`Error exportando usuarios: ${error.message}`);
  } else
  /* istanbul ignore next */
  {
    cov_2jqmf9rr90().b[24][1]++;
  }
  let processedUsers =
  /* istanbul ignore next */
  (cov_2jqmf9rr90().s[152]++,
  /* istanbul ignore next */
  (cov_2jqmf9rr90().b[25][0]++, users) ||
  /* istanbul ignore next */
  (cov_2jqmf9rr90().b[25][1]++, []));
  // Incluir estadÃ­sticas de Ã³rdenes si se solicita
  /* istanbul ignore next */
  cov_2jqmf9rr90().s[153]++;
  if (includeOrders) {
    /* istanbul ignore next */
    cov_2jqmf9rr90().b[26][0]++;
    const userIds =
    /* istanbul ignore next */
    (cov_2jqmf9rr90().s[154]++, processedUsers.map(u => {
      /* istanbul ignore next */
      cov_2jqmf9rr90().f[36]++;
      cov_2jqmf9rr90().s[155]++;
      return u.id;
    }));
    const {
      data: orderStats
    } =
    /* istanbul ignore next */
    (cov_2jqmf9rr90().s[156]++, await _supabase.supabaseAdmin.from('orders').select('user_id, total, status').in('user_id', userIds));
    const ordersByUser =
    /* istanbul ignore next */
    (cov_2jqmf9rr90().s[157]++, (
    /* istanbul ignore next */
    (cov_2jqmf9rr90().b[27][0]++, orderStats) ||
    /* istanbul ignore next */
    (cov_2jqmf9rr90().b[27][1]++, [])).reduce((acc, order) => {
      /* istanbul ignore next */
      cov_2jqmf9rr90().f[37]++;
      cov_2jqmf9rr90().s[158]++;
      if (!acc[order.user_id]) {
        /* istanbul ignore next */
        cov_2jqmf9rr90().b[28][0]++;
        cov_2jqmf9rr90().s[159]++;
        acc[order.user_id] = {
          count: 0,
          total_spent: 0,
          completed_orders: 0
        };
      } else
      /* istanbul ignore next */
      {
        cov_2jqmf9rr90().b[28][1]++;
      }
      cov_2jqmf9rr90().s[160]++;
      acc[order.user_id].count++;
      /* istanbul ignore next */
      cov_2jqmf9rr90().s[161]++;
      if (order.status === 'completed') {
        /* istanbul ignore next */
        cov_2jqmf9rr90().b[29][0]++;
        cov_2jqmf9rr90().s[162]++;
        acc[order.user_id].completed_orders++;
        /* istanbul ignore next */
        cov_2jqmf9rr90().s[163]++;
        acc[order.user_id].total_spent +=
        /* istanbul ignore next */
        (cov_2jqmf9rr90().b[30][0]++, order.total) ||
        /* istanbul ignore next */
        (cov_2jqmf9rr90().b[30][1]++, 0);
      } else
      /* istanbul ignore next */
      {
        cov_2jqmf9rr90().b[29][1]++;
      }
      cov_2jqmf9rr90().s[164]++;
      return acc;
    }, {}));
    /* istanbul ignore next */
    cov_2jqmf9rr90().s[165]++;
    processedUsers = processedUsers.map(user => {
      /* istanbul ignore next */
      cov_2jqmf9rr90().f[38]++;
      cov_2jqmf9rr90().s[166]++;
      return {
        ...user,
        orders_count:
        /* istanbul ignore next */
        (cov_2jqmf9rr90().b[31][0]++, ordersByUser[user.id]?.count) ||
        /* istanbul ignore next */
        (cov_2jqmf9rr90().b[31][1]++, 0),
        completed_orders:
        /* istanbul ignore next */
        (cov_2jqmf9rr90().b[32][0]++, ordersByUser[user.id]?.completed_orders) ||
        /* istanbul ignore next */
        (cov_2jqmf9rr90().b[32][1]++, 0),
        total_spent:
        /* istanbul ignore next */
        (cov_2jqmf9rr90().b[33][0]++, ordersByUser[user.id]?.total_spent) ||
        /* istanbul ignore next */
        (cov_2jqmf9rr90().b[33][1]++, 0)
      };
    });
  } else
  /* istanbul ignore next */
  {
    cov_2jqmf9rr90().b[26][1]++;
  }
  // Aplicar filtros adicionales basados en Ã³rdenes
  cov_2jqmf9rr90().s[167]++;
  if (filters?.has_orders !== undefined) {
    /* istanbul ignore next */
    cov_2jqmf9rr90().b[34][0]++;
    cov_2jqmf9rr90().s[168]++;
    processedUsers = processedUsers.filter(user => {
      /* istanbul ignore next */
      cov_2jqmf9rr90().f[39]++;
      cov_2jqmf9rr90().s[169]++;
      return filters.has_orders ?
      /* istanbul ignore next */
      (cov_2jqmf9rr90().b[35][0]++, (
      /* istanbul ignore next */
      (cov_2jqmf9rr90().b[36][0]++, user.orders_count) ||
      /* istanbul ignore next */
      (cov_2jqmf9rr90().b[36][1]++, 0)) > 0) :
      /* istanbul ignore next */
      (cov_2jqmf9rr90().b[35][1]++, (
      /* istanbul ignore next */
      (cov_2jqmf9rr90().b[37][0]++, user.orders_count) ||
      /* istanbul ignore next */
      (cov_2jqmf9rr90().b[37][1]++, 0)) === 0);
    });
  } else
  /* istanbul ignore next */
  {
    cov_2jqmf9rr90().b[34][1]++;
  }
  cov_2jqmf9rr90().s[170]++;
  if (filters?.min_orders) {
    /* istanbul ignore next */
    cov_2jqmf9rr90().b[38][0]++;
    cov_2jqmf9rr90().s[171]++;
    processedUsers = processedUsers.filter(user => {
      /* istanbul ignore next */
      cov_2jqmf9rr90().f[40]++;
      cov_2jqmf9rr90().s[172]++;
      return (
      /* istanbul ignore next */
      (cov_2jqmf9rr90().b[39][0]++, user.orders_count) ||
      /* istanbul ignore next */
      (cov_2jqmf9rr90().b[39][1]++, 0)) >= filters.min_orders;
    });
  } else
  /* istanbul ignore next */
  {
    cov_2jqmf9rr90().b[38][1]++;
  }
  cov_2jqmf9rr90().s[173]++;
  if (filters?.min_spent) {
    /* istanbul ignore next */
    cov_2jqmf9rr90().b[40][0]++;
    cov_2jqmf9rr90().s[174]++;
    processedUsers = processedUsers.filter(user => {
      /* istanbul ignore next */
      cov_2jqmf9rr90().f[41]++;
      cov_2jqmf9rr90().s[175]++;
      return (
      /* istanbul ignore next */
      (cov_2jqmf9rr90().b[41][0]++, user.total_spent) ||
      /* istanbul ignore next */
      (cov_2jqmf9rr90().b[41][1]++, 0)) >= filters.min_spent;
    });
  } else
  /* istanbul ignore next */
  {
    cov_2jqmf9rr90().b[40][1]++;
  }
  cov_2jqmf9rr90().s[176]++;
  return {
    users: processedUsers,
    total_count: processedUsers.length,
    export_date: new Date().toISOString(),
    filters_applied: filters
  };
}
async function POST(request) {
  /* istanbul ignore next */
  cov_2jqmf9rr90().f[42]++;
  const startTime =
  /* istanbul ignore next */
  (cov_2jqmf9rr90().s[177]++, Date.now());
  /* istanbul ignore next */
  cov_2jqmf9rr90().s[178]++;
  try {
    // Rate limiting
    const rateLimitResult =
    /* istanbul ignore next */
    (cov_2jqmf9rr90().s[179]++, await (0, _ratelimiting.checkRateLimit)(request, {
      windowMs: _ratelimiter.RATE_LIMIT_CONFIGS.admin.windowMs,
      maxRequests: Math.floor(_ratelimiter.RATE_LIMIT_CONFIGS.admin.maxRequests / 2),
      message: 'Demasiadas operaciones masivas'
    }, 'admin-users-bulk'));
    /* istanbul ignore next */
    cov_2jqmf9rr90().s[180]++;
    if (!rateLimitResult.success) {
      /* istanbul ignore next */
      cov_2jqmf9rr90().b[42][0]++;
      const response =
      /* istanbul ignore next */
      (cov_2jqmf9rr90().s[181]++, _server.NextResponse.json({
        error: rateLimitResult.message
      }, {
        status: 429
      }));
      /* istanbul ignore next */
      cov_2jqmf9rr90().s[182]++;
      (0, _ratelimiter.addRateLimitHeaders)(response, rateLimitResult);
      /* istanbul ignore next */
      cov_2jqmf9rr90().s[183]++;
      return response;
    } else
    /* istanbul ignore next */
    {
      cov_2jqmf9rr90().b[42][1]++;
    }
    // Validar autenticaciÃ³n admin
    const authResult =
    /* istanbul ignore next */
    (cov_2jqmf9rr90().s[184]++, await validateAdminAuth());
    /* istanbul ignore next */
    cov_2jqmf9rr90().s[185]++;
    if (authResult.error) {
      /* istanbul ignore next */
      cov_2jqmf9rr90().b[43][0]++;
      const errorResponse =
      /* istanbul ignore next */
      (cov_2jqmf9rr90().s[186]++, {
        data: null,
        success: false,
        error: authResult.error
      });
      /* istanbul ignore next */
      cov_2jqmf9rr90().s[187]++;
      return _server.NextResponse.json(errorResponse, {
        status: authResult.status
      });
    } else
    /* istanbul ignore next */
    {
      cov_2jqmf9rr90().b[43][1]++;
    }
    // Validar datos de entrada
    const body =
    /* istanbul ignore next */
    (cov_2jqmf9rr90().s[188]++, await request.json());
    const validationResult =
    /* istanbul ignore next */
    (cov_2jqmf9rr90().s[189]++, BulkUserOperationSchema.safeParse(body));
    /* istanbul ignore next */
    cov_2jqmf9rr90().s[190]++;
    if (!validationResult.success) {
      /* istanbul ignore next */
      cov_2jqmf9rr90().b[44][0]++;
      const errorResponse =
      /* istanbul ignore next */
      (cov_2jqmf9rr90().s[191]++, {
        data: null,
        success: false,
        error: 'Datos de operaciÃ³n masiva invÃ¡lidos'
      });
      /* istanbul ignore next */
      cov_2jqmf9rr90().s[192]++;
      return _server.NextResponse.json(errorResponse, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_2jqmf9rr90().b[44][1]++;
    }
    const {
      operation,
      user_ids,
      data
    } =
    /* istanbul ignore next */
    (cov_2jqmf9rr90().s[193]++, validationResult.data);
    let result;
    // Ejecutar operaciÃ³n segÃºn el tipo
    /* istanbul ignore next */
    cov_2jqmf9rr90().s[194]++;
    switch (operation) {
      case 'activate':
        /* istanbul ignore next */
        cov_2jqmf9rr90().b[45][0]++;
        cov_2jqmf9rr90().s[195]++;
        result = await bulkActivateUsers(user_ids, authResult.userId);
        /* istanbul ignore next */
        cov_2jqmf9rr90().s[196]++;
        break;
      case 'deactivate':
        /* istanbul ignore next */
        cov_2jqmf9rr90().b[45][1]++;
        cov_2jqmf9rr90().s[197]++;
        result = await bulkDeactivateUsers(user_ids, authResult.userId);
        /* istanbul ignore next */
        cov_2jqmf9rr90().s[198]++;
        break;
      case 'update_role':
        /* istanbul ignore next */
        cov_2jqmf9rr90().b[45][2]++;
        cov_2jqmf9rr90().s[199]++;
        if (!data?.role) {
          /* istanbul ignore next */
          cov_2jqmf9rr90().b[46][0]++;
          const errorResponse =
          /* istanbul ignore next */
          (cov_2jqmf9rr90().s[200]++, {
            data: null,
            success: false,
            error: 'Rol requerido para actualizaciÃ³n masiva'
          });
          /* istanbul ignore next */
          cov_2jqmf9rr90().s[201]++;
          return _server.NextResponse.json(errorResponse, {
            status: 400
          });
        } else
        /* istanbul ignore next */
        {
          cov_2jqmf9rr90().b[46][1]++;
        }
        cov_2jqmf9rr90().s[202]++;
        result = await bulkUpdateRole(user_ids, data.role, authResult.userId);
        /* istanbul ignore next */
        cov_2jqmf9rr90().s[203]++;
        break;
      case 'delete':
        /* istanbul ignore next */
        cov_2jqmf9rr90().b[45][3]++;
        cov_2jqmf9rr90().s[204]++;
        result = await bulkDeleteUsers(user_ids, authResult.userId);
        /* istanbul ignore next */
        cov_2jqmf9rr90().s[205]++;
        break;
      case 'export':
        /* istanbul ignore next */
        cov_2jqmf9rr90().b[45][4]++;
        const exportData =
        /* istanbul ignore next */
        (cov_2jqmf9rr90().s[206]++, await exportUsers({},
        /* istanbul ignore next */
        (cov_2jqmf9rr90().b[47][0]++, data?.export_format) ||
        /* istanbul ignore next */
        (cov_2jqmf9rr90().b[47][1]++, 'csv'),
        /* istanbul ignore next */
        (cov_2jqmf9rr90().b[48][0]++, data?.include_orders) ||
        /* istanbul ignore next */
        (cov_2jqmf9rr90().b[48][1]++, false), false));
        // Filtrar solo los usuarios solicitados
        /* istanbul ignore next */
        cov_2jqmf9rr90().s[207]++;
        exportData.users = exportData.users.filter(user => {
          /* istanbul ignore next */
          cov_2jqmf9rr90().f[43]++;
          cov_2jqmf9rr90().s[208]++;
          return user_ids.includes(user.id);
        });
        /* istanbul ignore next */
        cov_2jqmf9rr90().s[209]++;
        exportData.total_count = exportData.users.length;
        /* istanbul ignore next */
        cov_2jqmf9rr90().s[210]++;
        result = {
          success: exportData.users.length,
          failed: 0,
          errors: [],
          processed_users: exportData.users
        };
        /* istanbul ignore next */
        cov_2jqmf9rr90().s[211]++;
        break;
      default:
        /* istanbul ignore next */
        cov_2jqmf9rr90().b[45][5]++;
        const errorResponse =
        /* istanbul ignore next */
        (cov_2jqmf9rr90().s[212]++, {
          data: null,
          success: false,
          error: 'OperaciÃ³n no soportada'
        });
        /* istanbul ignore next */
        cov_2jqmf9rr90().s[213]++;
        return _server.NextResponse.json(errorResponse, {
          status: 400
        });
    }
    // Registrar mÃ©tricas
    /* istanbul ignore next */
    cov_2jqmf9rr90().s[214]++;
    _metrics.metricsCollector.recordApiCall({
      endpoint: '/api/admin/users/bulk',
      method: 'POST',
      statusCode: 200,
      responseTime: Date.now() - startTime,
      userId: authResult.userId
    });
    // Log de auditorÃ­a
    /* istanbul ignore next */
    cov_2jqmf9rr90().s[215]++;
    _logger.logger.log(_logger.LogLevel.INFO, _logger.LogCategory.ADMIN, 'OperaciÃ³n masiva de usuarios ejecutada', {
      adminUserId: authResult.userId,
      operation,
      userCount: user_ids.length,
      successCount: result.success,
      failedCount: result.failed
    });
    const response =
    /* istanbul ignore next */
    (cov_2jqmf9rr90().s[216]++, {
      data: result,
      success: true,
      message: `OperaciÃ³n ${operation} completada. ${result.success} exitosos, ${result.failed} fallidos.`
    });
    const nextResponse =
    /* istanbul ignore next */
    (cov_2jqmf9rr90().s[217]++, _server.NextResponse.json(response));
    /* istanbul ignore next */
    cov_2jqmf9rr90().s[218]++;
    (0, _ratelimiter.addRateLimitHeaders)(nextResponse, rateLimitResult);
    /* istanbul ignore next */
    cov_2jqmf9rr90().s[219]++;
    return nextResponse;
  } catch (error) {
    /* istanbul ignore next */
    cov_2jqmf9rr90().s[220]++;
    _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.API, 'Error en POST /api/admin/users/bulk', {
      error
    });
    // Registrar mÃ©tricas de error
    /* istanbul ignore next */
    cov_2jqmf9rr90().s[221]++;
    _metrics.metricsCollector.recordApiCall({
      endpoint: '/api/admin/users/bulk',
      method: 'POST',
      statusCode: 500,
      responseTime: Date.now() - startTime,
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_2jqmf9rr90().b[49][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2jqmf9rr90().b[49][1]++, 'Unknown error')
    });
    const errorResponse =
    /* istanbul ignore next */
    (cov_2jqmf9rr90().s[222]++, {
      data: null,
      success: false,
      error: 'Error interno del servidor'
    });
    /* istanbul ignore next */
    cov_2jqmf9rr90().s[223]++;
    return _server.NextResponse.json(errorResponse, {
      status: 500
    });
  }
}
async function GET(request) {
  /* istanbul ignore next */
  cov_2jqmf9rr90().f[44]++;
  const startTime =
  /* istanbul ignore next */
  (cov_2jqmf9rr90().s[224]++, Date.now());
  /* istanbul ignore next */
  cov_2jqmf9rr90().s[225]++;
  try {
    // Rate limiting
    const rateLimitResult =
    /* istanbul ignore next */
    (cov_2jqmf9rr90().s[226]++, await (0, _ratelimiting.checkRateLimit)(request, {
      windowMs: _ratelimiter.RATE_LIMIT_CONFIGS.admin.windowMs,
      maxRequests: _ratelimiter.RATE_LIMIT_CONFIGS.admin.maxRequests,
      message:
      /* istanbul ignore next */
      (cov_2jqmf9rr90().b[50][0]++, _ratelimiter.RATE_LIMIT_CONFIGS.admin.message) ||
      /* istanbul ignore next */
      (cov_2jqmf9rr90().b[50][1]++, 'Demasiadas solicitudes administrativas')
    }, 'admin-users-export'));
    /* istanbul ignore next */
    cov_2jqmf9rr90().s[227]++;
    if (!rateLimitResult.success) {
      /* istanbul ignore next */
      cov_2jqmf9rr90().b[51][0]++;
      const response =
      /* istanbul ignore next */
      (cov_2jqmf9rr90().s[228]++, _server.NextResponse.json({
        error: rateLimitResult.message
      }, {
        status: 429
      }));
      /* istanbul ignore next */
      cov_2jqmf9rr90().s[229]++;
      (0, _ratelimiter.addRateLimitHeaders)(response, rateLimitResult);
      /* istanbul ignore next */
      cov_2jqmf9rr90().s[230]++;
      return response;
    } else
    /* istanbul ignore next */
    {
      cov_2jqmf9rr90().b[51][1]++;
    }
    // Validar autenticaciÃ³n admin
    const authResult =
    /* istanbul ignore next */
    (cov_2jqmf9rr90().s[231]++, await validateAdminAuth());
    /* istanbul ignore next */
    cov_2jqmf9rr90().s[232]++;
    if (authResult.error) {
      /* istanbul ignore next */
      cov_2jqmf9rr90().b[52][0]++;
      const errorResponse =
      /* istanbul ignore next */
      (cov_2jqmf9rr90().s[233]++, {
        data: null,
        success: false,
        error: authResult.error
      });
      /* istanbul ignore next */
      cov_2jqmf9rr90().s[234]++;
      return _server.NextResponse.json(errorResponse, {
        status: authResult.status
      });
    } else
    /* istanbul ignore next */
    {
      cov_2jqmf9rr90().b[52][1]++;
    }
    // Parsear parÃ¡metros de consulta
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_2jqmf9rr90().s[235]++, new URL(request.url));
    const exportParams =
    /* istanbul ignore next */
    (cov_2jqmf9rr90().s[236]++, {
      filters: {
        role:
        /* istanbul ignore next */
        (cov_2jqmf9rr90().b[53][0]++, searchParams.get('role')) ||
        /* istanbul ignore next */
        (cov_2jqmf9rr90().b[53][1]++, undefined),
        is_active: searchParams.get('is_active') ?
        /* istanbul ignore next */
        (cov_2jqmf9rr90().b[54][0]++, searchParams.get('is_active') === 'true') :
        /* istanbul ignore next */
        (cov_2jqmf9rr90().b[54][1]++, undefined),
        created_after:
        /* istanbul ignore next */
        (cov_2jqmf9rr90().b[55][0]++, searchParams.get('created_after')) ||
        /* istanbul ignore next */
        (cov_2jqmf9rr90().b[55][1]++, undefined),
        created_before:
        /* istanbul ignore next */
        (cov_2jqmf9rr90().b[56][0]++, searchParams.get('created_before')) ||
        /* istanbul ignore next */
        (cov_2jqmf9rr90().b[56][1]++, undefined),
        has_orders: searchParams.get('has_orders') ?
        /* istanbul ignore next */
        (cov_2jqmf9rr90().b[57][0]++, searchParams.get('has_orders') === 'true') :
        /* istanbul ignore next */
        (cov_2jqmf9rr90().b[57][1]++, undefined),
        min_orders: searchParams.get('min_orders') ?
        /* istanbul ignore next */
        (cov_2jqmf9rr90().b[58][0]++, parseInt(searchParams.get('min_orders'))) :
        /* istanbul ignore next */
        (cov_2jqmf9rr90().b[58][1]++, undefined),
        min_spent: searchParams.get('min_spent') ?
        /* istanbul ignore next */
        (cov_2jqmf9rr90().b[59][0]++, parseFloat(searchParams.get('min_spent'))) :
        /* istanbul ignore next */
        (cov_2jqmf9rr90().b[59][1]++, undefined)
      },
      format:
      /* istanbul ignore next */
      (cov_2jqmf9rr90().b[60][0]++, searchParams.get('format')) ||
      /* istanbul ignore next */
      (cov_2jqmf9rr90().b[60][1]++, 'csv'),
      include_orders: searchParams.get('include_orders') === 'true',
      include_addresses: searchParams.get('include_addresses') === 'true'
    });
    // Validar parÃ¡metros
    const validationResult =
    /* istanbul ignore next */
    (cov_2jqmf9rr90().s[237]++, BulkExportSchema.safeParse(exportParams));
    /* istanbul ignore next */
    cov_2jqmf9rr90().s[238]++;
    if (!validationResult.success) {
      /* istanbul ignore next */
      cov_2jqmf9rr90().b[61][0]++;
      const errorResponse =
      /* istanbul ignore next */
      (cov_2jqmf9rr90().s[239]++, {
        data: null,
        success: false,
        error: 'ParÃ¡metros de exportaciÃ³n invÃ¡lidos'
      });
      /* istanbul ignore next */
      cov_2jqmf9rr90().s[240]++;
      return _server.NextResponse.json(errorResponse, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_2jqmf9rr90().b[61][1]++;
    }
    const {
      filters,
      format,
      include_orders,
      include_addresses
    } =
    /* istanbul ignore next */
    (cov_2jqmf9rr90().s[241]++, validationResult.data);
    // Exportar usuarios
    const exportData =
    /* istanbul ignore next */
    (cov_2jqmf9rr90().s[242]++, await exportUsers(filters, format, include_orders, include_addresses));
    // Registrar mÃ©tricas
    /* istanbul ignore next */
    cov_2jqmf9rr90().s[243]++;
    _metrics.metricsCollector.recordApiCall({
      endpoint: '/api/admin/users/bulk',
      method: 'GET',
      statusCode: 200,
      responseTime: Date.now() - startTime,
      userId: authResult.userId
    });
    // Log de auditorÃ­a
    /* istanbul ignore next */
    cov_2jqmf9rr90().s[244]++;
    _logger.logger.log(_logger.LogLevel.INFO, _logger.LogCategory.ADMIN, 'ExportaciÃ³n de usuarios realizada', {
      adminUserId: authResult.userId,
      format,
      userCount: exportData.total_count,
      filters
    });
    const response =
    /* istanbul ignore next */
    (cov_2jqmf9rr90().s[245]++, {
      data: exportData,
      success: true,
      message: `${exportData.total_count} usuarios exportados exitosamente`
    });
    const nextResponse =
    /* istanbul ignore next */
    (cov_2jqmf9rr90().s[246]++, _server.NextResponse.json(response));
    /* istanbul ignore next */
    cov_2jqmf9rr90().s[247]++;
    (0, _ratelimiter.addRateLimitHeaders)(nextResponse, rateLimitResult);
    /* istanbul ignore next */
    cov_2jqmf9rr90().s[248]++;
    return nextResponse;
  } catch (error) {
    /* istanbul ignore next */
    cov_2jqmf9rr90().s[249]++;
    _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.API, 'Error en GET /api/admin/users/bulk', {
      error
    });
    // Registrar mÃ©tricas de error
    /* istanbul ignore next */
    cov_2jqmf9rr90().s[250]++;
    _metrics.metricsCollector.recordApiCall({
      endpoint: '/api/admin/users/bulk',
      method: 'GET',
      statusCode: 500,
      responseTime: Date.now() - startTime,
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_2jqmf9rr90().b[62][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2jqmf9rr90().b[62][1]++, 'Unknown error')
    });
    const errorResponse =
    /* istanbul ignore next */
    (cov_2jqmf9rr90().s[251]++, {
      data: null,
      success: false,
      error: 'Error interno del servidor'
    });
    /* istanbul ignore next */
    cov_2jqmf9rr90().s[252]++;
    return _server.NextResponse.json(errorResponse, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,