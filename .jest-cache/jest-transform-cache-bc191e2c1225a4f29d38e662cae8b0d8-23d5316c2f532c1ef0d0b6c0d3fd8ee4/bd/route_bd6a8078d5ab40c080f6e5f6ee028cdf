eb8150e75d499d7448c737cdf25ce7c5
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_20jmaugfkd() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\logistics\\tracking\\route.ts";
  var hash = "e151cfe3efc874c7918c7d9a4de3b0315d9c0fa2";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\logistics\\tracking\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 28,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 22
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 19
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 20
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 19
        }
      },
      "8": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 23
        }
      },
      "9": {
        start: {
          line: 29,
          column: 16
        },
        end: {
          line: 29,
          column: 38
        }
      },
      "10": {
        start: {
          line: 30,
          column: 13
        },
        end: {
          line: 30,
          column: 27
        }
      },
      "11": {
        start: {
          line: 31,
          column: 28
        },
        end: {
          line: 31,
          column: 81
        }
      },
      "12": {
        start: {
          line: 32,
          column: 22
        },
        end: {
          line: 32,
          column: 69
        }
      },
      "13": {
        start: {
          line: 33,
          column: 19
        },
        end: {
          line: 33,
          column: 63
        }
      },
      "14": {
        start: {
          line: 34,
          column: 17
        },
        end: {
          line: 34,
          column: 75
        }
      },
      "15": {
        start: {
          line: 35,
          column: 16
        },
        end: {
          line: 35,
          column: 57
        }
      },
      "16": {
        start: {
          line: 36,
          column: 22
        },
        end: {
          line: 36,
          column: 70
        }
      },
      "17": {
        start: {
          line: 37,
          column: 19
        },
        end: {
          line: 37,
          column: 60
        }
      },
      "18": {
        start: {
          line: 38,
          column: 16
        },
        end: {
          line: 38,
          column: 24
        }
      },
      "19": {
        start: {
          line: 42,
          column: 30
        },
        end: {
          line: 62,
          column: 2
        }
      },
      "20": {
        start: {
          line: 63,
          column: 34
        },
        end: {
          line: 81,
          column: 2
        }
      },
      "21": {
        start: {
          line: 66,
          column: 23
        },
        end: {
          line: 68,
          column: 13
        }
      },
      "22": {
        start: {
          line: 71,
          column: 23
        },
        end: {
          line: 73,
          column: 13
        }
      },
      "23": {
        start: {
          line: 82,
          column: 34
        },
        end: {
          line: 84,
          column: 2
        }
      },
      "24": {
        start: {
          line: 85,
          column: 33
        },
        end: {
          line: 87,
          column: 2
        }
      },
      "25": {
        start: {
          line: 92,
          column: 20
        },
        end: {
          line: 92,
          column: 45
        }
      },
      "26": {
        start: {
          line: 93,
          column: 4
        },
        end: {
          line: 100,
          column: 5
        }
      },
      "27": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 99,
          column: 11
        }
      },
      "28": {
        start: {
          line: 102,
          column: 28
        },
        end: {
          line: 106,
          column: 6
        }
      },
      "29": {
        start: {
          line: 105,
          column: 29
        },
        end: {
          line: 105,
          column: 78
        }
      },
      "30": {
        start: {
          line: 107,
          column: 4
        },
        end: {
          line: 115,
          column: 5
        }
      },
      "31": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 114,
          column: 11
        }
      },
      "32": {
        start: {
          line: 116,
          column: 4
        },
        end: {
          line: 116,
          column: 16
        }
      },
      "33": {
        start: {
          line: 120,
          column: 22
        },
        end: {
          line: 133,
          column: 27
        }
      },
      "34": {
        start: {
          line: 134,
          column: 4
        },
        end: {
          line: 136,
          column: 5
        }
      },
      "35": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 135,
          column: 111
        }
      },
      "36": {
        start: {
          line: 143,
          column: 22
        },
        end: {
          line: 143,
          column: 54
        }
      },
      "37": {
        start: {
          line: 144,
          column: 4
        },
        end: {
          line: 146,
          column: 5
        }
      },
      "38": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 145,
          column: 25
        }
      },
      "39": {
        start: {
          line: 147,
          column: 29
        },
        end: {
          line: 147,
          column: 49
        }
      },
      "40": {
        start: {
          line: 148,
          column: 20
        },
        end: {
          line: 161,
          column: 6
        }
      },
      "41": {
        start: {
          line: 162,
          column: 21
        },
        end: {
          line: 162,
          column: 49
        }
      },
      "42": {
        start: {
          line: 164,
          column: 16
        },
        end: {
          line: 180,
          column: 6
        }
      },
      "43": {
        start: {
          line: 182,
          column: 4
        },
        end: {
          line: 184,
          column: 5
        }
      },
      "44": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 183,
          column: 61
        }
      },
      "45": {
        start: {
          line: 185,
          column: 4
        },
        end: {
          line: 187,
          column: 5
        }
      },
      "46": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 186,
          column: 79
        }
      },
      "47": {
        start: {
          line: 188,
          column: 4
        },
        end: {
          line: 190,
          column: 5
        }
      },
      "48": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 189,
          column: 59
        }
      },
      "49": {
        start: {
          line: 191,
          column: 4
        },
        end: {
          line: 193,
          column: 5
        }
      },
      "50": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 192,
          column: 51
        }
      },
      "51": {
        start: {
          line: 194,
          column: 4
        },
        end: {
          line: 196,
          column: 5
        }
      },
      "52": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 195,
          column: 59
        }
      },
      "53": {
        start: {
          line: 197,
          column: 4
        },
        end: {
          line: 199,
          column: 5
        }
      },
      "54": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 198,
          column: 57
        }
      },
      "55": {
        start: {
          line: 200,
          column: 4
        },
        end: {
          line: 202,
          column: 5
        }
      },
      "56": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 201,
          column: 65
        }
      },
      "57": {
        start: {
          line: 203,
          column: 4
        },
        end: {
          line: 205,
          column: 5
        }
      },
      "58": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 204,
          column: 69
        }
      },
      "59": {
        start: {
          line: 207,
          column: 17
        },
        end: {
          line: 207,
          column: 51
        }
      },
      "60": {
        start: {
          line: 208,
          column: 15
        },
        end: {
          line: 208,
          column: 39
        }
      },
      "61": {
        start: {
          line: 209,
          column: 51
        },
        end: {
          line: 211,
          column: 22
        }
      },
      "62": {
        start: {
          line: 212,
          column: 4
        },
        end: {
          line: 214,
          column: 5
        }
      },
      "63": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 213,
          column: 111
        }
      },
      "64": {
        start: {
          line: 215,
          column: 21
        },
        end: {
          line: 233,
          column: 5
        }
      },
      "65": {
        start: {
          line: 234,
          column: 4
        },
        end: {
          line: 234,
          column: 47
        }
      },
      "66": {
        start: {
          line: 238,
          column: 22
        },
        end: {
          line: 238,
          column: 54
        }
      },
      "67": {
        start: {
          line: 239,
          column: 4
        },
        end: {
          line: 241,
          column: 5
        }
      },
      "68": {
        start: {
          line: 240,
          column: 8
        },
        end: {
          line: 240,
          column: 25
        }
      },
      "69": {
        start: {
          line: 242,
          column: 20
        },
        end: {
          line: 242,
          column: 45
        }
      },
      "70": {
        start: {
          line: 243,
          column: 17
        },
        end: {
          line: 243,
          column: 37
        }
      },
      "71": {
        start: {
          line: 245,
          column: 4
        },
        end: {
          line: 247,
          column: 5
        }
      },
      "72": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 246,
          column: 47
        }
      },
      "73": {
        start: {
          line: 248,
          column: 26
        },
        end: {
          line: 248,
          column: 63
        }
      },
      "74": {
        start: {
          line: 249,
          column: 21
        },
        end: {
          line: 249,
          column: 49
        }
      },
      "75": {
        start: {
          line: 251,
          column: 53
        },
        end: {
          line: 251,
          column: 168
        }
      },
      "76": {
        start: {
          line: 252,
          column: 4
        },
        end: {
          line: 254,
          column: 5
        }
      },
      "77": {
        start: {
          line: 253,
          column: 8
        },
        end: {
          line: 253,
          column: 69
        }
      },
      "78": {
        start: {
          line: 256,
          column: 43
        },
        end: {
          line: 266,
          column: 24
        }
      },
      "79": {
        start: {
          line: 267,
          column: 4
        },
        end: {
          line: 269,
          column: 5
        }
      },
      "80": {
        start: {
          line: 268,
          column: 8
        },
        end: {
          line: 268,
          column: 108
        }
      },
      "81": {
        start: {
          line: 271,
          column: 4
        },
        end: {
          line: 273,
          column: 5
        }
      },
      "82": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 272,
          column: 94
        }
      },
      "83": {
        start: {
          line: 275,
          column: 4
        },
        end: {
          line: 275,
          column: 125
        }
      },
      "84": {
        start: {
          line: 276,
          column: 21
        },
        end: {
          line: 280,
          column: 5
        }
      },
      "85": {
        start: {
          line: 281,
          column: 4
        },
        end: {
          line: 283,
          column: 7
        }
      },
      "86": {
        start: {
          line: 286,
          column: 20
        },
        end: {
          line: 286,
          column: 45
        }
      },
      "87": {
        start: {
          line: 287,
          column: 26
        },
        end: {
          line: 287,
          column: 62
        }
      },
      "88": {
        start: {
          line: 288,
          column: 21
        },
        end: {
          line: 288,
          column: 49
        }
      },
      "89": {
        start: {
          line: 289,
          column: 20
        },
        end: {
          line: 289,
          column: 22
        }
      },
      "90": {
        start: {
          line: 290,
          column: 19
        },
        end: {
          line: 290,
          column: 21
        }
      },
      "91": {
        start: {
          line: 292,
          column: 4
        },
        end: {
          line: 325,
          column: 5
        }
      },
      "92": {
        start: {
          line: 293,
          column: 8
        },
        end: {
          line: 324,
          column: 9
        }
      },
      "93": {
        start: {
          line: 295,
          column: 39
        },
        end: {
          line: 295,
          column: 133
        }
      },
      "94": {
        start: {
          line: 296,
          column: 12
        },
        end: {
          line: 302,
          column: 13
        }
      },
      "95": {
        start: {
          line: 297,
          column: 16
        },
        end: {
          line: 300,
          column: 19
        }
      },
      "96": {
        start: {
          line: 301,
          column: 16
        },
        end: {
          line: 301,
          column: 25
        }
      },
      "97": {
        start: {
          line: 304,
          column: 51
        },
        end: {
          line: 304,
          column: 125
        }
      },
      "98": {
        start: {
          line: 305,
          column: 12
        },
        end: {
          line: 311,
          column: 13
        }
      },
      "99": {
        start: {
          line: 306,
          column: 16
        },
        end: {
          line: 309,
          column: 19
        }
      },
      "100": {
        start: {
          line: 310,
          column: 16
        },
        end: {
          line: 310,
          column: 25
        }
      },
      "101": {
        start: {
          line: 313,
          column: 12
        },
        end: {
          line: 315,
          column: 13
        }
      },
      "102": {
        start: {
          line: 314,
          column: 16
        },
        end: {
          line: 314,
          column: 94
        }
      },
      "103": {
        start: {
          line: 316,
          column: 12
        },
        end: {
          line: 316,
          column: 40
        }
      },
      "104": {
        start: {
          line: 318,
          column: 12
        },
        end: {
          line: 318,
          column: 133
        }
      },
      "105": {
        start: {
          line: 320,
          column: 12
        },
        end: {
          line: 323,
          column: 15
        }
      },
      "106": {
        start: {
          line: 326,
          column: 4
        },
        end: {
          line: 338,
          column: 7
        }
      },
      "107": {
        start: {
          line: 342,
          column: 22
        },
        end: {
          line: 342,
          column: 54
        }
      },
      "108": {
        start: {
          line: 343,
          column: 4
        },
        end: {
          line: 345,
          column: 5
        }
      },
      "109": {
        start: {
          line: 344,
          column: 8
        },
        end: {
          line: 344,
          column: 25
        }
      },
      "110": {
        start: {
          line: 346,
          column: 20
        },
        end: {
          line: 346,
          column: 45
        }
      },
      "111": {
        start: {
          line: 347,
          column: 29
        },
        end: {
          line: 347,
          column: 49
        }
      },
      "112": {
        start: {
          line: 348,
          column: 20
        },
        end: {
          line: 348,
          column: 42
        }
      },
      "113": {
        start: {
          line: 349,
          column: 4
        },
        end: {
          line: 351,
          column: 5
        }
      },
      "114": {
        start: {
          line: 350,
          column: 8
        },
        end: {
          line: 350,
          column: 90
        }
      },
      "115": {
        start: {
          line: 352,
          column: 17
        },
        end: {
          line: 352,
          column: 37
        }
      },
      "116": {
        start: {
          line: 353,
          column: 26
        },
        end: {
          line: 353,
          column: 63
        }
      },
      "117": {
        start: {
          line: 354,
          column: 21
        },
        end: {
          line: 354,
          column: 49
        }
      },
      "118": {
        start: {
          line: 356,
          column: 55
        },
        end: {
          line: 356,
          column: 132
        }
      },
      "119": {
        start: {
          line: 357,
          column: 4
        },
        end: {
          line: 359,
          column: 5
        }
      },
      "120": {
        start: {
          line: 358,
          column: 8
        },
        end: {
          line: 358,
          column: 82
        }
      },
      "121": {
        start: {
          line: 361,
          column: 43
        },
        end: {
          line: 364,
          column: 42
        }
      },
      "122": {
        start: {
          line: 365,
          column: 4
        },
        end: {
          line: 367,
          column: 5
        }
      },
      "123": {
        start: {
          line: 366,
          column: 8
        },
        end: {
          line: 366,
          column: 113
        }
      },
      "124": {
        start: {
          line: 369,
          column: 4
        },
        end: {
          line: 371,
          column: 5
        }
      },
      "125": {
        start: {
          line: 370,
          column: 8
        },
        end: {
          line: 370,
          column: 94
        }
      },
      "126": {
        start: {
          line: 373,
          column: 4
        },
        end: {
          line: 373,
          column: 134
        }
      },
      "127": {
        start: {
          line: 374,
          column: 21
        },
        end: {
          line: 378,
          column: 5
        }
      },
      "128": {
        start: {
          line: 379,
          column: 4
        },
        end: {
          line: 379,
          column: 47
        }
      },
      "129": {
        start: {
          line: 383,
          column: 22
        },
        end: {
          line: 383,
          column: 54
        }
      },
      "130": {
        start: {
          line: 384,
          column: 4
        },
        end: {
          line: 386,
          column: 5
        }
      },
      "131": {
        start: {
          line: 385,
          column: 8
        },
        end: {
          line: 385,
          column: 25
        }
      },
      "132": {
        start: {
          line: 387,
          column: 20
        },
        end: {
          line: 387,
          column: 45
        }
      },
      "133": {
        start: {
          line: 388,
          column: 29
        },
        end: {
          line: 388,
          column: 49
        }
      },
      "134": {
        start: {
          line: 389,
          column: 20
        },
        end: {
          line: 389,
          column: 42
        }
      },
      "135": {
        start: {
          line: 390,
          column: 4
        },
        end: {
          line: 392,
          column: 5
        }
      },
      "136": {
        start: {
          line: 391,
          column: 8
        },
        end: {
          line: 391,
          column: 90
        }
      },
      "137": {
        start: {
          line: 393,
          column: 21
        },
        end: {
          line: 393,
          column: 49
        }
      },
      "138": {
        start: {
          line: 395,
          column: 55
        },
        end: {
          line: 395,
          column: 132
        }
      },
      "139": {
        start: {
          line: 396,
          column: 4
        },
        end: {
          line: 398,
          column: 5
        }
      },
      "140": {
        start: {
          line: 397,
          column: 8
        },
        end: {
          line: 397,
          column: 82
        }
      },
      "141": {
        start: {
          line: 400,
          column: 52
        },
        end: {
          line: 402,
          column: 51
        }
      },
      "142": {
        start: {
          line: 403,
          column: 4
        },
        end: {
          line: 405,
          column: 5
        }
      },
      "143": {
        start: {
          line: 404,
          column: 8
        },
        end: {
          line: 404,
          column: 116
        }
      },
      "144": {
        start: {
          line: 406,
          column: 4
        },
        end: {
          line: 408,
          column: 5
        }
      },
      "145": {
        start: {
          line: 407,
          column: 8
        },
        end: {
          line: 407,
          column: 110
        }
      },
      "146": {
        start: {
          line: 410,
          column: 22
        },
        end: {
          line: 410,
          column: 87
        }
      },
      "147": {
        start: {
          line: 411,
          column: 4
        },
        end: {
          line: 413,
          column: 5
        }
      },
      "148": {
        start: {
          line: 412,
          column: 8
        },
        end: {
          line: 412,
          column: 111
        }
      },
      "149": {
        start: {
          line: 415,
          column: 32
        },
        end: {
          line: 417,
          column: 24
        }
      },
      "150": {
        start: {
          line: 418,
          column: 4
        },
        end: {
          line: 420,
          column: 5
        }
      },
      "151": {
        start: {
          line: 419,
          column: 8
        },
        end: {
          line: 419,
          column: 90
        }
      },
      "152": {
        start: {
          line: 422,
          column: 4
        },
        end: {
          line: 422,
          column: 116
        }
      },
      "153": {
        start: {
          line: 423,
          column: 4
        },
        end: {
          line: 426,
          column: 7
        }
      },
      "154": {
        start: {
          line: 428,
          column: 12
        },
        end: {
          line: 428,
          column: 126
        }
      },
      "155": {
        start: {
          line: 429,
          column: 13
        },
        end: {
          line: 429,
          column: 128
        }
      },
      "156": {
        start: {
          line: 430,
          column: 12
        },
        end: {
          line: 430,
          column: 126
        }
      },
      "157": {
        start: {
          line: 431,
          column: 15
        },
        end: {
          line: 431,
          column: 132
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 18
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 15
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 16
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 15
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 19
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 66,
            column: 18
          },
          end: {
            line: 66,
            column: 19
          }
        },
        loc: {
          start: {
            line: 66,
            column: 23
          },
          end: {
            line: 68,
            column: 13
          }
        },
        line: 66
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 71,
            column: 18
          },
          end: {
            line: 71,
            column: 19
          }
        },
        loc: {
          start: {
            line: 71,
            column: 23
          },
          end: {
            line: 73,
            column: 13
          }
        },
        line: 71
      },
      "8": {
        name: "validateAdminAuth",
        decl: {
          start: {
            line: 91,
            column: 15
          },
          end: {
            line: 91,
            column: 32
          }
        },
        loc: {
          start: {
            line: 91,
            column: 42
          },
          end: {
            line: 117,
            column: 1
          }
        },
        line: 91
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 105,
            column: 22
          },
          end: {
            line: 105,
            column: 23
          }
        },
        loc: {
          start: {
            line: 105,
            column: 29
          },
          end: {
            line: 105,
            column: 78
          }
        },
        line: 105
      },
      "10": {
        name: "updateShipmentStatus",
        decl: {
          start: {
            line: 118,
            column: 15
          },
          end: {
            line: 118,
            column: 35
          }
        },
        loc: {
          start: {
            line: 118,
            column: 69
          },
          end: {
            line: 137,
            column: 1
          }
        },
        line: 118
      },
      "11": {
        name: "getHandler",
        decl: {
          start: {
            line: 141,
            column: 15
          },
          end: {
            line: 141,
            column: 25
          }
        },
        loc: {
          start: {
            line: 141,
            column: 35
          },
          end: {
            line: 235,
            column: 1
          }
        },
        line: 141
      },
      "12": {
        name: "postHandler",
        decl: {
          start: {
            line: 236,
            column: 15
          },
          end: {
            line: 236,
            column: 26
          }
        },
        loc: {
          start: {
            line: 236,
            column: 36
          },
          end: {
            line: 284,
            column: 1
          }
        },
        line: 236
      },
      "13": {
        name: "handleBulkUpdate",
        decl: {
          start: {
            line: 285,
            column: 15
          },
          end: {
            line: 285,
            column: 31
          }
        },
        loc: {
          start: {
            line: 285,
            column: 47
          },
          end: {
            line: 339,
            column: 1
          }
        },
        line: 285
      },
      "14": {
        name: "putHandler",
        decl: {
          start: {
            line: 340,
            column: 15
          },
          end: {
            line: 340,
            column: 25
          }
        },
        loc: {
          start: {
            line: 340,
            column: 35
          },
          end: {
            line: 380,
            column: 1
          }
        },
        line: 340
      },
      "15": {
        name: "deleteHandler",
        decl: {
          start: {
            line: 381,
            column: 15
          },
          end: {
            line: 381,
            column: 28
          }
        },
        loc: {
          start: {
            line: 381,
            column: 38
          },
          end: {
            line: 427,
            column: 1
          }
        },
        line: 381
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 93,
            column: 4
          },
          end: {
            line: 100,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 4
          },
          end: {
            line: 100,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 93
      },
      "1": {
        loc: {
          start: {
            line: 107,
            column: 4
          },
          end: {
            line: 115,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 4
          },
          end: {
            line: 115,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "2": {
        loc: {
          start: {
            line: 124,
            column: 11
          },
          end: {
            line: 126,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 124,
            column: 11
          },
          end: {
            line: 124,
            column: 60
          }
        }, {
          start: {
            line: 124,
            column: 64
          },
          end: {
            line: 126,
            column: 9
          }
        }],
        line: 124
      },
      "3": {
        loc: {
          start: {
            line: 127,
            column: 11
          },
          end: {
            line: 129,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 127,
            column: 11
          },
          end: {
            line: 127,
            column: 60
          }
        }, {
          start: {
            line: 127,
            column: 64
          },
          end: {
            line: 129,
            column: 9
          }
        }],
        line: 127
      },
      "4": {
        loc: {
          start: {
            line: 130,
            column: 11
          },
          end: {
            line: 132,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 130,
            column: 11
          },
          end: {
            line: 130,
            column: 60
          }
        }, {
          start: {
            line: 130,
            column: 64
          },
          end: {
            line: 132,
            column: 9
          }
        }],
        line: 130
      },
      "5": {
        loc: {
          start: {
            line: 134,
            column: 4
          },
          end: {
            line: 136,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 4
          },
          end: {
            line: 136,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      },
      "6": {
        loc: {
          start: {
            line: 144,
            column: 4
          },
          end: {
            line: 146,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 144,
            column: 4
          },
          end: {
            line: 146,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 144
      },
      "7": {
        loc: {
          start: {
            line: 149,
            column: 23
          },
          end: {
            line: 149,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 149,
            column: 23
          },
          end: {
            line: 149,
            column: 47
          }
        }, {
          start: {
            line: 149,
            column: 51
          },
          end: {
            line: 149,
            column: 54
          }
        }],
        line: 149
      },
      "8": {
        loc: {
          start: {
            line: 150,
            column: 24
          },
          end: {
            line: 150,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 150,
            column: 24
          },
          end: {
            line: 150,
            column: 49
          }
        }, {
          start: {
            line: 150,
            column: 53
          },
          end: {
            line: 150,
            column: 57
          }
        }],
        line: 150
      },
      "9": {
        loc: {
          start: {
            line: 151,
            column: 21
          },
          end: {
            line: 151,
            column: 108
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 151,
            column: 55
          },
          end: {
            line: 151,
            column: 96
          }
        }, {
          start: {
            line: 151,
            column: 99
          },
          end: {
            line: 151,
            column: 108
          }
        }],
        line: 151
      },
      "10": {
        loc: {
          start: {
            line: 152,
            column: 25
          },
          end: {
            line: 152,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 152,
            column: 25
          },
          end: {
            line: 152,
            column: 60
          }
        }, {
          start: {
            line: 152,
            column: 64
          },
          end: {
            line: 152,
            column: 73
          }
        }],
        line: 152
      },
      "11": {
        loc: {
          start: {
            line: 153,
            column: 20
          },
          end: {
            line: 153,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 153,
            column: 20
          },
          end: {
            line: 153,
            column: 50
          }
        }, {
          start: {
            line: 153,
            column: 54
          },
          end: {
            line: 153,
            column: 63
          }
        }],
        line: 153
      },
      "12": {
        loc: {
          start: {
            line: 154,
            column: 16
          },
          end: {
            line: 154,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 154,
            column: 16
          },
          end: {
            line: 154,
            column: 42
          }
        }, {
          start: {
            line: 154,
            column: 46
          },
          end: {
            line: 154,
            column: 55
          }
        }],
        line: 154
      },
      "13": {
        loc: {
          start: {
            line: 155,
            column: 19
          },
          end: {
            line: 155,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 155,
            column: 19
          },
          end: {
            line: 155,
            column: 48
          }
        }, {
          start: {
            line: 155,
            column: 52
          },
          end: {
            line: 155,
            column: 61
          }
        }],
        line: 155
      },
      "14": {
        loc: {
          start: {
            line: 156,
            column: 17
          },
          end: {
            line: 156,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 156,
            column: 17
          },
          end: {
            line: 156,
            column: 44
          }
        }, {
          start: {
            line: 156,
            column: 48
          },
          end: {
            line: 156,
            column: 57
          }
        }],
        line: 156
      },
      "15": {
        loc: {
          start: {
            line: 157,
            column: 18
          },
          end: {
            line: 157,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 157,
            column: 18
          },
          end: {
            line: 157,
            column: 46
          }
        }, {
          start: {
            line: 157,
            column: 50
          },
          end: {
            line: 157,
            column: 59
          }
        }],
        line: 157
      },
      "16": {
        loc: {
          start: {
            line: 158,
            column: 20
          },
          end: {
            line: 158,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 158,
            column: 53
          },
          end: {
            line: 158,
            column: 93
          }
        }, {
          start: {
            line: 158,
            column: 96
          },
          end: {
            line: 158,
            column: 105
          }
        }],
        line: 158
      },
      "17": {
        loc: {
          start: {
            line: 159,
            column: 17
          },
          end: {
            line: 159,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 159,
            column: 17
          },
          end: {
            line: 159,
            column: 44
          }
        }, {
          start: {
            line: 159,
            column: 48
          },
          end: {
            line: 159,
            column: 60
          }
        }],
        line: 159
      },
      "18": {
        loc: {
          start: {
            line: 160,
            column: 20
          },
          end: {
            line: 160,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 160,
            column: 20
          },
          end: {
            line: 160,
            column: 50
          }
        }, {
          start: {
            line: 160,
            column: 54
          },
          end: {
            line: 160,
            column: 60
          }
        }],
        line: 160
      },
      "19": {
        loc: {
          start: {
            line: 182,
            column: 4
          },
          end: {
            line: 184,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 182,
            column: 4
          },
          end: {
            line: 184,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 182
      },
      "20": {
        loc: {
          start: {
            line: 185,
            column: 4
          },
          end: {
            line: 187,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 185,
            column: 4
          },
          end: {
            line: 187,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 185
      },
      "21": {
        loc: {
          start: {
            line: 188,
            column: 4
          },
          end: {
            line: 190,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 188,
            column: 4
          },
          end: {
            line: 190,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 188
      },
      "22": {
        loc: {
          start: {
            line: 191,
            column: 4
          },
          end: {
            line: 193,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 191,
            column: 4
          },
          end: {
            line: 193,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 191
      },
      "23": {
        loc: {
          start: {
            line: 194,
            column: 4
          },
          end: {
            line: 196,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 194,
            column: 4
          },
          end: {
            line: 196,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 194
      },
      "24": {
        loc: {
          start: {
            line: 197,
            column: 4
          },
          end: {
            line: 199,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 197,
            column: 4
          },
          end: {
            line: 199,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 197
      },
      "25": {
        loc: {
          start: {
            line: 200,
            column: 4
          },
          end: {
            line: 202,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 200,
            column: 4
          },
          end: {
            line: 202,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 200
      },
      "26": {
        loc: {
          start: {
            line: 203,
            column: 4
          },
          end: {
            line: 205,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 203,
            column: 4
          },
          end: {
            line: 205,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 203
      },
      "27": {
        loc: {
          start: {
            line: 212,
            column: 4
          },
          end: {
            line: 214,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 212,
            column: 4
          },
          end: {
            line: 214,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 212
      },
      "28": {
        loc: {
          start: {
            line: 216,
            column: 14
          },
          end: {
            line: 216,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 216,
            column: 14
          },
          end: {
            line: 216,
            column: 28
          }
        }, {
          start: {
            line: 216,
            column: 32
          },
          end: {
            line: 216,
            column: 34
          }
        }],
        line: 216
      },
      "29": {
        loc: {
          start: {
            line: 220,
            column: 19
          },
          end: {
            line: 220,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 220,
            column: 19
          },
          end: {
            line: 220,
            column: 24
          }
        }, {
          start: {
            line: 220,
            column: 28
          },
          end: {
            line: 220,
            column: 29
          }
        }],
        line: 220
      },
      "30": {
        loc: {
          start: {
            line: 221,
            column: 30
          },
          end: {
            line: 221,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 221,
            column: 30
          },
          end: {
            line: 221,
            column: 35
          }
        }, {
          start: {
            line: 221,
            column: 39
          },
          end: {
            line: 221,
            column: 40
          }
        }],
        line: 221
      },
      "31": {
        loc: {
          start: {
            line: 239,
            column: 4
          },
          end: {
            line: 241,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 239,
            column: 4
          },
          end: {
            line: 241,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 239
      },
      "32": {
        loc: {
          start: {
            line: 245,
            column: 4
          },
          end: {
            line: 247,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 245,
            column: 4
          },
          end: {
            line: 247,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 245
      },
      "33": {
        loc: {
          start: {
            line: 245,
            column: 8
          },
          end: {
            line: 245,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 245,
            column: 8
          },
          end: {
            line: 245,
            column: 19
          }
        }, {
          start: {
            line: 245,
            column: 23
          },
          end: {
            line: 245,
            column: 49
          }
        }],
        line: 245
      },
      "34": {
        loc: {
          start: {
            line: 252,
            column: 4
          },
          end: {
            line: 254,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 252,
            column: 4
          },
          end: {
            line: 254,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 252
      },
      "35": {
        loc: {
          start: {
            line: 252,
            column: 8
          },
          end: {
            line: 252,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 252,
            column: 8
          },
          end: {
            line: 252,
            column: 21
          }
        }, {
          start: {
            line: 252,
            column: 25
          },
          end: {
            line: 252,
            column: 34
          }
        }],
        line: 252
      },
      "36": {
        loc: {
          start: {
            line: 267,
            column: 4
          },
          end: {
            line: 269,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 267,
            column: 4
          },
          end: {
            line: 269,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 267
      },
      "37": {
        loc: {
          start: {
            line: 271,
            column: 4
          },
          end: {
            line: 273,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 271,
            column: 4
          },
          end: {
            line: 273,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 271
      },
      "38": {
        loc: {
          start: {
            line: 296,
            column: 12
          },
          end: {
            line: 302,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 296,
            column: 12
          },
          end: {
            line: 302,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 296
      },
      "39": {
        loc: {
          start: {
            line: 305,
            column: 12
          },
          end: {
            line: 311,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 305,
            column: 12
          },
          end: {
            line: 311,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 305
      },
      "40": {
        loc: {
          start: {
            line: 313,
            column: 12
          },
          end: {
            line: 315,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 313,
            column: 12
          },
          end: {
            line: 315,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 313
      },
      "41": {
        loc: {
          start: {
            line: 322,
            column: 23
          },
          end: {
            line: 322,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 322,
            column: 48
          },
          end: {
            line: 322,
            column: 61
          }
        }, {
          start: {
            line: 322,
            column: 64
          },
          end: {
            line: 322,
            column: 83
          }
        }],
        line: 322
      },
      "42": {
        loc: {
          start: {
            line: 343,
            column: 4
          },
          end: {
            line: 345,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 343,
            column: 4
          },
          end: {
            line: 345,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 343
      },
      "43": {
        loc: {
          start: {
            line: 349,
            column: 4
          },
          end: {
            line: 351,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 349,
            column: 4
          },
          end: {
            line: 351,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 349
      },
      "44": {
        loc: {
          start: {
            line: 357,
            column: 4
          },
          end: {
            line: 359,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 357,
            column: 4
          },
          end: {
            line: 359,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 357
      },
      "45": {
        loc: {
          start: {
            line: 357,
            column: 8
          },
          end: {
            line: 357,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 357,
            column: 8
          },
          end: {
            line: 357,
            column: 18
          }
        }, {
          start: {
            line: 357,
            column: 22
          },
          end: {
            line: 357,
            column: 36
          }
        }],
        line: 357
      },
      "46": {
        loc: {
          start: {
            line: 365,
            column: 4
          },
          end: {
            line: 367,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 365,
            column: 4
          },
          end: {
            line: 367,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 365
      },
      "47": {
        loc: {
          start: {
            line: 369,
            column: 4
          },
          end: {
            line: 371,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 369,
            column: 4
          },
          end: {
            line: 371,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 369
      },
      "48": {
        loc: {
          start: {
            line: 369,
            column: 8
          },
          end: {
            line: 369,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 369,
            column: 8
          },
          end: {
            line: 369,
            column: 28
          }
        }, {
          start: {
            line: 369,
            column: 32
          },
          end: {
            line: 369,
            column: 77
          }
        }],
        line: 369
      },
      "49": {
        loc: {
          start: {
            line: 384,
            column: 4
          },
          end: {
            line: 386,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 384,
            column: 4
          },
          end: {
            line: 386,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 384
      },
      "50": {
        loc: {
          start: {
            line: 390,
            column: 4
          },
          end: {
            line: 392,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 390,
            column: 4
          },
          end: {
            line: 392,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 390
      },
      "51": {
        loc: {
          start: {
            line: 396,
            column: 4
          },
          end: {
            line: 398,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 396,
            column: 4
          },
          end: {
            line: 398,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 396
      },
      "52": {
        loc: {
          start: {
            line: 396,
            column: 8
          },
          end: {
            line: 396,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 396,
            column: 8
          },
          end: {
            line: 396,
            column: 18
          }
        }, {
          start: {
            line: 396,
            column: 22
          },
          end: {
            line: 396,
            column: 36
          }
        }],
        line: 396
      },
      "53": {
        loc: {
          start: {
            line: 403,
            column: 4
          },
          end: {
            line: 405,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 403,
            column: 4
          },
          end: {
            line: 405,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 403
      },
      "54": {
        loc: {
          start: {
            line: 406,
            column: 4
          },
          end: {
            line: 408,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 406,
            column: 4
          },
          end: {
            line: 408,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 406
      },
      "55": {
        loc: {
          start: {
            line: 406,
            column: 8
          },
          end: {
            line: 406,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 406,
            column: 8
          },
          end: {
            line: 406,
            column: 18
          }
        }, {
          start: {
            line: 406,
            column: 22
          },
          end: {
            line: 406,
            column: 44
          }
        }],
        line: 406
      },
      "56": {
        loc: {
          start: {
            line: 411,
            column: 4
          },
          end: {
            line: 413,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 411,
            column: 4
          },
          end: {
            line: 413,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 411
      },
      "57": {
        loc: {
          start: {
            line: 418,
            column: 4
          },
          end: {
            line: 420,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 418,
            column: 4
          },
          end: {
            line: 420,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 418
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\logistics\\tracking\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// =====================================================\r\n// API: SEGUIMIENTO DE ENV\xCDOS EN TIEMPO REAL ENTERPRISE\r\n// Endpoint: /api/admin/logistics/tracking\r\n// Descripci\xF3n: Gesti\xF3n completa de tracking de env\xEDos\r\n// Basado en: Patrones enterprise establecidos en el proyecto\r\n// =====================================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { z } from 'zod';\r\nimport { composeMiddlewares } from '@/lib/api/middleware-composer';\r\nimport { withErrorHandler, ApiError, ValidationError, NotFoundError } from '@/lib/api/error-handler';\r\nimport { withApiLogging, logAdminAction } from '@/lib/api/api-logger';\r\nimport { withAdminAuth } from '@/lib/auth/api-auth-middleware';\r\nimport { withValidation } from '@/lib/validation/admin-schemas';\r\nimport { createClient } from '@/lib/integrations/supabase/server';\r\nimport { Database } from '@/types/database';\r\nimport { auth } from '@/lib/auth/config';\r\nimport { checkRateLimit } from '@/lib/auth/rate-limiting';\r\nimport { \r\n  TrackingEvent,\r\n  TrackingEventType,\r\n  ShipmentStatus,\r\n  TrackingFiltersRequest,\r\n  TrackingEventCreateRequest,\r\n  TrackingEventUpdateRequest,\r\n  TrackingResponse,\r\n  TrackingListResponse,\r\n  BulkTrackingUpdateRequest\r\n} from '@/types/logistics';\r\n\r\n// =====================================================\r\n// VALIDATION SCHEMAS\r\n// =====================================================\r\n\r\nconst TrackingFiltersSchema = z.object({\r\n  page: z.coerce.number().int().min(1).default(1),\r\nlimit: z.coerce.number().int().min(1).max(100).default(20),\r\n  shipment_id: z.number().int().positive().optional(),\r\n  tracking_number: z.string().optional(),\r\n  event_type: z.nativeEnum(TrackingEventType).optional(),\r\n  status: z.nativeEnum(ShipmentStatus).optional(),\r\n  date_from: z.string().datetime().optional(),\r\n  date_to: z.string().datetime().optional(),\r\n  location: z.string().optional(),\r\n  carrier_id: z.number().int().positive().optional(),\r\n  sort_by: z.enum(['created_at', 'event_date', 'shipment_id']).default('created_at'),\r\n  sort_order: z.enum(['asc', 'desc']).default('desc')\r\n});\r\n\r\nconst TrackingEventCreateSchema = z.object({\r\n  shipment_id: z.number().int().positive('ID de env\xEDo es requerido'),\r\n  event_type: z.nativeEnum(TrackingEventType, { \r\n    errorMap: () => ({ message: 'Tipo de evento inv\xE1lido' })\r\n  }),\r\n  status: z.nativeEnum(ShipmentStatus, {\r\n    errorMap: () => ({ message: 'Estado de env\xEDo inv\xE1lido' })\r\n  }),\r\n  event_date: z.string().datetime('Fecha del evento debe ser v\xE1lida'),\r\n  location: z.string().min(1, 'Ubicaci\xF3n es requerida').max(255),\r\n  description: z.string().max(500, 'Descripci\xF3n muy larga').optional(),\r\n  carrier_reference: z.string().max(100).optional(),\r\n  estimated_delivery: z.string().datetime().optional(),\r\n  metadata: z.record(z.any()).optional()\r\n});\r\n\r\nconst TrackingEventUpdateSchema = TrackingEventCreateSchema.partial().omit({ shipment_id: true });\r\n\r\nconst BulkTrackingUpdateSchema = z.object({\r\n  events: z.array(TrackingEventCreateSchema).min(1, 'Debe incluir al menos un evento').max(50, 'M\xE1ximo 50 eventos por lote')\r\n});\r\n\r\n// =====================================================\r\n// HELPER FUNCTIONS\r\n// =====================================================\r\n\r\nasync function validateAdminAuth(request: NextRequest) {\r\n  const session = await auth();\r\n  if (!session?.user) {\r\n    return NextResponse.json(\r\n      { error: 'No autorizado', code: 'UNAUTHORIZED' },\r\n      { status: 401 }\r\n    );\r\n  }\r\n\r\n  // Verificar rate limiting\r\n  const rateLimitResult = await checkRateLimit(request, {\r\n    windowMs: 60 * 1000, // 1 minuto\r\n    maxRequests: 200, // M\xE1s permisivo para tracking en tiempo real\r\n    keyGenerator: (req) => `admin_tracking_${session.user.id}_${req.method}`\r\n  });\r\n\r\n  if (!rateLimitResult.success) {\r\n    return NextResponse.json(\r\n      { \r\n        error: 'Demasiadas solicitudes', \r\n        code: 'RATE_LIMIT_EXCEEDED',\r\n        retryAfter: rateLimitResult.retryAfter \r\n      },\r\n      { status: 429 }\r\n    );\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nasync function updateShipmentStatus(supabase: ReturnType<typeof createClient<Database>>, shipmentId: number, newStatus: ShipmentStatus) {\r\n  // Actualizar estado del env\xEDo basado en el \xFAltimo evento\r\n  const { error } = await supabase\r\n    .from('shipments')\r\n    .update({ \r\n      status: newStatus,\r\n      updated_at: new Date().toISOString(),\r\n      // Actualizar fechas espec\xEDficas seg\xFAn el estado\r\n      ...(newStatus === ShipmentStatus.PICKED_UP && { picked_up_at: new Date().toISOString() }),\r\n      ...(newStatus === ShipmentStatus.DELIVERED && { delivered_at: new Date().toISOString() }),\r\n      ...(newStatus === ShipmentStatus.CANCELLED && { cancelled_at: new Date().toISOString() })\r\n    })\r\n    .eq('id', shipmentId);\r\n\r\n  if (error) {\r\n    throw new ApiError('Error al actualizar estado del env\xEDo', 500, 'DATABASE_ERROR', error);\r\n  }\r\n}\r\n\r\n// =====================================================\r\n// HANDLERS\r\n// =====================================================\r\n\r\nasync function getHandler(request: NextRequest) {\r\n  // Validar autenticaci\xF3n\r\n  const authError = await validateAdminAuth(request);\r\n  if (authError) {return authError;}\r\n\r\n  const { searchParams } = new URL(request.url);\r\n  const filters = TrackingFiltersSchema.parse({\r\n    page: parseInt(searchParams.get('page') || '1'),\r\n    limit: parseInt(searchParams.get('limit') || '20'),\r\n    shipment_id: searchParams.get('shipment_id') ? parseInt(searchParams.get('shipment_id')!) : undefined,\r\n    tracking_number: searchParams.get('tracking_number') || undefined,\r\n    event_type: searchParams.get('event_type') || undefined,\r\n    status: searchParams.get('status') || undefined,\r\n    date_from: searchParams.get('date_from') || undefined,\r\n    date_to: searchParams.get('date_to') || undefined,\r\n    location: searchParams.get('location') || undefined,\r\n    carrier_id: searchParams.get('carrier_id') ? parseInt(searchParams.get('carrier_id')!) : undefined,\r\n    sort_by: searchParams.get('sort_by') || 'created_at',\r\n    sort_order: searchParams.get('sort_order') || 'desc'\r\n  });\r\n\r\n  const supabase = createClient();\r\n\r\n  // Construir query con joins optimizados\r\n  let query = supabase\r\n    .from('tracking_events')\r\n    .select(`\r\n      *,\r\n      shipments!tracking_events_shipment_id_fkey (\r\n        id,\r\n        shipment_number,\r\n        tracking_number,\r\n        status,\r\n        carrier_id,\r\n        couriers (\r\n          id,\r\n          name,\r\n          code\r\n        )\r\n      )\r\n    `, { count: 'exact' });\r\n\r\n  // Aplicar filtros\r\n  if (filters.shipment_id) {\r\n    query = query.eq('shipment_id', filters.shipment_id);\r\n  }\r\n\r\n  if (filters.tracking_number) {\r\n    query = query.eq('shipments.tracking_number', filters.tracking_number);\r\n  }\r\n\r\n  if (filters.event_type) {\r\n    query = query.eq('event_type', filters.event_type);\r\n  }\r\n\r\n  if (filters.status) {\r\n    query = query.eq('status', filters.status);\r\n  }\r\n\r\n  if (filters.date_from) {\r\n    query = query.gte('event_date', filters.date_from);\r\n  }\r\n\r\n  if (filters.date_to) {\r\n    query = query.lte('event_date', filters.date_to);\r\n  }\r\n\r\n  if (filters.location) {\r\n    query = query.ilike('location', `%${filters.location}%`);\r\n  }\r\n\r\n  if (filters.carrier_id) {\r\n    query = query.eq('shipments.carrier_id', filters.carrier_id);\r\n  }\r\n\r\n  // Aplicar ordenamiento y paginaci\xF3n\r\n  const from = (filters.page - 1) * filters.limit;\r\n  const to = from + filters.limit - 1;\r\n\r\n  const { data: trackingEvents, error, count } = await query\r\n    .order(filters.sort_by, { ascending: filters.sort_order === 'asc' })\r\n    .range(from, to);\r\n\r\n  if (error) {\r\n    throw new ApiError('Error al obtener eventos de tracking', 500, 'DATABASE_ERROR', error);\r\n  }\r\n\r\n  const response: TrackingListResponse = {\r\n    data: trackingEvents || [],\r\n    pagination: {\r\n      page: filters.page,\r\n      limit: filters.limit,\r\n      total: count || 0,\r\n      pages: Math.ceil((count || 0) / filters.limit)\r\n    },\r\n    filters: {\r\n      shipment_id: filters.shipment_id,\r\n      tracking_number: filters.tracking_number,\r\n      event_type: filters.event_type,\r\n      status: filters.status,\r\n      date_from: filters.date_from,\r\n      date_to: filters.date_to,\r\n      location: filters.location,\r\n      carrier_id: filters.carrier_id\r\n    }\r\n  };\r\n\r\n  return NextResponse.json(response);\r\n}\r\n\r\nasync function postHandler(request: NextRequest) {\r\n  // Validar autenticaci\xF3n\r\n  const authError = await validateAdminAuth(request);\r\n  if (authError) {return authError;}\r\n\r\n  const session = await auth();\r\n  const body = await request.json();\r\n  \r\n  // Verificar si es una actualizaci\xF3n masiva o un evento individual\r\n  if (body.events && Array.isArray(body.events)) {\r\n    return handleBulkUpdate(request, body);\r\n  }\r\n\r\n  const validatedData = TrackingEventCreateSchema.parse(body);\r\n  const supabase = createClient();\r\n\r\n  // Verificar que el env\xEDo existe\r\n  const { data: shipment, error: shipmentError } = await supabase\r\n    .from('shipments')\r\n    .select('id, status, tracking_number')\r\n    .eq('id', validatedData.shipment_id)\r\n    .single();\r\n\r\n  if (shipmentError || !shipment) {\r\n    throw new NotFoundError('Env\xEDo no encontrado');\r\n  }\r\n\r\n  // Crear evento de tracking\r\n  const { data: trackingEvent, error } = await supabase\r\n    .from('tracking_events')\r\n    .insert({\r\n      shipment_id: validatedData.shipment_id,\r\n      event_type: validatedData.event_type,\r\n      status: validatedData.status,\r\n      event_date: validatedData.event_date,\r\n      location: validatedData.location,\r\n      description: validatedData.description,\r\n      carrier_reference: validatedData.carrier_reference,\r\n      estimated_delivery: validatedData.estimated_delivery,\r\n      metadata: validatedData.metadata\r\n    })\r\n    .select()\r\n    .single();\r\n\r\n  if (error) {\r\n    throw new ApiError('Error al crear evento de tracking', 500, 'DATABASE_ERROR', error);\r\n  }\r\n\r\n  // Actualizar estado del env\xEDo si es necesario\r\n  if (validatedData.status !== shipment.status) {\r\n    await updateShipmentStatus(supabase, validatedData.shipment_id, validatedData.status);\r\n  }\r\n\r\n  // Log de auditor\xEDa\r\n  await logAdminAction(session.user.id, 'CREATE', 'tracking_event', trackingEvent.id, null, trackingEvent);\r\n\r\n  const response: TrackingResponse = {\r\n    data: trackingEvent,\r\n    success: true,\r\n    message: 'Evento de tracking creado exitosamente'\r\n  };\r\n\r\n  return NextResponse.json(response, { status: 201 });\r\n}\r\n\r\nasync function handleBulkUpdate(request: NextRequest, body: any) {\r\n  const session = await auth();\r\n  const validatedData = BulkTrackingUpdateSchema.parse(body);\r\n  const supabase = createClient();\r\n\r\n  const results = [];\r\n  const errors = [];\r\n\r\n  // Procesar eventos en lotes para mejor performance\r\n  for (const eventData of validatedData.events) {\r\n    try {\r\n      // Verificar que el env\xEDo existe\r\n      const { data: shipment } = await supabase\r\n        .from('shipments')\r\n        .select('id, status')\r\n        .eq('id', eventData.shipment_id)\r\n        .single();\r\n\r\n      if (!shipment) {\r\n        errors.push({\r\n          shipment_id: eventData.shipment_id,\r\n          error: 'Env\xEDo no encontrado'\r\n        });\r\n        continue;\r\n      }\r\n\r\n      // Crear evento\r\n      const { data: trackingEvent, error } = await supabase\r\n        .from('tracking_events')\r\n        .insert(eventData)\r\n        .select()\r\n        .single();\r\n\r\n      if (error) {\r\n        errors.push({\r\n          shipment_id: eventData.shipment_id,\r\n          error: error.message\r\n        });\r\n        continue;\r\n      }\r\n\r\n      // Actualizar estado del env\xEDo si es necesario\r\n      if (eventData.status !== shipment.status) {\r\n        await updateShipmentStatus(supabase, eventData.shipment_id, eventData.status);\r\n      }\r\n\r\n      results.push(trackingEvent);\r\n\r\n      // Log de auditor\xEDa\r\n      await logAdminAction(session.user.id, 'CREATE', 'tracking_event', trackingEvent.id, null, trackingEvent);\r\n\r\n    } catch (error) {\r\n      errors.push({\r\n        shipment_id: eventData.shipment_id,\r\n        error: error instanceof Error ? error.message : 'Error desconocido'\r\n      });\r\n    }\r\n  }\r\n\r\n  return NextResponse.json({\r\n    success: true,\r\n    message: `Procesados ${results.length} eventos exitosamente`,\r\n    data: {\r\n      created: results,\r\n      errors: errors,\r\n      summary: {\r\n        total: validatedData.events.length,\r\n        successful: results.length,\r\n        failed: errors.length\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nasync function putHandler(request: NextRequest) {\r\n  // Validar autenticaci\xF3n\r\n  const authError = await validateAdminAuth(request);\r\n  if (authError) {return authError;}\r\n\r\n  const session = await auth();\r\n  const { searchParams } = new URL(request.url);\r\n  const eventId = searchParams.get('id');\r\n\r\n  if (!eventId) {\r\n    throw new ValidationError('ID del evento de tracking es requerido');\r\n  }\r\n\r\n  const body = await request.json();\r\n  const validatedData = TrackingEventUpdateSchema.parse(body);\r\n\r\n  const supabase = createClient();\r\n\r\n  // Verificar que el evento existe\r\n  const { data: existingEvent, error: fetchError } = await supabase\r\n    .from('tracking_events')\r\n    .select('*')\r\n    .eq('id', eventId)\r\n    .single();\r\n\r\n  if (fetchError || !existingEvent) {\r\n    throw new NotFoundError('Evento de tracking no encontrado');\r\n  }\r\n\r\n  // Actualizar evento\r\n  const { data: trackingEvent, error } = await supabase\r\n    .from('tracking_events')\r\n    .update({\r\n      ...validatedData,\r\n      updated_at: new Date().toISOString()\r\n    })\r\n    .eq('id', eventId)\r\n    .select()\r\n    .single();\r\n\r\n  if (error) {\r\n    throw new ApiError('Error al actualizar evento de tracking', 500, 'DATABASE_ERROR', error);\r\n  }\r\n\r\n  // Si se cambi\xF3 el estado, actualizar el env\xEDo\r\n  if (validatedData.status && validatedData.status !== existingEvent.status) {\r\n    await updateShipmentStatus(supabase, existingEvent.shipment_id, validatedData.status);\r\n  }\r\n\r\n  // Log de auditor\xEDa\r\n  await logAdminAction(session.user.id, 'UPDATE', 'tracking_event', trackingEvent.id, existingEvent, trackingEvent);\r\n\r\n  const response: TrackingResponse = {\r\n    data: trackingEvent,\r\n    success: true,\r\n    message: 'Evento de tracking actualizado exitosamente'\r\n  };\r\n\r\n  return NextResponse.json(response);\r\n}\r\n\r\nasync function deleteHandler(request: NextRequest) {\r\n  // Validar autenticaci\xF3n\r\n  const authError = await validateAdminAuth(request);\r\n  if (authError) {return authError;}\r\n\r\n  const session = await auth();\r\n  const { searchParams } = new URL(request.url);\r\n  const eventId = searchParams.get('id');\r\n\r\n  if (!eventId) {\r\n    throw new ValidationError('ID del evento de tracking es requerido');\r\n  }\r\n\r\n  const supabase = createClient();\r\n\r\n  // Verificar que el evento existe\r\n  const { data: existingEvent, error: fetchError } = await supabase\r\n    .from('tracking_events')\r\n    .select('*')\r\n    .eq('id', eventId)\r\n    .single();\r\n\r\n  if (fetchError || !existingEvent) {\r\n    throw new NotFoundError('Evento de tracking no encontrado');\r\n  }\r\n\r\n  // Verificar que no es el \xFAltimo evento del env\xEDo\r\n  const { data: eventCount, error: countError } = await supabase\r\n    .from('tracking_events')\r\n    .select('id', { count: 'exact' })\r\n    .eq('shipment_id', existingEvent.shipment_id);\r\n\r\n  if (countError) {\r\n    throw new ApiError('Error al verificar eventos del env\xEDo', 500, 'DATABASE_ERROR', countError);\r\n  }\r\n\r\n  if (eventCount && eventCount.length <= 1) {\r\n    throw new ValidationError('No se puede eliminar el \xFAnico evento de tracking del env\xEDo');\r\n  }\r\n\r\n  // Eliminar evento\r\n  const { error } = await supabase\r\n    .from('tracking_events')\r\n    .delete()\r\n    .eq('id', eventId);\r\n\r\n  if (error) {\r\n    throw new ApiError('Error al eliminar evento de tracking', 500, 'DATABASE_ERROR', error);\r\n  }\r\n\r\n  // Obtener el \xFAltimo evento restante para actualizar el estado del env\xEDo\r\n  const { data: lastEvent } = await supabase\r\n    .from('tracking_events')\r\n    .select('status')\r\n    .eq('shipment_id', existingEvent.shipment_id)\r\n    .order('event_date', { ascending: false })\r\n    .limit(1)\r\n    .single();\r\n\r\n  if (lastEvent) {\r\n    await updateShipmentStatus(supabase, existingEvent.shipment_id, lastEvent.status);\r\n  }\r\n\r\n  // Log de auditor\xEDa\r\n  await logAdminAction(session.user.id, 'DELETE', 'tracking_event', eventId, existingEvent, null);\r\n\r\n  return NextResponse.json({\r\n    success: true,\r\n    message: 'Evento de tracking eliminado exitosamente'\r\n  });\r\n}\r\n\r\n// =====================================================\r\n// EXPORTS CON MIDDLEWARES\r\n// =====================================================\r\n\r\nexport const GET = composeMiddlewares(\r\n  withErrorHandler,\r\n  withApiLogging\r\n)(getHandler);\r\n\r\nexport const POST = composeMiddlewares(\r\n  withErrorHandler,\r\n  withApiLogging\r\n)(postHandler);\r\n\r\nexport const PUT = composeMiddlewares(\r\n  withErrorHandler,\r\n  withApiLogging\r\n)(putHandler);\r\n\r\nexport const DELETE = composeMiddlewares(\r\n  withErrorHandler,\r\n  withApiLogging\r\n)(deleteHandler);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["DELETE", "GET", "POST", "PUT", "runtime", "TrackingFiltersSchema", "z", "object", "page", "coerce", "number", "int", "min", "default", "limit", "max", "shipment_id", "positive", "optional", "tracking_number", "string", "event_type", "nativeEnum", "TrackingEventType", "status", "ShipmentStatus", "date_from", "datetime", "date_to", "location", "carrier_id", "sort_by", "enum", "sort_order", "TrackingEventCreateSchema", "errorMap", "message", "event_date", "description", "carrier_reference", "estimated_delivery", "metadata", "record", "any", "TrackingEventUpdateSchema", "partial", "omit", "BulkTrackingUpdateSchema", "events", "array", "validateAdminAuth", "request", "session", "auth", "user", "NextResponse", "json", "error", "code", "rateLimitResult", "checkRateLimit", "windowMs", "maxRequests", "keyGenerator", "req", "id", "method", "success", "retryAfter", "updateShipmentStatus", "supabase", "shipmentId", "newStatus", "from", "update", "updated_at", "Date", "toISOString", "PICKED_UP", "picked_up_at", "DELIVERED", "delivered_at", "CANCELLED", "cancelled_at", "eq", "ApiError", "getHandler", "authError", "searchParams", "URL", "url", "filters", "parse", "parseInt", "get", "undefined", "createClient", "query", "select", "count", "gte", "lte", "ilike", "to", "data", "trackingEvents", "order", "ascending", "range", "response", "pagination", "total", "pages", "Math", "ceil", "postHandler", "body", "Array", "isArray", "handleBulkUpdate", "validatedData", "shipment", "shipmentError", "single", "NotFoundError", "trackingEvent", "insert", "logAdminAction", "results", "errors", "eventData", "push", "Error", "length", "created", "summary", "successful", "failed", "putHandler", "eventId", "ValidationError", "existingEvent", "fetchError", "deleteHandler", "eventCount", "countError", "delete", "lastEvent", "composeMiddlewares", "withErrorHandler", "withApiLogging"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e151cfe3efc874c7918c7d9a4de3b0315d9c0fa2"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_20jmaugfkd = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_20jmaugfkd();
cov_20jmaugfkd().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_20jmaugfkd().f[0]++;
  cov_20jmaugfkd().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_20jmaugfkd().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_20jmaugfkd().s[3]++;
_export(exports, {
  get DELETE() {
    /* istanbul ignore next */
    cov_20jmaugfkd().f[1]++;
    cov_20jmaugfkd().s[4]++;
    return DELETE;
  },
  get GET() {
    /* istanbul ignore next */
    cov_20jmaugfkd().f[2]++;
    cov_20jmaugfkd().s[5]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_20jmaugfkd().f[3]++;
    cov_20jmaugfkd().s[6]++;
    return POST;
  },
  get PUT() {
    /* istanbul ignore next */
    cov_20jmaugfkd().f[4]++;
    cov_20jmaugfkd().s[7]++;
    return PUT;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_20jmaugfkd().f[5]++;
    cov_20jmaugfkd().s[8]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_20jmaugfkd().s[9]++, require("next/server"));
const _zod =
/* istanbul ignore next */
(cov_20jmaugfkd().s[10]++, require("zod"));
const _middlewarecomposer =
/* istanbul ignore next */
(cov_20jmaugfkd().s[11]++, require("../../../../../lib/api/middleware-composer"));
const _errorhandler =
/* istanbul ignore next */
(cov_20jmaugfkd().s[12]++, require("../../../../../lib/api/error-handler"));
const _apilogger =
/* istanbul ignore next */
(cov_20jmaugfkd().s[13]++, require("../../../../../lib/api/api-logger"));
const _server1 =
/* istanbul ignore next */
(cov_20jmaugfkd().s[14]++, require("../../../../../lib/integrations/supabase/server"));
const _config =
/* istanbul ignore next */
(cov_20jmaugfkd().s[15]++, require("../../../../../lib/auth/config"));
const _ratelimiting =
/* istanbul ignore next */
(cov_20jmaugfkd().s[16]++, require("../../../../../lib/auth/rate-limiting"));
const _logistics =
/* istanbul ignore next */
(cov_20jmaugfkd().s[17]++, require("../../../../../types/logistics"));
const runtime =
/* istanbul ignore next */
(cov_20jmaugfkd().s[18]++, 'nodejs');
// =====================================================
// VALIDATION SCHEMAS
// =====================================================
const TrackingFiltersSchema =
/* istanbul ignore next */
(cov_20jmaugfkd().s[19]++, _zod.z.object({
  page: _zod.z.coerce.number().int().min(1).default(1),
  limit: _zod.z.coerce.number().int().min(1).max(100).default(20),
  shipment_id: _zod.z.number().int().positive().optional(),
  tracking_number: _zod.z.string().optional(),
  event_type: _zod.z.nativeEnum(_logistics.TrackingEventType).optional(),
  status: _zod.z.nativeEnum(_logistics.ShipmentStatus).optional(),
  date_from: _zod.z.string().datetime().optional(),
  date_to: _zod.z.string().datetime().optional(),
  location: _zod.z.string().optional(),
  carrier_id: _zod.z.number().int().positive().optional(),
  sort_by: _zod.z.enum(['created_at', 'event_date', 'shipment_id']).default('created_at'),
  sort_order: _zod.z.enum(['asc', 'desc']).default('desc')
}));
const TrackingEventCreateSchema =
/* istanbul ignore next */
(cov_20jmaugfkd().s[20]++, _zod.z.object({
  shipment_id: _zod.z.number().int().positive('ID de envÃ­o es requerido'),
  event_type: _zod.z.nativeEnum(_logistics.TrackingEventType, {
    errorMap: () => {
      /* istanbul ignore next */
      cov_20jmaugfkd().f[6]++;
      cov_20jmaugfkd().s[21]++;
      return {
        message: 'Tipo de evento invÃ¡lido'
      };
    }
  }),
  status: _zod.z.nativeEnum(_logistics.ShipmentStatus, {
    errorMap: () => {
      /* istanbul ignore next */
      cov_20jmaugfkd().f[7]++;
      cov_20jmaugfkd().s[22]++;
      return {
        message: 'Estado de envÃ­o invÃ¡lido'
      };
    }
  }),
  event_date: _zod.z.string().datetime('Fecha del evento debe ser vÃ¡lida'),
  location: _zod.z.string().min(1, 'UbicaciÃ³n es requerida').max(255),
  description: _zod.z.string().max(500, 'DescripciÃ³n muy larga').optional(),
  carrier_reference: _zod.z.string().max(100).optional(),
  estimated_delivery: _zod.z.string().datetime().optional(),
  metadata: _zod.z.record(_zod.z.any()).optional()
}));
const TrackingEventUpdateSchema =
/* istanbul ignore next */
(cov_20jmaugfkd().s[23]++, TrackingEventCreateSchema.partial().omit({
  shipment_id: true
}));
const BulkTrackingUpdateSchema =
/* istanbul ignore next */
(cov_20jmaugfkd().s[24]++, _zod.z.object({
  events: _zod.z.array(TrackingEventCreateSchema).min(1, 'Debe incluir al menos un evento').max(50, 'MÃ¡ximo 50 eventos por lote')
}));
// =====================================================
// HELPER FUNCTIONS
// =====================================================
async function validateAdminAuth(request) {
  /* istanbul ignore next */
  cov_20jmaugfkd().f[8]++;
  const session =
  /* istanbul ignore next */
  (cov_20jmaugfkd().s[25]++, await (0, _config.auth)());
  /* istanbul ignore next */
  cov_20jmaugfkd().s[26]++;
  if (!session?.user) {
    /* istanbul ignore next */
    cov_20jmaugfkd().b[0][0]++;
    cov_20jmaugfkd().s[27]++;
    return _server.NextResponse.json({
      error: 'No autorizado',
      code: 'UNAUTHORIZED'
    }, {
      status: 401
    });
  } else
  /* istanbul ignore next */
  {
    cov_20jmaugfkd().b[0][1]++;
  }
  // Verificar rate limiting
  const rateLimitResult =
  /* istanbul ignore next */
  (cov_20jmaugfkd().s[28]++, await (0, _ratelimiting.checkRateLimit)(request, {
    windowMs: 60 * 1000,
    maxRequests: 200,
    keyGenerator: req => {
      /* istanbul ignore next */
      cov_20jmaugfkd().f[9]++;
      cov_20jmaugfkd().s[29]++;
      return `admin_tracking_${session.user.id}_${req.method}`;
    }
  }));
  /* istanbul ignore next */
  cov_20jmaugfkd().s[30]++;
  if (!rateLimitResult.success) {
    /* istanbul ignore next */
    cov_20jmaugfkd().b[1][0]++;
    cov_20jmaugfkd().s[31]++;
    return _server.NextResponse.json({
      error: 'Demasiadas solicitudes',
      code: 'RATE_LIMIT_EXCEEDED',
      retryAfter: rateLimitResult.retryAfter
    }, {
      status: 429
    });
  } else
  /* istanbul ignore next */
  {
    cov_20jmaugfkd().b[1][1]++;
  }
  cov_20jmaugfkd().s[32]++;
  return null;
}
async function updateShipmentStatus(supabase, shipmentId, newStatus) {
  /* istanbul ignore next */
  cov_20jmaugfkd().f[10]++;
  // Actualizar estado del envÃ­o basado en el Ãºltimo evento
  const {
    error
  } =
  /* istanbul ignore next */
  (cov_20jmaugfkd().s[33]++, await supabase.from('shipments').update({
    status: newStatus,
    updated_at: new Date().toISOString(),
    // Actualizar fechas especÃ­ficas segÃºn el estado
    ...(
    /* istanbul ignore next */
    (cov_20jmaugfkd().b[2][0]++, newStatus === _logistics.ShipmentStatus.PICKED_UP) &&
    /* istanbul ignore next */
    (cov_20jmaugfkd().b[2][1]++, {
      picked_up_at: new Date().toISOString()
    })),
    ...(
    /* istanbul ignore next */
    (cov_20jmaugfkd().b[3][0]++, newStatus === _logistics.ShipmentStatus.DELIVERED) &&
    /* istanbul ignore next */
    (cov_20jmaugfkd().b[3][1]++, {
      delivered_at: new Date().toISOString()
    })),
    ...(
    /* istanbul ignore next */
    (cov_20jmaugfkd().b[4][0]++, newStatus === _logistics.ShipmentStatus.CANCELLED) &&
    /* istanbul ignore next */
    (cov_20jmaugfkd().b[4][1]++, {
      cancelled_at: new Date().toISOString()
    }))
  }).eq('id', shipmentId));
  /* istanbul ignore next */
  cov_20jmaugfkd().s[34]++;
  if (error) {
    /* istanbul ignore next */
    cov_20jmaugfkd().b[5][0]++;
    cov_20jmaugfkd().s[35]++;
    throw new _errorhandler.ApiError('Error al actualizar estado del envÃ­o', 500, 'DATABASE_ERROR', error);
  } else
  /* istanbul ignore next */
  {
    cov_20jmaugfkd().b[5][1]++;
  }
}
// =====================================================
// HANDLERS
// =====================================================
async function getHandler(request) {
  /* istanbul ignore next */
  cov_20jmaugfkd().f[11]++;
  // Validar autenticaciÃ³n
  const authError =
  /* istanbul ignore next */
  (cov_20jmaugfkd().s[36]++, await validateAdminAuth(request));
  /* istanbul ignore next */
  cov_20jmaugfkd().s[37]++;
  if (authError) {
    /* istanbul ignore next */
    cov_20jmaugfkd().b[6][0]++;
    cov_20jmaugfkd().s[38]++;
    return authError;
  } else
  /* istanbul ignore next */
  {
    cov_20jmaugfkd().b[6][1]++;
  }
  const {
    searchParams
  } =
  /* istanbul ignore next */
  (cov_20jmaugfkd().s[39]++, new URL(request.url));
  const filters =
  /* istanbul ignore next */
  (cov_20jmaugfkd().s[40]++, TrackingFiltersSchema.parse({
    page: parseInt(
    /* istanbul ignore next */
    (cov_20jmaugfkd().b[7][0]++, searchParams.get('page')) ||
    /* istanbul ignore next */
    (cov_20jmaugfkd().b[7][1]++, '1')),
    limit: parseInt(
    /* istanbul ignore next */
    (cov_20jmaugfkd().b[8][0]++, searchParams.get('limit')) ||
    /* istanbul ignore next */
    (cov_20jmaugfkd().b[8][1]++, '20')),
    shipment_id: searchParams.get('shipment_id') ?
    /* istanbul ignore next */
    (cov_20jmaugfkd().b[9][0]++, parseInt(searchParams.get('shipment_id'))) :
    /* istanbul ignore next */
    (cov_20jmaugfkd().b[9][1]++, undefined),
    tracking_number:
    /* istanbul ignore next */
    (cov_20jmaugfkd().b[10][0]++, searchParams.get('tracking_number')) ||
    /* istanbul ignore next */
    (cov_20jmaugfkd().b[10][1]++, undefined),
    event_type:
    /* istanbul ignore next */
    (cov_20jmaugfkd().b[11][0]++, searchParams.get('event_type')) ||
    /* istanbul ignore next */
    (cov_20jmaugfkd().b[11][1]++, undefined),
    status:
    /* istanbul ignore next */
    (cov_20jmaugfkd().b[12][0]++, searchParams.get('status')) ||
    /* istanbul ignore next */
    (cov_20jmaugfkd().b[12][1]++, undefined),
    date_from:
    /* istanbul ignore next */
    (cov_20jmaugfkd().b[13][0]++, searchParams.get('date_from')) ||
    /* istanbul ignore next */
    (cov_20jmaugfkd().b[13][1]++, undefined),
    date_to:
    /* istanbul ignore next */
    (cov_20jmaugfkd().b[14][0]++, searchParams.get('date_to')) ||
    /* istanbul ignore next */
    (cov_20jmaugfkd().b[14][1]++, undefined),
    location:
    /* istanbul ignore next */
    (cov_20jmaugfkd().b[15][0]++, searchParams.get('location')) ||
    /* istanbul ignore next */
    (cov_20jmaugfkd().b[15][1]++, undefined),
    carrier_id: searchParams.get('carrier_id') ?
    /* istanbul ignore next */
    (cov_20jmaugfkd().b[16][0]++, parseInt(searchParams.get('carrier_id'))) :
    /* istanbul ignore next */
    (cov_20jmaugfkd().b[16][1]++, undefined),
    sort_by:
    /* istanbul ignore next */
    (cov_20jmaugfkd().b[17][0]++, searchParams.get('sort_by')) ||
    /* istanbul ignore next */
    (cov_20jmaugfkd().b[17][1]++, 'created_at'),
    sort_order:
    /* istanbul ignore next */
    (cov_20jmaugfkd().b[18][0]++, searchParams.get('sort_order')) ||
    /* istanbul ignore next */
    (cov_20jmaugfkd().b[18][1]++, 'desc')
  }));
  const supabase =
  /* istanbul ignore next */
  (cov_20jmaugfkd().s[41]++, (0, _server1.createClient)());
  // Construir query con joins optimizados
  let query =
  /* istanbul ignore next */
  (cov_20jmaugfkd().s[42]++, supabase.from('tracking_events').select(`
      *,
      shipments!tracking_events_shipment_id_fkey (
        id,
        shipment_number,
        tracking_number,
        status,
        carrier_id,
        couriers (
          id,
          name,
          code
        )
      )
    `, {
    count: 'exact'
  }));
  // Aplicar filtros
  /* istanbul ignore next */
  cov_20jmaugfkd().s[43]++;
  if (filters.shipment_id) {
    /* istanbul ignore next */
    cov_20jmaugfkd().b[19][0]++;
    cov_20jmaugfkd().s[44]++;
    query = query.eq('shipment_id', filters.shipment_id);
  } else
  /* istanbul ignore next */
  {
    cov_20jmaugfkd().b[19][1]++;
  }
  cov_20jmaugfkd().s[45]++;
  if (filters.tracking_number) {
    /* istanbul ignore next */
    cov_20jmaugfkd().b[20][0]++;
    cov_20jmaugfkd().s[46]++;
    query = query.eq('shipments.tracking_number', filters.tracking_number);
  } else
  /* istanbul ignore next */
  {
    cov_20jmaugfkd().b[20][1]++;
  }
  cov_20jmaugfkd().s[47]++;
  if (filters.event_type) {
    /* istanbul ignore next */
    cov_20jmaugfkd().b[21][0]++;
    cov_20jmaugfkd().s[48]++;
    query = query.eq('event_type', filters.event_type);
  } else
  /* istanbul ignore next */
  {
    cov_20jmaugfkd().b[21][1]++;
  }
  cov_20jmaugfkd().s[49]++;
  if (filters.status) {
    /* istanbul ignore next */
    cov_20jmaugfkd().b[22][0]++;
    cov_20jmaugfkd().s[50]++;
    query = query.eq('status', filters.status);
  } else
  /* istanbul ignore next */
  {
    cov_20jmaugfkd().b[22][1]++;
  }
  cov_20jmaugfkd().s[51]++;
  if (filters.date_from) {
    /* istanbul ignore next */
    cov_20jmaugfkd().b[23][0]++;
    cov_20jmaugfkd().s[52]++;
    query = query.gte('event_date', filters.date_from);
  } else
  /* istanbul ignore next */
  {
    cov_20jmaugfkd().b[23][1]++;
  }
  cov_20jmaugfkd().s[53]++;
  if (filters.date_to) {
    /* istanbul ignore next */
    cov_20jmaugfkd().b[24][0]++;
    cov_20jmaugfkd().s[54]++;
    query = query.lte('event_date', filters.date_to);
  } else
  /* istanbul ignore next */
  {
    cov_20jmaugfkd().b[24][1]++;
  }
  cov_20jmaugfkd().s[55]++;
  if (filters.location) {
    /* istanbul ignore next */
    cov_20jmaugfkd().b[25][0]++;
    cov_20jmaugfkd().s[56]++;
    query = query.ilike('location', `%${filters.location}%`);
  } else
  /* istanbul ignore next */
  {
    cov_20jmaugfkd().b[25][1]++;
  }
  cov_20jmaugfkd().s[57]++;
  if (filters.carrier_id) {
    /* istanbul ignore next */
    cov_20jmaugfkd().b[26][0]++;
    cov_20jmaugfkd().s[58]++;
    query = query.eq('shipments.carrier_id', filters.carrier_id);
  } else
  /* istanbul ignore next */
  {
    cov_20jmaugfkd().b[26][1]++;
  }
  // Aplicar ordenamiento y paginaciÃ³n
  const from =
  /* istanbul ignore next */
  (cov_20jmaugfkd().s[59]++, (filters.page - 1) * filters.limit);
  const to =
  /* istanbul ignore next */
  (cov_20jmaugfkd().s[60]++, from + filters.limit - 1);
  const {
    data: trackingEvents,
    error,
    count
  } =
  /* istanbul ignore next */
  (cov_20jmaugfkd().s[61]++, await query.order(filters.sort_by, {
    ascending: filters.sort_order === 'asc'
  }).range(from, to));
  /* istanbul ignore next */
  cov_20jmaugfkd().s[62]++;
  if (error) {
    /* istanbul ignore next */
    cov_20jmaugfkd().b[27][0]++;
    cov_20jmaugfkd().s[63]++;
    throw new _errorhandler.ApiError('Error al obtener eventos de tracking', 500, 'DATABASE_ERROR', error);
  } else
  /* istanbul ignore next */
  {
    cov_20jmaugfkd().b[27][1]++;
  }
  const response =
  /* istanbul ignore next */
  (cov_20jmaugfkd().s[64]++, {
    data:
    /* istanbul ignore next */
    (cov_20jmaugfkd().b[28][0]++, trackingEvents) ||
    /* istanbul ignore next */
    (cov_20jmaugfkd().b[28][1]++, []),
    pagination: {
      page: filters.page,
      limit: filters.limit,
      total:
      /* istanbul ignore next */
      (cov_20jmaugfkd().b[29][0]++, count) ||
      /* istanbul ignore next */
      (cov_20jmaugfkd().b[29][1]++, 0),
      pages: Math.ceil((
      /* istanbul ignore next */
      (cov_20jmaugfkd().b[30][0]++, count) ||
      /* istanbul ignore next */
      (cov_20jmaugfkd().b[30][1]++, 0)) / filters.limit)
    },
    filters: {
      shipment_id: filters.shipment_id,
      tracking_number: filters.tracking_number,
      event_type: filters.event_type,
      status: filters.status,
      date_from: filters.date_from,
      date_to: filters.date_to,
      location: filters.location,
      carrier_id: filters.carrier_id
    }
  });
  /* istanbul ignore next */
  cov_20jmaugfkd().s[65]++;
  return _server.NextResponse.json(response);
}
async function postHandler(request) {
  /* istanbul ignore next */
  cov_20jmaugfkd().f[12]++;
  // Validar autenticaciÃ³n
  const authError =
  /* istanbul ignore next */
  (cov_20jmaugfkd().s[66]++, await validateAdminAuth(request));
  /* istanbul ignore next */
  cov_20jmaugfkd().s[67]++;
  if (authError) {
    /* istanbul ignore next */
    cov_20jmaugfkd().b[31][0]++;
    cov_20jmaugfkd().s[68]++;
    return authError;
  } else
  /* istanbul ignore next */
  {
    cov_20jmaugfkd().b[31][1]++;
  }
  const session =
  /* istanbul ignore next */
  (cov_20jmaugfkd().s[69]++, await (0, _config.auth)());
  const body =
  /* istanbul ignore next */
  (cov_20jmaugfkd().s[70]++, await request.json());
  // Verificar si es una actualizaciÃ³n masiva o un evento individual
  /* istanbul ignore next */
  cov_20jmaugfkd().s[71]++;
  if (
  /* istanbul ignore next */
  (cov_20jmaugfkd().b[33][0]++, body.events) &&
  /* istanbul ignore next */
  (cov_20jmaugfkd().b[33][1]++, Array.isArray(body.events))) {
    /* istanbul ignore next */
    cov_20jmaugfkd().b[32][0]++;
    cov_20jmaugfkd().s[72]++;
    return handleBulkUpdate(request, body);
  } else
  /* istanbul ignore next */
  {
    cov_20jmaugfkd().b[32][1]++;
  }
  const validatedData =
  /* istanbul ignore next */
  (cov_20jmaugfkd().s[73]++, TrackingEventCreateSchema.parse(body));
  const supabase =
  /* istanbul ignore next */
  (cov_20jmaugfkd().s[74]++, (0, _server1.createClient)());
  // Verificar que el envÃ­o existe
  const {
    data: shipment,
    error: shipmentError
  } =
  /* istanbul ignore next */
  (cov_20jmaugfkd().s[75]++, await supabase.from('shipments').select('id, status, tracking_number').eq('id', validatedData.shipment_id).single());
  /* istanbul ignore next */
  cov_20jmaugfkd().s[76]++;
  if (
  /* istanbul ignore next */
  (cov_20jmaugfkd().b[35][0]++, shipmentError) ||
  /* istanbul ignore next */
  (cov_20jmaugfkd().b[35][1]++, !shipment)) {
    /* istanbul ignore next */
    cov_20jmaugfkd().b[34][0]++;
    cov_20jmaugfkd().s[77]++;
    throw new _errorhandler.NotFoundError('EnvÃ­o no encontrado');
  } else
  /* istanbul ignore next */
  {
    cov_20jmaugfkd().b[34][1]++;
  }
  // Crear evento de tracking
  const {
    data: trackingEvent,
    error
  } =
  /* istanbul ignore next */
  (cov_20jmaugfkd().s[78]++, await supabase.from('tracking_events').insert({
    shipment_id: validatedData.shipment_id,
    event_type: validatedData.event_type,
    status: validatedData.status,
    event_date: validatedData.event_date,
    location: validatedData.location,
    description: validatedData.description,
    carrier_reference: validatedData.carrier_reference,
    estimated_delivery: validatedData.estimated_delivery,
    metadata: validatedData.metadata
  }).select().single());
  /* istanbul ignore next */
  cov_20jmaugfkd().s[79]++;
  if (error) {
    /* istanbul ignore next */
    cov_20jmaugfkd().b[36][0]++;
    cov_20jmaugfkd().s[80]++;
    throw new _errorhandler.ApiError('Error al crear evento de tracking', 500, 'DATABASE_ERROR', error);
  } else
  /* istanbul ignore next */
  {
    cov_20jmaugfkd().b[36][1]++;
  }
  // Actualizar estado del envÃ­o si es necesario
  cov_20jmaugfkd().s[81]++;
  if (validatedData.status !== shipment.status) {
    /* istanbul ignore next */
    cov_20jmaugfkd().b[37][0]++;
    cov_20jmaugfkd().s[82]++;
    await updateShipmentStatus(supabase, validatedData.shipment_id, validatedData.status);
  } else
  /* istanbul ignore next */
  {
    cov_20jmaugfkd().b[37][1]++;
  }
  // Log de auditorÃ­a
  cov_20jmaugfkd().s[83]++;
  await (0, _apilogger.logAdminAction)(session.user.id, 'CREATE', 'tracking_event', trackingEvent.id, null, trackingEvent);
  const response =
  /* istanbul ignore next */
  (cov_20jmaugfkd().s[84]++, {
    data: trackingEvent,
    success: true,
    message: 'Evento de tracking creado exitosamente'
  });
  /* istanbul ignore next */
  cov_20jmaugfkd().s[85]++;
  return _server.NextResponse.json(response, {
    status: 201
  });
}
async function handleBulkUpdate(request, body) {
  /* istanbul ignore next */
  cov_20jmaugfkd().f[13]++;
  const session =
  /* istanbul ignore next */
  (cov_20jmaugfkd().s[86]++, await (0, _config.auth)());
  const validatedData =
  /* istanbul ignore next */
  (cov_20jmaugfkd().s[87]++, BulkTrackingUpdateSchema.parse(body));
  const supabase =
  /* istanbul ignore next */
  (cov_20jmaugfkd().s[88]++, (0, _server1.createClient)());
  const results =
  /* istanbul ignore next */
  (cov_20jmaugfkd().s[89]++, []);
  const errors =
  /* istanbul ignore next */
  (cov_20jmaugfkd().s[90]++, []);
  // Procesar eventos en lotes para mejor performance
  /* istanbul ignore next */
  cov_20jmaugfkd().s[91]++;
  for (const eventData of validatedData.events) {
    /* istanbul ignore next */
    cov_20jmaugfkd().s[92]++;
    try {
      // Verificar que el envÃ­o existe
      const {
        data: shipment
      } =
      /* istanbul ignore next */
      (cov_20jmaugfkd().s[93]++, await supabase.from('shipments').select('id, status').eq('id', eventData.shipment_id).single());
      /* istanbul ignore next */
      cov_20jmaugfkd().s[94]++;
      if (!shipment) {
        /* istanbul ignore next */
        cov_20jmaugfkd().b[38][0]++;
        cov_20jmaugfkd().s[95]++;
        errors.push({
          shipment_id: eventData.shipment_id,
          error: 'EnvÃ­o no encontrado'
        });
        /* istanbul ignore next */
        cov_20jmaugfkd().s[96]++;
        continue;
      } else
      /* istanbul ignore next */
      {
        cov_20jmaugfkd().b[38][1]++;
      }
      // Crear evento
      const {
        data: trackingEvent,
        error
      } =
      /* istanbul ignore next */
      (cov_20jmaugfkd().s[97]++, await supabase.from('tracking_events').insert(eventData).select().single());
      /* istanbul ignore next */
      cov_20jmaugfkd().s[98]++;
      if (error) {
        /* istanbul ignore next */
        cov_20jmaugfkd().b[39][0]++;
        cov_20jmaugfkd().s[99]++;
        errors.push({
          shipment_id: eventData.shipment_id,
          error: error.message
        });
        /* istanbul ignore next */
        cov_20jmaugfkd().s[100]++;
        continue;
      } else
      /* istanbul ignore next */
      {
        cov_20jmaugfkd().b[39][1]++;
      }
      // Actualizar estado del envÃ­o si es necesario
      cov_20jmaugfkd().s[101]++;
      if (eventData.status !== shipment.status) {
        /* istanbul ignore next */
        cov_20jmaugfkd().b[40][0]++;
        cov_20jmaugfkd().s[102]++;
        await updateShipmentStatus(supabase, eventData.shipment_id, eventData.status);
      } else
      /* istanbul ignore next */
      {
        cov_20jmaugfkd().b[40][1]++;
      }
      cov_20jmaugfkd().s[103]++;
      results.push(trackingEvent);
      // Log de auditorÃ­a
      /* istanbul ignore next */
      cov_20jmaugfkd().s[104]++;
      await (0, _apilogger.logAdminAction)(session.user.id, 'CREATE', 'tracking_event', trackingEvent.id, null, trackingEvent);
    } catch (error) {
      /* istanbul ignore next */
      cov_20jmaugfkd().s[105]++;
      errors.push({
        shipment_id: eventData.shipment_id,
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_20jmaugfkd().b[41][0]++, error.message) :
        /* istanbul ignore next */
        (cov_20jmaugfkd().b[41][1]++, 'Error desconocido')
      });
    }
  }
  /* istanbul ignore next */
  cov_20jmaugfkd().s[106]++;
  return _server.NextResponse.json({
    success: true,
    message: `Procesados ${results.length} eventos exitosamente`,
    data: {
      created: results,
      errors: errors,
      summary: {
        total: validatedData.events.length,
        successful: results.length,
        failed: errors.length
      }
    }
  });
}
async function putHandler(request) {
  /* istanbul ignore next */
  cov_20jmaugfkd().f[14]++;
  // Validar autenticaciÃ³n
  const authError =
  /* istanbul ignore next */
  (cov_20jmaugfkd().s[107]++, await validateAdminAuth(request));
  /* istanbul ignore next */
  cov_20jmaugfkd().s[108]++;
  if (authError) {
    /* istanbul ignore next */
    cov_20jmaugfkd().b[42][0]++;
    cov_20jmaugfkd().s[109]++;
    return authError;
  } else
  /* istanbul ignore next */
  {
    cov_20jmaugfkd().b[42][1]++;
  }
  const session =
  /* istanbul ignore next */
  (cov_20jmaugfkd().s[110]++, await (0, _config.auth)());
  const {
    searchParams
  } =
  /* istanbul ignore next */
  (cov_20jmaugfkd().s[111]++, new URL(request.url));
  const eventId =
  /* istanbul ignore next */
  (cov_20jmaugfkd().s[112]++, searchParams.get('id'));
  /* istanbul ignore next */
  cov_20jmaugfkd().s[113]++;
  if (!eventId) {
    /* istanbul ignore next */
    cov_20jmaugfkd().b[43][0]++;
    cov_20jmaugfkd().s[114]++;
    throw new _errorhandler.ValidationError('ID del evento de tracking es requerido');
  } else
  /* istanbul ignore next */
  {
    cov_20jmaugfkd().b[43][1]++;
  }
  const body =
  /* istanbul ignore next */
  (cov_20jmaugfkd().s[115]++, await request.json());
  const validatedData =
  /* istanbul ignore next */
  (cov_20jmaugfkd().s[116]++, TrackingEventUpdateSchema.parse(body));
  const supabase =
  /* istanbul ignore next */
  (cov_20jmaugfkd().s[117]++, (0, _server1.createClient)());
  // Verificar que el evento existe
  const {
    data: existingEvent,
    error: fetchError
  } =
  /* istanbul ignore next */
  (cov_20jmaugfkd().s[118]++, await supabase.from('tracking_events').select('*').eq('id', eventId).single());
  /* istanbul ignore next */
  cov_20jmaugfkd().s[119]++;
  if (
  /* istanbul ignore next */
  (cov_20jmaugfkd().b[45][0]++, fetchError) ||
  /* istanbul ignore next */
  (cov_20jmaugfkd().b[45][1]++, !existingEvent)) {
    /* istanbul ignore next */
    cov_20jmaugfkd().b[44][0]++;
    cov_20jmaugfkd().s[120]++;
    throw new _errorhandler.NotFoundError('Evento de tracking no encontrado');
  } else
  /* istanbul ignore next */
  {
    cov_20jmaugfkd().b[44][1]++;
  }
  // Actualizar evento
  const {
    data: trackingEvent,
    error
  } =
  /* istanbul ignore next */
  (cov_20jmaugfkd().s[121]++, await supabase.from('tracking_events').update({
    ...validatedData,
    updated_at: new Date().toISOString()
  }).eq('id', eventId).select().single());
  /* istanbul ignore next */
  cov_20jmaugfkd().s[122]++;
  if (error) {
    /* istanbul ignore next */
    cov_20jmaugfkd().b[46][0]++;
    cov_20jmaugfkd().s[123]++;
    throw new _errorhandler.ApiError('Error al actualizar evento de tracking', 500, 'DATABASE_ERROR', error);
  } else
  /* istanbul ignore next */
  {
    cov_20jmaugfkd().b[46][1]++;
  }
  // Si se cambiÃ³ el estado, actualizar el envÃ­o
  cov_20jmaugfkd().s[124]++;
  if (
  /* istanbul ignore next */
  (cov_20jmaugfkd().b[48][0]++, validatedData.status) &&
  /* istanbul ignore next */
  (cov_20jmaugfkd().b[48][1]++, validatedData.status !== existingEvent.status)) {
    /* istanbul ignore next */
    cov_20jmaugfkd().b[47][0]++;
    cov_20jmaugfkd().s[125]++;
    await updateShipmentStatus(supabase, existingEvent.shipment_id, validatedData.status);
  } else
  /* istanbul ignore next */
  {
    cov_20jmaugfkd().b[47][1]++;
  }
  // Log de auditorÃ­a
  cov_20jmaugfkd().s[126]++;
  await (0, _apilogger.logAdminAction)(session.user.id, 'UPDATE', 'tracking_event', trackingEvent.id, existingEvent, trackingEvent);
  const response =
  /* istanbul ignore next */
  (cov_20jmaugfkd().s[127]++, {
    data: trackingEvent,
    success: true,
    message: 'Evento de tracking actualizado exitosamente'
  });
  /* istanbul ignore next */
  cov_20jmaugfkd().s[128]++;
  return _server.NextResponse.json(response);
}
async function deleteHandler(request) {
  /* istanbul ignore next */
  cov_20jmaugfkd().f[15]++;
  // Validar autenticaciÃ³n
  const authError =
  /* istanbul ignore next */
  (cov_20jmaugfkd().s[129]++, await validateAdminAuth(request));
  /* istanbul ignore next */
  cov_20jmaugfkd().s[130]++;
  if (authError) {
    /* istanbul ignore next */
    cov_20jmaugfkd().b[49][0]++;
    cov_20jmaugfkd().s[131]++;
    return authError;
  } else
  /* istanbul ignore next */
  {
    cov_20jmaugfkd().b[49][1]++;
  }
  const session =
  /* istanbul ignore next */
  (cov_20jmaugfkd().s[132]++, await (0, _config.auth)());
  const {
    searchParams
  } =
  /* istanbul ignore next */
  (cov_20jmaugfkd().s[133]++, new URL(request.url));
  const eventId =
  /* istanbul ignore next */
  (cov_20jmaugfkd().s[134]++, searchParams.get('id'));
  /* istanbul ignore next */
  cov_20jmaugfkd().s[135]++;
  if (!eventId) {
    /* istanbul ignore next */
    cov_20jmaugfkd().b[50][0]++;
    cov_20jmaugfkd().s[136]++;
    throw new _errorhandler.ValidationError('ID del evento de tracking es requerido');
  } else
  /* istanbul ignore next */
  {
    cov_20jmaugfkd().b[50][1]++;
  }
  const supabase =
  /* istanbul ignore next */
  (cov_20jmaugfkd().s[137]++, (0, _server1.createClient)());
  // Verificar que el evento existe
  const {
    data: existingEvent,
    error: fetchError
  } =
  /* istanbul ignore next */
  (cov_20jmaugfkd().s[138]++, await supabase.from('tracking_events').select('*').eq('id', eventId).single());
  /* istanbul ignore next */
  cov_20jmaugfkd().s[139]++;
  if (
  /* istanbul ignore next */
  (cov_20jmaugfkd().b[52][0]++, fetchError) ||
  /* istanbul ignore next */
  (cov_20jmaugfkd().b[52][1]++, !existingEvent)) {
    /* istanbul ignore next */
    cov_20jmaugfkd().b[51][0]++;
    cov_20jmaugfkd().s[140]++;
    throw new _errorhandler.NotFoundError('Evento de tracking no encontrado');
  } else
  /* istanbul ignore next */
  {
    cov_20jmaugfkd().b[51][1]++;
  }
  // Verificar que no es el Ãºltimo evento del envÃ­o
  const {
    data: eventCount,
    error: countError
  } =
  /* istanbul ignore next */
  (cov_20jmaugfkd().s[141]++, await supabase.from('tracking_events').select('id', {
    count: 'exact'
  }).eq('shipment_id', existingEvent.shipment_id));
  /* istanbul ignore next */
  cov_20jmaugfkd().s[142]++;
  if (countError) {
    /* istanbul ignore next */
    cov_20jmaugfkd().b[53][0]++;
    cov_20jmaugfkd().s[143]++;
    throw new _errorhandler.ApiError('Error al verificar eventos del envÃ­o', 500, 'DATABASE_ERROR', countError);
  } else
  /* istanbul ignore next */
  {
    cov_20jmaugfkd().b[53][1]++;
  }
  cov_20jmaugfkd().s[144]++;
  if (
  /* istanbul ignore next */
  (cov_20jmaugfkd().b[55][0]++, eventCount) &&
  /* istanbul ignore next */
  (cov_20jmaugfkd().b[55][1]++, eventCount.length <= 1)) {
    /* istanbul ignore next */
    cov_20jmaugfkd().b[54][0]++;
    cov_20jmaugfkd().s[145]++;
    throw new _errorhandler.ValidationError('No se puede eliminar el Ãºnico evento de tracking del envÃ­o');
  } else
  /* istanbul ignore next */
  {
    cov_20jmaugfkd().b[54][1]++;
  }
  // Eliminar evento
  const {
    error
  } =
  /* istanbul ignore next */
  (cov_20jmaugfkd().s[146]++, await supabase.from('tracking_events').delete().eq('id', eventId));
  /* istanbul ignore next */
  cov_20jmaugfkd().s[147]++;
  if (error) {
    /* istanbul ignore next */
    cov_20jmaugfkd().b[56][0]++;
    cov_20jmaugfkd().s[148]++;
    throw new _errorhandler.ApiError('Error al eliminar evento de tracking', 500, 'DATABASE_ERROR', error);
  } else
  /* istanbul ignore next */
  {
    cov_20jmaugfkd().b[56][1]++;
  }
  // Obtener el Ãºltimo evento restante para actualizar el estado del envÃ­o
  const {
    data: lastEvent
  } =
  /* istanbul ignore next */
  (cov_20jmaugfkd().s[149]++, await supabase.from('tracking_events').select('status').eq('shipment_id', existingEvent.shipment_id).order('event_date', {
    ascending: false
  }).limit(1).single());
  /* istanbul ignore next */
  cov_20jmaugfkd().s[150]++;
  if (lastEvent) {
    /* istanbul ignore next */
    cov_20jmaugfkd().b[57][0]++;
    cov_20jmaugfkd().s[151]++;
    await updateShipmentStatus(supabase, existingEvent.shipment_id, lastEvent.status);
  } else
  /* istanbul ignore next */
  {
    cov_20jmaugfkd().b[57][1]++;
  }
  // Log de auditorÃ­a
  cov_20jmaugfkd().s[152]++;
  await (0, _apilogger.logAdminAction)(session.user.id, 'DELETE', 'tracking_event', eventId, existingEvent, null);
  /* istanbul ignore next */
  cov_20jmaugfkd().s[153]++;
  return _server.NextResponse.json({
    success: true,
    message: 'Evento de tracking eliminado exitosamente'
  });
}
const GET =
/* istanbul ignore next */
(cov_20jmaugfkd().s[154]++, (0, _middlewarecomposer.composeMiddlewares)(_errorhandler.withErrorHandler, _apilogger.withApiLogging)(getHandler));
const POST =
/* istanbul ignore next */
(cov_20jmaugfkd().s[155]++, (0, _middlewarecomposer.composeMiddlewares)(_errorhandler.withErrorHandler, _apilogger.withApiLogging)(postHandler));
const PUT =
/* istanbul ignore next */
(cov_20jmaugfkd().s[156]++, (0, _middlewarecomposer.composeMiddlewares)(_errorhandler.withErrorHandler, _apilogger.withApiLogging)(putHandler));
const DELETE =
/* istanbul ignore next */
(cov_20jmaugfkd().s[157]++, (0, _middlewarecomposer.composeMiddlewares)(_errorhandler.withErrorHandler, _apilogger.withApiLogging)(deleteHandler));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,