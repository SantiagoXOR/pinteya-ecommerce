e2ade1dcddbb0a0e78f167b78b4f68b4
// ===================================
// PINTEYA E-COMMERCE - VALIDACIONES CON ZOD
// ===================================
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: Object.getOwnPropertyDescriptor(all, name).get
    });
}
_export(exports, {
    get AddressSchema () {
        return AddressSchema;
    },
    get CategoryFiltersSchema () {
        return CategoryFiltersSchema;
    },
    get CategorySchema () {
        return CategorySchema;
    },
    get ContactFormSchema () {
        return ContactFormSchema;
    },
    get CreateOrderSchema () {
        return CreateOrderSchema;
    },
    get CreatePreferenceSchema () {
        return CreatePreferenceSchema;
    },
    get IdParamSchema () {
        return IdParamSchema;
    },
    get MercadoPagoItemSchema () {
        return MercadoPagoItemSchema;
    },
    get MercadoPagoWebhookSchema () {
        return MercadoPagoWebhookSchema;
    },
    get NewsletterSchema () {
        return NewsletterSchema;
    },
    get OrderFiltersSchema () {
        return OrderFiltersSchema;
    },
    get OrderItemSchema () {
        return OrderItemSchema;
    },
    get ProductFiltersSchema () {
        return ProductFiltersSchema;
    },
    get ProductSchema () {
        return ProductSchema;
    },
    get SlugParamSchema () {
        return SlugParamSchema;
    },
    get UpdateUserProfileSchema () {
        return UpdateUserProfileSchema;
    },
    get UserSchema () {
        return UserSchema;
    },
    get safeValidateData () {
        return safeValidateData;
    },
    get validateData () {
        return validateData;
    }
});
const _zod = require("zod");
const _shop = require("../constants/shop");
const ProductSchema = _zod.z.object({
    name: _zod.z.string().min(1, 'El nombre es requerido').max(255, 'Nombre muy largo'),
    brand: _zod.z.string().min(1, 'La marca es requerida').max(100, 'Marca muy larga').optional(),
    slug: _zod.z.string().min(1, 'El slug es requerido').max(255, 'Slug muy largo'),
    description: _zod.z.string().optional(),
    price: _zod.z.number().positive('El precio debe ser positivo'),
    discounted_price: _zod.z.number().positive().optional(),
    stock: _zod.z.number().int().min(0, 'El stock no puede ser negativo').default(0),
    category_id: _zod.z.number().int().positive().optional(),
    images: _zod.z.object({
        previews: _zod.z.array(_zod.z.string().url()).optional(),
        main: _zod.z.string().url().optional()
    }).optional()
});
const ProductFiltersSchema = _zod.z.object({
    category: _zod.z.string().optional(),
    categories: _zod.z.array(_zod.z.string()).optional(),
    brand: _zod.z.string().optional(),
    brands: _zod.z.array(_zod.z.string()).optional(),
    paintType: _zod.z.string().optional(),
    paintTypes: _zod.z.array(_zod.z.string()).optional(),
    priceMin: _zod.z.number().positive().optional(),
    priceMax: _zod.z.number().positive().optional(),
    search: _zod.z.string().optional(),
    hasDiscount: _zod.z.boolean().optional(),
    page: _zod.z.number().int().positive().default(1),
    limit: _zod.z.number().int().positive().max(100).default(12),
    sortBy: _zod.z.enum([
        'price',
        'name',
        'created_at',
        'brand'
    ]).default('created_at'),
    sortOrder: _zod.z.enum([
        'asc',
        'desc'
    ]).default('desc')
});
const CategorySchema = _zod.z.object({
    name: _zod.z.string().min(1, 'El nombre es requerido').max(255, 'Nombre muy largo'),
    slug: _zod.z.string().min(1, 'El slug es requerido').max(255, 'Slug muy largo'),
    description: _zod.z.string().optional().nullable(),
    icon: _zod.z.string().optional().nullable()
});
const CategoryFiltersSchema = _zod.z.object({
    search: _zod.z.string().optional(),
    parentId: _zod.z.number().optional()
});
const UserSchema = _zod.z.object({
    clerk_id: _zod.z.string().min(1, 'ID de Clerk requerido'),
    email: _zod.z.string().email('Email inválido'),
    name: _zod.z.string().max(255, 'Nombre muy largo').optional()
});
const UpdateUserProfileSchema = _zod.z.object({
    name: _zod.z.string().max(255, 'Nombre muy largo').optional(),
    email: _zod.z.string().email('Email inválido').optional()
});
const OrderItemSchema = _zod.z.object({
    productId: _zod.z.number().int().positive('ID de producto inválido'),
    quantity: _zod.z.number().int().positive('La cantidad debe ser positiva'),
    price: _zod.z.number().positive('El precio debe ser positivo')
});
const CreateOrderSchema = _zod.z.object({
    items: _zod.z.array(OrderItemSchema).min(1, 'Debe incluir al menos un producto'),
    total: _zod.z.number().positive('El total debe ser positivo'),
    shippingAddress: _zod.z.object({
        street: _zod.z.string().min(1, 'La dirección es requerida'),
        city: _zod.z.string().min(1, 'La ciudad es requerida'),
        postalCode: _zod.z.string().min(1, 'El código postal es requerido'),
        country: _zod.z.string().min(1, 'El país es requerido')
    }).optional()
});
const OrderFiltersSchema = _zod.z.object({
    status: _zod.z.string().optional(),
    dateFrom: _zod.z.string().optional(),
    dateTo: _zod.z.string().optional(),
    page: _zod.z.number().int().positive().default(1),
    limit: _zod.z.number().int().positive().max(100).default(10)
});
const MercadoPagoItemSchema = _zod.z.object({
    title: _zod.z.string().min(1, 'El título es requerido'),
    quantity: _zod.z.number().int().positive('La cantidad debe ser positiva'),
    unit_price: _zod.z.number().positive('El precio debe ser positivo'),
    currency_id: _zod.z.string().default('ARS')
});
const CreatePreferenceSchema = _zod.z.object({
    items: _zod.z.array(MercadoPagoItemSchema).min(1, 'Debe incluir al menos un item'),
    external_reference: _zod.z.string().min(1, 'La referencia externa es requerida'),
    back_urls: _zod.z.object({
        success: _zod.z.string().url('URL de éxito inválida'),
        failure: _zod.z.string().url('URL de fallo inválida'),
        pending: _zod.z.string().url('URL de pendiente inválida')
    })
});
const MercadoPagoWebhookSchema = _zod.z.object({
    action: _zod.z.string(),
    api_version: _zod.z.string(),
    data: _zod.z.object({
        id: _zod.z.string()
    }),
    date_created: _zod.z.string(),
    id: _zod.z.number(),
    live_mode: _zod.z.boolean(),
    type: _zod.z.string(),
    user_id: _zod.z.string()
});
const ContactFormSchema = _zod.z.object({
    name: _zod.z.string().min(_shop.VALIDATION_CONSTANTS.MIN_NAME_LENGTH, 'El nombre es requerido').max(_shop.VALIDATION_CONSTANTS.MAX_NAME_LENGTH, 'Nombre muy largo'),
    email: _zod.z.string().email('Email inválido'),
    subject: _zod.z.string().min(1, 'El asunto es requerido').max(200, 'Asunto muy largo'),
    message: _zod.z.string().min(_shop.VALIDATION_CONSTANTS.MIN_MESSAGE_LENGTH, 'El mensaje debe tener al menos 10 caracteres').max(_shop.VALIDATION_CONSTANTS.MAX_MESSAGE_LENGTH, 'Mensaje muy largo')
});
const NewsletterSchema = _zod.z.object({
    email: _zod.z.string().email('Email inválido')
});
const AddressSchema = _zod.z.object({
    name: _zod.z.string().min(1, 'El nombre es requerido').max(100, 'Nombre muy largo'),
    street: _zod.z.string().min(1, 'La dirección es requerida').max(255, 'Dirección muy larga'),
    city: _zod.z.string().min(1, 'La ciudad es requerida').max(100, 'Ciudad muy larga'),
    postal_code: _zod.z.string().min(1, 'El código postal es requerido').max(20, 'Código postal muy largo'),
    is_default: _zod.z.boolean().default(false)
});
const IdParamSchema = _zod.z.object({
    id: _zod.z.string().transform((val)=>{
        const num = parseInt(val, 10);
        if (isNaN(num) || num <= 0) {
            throw new Error('ID inválido');
        }
        return num;
    })
});
const SlugParamSchema = _zod.z.object({
    slug: _zod.z.string().min(1, 'Slug requerido').max(255, 'Slug muy largo')
});
function validateData(schema, data) {
    try {
        return schema.parse(data);
    } catch (error) {
        if (error instanceof _zod.z.ZodError) {
            const messages = error.errors.map((err)=>`${err.path.join('.')}: ${err.message}`);
            throw new Error(`Errores de validación: ${messages.join(', ')}`);
        }
        throw error;
    }
}
function safeValidateData(schema, data) {
    try {
        const validatedData = schema.parse(data);
        return {
            success: true,
            data: validatedData
        };
    } catch (error) {
        if (error instanceof _zod.z.ZodError) {
            const messages = error.errors.map((err)=>`${err.path.join('.')}: ${err.message}`);
            return {
                success: false,
                error: `Errores de validación: ${messages.join(', ')}`
            };
        }
        return {
            success: false,
            error: 'Error de validación desconocido'
        };
    }
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbWFydGlcXERlc2t0b3BcXERFU0FSUk9MTE9TV1xcQk9JTEVSUExBVFRFIEUtQ09NTUVSQ0VcXHNyY1xcbGliXFx2YWxpZGF0aW9ucy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gUElOVEVZQSBFLUNPTU1FUkNFIC0gVkFMSURBQ0lPTkVTIENPTiBaT0Rcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbmltcG9ydCB7IHogfSBmcm9tICd6b2QnXG5pbXBvcnQgeyBWQUxJREFUSU9OX0NPTlNUQU5UUyB9IGZyb20gJ0AvY29uc3RhbnRzL3Nob3AnXG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBWQUxJREFDSU9ORVMgREUgUFJPRFVDVE9TXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuZXhwb3J0IGNvbnN0IFByb2R1Y3RTY2hlbWEgPSB6Lm9iamVjdCh7XG4gIG5hbWU6IHouc3RyaW5nKCkubWluKDEsICdFbCBub21icmUgZXMgcmVxdWVyaWRvJykubWF4KDI1NSwgJ05vbWJyZSBtdXkgbGFyZ28nKSxcbiAgYnJhbmQ6IHouc3RyaW5nKCkubWluKDEsICdMYSBtYXJjYSBlcyByZXF1ZXJpZGEnKS5tYXgoMTAwLCAnTWFyY2EgbXV5IGxhcmdhJykub3B0aW9uYWwoKSxcbiAgc2x1Zzogei5zdHJpbmcoKS5taW4oMSwgJ0VsIHNsdWcgZXMgcmVxdWVyaWRvJykubWF4KDI1NSwgJ1NsdWcgbXV5IGxhcmdvJyksXG4gIGRlc2NyaXB0aW9uOiB6LnN0cmluZygpLm9wdGlvbmFsKCksXG4gIHByaWNlOiB6Lm51bWJlcigpLnBvc2l0aXZlKCdFbCBwcmVjaW8gZGViZSBzZXIgcG9zaXRpdm8nKSxcbiAgZGlzY291bnRlZF9wcmljZTogei5udW1iZXIoKS5wb3NpdGl2ZSgpLm9wdGlvbmFsKCksXG4gIHN0b2NrOiB6Lm51bWJlcigpLmludCgpLm1pbigwLCAnRWwgc3RvY2sgbm8gcHVlZGUgc2VyIG5lZ2F0aXZvJykuZGVmYXVsdCgwKSxcbiAgY2F0ZWdvcnlfaWQ6IHoubnVtYmVyKCkuaW50KCkucG9zaXRpdmUoKS5vcHRpb25hbCgpLFxuICBpbWFnZXM6IHpcbiAgICAub2JqZWN0KHtcbiAgICAgIHByZXZpZXdzOiB6LmFycmF5KHouc3RyaW5nKCkudXJsKCkpLm9wdGlvbmFsKCksXG4gICAgICBtYWluOiB6LnN0cmluZygpLnVybCgpLm9wdGlvbmFsKCksXG4gICAgfSlcbiAgICAub3B0aW9uYWwoKSxcbn0pXG5cbmV4cG9ydCBjb25zdCBQcm9kdWN0RmlsdGVyc1NjaGVtYSA9IHoub2JqZWN0KHtcbiAgY2F0ZWdvcnk6IHouc3RyaW5nKCkub3B0aW9uYWwoKSxcbiAgY2F0ZWdvcmllczogei5hcnJheSh6LnN0cmluZygpKS5vcHRpb25hbCgpLFxuICBicmFuZDogei5zdHJpbmcoKS5vcHRpb25hbCgpLFxuICBicmFuZHM6IHouYXJyYXkoei5zdHJpbmcoKSkub3B0aW9uYWwoKSxcbiAgcGFpbnRUeXBlOiB6LnN0cmluZygpLm9wdGlvbmFsKCksXG4gIHBhaW50VHlwZXM6IHouYXJyYXkoei5zdHJpbmcoKSkub3B0aW9uYWwoKSxcbiAgcHJpY2VNaW46IHoubnVtYmVyKCkucG9zaXRpdmUoKS5vcHRpb25hbCgpLFxuICBwcmljZU1heDogei5udW1iZXIoKS5wb3NpdGl2ZSgpLm9wdGlvbmFsKCksXG4gIHNlYXJjaDogei5zdHJpbmcoKS5vcHRpb25hbCgpLFxuICBoYXNEaXNjb3VudDogei5ib29sZWFuKCkub3B0aW9uYWwoKSxcbiAgcGFnZTogei5udW1iZXIoKS5pbnQoKS5wb3NpdGl2ZSgpLmRlZmF1bHQoMSksXG4gIGxpbWl0OiB6Lm51bWJlcigpLmludCgpLnBvc2l0aXZlKCkubWF4KDEwMCkuZGVmYXVsdCgxMiksXG4gIHNvcnRCeTogei5lbnVtKFsncHJpY2UnLCAnbmFtZScsICdjcmVhdGVkX2F0JywgJ2JyYW5kJ10pLmRlZmF1bHQoJ2NyZWF0ZWRfYXQnKSxcbiAgc29ydE9yZGVyOiB6LmVudW0oWydhc2MnLCAnZGVzYyddKS5kZWZhdWx0KCdkZXNjJyksXG59KVxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gVkFMSURBQ0lPTkVTIERFIENBVEVHT1LDjUFTXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuZXhwb3J0IGNvbnN0IENhdGVnb3J5U2NoZW1hID0gei5vYmplY3Qoe1xuICBuYW1lOiB6LnN0cmluZygpLm1pbigxLCAnRWwgbm9tYnJlIGVzIHJlcXVlcmlkbycpLm1heCgyNTUsICdOb21icmUgbXV5IGxhcmdvJyksXG4gIHNsdWc6IHouc3RyaW5nKCkubWluKDEsICdFbCBzbHVnIGVzIHJlcXVlcmlkbycpLm1heCgyNTUsICdTbHVnIG11eSBsYXJnbycpLFxuICBkZXNjcmlwdGlvbjogei5zdHJpbmcoKS5vcHRpb25hbCgpLm51bGxhYmxlKCksXG4gIGljb246IHouc3RyaW5nKCkub3B0aW9uYWwoKS5udWxsYWJsZSgpLFxufSlcblxuZXhwb3J0IGNvbnN0IENhdGVnb3J5RmlsdGVyc1NjaGVtYSA9IHoub2JqZWN0KHtcbiAgc2VhcmNoOiB6LnN0cmluZygpLm9wdGlvbmFsKCksXG4gIHBhcmVudElkOiB6Lm51bWJlcigpLm9wdGlvbmFsKCksXG59KVxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gVkFMSURBQ0lPTkVTIERFIFVTVUFSSU9TXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuZXhwb3J0IGNvbnN0IFVzZXJTY2hlbWEgPSB6Lm9iamVjdCh7XG4gIGNsZXJrX2lkOiB6LnN0cmluZygpLm1pbigxLCAnSUQgZGUgQ2xlcmsgcmVxdWVyaWRvJyksXG4gIGVtYWlsOiB6LnN0cmluZygpLmVtYWlsKCdFbWFpbCBpbnbDoWxpZG8nKSxcbiAgbmFtZTogei5zdHJpbmcoKS5tYXgoMjU1LCAnTm9tYnJlIG11eSBsYXJnbycpLm9wdGlvbmFsKCksXG59KVxuXG5leHBvcnQgY29uc3QgVXBkYXRlVXNlclByb2ZpbGVTY2hlbWEgPSB6Lm9iamVjdCh7XG4gIG5hbWU6IHouc3RyaW5nKCkubWF4KDI1NSwgJ05vbWJyZSBtdXkgbGFyZ28nKS5vcHRpb25hbCgpLFxuICBlbWFpbDogei5zdHJpbmcoKS5lbWFpbCgnRW1haWwgaW52w6FsaWRvJykub3B0aW9uYWwoKSxcbn0pXG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBWQUxJREFDSU9ORVMgREUgw5NSREVORVNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5leHBvcnQgY29uc3QgT3JkZXJJdGVtU2NoZW1hID0gei5vYmplY3Qoe1xuICBwcm9kdWN0SWQ6IHoubnVtYmVyKCkuaW50KCkucG9zaXRpdmUoJ0lEIGRlIHByb2R1Y3RvIGludsOhbGlkbycpLFxuICBxdWFudGl0eTogei5udW1iZXIoKS5pbnQoKS5wb3NpdGl2ZSgnTGEgY2FudGlkYWQgZGViZSBzZXIgcG9zaXRpdmEnKSxcbiAgcHJpY2U6IHoubnVtYmVyKCkucG9zaXRpdmUoJ0VsIHByZWNpbyBkZWJlIHNlciBwb3NpdGl2bycpLFxufSlcblxuZXhwb3J0IGNvbnN0IENyZWF0ZU9yZGVyU2NoZW1hID0gei5vYmplY3Qoe1xuICBpdGVtczogei5hcnJheShPcmRlckl0ZW1TY2hlbWEpLm1pbigxLCAnRGViZSBpbmNsdWlyIGFsIG1lbm9zIHVuIHByb2R1Y3RvJyksXG4gIHRvdGFsOiB6Lm51bWJlcigpLnBvc2l0aXZlKCdFbCB0b3RhbCBkZWJlIHNlciBwb3NpdGl2bycpLFxuICBzaGlwcGluZ0FkZHJlc3M6IHpcbiAgICAub2JqZWN0KHtcbiAgICAgIHN0cmVldDogei5zdHJpbmcoKS5taW4oMSwgJ0xhIGRpcmVjY2nDs24gZXMgcmVxdWVyaWRhJyksXG4gICAgICBjaXR5OiB6LnN0cmluZygpLm1pbigxLCAnTGEgY2l1ZGFkIGVzIHJlcXVlcmlkYScpLFxuICAgICAgcG9zdGFsQ29kZTogei5zdHJpbmcoKS5taW4oMSwgJ0VsIGPDs2RpZ28gcG9zdGFsIGVzIHJlcXVlcmlkbycpLFxuICAgICAgY291bnRyeTogei5zdHJpbmcoKS5taW4oMSwgJ0VsIHBhw61zIGVzIHJlcXVlcmlkbycpLFxuICAgIH0pXG4gICAgLm9wdGlvbmFsKCksXG59KVxuXG5leHBvcnQgY29uc3QgT3JkZXJGaWx0ZXJzU2NoZW1hID0gei5vYmplY3Qoe1xuICBzdGF0dXM6IHouc3RyaW5nKCkub3B0aW9uYWwoKSxcbiAgZGF0ZUZyb206IHouc3RyaW5nKCkub3B0aW9uYWwoKSxcbiAgZGF0ZVRvOiB6LnN0cmluZygpLm9wdGlvbmFsKCksXG4gIHBhZ2U6IHoubnVtYmVyKCkuaW50KCkucG9zaXRpdmUoKS5kZWZhdWx0KDEpLFxuICBsaW1pdDogei5udW1iZXIoKS5pbnQoKS5wb3NpdGl2ZSgpLm1heCgxMDApLmRlZmF1bHQoMTApLFxufSlcblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIFZBTElEQUNJT05FUyBERSBQQUdPU1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbmV4cG9ydCBjb25zdCBNZXJjYWRvUGFnb0l0ZW1TY2hlbWEgPSB6Lm9iamVjdCh7XG4gIHRpdGxlOiB6LnN0cmluZygpLm1pbigxLCAnRWwgdMOtdHVsbyBlcyByZXF1ZXJpZG8nKSxcbiAgcXVhbnRpdHk6IHoubnVtYmVyKCkuaW50KCkucG9zaXRpdmUoJ0xhIGNhbnRpZGFkIGRlYmUgc2VyIHBvc2l0aXZhJyksXG4gIHVuaXRfcHJpY2U6IHoubnVtYmVyKCkucG9zaXRpdmUoJ0VsIHByZWNpbyBkZWJlIHNlciBwb3NpdGl2bycpLFxuICBjdXJyZW5jeV9pZDogei5zdHJpbmcoKS5kZWZhdWx0KCdBUlMnKSxcbn0pXG5cbmV4cG9ydCBjb25zdCBDcmVhdGVQcmVmZXJlbmNlU2NoZW1hID0gei5vYmplY3Qoe1xuICBpdGVtczogei5hcnJheShNZXJjYWRvUGFnb0l0ZW1TY2hlbWEpLm1pbigxLCAnRGViZSBpbmNsdWlyIGFsIG1lbm9zIHVuIGl0ZW0nKSxcbiAgZXh0ZXJuYWxfcmVmZXJlbmNlOiB6LnN0cmluZygpLm1pbigxLCAnTGEgcmVmZXJlbmNpYSBleHRlcm5hIGVzIHJlcXVlcmlkYScpLFxuICBiYWNrX3VybHM6IHoub2JqZWN0KHtcbiAgICBzdWNjZXNzOiB6LnN0cmluZygpLnVybCgnVVJMIGRlIMOpeGl0byBpbnbDoWxpZGEnKSxcbiAgICBmYWlsdXJlOiB6LnN0cmluZygpLnVybCgnVVJMIGRlIGZhbGxvIGludsOhbGlkYScpLFxuICAgIHBlbmRpbmc6IHouc3RyaW5nKCkudXJsKCdVUkwgZGUgcGVuZGllbnRlIGludsOhbGlkYScpLFxuICB9KSxcbn0pXG5cbmV4cG9ydCBjb25zdCBNZXJjYWRvUGFnb1dlYmhvb2tTY2hlbWEgPSB6Lm9iamVjdCh7XG4gIGFjdGlvbjogei5zdHJpbmcoKSxcbiAgYXBpX3ZlcnNpb246IHouc3RyaW5nKCksXG4gIGRhdGE6IHoub2JqZWN0KHtcbiAgICBpZDogei5zdHJpbmcoKSxcbiAgfSksXG4gIGRhdGVfY3JlYXRlZDogei5zdHJpbmcoKSxcbiAgaWQ6IHoubnVtYmVyKCksXG4gIGxpdmVfbW9kZTogei5ib29sZWFuKCksXG4gIHR5cGU6IHouc3RyaW5nKCksXG4gIHVzZXJfaWQ6IHouc3RyaW5nKCksXG59KVxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gVkFMSURBQ0lPTkVTIERFIEZPUk1VTEFSSU9TXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuZXhwb3J0IGNvbnN0IENvbnRhY3RGb3JtU2NoZW1hID0gei5vYmplY3Qoe1xuICBuYW1lOiB6XG4gICAgLnN0cmluZygpXG4gICAgLm1pbihWQUxJREFUSU9OX0NPTlNUQU5UUy5NSU5fTkFNRV9MRU5HVEgsICdFbCBub21icmUgZXMgcmVxdWVyaWRvJylcbiAgICAubWF4KFZBTElEQVRJT05fQ09OU1RBTlRTLk1BWF9OQU1FX0xFTkdUSCwgJ05vbWJyZSBtdXkgbGFyZ28nKSxcbiAgZW1haWw6IHouc3RyaW5nKCkuZW1haWwoJ0VtYWlsIGludsOhbGlkbycpLFxuICBzdWJqZWN0OiB6LnN0cmluZygpLm1pbigxLCAnRWwgYXN1bnRvIGVzIHJlcXVlcmlkbycpLm1heCgyMDAsICdBc3VudG8gbXV5IGxhcmdvJyksXG4gIG1lc3NhZ2U6IHpcbiAgICAuc3RyaW5nKClcbiAgICAubWluKFZBTElEQVRJT05fQ09OU1RBTlRTLk1JTl9NRVNTQUdFX0xFTkdUSCwgJ0VsIG1lbnNhamUgZGViZSB0ZW5lciBhbCBtZW5vcyAxMCBjYXJhY3RlcmVzJylcbiAgICAubWF4KFZBTElEQVRJT05fQ09OU1RBTlRTLk1BWF9NRVNTQUdFX0xFTkdUSCwgJ01lbnNhamUgbXV5IGxhcmdvJyksXG59KVxuXG5leHBvcnQgY29uc3QgTmV3c2xldHRlclNjaGVtYSA9IHoub2JqZWN0KHtcbiAgZW1haWw6IHouc3RyaW5nKCkuZW1haWwoJ0VtYWlsIGludsOhbGlkbycpLFxufSlcblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIFZBTElEQUNJT05FUyBERSBESVJFQ0NJT05FU1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbmV4cG9ydCBjb25zdCBBZGRyZXNzU2NoZW1hID0gei5vYmplY3Qoe1xuICBuYW1lOiB6LnN0cmluZygpLm1pbigxLCAnRWwgbm9tYnJlIGVzIHJlcXVlcmlkbycpLm1heCgxMDAsICdOb21icmUgbXV5IGxhcmdvJyksXG4gIHN0cmVldDogei5zdHJpbmcoKS5taW4oMSwgJ0xhIGRpcmVjY2nDs24gZXMgcmVxdWVyaWRhJykubWF4KDI1NSwgJ0RpcmVjY2nDs24gbXV5IGxhcmdhJyksXG4gIGNpdHk6IHouc3RyaW5nKCkubWluKDEsICdMYSBjaXVkYWQgZXMgcmVxdWVyaWRhJykubWF4KDEwMCwgJ0NpdWRhZCBtdXkgbGFyZ2EnKSxcbiAgcG9zdGFsX2NvZGU6IHpcbiAgICAuc3RyaW5nKClcbiAgICAubWluKDEsICdFbCBjw7NkaWdvIHBvc3RhbCBlcyByZXF1ZXJpZG8nKVxuICAgIC5tYXgoMjAsICdDw7NkaWdvIHBvc3RhbCBtdXkgbGFyZ28nKSxcbiAgaXNfZGVmYXVsdDogei5ib29sZWFuKCkuZGVmYXVsdChmYWxzZSksXG59KVxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gVkFMSURBQ0lPTkVTIERFIFBBUsOBTUVUUk9TIERFIFVSTFxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbmV4cG9ydCBjb25zdCBJZFBhcmFtU2NoZW1hID0gei5vYmplY3Qoe1xuICBpZDogei5zdHJpbmcoKS50cmFuc2Zvcm0odmFsID0+IHtcbiAgICBjb25zdCBudW0gPSBwYXJzZUludCh2YWwsIDEwKVxuICAgIGlmIChpc05hTihudW0pIHx8IG51bSA8PSAwKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0lEIGludsOhbGlkbycpXG4gICAgfVxuICAgIHJldHVybiBudW1cbiAgfSksXG59KVxuXG5leHBvcnQgY29uc3QgU2x1Z1BhcmFtU2NoZW1hID0gei5vYmplY3Qoe1xuICBzbHVnOiB6LnN0cmluZygpLm1pbigxLCAnU2x1ZyByZXF1ZXJpZG8nKS5tYXgoMjU1LCAnU2x1ZyBtdXkgbGFyZ28nKSxcbn0pXG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBGVU5DSU9ORVMgQVVYSUxJQVJFU1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gVGlwb3MgZ2Vuw6lyaWNvcyBwYXJhIHZhbGlkYWNpw7NuXG50eXBlIFZhbGlkYXRpb25JbnB1dCA9IFJlY29yZDxzdHJpbmcsIGFueT4gfCBhbnlbXSB8IHN0cmluZyB8IG51bWJlciB8IGJvb2xlYW4gfCBudWxsXG5cbmludGVyZmFjZSBWYWxpZGF0aW9uUmVzdWx0PFQ+IHtcbiAgc3VjY2VzczogYm9vbGVhblxuICBkYXRhPzogVFxuICBlcnJvcj86IHN0cmluZ1xufVxuXG4vKipcbiAqIFZhbGlkYSBkYXRvcyB1c2FuZG8gdW4gc2NoZW1hIGRlIFpvZFxuICogQHBhcmFtIHNjaGVtYSAtIFNjaGVtYSBkZSBab2RcbiAqIEBwYXJhbSBkYXRhIC0gRGF0b3MgYSB2YWxpZGFyXG4gKiBAcmV0dXJucyBEYXRvcyB2YWxpZGFkb3NcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHZhbGlkYXRlRGF0YTxUPihzY2hlbWE6IHouWm9kU2NoZW1hPFQ+LCBkYXRhOiBWYWxpZGF0aW9uSW5wdXQpOiBUIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gc2NoZW1hLnBhcnNlKGRhdGEpXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgaWYgKGVycm9yIGluc3RhbmNlb2Ygei5ab2RFcnJvcikge1xuICAgICAgY29uc3QgbWVzc2FnZXMgPSBlcnJvci5lcnJvcnMubWFwKGVyciA9PiBgJHtlcnIucGF0aC5qb2luKCcuJyl9OiAke2Vyci5tZXNzYWdlfWApXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYEVycm9yZXMgZGUgdmFsaWRhY2nDs246ICR7bWVzc2FnZXMuam9pbignLCAnKX1gKVxuICAgIH1cbiAgICB0aHJvdyBlcnJvclxuICB9XG59XG5cbi8qKlxuICogVmFsaWRhIGRhdG9zIGRlIG1hbmVyYSBzZWd1cmEsIHJldG9ybmFuZG8gdW4gcmVzdWx0YWRvXG4gKiBAcGFyYW0gc2NoZW1hIC0gU2NoZW1hIGRlIFpvZFxuICogQHBhcmFtIGRhdGEgLSBEYXRvcyBhIHZhbGlkYXJcbiAqIEByZXR1cm5zIFJlc3VsdGFkbyBkZSBsYSB2YWxpZGFjacOzblxuICovXG5leHBvcnQgZnVuY3Rpb24gc2FmZVZhbGlkYXRlRGF0YTxUPihcbiAgc2NoZW1hOiB6LlpvZFNjaGVtYTxUPixcbiAgZGF0YTogVmFsaWRhdGlvbklucHV0XG4pOiBWYWxpZGF0aW9uUmVzdWx0PFQ+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCB2YWxpZGF0ZWREYXRhID0gc2NoZW1hLnBhcnNlKGRhdGEpXG4gICAgcmV0dXJuIHsgc3VjY2VzczogdHJ1ZSwgZGF0YTogdmFsaWRhdGVkRGF0YSB9XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgaWYgKGVycm9yIGluc3RhbmNlb2Ygei5ab2RFcnJvcikge1xuICAgICAgY29uc3QgbWVzc2FnZXMgPSBlcnJvci5lcnJvcnMubWFwKGVyciA9PiBgJHtlcnIucGF0aC5qb2luKCcuJyl9OiAke2Vyci5tZXNzYWdlfWApXG4gICAgICByZXR1cm4geyBzdWNjZXNzOiBmYWxzZSwgZXJyb3I6IGBFcnJvcmVzIGRlIHZhbGlkYWNpw7NuOiAke21lc3NhZ2VzLmpvaW4oJywgJyl9YCB9XG4gICAgfVxuICAgIHJldHVybiB7IHN1Y2Nlc3M6IGZhbHNlLCBlcnJvcjogJ0Vycm9yIGRlIHZhbGlkYWNpw7NuIGRlc2Nvbm9jaWRvJyB9XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJBZGRyZXNzU2NoZW1hIiwiQ2F0ZWdvcnlGaWx0ZXJzU2NoZW1hIiwiQ2F0ZWdvcnlTY2hlbWEiLCJDb250YWN0Rm9ybVNjaGVtYSIsIkNyZWF0ZU9yZGVyU2NoZW1hIiwiQ3JlYXRlUHJlZmVyZW5jZVNjaGVtYSIsIklkUGFyYW1TY2hlbWEiLCJNZXJjYWRvUGFnb0l0ZW1TY2hlbWEiLCJNZXJjYWRvUGFnb1dlYmhvb2tTY2hlbWEiLCJOZXdzbGV0dGVyU2NoZW1hIiwiT3JkZXJGaWx0ZXJzU2NoZW1hIiwiT3JkZXJJdGVtU2NoZW1hIiwiUHJvZHVjdEZpbHRlcnNTY2hlbWEiLCJQcm9kdWN0U2NoZW1hIiwiU2x1Z1BhcmFtU2NoZW1hIiwiVXBkYXRlVXNlclByb2ZpbGVTY2hlbWEiLCJVc2VyU2NoZW1hIiwic2FmZVZhbGlkYXRlRGF0YSIsInZhbGlkYXRlRGF0YSIsInoiLCJvYmplY3QiLCJuYW1lIiwic3RyaW5nIiwibWluIiwibWF4IiwiYnJhbmQiLCJvcHRpb25hbCIsInNsdWciLCJkZXNjcmlwdGlvbiIsInByaWNlIiwibnVtYmVyIiwicG9zaXRpdmUiLCJkaXNjb3VudGVkX3ByaWNlIiwic3RvY2siLCJpbnQiLCJkZWZhdWx0IiwiY2F0ZWdvcnlfaWQiLCJpbWFnZXMiLCJwcmV2aWV3cyIsImFycmF5IiwidXJsIiwibWFpbiIsImNhdGVnb3J5IiwiY2F0ZWdvcmllcyIsImJyYW5kcyIsInBhaW50VHlwZSIsInBhaW50VHlwZXMiLCJwcmljZU1pbiIsInByaWNlTWF4Iiwic2VhcmNoIiwiaGFzRGlzY291bnQiLCJib29sZWFuIiwicGFnZSIsImxpbWl0Iiwic29ydEJ5IiwiZW51bSIsInNvcnRPcmRlciIsIm51bGxhYmxlIiwiaWNvbiIsInBhcmVudElkIiwiY2xlcmtfaWQiLCJlbWFpbCIsInByb2R1Y3RJZCIsInF1YW50aXR5IiwiaXRlbXMiLCJ0b3RhbCIsInNoaXBwaW5nQWRkcmVzcyIsInN0cmVldCIsImNpdHkiLCJwb3N0YWxDb2RlIiwiY291bnRyeSIsInN0YXR1cyIsImRhdGVGcm9tIiwiZGF0ZVRvIiwidGl0bGUiLCJ1bml0X3ByaWNlIiwiY3VycmVuY3lfaWQiLCJleHRlcm5hbF9yZWZlcmVuY2UiLCJiYWNrX3VybHMiLCJzdWNjZXNzIiwiZmFpbHVyZSIsInBlbmRpbmciLCJhY3Rpb24iLCJhcGlfdmVyc2lvbiIsImRhdGEiLCJpZCIsImRhdGVfY3JlYXRlZCIsImxpdmVfbW9kZSIsInR5cGUiLCJ1c2VyX2lkIiwiVkFMSURBVElPTl9DT05TVEFOVFMiLCJNSU5fTkFNRV9MRU5HVEgiLCJNQVhfTkFNRV9MRU5HVEgiLCJzdWJqZWN0IiwibWVzc2FnZSIsIk1JTl9NRVNTQUdFX0xFTkdUSCIsIk1BWF9NRVNTQUdFX0xFTkdUSCIsInBvc3RhbF9jb2RlIiwiaXNfZGVmYXVsdCIsInRyYW5zZm9ybSIsInZhbCIsIm51bSIsInBhcnNlSW50IiwiaXNOYU4iLCJFcnJvciIsInNjaGVtYSIsInBhcnNlIiwiZXJyb3IiLCJab2RFcnJvciIsIm1lc3NhZ2VzIiwiZXJyb3JzIiwibWFwIiwiZXJyIiwicGF0aCIsImpvaW4iLCJ2YWxpZGF0ZWREYXRhIl0sIm1hcHBpbmdzIjoiQUFBQSxzQ0FBc0M7QUFDdEMsNENBQTRDO0FBQzVDLHNDQUFzQzs7Ozs7Ozs7Ozs7O1FBNkp6QkE7ZUFBQUE7O1FBekdBQztlQUFBQTs7UUFQQUM7ZUFBQUE7O1FBNEZBQztlQUFBQTs7UUF6REFDO2VBQUFBOztRQStCQUM7ZUFBQUE7O1FBNERBQztlQUFBQTs7UUFuRUFDO2VBQUFBOztRQWlCQUM7ZUFBQUE7O1FBNkJBQztlQUFBQTs7UUF6REFDO2VBQUFBOztRQW5CQUM7ZUFBQUE7O1FBakRBQztlQUFBQTs7UUFqQkFDO2VBQUFBOztRQTZLQUM7ZUFBQUE7O1FBbkhBQztlQUFBQTs7UUFOQUM7ZUFBQUE7O1FBa0tHQztlQUFBQTs7UUFsQkFDO2VBQUFBOzs7cUJBMU1FO3NCQUNtQjtBQUs5QixNQUFNTCxnQkFBZ0JNLE1BQUMsQ0FBQ0MsTUFBTSxDQUFDO0lBQ3BDQyxNQUFNRixNQUFDLENBQUNHLE1BQU0sR0FBR0MsR0FBRyxDQUFDLEdBQUcsMEJBQTBCQyxHQUFHLENBQUMsS0FBSztJQUMzREMsT0FBT04sTUFBQyxDQUFDRyxNQUFNLEdBQUdDLEdBQUcsQ0FBQyxHQUFHLHlCQUF5QkMsR0FBRyxDQUFDLEtBQUssbUJBQW1CRSxRQUFRO0lBQ3RGQyxNQUFNUixNQUFDLENBQUNHLE1BQU0sR0FBR0MsR0FBRyxDQUFDLEdBQUcsd0JBQXdCQyxHQUFHLENBQUMsS0FBSztJQUN6REksYUFBYVQsTUFBQyxDQUFDRyxNQUFNLEdBQUdJLFFBQVE7SUFDaENHLE9BQU9WLE1BQUMsQ0FBQ1csTUFBTSxHQUFHQyxRQUFRLENBQUM7SUFDM0JDLGtCQUFrQmIsTUFBQyxDQUFDVyxNQUFNLEdBQUdDLFFBQVEsR0FBR0wsUUFBUTtJQUNoRE8sT0FBT2QsTUFBQyxDQUFDVyxNQUFNLEdBQUdJLEdBQUcsR0FBR1gsR0FBRyxDQUFDLEdBQUcsa0NBQWtDWSxP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