7c4d45d83f1b0f25bea0761cfc8535ad
// ===================================
// PINTEYA E-COMMERCE - QUERY OPTIMIZER
// ===================================
"use strict";

/* istanbul ignore next */
function cov_awcod1iwy() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\query-optimizer.ts";
  var hash = "6f9c84ccc78bbe6296b1fb16bd156c79357f9f30";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\query-optimizer.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "2": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "3": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 27,
          column: 3
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 32
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 29
        }
      },
      "6": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 30
        }
      },
      "7": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 30
        }
      },
      "8": {
        start: {
          line: 28,
          column: 18
        },
        end: {
          line: 28,
          column: 39
        }
      },
      "9": {
        start: {
          line: 29,
          column: 22
        },
        end: {
          line: 29,
          column: 48
        }
      },
      "10": {
        start: {
          line: 30,
          column: 16
        },
        end: {
          line: 30,
          column: 46
        }
      },
      "11": {
        start: {
          line: 31,
          column: 22
        },
        end: {
          line: 64,
          column: 1
        }
      },
      "12": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 70,
          column: 9
        }
      },
      "13": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 59
        }
      },
      "14": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 39
        }
      },
      "15": {
        start: {
          line: 76,
          column: 26
        },
        end: {
          line: 76,
          column: 36
        }
      },
      "16": {
        start: {
          line: 77,
          column: 28
        },
        end: {
          line: 80,
          column: 9
        }
      },
      "17": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 115,
          column: 9
        }
      },
      "18": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 94,
          column: 13
        }
      },
      "19": {
        start: {
          line: 84,
          column: 36
        },
        end: {
          line: 88,
          column: 17
        }
      },
      "20": {
        start: {
          line: 89,
          column: 31
        },
        end: {
          line: 89,
          column: 91
        }
      },
      "21": {
        start: {
          line: 90,
          column: 16
        },
        end: {
          line: 93,
          column: 17
        }
      },
      "22": {
        start: {
          line: 91,
          column: 20
        },
        end: {
          line: 91,
          column: 84
        }
      },
      "23": {
        start: {
          line: 92,
          column: 20
        },
        end: {
          line: 92,
          column: 34
        }
      },
      "24": {
        start: {
          line: 96,
          column: 27
        },
        end: {
          line: 96,
          column: 94
        }
      },
      "25": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 107,
          column: 13
        }
      },
      "26": {
        start: {
          line: 99,
          column: 36
        },
        end: {
          line: 103,
          column: 17
        }
      },
      "27": {
        start: {
          line: 104,
          column: 16
        },
        end: {
          line: 106,
          column: 19
        }
      },
      "28": {
        start: {
          line: 105,
          column: 20
        },
        end: {
          line: 105,
          column: 97
        }
      },
      "29": {
        start: {
          line: 108,
          column: 29
        },
        end: {
          line: 108,
          column: 51
        }
      },
      "30": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 88
        }
      },
      "31": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 110,
          column: 26
        }
      },
      "32": {
        start: {
          line: 112,
          column: 29
        },
        end: {
          line: 112,
          column: 51
        }
      },
      "33": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 91
        }
      },
      "34": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 114,
          column: 24
        }
      },
      "35": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 123,
          column: 11
        }
      },
      "36": {
        start: {
          line: 122,
          column: 37
        },
        end: {
          line: 122,
          column: 119
        }
      },
      "37": {
        start: {
          line: 122,
          column: 52
        },
        end: {
          line: 122,
          column: 107
        }
      },
      "38": {
        start: {
          line: 128,
          column: 24
        },
        end: {
          line: 131,
          column: 16
        }
      },
      "39": {
        start: {
          line: 128,
          column: 92
        },
        end: {
          line: 131,
          column: 13
        }
      },
      "40": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 141,
          column: 11
        }
      },
      "41": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 140,
          column: 13
        }
      },
      "42": {
        start: {
          line: 134,
          column: 16
        },
        end: {
          line: 134,
          column: 36
        }
      },
      "43": {
        start: {
          line: 136,
          column: 16
        },
        end: {
          line: 139,
          column: 18
        }
      },
      "44": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 156,
          column: 9
        }
      },
      "45": {
        start: {
          line: 147,
          column: 32
        },
        end: {
          line: 151,
          column: 13
        }
      },
      "46": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 152,
          column: 85
        }
      },
      "47": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 153,
          column: 84
        }
      },
      "48": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 155,
          column: 101
        }
      },
      "49": {
        start: {
          line: 159,
          column: 23
        },
        end: {
          line: 159,
          column: 51
        }
      },
      "50": {
        start: {
          line: 160,
          column: 25
        },
        end: {
          line: 293,
          column: 1
        }
      },
      "51": {
        start: {
          line: 164,
          column: 25
        },
        end: {
          line: 164,
          column: 62
        }
      },
      "52": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 187,
          column: 35
        }
      },
      "53": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 168,
          column: 13
        }
      },
      "54": {
        start: {
          line: 167,
          column: 16
        },
        end: {
          line: 167,
          column: 71
        }
      },
      "55": {
        start: {
          line: 169,
          column: 24
        },
        end: {
          line: 169,
          column: 76
        }
      },
      "56": {
        start: {
          line: 170,
          column: 12
        },
        end: {
          line: 172,
          column: 13
        }
      },
      "57": {
        start: {
          line: 171,
          column: 16
        },
        end: {
          line: 171,
          column: 66
        }
      },
      "58": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 175,
          column: 13
        }
      },
      "59": {
        start: {
          line: 174,
          column: 16
        },
        end: {
          line: 174,
          column: 57
        }
      },
      "60": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 178,
          column: 13
        }
      },
      "61": {
        start: {
          line: 177,
          column: 16
        },
        end: {
          line: 177,
          column: 51
        }
      },
      "62": {
        start: {
          line: 179,
          column: 12
        },
        end: {
          line: 181,
          column: 13
        }
      },
      "63": {
        start: {
          line: 180,
          column: 16
        },
        end: {
          line: 180,
          column: 96
        }
      },
      "64": {
        start: {
          line: 182,
          column: 36
        },
        end: {
          line: 182,
          column: 47
        }
      },
      "65": {
        start: {
          line: 183,
          column: 12
        },
        end: {
          line: 185,
          column: 13
        }
      },
      "66": {
        start: {
          line: 184,
          column: 16
        },
        end: {
          line: 184,
          column: 75
        }
      },
      "67": {
        start: {
          line: 186,
          column: 12
        },
        end: {
          line: 186,
          column: 30
        }
      },
      "68": {
        start: {
          line: 192,
          column: 25
        },
        end: {
          line: 192,
          column: 57
        }
      },
      "69": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 215,
          column: 33
        }
      },
      "70": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 196,
          column: 13
        }
      },
      "71": {
        start: {
          line: 195,
          column: 16
        },
        end: {
          line: 195,
          column: 71
        }
      },
      "72": {
        start: {
          line: 197,
          column: 36
        },
        end: {
          line: 210,
          column: 27
        }
      },
      "73": {
        start: {
          line: 211,
          column: 12
        },
        end: {
          line: 213,
          column: 13
        }
      },
      "74": {
        start: {
          line: 212,
          column: 16
        },
        end: {
          line: 212,
          column: 78
        }
      },
      "75": {
        start: {
          line: 214,
          column: 12
        },
        end: {
          line: 214,
          column: 30
        }
      },
      "76": {
        start: {
          line: 220,
          column: 25
        },
        end: {
          line: 220,
          column: 40
        }
      },
      "77": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 281,
          column: 36
        }
      },
      "78": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 224,
          column: 13
        }
      },
      "79": {
        start: {
          line: 223,
          column: 16
        },
        end: {
          line: 223,
          column: 71
        }
      },
      "80": {
        start: {
          line: 226,
          column: 69
        },
        end: {
          line: 237,
          column: 14
        }
      },
      "81": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 240,
          column: 13
        }
      },
      "82": {
        start: {
          line: 239,
          column: 16
        },
        end: {
          line: 239,
          column: 93
        }
      },
      "83": {
        start: {
          line: 241,
          column: 12
        },
        end: {
          line: 243,
          column: 13
        }
      },
      "84": {
        start: {
          line: 242,
          column: 16
        },
        end: {
          line: 242,
          column: 96
        }
      },
      "85": {
        start: {
          line: 244,
          column: 12
        },
        end: {
          line: 246,
          column: 13
        }
      },
      "86": {
        start: {
          line: 245,
          column: 16
        },
        end: {
          line: 245,
          column: 97
        }
      },
      "87": {
        start: {
          line: 248,
          column: 34
        },
        end: {
          line: 248,
          column: 56
        }
      },
      "88": {
        start: {
          line: 249,
          column: 39
        },
        end: {
          line: 261,
          column: 24
        }
      },
      "89": {
        start: {
          line: 250,
          column: 37
        },
        end: {
          line: 250,
          column: 77
        }
      },
      "90": {
        start: {
          line: 251,
          column: 33
        },
        end: {
          line: 251,
          column: 75
        }
      },
      "91": {
        start: {
          line: 251,
          column: 47
        },
        end: {
          line: 251,
          column: 74
        }
      },
      "92": {
        start: {
          line: 252,
          column: 16
        },
        end: {
          line: 259,
          column: 17
        }
      },
      "93": {
        start: {
          line: 253,
          column: 20
        },
        end: {
          line: 253,
          column: 37
        }
      },
      "94": {
        start: {
          line: 255,
          column: 20
        },
        end: {
          line: 258,
          column: 23
        }
      },
      "95": {
        start: {
          line: 260,
          column: 16
        },
        end: {
          line: 260,
          column: 27
        }
      },
      "96": {
        start: {
          line: 262,
          column: 32
        },
        end: {
          line: 275,
          column: 69
        }
      },
      "97": {
        start: {
          line: 263,
          column: 34
        },
        end: {
          line: 263,
          column: 49
        }
      },
      "98": {
        start: {
          line: 264,
          column: 33
        },
        end: {
          line: 264,
          column: 66
        }
      },
      "99": {
        start: {
          line: 264,
          column: 47
        },
        end: {
          line: 264,
          column: 65
        }
      },
      "100": {
        start: {
          line: 265,
          column: 16
        },
        end: {
          line: 273,
          column: 17
        }
      },
      "101": {
        start: {
          line: 266,
          column: 20
        },
        end: {
          line: 266,
          column: 52
        }
      },
      "102": {
        start: {
          line: 268,
          column: 20
        },
        end: {
          line: 272,
          column: 23
        }
      },
      "103": {
        start: {
          line: 274,
          column: 16
        },
        end: {
          line: 274,
          column: 27
        }
      },
      "104": {
        start: {
          line: 275,
          column: 33
        },
        end: {
          line: 275,
          column: 50
        }
      },
      "105": {
        start: {
          line: 276,
          column: 12
        },
        end: {
          line: 280,
          column: 14
        }
      },
      "106": {
        start: {
          line: 286,
          column: 8
        },
        end: {
          line: 286,
          column: 64
        }
      },
      "107": {
        start: {
          line: 291,
          column: 8
        },
        end: {
          line: 291,
          column: 77
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 16
          }
        },
        loc: {
          start: {
            line: 8,
            column: 30
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 28
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 25
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 26
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 26
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 66,
            column: 5
          }
        },
        loc: {
          start: {
            line: 66,
            column: 17
          },
          end: {
            line: 66,
            column: 19
          }
        },
        line: 66
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 67,
            column: 4
          },
          end: {
            line: 67,
            column: 5
          }
        },
        loc: {
          start: {
            line: 67,
            column: 25
          },
          end: {
            line: 72,
            column: 5
          }
        },
        line: 67
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 75,
            column: 6
          },
          end: {
            line: 75,
            column: 7
          }
        },
        loc: {
          start: {
            line: 75,
            column: 58
          },
          end: {
            line: 116,
            column: 5
          }
        },
        line: 75
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 104,
            column: 85
          },
          end: {
            line: 104,
            column: 86
          }
        },
        loc: {
          start: {
            line: 104,
            column: 94
          },
          end: {
            line: 106,
            column: 17
          }
        },
        line: 104
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 119,
            column: 6
          },
          end: {
            line: 119,
            column: 7
          }
        },
        loc: {
          start: {
            line: 119,
            column: 51
          },
          end: {
            line: 124,
            column: 5
          }
        },
        line: 119
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 122,
            column: 24
          },
          end: {
            line: 122,
            column: 25
          }
        },
        loc: {
          start: {
            line: 122,
            column: 37
          },
          end: {
            line: 122,
            column: 119
          }
        },
        line: 122
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 122,
            column: 48
          },
          end: {
            line: 122,
            column: 49
          }
        },
        loc: {
          start: {
            line: 122,
            column: 52
          },
          end: {
            line: 122,
            column: 107
          }
        },
        line: 122
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 127,
            column: 6
          },
          end: {
            line: 127,
            column: 7
          }
        },
        loc: {
          start: {
            line: 127,
            column: 34
          },
          end: {
            line: 142,
            column: 5
          }
        },
        line: 127
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 128,
            column: 61
          },
          end: {
            line: 128,
            column: 62
          }
        },
        loc: {
          start: {
            line: 128,
            column: 92
          },
          end: {
            line: 131,
            column: 13
          }
        },
        line: 128
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 132,
            column: 27
          },
          end: {
            line: 132,
            column: 28
          }
        },
        loc: {
          start: {
            line: 132,
            column: 44
          },
          end: {
            line: 141,
            column: 9
          }
        },
        line: 132
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 145,
            column: 6
          },
          end: {
            line: 145,
            column: 7
          }
        },
        loc: {
          start: {
            line: 145,
            column: 42
          },
          end: {
            line: 157,
            column: 5
          }
        },
        line: 145
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 163,
            column: 6
          },
          end: {
            line: 163,
            column: 7
          }
        },
        loc: {
          start: {
            line: 163,
            column: 39
          },
          end: {
            line: 188,
            column: 5
          }
        },
        line: 163
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 165,
            column: 53
          },
          end: {
            line: 165,
            column: 54
          }
        },
        loc: {
          start: {
            line: 165,
            column: 63
          },
          end: {
            line: 187,
            column: 9
          }
        },
        line: 165
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 191,
            column: 6
          },
          end: {
            line: 191,
            column: 7
          }
        },
        loc: {
          start: {
            line: 191,
            column: 47
          },
          end: {
            line: 216,
            column: 5
          }
        },
        line: 191
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 193,
            column: 53
          },
          end: {
            line: 193,
            column: 54
          }
        },
        loc: {
          start: {
            line: 193,
            column: 63
          },
          end: {
            line: 215,
            column: 9
          }
        },
        line: 193
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 219,
            column: 6
          },
          end: {
            line: 219,
            column: 7
          }
        },
        loc: {
          start: {
            line: 219,
            column: 31
          },
          end: {
            line: 282,
            column: 5
          }
        },
        line: 219
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 221,
            column: 53
          },
          end: {
            line: 221,
            column: 54
          }
        },
        loc: {
          start: {
            line: 221,
            column: 63
          },
          end: {
            line: 281,
            column: 9
          }
        },
        line: 221
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 249,
            column: 67
          },
          end: {
            line: 249,
            column: 68
          }
        },
        loc: {
          start: {
            line: 249,
            column: 80
          },
          end: {
            line: 261,
            column: 13
          }
        },
        line: 249
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 251,
            column: 42
          },
          end: {
            line: 251,
            column: 43
          }
        },
        loc: {
          start: {
            line: 251,
            column: 47
          },
          end: {
            line: 251,
            column: 74
          }
        },
        line: 251
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 262,
            column: 63
          },
          end: {
            line: 262,
            column: 64
          }
        },
        loc: {
          start: {
            line: 262,
            column: 76
          },
          end: {
            line: 275,
            column: 13
          }
        },
        line: 262
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 264,
            column: 42
          },
          end: {
            line: 264,
            column: 43
          }
        },
        loc: {
          start: {
            line: 264,
            column: 47
          },
          end: {
            line: 264,
            column: 65
          }
        },
        line: 264
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 275,
            column: 25
          },
          end: {
            line: 275,
            column: 26
          }
        },
        loc: {
          start: {
            line: 275,
            column: 33
          },
          end: {
            line: 275,
            column: 50
          }
        },
        line: 275
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 285,
            column: 6
          },
          end: {
            line: 285,
            column: 7
          }
        },
        loc: {
          start: {
            line: 285,
            column: 39
          },
          end: {
            line: 287,
            column: 5
          }
        },
        line: 285
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 290,
            column: 6
          },
          end: {
            line: 290,
            column: 7
          }
        },
        loc: {
          start: {
            line: 290,
            column: 47
          },
          end: {
            line: 292,
            column: 5
          }
        },
        line: 290
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "1": {
        loc: {
          start: {
            line: 75,
            column: 45
          },
          end: {
            line: 75,
            column: 56
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 75,
            column: 54
          },
          end: {
            line: 75,
            column: 56
          }
        }],
        line: 75
      },
      "2": {
        loc: {
          start: {
            line: 83,
            column: 12
          },
          end: {
            line: 94,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 83,
            column: 12
          },
          end: {
            line: 94,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 83
      },
      "3": {
        loc: {
          start: {
            line: 85,
            column: 25
          },
          end: {
            line: 85,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 85,
            column: 25
          },
          end: {
            line: 85,
            column: 45
          }
        }, {
          start: {
            line: 85,
            column: 49
          },
          end: {
            line: 85,
            column: 52
          }
        }],
        line: 85
      },
      "4": {
        loc: {
          start: {
            line: 90,
            column: 16
          },
          end: {
            line: 93,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 16
          },
          end: {
            line: 93,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "5": {
        loc: {
          start: {
            line: 96,
            column: 66
          },
          end: {
            line: 96,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 96,
            column: 66
          },
          end: {
            line: 96,
            column: 85
          }
        }, {
          start: {
            line: 96,
            column: 89
          },
          end: {
            line: 96,
            column: 93
          }
        }],
        line: 96
      },
      "6": {
        loc: {
          start: {
            line: 98,
            column: 12
          },
          end: {
            line: 107,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 12
          },
          end: {
            line: 107,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 98
      },
      "7": {
        loc: {
          start: {
            line: 100,
            column: 25
          },
          end: {
            line: 100,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 100,
            column: 25
          },
          end: {
            line: 100,
            column: 45
          }
        }, {
          start: {
            line: 100,
            column: 49
          },
          end: {
            line: 100,
            column: 52
          }
        }],
        line: 100
      },
      "8": {
        loc: {
          start: {
            line: 133,
            column: 12
          },
          end: {
            line: 140,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 133,
            column: 12
          },
          end: {
            line: 140,
            column: 13
          }
        }, {
          start: {
            line: 135,
            column: 19
          },
          end: {
            line: 140,
            column: 13
          }
        }],
        line: 133
      },
      "9": {
        loc: {
          start: {
            line: 163,
            column: 25
          },
          end: {
            line: 163,
            column: 37
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 163,
            column: 35
          },
          end: {
            line: 163,
            column: 37
          }
        }],
        line: 163
      },
      "10": {
        loc: {
          start: {
            line: 166,
            column: 12
          },
          end: {
            line: 168,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 166,
            column: 12
          },
          end: {
            line: 168,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 166
      },
      "11": {
        loc: {
          start: {
            line: 170,
            column: 12
          },
          end: {
            line: 172,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 170,
            column: 12
          },
          end: {
            line: 172,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 170
      },
      "12": {
        loc: {
          start: {
            line: 173,
            column: 12
          },
          end: {
            line: 175,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 12
          },
          end: {
            line: 175,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 173
      },
      "13": {
        loc: {
          start: {
            line: 176,
            column: 12
          },
          end: {
            line: 178,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 12
          },
          end: {
            line: 178,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 176
      },
      "14": {
        loc: {
          start: {
            line: 179,
            column: 12
          },
          end: {
            line: 181,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 179,
            column: 12
          },
          end: {
            line: 181,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 179
      },
      "15": {
        loc: {
          start: {
            line: 180,
            column: 70
          },
          end: {
            line: 180,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 180,
            column: 70
          },
          end: {
            line: 180,
            column: 83
          }
        }, {
          start: {
            line: 180,
            column: 87
          },
          end: {
            line: 180,
            column: 89
          }
        }],
        line: 180
      },
      "16": {
        loc: {
          start: {
            line: 183,
            column: 12
          },
          end: {
            line: 185,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 183,
            column: 12
          },
          end: {
            line: 185,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 183
      },
      "17": {
        loc: {
          start: {
            line: 186,
            column: 19
          },
          end: {
            line: 186,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 186,
            column: 19
          },
          end: {
            line: 186,
            column: 23
          }
        }, {
          start: {
            line: 186,
            column: 27
          },
          end: {
            line: 186,
            column: 29
          }
        }],
        line: 186
      },
      "18": {
        loc: {
          start: {
            line: 191,
            column: 35
          },
          end: {
            line: 191,
            column: 45
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 191,
            column: 43
          },
          end: {
            line: 191,
            column: 45
          }
        }],
        line: 191
      },
      "19": {
        loc: {
          start: {
            line: 194,
            column: 12
          },
          end: {
            line: 196,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 194,
            column: 12
          },
          end: {
            line: 196,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 194
      },
      "20": {
        loc: {
          start: {
            line: 211,
            column: 12
          },
          end: {
            line: 213,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 211,
            column: 12
          },
          end: {
            line: 213,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 211
      },
      "21": {
        loc: {
          start: {
            line: 214,
            column: 19
          },
          end: {
            line: 214,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 214,
            column: 19
          },
          end: {
            line: 214,
            column: 23
          }
        }, {
          start: {
            line: 214,
            column: 27
          },
          end: {
            line: 214,
            column: 29
          }
        }],
        line: 214
      },
      "22": {
        loc: {
          start: {
            line: 222,
            column: 12
          },
          end: {
            line: 224,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 222,
            column: 12
          },
          end: {
            line: 224,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 222
      },
      "23": {
        loc: {
          start: {
            line: 238,
            column: 12
          },
          end: {
            line: 240,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 238,
            column: 12
          },
          end: {
            line: 240,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 238
      },
      "24": {
        loc: {
          start: {
            line: 241,
            column: 12
          },
          end: {
            line: 243,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 241,
            column: 12
          },
          end: {
            line: 243,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 241
      },
      "25": {
        loc: {
          start: {
            line: 244,
            column: 12
          },
          end: {
            line: 246,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 244,
            column: 12
          },
          end: {
            line: 246,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 244
      },
      "26": {
        loc: {
          start: {
            line: 248,
            column: 34
          },
          end: {
            line: 248,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 248,
            column: 34
          },
          end: {
            line: 248,
            column: 51
          }
        }, {
          start: {
            line: 248,
            column: 55
          },
          end: {
            line: 248,
            column: 56
          }
        }],
        line: 248
      },
      "27": {
        loc: {
          start: {
            line: 249,
            column: 39
          },
          end: {
            line: 261,
            column: 24
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 249,
            column: 39
          },
          end: {
            line: 261,
            column: 18
          }
        }, {
          start: {
            line: 261,
            column: 22
          },
          end: {
            line: 261,
            column: 24
          }
        }],
        line: 249
      },
      "28": {
        loc: {
          start: {
            line: 250,
            column: 37
          },
          end: {
            line: 250,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 250,
            column: 37
          },
          end: {
            line: 250,
            column: 58
          }
        }, {
          start: {
            line: 250,
            column: 62
          },
          end: {
            line: 250,
            column: 77
          }
        }],
        line: 250
      },
      "29": {
        loc: {
          start: {
            line: 252,
            column: 16
          },
          end: {
            line: 259,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 252,
            column: 16
          },
          end: {
            line: 259,
            column: 17
          }
        }, {
          start: {
            line: 254,
            column: 23
          },
          end: {
            line: 259,
            column: 17
          }
        }],
        line: 252
      },
      "30": {
        loc: {
          start: {
            line: 262,
            column: 32
          },
          end: {
            line: 275,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 262,
            column: 32
          },
          end: {
            line: 275,
            column: 63
          }
        }, {
          start: {
            line: 275,
            column: 67
          },
          end: {
            line: 275,
            column: 69
          }
        }],
        line: 262
      },
      "31": {
        loc: {
          start: {
            line: 265,
            column: 16
          },
          end: {
            line: 273,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 265,
            column: 16
          },
          end: {
            line: 273,
            column: 17
          }
        }, {
          start: {
            line: 267,
            column: 23
          },
          end: {
            line: 273,
            column: 17
          }
        }],
        line: 265
      },
      "32": {
        loc: {
          start: {
            line: 270,
            column: 30
          },
          end: {
            line: 270,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 270,
            column: 30
          },
          end: {
            line: 270,
            column: 49
          }
        }, {
          start: {
            line: 270,
            column: 53
          },
          end: {
            line: 270,
            column: 75
          }
        }],
        line: 270
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0
    },
    b: {
      "0": [0, 0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\query-optimizer.ts"],
      sourcesContent: ["// ===================================\r\n// PINTEYA E-COMMERCE - QUERY OPTIMIZER\r\n// ===================================\r\n\r\nimport { supabaseAdmin } from './supabase';\r\nimport { cacheManager, CACHE_CONFIGS } from './cache-manager';\r\nimport { logger, LogLevel, LogCategory } from './enterprise/logger';\r\n\r\n// Configuraci\xF3n de optimizaci\xF3n\r\ninterface QueryConfig {\r\n  cache?: boolean;\r\n  cacheTTL?: number;\r\n  batchSize?: number;\r\n  timeout?: number;\r\n  retries?: number;\r\n}\r\n\r\n// Configuraciones predefinidas\r\nexport const QUERY_CONFIGS = {\r\n  // Para consultas de productos (frecuentes)\r\n  PRODUCTS: {\r\n    cache: true,\r\n    cacheTTL: 900, // 15 minutos\r\n    batchSize: 50,\r\n    timeout: 5000,\r\n    retries: 2,\r\n  },\r\n  \r\n  // Para consultas de \xF3rdenes (menos frecuentes)\r\n  ORDERS: {\r\n    cache: true,\r\n    cacheTTL: 300, // 5 minutos\r\n    batchSize: 20,\r\n    timeout: 10000,\r\n    retries: 3,\r\n  },\r\n  \r\n  // Para consultas de usuarios (muy frecuentes)\r\n  USERS: {\r\n    cache: true,\r\n    cacheTTL: 1800, // 30 minutos\r\n    batchSize: 100,\r\n    timeout: 3000,\r\n    retries: 1,\r\n  },\r\n  \r\n  // Para consultas anal\xEDticas (menos cr\xEDticas)\r\n  ANALYTICS: {\r\n    cache: true,\r\n    cacheTTL: 3600, // 1 hora\r\n    batchSize: 10,\r\n    timeout: 30000,\r\n    retries: 1,\r\n  },\r\n} as const;\r\n\r\n/**\r\n * Clase principal para optimizaci\xF3n de queries\r\n */\r\nexport class QueryOptimizer {\r\n  private static instance: QueryOptimizer;\r\n\r\n  private constructor() {}\r\n\r\n  static getInstance(): QueryOptimizer {\r\n    if (!QueryOptimizer.instance) {\r\n      QueryOptimizer.instance = new QueryOptimizer();\r\n    }\r\n    return QueryOptimizer.instance;\r\n  }\r\n\r\n  /**\r\n   * Ejecuta una query optimizada con cache\r\n   */\r\n  async executeQuery<T>(\r\n    queryName: string,\r\n    queryFn: () => Promise<T>,\r\n    config: QueryConfig = {}\r\n  ): Promise<T> {\r\n    const startTime = Date.now();\r\n    const finalConfig = { ...QUERY_CONFIGS.PRODUCTS, ...config };\r\n\r\n    try {\r\n      // Si cache est\xE1 habilitado, intentar obtener del cache\r\n      if (finalConfig.cache) {\r\n        const cacheConfig = {\r\n          ttl: finalConfig.cacheTTL || 900,\r\n          prefix: 'query',\r\n          serialize: true,\r\n        };\r\n\r\n        const cached = await cacheManager.get<T>(queryName, cacheConfig);\r\n        if (cached !== null) {\r\n          logger.info(LogCategory.API, 'Query cache hit');\r\n          return cached;\r\n        }\r\n      }\r\n\r\n      // Ejecutar query con timeout\r\n      const result = await this.executeWithTimeout(queryFn, finalConfig.timeout || 5000);\r\n\r\n      // Guardar en cache si est\xE1 habilitado\r\n      if (finalConfig.cache) {\r\n        const cacheConfig = {\r\n          ttl: finalConfig.cacheTTL || 900,\r\n          prefix: 'query',\r\n          serialize: true,\r\n        };\r\n\r\n        cacheManager.set(queryName, result, cacheConfig).catch(error => {\r\n          logger.warn(LogCategory.API, 'Failed to cache query result');\r\n        });\r\n      }\r\n\r\n      const duration = Date.now() - startTime;\r\n      logger.info(LogCategory.API, 'Query executed successfully');\r\n\r\n      return result;\r\n    } catch (error) {\r\n      const duration = Date.now() - startTime;\r\n      logger.error(LogCategory.API, 'Query execution failed', error as Error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Ejecuta query con timeout\r\n   */\r\n  private async executeWithTimeout<T>(\r\n    queryFn: () => Promise<T>,\r\n    timeoutMs: number\r\n  ): Promise<T> {\r\n    return Promise.race([\r\n      queryFn(),\r\n      new Promise<never>((_, reject) =>\r\n        setTimeout(() => reject(new Error(`Query timeout after ${timeoutMs}ms`)), timeoutMs)\r\n      ),\r\n    ]);\r\n  }\r\n\r\n  /**\r\n   * Ejecuta m\xFAltiples queries en batch\r\n   */\r\n  async executeBatch<T>(\r\n    queries: Array<{\r\n      name: string;\r\n      fn: () => Promise<T>;\r\n      config?: QueryConfig;\r\n    }>\r\n  ): Promise<Array<{ name: string; result?: T; error?: Error }>> {\r\n    const results = await Promise.allSettled(\r\n      queries.map(async ({ name, fn, config }) => ({\r\n        name,\r\n        result: await this.executeQuery(name, fn, config),\r\n      }))\r\n    );\r\n\r\n    return results.map((result, index) => {\r\n      if (result.status === 'fulfilled') {\r\n        return result.value;\r\n      } else {\r\n        return {\r\n          name: queries[index].name,\r\n          error: result.reason,\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Invalida cache de queries por patr\xF3n\r\n   */\r\n  async invalidateQueryCache(pattern: string): Promise<void> {\r\n    try {\r\n      const cacheConfig = {\r\n        ttl: 0,\r\n        prefix: 'query',\r\n        serialize: true,\r\n      };\r\n\r\n      await cacheManager.invalidatePattern(pattern, cacheConfig);\r\n      \r\n      logger.info(LogCategory.API, 'Query cache invalidated');\r\n    } catch (error) {\r\n      logger.error(LogCategory.API, 'Failed to invalidate query cache', error as Error);\r\n    }\r\n  }\r\n}\r\n\r\n// Instancia singleton\r\nexport const queryOptimizer = QueryOptimizer.getInstance();\r\n\r\n/**\r\n * Funciones optimizadas para consultas comunes\r\n */\r\nexport const OptimizedQueries = {\r\n  /**\r\n   * Obtiene productos con cache optimizado\r\n   */\r\n  async getProducts(filters: {\r\n    category?: string;\r\n    brand?: string;\r\n    limit?: number;\r\n    offset?: number;\r\n  } = {}): Promise<any[]> {\r\n    const cacheKey = `products:${JSON.stringify(filters)}`;\r\n    \r\n    return queryOptimizer.executeQuery(\r\n      cacheKey,\r\n      async () => {\r\n        if (!supabaseAdmin) {\r\n          throw new Error('Supabase admin client not available');\r\n        }\r\n\r\n        let query = supabaseAdmin\r\n          .from('products')\r\n          .select('*');\r\n\r\n        if (filters.category) {\r\n          query = query.eq('category_id', filters.category);\r\n        }\r\n\r\n        if (filters.brand) {\r\n          query = query.eq('brand', filters.brand);\r\n        }\r\n\r\n        if (filters.limit) {\r\n          query = query.limit(filters.limit);\r\n        }\r\n\r\n        if (filters.offset) {\r\n          query = query.range(filters.offset, (filters.offset + (filters.limit || 10)) - 1);\r\n        }\r\n\r\n        const { data, error } = await query;\r\n\r\n        if (error) {\r\n          throw new Error(`Products query failed: ${error.message}`);\r\n        }\r\n\r\n        return data || [];\r\n      },\r\n      QUERY_CONFIGS.PRODUCTS\r\n    );\r\n  },\r\n\r\n  /**\r\n   * Obtiene \xF3rdenes de un usuario con cache\r\n   */\r\n  async getUserOrders(userId: string, limit: number = 10): Promise<any[]> {\r\n    const cacheKey = `user_orders:${userId}:${limit}`;\r\n    \r\n    return queryOptimizer.executeQuery(\r\n      cacheKey,\r\n      async () => {\r\n        if (!supabaseAdmin) {\r\n          throw new Error('Supabase admin client not available');\r\n        }\r\n\r\n        const { data, error } = await supabaseAdmin\r\n          .from('orders')\r\n          .select(`\r\n            *,\r\n            order_items (\r\n              *,\r\n              products (\r\n                id,\r\n                name,\r\n                price,\r\n                image_url\r\n              )\r\n            )\r\n          `)\r\n          .eq('user_id', userId)\r\n          .order('created_at', { ascending: false })\r\n          .limit(limit);\r\n\r\n        if (error) {\r\n          throw new Error(`User orders query failed: ${error.message}`);\r\n        }\r\n\r\n        return data || [];\r\n      },\r\n      QUERY_CONFIGS.ORDERS\r\n    );\r\n  },\r\n\r\n  /**\r\n   * Obtiene estad\xEDsticas de productos\r\n   */\r\n  async getProductStats(): Promise<{\r\n    totalProducts: number;\r\n    productsByCategory: Array<{ category: string; count: number }>;\r\n    topProducts: Array<{ id: string; name: string; sales: number }>;\r\n  }> {\r\n    const cacheKey = 'product_stats';\r\n    \r\n    return queryOptimizer.executeQuery(\r\n      cacheKey,\r\n      async () => {\r\n        if (!supabaseAdmin) {\r\n          throw new Error('Supabase admin client not available');\r\n        }\r\n\r\n        // Ejecutar m\xFAltiples queries en paralelo\r\n        const [totalResult, categoryResult, topProductsResult] = await Promise.all([\r\n          supabaseAdmin\r\n            .from('products')\r\n            .select('id', { count: 'exact', head: true }),\r\n          \r\n          supabaseAdmin\r\n            .from('products')\r\n            .select('category_id, categories(name)')\r\n            .not('category_id', 'is', null),\r\n          \r\n          supabaseAdmin\r\n            .from('order_items')\r\n            .select(`\r\n              product_id,\r\n              quantity,\r\n              products(id, name)\r\n            `)\r\n            .limit(10)\r\n        ]);\r\n\r\n        if (totalResult.error) {\r\n          throw new Error(`Total products query failed: ${totalResult.error.message}`);\r\n        }\r\n\r\n        if (categoryResult.error) {\r\n          throw new Error(`Category stats query failed: ${categoryResult.error.message}`);\r\n        }\r\n\r\n        if (topProductsResult.error) {\r\n          throw new Error(`Top products query failed: ${topProductsResult.error.message}`);\r\n        }\r\n\r\n        // Procesar resultados\r\n        const totalProducts = totalResult.count || 0;\r\n\r\n        const productsByCategory = categoryResult.data?.reduce((acc: any[], item: any) => {\r\n          const categoryName = item.categories?.name || 'Sin categor\xEDa';\r\n          const existing = acc.find(c => c.category === categoryName);\r\n          if (existing) {\r\n            existing.count++;\r\n          } else {\r\n            acc.push({ category: categoryName, count: 1 });\r\n          }\r\n          return acc;\r\n        }, []) || [];\r\n\r\n        const topProducts = topProductsResult.data?.reduce((acc: any[], item: any) => {\r\n          const productId = item.product_id;\r\n          const existing = acc.find(p => p.id === productId);\r\n          if (existing) {\r\n            existing.sales += item.quantity;\r\n          } else {\r\n            acc.push({\r\n              id: productId,\r\n              name: item.products?.name || 'Producto desconocido',\r\n              sales: item.quantity,\r\n            });\r\n          }\r\n          return acc;\r\n        }, [])?.sort((a: any, b: any) => b.sales - a.sales).slice(0, 5) || [];\r\n\r\n        return {\r\n          totalProducts,\r\n          productsByCategory,\r\n          topProducts,\r\n        };\r\n      },\r\n      QUERY_CONFIGS.ANALYTICS\r\n    );\r\n  },\r\n\r\n  /**\r\n   * Invalida cache de productos\r\n   */\r\n  async invalidateProductsCache(): Promise<void> {\r\n    await queryOptimizer.invalidateQueryCache('products:*');\r\n  },\r\n\r\n  /**\r\n   * Invalida cache de \xF3rdenes de un usuario\r\n   */\r\n  async invalidateUserOrdersCache(userId: string): Promise<void> {\r\n    await queryOptimizer.invalidateQueryCache(`user_orders:${userId}:*`);\r\n  },\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["OptimizedQueries", "QUERY_CONFIGS", "QueryOptimizer", "queryOptimizer", "PRODUCTS", "cache", "cacheTTL", "batchSize", "timeout", "retries", "ORDERS", "USERS", "ANALYTICS", "getInstance", "instance", "executeQuery", "queryName", "queryFn", "config", "startTime", "Date", "now", "finalConfig", "cacheConfig", "ttl", "prefix", "serialize", "cached", "cacheManager", "get", "logger", "info", "LogCategory", "API", "result", "executeWithTimeout", "set", "catch", "error", "warn", "duration", "timeoutMs", "Promise", "race", "_", "reject", "setTimeout", "Error", "executeBatch", "queries", "results", "allSettled", "map", "name", "fn", "index", "status", "value", "reason", "invalidateQueryCache", "pattern", "invalidatePattern", "getProducts", "filters", "cacheKey", "JSON", "stringify", "supabaseAdmin", "query", "from", "select", "category", "eq", "brand", "limit", "offset", "range", "data", "message", "getUserOrders", "userId", "order", "ascending", "getProductStats", "totalResult", "categoryResult", "topProductsResult", "all", "count", "head", "not", "totalProducts", "productsByCategory", "reduce", "acc", "item", "categoryName", "categories", "existing", "find", "c", "push", "topProducts", "productId", "product_id", "p", "id", "sales", "quantity", "products", "sort", "a", "b", "slice", "invalidateProductsCache", "invalidateUserOrdersCache"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6f9c84ccc78bbe6296b1fb16bd156c79357f9f30"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_awcod1iwy = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_awcod1iwy();
cov_awcod1iwy().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_awcod1iwy().f[0]++;
  cov_awcod1iwy().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_awcod1iwy().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_awcod1iwy().s[3]++;
_export(exports, {
  get OptimizedQueries() {
    /* istanbul ignore next */
    cov_awcod1iwy().f[1]++;
    cov_awcod1iwy().s[4]++;
    return OptimizedQueries;
  },
  get QUERY_CONFIGS() {
    /* istanbul ignore next */
    cov_awcod1iwy().f[2]++;
    cov_awcod1iwy().s[5]++;
    return QUERY_CONFIGS;
  },
  get QueryOptimizer() {
    /* istanbul ignore next */
    cov_awcod1iwy().f[3]++;
    cov_awcod1iwy().s[6]++;
    return QueryOptimizer;
  },
  get queryOptimizer() {
    /* istanbul ignore next */
    cov_awcod1iwy().f[4]++;
    cov_awcod1iwy().s[7]++;
    return queryOptimizer;
  }
});
const _supabase =
/* istanbul ignore next */
(cov_awcod1iwy().s[8]++, require("./supabase"));
const _cachemanager =
/* istanbul ignore next */
(cov_awcod1iwy().s[9]++, require("./cache-manager"));
const _logger =
/* istanbul ignore next */
(cov_awcod1iwy().s[10]++, require("./enterprise/logger"));
const QUERY_CONFIGS =
/* istanbul ignore next */
(cov_awcod1iwy().s[11]++, {
  // Para consultas de productos (frecuentes)
  PRODUCTS: {
    cache: true,
    cacheTTL: 900,
    batchSize: 50,
    timeout: 5000,
    retries: 2
  },
  // Para consultas de órdenes (menos frecuentes)
  ORDERS: {
    cache: true,
    cacheTTL: 300,
    batchSize: 20,
    timeout: 10000,
    retries: 3
  },
  // Para consultas de usuarios (muy frecuentes)
  USERS: {
    cache: true,
    cacheTTL: 1800,
    batchSize: 100,
    timeout: 3000,
    retries: 1
  },
  // Para consultas analíticas (menos críticas)
  ANALYTICS: {
    cache: true,
    cacheTTL: 3600,
    batchSize: 10,
    timeout: 30000,
    retries: 1
  }
});
class QueryOptimizer {
  constructor() {
    /* istanbul ignore next */
    cov_awcod1iwy().f[5]++;
  }
  static getInstance() {
    /* istanbul ignore next */
    cov_awcod1iwy().f[6]++;
    cov_awcod1iwy().s[12]++;
    if (!QueryOptimizer.instance) {
      /* istanbul ignore next */
      cov_awcod1iwy().b[0][0]++;
      cov_awcod1iwy().s[13]++;
      QueryOptimizer.instance = new QueryOptimizer();
    } else
    /* istanbul ignore next */
    {
      cov_awcod1iwy().b[0][1]++;
    }
    cov_awcod1iwy().s[14]++;
    return QueryOptimizer.instance;
  }
  /**
  * Ejecuta una query optimizada con cache
  */
  async executeQuery(queryName, queryFn, config =
  /* istanbul ignore next */
  (cov_awcod1iwy().b[1][0]++, {})) {
    /* istanbul ignore next */
    cov_awcod1iwy().f[7]++;
    const startTime =
    /* istanbul ignore next */
    (cov_awcod1iwy().s[15]++, Date.now());
    const finalConfig =
    /* istanbul ignore next */
    (cov_awcod1iwy().s[16]++, {
      ...QUERY_CONFIGS.PRODUCTS,
      ...config
    });
    /* istanbul ignore next */
    cov_awcod1iwy().s[17]++;
    try {
      /* istanbul ignore next */
      cov_awcod1iwy().s[18]++;
      // Si cache está habilitado, intentar obtener del cache
      if (finalConfig.cache) {
        /* istanbul ignore next */
        cov_awcod1iwy().b[2][0]++;
        const cacheConfig =
        /* istanbul ignore next */
        (cov_awcod1iwy().s[19]++, {
          ttl:
          /* istanbul ignore next */
          (cov_awcod1iwy().b[3][0]++, finalConfig.cacheTTL) ||
          /* istanbul ignore next */
          (cov_awcod1iwy().b[3][1]++, 900),
          prefix: 'query',
          serialize: true
        });
        const cached =
        /* istanbul ignore next */
        (cov_awcod1iwy().s[20]++, await _cachemanager.cacheManager.get(queryName, cacheConfig));
        /* istanbul ignore next */
        cov_awcod1iwy().s[21]++;
        if (cached !== null) {
          /* istanbul ignore next */
          cov_awcod1iwy().b[4][0]++;
          cov_awcod1iwy().s[22]++;
          _logger.logger.info(_logger.LogCategory.API, 'Query cache hit');
          /* istanbul ignore next */
          cov_awcod1iwy().s[23]++;
          return cached;
        } else
        /* istanbul ignore next */
        {
          cov_awcod1iwy().b[4][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_awcod1iwy().b[2][1]++;
      }
      // Ejecutar query con timeout
      const result =
      /* istanbul ignore next */
      (cov_awcod1iwy().s[24]++, await this.executeWithTimeout(queryFn,
      /* istanbul ignore next */
      (cov_awcod1iwy().b[5][0]++, finalConfig.timeout) ||
      /* istanbul ignore next */
      (cov_awcod1iwy().b[5][1]++, 5000)));
      // Guardar en cache si está habilitado
      /* istanbul ignore next */
      cov_awcod1iwy().s[25]++;
      if (finalConfig.cache) {
        /* istanbul ignore next */
        cov_awcod1iwy().b[6][0]++;
        const cacheConfig =
        /* istanbul ignore next */
        (cov_awcod1iwy().s[26]++, {
          ttl:
          /* istanbul ignore next */
          (cov_awcod1iwy().b[7][0]++, finalConfig.cacheTTL) ||
          /* istanbul ignore next */
          (cov_awcod1iwy().b[7][1]++, 900),
          prefix: 'query',
          serialize: true
        });
        /* istanbul ignore next */
        cov_awcod1iwy().s[27]++;
        _cachemanager.cacheManager.set(queryName, result, cacheConfig).catch(error => {
          /* istanbul ignore next */
          cov_awcod1iwy().f[8]++;
          cov_awcod1iwy().s[28]++;
          _logger.logger.warn(_logger.LogCategory.API, 'Failed to cache query result');
        });
      } else
      /* istanbul ignore next */
      {
        cov_awcod1iwy().b[6][1]++;
      }
      const duration =
      /* istanbul ignore next */
      (cov_awcod1iwy().s[29]++, Date.now() - startTime);
      /* istanbul ignore next */
      cov_awcod1iwy().s[30]++;
      _logger.logger.info(_logger.LogCategory.API, 'Query executed successfully');
      /* istanbul ignore next */
      cov_awcod1iwy().s[31]++;
      return result;
    } catch (error) {
      const duration =
      /* istanbul ignore next */
      (cov_awcod1iwy().s[32]++, Date.now() - startTime);
      /* istanbul ignore next */
      cov_awcod1iwy().s[33]++;
      _logger.logger.error(_logger.LogCategory.API, 'Query execution failed', error);
      /* istanbul ignore next */
      cov_awcod1iwy().s[34]++;
      throw error;
    }
  }
  /**
  * Ejecuta query con timeout
  */
  async executeWithTimeout(queryFn, timeoutMs) {
    /* istanbul ignore next */
    cov_awcod1iwy().f[9]++;
    cov_awcod1iwy().s[35]++;
    return Promise.race([queryFn(), new Promise((_, reject) => {
      /* istanbul ignore next */
      cov_awcod1iwy().f[10]++;
      cov_awcod1iwy().s[36]++;
      return setTimeout(() => {
        /* istanbul ignore next */
        cov_awcod1iwy().f[11]++;
        cov_awcod1iwy().s[37]++;
        return reject(new Error(`Query timeout after ${timeoutMs}ms`));
      }, timeoutMs);
    })]);
  }
  /**
  * Ejecuta múltiples queries en batch
  */
  async executeBatch(queries) {
    /* istanbul ignore next */
    cov_awcod1iwy().f[12]++;
    const results =
    /* istanbul ignore next */
    (cov_awcod1iwy().s[38]++, await Promise.allSettled(queries.map(async ({
      name,
      fn,
      config
    }) => {
      /* istanbul ignore next */
      cov_awcod1iwy().f[13]++;
      cov_awcod1iwy().s[39]++;
      return {
        name,
        result: await this.executeQuery(name, fn, config)
      };
    })));
    /* istanbul ignore next */
    cov_awcod1iwy().s[40]++;
    return results.map((result, index) => {
      /* istanbul ignore next */
      cov_awcod1iwy().f[14]++;
      cov_awcod1iwy().s[41]++;
      if (result.status === 'fulfilled') {
        /* istanbul ignore next */
        cov_awcod1iwy().b[8][0]++;
        cov_awcod1iwy().s[42]++;
        return result.value;
      } else {
        /* istanbul ignore next */
        cov_awcod1iwy().b[8][1]++;
        cov_awcod1iwy().s[43]++;
        return {
          name: queries[index].name,
          error: result.reason
        };
      }
    });
  }
  /**
  * Invalida cache de queries por patrón
  */
  async invalidateQueryCache(pattern) {
    /* istanbul ignore next */
    cov_awcod1iwy().f[15]++;
    cov_awcod1iwy().s[44]++;
    try {
      const cacheConfig =
      /* istanbul ignore next */
      (cov_awcod1iwy().s[45]++, {
        ttl: 0,
        prefix: 'query',
        serialize: true
      });
      /* istanbul ignore next */
      cov_awcod1iwy().s[46]++;
      await _cachemanager.cacheManager.invalidatePattern(pattern, cacheConfig);
      /* istanbul ignore next */
      cov_awcod1iwy().s[47]++;
      _logger.logger.info(_logger.LogCategory.API, 'Query cache invalidated');
    } catch (error) {
      /* istanbul ignore next */
      cov_awcod1iwy().s[48]++;
      _logger.logger.error(_logger.LogCategory.API, 'Failed to invalidate query cache', error);
    }
  }
}
const queryOptimizer =
/* istanbul ignore next */
(cov_awcod1iwy().s[49]++, QueryOptimizer.getInstance());
const OptimizedQueries =
/* istanbul ignore next */
(cov_awcod1iwy().s[50]++, {
  /**
  * Obtiene productos con cache optimizado
  */
  async getProducts(filters =
  /* istanbul ignore next */
  (cov_awcod1iwy().b[9][0]++, {})) {
    /* istanbul ignore next */
    cov_awcod1iwy().f[16]++;
    const cacheKey =
    /* istanbul ignore next */
    (cov_awcod1iwy().s[51]++, `products:${JSON.stringify(filters)}`);
    /* istanbul ignore next */
    cov_awcod1iwy().s[52]++;
    return queryOptimizer.executeQuery(cacheKey, async () => {
      /* istanbul ignore next */
      cov_awcod1iwy().f[17]++;
      cov_awcod1iwy().s[53]++;
      if (!_supabase.supabaseAdmin) {
        /* istanbul ignore next */
        cov_awcod1iwy().b[10][0]++;
        cov_awcod1iwy().s[54]++;
        throw new Error('Supabase admin client not available');
      } else
      /* istanbul ignore next */
      {
        cov_awcod1iwy().b[10][1]++;
      }
      let query =
      /* istanbul ignore next */
      (cov_awcod1iwy().s[55]++, _supabase.supabaseAdmin.from('products').select('*'));
      /* istanbul ignore next */
      cov_awcod1iwy().s[56]++;
      if (filters.category) {
        /* istanbul ignore next */
        cov_awcod1iwy().b[11][0]++;
        cov_awcod1iwy().s[57]++;
        query = query.eq('category_id', filters.category);
      } else
      /* istanbul ignore next */
      {
        cov_awcod1iwy().b[11][1]++;
      }
      cov_awcod1iwy().s[58]++;
      if (filters.brand) {
        /* istanbul ignore next */
        cov_awcod1iwy().b[12][0]++;
        cov_awcod1iwy().s[59]++;
        query = query.eq('brand', filters.brand);
      } else
      /* istanbul ignore next */
      {
        cov_awcod1iwy().b[12][1]++;
      }
      cov_awcod1iwy().s[60]++;
      if (filters.limit) {
        /* istanbul ignore next */
        cov_awcod1iwy().b[13][0]++;
        cov_awcod1iwy().s[61]++;
        query = query.limit(filters.limit);
      } else
      /* istanbul ignore next */
      {
        cov_awcod1iwy().b[13][1]++;
      }
      cov_awcod1iwy().s[62]++;
      if (filters.offset) {
        /* istanbul ignore next */
        cov_awcod1iwy().b[14][0]++;
        cov_awcod1iwy().s[63]++;
        query = query.range(filters.offset, filters.offset + (
        /* istanbul ignore next */
        (cov_awcod1iwy().b[15][0]++, filters.limit) ||
        /* istanbul ignore next */
        (cov_awcod1iwy().b[15][1]++, 10)) - 1);
      } else
      /* istanbul ignore next */
      {
        cov_awcod1iwy().b[14][1]++;
      }
      const {
        data,
        error
      } =
      /* istanbul ignore next */
      (cov_awcod1iwy().s[64]++, await query);
      /* istanbul ignore next */
      cov_awcod1iwy().s[65]++;
      if (error) {
        /* istanbul ignore next */
        cov_awcod1iwy().b[16][0]++;
        cov_awcod1iwy().s[66]++;
        throw new Error(`Products query failed: ${error.message}`);
      } else
      /* istanbul ignore next */
      {
        cov_awcod1iwy().b[16][1]++;
      }
      cov_awcod1iwy().s[67]++;
      return /* istanbul ignore next */(cov_awcod1iwy().b[17][0]++, data) ||
      /* istanbul ignore next */
      (cov_awcod1iwy().b[17][1]++, []);
    }, QUERY_CONFIGS.PRODUCTS);
  },
  /**
  * Obtiene órdenes de un usuario con cache
  */
  async getUserOrders(userId, limit =
  /* istanbul ignore next */
  (cov_awcod1iwy().b[18][0]++, 10)) {
    /* istanbul ignore next */
    cov_awcod1iwy().f[18]++;
    const cacheKey =
    /* istanbul ignore next */
    (cov_awcod1iwy().s[68]++, `user_orders:${userId}:${limit}`);
    /* istanbul ignore next */
    cov_awcod1iwy().s[69]++;
    return queryOptimizer.executeQuery(cacheKey, async () => {
      /* istanbul ignore next */
      cov_awcod1iwy().f[19]++;
      cov_awcod1iwy().s[70]++;
      if (!_supabase.supabaseAdmin) {
        /* istanbul ignore next */
        cov_awcod1iwy().b[19][0]++;
        cov_awcod1iwy().s[71]++;
        throw new Error('Supabase admin client not available');
      } else
      /* istanbul ignore next */
      {
        cov_awcod1iwy().b[19][1]++;
      }
      const {
        data,
        error
      } =
      /* istanbul ignore next */
      (cov_awcod1iwy().s[72]++, await _supabase.supabaseAdmin.from('orders').select(`
            *,
            order_items (
              *,
              products (
                id,
                name,
                price,
                image_url
              )
            )
          `).eq('user_id', userId).order('created_at', {
        ascending: false
      }).limit(limit));
      /* istanbul ignore next */
      cov_awcod1iwy().s[73]++;
      if (error) {
        /* istanbul ignore next */
        cov_awcod1iwy().b[20][0]++;
        cov_awcod1iwy().s[74]++;
        throw new Error(`User orders query failed: ${error.message}`);
      } else
      /* istanbul ignore next */
      {
        cov_awcod1iwy().b[20][1]++;
      }
      cov_awcod1iwy().s[75]++;
      return /* istanbul ignore next */(cov_awcod1iwy().b[21][0]++, data) ||
      /* istanbul ignore next */
      (cov_awcod1iwy().b[21][1]++, []);
    }, QUERY_CONFIGS.ORDERS);
  },
  /**
  * Obtiene estadísticas de productos
  */
  async getProductStats() {
    /* istanbul ignore next */
    cov_awcod1iwy().f[20]++;
    const cacheKey =
    /* istanbul ignore next */
    (cov_awcod1iwy().s[76]++, 'product_stats');
    /* istanbul ignore next */
    cov_awcod1iwy().s[77]++;
    return queryOptimizer.executeQuery(cacheKey, async () => {
      /* istanbul ignore next */
      cov_awcod1iwy().f[21]++;
      cov_awcod1iwy().s[78]++;
      if (!_supabase.supabaseAdmin) {
        /* istanbul ignore next */
        cov_awcod1iwy().b[22][0]++;
        cov_awcod1iwy().s[79]++;
        throw new Error('Supabase admin client not available');
      } else
      /* istanbul ignore next */
      {
        cov_awcod1iwy().b[22][1]++;
      }
      // Ejecutar múltiples queries en paralelo
      const [totalResult, categoryResult, topProductsResult] =
      /* istanbul ignore next */
      (cov_awcod1iwy().s[80]++, await Promise.all([_supabase.supabaseAdmin.from('products').select('id', {
        count: 'exact',
        head: true
      }), _supabase.supabaseAdmin.from('products').select('category_id, categories(name)').not('category_id', 'is', null), _supabase.supabaseAdmin.from('order_items').select(`
              product_id,
              quantity,
              products(id, name)
            `).limit(10)]));
      /* istanbul ignore next */
      cov_awcod1iwy().s[81]++;
      if (totalResult.error) {
        /* istanbul ignore next */
        cov_awcod1iwy().b[23][0]++;
        cov_awcod1iwy().s[82]++;
        throw new Error(`Total products query failed: ${totalResult.error.message}`);
      } else
      /* istanbul ignore next */
      {
        cov_awcod1iwy().b[23][1]++;
      }
      cov_awcod1iwy().s[83]++;
      if (categoryResult.error) {
        /* istanbul ignore next */
        cov_awcod1iwy().b[24][0]++;
        cov_awcod1iwy().s[84]++;
        throw new Error(`Category stats query failed: ${categoryResult.error.message}`);
      } else
      /* istanbul ignore next */
      {
        cov_awcod1iwy().b[24][1]++;
      }
      cov_awcod1iwy().s[85]++;
      if (topProductsResult.error) {
        /* istanbul ignore next */
        cov_awcod1iwy().b[25][0]++;
        cov_awcod1iwy().s[86]++;
        throw new Error(`Top products query failed: ${topProductsResult.error.message}`);
      } else
      /* istanbul ignore next */
      {
        cov_awcod1iwy().b[25][1]++;
      }
      // Procesar resultados
      const totalProducts =
      /* istanbul ignore next */
      (cov_awcod1iwy().s[87]++,
      /* istanbul ignore next */
      (cov_awcod1iwy().b[26][0]++, totalResult.count) ||
      /* istanbul ignore next */
      (cov_awcod1iwy().b[26][1]++, 0));
      const productsByCategory =
      /* istanbul ignore next */
      (cov_awcod1iwy().s[88]++,
      /* istanbul ignore next */
      (cov_awcod1iwy().b[27][0]++, categoryResult.data?.reduce((acc, item) => {
        /* istanbul ignore next */
        cov_awcod1iwy().f[22]++;
        const categoryName =
        /* istanbul ignore next */
        (cov_awcod1iwy().s[89]++,
        /* istanbul ignore next */
        (cov_awcod1iwy().b[28][0]++, item.categories?.name) ||
        /* istanbul ignore next */
        (cov_awcod1iwy().b[28][1]++, 'Sin categoría'));
        const existing =
        /* istanbul ignore next */
        (cov_awcod1iwy().s[90]++, acc.find(c => {
          /* istanbul ignore next */
          cov_awcod1iwy().f[23]++;
          cov_awcod1iwy().s[91]++;
          return c.category === categoryName;
        }));
        /* istanbul ignore next */
        cov_awcod1iwy().s[92]++;
        if (existing) {
          /* istanbul ignore next */
          cov_awcod1iwy().b[29][0]++;
          cov_awcod1iwy().s[93]++;
          existing.count++;
        } else {
          /* istanbul ignore next */
          cov_awcod1iwy().b[29][1]++;
          cov_awcod1iwy().s[94]++;
          acc.push({
            category: categoryName,
            count: 1
          });
        }
        /* istanbul ignore next */
        cov_awcod1iwy().s[95]++;
        return acc;
      }, [])) ||
      /* istanbul ignore next */
      (cov_awcod1iwy().b[27][1]++, []));
      const topProducts =
      /* istanbul ignore next */
      (cov_awcod1iwy().s[96]++,
      /* istanbul ignore next */
      (cov_awcod1iwy().b[30][0]++, topProductsResult.data?.reduce((acc, item) => {
        /* istanbul ignore next */
        cov_awcod1iwy().f[24]++;
        const productId =
        /* istanbul ignore next */
        (cov_awcod1iwy().s[97]++, item.product_id);
        const existing =
        /* istanbul ignore next */
        (cov_awcod1iwy().s[98]++, acc.find(p => {
          /* istanbul ignore next */
          cov_awcod1iwy().f[25]++;
          cov_awcod1iwy().s[99]++;
          return p.id === productId;
        }));
        /* istanbul ignore next */
        cov_awcod1iwy().s[100]++;
        if (existing) {
          /* istanbul ignore next */
          cov_awcod1iwy().b[31][0]++;
          cov_awcod1iwy().s[101]++;
          existing.sales += item.quantity;
        } else {
          /* istanbul ignore next */
          cov_awcod1iwy().b[31][1]++;
          cov_awcod1iwy().s[102]++;
          acc.push({
            id: productId,
            name:
            /* istanbul ignore next */
            (cov_awcod1iwy().b[32][0]++, item.products?.name) ||
            /* istanbul ignore next */
            (cov_awcod1iwy().b[32][1]++, 'Producto desconocido'),
            sales: item.quantity
          });
        }
        /* istanbul ignore next */
        cov_awcod1iwy().s[103]++;
        return acc;
      }, [])?.sort((a, b) => {
        /* istanbul ignore next */
        cov_awcod1iwy().f[26]++;
        cov_awcod1iwy().s[104]++;
        return b.sales - a.sales;
      }).slice(0, 5)) ||
      /* istanbul ignore next */
      (cov_awcod1iwy().b[30][1]++, []));
      /* istanbul ignore next */
      cov_awcod1iwy().s[105]++;
      return {
        totalProducts,
        productsByCategory,
        topProducts
      };
    }, QUERY_CONFIGS.ANALYTICS);
  },
  /**
  * Invalida cache de productos
  */
  async invalidateProductsCache() {
    /* istanbul ignore next */
    cov_awcod1iwy().f[27]++;
    cov_awcod1iwy().s[106]++;
    await queryOptimizer.invalidateQueryCache('products:*');
  },
  /**
  * Invalida cache de órdenes de un usuario
  */
  async invalidateUserOrdersCache(userId) {
    /* istanbul ignore next */
    cov_awcod1iwy().f[28]++;
    cov_awcod1iwy().s[107]++;
    await queryOptimizer.invalidateQueryCache(`user_orders:${userId}:*`);
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,