af09475ec133288b08842c7decf8b310
"use strict";

/* istanbul ignore next */
function cov_oi2hd4gvc() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\notifications\\[id]\\route.ts";
  var hash = "afac079cb9b2d2991d3f48cac50018c95458c882";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\notifications\\[id]\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 21,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 22
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 19
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 19
        }
      },
      "7": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 38
        }
      },
      "8": {
        start: {
          line: 23,
          column: 13
        },
        end: {
          line: 23,
          column: 27
        }
      },
      "9": {
        start: {
          line: 24,
          column: 20
        },
        end: {
          line: 24,
          column: 52
        }
      },
      "10": {
        start: {
          line: 25,
          column: 14
        },
        end: {
          line: 25,
          column: 44
        }
      },
      "11": {
        start: {
          line: 26,
          column: 21
        },
        end: {
          line: 26,
          column: 74
        }
      },
      "12": {
        start: {
          line: 27,
          column: 16
        },
        end: {
          line: 27,
          column: 63
        }
      },
      "13": {
        start: {
          line: 28,
          column: 17
        },
        end: {
          line: 28,
          column: 65
        }
      },
      "14": {
        start: {
          line: 32,
          column: 17
        },
        end: {
          line: 32,
          column: 123
        }
      },
      "15": {
        start: {
          line: 33,
          column: 27
        },
        end: {
          line: 49,
          column: 1
        }
      },
      "16": {
        start: {
          line: 53,
          column: 21
        },
        end: {
          line: 55,
          column: 2
        }
      },
      "17": {
        start: {
          line: 56,
          column: 33
        },
        end: {
          line: 80,
          column: 2
        }
      },
      "18": {
        start: {
          line: 85,
          column: 20
        },
        end: {
          line: 85,
          column: 43
        }
      },
      "19": {
        start: {
          line: 86,
          column: 4
        },
        end: {
          line: 91,
          column: 5
        }
      },
      "20": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 90,
          column: 10
        }
      },
      "21": {
        start: {
          line: 93,
          column: 30
        },
        end: {
          line: 93,
          column: 111
        }
      },
      "22": {
        start: {
          line: 94,
          column: 4
        },
        end: {
          line: 99,
          column: 5
        }
      },
      "23": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 98,
          column: 10
        }
      },
      "24": {
        start: {
          line: 100,
          column: 4
        },
        end: {
          line: 102,
          column: 6
        }
      },
      "25": {
        start: {
          line: 105,
          column: 28
        },
        end: {
          line: 117,
          column: 28
        }
      },
      "26": {
        start: {
          line: 118,
          column: 4
        },
        end: {
          line: 123,
          column: 5
        }
      },
      "27": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 121,
          column: 9
        }
      },
      "28": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 120,
          column: 58
        }
      },
      "29": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 122,
          column: 75
        }
      },
      "30": {
        start: {
          line: 124,
          column: 4
        },
        end: {
          line: 124,
          column: 16
        }
      },
      "31": {
        start: {
          line: 127,
          column: 28
        },
        end: {
          line: 142,
          column: 15
        }
      },
      "32": {
        start: {
          line: 143,
          column: 4
        },
        end: {
          line: 148,
          column: 5
        }
      },
      "33": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 146,
          column: 9
        }
      },
      "34": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 145,
          column: 58
        }
      },
      "35": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 147,
          column: 78
        }
      },
      "36": {
        start: {
          line: 150,
          column: 4
        },
        end: {
          line: 158,
          column: 7
        }
      },
      "37": {
        start: {
          line: 159,
          column: 4
        },
        end: {
          line: 159,
          column: 16
        }
      },
      "38": {
        start: {
          line: 163,
          column: 25
        },
        end: {
          line: 163,
          column: 54
        }
      },
      "39": {
        start: {
          line: 164,
          column: 22
        },
        end: {
          line: 164,
          column: 80
        }
      },
      "40": {
        start: {
          line: 165,
          column: 4
        },
        end: {
          line: 167,
          column: 5
        }
      },
      "41": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 166,
          column: 76
        }
      },
      "42": {
        start: {
          line: 169,
          column: 4
        },
        end: {
          line: 177,
          column: 7
        }
      },
      "43": {
        start: {
          line: 180,
          column: 4
        },
        end: {
          line: 182,
          column: 15
        }
      },
      "44": {
        start: {
          line: 185,
          column: 4
        },
        end: {
          line: 187,
          column: 15
        }
      },
      "45": {
        start: {
          line: 190,
          column: 4
        },
        end: {
          line: 192,
          column: 15
        }
      },
      "46": {
        start: {
          line: 195,
          column: 22
        },
        end: {
          line: 195,
          column: 32
        }
      },
      "47": {
        start: {
          line: 196,
          column: 4
        },
        end: {
          line: 276,
          column: 5
        }
      },
      "48": {
        start: {
          line: 198,
          column: 32
        },
        end: {
          line: 202,
          column: 36
        }
      },
      "49": {
        start: {
          line: 203,
          column: 8
        },
        end: {
          line: 211,
          column: 9
        }
      },
      "50": {
        start: {
          line: 204,
          column: 29
        },
        end: {
          line: 208,
          column: 14
        }
      },
      "51": {
        start: {
          line: 209,
          column: 12
        },
        end: {
          line: 209,
          column: 59
        }
      },
      "52": {
        start: {
          line: 210,
          column: 12
        },
        end: {
          line: 210,
          column: 28
        }
      },
      "53": {
        start: {
          line: 213,
          column: 33
        },
        end: {
          line: 213,
          column: 63
        }
      },
      "54": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 223,
          column: 9
        }
      },
      "55": {
        start: {
          line: 215,
          column: 34
        },
        end: {
          line: 219,
          column: 13
        }
      },
      "56": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 222,
          column: 15
        }
      },
      "57": {
        start: {
          line: 225,
          column: 27
        },
        end: {
          line: 225,
          column: 52
        }
      },
      "58": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 235,
          column: 9
        }
      },
      "59": {
        start: {
          line: 227,
          column: 34
        },
        end: {
          line: 231,
          column: 13
        }
      },
      "60": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 234,
          column: 15
        }
      },
      "61": {
        start: {
          line: 237,
          column: 29
        },
        end: {
          line: 237,
          column: 80
        }
      },
      "62": {
        start: {
          line: 239,
          column: 8
        },
        end: {
          line: 245,
          column: 11
        }
      },
      "63": {
        start: {
          line: 246,
          column: 25
        },
        end: {
          line: 250,
          column: 9
        }
      },
      "64": {
        start: {
          line: 251,
          column: 29
        },
        end: {
          line: 251,
          column: 64
        }
      },
      "65": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 252,
          column: 59
        }
      },
      "66": {
        start: {
          line: 253,
          column: 8
        },
        end: {
          line: 253,
          column: 28
        }
      },
      "67": {
        start: {
          line: 255,
          column: 8
        },
        end: {
          line: 258,
          column: 11
        }
      },
      "68": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 266,
          column: 11
        }
      },
      "69": {
        start: {
          line: 267,
          column: 27
        },
        end: {
          line: 267,
          column: 111
        }
      },
      "70": {
        start: {
          line: 268,
          column: 30
        },
        end: {
          line: 272,
          column: 9
        }
      },
      "71": {
        start: {
          line: 273,
          column: 8
        },
        end: {
          line: 275,
          column: 11
        }
      },
      "72": {
        start: {
          line: 279,
          column: 22
        },
        end: {
          line: 279,
          column: 32
        }
      },
      "73": {
        start: {
          line: 280,
          column: 4
        },
        end: {
          line: 416,
          column: 5
        }
      },
      "74": {
        start: {
          line: 282,
          column: 32
        },
        end: {
          line: 286,
          column: 39
        }
      },
      "75": {
        start: {
          line: 287,
          column: 8
        },
        end: {
          line: 295,
          column: 9
        }
      },
      "76": {
        start: {
          line: 288,
          column: 29
        },
        end: {
          line: 292,
          column: 14
        }
      },
      "77": {
        start: {
          line: 293,
          column: 12
        },
        end: {
          line: 293,
          column: 59
        }
      },
      "78": {
        start: {
          line: 294,
          column: 12
        },
        end: {
          line: 294,
          column: 28
        }
      },
      "79": {
        start: {
          line: 297,
          column: 33
        },
        end: {
          line: 297,
          column: 63
        }
      },
      "80": {
        start: {
          line: 298,
          column: 8
        },
        end: {
          line: 307,
          column: 9
        }
      },
      "81": {
        start: {
          line: 299,
          column: 34
        },
        end: {
          line: 303,
          column: 13
        }
      },
      "82": {
        start: {
          line: 304,
          column: 12
        },
        end: {
          line: 306,
          column: 15
        }
      },
      "83": {
        start: {
          line: 309,
          column: 27
        },
        end: {
          line: 309,
          column: 52
        }
      },
      "84": {
        start: {
          line: 310,
          column: 8
        },
        end: {
          line: 319,
          column: 9
        }
      },
      "85": {
        start: {
          line: 311,
          column: 34
        },
        end: {
          line: 315,
          column: 13
        }
      },
      "86": {
        start: {
          line: 316,
          column: 12
        },
        end: {
          line: 318,
          column: 15
        }
      },
      "87": {
        start: {
          line: 321,
          column: 21
        },
        end: {
          line: 321,
          column: 41
        }
      },
      "88": {
        start: {
          line: 322,
          column: 33
        },
        end: {
          line: 322,
          column: 53
        }
      },
      "89": {
        start: {
          line: 323,
          column: 23
        },
        end: {
          line: 323,
          column: 49
        }
      },
      "90": {
        start: {
          line: 325,
          column: 8
        },
        end: {
          line: 363,
          column: 9
        }
      },
      "91": {
        start: {
          line: 327,
          column: 12
        },
        end: {
          line: 346,
          column: 13
        }
      },
      "92": {
        start: {
          line: 329,
          column: 20
        },
        end: {
          line: 329,
          column: 104
        }
      },
      "93": {
        start: {
          line: 330,
          column: 20
        },
        end: {
          line: 330,
          column: 26
        }
      },
      "94": {
        start: {
          line: 332,
          column: 20
        },
        end: {
          line: 332,
          column: 106
        }
      },
      "95": {
        start: {
          line: 333,
          column: 20
        },
        end: {
          line: 333,
          column: 26
        }
      },
      "96": {
        start: {
          line: 335,
          column: 20
        },
        end: {
          line: 335,
          column: 113
        }
      },
      "97": {
        start: {
          line: 336,
          column: 20
        },
        end: {
          line: 336,
          column: 26
        }
      },
      "98": {
        start: {
          line: 338,
          column: 42
        },
        end: {
          line: 342,
          column: 21
        }
      },
      "99": {
        start: {
          line: 343,
          column: 20
        },
        end: {
          line: 345,
          column: 23
        }
      },
      "100": {
        start: {
          line: 348,
          column: 12
        },
        end: {
          line: 354,
          column: 15
        }
      },
      "101": {
        start: {
          line: 355,
          column: 29
        },
        end: {
          line: 359,
          column: 13
        }
      },
      "102": {
        start: {
          line: 360,
          column: 33
        },
        end: {
          line: 360,
          column: 68
        }
      },
      "103": {
        start: {
          line: 361,
          column: 12
        },
        end: {
          line: 361,
          column: 63
        }
      },
      "104": {
        start: {
          line: 362,
          column: 12
        },
        end: {
          line: 362,
          column: 32
        }
      },
      "105": {
        start: {
          line: 365,
          column: 33
        },
        end: {
          line: 365,
          column: 73
        }
      },
      "106": {
        start: {
          line: 366,
          column: 8
        },
        end: {
          line: 375,
          column: 9
        }
      },
      "107": {
        start: {
          line: 367,
          column: 34
        },
        end: {
          line: 371,
          column: 13
        }
      },
      "108": {
        start: {
          line: 372,
          column: 12
        },
        end: {
          line: 374,
          column: 15
        }
      },
      "109": {
        start: {
          line: 377,
          column: 36
        },
        end: {
          line: 377,
          column: 128
        }
      },
      "110": {
        start: {
          line: 379,
          column: 8
        },
        end: {
          line: 385,
          column: 11
        }
      },
      "111": {
        start: {
          line: 386,
          column: 25
        },
        end: {
          line: 390,
          column: 9
        }
      },
      "112": {
        start: {
          line: 391,
          column: 29
        },
        end: {
          line: 391,
          column: 64
        }
      },
      "113": {
        start: {
          line: 392,
          column: 8
        },
        end: {
          line: 392,
          column: 59
        }
      },
      "114": {
        start: {
          line: 393,
          column: 8
        },
        end: {
          line: 393,
          column: 28
        }
      },
      "115": {
        start: {
          line: 395,
          column: 8
        },
        end: {
          line: 398,
          column: 11
        }
      },
      "116": {
        start: {
          line: 400,
          column: 8
        },
        end: {
          line: 406,
          column: 11
        }
      },
      "117": {
        start: {
          line: 407,
          column: 27
        },
        end: {
          line: 407,
          column: 111
        }
      },
      "118": {
        start: {
          line: 408,
          column: 30
        },
        end: {
          line: 412,
          column: 9
        }
      },
      "119": {
        start: {
          line: 413,
          column: 8
        },
        end: {
          line: 415,
          column: 11
        }
      },
      "120": {
        start: {
          line: 419,
          column: 22
        },
        end: {
          line: 419,
          column: 32
        }
      },
      "121": {
        start: {
          line: 420,
          column: 4
        },
        end: {
          line: 500,
          column: 5
        }
      },
      "122": {
        start: {
          line: 422,
          column: 32
        },
        end: {
          line: 426,
          column: 39
        }
      },
      "123": {
        start: {
          line: 427,
          column: 8
        },
        end: {
          line: 435,
          column: 9
        }
      },
      "124": {
        start: {
          line: 428,
          column: 29
        },
        end: {
          line: 432,
          column: 14
        }
      },
      "125": {
        start: {
          line: 433,
          column: 12
        },
        end: {
          line: 433,
          column: 59
        }
      },
      "126": {
        start: {
          line: 434,
          column: 12
        },
        end: {
          line: 434,
          column: 28
        }
      },
      "127": {
        start: {
          line: 437,
          column: 33
        },
        end: {
          line: 437,
          column: 63
        }
      },
      "128": {
        start: {
          line: 438,
          column: 8
        },
        end: {
          line: 447,
          column: 9
        }
      },
      "129": {
        start: {
          line: 439,
          column: 34
        },
        end: {
          line: 443,
          column: 13
        }
      },
      "130": {
        start: {
          line: 444,
          column: 12
        },
        end: {
          line: 446,
          column: 15
        }
      },
      "131": {
        start: {
          line: 449,
          column: 27
        },
        end: {
          line: 449,
          column: 52
        }
      },
      "132": {
        start: {
          line: 450,
          column: 8
        },
        end: {
          line: 459,
          column: 9
        }
      },
      "133": {
        start: {
          line: 451,
          column: 34
        },
        end: {
          line: 455,
          column: 13
        }
      },
      "134": {
        start: {
          line: 456,
          column: 12
        },
        end: {
          line: 458,
          column: 15
        }
      },
      "135": {
        start: {
          line: 461,
          column: 8
        },
        end: {
          line: 461,
          column: 78
        }
      },
      "136": {
        start: {
          line: 463,
          column: 8
        },
        end: {
          line: 469,
          column: 11
        }
      },
      "137": {
        start: {
          line: 470,
          column: 25
        },
        end: {
          line: 474,
          column: 9
        }
      },
      "138": {
        start: {
          line: 475,
          column: 29
        },
        end: {
          line: 475,
          column: 64
        }
      },
      "139": {
        start: {
          line: 476,
          column: 8
        },
        end: {
          line: 476,
          column: 59
        }
      },
      "140": {
        start: {
          line: 477,
          column: 8
        },
        end: {
          line: 477,
          column: 28
        }
      },
      "141": {
        start: {
          line: 479,
          column: 8
        },
        end: {
          line: 482,
          column: 11
        }
      },
      "142": {
        start: {
          line: 484,
          column: 8
        },
        end: {
          line: 490,
          column: 11
        }
      },
      "143": {
        start: {
          line: 491,
          column: 27
        },
        end: {
          line: 491,
          column: 111
        }
      },
      "144": {
        start: {
          line: 492,
          column: 30
        },
        end: {
          line: 496,
          column: 9
        }
      },
      "145": {
        start: {
          line: 497,
          column: 8
        },
        end: {
          line: 499,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 18
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 15
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 15
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "validateAdminAuth",
        decl: {
          start: {
            line: 84,
            column: 15
          },
          end: {
            line: 84,
            column: 32
          }
        },
        loc: {
          start: {
            line: 84,
            column: 35
          },
          end: {
            line: 103,
            column: 1
          }
        },
        line: 84
      },
      "5": {
        name: "getNotificationById",
        decl: {
          start: {
            line: 104,
            column: 15
          },
          end: {
            line: 104,
            column: 34
          }
        },
        loc: {
          start: {
            line: 104,
            column: 39
          },
          end: {
            line: 125,
            column: 1
          }
        },
        line: 104
      },
      "6": {
        name: "updateNotification",
        decl: {
          start: {
            line: 126,
            column: 15
          },
          end: {
            line: 126,
            column: 33
          }
        },
        loc: {
          start: {
            line: 126,
            column: 58
          },
          end: {
            line: 160,
            column: 1
          }
        },
        line: 126
      },
      "7": {
        name: "deleteNotification",
        decl: {
          start: {
            line: 161,
            column: 15
          },
          end: {
            line: 161,
            column: 33
          }
        },
        loc: {
          start: {
            line: 161,
            column: 46
          },
          end: {
            line: 178,
            column: 1
          }
        },
        line: 161
      },
      "8": {
        name: "markAsRead",
        decl: {
          start: {
            line: 179,
            column: 15
          },
          end: {
            line: 179,
            column: 25
          }
        },
        loc: {
          start: {
            line: 179,
            column: 38
          },
          end: {
            line: 183,
            column: 1
          }
        },
        line: 179
      },
      "9": {
        name: "markAsUnread",
        decl: {
          start: {
            line: 184,
            column: 15
          },
          end: {
            line: 184,
            column: 27
          }
        },
        loc: {
          start: {
            line: 184,
            column: 40
          },
          end: {
            line: 188,
            column: 1
          }
        },
        line: 184
      },
      "10": {
        name: "archiveNotification",
        decl: {
          start: {
            line: 189,
            column: 15
          },
          end: {
            line: 189,
            column: 34
          }
        },
        loc: {
          start: {
            line: 189,
            column: 47
          },
          end: {
            line: 193,
            column: 1
          }
        },
        line: 189
      },
      "11": {
        name: "GET",
        decl: {
          start: {
            line: 194,
            column: 15
          },
          end: {
            line: 194,
            column: 18
          }
        },
        loc: {
          start: {
            line: 194,
            column: 40
          },
          end: {
            line: 277,
            column: 1
          }
        },
        line: 194
      },
      "12": {
        name: "PUT",
        decl: {
          start: {
            line: 278,
            column: 15
          },
          end: {
            line: 278,
            column: 18
          }
        },
        loc: {
          start: {
            line: 278,
            column: 40
          },
          end: {
            line: 417,
            column: 1
          }
        },
        line: 278
      },
      "13": {
        name: "DELETE",
        decl: {
          start: {
            line: 418,
            column: 15
          },
          end: {
            line: 418,
            column: 21
          }
        },
        loc: {
          start: {
            line: 418,
            column: 43
          },
          end: {
            line: 501,
            column: 1
          }
        },
        line: 418
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 86,
            column: 4
          },
          end: {
            line: 91,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 4
          },
          end: {
            line: 91,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "1": {
        loc: {
          start: {
            line: 94,
            column: 4
          },
          end: {
            line: 99,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 4
          },
          end: {
            line: 99,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "2": {
        loc: {
          start: {
            line: 118,
            column: 4
          },
          end: {
            line: 123,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 118,
            column: 4
          },
          end: {
            line: 123,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 118
      },
      "3": {
        loc: {
          start: {
            line: 119,
            column: 8
          },
          end: {
            line: 121,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 8
          },
          end: {
            line: 121,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 119
      },
      "4": {
        loc: {
          start: {
            line: 143,
            column: 4
          },
          end: {
            line: 148,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 143,
            column: 4
          },
          end: {
            line: 148,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 143
      },
      "5": {
        loc: {
          start: {
            line: 144,
            column: 8
          },
          end: {
            line: 146,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 144,
            column: 8
          },
          end: {
            line: 146,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 144
      },
      "6": {
        loc: {
          start: {
            line: 165,
            column: 4
          },
          end: {
            line: 167,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 165,
            column: 4
          },
          end: {
            line: 167,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 165
      },
      "7": {
        loc: {
          start: {
            line: 203,
            column: 8
          },
          end: {
            line: 211,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 203,
            column: 8
          },
          end: {
            line: 211,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 203
      },
      "8": {
        loc: {
          start: {
            line: 214,
            column: 8
          },
          end: {
            line: 223,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 214,
            column: 8
          },
          end: {
            line: 223,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 214
      },
      "9": {
        loc: {
          start: {
            line: 226,
            column: 8
          },
          end: {
            line: 235,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 226,
            column: 8
          },
          end: {
            line: 235,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 226
      },
      "10": {
        loc: {
          start: {
            line: 263,
            column: 24
          },
          end: {
            line: 263,
            column: 108
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 263,
            column: 99
          },
          end: {
            line: 263,
            column: 102
          }
        }, {
          start: {
            line: 263,
            column: 105
          },
          end: {
            line: 263,
            column: 108
          }
        }],
        line: 263
      },
      "11": {
        loc: {
          start: {
            line: 263,
            column: 24
          },
          end: {
            line: 263,
            column: 96
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 263,
            column: 24
          },
          end: {
            line: 263,
            column: 46
          }
        }, {
          start: {
            line: 263,
            column: 50
          },
          end: {
            line: 263,
            column: 96
          }
        }],
        line: 263
      },
      "12": {
        loc: {
          start: {
            line: 265,
            column: 19
          },
          end: {
            line: 265,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 265,
            column: 44
          },
          end: {
            line: 265,
            column: 57
          }
        }, {
          start: {
            line: 265,
            column: 60
          },
          end: {
            line: 265,
            column: 75
          }
        }],
        line: 265
      },
      "13": {
        loc: {
          start: {
            line: 267,
            column: 27
          },
          end: {
            line: 267,
            column: 111
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 267,
            column: 102
          },
          end: {
            line: 267,
            column: 105
          }
        }, {
          start: {
            line: 267,
            column: 108
          },
          end: {
            line: 267,
            column: 111
          }
        }],
        line: 267
      },
      "14": {
        loc: {
          start: {
            line: 267,
            column: 27
          },
          end: {
            line: 267,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 267,
            column: 27
          },
          end: {
            line: 267,
            column: 49
          }
        }, {
          start: {
            line: 267,
            column: 53
          },
          end: {
            line: 267,
            column: 99
          }
        }],
        line: 267
      },
      "15": {
        loc: {
          start: {
            line: 271,
            column: 19
          },
          end: {
            line: 271,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 271,
            column: 44
          },
          end: {
            line: 271,
            column: 57
          }
        }, {
          start: {
            line: 271,
            column: 60
          },
          end: {
            line: 271,
            column: 88
          }
        }],
        line: 271
      },
      "16": {
        loc: {
          start: {
            line: 287,
            column: 8
          },
          end: {
            line: 295,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 287,
            column: 8
          },
          end: {
            line: 295,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 287
      },
      "17": {
        loc: {
          start: {
            line: 298,
            column: 8
          },
          end: {
            line: 307,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 298,
            column: 8
          },
          end: {
            line: 307,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 298
      },
      "18": {
        loc: {
          start: {
            line: 310,
            column: 8
          },
          end: {
            line: 319,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 310,
            column: 8
          },
          end: {
            line: 319,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 310
      },
      "19": {
        loc: {
          start: {
            line: 325,
            column: 8
          },
          end: {
            line: 363,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 325,
            column: 8
          },
          end: {
            line: 363,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 325
      },
      "20": {
        loc: {
          start: {
            line: 327,
            column: 12
          },
          end: {
            line: 346,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 328,
            column: 16
          },
          end: {
            line: 330,
            column: 26
          }
        }, {
          start: {
            line: 331,
            column: 16
          },
          end: {
            line: 333,
            column: 26
          }
        }, {
          start: {
            line: 334,
            column: 16
          },
          end: {
            line: 336,
            column: 26
          }
        }, {
          start: {
            line: 337,
            column: 16
          },
          end: {
            line: 345,
            column: 23
          }
        }],
        line: 327
      },
      "21": {
        loc: {
          start: {
            line: 366,
            column: 8
          },
          end: {
            line: 375,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 366,
            column: 8
          },
          end: {
            line: 375,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 366
      },
      "22": {
        loc: {
          start: {
            line: 403,
            column: 24
          },
          end: {
            line: 403,
            column: 108
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 403,
            column: 99
          },
          end: {
            line: 403,
            column: 102
          }
        }, {
          start: {
            line: 403,
            column: 105
          },
          end: {
            line: 403,
            column: 108
          }
        }],
        line: 403
      },
      "23": {
        loc: {
          start: {
            line: 403,
            column: 24
          },
          end: {
            line: 403,
            column: 96
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 403,
            column: 24
          },
          end: {
            line: 403,
            column: 46
          }
        }, {
          start: {
            line: 403,
            column: 50
          },
          end: {
            line: 403,
            column: 96
          }
        }],
        line: 403
      },
      "24": {
        loc: {
          start: {
            line: 405,
            column: 19
          },
          end: {
            line: 405,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 405,
            column: 44
          },
          end: {
            line: 405,
            column: 57
          }
        }, {
          start: {
            line: 405,
            column: 60
          },
          end: {
            line: 405,
            column: 75
          }
        }],
        line: 405
      },
      "25": {
        loc: {
          start: {
            line: 407,
            column: 27
          },
          end: {
            line: 407,
            column: 111
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 407,
            column: 102
          },
          end: {
            line: 407,
            column: 105
          }
        }, {
          start: {
            line: 407,
            column: 108
          },
          end: {
            line: 407,
            column: 111
          }
        }],
        line: 407
      },
      "26": {
        loc: {
          start: {
            line: 407,
            column: 27
          },
          end: {
            line: 407,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 407,
            column: 27
          },
          end: {
            line: 407,
            column: 49
          }
        }, {
          start: {
            line: 407,
            column: 53
          },
          end: {
            line: 407,
            column: 99
          }
        }],
        line: 407
      },
      "27": {
        loc: {
          start: {
            line: 411,
            column: 19
          },
          end: {
            line: 411,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 411,
            column: 44
          },
          end: {
            line: 411,
            column: 57
          }
        }, {
          start: {
            line: 411,
            column: 60
          },
          end: {
            line: 411,
            column: 88
          }
        }],
        line: 411
      },
      "28": {
        loc: {
          start: {
            line: 427,
            column: 8
          },
          end: {
            line: 435,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 427,
            column: 8
          },
          end: {
            line: 435,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 427
      },
      "29": {
        loc: {
          start: {
            line: 438,
            column: 8
          },
          end: {
            line: 447,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 438,
            column: 8
          },
          end: {
            line: 447,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 438
      },
      "30": {
        loc: {
          start: {
            line: 450,
            column: 8
          },
          end: {
            line: 459,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 450,
            column: 8
          },
          end: {
            line: 459,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 450
      },
      "31": {
        loc: {
          start: {
            line: 487,
            column: 24
          },
          end: {
            line: 487,
            column: 108
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 487,
            column: 99
          },
          end: {
            line: 487,
            column: 102
          }
        }, {
          start: {
            line: 487,
            column: 105
          },
          end: {
            line: 487,
            column: 108
          }
        }],
        line: 487
      },
      "32": {
        loc: {
          start: {
            line: 487,
            column: 24
          },
          end: {
            line: 487,
            column: 96
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 487,
            column: 24
          },
          end: {
            line: 487,
            column: 46
          }
        }, {
          start: {
            line: 487,
            column: 50
          },
          end: {
            line: 487,
            column: 96
          }
        }],
        line: 487
      },
      "33": {
        loc: {
          start: {
            line: 489,
            column: 19
          },
          end: {
            line: 489,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 489,
            column: 44
          },
          end: {
            line: 489,
            column: 57
          }
        }, {
          start: {
            line: 489,
            column: 60
          },
          end: {
            line: 489,
            column: 75
          }
        }],
        line: 489
      },
      "34": {
        loc: {
          start: {
            line: 491,
            column: 27
          },
          end: {
            line: 491,
            column: 111
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 491,
            column: 102
          },
          end: {
            line: 491,
            column: 105
          }
        }, {
          start: {
            line: 491,
            column: 108
          },
          end: {
            line: 491,
            column: 111
          }
        }],
        line: 491
      },
      "35": {
        loc: {
          start: {
            line: 491,
            column: 27
          },
          end: {
            line: 491,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 491,
            column: 27
          },
          end: {
            line: 491,
            column: 49
          }
        }, {
          start: {
            line: 491,
            column: 53
          },
          end: {
            line: 491,
            column: 99
          }
        }],
        line: 491
      },
      "36": {
        loc: {
          start: {
            line: 495,
            column: 19
          },
          end: {
            line: 495,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 495,
            column: 44
          },
          end: {
            line: 495,
            column: 57
          }
        }, {
          start: {
            line: 495,
            column: 60
          },
          end: {
            line: 495,
            column: 88
          }
        }],
        line: 495
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0, 0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\notifications\\[id]\\route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\r\nimport { z } from 'zod';\r\nimport { createClient } from '@supabase/supabase-js';\r\nimport { auth } from '@/auth';\r\nimport { checkRateLimit } from '@/lib/enterprise/rate-limiter';\r\nimport { logger, LogLevel, LogCategory } from '@/lib/enterprise/logger';\r\nimport { metricsCollector } from '@/lib/enterprise/metrics';\r\n\r\n// ===================================\r\n// CONFIGURACI\xD3N\r\n// ===================================\r\nconst supabase = createClient(\r\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\r\n  process.env.SUPABASE_SERVICE_ROLE_KEY!\r\n);\r\n\r\nconst RATE_LIMIT_CONFIGS = {\r\n  admin: {\r\n    windowMs: 15 * 60 * 1000, // 15 minutos\r\n    maxRequests: 100,\r\n    message: 'Demasiadas solicitudes administrativas'\r\n  },\r\n  update: {\r\n    windowMs: 60 * 1000, // 1 minuto\r\n    maxRequests: 20,\r\n    message: 'Demasiadas actualizaciones de notificaci\xF3n'\r\n  },\r\n  delete: {\r\n    windowMs: 60 * 1000, // 1 minuto\r\n    maxRequests: 10,\r\n    message: 'Demasiadas eliminaciones de notificaci\xF3n'\r\n  }\r\n};\r\n\r\n// ===================================\r\n// ESQUEMAS DE VALIDACI\xD3N\r\n// ===================================\r\nconst ParamsSchema = z.object({\r\n  id: z.string().uuid('ID de notificaci\xF3n inv\xE1lido')\r\n});\r\n\r\nconst UpdateNotificationSchema = z.object({\r\n  title: z.string().min(1).max(200).optional(),\r\n  message: z.string().min(1).max(1000).optional(),\r\n  type: z.enum(['info', 'warning', 'error', 'success']).optional(),\r\n  priority: z.enum(['low', 'medium', 'high', 'urgent']).optional(),\r\n  status: z.enum(['read', 'unread', 'archived']).optional(),\r\n  action_url: z.string().url().optional(),\r\n  action_label: z.string().max(50).optional(),\r\n  expires_at: z.string().datetime().optional().nullable(),\r\n  metadata: z.record(z.any()).optional()\r\n});\r\n\r\n// ===================================\r\n// TIPOS\r\n// ===================================\r\ninterface ApiResponse<T> {\r\n  data: T;\r\n  success: boolean;\r\n  message?: string;\r\n  error?: string;\r\n}\r\n\r\ninterface NotificationData {\r\n  id: string;\r\n  title: string;\r\n  message: string;\r\n  type: 'info' | 'warning' | 'error' | 'success';\r\n  priority: 'low' | 'medium' | 'high' | 'urgent';\r\n  status: 'read' | 'unread' | 'archived';\r\n  recipient_type: 'user' | 'admin' | 'all';\r\n  recipient_id?: string;\r\n  action_url?: string;\r\n  action_label?: string;\r\n  expires_at?: string;\r\n  metadata?: Record<string, any>;\r\n  created_at: string;\r\n  updated_at: string;\r\n  created_by: string;\r\n  recipient?: {\r\n    id: string;\r\n    email: string;\r\n    full_name: string;\r\n  };\r\n  creator?: {\r\n    id: string;\r\n    email: string;\r\n    full_name: string;\r\n  };\r\n}\r\n\r\n// ===================================\r\n// FUNCIONES AUXILIARES\r\n// ===================================\r\nasync function validateAdminAuth() {\r\n  const session = await auth();\r\n  \r\n  if (!session?.user) {\r\n    return { error: 'No autorizado', status: 401 };\r\n  }\r\n\r\n  // Verificar rol de administrador\r\n  const { data: profile } = await supabase\r\n    .from('profiles')\r\n    .select('role')\r\n    .eq('id', session.user.id)\r\n    .single();\r\n\r\n  if (profile?.role !== 'admin') {\r\n    return { error: 'Acceso denegado', status: 403 };\r\n  }\r\n\r\n  return { userId: session.user.id };\r\n}\r\n\r\nasync function getNotificationById(id: string): Promise<NotificationData> {\r\n  const { data, error } = await supabase\r\n    .from('notifications')\r\n    .select(`\r\n      *,\r\n      recipient:profiles!notifications_recipient_id_fkey(\r\n        id,\r\n        email,\r\n        full_name\r\n      ),\r\n      creator:profiles!notifications_created_by_fkey(\r\n        id,\r\n        email,\r\n        full_name\r\n      )\r\n    `)\r\n    .eq('id', id)\r\n    .single();\r\n\r\n  if (error) {\r\n    if (error.code === 'PGRST116') {\r\n      throw new Error('Notificaci\xF3n no encontrada');\r\n    }\r\n    throw new Error(`Error al obtener notificaci\xF3n: ${error.message}`);\r\n  }\r\n\r\n  return data;\r\n}\r\n\r\nasync function updateNotification(\r\n  id: string,\r\n  updateData: z.infer<typeof UpdateNotificationSchema>,\r\n  userId: string\r\n): Promise<NotificationData> {\r\n  const { data, error } = await supabase\r\n    .from('notifications')\r\n    .update({\r\n      ...updateData,\r\n      updated_at: new Date().toISOString()\r\n    })\r\n    .eq('id', id)\r\n    .select(`\r\n      *,\r\n      recipient:profiles!notifications_recipient_id_fkey(\r\n        id,\r\n        email,\r\n        full_name\r\n      ),\r\n      creator:profiles!notifications_created_by_fkey(\r\n        id,\r\n        email,\r\n        full_name\r\n      )\r\n    `)\r\n    .single();\r\n\r\n  if (error) {\r\n    if (error.code === 'PGRST116') {\r\n      throw new Error('Notificaci\xF3n no encontrada');\r\n    }\r\n    throw new Error(`Error al actualizar notificaci\xF3n: ${error.message}`);\r\n  }\r\n\r\n  // Registrar auditor\xEDa\r\n  await supabase\r\n    .from('audit_logs')\r\n    .insert({\r\n      table_name: 'notifications',\r\n      record_id: id,\r\n      action: 'UPDATE',\r\n      old_values: null, // Se podr\xEDa implementar para guardar valores anteriores\r\n      new_values: updateData,\r\n      user_id: userId,\r\n      created_at: new Date().toISOString()\r\n    });\r\n\r\n  return data;\r\n}\r\n\r\nasync function deleteNotification(id: string, userId: string): Promise<void> {\r\n  // Primero obtener la notificaci\xF3n para auditor\xEDa\r\n  const notification = await getNotificationById(id);\r\n\r\n  const { error } = await supabase\r\n    .from('notifications')\r\n    .delete()\r\n    .eq('id', id);\r\n\r\n  if (error) {\r\n    throw new Error(`Error al eliminar notificaci\xF3n: ${error.message}`);\r\n  }\r\n\r\n  // Registrar auditor\xEDa\r\n  await supabase\r\n    .from('audit_logs')\r\n    .insert({\r\n      table_name: 'notifications',\r\n      record_id: id,\r\n      action: 'DELETE',\r\n      old_values: notification,\r\n      new_values: null,\r\n      user_id: userId,\r\n      created_at: new Date().toISOString()\r\n    });\r\n}\r\n\r\nasync function markAsRead(id: string, userId: string): Promise<NotificationData> {\r\n  return updateNotification(id, { status: 'read' }, userId);\r\n}\r\n\r\nasync function markAsUnread(id: string, userId: string): Promise<NotificationData> {\r\n  return updateNotification(id, { status: 'unread' }, userId);\r\n}\r\n\r\nasync function archiveNotification(id: string, userId: string): Promise<NotificationData> {\r\n  return updateNotification(id, { status: 'archived' }, userId);\r\n}\r\n\r\n// ===================================\r\n// GET - Obtener notificaci\xF3n por ID\r\n// ===================================\r\nexport async function GET(\r\n  request: NextRequest,\r\n  { params }: { params: { id: string } }\r\n) {\r\n  const startTime = Date.now();\r\n\r\n  try {\r\n    // Rate limiting\r\n    const rateLimitResult = await checkRateLimit(\r\n      request,\r\n      {\r\n        windowMs: RATE_LIMIT_CONFIGS.admin.windowMs,\r\n        maxRequests: RATE_LIMIT_CONFIGS.admin.maxRequests,\r\n        message: RATE_LIMIT_CONFIGS.admin.message\r\n      },\r\n      'admin-notification-get'\r\n    );\r\n\r\n    if (!rateLimitResult.success) {\r\n      const response = NextResponse.json(\r\n        { error: rateLimitResult.message },\r\n        { status: 429 }\r\n      );\r\n      addRateLimitHeaders(response, rateLimitResult);\r\n      return response;\r\n    }\r\n\r\n    // Validar par\xE1metros\r\n    const validationResult = ParamsSchema.safeParse(params);\r\n    if (!validationResult.success) {\r\n      const errorResponse: ApiResponse<null> = {\r\n        data: null,\r\n        success: false,\r\n        error: 'ID de notificaci\xF3n inv\xE1lido',\r\n      };\r\n      return NextResponse.json(errorResponse, { status: 400 });\r\n    }\r\n\r\n    // Validar autenticaci\xF3n admin\r\n    const authResult = await validateAdminAuth();\r\n    if (authResult.error) {\r\n      const errorResponse: ApiResponse<null> = {\r\n        data: null,\r\n        success: false,\r\n        error: authResult.error,\r\n      };\r\n      return NextResponse.json(errorResponse, { status: authResult.status });\r\n    }\r\n\r\n    // Obtener notificaci\xF3n\r\n    const notification = await getNotificationById(validationResult.data.id);\r\n\r\n    // Registrar m\xE9tricas\r\n    metricsCollector.recordApiCall({\r\n      endpoint: '/api/admin/notifications/[id]',\r\n      method: 'GET',\r\n      statusCode: 200,\r\n      responseTime: Date.now() - startTime,\r\n      userId: authResult.userId\r\n    });\r\n\r\n    const response: ApiResponse<NotificationData> = {\r\n      data: notification,\r\n      success: true,\r\n      message: 'Notificaci\xF3n obtenida exitosamente'\r\n    };\r\n\r\n    const nextResponse = NextResponse.json(response);\r\n    addRateLimitHeaders(nextResponse, rateLimitResult);\r\n    return nextResponse;\r\n\r\n  } catch (error) {\r\n    logger.log(LogLevel.ERROR, LogCategory.API, 'Error en GET /api/admin/notifications/[id]', { error, params });\r\n\r\n    // Registrar m\xE9tricas de error\r\n    metricsCollector.recordApiCall({\r\n      endpoint: '/api/admin/notifications/[id]',\r\n      method: 'GET',\r\n      statusCode: error instanceof Error && error.message === 'Notificaci\xF3n no encontrada' ? 404 : 500,\r\n      responseTime: Date.now() - startTime,\r\n      error: error instanceof Error ? error.message : 'Unknown error'\r\n    });\r\n\r\n    const statusCode = error instanceof Error && error.message === 'Notificaci\xF3n no encontrada' ? 404 : 500;\r\n    const errorResponse: ApiResponse<null> = {\r\n      data: null,\r\n      success: false,\r\n      error: error instanceof Error ? error.message : 'Error interno del servidor',\r\n    };\r\n\r\n    return NextResponse.json(errorResponse, { status: statusCode });\r\n  }\r\n}\r\n\r\n// ===================================\r\n// PUT - Actualizar notificaci\xF3n\r\n// ===================================\r\nexport async function PUT(\r\n  request: NextRequest,\r\n  { params }: { params: { id: string } }\r\n) {\r\n  const startTime = Date.now();\r\n\r\n  try {\r\n    // Rate limiting\r\n    const rateLimitResult = await checkRateLimit(\r\n      request,\r\n      {\r\n        windowMs: RATE_LIMIT_CONFIGS.update.windowMs,\r\n        maxRequests: RATE_LIMIT_CONFIGS.update.maxRequests,\r\n        message: RATE_LIMIT_CONFIGS.update.message\r\n      },\r\n      'admin-notification-update'\r\n    );\r\n\r\n    if (!rateLimitResult.success) {\r\n      const response = NextResponse.json(\r\n        { error: rateLimitResult.message },\r\n        { status: 429 }\r\n      );\r\n      addRateLimitHeaders(response, rateLimitResult);\r\n      return response;\r\n    }\r\n\r\n    // Validar par\xE1metros\r\n    const paramsValidation = ParamsSchema.safeParse(params);\r\n    if (!paramsValidation.success) {\r\n      const errorResponse: ApiResponse<null> = {\r\n        data: null,\r\n        success: false,\r\n        error: 'ID de notificaci\xF3n inv\xE1lido',\r\n      };\r\n      return NextResponse.json(errorResponse, { status: 400 });\r\n    }\r\n\r\n    // Validar autenticaci\xF3n admin\r\n    const authResult = await validateAdminAuth();\r\n    if (authResult.error) {\r\n      const errorResponse: ApiResponse<null> = {\r\n        data: null,\r\n        success: false,\r\n        error: authResult.error,\r\n      };\r\n      return NextResponse.json(errorResponse, { status: authResult.status });\r\n    }\r\n\r\n    // Validar datos de entrada\r\n    const body = await request.json();\r\n    const { searchParams } = new URL(request.url);\r\n    const action = searchParams.get('action');\r\n\r\n    // Manejar acciones espec\xEDficas\r\n    if (action) {\r\n      let updatedNotification: NotificationData;\r\n      \r\n      switch (action) {\r\n        case 'mark_read':\r\n          updatedNotification = await markAsRead(paramsValidation.data.id, authResult.userId!);\r\n          break;\r\n        case 'mark_unread':\r\n          updatedNotification = await markAsUnread(paramsValidation.data.id, authResult.userId!);\r\n          break;\r\n        case 'archive':\r\n          updatedNotification = await archiveNotification(paramsValidation.data.id, authResult.userId!);\r\n          break;\r\n        default:\r\n          const errorResponse: ApiResponse<null> = {\r\n            data: null,\r\n            success: false,\r\n            error: 'Acci\xF3n no v\xE1lida',\r\n          };\r\n          return NextResponse.json(errorResponse, { status: 400 });\r\n      }\r\n\r\n      // Registrar m\xE9tricas\r\n      metricsCollector.recordApiCall({\r\n        endpoint: '/api/admin/notifications/[id]',\r\n        method: 'PUT',\r\n        statusCode: 200,\r\n        responseTime: Date.now() - startTime,\r\n        userId: authResult.userId\r\n      });\r\n\r\n      const response: ApiResponse<NotificationData> = {\r\n        data: updatedNotification,\r\n        success: true,\r\n        message: `Notificaci\xF3n ${action.replace('_', ' ')} exitosamente`\r\n      };\r\n\r\n      const nextResponse = NextResponse.json(response);\r\n      addRateLimitHeaders(nextResponse, rateLimitResult);\r\n      return nextResponse;\r\n    }\r\n\r\n    // Actualizaci\xF3n general\r\n    const validationResult = UpdateNotificationSchema.safeParse(body);\r\n    if (!validationResult.success) {\r\n      const errorResponse: ApiResponse<null> = {\r\n        data: null,\r\n        success: false,\r\n        error: 'Datos de notificaci\xF3n inv\xE1lidos',\r\n      };\r\n      return NextResponse.json(errorResponse, { status: 400 });\r\n    }\r\n\r\n    // Actualizar notificaci\xF3n\r\n    const updatedNotification = await updateNotification(\r\n      paramsValidation.data.id,\r\n      validationResult.data,\r\n      authResult.userId!\r\n    );\r\n\r\n    // Registrar m\xE9tricas\r\n    metricsCollector.recordApiCall({\r\n      endpoint: '/api/admin/notifications/[id]',\r\n      method: 'PUT',\r\n      statusCode: 200,\r\n      responseTime: Date.now() - startTime,\r\n      userId: authResult.userId\r\n    });\r\n\r\n    const response: ApiResponse<NotificationData> = {\r\n      data: updatedNotification,\r\n      success: true,\r\n      message: 'Notificaci\xF3n actualizada exitosamente'\r\n    };\r\n\r\n    const nextResponse = NextResponse.json(response);\r\n    addRateLimitHeaders(nextResponse, rateLimitResult);\r\n    return nextResponse;\r\n\r\n  } catch (error) {\r\n    logger.log(LogLevel.ERROR, LogCategory.API, 'Error en PUT /api/admin/notifications/[id]', { error, params });\r\n\r\n    // Registrar m\xE9tricas de error\r\n    metricsCollector.recordApiCall({\r\n      endpoint: '/api/admin/notifications/[id]',\r\n      method: 'PUT',\r\n      statusCode: error instanceof Error && error.message === 'Notificaci\xF3n no encontrada' ? 404 : 500,\r\n      responseTime: Date.now() - startTime,\r\n      error: error instanceof Error ? error.message : 'Unknown error'\r\n    });\r\n\r\n    const statusCode = error instanceof Error && error.message === 'Notificaci\xF3n no encontrada' ? 404 : 500;\r\n    const errorResponse: ApiResponse<null> = {\r\n      data: null,\r\n      success: false,\r\n      error: error instanceof Error ? error.message : 'Error interno del servidor',\r\n    };\r\n\r\n    return NextResponse.json(errorResponse, { status: statusCode });\r\n  }\r\n}\r\n\r\n// ===================================\r\n// DELETE - Eliminar notificaci\xF3n\r\n// ===================================\r\nexport async function DELETE(\r\n  request: NextRequest,\r\n  { params }: { params: { id: string } }\r\n) {\r\n  const startTime = Date.now();\r\n\r\n  try {\r\n    // Rate limiting\r\n    const rateLimitResult = await checkRateLimit(\r\n      request,\r\n      {\r\n        windowMs: RATE_LIMIT_CONFIGS.delete.windowMs,\r\n        maxRequests: RATE_LIMIT_CONFIGS.delete.maxRequests,\r\n        message: RATE_LIMIT_CONFIGS.delete.message\r\n      },\r\n      'admin-notification-delete'\r\n    );\r\n\r\n    if (!rateLimitResult.success) {\r\n      const response = NextResponse.json(\r\n        { error: rateLimitResult.message },\r\n        { status: 429 }\r\n      );\r\n      addRateLimitHeaders(response, rateLimitResult);\r\n      return response;\r\n    }\r\n\r\n    // Validar par\xE1metros\r\n    const validationResult = ParamsSchema.safeParse(params);\r\n    if (!validationResult.success) {\r\n      const errorResponse: ApiResponse<null> = {\r\n        data: null,\r\n        success: false,\r\n        error: 'ID de notificaci\xF3n inv\xE1lido',\r\n      };\r\n      return NextResponse.json(errorResponse, { status: 400 });\r\n    }\r\n\r\n    // Validar autenticaci\xF3n admin\r\n    const authResult = await validateAdminAuth();\r\n    if (authResult.error) {\r\n      const errorResponse: ApiResponse<null> = {\r\n        data: null,\r\n        success: false,\r\n        error: authResult.error,\r\n      };\r\n      return NextResponse.json(errorResponse, { status: authResult.status });\r\n    }\r\n\r\n    // Eliminar notificaci\xF3n\r\n    await deleteNotification(validationResult.data.id, authResult.userId!);\r\n\r\n    // Registrar m\xE9tricas\r\n    metricsCollector.recordApiCall({\r\n      endpoint: '/api/admin/notifications/[id]',\r\n      method: 'DELETE',\r\n      statusCode: 200,\r\n      responseTime: Date.now() - startTime,\r\n      userId: authResult.userId\r\n    });\r\n\r\n    const response: ApiResponse<null> = {\r\n      data: null,\r\n      success: true,\r\n      message: 'Notificaci\xF3n eliminada exitosamente'\r\n    };\r\n\r\n    const nextResponse = NextResponse.json(response);\r\n    addRateLimitHeaders(nextResponse, rateLimitResult);\r\n    return nextResponse;\r\n\r\n  } catch (error) {\r\n    logger.log(LogLevel.ERROR, LogCategory.API, 'Error en DELETE /api/admin/notifications/[id]', { error, params });\r\n\r\n    // Registrar m\xE9tricas de error\r\n    metricsCollector.recordApiCall({\r\n      endpoint: '/api/admin/notifications/[id]',\r\n      method: 'DELETE',\r\n      statusCode: error instanceof Error && error.message === 'Notificaci\xF3n no encontrada' ? 404 : 500,\r\n      responseTime: Date.now() - startTime,\r\n      error: error instanceof Error ? error.message : 'Unknown error'\r\n    });\r\n\r\n    const statusCode = error instanceof Error && error.message === 'Notificaci\xF3n no encontrada' ? 404 : 500;\r\n    const errorResponse: ApiResponse<null> = {\r\n      data: null,\r\n      success: false,\r\n      error: error instanceof Error ? error.message : 'Error interno del servidor',\r\n    };\r\n\r\n    return NextResponse.json(errorResponse, { status: statusCode });\r\n  }\r\n}"],
      names: ["DELETE", "GET", "PUT", "supabase", "createClient", "process", "env", "NEXT_PUBLIC_SUPABASE_URL", "SUPABASE_SERVICE_ROLE_KEY", "RATE_LIMIT_CONFIGS", "admin", "windowMs", "maxRequests", "message", "update", "delete", "ParamsSchema", "z", "object", "id", "string", "uuid", "UpdateNotificationSchema", "title", "min", "max", "optional", "type", "enum", "priority", "status", "action_url", "url", "action_label", "expires_at", "datetime", "nullable", "metadata", "record", "any", "validateAdminAuth", "session", "auth", "user", "error", "data", "profile", "from", "select", "eq", "single", "role", "userId", "getNotificationById", "code", "Error", "updateNotification", "updateData", "updated_at", "Date", "toISOString", "insert", "table_name", "record_id", "action", "old_values", "new_values", "user_id", "created_at", "deleteNotification", "notification", "markAsRead", "markAsUnread", "archiveNotification", "request", "params", "startTime", "now", "rateLimitResult", "checkRateLimit", "success", "response", "NextResponse", "json", "addRateLimitHeaders", "validationResult", "safeParse", "errorResponse", "authResult", "metricsCollector", "recordApiCall", "endpoint", "method", "statusCode", "responseTime", "nextResponse", "logger", "log", "LogLevel", "ERROR", "LogCategory", "API", "paramsValidation", "body", "searchParams", "URL", "get", "updatedNotification", "replace"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "afac079cb9b2d2991d3f48cac50018c95458c882"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_oi2hd4gvc = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_oi2hd4gvc();
cov_oi2hd4gvc().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_oi2hd4gvc().f[0]++;
  cov_oi2hd4gvc().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_oi2hd4gvc().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_oi2hd4gvc().s[3]++;
_export(exports, {
  get DELETE() {
    /* istanbul ignore next */
    cov_oi2hd4gvc().f[1]++;
    cov_oi2hd4gvc().s[4]++;
    return DELETE;
  },
  get GET() {
    /* istanbul ignore next */
    cov_oi2hd4gvc().f[2]++;
    cov_oi2hd4gvc().s[5]++;
    return GET;
  },
  get PUT() {
    /* istanbul ignore next */
    cov_oi2hd4gvc().f[3]++;
    cov_oi2hd4gvc().s[6]++;
    return PUT;
  }
});
const _server =
/* istanbul ignore next */
(cov_oi2hd4gvc().s[7]++, require("next/server"));
const _zod =
/* istanbul ignore next */
(cov_oi2hd4gvc().s[8]++, require("zod"));
const _supabasejs =
/* istanbul ignore next */
(cov_oi2hd4gvc().s[9]++, require("@supabase/supabase-js"));
const _auth =
/* istanbul ignore next */
(cov_oi2hd4gvc().s[10]++, require("../../../../../auth"));
const _ratelimiter =
/* istanbul ignore next */
(cov_oi2hd4gvc().s[11]++, require("../../../../../lib/enterprise/rate-limiter"));
const _logger =
/* istanbul ignore next */
(cov_oi2hd4gvc().s[12]++, require("../../../../../lib/enterprise/logger"));
const _metrics =
/* istanbul ignore next */
(cov_oi2hd4gvc().s[13]++, require("../../../../../lib/enterprise/metrics"));
// ===================================
// CONFIGURACIÓN
// ===================================
const supabase =
/* istanbul ignore next */
(cov_oi2hd4gvc().s[14]++, (0, _supabasejs.createClient)(process.env.NEXT_PUBLIC_SUPABASE_URL, process.env.SUPABASE_SERVICE_ROLE_KEY));
const RATE_LIMIT_CONFIGS =
/* istanbul ignore next */
(cov_oi2hd4gvc().s[15]++, {
  admin: {
    windowMs: 15 * 60 * 1000,
    maxRequests: 100,
    message: 'Demasiadas solicitudes administrativas'
  },
  update: {
    windowMs: 60 * 1000,
    maxRequests: 20,
    message: 'Demasiadas actualizaciones de notificación'
  },
  delete: {
    windowMs: 60 * 1000,
    maxRequests: 10,
    message: 'Demasiadas eliminaciones de notificación'
  }
});
// ===================================
// ESQUEMAS DE VALIDACIÓN
// ===================================
const ParamsSchema =
/* istanbul ignore next */
(cov_oi2hd4gvc().s[16]++, _zod.z.object({
  id: _zod.z.string().uuid('ID de notificación inválido')
}));
const UpdateNotificationSchema =
/* istanbul ignore next */
(cov_oi2hd4gvc().s[17]++, _zod.z.object({
  title: _zod.z.string().min(1).max(200).optional(),
  message: _zod.z.string().min(1).max(1000).optional(),
  type: _zod.z.enum(['info', 'warning', 'error', 'success']).optional(),
  priority: _zod.z.enum(['low', 'medium', 'high', 'urgent']).optional(),
  status: _zod.z.enum(['read', 'unread', 'archived']).optional(),
  action_url: _zod.z.string().url().optional(),
  action_label: _zod.z.string().max(50).optional(),
  expires_at: _zod.z.string().datetime().optional().nullable(),
  metadata: _zod.z.record(_zod.z.any()).optional()
}));
// ===================================
// FUNCIONES AUXILIARES
// ===================================
async function validateAdminAuth() {
  /* istanbul ignore next */
  cov_oi2hd4gvc().f[4]++;
  const session =
  /* istanbul ignore next */
  (cov_oi2hd4gvc().s[18]++, await (0, _auth.auth)());
  /* istanbul ignore next */
  cov_oi2hd4gvc().s[19]++;
  if (!session?.user) {
    /* istanbul ignore next */
    cov_oi2hd4gvc().b[0][0]++;
    cov_oi2hd4gvc().s[20]++;
    return {
      error: 'No autorizado',
      status: 401
    };
  } else
  /* istanbul ignore next */
  {
    cov_oi2hd4gvc().b[0][1]++;
  }
  // Verificar rol de administrador
  const {
    data: profile
  } =
  /* istanbul ignore next */
  (cov_oi2hd4gvc().s[21]++, await supabase.from('profiles').select('role').eq('id', session.user.id).single());
  /* istanbul ignore next */
  cov_oi2hd4gvc().s[22]++;
  if (profile?.role !== 'admin') {
    /* istanbul ignore next */
    cov_oi2hd4gvc().b[1][0]++;
    cov_oi2hd4gvc().s[23]++;
    return {
      error: 'Acceso denegado',
      status: 403
    };
  } else
  /* istanbul ignore next */
  {
    cov_oi2hd4gvc().b[1][1]++;
  }
  cov_oi2hd4gvc().s[24]++;
  return {
    userId: session.user.id
  };
}
async function getNotificationById(id) {
  /* istanbul ignore next */
  cov_oi2hd4gvc().f[5]++;
  const {
    data,
    error
  } =
  /* istanbul ignore next */
  (cov_oi2hd4gvc().s[25]++, await supabase.from('notifications').select(`
      *,
      recipient:profiles!notifications_recipient_id_fkey(
        id,
        email,
        full_name
      ),
      creator:profiles!notifications_created_by_fkey(
        id,
        email,
        full_name
      )
    `).eq('id', id).single());
  /* istanbul ignore next */
  cov_oi2hd4gvc().s[26]++;
  if (error) {
    /* istanbul ignore next */
    cov_oi2hd4gvc().b[2][0]++;
    cov_oi2hd4gvc().s[27]++;
    if (error.code === 'PGRST116') {
      /* istanbul ignore next */
      cov_oi2hd4gvc().b[3][0]++;
      cov_oi2hd4gvc().s[28]++;
      throw new Error('Notificación no encontrada');
    } else
    /* istanbul ignore next */
    {
      cov_oi2hd4gvc().b[3][1]++;
    }
    cov_oi2hd4gvc().s[29]++;
    throw new Error(`Error al obtener notificación: ${error.message}`);
  } else
  /* istanbul ignore next */
  {
    cov_oi2hd4gvc().b[2][1]++;
  }
  cov_oi2hd4gvc().s[30]++;
  return data;
}
async function updateNotification(id, updateData, userId) {
  /* istanbul ignore next */
  cov_oi2hd4gvc().f[6]++;
  const {
    data,
    error
  } =
  /* istanbul ignore next */
  (cov_oi2hd4gvc().s[31]++, await supabase.from('notifications').update({
    ...updateData,
    updated_at: new Date().toISOString()
  }).eq('id', id).select(`
      *,
      recipient:profiles!notifications_recipient_id_fkey(
        id,
        email,
        full_name
      ),
      creator:profiles!notifications_created_by_fkey(
        id,
        email,
        full_name
      )
    `).single());
  /* istanbul ignore next */
  cov_oi2hd4gvc().s[32]++;
  if (error) {
    /* istanbul ignore next */
    cov_oi2hd4gvc().b[4][0]++;
    cov_oi2hd4gvc().s[33]++;
    if (error.code === 'PGRST116') {
      /* istanbul ignore next */
      cov_oi2hd4gvc().b[5][0]++;
      cov_oi2hd4gvc().s[34]++;
      throw new Error('Notificación no encontrada');
    } else
    /* istanbul ignore next */
    {
      cov_oi2hd4gvc().b[5][1]++;
    }
    cov_oi2hd4gvc().s[35]++;
    throw new Error(`Error al actualizar notificación: ${error.message}`);
  } else
  /* istanbul ignore next */
  {
    cov_oi2hd4gvc().b[4][1]++;
  }
  // Registrar auditoría
  cov_oi2hd4gvc().s[36]++;
  await supabase.from('audit_logs').insert({
    table_name: 'notifications',
    record_id: id,
    action: 'UPDATE',
    old_values: null,
    new_values: updateData,
    user_id: userId,
    created_at: new Date().toISOString()
  });
  /* istanbul ignore next */
  cov_oi2hd4gvc().s[37]++;
  return data;
}
async function deleteNotification(id, userId) {
  /* istanbul ignore next */
  cov_oi2hd4gvc().f[7]++;
  // Primero obtener la notificación para auditoría
  const notification =
  /* istanbul ignore next */
  (cov_oi2hd4gvc().s[38]++, await getNotificationById(id));
  const {
    error
  } =
  /* istanbul ignore next */
  (cov_oi2hd4gvc().s[39]++, await supabase.from('notifications').delete().eq('id', id));
  /* istanbul ignore next */
  cov_oi2hd4gvc().s[40]++;
  if (error) {
    /* istanbul ignore next */
    cov_oi2hd4gvc().b[6][0]++;
    cov_oi2hd4gvc().s[41]++;
    throw new Error(`Error al eliminar notificación: ${error.message}`);
  } else
  /* istanbul ignore next */
  {
    cov_oi2hd4gvc().b[6][1]++;
  }
  // Registrar auditoría
  cov_oi2hd4gvc().s[42]++;
  await supabase.from('audit_logs').insert({
    table_name: 'notifications',
    record_id: id,
    action: 'DELETE',
    old_values: notification,
    new_values: null,
    user_id: userId,
    created_at: new Date().toISOString()
  });
}
async function markAsRead(id, userId) {
  /* istanbul ignore next */
  cov_oi2hd4gvc().f[8]++;
  cov_oi2hd4gvc().s[43]++;
  return updateNotification(id, {
    status: 'read'
  }, userId);
}
async function markAsUnread(id, userId) {
  /* istanbul ignore next */
  cov_oi2hd4gvc().f[9]++;
  cov_oi2hd4gvc().s[44]++;
  return updateNotification(id, {
    status: 'unread'
  }, userId);
}
async function archiveNotification(id, userId) {
  /* istanbul ignore next */
  cov_oi2hd4gvc().f[10]++;
  cov_oi2hd4gvc().s[45]++;
  return updateNotification(id, {
    status: 'archived'
  }, userId);
}
async function GET(request, {
  params
}) {
  /* istanbul ignore next */
  cov_oi2hd4gvc().f[11]++;
  const startTime =
  /* istanbul ignore next */
  (cov_oi2hd4gvc().s[46]++, Date.now());
  /* istanbul ignore next */
  cov_oi2hd4gvc().s[47]++;
  try {
    // Rate limiting
    const rateLimitResult =
    /* istanbul ignore next */
    (cov_oi2hd4gvc().s[48]++, await (0, _ratelimiter.checkRateLimit)(request, {
      windowMs: RATE_LIMIT_CONFIGS.admin.windowMs,
      maxRequests: RATE_LIMIT_CONFIGS.admin.maxRequests,
      message: RATE_LIMIT_CONFIGS.admin.message
    }, 'admin-notification-get'));
    /* istanbul ignore next */
    cov_oi2hd4gvc().s[49]++;
    if (!rateLimitResult.success) {
      /* istanbul ignore next */
      cov_oi2hd4gvc().b[7][0]++;
      const response =
      /* istanbul ignore next */
      (cov_oi2hd4gvc().s[50]++, _server.NextResponse.json({
        error: rateLimitResult.message
      }, {
        status: 429
      }));
      /* istanbul ignore next */
      cov_oi2hd4gvc().s[51]++;
      addRateLimitHeaders(response, rateLimitResult);
      /* istanbul ignore next */
      cov_oi2hd4gvc().s[52]++;
      return response;
    } else
    /* istanbul ignore next */
    {
      cov_oi2hd4gvc().b[7][1]++;
    }
    // Validar parámetros
    const validationResult =
    /* istanbul ignore next */
    (cov_oi2hd4gvc().s[53]++, ParamsSchema.safeParse(params));
    /* istanbul ignore next */
    cov_oi2hd4gvc().s[54]++;
    if (!validationResult.success) {
      /* istanbul ignore next */
      cov_oi2hd4gvc().b[8][0]++;
      const errorResponse =
      /* istanbul ignore next */
      (cov_oi2hd4gvc().s[55]++, {
        data: null,
        success: false,
        error: 'ID de notificación inválido'
      });
      /* istanbul ignore next */
      cov_oi2hd4gvc().s[56]++;
      return _server.NextResponse.json(errorResponse, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_oi2hd4gvc().b[8][1]++;
    }
    // Validar autenticación admin
    const authResult =
    /* istanbul ignore next */
    (cov_oi2hd4gvc().s[57]++, await validateAdminAuth());
    /* istanbul ignore next */
    cov_oi2hd4gvc().s[58]++;
    if (authResult.error) {
      /* istanbul ignore next */
      cov_oi2hd4gvc().b[9][0]++;
      const errorResponse =
      /* istanbul ignore next */
      (cov_oi2hd4gvc().s[59]++, {
        data: null,
        success: false,
        error: authResult.error
      });
      /* istanbul ignore next */
      cov_oi2hd4gvc().s[60]++;
      return _server.NextResponse.json(errorResponse, {
        status: authResult.status
      });
    } else
    /* istanbul ignore next */
    {
      cov_oi2hd4gvc().b[9][1]++;
    }
    // Obtener notificación
    const notification =
    /* istanbul ignore next */
    (cov_oi2hd4gvc().s[61]++, await getNotificationById(validationResult.data.id));
    // Registrar métricas
    /* istanbul ignore next */
    cov_oi2hd4gvc().s[62]++;
    _metrics.metricsCollector.recordApiCall({
      endpoint: '/api/admin/notifications/[id]',
      method: 'GET',
      statusCode: 200,
      responseTime: Date.now() - startTime,
      userId: authResult.userId
    });
    const response =
    /* istanbul ignore next */
    (cov_oi2hd4gvc().s[63]++, {
      data: notification,
      success: true,
      message: 'Notificación obtenida exitosamente'
    });
    const nextResponse =
    /* istanbul ignore next */
    (cov_oi2hd4gvc().s[64]++, _server.NextResponse.json(response));
    /* istanbul ignore next */
    cov_oi2hd4gvc().s[65]++;
    addRateLimitHeaders(nextResponse, rateLimitResult);
    /* istanbul ignore next */
    cov_oi2hd4gvc().s[66]++;
    return nextResponse;
  } catch (error) {
    /* istanbul ignore next */
    cov_oi2hd4gvc().s[67]++;
    _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.API, 'Error en GET /api/admin/notifications/[id]', {
      error,
      params
    });
    // Registrar métricas de error
    /* istanbul ignore next */
    cov_oi2hd4gvc().s[68]++;
    _metrics.metricsCollector.recordApiCall({
      endpoint: '/api/admin/notifications/[id]',
      method: 'GET',
      statusCode:
      /* istanbul ignore next */
      (cov_oi2hd4gvc().b[11][0]++, error instanceof Error) &&
      /* istanbul ignore next */
      (cov_oi2hd4gvc().b[11][1]++, error.message === 'Notificación no encontrada') ?
      /* istanbul ignore next */
      (cov_oi2hd4gvc().b[10][0]++, 404) :
      /* istanbul ignore next */
      (cov_oi2hd4gvc().b[10][1]++, 500),
      responseTime: Date.now() - startTime,
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_oi2hd4gvc().b[12][0]++, error.message) :
      /* istanbul ignore next */
      (cov_oi2hd4gvc().b[12][1]++, 'Unknown error')
    });
    const statusCode =
    /* istanbul ignore next */
    (cov_oi2hd4gvc().s[69]++,
    /* istanbul ignore next */
    (cov_oi2hd4gvc().b[14][0]++, error instanceof Error) &&
    /* istanbul ignore next */
    (cov_oi2hd4gvc().b[14][1]++, error.message === 'Notificación no encontrada') ?
    /* istanbul ignore next */
    (cov_oi2hd4gvc().b[13][0]++, 404) :
    /* istanbul ignore next */
    (cov_oi2hd4gvc().b[13][1]++, 500));
    const errorResponse =
    /* istanbul ignore next */
    (cov_oi2hd4gvc().s[70]++, {
      data: null,
      success: false,
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_oi2hd4gvc().b[15][0]++, error.message) :
      /* istanbul ignore next */
      (cov_oi2hd4gvc().b[15][1]++, 'Error interno del servidor')
    });
    /* istanbul ignore next */
    cov_oi2hd4gvc().s[71]++;
    return _server.NextResponse.json(errorResponse, {
      status: statusCode
    });
  }
}
async function PUT(request, {
  params
}) {
  /* istanbul ignore next */
  cov_oi2hd4gvc().f[12]++;
  const startTime =
  /* istanbul ignore next */
  (cov_oi2hd4gvc().s[72]++, Date.now());
  /* istanbul ignore next */
  cov_oi2hd4gvc().s[73]++;
  try {
    // Rate limiting
    const rateLimitResult =
    /* istanbul ignore next */
    (cov_oi2hd4gvc().s[74]++, await (0, _ratelimiter.checkRateLimit)(request, {
      windowMs: RATE_LIMIT_CONFIGS.update.windowMs,
      maxRequests: RATE_LIMIT_CONFIGS.update.maxRequests,
      message: RATE_LIMIT_CONFIGS.update.message
    }, 'admin-notification-update'));
    /* istanbul ignore next */
    cov_oi2hd4gvc().s[75]++;
    if (!rateLimitResult.success) {
      /* istanbul ignore next */
      cov_oi2hd4gvc().b[16][0]++;
      const response =
      /* istanbul ignore next */
      (cov_oi2hd4gvc().s[76]++, _server.NextResponse.json({
        error: rateLimitResult.message
      }, {
        status: 429
      }));
      /* istanbul ignore next */
      cov_oi2hd4gvc().s[77]++;
      addRateLimitHeaders(response, rateLimitResult);
      /* istanbul ignore next */
      cov_oi2hd4gvc().s[78]++;
      return response;
    } else
    /* istanbul ignore next */
    {
      cov_oi2hd4gvc().b[16][1]++;
    }
    // Validar parámetros
    const paramsValidation =
    /* istanbul ignore next */
    (cov_oi2hd4gvc().s[79]++, ParamsSchema.safeParse(params));
    /* istanbul ignore next */
    cov_oi2hd4gvc().s[80]++;
    if (!paramsValidation.success) {
      /* istanbul ignore next */
      cov_oi2hd4gvc().b[17][0]++;
      const errorResponse =
      /* istanbul ignore next */
      (cov_oi2hd4gvc().s[81]++, {
        data: null,
        success: false,
        error: 'ID de notificación inválido'
      });
      /* istanbul ignore next */
      cov_oi2hd4gvc().s[82]++;
      return _server.NextResponse.json(errorResponse, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_oi2hd4gvc().b[17][1]++;
    }
    // Validar autenticación admin
    const authResult =
    /* istanbul ignore next */
    (cov_oi2hd4gvc().s[83]++, await validateAdminAuth());
    /* istanbul ignore next */
    cov_oi2hd4gvc().s[84]++;
    if (authResult.error) {
      /* istanbul ignore next */
      cov_oi2hd4gvc().b[18][0]++;
      const errorResponse =
      /* istanbul ignore next */
      (cov_oi2hd4gvc().s[85]++, {
        data: null,
        success: false,
        error: authResult.error
      });
      /* istanbul ignore next */
      cov_oi2hd4gvc().s[86]++;
      return _server.NextResponse.json(errorResponse, {
        status: authResult.status
      });
    } else
    /* istanbul ignore next */
    {
      cov_oi2hd4gvc().b[18][1]++;
    }
    // Validar datos de entrada
    const body =
    /* istanbul ignore next */
    (cov_oi2hd4gvc().s[87]++, await request.json());
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_oi2hd4gvc().s[88]++, new URL(request.url));
    const action =
    /* istanbul ignore next */
    (cov_oi2hd4gvc().s[89]++, searchParams.get('action'));
    // Manejar acciones específicas
    /* istanbul ignore next */
    cov_oi2hd4gvc().s[90]++;
    if (action) {
      /* istanbul ignore next */
      cov_oi2hd4gvc().b[19][0]++;
      let updatedNotification;
      /* istanbul ignore next */
      cov_oi2hd4gvc().s[91]++;
      switch (action) {
        case 'mark_read':
          /* istanbul ignore next */
          cov_oi2hd4gvc().b[20][0]++;
          cov_oi2hd4gvc().s[92]++;
          updatedNotification = await markAsRead(paramsValidation.data.id, authResult.userId);
          /* istanbul ignore next */
          cov_oi2hd4gvc().s[93]++;
          break;
        case 'mark_unread':
          /* istanbul ignore next */
          cov_oi2hd4gvc().b[20][1]++;
          cov_oi2hd4gvc().s[94]++;
          updatedNotification = await markAsUnread(paramsValidation.data.id, authResult.userId);
          /* istanbul ignore next */
          cov_oi2hd4gvc().s[95]++;
          break;
        case 'archive':
          /* istanbul ignore next */
          cov_oi2hd4gvc().b[20][2]++;
          cov_oi2hd4gvc().s[96]++;
          updatedNotification = await archiveNotification(paramsValidation.data.id, authResult.userId);
          /* istanbul ignore next */
          cov_oi2hd4gvc().s[97]++;
          break;
        default:
          /* istanbul ignore next */
          cov_oi2hd4gvc().b[20][3]++;
          const errorResponse =
          /* istanbul ignore next */
          (cov_oi2hd4gvc().s[98]++, {
            data: null,
            success: false,
            error: 'Acción no válida'
          });
          /* istanbul ignore next */
          cov_oi2hd4gvc().s[99]++;
          return _server.NextResponse.json(errorResponse, {
            status: 400
          });
      }
      // Registrar métricas
      /* istanbul ignore next */
      cov_oi2hd4gvc().s[100]++;
      _metrics.metricsCollector.recordApiCall({
        endpoint: '/api/admin/notifications/[id]',
        method: 'PUT',
        statusCode: 200,
        responseTime: Date.now() - startTime,
        userId: authResult.userId
      });
      const response =
      /* istanbul ignore next */
      (cov_oi2hd4gvc().s[101]++, {
        data: updatedNotification,
        success: true,
        message: `Notificación ${action.replace('_', ' ')} exitosamente`
      });
      const nextResponse =
      /* istanbul ignore next */
      (cov_oi2hd4gvc().s[102]++, _server.NextResponse.json(response));
      /* istanbul ignore next */
      cov_oi2hd4gvc().s[103]++;
      addRateLimitHeaders(nextResponse, rateLimitResult);
      /* istanbul ignore next */
      cov_oi2hd4gvc().s[104]++;
      return nextResponse;
    } else
    /* istanbul ignore next */
    {
      cov_oi2hd4gvc().b[19][1]++;
    }
    // Actualización general
    const validationResult =
    /* istanbul ignore next */
    (cov_oi2hd4gvc().s[105]++, UpdateNotificationSchema.safeParse(body));
    /* istanbul ignore next */
    cov_oi2hd4gvc().s[106]++;
    if (!validationResult.success) {
      /* istanbul ignore next */
      cov_oi2hd4gvc().b[21][0]++;
      const errorResponse =
      /* istanbul ignore next */
      (cov_oi2hd4gvc().s[107]++, {
        data: null,
        success: false,
        error: 'Datos de notificación inválidos'
      });
      /* istanbul ignore next */
      cov_oi2hd4gvc().s[108]++;
      return _server.NextResponse.json(errorResponse, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_oi2hd4gvc().b[21][1]++;
    }
    // Actualizar notificación
    const updatedNotification =
    /* istanbul ignore next */
    (cov_oi2hd4gvc().s[109]++, await updateNotification(paramsValidation.data.id, validationResult.data, authResult.userId));
    // Registrar métricas
    /* istanbul ignore next */
    cov_oi2hd4gvc().s[110]++;
    _metrics.metricsCollector.recordApiCall({
      endpoint: '/api/admin/notifications/[id]',
      method: 'PUT',
      statusCode: 200,
      responseTime: Date.now() - startTime,
      userId: authResult.userId
    });
    const response =
    /* istanbul ignore next */
    (cov_oi2hd4gvc().s[111]++, {
      data: updatedNotification,
      success: true,
      message: 'Notificación actualizada exitosamente'
    });
    const nextResponse =
    /* istanbul ignore next */
    (cov_oi2hd4gvc().s[112]++, _server.NextResponse.json(response));
    /* istanbul ignore next */
    cov_oi2hd4gvc().s[113]++;
    addRateLimitHeaders(nextResponse, rateLimitResult);
    /* istanbul ignore next */
    cov_oi2hd4gvc().s[114]++;
    return nextResponse;
  } catch (error) {
    /* istanbul ignore next */
    cov_oi2hd4gvc().s[115]++;
    _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.API, 'Error en PUT /api/admin/notifications/[id]', {
      error,
      params
    });
    // Registrar métricas de error
    /* istanbul ignore next */
    cov_oi2hd4gvc().s[116]++;
    _metrics.metricsCollector.recordApiCall({
      endpoint: '/api/admin/notifications/[id]',
      method: 'PUT',
      statusCode:
      /* istanbul ignore next */
      (cov_oi2hd4gvc().b[23][0]++, error instanceof Error) &&
      /* istanbul ignore next */
      (cov_oi2hd4gvc().b[23][1]++, error.message === 'Notificación no encontrada') ?
      /* istanbul ignore next */
      (cov_oi2hd4gvc().b[22][0]++, 404) :
      /* istanbul ignore next */
      (cov_oi2hd4gvc().b[22][1]++, 500),
      responseTime: Date.now() - startTime,
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_oi2hd4gvc().b[24][0]++, error.message) :
      /* istanbul ignore next */
      (cov_oi2hd4gvc().b[24][1]++, 'Unknown error')
    });
    const statusCode =
    /* istanbul ignore next */
    (cov_oi2hd4gvc().s[117]++,
    /* istanbul ignore next */
    (cov_oi2hd4gvc().b[26][0]++, error instanceof Error) &&
    /* istanbul ignore next */
    (cov_oi2hd4gvc().b[26][1]++, error.message === 'Notificación no encontrada') ?
    /* istanbul ignore next */
    (cov_oi2hd4gvc().b[25][0]++, 404) :
    /* istanbul ignore next */
    (cov_oi2hd4gvc().b[25][1]++, 500));
    const errorResponse =
    /* istanbul ignore next */
    (cov_oi2hd4gvc().s[118]++, {
      data: null,
      success: false,
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_oi2hd4gvc().b[27][0]++, error.message) :
      /* istanbul ignore next */
      (cov_oi2hd4gvc().b[27][1]++, 'Error interno del servidor')
    });
    /* istanbul ignore next */
    cov_oi2hd4gvc().s[119]++;
    return _server.NextResponse.json(errorResponse, {
      status: statusCode
    });
  }
}
async function DELETE(request, {
  params
}) {
  /* istanbul ignore next */
  cov_oi2hd4gvc().f[13]++;
  const startTime =
  /* istanbul ignore next */
  (cov_oi2hd4gvc().s[120]++, Date.now());
  /* istanbul ignore next */
  cov_oi2hd4gvc().s[121]++;
  try {
    // Rate limiting
    const rateLimitResult =
    /* istanbul ignore next */
    (cov_oi2hd4gvc().s[122]++, await (0, _ratelimiter.checkRateLimit)(request, {
      windowMs: RATE_LIMIT_CONFIGS.delete.windowMs,
      maxRequests: RATE_LIMIT_CONFIGS.delete.maxRequests,
      message: RATE_LIMIT_CONFIGS.delete.message
    }, 'admin-notification-delete'));
    /* istanbul ignore next */
    cov_oi2hd4gvc().s[123]++;
    if (!rateLimitResult.success) {
      /* istanbul ignore next */
      cov_oi2hd4gvc().b[28][0]++;
      const response =
      /* istanbul ignore next */
      (cov_oi2hd4gvc().s[124]++, _server.NextResponse.json({
        error: rateLimitResult.message
      }, {
        status: 429
      }));
      /* istanbul ignore next */
      cov_oi2hd4gvc().s[125]++;
      addRateLimitHeaders(response, rateLimitResult);
      /* istanbul ignore next */
      cov_oi2hd4gvc().s[126]++;
      return response;
    } else
    /* istanbul ignore next */
    {
      cov_oi2hd4gvc().b[28][1]++;
    }
    // Validar parámetros
    const validationResult =
    /* istanbul ignore next */
    (cov_oi2hd4gvc().s[127]++, ParamsSchema.safeParse(params));
    /* istanbul ignore next */
    cov_oi2hd4gvc().s[128]++;
    if (!validationResult.success) {
      /* istanbul ignore next */
      cov_oi2hd4gvc().b[29][0]++;
      const errorResponse =
      /* istanbul ignore next */
      (cov_oi2hd4gvc().s[129]++, {
        data: null,
        success: false,
        error: 'ID de notificación inválido'
      });
      /* istanbul ignore next */
      cov_oi2hd4gvc().s[130]++;
      return _server.NextResponse.json(errorResponse, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_oi2hd4gvc().b[29][1]++;
    }
    // Validar autenticación admin
    const authResult =
    /* istanbul ignore next */
    (cov_oi2hd4gvc().s[131]++, await validateAdminAuth());
    /* istanbul ignore next */
    cov_oi2hd4gvc().s[132]++;
    if (authResult.error) {
      /* istanbul ignore next */
      cov_oi2hd4gvc().b[30][0]++;
      const errorResponse =
      /* istanbul ignore next */
      (cov_oi2hd4gvc().s[133]++, {
        data: null,
        success: false,
        error: authResult.error
      });
      /* istanbul ignore next */
      cov_oi2hd4gvc().s[134]++;
      return _server.NextResponse.json(errorResponse, {
        status: authResult.status
      });
    } else
    /* istanbul ignore next */
    {
      cov_oi2hd4gvc().b[30][1]++;
    }
    // Eliminar notificación
    cov_oi2hd4gvc().s[135]++;
    await deleteNotification(validationResult.data.id, authResult.userId);
    // Registrar métricas
    /* istanbul ignore next */
    cov_oi2hd4gvc().s[136]++;
    _metrics.metricsCollector.recordApiCall({
      endpoint: '/api/admin/notifications/[id]',
      method: 'DELETE',
      statusCode: 200,
      responseTime: Date.now() - startTime,
      userId: authResult.userId
    });
    const response =
    /* istanbul ignore next */
    (cov_oi2hd4gvc().s[137]++, {
      data: null,
      success: true,
      message: 'Notificación eliminada exitosamente'
    });
    const nextResponse =
    /* istanbul ignore next */
    (cov_oi2hd4gvc().s[138]++, _server.NextResponse.json(response));
    /* istanbul ignore next */
    cov_oi2hd4gvc().s[139]++;
    addRateLimitHeaders(nextResponse, rateLimitResult);
    /* istanbul ignore next */
    cov_oi2hd4gvc().s[140]++;
    return nextResponse;
  } catch (error) {
    /* istanbul ignore next */
    cov_oi2hd4gvc().s[141]++;
    _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.API, 'Error en DELETE /api/admin/notifications/[id]', {
      error,
      params
    });
    // Registrar métricas de error
    /* istanbul ignore next */
    cov_oi2hd4gvc().s[142]++;
    _metrics.metricsCollector.recordApiCall({
      endpoint: '/api/admin/notifications/[id]',
      method: 'DELETE',
      statusCode:
      /* istanbul ignore next */
      (cov_oi2hd4gvc().b[32][0]++, error instanceof Error) &&
      /* istanbul ignore next */
      (cov_oi2hd4gvc().b[32][1]++, error.message === 'Notificación no encontrada') ?
      /* istanbul ignore next */
      (cov_oi2hd4gvc().b[31][0]++, 404) :
      /* istanbul ignore next */
      (cov_oi2hd4gvc().b[31][1]++, 500),
      responseTime: Date.now() - startTime,
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_oi2hd4gvc().b[33][0]++, error.message) :
      /* istanbul ignore next */
      (cov_oi2hd4gvc().b[33][1]++, 'Unknown error')
    });
    const statusCode =
    /* istanbul ignore next */
    (cov_oi2hd4gvc().s[143]++,
    /* istanbul ignore next */
    (cov_oi2hd4gvc().b[35][0]++, error instanceof Error) &&
    /* istanbul ignore next */
    (cov_oi2hd4gvc().b[35][1]++, error.message === 'Notificación no encontrada') ?
    /* istanbul ignore next */
    (cov_oi2hd4gvc().b[34][0]++, 404) :
    /* istanbul ignore next */
    (cov_oi2hd4gvc().b[34][1]++, 500));
    const errorResponse =
    /* istanbul ignore next */
    (cov_oi2hd4gvc().s[144]++, {
      data: null,
      success: false,
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_oi2hd4gvc().b[36][0]++, error.message) :
      /* istanbul ignore next */
      (cov_oi2hd4gvc().b[36][1]++, 'Error interno del servidor')
    });
    /* istanbul ignore next */
    cov_oi2hd4gvc().s[145]++;
    return _server.NextResponse.json(errorResponse, {
      status: statusCode
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,