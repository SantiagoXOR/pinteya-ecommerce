7f13bb8633c58b17882ba71693d43bd7
/**
 * Header Responsive Test Ultra-Simplificado
 * Sin dependencias complejas - Solo comportamiento responsive básico
 */ "use strict";
// Mock responsive del Header
jest.mock('../../index', ()=>{
    return function MockResponsiveHeader() {
        const [windowWidth, setWindowWidth] = _react.default.useState(window.innerWidth);
        _react.default.useEffect(()=>{
            const handleResize = ()=>setWindowWidth(window.innerWidth);
            window.addEventListener('resize', handleResize);
            return ()=>window.removeEventListener('resize', handleResize);
        }, []);
        const isMobile = windowWidth < 768;
        const isTablet = windowWidth >= 768 && windowWidth < 1024;
        const isDesktop = windowWidth >= 1024;
        return /*#__PURE__*/ (0, _jsxruntime.jsxs)("header", {
            role: "banner",
            "data-testid": "responsive-header",
            className: `header ${isMobile ? 'mobile' : isTablet ? 'tablet' : 'desktop'}`,
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                    "data-testid": "logo-section",
                    className: isMobile ? 'logo-mobile' : 'logo-desktop',
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)("img", {
                        alt: "Pinteya",
                        src: "/logo.svg"
                    })
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                    "data-testid": "search-section",
                    className: isMobile ? 'search-mobile' : 'search-desktop',
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                        role: "searchbox",
                        "aria-label": "Buscar productos",
                        placeholder: isMobile ? "Buscar..." : "Buscar productos en nuestra tienda"
                    })
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    "data-testid": "navigation-section",
                    children: [
                        isDesktop && /*#__PURE__*/ (0, _jsxruntime.jsxs)("nav", {
                            "data-testid": "desktop-nav",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("a", {
                                    href: "/productos",
                                    children: "Productos"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("a", {
                                    href: "/ofertas",
                                    children: "Ofertas"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("a", {
                                    href: "/contacto",
                                    children: "Contacto"
                                })
                            ]
                        }),
                        isMobile && /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                            "data-testid": "mobile-menu-button",
                            children: "☰"
                        })
                    ]
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    "data-testid": "actions-section",
                    children: [
                        !isMobile && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            "data-testid": "desktop-actions",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                    children: "Iniciar Sesi\xf3n"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                    "data-testid": "cart-button",
                                    children: "Carrito (0)"
                                })
                            ]
                        }),
                        isMobile && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            "data-testid": "mobile-actions",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                    "data-testid": "mobile-cart",
                                    children: "\uD83D\uDED2"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                    "data-testid": "mobile-user",
                                    children: "\uD83D\uDC64"
                                })
                            ]
                        })
                    ]
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    "data-testid": "viewport-info",
                    style: {
                        display: 'none'
                    },
                    children: [
                        windowWidth,
                        "px - ",
                        isMobile ? 'mobile' : isTablet ? 'tablet' : 'desktop'
                    ]
                })
            ]
        });
    };
});
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_default(require("react"));
const _react1 = require("@testing-library/react");
const _index = /*#__PURE__*/ _interop_require_default(require("../../index"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
// Helper para simular cambios de viewport
const setViewport = (width)=>{
    Object.defineProperty(window, 'innerWidth', {
        writable: true,
        configurable: true,
        value: width
    });
    window.dispatchEvent(new Event('resize'));
};
describe('Header Responsive - Ultra-Simplified Tests', ()=>{
    beforeEach(()=>{
        jest.clearAllMocks();
        // Reset viewport
        setViewport(1024);
    });
    describe('Detección de Viewport', ()=>{
        it('debe detectar viewport móvil', ()=>{
            setViewport(375);
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const header = _react1.screen.getByTestId('responsive-header');
            expect(header).toHaveClass('mobile');
        });
        it('debe detectar viewport tablet', ()=>{
            setViewport(768);
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const header = _react1.screen.getByTestId('responsive-header');
            expect(header).toHaveClass('tablet');
        });
        it('debe detectar viewport desktop', ()=>{
            setViewport(1200);
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const header = _react1.screen.getByTestId('responsive-header');
            expect(header).toHaveClass('desktop');
        });
    });
    describe('Adaptación de Componentes', ()=>{
        it('debe adaptar logo según viewport', ()=>{
            // Móvil
            setViewport(375);
            const { rerender } = (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            let logo = _react1.screen.getByTestId('logo-section');
            expect(logo).toHaveClass('logo-mobile');
            // Desktop
            setViewport(1200);
            rerender(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            logo = _react1.screen.getByTestId('logo-section');
            expect(logo).toHaveClass('logo-desktop');
        });
        it('debe adaptar búsqueda según viewport', ()=>{
            // Móvil
            setViewport(375);
            const { rerender } = (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            let searchInput = _react1.screen.getByRole('searchbox');
            expect(searchInput).toHaveAttribute('placeholder', 'Buscar...');
            let searchSection = _react1.screen.getByTestId('search-section');
            expect(searchSection).toHaveClass('search-mobile');
            // Desktop
            setViewport(1200);
            rerender(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            searchInput = _react1.screen.getByRole('searchbox');
            expect(searchInput).toHaveAttribute('placeholder', 'Buscar productos en nuestra tienda');
            searchSection = _react1.screen.getByTestId('search-section');
            expect(searchSection).toHaveClass('search-desktop');
        });
        it('debe mostrar navegación apropiada por viewport', ()=>{
            // Desktop - navegación completa
            setViewport(1200);
            const { rerender } = (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            expect(_react1.screen.getByTestId('desktop-nav')).toBeInTheDocument();
            expect(_react1.screen.getByText('Productos')).toBeInTheDocument();
            expect(_react1.screen.getByText('Ofertas')).toBeInTheDocument();
            expect(_react1.screen.getByText('Contacto')).toBeInTheDocument();
            expect(_react1.screen.queryByTestId('mobile-menu-button')).not.toBeInTheDocument();
            // Móvil - menú hamburguesa
            setViewport(375);
            rerender(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            expect(_react1.screen.queryByTestId('desktop-nav')).not.toBeInTheDocument();
            expect(_react1.screen.getByTestId('mobile-menu-button')).toBeInTheDocument();
        });
        it('debe adaptar acciones según viewport', ()=>{
            // Desktop - botones completos
            setViewport(1200);
            const { rerender } = (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            expect(_react1.screen.getByTestId('desktop-actions')).toBeInTheDocument();
            expect(_react1.screen.getByText('Iniciar Sesión')).toBeInTheDocument();
            expect(_react1.screen.getByTestId('cart-button')).toBeInTheDocument();
            expect(_react1.screen.queryByTestId('mobile-actions')).not.toBeInTheDocument();
            // Móvil - iconos compactos
            setViewport(375);
            rerender(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            expect(_react1.screen.queryByTestId('desktop-actions')).not.toBeInTheDocument();
            expect(_react1.screen.getByTestId('mobile-actions')).toBeInTheDocument();
            expect(_react1.screen.getByTestId('mobile-cart')).toBeInTheDocument();
            expect(_react1.screen.getByTestId('mobile-user')).toBeInTheDocument();
        });
    });
    describe('Breakpoints Específicos', ()=>{
        it('debe manejar breakpoint móvil (< 768px)', ()=>{
            const mobileWidths = [
                320,
                375,
                414,
                767
            ];
            mobileWidths.forEach((width)=>{
                setViewport(width);
                const { rerender } = (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
                const header = _react1.screen.getByTestId('responsive-header');
                expect(header).toHaveClass('mobile');
                // Verificar elementos móviles
                expect(_react1.screen.getByTestId('mobile-menu-button')).toBeInTheDocument();
                expect(_react1.screen.getByTestId('mobile-actions')).toBeInTheDocument();
                rerender(/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {}));
            });
        });
        it('debe manejar breakpoint tablet (768px - 1023px)', ()=>{
            const tabletWidths = [
                768,
                800,
                1000,
                1023
            ];
            tabletWidths.forEach((width)=>{
                setViewport(width);
                const { rerender } = (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
                const header = _react1.screen.getByTestId('responsive-header');
                expect(header).toHaveClass('tablet');
                rerender(/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {}));
            });
        });
        it('debe manejar breakpoint desktop (>= 1024px)', ()=>{
            const desktopWidths = [
                1024,
                1200,
                1440,
                1920
            ];
            desktopWidths.forEach((width)=>{
                setViewport(width);
                const { rerender } = (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
                const header = _react1.screen.getByTestId('responsive-header');
                expect(header).toHaveClass('desktop');
                // Verificar elementos desktop
                expect(_react1.screen.getByTestId('desktop-nav')).toBeInTheDocument();
                expect(_react1.screen.getByTestId('desktop-actions')).toBeInTheDocument();
                rerender(/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {}));
            });
        });
    });
    describe('Transiciones de Viewport', ()=>{
        it('debe manejar transición móvil → desktop', ()=>{
            // Iniciar en móvil
            setViewport(375);
            const { rerender } = (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            expect(_react1.screen.getByTestId('responsive-header')).toHaveClass('mobile');
            expect(_react1.screen.getByTestId('mobile-menu-button')).toBeInTheDocument();
            // Cambiar a desktop
            setViewport(1200);
            rerender(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            expect(_react1.screen.getByTestId('responsive-header')).toHaveClass('desktop');
            expect(_react1.screen.getByTestId('desktop-nav')).toBeInTheDocument();
            expect(_react1.screen.queryByTestId('mobile-menu-button')).not.toBeInTheDocument();
        });
        it('debe manejar transición desktop → móvil', ()=>{
            // Iniciar en desktop
            setViewport(1200);
            const { rerender } = (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            expect(_react1.screen.getByTestId('responsive-header')).toHaveClass('desktop');
            expect(_react1.screen.getByTestId('desktop-nav')).toBeInTheDocument();
            // Cambiar a móvil
            setViewport(375);
            rerender(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            expect(_react1.screen.getByTestId('responsive-header')).toHaveClass('mobile');
            expect(_react1.screen.getByTestId('mobile-menu-button')).toBeInTheDocument();
            expect(_react1.screen.queryByTestId('desktop-nav')).not.toBeInTheDocument();
        });
        it('debe manejar múltiples cambios de viewport', ()=>{
            const { rerender } = (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const viewports = [
                375,
                768,
                1024,
                600,
                1200,
                320
            ];
            const expectedClasses = [
                'mobile',
                'tablet',
                'desktop',
                'mobile',
                'desktop',
                'mobile'
            ];
            viewports.forEach((width, index)=>{
                setViewport(width);
                rerender(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
                const header = _react1.screen.getByTestId('responsive-header');
                expect(header).toHaveClass(expectedClasses[index]);
            });
        });
    });
    describe('Accesibilidad Responsive', ()=>{
        it('debe mantener accesibilidad en todos los viewports', ()=>{
            const viewports = [
                375,
                768,
                1200
            ];
            viewports.forEach((width)=>{
                setViewport(width);
                const { rerender } = (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
                // Elementos básicos de accesibilidad
                expect(_react1.screen.getByRole('banner')).toBeInTheDocument();
                expect(_react1.screen.getByRole('searchbox')).toBeInTheDocument();
                expect(_react1.screen.getByRole('searchbox')).toHaveAttribute('aria-label');
                // Botones deben ser accesibles
                const buttons = _react1.screen.getAllByRole('button');
                expect(buttons.length).toBeGreaterThan(0);
                rerender(/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {}));
            });
        });
        it('debe tener navegación por teclado en todos los viewports', ()=>{
            const viewports = [
                375,
                1200
            ];
            viewports.forEach((width)=>{
                setViewport(width);
                const { rerender } = (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
                const searchInput = _react1.screen.getByRole('searchbox');
                searchInput.focus();
                expect(document.activeElement).toBe(searchInput);
                const buttons = _react1.screen.getAllByRole('button');
                if (buttons.length > 0) {
                    buttons[0].focus();
                    expect(document.activeElement).toBe(buttons[0]);
                }
                rerender(/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {}));
            });
        });
    });
    describe('Performance Responsive', ()=>{
        it('debe renderizar rápidamente en cambios de viewport', ()=>{
            const { rerender } = (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const startTime = performance.now();
            // Múltiples cambios rápidos
            for(let i = 0; i < 10; i++){
                setViewport(i % 2 === 0 ? 375 : 1200);
                rerender(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            }
            const endTime = performance.now();
            const totalTime = endTime - startTime;
            // Debe ser rápido incluso con múltiples cambios
            expect(totalTime).toBeLessThan(500);
            expect(_react1.screen.getByTestId('responsive-header')).toBeInTheDocument();
        });
    });
});

//# sourceMappingURL=data:application/json;base64,