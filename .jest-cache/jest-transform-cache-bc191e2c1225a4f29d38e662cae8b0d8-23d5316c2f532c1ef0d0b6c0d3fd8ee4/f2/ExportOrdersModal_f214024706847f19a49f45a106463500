6f9d473d5f7c51b013cf37b0560e09bb
/**
 * Modal de Exportación de Órdenes - Panel Administrativo
 * Basado en mejores prácticas de e-commerce (Shopify, WooCommerce)
 */'use client';
"use strict";

/* istanbul ignore next */
function cov_1exzddo1le() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\admin\\orders\\ExportOrdersModal.tsx";
  var hash = "9784bcfe42333ed76d5682b67d841ba52e2ba437";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\admin\\orders\\ExportOrdersModal.tsx",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 8,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 14,
          column: 3
        }
      },
      "2": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 33
        }
      },
      "3": {
        start: {
          line: 15,
          column: 20
        },
        end: {
          line: 15,
          column: 48
        }
      },
      "4": {
        start: {
          line: 16,
          column: 29
        },
        end: {
          line: 16,
          column: 72
        }
      },
      "5": {
        start: {
          line: 17,
          column: 16
        },
        end: {
          line: 17,
          column: 42
        }
      },
      "6": {
        start: {
          line: 18,
          column: 16
        },
        end: {
          line: 18,
          column: 42
        }
      },
      "7": {
        start: {
          line: 19,
          column: 15
        },
        end: {
          line: 19,
          column: 40
        }
      },
      "8": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 42
        }
      },
      "9": {
        start: {
          line: 21,
          column: 18
        },
        end: {
          line: 21,
          column: 46
        }
      },
      "10": {
        start: {
          line: 22,
          column: 14
        },
        end: {
          line: 22,
          column: 38
        }
      },
      "11": {
        start: {
          line: 23,
          column: 19
        },
        end: {
          line: 23,
          column: 48
        }
      },
      "12": {
        start: {
          line: 24,
          column: 15
        },
        end: {
          line: 24,
          column: 40
        }
      },
      "13": {
        start: {
          line: 25,
          column: 21
        },
        end: {
          line: 25,
          column: 44
        }
      },
      "14": {
        start: {
          line: 26,
          column: 31
        },
        end: {
          line: 26,
          column: 84
        }
      },
      "15": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 51
        }
      },
      "16": {
        start: {
          line: 28,
          column: 39
        },
        end: {
          line: 28,
          column: 51
        }
      },
      "17": {
        start: {
          line: 29,
          column: 28
        },
        end: {
          line: 29,
          column: 41
        }
      },
      "18": {
        start: {
          line: 30,
          column: 27
        },
        end: {
          line: 30,
          column: 40
        }
      },
      "19": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 33,
          column: 20
        }
      },
      "20": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 66
        }
      },
      "21": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 38,
          column: 5
        }
      },
      "22": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 19
        }
      },
      "23": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 43,
          column: 5
        }
      },
      "24": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 42,
          column: 10
        }
      },
      "25": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 44,
          column: 53
        }
      },
      "26": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 47,
          column: 5
        }
      },
      "27": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 30
        }
      },
      "28": {
        start: {
          line: 48,
          column: 17
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "29": {
        start: {
          line: 51,
          column: 32
        },
        end: {
          line: 51,
          column: 88
        }
      },
      "30": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 61,
          column: 5
        }
      },
      "31": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 60,
          column: 9
        }
      },
      "32": {
        start: {
          line: 54,
          column: 23
        },
        end: {
          line: 54,
          column: 95
        }
      },
      "33": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 59,
          column: 13
        }
      },
      "34": {
        start: {
          line: 56,
          column: 16
        },
        end: {
          line: 56,
          column: 57
        }
      },
      "35": {
        start: {
          line: 58,
          column: 16
        },
        end: {
          line: 58,
          column: 39
        }
      },
      "36": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 62,
          column: 25
        }
      },
      "37": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 65,
          column: 5
        }
      },
      "38": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 31
        }
      },
      "39": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 66,
          column: 18
        }
      },
      "40": {
        start: {
          line: 71,
          column: 22
        },
        end: {
          line: 162,
          column: 1
        }
      },
      "41": {
        start: {
          line: 163,
          column: 25
        },
        end: {
          line: 184,
          column: 1
        }
      },
      "42": {
        start: {
          line: 185,
          column: 26
        },
        end: {
          line: 725,
          column: 1
        }
      },
      "43": {
        start: {
          line: 186,
          column: 26
        },
        end: {
          line: 186,
          column: 77
        }
      },
      "44": {
        start: {
          line: 188,
          column: 32
        },
        end: {
          line: 188,
          column: 59
        }
      },
      "45": {
        start: {
          line: 189,
          column: 48
        },
        end: {
          line: 196,
          column: 6
        }
      },
      "46": {
        start: {
          line: 197,
          column: 34
        },
        end: {
          line: 204,
          column: 6
        }
      },
      "47": {
        start: {
          line: 205,
          column: 42
        },
        end: {
          line: 205,
          column: 69
        }
      },
      "48": {
        start: {
          line: 209,
          column: 24
        },
        end: {
          line: 214,
          column: 5
        }
      },
      "49": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 213,
          column: 15
        }
      },
      "50": {
        start: {
          line: 210,
          column: 34
        },
        end: {
          line: 213,
          column: 13
        }
      },
      "51": {
        start: {
          line: 210,
          column: 79
        },
        end: {
          line: 210,
          column: 95
        }
      },
      "52": {
        start: {
          line: 215,
          column: 28
        },
        end: {
          line: 217,
          column: 5
        }
      },
      "53": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 216,
          column: 65
        }
      },
      "54": {
        start: {
          line: 216,
          column: 53
        },
        end: {
          line: 216,
          column: 62
        }
      },
      "55": {
        start: {
          line: 218,
          column: 30
        },
        end: {
          line: 227,
          column: 5
        }
      },
      "56": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 226,
          column: 11
        }
      },
      "57": {
        start: {
          line: 228,
          column: 27
        },
        end: {
          line: 230,
          column: 5
        }
      },
      "58": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 229,
          column: 30
        }
      },
      "59": {
        start: {
          line: 231,
          column: 30
        },
        end: {
          line: 244,
          column: 5
        }
      },
      "60": {
        start: {
          line: 233,
          column: 24
        },
        end: {
          line: 233,
          column: 35
        }
      },
      "61": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 236,
          column: 9
        }
      },
      "62": {
        start: {
          line: 235,
          column: 12
        },
        end: {
          line: 235,
          column: 52
        }
      },
      "63": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 239,
          column: 9
        }
      },
      "64": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 238,
          column: 52
        }
      },
      "65": {
        start: {
          line: 240,
          column: 8
        },
        end: {
          line: 242,
          column: 9
        }
      },
      "66": {
        start: {
          line: 241,
          column: 12
        },
        end: {
          line: 241,
          column: 52
        }
      },
      "67": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 243,
          column: 25
        }
      },
      "68": {
        start: {
          line: 245,
          column: 25
        },
        end: {
          line: 297,
          column: 5
        }
      },
      "69": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 296,
          column: 9
        }
      },
      "70": {
        start: {
          line: 247,
          column: 12
        },
        end: {
          line: 250,
          column: 13
        }
      },
      "71": {
        start: {
          line: 248,
          column: 16
        },
        end: {
          line: 248,
          column: 104
        }
      },
      "72": {
        start: {
          line: 249,
          column: 16
        },
        end: {
          line: 249,
          column: 23
        }
      },
      "73": {
        start: {
          line: 251,
          column: 12
        },
        end: {
          line: 251,
          column: 33
        }
      },
      "74": {
        start: {
          line: 252,
          column: 36
        },
        end: {
          line: 252,
          column: 94
        }
      },
      "75": {
        start: {
          line: 254,
          column: 33
        },
        end: {
          line: 265,
          column: 13
        }
      },
      "76": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 267,
          column: 68
        }
      },
      "77": {
        start: {
          line: 267,
          column: 41
        },
        end: {
          line: 267,
          column: 66
        }
      },
      "78": {
        start: {
          line: 269,
          column: 35
        },
        end: {
          line: 269,
          column: 54
        }
      },
      "79": {
        start: {
          line: 270,
          column: 29
        },
        end: {
          line: 270,
          column: 90
        }
      },
      "80": {
        start: {
          line: 272,
          column: 25
        },
        end: {
          line: 276,
          column: 14
        }
      },
      "81": {
        start: {
          line: 277,
          column: 24
        },
        end: {
          line: 277,
          column: 49
        }
      },
      "82": {
        start: {
          line: 278,
          column: 22
        },
        end: {
          line: 278,
          column: 49
        }
      },
      "83": {
        start: {
          line: 279,
          column: 12
        },
        end: {
          line: 279,
          column: 25
        }
      },
      "84": {
        start: {
          line: 280,
          column: 12
        },
        end: {
          line: 280,
          column: 34
        }
      },
      "85": {
        start: {
          line: 281,
          column: 12
        },
        end: {
          line: 281,
          column: 41
        }
      },
      "86": {
        start: {
          line: 282,
          column: 12
        },
        end: {
          line: 282,
          column: 22
        }
      },
      "87": {
        start: {
          line: 283,
          column: 12
        },
        end: {
          line: 283,
          column: 41
        }
      },
      "88": {
        start: {
          line: 284,
          column: 12
        },
        end: {
          line: 284,
          column: 37
        }
      },
      "89": {
        start: {
          line: 285,
          column: 12
        },
        end: {
          line: 285,
          column: 38
        }
      },
      "90": {
        start: {
          line: 286,
          column: 12
        },
        end: {
          line: 289,
          column: 15
        }
      },
      "91": {
        start: {
          line: 290,
          column: 12
        },
        end: {
          line: 290,
          column: 22
        }
      },
      "92": {
        start: {
          line: 292,
          column: 12
        },
        end: {
          line: 292,
          column: 60
        }
      },
      "93": {
        start: {
          line: 293,
          column: 12
        },
        end: {
          line: 293,
          column: 94
        }
      },
      "94": {
        start: {
          line: 295,
          column: 12
        },
        end: {
          line: 295,
          column: 34
        }
      },
      "95": {
        start: {
          line: 298,
          column: 29
        },
        end: {
          line: 304,
          column: 10
        }
      },
      "96": {
        start: {
          line: 299,
          column: 8
        },
        end: {
          line: 301,
          column: 9
        }
      },
      "97": {
        start: {
          line: 300,
          column: 12
        },
        end: {
          line: 300,
          column: 37
        }
      },
      "98": {
        start: {
          line: 302,
          column: 8
        },
        end: {
          line: 302,
          column: 40
        }
      },
      "99": {
        start: {
          line: 303,
          column: 8
        },
        end: {
          line: 303,
          column: 19
        }
      },
      "100": {
        start: {
          line: 305,
          column: 4
        },
        end: {
          line: 724,
          column: 7
        }
      },
      "101": {
        start: {
          line: 346,
          column: 84
        },
        end: {
          line: 346,
          column: 100
        }
      },
      "102": {
        start: {
          line: 439,
          column: 83
        },
        end: {
          line: 442,
          column: 79
        }
      },
      "103": {
        start: {
          line: 439,
          column: 103
        },
        end: {
          line: 442,
          column: 77
        }
      },
      "104": {
        start: {
          line: 456,
          column: 83
        },
        end: {
          line: 459,
          column: 79
        }
      },
      "105": {
        start: {
          line: 456,
          column: 103
        },
        end: {
          line: 459,
          column: 77
        }
      },
      "106": {
        start: {
          line: 472,
          column: 84
        },
        end: {
          line: 475,
          column: 71
        }
      },
      "107": {
        start: {
          line: 472,
          column: 104
        },
        end: {
          line: 475,
          column: 69
        }
      },
      "108": {
        start: {
          line: 519,
          column: 84
        },
        end: {
          line: 522,
          column: 71
        }
      },
      "109": {
        start: {
          line: 519,
          column: 104
        },
        end: {
          line: 522,
          column: 69
        }
      },
      "110": {
        start: {
          line: 569,
          column: 83
        },
        end: {
          line: 572,
          column: 79
        }
      },
      "111": {
        start: {
          line: 569,
          column: 103
        },
        end: {
          line: 572,
          column: 77
        }
      },
      "112": {
        start: {
          line: 587,
          column: 83
        },
        end: {
          line: 590,
          column: 79
        }
      },
      "113": {
        start: {
          line: 587,
          column: 103
        },
        end: {
          line: 590,
          column: 77
        }
      },
      "114": {
        start: {
          line: 616,
          column: 69
        },
        end: {
          line: 616,
          column: 95
        }
      },
      "115": {
        start: {
          line: 617,
          column: 61
        },
        end: {
          line: 617,
          column: 78
        }
      },
      "116": {
        start: {
          line: 618,
          column: 48
        },
        end: {
          line: 651,
          column: 61
        }
      },
      "117": {
        start: {
          line: 634,
          column: 104
        },
        end: {
          line: 648,
          column: 77
        }
      },
      "118": {
        start: {
          line: 640,
          column: 97
        },
        end: {
          line: 640,
          column: 119
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 9
          },
          end: {
            line: 11,
            column: 10
          }
        },
        loc: {
          start: {
            line: 11,
            column: 20
          },
          end: {
            line: 13,
            column: 5
          }
        },
        line: 11
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 27,
            column: 9
          },
          end: {
            line: 27,
            column: 33
          }
        },
        loc: {
          start: {
            line: 27,
            column: 47
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 27
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 31,
            column: 39
          },
          end: {
            line: 31,
            column: 40
          }
        },
        loc: {
          start: {
            line: 31,
            column: 61
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 31
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 35,
            column: 9
          },
          end: {
            line: 35,
            column: 34
          }
        },
        loc: {
          start: {
            line: 35,
            column: 53
          },
          end: {
            line: 67,
            column: 1
          }
        },
        line: 35
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 185,
            column: 26
          },
          end: {
            line: 185,
            column: 27
          }
        },
        loc: {
          start: {
            line: 185,
            column: 62
          },
          end: {
            line: 725,
            column: 1
          }
        },
        line: 185
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 209,
            column: 24
          },
          end: {
            line: 209,
            column: 25
          }
        },
        loc: {
          start: {
            line: 209,
            column: 36
          },
          end: {
            line: 214,
            column: 5
          }
        },
        line: 209
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 210,
            column: 26
          },
          end: {
            line: 210,
            column: 27
          }
        },
        loc: {
          start: {
            line: 210,
            column: 34
          },
          end: {
            line: 213,
            column: 13
          }
        },
        line: 210
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 210,
            column: 72
          },
          end: {
            line: 210,
            column: 73
          }
        },
        loc: {
          start: {
            line: 210,
            column: 79
          },
          end: {
            line: 210,
            column: 95
          }
        },
        line: 210
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 215,
            column: 28
          },
          end: {
            line: 215,
            column: 29
          }
        },
        loc: {
          start: {
            line: 215,
            column: 32
          },
          end: {
            line: 217,
            column: 5
          }
        },
        line: 215
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 216,
            column: 44
          },
          end: {
            line: 216,
            column: 45
          }
        },
        loc: {
          start: {
            line: 216,
            column: 53
          },
          end: {
            line: 216,
            column: 62
          }
        },
        line: 216
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 218,
            column: 30
          },
          end: {
            line: 218,
            column: 31
          }
        },
        loc: {
          start: {
            line: 218,
            column: 34
          },
          end: {
            line: 227,
            column: 5
          }
        },
        line: 218
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 228,
            column: 27
          },
          end: {
            line: 228,
            column: 28
          }
        },
        loc: {
          start: {
            line: 228,
            column: 31
          },
          end: {
            line: 230,
            column: 5
          }
        },
        line: 228
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 231,
            column: 30
          },
          end: {
            line: 231,
            column: 31
          }
        },
        loc: {
          start: {
            line: 231,
            column: 34
          },
          end: {
            line: 244,
            column: 5
          }
        },
        line: 231
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 245,
            column: 25
          },
          end: {
            line: 245,
            column: 26
          }
        },
        loc: {
          start: {
            line: 245,
            column: 35
          },
          end: {
            line: 297,
            column: 5
          }
        },
        line: 245
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 267,
            column: 30
          },
          end: {
            line: 267,
            column: 31
          }
        },
        loc: {
          start: {
            line: 267,
            column: 41
          },
          end: {
            line: 267,
            column: 66
          }
        },
        line: 267
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 298,
            column: 50
          },
          end: {
            line: 298,
            column: 51
          }
        },
        loc: {
          start: {
            line: 298,
            column: 64
          },
          end: {
            line: 304,
            column: 5
          }
        },
        line: 298
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 346,
            column: 75
          },
          end: {
            line: 346,
            column: 76
          }
        },
        loc: {
          start: {
            line: 346,
            column: 84
          },
          end: {
            line: 346,
            column: 100
          }
        },
        line: 346
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 439,
            column: 78
          },
          end: {
            line: 439,
            column: 79
          }
        },
        loc: {
          start: {
            line: 439,
            column: 83
          },
          end: {
            line: 442,
            column: 79
          }
        },
        line: 439
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 439,
            column: 94
          },
          end: {
            line: 439,
            column: 95
          }
        },
        loc: {
          start: {
            line: 439,
            column: 103
          },
          end: {
            line: 442,
            column: 77
          }
        },
        line: 439
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 456,
            column: 78
          },
          end: {
            line: 456,
            column: 79
          }
        },
        loc: {
          start: {
            line: 456,
            column: 83
          },
          end: {
            line: 459,
            column: 79
          }
        },
        line: 456
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 456,
            column: 94
          },
          end: {
            line: 456,
            column: 95
          }
        },
        loc: {
          start: {
            line: 456,
            column: 103
          },
          end: {
            line: 459,
            column: 77
          }
        },
        line: 456
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 472,
            column: 75
          },
          end: {
            line: 472,
            column: 76
          }
        },
        loc: {
          start: {
            line: 472,
            column: 84
          },
          end: {
            line: 475,
            column: 71
          }
        },
        line: 472
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 472,
            column: 95
          },
          end: {
            line: 472,
            column: 96
          }
        },
        loc: {
          start: {
            line: 472,
            column: 104
          },
          end: {
            line: 475,
            column: 69
          }
        },
        line: 472
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 519,
            column: 75
          },
          end: {
            line: 519,
            column: 76
          }
        },
        loc: {
          start: {
            line: 519,
            column: 84
          },
          end: {
            line: 522,
            column: 71
          }
        },
        line: 519
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 519,
            column: 95
          },
          end: {
            line: 519,
            column: 96
          }
        },
        loc: {
          start: {
            line: 519,
            column: 104
          },
          end: {
            line: 522,
            column: 69
          }
        },
        line: 519
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 569,
            column: 78
          },
          end: {
            line: 569,
            column: 79
          }
        },
        loc: {
          start: {
            line: 569,
            column: 83
          },
          end: {
            line: 572,
            column: 79
          }
        },
        line: 569
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 569,
            column: 94
          },
          end: {
            line: 569,
            column: 95
          }
        },
        loc: {
          start: {
            line: 569,
            column: 103
          },
          end: {
            line: 572,
            column: 77
          }
        },
        line: 569
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 587,
            column: 78
          },
          end: {
            line: 587,
            column: 79
          }
        },
        loc: {
          start: {
            line: 587,
            column: 83
          },
          end: {
            line: 590,
            column: 79
          }
        },
        line: 587
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 587,
            column: 94
          },
          end: {
            line: 587,
            column: 95
          }
        },
        loc: {
          start: {
            line: 587,
            column: 103
          },
          end: {
            line: 590,
            column: 77
          }
        },
        line: 587
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 615,
            column: 91
          },
          end: {
            line: 615,
            column: 92
          }
        },
        loc: {
          start: {
            line: 615,
            column: 113
          },
          end: {
            line: 652,
            column: 45
          }
        },
        line: 615
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 634,
            column: 81
          },
          end: {
            line: 634,
            column: 82
          }
        },
        loc: {
          start: {
            line: 634,
            column: 104
          },
          end: {
            line: 648,
            column: 77
          }
        },
        line: 634
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 640,
            column: 93
          },
          end: {
            line: 640,
            column: 94
          }
        },
        loc: {
          start: {
            line: 640,
            column: 97
          },
          end: {
            line: 640,
            column: 119
          }
        },
        line: 640
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "1": {
        loc: {
          start: {
            line: 32,
            column: 15
          },
          end: {
            line: 32,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 32,
            column: 29
          },
          end: {
            line: 32,
            column: 45
          }
        }, {
          start: {
            line: 32,
            column: 48
          },
          end: {
            line: 32,
            column: 65
          }
        }],
        line: 32
      },
      "2": {
        loc: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "3": {
        loc: {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 20
          }
        }, {
          start: {
            line: 36,
            column: 24
          },
          end: {
            line: 36,
            column: 27
          }
        }, {
          start: {
            line: 36,
            column: 31
          },
          end: {
            line: 36,
            column: 45
          }
        }],
        line: 36
      },
      "4": {
        loc: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "5": {
        loc: {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 39,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 39,
            column: 20
          }
        }, {
          start: {
            line: 39,
            column: 24
          },
          end: {
            line: 39,
            column: 47
          }
        }, {
          start: {
            line: 39,
            column: 51
          },
          end: {
            line: 39,
            column: 76
          }
        }],
        line: 39
      },
      "6": {
        loc: {
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 45
      },
      "7": {
        loc: {
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 45,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 45,
            column: 13
          }
        }, {
          start: {
            line: 45,
            column: 17
          },
          end: {
            line: 45,
            column: 31
          }
        }],
        line: 45
      },
      "8": {
        loc: {
          start: {
            line: 51,
            column: 32
          },
          end: {
            line: 51,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 32
          },
          end: {
            line: 51,
            column: 53
          }
        }, {
          start: {
            line: 51,
            column: 57
          },
          end: {
            line: 51,
            column: 88
          }
        }],
        line: 51
      },
      "9": {
        loc: {
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "10": {
        loc: {
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 53,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 53,
            column: 29
          }
        }, {
          start: {
            line: 53,
            column: 33
          },
          end: {
            line: 53,
            column: 79
          }
        }],
        line: 53
      },
      "11": {
        loc: {
          start: {
            line: 54,
            column: 23
          },
          end: {
            line: 54,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 54,
            column: 47
          },
          end: {
            line: 54,
            column: 88
          }
        }, {
          start: {
            line: 54,
            column: 91
          },
          end: {
            line: 54,
            column: 95
          }
        }],
        line: 54
      },
      "12": {
        loc: {
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 59,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 59,
            column: 13
          }
        }, {
          start: {
            line: 57,
            column: 19
          },
          end: {
            line: 59,
            column: 13
          }
        }],
        line: 55
      },
      "13": {
        loc: {
          start: {
            line: 55,
            column: 16
          },
          end: {
            line: 55,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 55,
            column: 16
          },
          end: {
            line: 55,
            column: 20
          }
        }, {
          start: {
            line: 55,
            column: 25
          },
          end: {
            line: 55,
            column: 33
          }
        }, {
          start: {
            line: 55,
            column: 37
          },
          end: {
            line: 55,
            column: 45
          }
        }],
        line: 55
      },
      "14": {
        loc: {
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "15": {
        loc: {
          start: {
            line: 210,
            column: 34
          },
          end: {
            line: 213,
            column: 13
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 210,
            column: 60
          },
          end: {
            line: 210,
            column: 96
          }
        }, {
          start: {
            line: 210,
            column: 99
          },
          end: {
            line: 213,
            column: 13
          }
        }],
        line: 210
      },
      "16": {
        loc: {
          start: {
            line: 234,
            column: 8
          },
          end: {
            line: 236,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 8
          },
          end: {
            line: 236,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 234
      },
      "17": {
        loc: {
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 239,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 239,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 237
      },
      "18": {
        loc: {
          start: {
            line: 240,
            column: 8
          },
          end: {
            line: 242,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 240,
            column: 8
          },
          end: {
            line: 242,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 240
      },
      "19": {
        loc: {
          start: {
            line: 240,
            column: 12
          },
          end: {
            line: 240,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 240,
            column: 12
          },
          end: {
            line: 240,
            column: 28
          }
        }, {
          start: {
            line: 240,
            column: 32
          },
          end: {
            line: 240,
            column: 46
          }
        }],
        line: 240
      },
      "20": {
        loc: {
          start: {
            line: 247,
            column: 12
          },
          end: {
            line: 250,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 247,
            column: 12
          },
          end: {
            line: 250,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 247
      },
      "21": {
        loc: {
          start: {
            line: 260,
            column: 30
          },
          end: {
            line: 260,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 260,
            column: 30
          },
          end: {
            line: 260,
            column: 46
          }
        }, {
          start: {
            line: 260,
            column: 50
          },
          end: {
            line: 260,
            column: 59
          }
        }],
        line: 260
      },
      "22": {
        loc: {
          start: {
            line: 261,
            column: 28
          },
          end: {
            line: 261,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 261,
            column: 28
          },
          end: {
            line: 261,
            column: 42
          }
        }, {
          start: {
            line: 261,
            column: 46
          },
          end: {
            line: 261,
            column: 55
          }
        }],
        line: 261
      },
      "23": {
        loc: {
          start: {
            line: 262,
            column: 31
          },
          end: {
            line: 262,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 262,
            column: 51
          },
          end: {
            line: 262,
            column: 76
          }
        }, {
          start: {
            line: 262,
            column: 79
          },
          end: {
            line: 262,
            column: 88
          }
        }],
        line: 262
      },
      "24": {
        loc: {
          start: {
            line: 263,
            column: 31
          },
          end: {
            line: 263,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 263,
            column: 51
          },
          end: {
            line: 263,
            column: 76
          }
        }, {
          start: {
            line: 263,
            column: 79
          },
          end: {
            line: 263,
            column: 88
          }
        }],
        line: 263
      },
      "25": {
        loc: {
          start: {
            line: 275,
            column: 22
          },
          end: {
            line: 275,
            column: 121
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 275,
            column: 41
          },
          end: {
            line: 275,
            column: 51
          }
        }, {
          start: {
            line: 275,
            column: 54
          },
          end: {
            line: 275,
            column: 121
          }
        }],
        line: 275
      },
      "26": {
        loc: {
          start: {
            line: 299,
            column: 8
          },
          end: {
            line: 301,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 299,
            column: 8
          },
          end: {
            line: 301,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 299
      },
      "27": {
        loc: {
          start: {
            line: 716,
            column: 38
          },
          end: {
            line: 716,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 716,
            column: 38
          },
          end: {
            line: 716,
            column: 49
          }
        }, {
          start: {
            line: 716,
            column: 53
          },
          end: {
            line: 716,
            column: 80
          }
        }],
        line: 716
      },
      "28": {
        loc: {
          start: {
            line: 718,
            column: 38
          },
          end: {
            line: 718,
            column: 104
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 718,
            column: 52
          },
          end: {
            line: 718,
            column: 67
          }
        }, {
          start: {
            line: 718,
            column: 70
          },
          end: {
            line: 718,
            column: 104
          }
        }],
        line: 718
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\admin\\orders\\ExportOrdersModal.tsx"],
      sourcesContent: ["/**\r\n * Modal de Exportaci\xF3n de \xD3rdenes - Panel Administrativo\r\n * Basado en mejores pr\xE1cticas de e-commerce (Shopify, WooCommerce)\r\n */\r\n\r\n'use client';\r\n\r\nimport React, { useState } from 'react';\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogTitle,\r\n  DialogFooter,\r\n} from '@/components/ui/dialog';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\r\nimport { Checkbox } from '@/components/ui/checkbox';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Separator } from '@/components/ui/separator';\r\nimport { Input } from '@/components/ui/input';\r\nimport { \r\n  Download, \r\n  FileText, \r\n  Calendar, \r\n  Filter,\r\n  CheckCircle,\r\n  AlertCircle\r\n} from 'lucide-react';\r\nimport { useOrderNotifications } from '@/hooks/admin/useOrderNotifications';\r\n\r\n// ===================================\r\n// TIPOS\r\n// ===================================\r\n\r\ninterface ExportField {\r\n  key: string;\r\n  label: string;\r\n  description?: string;\r\n  category: 'basic' | 'customer' | 'products' | 'payment' | 'shipping';\r\n}\r\n\r\ninterface ExportFilters {\r\n  dateFrom: string;\r\n  dateTo: string;\r\n  status: string;\r\n  paymentStatus: string;\r\n  minAmount: string;\r\n  maxAmount: string;\r\n}\r\n\r\ninterface ExportOrdersModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  totalOrders: number;\r\n}\r\n\r\n// ===================================\r\n// CAMPOS DISPONIBLES PARA EXPORTAR\r\n// ===================================\r\n\r\nconst EXPORT_FIELDS: ExportField[] = [\r\n  // B\xE1sicos\r\n  { key: 'id', label: 'ID de Orden', category: 'basic' },\r\n  { key: 'external_reference', label: 'Referencia Externa', category: 'basic' },\r\n  { key: 'status', label: 'Estado', category: 'basic' },\r\n  { key: 'created_at', label: 'Fecha de Creaci\xF3n', category: 'basic' },\r\n  { key: 'updated_at', label: '\xDAltima Actualizaci\xF3n', category: 'basic' },\r\n  \r\n  // Cliente\r\n  { key: 'customer_name', label: 'Nombre del Cliente', category: 'customer' },\r\n  { key: 'customer_email', label: 'Email del Cliente', category: 'customer' },\r\n  { key: 'customer_phone', label: 'Tel\xE9fono del Cliente', category: 'customer' },\r\n  \r\n  // Productos\r\n  { key: 'product_count', label: 'Cantidad de Productos', category: 'products' },\r\n  { key: 'product_names', label: 'Nombres de Productos', category: 'products' },\r\n  { key: 'product_quantities', label: 'Cantidades', category: 'products' },\r\n  \r\n  // Pago\r\n  { key: 'total', label: 'Total', category: 'payment' },\r\n  { key: 'payment_status', label: 'Estado de Pago', category: 'payment' },\r\n  { key: 'payment_method', label: 'M\xE9todo de Pago', category: 'payment' },\r\n  \r\n  // Env\xEDo\r\n  { key: 'shipping_address', label: 'Direcci\xF3n de Env\xEDo', category: 'shipping' },\r\n  { key: 'shipping_method', label: 'M\xE9todo de Env\xEDo', category: 'shipping' },\r\n  { key: 'tracking_number', label: 'N\xFAmero de Seguimiento', category: 'shipping' },\r\n];\r\n\r\nconst FIELD_CATEGORIES = {\r\n  basic: { label: 'Informaci\xF3n B\xE1sica', icon: FileText },\r\n  customer: { label: 'Datos del Cliente', icon: CheckCircle },\r\n  products: { label: 'Productos', icon: CheckCircle },\r\n  payment: { label: 'Informaci\xF3n de Pago', icon: CheckCircle },\r\n  shipping: { label: 'Informaci\xF3n de Env\xEDo', icon: CheckCircle },\r\n};\r\n\r\n// ===================================\r\n// COMPONENTE PRINCIPAL\r\n// ===================================\r\n\r\nexport const ExportOrdersModal: React.FC<ExportOrdersModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  totalOrders,\r\n}) => {\r\n  const notifications = useOrderNotifications();\r\n\r\n  // Estados\r\n  const [format, setFormat] = useState<'csv' | 'excel'>('csv');\r\n  const [selectedFields, setSelectedFields] = useState<string[]>([\r\n    'id', 'status', 'created_at', 'customer_name', 'customer_email', 'total'\r\n  ]);\r\n  const [filters, setFilters] = useState<ExportFilters>({\r\n    dateFrom: '',\r\n    dateTo: '',\r\n    status: 'all',\r\n    paymentStatus: 'all',\r\n    minAmount: '',\r\n    maxAmount: '',\r\n  });\r\n  const [isExporting, setIsExporting] = useState(false);\r\n\r\n  // ===================================\r\n  // FUNCIONES\r\n  // ===================================\r\n\r\n  const toggleField = (fieldKey: string) => {\r\n    setSelectedFields(prev => \r\n      prev.includes(fieldKey)\r\n        ? prev.filter(key => key !== fieldKey)\r\n        : [...prev, fieldKey]\r\n    );\r\n  };\r\n\r\n  const selectAllFields = () => {\r\n    setSelectedFields(EXPORT_FIELDS.map(field => field.key));\r\n  };\r\n\r\n  const selectBasicFields = () => {\r\n    setSelectedFields(['id', 'status', 'created_at', 'customer_name', 'customer_email', 'total']);\r\n  };\r\n\r\n  const clearAllFields = () => {\r\n    setSelectedFields([]);\r\n  };\r\n\r\n  const getEstimatedCount = () => {\r\n    // Simular filtrado (en implementaci\xF3n real, esto vendr\xEDa del backend)\r\n    let estimated = totalOrders;\r\n    \r\n    if (filters.status !== 'all') {\r\n      estimated = Math.floor(estimated * 0.7); // Aproximaci\xF3n\r\n    }\r\n    \r\n    if (filters.paymentStatus !== 'all') {\r\n      estimated = Math.floor(estimated * 0.8); // Aproximaci\xF3n\r\n    }\r\n    \r\n    if (filters.dateFrom || filters.dateTo) {\r\n      estimated = Math.floor(estimated * 0.6); // Aproximaci\xF3n\r\n    }\r\n    \r\n    return estimated;\r\n  };\r\n\r\n  const exportOrders = async () => {\r\n    try {\r\n      if (selectedFields.length === 0) {\r\n        notifications.showValidationWarning('Debe seleccionar al menos un campo para exportar');\r\n        return;\r\n      }\r\n\r\n      setIsExporting(true);\r\n      const processingToast = notifications.showProcessingInfo('Preparando exportaci\xF3n');\r\n\r\n      // Preparar par\xE1metros de exportaci\xF3n\r\n      const exportParams = {\r\n        format,\r\n        fields: selectedFields,\r\n        filters: {\r\n          ...filters,\r\n          // Limpiar campos vac\xEDos\r\n          dateFrom: filters.dateFrom || undefined,\r\n          dateTo: filters.dateTo || undefined,\r\n          minAmount: filters.minAmount ? Number(filters.minAmount) : undefined,\r\n          maxAmount: filters.maxAmount ? Number(filters.maxAmount) : undefined,\r\n        },\r\n      };\r\n\r\n      // Simular exportaci\xF3n (reemplazar con API real)\r\n      await new Promise(resolve => setTimeout(resolve, 3000));\r\n\r\n      // Simular descarga de archivo\r\n      const estimatedCount = getEstimatedCount();\r\n      const filename = `ordenes_${new Date().toISOString().split('T')[0]}.${format}`;\r\n      \r\n      // En implementaci\xF3n real, aqu\xED se descargar\xEDa el archivo\r\n      const blob = new Blob(['Datos de exportaci\xF3n simulados'], { \r\n        type: format === 'csv' ? 'text/csv' : 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' \r\n      });\r\n      const url = URL.createObjectURL(blob);\r\n      const a = document.createElement('a');\r\n      a.href = url;\r\n      a.download = filename;\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      document.body.removeChild(a);\r\n      URL.revokeObjectURL(url);\r\n\r\n      processingToast.dismiss();\r\n      \r\n      notifications.showExportSuccess({\r\n        format: format.toUpperCase() as 'CSV' | 'Excel',\r\n        recordCount: estimatedCount,\r\n      });\r\n\r\n      onClose();\r\n\r\n    } catch (error) {\r\n      console.error('Error exporting orders:', error);\r\n      notifications.showExportError(format.toUpperCase(), 'Error interno del servidor');\r\n    } finally {\r\n      setIsExporting(false);\r\n    }\r\n  };\r\n\r\n  const fieldsByCategory = EXPORT_FIELDS.reduce((acc, field) => {\r\n    if (!acc[field.category]) {\r\n      acc[field.category] = [];\r\n    }\r\n    acc[field.category].push(field);\r\n    return acc;\r\n  }, {} as Record<string, ExportField[]>);\r\n\r\n  return (\r\n    <Dialog open={isOpen} onOpenChange={onClose}>\r\n      <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-hidden\">\r\n        <DialogHeader>\r\n          <DialogTitle className=\"flex items-center gap-2\">\r\n            <Download className=\"h-5 w-5\" />\r\n            Exportar \xD3rdenes\r\n          </DialogTitle>\r\n        </DialogHeader>\r\n\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6 overflow-y-auto max-h-[600px]\">\r\n          {/* Configuraci\xF3n de Formato */}\r\n          <div className=\"space-y-4\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"text-lg\">Formato de Exportaci\xF3n</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <div>\r\n                  <Label>Formato de Archivo</Label>\r\n                  <Select value={format} onValueChange={(value: 'csv' | 'excel') => setFormat(value)}>\r\n                    <SelectTrigger>\r\n                      <SelectValue />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      <SelectItem value=\"csv\">CSV (Comma Separated Values)</SelectItem>\r\n                      <SelectItem value=\"excel\">Excel (.xlsx)</SelectItem>\r\n                    </SelectContent>\r\n                  </Select>\r\n                </div>\r\n\r\n                <Separator />\r\n\r\n                <div className=\"space-y-3\">\r\n                  <Label>Selecci\xF3n de Campos</Label>\r\n                  <div className=\"flex flex-wrap gap-2\">\r\n                    <Button size=\"sm\" variant=\"outline\" onClick={selectAllFields}>\r\n                      Todos\r\n                    </Button>\r\n                    <Button size=\"sm\" variant=\"outline\" onClick={selectBasicFields}>\r\n                      B\xE1sicos\r\n                    </Button>\r\n                    <Button size=\"sm\" variant=\"outline\" onClick={clearAllFields}>\r\n                      Limpiar\r\n                    </Button>\r\n                  </div>\r\n                  <p className=\"text-sm text-gray-600\">\r\n                    {selectedFields.length} campos seleccionados\r\n                  </p>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Filtros */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"text-lg flex items-center gap-2\">\r\n                  <Filter className=\"h-4 w-4\" />\r\n                  Filtros\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <div className=\"grid grid-cols-2 gap-2\">\r\n                  <div>\r\n                    <Label htmlFor=\"date-from\">Desde</Label>\r\n                    <Input\r\n                      id=\"date-from\"\r\n                      type=\"date\"\r\n                      value={filters.dateFrom}\r\n                      onChange={(e) => setFilters(prev => ({ ...prev, dateFrom: e.target.value }))}\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <Label htmlFor=\"date-to\">Hasta</Label>\r\n                    <Input\r\n                      id=\"date-to\"\r\n                      type=\"date\"\r\n                      value={filters.dateTo}\r\n                      onChange={(e) => setFilters(prev => ({ ...prev, dateTo: e.target.value }))}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <Label>Estado de Orden</Label>\r\n                  <Select value={filters.status} onValueChange={(value) => setFilters(prev => ({ ...prev, status: value }))}>\r\n                    <SelectTrigger>\r\n                      <SelectValue />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      <SelectItem value=\"all\">Todos los Estados</SelectItem>\r\n                      <SelectItem value=\"pending\">Pendiente</SelectItem>\r\n                      <SelectItem value=\"processing\">Procesando</SelectItem>\r\n                      <SelectItem value=\"shipped\">Enviado</SelectItem>\r\n                      <SelectItem value=\"delivered\">Entregado</SelectItem>\r\n                      <SelectItem value=\"cancelled\">Cancelado</SelectItem>\r\n                    </SelectContent>\r\n                  </Select>\r\n                </div>\r\n\r\n                <div>\r\n                  <Label>Estado de Pago</Label>\r\n                  <Select value={filters.paymentStatus} onValueChange={(value) => setFilters(prev => ({ ...prev, paymentStatus: value }))}>\r\n                    <SelectTrigger>\r\n                      <SelectValue />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      <SelectItem value=\"all\">Todos los Estados</SelectItem>\r\n                      <SelectItem value=\"pending\">Pendiente</SelectItem>\r\n                      <SelectItem value=\"paid\">Pagado</SelectItem>\r\n                      <SelectItem value=\"failed\">Fallido</SelectItem>\r\n                      <SelectItem value=\"refunded\">Reembolsado</SelectItem>\r\n                    </SelectContent>\r\n                  </Select>\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-2 gap-2\">\r\n                  <div>\r\n                    <Label htmlFor=\"min-amount\">Monto M\xEDn.</Label>\r\n                    <Input\r\n                      id=\"min-amount\"\r\n                      type=\"number\"\r\n                      placeholder=\"0\"\r\n                      value={filters.minAmount}\r\n                      onChange={(e) => setFilters(prev => ({ ...prev, minAmount: e.target.value }))}\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <Label htmlFor=\"max-amount\">Monto M\xE1x.</Label>\r\n                    <Input\r\n                      id=\"max-amount\"\r\n                      type=\"number\"\r\n                      placeholder=\"Sin l\xEDmite\"\r\n                      value={filters.maxAmount}\r\n                      onChange={(e) => setFilters(prev => ({ ...prev, maxAmount: e.target.value }))}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          {/* Selecci\xF3n de Campos */}\r\n          <div className=\"lg:col-span-2 space-y-4\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"text-lg\">Campos a Exportar</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-6\">\r\n                  {Object.entries(fieldsByCategory).map(([category, fields]) => {\r\n                    const categoryInfo = FIELD_CATEGORIES[category as keyof typeof FIELD_CATEGORIES];\r\n                    const Icon = categoryInfo.icon;\r\n                    \r\n                    return (\r\n                      <div key={category}>\r\n                        <div className=\"flex items-center gap-2 mb-3\">\r\n                          <Icon className=\"h-4 w-4\" />\r\n                          <h4 className=\"font-medium\">{categoryInfo.label}</h4>\r\n                        </div>\r\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2 ml-6\">\r\n                          {fields.map((field) => (\r\n                            <div key={field.key} className=\"flex items-center space-x-2\">\r\n                              <Checkbox\r\n                                id={field.key}\r\n                                checked={selectedFields.includes(field.key)}\r\n                                onCheckedChange={() => toggleField(field.key)}\r\n                              />\r\n                              <Label\r\n                                htmlFor={field.key}\r\n                                className=\"text-sm font-normal cursor-pointer\"\r\n                              >\r\n                                {field.label}\r\n                              </Label>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Resumen */}\r\n        <Card className=\"bg-blue-50 border-blue-200\">\r\n          <CardContent className=\"p-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"flex items-center gap-2\">\r\n                <AlertCircle className=\"h-5 w-5 text-blue-600\" />\r\n                <span className=\"font-medium\">Resumen de Exportaci\xF3n</span>\r\n              </div>\r\n              <div className=\"text-right\">\r\n                <p className=\"text-sm text-gray-600\">\r\n                  Aproximadamente <span className=\"font-medium\">{getEstimatedCount()}</span> \xF3rdenes\r\n                </p>\r\n                <p className=\"text-sm text-gray-600\">\r\n                  {selectedFields.length} campos seleccionados\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <DialogFooter>\r\n          <Button variant=\"outline\" onClick={onClose} disabled={isExporting}>\r\n            Cancelar\r\n          </Button>\r\n          <Button \r\n            onClick={exportOrders} \r\n            disabled={isExporting || selectedFields.length === 0}\r\n            className=\"min-w-[120px]\"\r\n          >\r\n            {isExporting ? 'Exportando...' : `Exportar ${format.toUpperCase()}`}\r\n          </Button>\r\n        </DialogFooter>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["ExportOrdersModal", "EXPORT_FIELDS", "key", "label", "category", "FIELD_CATEGORIES", "basic", "icon", "FileText", "customer", "CheckCircle", "products", "payment", "shipping", "isOpen", "onClose", "totalOrders", "notifications", "useOrderNotifications", "format", "setFormat", "useState", "selectedFields", "setSelectedFields", "filters", "setFilters", "dateFrom", "dateTo", "status", "paymentStatus", "minAmount", "maxAmount", "isExporting", "setIsExporting", "toggleField", "fieldKey", "prev", "includes", "filter", "selectAllFields", "map", "field", "selectBasicFields", "clearAllFields", "getEstimatedCount", "estimated", "Math", "floor", "exportOrders", "length", "showValidationWarning", "processingToast", "showProcessingInfo", "exportParams", "fields", "undefined", "Number", "Promise", "resolve", "setTimeout", "estimatedCount", "filename", "Date", "toISOString", "split", "blob", "Blob", "type", "url", "URL", "createObjectURL", "a", "document", "createElement", "href", "download", "body", "appendChild", "click", "removeChild", "revokeObjectURL", "dismiss", "showExportSuccess", "toUpperCase", "recordCount", "error", "console", "showExportError", "fieldsByCategory", "reduce", "acc", "push", "Dialog", "open", "onOpenChange", "DialogContent", "className", "DialogHeader", "DialogTitle", "Download", "div", "Card", "CardHeader", "CardTitle", "CardContent", "Label", "Select", "value", "onValueChange", "SelectTrigger", "SelectValue", "SelectContent", "SelectItem", "Separator", "Button", "size", "variant", "onClick", "p", "Filter", "htmlFor", "Input", "id", "onChange", "e", "target", "placeholder", "Object", "entries", "categoryInfo", "Icon", "h4", "Checkbox", "checked", "onCheckedChange", "AlertCircle", "span", "DialogFooter", "disabled"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9784bcfe42333ed76d5682b67d841ba52e2ba437"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1exzddo1le = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1exzddo1le();
cov_1exzddo1le().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1exzddo1le().s[1]++;
Object.defineProperty(exports, "ExportOrdersModal", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1exzddo1le().f[0]++;
    cov_1exzddo1le().s[2]++;
    return ExportOrdersModal;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1exzddo1le().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_1exzddo1le().s[4]++, _interop_require_wildcard(require("react")));
const _dialog =
/* istanbul ignore next */
(cov_1exzddo1le().s[5]++, require("../../ui/dialog"));
const _button =
/* istanbul ignore next */
(cov_1exzddo1le().s[6]++, require("../../ui/button"));
const _label =
/* istanbul ignore next */
(cov_1exzddo1le().s[7]++, require("../../ui/label"));
const _select =
/* istanbul ignore next */
(cov_1exzddo1le().s[8]++, require("../../ui/select"));
const _checkbox =
/* istanbul ignore next */
(cov_1exzddo1le().s[9]++, require("../../ui/checkbox"));
const _card =
/* istanbul ignore next */
(cov_1exzddo1le().s[10]++, require("../../ui/card"));
const _separator =
/* istanbul ignore next */
(cov_1exzddo1le().s[11]++, require("../../ui/separator"));
const _input =
/* istanbul ignore next */
(cov_1exzddo1le().s[12]++, require("../../ui/input"));
const _lucidereact =
/* istanbul ignore next */
(cov_1exzddo1le().s[13]++, require("lucide-react"));
const _useOrderNotifications =
/* istanbul ignore next */
(cov_1exzddo1le().s[14]++, require("../../../hooks/admin/useOrderNotifications"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_1exzddo1le().f[1]++;
  cov_1exzddo1le().s[15]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_1exzddo1le().b[0][0]++;
    cov_1exzddo1le().s[16]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1exzddo1le().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_1exzddo1le().s[17]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_1exzddo1le().s[18]++, new WeakMap());
  /* istanbul ignore next */
  cov_1exzddo1le().s[19]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_1exzddo1le().f[2]++;
    cov_1exzddo1le().s[20]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_1exzddo1le().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_1exzddo1le().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_1exzddo1le().f[3]++;
  cov_1exzddo1le().s[21]++;
  if (
  /* istanbul ignore next */
  (cov_1exzddo1le().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_1exzddo1le().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_1exzddo1le().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_1exzddo1le().b[2][0]++;
    cov_1exzddo1le().s[22]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1exzddo1le().b[2][1]++;
  }
  cov_1exzddo1le().s[23]++;
  if (
  /* istanbul ignore next */
  (cov_1exzddo1le().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_1exzddo1le().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_1exzddo1le().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_1exzddo1le().b[4][0]++;
    cov_1exzddo1le().s[24]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_1exzddo1le().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_1exzddo1le().s[25]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_1exzddo1le().s[26]++;
  if (
  /* istanbul ignore next */
  (cov_1exzddo1le().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_1exzddo1le().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_1exzddo1le().b[6][0]++;
    cov_1exzddo1le().s[27]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_1exzddo1le().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_1exzddo1le().s[28]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_1exzddo1le().s[29]++,
  /* istanbul ignore next */
  (cov_1exzddo1le().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_1exzddo1le().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_1exzddo1le().s[30]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_1exzddo1le().s[31]++;
    if (
    /* istanbul ignore next */
    (cov_1exzddo1le().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_1exzddo1le().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_1exzddo1le().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_1exzddo1le().s[32]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_1exzddo1le().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_1exzddo1le().b[11][1]++, null));
      /* istanbul ignore next */
      cov_1exzddo1le().s[33]++;
      if (
      /* istanbul ignore next */
      (cov_1exzddo1le().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_1exzddo1le().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_1exzddo1le().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_1exzddo1le().b[12][0]++;
        cov_1exzddo1le().s[34]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_1exzddo1le().b[12][1]++;
        cov_1exzddo1le().s[35]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_1exzddo1le().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1exzddo1le().s[36]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_1exzddo1le().s[37]++;
  if (cache) {
    /* istanbul ignore next */
    cov_1exzddo1le().b[14][0]++;
    cov_1exzddo1le().s[38]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_1exzddo1le().b[14][1]++;
  }
  cov_1exzddo1le().s[39]++;
  return newObj;
}
// ===================================
// CAMPOS DISPONIBLES PARA EXPORTAR
// ===================================
const EXPORT_FIELDS =
/* istanbul ignore next */
(cov_1exzddo1le().s[40]++, [
// Básicos
{
  key: 'id',
  label: 'ID de Orden',
  category: 'basic'
}, {
  key: 'external_reference',
  label: 'Referencia Externa',
  category: 'basic'
}, {
  key: 'status',
  label: 'Estado',
  category: 'basic'
}, {
  key: 'created_at',
  label: 'Fecha de Creación',
  category: 'basic'
}, {
  key: 'updated_at',
  label: 'Última Actualización',
  category: 'basic'
},
// Cliente
{
  key: 'customer_name',
  label: 'Nombre del Cliente',
  category: 'customer'
}, {
  key: 'customer_email',
  label: 'Email del Cliente',
  category: 'customer'
}, {
  key: 'customer_phone',
  label: 'Teléfono del Cliente',
  category: 'customer'
},
// Productos
{
  key: 'product_count',
  label: 'Cantidad de Productos',
  category: 'products'
}, {
  key: 'product_names',
  label: 'Nombres de Productos',
  category: 'products'
}, {
  key: 'product_quantities',
  label: 'Cantidades',
  category: 'products'
},
// Pago
{
  key: 'total',
  label: 'Total',
  category: 'payment'
}, {
  key: 'payment_status',
  label: 'Estado de Pago',
  category: 'payment'
}, {
  key: 'payment_method',
  label: 'Método de Pago',
  category: 'payment'
},
// Envío
{
  key: 'shipping_address',
  label: 'Dirección de Envío',
  category: 'shipping'
}, {
  key: 'shipping_method',
  label: 'Método de Envío',
  category: 'shipping'
}, {
  key: 'tracking_number',
  label: 'Número de Seguimiento',
  category: 'shipping'
}]);
const FIELD_CATEGORIES =
/* istanbul ignore next */
(cov_1exzddo1le().s[41]++, {
  basic: {
    label: 'Información Básica',
    icon: _lucidereact.FileText
  },
  customer: {
    label: 'Datos del Cliente',
    icon: _lucidereact.CheckCircle
  },
  products: {
    label: 'Productos',
    icon: _lucidereact.CheckCircle
  },
  payment: {
    label: 'Información de Pago',
    icon: _lucidereact.CheckCircle
  },
  shipping: {
    label: 'Información de Envío',
    icon: _lucidereact.CheckCircle
  }
});
/* istanbul ignore next */
cov_1exzddo1le().s[42]++;
const ExportOrdersModal = ({
  isOpen,
  onClose,
  totalOrders
}) => {
  /* istanbul ignore next */
  cov_1exzddo1le().f[4]++;
  const notifications =
  /* istanbul ignore next */
  (cov_1exzddo1le().s[43]++, (0, _useOrderNotifications.useOrderNotifications)());
  // Estados
  const [format, setFormat] =
  /* istanbul ignore next */
  (cov_1exzddo1le().s[44]++, (0, _react.useState)('csv'));
  const [selectedFields, setSelectedFields] =
  /* istanbul ignore next */
  (cov_1exzddo1le().s[45]++, (0, _react.useState)(['id', 'status', 'created_at', 'customer_name', 'customer_email', 'total']));
  const [filters, setFilters] =
  /* istanbul ignore next */
  (cov_1exzddo1le().s[46]++, (0, _react.useState)({
    dateFrom: '',
    dateTo: '',
    status: 'all',
    paymentStatus: 'all',
    minAmount: '',
    maxAmount: ''
  }));
  const [isExporting, setIsExporting] =
  /* istanbul ignore next */
  (cov_1exzddo1le().s[47]++, (0, _react.useState)(false));
  // ===================================
  // FUNCIONES
  // ===================================
  /* istanbul ignore next */
  cov_1exzddo1le().s[48]++;
  const toggleField = fieldKey => {
    /* istanbul ignore next */
    cov_1exzddo1le().f[5]++;
    cov_1exzddo1le().s[49]++;
    setSelectedFields(prev => {
      /* istanbul ignore next */
      cov_1exzddo1le().f[6]++;
      cov_1exzddo1le().s[50]++;
      return prev.includes(fieldKey) ?
      /* istanbul ignore next */
      (cov_1exzddo1le().b[15][0]++, prev.filter(key => {
        /* istanbul ignore next */
        cov_1exzddo1le().f[7]++;
        cov_1exzddo1le().s[51]++;
        return key !== fieldKey;
      })) :
      /* istanbul ignore next */
      (cov_1exzddo1le().b[15][1]++, [...prev, fieldKey]);
    });
  };
  /* istanbul ignore next */
  cov_1exzddo1le().s[52]++;
  const selectAllFields = () => {
    /* istanbul ignore next */
    cov_1exzddo1le().f[8]++;
    cov_1exzddo1le().s[53]++;
    setSelectedFields(EXPORT_FIELDS.map(field => {
      /* istanbul ignore next */
      cov_1exzddo1le().f[9]++;
      cov_1exzddo1le().s[54]++;
      return field.key;
    }));
  };
  /* istanbul ignore next */
  cov_1exzddo1le().s[55]++;
  const selectBasicFields = () => {
    /* istanbul ignore next */
    cov_1exzddo1le().f[10]++;
    cov_1exzddo1le().s[56]++;
    setSelectedFields(['id', 'status', 'created_at', 'customer_name', 'customer_email', 'total']);
  };
  /* istanbul ignore next */
  cov_1exzddo1le().s[57]++;
  const clearAllFields = () => {
    /* istanbul ignore next */
    cov_1exzddo1le().f[11]++;
    cov_1exzddo1le().s[58]++;
    setSelectedFields([]);
  };
  /* istanbul ignore next */
  cov_1exzddo1le().s[59]++;
  const getEstimatedCount = () => {
    /* istanbul ignore next */
    cov_1exzddo1le().f[12]++;
    // Simular filtrado (en implementación real, esto vendría del backend)
    let estimated =
    /* istanbul ignore next */
    (cov_1exzddo1le().s[60]++, totalOrders);
    /* istanbul ignore next */
    cov_1exzddo1le().s[61]++;
    if (filters.status !== 'all') {
      /* istanbul ignore next */
      cov_1exzddo1le().b[16][0]++;
      cov_1exzddo1le().s[62]++;
      estimated = Math.floor(estimated * 0.7); // Aproximación
    } else
    /* istanbul ignore next */
    {
      cov_1exzddo1le().b[16][1]++;
    }
    cov_1exzddo1le().s[63]++;
    if (filters.paymentStatus !== 'all') {
      /* istanbul ignore next */
      cov_1exzddo1le().b[17][0]++;
      cov_1exzddo1le().s[64]++;
      estimated = Math.floor(estimated * 0.8); // Aproximación
    } else
    /* istanbul ignore next */
    {
      cov_1exzddo1le().b[17][1]++;
    }
    cov_1exzddo1le().s[65]++;
    if (
    /* istanbul ignore next */
    (cov_1exzddo1le().b[19][0]++, filters.dateFrom) ||
    /* istanbul ignore next */
    (cov_1exzddo1le().b[19][1]++, filters.dateTo)) {
      /* istanbul ignore next */
      cov_1exzddo1le().b[18][0]++;
      cov_1exzddo1le().s[66]++;
      estimated = Math.floor(estimated * 0.6); // Aproximación
    } else
    /* istanbul ignore next */
    {
      cov_1exzddo1le().b[18][1]++;
    }
    cov_1exzddo1le().s[67]++;
    return estimated;
  };
  /* istanbul ignore next */
  cov_1exzddo1le().s[68]++;
  const exportOrders = async () => {
    /* istanbul ignore next */
    cov_1exzddo1le().f[13]++;
    cov_1exzddo1le().s[69]++;
    try {
      /* istanbul ignore next */
      cov_1exzddo1le().s[70]++;
      if (selectedFields.length === 0) {
        /* istanbul ignore next */
        cov_1exzddo1le().b[20][0]++;
        cov_1exzddo1le().s[71]++;
        notifications.showValidationWarning('Debe seleccionar al menos un campo para exportar');
        /* istanbul ignore next */
        cov_1exzddo1le().s[72]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1exzddo1le().b[20][1]++;
      }
      cov_1exzddo1le().s[73]++;
      setIsExporting(true);
      const processingToast =
      /* istanbul ignore next */
      (cov_1exzddo1le().s[74]++, notifications.showProcessingInfo('Preparando exportación'));
      // Preparar parámetros de exportación
      const exportParams =
      /* istanbul ignore next */
      (cov_1exzddo1le().s[75]++, {
        format,
        fields: selectedFields,
        filters: {
          ...filters,
          // Limpiar campos vacíos
          dateFrom:
          /* istanbul ignore next */
          (cov_1exzddo1le().b[21][0]++, filters.dateFrom) ||
          /* istanbul ignore next */
          (cov_1exzddo1le().b[21][1]++, undefined),
          dateTo:
          /* istanbul ignore next */
          (cov_1exzddo1le().b[22][0]++, filters.dateTo) ||
          /* istanbul ignore next */
          (cov_1exzddo1le().b[22][1]++, undefined),
          minAmount: filters.minAmount ?
          /* istanbul ignore next */
          (cov_1exzddo1le().b[23][0]++, Number(filters.minAmount)) :
          /* istanbul ignore next */
          (cov_1exzddo1le().b[23][1]++, undefined),
          maxAmount: filters.maxAmount ?
          /* istanbul ignore next */
          (cov_1exzddo1le().b[24][0]++, Number(filters.maxAmount)) :
          /* istanbul ignore next */
          (cov_1exzddo1le().b[24][1]++, undefined)
        }
      });
      // Simular exportación (reemplazar con API real)
      /* istanbul ignore next */
      cov_1exzddo1le().s[76]++;
      await new Promise(resolve => {
        /* istanbul ignore next */
        cov_1exzddo1le().f[14]++;
        cov_1exzddo1le().s[77]++;
        return setTimeout(resolve, 3000);
      });
      // Simular descarga de archivo
      const estimatedCount =
      /* istanbul ignore next */
      (cov_1exzddo1le().s[78]++, getEstimatedCount());
      const filename =
      /* istanbul ignore next */
      (cov_1exzddo1le().s[79]++, `ordenes_${new Date().toISOString().split('T')[0]}.${format}`);
      // En implementación real, aquí se descargaría el archivo
      const blob =
      /* istanbul ignore next */
      (cov_1exzddo1le().s[80]++, new Blob(['Datos de exportación simulados'], {
        type: format === 'csv' ?
        /* istanbul ignore next */
        (cov_1exzddo1le().b[25][0]++, 'text/csv') :
        /* istanbul ignore next */
        (cov_1exzddo1le().b[25][1]++, 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet')
      }));
      const url =
      /* istanbul ignore next */
      (cov_1exzddo1le().s[81]++, URL.createObjectURL(blob));
      const a =
      /* istanbul ignore next */
      (cov_1exzddo1le().s[82]++, document.createElement('a'));
      /* istanbul ignore next */
      cov_1exzddo1le().s[83]++;
      a.href = url;
      /* istanbul ignore next */
      cov_1exzddo1le().s[84]++;
      a.download = filename;
      /* istanbul ignore next */
      cov_1exzddo1le().s[85]++;
      document.body.appendChild(a);
      /* istanbul ignore next */
      cov_1exzddo1le().s[86]++;
      a.click();
      /* istanbul ignore next */
      cov_1exzddo1le().s[87]++;
      document.body.removeChild(a);
      /* istanbul ignore next */
      cov_1exzddo1le().s[88]++;
      URL.revokeObjectURL(url);
      /* istanbul ignore next */
      cov_1exzddo1le().s[89]++;
      processingToast.dismiss();
      /* istanbul ignore next */
      cov_1exzddo1le().s[90]++;
      notifications.showExportSuccess({
        format: format.toUpperCase(),
        recordCount: estimatedCount
      });
      /* istanbul ignore next */
      cov_1exzddo1le().s[91]++;
      onClose();
    } catch (error) {
      /* istanbul ignore next */
      cov_1exzddo1le().s[92]++;
      console.error('Error exporting orders:', error);
      /* istanbul ignore next */
      cov_1exzddo1le().s[93]++;
      notifications.showExportError(format.toUpperCase(), 'Error interno del servidor');
    } finally {
      /* istanbul ignore next */
      cov_1exzddo1le().s[94]++;
      setIsExporting(false);
    }
  };
  const fieldsByCategory =
  /* istanbul ignore next */
  (cov_1exzddo1le().s[95]++, EXPORT_FIELDS.reduce((acc, field) => {
    /* istanbul ignore next */
    cov_1exzddo1le().f[15]++;
    cov_1exzddo1le().s[96]++;
    if (!acc[field.category]) {
      /* istanbul ignore next */
      cov_1exzddo1le().b[26][0]++;
      cov_1exzddo1le().s[97]++;
      acc[field.category] = [];
    } else
    /* istanbul ignore next */
    {
      cov_1exzddo1le().b[26][1]++;
    }
    cov_1exzddo1le().s[98]++;
    acc[field.category].push(field);
    /* istanbul ignore next */
    cov_1exzddo1le().s[99]++;
    return acc;
  }, {}));
  /* istanbul ignore next */
  cov_1exzddo1le().s[100]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(_dialog.Dialog, {
    open: isOpen,
    onOpenChange: onClose,
    children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_dialog.DialogContent, {
      className: "max-w-4xl max-h-[90vh] overflow-hidden",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_dialog.DialogHeader, {
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_dialog.DialogTitle, {
          className: "flex items-center gap-2",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Download, {
            className: "h-5 w-5"
          }), "Exportar \xd3rdenes"]
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "grid grid-cols-1 lg:grid-cols-3 gap-6 overflow-y-auto max-h-[600px]",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "space-y-4",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
              children: /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
                className: "text-lg",
                children: "Formato de Exportaci\xf3n"
              })
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardContent, {
              className: "space-y-4",
              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_label.Label, {
                  children: "Formato de Archivo"
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_select.Select, {
                  value: format,
                  onValueChange: value => {
                    /* istanbul ignore next */
                    cov_1exzddo1le().f[16]++;
                    cov_1exzddo1le().s[101]++;
                    return setFormat(value);
                  },
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectTrigger, {
                    children: /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectValue, {})
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_select.SelectContent, {
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectItem, {
                      value: "csv",
                      children: "CSV (Comma Separated Values)"
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectItem, {
                      value: "excel",
                      children: "Excel (.xlsx)"
                    })]
                  })]
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_separator.Separator, {}), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "space-y-3",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_label.Label, {
                  children: "Selecci\xf3n de Campos"
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "flex flex-wrap gap-2",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
                    size: "sm",
                    variant: "outline",
                    onClick: selectAllFields,
                    children: "Todos"
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
                    size: "sm",
                    variant: "outline",
                    onClick: selectBasicFields,
                    children: "B\xe1sicos"
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
                    size: "sm",
                    variant: "outline",
                    onClick: clearAllFields,
                    children: "Limpiar"
                  })]
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
                  className: "text-sm text-gray-600",
                  children: [selectedFields.length, " campos seleccionados"]
                })]
              })]
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
              children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardTitle, {
                className: "text-lg flex items-center gap-2",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Filter, {
                  className: "h-4 w-4"
                }), "Filtros"]
              })
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardContent, {
              className: "space-y-4",
              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "grid grid-cols-2 gap-2",
                children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_label.Label, {
                    htmlFor: "date-from",
                    children: "Desde"
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)(_input.Input, {
                    id: "date-from",
                    type: "date",
                    value: filters.dateFrom,
                    onChange: e => {
                      /* istanbul ignore next */
                      cov_1exzddo1le().f[17]++;
                      cov_1exzddo1le().s[102]++;
                      return setFilters(prev => {
                        /* istanbul ignore next */
                        cov_1exzddo1le().f[18]++;
                        cov_1exzddo1le().s[103]++;
                        return {
                          ...prev,
                          dateFrom: e.target.value
                        };
                      });
                    }
                  })]
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_label.Label, {
                    htmlFor: "date-to",
                    children: "Hasta"
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)(_input.Input, {
                    id: "date-to",
                    type: "date",
                    value: filters.dateTo,
                    onChange: e => {
                      /* istanbul ignore next */
                      cov_1exzddo1le().f[19]++;
                      cov_1exzddo1le().s[104]++;
                      return setFilters(prev => {
                        /* istanbul ignore next */
                        cov_1exzddo1le().f[20]++;
                        cov_1exzddo1le().s[105]++;
                        return {
                          ...prev,
                          dateTo: e.target.value
                        };
                      });
                    }
                  })]
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_label.Label, {
                  children: "Estado de Orden"
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_select.Select, {
                  value: filters.status,
                  onValueChange: value => {
                    /* istanbul ignore next */
                    cov_1exzddo1le().f[21]++;
                    cov_1exzddo1le().s[106]++;
                    return setFilters(prev => {
                      /* istanbul ignore next */
                      cov_1exzddo1le().f[22]++;
                      cov_1exzddo1le().s[107]++;
                      return {
                        ...prev,
                        status: value
                      };
                    });
                  },
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectTrigger, {
                    children: /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectValue, {})
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_select.SelectContent, {
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectItem, {
                      value: "all",
                      children: "Todos los Estados"
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectItem, {
                      value: "pending",
                      children: "Pendiente"
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectItem, {
                      value: "processing",
                      children: "Procesando"
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectItem, {
                      value: "shipped",
                      children: "Enviado"
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectItem, {
                      value: "delivered",
                      children: "Entregado"
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectItem, {
                      value: "cancelled",
                      children: "Cancelado"
                    })]
                  })]
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_label.Label, {
                  children: "Estado de Pago"
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_select.Select, {
                  value: filters.paymentStatus,
                  onValueChange: value => {
                    /* istanbul ignore next */
                    cov_1exzddo1le().f[23]++;
                    cov_1exzddo1le().s[108]++;
                    return setFilters(prev => {
                      /* istanbul ignore next */
                      cov_1exzddo1le().f[24]++;
                      cov_1exzddo1le().s[109]++;
                      return {
                        ...prev,
                        paymentStatus: value
                      };
                    });
                  },
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectTrigger, {
                    children: /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectValue, {})
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_select.SelectContent, {
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectItem, {
                      value: "all",
                      children: "Todos los Estados"
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectItem, {
                      value: "pending",
                      children: "Pendiente"
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectItem, {
                      value: "paid",
                      children: "Pagado"
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectItem, {
                      value: "failed",
                      children: "Fallido"
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectItem, {
                      value: "refunded",
                      children: "Reembolsado"
                    })]
                  })]
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "grid grid-cols-2 gap-2",
                children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_label.Label, {
                    htmlFor: "min-amount",
                    children: "Monto M\xedn."
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)(_input.Input, {
                    id: "min-amount",
                    type: "number",
                    placeholder: "0",
                    value: filters.minAmount,
                    onChange: e => {
                      /* istanbul ignore next */
                      cov_1exzddo1le().f[25]++;
                      cov_1exzddo1le().s[110]++;
                      return setFilters(prev => {
                        /* istanbul ignore next */
                        cov_1exzddo1le().f[26]++;
                        cov_1exzddo1le().s[111]++;
                        return {
                          ...prev,
                          minAmount: e.target.value
                        };
                      });
                    }
                  })]
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_label.Label, {
                    htmlFor: "max-amount",
                    children: "Monto M\xe1x."
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)(_input.Input, {
                    id: "max-amount",
                    type: "number",
                    placeholder: "Sin l\xedmite",
                    value: filters.maxAmount,
                    onChange: e => {
                      /* istanbul ignore next */
                      cov_1exzddo1le().f[27]++;
                      cov_1exzddo1le().s[112]++;
                      return setFilters(prev => {
                        /* istanbul ignore next */
                        cov_1exzddo1le().f[28]++;
                        cov_1exzddo1le().s[113]++;
                        return {
                          ...prev,
                          maxAmount: e.target.value
                        };
                      });
                    }
                  })]
                })]
              })]
            })]
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "lg:col-span-2 space-y-4",
          children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
              children: /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
                className: "text-lg",
                children: "Campos a Exportar"
              })
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
              children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "space-y-6",
                children: Object.entries(fieldsByCategory).map(([category, fields]) => {
                  /* istanbul ignore next */
                  cov_1exzddo1le().f[29]++;
                  const categoryInfo =
                  /* istanbul ignore next */
                  (cov_1exzddo1le().s[114]++, FIELD_CATEGORIES[category]);
                  const Icon =
                  /* istanbul ignore next */
                  (cov_1exzddo1le().s[115]++, categoryInfo.icon);
                  /* istanbul ignore next */
                  cov_1exzddo1le().s[116]++;
                  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      className: "flex items-center gap-2 mb-3",
                      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(Icon, {
                        className: "h-4 w-4"
                      }), /*#__PURE__*/(0, _jsxruntime.jsx)("h4", {
                        className: "font-medium",
                        children: categoryInfo.label
                      })]
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                      className: "grid grid-cols-1 md:grid-cols-2 gap-2 ml-6",
                      children: fields.map(field => {
                        /* istanbul ignore next */
                        cov_1exzddo1le().f[30]++;
                        cov_1exzddo1le().s[117]++;
                        return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                          className: "flex items-center space-x-2",
                          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_checkbox.Checkbox, {
                            id: field.key,
                            checked: selectedFields.includes(field.key),
                            onCheckedChange: () => {
                              /* istanbul ignore next */
                              cov_1exzddo1le().f[31]++;
                              cov_1exzddo1le().s[118]++;
                              return toggleField(field.key);
                            }
                          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_label.Label, {
                            htmlFor: field.key,
                            className: "text-sm font-normal cursor-pointer",
                            children: field.label
                          })]
                        }, field.key);
                      })
                    })]
                  }, category);
                })
              })
            })]
          })
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.Card, {
        className: "bg-blue-50 border-blue-200",
        children: /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
          className: "p-4",
          children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex items-center justify-between",
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex items-center gap-2",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.AlertCircle, {
                className: "h-5 w-5 text-blue-600"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                className: "font-medium",
                children: "Resumen de Exportaci\xf3n"
              })]
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "text-right",
              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
                className: "text-sm text-gray-600",
                children: ["Aproximadamente ", /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                  className: "font-medium",
                  children: getEstimatedCount()
                }), " \xf3rdenes"]
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
                className: "text-sm text-gray-600",
                children: [selectedFields.length, " campos seleccionados"]
              })]
            })]
          })
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_dialog.DialogFooter, {
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
          variant: "outline",
          onClick: onClose,
          disabled: isExporting,
          children: "Cancelar"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
          onClick: exportOrders,
          disabled:
          /* istanbul ignore next */
          (cov_1exzddo1le().b[27][0]++, isExporting) ||
          /* istanbul ignore next */
          (cov_1exzddo1le().b[27][1]++, selectedFields.length === 0),
          className: "min-w-[120px]",
          children: isExporting ?
          /* istanbul ignore next */
          (cov_1exzddo1le().b[28][0]++, 'Exportando...') :
          /* istanbul ignore next */
          (cov_1exzddo1le().b[28][1]++, `Exportar ${format.toUpperCase()}`)
        })]
      })]
    })
  });
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,