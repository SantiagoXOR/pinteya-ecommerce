{"version":3,"names":["cov_19buk6mrc","actualCoverage","s","GET","f","runtime","request","enterpriseResult","_enterpriseauthutils","requireAdminAuth","adminResult","_adminauth","getAuthenticatedAdmin","b","userId","success","_server","NextResponse","json","error","enterprise","code","legacy","migration","status","comparison","enterpriseContext","rlsValidation","context","_enterpriserlsutils","validateRLSContext","clerkUserId","console","log","legacyResult","checkAdminAccess","cacheStats","_enterprisecache","getCacheStats","isAdmin","role","permissions","securityLevel","validations","rls","valid","cache","sessionId","enterprise_success","legacy_success","methods_agree","recommended","improvements","debug","timestamp","Date","toISOString","request_info","method","url","user_agent","headers","get","substring","errorMessage","Error","message"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\debug\\check-admin-access\\route.ts"],"sourcesContent":["// Configuraci√≥n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { checkAdminAccess, getAuthenticatedAdmin } from '@/lib/auth/admin-auth';\r\nimport {\r\n  requireAdminAuth,\r\n  getEnterpriseAuthContext\r\n} from '@/lib/auth/enterprise-auth-utils';\r\nimport {\r\n  validateRLSContext\r\n} from '@/lib/auth/enterprise-rls-utils';\r\nimport {\r\n  getCacheStats\r\n} from '@/lib/auth/enterprise-cache';\r\n\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    // ENTERPRISE: Usar nueva autenticaci√≥n enterprise para comparaci√≥n\r\n    const enterpriseResult = await requireAdminAuth(request, ['admin_access']);\r\n\r\n    // LEGACY: Mantener m√©todo anterior para comparaci√≥n\r\n    const adminResult = await getAuthenticatedAdmin(request);\r\n\r\n    if (!adminResult.userId && !enterpriseResult.success) {\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: 'Usuario no autenticado en ning√∫n m√©todo',\r\n        enterprise: {\r\n          error: enterpriseResult.error,\r\n          code: enterpriseResult.code\r\n        },\r\n        legacy: {\r\n          error: adminResult.error\r\n        },\r\n        migration: {\r\n          status: 'ENTERPRISE_MIGRATED',\r\n          comparison: 'Both methods failed - user not authenticated'\r\n        }\r\n      }, { status: 401 });\r\n    }\r\n\r\n    // ENTERPRISE: Obtener contexto completo y validaci√≥n RLS\r\n    let enterpriseContext = null;\r\n    let rlsValidation = null;\r\n\r\n    if (enterpriseResult.success) {\r\n      enterpriseContext = enterpriseResult.context;\r\n      rlsValidation = await validateRLSContext(enterpriseContext!);\r\n    }\r\n\r\n    // LEGACY: Comparar con m√©todo legacy para verificar migraci√≥n\r\n    const clerkUserId = adminResult.userId || (enterpriseResult.success ? enterpriseResult.context!.userId : null);\r\n\r\n    console.log('üîç Debug Enterprise vs Legacy: Testing with user:', clerkUserId);\r\n\r\n    const legacyResult = clerkUserId ? await checkAdminAccess(clerkUserId) : { success: false, error: 'No user ID' };\r\n\r\n    // ENTERPRISE: Obtener estad√≠sticas de cache\r\n    const cacheStats = getCacheStats();\r\n\r\n    return NextResponse.json({\r\n      success: enterpriseResult.success || adminResult.isAdmin,\r\n      enterprise: {\r\n        status: enterpriseResult.success ? 'SUCCESS' : 'FAILED',\r\n        context: enterpriseResult.success ? {\r\n          userId: enterpriseContext?.userId,\r\n          role: enterpriseContext?.role,\r\n          permissions: enterpriseContext?.permissions,\r\n          securityLevel: enterpriseContext?.securityLevel,\r\n          validations: enterpriseContext?.validations\r\n        } : null,\r\n        rls: rlsValidation ? {\r\n          valid: rlsValidation.valid,\r\n          error: rlsValidation.error\r\n        } : null,\r\n        cache: cacheStats,\r\n        error: enterpriseResult.error,\r\n        code: enterpriseResult.code\r\n      },\r\n      legacy: {\r\n        status: adminResult.isAdmin ? 'SUCCESS' : 'FAILED',\r\n        userId: adminResult.userId,\r\n        sessionId: adminResult.sessionId,\r\n        isAdmin: adminResult.isAdmin,\r\n        error: adminResult.error,\r\n        checkAdminAccess: {\r\n          success: legacyResult.success,\r\n          error: legacyResult.error\r\n        }\r\n      },\r\n      migration: {\r\n        status: 'ENTERPRISE_COMPLETED',\r\n        comparison: {\r\n          enterprise_success: enterpriseResult.success,\r\n          legacy_success: adminResult.isAdmin,\r\n          methods_agree: enterpriseResult.success === adminResult.isAdmin,\r\n          recommended: 'enterprise'\r\n        },\r\n        improvements: [\r\n          '‚úÖ ENTERPRISE: Autenticaci√≥n con m√∫ltiples validaciones de seguridad',\r\n          '‚úÖ ENTERPRISE: Row Level Security (RLS) integrado',\r\n          '‚úÖ ENTERPRISE: Cache inteligente con estad√≠sticas',\r\n          '‚úÖ ENTERPRISE: Contexto completo de seguridad',\r\n          '‚úÖ ENTERPRISE: Permisos granulares',\r\n          '‚ö†Ô∏è LEGACY: M√©todo anterior a√∫n funcional para compatibilidad'\r\n        ]\r\n      },\r\n      debug: {\r\n        clerkUserId,\r\n        timestamp: new Date().toISOString(),\r\n        request_info: {\r\n          method: request.method,\r\n          url: request.url,\r\n          user_agent: request.headers.get('user-agent')?.substring(0, 100)\r\n        }\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('üîç Debug checkAdminAccess: Error:', error);\r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Unexpected error',\r\n      debug: {\r\n        errorMessage: error instanceof Error ? error.message : 'Unknown error'\r\n      }\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}