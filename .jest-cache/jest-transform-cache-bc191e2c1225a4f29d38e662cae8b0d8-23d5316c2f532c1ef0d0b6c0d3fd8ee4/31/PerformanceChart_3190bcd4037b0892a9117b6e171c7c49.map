{"version":3,"names":["PerformanceChart","chartColors","cov_1tf3od57zr","s","primary","secondary","accent","danger","muted","pieColors","data","height","b","showDetails","className","f","chartType","setChartType","_react","useState","timeRange","setTimeRange","safeData","filteredData","slice","parseInt","processedData","map","item","date_formatted","_consolidatedutils","formatDate","date","on_time_rate","delivered_count","on_time_count","delivery_rate","shipments_count","average_cost_per_shipment","total_cost","totals","reduce","acc","shipments","delivered","onTime","cost","averages","onTimeRate","deliveryRate","costPerShipment","length","_jsxruntime","jsx","_utils","cn","jsxs","_lucidereact","BarChart3","toFixed","index"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\admin\\logistics\\PerformanceChart.tsx"],"sourcesContent":["// =====================================================\r\n// COMPONENTE: PERFORMANCE CHART ENTERPRISE\r\n// Descripción: Gráficos de performance para logística\r\n// Basado en: Recharts + shadcn/ui\r\n// =====================================================\r\n\r\n'use client';\r\n\r\nimport { useState } from 'react';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  AreaChart,\r\n  Area,\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  PieChart,\r\n  Pie,\r\n  Cell\r\n} from 'recharts';\r\nimport { \r\n  TrendingUp, \r\n  TrendingDown, \r\n  BarChart3, \r\n  PieChart as PieChartIcon,\r\n  Calendar,\r\n  Download\r\n} from 'lucide-react';\r\nimport { PerformanceMetric } from '@/types/logistics';\r\nimport { cn } from '@/lib/core/utils';\r\nimport { formatCurrency, formatDate } from '@/lib/utils/consolidated-utils';\r\n\r\n// =====================================================\r\n// INTERFACES\r\n// =====================================================\r\n\r\ninterface PerformanceChartProps {\r\n  data: PerformanceMetric[];\r\n  height?: number;\r\n  showDetails?: boolean;\r\n  className?: string;\r\n}\r\n\r\ninterface ChartTooltipProps {\r\n  active?: boolean;\r\n  payload?: any[];\r\n  label?: string;\r\n}\r\n\r\n// =====================================================\r\n// CONFIGURACIÓN DE COLORES\r\n// =====================================================\r\n\r\nconst chartColors = {\r\n  primary: '#3b82f6',\r\n  secondary: '#10b981',\r\n  accent: '#f59e0b',\r\n  danger: '#ef4444',\r\n  muted: '#6b7280'\r\n};\r\n\r\nconst pieColors = ['#3b82f6', '#10b981', '#f59e0b', '#ef4444', '#8b5cf6', '#06b6d4'];\r\n\r\n// =====================================================\r\n// COMPONENTE PRINCIPAL\r\n// =====================================================\r\n\r\nexport function PerformanceChart({\r\n  data,\r\n  height = 300,\r\n  showDetails = false,\r\n  className\r\n}: PerformanceChartProps) {\r\n\r\n  const [chartType, setChartType] = useState<'line' | 'area' | 'bar'>('line');\r\n  const [timeRange, setTimeRange] = useState<'7d' | '30d' | '90d'>('30d');\r\n\r\n  // Validar datos y filtrar según el rango de tiempo\r\n  const safeData = data || [];\r\n  const filteredData = safeData.slice(-parseInt(timeRange));\r\n  \r\n  // Calcular métricas derivadas\r\n  const processedData = filteredData.map(item => ({\r\n    ...item,\r\n    date_formatted: formatDate(item.date, 'dd/MM'),\r\n    on_time_rate: item.delivered_count > 0 \r\n      ? (item.on_time_count / item.delivered_count) * 100 \r\n      : 0,\r\n    delivery_rate: item.shipments_count > 0 \r\n      ? (item.delivered_count / item.shipments_count) * 100 \r\n      : 0,\r\n    average_cost_per_shipment: item.shipments_count > 0 \r\n      ? item.total_cost / item.shipments_count \r\n      : 0\r\n  }));\r\n  \r\n  // Calcular totales y tendencias\r\n  const totals = processedData.reduce((acc, item) => ({\r\n    shipments: acc.shipments + item.shipments_count,\r\n    delivered: acc.delivered + item.delivered_count,\r\n    onTime: acc.onTime + item.on_time_count,\r\n    cost: acc.cost + item.total_cost\r\n  }), { shipments: 0, delivered: 0, onTime: 0, cost: 0 });\r\n  \r\n  const averages = {\r\n    onTimeRate: totals.delivered > 0 ? (totals.onTime / totals.delivered) * 100 : 0,\r\n    deliveryRate: totals.shipments > 0 ? (totals.delivered / totals.shipments) * 100 : 0,\r\n    costPerShipment: totals.shipments > 0 ? totals.cost / totals.shipments : 0\r\n  };\r\n\r\n  // Si no hay datos, mostrar estado vacío\r\n  if (processedData.length === 0) {\r\n    return (\r\n      <div className={cn(\"flex items-center justify-center h-64 text-muted-foreground\", className)}>\r\n        <div className=\"text-center\">\r\n          <BarChart3 className=\"w-12 h-12 mx-auto mb-4 opacity-50\" />\r\n          <p>No hay datos de performance disponibles</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Versión simplificada sin ResponsiveContainer para evitar errores\r\n  return (\r\n    <div className={cn(\"w-full\", className)}>\r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\r\n        <div className=\"bg-white p-4 rounded-lg border\">\r\n          <h3 className=\"text-sm font-medium text-gray-500\">Tasa de Entrega</h3>\r\n          <p className=\"text-2xl font-bold text-green-600\">{averages.deliveryRate.toFixed(1)}%</p>\r\n        </div>\r\n        <div className=\"bg-white p-4 rounded-lg border\">\r\n          <h3 className=\"text-sm font-medium text-gray-500\">Puntualidad</h3>\r\n          <p className=\"text-2xl font-bold text-blue-600\">{averages.onTimeRate.toFixed(1)}%</p>\r\n        </div>\r\n        <div className=\"bg-white p-4 rounded-lg border\">\r\n          <h3 className=\"text-sm font-medium text-gray-500\">Costo Promedio</h3>\r\n          <p className=\"text-2xl font-bold text-orange-600\">${averages.costPerShipment.toFixed(2)}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"bg-white p-6 rounded-lg border\">\r\n        <h3 className=\"text-lg font-semibold mb-4\">Métricas de Performance</h3>\r\n        <div className=\"space-y-4\">\r\n          {processedData.slice(-7).map((item, index) => (\r\n            <div key={index} className=\"flex justify-between items-center py-2 border-b\">\r\n              <span className=\"text-sm text-gray-600\">{item.date_formatted}</span>\r\n              <div className=\"flex space-x-4\">\r\n                <span className=\"text-sm\">Envíos: {item.shipments_count}</span>\r\n                <span className=\"text-sm\">Entregados: {item.delivered_count}</span>\r\n                <span className=\"text-sm\">Puntualidad: {item.on_time_rate.toFixed(1)}%</span>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}