{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\admin\\logistics\\LogisticsMap.tsx"],"sourcesContent":["// =====================================================\r\n// COMPONENTE: LOGISTICS MAP ENTERPRISE\r\n// Descripción: Mapa interactivo con tracking tiempo real usando MapLibre GL JS\r\n// Basado en: MapLibre GL JS + React + WebSockets\r\n// =====================================================\r\n\r\n'use client';\r\n\r\nimport { useEffect, useRef, useState, useCallback } from 'react';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Switch } from '@/components/ui/switch';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\r\nimport { \r\n  Map as MapIcon, \r\n  Navigation, \r\n  Layers, \r\n  Zap, \r\n  MapPin, \r\n  Truck, \r\n  Package,\r\n  Settings,\r\n  Maximize2,\r\n  RefreshCw,\r\n  Filter\r\n} from 'lucide-react';\r\nimport { Shipment, TrackingEvent } from '@/types/logistics';\r\nimport { cn } from '@/lib/core/utils';\r\n\r\n// =====================================================\r\n// INTERFACES\r\n// =====================================================\r\n\r\ninterface LogisticsMapProps {\r\n  shipments?: Shipment[];\r\n  selectedShipment?: Shipment | null;\r\n  onShipmentSelect?: (shipment: Shipment) => void;\r\n  realTimeEnabled?: boolean;\r\n  className?: string;\r\n}\r\n\r\ninterface MapMarker {\r\n  id: string;\r\n  type: 'shipment' | 'warehouse' | 'delivery' | 'courier';\r\n  coordinates: [number, number];\r\n  data: any;\r\n  status?: string;\r\n}\r\n\r\ninterface GeofenceZone {\r\n  id: string;\r\n  name: string;\r\n  coordinates: [number, number][];\r\n  type: 'delivery_zone' | 'restricted' | 'priority';\r\n  active: boolean;\r\n}\r\n\r\n// =====================================================\r\n// CONFIGURACIÓN DEL MAPA\r\n// =====================================================\r\n\r\nconst MAP_CONFIG = {\r\n  style: 'https://api.maptiler.com/maps/streets/style.json?key=demo', // Demo key - reemplazar en producción\r\n  center: [-58.3816, -34.6037] as [number, number], // Buenos Aires\r\n  zoom: 10,\r\n  pitch: 45,\r\n  bearing: 0\r\n};\r\n\r\nconst MARKER_COLORS = {\r\n  pending: '#6b7280',\r\n  confirmed: '#3b82f6',\r\n  picked_up: '#f59e0b',\r\n  in_transit: '#f97316',\r\n  out_for_delivery: '#8b5cf6',\r\n  delivered: '#10b981',\r\n  exception: '#ef4444',\r\n  cancelled: '#6b7280',\r\n  returned: '#ef4444'\r\n};\r\n\r\n// =====================================================\r\n// COMPONENTE PRINCIPAL\r\n// =====================================================\r\n\r\nexport function LogisticsMap({\r\n  shipments = [],\r\n  selectedShipment,\r\n  onShipmentSelect,\r\n  realTimeEnabled = false,\r\n  className\r\n}: LogisticsMapProps) {\r\n  \r\n  const mapContainer = useRef<HTMLDivElement>(null);\r\n  const map = useRef<any>(null);\r\n  const [mapLoaded, setMapLoaded] = useState(false);\r\n  const [isFullscreen, setIsFullscreen] = useState(false);\r\n  const [mapStyle, setMapStyle] = useState<'streets' | 'satellite' | 'terrain'>('streets');\r\n  const [showGeofences, setShowGeofences] = useState(true);\r\n  const [showRoutes, setShowRoutes] = useState(true);\r\n  const [filterStatus, setFilterStatus] = useState<string>('all');\r\n  \r\n  // Estados del mapa\r\n  const [markers, setMarkers] = useState<MapMarker[]>([]);\r\n  const [geofences, setGeofences] = useState<GeofenceZone[]>([]);\r\n  const [activeRoutes, setActiveRoutes] = useState<any[]>([]);\r\n  \r\n  // =====================================================\r\n  // INICIALIZACIÓN DEL MAPA\r\n  // =====================================================\r\n  \r\n  useEffect(() => {\r\n    if (!mapContainer.current || map.current) {return;}\r\n    \r\n    // Importar MapLibre GL JS dinámicamente\r\n    import('maplibre-gl').then((maplibregl) => {\r\n      map.current = new maplibregl.Map({\r\n        container: mapContainer.current!,\r\n        style: MAP_CONFIG.style,\r\n        center: MAP_CONFIG.center,\r\n        zoom: MAP_CONFIG.zoom,\r\n        pitch: MAP_CONFIG.pitch,\r\n        bearing: MAP_CONFIG.bearing\r\n      });\r\n      \r\n      map.current.on('load', () => {\r\n        setMapLoaded(true);\r\n        initializeMapLayers();\r\n        loadInitialData();\r\n      });\r\n      \r\n      // Eventos del mapa\r\n      map.current.on('click', 'shipments-layer', (e: any) => {\r\n        const shipmentId = e.features[0].properties.shipmentId;\r\n        const shipment = shipments.find(s => s.id.toString() === shipmentId);\r\n        if (shipment && onShipmentSelect) {\r\n          onShipmentSelect(shipment);\r\n        }\r\n      });\r\n      \r\n      // Cursor pointer en markers\r\n      map.current.on('mouseenter', 'shipments-layer', () => {\r\n        map.current.getCanvas().style.cursor = 'pointer';\r\n      });\r\n      \r\n      map.current.on('mouseleave', 'shipments-layer', () => {\r\n        map.current.getCanvas().style.cursor = '';\r\n      });\r\n    });\r\n    \r\n    return () => {\r\n      if (map.current) {\r\n        map.current.remove();\r\n        map.current = null;\r\n      }\r\n    };\r\n  }, []);\r\n  \r\n  // =====================================================\r\n  // INICIALIZAR CAPAS DEL MAPA\r\n  // =====================================================\r\n  \r\n  const initializeMapLayers = useCallback(() => {\r\n    if (!map.current || !mapLoaded) {return;}\r\n    \r\n    // Capa de geofences\r\n    map.current.addSource('geofences', {\r\n      type: 'geojson',\r\n      data: {\r\n        type: 'FeatureCollection',\r\n        features: []\r\n      }\r\n    });\r\n    \r\n    map.current.addLayer({\r\n      id: 'geofences-fill',\r\n      type: 'fill',\r\n      source: 'geofences',\r\n      paint: {\r\n        'fill-color': [\r\n          'match',\r\n          ['get', 'type'],\r\n          'delivery_zone', '#10b981',\r\n          'restricted', '#ef4444',\r\n          'priority', '#f59e0b',\r\n          '#6b7280'\r\n        ],\r\n        'fill-opacity': 0.2\r\n      }\r\n    });\r\n    \r\n    map.current.addLayer({\r\n      id: 'geofences-border',\r\n      type: 'line',\r\n      source: 'geofences',\r\n      paint: {\r\n        'line-color': [\r\n          'match',\r\n          ['get', 'type'],\r\n          'delivery_zone', '#10b981',\r\n          'restricted', '#ef4444',\r\n          'priority', '#f59e0b',\r\n          '#6b7280'\r\n        ],\r\n        'line-width': 2,\r\n        'line-dasharray': [2, 2]\r\n      }\r\n    });\r\n    \r\n    // Capa de envíos\r\n    map.current.addSource('shipments', {\r\n      type: 'geojson',\r\n      data: {\r\n        type: 'FeatureCollection',\r\n        features: []\r\n      }\r\n    });\r\n    \r\n    map.current.addLayer({\r\n      id: 'shipments-layer',\r\n      type: 'circle',\r\n      source: 'shipments',\r\n      paint: {\r\n        'circle-radius': [\r\n          'case',\r\n          ['==', ['get', 'selected'], true], 12,\r\n          8\r\n        ],\r\n        'circle-color': [\r\n          'match',\r\n          ['get', 'status'],\r\n          'pending', MARKER_COLORS.pending,\r\n          'confirmed', MARKER_COLORS.confirmed,\r\n          'picked_up', MARKER_COLORS.picked_up,\r\n          'in_transit', MARKER_COLORS.in_transit,\r\n          'out_for_delivery', MARKER_COLORS.out_for_delivery,\r\n          'delivered', MARKER_COLORS.delivered,\r\n          'exception', MARKER_COLORS.exception,\r\n          'cancelled', MARKER_COLORS.cancelled,\r\n          'returned', MARKER_COLORS.returned,\r\n          MARKER_COLORS.pending\r\n        ],\r\n        'circle-stroke-width': 2,\r\n        'circle-stroke-color': '#ffffff'\r\n      }\r\n    });\r\n    \r\n    // Capa de rutas\r\n    map.current.addSource('routes', {\r\n      type: 'geojson',\r\n      data: {\r\n        type: 'FeatureCollection',\r\n        features: []\r\n      }\r\n    });\r\n    \r\n    map.current.addLayer({\r\n      id: 'routes-layer',\r\n      type: 'line',\r\n      source: 'routes',\r\n      paint: {\r\n        'line-color': '#3b82f6',\r\n        'line-width': 3,\r\n        'line-opacity': 0.7\r\n      }\r\n    });\r\n    \r\n  }, [mapLoaded]);\r\n  \r\n  // =====================================================\r\n  // CARGAR DATOS INICIALES\r\n  // =====================================================\r\n  \r\n  const loadInitialData = useCallback(() => {\r\n    // Cargar geofences de ejemplo\r\n    const sampleGeofences: GeofenceZone[] = [\r\n      {\r\n        id: 'caba',\r\n        name: 'CABA - Zona Prioritaria',\r\n        coordinates: [\r\n          [-58.5315, -34.5264],\r\n          [-58.3354, -34.5264],\r\n          [-58.3354, -34.7051],\r\n          [-58.5315, -34.7051],\r\n          [-58.5315, -34.5264]\r\n        ],\r\n        type: 'priority',\r\n        active: true\r\n      },\r\n      {\r\n        id: 'gba_norte',\r\n        name: 'GBA Norte - Zona de Entrega',\r\n        coordinates: [\r\n          [-58.6000, -34.4000],\r\n          [-58.4000, -34.4000],\r\n          [-58.4000, -34.5500],\r\n          [-58.6000, -34.5500],\r\n          [-58.6000, -34.4000]\r\n        ],\r\n        type: 'delivery_zone',\r\n        active: true\r\n      }\r\n    ];\r\n    \r\n    setGeofences(sampleGeofences);\r\n    updateGeofencesLayer(sampleGeofences);\r\n  }, []);\r\n  \r\n  // =====================================================\r\n  // ACTUALIZAR CAPAS DEL MAPA\r\n  // =====================================================\r\n  \r\n  const updateShipmentsLayer = useCallback((shipmentsData: Shipment[]) => {\r\n    if (!map.current || !mapLoaded) {return;}\r\n    \r\n    const filteredShipments = filterStatus === 'all' \r\n      ? shipmentsData \r\n      : shipmentsData.filter(s => s.status === filterStatus);\r\n    \r\n    const features = filteredShipments.map(shipment => {\r\n      // Generar coordenadas aleatorias en Buenos Aires para demo\r\n      const lat = -34.6037 + (Math.random() - 0.5) * 0.2;\r\n      const lng = -58.3816 + (Math.random() - 0.5) * 0.2;\r\n      \r\n      return {\r\n        type: 'Feature',\r\n        geometry: {\r\n          type: 'Point',\r\n          coordinates: [lng, lat]\r\n        },\r\n        properties: {\r\n          shipmentId: shipment.id.toString(),\r\n          status: shipment.status,\r\n          shipmentNumber: shipment.shipment_number,\r\n          selected: selectedShipment?.id === shipment.id\r\n        }\r\n      };\r\n    });\r\n    \r\n    map.current.getSource('shipments').setData({\r\n      type: 'FeatureCollection',\r\n      features\r\n    });\r\n  }, [mapLoaded, filterStatus, selectedShipment]);\r\n  \r\n  const updateGeofencesLayer = useCallback((geofencesData: GeofenceZone[]) => {\r\n    if (!map.current || !mapLoaded) {return;}\r\n    \r\n    const features = geofencesData\r\n      .filter(zone => zone.active && showGeofences)\r\n      .map(zone => ({\r\n        type: 'Feature',\r\n        geometry: {\r\n          type: 'Polygon',\r\n          coordinates: [zone.coordinates]\r\n        },\r\n        properties: {\r\n          id: zone.id,\r\n          name: zone.name,\r\n          type: zone.type\r\n        }\r\n      }));\r\n    \r\n    map.current.getSource('geofences').setData({\r\n      type: 'FeatureCollection',\r\n      features\r\n    });\r\n  }, [mapLoaded, showGeofences]);\r\n  \r\n  // =====================================================\r\n  // EFECTOS\r\n  // =====================================================\r\n  \r\n  useEffect(() => {\r\n    if (mapLoaded && shipments.length > 0) {\r\n      updateShipmentsLayer(shipments);\r\n    }\r\n  }, [shipments, mapLoaded, updateShipmentsLayer]);\r\n  \r\n  useEffect(() => {\r\n    if (mapLoaded) {\r\n      updateGeofencesLayer(geofences);\r\n    }\r\n  }, [geofences, mapLoaded, updateGeofencesLayer]);\r\n  \r\n  // =====================================================\r\n  // HANDLERS\r\n  // =====================================================\r\n  \r\n  const handleStyleChange = (style: string) => {\r\n    setMapStyle(style as any);\r\n    if (map.current) {\r\n      const styleUrls = {\r\n        streets: 'https://api.maptiler.com/maps/streets/style.json?key=demo',\r\n        satellite: 'https://api.maptiler.com/maps/satellite/style.json?key=demo',\r\n        terrain: 'https://api.maptiler.com/maps/terrain/style.json?key=demo'\r\n      };\r\n      map.current.setStyle(styleUrls[style as keyof typeof styleUrls]);\r\n    }\r\n  };\r\n  \r\n  const handleFullscreen = () => {\r\n    setIsFullscreen(!isFullscreen);\r\n    // TODO: Implementar fullscreen real\r\n  };\r\n  \r\n  const handleFitBounds = () => {\r\n    if (map.current && shipments.length > 0) {\r\n      // Calcular bounds basado en los shipments\r\n      const bounds = new (window as any).maplibregl.LngLatBounds();\r\n      shipments.forEach(() => {\r\n        // Coordenadas de ejemplo - en producción usar coordenadas reales\r\n        const lat = -34.6037 + (Math.random() - 0.5) * 0.2;\r\n        const lng = -58.3816 + (Math.random() - 0.5) * 0.2;\r\n        bounds.extend([lng, lat]);\r\n      });\r\n      map.current.fitBounds(bounds, { padding: 50 });\r\n    }\r\n  };\r\n  \r\n  const handleRefresh = () => {\r\n    if (mapLoaded) {\r\n      updateShipmentsLayer(shipments);\r\n      updateGeofencesLayer(geofences);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <Card className={cn(\"relative\", className, isFullscreen && \"fixed inset-0 z-50\")}>\r\n      <CardHeader className=\"pb-3\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div>\r\n            <CardTitle className=\"flex items-center gap-2\">\r\n              <MapIcon className=\"w-5 h-5\" />\r\n              Mapa de Logística\r\n            </CardTitle>\r\n            <CardDescription>\r\n              Tracking en tiempo real de {shipments.length} envíos\r\n            </CardDescription>\r\n          </div>\r\n          \r\n          <div className=\"flex items-center gap-2\">\r\n            {/* Filtro de estado */}\r\n            <Select value={filterStatus} onValueChange={setFilterStatus}>\r\n              <SelectTrigger className=\"w-32\">\r\n                <SelectValue />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"all\">Todos</SelectItem>\r\n                <SelectItem value=\"in_transit\">En Tránsito</SelectItem>\r\n                <SelectItem value=\"out_for_delivery\">En Reparto</SelectItem>\r\n                <SelectItem value=\"delivered\">Entregados</SelectItem>\r\n              </SelectContent>\r\n            </Select>\r\n            \r\n            {/* Controles de capas */}\r\n            <div className=\"flex items-center gap-2\">\r\n              <Switch\r\n                checked={showGeofences}\r\n                onCheckedChange={setShowGeofences}\r\n                size=\"sm\"\r\n              />\r\n              <span className=\"text-sm\">Zonas</span>\r\n            </div>\r\n            \r\n            <div className=\"flex items-center gap-2\">\r\n              <Switch\r\n                checked={showRoutes}\r\n                onCheckedChange={setShowRoutes}\r\n                size=\"sm\"\r\n              />\r\n              <span className=\"text-sm\">Rutas</span>\r\n            </div>\r\n            \r\n            {/* Botones de acción */}\r\n            <Button variant=\"outline\" size=\"sm\" onClick={handleRefresh}>\r\n              <RefreshCw className=\"w-4 h-4\" />\r\n            </Button>\r\n            \r\n            <Button variant=\"outline\" size=\"sm\" onClick={handleFitBounds}>\r\n              <Navigation className=\"w-4 h-4\" />\r\n            </Button>\r\n            \r\n            <Button variant=\"outline\" size=\"sm\" onClick={handleFullscreen}>\r\n              <Maximize2 className=\"w-4 h-4\" />\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Controles de estilo */}\r\n        <div className=\"flex items-center gap-4\">\r\n          <Select value={mapStyle} onValueChange={handleStyleChange}>\r\n            <SelectTrigger className=\"w-32\">\r\n              <SelectValue />\r\n            </SelectTrigger>\r\n            <SelectContent>\r\n              <SelectItem value=\"streets\">Calles</SelectItem>\r\n              <SelectItem value=\"satellite\">Satélite</SelectItem>\r\n              <SelectItem value=\"terrain\">Terreno</SelectItem>\r\n            </SelectContent>\r\n          </Select>\r\n          \r\n          {realTimeEnabled && (\r\n            <Badge variant=\"secondary\" className=\"flex items-center gap-1\">\r\n              <Zap className=\"w-3 h-3\" />\r\n              Tiempo Real\r\n            </Badge>\r\n          )}\r\n          \r\n          <div className=\"flex items-center gap-4 text-sm\">\r\n            <div className=\"flex items-center gap-1\">\r\n              <div className=\"w-3 h-3 rounded-full bg-blue-500\"></div>\r\n              <span>En Tránsito</span>\r\n            </div>\r\n            <div className=\"flex items-center gap-1\">\r\n              <div className=\"w-3 h-3 rounded-full bg-purple-500\"></div>\r\n              <span>En Reparto</span>\r\n            </div>\r\n            <div className=\"flex items-center gap-1\">\r\n              <div className=\"w-3 h-3 rounded-full bg-green-500\"></div>\r\n              <span>Entregado</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </CardHeader>\r\n      \r\n      <CardContent className=\"p-0\">\r\n        <div \r\n          ref={mapContainer} \r\n          className={cn(\r\n            \"w-full bg-gray-100 rounded-b-lg\",\r\n            isFullscreen ? \"h-screen\" : \"h-96\"\r\n          )}\r\n          style={{ minHeight: isFullscreen ? '100vh' : '400px' }}\r\n        />\r\n        \r\n        {!mapLoaded && (\r\n          <div className=\"absolute inset-0 flex items-center justify-center bg-gray-100 rounded-b-lg\">\r\n            <div className=\"text-center\">\r\n              <MapIcon className=\"w-8 h-8 text-gray-400 mx-auto mb-2 animate-pulse\" />\r\n              <p className=\"text-gray-500\">Cargando mapa...</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["LogisticsMap","MAP_CONFIG","style","center","zoom","pitch","bearing","MARKER_COLORS","pending","confirmed","picked_up","in_transit","out_for_delivery","delivered","exception","cancelled","returned","shipments","selectedShipment","onShipmentSelect","realTimeEnabled","className","mapContainer","useRef","map","mapLoaded","setMapLoaded","useState","isFullscreen","setIsFullscreen","mapStyle","setMapStyle","showGeofences","setShowGeofences","showRoutes","setShowRoutes","filterStatus","setFilterStatus","markers","setMarkers","geofences","setGeofences","activeRoutes","setActiveRoutes","useEffect","current","then","maplibregl","Map","container","on","initializeMapLayers","loadInitialData","e","shipmentId","features","properties","shipment","find","s","id","toString","getCanvas","cursor","remove","useCallback","addSource","type","data","addLayer","source","paint","sampleGeofences","name","coordinates","active","updateGeofencesLayer","updateShipmentsLayer","shipmentsData","filteredShipments","filter","status","lat","Math","random","lng","geometry","shipmentNumber","shipment_number","selected","getSource","setData","geofencesData","zone","length","handleStyleChange","styleUrls","streets","satellite","terrain","setStyle","handleFullscreen","handleFitBounds","bounds","window","LngLatBounds","forEach","extend","fitBounds","padding","handleRefresh","Card","cn","CardHeader","div","CardTitle","MapIcon","CardDescription","Select","value","onValueChange","SelectTrigger","SelectValue","SelectContent","SelectItem","Switch","checked","onCheckedChange","size","span","Button","variant","onClick","RefreshCw","Navigation","Maximize2","Badge","Zap","CardContent","ref","minHeight","p"],"mappings":"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"}