75f2f0fa9b7f380c67837c44c38339bb
// ===================================
// PERFORMANCE BUDGET MONITOR
// ===================================
// Sistema de monitoreo de presupuestos de rendimiento
"use strict";

/* istanbul ignore next */
function cov_1jw0nw4uk3() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\optimization\\performance-budget-monitor.ts";
  var hash = "253f34a4ad3e89b4d88b04b23eda73faf17fb8fb";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\optimization\\performance-budget-monitor.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 8,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 14,
          column: 3
        }
      },
      "2": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 40
        }
      },
      "3": {
        start: {
          line: 15,
          column: 12
        },
        end: {
          line: 15,
          column: 25
        }
      },
      "4": {
        start: {
          line: 16,
          column: 28
        },
        end: {
          line: 16,
          column: 69
        }
      },
      "5": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 20,
          column: 6
        }
      },
      "6": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 26
        }
      },
      "7": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 26
        }
      },
      "8": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 33
        }
      },
      "9": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 40
        }
      },
      "10": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 32,
          column: 9
        }
      },
      "11": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 31,
          column: 79
        }
      },
      "12": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 49
        }
      },
      "13": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 115,
          column: 10
        }
      },
      "14": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 118,
          column: 34
        }
      },
      "15": {
        start: {
          line: 121,
          column: 22
        },
        end: {
          line: 121,
          column: 66
        }
      },
      "16": {
        start: {
          line: 121,
          column: 50
        },
        end: {
          line: 121,
          column: 65
        }
      },
      "17": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 127,
          column: 9
        }
      },
      "18": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 126,
          column: 14
        }
      },
      "19": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 130,
          column: 65
        }
      },
      "20": {
        start: {
          line: 130,
          column: 48
        },
        end: {
          line: 130,
          column: 63
        }
      },
      "21": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 135,
          column: 10
        }
      },
      "22": {
        start: {
          line: 141,
          column: 24
        },
        end: {
          line: 141,
          column: 60
        }
      },
      "23": {
        start: {
          line: 142,
          column: 27
        },
        end: {
          line: 142,
          column: 62
        }
      },
      "24": {
        start: {
          line: 143,
          column: 22
        },
        end: {
          line: 143,
          column: 73
        }
      },
      "25": {
        start: {
          line: 144,
          column: 22
        },
        end: {
          line: 144,
          column: 53
        }
      },
      "26": {
        start: {
          line: 145,
          column: 23
        },
        end: {
          line: 145,
          column: 52
        }
      },
      "27": {
        start: {
          line: 146,
          column: 23
        },
        end: {
          line: 154,
          column: 9
        }
      },
      "28": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 155,
          column: 34
        }
      },
      "29": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 156,
          column: 22
        }
      },
      "30": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 177,
          column: 9
        }
      },
      "31": {
        start: {
          line: 162,
          column: 31
        },
        end: {
          line: 162,
          column: 70
        }
      },
      "32": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 173,
          column: 14
        }
      },
      "33": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 175,
          column: 76
        }
      },
      "34": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 176,
          column: 41
        }
      },
      "35": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 190,
          column: 10
        }
      },
      "36": {
        start: {
          line: 193,
          column: 27
        },
        end: {
          line: 193,
          column: 29
        }
      },
      "37": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 222,
          column: 9
        }
      },
      "38": {
        start: {
          line: 195,
          column: 27
        },
        end: {
          line: 195,
          column: 68
        }
      },
      "39": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 198,
          column: 13
        }
      },
      "40": {
        start: {
          line: 197,
          column: 16
        },
        end: {
          line: 197,
          column: 25
        }
      },
      "41": {
        start: {
          line: 199,
          column: 28
        },
        end: {
          line: 199,
          column: 32
        }
      },
      "42": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 218,
          column: 13
        }
      },
      "43": {
        start: {
          line: 201,
          column: 16
        },
        end: {
          line: 208,
          column: 18
        }
      },
      "44": {
        start: {
          line: 209,
          column: 19
        },
        end: {
          line: 218,
          column: 13
        }
      },
      "45": {
        start: {
          line: 210,
          column: 16
        },
        end: {
          line: 217,
          column: 18
        }
      },
      "46": {
        start: {
          line: 219,
          column: 12
        },
        end: {
          line: 221,
          column: 13
        }
      },
      "47": {
        start: {
          line: 220,
          column: 16
        },
        end: {
          line: 220,
          column: 43
        }
      },
      "48": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 231,
          column: 11
        }
      },
      "49": {
        start: {
          line: 224,
          column: 32
        },
        end: {
          line: 229,
          column: 13
        }
      },
      "50": {
        start: {
          line: 230,
          column: 12
        },
        end: {
          line: 230,
          column: 65
        }
      },
      "51": {
        start: {
          line: 234,
          column: 26
        },
        end: {
          line: 242,
          column: 9
        }
      },
      "52": {
        start: {
          line: 243,
          column: 26
        },
        end: {
          line: 243,
          column: 47
        }
      },
      "53": {
        start: {
          line: 244,
          column: 8
        },
        end: {
          line: 244,
          column: 53
        }
      },
      "54": {
        start: {
          line: 247,
          column: 23
        },
        end: {
          line: 247,
          column: 48
        }
      },
      "55": {
        start: {
          line: 248,
          column: 30
        },
        end: {
          line: 248,
          column: 61
        }
      },
      "56": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 260,
          column: 9
        }
      },
      "57": {
        start: {
          line: 250,
          column: 12
        },
        end: {
          line: 252,
          column: 13
        }
      },
      "58": {
        start: {
          line: 251,
          column: 16
        },
        end: {
          line: 251,
          column: 34
        }
      },
      "59": {
        start: {
          line: 253,
          column: 12
        },
        end: {
          line: 255,
          column: 13
        }
      },
      "60": {
        start: {
          line: 254,
          column: 16
        },
        end: {
          line: 254,
          column: 30
        }
      },
      "61": {
        start: {
          line: 256,
          column: 12
        },
        end: {
          line: 258,
          column: 13
        }
      },
      "62": {
        start: {
          line: 257,
          column: 16
        },
        end: {
          line: 257,
          column: 32
        }
      },
      "63": {
        start: {
          line: 259,
          column: 12
        },
        end: {
          line: 259,
          column: 25
        }
      },
      "64": {
        start: {
          line: 261,
          column: 8
        },
        end: {
          line: 269,
          column: 9
        }
      },
      "65": {
        start: {
          line: 262,
          column: 12
        },
        end: {
          line: 264,
          column: 13
        }
      },
      "66": {
        start: {
          line: 263,
          column: 16
        },
        end: {
          line: 263,
          column: 30
        }
      },
      "67": {
        start: {
          line: 265,
          column: 12
        },
        end: {
          line: 267,
          column: 13
        }
      },
      "68": {
        start: {
          line: 266,
          column: 16
        },
        end: {
          line: 266,
          column: 32
        }
      },
      "69": {
        start: {
          line: 268,
          column: 12
        },
        end: {
          line: 268,
          column: 25
        }
      },
      "70": {
        start: {
          line: 270,
          column: 8
        },
        end: {
          line: 270,
          column: 54
        }
      },
      "71": {
        start: {
          line: 273,
          column: 23
        },
        end: {
          line: 273,
          column: 48
        }
      },
      "72": {
        start: {
          line: 274,
          column: 25
        },
        end: {
          line: 274,
          column: 50
        }
      },
      "73": {
        start: {
          line: 275,
          column: 32
        },
        end: {
          line: 283,
          column: 9
        }
      },
      "74": {
        start: {
          line: 284,
          column: 8
        },
        end: {
          line: 284,
          column: 106
        }
      },
      "75": {
        start: {
          line: 287,
          column: 20
        },
        end: {
          line: 287,
          column: 23
        }
      },
      "76": {
        start: {
          line: 288,
          column: 8
        },
        end: {
          line: 291,
          column: 9
        }
      },
      "77": {
        start: {
          line: 289,
          column: 28
        },
        end: {
          line: 289,
          column: 60
        }
      },
      "78": {
        start: {
          line: 290,
          column: 12
        },
        end: {
          line: 290,
          column: 29
        }
      },
      "79": {
        start: {
          line: 293,
          column: 8
        },
        end: {
          line: 295,
          column: 9
        }
      },
      "80": {
        start: {
          line: 294,
          column: 12
        },
        end: {
          line: 294,
          column: 23
        }
      },
      "81": {
        start: {
          line: 296,
          column: 8
        },
        end: {
          line: 298,
          column: 9
        }
      },
      "82": {
        start: {
          line: 297,
          column: 12
        },
        end: {
          line: 297,
          column: 23
        }
      },
      "83": {
        start: {
          line: 299,
          column: 8
        },
        end: {
          line: 301,
          column: 9
        }
      },
      "84": {
        start: {
          line: 300,
          column: 12
        },
        end: {
          line: 300,
          column: 23
        }
      },
      "85": {
        start: {
          line: 302,
          column: 8
        },
        end: {
          line: 302,
          column: 49
        }
      },
      "86": {
        start: {
          line: 305,
          column: 28
        },
        end: {
          line: 305,
          column: 67
        }
      },
      "87": {
        start: {
          line: 306,
          column: 33
        },
        end: {
          line: 311,
          column: 9
        }
      },
      "88": {
        start: {
          line: 312,
          column: 8
        },
        end: {
          line: 312,
          column: 64
        }
      },
      "89": {
        start: {
          line: 315,
          column: 8
        },
        end: {
          line: 317,
          column: 9
        }
      },
      "90": {
        start: {
          line: 316,
          column: 12
        },
        end: {
          line: 316,
          column: 23
        }
      },
      "91": {
        start: {
          line: 318,
          column: 8
        },
        end: {
          line: 320,
          column: 9
        }
      },
      "92": {
        start: {
          line: 319,
          column: 12
        },
        end: {
          line: 319,
          column: 23
        }
      },
      "93": {
        start: {
          line: 321,
          column: 8
        },
        end: {
          line: 323,
          column: 9
        }
      },
      "94": {
        start: {
          line: 322,
          column: 12
        },
        end: {
          line: 322,
          column: 23
        }
      },
      "95": {
        start: {
          line: 324,
          column: 8
        },
        end: {
          line: 326,
          column: 9
        }
      },
      "96": {
        start: {
          line: 325,
          column: 12
        },
        end: {
          line: 325,
          column: 23
        }
      },
      "97": {
        start: {
          line: 327,
          column: 8
        },
        end: {
          line: 327,
          column: 19
        }
      },
      "98": {
        start: {
          line: 330,
          column: 8
        },
        end: {
          line: 332,
          column: 9
        }
      },
      "99": {
        start: {
          line: 331,
          column: 12
        },
        end: {
          line: 331,
          column: 22
        }
      },
      "100": {
        start: {
          line: 333,
          column: 31
        },
        end: {
          line: 333,
          column: 68
        }
      },
      "101": {
        start: {
          line: 334,
          column: 23
        },
        end: {
          line: 334,
          column: 25
        }
      },
      "102": {
        start: {
          line: 335,
          column: 27
        },
        end: {
          line: 341,
          column: 9
        }
      },
      "103": {
        start: {
          line: 342,
          column: 8
        },
        end: {
          line: 359,
          column: 9
        }
      },
      "104": {
        start: {
          line: 343,
          column: 28
        },
        end: {
          line: 343,
          column: 47
        }
      },
      "105": {
        start: {
          line: 344,
          column: 29
        },
        end: {
          line: 344,
          column: 56
        }
      },
      "106": {
        start: {
          line: 345,
          column: 27
        },
        end: {
          line: 345,
          column: 45
        }
      },
      "107": {
        start: {
          line: 346,
          column: 34
        },
        end: {
          line: 346,
          column: 76
        }
      },
      "108": {
        start: {
          line: 347,
          column: 24
        },
        end: {
          line: 347,
          column: 32
        }
      },
      "109": {
        start: {
          line: 348,
          column: 12
        },
        end: {
          line: 350,
          column: 13
        }
      },
      "110": {
        start: {
          line: 349,
          column: 16
        },
        end: {
          line: 349,
          column: 63
        }
      },
      "111": {
        start: {
          line: 351,
          column: 12
        },
        end: {
          line: 358,
          column: 15
        }
      },
      "112": {
        start: {
          line: 360,
          column: 8
        },
        end: {
          line: 360,
          column: 22
        }
      },
      "113": {
        start: {
          line: 366,
          column: 8
        },
        end: {
          line: 366,
          column: 34
        }
      },
      "114": {
        start: {
          line: 367,
          column: 8
        },
        end: {
          line: 369,
          column: 9
        }
      },
      "115": {
        start: {
          line: 368,
          column: 12
        },
        end: {
          line: 368,
          column: 68
        }
      },
      "116": {
        start: {
          line: 372,
          column: 8
        },
        end: {
          line: 374,
          column: 10
        }
      },
      "117": {
        start: {
          line: 377,
          column: 8
        },
        end: {
          line: 377,
          column: 86
        }
      },
      "118": {
        start: {
          line: 383,
          column: 8
        },
        end: {
          line: 383,
          column: 80
        }
      },
      "119": {
        start: {
          line: 386,
          column: 27
        },
        end: {
          line: 386,
          column: 97
        }
      },
      "120": {
        start: {
          line: 387,
          column: 8
        },
        end: {
          line: 397,
          column: 9
        }
      },
      "121": {
        start: {
          line: 388,
          column: 12
        },
        end: {
          line: 390,
          column: 15
        }
      },
      "122": {
        start: {
          line: 391,
          column: 29
        },
        end: {
          line: 391,
          column: 72
        }
      },
      "123": {
        start: {
          line: 392,
          column: 29
        },
        end: {
          line: 392,
          column: 69
        }
      },
      "124": {
        start: {
          line: 393,
          column: 12
        },
        end: {
          line: 393,
          column: 84
        }
      },
      "125": {
        start: {
          line: 394,
          column: 12
        },
        end: {
          line: 394,
          column: 68
        }
      },
      "126": {
        start: {
          line: 396,
          column: 12
        },
        end: {
          line: 396,
          column: 71
        }
      },
      "127": {
        start: {
          line: 400,
          column: 62
        },
        end: {
          line: 400,
          column: 68
        }
      },
      "128": {
        start: {
          line: 401,
          column: 25
        },
        end: {
          line: 416,
          column: 1
        }
      },
      "129": {
        start: {
          line: 417,
          column: 8
        },
        end: {
          line: 431,
          column: 9
        }
      },
      "130": {
        start: {
          line: 418,
          column: 12
        },
        end: {
          line: 418,
          column: 75
        }
      },
      "131": {
        start: {
          line: 420,
          column: 12
        },
        end: {
          line: 430,
          column: 15
        }
      },
      "132": {
        start: {
          line: 421,
          column: 40
        },
        end: {
          line: 421,
          column: 166
        }
      },
      "133": {
        start: {
          line: 422,
          column: 42
        },
        end: {
          line: 422,
          column: 172
        }
      },
      "134": {
        start: {
          line: 423,
          column: 16
        },
        end: {
          line: 429,
          column: 2
        }
      },
      "135": {
        start: {
          line: 432,
          column: 8
        },
        end: {
          line: 439,
          column: 9
        }
      },
      "136": {
        start: {
          line: 433,
          column: 12
        },
        end: {
          line: 433,
          column: 42
        }
      },
      "137": {
        start: {
          line: 434,
          column: 12
        },
        end: {
          line: 438,
          column: 15
        }
      },
      "138": {
        start: {
          line: 435,
          column: 29
        },
        end: {
          line: 435,
          column: 107
        }
      },
      "139": {
        start: {
          line: 436,
          column: 35
        },
        end: {
          line: 436,
          column: 137
        }
      },
      "140": {
        start: {
          line: 437,
          column: 16
        },
        end: {
          line: 437,
          column: 79
        }
      },
      "141": {
        start: {
          line: 440,
          column: 8
        },
        end: {
          line: 440,
          column: 26
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 9
          },
          end: {
            line: 11,
            column: 10
          }
        },
        loc: {
          start: {
            line: 11,
            column: 20
          },
          end: {
            line: 13,
            column: 5
          }
        },
        line: 11
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 17,
            column: 9
          },
          end: {
            line: 17,
            column: 33
          }
        },
        loc: {
          start: {
            line: 17,
            column: 39
          },
          end: {
            line: 21,
            column: 1
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        loc: {
          start: {
            line: 23,
            column: 17
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 23
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        loc: {
          start: {
            line: 29,
            column: 25
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 29
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        loc: {
          start: {
            line: 38,
            column: 31
          },
          end: {
            line: 116,
            column: 5
          }
        },
        line: 38
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 117,
            column: 4
          },
          end: {
            line: 117,
            column: 5
          }
        },
        loc: {
          start: {
            line: 117,
            column: 22
          },
          end: {
            line: 119,
            column: 5
          }
        },
        line: 117
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 120,
            column: 4
          },
          end: {
            line: 120,
            column: 5
          }
        },
        loc: {
          start: {
            line: 120,
            column: 32
          },
          end: {
            line: 128,
            column: 5
          }
        },
        line: 120
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 121,
            column: 45
          },
          end: {
            line: 121,
            column: 46
          }
        },
        loc: {
          start: {
            line: 121,
            column: 50
          },
          end: {
            line: 121,
            column: 65
          }
        },
        line: 121
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 129,
            column: 4
          },
          end: {
            line: 129,
            column: 5
          }
        },
        loc: {
          start: {
            line: 129,
            column: 23
          },
          end: {
            line: 131,
            column: 5
          }
        },
        line: 129
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 130,
            column: 43
          },
          end: {
            line: 130,
            column: 44
          }
        },
        loc: {
          start: {
            line: 130,
            column: 48
          },
          end: {
            line: 130,
            column: 63
          }
        },
        line: 130
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 132,
            column: 4
          },
          end: {
            line: 132,
            column: 5
          }
        },
        loc: {
          start: {
            line: 132,
            column: 17
          },
          end: {
            line: 136,
            column: 5
          }
        },
        line: 132
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 140,
            column: 4
          },
          end: {
            line: 140,
            column: 5
          }
        },
        loc: {
          start: {
            line: 140,
            column: 50
          },
          end: {
            line: 157,
            column: 5
          }
        },
        line: 140
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 158,
            column: 4
          },
          end: {
            line: 158,
            column: 5
          }
        },
        loc: {
          start: {
            line: 158,
            column: 36
          },
          end: {
            line: 178,
            column: 5
          }
        },
        line: 158
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 179,
            column: 4
          },
          end: {
            line: 179,
            column: 5
          }
        },
        loc: {
          start: {
            line: 179,
            column: 21
          },
          end: {
            line: 191,
            column: 5
          }
        },
        line: 179
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 192,
            column: 4
          },
          end: {
            line: 192,
            column: 5
          }
        },
        loc: {
          start: {
            line: 192,
            column: 35
          },
          end: {
            line: 232,
            column: 5
          }
        },
        line: 192
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 223,
            column: 31
          },
          end: {
            line: 223,
            column: 32
          }
        },
        loc: {
          start: {
            line: 223,
            column: 39
          },
          end: {
            line: 231,
            column: 9
          }
        },
        line: 223
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 233,
            column: 4
          },
          end: {
            line: 233,
            column: 5
          }
        },
        loc: {
          start: {
            line: 233,
            column: 40
          },
          end: {
            line: 245,
            column: 5
          }
        },
        line: 233
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 246,
            column: 4
          },
          end: {
            line: 246,
            column: 5
          }
        },
        loc: {
          start: {
            line: 246,
            column: 36
          },
          end: {
            line: 271,
            column: 5
          }
        },
        line: 246
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 272,
            column: 4
          },
          end: {
            line: 272,
            column: 5
          }
        },
        loc: {
          start: {
            line: 272,
            column: 43
          },
          end: {
            line: 285,
            column: 5
          }
        },
        line: 272
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 286,
            column: 4
          },
          end: {
            line: 286,
            column: 5
          }
        },
        loc: {
          start: {
            line: 286,
            column: 51
          },
          end: {
            line: 303,
            column: 5
          }
        },
        line: 286
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 304,
            column: 4
          },
          end: {
            line: 304,
            column: 5
          }
        },
        loc: {
          start: {
            line: 304,
            column: 32
          },
          end: {
            line: 313,
            column: 5
          }
        },
        line: 304
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 314,
            column: 4
          },
          end: {
            line: 314,
            column: 5
          }
        },
        loc: {
          start: {
            line: 314,
            column: 31
          },
          end: {
            line: 328,
            column: 5
          }
        },
        line: 314
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 329,
            column: 4
          },
          end: {
            line: 329,
            column: 5
          }
        },
        loc: {
          start: {
            line: 329,
            column: 36
          },
          end: {
            line: 361,
            column: 5
          }
        },
        line: 329
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 365,
            column: 4
          },
          end: {
            line: 365,
            column: 5
          }
        },
        loc: {
          start: {
            line: 365,
            column: 25
          },
          end: {
            line: 370,
            column: 5
          }
        },
        line: 365
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 371,
            column: 4
          },
          end: {
            line: 371,
            column: 5
          }
        },
        loc: {
          start: {
            line: 371,
            column: 17
          },
          end: {
            line: 375,
            column: 5
          }
        },
        line: 371
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 376,
            column: 4
          },
          end: {
            line: 376,
            column: 5
          }
        },
        loc: {
          start: {
            line: 376,
            column: 22
          },
          end: {
            line: 378,
            column: 5
          }
        },
        line: 376
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 382,
            column: 4
          },
          end: {
            line: 382,
            column: 5
          }
        },
        loc: {
          start: {
            line: 382,
            column: 22
          },
          end: {
            line: 384,
            column: 5
          }
        },
        line: 382
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 385,
            column: 4
          },
          end: {
            line: 385,
            column: 5
          }
        },
        loc: {
          start: {
            line: 385,
            column: 41
          },
          end: {
            line: 398,
            column: 5
          }
        },
        line: 385
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 399,
            column: 4
          },
          end: {
            line: 399,
            column: 5
          }
        },
        loc: {
          start: {
            line: 399,
            column: 31
          },
          end: {
            line: 441,
            column: 5
          }
        },
        line: 399
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 420,
            column: 31
          },
          end: {
            line: 420,
            column: 32
          }
        },
        loc: {
          start: {
            line: 420,
            column: 47
          },
          end: {
            line: 430,
            column: 13
          }
        },
        line: 420
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 434,
            column: 27
          },
          end: {
            line: 434,
            column: 28
          }
        },
        loc: {
          start: {
            line: 434,
            column: 36
          },
          end: {
            line: 438,
            column: 13
          }
        },
        line: 434
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 11
          },
          end: {
            line: 20,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 18,
            column: 35
          },
          end: {
            line: 18,
            column: 38
          }
        }, {
          start: {
            line: 18,
            column: 41
          },
          end: {
            line: 20,
            column: 5
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 18,
            column: 11
          },
          end: {
            line: 18,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 11
          },
          end: {
            line: 18,
            column: 14
          }
        }, {
          start: {
            line: 18,
            column: 18
          },
          end: {
            line: 18,
            column: 32
          }
        }],
        line: 18
      },
      "2": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 32,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 32,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "3": {
        loc: {
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 122
      },
      "4": {
        loc: {
          start: {
            line: 140,
            column: 29
          },
          end: {
            line: 140,
            column: 48
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 140,
            column: 41
          },
          end: {
            line: 140,
            column: 48
          }
        }],
        line: 140
      },
      "5": {
        loc: {
          start: {
            line: 196,
            column: 12
          },
          end: {
            line: 198,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 196,
            column: 12
          },
          end: {
            line: 198,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 196
      },
      "6": {
        loc: {
          start: {
            line: 200,
            column: 12
          },
          end: {
            line: 218,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 200,
            column: 12
          },
          end: {
            line: 218,
            column: 13
          }
        }, {
          start: {
            line: 209,
            column: 19
          },
          end: {
            line: 218,
            column: 13
          }
        }],
        line: 200
      },
      "7": {
        loc: {
          start: {
            line: 209,
            column: 19
          },
          end: {
            line: 218,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 209,
            column: 19
          },
          end: {
            line: 218,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 209
      },
      "8": {
        loc: {
          start: {
            line: 219,
            column: 12
          },
          end: {
            line: 221,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 219,
            column: 12
          },
          end: {
            line: 221,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 219
      },
      "9": {
        loc: {
          start: {
            line: 244,
            column: 15
          },
          end: {
            line: 244,
            column: 52
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 244,
            column: 27
          },
          end: {
            line: 244,
            column: 45
          }
        }, {
          start: {
            line: 244,
            column: 48
          },
          end: {
            line: 244,
            column: 52
          }
        }],
        line: 244
      },
      "10": {
        loc: {
          start: {
            line: 249,
            column: 8
          },
          end: {
            line: 260,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 249,
            column: 8
          },
          end: {
            line: 260,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 249
      },
      "11": {
        loc: {
          start: {
            line: 250,
            column: 12
          },
          end: {
            line: 252,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 250,
            column: 12
          },
          end: {
            line: 252,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 250
      },
      "12": {
        loc: {
          start: {
            line: 253,
            column: 12
          },
          end: {
            line: 255,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 253,
            column: 12
          },
          end: {
            line: 255,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 253
      },
      "13": {
        loc: {
          start: {
            line: 256,
            column: 12
          },
          end: {
            line: 258,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 256,
            column: 12
          },
          end: {
            line: 258,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 256
      },
      "14": {
        loc: {
          start: {
            line: 261,
            column: 8
          },
          end: {
            line: 269,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 261,
            column: 8
          },
          end: {
            line: 269,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 261
      },
      "15": {
        loc: {
          start: {
            line: 262,
            column: 12
          },
          end: {
            line: 264,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 262,
            column: 12
          },
          end: {
            line: 264,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 262
      },
      "16": {
        loc: {
          start: {
            line: 265,
            column: 12
          },
          end: {
            line: 267,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 265,
            column: 12
          },
          end: {
            line: 267,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 265
      },
      "17": {
        loc: {
          start: {
            line: 270,
            column: 15
          },
          end: {
            line: 270,
            column: 53
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 270,
            column: 37
          },
          end: {
            line: 270,
            column: 45
          }
        }, {
          start: {
            line: 270,
            column: 48
          },
          end: {
            line: 270,
            column: 53
          }
        }],
        line: 270
      },
      "18": {
        loc: {
          start: {
            line: 284,
            column: 15
          },
          end: {
            line: 284,
            column: 105
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 284,
            column: 15
          },
          end: {
            line: 284,
            column: 43
          }
        }, {
          start: {
            line: 284,
            column: 47
          },
          end: {
            line: 284,
            column: 105
          }
        }],
        line: 284
      },
      "19": {
        loc: {
          start: {
            line: 293,
            column: 8
          },
          end: {
            line: 295,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 293,
            column: 8
          },
          end: {
            line: 295,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 293
      },
      "20": {
        loc: {
          start: {
            line: 296,
            column: 8
          },
          end: {
            line: 298,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 296,
            column: 8
          },
          end: {
            line: 298,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 296
      },
      "21": {
        loc: {
          start: {
            line: 299,
            column: 8
          },
          end: {
            line: 301,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 299,
            column: 8
          },
          end: {
            line: 301,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 299
      },
      "22": {
        loc: {
          start: {
            line: 305,
            column: 28
          },
          end: {
            line: 305,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 305,
            column: 61
          },
          end: {
            line: 305,
            column: 63
          }
        }, {
          start: {
            line: 305,
            column: 66
          },
          end: {
            line: 305,
            column: 67
          }
        }],
        line: 305
      },
      "23": {
        loc: {
          start: {
            line: 315,
            column: 8
          },
          end: {
            line: 317,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 315,
            column: 8
          },
          end: {
            line: 317,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 315
      },
      "24": {
        loc: {
          start: {
            line: 318,
            column: 8
          },
          end: {
            line: 320,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 318,
            column: 8
          },
          end: {
            line: 320,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 318
      },
      "25": {
        loc: {
          start: {
            line: 321,
            column: 8
          },
          end: {
            line: 323,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 321,
            column: 8
          },
          end: {
            line: 323,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 321
      },
      "26": {
        loc: {
          start: {
            line: 324,
            column: 8
          },
          end: {
            line: 326,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 324,
            column: 8
          },
          end: {
            line: 326,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 324
      },
      "27": {
        loc: {
          start: {
            line: 330,
            column: 8
          },
          end: {
            line: 332,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 330,
            column: 8
          },
          end: {
            line: 332,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 330
      },
      "28": {
        loc: {
          start: {
            line: 346,
            column: 34
          },
          end: {
            line: 346,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 346,
            column: 49
          },
          end: {
            line: 346,
            column: 72
          }
        }, {
          start: {
            line: 346,
            column: 75
          },
          end: {
            line: 346,
            column: 76
          }
        }],
        line: 346
      },
      "29": {
        loc: {
          start: {
            line: 348,
            column: 12
          },
          end: {
            line: 350,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 348,
            column: 12
          },
          end: {
            line: 350,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 348
      },
      "30": {
        loc: {
          start: {
            line: 349,
            column: 24
          },
          end: {
            line: 349,
            column: 62
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 349,
            column: 37
          },
          end: {
            line: 349,
            column: 48
          }
        }, {
          start: {
            line: 349,
            column: 51
          },
          end: {
            line: 349,
            column: 62
          }
        }],
        line: 349
      },
      "31": {
        loc: {
          start: {
            line: 367,
            column: 8
          },
          end: {
            line: 369,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 367,
            column: 8
          },
          end: {
            line: 369,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 367
      },
      "32": {
        loc: {
          start: {
            line: 377,
            column: 15
          },
          end: {
            line: 377,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 377,
            column: 41
          },
          end: {
            line: 377,
            column: 78
          }
        }, {
          start: {
            line: 377,
            column: 81
          },
          end: {
            line: 377,
            column: 85
          }
        }],
        line: 377
      },
      "33": {
        loc: {
          start: {
            line: 386,
            column: 27
          },
          end: {
            line: 386,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 386,
            column: 27
          },
          end: {
            line: 386,
            column: 37
          }
        }, {
          start: {
            line: 386,
            column: 41
          },
          end: {
            line: 386,
            column: 97
          }
        }],
        line: 386
      },
      "34": {
        loc: {
          start: {
            line: 417,
            column: 8
          },
          end: {
            line: 431,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 417,
            column: 8
          },
          end: {
            line: 431,
            column: 9
          }
        }, {
          start: {
            line: 419,
            column: 15
          },
          end: {
            line: 431,
            column: 9
          }
        }],
        line: 417
      },
      "35": {
        loc: {
          start: {
            line: 421,
            column: 40
          },
          end: {
            line: 421,
            column: 166
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 421,
            column: 76
          },
          end: {
            line: 421,
            column: 118
          }
        }, {
          start: {
            line: 421,
            column: 121
          },
          end: {
            line: 421,
            column: 166
          }
        }],
        line: 421
      },
      "36": {
        loc: {
          start: {
            line: 422,
            column: 42
          },
          end: {
            line: 422,
            column: 172
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 422,
            column: 78
          },
          end: {
            line: 422,
            column: 122
          }
        }, {
          start: {
            line: 422,
            column: 125
          },
          end: {
            line: 422,
            column: 172
          }
        }],
        line: 422
      },
      "37": {
        loc: {
          start: {
            line: 432,
            column: 8
          },
          end: {
            line: 439,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 432,
            column: 8
          },
          end: {
            line: 439,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 432
      },
      "38": {
        loc: {
          start: {
            line: 435,
            column: 29
          },
          end: {
            line: 435,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 435,
            column: 59
          },
          end: {
            line: 435,
            column: 63
          }
        }, {
          start: {
            line: 435,
            column: 66
          },
          end: {
            line: 435,
            column: 107
          }
        }],
        line: 435
      },
      "39": {
        loc: {
          start: {
            line: 435,
            column: 66
          },
          end: {
            line: 435,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 435,
            column: 96
          },
          end: {
            line: 435,
            column: 100
          }
        }, {
          start: {
            line: 435,
            column: 103
          },
          end: {
            line: 435,
            column: 107
          }
        }],
        line: 435
      },
      "40": {
        loc: {
          start: {
            line: 436,
            column: 35
          },
          end: {
            line: 436,
            column: 137
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 436,
            column: 61
          },
          end: {
            line: 436,
            column: 98
          }
        }, {
          start: {
            line: 436,
            column: 101
          },
          end: {
            line: 436,
            column: 137
          }
        }],
        line: 436
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\optimization\\performance-budget-monitor.ts"],
      sourcesContent: ["// ===================================\r\n// PERFORMANCE BUDGET MONITOR\r\n// ===================================\r\n// Sistema de monitoreo de presupuestos de rendimiento\r\n\r\nimport { promises as fs } from 'fs';\r\nimport path from 'path';\r\n\r\n// ===================================\r\n// INTERFACES Y TIPOS\r\n// ===================================\r\n\r\nexport interface PerformanceBudget {\r\n  name: string;\r\n  type: 'size' | 'count' | 'time';\r\n  threshold: number;\r\n  warning: number;\r\n  unit: 'bytes' | 'kb' | 'mb' | 'ms' | 'count';\r\n  category: 'critical' | 'important' | 'optional';\r\n  description: string;\r\n}\r\n\r\nexport interface BudgetViolation {\r\n  budget: PerformanceBudget;\r\n  actual: number;\r\n  expected: number;\r\n  severity: 'warning' | 'error';\r\n  impact: 'low' | 'medium' | 'high' | 'critical';\r\n  recommendation: string;\r\n}\r\n\r\nexport interface PerformanceReport {\r\n  timestamp: string;\r\n  buildId: string;\r\n  violations: BudgetViolation[];\r\n  metrics: PerformanceMetrics;\r\n  score: number;\r\n  grade: 'A' | 'B' | 'C' | 'D' | 'F';\r\n  trends: PerformanceTrend[];\r\n}\r\n\r\nexport interface PerformanceMetrics {\r\n  bundleSize: number;\r\n  firstLoadJS: number;\r\n  totalJS: number;\r\n  css: number;\r\n  images: number;\r\n  fonts: number;\r\n  chunkCount: number;\r\n  duplicateModules: number;\r\n  unusedCode: number;\r\n}\r\n\r\nexport interface PerformanceTrend {\r\n  metric: string;\r\n  current: number;\r\n  previous: number;\r\n  change: number;\r\n  changePercent: number;\r\n  trend: 'improving' | 'degrading' | 'stable';\r\n}\r\n\r\n// ===================================\r\n// PERFORMANCE BUDGET MONITOR\r\n// ===================================\r\n\r\nexport class PerformanceBudgetMonitor {\r\n  private static instance: PerformanceBudgetMonitor;\r\n  private budgets: PerformanceBudget[] = [];\r\n  private history: PerformanceReport[] = [];\r\n  private maxHistorySize = 50;\r\n\r\n  private constructor() {\r\n    this.initializeDefaultBudgets();\r\n  }\r\n\r\n  public static getInstance(): PerformanceBudgetMonitor {\r\n    if (!PerformanceBudgetMonitor.instance) {\r\n      PerformanceBudgetMonitor.instance = new PerformanceBudgetMonitor();\r\n    }\r\n    return PerformanceBudgetMonitor.instance;\r\n  }\r\n\r\n  // ===================================\r\n  // CONFIGURACI\xD3N DE BUDGETS\r\n  // ===================================\r\n\r\n  private initializeDefaultBudgets(): void {\r\n    this.budgets = [\r\n      // Budgets de tama\xF1o cr\xEDticos\r\n      {\r\n        name: 'First Load JS',\r\n        type: 'size',\r\n        threshold: 128 * 1024, // 128KB\r\n        warning: 100 * 1024, // 100KB\r\n        unit: 'bytes',\r\n        category: 'critical',\r\n        description: 'JavaScript cr\xEDtico que se carga inicialmente'\r\n      },\r\n      {\r\n        name: 'Total Bundle Size',\r\n        type: 'size',\r\n        threshold: 500 * 1024, // 500KB\r\n        warning: 400 * 1024, // 400KB\r\n        unit: 'bytes',\r\n        category: 'critical',\r\n        description: 'Tama\xF1o total de todos los bundles JavaScript'\r\n      },\r\n      {\r\n        name: 'CSS Bundle Size',\r\n        type: 'size',\r\n        threshold: 50 * 1024, // 50KB\r\n        warning: 40 * 1024, // 40KB\r\n        unit: 'bytes',\r\n        category: 'important',\r\n        description: 'Tama\xF1o total de archivos CSS'\r\n      },\r\n      {\r\n        name: 'Image Assets',\r\n        type: 'size',\r\n        threshold: 200 * 1024, // 200KB\r\n        warning: 150 * 1024, // 150KB\r\n        unit: 'bytes',\r\n        category: 'important',\r\n        description: 'Tama\xF1o total de im\xE1genes optimizadas'\r\n      },\r\n      {\r\n        name: 'Font Assets',\r\n        type: 'size',\r\n        threshold: 100 * 1024, // 100KB\r\n        warning: 80 * 1024, // 80KB\r\n        unit: 'bytes',\r\n        category: 'optional',\r\n        description: 'Tama\xF1o total de archivos de fuentes'\r\n      },\r\n\r\n      // Budgets de conteo\r\n      {\r\n        name: 'Chunk Count',\r\n        type: 'count',\r\n        threshold: 20,\r\n        warning: 15,\r\n        unit: 'count',\r\n        category: 'important',\r\n        description: 'N\xFAmero total de chunks generados'\r\n      },\r\n      {\r\n        name: 'Duplicate Modules',\r\n        type: 'count',\r\n        threshold: 5,\r\n        warning: 3,\r\n        unit: 'count',\r\n        category: 'important',\r\n        description: 'M\xF3dulos duplicados entre chunks'\r\n      },\r\n\r\n      // Budgets de tiempo (para futuras implementaciones)\r\n      {\r\n        name: 'Build Time',\r\n        type: 'time',\r\n        threshold: 60000, // 60 segundos\r\n        warning: 45000, // 45 segundos\r\n        unit: 'ms',\r\n        category: 'optional',\r\n        description: 'Tiempo total de build'\r\n      }\r\n    ];\r\n  }\r\n\r\n  public addBudget(budget: PerformanceBudget): void {\r\n    this.budgets.push(budget);\r\n  }\r\n\r\n  public updateBudget(name: string, updates: Partial<PerformanceBudget>): void {\r\n    const index = this.budgets.findIndex(b => b.name === name);\r\n    if (index !== -1) {\r\n      this.budgets[index] = { ...this.budgets[index], ...updates };\r\n    }\r\n  }\r\n\r\n  public removeBudget(name: string): void {\r\n    this.budgets = this.budgets.filter(b => b.name !== name);\r\n  }\r\n\r\n  public getBudgets(): PerformanceBudget[] {\r\n    return [...this.budgets];\r\n  }\r\n\r\n  // ===================================\r\n  // AN\xC1LISIS DE PERFORMANCE\r\n  // ===================================\r\n\r\n  public async analyzePerformance(buildPath: string = '.next'): Promise<PerformanceReport> {\r\n    const metrics = await this.collectMetrics(buildPath);\r\n    const violations = this.checkBudgetViolations(metrics);\r\n    const score = this.calculatePerformanceScore(violations, metrics);\r\n    const grade = this.getPerformanceGrade(score);\r\n    const trends = this.calculateTrends(metrics);\r\n\r\n    const report: PerformanceReport = {\r\n      timestamp: new Date().toISOString(),\r\n      buildId: this.generateBuildId(),\r\n      violations,\r\n      metrics,\r\n      score,\r\n      grade,\r\n      trends\r\n    };\r\n\r\n    this.addToHistory(report);\r\n    return report;\r\n  }\r\n\r\n  private async collectMetrics(buildPath: string): Promise<PerformanceMetrics> {\r\n    try {\r\n      // En una implementaci\xF3n real, esto analizar\xEDa los archivos del build\r\n      // Por ahora, simulamos m\xE9tricas realistas\r\n      const staticPath = path.join(buildPath, 'static');\r\n      \r\n      return {\r\n        bundleSize: 450 * 1024, // 450KB\r\n        firstLoadJS: 95 * 1024, // 95KB\r\n        totalJS: 380 * 1024, // 380KB\r\n        css: 35 * 1024, // 35KB\r\n        images: 120 * 1024, // 120KB\r\n        fonts: 45 * 1024, // 45KB\r\n        chunkCount: 12,\r\n        duplicateModules: 2,\r\n        unusedCode: 25 * 1024 // 25KB\r\n      };\r\n    } catch (error) {\r\n      console.warn('Could not collect real metrics, using mock data');\r\n      return this.getMockMetrics();\r\n    }\r\n  }\r\n\r\n  private getMockMetrics(): PerformanceMetrics {\r\n    return {\r\n      bundleSize: 420 * 1024,\r\n      firstLoadJS: 88 * 1024,\r\n      totalJS: 350 * 1024,\r\n      css: 32 * 1024,\r\n      images: 110 * 1024,\r\n      fonts: 40 * 1024,\r\n      chunkCount: 10,\r\n      duplicateModules: 1,\r\n      unusedCode: 20 * 1024\r\n    };\r\n  }\r\n\r\n  private checkBudgetViolations(metrics: PerformanceMetrics): BudgetViolation[] {\r\n    const violations: BudgetViolation[] = [];\r\n\r\n    for (const budget of this.budgets) {\r\n      const actual = this.getMetricValue(metrics, budget.name);\r\n      if (actual === null) {continue;}\r\n\r\n      let violation: BudgetViolation | null = null;\r\n\r\n      if (actual > budget.threshold) {\r\n        violation = {\r\n          budget,\r\n          actual,\r\n          expected: budget.threshold,\r\n          severity: 'error',\r\n          impact: this.calculateImpact(budget, actual),\r\n          recommendation: this.generateRecommendation(budget, actual)\r\n        };\r\n      } else if (actual > budget.warning) {\r\n        violation = {\r\n          budget,\r\n          actual,\r\n          expected: budget.warning,\r\n          severity: 'warning',\r\n          impact: this.calculateImpact(budget, actual),\r\n          recommendation: this.generateRecommendation(budget, actual)\r\n        };\r\n      }\r\n\r\n      if (violation) {\r\n        violations.push(violation);\r\n      }\r\n    }\r\n\r\n    return violations.sort((a, b) => {\r\n      const impactOrder = { critical: 4, high: 3, medium: 2, low: 1 };\r\n      return impactOrder[b.impact] - impactOrder[a.impact];\r\n    });\r\n  }\r\n\r\n  private getMetricValue(metrics: PerformanceMetrics, budgetName: string): number | null {\r\n    const metricMap: Record<string, keyof PerformanceMetrics> = {\r\n      'First Load JS': 'firstLoadJS',\r\n      'Total Bundle Size': 'bundleSize',\r\n      'CSS Bundle Size': 'css',\r\n      'Image Assets': 'images',\r\n      'Font Assets': 'fonts',\r\n      'Chunk Count': 'chunkCount',\r\n      'Duplicate Modules': 'duplicateModules'\r\n    };\r\n\r\n    const metricKey = metricMap[budgetName];\r\n    return metricKey ? metrics[metricKey] : null;\r\n  }\r\n\r\n  private calculateImpact(budget: PerformanceBudget, actual: number): 'low' | 'medium' | 'high' | 'critical' {\r\n    const excess = actual - budget.threshold;\r\n    const excessPercent = (excess / budget.threshold) * 100;\r\n\r\n    if (budget.category === 'critical') {\r\n      if (excessPercent > 50) {return 'critical';}\r\n      if (excessPercent > 25) {return 'high';}\r\n      if (excessPercent > 10) {return 'medium';}\r\n      return 'low';\r\n    }\r\n\r\n    if (budget.category === 'important') {\r\n      if (excessPercent > 75) {return 'high';}\r\n      if (excessPercent > 50) {return 'medium';}\r\n      return 'low';\r\n    }\r\n\r\n    return excessPercent > 100 ? 'medium' : 'low';\r\n  }\r\n\r\n  private generateRecommendation(budget: PerformanceBudget, actual: number): string {\r\n    const excess = actual - budget.threshold;\r\n    const excessKB = Math.round(excess / 1024);\r\n\r\n    const recommendations: Record<string, string> = {\r\n      'First Load JS': `Reducir ${excessKB}KB implementando lazy loading para componentes no cr\xEDticos`,\r\n      'Total Bundle Size': `Optimizar bundles dividiendo en chunks m\xE1s peque\xF1os (${excessKB}KB de exceso)`,\r\n      'CSS Bundle Size': `Eliminar CSS no utilizado y optimizar imports (${excessKB}KB de exceso)`,\r\n      'Image Assets': `Optimizar im\xE1genes con formatos modernos (WebP/AVIF) y compresi\xF3n`,\r\n      'Font Assets': `Usar font-display: swap y preload para fuentes cr\xEDticas`,\r\n      'Chunk Count': `Consolidar chunks peque\xF1os para reducir overhead HTTP`,\r\n      'Duplicate Modules': `Configurar splitChunks para evitar duplicaci\xF3n de m\xF3dulos`\r\n    };\r\n\r\n    return recommendations[budget.name] || `Optimizar ${budget.name} para cumplir con el presupuesto`;\r\n  }\r\n\r\n  private calculatePerformanceScore(violations: BudgetViolation[], metrics: PerformanceMetrics): number {\r\n    let score = 100;\r\n\r\n    for (const violation of violations) {\r\n      const penalty = this.calculatePenalty(violation);\r\n      score -= penalty;\r\n    }\r\n\r\n    // Bonus por m\xE9tricas especialmente buenas\r\n    if (metrics.firstLoadJS < 80 * 1024) {score += 5;} // Bonus por First Load JS < 80KB\r\n    if (metrics.duplicateModules === 0) {score += 3;} // Bonus por no duplicados\r\n    if (metrics.chunkCount <= 8) {score += 2;} // Bonus por chunks optimizados\r\n\r\n    return Math.max(0, Math.min(100, score));\r\n  }\r\n\r\n  private calculatePenalty(violation: BudgetViolation): number {\r\n    const basePenalty = violation.severity === 'error' ? 15 : 8;\r\n    const impactMultiplier = {\r\n      critical: 2.0,\r\n      high: 1.5,\r\n      medium: 1.2,\r\n      low: 1.0\r\n    };\r\n\r\n    return basePenalty * impactMultiplier[violation.impact];\r\n  }\r\n\r\n  private getPerformanceGrade(score: number): 'A' | 'B' | 'C' | 'D' | 'F' {\r\n    if (score >= 90) {return 'A';}\r\n    if (score >= 80) {return 'B';}\r\n    if (score >= 70) {return 'C';}\r\n    if (score >= 60) {return 'D';}\r\n    return 'F';\r\n  }\r\n\r\n  private calculateTrends(currentMetrics: PerformanceMetrics): PerformanceTrend[] {\r\n    if (this.history.length === 0) {return [];}\r\n\r\n    const previousReport = this.history[this.history.length - 1];\r\n    const trends: PerformanceTrend[] = [];\r\n\r\n    const metricKeys: (keyof PerformanceMetrics)[] = [\r\n      'bundleSize', 'firstLoadJS', 'totalJS', 'css', 'chunkCount'\r\n    ];\r\n\r\n    for (const key of metricKeys) {\r\n      const current = currentMetrics[key];\r\n      const previous = previousReport.metrics[key];\r\n      const change = current - previous;\r\n      const changePercent = previous > 0 ? (change / previous) * 100 : 0;\r\n\r\n      let trend: 'improving' | 'degrading' | 'stable' = 'stable';\r\n      if (Math.abs(changePercent) > 5) {\r\n        trend = change < 0 ? 'improving' : 'degrading';\r\n      }\r\n\r\n      trends.push({\r\n        metric: key,\r\n        current,\r\n        previous,\r\n        change,\r\n        changePercent,\r\n        trend\r\n      });\r\n    }\r\n\r\n    return trends;\r\n  }\r\n\r\n  // ===================================\r\n  // GESTI\xD3N DE HISTORIAL\r\n  // ===================================\r\n\r\n  private addToHistory(report: PerformanceReport): void {\r\n    this.history.push(report);\r\n    \r\n    if (this.history.length > this.maxHistorySize) {\r\n      this.history = this.history.slice(-this.maxHistorySize);\r\n    }\r\n  }\r\n\r\n  public getHistory(): PerformanceReport[] {\r\n    return [...this.history];\r\n  }\r\n\r\n  public getLatestReport(): PerformanceReport | null {\r\n    return this.history.length > 0 ? this.history[this.history.length - 1] : null;\r\n  }\r\n\r\n  // ===================================\r\n  // UTILIDADES\r\n  // ===================================\r\n\r\n  private generateBuildId(): string {\r\n    return `build-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\r\n  }\r\n\r\n  public async saveReport(report: PerformanceReport, outputPath?: string): Promise<void> {\r\n    const reportPath = outputPath || path.join(process.cwd(), 'performance-reports');\r\n    \r\n    try {\r\n      await fs.mkdir(reportPath, { recursive: true });\r\n      const filename = `performance-report-${report.buildId}.json`;\r\n      const filepath = path.join(reportPath, filename);\r\n      \r\n      await fs.writeFile(filepath, JSON.stringify(report, null, 2));\r\n      console.log(`Performance report saved to: ${filepath}`);\r\n    } catch (error) {\r\n      console.error('Failed to save performance report:', error);\r\n    }\r\n  }\r\n\r\n  public generateTextReport(report: PerformanceReport): string {\r\n    const { violations, metrics, score, grade, trends } = report;\r\n\r\n    let textReport = `\r\n# Performance Budget Report\r\n**Build ID**: ${report.buildId}\r\n**Timestamp**: ${new Date(report.timestamp).toLocaleString()}\r\n**Score**: ${score}/100 (Grade: ${grade})\r\n\r\n## Metrics Summary\r\n- **Bundle Size**: ${Math.round(metrics.bundleSize / 1024)}KB\r\n- **First Load JS**: ${Math.round(metrics.firstLoadJS / 1024)}KB\r\n- **Total JS**: ${Math.round(metrics.totalJS / 1024)}KB\r\n- **CSS**: ${Math.round(metrics.css / 1024)}KB\r\n- **Chunks**: ${metrics.chunkCount}\r\n- **Duplicate Modules**: ${metrics.duplicateModules}\r\n\r\n## Budget Violations (${violations.length})\r\n`;\r\n\r\n    if (violations.length === 0) {\r\n      textReport += '\u2705 All performance budgets are within limits!\\n';\r\n    } else {\r\n      violations.forEach((violation, i) => {\r\n        const actualFormatted = violation.budget.unit === 'bytes' \r\n          ? `${Math.round(violation.actual / 1024)}KB`\r\n          : `${violation.actual}${violation.budget.unit}`;\r\n        \r\n        const expectedFormatted = violation.budget.unit === 'bytes'\r\n          ? `${Math.round(violation.expected / 1024)}KB`\r\n          : `${violation.expected}${violation.budget.unit}`;\r\n\r\n        textReport += `\r\n${i + 1}. **${violation.budget.name}** (${violation.severity.toUpperCase()})\r\n   - Actual: ${actualFormatted}\r\n   - Expected: \u2264 ${expectedFormatted}\r\n   - Impact: ${violation.impact}\r\n   - Recommendation: ${violation.recommendation}\r\n`;\r\n      });\r\n    }\r\n\r\n    if (trends.length > 0) {\r\n      textReport += '\\n## Trends\\n';\r\n      trends.forEach(trend => {\r\n        const icon = trend.trend === 'improving' ? '\uD83D\uDCC8' : trend.trend === 'degrading' ? '\uD83D\uDCC9' : '\u27A1\uFE0F';\r\n        const changeText = trend.changePercent > 0 ? `+${trend.changePercent.toFixed(1)}%` : `${trend.changePercent.toFixed(1)}%`;\r\n        textReport += `- ${icon} **${trend.metric}**: ${changeText}\\n`;\r\n      });\r\n    }\r\n\r\n    return textReport;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["PerformanceBudgetMonitor", "budgets", "history", "maxHistorySize", "initializeDefaultBudgets", "getInstance", "instance", "name", "type", "threshold", "warning", "unit", "category", "description", "addBudget", "budget", "push", "updateBudget", "updates", "index", "findIndex", "b", "removeBudget", "filter", "getBudgets", "analyzePerformance", "buildPath", "metrics", "collectMetrics", "violations", "checkBudgetViolations", "score", "calculatePerformanceScore", "grade", "getPerformanceGrade", "trends", "calculateTrends", "report", "timestamp", "Date", "toISOString", "buildId", "generateBuildId", "addToHistory", "staticPath", "path", "join", "bundleSize", "firstLoadJS", "totalJS", "css", "images", "fonts", "chunkCount", "duplicateModules", "unusedCode", "error", "console", "warn", "getMockMetrics", "actual", "getMetricValue", "violation", "expected", "severity", "impact", "calculateImpact", "recommendation", "generateRecommendation", "sort", "a", "impactOrder", "critical", "high", "medium", "low", "budgetName", "metricMap", "metricKey", "excess", "excessPercent", "excessKB", "Math", "round", "recommendations", "penalty", "calculatePenalty", "max", "min", "basePenalty", "impactMultiplier", "currentMetrics", "length", "previousReport", "metricKeys", "key", "current", "previous", "change", "changePercent", "trend", "abs", "metric", "slice", "getHistory", "getLatestReport", "now", "random", "toString", "substr", "saveReport", "outputPath", "reportPath", "process", "cwd", "fs", "mkdir", "recursive", "filename", "filepath", "writeFile", "JSON", "stringify", "log", "generateTextReport", "textReport", "toLocaleString", "forEach", "i", "actualFormatted", "expectedFormatted", "toUpperCase", "icon", "changeText", "toFixed"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "253f34a4ad3e89b4d88b04b23eda73faf17fb8fb"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1jw0nw4uk3 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1jw0nw4uk3();
cov_1jw0nw4uk3().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1jw0nw4uk3().s[1]++;
Object.defineProperty(exports, "PerformanceBudgetMonitor", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1jw0nw4uk3().f[0]++;
    cov_1jw0nw4uk3().s[2]++;
    return PerformanceBudgetMonitor;
  }
});
const _fs =
/* istanbul ignore next */
(cov_1jw0nw4uk3().s[3]++, require("fs"));
const _path =
/* istanbul ignore next */
(/*#__PURE__*/cov_1jw0nw4uk3().s[4]++, _interop_require_default(require("path")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_1jw0nw4uk3().f[1]++;
  cov_1jw0nw4uk3().s[5]++;
  return /* istanbul ignore next */(cov_1jw0nw4uk3().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_1jw0nw4uk3().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_1jw0nw4uk3().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_1jw0nw4uk3().b[0][1]++, {
    default: obj
  });
}
class PerformanceBudgetMonitor {
  constructor() {
    /* istanbul ignore next */
    cov_1jw0nw4uk3().f[2]++;
    cov_1jw0nw4uk3().s[6]++;
    this.budgets = [];
    /* istanbul ignore next */
    cov_1jw0nw4uk3().s[7]++;
    this.history = [];
    /* istanbul ignore next */
    cov_1jw0nw4uk3().s[8]++;
    this.maxHistorySize = 50;
    /* istanbul ignore next */
    cov_1jw0nw4uk3().s[9]++;
    this.initializeDefaultBudgets();
  }
  static getInstance() {
    /* istanbul ignore next */
    cov_1jw0nw4uk3().f[3]++;
    cov_1jw0nw4uk3().s[10]++;
    if (!PerformanceBudgetMonitor.instance) {
      /* istanbul ignore next */
      cov_1jw0nw4uk3().b[2][0]++;
      cov_1jw0nw4uk3().s[11]++;
      PerformanceBudgetMonitor.instance = new PerformanceBudgetMonitor();
    } else
    /* istanbul ignore next */
    {
      cov_1jw0nw4uk3().b[2][1]++;
    }
    cov_1jw0nw4uk3().s[12]++;
    return PerformanceBudgetMonitor.instance;
  }
  // ===================================
  // CONFIGURACIÓN DE BUDGETS
  // ===================================
  initializeDefaultBudgets() {
    /* istanbul ignore next */
    cov_1jw0nw4uk3().f[4]++;
    cov_1jw0nw4uk3().s[13]++;
    this.budgets = [
    // Budgets de tamaño críticos
    {
      name: 'First Load JS',
      type: 'size',
      threshold: 128 * 1024,
      warning: 100 * 1024,
      unit: 'bytes',
      category: 'critical',
      description: 'JavaScript crítico que se carga inicialmente'
    }, {
      name: 'Total Bundle Size',
      type: 'size',
      threshold: 500 * 1024,
      warning: 400 * 1024,
      unit: 'bytes',
      category: 'critical',
      description: 'Tamaño total de todos los bundles JavaScript'
    }, {
      name: 'CSS Bundle Size',
      type: 'size',
      threshold: 50 * 1024,
      warning: 40 * 1024,
      unit: 'bytes',
      category: 'important',
      description: 'Tamaño total de archivos CSS'
    }, {
      name: 'Image Assets',
      type: 'size',
      threshold: 200 * 1024,
      warning: 150 * 1024,
      unit: 'bytes',
      category: 'important',
      description: 'Tamaño total de imágenes optimizadas'
    }, {
      name: 'Font Assets',
      type: 'size',
      threshold: 100 * 1024,
      warning: 80 * 1024,
      unit: 'bytes',
      category: 'optional',
      description: 'Tamaño total de archivos de fuentes'
    },
    // Budgets de conteo
    {
      name: 'Chunk Count',
      type: 'count',
      threshold: 20,
      warning: 15,
      unit: 'count',
      category: 'important',
      description: 'Número total de chunks generados'
    }, {
      name: 'Duplicate Modules',
      type: 'count',
      threshold: 5,
      warning: 3,
      unit: 'count',
      category: 'important',
      description: 'Módulos duplicados entre chunks'
    },
    // Budgets de tiempo (para futuras implementaciones)
    {
      name: 'Build Time',
      type: 'time',
      threshold: 60000,
      warning: 45000,
      unit: 'ms',
      category: 'optional',
      description: 'Tiempo total de build'
    }];
  }
  addBudget(budget) {
    /* istanbul ignore next */
    cov_1jw0nw4uk3().f[5]++;
    cov_1jw0nw4uk3().s[14]++;
    this.budgets.push(budget);
  }
  updateBudget(name, updates) {
    /* istanbul ignore next */
    cov_1jw0nw4uk3().f[6]++;
    const index =
    /* istanbul ignore next */
    (cov_1jw0nw4uk3().s[15]++, this.budgets.findIndex(b => {
      /* istanbul ignore next */
      cov_1jw0nw4uk3().f[7]++;
      cov_1jw0nw4uk3().s[16]++;
      return b.name === name;
    }));
    /* istanbul ignore next */
    cov_1jw0nw4uk3().s[17]++;
    if (index !== -1) {
      /* istanbul ignore next */
      cov_1jw0nw4uk3().b[3][0]++;
      cov_1jw0nw4uk3().s[18]++;
      this.budgets[index] = {
        ...this.budgets[index],
        ...updates
      };
    } else
    /* istanbul ignore next */
    {
      cov_1jw0nw4uk3().b[3][1]++;
    }
  }
  removeBudget(name) {
    /* istanbul ignore next */
    cov_1jw0nw4uk3().f[8]++;
    cov_1jw0nw4uk3().s[19]++;
    this.budgets = this.budgets.filter(b => {
      /* istanbul ignore next */
      cov_1jw0nw4uk3().f[9]++;
      cov_1jw0nw4uk3().s[20]++;
      return b.name !== name;
    });
  }
  getBudgets() {
    /* istanbul ignore next */
    cov_1jw0nw4uk3().f[10]++;
    cov_1jw0nw4uk3().s[21]++;
    return [...this.budgets];
  }
  // ===================================
  // ANÁLISIS DE PERFORMANCE
  // ===================================
  async analyzePerformance(buildPath =
  /* istanbul ignore next */
  (cov_1jw0nw4uk3().b[4][0]++, '.next')) {
    /* istanbul ignore next */
    cov_1jw0nw4uk3().f[11]++;
    const metrics =
    /* istanbul ignore next */
    (cov_1jw0nw4uk3().s[22]++, await this.collectMetrics(buildPath));
    const violations =
    /* istanbul ignore next */
    (cov_1jw0nw4uk3().s[23]++, this.checkBudgetViolations(metrics));
    const score =
    /* istanbul ignore next */
    (cov_1jw0nw4uk3().s[24]++, this.calculatePerformanceScore(violations, metrics));
    const grade =
    /* istanbul ignore next */
    (cov_1jw0nw4uk3().s[25]++, this.getPerformanceGrade(score));
    const trends =
    /* istanbul ignore next */
    (cov_1jw0nw4uk3().s[26]++, this.calculateTrends(metrics));
    const report =
    /* istanbul ignore next */
    (cov_1jw0nw4uk3().s[27]++, {
      timestamp: new Date().toISOString(),
      buildId: this.generateBuildId(),
      violations,
      metrics,
      score,
      grade,
      trends
    });
    /* istanbul ignore next */
    cov_1jw0nw4uk3().s[28]++;
    this.addToHistory(report);
    /* istanbul ignore next */
    cov_1jw0nw4uk3().s[29]++;
    return report;
  }
  async collectMetrics(buildPath) {
    /* istanbul ignore next */
    cov_1jw0nw4uk3().f[12]++;
    cov_1jw0nw4uk3().s[30]++;
    try {
      // En una implementación real, esto analizaría los archivos del build
      // Por ahora, simulamos métricas realistas
      const staticPath =
      /* istanbul ignore next */
      (cov_1jw0nw4uk3().s[31]++, _path.default.join(buildPath, 'static'));
      /* istanbul ignore next */
      cov_1jw0nw4uk3().s[32]++;
      return {
        bundleSize: 450 * 1024,
        firstLoadJS: 95 * 1024,
        totalJS: 380 * 1024,
        css: 35 * 1024,
        images: 120 * 1024,
        fonts: 45 * 1024,
        chunkCount: 12,
        duplicateModules: 2,
        unusedCode: 25 * 1024 // 25KB
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1jw0nw4uk3().s[33]++;
      console.warn('Could not collect real metrics, using mock data');
      /* istanbul ignore next */
      cov_1jw0nw4uk3().s[34]++;
      return this.getMockMetrics();
    }
  }
  getMockMetrics() {
    /* istanbul ignore next */
    cov_1jw0nw4uk3().f[13]++;
    cov_1jw0nw4uk3().s[35]++;
    return {
      bundleSize: 420 * 1024,
      firstLoadJS: 88 * 1024,
      totalJS: 350 * 1024,
      css: 32 * 1024,
      images: 110 * 1024,
      fonts: 40 * 1024,
      chunkCount: 10,
      duplicateModules: 1,
      unusedCode: 20 * 1024
    };
  }
  checkBudgetViolations(metrics) {
    /* istanbul ignore next */
    cov_1jw0nw4uk3().f[14]++;
    const violations =
    /* istanbul ignore next */
    (cov_1jw0nw4uk3().s[36]++, []);
    /* istanbul ignore next */
    cov_1jw0nw4uk3().s[37]++;
    for (const budget of this.budgets) {
      const actual =
      /* istanbul ignore next */
      (cov_1jw0nw4uk3().s[38]++, this.getMetricValue(metrics, budget.name));
      /* istanbul ignore next */
      cov_1jw0nw4uk3().s[39]++;
      if (actual === null) {
        /* istanbul ignore next */
        cov_1jw0nw4uk3().b[5][0]++;
        cov_1jw0nw4uk3().s[40]++;
        continue;
      } else
      /* istanbul ignore next */
      {
        cov_1jw0nw4uk3().b[5][1]++;
      }
      let violation =
      /* istanbul ignore next */
      (cov_1jw0nw4uk3().s[41]++, null);
      /* istanbul ignore next */
      cov_1jw0nw4uk3().s[42]++;
      if (actual > budget.threshold) {
        /* istanbul ignore next */
        cov_1jw0nw4uk3().b[6][0]++;
        cov_1jw0nw4uk3().s[43]++;
        violation = {
          budget,
          actual,
          expected: budget.threshold,
          severity: 'error',
          impact: this.calculateImpact(budget, actual),
          recommendation: this.generateRecommendation(budget, actual)
        };
      } else {
        /* istanbul ignore next */
        cov_1jw0nw4uk3().b[6][1]++;
        cov_1jw0nw4uk3().s[44]++;
        if (actual > budget.warning) {
          /* istanbul ignore next */
          cov_1jw0nw4uk3().b[7][0]++;
          cov_1jw0nw4uk3().s[45]++;
          violation = {
            budget,
            actual,
            expected: budget.warning,
            severity: 'warning',
            impact: this.calculateImpact(budget, actual),
            recommendation: this.generateRecommendation(budget, actual)
          };
        } else
        /* istanbul ignore next */
        {
          cov_1jw0nw4uk3().b[7][1]++;
        }
      }
      /* istanbul ignore next */
      cov_1jw0nw4uk3().s[46]++;
      if (violation) {
        /* istanbul ignore next */
        cov_1jw0nw4uk3().b[8][0]++;
        cov_1jw0nw4uk3().s[47]++;
        violations.push(violation);
      } else
      /* istanbul ignore next */
      {
        cov_1jw0nw4uk3().b[8][1]++;
      }
    }
    /* istanbul ignore next */
    cov_1jw0nw4uk3().s[48]++;
    return violations.sort((a, b) => {
      /* istanbul ignore next */
      cov_1jw0nw4uk3().f[15]++;
      const impactOrder =
      /* istanbul ignore next */
      (cov_1jw0nw4uk3().s[49]++, {
        critical: 4,
        high: 3,
        medium: 2,
        low: 1
      });
      /* istanbul ignore next */
      cov_1jw0nw4uk3().s[50]++;
      return impactOrder[b.impact] - impactOrder[a.impact];
    });
  }
  getMetricValue(metrics, budgetName) {
    /* istanbul ignore next */
    cov_1jw0nw4uk3().f[16]++;
    const metricMap =
    /* istanbul ignore next */
    (cov_1jw0nw4uk3().s[51]++, {
      'First Load JS': 'firstLoadJS',
      'Total Bundle Size': 'bundleSize',
      'CSS Bundle Size': 'css',
      'Image Assets': 'images',
      'Font Assets': 'fonts',
      'Chunk Count': 'chunkCount',
      'Duplicate Modules': 'duplicateModules'
    });
    const metricKey =
    /* istanbul ignore next */
    (cov_1jw0nw4uk3().s[52]++, metricMap[budgetName]);
    /* istanbul ignore next */
    cov_1jw0nw4uk3().s[53]++;
    return metricKey ?
    /* istanbul ignore next */
    (cov_1jw0nw4uk3().b[9][0]++, metrics[metricKey]) :
    /* istanbul ignore next */
    (cov_1jw0nw4uk3().b[9][1]++, null);
  }
  calculateImpact(budget, actual) {
    /* istanbul ignore next */
    cov_1jw0nw4uk3().f[17]++;
    const excess =
    /* istanbul ignore next */
    (cov_1jw0nw4uk3().s[54]++, actual - budget.threshold);
    const excessPercent =
    /* istanbul ignore next */
    (cov_1jw0nw4uk3().s[55]++, excess / budget.threshold * 100);
    /* istanbul ignore next */
    cov_1jw0nw4uk3().s[56]++;
    if (budget.category === 'critical') {
      /* istanbul ignore next */
      cov_1jw0nw4uk3().b[10][0]++;
      cov_1jw0nw4uk3().s[57]++;
      if (excessPercent > 50) {
        /* istanbul ignore next */
        cov_1jw0nw4uk3().b[11][0]++;
        cov_1jw0nw4uk3().s[58]++;
        return 'critical';
      } else
      /* istanbul ignore next */
      {
        cov_1jw0nw4uk3().b[11][1]++;
      }
      cov_1jw0nw4uk3().s[59]++;
      if (excessPercent > 25) {
        /* istanbul ignore next */
        cov_1jw0nw4uk3().b[12][0]++;
        cov_1jw0nw4uk3().s[60]++;
        return 'high';
      } else
      /* istanbul ignore next */
      {
        cov_1jw0nw4uk3().b[12][1]++;
      }
      cov_1jw0nw4uk3().s[61]++;
      if (excessPercent > 10) {
        /* istanbul ignore next */
        cov_1jw0nw4uk3().b[13][0]++;
        cov_1jw0nw4uk3().s[62]++;
        return 'medium';
      } else
      /* istanbul ignore next */
      {
        cov_1jw0nw4uk3().b[13][1]++;
      }
      cov_1jw0nw4uk3().s[63]++;
      return 'low';
    } else
    /* istanbul ignore next */
    {
      cov_1jw0nw4uk3().b[10][1]++;
    }
    cov_1jw0nw4uk3().s[64]++;
    if (budget.category === 'important') {
      /* istanbul ignore next */
      cov_1jw0nw4uk3().b[14][0]++;
      cov_1jw0nw4uk3().s[65]++;
      if (excessPercent > 75) {
        /* istanbul ignore next */
        cov_1jw0nw4uk3().b[15][0]++;
        cov_1jw0nw4uk3().s[66]++;
        return 'high';
      } else
      /* istanbul ignore next */
      {
        cov_1jw0nw4uk3().b[15][1]++;
      }
      cov_1jw0nw4uk3().s[67]++;
      if (excessPercent > 50) {
        /* istanbul ignore next */
        cov_1jw0nw4uk3().b[16][0]++;
        cov_1jw0nw4uk3().s[68]++;
        return 'medium';
      } else
      /* istanbul ignore next */
      {
        cov_1jw0nw4uk3().b[16][1]++;
      }
      cov_1jw0nw4uk3().s[69]++;
      return 'low';
    } else
    /* istanbul ignore next */
    {
      cov_1jw0nw4uk3().b[14][1]++;
    }
    cov_1jw0nw4uk3().s[70]++;
    return excessPercent > 100 ?
    /* istanbul ignore next */
    (cov_1jw0nw4uk3().b[17][0]++, 'medium') :
    /* istanbul ignore next */
    (cov_1jw0nw4uk3().b[17][1]++, 'low');
  }
  generateRecommendation(budget, actual) {
    /* istanbul ignore next */
    cov_1jw0nw4uk3().f[18]++;
    const excess =
    /* istanbul ignore next */
    (cov_1jw0nw4uk3().s[71]++, actual - budget.threshold);
    const excessKB =
    /* istanbul ignore next */
    (cov_1jw0nw4uk3().s[72]++, Math.round(excess / 1024));
    const recommendations =
    /* istanbul ignore next */
    (cov_1jw0nw4uk3().s[73]++, {
      'First Load JS': `Reducir ${excessKB}KB implementando lazy loading para componentes no críticos`,
      'Total Bundle Size': `Optimizar bundles dividiendo en chunks más pequeños (${excessKB}KB de exceso)`,
      'CSS Bundle Size': `Eliminar CSS no utilizado y optimizar imports (${excessKB}KB de exceso)`,
      'Image Assets': `Optimizar imágenes con formatos modernos (WebP/AVIF) y compresión`,
      'Font Assets': `Usar font-display: swap y preload para fuentes críticas`,
      'Chunk Count': `Consolidar chunks pequeños para reducir overhead HTTP`,
      'Duplicate Modules': `Configurar splitChunks para evitar duplicación de módulos`
    });
    /* istanbul ignore next */
    cov_1jw0nw4uk3().s[74]++;
    return /* istanbul ignore next */(cov_1jw0nw4uk3().b[18][0]++, recommendations[budget.name]) ||
    /* istanbul ignore next */
    (cov_1jw0nw4uk3().b[18][1]++, `Optimizar ${budget.name} para cumplir con el presupuesto`);
  }
  calculatePerformanceScore(violations, metrics) {
    /* istanbul ignore next */
    cov_1jw0nw4uk3().f[19]++;
    let score =
    /* istanbul ignore next */
    (cov_1jw0nw4uk3().s[75]++, 100);
    /* istanbul ignore next */
    cov_1jw0nw4uk3().s[76]++;
    for (const violation of violations) {
      const penalty =
      /* istanbul ignore next */
      (cov_1jw0nw4uk3().s[77]++, this.calculatePenalty(violation));
      /* istanbul ignore next */
      cov_1jw0nw4uk3().s[78]++;
      score -= penalty;
    }
    // Bonus por métricas especialmente buenas
    /* istanbul ignore next */
    cov_1jw0nw4uk3().s[79]++;
    if (metrics.firstLoadJS < 80 * 1024) {
      /* istanbul ignore next */
      cov_1jw0nw4uk3().b[19][0]++;
      cov_1jw0nw4uk3().s[80]++;
      score += 5;
    } else
    /* istanbul ignore next */
    {
      cov_1jw0nw4uk3().b[19][1]++;
    } // Bonus por First Load JS < 80KB
    cov_1jw0nw4uk3().s[81]++;
    if (metrics.duplicateModules === 0) {
      /* istanbul ignore next */
      cov_1jw0nw4uk3().b[20][0]++;
      cov_1jw0nw4uk3().s[82]++;
      score += 3;
    } else
    /* istanbul ignore next */
    {
      cov_1jw0nw4uk3().b[20][1]++;
    } // Bonus por no duplicados
    cov_1jw0nw4uk3().s[83]++;
    if (metrics.chunkCount <= 8) {
      /* istanbul ignore next */
      cov_1jw0nw4uk3().b[21][0]++;
      cov_1jw0nw4uk3().s[84]++;
      score += 2;
    } else
    /* istanbul ignore next */
    {
      cov_1jw0nw4uk3().b[21][1]++;
    } // Bonus por chunks optimizados
    cov_1jw0nw4uk3().s[85]++;
    return Math.max(0, Math.min(100, score));
  }
  calculatePenalty(violation) {
    /* istanbul ignore next */
    cov_1jw0nw4uk3().f[20]++;
    const basePenalty =
    /* istanbul ignore next */
    (cov_1jw0nw4uk3().s[86]++, violation.severity === 'error' ?
    /* istanbul ignore next */
    (cov_1jw0nw4uk3().b[22][0]++, 15) :
    /* istanbul ignore next */
    (cov_1jw0nw4uk3().b[22][1]++, 8));
    const impactMultiplier =
    /* istanbul ignore next */
    (cov_1jw0nw4uk3().s[87]++, {
      critical: 2.0,
      high: 1.5,
      medium: 1.2,
      low: 1.0
    });
    /* istanbul ignore next */
    cov_1jw0nw4uk3().s[88]++;
    return basePenalty * impactMultiplier[violation.impact];
  }
  getPerformanceGrade(score) {
    /* istanbul ignore next */
    cov_1jw0nw4uk3().f[21]++;
    cov_1jw0nw4uk3().s[89]++;
    if (score >= 90) {
      /* istanbul ignore next */
      cov_1jw0nw4uk3().b[23][0]++;
      cov_1jw0nw4uk3().s[90]++;
      return 'A';
    } else
    /* istanbul ignore next */
    {
      cov_1jw0nw4uk3().b[23][1]++;
    }
    cov_1jw0nw4uk3().s[91]++;
    if (score >= 80) {
      /* istanbul ignore next */
      cov_1jw0nw4uk3().b[24][0]++;
      cov_1jw0nw4uk3().s[92]++;
      return 'B';
    } else
    /* istanbul ignore next */
    {
      cov_1jw0nw4uk3().b[24][1]++;
    }
    cov_1jw0nw4uk3().s[93]++;
    if (score >= 70) {
      /* istanbul ignore next */
      cov_1jw0nw4uk3().b[25][0]++;
      cov_1jw0nw4uk3().s[94]++;
      return 'C';
    } else
    /* istanbul ignore next */
    {
      cov_1jw0nw4uk3().b[25][1]++;
    }
    cov_1jw0nw4uk3().s[95]++;
    if (score >= 60) {
      /* istanbul ignore next */
      cov_1jw0nw4uk3().b[26][0]++;
      cov_1jw0nw4uk3().s[96]++;
      return 'D';
    } else
    /* istanbul ignore next */
    {
      cov_1jw0nw4uk3().b[26][1]++;
    }
    cov_1jw0nw4uk3().s[97]++;
    return 'F';
  }
  calculateTrends(currentMetrics) {
    /* istanbul ignore next */
    cov_1jw0nw4uk3().f[22]++;
    cov_1jw0nw4uk3().s[98]++;
    if (this.history.length === 0) {
      /* istanbul ignore next */
      cov_1jw0nw4uk3().b[27][0]++;
      cov_1jw0nw4uk3().s[99]++;
      return [];
    } else
    /* istanbul ignore next */
    {
      cov_1jw0nw4uk3().b[27][1]++;
    }
    const previousReport =
    /* istanbul ignore next */
    (cov_1jw0nw4uk3().s[100]++, this.history[this.history.length - 1]);
    const trends =
    /* istanbul ignore next */
    (cov_1jw0nw4uk3().s[101]++, []);
    const metricKeys =
    /* istanbul ignore next */
    (cov_1jw0nw4uk3().s[102]++, ['bundleSize', 'firstLoadJS', 'totalJS', 'css', 'chunkCount']);
    /* istanbul ignore next */
    cov_1jw0nw4uk3().s[103]++;
    for (const key of metricKeys) {
      const current =
      /* istanbul ignore next */
      (cov_1jw0nw4uk3().s[104]++, currentMetrics[key]);
      const previous =
      /* istanbul ignore next */
      (cov_1jw0nw4uk3().s[105]++, previousReport.metrics[key]);
      const change =
      /* istanbul ignore next */
      (cov_1jw0nw4uk3().s[106]++, current - previous);
      const changePercent =
      /* istanbul ignore next */
      (cov_1jw0nw4uk3().s[107]++, previous > 0 ?
      /* istanbul ignore next */
      (cov_1jw0nw4uk3().b[28][0]++, change / previous * 100) :
      /* istanbul ignore next */
      (cov_1jw0nw4uk3().b[28][1]++, 0));
      let trend =
      /* istanbul ignore next */
      (cov_1jw0nw4uk3().s[108]++, 'stable');
      /* istanbul ignore next */
      cov_1jw0nw4uk3().s[109]++;
      if (Math.abs(changePercent) > 5) {
        /* istanbul ignore next */
        cov_1jw0nw4uk3().b[29][0]++;
        cov_1jw0nw4uk3().s[110]++;
        trend = change < 0 ?
        /* istanbul ignore next */
        (cov_1jw0nw4uk3().b[30][0]++, 'improving') :
        /* istanbul ignore next */
        (cov_1jw0nw4uk3().b[30][1]++, 'degrading');
      } else
      /* istanbul ignore next */
      {
        cov_1jw0nw4uk3().b[29][1]++;
      }
      cov_1jw0nw4uk3().s[111]++;
      trends.push({
        metric: key,
        current,
        previous,
        change,
        changePercent,
        trend
      });
    }
    /* istanbul ignore next */
    cov_1jw0nw4uk3().s[112]++;
    return trends;
  }
  // ===================================
  // GESTIÓN DE HISTORIAL
  // ===================================
  addToHistory(report) {
    /* istanbul ignore next */
    cov_1jw0nw4uk3().f[23]++;
    cov_1jw0nw4uk3().s[113]++;
    this.history.push(report);
    /* istanbul ignore next */
    cov_1jw0nw4uk3().s[114]++;
    if (this.history.length > this.maxHistorySize) {
      /* istanbul ignore next */
      cov_1jw0nw4uk3().b[31][0]++;
      cov_1jw0nw4uk3().s[115]++;
      this.history = this.history.slice(-this.maxHistorySize);
    } else
    /* istanbul ignore next */
    {
      cov_1jw0nw4uk3().b[31][1]++;
    }
  }
  getHistory() {
    /* istanbul ignore next */
    cov_1jw0nw4uk3().f[24]++;
    cov_1jw0nw4uk3().s[116]++;
    return [...this.history];
  }
  getLatestReport() {
    /* istanbul ignore next */
    cov_1jw0nw4uk3().f[25]++;
    cov_1jw0nw4uk3().s[117]++;
    return this.history.length > 0 ?
    /* istanbul ignore next */
    (cov_1jw0nw4uk3().b[32][0]++, this.history[this.history.length - 1]) :
    /* istanbul ignore next */
    (cov_1jw0nw4uk3().b[32][1]++, null);
  }
  // ===================================
  // UTILIDADES
  // ===================================
  generateBuildId() {
    /* istanbul ignore next */
    cov_1jw0nw4uk3().f[26]++;
    cov_1jw0nw4uk3().s[118]++;
    return `build-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;
  }
  async saveReport(report, outputPath) {
    /* istanbul ignore next */
    cov_1jw0nw4uk3().f[27]++;
    const reportPath =
    /* istanbul ignore next */
    (cov_1jw0nw4uk3().s[119]++,
    /* istanbul ignore next */
    (cov_1jw0nw4uk3().b[33][0]++, outputPath) ||
    /* istanbul ignore next */
    (cov_1jw0nw4uk3().b[33][1]++, _path.default.join(process.cwd(), 'performance-reports')));
    /* istanbul ignore next */
    cov_1jw0nw4uk3().s[120]++;
    try {
      /* istanbul ignore next */
      cov_1jw0nw4uk3().s[121]++;
      await _fs.promises.mkdir(reportPath, {
        recursive: true
      });
      const filename =
      /* istanbul ignore next */
      (cov_1jw0nw4uk3().s[122]++, `performance-report-${report.buildId}.json`);
      const filepath =
      /* istanbul ignore next */
      (cov_1jw0nw4uk3().s[123]++, _path.default.join(reportPath, filename));
      /* istanbul ignore next */
      cov_1jw0nw4uk3().s[124]++;
      await _fs.promises.writeFile(filepath, JSON.stringify(report, null, 2));
      /* istanbul ignore next */
      cov_1jw0nw4uk3().s[125]++;
      console.log(`Performance report saved to: ${filepath}`);
    } catch (error) {
      /* istanbul ignore next */
      cov_1jw0nw4uk3().s[126]++;
      console.error('Failed to save performance report:', error);
    }
  }
  generateTextReport(report) {
    /* istanbul ignore next */
    cov_1jw0nw4uk3().f[28]++;
    const {
      violations,
      metrics,
      score,
      grade,
      trends
    } =
    /* istanbul ignore next */
    (cov_1jw0nw4uk3().s[127]++, report);
    let textReport =
    /* istanbul ignore next */
    (cov_1jw0nw4uk3().s[128]++, `
# Performance Budget Report
**Build ID**: ${report.buildId}
**Timestamp**: ${new Date(report.timestamp).toLocaleString()}
**Score**: ${score}/100 (Grade: ${grade})

## Metrics Summary
- **Bundle Size**: ${Math.round(metrics.bundleSize / 1024)}KB
- **First Load JS**: ${Math.round(metrics.firstLoadJS / 1024)}KB
- **Total JS**: ${Math.round(metrics.totalJS / 1024)}KB
- **CSS**: ${Math.round(metrics.css / 1024)}KB
- **Chunks**: ${metrics.chunkCount}
- **Duplicate Modules**: ${metrics.duplicateModules}

## Budget Violations (${violations.length})
`);
    /* istanbul ignore next */
    cov_1jw0nw4uk3().s[129]++;
    if (violations.length === 0) {
      /* istanbul ignore next */
      cov_1jw0nw4uk3().b[34][0]++;
      cov_1jw0nw4uk3().s[130]++;
      textReport += '✅ All performance budgets are within limits!\n';
    } else {
      /* istanbul ignore next */
      cov_1jw0nw4uk3().b[34][1]++;
      cov_1jw0nw4uk3().s[131]++;
      violations.forEach((violation, i) => {
        /* istanbul ignore next */
        cov_1jw0nw4uk3().f[29]++;
        const actualFormatted =
        /* istanbul ignore next */
        (cov_1jw0nw4uk3().s[132]++, violation.budget.unit === 'bytes' ?
        /* istanbul ignore next */
        (cov_1jw0nw4uk3().b[35][0]++, `${Math.round(violation.actual / 1024)}KB`) :
        /* istanbul ignore next */
        (cov_1jw0nw4uk3().b[35][1]++, `${violation.actual}${violation.budget.unit}`));
        const expectedFormatted =
        /* istanbul ignore next */
        (cov_1jw0nw4uk3().s[133]++, violation.budget.unit === 'bytes' ?
        /* istanbul ignore next */
        (cov_1jw0nw4uk3().b[36][0]++, `${Math.round(violation.expected / 1024)}KB`) :
        /* istanbul ignore next */
        (cov_1jw0nw4uk3().b[36][1]++, `${violation.expected}${violation.budget.unit}`));
        /* istanbul ignore next */
        cov_1jw0nw4uk3().s[134]++;
        textReport += `
${i + 1}. **${violation.budget.name}** (${violation.severity.toUpperCase()})
   - Actual: ${actualFormatted}
   - Expected: ≤ ${expectedFormatted}
   - Impact: ${violation.impact}
   - Recommendation: ${violation.recommendation}
`;
      });
    }
    /* istanbul ignore next */
    cov_1jw0nw4uk3().s[135]++;
    if (trends.length > 0) {
      /* istanbul ignore next */
      cov_1jw0nw4uk3().b[37][0]++;
      cov_1jw0nw4uk3().s[136]++;
      textReport += '\n## Trends\n';
      /* istanbul ignore next */
      cov_1jw0nw4uk3().s[137]++;
      trends.forEach(trend => {
        /* istanbul ignore next */
        cov_1jw0nw4uk3().f[30]++;
        const icon =
        /* istanbul ignore next */
        (cov_1jw0nw4uk3().s[138]++, trend.trend === 'improving' ?
        /* istanbul ignore next */
        (cov_1jw0nw4uk3().b[38][0]++, '📈') :
        /* istanbul ignore next */
        (cov_1jw0nw4uk3().b[38][1]++, trend.trend === 'degrading' ?
        /* istanbul ignore next */
        (cov_1jw0nw4uk3().b[39][0]++, '📉') :
        /* istanbul ignore next */
        (cov_1jw0nw4uk3().b[39][1]++, '➡️')));
        const changeText =
        /* istanbul ignore next */
        (cov_1jw0nw4uk3().s[139]++, trend.changePercent > 0 ?
        /* istanbul ignore next */
        (cov_1jw0nw4uk3().b[40][0]++, `+${trend.changePercent.toFixed(1)}%`) :
        /* istanbul ignore next */
        (cov_1jw0nw4uk3().b[40][1]++, `${trend.changePercent.toFixed(1)}%`));
        /* istanbul ignore next */
        cov_1jw0nw4uk3().s[140]++;
        textReport += `- ${icon} **${trend.metric}**: ${changeText}\n`;
      });
    } else
    /* istanbul ignore next */
    {
      cov_1jw0nw4uk3().b[37][1]++;
    }
    cov_1jw0nw4uk3().s[141]++;
    return textReport;
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,