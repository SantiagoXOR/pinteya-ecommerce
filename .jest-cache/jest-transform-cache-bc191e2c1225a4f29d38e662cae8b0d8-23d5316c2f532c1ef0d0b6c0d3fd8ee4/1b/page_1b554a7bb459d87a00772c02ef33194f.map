{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\admin\\seo\\page.tsx"],"sourcesContent":["'use client';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - SEO ADMINISTRATIVE DASHBOARD\r\n// Dashboard principal para gestión completa de SEO\r\n// ===================================\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { AdminLayout } from '@/components/admin/layout/AdminLayout';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport { Progress } from '@/components/ui/progress';\r\nimport { Alert, AlertDescription } from '@/components/ui/alert';\r\nimport {\r\n  Search,\r\n  TrendingUp,\r\n  TrendingDown,\r\n  AlertTriangle,\r\n  CheckCircle,\r\n  BarChart3,\r\n  Globe,\r\n  Zap,\r\n  Settings,\r\n  RefreshCw,\r\n  Download,\r\n  Eye,\r\n  Target,\r\n  Activity,\r\n  Clock,\r\n  Users,\r\n  MousePointer\r\n} from 'lucide-react';\r\nimport Link from 'next/link';\r\n\r\n// ===================================\r\n// INTERFACES\r\n// ===================================\r\n\r\ninterface SEOOverviewData {\r\n  overallScore: number;\r\n  organicTraffic: number;\r\n  averagePosition: number;\r\n  indexationRate: number;\r\n  coreWebVitalsScore: string;\r\n  unresolvedAlerts: number;\r\n  lastUpdated: Date;\r\n}\r\n\r\ninterface SEOMetricCard {\r\n  title: string;\r\n  value: string | number;\r\n  change?: number;\r\n  trend?: 'up' | 'down' | 'stable';\r\n  icon: React.ReactNode;\r\n  color: string;\r\n  description?: string;\r\n}\r\n\r\ninterface SEOAlert {\r\n  id: string;\r\n  type: 'critical' | 'warning' | 'info';\r\n  title: string;\r\n  description: string;\r\n  url?: string;\r\n  timestamp: Date;\r\n}\r\n\r\n// ===================================\r\n// COMPONENTE PRINCIPAL\r\n// ===================================\r\n\r\nexport default function SEOAdminDashboard() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [overview, setOverview] = useState<SEOOverviewData | null>(null);\r\n  const [alerts, setAlerts] = useState<SEOAlert[]>([]);\r\n  const [activeTab, setActiveTab] = useState('overview');\r\n\r\n  // ===================================\r\n  // EFECTOS\r\n  // ===================================\r\n\r\n  useEffect(() => {\r\n    loadDashboardData();\r\n  }, []);\r\n\r\n  // ===================================\r\n  // FUNCIONES\r\n  // ===================================\r\n\r\n  const loadDashboardData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Simular carga de datos (en producción vendría de las APIs)\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      const mockOverview: SEOOverviewData = {\r\n        overallScore: 87,\r\n        organicTraffic: 12450,\r\n        averagePosition: 3.2,\r\n        indexationRate: 94.5,\r\n        coreWebVitalsScore: 'good',\r\n        unresolvedAlerts: 3,\r\n        lastUpdated: new Date()\r\n      };\r\n\r\n      const mockAlerts: SEOAlert[] = [\r\n        {\r\n          id: '1',\r\n          type: 'warning',\r\n          title: 'Meta descriptions faltantes',\r\n          description: '5 páginas no tienen meta description',\r\n          url: '/admin/seo/metadata',\r\n          timestamp: new Date()\r\n        },\r\n        {\r\n          id: '2',\r\n          type: 'critical',\r\n          title: 'Structured data inválido',\r\n          description: 'Error en schema de productos',\r\n          url: '/admin/seo/schema',\r\n          timestamp: new Date()\r\n        },\r\n        {\r\n          id: '3',\r\n          type: 'info',\r\n          title: 'Sitemap actualizado',\r\n          description: 'Se agregaron 15 nuevas URLs',\r\n          timestamp: new Date()\r\n        }\r\n      ];\r\n\r\n      setOverview(mockOverview);\r\n      setAlerts(mockAlerts);\r\n    } catch (error) {\r\n      console.error('Error loading SEO dashboard data:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const refreshData = async () => {\r\n    setRefreshing(true);\r\n    await loadDashboardData();\r\n    setRefreshing(false);\r\n  };\r\n\r\n  const getScoreColor = (score: number) => {\r\n    if (score >= 80) {return 'text-green-600';}\r\n    if (score >= 60) {return 'text-yellow-600';}\r\n    return 'text-red-600';\r\n  };\r\n\r\n  const getScoreBadgeColor = (score: number) => {\r\n    if (score >= 80) {return 'bg-green-100 text-green-800';}\r\n    if (score >= 60) {return 'bg-yellow-100 text-yellow-800';}\r\n    return 'bg-red-100 text-red-800';\r\n  };\r\n\r\n  const getAlertIcon = (type: SEOAlert['type']) => {\r\n    switch (type) {\r\n      case 'critical':\r\n        return <AlertTriangle className=\"h-4 w-4 text-red-500\" />;\r\n      case 'warning':\r\n        return <AlertTriangle className=\"h-4 w-4 text-yellow-500\" />;\r\n      case 'info':\r\n        return <CheckCircle className=\"h-4 w-4 text-blue-500\" />;\r\n    }\r\n  };\r\n\r\n  // ===================================\r\n  // MÉTRICAS PRINCIPALES\r\n  // ===================================\r\n\r\n  const getMainMetrics = (): SEOMetricCard[] => {\r\n    if (!overview) {return [];}\r\n\r\n    return [\r\n      {\r\n        title: 'SEO Score General',\r\n        value: overview.overallScore,\r\n        change: 5,\r\n        trend: 'up',\r\n        icon: <Target className=\"h-5 w-5\" />,\r\n        color: 'text-blue-600',\r\n        description: 'Puntuación general de SEO'\r\n      },\r\n      {\r\n        title: 'Tráfico Orgánico',\r\n        value: overview.organicTraffic.toLocaleString(),\r\n        change: 12,\r\n        trend: 'up',\r\n        icon: <Users className=\"h-5 w-5\" />,\r\n        color: 'text-green-600',\r\n        description: 'Visitantes desde búsquedas'\r\n      },\r\n      {\r\n        title: 'Posición Promedio',\r\n        value: overview.averagePosition.toFixed(1),\r\n        change: -0.3,\r\n        trend: 'up',\r\n        icon: <TrendingUp className=\"h-5 w-5\" />,\r\n        color: 'text-purple-600',\r\n        description: 'Posición promedio en SERPs'\r\n      },\r\n      {\r\n        title: 'Indexación',\r\n        value: `${overview.indexationRate}%`,\r\n        change: 2,\r\n        trend: 'up',\r\n        icon: <Globe className=\"h-5 w-5\" />,\r\n        color: 'text-indigo-600',\r\n        description: 'Páginas indexadas por Google'\r\n      },\r\n      {\r\n        title: 'Core Web Vitals',\r\n        value: overview.coreWebVitalsScore,\r\n        icon: <Zap className=\"h-5 w-5\" />,\r\n        color: overview.coreWebVitalsScore === 'good' ? 'text-green-600' : 'text-yellow-600',\r\n        description: 'Estado de métricas de rendimiento'\r\n      },\r\n      {\r\n        title: 'Alertas Activas',\r\n        value: overview.unresolvedAlerts,\r\n        icon: <AlertTriangle className=\"h-5 w-5\" />,\r\n        color: overview.unresolvedAlerts > 0 ? 'text-red-600' : 'text-green-600',\r\n        description: 'Issues que requieren atención'\r\n      }\r\n    ];\r\n  };\r\n\r\n  // ===================================\r\n  // SECCIONES RÁPIDAS\r\n  // ===================================\r\n\r\n  const quickActions = [\r\n    {\r\n      title: 'Analytics SEO',\r\n      description: 'Métricas detalladas y reportes',\r\n      href: '/admin/seo/analytics',\r\n      icon: <BarChart3 className=\"h-6 w-6\" />,\r\n      color: 'bg-blue-500',\r\n      badge: 'Enterprise'\r\n    },\r\n    {\r\n      title: 'Testing Suite',\r\n      description: 'Tests automatizados de SEO',\r\n      href: '/admin/seo/testing',\r\n      icon: <CheckCircle className=\"h-6 w-6\" />,\r\n      color: 'bg-green-500',\r\n      badge: 'New'\r\n    },\r\n    {\r\n      title: 'Optimization Tools',\r\n      description: 'Herramientas de optimización',\r\n      href: '/admin/seo/optimization',\r\n      icon: <Zap className=\"h-6 w-6\" />,\r\n      color: 'bg-purple-500'\r\n    },\r\n    {\r\n      title: 'Sitemap Manager',\r\n      description: 'Gestión de sitemaps XML',\r\n      href: '/admin/seo/sitemap',\r\n      icon: <Globe className=\"h-6 w-6\" />,\r\n      color: 'bg-indigo-500'\r\n    },\r\n    {\r\n      title: 'Schema Markup',\r\n      description: 'Structured data y validación',\r\n      href: '/admin/seo/schema',\r\n      icon: <Activity className=\"h-6 w-6\" />,\r\n      color: 'bg-orange-500'\r\n    },\r\n    {\r\n      title: 'Configuración',\r\n      description: 'Settings y configuración SEO',\r\n      href: '/admin/seo/settings',\r\n      icon: <Settings className=\"h-6 w-6\" />,\r\n      color: 'bg-gray-500'\r\n    }\r\n  ];\r\n\r\n  // ===================================\r\n  // RENDER\r\n  // ===================================\r\n\r\n  if (loading) {\r\n    return (\r\n      <AdminLayout title=\"SEO Dashboard\" breadcrumbs={[{ label: 'Admin', href: '/admin' }, { label: 'SEO Dashboard' }]}>\r\n        <div className=\"space-y-6\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n            {[...Array(6)].map((_, i) => (\r\n              <Card key={i} className=\"animate-pulse\">\r\n                <CardHeader className=\"space-y-2\">\r\n                  <div className=\"h-4 bg-gray-200 rounded w-3/4\"></div>\r\n                  <div className=\"h-8 bg-gray-200 rounded w-1/2\"></div>\r\n                </CardHeader>\r\n              </Card>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </AdminLayout>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <AdminLayout \r\n      title=\"SEO Dashboard\" \r\n      breadcrumbs={[{ label: 'Admin', href: '/admin' }, { label: 'SEO Dashboard' }]}\r\n      actions={\r\n        <div className=\"flex gap-2\">\r\n          <Button \r\n            variant=\"outline\" \r\n            size=\"sm\" \r\n            onClick={refreshData}\r\n            disabled={refreshing}\r\n          >\r\n            <RefreshCw className={`h-4 w-4 mr-2 ${refreshing ? 'animate-spin' : ''}`} />\r\n            Actualizar\r\n          </Button>\r\n          <Button size=\"sm\">\r\n            <Download className=\"h-4 w-4 mr-2\" />\r\n            Exportar Reporte\r\n          </Button>\r\n        </div>\r\n      }\r\n    >\r\n      <div className=\"space-y-6\">\r\n        {/* Header con Score General */}\r\n        {overview && (\r\n          <Card className=\"border-l-4 border-l-blue-500\">\r\n            <CardHeader>\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <CardTitle className=\"text-2xl\">SEO Score General</CardTitle>\r\n                  <CardDescription>\r\n                    Última actualización: {overview.lastUpdated.toLocaleString()}\r\n                  </CardDescription>\r\n                </div>\r\n                <div className=\"text-right\">\r\n                  <div className={`text-4xl font-bold ${getScoreColor(overview.overallScore)}`}>\r\n                    {overview.overallScore}/100\r\n                  </div>\r\n                  <Badge className={getScoreBadgeColor(overview.overallScore)}>\r\n                    {overview.overallScore >= 80 ? 'Excelente' : overview.overallScore >= 60 ? 'Bueno' : 'Necesita Mejoras'}\r\n                  </Badge>\r\n                </div>\r\n              </div>\r\n              <Progress value={overview.overallScore} className=\"mt-4\" />\r\n            </CardHeader>\r\n          </Card>\r\n        )}\r\n\r\n        {/* Métricas Principales */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n          {getMainMetrics().map((metric, index) => (\r\n            <Card key={index} className=\"hover:shadow-md transition-shadow\">\r\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium text-gray-600\">\r\n                  {metric.title}\r\n                </CardTitle>\r\n                <div className={metric.color}>\r\n                  {metric.icon}\r\n                </div>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div className=\"text-2xl font-bold\">\r\n                    {metric.value}\r\n                  </div>\r\n                  {metric.change !== undefined && (\r\n                    <div className={`flex items-center text-sm ${\r\n                      metric.trend === 'up' ? 'text-green-600' : \r\n                      metric.trend === 'down' ? 'text-red-600' : 'text-gray-600'\r\n                    }`}>\r\n                      {metric.trend === 'up' ? (\r\n                        <TrendingUp className=\"h-4 w-4 mr-1\" />\r\n                      ) : metric.trend === 'down' ? (\r\n                        <TrendingDown className=\"h-4 w-4 mr-1\" />\r\n                      ) : null}\r\n                      {Math.abs(metric.change)}%\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                {metric.description && (\r\n                  <p className=\"text-xs text-gray-500 mt-1\">\r\n                    {metric.description}\r\n                  </p>\r\n                )}\r\n              </CardContent>\r\n            </Card>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Alertas Recientes */}\r\n        {alerts.length > 0 && (\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <AlertTriangle className=\"h-5 w-5\" />\r\n                Alertas Recientes\r\n              </CardTitle>\r\n              <CardDescription>\r\n                Issues que requieren atención inmediata\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-3\">\r\n                {alerts.slice(0, 5).map((alert) => (\r\n                  <Alert key={alert.id} className=\"border-l-4 border-l-gray-200\">\r\n                    <div className=\"flex items-start gap-3\">\r\n                      {getAlertIcon(alert.type)}\r\n                      <div className=\"flex-1\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <h4 className=\"font-medium\">{alert.title}</h4>\r\n                          <span className=\"text-xs text-gray-500\">\r\n                            {alert.timestamp.toLocaleTimeString()}\r\n                          </span>\r\n                        </div>\r\n                        <AlertDescription className=\"mt-1\">\r\n                          {alert.description}\r\n                        </AlertDescription>\r\n                        {alert.url && (\r\n                          <Link href={alert.url} className=\"text-sm text-blue-600 hover:underline mt-2 inline-block\">\r\n                            Ver detalles →\r\n                          </Link>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </Alert>\r\n                ))}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        )}\r\n\r\n        {/* Acciones Rápidas */}\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Herramientas SEO</CardTitle>\r\n            <CardDescription>\r\n              Acceso rápido a todas las funcionalidades de SEO\r\n            </CardDescription>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n              {quickActions.map((action, index) => (\r\n                <Link key={index} href={action.href}>\r\n                  <Card className=\"hover:shadow-md transition-all cursor-pointer border-2 hover:border-blue-200\">\r\n                    <CardHeader className=\"pb-3\">\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <div className={`p-2 rounded-lg ${action.color} text-white`}>\r\n                          {action.icon}\r\n                        </div>\r\n                        {action.badge && (\r\n                          <Badge variant=\"secondary\" className=\"text-xs\">\r\n                            {action.badge}\r\n                          </Badge>\r\n                        )}\r\n                      </div>\r\n                      <CardTitle className=\"text-lg\">{action.title}</CardTitle>\r\n                      <CardDescription>{action.description}</CardDescription>\r\n                    </CardHeader>\r\n                  </Card>\r\n                </Link>\r\n              ))}\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </AdminLayout>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["SEOAdminDashboard","loading","setLoading","useState","refreshing","setRefreshing","overview","setOverview","alerts","setAlerts","activeTab","setActiveTab","useEffect","loadDashboardData","Promise","resolve","setTimeout","mockOverview","overallScore","organicTraffic","averagePosition","indexationRate","coreWebVitalsScore","unresolvedAlerts","lastUpdated","Date","mockAlerts","id","type","title","description","url","timestamp","error","console","refreshData","getScoreColor","score","getScoreBadgeColor","getAlertIcon","AlertTriangle","className","CheckCircle","getMainMetrics","value","change","trend","icon","Target","color","toLocaleString","Users","toFixed","TrendingUp","Globe","Zap","quickActions","href","BarChart3","badge","Activity","Settings","AdminLayout","breadcrumbs","label","div","Array","map","_","i","Card","CardHeader","actions","Button","variant","size","onClick","disabled","RefreshCw","Download","CardTitle","CardDescription","Badge","Progress","metric","index","CardContent","undefined","TrendingDown","Math","abs","p","length","slice","alert","Alert","h4","span","toLocaleTimeString","AlertDescription","Link","action"],"mappings":"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"}