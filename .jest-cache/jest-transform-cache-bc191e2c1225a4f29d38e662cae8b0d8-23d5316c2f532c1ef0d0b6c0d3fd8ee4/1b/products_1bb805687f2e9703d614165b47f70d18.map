{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\api\\products.ts"],"sourcesContent":["// ===================================\n// PINTEYA E-COMMERCE - FUNCIONES DE API PARA PRODUCTOS\n// ===================================\n\nimport { ProductFilters, ProductWithCategory, ApiResponse, PaginatedResponse } from '@/types/api'\nimport { safeApiResponseJson } from '@/lib/json-utils'\n\n// ===================================\n// FUNCIONES PARA EL FRONTEND\n// ===================================\n\n/**\n * Obtiene productos con filtros desde la API\n * @param filters - Filtros de productos\n * @param signal - AbortSignal para cancelar la request\n * @returns Promise<PaginatedResponse<ProductWithCategory>>\n */\nexport async function getProducts(\n  filters?: ProductFilters,\n  signal?: AbortSignal\n): Promise<PaginatedResponse<ProductWithCategory>> {\n  try {\n    const searchParams = new URLSearchParams()\n\n    if (filters) {\n      Object.entries(filters).forEach(([key, value]) => {\n        if (value !== undefined && value !== null) {\n          searchParams.append(key, value.toString())\n        }\n      })\n    }\n\n    const url = `/api/products?${searchParams.toString()}`\n\n    const response = await fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      signal, // Agregar soporte para AbortController\n    })\n\n    // Usar parsing seguro de JSON\n    const result = await safeApiResponseJson<PaginatedResponse<ProductWithCategory>>(response)\n\n    if (!result.success) {\n      console.error('❌ JSON parsing failed:', result.error)\n\n      // Return a fallback response instead of throwing\n      return {\n        data: [],\n        pagination: {\n          page: 1,\n          limit: 12,\n          total: 0,\n          totalPages: 0,\n        },\n        success: false,\n        message: result.error || 'Error loading products',\n      }\n    }\n\n    if (!result.data) {\n      console.error('❌ Result data is null')\n\n      // Return a fallback response instead of throwing\n      return {\n        data: [],\n        pagination: {\n          page: 1,\n          limit: 12,\n          total: 0,\n          totalPages: 0,\n        },\n        success: false,\n        message: 'Error: respuesta nula del servidor',\n      }\n    }\n\n    return result.data\n  } catch (error) {\n    // Solo loggear errores que no sean AbortError\n    if (error instanceof Error && error.name !== 'AbortError') {\n      console.error('❌ Error obteniendo productos:', error)\n    }\n\n    // Return a fallback response instead of throwing\n    return {\n      data: [],\n      pagination: {\n        page: 1,\n        limit: 12,\n        total: 0,\n        totalPages: 0,\n      },\n      success: false,\n      message: error instanceof Error ? error.message : 'Error inesperado',\n    }\n  }\n}\n\n/**\n * Obtiene un producto por ID desde la API\n * @param id - ID del producto\n * @returns Promise<ApiResponse<ProductWithCategory>>\n */\nexport async function getProductById(id: number): Promise<ApiResponse<ProductWithCategory>> {\n  try {\n    const response = await fetch(`/api/products/${id}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n\n    // Usar parsing seguro de JSON\n    const result = await safeApiResponseJson<ApiResponse<ProductWithCategory>>(response)\n\n    if (!result || !result.success || !result.data) {\n      throw new Error(result?.error || 'Error parsing API response')\n    }\n\n    return result.data\n  } catch (error) {\n    console.error(`Error obteniendo producto ${id}:`, error)\n    throw error\n  }\n}\n\n/**\n * Busca productos por término de búsqueda\n * @param searchTerm - Término de búsqueda\n * @param limit - Límite de resultados\n * @returns Promise<PaginatedResponse<ProductWithCategory>>\n */\nexport async function searchProducts(\n  searchTerm: string,\n  limit: number = 12\n): Promise<PaginatedResponse<ProductWithCategory>> {\n  return getProducts({\n    search: searchTerm,\n    limit,\n    page: 1,\n  })\n}\n\n/**\n * Obtiene productos por categoría\n * @param categorySlug - Slug de la categoría\n * @param page - Página\n * @param limit - Límite de resultados\n * @returns Promise<PaginatedResponse<ProductWithCategory>>\n */\nexport async function getProductsByCategory(\n  categorySlug: string,\n  page: number = 1,\n  limit: number = 12\n): Promise<PaginatedResponse<ProductWithCategory>> {\n  return getProducts({\n    category: categorySlug,\n    page,\n    limit,\n  })\n}\n\n/**\n * Obtiene productos con descuento\n * @param page - Página\n * @param limit - Límite de resultados\n * @returns Promise<PaginatedResponse<ProductWithCategory>>\n */\nexport async function getDiscountedProducts(\n  page: number = 1,\n  limit: number = 12\n): Promise<PaginatedResponse<ProductWithCategory>> {\n  // Nota: Esto requeriría un filtro adicional en la API\n  // Por ahora, obtenemos todos los productos y filtramos en el frontend\n  const response = await getProducts({ page, limit })\n\n  // Filtrar productos con descuento\n  const discountedProducts = response.data.filter(\n    product => product.discounted_price && product.discounted_price < product.price\n  )\n\n  return {\n    ...response,\n    data: discountedProducts,\n  }\n}\n\n/**\n * Obtiene productos por marca\n * @param brandName - Nombre de la marca\n * @param page - Página\n * @param limit - Límite de resultados\n * @returns Promise<PaginatedResponse<ProductWithCategory>>\n */\nexport async function getProductsByBrand(\n  brandName: string,\n  page: number = 1,\n  limit: number = 12\n): Promise<PaginatedResponse<ProductWithCategory>> {\n  return getProducts({\n    brand: brandName,\n    page,\n    limit,\n  })\n}\n\n/**\n * Obtiene productos relacionados (misma categoría)\n * @param productId - ID del producto actual\n * @param categoryId - ID de la categoría\n * @param limit - Límite de resultados\n * @returns Promise<ProductWithCategory[]>\n */\nexport async function getRelatedProducts(\n  productId: number,\n  categoryId: number,\n  limit: number = 4\n): Promise<ProductWithCategory[]> {\n  try {\n    // Obtener productos de la misma categoría\n    const response = await fetch(`/api/products?category_id=${categoryId}&limit=${limit + 1}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n\n    // Usar parsing seguro de JSON\n    const result = await safeApiResponseJson<PaginatedResponse<ProductWithCategory>>(response)\n\n    if (!result || !result.success || !result.data) {\n      throw new Error(result?.error || 'Error parsing API response')\n    }\n\n    const data = result.data\n\n    // Filtrar el producto actual y limitar resultados\n    return data.data.filter(product => product.id !== productId).slice(0, limit)\n  } catch (error) {\n    // Solo loggear errores que no sean AbortError\n    if (error instanceof Error && error.name !== 'AbortError') {\n      console.error('Error obteniendo productos relacionados:', error)\n    }\n    return []\n  }\n}\n\n// ===================================\n// FUNCIONES AUXILIARES\n// ===================================\n\n/**\n * Convierte un producto del formato antiguo al nuevo\n * @param oldProduct - Producto en formato antiguo\n * @returns ProductWithCategory\n */\nexport function convertLegacyProduct(oldProduct: any): ProductWithCategory {\n  return {\n    id: oldProduct.id,\n    name: oldProduct.title,\n    brand: oldProduct.brand || null, // Marca del producto legacy\n    slug: oldProduct.title.toLowerCase().replace(/[^a-z0-9]+/g, '-'),\n    description: `Producto ${oldProduct.title}`,\n    price: oldProduct.price,\n    discounted_price: oldProduct.discountedPrice,\n    stock: 50, // Stock por defecto\n    category_id: 1, // Categoría por defecto\n    images: oldProduct.imgs,\n    created_at: new Date().toISOString(),\n    updated_at: null, // Campo requerido por el tipo\n  }\n}\n\n/**\n * Calcula el porcentaje de descuento\n * @param originalPrice - Precio original\n * @param discountedPrice - Precio con descuento\n * @returns number\n */\nexport function calculateDiscountPercentage(\n  originalPrice: number,\n  discountedPrice: number\n): number {\n  if (!discountedPrice || discountedPrice >= originalPrice) {\n    return 0\n  }\n\n  return Math.round(((originalPrice - discountedPrice) / originalPrice) * 100)\n}\n\n/**\n * Formatea el precio para mostrar\n * @param price - Precio\n * @param currency - Moneda\n * @returns string\n */\nexport function formatPrice(price: number, currency: string = 'ARS'): string {\n  return new Intl.NumberFormat('es-AR', {\n    style: 'currency',\n    currency,\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 2,\n  }).format(price)\n}\n\n/**\n * Verifica si un producto está en stock\n * @param product - Producto\n * @returns boolean\n */\nexport function isProductInStock(product: ProductWithCategory): boolean {\n  return product.stock > 0\n}\n\n/**\n * Obtiene la URL de la imagen principal del producto\n * @param product - Producto\n * @returns string\n */\nexport function getProductMainImage(product: ProductWithCategory): string {\n  if (product.images?.previews?.[0]) {\n    return product.images.previews[0]\n  }\n\n  if (product.images?.thumbnails?.[0]) {\n    return product.images.thumbnails[0]\n  }\n\n  return '/images/products/placeholder.jpg'\n}\n"],"names":["calculateDiscountPercentage","convertLegacyProduct","formatPrice","getDiscountedProducts","getProductById","getProductMainImage","getProducts","getProductsByBrand","getProductsByCategory","getRelatedProducts","isProductInStock","searchProducts","filters","signal","searchParams","URLSearchParams","Object","entries","forEach","key","value","undefined","append","toString","url","response","fetch","method","headers","result","safeApiResponseJson","success","console","error","data","pagination","page","limit","total","totalPages","message","Error","name","id","searchTerm","search","categorySlug","category","discountedProducts","filter","product","discounted_price","price","brandName","brand","productId","categoryId","slice","oldProduct","title","slug","toLowerCase","replace","description","discountedPrice","stock","category_id","images","imgs","created_at","Date","toISOString","updated_at","originalPrice","Math","round","currency","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","format","previews","thumbnails"],"mappings":"AAAA,sCAAsC;AACtC,uDAAuD;AACvD,sCAAsC;;;;;;;;;;;;QAwRtBA;eAAAA;;QAvBAC;eAAAA;;QAwCAC;eAAAA;;QAhIMC;eAAAA;;QAjEAC;eAAAA;;QAwNNC;eAAAA;;QAjTMC;eAAAA;;QAoLAC;eAAAA;;QA5CAC;eAAAA;;QA+DAC;eAAAA;;QAiGNC;eAAAA;;QAlLMC;eAAAA;;;2BAlIc;AAY7B,eAAeL,YACpBM,OAAwB,EACxBC,MAAoB;IAEpB,IAAI;QACF,MAAMC,eAAe,IAAIC;QAEzB,IAAIH,SAAS;YACXI,OAAOC,OAAO,CAACL,SAASM,OAAO,CAAC,CAAC,CAACC,KAAKC,MAAM;gBAC3C,IAAIA,UAAUC,aAAaD,UAAU,MAAM;oBACzCN,aAAaQ,MAAM,CAACH,KAAKC,MAAMG,QAAQ;gBACzC;YACF;QACF;QAEA,MAAMC,MAAM,CAAC,cAAc,EAAEV,aAAaS,QAAQ,IAAI;QAEtD,MAAME,WAAW,MAAMC,MAAMF,KAAK;YAChCG,QAAQ;YACRC,SAAS;gBACP,gBAAgB;YAClB;YACAf;QACF;QAEA,8BAA8B;QAC9B,MAAMgB,SAAS,MAAMC,IAAAA,8BAAmB,EAAyCL;QAEjF,IAAI,CAACI,OAAOE,OAAO,EAAE;YACnBC,QAAQC,KAAK,CAAC,0BAA0BJ,OAAOI,KAAK;YAEpD,iDAAiD;YACjD,OAAO;gBACLC,MAAM,EAAE;gBACRC,YAAY;oBACVC,MAAM;oBACNC,OAAO;oBACPC,OAAO;oBACPC,YAAY;gBACd;gBACAR,SAAS;gBACTS,SAASX,OAAOI,KAAK,IAAI;YAC3B;QACF;QAEA,IAAI,CAACJ,OAAOK,IAAI,EAAE;YAChBF,QAAQC,KAAK,CAAC;YAEd,iDAAiD;YACjD,OAAO;gBACLC,MAAM,EAAE;gBACRC,YAAY;oBACVC,MAAM;oBACNC,OAAO;oBACPC,OAAO;oBACPC,YAAY;gBACd;gBACAR,SAAS;gBACTS,SAAS;YACX;QACF;QAEA,OAAOX,OAAOK,IAAI;IACpB,EAAE,OAAOD,OAAO;QACd,8CAA8C;QAC9C,IAAIA,iBAAiBQ,SAASR,MAAMS,IAAI,KAAK,cAAc;YACzDV,QAAQC,KAAK,CAAC,iCAAiCA;QACjD;QAEA,iDAAiD;QACjD,OAAO;YACLC,MAAM,EAAE;YACRC,YAAY;gBACVC,MAAM;gBACNC,OAAO;gBACPC,OAAO;gBACPC,YAAY;YACd;YACAR,SAAS;YACTS,SAASP,iBAAiBQ,QAAQR,MAAMO,OAAO,GAAG;QACpD;IACF;AACF;AAOO,eAAepC,eAAeuC,EAAU;IAC7C,IAAI;QACF,MAAMlB,WAAW,MAAMC,MAAM,CAAC,cAAc,EAAEiB,IAAI,EAAE;YAClDhB,QAAQ;YACRC,SAAS;gBACP,gBAAgB;YAClB;QACF;QAEA,8BAA8B;QAC9B,MAAMC,SAAS,MAAMC,IAAAA,8BAAmB,EAAmCL;QAE3E,IAAI,CAACI,UAAU,CAACA,OAAOE,OAAO,IAAI,CAACF,OAAOK,IAAI,EAAE;YAC9C,MAAM,IAAIO,MAAMZ,QAAQI,SAAS;QACnC;QAEA,OAAOJ,OAAOK,IAAI;IACpB,EAAE,OAAOD,OAAO;QACdD,QAAQC,KAAK,CAAC,CAAC,0BAA0B,EAAEU,GAAG,CAAC,CAAC,EAAEV;QAClD,MAAMA;IACR;AACF;AAQO,eAAetB,eACpBiC,UAAkB,EAClBP,QAAgB,EAAE;IAElB,OAAO/B,YAAY;QACjBuC,QAAQD;QACRP;QACAD,MAAM;IACR;AACF;AASO,eAAe5B,sBACpBsC,YAAoB,EACpBV,OAAe,CAAC,EAChBC,QAAgB,EAAE;IAElB,OAAO/B,YAAY;QACjByC,UAAUD;QACVV;QACAC;IACF;AACF;AAQO,eAAelC,sBACpBiC,OAAe,CAAC,EAChBC,QAAgB,EAAE;IAElB,sDAAsD;IACtD,sEAAsE;IACtE,MAAMZ,WAAW,MAAMnB,YAAY;QAAE8B;QAAMC;IAAM;IAEjD,kCAAkC;IAClC,MAAMW,qBAAqBvB,SAASS,IAAI,CAACe,MAAM,CAC7CC,CAAAA,UAAWA,QAAQC,gBAAgB,IAAID,QAAQC,gBAAgB,GAAGD,QAAQE,KAAK;IAGjF,OAAO;QACL,GAAG3B,QAAQ;QACXS,MAAMc;IACR;AACF;AASO,eAAezC,mBACpB8C,SAAiB,EACjBjB,OAAe,CAAC,EAChBC,QAAgB,EAAE;IAElB,OAAO/B,YAAY;QACjBgD,OAAOD;QACPjB;QACAC;IACF;AACF;AASO,eAAe5B,mBACpB8C,SAAiB,EACjBC,UAAkB,EAClBnB,QAAgB,CAAC;IAEjB,IAAI;QACF,0CAA0C;QAC1C,MAAMZ,WAAW,MAAMC,MAAM,CAAC,0BAA0B,EAAE8B,WAAW,OAAO,EAAEnB,QAAQ,GAAG,EAAE;YACzFV,QAAQ;YACRC,SAAS;gBACP,gBAAgB;YAClB;QACF;QAEA,8BAA8B;QAC9B,MAAMC,SAAS,MAAMC,IAAAA,8BAAmB,EAAyCL;QAEjF,IAAI,CAACI,UAAU,CAACA,OAAOE,OAAO,IAAI,CAACF,OAAOK,IAAI,EAAE;YAC9C,MAAM,IAAIO,MAAMZ,QAAQI,SAAS;QACnC;QAEA,MAAMC,OAAOL,OAAOK,IAAI;QAExB,kDAAkD;QAClD,OAAOA,KAAKA,IAAI,CAACe,MAAM,CAACC,CAAAA,UAAWA,QAAQP,EAAE,KAAKY,WAAWE,KAAK,CAAC,GAAGpB;IACxE,EAAE,OAAOJ,OAAO;QACd,8CAA8C;QAC9C,IAAIA,iBAAiBQ,SAASR,MAAMS,IAAI,KAAK,cAAc;YACzDV,QAAQC,KAAK,CAAC,4CAA4CA;QAC5D;QACA,OAAO,EAAE;IACX;AACF;AAWO,SAAShC,qBAAqByD,UAAe;IAClD,OAAO;QACLf,IAAIe,WAAWf,EAAE;QACjBD,MAAMgB,WAAWC,KAAK;QACtBL,OAAOI,WAAWJ,KAAK,IAAI;QAC3BM,MAAMF,WAAWC,KAAK,CAACE,WAAW,GAAGC,OAAO,CAAC,eAAe;QAC5DC,aAAa,CAAC,SAAS,EAAEL,WAAWC,KAAK,EAAE;QAC3CP,OAAOM,WAAWN,KAAK;QACvBD,kBAAkBO,WAAWM,eAAe;QAC5CC,OAAO;QACPC,aAAa;QACbC,QAAQT,WAAWU,IAAI;QACvBC,YAAY,IAAIC,OAAOC,WAAW;QAClCC,YAAY;IACd;AACF;AAQO,SAASxE,4BACdyE,aAAqB,EACrBT,eAAuB;IAEvB,IAAI,CAACA,mBAAmBA,mBAAmBS,eAAe;QACxD,OAAO;IACT;IAEA,OAAOC,KAAKC,KAAK,CAAC,AAAEF,CAAAA,gBAAgBT,eAAc,IAAKS,gBAAiB;AAC1E;AAQO,SAASvE,YAAYkD,KAAa,EAAEwB,WAAmB,KAAK;IACjE,OAAO,IAAIC,KAAKC,YAAY,CAAC,SAAS;QACpCC,OAAO;QACPH;QACAI,uBAAuB;QACvBC,uBAAuB;IACzB,GAAGC,MAAM,CAAC9B;AACZ;AAOO,SAAS1C,iBAAiBwC,OAA4B;IAC3D,OAAOA,QAAQe,KAAK,GAAG;AACzB;AAOO,SAAS5D,oBAAoB6C,OAA4B;IAC9D,IAAIA,QAAQiB,MAAM,EAAEgB,UAAU,CAAC,EAAE,EAAE;QACjC,OAAOjC,QAAQiB,MAAM,CAACgB,QAAQ,CAAC,EAAE;IACnC;IAEA,IAAIjC,QAAQiB,MAAM,EAAEiB,YAAY,CAAC,EAAE,EAAE;QACnC,OAAOlC,QAAQiB,MAAM,CAACiB,UAAU,CAAC,EAAE;IACrC;IAEA,OAAO;AACT"}