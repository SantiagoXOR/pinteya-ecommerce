70ff88b4e98185d4fabb01e49e3843d8
// ===================================
// PINTEYA E-COMMERCE - ORDER LIST ENTERPRISE COMPONENT
// ===================================
'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "OrderListEnterprise", {
    enumerable: true,
    get: function() {
        return OrderListEnterprise;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _card = require("../../ui/card");
const _button = require("../../ui/button");
const _input = require("../../ui/input");
const _badge = require("../../ui/badge");
const _select = require("../../ui/select");
const _table = require("../../ui/table");
const _checkbox = require("../../ui/checkbox");
const _lucidereact = require("lucide-react");
const _dropdownmenu = require("../../ui/dropdown-menu");
const _ordersenterprise = require("../../../lib/orders-enterprise");
const _usetoast = require("../../../hooks/use-toast");
const _useRenderMonitoring = require("../../../hooks/monitoring/useRenderMonitoring");
const _useOrdersEnterpriseStrict = require("../../../hooks/admin/useOrdersEnterpriseStrict");
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const OrderFiltersComponent = /*#__PURE__*/ (0, _react.memo)(({ filters, onFilterChange, enabled })=>{
    if (!enabled) {
        return null;
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.Card, {
        className: "mb-6",
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardHeader, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.CardTitle, {
                    className: "flex items-center gap-2",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Filter, {
                            className: "w-5 h-5"
                        }),
                        "Filtros"
                    ]
                })
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardContent, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "relative",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Search, {
                                    className: "absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_input.Input, {
                                    placeholder: "Buscar \xf3rdenes...",
                                    value: filters.search || '',
                                    onChange: (e)=>onFilterChange('search', e.target.value),
                                    className: "pl-10"
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)(_select.Select, {
                            value: filters.status || 'all',
                            onValueChange: (value)=>onFilterChange('status', value === 'all' ? undefined : value),
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectTrigger, {
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectValue, {
                                        placeholder: "Estado"
                                    })
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)(_select.SelectContent, {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectItem, {
                                            value: "all",
                                            children: "Todos los estados"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectItem, {
                                            value: "pending",
                                            children: "Pendiente"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectItem, {
                                            value: "confirmed",
                                            children: "Confirmada"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectItem, {
                                            value: "processing",
                                            children: "Procesando"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectItem, {
                                            value: "shipped",
                                            children: "Enviada"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectItem, {
                                            value: "delivered",
                                            children: "Entregada"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectItem, {
                                            value: "cancelled",
                                            children: "Cancelada"
                                        })
                                    ]
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)(_select.Select, {
                            value: filters.payment_status || 'all',
                            onValueChange: (value)=>onFilterChange('payment_status', value === 'all' ? undefined : value),
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectTrigger, {
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectValue, {
                                        placeholder: "Estado de Pago"
                                    })
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)(_select.SelectContent, {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectItem, {
                                            value: "all",
                                            children: "Todos los pagos"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectItem, {
                                            value: "pending",
                                            children: "Pendiente"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectItem, {
                                            value: "paid",
                                            children: "Pagado"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectItem, {
                                            value: "failed",
                                            children: "Fall\xf3"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectItem, {
                                            value: "refunded",
                                            children: "Reembolsado"
                                        })
                                    ]
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)(_select.Select, {
                            value: `${filters.sort_by}_${filters.sort_order}`,
                            onValueChange: (value)=>{
                                const [sortBy, sortOrder] = value.split('_');
                                onFilterChange('sort_by', sortBy);
                                onFilterChange('sort_order', sortOrder);
                            },
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectTrigger, {
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectValue, {
                                        placeholder: "Ordenar por"
                                    })
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)(_select.SelectContent, {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectItem, {
                                            value: "created_at_desc",
                                            children: "M\xe1s recientes"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectItem, {
                                            value: "created_at_asc",
                                            children: "M\xe1s antiguos"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectItem, {
                                            value: "total_desc",
                                            children: "Mayor monto"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectItem, {
                                            value: "total_asc",
                                            children: "Menor monto"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectItem, {
                                            value: "order_number_asc",
                                            children: "N\xfamero de orden"
                                        })
                                    ]
                                })
                            ]
                        })
                    ]
                })
            })
        ]
    });
});
OrderFiltersComponent.displayName = 'OrderFiltersComponent';
const BulkActions = /*#__PURE__*/ (0, _react.memo)(({ selectedCount, onBulkAction, enabled })=>{
    if (!enabled || selectedCount === 0) {
        return null;
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        className: "flex items-center gap-2 mb-4 p-3 bg-blue-50 rounded-lg",
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                className: "text-sm text-blue-700",
                children: [
                    selectedCount,
                    " orden(es) seleccionada(s)"
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "flex gap-2 ml-auto",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_button.Button, {
                        size: "sm",
                        variant: "outline",
                        onClick: ()=>onBulkAction('export'),
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Download, {
                                className: "w-4 h-4 mr-1"
                            }),
                            "Exportar"
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                        size: "sm",
                        variant: "outline",
                        onClick: ()=>onBulkAction('update_status'),
                        children: "Actualizar Estado"
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                        size: "sm",
                        variant: "destructive",
                        onClick: ()=>onBulkAction('delete'),
                        children: "Eliminar"
                    })
                ]
            })
        ]
    });
});
BulkActions.displayName = 'BulkActions';
const OrderListEnterprise = ({ className = '', onOrderSelect, onOrderEdit, onBulkAction, enableBulkActions = true, enableFilters = true, pageSize = 20 })=>{
    console.log('🚀 OrderListEnterprise - Componente renderizándose con props:', {
        className,
        enableBulkActions,
        enableFilters,
        pageSize
    });
    const { toast } = (0, _usetoast.useToast)();
    // Monitoreo de renderizado
    const { trackError, metrics } = (0, _useRenderMonitoring.useRenderMonitoring)({
        componentName: 'OrderListEnterprise',
        enabled: process.env.NODE_ENV === 'development',
        enableToasts: false,
        enableConsoleLogging: true,
        sampleRate: 0.1 // Monitorear solo 10% de los renders para performance
    });
    // Hook con validación estricta de tipos
    const { orders, pagination, filters, analytics, isLoading, error, fetchOrders, updateFilters, refreshOrders, clearError, retryLastRequest } = (0, _useOrdersEnterpriseStrict.useOrdersEnterpriseStrict)({
        page: 1,
        limit: pageSize,
        sort_by: 'created_at',
        sort_order: 'desc'
    }, {
        autoFetch: true,
        maxRetries: 3,
        timeout: 10000,
        enableCache: true
    });
    // DEBUG: Logs para verificar datos del hook
    console.log('🔍 OrderListEnterprise - Hook data:', {
        orders: orders,
        ordersLength: orders?.length,
        pagination,
        isLoading,
        error,
        filters
    });
    // Estado local para selecciones
    const [selectedOrders, setSelectedOrders] = (0, _react.useState)([]);
    // ===================================
    // FUNCIONES DE MANEJO DE FILTROS
    // ===================================
    // ===================================
    // MANEJADORES DE EVENTOS
    // ===================================
    // Usar useRef para evitar dependencias circulares
    const filtersRef = (0, _react.useRef)(filters);
    filtersRef.current = filters;
    const handleFilterChange = (0, _react.useCallback)((key, value)=>{
        try {
            const currentFilters = filtersRef.current;
            const updatedFilters = {
                ...currentFilters,
                [key]: value,
                page: 1
            };
            updateFilters(updatedFilters);
        // REMOVIDO: fetchOrders duplicado que causaba refresco infinito
        // El hook ya maneja el fetch automáticamente
        } catch (error) {
            trackError(error, {
                action: 'filter_change',
                key,
                value
            });
            toast({
                title: 'Error al aplicar filtros',
                description: 'No se pudieron aplicar los filtros seleccionados.',
                variant: 'destructive'
            });
        }
    }, [
        updateFilters,
        trackError,
        toast
    ]); // Removido 'filters' de dependencias
    const handlePageChange = (0, _react.useCallback)((newPage)=>{
        try {
            const currentFilters = filtersRef.current;
            const updatedFilters = {
                ...currentFilters,
                page: newPage
            };
            updateFilters(updatedFilters);
        // REMOVIDO: fetchOrders duplicado que causaba refresco infinito
        // El hook ya maneja el fetch automáticamente
        } catch (error) {
            trackError(error, {
                action: 'page_change',
                page: newPage
            });
            toast({
                title: 'Error de paginación',
                description: 'No se pudo cambiar de página.',
                variant: 'destructive'
            });
        }
    }, [
        updateFilters,
        trackError,
        toast
    ]); // Removido 'filters' de dependencias
    const handleSelectOrder = (0, _react.useCallback)((orderId, selected)=>{
        const orderIdStr = String(orderId);
        setSelectedOrders((prev)=>selected ? [
                ...prev,
                orderIdStr
            ] : prev.filter((id)=>id !== orderIdStr));
    }, []);
    const handleSelectAll = (0, _react.useCallback)((selected)=>{
        setSelectedOrders(selected ? orders.map((order)=>String(order.id)) : []);
    }, [
        orders
    ]);
    const handleBulkAction = (0, _react.useCallback)((action)=>{
        if (selectedOrders.length === 0) {
            toast({
                title: 'Advertencia',
                description: 'Selecciona al menos una orden',
                variant: 'destructive'
            });
            return;
        }
        onBulkAction?.(action, selectedOrders);
    }, [
        selectedOrders,
        onBulkAction,
        toast
    ]);
    const handleRefresh = (0, _react.useCallback)(()=>{
        refreshOrders();
    }, [
        refreshOrders
    ]);
    // ===================================
    // DATOS MEMOIZADOS
    // ===================================
    // Memoizar datos computados para evitar recálculos innecesarios
    const memoizedData = (0, _react.useMemo)(()=>{
        const allSelected = orders.length > 0 && selectedOrders.length === orders.length;
        const someSelected = selectedOrders.length > 0;
        const hasOrders = orders.length > 0;
        const hasNextPage = pagination?.hasNextPage || false;
        const hasPreviousPage = pagination?.hasPreviousPage || false;
        const currentPage = pagination?.page || 1;
        const totalPages = pagination?.totalPages || 1;
        return {
            allSelected,
            someSelected,
            hasOrders,
            hasNextPage,
            hasPreviousPage,
            currentPage,
            totalPages
        };
    }, [
        orders,
        selectedOrders,
        pagination
    ]);
    // Memoizar handlers que dependen de datos computados
    const memoizedHandlers = (0, _react.useMemo)(()=>({
            onFilterChange: handleFilterChange,
            onPageChange: handlePageChange,
            onSelectOrder: handleSelectOrder,
            onSelectAll: handleSelectAll,
            onBulkAction: handleBulkAction,
            onRefresh: handleRefresh
        }), [
        handleFilterChange,
        handlePageChange,
        handleSelectOrder,
        handleSelectAll,
        handleBulkAction,
        handleRefresh
    ]);
    // ===================================
    // FUNCIONES DE RENDER ELIMINADAS - AHORA USAN COMPONENTES MEMOIZADOS
    // ===================================
    // Función renderBulkActions eliminada - ahora usa componente BulkActions memoizado
    // ===================================
    // RENDER DE TABLA
    // ===================================
    const renderTable = ()=>{
        if (isLoading) {
            return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "flex items-center justify-center h-64",
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.RefreshCw, {
                    className: "w-8 h-8 animate-spin text-gray-400"
                })
            });
        }
        if (error) {
            return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "text-center py-8",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                        className: "text-red-600 mb-4",
                        children: error instanceof Error ? error.message : error?.toString() || 'Error desconocido'
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_button.Button, {
                        onClick: handleRefresh,
                        variant: "outline",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.RefreshCw, {
                                className: "w-4 h-4 mr-2"
                            }),
                            "Reintentar"
                        ]
                    })
                ]
            });
        }
        if (orders.length === 0) {
            return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "text-center py-12 text-gray-500",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "mb-4",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Package, {
                                className: "w-16 h-16 mx-auto text-gray-300 mb-4"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                className: "text-lg font-medium text-gray-900 mb-2",
                                children: isLoading ? 'Cargando órdenes...' : 'No hay órdenes disponibles'
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                className: "text-sm text-gray-500 mb-6",
                                children: isLoading ? 'Obteniendo datos desde la API...' : 'No se encontraron órdenes con los filtros aplicados'
                            })
                        ]
                    }),
                    !isLoading && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_button.Button, {
                        onClick: ()=>fetchOrders(),
                        className: "bg-blaze-orange-600 hover:bg-blaze-orange-700 text-white",
                        size: "lg",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.RefreshCw, {
                                className: "w-4 h-4 mr-2"
                            }),
                            "Recargar \xd3rdenes"
                        ]
                    })
                ]
            });
        }
        return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_table.Table, {
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_table.TableHeader, {
                    children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_table.TableRow, {
                        children: [
                            enableBulkActions && /*#__PURE__*/ (0, _jsxruntime.jsx)(_table.TableHead, {
                                className: "w-12",
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_checkbox.Checkbox, {
                                    checked: selectedOrders.length === orders.length,
                                    onCheckedChange: handleSelectAll
                                })
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_table.TableHead, {
                                children: "Orden"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_table.TableHead, {
                                children: "Cliente"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_table.TableHead, {
                                children: "Estado"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_table.TableHead, {
                                children: "Pago"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_table.TableHead, {
                                children: "Total"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_table.TableHead, {
                                children: "Fecha"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_table.TableHead, {
                                className: "w-12",
                                children: "Acciones"
                            })
                        ]
                    })
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_table.TableBody, {
                    children: orders.map((order)=>{
                        const statusInfo = (0, _ordersenterprise.formatOrderStatus)(order.status);
                        const paymentInfo = (0, _ordersenterprise.formatPaymentStatus)(order.payment_status);
                        return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_table.TableRow, {
                            children: [
                                enableBulkActions && /*#__PURE__*/ (0, _jsxruntime.jsx)(_table.TableCell, {
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_checkbox.Checkbox, {
                                        checked: selectedOrders.includes(String(order.id)),
                                        onCheckedChange: (checked)=>handleSelectOrder(order.id, !!checked)
                                    })
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_table.TableCell, {
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                className: "font-medium",
                                                children: order.order_number
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                className: "text-sm text-gray-500",
                                                children: [
                                                    "#",
                                                    String(order.id).slice(0, 8)
                                                ]
                                            })
                                        ]
                                    })
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_table.TableCell, {
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                className: "font-medium",
                                                children: order.user_profiles?.name || 'N/A'
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                className: "text-sm text-gray-500",
                                                children: order.user_profiles?.email
                                            })
                                        ]
                                    })
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_table.TableCell, {
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_badge.Badge, {
                                        variant: "secondary",
                                        className: statusInfo.color === 'green' ? 'bg-green-100 text-green-800' : statusInfo.color === 'blue' ? 'bg-blue-100 text-blue-800' : statusInfo.color === 'yellow' ? 'bg-yellow-100 text-yellow-800' : statusInfo.color === 'red' ? 'bg-red-100 text-red-800' : statusInfo.color === 'purple' ? 'bg-purple-100 text-purple-800' : statusInfo.color === 'orange' ? 'bg-orange-100 text-orange-800' : 'bg-gray-100 text-gray-800',
                                        children: statusInfo.label
                                    })
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_table.TableCell, {
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_badge.Badge, {
                                        variant: "secondary",
                                        className: paymentInfo.color === 'green' ? 'bg-green-100 text-green-800' : paymentInfo.color === 'yellow' ? 'bg-yellow-100 text-yellow-800' : paymentInfo.color === 'red' ? 'bg-red-100 text-red-800' : 'bg-gray-100 text-gray-800',
                                        children: paymentInfo.label
                                    })
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_table.TableCell, {
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                        className: "font-medium",
                                        children: [
                                            "$",
                                            (order.total || 0).toLocaleString(),
                                            " ",
                                            order.currency
                                        ]
                                    })
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_table.TableCell, {
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                        className: "text-sm",
                                        children: new Date(order.created_at).toLocaleDateString()
                                    })
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_table.TableCell, {
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_dropdownmenu.DropdownMenu, {
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_dropdownmenu.DropdownMenuTrigger, {
                                                asChild: true,
                                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                                    variant: "ghost",
                                                    size: "sm",
                                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.MoreHorizontal, {
                                                        className: "w-4 h-4"
                                                    })
                                                })
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_dropdownmenu.DropdownMenuContent, {
                                                align: "end",
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_dropdownmenu.DropdownMenuItem, {
                                                        onClick: ()=>onOrderSelect?.(order),
                                                        children: [
                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Eye, {
                                                                className: "w-4 h-4 mr-2"
                                                            }),
                                                            "Ver Detalles"
                                                        ]
                                                    }),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_dropdownmenu.DropdownMenuItem, {
                                                        onClick: ()=>onOrderEdit?.(order),
                                                        children: [
                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Edit, {
                                                                className: "w-4 h-4 mr-2"
                                                            }),
                                                            "Editar"
                                                        ]
                                                    }),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_dropdownmenu.DropdownMenuSeparator, {}),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_dropdownmenu.DropdownMenuItem, {
                                                        onClick: ()=>handleBulkAction('export', [
                                                                String(order.id)
                                                            ]),
                                                        children: [
                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Download, {
                                                                className: "w-4 h-4 mr-2"
                                                            }),
                                                            "Exportar"
                                                        ]
                                                    })
                                                ]
                                            })
                                        ]
                                    })
                                })
                            ]
                        }, order.id);
                    })
                })
            ]
        });
    };
    // ===================================
    // RENDER DE PAGINACIÓN
    // ===================================
    const renderPagination = ()=>{
        if (!pagination || pagination.totalPages <= 1) {
            return null;
        }
        return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
            className: "flex items-center justify-between mt-6",
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "text-sm text-gray-500",
                    children: [
                        "Mostrando ",
                        (pagination.page - 1) * pagination.limit + 1,
                        " a",
                        ' ',
                        Math.min(pagination.page * pagination.limit, pagination.total),
                        " de",
                        ' ',
                        pagination.total,
                        " \xf3rdenes"
                    ]
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "flex items-center gap-2",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)(_button.Button, {
                            variant: "outline",
                            size: "sm",
                            onClick: ()=>handlePageChange(pagination.page - 1),
                            disabled: !pagination.hasPreviousPage,
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.ChevronLeft, {
                                    className: "w-4 h-4"
                                }),
                                "Anterior"
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                            className: "text-sm",
                            children: [
                                "P\xe1gina ",
                                pagination.page,
                                " de ",
                                pagination.totalPages
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)(_button.Button, {
                            variant: "outline",
                            size: "sm",
                            onClick: ()=>handlePageChange(pagination.page + 1),
                            disabled: !pagination.hasNextPage,
                            children: [
                                "Siguiente",
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.ChevronRight, {
                                    className: "w-4 h-4"
                                })
                            ]
                        })
                    ]
                })
            ]
        });
    };
    // ===================================
    // RENDER PRINCIPAL
    // ===================================
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        className: `space-y-6 ${className}`,
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "flex items-center justify-between",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("h2", {
                                className: "text-2xl font-bold",
                                children: "Gesti\xf3n de \xd3rdenes"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                className: "text-gray-600",
                                children: "Administra y monitorea todas las \xf3rdenes del sistema"
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_button.Button, {
                        onClick: handleRefresh,
                        variant: "outline",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.RefreshCw, {
                                className: "w-4 h-4 mr-2"
                            }),
                            "Actualizar"
                        ]
                    })
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(OrderFiltersComponent, {
                filters: filters,
                onFilterChange: memoizedHandlers.onFilterChange,
                enabled: enableFilters
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(BulkActions, {
                selectedCount: selectedOrders.length,
                onBulkAction: memoizedHandlers.onBulkAction,
                enabled: enableBulkActions
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.Card, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardContent, {
                    className: "p-0",
                    children: renderTable()
                })
            }),
            renderPagination()
        ]
    });
};

//# sourceMappingURL=data:application/json;base64,