{"version":3,"names":["DEFAULT_PERFORMANCE_BUDGETS","cov_lqmgx0sax","f","s","PerformanceBudgetUtils","PerformanceBudgetsMonitor","PerformanceMetricType","performanceBudgetsMonitor","id","name","description","enabled","metricType","target","warning","critical","unit","context","device","tags","createdAt","Date","now","updatedAt","constructor","redis","_redis","getRedisClient","budgets","Map","measurements","initializeDefaultBudgets","startPeriodicEvaluation","getInstance","instance","b","forEach","budget","set","_logger","logger","info","LogCategory","MONITORING","count","size","evaluationInterval","setInterval","evaluateAllBudgets","recordMeasurement","budgetId","value","metadata","get","warn","measurementId","Math","random","toString","substr","measurement","timestamp","has","budgetMeasurements","push","length","splice","evaluateBudget","persistMeasurement","debug","evaluation","createEvaluation","status","createBudgetAlert","threshold","message","deviation","recommendations","generateRecommendations","severity","_advancedalertingengine","AlertSeverity","HIGH","MEDIUM","title","details","advancedAlertingEngine","createAlert","AlertType","PERFORMANCE","fiveMinutesAgo","recentMeasurements","filter","m","averageValue","reduce","sum","syntheticMeasurement","synthetic","generateReport","periodHours","periodStart","budgetResults","Array","from","values","map","trend","violations","halfPeriod","firstHalf","slice","secondHalf","firstAvg","secondAvg","change","totalBudgets","passingBudgets","r","warningBudgets","failingBudgets","overallScore","round","generateReportRecommendations","period","start","end","summary","degradingBudgets","highViolationBudgets","some","getActiveBudgets","getRecentMeasurements","hours","cutoff","addBudget","fullBudget","updateBudget","updates","updatedBudget","removeBudget","deleted","delete","setex","JSON","stringify","error","destroy","clearInterval","recordWebVitals","vitals","lcp","fid","cls","recordAPIMetrics","responseTime","recordErrorRate","errorRate","recordBundleSize","getBudgetStatus","report","criticalBudgets"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\monitoring\\performance-budgets-monitor.ts"],"sourcesContent":["// ===================================\r\n// PINTEYA E-COMMERCE - PERFORMANCE BUDGETS MONITOR\r\n// ===================================\r\n\r\nimport { logger, LogCategory } from '../enterprise/logger';\r\nimport { getRedisClient } from '../integrations/redis';\r\nimport { advancedAlertingEngine, AlertSeverity, AlertType } from './advanced-alerting-engine';\r\n\r\n/**\r\n * Tipos de métricas de performance\r\n */\r\nexport enum PerformanceMetricType {\r\n  LOAD_TIME = 'loadTime',\r\n  FIRST_CONTENTFUL_PAINT = 'fcp',\r\n  LARGEST_CONTENTFUL_PAINT = 'lcp',\r\n  FIRST_INPUT_DELAY = 'fid',\r\n  CUMULATIVE_LAYOUT_SHIFT = 'cls',\r\n  TIME_TO_FIRST_BYTE = 'ttfb',\r\n  INTERACTION_TO_NEXT_PAINT = 'inp',\r\n  BUNDLE_SIZE = 'bundleSize',\r\n  RESPONSE_TIME = 'responseTime',\r\n  THROUGHPUT = 'throughput',\r\n  ERROR_RATE = 'errorRate',\r\n  MEMORY_USAGE = 'memoryUsage',\r\n  CPU_USAGE = 'cpuUsage'\r\n}\r\n\r\n/**\r\n * Presupuesto de performance\r\n */\r\nexport interface PerformanceBudget {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  enabled: boolean;\r\n  metricType: PerformanceMetricType;\r\n  target: number;\r\n  warning: number;\r\n  critical: number;\r\n  unit: string;\r\n  context?: {\r\n    page?: string;\r\n    device?: 'mobile' | 'desktop' | 'tablet';\r\n    network?: '3g' | '4g' | 'wifi';\r\n    environment?: 'development' | 'staging' | 'production';\r\n  };\r\n  tags: string[];\r\n  createdAt: number;\r\n  updatedAt: number;\r\n}\r\n\r\n/**\r\n * Medición de performance\r\n */\r\nexport interface PerformanceMeasurement {\r\n  id: string;\r\n  budgetId: string;\r\n  value: number;\r\n  timestamp: number;\r\n  context: {\r\n    page?: string;\r\n    device?: string;\r\n    network?: string;\r\n    userAgent?: string;\r\n    sessionId?: string;\r\n  };\r\n  metadata?: Record<string, any>;\r\n}\r\n\r\n/**\r\n * Resultado de evaluación de presupuesto\r\n */\r\nexport interface BudgetEvaluation {\r\n  budgetId: string;\r\n  measurement: PerformanceMeasurement;\r\n  status: 'good' | 'warning' | 'critical';\r\n  deviation: number; // Porcentaje de desviación del target\r\n  threshold: number; // Umbral que se superó\r\n  message: string;\r\n  recommendations?: string[];\r\n}\r\n\r\n/**\r\n * Reporte de presupuestos\r\n */\r\nexport interface BudgetReport {\r\n  period: {\r\n    start: number;\r\n    end: number;\r\n  };\r\n  summary: {\r\n    totalBudgets: number;\r\n    passingBudgets: number;\r\n    warningBudgets: number;\r\n    failingBudgets: number;\r\n    overallScore: number; // 0-100\r\n  };\r\n  budgetResults: Array<{\r\n    budget: PerformanceBudget;\r\n    measurements: PerformanceMeasurement[];\r\n    averageValue: number;\r\n    status: 'good' | 'warning' | 'critical';\r\n    trend: 'improving' | 'stable' | 'degrading';\r\n    violations: number;\r\n  }>;\r\n  recommendations: string[];\r\n}\r\n\r\n/**\r\n * Presupuestos predefinidos\r\n */\r\nexport const DEFAULT_PERFORMANCE_BUDGETS: PerformanceBudget[] = [\r\n  {\r\n    id: 'lcp_mobile',\r\n    name: 'LCP Mobile',\r\n    description: 'Largest Contentful Paint para dispositivos móviles',\r\n    enabled: true,\r\n    metricType: PerformanceMetricType.LARGEST_CONTENTFUL_PAINT,\r\n    target: 2500,\r\n    warning: 3000,\r\n    critical: 4000,\r\n    unit: 'ms',\r\n    context: { device: 'mobile' },\r\n    tags: ['core-web-vitals', 'mobile'],\r\n    createdAt: Date.now(),\r\n    updatedAt: Date.now()\r\n  },\r\n  {\r\n    id: 'lcp_desktop',\r\n    name: 'LCP Desktop',\r\n    description: 'Largest Contentful Paint para escritorio',\r\n    enabled: true,\r\n    metricType: PerformanceMetricType.LARGEST_CONTENTFUL_PAINT,\r\n    target: 2000,\r\n    warning: 2500,\r\n    critical: 3500,\r\n    unit: 'ms',\r\n    context: { device: 'desktop' },\r\n    tags: ['core-web-vitals', 'desktop'],\r\n    createdAt: Date.now(),\r\n    updatedAt: Date.now()\r\n  },\r\n  {\r\n    id: 'fid_global',\r\n    name: 'FID Global',\r\n    description: 'First Input Delay para todos los dispositivos',\r\n    enabled: true,\r\n    metricType: PerformanceMetricType.FIRST_INPUT_DELAY,\r\n    target: 100,\r\n    warning: 200,\r\n    critical: 300,\r\n    unit: 'ms',\r\n    tags: ['core-web-vitals', 'interactivity'],\r\n    createdAt: Date.now(),\r\n    updatedAt: Date.now()\r\n  },\r\n  {\r\n    id: 'cls_global',\r\n    name: 'CLS Global',\r\n    description: 'Cumulative Layout Shift para todos los dispositivos',\r\n    enabled: true,\r\n    metricType: PerformanceMetricType.CUMULATIVE_LAYOUT_SHIFT,\r\n    target: 0.1,\r\n    warning: 0.15,\r\n    critical: 0.25,\r\n    unit: 'score',\r\n    tags: ['core-web-vitals', 'visual-stability'],\r\n    createdAt: Date.now(),\r\n    updatedAt: Date.now()\r\n  },\r\n  {\r\n    id: 'bundle_size_js',\r\n    name: 'Bundle Size JS',\r\n    description: 'Tamaño del bundle JavaScript principal',\r\n    enabled: true,\r\n    metricType: PerformanceMetricType.BUNDLE_SIZE,\r\n    target: 250000, // 250KB\r\n    warning: 350000, // 350KB\r\n    critical: 500000, // 500KB\r\n    unit: 'bytes',\r\n    tags: ['bundle-size', 'javascript'],\r\n    createdAt: Date.now(),\r\n    updatedAt: Date.now()\r\n  },\r\n  {\r\n    id: 'api_response_time',\r\n    name: 'API Response Time',\r\n    description: 'Tiempo de respuesta promedio de APIs',\r\n    enabled: true,\r\n    metricType: PerformanceMetricType.RESPONSE_TIME,\r\n    target: 500,\r\n    warning: 1000,\r\n    critical: 2000,\r\n    unit: 'ms',\r\n    tags: ['api', 'backend'],\r\n    createdAt: Date.now(),\r\n    updatedAt: Date.now()\r\n  },\r\n  {\r\n    id: 'error_rate',\r\n    name: 'Error Rate',\r\n    description: 'Tasa de errores del sistema',\r\n    enabled: true,\r\n    metricType: PerformanceMetricType.ERROR_RATE,\r\n    target: 0.01, // 1%\r\n    warning: 0.03, // 3%\r\n    critical: 0.05, // 5%\r\n    unit: 'percentage',\r\n    tags: ['reliability', 'errors'],\r\n    createdAt: Date.now(),\r\n    updatedAt: Date.now()\r\n  }\r\n];\r\n\r\n/**\r\n * Monitor de presupuestos de performance\r\n */\r\nexport class PerformanceBudgetsMonitor {\r\n  private static instance: PerformanceBudgetsMonitor;\r\n  private redis = getRedisClient();\r\n  private budgets: Map<string, PerformanceBudget> = new Map();\r\n  private measurements: Map<string, PerformanceMeasurement[]> = new Map();\r\n  private evaluationInterval?: NodeJS.Timeout;\r\n\r\n  private constructor() {\r\n    this.initializeDefaultBudgets();\r\n    this.startPeriodicEvaluation();\r\n  }\r\n\r\n  static getInstance(): PerformanceBudgetsMonitor {\r\n    if (!PerformanceBudgetsMonitor.instance) {\r\n      PerformanceBudgetsMonitor.instance = new PerformanceBudgetsMonitor();\r\n    }\r\n    return PerformanceBudgetsMonitor.instance;\r\n  }\r\n\r\n  /**\r\n   * Inicializa presupuestos por defecto\r\n   */\r\n  private initializeDefaultBudgets(): void {\r\n    DEFAULT_PERFORMANCE_BUDGETS.forEach(budget => {\r\n      this.budgets.set(budget.id, budget);\r\n    });\r\n\r\n    logger.info(LogCategory.MONITORING, 'Performance budgets initialized', {\r\n      count: this.budgets.size\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Inicia evaluación periódica\r\n   */\r\n  private startPeriodicEvaluation(): void {\r\n    this.evaluationInterval = setInterval(() => {\r\n      this.evaluateAllBudgets();\r\n    }, 60000); // Cada minuto\r\n  }\r\n\r\n  /**\r\n   * Registra una medición de performance\r\n   */\r\n  recordMeasurement(\r\n    budgetId: string,\r\n    value: number,\r\n    context: PerformanceMeasurement['context'] = {},\r\n    metadata?: Record<string, any>\r\n  ): string {\r\n    const budget = this.budgets.get(budgetId);\r\n    if (!budget || !budget.enabled) {\r\n      logger.warn(LogCategory.MONITORING, `Budget not found or disabled: ${budgetId}`);\r\n      return '';\r\n    }\r\n\r\n    const measurementId = `measurement_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n    \r\n    const measurement: PerformanceMeasurement = {\r\n      id: measurementId,\r\n      budgetId,\r\n      value,\r\n      timestamp: Date.now(),\r\n      context,\r\n      metadata\r\n    };\r\n\r\n    // Almacenar medición\r\n    if (!this.measurements.has(budgetId)) {\r\n      this.measurements.set(budgetId, []);\r\n    }\r\n    \r\n    const budgetMeasurements = this.measurements.get(budgetId)!;\r\n    budgetMeasurements.push(measurement);\r\n\r\n    // Mantener solo las últimas 1000 mediciones por presupuesto\r\n    if (budgetMeasurements.length > 1000) {\r\n      budgetMeasurements.splice(0, budgetMeasurements.length - 1000);\r\n    }\r\n\r\n    // Evaluar presupuesto inmediatamente\r\n    this.evaluateBudget(budgetId, measurement);\r\n\r\n    // Persistir en Redis\r\n    this.persistMeasurement(measurement);\r\n\r\n    logger.debug(LogCategory.MONITORING, `Performance measurement recorded`, {\r\n      budgetId,\r\n      value,\r\n      unit: budget.unit\r\n    });\r\n\r\n    return measurementId;\r\n  }\r\n\r\n  /**\r\n   * Evalúa un presupuesto específico\r\n   */\r\n  private async evaluateBudget(budgetId: string, measurement: PerformanceMeasurement): Promise<BudgetEvaluation | null> {\r\n    const budget = this.budgets.get(budgetId);\r\n    if (!budget) {return null;}\r\n\r\n    const evaluation = this.createEvaluation(budget, measurement);\r\n    \r\n    // Generar alerta si es necesario\r\n    if (evaluation.status === 'warning' || evaluation.status === 'critical') {\r\n      await this.createBudgetAlert(evaluation);\r\n    }\r\n\r\n    return evaluation;\r\n  }\r\n\r\n  /**\r\n   * Crea evaluación de presupuesto\r\n   */\r\n  private createEvaluation(budget: PerformanceBudget, measurement: PerformanceMeasurement): BudgetEvaluation {\r\n    let status: 'good' | 'warning' | 'critical';\r\n    let threshold: number;\r\n    let message: string;\r\n\r\n    if (measurement.value <= budget.target) {\r\n      status = 'good';\r\n      threshold = budget.target;\r\n      message = `${budget.name} dentro del objetivo: ${measurement.value}${budget.unit}`;\r\n    } else if (measurement.value <= budget.warning) {\r\n      status = 'warning';\r\n      threshold = budget.warning;\r\n      message = `${budget.name} excede objetivo pero dentro de advertencia: ${measurement.value}${budget.unit}`;\r\n    } else if (measurement.value <= budget.critical) {\r\n      status = 'warning';\r\n      threshold = budget.critical;\r\n      message = `${budget.name} en nivel de advertencia: ${measurement.value}${budget.unit}`;\r\n    } else {\r\n      status = 'critical';\r\n      threshold = budget.critical;\r\n      message = `${budget.name} en nivel crítico: ${measurement.value}${budget.unit}`;\r\n    }\r\n\r\n    const deviation = ((measurement.value - budget.target) / budget.target) * 100;\r\n\r\n    const recommendations = this.generateRecommendations(budget, measurement, status);\r\n\r\n    return {\r\n      budgetId: budget.id,\r\n      measurement,\r\n      status,\r\n      deviation,\r\n      threshold,\r\n      message,\r\n      recommendations\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Genera recomendaciones basadas en la evaluación\r\n   */\r\n  private generateRecommendations(\r\n    budget: PerformanceBudget,\r\n    measurement: PerformanceMeasurement,\r\n    status: 'good' | 'warning' | 'critical'\r\n  ): string[] {\r\n    if (status === 'good') {return [];}\r\n\r\n    const recommendations: string[] = [];\r\n\r\n    switch (budget.metricType) {\r\n      case PerformanceMetricType.LARGEST_CONTENTFUL_PAINT:\r\n        recommendations.push(\r\n          'Optimizar imágenes y usar formatos modernos (WebP, AVIF)',\r\n          'Implementar lazy loading para imágenes',\r\n          'Reducir el tamaño del bundle JavaScript crítico',\r\n          'Usar CDN para recursos estáticos'\r\n        );\r\n        break;\r\n\r\n      case PerformanceMetricType.FIRST_INPUT_DELAY:\r\n        recommendations.push(\r\n          'Reducir el tiempo de ejecución de JavaScript',\r\n          'Dividir tareas largas en chunks más pequeños',\r\n          'Usar Web Workers para procesamiento pesado',\r\n          'Optimizar event listeners'\r\n        );\r\n        break;\r\n\r\n      case PerformanceMetricType.CUMULATIVE_LAYOUT_SHIFT:\r\n        recommendations.push(\r\n          'Especificar dimensiones para imágenes y videos',\r\n          'Reservar espacio para contenido dinámico',\r\n          'Evitar insertar contenido sobre contenido existente',\r\n          'Usar transform en lugar de cambiar propiedades de layout'\r\n        );\r\n        break;\r\n\r\n      case PerformanceMetricType.BUNDLE_SIZE:\r\n        recommendations.push(\r\n          'Implementar code splitting',\r\n          'Remover dependencias no utilizadas',\r\n          'Usar tree shaking',\r\n          'Comprimir assets con gzip/brotli'\r\n        );\r\n        break;\r\n\r\n      case PerformanceMetricType.RESPONSE_TIME:\r\n        recommendations.push(\r\n          'Optimizar consultas de base de datos',\r\n          'Implementar cache en múltiples niveles',\r\n          'Usar connection pooling',\r\n          'Optimizar algoritmos de procesamiento'\r\n        );\r\n        break;\r\n\r\n      case PerformanceMetricType.ERROR_RATE:\r\n        recommendations.push(\r\n          'Revisar logs de errores recientes',\r\n          'Implementar circuit breakers',\r\n          'Mejorar validación de entrada',\r\n          'Aumentar cobertura de tests'\r\n        );\r\n        break;\r\n    }\r\n\r\n    return recommendations;\r\n  }\r\n\r\n  /**\r\n   * Crea alerta de presupuesto\r\n   */\r\n  private async createBudgetAlert(evaluation: BudgetEvaluation): Promise<void> {\r\n    const budget = this.budgets.get(evaluation.budgetId);\r\n    if (!budget) {return;}\r\n\r\n    const severity = evaluation.status === 'critical' ? AlertSeverity.HIGH : AlertSeverity.MEDIUM;\r\n    \r\n    const title = `Presupuesto de Performance Excedido: ${budget.name}`;\r\n    const message = evaluation.message;\r\n    \r\n    const details = {\r\n      budgetId: budget.id,\r\n      metricType: budget.metricType,\r\n      value: evaluation.measurement.value,\r\n      target: budget.target,\r\n      threshold: evaluation.threshold,\r\n      deviation: evaluation.deviation,\r\n      unit: budget.unit,\r\n      context: evaluation.measurement.context,\r\n      recommendations: evaluation.recommendations\r\n    };\r\n\r\n    await advancedAlertingEngine.createAlert(\r\n      AlertType.PERFORMANCE,\r\n      severity,\r\n      title,\r\n      message,\r\n      details,\r\n      'performance-budgets',\r\n      ['performance', 'budget', budget.metricType, ...budget.tags]\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Evalúa todos los presupuestos\r\n   */\r\n  private async evaluateAllBudgets(): Promise<void> {\r\n    const now = Date.now();\r\n    const fiveMinutesAgo = now - (5 * 60 * 1000);\r\n\r\n    for (const [budgetId, budget] of this.budgets) {\r\n      if (!budget.enabled) {continue;}\r\n\r\n      const measurements = this.measurements.get(budgetId) || [];\r\n      const recentMeasurements = measurements.filter(m => m.timestamp > fiveMinutesAgo);\r\n\r\n      if (recentMeasurements.length === 0) {continue;}\r\n\r\n      // Evaluar promedio de mediciones recientes\r\n      const averageValue = recentMeasurements.reduce((sum, m) => sum + m.value, 0) / recentMeasurements.length;\r\n      \r\n      const syntheticMeasurement: PerformanceMeasurement = {\r\n        id: `synthetic_${budgetId}_${now}`,\r\n        budgetId,\r\n        value: averageValue,\r\n        timestamp: now,\r\n        context: { synthetic: true }\r\n      };\r\n\r\n      await this.evaluateBudget(budgetId, syntheticMeasurement);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Genera reporte de presupuestos\r\n   */\r\n  generateReport(periodHours: number = 24): BudgetReport {\r\n    const now = Date.now();\r\n    const periodStart = now - (periodHours * 60 * 60 * 1000);\r\n\r\n    const budgetResults = Array.from(this.budgets.values())\r\n      .filter(budget => budget.enabled)\r\n      .map(budget => {\r\n        const measurements = (this.measurements.get(budget.id) || [])\r\n          .filter(m => m.timestamp >= periodStart);\r\n\r\n        if (measurements.length === 0) {\r\n          return {\r\n            budget,\r\n            measurements: [],\r\n            averageValue: 0,\r\n            status: 'good' as const,\r\n            trend: 'stable' as const,\r\n            violations: 0\r\n          };\r\n        }\r\n\r\n        const averageValue = measurements.reduce((sum, m) => sum + m.value, 0) / measurements.length;\r\n        \r\n        let status: 'good' | 'warning' | 'critical';\r\n        if (averageValue <= budget.target) {\r\n          status = 'good';\r\n        } else if (averageValue <= budget.warning) {\r\n          status = 'warning';\r\n        } else {\r\n          status = 'critical';\r\n        }\r\n\r\n        const violations = measurements.filter(m => m.value > budget.critical).length;\r\n        \r\n        // Calcular tendencia\r\n        const halfPeriod = measurements.length / 2;\r\n        const firstHalf = measurements.slice(0, halfPeriod);\r\n        const secondHalf = measurements.slice(halfPeriod);\r\n        \r\n        const firstAvg = firstHalf.reduce((sum, m) => sum + m.value, 0) / firstHalf.length;\r\n        const secondAvg = secondHalf.reduce((sum, m) => sum + m.value, 0) / secondHalf.length;\r\n        \r\n        let trend: 'improving' | 'stable' | 'degrading';\r\n        const change = ((secondAvg - firstAvg) / firstAvg) * 100;\r\n        \r\n        if (change < -5) {\r\n          trend = 'improving';\r\n        } else if (change > 5) {\r\n          trend = 'degrading';\r\n        } else {\r\n          trend = 'stable';\r\n        }\r\n\r\n        return {\r\n          budget,\r\n          measurements,\r\n          averageValue,\r\n          status,\r\n          trend,\r\n          violations\r\n        };\r\n      });\r\n\r\n    const totalBudgets = budgetResults.length;\r\n    const passingBudgets = budgetResults.filter(r => r.status === 'good').length;\r\n    const warningBudgets = budgetResults.filter(r => r.status === 'warning').length;\r\n    const failingBudgets = budgetResults.filter(r => r.status === 'critical').length;\r\n    \r\n    const overallScore = totalBudgets > 0 ? Math.round((passingBudgets / totalBudgets) * 100) : 100;\r\n\r\n    const recommendations = this.generateReportRecommendations(budgetResults);\r\n\r\n    return {\r\n      period: {\r\n        start: periodStart,\r\n        end: now\r\n      },\r\n      summary: {\r\n        totalBudgets,\r\n        passingBudgets,\r\n        warningBudgets,\r\n        failingBudgets,\r\n        overallScore\r\n      },\r\n      budgetResults,\r\n      recommendations\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Genera recomendaciones para el reporte\r\n   */\r\n  private generateReportRecommendations(budgetResults: BudgetReport['budgetResults']): string[] {\r\n    const recommendations: string[] = [];\r\n    \r\n    const failingBudgets = budgetResults.filter(r => r.status === 'critical');\r\n    const degradingBudgets = budgetResults.filter(r => r.trend === 'degrading');\r\n\r\n    if (failingBudgets.length > 0) {\r\n      recommendations.push(`${failingBudgets.length} presupuestos están en estado crítico y requieren atención inmediata`);\r\n    }\r\n\r\n    if (degradingBudgets.length > 0) {\r\n      recommendations.push(`${degradingBudgets.length} presupuestos muestran tendencia de degradación`);\r\n    }\r\n\r\n    const highViolationBudgets = budgetResults.filter(r => r.violations > 10);\r\n    if (highViolationBudgets.length > 0) {\r\n      recommendations.push('Revisar presupuestos con alta frecuencia de violaciones');\r\n    }\r\n\r\n    if (budgetResults.some(r => r.budget.metricType === PerformanceMetricType.BUNDLE_SIZE && r.status !== 'good')) {\r\n      recommendations.push('Implementar estrategias de optimización de bundle size');\r\n    }\r\n\r\n    if (budgetResults.some(r => r.budget.metricType === PerformanceMetricType.LARGEST_CONTENTFUL_PAINT && r.status !== 'good')) {\r\n      recommendations.push('Optimizar Core Web Vitals para mejorar experiencia de usuario');\r\n    }\r\n\r\n    return recommendations;\r\n  }\r\n\r\n  /**\r\n   * Obtiene presupuestos activos\r\n   */\r\n  getActiveBudgets(): PerformanceBudget[] {\r\n    return Array.from(this.budgets.values()).filter(budget => budget.enabled);\r\n  }\r\n\r\n  /**\r\n   * Obtiene mediciones recientes\r\n   */\r\n  getRecentMeasurements(budgetId: string, hours: number = 1): PerformanceMeasurement[] {\r\n    const measurements = this.measurements.get(budgetId) || [];\r\n    const cutoff = Date.now() - (hours * 60 * 60 * 1000);\r\n    return measurements.filter(m => m.timestamp >= cutoff);\r\n  }\r\n\r\n  /**\r\n   * Agrega presupuesto personalizado\r\n   */\r\n  addBudget(budget: Omit<PerformanceBudget, 'id' | 'createdAt' | 'updatedAt'>): string {\r\n    const id = `custom_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n    const now = Date.now();\r\n    \r\n    const fullBudget: PerformanceBudget = {\r\n      ...budget,\r\n      id,\r\n      createdAt: now,\r\n      updatedAt: now\r\n    };\r\n\r\n    this.budgets.set(id, fullBudget);\r\n    \r\n    logger.info(LogCategory.MONITORING, `Custom performance budget added: ${budget.name}`, { id });\r\n    \r\n    return id;\r\n  }\r\n\r\n  /**\r\n   * Actualiza presupuesto\r\n   */\r\n  updateBudget(id: string, updates: Partial<PerformanceBudget>): boolean {\r\n    const budget = this.budgets.get(id);\r\n    if (!budget) {return false;}\r\n\r\n    const updatedBudget = {\r\n      ...budget,\r\n      ...updates,\r\n      id, // Mantener ID original\r\n      updatedAt: Date.now()\r\n    };\r\n\r\n    this.budgets.set(id, updatedBudget);\r\n    \r\n    logger.info(LogCategory.MONITORING, `Performance budget updated: ${id}`);\r\n    \r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Elimina presupuesto\r\n   */\r\n  removeBudget(id: string): boolean {\r\n    const deleted = this.budgets.delete(id);\r\n    if (deleted) {\r\n      this.measurements.delete(id);\r\n      logger.info(LogCategory.MONITORING, `Performance budget removed: ${id}`);\r\n    }\r\n    return deleted;\r\n  }\r\n\r\n  /**\r\n   * Persiste medición en Redis\r\n   */\r\n  private async persistMeasurement(measurement: PerformanceMeasurement): Promise<void> {\r\n    try {\r\n      await this.redis.setex(\r\n        `measurement:${measurement.id}`,\r\n        86400 * 7, // 7 días\r\n        JSON.stringify(measurement)\r\n      );\r\n    } catch (error) {\r\n      logger.error(LogCategory.MONITORING, 'Error persisting measurement', error as Error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Destructor\r\n   */\r\n  destroy(): void {\r\n    if (this.evaluationInterval) {\r\n      clearInterval(this.evaluationInterval);\r\n    }\r\n  }\r\n}\r\n\r\n// Instancia singleton\r\nexport const performanceBudgetsMonitor = PerformanceBudgetsMonitor.getInstance();\r\n\r\n/**\r\n * Utilidades para presupuestos de performance\r\n */\r\nexport const PerformanceBudgetUtils = {\r\n  /**\r\n   * Registra Core Web Vitals\r\n   */\r\n  recordWebVitals(vitals: {\r\n    lcp?: number;\r\n    fid?: number;\r\n    cls?: number;\r\n    fcp?: number;\r\n    ttfb?: number;\r\n    inp?: number;\r\n  }, context: PerformanceMeasurement['context'] = {}): void {\r\n    if (vitals.lcp) {\r\n      const budgetId = context.device === 'mobile' ? 'lcp_mobile' : 'lcp_desktop';\r\n      performanceBudgetsMonitor.recordMeasurement(budgetId, vitals.lcp, context);\r\n    }\r\n\r\n    if (vitals.fid) {\r\n      performanceBudgetsMonitor.recordMeasurement('fid_global', vitals.fid, context);\r\n    }\r\n\r\n    if (vitals.cls) {\r\n      performanceBudgetsMonitor.recordMeasurement('cls_global', vitals.cls, context);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Registra métricas de API\r\n   */\r\n  recordAPIMetrics(responseTime: number, context: PerformanceMeasurement['context'] = {}): void {\r\n    performanceBudgetsMonitor.recordMeasurement('api_response_time', responseTime, context);\r\n  },\r\n\r\n  /**\r\n   * Registra tasa de errores\r\n   */\r\n  recordErrorRate(errorRate: number, context: PerformanceMeasurement['context'] = {}): void {\r\n    performanceBudgetsMonitor.recordMeasurement('error_rate', errorRate, context);\r\n  },\r\n\r\n  /**\r\n   * Registra tamaño de bundle\r\n   */\r\n  recordBundleSize(size: number, context: PerformanceMeasurement['context'] = {}): void {\r\n    performanceBudgetsMonitor.recordMeasurement('bundle_size_js', size, context);\r\n  },\r\n\r\n  /**\r\n   * Obtiene estado general de presupuestos\r\n   */\r\n  getBudgetStatus(): {\r\n    totalBudgets: number;\r\n    passingBudgets: number;\r\n    overallScore: number;\r\n    criticalBudgets: string[];\r\n  } {\r\n    const report = performanceBudgetsMonitor.generateReport(1); // Última hora\r\n    \r\n    return {\r\n      totalBudgets: report.summary.totalBudgets,\r\n      passingBudgets: report.summary.passingBudgets,\r\n      overallScore: report.summary.overallScore,\r\n      criticalBudgets: report.budgetResults\r\n        .filter(r => r.status === 'critical')\r\n        .map(r => r.budget.name)\r\n    };\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}