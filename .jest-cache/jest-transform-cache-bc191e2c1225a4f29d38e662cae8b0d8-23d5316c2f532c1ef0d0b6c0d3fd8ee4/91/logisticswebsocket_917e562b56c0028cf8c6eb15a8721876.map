{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\websockets\\logistics-websocket.ts"],"sourcesContent":["// =====================================================\n// WEBSOCKET: LOGISTICS REAL-TIME SYSTEM\n// Descripci√≥n: Sistema WebSocket para tracking tiempo real\n// Basado en: WebSocket API + React Context + Event Emitter\n// =====================================================\n\nimport { EventEmitter } from 'events'\n\n// =====================================================\n// INTERFACES\n// =====================================================\n\nexport interface WebSocketMessage {\n  type: 'tracking_update' | 'shipment_status' | 'alert' | 'geofence_event' | 'route_update'\n  data: any\n  timestamp: string\n  shipment_id?: number\n  user_id?: string\n}\n\nexport interface TrackingUpdate {\n  shipment_id: number\n  location: {\n    latitude: number\n    longitude: number\n    address?: string\n  }\n  status: string\n  timestamp: string\n  courier_id?: number\n  estimated_arrival?: string\n}\n\nexport interface GeofenceEvent {\n  shipment_id: number\n  zone_id: string\n  zone_name: string\n  event_type: 'enter' | 'exit'\n  location: {\n    latitude: number\n    longitude: number\n  }\n  timestamp: string\n}\n\nexport interface LogisticsAlert {\n  id: string\n  type: 'delay' | 'exception' | 'delivery_attempt' | 'route_deviation'\n  severity: 'low' | 'medium' | 'high' | 'critical'\n  shipment_id: number\n  message: string\n  timestamp: string\n  auto_resolve: boolean\n}\n\n// =====================================================\n// WEBSOCKET CLIENT CLASS\n// =====================================================\n\nexport class LogisticsWebSocketClient extends EventEmitter {\n  private ws: WebSocket | null = null\n  private url: string\n  private reconnectAttempts = 0\n  private maxReconnectAttempts = 5\n  private reconnectDelay = 1000\n  private heartbeatInterval: NodeJS.Timeout | null = null\n  private isConnected = false\n  private subscriptions = new Set<string>()\n\n  constructor(url: string) {\n    super()\n    this.url = url\n  }\n\n  // =====================================================\n  // CONEXI√ìN Y RECONEXI√ìN\n  // =====================================================\n\n  connect(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      try {\n        this.ws = new WebSocket(this.url)\n\n        this.ws.onopen = () => {\n          console.log('üîó WebSocket conectado')\n          this.isConnected = true\n          this.reconnectAttempts = 0\n          this.startHeartbeat()\n          this.resubscribe()\n          this.emit('connected')\n          resolve()\n        }\n\n        this.ws.onmessage = event => {\n          try {\n            const message: WebSocketMessage = JSON.parse(event.data)\n            this.handleMessage(message)\n          } catch (error) {\n            console.error('‚ùå Error parsing WebSocket message:', error)\n          }\n        }\n\n        this.ws.onclose = event => {\n          console.log('üîå WebSocket desconectado:', event.code, event.reason)\n          this.isConnected = false\n          this.stopHeartbeat()\n          this.emit('disconnected', event)\n\n          if (!event.wasClean && this.reconnectAttempts < this.maxReconnectAttempts) {\n            this.scheduleReconnect()\n          }\n        }\n\n        this.ws.onerror = error => {\n          console.error('‚ùå WebSocket error:', error)\n          this.emit('error', error)\n          reject(error)\n        }\n      } catch (error) {\n        reject(error)\n      }\n    })\n  }\n\n  private scheduleReconnect(): void {\n    const delay = this.reconnectDelay * Math.pow(2, this.reconnectAttempts)\n    console.log(\n      `üîÑ Reconectando en ${delay}ms (intento ${this.reconnectAttempts + 1}/${this.maxReconnectAttempts})`\n    )\n\n    setTimeout(() => {\n      this.reconnectAttempts++\n      this.connect().catch(() => {\n        if (this.reconnectAttempts >= this.maxReconnectAttempts) {\n          console.error('‚ùå M√°ximo de intentos de reconexi√≥n alcanzado')\n          this.emit('max_reconnect_attempts')\n        }\n      })\n    }, delay)\n  }\n\n  disconnect(): void {\n    if (this.ws) {\n      this.ws.close(1000, 'Client disconnect')\n      this.ws = null\n    }\n    this.stopHeartbeat()\n    this.isConnected = false\n  }\n\n  // =====================================================\n  // HEARTBEAT\n  // =====================================================\n\n  private startHeartbeat(): void {\n    this.heartbeatInterval = setInterval(() => {\n      if (this.isConnected && this.ws?.readyState === WebSocket.OPEN) {\n        this.send({\n          type: 'ping',\n          data: {},\n          timestamp: new Date().toISOString(),\n        })\n      }\n    }, 30000) // 30 segundos\n  }\n\n  private stopHeartbeat(): void {\n    if (this.heartbeatInterval) {\n      clearInterval(this.heartbeatInterval)\n      this.heartbeatInterval = null\n    }\n  }\n\n  // =====================================================\n  // ENV√çO DE MENSAJES\n  // =====================================================\n\n  private send(message: WebSocketMessage): void {\n    if (this.ws?.readyState === WebSocket.OPEN) {\n      this.ws.send(JSON.stringify(message))\n    } else {\n      console.warn('‚ö†Ô∏è WebSocket no est√° conectado, mensaje no enviado:', message)\n    }\n  }\n\n  // =====================================================\n  // SUSCRIPCIONES\n  // =====================================================\n\n  subscribeToShipment(shipmentId: number): void {\n    const subscription = `shipment:${shipmentId}`\n    this.subscriptions.add(subscription)\n\n    this.send({\n      type: 'subscribe',\n      data: { subscription },\n      timestamp: new Date().toISOString(),\n    })\n  }\n\n  unsubscribeFromShipment(shipmentId: number): void {\n    const subscription = `shipment:${shipmentId}`\n    this.subscriptions.delete(subscription)\n\n    this.send({\n      type: 'unsubscribe',\n      data: { subscription },\n      timestamp: new Date().toISOString(),\n    })\n  }\n\n  subscribeToGeofence(zoneId: string): void {\n    const subscription = `geofence:${zoneId}`\n    this.subscriptions.add(subscription)\n\n    this.send({\n      type: 'subscribe',\n      data: { subscription },\n      timestamp: new Date().toISOString(),\n    })\n  }\n\n  subscribeToAlerts(): void {\n    const subscription = 'alerts:all'\n    this.subscriptions.add(subscription)\n\n    this.send({\n      type: 'subscribe',\n      data: { subscription },\n      timestamp: new Date().toISOString(),\n    })\n  }\n\n  private resubscribe(): void {\n    this.subscriptions.forEach(subscription => {\n      this.send({\n        type: 'subscribe',\n        data: { subscription },\n        timestamp: new Date().toISOString(),\n      })\n    })\n  }\n\n  // =====================================================\n  // MANEJO DE MENSAJES\n  // =====================================================\n\n  private handleMessage(message: WebSocketMessage): void {\n    console.log('üì® WebSocket message received:', message.type)\n\n    switch (message.type) {\n      case 'tracking_update':\n        this.handleTrackingUpdate(message.data as TrackingUpdate)\n        break\n\n      case 'shipment_status':\n        this.handleShipmentStatus(message.data)\n        break\n\n      case 'alert':\n        this.handleAlert(message.data as LogisticsAlert)\n        break\n\n      case 'geofence_event':\n        this.handleGeofenceEvent(message.data as GeofenceEvent)\n        break\n\n      case 'route_update':\n        this.handleRouteUpdate(message.data)\n        break\n\n      default:\n        console.log('ü§∑ Unknown message type:', message.type)\n    }\n\n    // Emitir evento gen√©rico\n    this.emit('message', message)\n  }\n\n  private handleTrackingUpdate(update: TrackingUpdate): void {\n    console.log('üìç Tracking update:', update)\n    this.emit('tracking_update', update)\n  }\n\n  private handleShipmentStatus(data: any): void {\n    console.log('üì¶ Shipment status update:', data)\n    this.emit('shipment_status', data)\n  }\n\n  private handleAlert(alert: LogisticsAlert): void {\n    console.log('üö® Alert received:', alert)\n    this.emit('alert', alert)\n\n    // Mostrar notificaci√≥n del navegador si est√° permitido (DESHABILITADO EN DESARROLLO)\n    if (\n      'Notification' in window &&\n      Notification.permission === 'granted' &&\n      process.env.NODE_ENV === 'production'\n    ) {\n      new Notification(`Alerta de Log√≠stica - ${alert.type}`, {\n        body: alert.message,\n        icon: '/favicon.ico',\n        tag: alert.id,\n      })\n    }\n  }\n\n  private handleGeofenceEvent(event: GeofenceEvent): void {\n    console.log('üó∫Ô∏è Geofence event:', event)\n    this.emit('geofence_event', event)\n  }\n\n  private handleRouteUpdate(data: any): void {\n    console.log('üõ£Ô∏è Route update:', data)\n    this.emit('route_update', data)\n  }\n\n  // =====================================================\n  // UTILIDADES\n  // =====================================================\n\n  getConnectionState(): 'connecting' | 'connected' | 'disconnected' | 'error' {\n    if (!this.ws) {\n      return 'disconnected'\n    }\n\n    switch (this.ws.readyState) {\n      case WebSocket.CONNECTING:\n        return 'connecting'\n      case WebSocket.OPEN:\n        return 'connected'\n      case WebSocket.CLOSING:\n      case WebSocket.CLOSED:\n        return 'disconnected'\n      default:\n        return 'error'\n    }\n  }\n\n  isReady(): boolean {\n    return this.isConnected && this.ws?.readyState === WebSocket.OPEN\n  }\n\n  getSubscriptions(): string[] {\n    return Array.from(this.subscriptions)\n  }\n}\n\n// =====================================================\n// INSTANCIA SINGLETON\n// =====================================================\n\nlet logisticsWS: LogisticsWebSocketClient | null = null\n\nexport function getLogisticsWebSocket(): LogisticsWebSocketClient {\n  if (!logisticsWS) {\n    // En desarrollo usar WebSocket local, en producci√≥n usar WSS\n    const wsUrl =\n      process.env.NODE_ENV === 'development'\n        ? 'ws://localhost:3001/logistics'\n        : 'wss://api.pinteya.com/logistics'\n\n    logisticsWS = new LogisticsWebSocketClient(wsUrl)\n  }\n\n  return logisticsWS\n}\n\n// =====================================================\n// SIMULADOR PARA DESARROLLO\n// =====================================================\n\nexport class LogisticsWebSocketSimulator extends EventEmitter {\n  private intervals: NodeJS.Timeout[] = []\n  private isRunning = false\n\n  start(): void {\n    if (this.isRunning) {\n      return\n    }\n\n    this.isRunning = true\n    console.log('üé≠ Iniciando simulador WebSocket')\n\n    // Simular actualizaciones de tracking cada 10 segundos\n    const trackingInterval = setInterval(() => {\n      this.simulateTrackingUpdate()\n    }, 10000)\n\n    // Simular alertas cada 30 segundos\n    const alertInterval = setInterval(() => {\n      this.simulateAlert()\n    }, 30000)\n\n    // Simular eventos de geofence cada 45 segundos\n    const geofenceInterval = setInterval(() => {\n      this.simulateGeofenceEvent()\n    }, 45000)\n\n    this.intervals.push(trackingInterval, alertInterval, geofenceInterval)\n  }\n\n  stop(): void {\n    this.intervals.forEach(interval => clearInterval(interval))\n    this.intervals = []\n    this.isRunning = false\n    console.log('üõë Simulador WebSocket detenido')\n  }\n\n  private simulateTrackingUpdate(): void {\n    const update: TrackingUpdate = {\n      shipment_id: Math.floor(Math.random() * 100) + 1,\n      location: {\n        latitude: -34.6037 + (Math.random() - 0.5) * 0.1,\n        longitude: -58.3816 + (Math.random() - 0.5) * 0.1,\n        address: 'Av. Corrientes 1234, CABA',\n      },\n      status: ['in_transit', 'out_for_delivery'][Math.floor(Math.random() * 2)],\n      timestamp: new Date().toISOString(),\n      courier_id: Math.floor(Math.random() * 4) + 1,\n      estimated_arrival: new Date(Date.now() + 3600000).toISOString(),\n    }\n\n    this.emit('tracking_update', update)\n  }\n\n  private simulateAlert(): void {\n    const alerts = [\n      { type: 'delay', message: 'Retraso en la entrega debido al tr√°fico' },\n      { type: 'exception', message: 'Direcci√≥n incorrecta, contactar cliente' },\n      { type: 'delivery_attempt', message: 'Primer intento de entrega fallido' },\n    ]\n\n    const randomAlert = alerts[Math.floor(Math.random() * alerts.length)]\n\n    const alert: LogisticsAlert = {\n      id: `alert_${Date.now()}`,\n      type: randomAlert.type as any,\n      severity: ['low', 'medium', 'high'][Math.floor(Math.random() * 3)] as any,\n      shipment_id: Math.floor(Math.random() * 100) + 1,\n      message: randomAlert.message,\n      timestamp: new Date().toISOString(),\n      auto_resolve: Math.random() > 0.5,\n    }\n\n    this.emit('alert', alert)\n  }\n\n  private simulateGeofenceEvent(): void {\n    const event: GeofenceEvent = {\n      shipment_id: Math.floor(Math.random() * 100) + 1,\n      zone_id: ['caba', 'gba_norte'][Math.floor(Math.random() * 2)],\n      zone_name: ['CABA - Zona Prioritaria', 'GBA Norte - Zona de Entrega'][\n        Math.floor(Math.random() * 2)\n      ],\n      event_type: ['enter', 'exit'][Math.floor(Math.random() * 2)] as any,\n      location: {\n        latitude: -34.6037 + (Math.random() - 0.5) * 0.1,\n        longitude: -58.3816 + (Math.random() - 0.5) * 0.1,\n      },\n      timestamp: new Date().toISOString(),\n    }\n\n    this.emit('geofence_event', event)\n  }\n}\n"],"names":["LogisticsWebSocketClient","LogisticsWebSocketSimulator","getLogisticsWebSocket","EventEmitter","url","ws","reconnectAttempts","maxReconnectAttempts","reconnectDelay","heartbeatInterval","isConnected","subscriptions","Set","connect","Promise","resolve","reject","WebSocket","onopen","console","log","startHeartbeat","resubscribe","emit","onmessage","event","message","JSON","parse","data","handleMessage","error","onclose","code","reason","stopHeartbeat","wasClean","scheduleReconnect","onerror","delay","Math","pow","setTimeout","catch","disconnect","close","setInterval","readyState","OPEN","send","type","timestamp","Date","toISOString","clearInterval","stringify","warn","subscribeToShipment","shipmentId","subscription","add","unsubscribeFromShipment","delete","subscribeToGeofence","zoneId","subscribeToAlerts","forEach","handleTrackingUpdate","handleShipmentStatus","handleAlert","handleGeofenceEvent","handleRouteUpdate","update","alert","window","Notification","permission","process","env","NODE_ENV","body","icon","tag","id","getConnectionState","CONNECTING","CLOSING","CLOSED","isReady","getSubscriptions","Array","from","logisticsWS","wsUrl","start","isRunning","trackingInterval","simulateTrackingUpdate","alertInterval","simulateAlert","geofenceInterval","simulateGeofenceEvent","intervals","push","stop","interval","shipment_id","floor","random","location","latitude","longitude","address","status","courier_id","estimated_arrival","now","alerts","randomAlert","length","severity","auto_resolve","zone_id","zone_name","event_type"],"mappings":"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"}