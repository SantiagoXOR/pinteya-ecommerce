{"version":3,"names":["addItemToCart","cov_s39iqyfkl","f","s","cart","default","_default","hydrateCart","removeAllItemsFromCart","removeItemFromCart","replaceCart","selectCartItems","selectTotalPrice","updateCartItemQuantity","getInitialState","window","b","items","persistedItems","_cartPersistence","loadCartFromStorage","error","console","warn","initialState","_toolkit","createSlice","name","reducers","state","action","id","title","price","quantity","discountedPrice","imgs","payload","existingItem","find","item","push","itemId","filter","cartReducer","createSelector","reduce","total","actions","reducer"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\redux\\features\\cart-slice.ts"],"sourcesContent":["import { createSelector, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../store\";\r\nimport { loadCartFromStorage } from \"../middleware/cartPersistence\";\r\n\r\ntype InitialState = {\r\n  items: CartItem[];\r\n};\r\n\r\ntype CartItem = {\r\n  id: number;\r\n  title: string;\r\n  price: number;\r\n  discountedPrice: number;\r\n  quantity: number;\r\n  imgs?: {\r\n    thumbnails: string[];\r\n    previews: string[];\r\n  };\r\n};\r\n\r\n// Función para obtener el estado inicial con persistencia\r\nconst getInitialState = (): InitialState => {\r\n  // En el servidor, siempre retornar estado vacío\r\n  if (typeof window === 'undefined') {\r\n    return { items: [] };\r\n  }\r\n\r\n  // En el cliente, intentar cargar desde localStorage\r\n  try {\r\n    const persistedItems = loadCartFromStorage();\r\n    return { items: persistedItems };\r\n  } catch (error) {\r\n    console.warn('Error loading persisted cart:', error);\r\n    return { items: [] };\r\n  }\r\n};\r\n\r\nconst initialState: InitialState = getInitialState();\r\n\r\nexport const cart = createSlice({\r\n  name: \"cart\",\r\n  initialState,\r\n  reducers: {\r\n    addItemToCart: (state, action: PayloadAction<CartItem>) => {\r\n      const { id, title, price, quantity, discountedPrice, imgs } =\r\n        action.payload;\r\n      const existingItem = state.items.find((item) => item.id === id);\r\n\r\n      if (existingItem) {\r\n        existingItem.quantity += quantity;\r\n      } else {\r\n        state.items.push({\r\n          id,\r\n          title,\r\n          price,\r\n          quantity,\r\n          discountedPrice,\r\n          imgs,\r\n        });\r\n      }\r\n    },\r\n    removeItemFromCart: (state, action: PayloadAction<number>) => {\r\n      const itemId = action.payload;\r\n      state.items = state.items.filter((item) => item.id !== itemId);\r\n    },\r\n    updateCartItemQuantity: (\r\n      state,\r\n      action: PayloadAction<{ id: number; quantity: number }>\r\n    ) => {\r\n      const { id, quantity } = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === id);\r\n\r\n      if (existingItem) {\r\n        existingItem.quantity = quantity;\r\n      }\r\n    },\r\n\r\n    removeAllItemsFromCart: (state) => {\r\n      state.items = [];\r\n    },\r\n\r\n    // Acción para hidratar el carrito desde localStorage\r\n    hydrateCart: (state, action: PayloadAction<CartItem[]>) => {\r\n      state.items = action.payload;\r\n    },\r\n\r\n    // Acción para reemplazar todo el carrito (útil para migración de usuarios)\r\n    replaceCart: (state, action: PayloadAction<CartItem[]>) => {\r\n      state.items = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const selectCartItems = (state: RootState) => state.cartReducer.items;\r\n\r\nexport const selectTotalPrice = createSelector([selectCartItems], (items) => {\r\n  return items.reduce((total: number, item: CartItem) => {\r\n    return total + item.discountedPrice * item.quantity;\r\n  }, 0);\r\n});\r\n\r\nexport const {\r\n  addItemToCart,\r\n  removeItemFromCart,\r\n  updateCartItemQuantity,\r\n  removeAllItemsFromCart,\r\n  hydrateCart,\r\n  replaceCart,\r\n} = cart.actions;\r\nexport default cart.reducer;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}