221a89c88eecd79063ce287066e90660
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_20w5jdwup4() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\debug\\simple-products\\route.ts";
  var hash = "6aa8dfde9884187d58c442ce5f5cf19c8f27187c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\debug\\simple-products\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 23
        }
      },
      "6": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 38
        }
      },
      "7": {
        start: {
          line: 21,
          column: 20
        },
        end: {
          line: 21,
          column: 52
        }
      },
      "8": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 24
        }
      },
      "9": {
        start: {
          line: 23,
          column: 20
        },
        end: {
          line: 23,
          column: 56
        }
      },
      "10": {
        start: {
          line: 24,
          column: 27
        },
        end: {
          line: 24,
          column: 64
        }
      },
      "11": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 106,
          column: 5
        }
      },
      "12": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 61
        }
      },
      "13": {
        start: {
          line: 29,
          column: 25
        },
        end: {
          line: 29,
          column: 87
        }
      },
      "14": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 73
        }
      },
      "15": {
        start: {
          line: 32,
          column: 49
        },
        end: {
          line: 48,
          column: 20
        }
      },
      "16": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 53,
          column: 11
        }
      },
      "17": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 65,
          column: 9
        }
      },
      "18": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 66
        }
      },
      "19": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 64,
          column: 15
        }
      },
      "20": {
        start: {
          line: 67,
          column: 36
        },
        end: {
          line: 71,
          column: 21
        }
      },
      "21": {
        start: {
          line: 67,
          column: 62
        },
        end: {
          line: 71,
          column: 13
        }
      },
      "22": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 75,
          column: 11
        }
      },
      "23": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 92,
          column: 11
        }
      },
      "24": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 94,
          column: 72
        }
      },
      "25": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 105,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 19
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "GET",
        decl: {
          start: {
            line: 25,
            column: 15
          },
          end: {
            line: 25,
            column: 18
          }
        },
        loc: {
          start: {
            line: 25,
            column: 28
          },
          end: {
            line: 107,
            column: 1
          }
        },
        line: 25
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 67,
            column: 50
          },
          end: {
            line: 67,
            column: 51
          }
        },
        loc: {
          start: {
            line: 67,
            column: 62
          },
          end: {
            line: 71,
            column: 13
          }
        },
        line: 67
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 65,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 65,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "1": {
        loc: {
          start: {
            line: 67,
            column: 36
          },
          end: {
            line: 71,
            column: 21
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 36
          },
          end: {
            line: 71,
            column: 15
          }
        }, {
          start: {
            line: 71,
            column: 19
          },
          end: {
            line: 71,
            column: 21
          }
        }],
        line: 67
      },
      "2": {
        loc: {
          start: {
            line: 69,
            column: 31
          },
          end: {
            line: 69,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 69,
            column: 31
          },
          end: {
            line: 69,
            column: 55
          }
        }, {
          start: {
            line: 69,
            column: 59
          },
          end: {
            line: 69,
            column: 63
          }
        }],
        line: 69
      },
      "3": {
        loc: {
          start: {
            line: 80,
            column: 23
          },
          end: {
            line: 80,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 80,
            column: 23
          },
          end: {
            line: 80,
            column: 28
          }
        }, {
          start: {
            line: 80,
            column: 32
          },
          end: {
            line: 80,
            column: 33
          }
        }],
        line: 80
      },
      "4": {
        loc: {
          start: {
            line: 84,
            column: 30
          },
          end: {
            line: 84,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 84,
            column: 30
          },
          end: {
            line: 84,
            column: 35
          }
        }, {
          start: {
            line: 84,
            column: 39
          },
          end: {
            line: 84,
            column: 40
          }
        }],
        line: 84
      },
      "5": {
        loc: {
          start: {
            line: 97,
            column: 19
          },
          end: {
            line: 97,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 97,
            column: 44
          },
          end: {
            line: 97,
            column: 57
          }
        }, {
          start: {
            line: 97,
            column: 60
          },
          end: {
            line: 97,
            column: 79
          }
        }],
        line: 97
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\debug\\simple-products\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { createClient } from '@supabase/supabase-js';\r\n\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;\r\nconst supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY!;\r\n\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    console.log('\uD83D\uDD0D Debug Simple Products: Starting...');\r\n\r\n    // Crear cliente Supabase con service key (sin autenticaci\xF3n)\r\n    const supabase = createClient(supabaseUrl, supabaseServiceKey);\r\n\r\n    console.log('\uD83D\uDD0D Debug Simple Products: Supabase client created');\r\n\r\n    // Consulta simple de productos\r\n    const { data: products, error, count } = await supabase\r\n      .from('products')\r\n      .select(`\r\n        id,\r\n        name,\r\n        description,\r\n        price,\r\n        stock,\r\n        category_id,\r\n        images,\r\n        created_at,\r\n        updated_at,\r\n        categories (\r\n          id,\r\n          name\r\n        )\r\n      `, { count: 'exact' })\r\n      .limit(10);\r\n\r\n    console.log('\uD83D\uDD0D Debug Simple Products: Query executed', {\r\n      error: error?.message,\r\n      count,\r\n      productsLength: products?.length\r\n    });\r\n\r\n    if (error) {\r\n      console.error('\u274C Error en consulta Supabase:', error);\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: error.message,\r\n        code: error.code,\r\n        details: error.details,\r\n        hint: error.hint\r\n      }, { status: 500 });\r\n    }\r\n\r\n    // Transformar productos\r\n    const transformedProducts = products?.map(product => ({\r\n      ...product,\r\n      category_name: product.categories?.name || null,\r\n      categories: undefined,\r\n    })) || [];\r\n\r\n    console.log('\u2705 Debug Simple Products: Success', {\r\n      total: count,\r\n      returned: transformedProducts.length\r\n    });\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: {\r\n        products: transformedProducts,\r\n        total: count || 0,\r\n        pagination: {\r\n          limit: 10,\r\n          offset: 0,\r\n          hasMore: (count || 0) > 10\r\n        }\r\n      },\r\n      debug: {\r\n        timestamp: new Date().toISOString(),\r\n        method: 'simple_supabase_query',\r\n        auth: 'service_key'\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('\u274C Error fatal en debug simple products:', error);\r\n    return NextResponse.json({\r\n      success: false,\r\n      error: error instanceof Error ? error.message : 'Error desconocido',\r\n      debug: {\r\n        timestamp: new Date().toISOString(),\r\n        method: 'simple_supabase_query',\r\n        auth: 'service_key'\r\n      }\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "runtime", "supabaseUrl", "process", "env", "NEXT_PUBLIC_SUPABASE_URL", "supabaseServiceKey", "SUPABASE_SERVICE_ROLE_KEY", "request", "console", "log", "supabase", "createClient", "data", "products", "error", "count", "from", "select", "limit", "message", "productsLength", "length", "NextResponse", "json", "success", "code", "details", "hint", "status", "transformedProducts", "map", "product", "category_name", "categories", "name", "undefined", "total", "returned", "pagination", "offset", "hasMore", "debug", "timestamp", "Date", "toISOString", "method", "auth", "Error"],
      mappings: "AAAA,qCAAqC;;;;;;;;;;;;QASfA;eAAAA;;QARTC;eAAAA;;;wBAE6B;4BACb;AAHtB,MAAMA,UAAU;AAKvB,MAAMC,cAAcC,QAAQC,GAAG,CAACC,wBAAwB;AACxD,MAAMC,qBAAqBH,QAAQC,GAAG,CAACG,yBAAyB;AAEzD,eAAeP,IAAIQ,OAAoB;IAC5C,IAAI;QACFC,QAAQC,GAAG,CAAC;QAEZ,6DAA6D;QAC7D,MAAMC,WAAWC,IAAAA,wBAAY,EAACV,aAAaI;QAE3CG,QAAQC,GAAG,CAAC;QAEZ,+BAA+B;QAC/B,MAAM,EAAEG,MAAMC,QAAQ,EAAEC,KAAK,EAAEC,KAAK,EAAE,GAAG,MAAML,SAC5CM,IAAI,CAAC,YACLC,MAAM,CAAC,CAAC;;;;;;;;;;;;;;MAcT,CAAC,EAAE;YAAEF,OAAO;QAAQ,GACnBG,KAAK,CAAC;QAETV,QAAQC,GAAG,CAAC,4CAA4C;YACtDK,OAAOA,OAAOK;YACdJ;YACAK,gBAAgBP,UAAUQ;QAC5B;QAEA,IAAIP,OAAO;YACTN,QAAQM,KAAK,CAAC,iCAAiCA;YAC/C,OAAOQ,oBAAY,CAACC,IAAI,CAAC;gBACvBC,SAAS;gBACTV,OAAOA,MAAMK,OAAO;gBACpBM,MAAMX,MAAMW,IAAI;gBAChBC,SAASZ,MAAMY,OAAO;gBACtBC,MAAMb,MAAMa,IAAI;YAClB,GAAG;gBAAEC,QAAQ;YAAI;QACnB;QAEA,wBAAwB;QACxB,MAAMC,sBAAsBhB,UAAUiB,IAAIC,CAAAA,UAAY,CAAA;gBACpD,GAAGA,OAAO;gBACVC,eAAeD,QAAQE,UAAU,EAAEC,QAAQ;gBAC3CD,YAAYE;YACd,CAAA,MAAO,EAAE;QAET3B,QAAQC,GAAG,CAAC,oCAAoC;YAC9C2B,OAAOrB;YACPsB,UAAUR,oBAAoBR,MAAM;QACtC;QAEA,OAAOC,oBAAY,CAACC,IAAI,CAAC;YACvBC,SAAS;YACTZ,MAAM;gBACJC,UAAUgB;gBACVO,OAAOrB,SAAS;gBAChBuB,YAAY;oBACVpB,OAAO;oBACPqB,QAAQ;oBACRC,SAAS,AAACzB,CAAAA,SAAS,CAAA,IAAK;gBAC1B;YACF;YACA0B,OAAO;gBACLC,WAAW,IAAIC,OAAOC,WAAW;gBACjCC,QAAQ;gBACRC,MAAM;YACR;QACF;IAEF,EAAE,OAAOhC,OAAO;QACdN,QAAQM,KAAK,CAAC,2CAA2CA;QACzD,OAAOQ,oBAAY,CAACC,IAAI,CAAC;YACvBC,SAAS;YACTV,OAAOA,iBAAiBiC,QAAQjC,MAAMK,OAAO,GAAG;YAChDsB,OAAO;gBACLC,WAAW,IAAIC,OAAOC,WAAW;gBACjCC,QAAQ;gBACRC,MAAM;YACR;QACF,GAAG;YAAElB,QAAQ;QAAI;IACnB;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6aa8dfde9884187d58c442ce5f5cf19c8f27187c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_20w5jdwup4 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_20w5jdwup4();
cov_20w5jdwup4().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_20w5jdwup4().f[0]++;
  cov_20w5jdwup4().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_20w5jdwup4().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_20w5jdwup4().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_20w5jdwup4().f[1]++;
    cov_20w5jdwup4().s[4]++;
    return GET;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_20w5jdwup4().f[2]++;
    cov_20w5jdwup4().s[5]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_20w5jdwup4().s[6]++, require("next/server"));
const _supabasejs =
/* istanbul ignore next */
(cov_20w5jdwup4().s[7]++, require("@supabase/supabase-js"));
const runtime =
/* istanbul ignore next */
(cov_20w5jdwup4().s[8]++, 'nodejs');
const supabaseUrl =
/* istanbul ignore next */
(cov_20w5jdwup4().s[9]++, process.env.NEXT_PUBLIC_SUPABASE_URL);
const supabaseServiceKey =
/* istanbul ignore next */
(cov_20w5jdwup4().s[10]++, process.env.SUPABASE_SERVICE_ROLE_KEY);
async function GET(request) {
  /* istanbul ignore next */
  cov_20w5jdwup4().f[3]++;
  cov_20w5jdwup4().s[11]++;
  try {
    /* istanbul ignore next */
    cov_20w5jdwup4().s[12]++;
    console.log('ğ Debug Simple Products: Starting...');
    // Crear cliente Supabase con service key (sin autenticaciÃ³n)
    const supabase =
    /* istanbul ignore next */
    (cov_20w5jdwup4().s[13]++, (0, _supabasejs.createClient)(supabaseUrl, supabaseServiceKey));
    /* istanbul ignore next */
    cov_20w5jdwup4().s[14]++;
    console.log('ğ Debug Simple Products: Supabase client created');
    // Consulta simple de productos
    const {
      data: products,
      error,
      count
    } =
    /* istanbul ignore next */
    (cov_20w5jdwup4().s[15]++, await supabase.from('products').select(`
        id,
        name,
        description,
        price,
        stock,
        category_id,
        images,
        created_at,
        updated_at,
        categories (
          id,
          name
        )
      `, {
      count: 'exact'
    }).limit(10));
    /* istanbul ignore next */
    cov_20w5jdwup4().s[16]++;
    console.log('ğ Debug Simple Products: Query executed', {
      error: error?.message,
      count,
      productsLength: products?.length
    });
    /* istanbul ignore next */
    cov_20w5jdwup4().s[17]++;
    if (error) {
      /* istanbul ignore next */
      cov_20w5jdwup4().b[0][0]++;
      cov_20w5jdwup4().s[18]++;
      console.error('â Error en consulta Supabase:', error);
      /* istanbul ignore next */
      cov_20w5jdwup4().s[19]++;
      return _server.NextResponse.json({
        success: false,
        error: error.message,
        code: error.code,
        details: error.details,
        hint: error.hint
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_20w5jdwup4().b[0][1]++;
    }
    // Transformar productos
    const transformedProducts =
    /* istanbul ignore next */
    (cov_20w5jdwup4().s[20]++,
    /* istanbul ignore next */
    (cov_20w5jdwup4().b[1][0]++, products?.map(product => {
      /* istanbul ignore next */
      cov_20w5jdwup4().f[4]++;
      cov_20w5jdwup4().s[21]++;
      return {
        ...product,
        category_name:
        /* istanbul ignore next */
        (cov_20w5jdwup4().b[2][0]++, product.categories?.name) ||
        /* istanbul ignore next */
        (cov_20w5jdwup4().b[2][1]++, null),
        categories: undefined
      };
    })) ||
    /* istanbul ignore next */
    (cov_20w5jdwup4().b[1][1]++, []));
    /* istanbul ignore next */
    cov_20w5jdwup4().s[22]++;
    console.log('â Debug Simple Products: Success', {
      total: count,
      returned: transformedProducts.length
    });
    /* istanbul ignore next */
    cov_20w5jdwup4().s[23]++;
    return _server.NextResponse.json({
      success: true,
      data: {
        products: transformedProducts,
        total:
        /* istanbul ignore next */
        (cov_20w5jdwup4().b[3][0]++, count) ||
        /* istanbul ignore next */
        (cov_20w5jdwup4().b[3][1]++, 0),
        pagination: {
          limit: 10,
          offset: 0,
          hasMore: (
          /* istanbul ignore next */
          (cov_20w5jdwup4().b[4][0]++, count) ||
          /* istanbul ignore next */
          (cov_20w5jdwup4().b[4][1]++, 0)) > 10
        }
      },
      debug: {
        timestamp: new Date().toISOString(),
        method: 'simple_supabase_query',
        auth: 'service_key'
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_20w5jdwup4().s[24]++;
    console.error('â Error fatal en debug simple products:', error);
    /* istanbul ignore next */
    cov_20w5jdwup4().s[25]++;
    return _server.NextResponse.json({
      success: false,
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_20w5jdwup4().b[5][0]++, error.message) :
      /* istanbul ignore next */
      (cov_20w5jdwup4().b[5][1]++, 'Error desconocido'),
      debug: {
        timestamp: new Date().toISOString(),
        method: 'simple_supabase_query',
        auth: 'service_key'
      }
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,