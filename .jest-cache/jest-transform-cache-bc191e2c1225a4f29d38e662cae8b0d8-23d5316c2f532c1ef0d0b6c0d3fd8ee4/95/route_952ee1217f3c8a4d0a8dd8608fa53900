a4bb357c5ea58eb4b6c12883543b6419
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_20g2tzvd5f() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\user\\export\\route.ts";
  var hash = "33bf27fc83f56ff099a327e170c0af9789c9dad3";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\user\\export\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 20
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 23
        }
      },
      "7": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "8": {
        start: {
          line: 24,
          column: 16
        },
        end: {
          line: 24,
          column: 54
        }
      },
      "9": {
        start: {
          line: 25,
          column: 18
        },
        end: {
          line: 25,
          column: 66
        }
      },
      "10": {
        start: {
          line: 26,
          column: 24
        },
        end: {
          line: 26,
          column: 74
        }
      },
      "11": {
        start: {
          line: 27,
          column: 16
        },
        end: {
          line: 27,
          column: 24
        }
      },
      "12": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 95,
          column: 5
        }
      },
      "13": {
        start: {
          line: 30,
          column: 24
        },
        end: {
          line: 30,
          column: 49
        }
      },
      "14": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 37,
          column: 9
        }
      },
      "15": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 36,
          column: 15
        }
      },
      "16": {
        start: {
          line: 38,
          column: 23
        },
        end: {
          line: 38,
          column: 38
        }
      },
      "17": {
        start: {
          line: 39,
          column: 20
        },
        end: {
          line: 39,
          column: 40
        }
      },
      "18": {
        start: {
          line: 40,
          column: 23
        },
        end: {
          line: 40,
          column: 63
        }
      },
      "19": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 51,
          column: 9
        }
      },
      "20": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 50,
          column: 15
        }
      },
      "21": {
        start: {
          line: 53,
          column: 25
        },
        end: {
          line: 53,
          column: 54
        }
      },
      "22": {
        start: {
          line: 55,
          column: 28
        },
        end: {
          line: 55,
          column: 72
        }
      },
      "23": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 60,
          column: 24
        }
      },
      "24": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 87,
          column: 9
        }
      },
      "25": {
        start: {
          line: 63,
          column: 24
        },
        end: {
          line: 63,
          column: 45
        }
      },
      "26": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 69,
          column: 15
        }
      },
      "27": {
        start: {
          line: 72,
          column: 29
        },
        end: {
          line: 80,
          column: 13
        }
      },
      "28": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 86,
          column: 15
        }
      },
      "29": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 63
        }
      },
      "30": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 94,
          column: 11
        }
      },
      "31": {
        start: {
          line: 99,
          column: 21
        },
        end: {
          line: 99,
          column: 23
        }
      },
      "32": {
        start: {
          line: 100,
          column: 4
        },
        end: {
          line: 190,
          column: 5
        }
      },
      "33": {
        start: {
          line: 102,
          column: 34
        },
        end: {
          line: 102,
          column: 115
        }
      },
      "34": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 112,
          column: 17
        }
      },
      "35": {
        start: {
          line: 114,
          column: 36
        },
        end: {
          line: 114,
          column: 122
        }
      },
      "36": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 115,
          column: 45
        }
      },
      "37": {
        start: {
          line: 117,
          column: 33
        },
        end: {
          line: 126,
          column: 30
        }
      },
      "38": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 127,
          column: 39
        }
      },
      "39": {
        start: {
          line: 129,
          column: 38
        },
        end: {
          line: 129,
          column: 169
        }
      },
      "40": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 130,
          column: 51
        }
      },
      "41": {
        start: {
          line: 132,
          column: 35
        },
        end: {
          line: 142,
          column: 111
        }
      },
      "42": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 143,
          column: 43
        }
      },
      "43": {
        start: {
          line: 145,
          column: 35
        },
        end: {
          line: 152,
          column: 111
        }
      },
      "44": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 153,
          column: 43
        }
      },
      "45": {
        start: {
          line: 155,
          column: 43
        },
        end: {
          line: 162,
          column: 39
        }
      },
      "46": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 163,
          column: 62
        }
      },
      "47": {
        start: {
          line: 165,
          column: 41
        },
        end: {
          line: 175,
          column: 111
        }
      },
      "48": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 176,
          column: 56
        }
      },
      "49": {
        start: {
          line: 178,
          column: 31
        },
        end: {
          line: 184,
          column: 30
        }
      },
      "50": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 185,
          column: 35
        }
      },
      "51": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 186,
          column: 24
        }
      },
      "52": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 188,
          column: 70
        }
      },
      "53": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 189,
          column: 20
        }
      },
      "54": {
        start: {
          line: 194,
          column: 20
        },
        end: {
          line: 194,
          column: 22
        }
      },
      "55": {
        start: {
          line: 196,
          column: 4
        },
        end: {
          line: 196,
          column: 46
        }
      },
      "56": {
        start: {
          line: 198,
          column: 4
        },
        end: {
          line: 212,
          column: 7
        }
      },
      "57": {
        start: {
          line: 199,
          column: 8
        },
        end: {
          line: 211,
          column: 9
        }
      },
      "58": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 205,
          column: 15
        }
      },
      "59": {
        start: {
          line: 201,
          column: 16
        },
        end: {
          line: 204,
          column: 19
        }
      },
      "60": {
        start: {
          line: 202,
          column: 37
        },
        end: {
          line: 202,
          column: 108
        }
      },
      "61": {
        start: {
          line: 203,
          column: 20
        },
        end: {
          line: 203,
          column: 129
        }
      },
      "62": {
        start: {
          line: 206,
          column: 15
        },
        end: {
          line: 211,
          column: 9
        }
      },
      "63": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 210,
          column: 15
        }
      },
      "64": {
        start: {
          line: 208,
          column: 33
        },
        end: {
          line: 208,
          column: 104
        }
      },
      "65": {
        start: {
          line: 209,
          column: 16
        },
        end: {
          line: 209,
          column: 134
        }
      },
      "66": {
        start: {
          line: 213,
          column: 4
        },
        end: {
          line: 213,
          column: 30
        }
      },
      "67": {
        start: {
          line: 216,
          column: 4
        },
        end: {
          line: 293,
          column: 5
        }
      },
      "68": {
        start: {
          line: 217,
          column: 24
        },
        end: {
          line: 217,
          column: 49
        }
      },
      "69": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 224,
          column: 9
        }
      },
      "70": {
        start: {
          line: 219,
          column: 12
        },
        end: {
          line: 223,
          column: 15
        }
      },
      "71": {
        start: {
          line: 225,
          column: 23
        },
        end: {
          line: 225,
          column: 38
        }
      },
      "72": {
        start: {
          line: 226,
          column: 21
        },
        end: {
          line: 226,
          column: 41
        }
      },
      "73": {
        start: {
          line: 227,
          column: 59
        },
        end: {
          line: 227,
          column: 63
        }
      },
      "74": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 238,
          column: 9
        }
      },
      "75": {
        start: {
          line: 233,
          column: 12
        },
        end: {
          line: 237,
          column: 15
        }
      },
      "76": {
        start: {
          line: 240,
          column: 47
        },
        end: {
          line: 246,
          column: 28
        }
      },
      "77": {
        start: {
          line: 247,
          column: 8
        },
        end: {
          line: 254,
          column: 9
        }
      },
      "78": {
        start: {
          line: 248,
          column: 12
        },
        end: {
          line: 248,
          column: 77
        }
      },
      "79": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 253,
          column: 15
        }
      },
      "80": {
        start: {
          line: 256,
          column: 28
        },
        end: {
          line: 256,
          column: 72
        }
      },
      "81": {
        start: {
          line: 257,
          column: 8
        },
        end: {
          line: 261,
          column: 24
        }
      },
      "82": {
        start: {
          line: 264,
          column: 8
        },
        end: {
          line: 280,
          column: 9
        }
      },
      "83": {
        start: {
          line: 265,
          column: 29
        },
        end: {
          line: 265,
          column: 58
        }
      },
      "84": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 270,
          column: 42
        }
      },
      "85": {
        start: {
          line: 274,
          column: 12
        },
        end: {
          line: 274,
          column: 77
        }
      },
      "86": {
        start: {
          line: 276,
          column: 12
        },
        end: {
          line: 279,
          column: 42
        }
      },
      "87": {
        start: {
          line: 281,
          column: 8
        },
        end: {
          line: 285,
          column: 11
        }
      },
      "88": {
        start: {
          line: 287,
          column: 8
        },
        end: {
          line: 287,
          column: 64
        }
      },
      "89": {
        start: {
          line: 288,
          column: 8
        },
        end: {
          line: 292,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "GET",
        decl: {
          start: {
            line: 28,
            column: 15
          },
          end: {
            line: 28,
            column: 18
          }
        },
        loc: {
          start: {
            line: 28,
            column: 28
          },
          end: {
            line: 96,
            column: 1
          }
        },
        line: 28
      },
      "5": {
        name: "collectUserData",
        decl: {
          start: {
            line: 98,
            column: 15
          },
          end: {
            line: 98,
            column: 30
          }
        },
        loc: {
          start: {
            line: 98,
            column: 39
          },
          end: {
            line: 191,
            column: 1
          }
        },
        line: 98
      },
      "6": {
        name: "generateCSV",
        decl: {
          start: {
            line: 193,
            column: 9
          },
          end: {
            line: 193,
            column: 20
          }
        },
        loc: {
          start: {
            line: 193,
            column: 31
          },
          end: {
            line: 214,
            column: 1
          }
        },
        line: 193
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 198,
            column: 37
          },
          end: {
            line: 198,
            column: 38
          }
        },
        loc: {
          start: {
            line: 198,
            column: 56
          },
          end: {
            line: 212,
            column: 5
          }
        },
        line: 198
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 200,
            column: 25
          },
          end: {
            line: 200,
            column: 26
          }
        },
        loc: {
          start: {
            line: 200,
            column: 40
          },
          end: {
            line: 205,
            column: 13
          }
        },
        line: 200
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 201,
            column: 45
          },
          end: {
            line: 201,
            column: 46
          }
        },
        loc: {
          start: {
            line: 201,
            column: 61
          },
          end: {
            line: 204,
            column: 17
          }
        },
        line: 201
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 207,
            column: 41
          },
          end: {
            line: 207,
            column: 42
          }
        },
        loc: {
          start: {
            line: 207,
            column: 57
          },
          end: {
            line: 210,
            column: 13
          }
        },
        line: 207
      },
      "11": {
        name: "POST",
        decl: {
          start: {
            line: 215,
            column: 15
          },
          end: {
            line: 215,
            column: 19
          }
        },
        loc: {
          start: {
            line: 215,
            column: 29
          },
          end: {
            line: 294,
            column: 1
          }
        },
        line: 215
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "1": {
        loc: {
          start: {
            line: 40,
            column: 23
          },
          end: {
            line: 40,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 23
          },
          end: {
            line: 40,
            column: 53
          }
        }, {
          start: {
            line: 40,
            column: 57
          },
          end: {
            line: 40,
            column: 63
          }
        }],
        line: 40
      },
      "2": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 51,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 51,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "3": {
        loc: {
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 87,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 87,
            column: 9
          }
        }, {
          start: {
            line: 70,
            column: 15
          },
          end: {
            line: 87,
            column: 9
          }
        }],
        line: 62
      },
      "4": {
        loc: {
          start: {
            line: 103,
            column: 27
          },
          end: {
            line: 112,
            column: 16
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 103,
            column: 37
          },
          end: {
            line: 112,
            column: 9
          }
        }, {
          start: {
            line: 112,
            column: 12
          },
          end: {
            line: 112,
            column: 16
          }
        }],
        line: 103
      },
      "5": {
        loc: {
          start: {
            line: 115,
            column: 29
          },
          end: {
            line: 115,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 115,
            column: 29
          },
          end: {
            line: 115,
            column: 38
          }
        }, {
          start: {
            line: 115,
            column: 42
          },
          end: {
            line: 115,
            column: 44
          }
        }],
        line: 115
      },
      "6": {
        loc: {
          start: {
            line: 127,
            column: 26
          },
          end: {
            line: 127,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 127,
            column: 26
          },
          end: {
            line: 127,
            column: 32
          }
        }, {
          start: {
            line: 127,
            column: 36
          },
          end: {
            line: 127,
            column: 38
          }
        }],
        line: 127
      },
      "7": {
        loc: {
          start: {
            line: 130,
            column: 31
          },
          end: {
            line: 130,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 130,
            column: 31
          },
          end: {
            line: 130,
            column: 42
          }
        }, {
          start: {
            line: 130,
            column: 46
          },
          end: {
            line: 130,
            column: 50
          }
        }],
        line: 130
      },
      "8": {
        loc: {
          start: {
            line: 143,
            column: 28
          },
          end: {
            line: 143,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 143,
            column: 28
          },
          end: {
            line: 143,
            column: 36
          }
        }, {
          start: {
            line: 143,
            column: 40
          },
          end: {
            line: 143,
            column: 42
          }
        }],
        line: 143
      },
      "9": {
        loc: {
          start: {
            line: 153,
            column: 28
          },
          end: {
            line: 153,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 153,
            column: 28
          },
          end: {
            line: 153,
            column: 36
          }
        }, {
          start: {
            line: 153,
            column: 40
          },
          end: {
            line: 153,
            column: 42
          }
        }],
        line: 153
      },
      "10": {
        loc: {
          start: {
            line: 163,
            column: 37
          },
          end: {
            line: 163,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 163,
            column: 37
          },
          end: {
            line: 163,
            column: 53
          }
        }, {
          start: {
            line: 163,
            column: 57
          },
          end: {
            line: 163,
            column: 61
          }
        }],
        line: 163
      },
      "11": {
        loc: {
          start: {
            line: 176,
            column: 35
          },
          end: {
            line: 176,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 176,
            column: 35
          },
          end: {
            line: 176,
            column: 49
          }
        }, {
          start: {
            line: 176,
            column: 53
          },
          end: {
            line: 176,
            column: 55
          }
        }],
        line: 176
      },
      "12": {
        loc: {
          start: {
            line: 185,
            column: 24
          },
          end: {
            line: 185,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 185,
            column: 24
          },
          end: {
            line: 185,
            column: 28
          }
        }, {
          start: {
            line: 185,
            column: 32
          },
          end: {
            line: 185,
            column: 34
          }
        }],
        line: 185
      },
      "13": {
        loc: {
          start: {
            line: 199,
            column: 8
          },
          end: {
            line: 211,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 199,
            column: 8
          },
          end: {
            line: 211,
            column: 9
          }
        }, {
          start: {
            line: 206,
            column: 15
          },
          end: {
            line: 211,
            column: 9
          }
        }],
        line: 199
      },
      "14": {
        loc: {
          start: {
            line: 202,
            column: 37
          },
          end: {
            line: 202,
            column: 108
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 202,
            column: 65
          },
          end: {
            line: 202,
            column: 86
          }
        }, {
          start: {
            line: 202,
            column: 89
          },
          end: {
            line: 202,
            column: 108
          }
        }],
        line: 202
      },
      "15": {
        loc: {
          start: {
            line: 202,
            column: 96
          },
          end: {
            line: 202,
            column: 107
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 202,
            column: 96
          },
          end: {
            line: 202,
            column: 101
          }
        }, {
          start: {
            line: 202,
            column: 105
          },
          end: {
            line: 202,
            column: 107
          }
        }],
        line: 202
      },
      "16": {
        loc: {
          start: {
            line: 203,
            column: 103
          },
          end: {
            line: 203,
            column: 124
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 203,
            column: 103
          },
          end: {
            line: 203,
            column: 118
          }
        }, {
          start: {
            line: 203,
            column: 122
          },
          end: {
            line: 203,
            column: 124
          }
        }],
        line: 203
      },
      "17": {
        loc: {
          start: {
            line: 206,
            column: 15
          },
          end: {
            line: 211,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 206,
            column: 15
          },
          end: {
            line: 211,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 206
      },
      "18": {
        loc: {
          start: {
            line: 206,
            column: 19
          },
          end: {
            line: 206,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 206,
            column: 19
          },
          end: {
            line: 206,
            column: 23
          }
        }, {
          start: {
            line: 206,
            column: 27
          },
          end: {
            line: 206,
            column: 51
          }
        }],
        line: 206
      },
      "19": {
        loc: {
          start: {
            line: 208,
            column: 33
          },
          end: {
            line: 208,
            column: 104
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 208,
            column: 61
          },
          end: {
            line: 208,
            column: 82
          }
        }, {
          start: {
            line: 208,
            column: 85
          },
          end: {
            line: 208,
            column: 104
          }
        }],
        line: 208
      },
      "20": {
        loc: {
          start: {
            line: 208,
            column: 92
          },
          end: {
            line: 208,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 208,
            column: 92
          },
          end: {
            line: 208,
            column: 97
          }
        }, {
          start: {
            line: 208,
            column: 101
          },
          end: {
            line: 208,
            column: 103
          }
        }],
        line: 208
      },
      "21": {
        loc: {
          start: {
            line: 209,
            column: 89
          },
          end: {
            line: 209,
            column: 129
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 209,
            column: 89
          },
          end: {
            line: 209,
            column: 104
          }
        }, {
          start: {
            line: 209,
            column: 108
          },
          end: {
            line: 209,
            column: 123
          }
        }, {
          start: {
            line: 209,
            column: 127
          },
          end: {
            line: 209,
            column: 129
          }
        }],
        line: 209
      },
      "22": {
        loc: {
          start: {
            line: 218,
            column: 8
          },
          end: {
            line: 224,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 218,
            column: 8
          },
          end: {
            line: 224,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 218
      },
      "23": {
        loc: {
          start: {
            line: 227,
            column: 16
          },
          end: {
            line: 227,
            column: 31
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 227,
            column: 25
          },
          end: {
            line: 227,
            column: 31
          }
        }],
        line: 227
      },
      "24": {
        loc: {
          start: {
            line: 227,
            column: 33
          },
          end: {
            line: 227,
            column: 54
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 227,
            column: 50
          },
          end: {
            line: 227,
            column: 54
          }
        }],
        line: 227
      },
      "25": {
        loc: {
          start: {
            line: 229,
            column: 8
          },
          end: {
            line: 238,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 229,
            column: 8
          },
          end: {
            line: 238,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 229
      },
      "26": {
        loc: {
          start: {
            line: 247,
            column: 8
          },
          end: {
            line: 254,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 247,
            column: 8
          },
          end: {
            line: 254,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 247
      },
      "27": {
        loc: {
          start: {
            line: 284,
            column: 21
          },
          end: {
            line: 284,
            column: 159
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 284,
            column: 38
          },
          end: {
            line: 284,
            column: 118
          }
        }, {
          start: {
            line: 284,
            column: 121
          },
          end: {
            line: 284,
            column: 159
          }
        }],
        line: 284
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0, 0],
      "22": [0, 0],
      "23": [0],
      "24": [0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\user\\export\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - API DE EXPORTACI\xD3N DE DATOS PERSONALES (GDPR)\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { auth } from '@/lib/auth/config';\r\nimport { supabaseAdmin } from '@/lib/integrations/supabase';\r\nimport { logPreferenceActivity, getRequestInfo } from '@/lib/activity/activityLogger';\r\n\r\n// GET - Exportar datos personales del usuario\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    const session = await auth();\r\n    if (!session?.user?.id) {\r\n      return NextResponse.json(\r\n        { error: 'No autorizado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    const userId = session.user.id;\r\n    const url = new URL(request.url);\r\n    const format = url.searchParams.get('format') || 'json';\r\n\r\n    // Validar formato\r\n    if (!['json', 'csv'].includes(format)) {\r\n      return NextResponse.json(\r\n        { error: 'Formato no soportado. Use json o csv' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Recopilar todos los datos del usuario\r\n    const userData = await collectUserData(userId);\r\n\r\n    // Registrar actividad\r\n    const requestInfo = getRequestInfo(request);\r\n    await logPreferenceActivity(\r\n      userId,\r\n      'export_data',\r\n      {\r\n        format,\r\n        data_types: Object.keys(userData),\r\n        export_timestamp: new Date().toISOString(),\r\n      },\r\n      requestInfo\r\n    );\r\n\r\n    // Generar respuesta seg\xFAn el formato\r\n    if (format === 'csv') {\r\n      const csv = generateCSV(userData);\r\n      return new NextResponse(csv, {\r\n        headers: {\r\n          'Content-Type': 'text/csv',\r\n          'Content-Disposition': `attachment; filename=\"pinteya-data-export-${new Date().toISOString().split('T')[0]}.csv\"`,\r\n        },\r\n      });\r\n    } else {\r\n      // JSON por defecto\r\n      const jsonData = {\r\n        export_info: {\r\n          user_id: userId,\r\n          export_date: new Date().toISOString(),\r\n          format: 'json',\r\n          version: '1.0',\r\n        },\r\n        ...userData,\r\n      };\r\n\r\n      return new NextResponse(JSON.stringify(jsonData, null, 2), {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Content-Disposition': `attachment; filename=\"pinteya-data-export-${new Date().toISOString().split('T')[0]}.json\"`,\r\n        },\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.error('Error en GET /api/user/export:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// Funci\xF3n para recopilar todos los datos del usuario\r\nasync function collectUserData(userId: string) {\r\n  const userData: any = {};\r\n\r\n  try {\r\n    // 1. Informaci\xF3n del perfil\r\n    const { data: profile } = await supabaseAdmin\r\n      .from('users')\r\n      .select('*')\r\n      .eq('id', userId)\r\n      .single();\r\n\r\n    userData.profile = profile ? {\r\n      id: profile.id,\r\n      name: profile.name,\r\n      email: profile.email,\r\n      phone: profile.phone,\r\n      avatar_url: profile.avatar_url,\r\n      role: profile.role,\r\n      created_at: profile.created_at,\r\n      updated_at: profile.updated_at,\r\n    } : null;\r\n\r\n    // 2. Direcciones\r\n    const { data: addresses } = await supabaseAdmin\r\n      .from('user_addresses')\r\n      .select('*')\r\n      .eq('user_id', userId);\r\n\r\n    userData.addresses = addresses || [];\r\n\r\n    // 3. \xD3rdenes\r\n    const { data: orders } = await supabaseAdmin\r\n      .from('orders')\r\n      .select(`\r\n        id,\r\n        total_amount,\r\n        status,\r\n        payment_status,\r\n        shipping_address,\r\n        billing_address,\r\n        created_at,\r\n        updated_at\r\n      `)\r\n      .eq('user_id', userId);\r\n\r\n    userData.orders = orders || [];\r\n\r\n    // 4. Preferencias\r\n    const { data: preferences } = await supabaseAdmin\r\n      .from('user_preferences')\r\n      .select('preferences, created_at, updated_at')\r\n      .eq('user_id', userId)\r\n      .single();\r\n\r\n    userData.preferences = preferences || null;\r\n\r\n    // 5. Sesiones (\xFAltimos 90 d\xEDas)\r\n    const { data: sessions } = await supabaseAdmin\r\n      .from('user_sessions')\r\n      .select(`\r\n        device_type,\r\n        device_name,\r\n        browser,\r\n        os,\r\n        ip_address,\r\n        location,\r\n        is_trusted,\r\n        last_activity,\r\n        created_at\r\n      `)\r\n      .eq('user_id', userId)\r\n      .gte('created_at', new Date(Date.now() - 90 * 24 * 60 * 60 * 1000).toISOString());\r\n\r\n    userData.sessions = sessions || [];\r\n\r\n    // 6. Actividad (\xFAltimos 90 d\xEDas)\r\n    const { data: activity } = await supabaseAdmin\r\n      .from('user_activity')\r\n      .select(`\r\n        action,\r\n        category,\r\n        description,\r\n        metadata,\r\n        ip_address,\r\n        created_at\r\n      `)\r\n      .eq('user_id', userId)\r\n      .gte('created_at', new Date(Date.now() - 90 * 24 * 60 * 60 * 1000).toISOString());\r\n\r\n    userData.activity = activity || [];\r\n\r\n    // 7. Configuraci\xF3n de seguridad\r\n    const { data: securitySettings } = await supabaseAdmin\r\n      .from('user_security_settings')\r\n      .select(`\r\n        two_factor_enabled,\r\n        session_timeout,\r\n        max_concurrent_sessions,\r\n        alert_preferences,\r\n        created_at,\r\n        updated_at\r\n      `)\r\n      .eq('user_id', userId)\r\n      .single();\r\n\r\n    userData.security_settings = securitySettings || null;\r\n\r\n    // 8. Alertas de seguridad (\xFAltimos 90 d\xEDas)\r\n    const { data: securityAlerts } = await supabaseAdmin\r\n      .from('user_security_alerts')\r\n      .select(`\r\n        type,\r\n        severity,\r\n        title,\r\n        description,\r\n        metadata,\r\n        is_read,\r\n        is_resolved,\r\n        created_at,\r\n        resolved_at\r\n      `)\r\n      .eq('user_id', userId)\r\n      .gte('created_at', new Date(Date.now() - 90 * 24 * 60 * 60 * 1000).toISOString());\r\n\r\n    userData.security_alerts = securityAlerts || [];\r\n\r\n    // 9. Carrito (si existe)\r\n    const { data: cart } = await supabaseAdmin\r\n      .from('cart_items')\r\n      .select(`\r\n        product_id,\r\n        quantity,\r\n        price,\r\n        created_at,\r\n        updated_at\r\n      `)\r\n      .eq('user_id', userId);\r\n\r\n    userData.cart = cart || [];\r\n\r\n    return userData;\r\n  } catch (error) {\r\n    console.error('Error al recopilar datos del usuario:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n// Funci\xF3n para generar CSV\r\nfunction generateCSV(userData: any): string {\r\n  const csvRows: string[] = [];\r\n  \r\n  // Header\r\n  csvRows.push('Secci\xF3n,Campo,Valor,Fecha');\r\n\r\n  // Procesar cada secci\xF3n\r\n  Object.entries(userData).forEach(([section, data]) => {\r\n    if (Array.isArray(data)) {\r\n      data.forEach((item: any, index: number) => {\r\n        Object.entries(item).forEach(([key, value]) => {\r\n          const csvValue = typeof value === 'object' ? JSON.stringify(value) : String(value || '');\r\n          csvRows.push(`\"${section}[${index}]\",\"${key}\",\"${csvValue.replace(/\"/g, '\"\"')}\",\"${item.created_at || ''}\"`);\r\n        });\r\n      });\r\n    } else if (data && typeof data === 'object') {\r\n      Object.entries(data).forEach(([key, value]) => {\r\n        const csvValue = typeof value === 'object' ? JSON.stringify(value) : String(value || '');\r\n        csvRows.push(`\"${section}\",\"${key}\",\"${csvValue.replace(/\"/g, '\"\"')}\",\"${data.created_at || data.updated_at || ''}\"`);\r\n      });\r\n    }\r\n  });\r\n\r\n  return csvRows.join('\\n');\r\n}\r\n\r\n// POST - Solicitar exportaci\xF3n por email (para archivos grandes)\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    const session = await auth();\r\n    if (!session?.user?.id) {\r\n      return NextResponse.json(\r\n        { error: 'No autorizado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    const userId = session.user.id;\r\n    const body = await request.json();\r\n    const { format = 'json', email_delivery = true } = body;\r\n\r\n    // Validar formato\r\n    if (!['json', 'csv'].includes(format)) {\r\n      return NextResponse.json(\r\n        { error: 'Formato no soportado. Use json o csv' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Crear solicitud de exportaci\xF3n\r\n    const { data: exportRequest, error } = await supabaseAdmin\r\n      .from('data_export_requests')\r\n      .insert({\r\n        user_id: userId,\r\n        format,\r\n        status: 'pending',\r\n        email_delivery,\r\n        requested_at: new Date().toISOString(),\r\n      })\r\n      .select()\r\n      .single();\r\n\r\n    if (error) {\r\n      console.error('Error al crear solicitud de exportaci\xF3n:', error);\r\n      return NextResponse.json(\r\n        { error: 'Error al crear solicitud de exportaci\xF3n' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Registrar actividad\r\n    const requestInfo = getRequestInfo(request);\r\n    await logPreferenceActivity(\r\n      userId,\r\n      'request_data_export',\r\n      {\r\n        format,\r\n        email_delivery,\r\n        request_id: exportRequest.id,\r\n      },\r\n      requestInfo\r\n    );\r\n\r\n    // Aqu\xED se podr\xEDa agregar a una cola de procesamiento para archivos grandes\r\n    // Por ahora, procesamos inmediatamente\r\n    try {\r\n      const userData = await collectUserData(userId);\r\n      \r\n      // Actualizar estado a completado\r\n      await supabaseAdmin\r\n        .from('data_export_requests')\r\n        .update({\r\n          status: 'completed',\r\n          completed_at: new Date().toISOString(),\r\n        })\r\n        .eq('id', exportRequest.id);\r\n\r\n      // Enviar por email (implementaci\xF3n pendiente)\r\n      // await sendDataExportEmail(userId, userData, format);\r\n\r\n    } catch (processingError) {\r\n      console.error('Error al procesar exportaci\xF3n:', processingError);\r\n      \r\n      // Actualizar estado a error\r\n      await supabaseAdmin\r\n        .from('data_export_requests')\r\n        .update({\r\n          status: 'failed',\r\n          error_message: 'Error al procesar la exportaci\xF3n',\r\n        })\r\n        .eq('id', exportRequest.id);\r\n    }\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      request_id: exportRequest.id,\r\n      message: email_delivery \r\n        ? 'Solicitud de exportaci\xF3n creada. Recibir\xE1s un email con el enlace de descarga.'\r\n        : 'Exportaci\xF3n procesada correctamente.',\r\n    });\r\n  } catch (error) {\r\n    console.error('Error en POST /api/user/export:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "POST", "runtime", "request", "session", "auth", "user", "id", "NextResponse", "json", "error", "status", "userId", "url", "URL", "format", "searchParams", "get", "includes", "userData", "collectUserData", "requestInfo", "getRequestInfo", "logPreferenceActivity", "data_types", "Object", "keys", "export_timestamp", "Date", "toISOString", "csv", "generateCSV", "headers", "split", "jsonData", "export_info", "user_id", "export_date", "version", "JSON", "stringify", "console", "data", "profile", "supabaseAdmin", "from", "select", "eq", "single", "name", "email", "phone", "avatar_url", "role", "created_at", "updated_at", "addresses", "orders", "preferences", "sessions", "gte", "now", "activity", "securitySettings", "security_settings", "securityAlerts", "security_alerts", "cart", "csvRows", "push", "entries", "forEach", "section", "Array", "isArray", "item", "index", "key", "value", "csvValue", "String", "replace", "join", "body", "email_delivery", "exportRequest", "insert", "requested_at", "request_id", "update", "completed_at", "processingError", "error_message", "success", "message"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "33bf27fc83f56ff099a327e170c0af9789c9dad3"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_20g2tzvd5f = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_20g2tzvd5f();
cov_20g2tzvd5f().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_20g2tzvd5f().f[0]++;
  cov_20g2tzvd5f().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_20g2tzvd5f().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_20g2tzvd5f().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_20g2tzvd5f().f[1]++;
    cov_20g2tzvd5f().s[4]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_20g2tzvd5f().f[2]++;
    cov_20g2tzvd5f().s[5]++;
    return POST;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_20g2tzvd5f().f[3]++;
    cov_20g2tzvd5f().s[6]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_20g2tzvd5f().s[7]++, require("next/server"));
const _config =
/* istanbul ignore next */
(cov_20g2tzvd5f().s[8]++, require("../../../../lib/auth/config"));
const _supabase =
/* istanbul ignore next */
(cov_20g2tzvd5f().s[9]++, require("../../../../lib/integrations/supabase"));
const _activityLogger =
/* istanbul ignore next */
(cov_20g2tzvd5f().s[10]++, require("../../../../lib/activity/activityLogger"));
const runtime =
/* istanbul ignore next */
(cov_20g2tzvd5f().s[11]++, 'nodejs');
async function GET(request) {
  /* istanbul ignore next */
  cov_20g2tzvd5f().f[4]++;
  cov_20g2tzvd5f().s[12]++;
  try {
    const session =
    /* istanbul ignore next */
    (cov_20g2tzvd5f().s[13]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_20g2tzvd5f().s[14]++;
    if (!session?.user?.id) {
      /* istanbul ignore next */
      cov_20g2tzvd5f().b[0][0]++;
      cov_20g2tzvd5f().s[15]++;
      return _server.NextResponse.json({
        error: 'No autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_20g2tzvd5f().b[0][1]++;
    }
    const userId =
    /* istanbul ignore next */
    (cov_20g2tzvd5f().s[16]++, session.user.id);
    const url =
    /* istanbul ignore next */
    (cov_20g2tzvd5f().s[17]++, new URL(request.url));
    const format =
    /* istanbul ignore next */
    (cov_20g2tzvd5f().s[18]++,
    /* istanbul ignore next */
    (cov_20g2tzvd5f().b[1][0]++, url.searchParams.get('format')) ||
    /* istanbul ignore next */
    (cov_20g2tzvd5f().b[1][1]++, 'json'));
    // Validar formato
    /* istanbul ignore next */
    cov_20g2tzvd5f().s[19]++;
    if (!['json', 'csv'].includes(format)) {
      /* istanbul ignore next */
      cov_20g2tzvd5f().b[2][0]++;
      cov_20g2tzvd5f().s[20]++;
      return _server.NextResponse.json({
        error: 'Formato no soportado. Use json o csv'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_20g2tzvd5f().b[2][1]++;
    }
    // Recopilar todos los datos del usuario
    const userData =
    /* istanbul ignore next */
    (cov_20g2tzvd5f().s[21]++, await collectUserData(userId));
    // Registrar actividad
    const requestInfo =
    /* istanbul ignore next */
    (cov_20g2tzvd5f().s[22]++, (0, _activityLogger.getRequestInfo)(request));
    /* istanbul ignore next */
    cov_20g2tzvd5f().s[23]++;
    await (0, _activityLogger.logPreferenceActivity)(userId, 'export_data', {
      format,
      data_types: Object.keys(userData),
      export_timestamp: new Date().toISOString()
    }, requestInfo);
    // Generar respuesta segÃºn el formato
    /* istanbul ignore next */
    cov_20g2tzvd5f().s[24]++;
    if (format === 'csv') {
      /* istanbul ignore next */
      cov_20g2tzvd5f().b[3][0]++;
      const csv =
      /* istanbul ignore next */
      (cov_20g2tzvd5f().s[25]++, generateCSV(userData));
      /* istanbul ignore next */
      cov_20g2tzvd5f().s[26]++;
      return new _server.NextResponse(csv, {
        headers: {
          'Content-Type': 'text/csv',
          'Content-Disposition': `attachment; filename="pinteya-data-export-${new Date().toISOString().split('T')[0]}.csv"`
        }
      });
    } else {
      /* istanbul ignore next */
      cov_20g2tzvd5f().b[3][1]++;
      // JSON por defecto
      const jsonData =
      /* istanbul ignore next */
      (cov_20g2tzvd5f().s[27]++, {
        export_info: {
          user_id: userId,
          export_date: new Date().toISOString(),
          format: 'json',
          version: '1.0'
        },
        ...userData
      });
      /* istanbul ignore next */
      cov_20g2tzvd5f().s[28]++;
      return new _server.NextResponse(JSON.stringify(jsonData, null, 2), {
        headers: {
          'Content-Type': 'application/json',
          'Content-Disposition': `attachment; filename="pinteya-data-export-${new Date().toISOString().split('T')[0]}.json"`
        }
      });
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_20g2tzvd5f().s[29]++;
    console.error('Error en GET /api/user/export:', error);
    /* istanbul ignore next */
    cov_20g2tzvd5f().s[30]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
// FunciÃ³n para recopilar todos los datos del usuario
async function collectUserData(userId) {
  /* istanbul ignore next */
  cov_20g2tzvd5f().f[5]++;
  const userData =
  /* istanbul ignore next */
  (cov_20g2tzvd5f().s[31]++, {});
  /* istanbul ignore next */
  cov_20g2tzvd5f().s[32]++;
  try {
    // 1. InformaciÃ³n del perfil
    const {
      data: profile
    } =
    /* istanbul ignore next */
    (cov_20g2tzvd5f().s[33]++, await _supabase.supabaseAdmin.from('users').select('*').eq('id', userId).single());
    /* istanbul ignore next */
    cov_20g2tzvd5f().s[34]++;
    userData.profile = profile ?
    /* istanbul ignore next */
    (cov_20g2tzvd5f().b[4][0]++, {
      id: profile.id,
      name: profile.name,
      email: profile.email,
      phone: profile.phone,
      avatar_url: profile.avatar_url,
      role: profile.role,
      created_at: profile.created_at,
      updated_at: profile.updated_at
    }) :
    /* istanbul ignore next */
    (cov_20g2tzvd5f().b[4][1]++, null);
    // 2. Direcciones
    const {
      data: addresses
    } =
    /* istanbul ignore next */
    (cov_20g2tzvd5f().s[35]++, await _supabase.supabaseAdmin.from('user_addresses').select('*').eq('user_id', userId));
    /* istanbul ignore next */
    cov_20g2tzvd5f().s[36]++;
    userData.addresses =
    /* istanbul ignore next */
    (cov_20g2tzvd5f().b[5][0]++, addresses) ||
    /* istanbul ignore next */
    (cov_20g2tzvd5f().b[5][1]++, []);
    // 3. Ãrdenes
    const {
      data: orders
    } =
    /* istanbul ignore next */
    (cov_20g2tzvd5f().s[37]++, await _supabase.supabaseAdmin.from('orders').select(`
        id,
        total_amount,
        status,
        payment_status,
        shipping_address,
        billing_address,
        created_at,
        updated_at
      `).eq('user_id', userId));
    /* istanbul ignore next */
    cov_20g2tzvd5f().s[38]++;
    userData.orders =
    /* istanbul ignore next */
    (cov_20g2tzvd5f().b[6][0]++, orders) ||
    /* istanbul ignore next */
    (cov_20g2tzvd5f().b[6][1]++, []);
    // 4. Preferencias
    const {
      data: preferences
    } =
    /* istanbul ignore next */
    (cov_20g2tzvd5f().s[39]++, await _supabase.supabaseAdmin.from('user_preferences').select('preferences, created_at, updated_at').eq('user_id', userId).single());
    /* istanbul ignore next */
    cov_20g2tzvd5f().s[40]++;
    userData.preferences =
    /* istanbul ignore next */
    (cov_20g2tzvd5f().b[7][0]++, preferences) ||
    /* istanbul ignore next */
    (cov_20g2tzvd5f().b[7][1]++, null);
    // 5. Sesiones (Ãºltimos 90 dÃ­as)
    const {
      data: sessions
    } =
    /* istanbul ignore next */
    (cov_20g2tzvd5f().s[41]++, await _supabase.supabaseAdmin.from('user_sessions').select(`
        device_type,
        device_name,
        browser,
        os,
        ip_address,
        location,
        is_trusted,
        last_activity,
        created_at
      `).eq('user_id', userId).gte('created_at', new Date(Date.now() - 90 * 24 * 60 * 60 * 1000).toISOString()));
    /* istanbul ignore next */
    cov_20g2tzvd5f().s[42]++;
    userData.sessions =
    /* istanbul ignore next */
    (cov_20g2tzvd5f().b[8][0]++, sessions) ||
    /* istanbul ignore next */
    (cov_20g2tzvd5f().b[8][1]++, []);
    // 6. Actividad (Ãºltimos 90 dÃ­as)
    const {
      data: activity
    } =
    /* istanbul ignore next */
    (cov_20g2tzvd5f().s[43]++, await _supabase.supabaseAdmin.from('user_activity').select(`
        action,
        category,
        description,
        metadata,
        ip_address,
        created_at
      `).eq('user_id', userId).gte('created_at', new Date(Date.now() - 90 * 24 * 60 * 60 * 1000).toISOString()));
    /* istanbul ignore next */
    cov_20g2tzvd5f().s[44]++;
    userData.activity =
    /* istanbul ignore next */
    (cov_20g2tzvd5f().b[9][0]++, activity) ||
    /* istanbul ignore next */
    (cov_20g2tzvd5f().b[9][1]++, []);
    // 7. ConfiguraciÃ³n de seguridad
    const {
      data: securitySettings
    } =
    /* istanbul ignore next */
    (cov_20g2tzvd5f().s[45]++, await _supabase.supabaseAdmin.from('user_security_settings').select(`
        two_factor_enabled,
        session_timeout,
        max_concurrent_sessions,
        alert_preferences,
        created_at,
        updated_at
      `).eq('user_id', userId).single());
    /* istanbul ignore next */
    cov_20g2tzvd5f().s[46]++;
    userData.security_settings =
    /* istanbul ignore next */
    (cov_20g2tzvd5f().b[10][0]++, securitySettings) ||
    /* istanbul ignore next */
    (cov_20g2tzvd5f().b[10][1]++, null);
    // 8. Alertas de seguridad (Ãºltimos 90 dÃ­as)
    const {
      data: securityAlerts
    } =
    /* istanbul ignore next */
    (cov_20g2tzvd5f().s[47]++, await _supabase.supabaseAdmin.from('user_security_alerts').select(`
        type,
        severity,
        title,
        description,
        metadata,
        is_read,
        is_resolved,
        created_at,
        resolved_at
      `).eq('user_id', userId).gte('created_at', new Date(Date.now() - 90 * 24 * 60 * 60 * 1000).toISOString()));
    /* istanbul ignore next */
    cov_20g2tzvd5f().s[48]++;
    userData.security_alerts =
    /* istanbul ignore next */
    (cov_20g2tzvd5f().b[11][0]++, securityAlerts) ||
    /* istanbul ignore next */
    (cov_20g2tzvd5f().b[11][1]++, []);
    // 9. Carrito (si existe)
    const {
      data: cart
    } =
    /* istanbul ignore next */
    (cov_20g2tzvd5f().s[49]++, await _supabase.supabaseAdmin.from('cart_items').select(`
        product_id,
        quantity,
        price,
        created_at,
        updated_at
      `).eq('user_id', userId));
    /* istanbul ignore next */
    cov_20g2tzvd5f().s[50]++;
    userData.cart =
    /* istanbul ignore next */
    (cov_20g2tzvd5f().b[12][0]++, cart) ||
    /* istanbul ignore next */
    (cov_20g2tzvd5f().b[12][1]++, []);
    /* istanbul ignore next */
    cov_20g2tzvd5f().s[51]++;
    return userData;
  } catch (error) {
    /* istanbul ignore next */
    cov_20g2tzvd5f().s[52]++;
    console.error('Error al recopilar datos del usuario:', error);
    /* istanbul ignore next */
    cov_20g2tzvd5f().s[53]++;
    throw error;
  }
}
// FunciÃ³n para generar CSV
function generateCSV(userData) {
  /* istanbul ignore next */
  cov_20g2tzvd5f().f[6]++;
  const csvRows =
  /* istanbul ignore next */
  (cov_20g2tzvd5f().s[54]++, []);
  // Header
  /* istanbul ignore next */
  cov_20g2tzvd5f().s[55]++;
  csvRows.push('SecciÃ³n,Campo,Valor,Fecha');
  // Procesar cada secciÃ³n
  /* istanbul ignore next */
  cov_20g2tzvd5f().s[56]++;
  Object.entries(userData).forEach(([section, data]) => {
    /* istanbul ignore next */
    cov_20g2tzvd5f().f[7]++;
    cov_20g2tzvd5f().s[57]++;
    if (Array.isArray(data)) {
      /* istanbul ignore next */
      cov_20g2tzvd5f().b[13][0]++;
      cov_20g2tzvd5f().s[58]++;
      data.forEach((item, index) => {
        /* istanbul ignore next */
        cov_20g2tzvd5f().f[8]++;
        cov_20g2tzvd5f().s[59]++;
        Object.entries(item).forEach(([key, value]) => {
          /* istanbul ignore next */
          cov_20g2tzvd5f().f[9]++;
          const csvValue =
          /* istanbul ignore next */
          (cov_20g2tzvd5f().s[60]++, typeof value === 'object' ?
          /* istanbul ignore next */
          (cov_20g2tzvd5f().b[14][0]++, JSON.stringify(value)) :
          /* istanbul ignore next */
          (cov_20g2tzvd5f().b[14][1]++, String(
          /* istanbul ignore next */
          (cov_20g2tzvd5f().b[15][0]++, value) ||
          /* istanbul ignore next */
          (cov_20g2tzvd5f().b[15][1]++, ''))));
          /* istanbul ignore next */
          cov_20g2tzvd5f().s[61]++;
          csvRows.push(`"${section}[${index}]","${key}","${csvValue.replace(/"/g, '""')}","${
          /* istanbul ignore next */
          (cov_20g2tzvd5f().b[16][0]++, item.created_at) ||
          /* istanbul ignore next */
          (cov_20g2tzvd5f().b[16][1]++, '')}"`);
        });
      });
    } else {
      /* istanbul ignore next */
      cov_20g2tzvd5f().b[13][1]++;
      cov_20g2tzvd5f().s[62]++;
      if (
      /* istanbul ignore next */
      (cov_20g2tzvd5f().b[18][0]++, data) &&
      /* istanbul ignore next */
      (cov_20g2tzvd5f().b[18][1]++, typeof data === 'object')) {
        /* istanbul ignore next */
        cov_20g2tzvd5f().b[17][0]++;
        cov_20g2tzvd5f().s[63]++;
        Object.entries(data).forEach(([key, value]) => {
          /* istanbul ignore next */
          cov_20g2tzvd5f().f[10]++;
          const csvValue =
          /* istanbul ignore next */
          (cov_20g2tzvd5f().s[64]++, typeof value === 'object' ?
          /* istanbul ignore next */
          (cov_20g2tzvd5f().b[19][0]++, JSON.stringify(value)) :
          /* istanbul ignore next */
          (cov_20g2tzvd5f().b[19][1]++, String(
          /* istanbul ignore next */
          (cov_20g2tzvd5f().b[20][0]++, value) ||
          /* istanbul ignore next */
          (cov_20g2tzvd5f().b[20][1]++, ''))));
          /* istanbul ignore next */
          cov_20g2tzvd5f().s[65]++;
          csvRows.push(`"${section}","${key}","${csvValue.replace(/"/g, '""')}","${
          /* istanbul ignore next */
          (cov_20g2tzvd5f().b[21][0]++, data.created_at) ||
          /* istanbul ignore next */
          (cov_20g2tzvd5f().b[21][1]++, data.updated_at) ||
          /* istanbul ignore next */
          (cov_20g2tzvd5f().b[21][2]++, '')}"`);
        });
      } else
      /* istanbul ignore next */
      {
        cov_20g2tzvd5f().b[17][1]++;
      }
    }
  });
  /* istanbul ignore next */
  cov_20g2tzvd5f().s[66]++;
  return csvRows.join('\n');
}
async function POST(request) {
  /* istanbul ignore next */
  cov_20g2tzvd5f().f[11]++;
  cov_20g2tzvd5f().s[67]++;
  try {
    const session =
    /* istanbul ignore next */
    (cov_20g2tzvd5f().s[68]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_20g2tzvd5f().s[69]++;
    if (!session?.user?.id) {
      /* istanbul ignore next */
      cov_20g2tzvd5f().b[22][0]++;
      cov_20g2tzvd5f().s[70]++;
      return _server.NextResponse.json({
        error: 'No autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_20g2tzvd5f().b[22][1]++;
    }
    const userId =
    /* istanbul ignore next */
    (cov_20g2tzvd5f().s[71]++, session.user.id);
    const body =
    /* istanbul ignore next */
    (cov_20g2tzvd5f().s[72]++, await request.json());
    const {
      format =
      /* istanbul ignore next */
      (cov_20g2tzvd5f().b[23][0]++, 'json'),
      email_delivery =
      /* istanbul ignore next */
      (cov_20g2tzvd5f().b[24][0]++, true)
    } =
    /* istanbul ignore next */
    (cov_20g2tzvd5f().s[73]++, body);
    // Validar formato
    /* istanbul ignore next */
    cov_20g2tzvd5f().s[74]++;
    if (!['json', 'csv'].includes(format)) {
      /* istanbul ignore next */
      cov_20g2tzvd5f().b[25][0]++;
      cov_20g2tzvd5f().s[75]++;
      return _server.NextResponse.json({
        error: 'Formato no soportado. Use json o csv'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_20g2tzvd5f().b[25][1]++;
    }
    // Crear solicitud de exportaciÃ³n
    const {
      data: exportRequest,
      error
    } =
    /* istanbul ignore next */
    (cov_20g2tzvd5f().s[76]++, await _supabase.supabaseAdmin.from('data_export_requests').insert({
      user_id: userId,
      format,
      status: 'pending',
      email_delivery,
      requested_at: new Date().toISOString()
    }).select().single());
    /* istanbul ignore next */
    cov_20g2tzvd5f().s[77]++;
    if (error) {
      /* istanbul ignore next */
      cov_20g2tzvd5f().b[26][0]++;
      cov_20g2tzvd5f().s[78]++;
      console.error('Error al crear solicitud de exportaciÃ³n:', error);
      /* istanbul ignore next */
      cov_20g2tzvd5f().s[79]++;
      return _server.NextResponse.json({
        error: 'Error al crear solicitud de exportaciÃ³n'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_20g2tzvd5f().b[26][1]++;
    }
    // Registrar actividad
    const requestInfo =
    /* istanbul ignore next */
    (cov_20g2tzvd5f().s[80]++, (0, _activityLogger.getRequestInfo)(request));
    /* istanbul ignore next */
    cov_20g2tzvd5f().s[81]++;
    await (0, _activityLogger.logPreferenceActivity)(userId, 'request_data_export', {
      format,
      email_delivery,
      request_id: exportRequest.id
    }, requestInfo);
    // AquÃ­ se podrÃ­a agregar a una cola de procesamiento para archivos grandes
    // Por ahora, procesamos inmediatamente
    /* istanbul ignore next */
    cov_20g2tzvd5f().s[82]++;
    try {
      const userData =
      /* istanbul ignore next */
      (cov_20g2tzvd5f().s[83]++, await collectUserData(userId));
      // Actualizar estado a completado
      /* istanbul ignore next */
      cov_20g2tzvd5f().s[84]++;
      await _supabase.supabaseAdmin.from('data_export_requests').update({
        status: 'completed',
        completed_at: new Date().toISOString()
      }).eq('id', exportRequest.id);
      // Enviar por email (implementaciÃ³n pendiente)
      // await sendDataExportEmail(userId, userData, format);
    } catch (processingError) {
      /* istanbul ignore next */
      cov_20g2tzvd5f().s[85]++;
      console.error('Error al procesar exportaciÃ³n:', processingError);
      // Actualizar estado a error
      /* istanbul ignore next */
      cov_20g2tzvd5f().s[86]++;
      await _supabase.supabaseAdmin.from('data_export_requests').update({
        status: 'failed',
        error_message: 'Error al procesar la exportaciÃ³n'
      }).eq('id', exportRequest.id);
    }
    /* istanbul ignore next */
    cov_20g2tzvd5f().s[87]++;
    return _server.NextResponse.json({
      success: true,
      request_id: exportRequest.id,
      message: email_delivery ?
      /* istanbul ignore next */
      (cov_20g2tzvd5f().b[27][0]++, 'Solicitud de exportaciÃ³n creada. RecibirÃ¡s un email con el enlace de descarga.') :
      /* istanbul ignore next */
      (cov_20g2tzvd5f().b[27][1]++, 'ExportaciÃ³n procesada correctamente.')
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_20g2tzvd5f().s[88]++;
    console.error('Error en POST /api/user/export:', error);
    /* istanbul ignore next */
    cov_20g2tzvd5f().s[89]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,