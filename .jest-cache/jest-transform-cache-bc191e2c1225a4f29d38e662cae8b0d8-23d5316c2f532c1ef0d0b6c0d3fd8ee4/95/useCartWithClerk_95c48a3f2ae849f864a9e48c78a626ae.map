{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useCartWithClerk.ts"],"sourcesContent":["// ===================================\n// PINTEYA E-COMMERCE - CART HOOK WITH CLERK INTEGRATION\n// ===================================\n\nimport { useEffect, useCallback } from 'react'\nimport { useAuth } from './useAuth'\nimport { useAppDispatch, useAppSelector } from '@/redux/store'\nimport {\n  selectCartItems,\n  hydrateCart,\n  replaceCart,\n  removeAllItemsFromCart,\n} from '@/redux/features/cart-slice'\nimport {\n  loadCartFromStorage,\n  clearCartFromStorage,\n  migrateTemporaryCart,\n  loadUserCart,\n  saveUserCart,\n} from '@/redux/middleware/cartPersistence'\n\n// Hook personalizado para manejar el carrito con integración NextAuth\nexport const useCartWithClerk = () => {\n  const { user, isLoaded } = useAuth()\n  const dispatch = useAppDispatch()\n  const cartItems = useAppSelector(selectCartItems)\n\n  // Función para migrar carrito temporal a usuario autenticado\n  const migrateCart = useCallback(\n    async (userId: string) => {\n      try {\n        // Obtener items del localStorage\n        const temporaryItems = loadCartFromStorage()\n\n        if (temporaryItems.length > 0) {\n          // Migrar items al backend (implementación futura)\n          const migrationSuccess = await migrateTemporaryCart(temporaryItems, userId)\n\n          if (migrationSuccess) {\n            // Limpiar localStorage después de migración exitosa\n            clearCartFromStorage()\n          }\n        }\n\n        // Cargar carrito del usuario desde el backend (implementación futura)\n        const userCartItems = await loadUserCart(userId)\n\n        // Si hay items del usuario, reemplazar el carrito actual\n        if (userCartItems.length > 0) {\n          dispatch(replaceCart(userCartItems))\n        }\n      } catch (error) {\n        console.error('Error during cart migration:', error)\n      }\n    },\n    [dispatch]\n  )\n\n  // Función para guardar carrito del usuario autenticado\n  const saveCart = useCallback(\n    async (userId: string) => {\n      try {\n        if (cartItems.length > 0) {\n          await saveUserCart(userId, cartItems)\n        }\n      } catch (error) {\n        console.error('Error saving user cart:', error)\n      }\n    },\n    [cartItems]\n  )\n\n  // Efecto para manejar cambios en el estado de autenticación\n  useEffect(() => {\n    if (!isLoaded) {\n      return\n    }\n\n    if (user) {\n      // Usuario autenticado - migrar carrito temporal si existe\n      migrateCart(user.id)\n    } else {\n      // Usuario no autenticado - cargar desde localStorage\n      const persistedItems = loadCartFromStorage()\n      if (persistedItems.length > 0) {\n        dispatch(hydrateCart(persistedItems))\n      }\n    }\n  }, [user, isLoaded, dispatch, migrateCart])\n\n  // Efecto para guardar carrito de usuario autenticado cuando cambie\n  useEffect(() => {\n    if (!isLoaded || !user) {\n      return\n    }\n\n    // Debounce para evitar guardados excesivos\n    const timeoutId = setTimeout(() => {\n      saveCart(user.id)\n    }, 1000)\n\n    return () => clearTimeout(timeoutId)\n  }, [cartItems, user, isLoaded, saveCart])\n\n  // Función para limpiar carrito al cerrar sesión\n  const handleSignOut = useCallback(() => {\n    dispatch(removeAllItemsFromCart())\n    clearCartFromStorage()\n  }, [dispatch])\n\n  return {\n    isAuthenticated: !!user,\n    userId: user?.id,\n    cartItems,\n    migrateCart,\n    saveCart,\n    handleSignOut,\n  }\n}\n\n// Hook simplificado para componentes que solo necesitan el estado del carrito\nexport const useCart = () => {\n  const cartItems = useAppSelector(selectCartItems)\n  const dispatch = useAppDispatch()\n\n  return {\n    cartItems,\n    dispatch,\n  }\n}\n"],"names":["useCart","useCartWithClerk","user","isLoaded","useAuth","dispatch","useAppDispatch","cartItems","useAppSelector","selectCartItems","migrateCart","useCallback","userId","temporaryItems","loadCartFromStorage","length","migrationSuccess","migrateTemporaryCart","clearCartFromStorage","userCartItems","loadUserCart","replaceCart","error","console","saveCart","saveUserCart","useEffect","id","persistedItems","hydrateCart","timeoutId","setTimeout","clearTimeout","handleSignOut","removeAllItemsFromCart","isAuthenticated"],"mappings":"AAAA,sCAAsC;AACtC,wDAAwD;AACxD,sCAAsC;;;;;;;;;;;;QAuHzBA;eAAAA;;QAnGAC;eAAAA;;;uBAlB0B;yBACf;uBACuB;2BAMxC;iCAOA;AAGA,MAAMA,mBAAmB;IAC9B,MAAM,EAAEC,IAAI,EAAEC,QAAQ,EAAE,GAAGC,IAAAA,gBAAO;IAClC,MAAMC,WAAWC,IAAAA,qBAAc;IAC/B,MAAMC,YAAYC,IAAAA,qBAAc,EAACC,0BAAe;IAEhD,6DAA6D;IAC7D,MAAMC,cAAcC,IAAAA,kBAAW,EAC7B,OAAOC;QACL,IAAI;YACF,iCAAiC;YACjC,MAAMC,iBAAiBC,IAAAA,oCAAmB;YAE1C,IAAID,eAAeE,MAAM,GAAG,GAAG;gBAC7B,kDAAkD;gBAClD,MAAMC,mBAAmB,MAAMC,IAAAA,qCAAoB,EAACJ,gBAAgBD;gBAEpE,IAAII,kBAAkB;oBACpB,oDAAoD;oBACpDE,IAAAA,qCAAoB;gBACtB;YACF;YAEA,sEAAsE;YACtE,MAAMC,gBAAgB,MAAMC,IAAAA,6BAAY,EAACR;YAEzC,yDAAyD;YACzD,IAAIO,cAAcJ,MAAM,GAAG,GAAG;gBAC5BV,SAASgB,IAAAA,sBAAW,EAACF;YACvB;QACF,EAAE,OAAOG,OAAO;YACdC,QAAQD,KAAK,CAAC,gCAAgCA;QAChD;IACF,GACA;QAACjB;KAAS;IAGZ,uDAAuD;IACvD,MAAMmB,WAAWb,IAAAA,kBAAW,EAC1B,OAAOC;QACL,IAAI;YACF,IAAIL,UAAUQ,MAAM,GAAG,GAAG;gBACxB,MAAMU,IAAAA,6BAAY,EAACb,QAAQL;YAC7B;QACF,EAAE,OAAOe,OAAO;YACdC,QAAQD,KAAK,CAAC,2BAA2BA;QAC3C;IACF,GACA;QAACf;KAAU;IAGb,4DAA4D;IAC5DmB,IAAAA,gBAAS,EAAC;QACR,IAAI,CAACvB,UAAU;YACb;QACF;QAEA,IAAID,MAAM;YACR,0DAA0D;YAC1DQ,YAAYR,KAAKyB,EAAE;QACrB,OAAO;YACL,qDAAqD;YACrD,MAAMC,iBAAiBd,IAAAA,oCAAmB;YAC1C,IAAIc,eAAeb,MAAM,GAAG,GAAG;gBAC7BV,SAASwB,IAAAA,sBAAW,EAACD;YACvB;QACF;IACF,GAAG;QAAC1B;QAAMC;QAAUE;QAAUK;KAAY;IAE1C,mEAAmE;IACnEgB,IAAAA,gBAAS,EAAC;QACR,IAAI,CAACvB,YAAY,CAACD,MAAM;YACtB;QACF;QAEA,2CAA2C;QAC3C,MAAM4B,YAAYC,WAAW;YAC3BP,SAAStB,KAAKyB,EAAE;QAClB,GAAG;QAEH,OAAO,IAAMK,aAAaF;IAC5B,GAAG;QAACvB;QAAWL;QAAMC;QAAUqB;KAAS;IAExC,gDAAgD;IAChD,MAAMS,gBAAgBtB,IAAAA,kBAAW,EAAC;QAChCN,SAAS6B,IAAAA,iCAAsB;QAC/BhB,IAAAA,qCAAoB;IACtB,GAAG;QAACb;KAAS;IAEb,OAAO;QACL8B,iBAAiB,CAAC,CAACjC;QACnBU,QAAQV,MAAMyB;QACdpB;QACAG;QACAc;QACAS;IACF;AACF;AAGO,MAAMjC,UAAU;IACrB,MAAMO,YAAYC,IAAAA,qBAAc,EAACC,0BAAe;IAChD,MAAMJ,WAAWC,IAAAA,qBAAc;IAE/B,OAAO;QACLC;QACAF;IACF;AACF"}