ac8086297df187381ac49a3c2007ec2d
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_1gyl8z81ds() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\notifications\\route.ts";
  var hash = "ecc0f869c837d90a0afed8ae6c3e91fedfdca064";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\notifications\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 20
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 23
        }
      },
      "7": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "8": {
        start: {
          line: 24,
          column: 13
        },
        end: {
          line: 24,
          column: 27
        }
      },
      "9": {
        start: {
          line: 25,
          column: 20
        },
        end: {
          line: 25,
          column: 52
        }
      },
      "10": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 54
        }
      },
      "11": {
        start: {
          line: 27,
          column: 21
        },
        end: {
          line: 27,
          column: 71
        }
      },
      "12": {
        start: {
          line: 28,
          column: 16
        },
        end: {
          line: 28,
          column: 60
        }
      },
      "13": {
        start: {
          line: 29,
          column: 17
        },
        end: {
          line: 29,
          column: 62
        }
      },
      "14": {
        start: {
          line: 30,
          column: 16
        },
        end: {
          line: 30,
          column: 24
        }
      },
      "15": {
        start: {
          line: 34,
          column: 17
        },
        end: {
          line: 34,
          column: 123
        }
      },
      "16": {
        start: {
          line: 35,
          column: 27
        },
        end: {
          line: 46,
          column: 1
        }
      },
      "17": {
        start: {
          line: 50,
          column: 34
        },
        end: {
          line: 88,
          column: 2
        }
      },
      "18": {
        start: {
          line: 89,
          column: 33
        },
        end: {
          line: 114,
          column: 2
        }
      },
      "19": {
        start: {
          line: 115,
          column: 25
        },
        end: {
          line: 123,
          column: 2
        }
      },
      "20": {
        start: {
          line: 128,
          column: 20
        },
        end: {
          line: 128,
          column: 45
        }
      },
      "21": {
        start: {
          line: 129,
          column: 4
        },
        end: {
          line: 134,
          column: 5
        }
      },
      "22": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 133,
          column: 10
        }
      },
      "23": {
        start: {
          line: 136,
          column: 30
        },
        end: {
          line: 136,
          column: 111
        }
      },
      "24": {
        start: {
          line: 137,
          column: 4
        },
        end: {
          line: 142,
          column: 5
        }
      },
      "25": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 141,
          column: 10
        }
      },
      "26": {
        start: {
          line: 143,
          column: 4
        },
        end: {
          line: 145,
          column: 6
        }
      },
      "27": {
        start: {
          line: 148,
          column: 16
        },
        end: {
          line: 160,
          column: 6
        }
      },
      "28": {
        start: {
          line: 162,
          column: 4
        },
        end: {
          line: 164,
          column: 5
        }
      },
      "29": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 163,
          column: 47
        }
      },
      "30": {
        start: {
          line: 165,
          column: 4
        },
        end: {
          line: 167,
          column: 5
        }
      },
      "31": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 166,
          column: 51
        }
      },
      "32": {
        start: {
          line: 168,
          column: 4
        },
        end: {
          line: 170,
          column: 5
        }
      },
      "33": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 169,
          column: 55
        }
      },
      "34": {
        start: {
          line: 171,
          column: 4
        },
        end: {
          line: 173,
          column: 5
        }
      },
      "35": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 172,
          column: 67
        }
      },
      "36": {
        start: {
          line: 174,
          column: 4
        },
        end: {
          line: 176,
          column: 5
        }
      },
      "37": {
        start: {
          line: 175,
          column: 8
        },
        end: {
          line: 175,
          column: 59
        }
      },
      "38": {
        start: {
          line: 177,
          column: 4
        },
        end: {
          line: 179,
          column: 5
        }
      },
      "39": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 178,
          column: 57
        }
      },
      "40": {
        start: {
          line: 180,
          column: 4
        },
        end: {
          line: 182,
          column: 5
        }
      },
      "41": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 181,
          column: 94
        }
      },
      "42": {
        start: {
          line: 184,
          column: 22
        },
        end: {
          line: 187,
          column: 6
        }
      },
      "43": {
        start: {
          line: 189,
          column: 19
        },
        end: {
          line: 189,
          column: 53
        }
      },
      "44": {
        start: {
          line: 190,
          column: 4
        },
        end: {
          line: 192,
          column: 49
        }
      },
      "45": {
        start: {
          line: 193,
          column: 28
        },
        end: {
          line: 193,
          column: 39
        }
      },
      "46": {
        start: {
          line: 194,
          column: 4
        },
        end: {
          line: 196,
          column: 5
        }
      },
      "47": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 195,
          column: 77
        }
      },
      "48": {
        start: {
          line: 197,
          column: 4
        },
        end: {
          line: 201,
          column: 6
        }
      },
      "49": {
        start: {
          line: 204,
          column: 28
        },
        end: {
          line: 208,
          column: 24
        }
      },
      "50": {
        start: {
          line: 209,
          column: 4
        },
        end: {
          line: 211,
          column: 5
        }
      },
      "51": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 210,
          column: 73
        }
      },
      "52": {
        start: {
          line: 213,
          column: 4
        },
        end: {
          line: 222,
          column: 5
        }
      },
      "53": {
        start: {
          line: 214,
          column: 40
        },
        end: {
          line: 220,
          column: 15
        }
      },
      "54": {
        start: {
          line: 214,
          column: 91
        },
        end: {
          line: 220,
          column: 13
        }
      },
      "55": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 221,
          column: 77
        }
      },
      "56": {
        start: {
          line: 223,
          column: 4
        },
        end: {
          line: 223,
          column: 16
        }
      },
      "57": {
        start: {
          line: 226,
          column: 21
        },
        end: {
          line: 226,
          column: 23
        }
      },
      "58": {
        start: {
          line: 227,
          column: 4
        },
        end: {
          line: 251,
          column: 5
        }
      },
      "59": {
        start: {
          line: 229,
          column: 12
        },
        end: {
          line: 231,
          column: 14
        }
      },
      "60": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 232,
          column: 18
        }
      },
      "61": {
        start: {
          line: 234,
          column: 12
        },
        end: {
          line: 236,
          column: 14
        }
      },
      "62": {
        start: {
          line: 237,
          column: 12
        },
        end: {
          line: 237,
          column: 18
        }
      },
      "63": {
        start: {
          line: 239,
          column: 12
        },
        end: {
          line: 241,
          column: 14
        }
      },
      "64": {
        start: {
          line: 242,
          column: 12
        },
        end: {
          line: 242,
          column: 18
        }
      },
      "65": {
        start: {
          line: 244,
          column: 43
        },
        end: {
          line: 244,
          column: 114
        }
      },
      "66": {
        start: {
          line: 245,
          column: 12
        },
        end: {
          line: 247,
          column: 13
        }
      },
      "67": {
        start: {
          line: 246,
          column: 16
        },
        end: {
          line: 246,
          column: 92
        }
      },
      "68": {
        start: {
          line: 248,
          column: 12
        },
        end: {
          line: 250,
          column: 14
        }
      },
      "69": {
        start: {
          line: 252,
          column: 28
        },
        end: {
          line: 255,
          column: 41
        }
      },
      "70": {
        start: {
          line: 256,
          column: 4
        },
        end: {
          line: 258,
          column: 5
        }
      },
      "71": {
        start: {
          line: 257,
          column: 8
        },
        end: {
          line: 257,
          column: 68
        }
      },
      "72": {
        start: {
          line: 259,
          column: 4
        },
        end: {
          line: 261,
          column: 6
        }
      },
      "73": {
        start: {
          line: 264,
          column: 35
        },
        end: {
          line: 264,
          column: 136
        }
      },
      "74": {
        start: {
          line: 265,
          column: 4
        },
        end: {
          line: 267,
          column: 5
        }
      },
      "75": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 266,
          column: 75
        }
      },
      "76": {
        start: {
          line: 268,
          column: 20
        },
        end: {
          line: 283,
          column: 5
        }
      },
      "77": {
        start: {
          line: 270,
          column: 34
        },
        end: {
          line: 270,
          column: 55
        }
      },
      "78": {
        start: {
          line: 272,
          column: 36
        },
        end: {
          line: 272,
          column: 53
        }
      },
      "79": {
        start: {
          line: 273,
          column: 39
        },
        end: {
          line: 273,
          column: 59
        }
      },
      "80": {
        start: {
          line: 274,
          column: 37
        },
        end: {
          line: 274,
          column: 55
        }
      },
      "81": {
        start: {
          line: 275,
          column: 39
        },
        end: {
          line: 275,
          column: 59
        }
      },
      "82": {
        start: {
          line: 278,
          column: 35
        },
        end: {
          line: 278,
          column: 55
        }
      },
      "83": {
        start: {
          line: 279,
          column: 38
        },
        end: {
          line: 279,
          column: 61
        }
      },
      "84": {
        start: {
          line: 280,
          column: 36
        },
        end: {
          line: 280,
          column: 57
        }
      },
      "85": {
        start: {
          line: 281,
          column: 38
        },
        end: {
          line: 281,
          column: 61
        }
      },
      "86": {
        start: {
          line: 284,
          column: 4
        },
        end: {
          line: 284,
          column: 19
        }
      },
      "87": {
        start: {
          line: 287,
          column: 22
        },
        end: {
          line: 287,
          column: 32
        }
      },
      "88": {
        start: {
          line: 288,
          column: 4
        },
        end: {
          line: 383,
          column: 5
        }
      },
      "89": {
        start: {
          line: 290,
          column: 32
        },
        end: {
          line: 294,
          column: 33
        }
      },
      "90": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 303,
          column: 9
        }
      },
      "91": {
        start: {
          line: 296,
          column: 29
        },
        end: {
          line: 300,
          column: 14
        }
      },
      "92": {
        start: {
          line: 301,
          column: 12
        },
        end: {
          line: 301,
          column: 77
        }
      },
      "93": {
        start: {
          line: 302,
          column: 12
        },
        end: {
          line: 302,
          column: 28
        }
      },
      "94": {
        start: {
          line: 305,
          column: 27
        },
        end: {
          line: 305,
          column: 52
        }
      },
      "95": {
        start: {
          line: 306,
          column: 8
        },
        end: {
          line: 315,
          column: 9
        }
      },
      "96": {
        start: {
          line: 307,
          column: 34
        },
        end: {
          line: 311,
          column: 13
        }
      },
      "97": {
        start: {
          line: 312,
          column: 12
        },
        end: {
          line: 314,
          column: 15
        }
      },
      "98": {
        start: {
          line: 317,
          column: 33
        },
        end: {
          line: 317,
          column: 53
        }
      },
      "99": {
        start: {
          line: 318,
          column: 24
        },
        end: {
          line: 330,
          column: 10
        }
      },
      "100": {
        start: {
          line: 332,
          column: 53
        },
        end: {
          line: 332,
          column: 84
        }
      },
      "101": {
        start: {
          line: 334,
          column: 20
        },
        end: {
          line: 334,
          column: 24
        }
      },
      "102": {
        start: {
          line: 335,
          column: 8
        },
        end: {
          line: 337,
          column: 9
        }
      },
      "103": {
        start: {
          line: 336,
          column: 12
        },
        end: {
          line: 336,
          column: 49
        }
      },
      "104": {
        start: {
          line: 339,
          column: 8
        },
        end: {
          line: 345,
          column: 11
        }
      },
      "105": {
        start: {
          line: 346,
          column: 25
        },
        end: {
          line: 359,
          column: 9
        }
      },
      "106": {
        start: {
          line: 360,
          column: 29
        },
        end: {
          line: 360,
          column: 64
        }
      },
      "107": {
        start: {
          line: 361,
          column: 8
        },
        end: {
          line: 361,
          column: 77
        }
      },
      "108": {
        start: {
          line: 362,
          column: 8
        },
        end: {
          line: 362,
          column: 28
        }
      },
      "109": {
        start: {
          line: 364,
          column: 8
        },
        end: {
          line: 366,
          column: 11
        }
      },
      "110": {
        start: {
          line: 368,
          column: 8
        },
        end: {
          line: 374,
          column: 11
        }
      },
      "111": {
        start: {
          line: 375,
          column: 30
        },
        end: {
          line: 379,
          column: 9
        }
      },
      "112": {
        start: {
          line: 380,
          column: 8
        },
        end: {
          line: 382,
          column: 11
        }
      },
      "113": {
        start: {
          line: 386,
          column: 22
        },
        end: {
          line: 386,
          column: 32
        }
      },
      "114": {
        start: {
          line: 387,
          column: 4
        },
        end: {
          line: 504,
          column: 5
        }
      },
      "115": {
        start: {
          line: 389,
          column: 32
        },
        end: {
          line: 393,
          column: 40
        }
      },
      "116": {
        start: {
          line: 394,
          column: 8
        },
        end: {
          line: 402,
          column: 9
        }
      },
      "117": {
        start: {
          line: 395,
          column: 29
        },
        end: {
          line: 399,
          column: 14
        }
      },
      "118": {
        start: {
          line: 400,
          column: 12
        },
        end: {
          line: 400,
          column: 77
        }
      },
      "119": {
        start: {
          line: 401,
          column: 12
        },
        end: {
          line: 401,
          column: 28
        }
      },
      "120": {
        start: {
          line: 404,
          column: 27
        },
        end: {
          line: 404,
          column: 52
        }
      },
      "121": {
        start: {
          line: 405,
          column: 8
        },
        end: {
          line: 414,
          column: 9
        }
      },
      "122": {
        start: {
          line: 406,
          column: 34
        },
        end: {
          line: 410,
          column: 13
        }
      },
      "123": {
        start: {
          line: 411,
          column: 12
        },
        end: {
          line: 413,
          column: 15
        }
      },
      "124": {
        start: {
          line: 415,
          column: 21
        },
        end: {
          line: 415,
          column: 41
        }
      },
      "125": {
        start: {
          line: 416,
          column: 33
        },
        end: {
          line: 416,
          column: 53
        }
      },
      "126": {
        start: {
          line: 417,
          column: 23
        },
        end: {
          line: 417,
          column: 49
        }
      },
      "127": {
        start: {
          line: 419,
          column: 8
        },
        end: {
          line: 483,
          column: 9
        }
      },
      "128": {
        start: {
          line: 421,
          column: 37
        },
        end: {
          line: 421,
          column: 69
        }
      },
      "129": {
        start: {
          line: 422,
          column: 12
        },
        end: {
          line: 431,
          column: 13
        }
      },
      "130": {
        start: {
          line: 423,
          column: 38
        },
        end: {
          line: 427,
          column: 17
        }
      },
      "131": {
        start: {
          line: 428,
          column: 16
        },
        end: {
          line: 430,
          column: 19
        }
      },
      "132": {
        start: {
          line: 433,
          column: 27
        },
        end: {
          line: 433,
          column: 139
        }
      },
      "133": {
        start: {
          line: 435,
          column: 12
        },
        end: {
          line: 441,
          column: 15
        }
      },
      "134": {
        start: {
          line: 442,
          column: 29
        },
        end: {
          line: 446,
          column: 13
        }
      },
      "135": {
        start: {
          line: 447,
          column: 33
        },
        end: {
          line: 447,
          column: 68
        }
      },
      "136": {
        start: {
          line: 448,
          column: 12
        },
        end: {
          line: 448,
          column: 81
        }
      },
      "137": {
        start: {
          line: 449,
          column: 12
        },
        end: {
          line: 449,
          column: 32
        }
      },
      "138": {
        start: {
          line: 452,
          column: 37
        },
        end: {
          line: 452,
          column: 77
        }
      },
      "139": {
        start: {
          line: 453,
          column: 12
        },
        end: {
          line: 462,
          column: 13
        }
      },
      "140": {
        start: {
          line: 454,
          column: 38
        },
        end: {
          line: 458,
          column: 17
        }
      },
      "141": {
        start: {
          line: 459,
          column: 16
        },
        end: {
          line: 461,
          column: 19
        }
      },
      "142": {
        start: {
          line: 464,
          column: 33
        },
        end: {
          line: 464,
          column: 99
        }
      },
      "143": {
        start: {
          line: 466,
          column: 12
        },
        end: {
          line: 472,
          column: 15
        }
      },
      "144": {
        start: {
          line: 473,
          column: 29
        },
        end: {
          line: 477,
          column: 13
        }
      },
      "145": {
        start: {
          line: 478,
          column: 33
        },
        end: {
          line: 480,
          column: 14
        }
      },
      "146": {
        start: {
          line: 481,
          column: 12
        },
        end: {
          line: 481,
          column: 81
        }
      },
      "147": {
        start: {
          line: 482,
          column: 12
        },
        end: {
          line: 482,
          column: 32
        }
      },
      "148": {
        start: {
          line: 485,
          column: 8
        },
        end: {
          line: 487,
          column: 11
        }
      },
      "149": {
        start: {
          line: 489,
          column: 8
        },
        end: {
          line: 495,
          column: 11
        }
      },
      "150": {
        start: {
          line: 496,
          column: 30
        },
        end: {
          line: 500,
          column: 9
        }
      },
      "151": {
        start: {
          line: 501,
          column: 8
        },
        end: {
          line: 503,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "validateAdminAuth",
        decl: {
          start: {
            line: 127,
            column: 15
          },
          end: {
            line: 127,
            column: 32
          }
        },
        loc: {
          start: {
            line: 127,
            column: 35
          },
          end: {
            line: 146,
            column: 1
          }
        },
        line: 127
      },
      "5": {
        name: "getNotifications",
        decl: {
          start: {
            line: 147,
            column: 15
          },
          end: {
            line: 147,
            column: 31
          }
        },
        loc: {
          start: {
            line: 147,
            column: 41
          },
          end: {
            line: 202,
            column: 1
          }
        },
        line: 147
      },
      "6": {
        name: "createNotification",
        decl: {
          start: {
            line: 203,
            column: 15
          },
          end: {
            line: 203,
            column: 33
          }
        },
        loc: {
          start: {
            line: 203,
            column: 63
          },
          end: {
            line: 224,
            column: 1
          }
        },
        line: 203
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 214,
            column: 75
          },
          end: {
            line: 214,
            column: 76
          }
        },
        loc: {
          start: {
            line: 214,
            column: 91
          },
          end: {
            line: 220,
            column: 13
          }
        },
        line: 214
      },
      "8": {
        name: "performBulkAction",
        decl: {
          start: {
            line: 225,
            column: 15
          },
          end: {
            line: 225,
            column: 32
          }
        },
        loc: {
          start: {
            line: 225,
            column: 66
          },
          end: {
            line: 262,
            column: 1
          }
        },
        line: 225
      },
      "9": {
        name: "getNotificationStats",
        decl: {
          start: {
            line: 263,
            column: 15
          },
          end: {
            line: 263,
            column: 35
          }
        },
        loc: {
          start: {
            line: 263,
            column: 38
          },
          end: {
            line: 285,
            column: 1
          }
        },
        line: 263
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 270,
            column: 29
          },
          end: {
            line: 270,
            column: 30
          }
        },
        loc: {
          start: {
            line: 270,
            column: 34
          },
          end: {
            line: 270,
            column: 55
          }
        },
        line: 270
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 272,
            column: 31
          },
          end: {
            line: 272,
            column: 32
          }
        },
        loc: {
          start: {
            line: 272,
            column: 36
          },
          end: {
            line: 272,
            column: 53
          }
        },
        line: 272
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 273,
            column: 34
          },
          end: {
            line: 273,
            column: 35
          }
        },
        loc: {
          start: {
            line: 273,
            column: 39
          },
          end: {
            line: 273,
            column: 59
          }
        },
        line: 273
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 274,
            column: 32
          },
          end: {
            line: 274,
            column: 33
          }
        },
        loc: {
          start: {
            line: 274,
            column: 37
          },
          end: {
            line: 274,
            column: 55
          }
        },
        line: 274
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 275,
            column: 34
          },
          end: {
            line: 275,
            column: 35
          }
        },
        loc: {
          start: {
            line: 275,
            column: 39
          },
          end: {
            line: 275,
            column: 59
          }
        },
        line: 275
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 278,
            column: 30
          },
          end: {
            line: 278,
            column: 31
          }
        },
        loc: {
          start: {
            line: 278,
            column: 35
          },
          end: {
            line: 278,
            column: 55
          }
        },
        line: 278
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 279,
            column: 33
          },
          end: {
            line: 279,
            column: 34
          }
        },
        loc: {
          start: {
            line: 279,
            column: 38
          },
          end: {
            line: 279,
            column: 61
          }
        },
        line: 279
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 280,
            column: 31
          },
          end: {
            line: 280,
            column: 32
          }
        },
        loc: {
          start: {
            line: 280,
            column: 36
          },
          end: {
            line: 280,
            column: 57
          }
        },
        line: 280
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 281,
            column: 33
          },
          end: {
            line: 281,
            column: 34
          }
        },
        loc: {
          start: {
            line: 281,
            column: 38
          },
          end: {
            line: 281,
            column: 61
          }
        },
        line: 281
      },
      "19": {
        name: "GET",
        decl: {
          start: {
            line: 286,
            column: 15
          },
          end: {
            line: 286,
            column: 18
          }
        },
        loc: {
          start: {
            line: 286,
            column: 28
          },
          end: {
            line: 384,
            column: 1
          }
        },
        line: 286
      },
      "20": {
        name: "POST",
        decl: {
          start: {
            line: 385,
            column: 15
          },
          end: {
            line: 385,
            column: 19
          }
        },
        loc: {
          start: {
            line: 385,
            column: 29
          },
          end: {
            line: 505,
            column: 1
          }
        },
        line: 385
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 129,
            column: 4
          },
          end: {
            line: 134,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 129,
            column: 4
          },
          end: {
            line: 134,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 129
      },
      "1": {
        loc: {
          start: {
            line: 137,
            column: 4
          },
          end: {
            line: 142,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 137,
            column: 4
          },
          end: {
            line: 142,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 137
      },
      "2": {
        loc: {
          start: {
            line: 162,
            column: 4
          },
          end: {
            line: 164,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 162,
            column: 4
          },
          end: {
            line: 164,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 162
      },
      "3": {
        loc: {
          start: {
            line: 165,
            column: 4
          },
          end: {
            line: 167,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 165,
            column: 4
          },
          end: {
            line: 167,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 165
      },
      "4": {
        loc: {
          start: {
            line: 168,
            column: 4
          },
          end: {
            line: 170,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 168,
            column: 4
          },
          end: {
            line: 170,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 168
      },
      "5": {
        loc: {
          start: {
            line: 171,
            column: 4
          },
          end: {
            line: 173,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 171,
            column: 4
          },
          end: {
            line: 173,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 171
      },
      "6": {
        loc: {
          start: {
            line: 174,
            column: 4
          },
          end: {
            line: 176,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 174,
            column: 4
          },
          end: {
            line: 176,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 174
      },
      "7": {
        loc: {
          start: {
            line: 177,
            column: 4
          },
          end: {
            line: 179,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 177,
            column: 4
          },
          end: {
            line: 179,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 177
      },
      "8": {
        loc: {
          start: {
            line: 180,
            column: 4
          },
          end: {
            line: 182,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 180,
            column: 4
          },
          end: {
            line: 182,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 180
      },
      "9": {
        loc: {
          start: {
            line: 194,
            column: 4
          },
          end: {
            line: 196,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 194,
            column: 4
          },
          end: {
            line: 196,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 194
      },
      "10": {
        loc: {
          start: {
            line: 198,
            column: 23
          },
          end: {
            line: 198,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 198,
            column: 23
          },
          end: {
            line: 198,
            column: 27
          }
        }, {
          start: {
            line: 198,
            column: 31
          },
          end: {
            line: 198,
            column: 33
          }
        }],
        line: 198
      },
      "11": {
        loc: {
          start: {
            line: 199,
            column: 15
          },
          end: {
            line: 199,
            column: 25
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 199,
            column: 15
          },
          end: {
            line: 199,
            column: 20
          }
        }, {
          start: {
            line: 199,
            column: 24
          },
          end: {
            line: 199,
            column: 25
          }
        }],
        line: 199
      },
      "12": {
        loc: {
          start: {
            line: 200,
            column: 31
          },
          end: {
            line: 200,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 200,
            column: 31
          },
          end: {
            line: 200,
            column: 36
          }
        }, {
          start: {
            line: 200,
            column: 40
          },
          end: {
            line: 200,
            column: 41
          }
        }],
        line: 200
      },
      "13": {
        loc: {
          start: {
            line: 209,
            column: 4
          },
          end: {
            line: 211,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 209,
            column: 4
          },
          end: {
            line: 211,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 209
      },
      "14": {
        loc: {
          start: {
            line: 213,
            column: 4
          },
          end: {
            line: 222,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 213,
            column: 4
          },
          end: {
            line: 222,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 213
      },
      "15": {
        loc: {
          start: {
            line: 213,
            column: 8
          },
          end: {
            line: 213,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 213,
            column: 8
          },
          end: {
            line: 213,
            column: 38
          }
        }, {
          start: {
            line: 213,
            column: 42
          },
          end: {
            line: 213,
            column: 83
          }
        }],
        line: 213
      },
      "16": {
        loc: {
          start: {
            line: 227,
            column: 4
          },
          end: {
            line: 251,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 228,
            column: 8
          },
          end: {
            line: 232,
            column: 18
          }
        }, {
          start: {
            line: 233,
            column: 8
          },
          end: {
            line: 237,
            column: 18
          }
        }, {
          start: {
            line: 238,
            column: 8
          },
          end: {
            line: 242,
            column: 18
          }
        }, {
          start: {
            line: 243,
            column: 8
          },
          end: {
            line: 250,
            column: 14
          }
        }],
        line: 227
      },
      "17": {
        loc: {
          start: {
            line: 245,
            column: 12
          },
          end: {
            line: 247,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 245,
            column: 12
          },
          end: {
            line: 247,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 245
      },
      "18": {
        loc: {
          start: {
            line: 256,
            column: 4
          },
          end: {
            line: 258,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 256,
            column: 4
          },
          end: {
            line: 258,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 256
      },
      "19": {
        loc: {
          start: {
            line: 260,
            column: 18
          },
          end: {
            line: 260,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 260,
            column: 18
          },
          end: {
            line: 260,
            column: 30
          }
        }, {
          start: {
            line: 260,
            column: 34
          },
          end: {
            line: 260,
            column: 35
          }
        }],
        line: 260
      },
      "20": {
        loc: {
          start: {
            line: 265,
            column: 4
          },
          end: {
            line: 267,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 265,
            column: 4
          },
          end: {
            line: 267,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 265
      },
      "21": {
        loc: {
          start: {
            line: 295,
            column: 8
          },
          end: {
            line: 303,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 295,
            column: 8
          },
          end: {
            line: 303,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 295
      },
      "22": {
        loc: {
          start: {
            line: 306,
            column: 8
          },
          end: {
            line: 315,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 306,
            column: 8
          },
          end: {
            line: 315,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 306
      },
      "23": {
        loc: {
          start: {
            line: 335,
            column: 8
          },
          end: {
            line: 337,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 335,
            column: 8
          },
          end: {
            line: 337,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 335
      },
      "24": {
        loc: {
          start: {
            line: 356,
            column: 15
          },
          end: {
            line: 358,
            column: 13
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 356,
            column: 15
          },
          end: {
            line: 356,
            column: 20
          }
        }, {
          start: {
            line: 356,
            column: 24
          },
          end: {
            line: 358,
            column: 13
          }
        }],
        line: 356
      },
      "25": {
        loc: {
          start: {
            line: 373,
            column: 19
          },
          end: {
            line: 373,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 373,
            column: 44
          },
          end: {
            line: 373,
            column: 57
          }
        }, {
          start: {
            line: 373,
            column: 60
          },
          end: {
            line: 373,
            column: 75
          }
        }],
        line: 373
      },
      "26": {
        loc: {
          start: {
            line: 394,
            column: 8
          },
          end: {
            line: 402,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 394,
            column: 8
          },
          end: {
            line: 402,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 394
      },
      "27": {
        loc: {
          start: {
            line: 405,
            column: 8
          },
          end: {
            line: 414,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 405,
            column: 8
          },
          end: {
            line: 414,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 405
      },
      "28": {
        loc: {
          start: {
            line: 419,
            column: 8
          },
          end: {
            line: 483,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 419,
            column: 8
          },
          end: {
            line: 483,
            column: 9
          }
        }, {
          start: {
            line: 450,
            column: 15
          },
          end: {
            line: 483,
            column: 9
          }
        }],
        line: 419
      },
      "29": {
        loc: {
          start: {
            line: 422,
            column: 12
          },
          end: {
            line: 431,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 422,
            column: 12
          },
          end: {
            line: 431,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 422
      },
      "30": {
        loc: {
          start: {
            line: 453,
            column: 12
          },
          end: {
            line: 462,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 453,
            column: 12
          },
          end: {
            line: 462,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 453
      },
      "31": {
        loc: {
          start: {
            line: 494,
            column: 19
          },
          end: {
            line: 494,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 494,
            column: 44
          },
          end: {
            line: 494,
            column: 57
          }
        }, {
          start: {
            line: 494,
            column: 60
          },
          end: {
            line: 494,
            column: 75
          }
        }],
        line: 494
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0, 0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\notifications\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { z } from 'zod';\r\nimport { createClient } from '@supabase/supabase-js';\r\nimport { auth } from '@/lib/auth/config';\r\nimport { checkRateLimit, addRateLimitHeaders } from '@/lib/enterprise/rate-limiter';\r\nimport { logger, LogLevel, LogCategory } from '@/lib/enterprise/logger';\r\nimport { metricsCollector } from '@/lib/enterprise/metrics';\r\n\r\n// ===================================\r\n// CONFIGURACI\xD3N\r\n// ===================================\r\nconst supabase = createClient(\r\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\r\n  process.env.SUPABASE_SERVICE_ROLE_KEY!\r\n);\r\n\r\nconst RATE_LIMIT_CONFIGS = {\r\n  admin: {\r\n    windowMs: 15 * 60 * 1000, // 15 minutos\r\n    maxRequests: 100,\r\n    message: 'Demasiadas solicitudes administrativas'\r\n  },\r\n  create: {\r\n    windowMs: 60 * 1000, // 1 minuto\r\n    maxRequests: 10,\r\n    message: 'Demasiadas notificaciones creadas'\r\n  }\r\n};\r\n\r\n// ===================================\r\n// ESQUEMAS DE VALIDACI\xD3N\r\n// ===================================\r\nconst NotificationFiltersSchema = z.object({\r\n  type: z.enum(['info', 'warning', 'error', 'success']).optional(),\r\n  status: z.enum(['read', 'unread', 'archived']).optional(),\r\n  priority: z.enum(['low', 'medium', 'high', 'urgent']).optional(),\r\n  recipient_type: z.enum(['user', 'admin', 'all']).optional(),\r\n  date_from: z.string().optional(),\r\n  date_to: z.string().optional(),\r\n  search: z.string().optional(),\r\n  page: z.coerce.number().min(1).default(1),\r\n  limit: z.coerce.number().min(1).max(100).default(20),\r\n  sort_by: z.enum(['created_at', 'updated_at', 'priority', 'type']).default('created_at'),\r\n  sort_order: z.enum(['asc', 'desc']).default('desc')\r\n});\r\n\r\nconst CreateNotificationSchema = z.object({\r\n  title: z.string().min(1).max(200),\r\n  message: z.string().min(1).max(1000),\r\n  type: z.enum(['info', 'warning', 'error', 'success']),\r\n  priority: z.enum(['low', 'medium', 'high', 'urgent']).default('medium'),\r\n  recipient_type: z.enum(['user', 'admin', 'all']),\r\n  recipient_ids: z.array(z.string()).optional(),\r\n  action_url: z.string().url().optional(),\r\n  action_label: z.string().max(50).optional(),\r\n  expires_at: z.string().datetime().optional(),\r\n  metadata: z.record(z.any()).optional()\r\n});\r\n\r\nconst BulkActionSchema = z.object({\r\n  action: z.enum(['mark_read', 'mark_unread', 'archive', 'delete']),\r\n  notification_ids: z.array(z.string()).min(1)\r\n});\r\n\r\n// ===================================\r\n// TIPOS\r\n// ===================================\r\ninterface ApiResponse<T> {\r\n  data: T;\r\n  success: boolean;\r\n  message?: string;\r\n  error?: string;\r\n  pagination?: {\r\n    page: number;\r\n    limit: number;\r\n    total: number;\r\n    totalPages: number;\r\n  };\r\n}\r\n\r\ninterface NotificationData {\r\n  id: string;\r\n  title: string;\r\n  message: string;\r\n  type: 'info' | 'warning' | 'error' | 'success';\r\n  priority: 'low' | 'medium' | 'high' | 'urgent';\r\n  status: 'read' | 'unread' | 'archived';\r\n  recipient_type: 'user' | 'admin' | 'all';\r\n  recipient_id?: string;\r\n  action_url?: string;\r\n  action_label?: string;\r\n  expires_at?: string;\r\n  metadata?: Record<string, any>;\r\n  created_at: string;\r\n  updated_at: string;\r\n  created_by: string;\r\n}\r\n\r\n// ===================================\r\n// FUNCIONES AUXILIARES\r\n// ===================================\r\nasync function validateAdminAuth() {\r\n  const session = await auth();\r\n  \r\n  if (!session?.user) {\r\n    return { error: 'No autorizado', status: 401 };\r\n  }\r\n\r\n  // Verificar rol de administrador\r\n  const { data: profile } = await supabase\r\n    .from('profiles')\r\n    .select('role')\r\n    .eq('id', session.user.id)\r\n    .single();\r\n\r\n  if (profile?.role !== 'admin') {\r\n    return { error: 'Acceso denegado', status: 403 };\r\n  }\r\n\r\n  return { userId: session.user.id };\r\n}\r\n\r\nasync function getNotifications(filters: z.infer<typeof NotificationFiltersSchema>) {\r\n  let query = supabase\r\n    .from('notifications')\r\n    .select(`\r\n      *,\r\n      recipient:profiles!notifications_recipient_id_fkey(\r\n        id,\r\n        email,\r\n        full_name\r\n      ),\r\n      creator:profiles!notifications_created_by_fkey(\r\n        id,\r\n        email,\r\n        full_name\r\n      )\r\n    `);\r\n\r\n  // Aplicar filtros\r\n  if (filters.type) {\r\n    query = query.eq('type', filters.type);\r\n  }\r\n\r\n  if (filters.status) {\r\n    query = query.eq('status', filters.status);\r\n  }\r\n\r\n  if (filters.priority) {\r\n    query = query.eq('priority', filters.priority);\r\n  }\r\n\r\n  if (filters.recipient_type) {\r\n    query = query.eq('recipient_type', filters.recipient_type);\r\n  }\r\n\r\n  if (filters.date_from) {\r\n    query = query.gte('created_at', filters.date_from);\r\n  }\r\n\r\n  if (filters.date_to) {\r\n    query = query.lte('created_at', filters.date_to);\r\n  }\r\n\r\n  if (filters.search) {\r\n    query = query.or(`title.ilike.%${filters.search}%,message.ilike.%${filters.search}%`);\r\n  }\r\n\r\n  // Contar total\r\n  const { count } = await query.select('*', { count: 'exact', head: true });\r\n\r\n  // Aplicar paginaci\xF3n y ordenamiento\r\n  const offset = (filters.page - 1) * filters.limit;\r\n  query = query\r\n    .order(filters.sort_by, { ascending: filters.sort_order === 'asc' })\r\n    .range(offset, offset + filters.limit - 1);\r\n\r\n  const { data, error } = await query;\r\n\r\n  if (error) {\r\n    throw new Error(`Error al obtener notificaciones: ${error.message}`);\r\n  }\r\n\r\n  return {\r\n    notifications: data || [],\r\n    total: count || 0,\r\n    totalPages: Math.ceil((count || 0) / filters.limit)\r\n  };\r\n}\r\n\r\nasync function createNotification(\r\n  notificationData: z.infer<typeof CreateNotificationSchema>,\r\n  createdBy: string\r\n) {\r\n  const { data, error } = await supabase\r\n    .from('notifications')\r\n    .insert({\r\n      ...notificationData,\r\n      created_by: createdBy,\r\n      status: 'unread'\r\n    })\r\n    .select()\r\n    .single();\r\n\r\n  if (error) {\r\n    throw new Error(`Error al crear notificaci\xF3n: ${error.message}`);\r\n  }\r\n\r\n  // Si es para usuarios espec\xEDficos, crear registros individuales\r\n  if (notificationData.recipient_ids && notificationData.recipient_ids.length > 0) {\r\n    const individualNotifications = notificationData.recipient_ids.map(recipientId => ({\r\n      ...notificationData,\r\n      recipient_id: recipientId,\r\n      recipient_type: 'user' as const,\r\n      created_by: createdBy,\r\n      status: 'unread' as const\r\n    }));\r\n\r\n    await supabase\r\n      .from('notifications')\r\n      .insert(individualNotifications);\r\n  }\r\n\r\n  return data;\r\n}\r\n\r\nasync function performBulkAction(\r\n  action: string,\r\n  notificationIds: string[],\r\n  userId: string\r\n) {\r\n  let updateData: Partial<NotificationData> = {};\r\n\r\n  switch (action) {\r\n    case 'mark_read':\r\n      updateData = { status: 'read' };\r\n      break;\r\n    case 'mark_unread':\r\n      updateData = { status: 'unread' };\r\n      break;\r\n    case 'archive':\r\n      updateData = { status: 'archived' };\r\n      break;\r\n    case 'delete':\r\n      const { error: deleteError } = await supabase\r\n        .from('notifications')\r\n        .delete()\r\n        .in('id', notificationIds);\r\n      \r\n      if (deleteError) {\r\n        throw new Error(`Error al eliminar notificaciones: ${deleteError.message}`);\r\n      }\r\n      \r\n      return { affected: notificationIds.length };\r\n  }\r\n\r\n  const { data, error } = await supabase\r\n    .from('notifications')\r\n    .update({\r\n      ...updateData,\r\n      updated_at: new Date().toISOString()\r\n    })\r\n    .in('id', notificationIds)\r\n    .select();\r\n\r\n  if (error) {\r\n    throw new Error(`Error en acci\xF3n masiva: ${error.message}`);\r\n  }\r\n\r\n  return { affected: data?.length || 0 };\r\n}\r\n\r\nasync function getNotificationStats() {\r\n  const { data: stats, error } = await supabase\r\n    .from('notifications')\r\n    .select('type, status, priority')\r\n    .not('status', 'eq', 'archived');\r\n\r\n  if (error) {\r\n    throw new Error(`Error al obtener estad\xEDsticas: ${error.message}`);\r\n  }\r\n\r\n  const summary = {\r\n    total: stats.length,\r\n    unread: stats.filter(n => n.status === 'unread').length,\r\n    by_type: {\r\n      info: stats.filter(n => n.type === 'info').length,\r\n      warning: stats.filter(n => n.type === 'warning').length,\r\n      error: stats.filter(n => n.type === 'error').length,\r\n      success: stats.filter(n => n.type === 'success').length\r\n    },\r\n    by_priority: {\r\n      low: stats.filter(n => n.priority === 'low').length,\r\n      medium: stats.filter(n => n.priority === 'medium').length,\r\n      high: stats.filter(n => n.priority === 'high').length,\r\n      urgent: stats.filter(n => n.priority === 'urgent').length\r\n    }\r\n  };\r\n\r\n  return summary;\r\n}\r\n\r\n// ===================================\r\n// GET - Obtener notificaciones\r\n// ===================================\r\nexport async function GET(request: NextRequest) {\r\n  const startTime = Date.now();\r\n\r\n  try {\r\n    // Rate limiting\r\n    const rateLimitResult = await checkRateLimit(\r\n      request,\r\n      {\r\n        windowMs: RATE_LIMIT_CONFIGS.admin.windowMs,\r\n        maxRequests: RATE_LIMIT_CONFIGS.admin.maxRequests,\r\n        message: RATE_LIMIT_CONFIGS.admin.message\r\n      },\r\n      'admin-notifications'\r\n    );\r\n\r\n    if (!rateLimitResult.success) {\r\n      const response = NextResponse.json(\r\n        { error: rateLimitResult.message },\r\n        { status: 429 }\r\n      );\r\n      addRateLimitHeaders(response, rateLimitResult);\r\n      return response;\r\n    }\r\n\r\n    // Validar autenticaci\xF3n admin\r\n    const authResult = await validateAdminAuth();\r\n    if (authResult.error) {\r\n      const errorResponse: ApiResponse<null> = {\r\n        data: null,\r\n        success: false,\r\n        error: authResult.error,\r\n      };\r\n      return NextResponse.json(errorResponse, { status: authResult.status });\r\n    }\r\n\r\n    // Parsear par\xE1metros de consulta\r\n    const { searchParams } = new URL(request.url);\r\n    const filters = NotificationFiltersSchema.parse({\r\n      type: searchParams.get('type'),\r\n      status: searchParams.get('status'),\r\n      priority: searchParams.get('priority'),\r\n      recipient_type: searchParams.get('recipient_type'),\r\n      date_from: searchParams.get('date_from'),\r\n      date_to: searchParams.get('date_to'),\r\n      search: searchParams.get('search'),\r\n      page: searchParams.get('page'),\r\n      limit: searchParams.get('limit'),\r\n      sort_by: searchParams.get('sort_by'),\r\n      sort_order: searchParams.get('sort_order')\r\n    });\r\n\r\n    // Obtener notificaciones\r\n    const { notifications, total, totalPages } = await getNotifications(filters);\r\n\r\n    // Obtener estad\xEDsticas si se solicita\r\n    let stats = null;\r\n    if (searchParams.get('include_stats') === 'true') {\r\n      stats = await getNotificationStats();\r\n    }\r\n\r\n    // Registrar m\xE9tricas\r\n    metricsCollector.recordApiCall({\r\n      endpoint: '/api/admin/notifications',\r\n      method: 'GET',\r\n      statusCode: 200,\r\n      responseTime: Date.now() - startTime,\r\n      userId: authResult.userId\r\n    });\r\n\r\n    const response: ApiResponse<NotificationData[]> = {\r\n      data: notifications,\r\n      success: true,\r\n      message: 'Notificaciones obtenidas exitosamente',\r\n      pagination: {\r\n        page: filters.page,\r\n        limit: filters.limit,\r\n        total,\r\n        totalPages\r\n      },\r\n      ...(stats && { stats })\r\n    };\r\n\r\n    const nextResponse = NextResponse.json(response);\r\n    addRateLimitHeaders(nextResponse, rateLimitResult);\r\n    return nextResponse;\r\n\r\n  } catch (error) {\r\n    logger.log(LogLevel.ERROR, LogCategory.API, 'Error en GET /api/admin/notifications', { error });\r\n\r\n    // Registrar m\xE9tricas de error\r\n    metricsCollector.recordApiCall({\r\n      endpoint: '/api/admin/notifications',\r\n      method: 'GET',\r\n      statusCode: 500,\r\n      responseTime: Date.now() - startTime,\r\n      error: error instanceof Error ? error.message : 'Unknown error'\r\n    });\r\n\r\n    const errorResponse: ApiResponse<null> = {\r\n      data: null,\r\n      success: false,\r\n      error: 'Error interno del servidor',\r\n    };\r\n\r\n    return NextResponse.json(errorResponse, { status: 500 });\r\n  }\r\n}\r\n\r\n// ===================================\r\n// POST - Crear notificaci\xF3n o acci\xF3n masiva\r\n// ===================================\r\nexport async function POST(request: NextRequest) {\r\n  const startTime = Date.now();\r\n\r\n  try {\r\n    // Rate limiting\r\n    const rateLimitResult = await checkRateLimit(\r\n      request,\r\n      {\r\n        windowMs: RATE_LIMIT_CONFIGS.create.windowMs,\r\n        maxRequests: RATE_LIMIT_CONFIGS.create.maxRequests,\r\n        message: RATE_LIMIT_CONFIGS.create.message\r\n      },\r\n      'admin-notifications-create'\r\n    );\r\n\r\n    if (!rateLimitResult.success) {\r\n      const response = NextResponse.json(\r\n        { error: rateLimitResult.message },\r\n        { status: 429 }\r\n      );\r\n      addRateLimitHeaders(response, rateLimitResult);\r\n      return response;\r\n    }\r\n\r\n    // Validar autenticaci\xF3n admin\r\n    const authResult = await validateAdminAuth();\r\n    if (authResult.error) {\r\n      const errorResponse: ApiResponse<null> = {\r\n        data: null,\r\n        success: false,\r\n        error: authResult.error,\r\n      };\r\n      return NextResponse.json(errorResponse, { status: authResult.status });\r\n    }\r\n\r\n    const body = await request.json();\r\n    const { searchParams } = new URL(request.url);\r\n    const action = searchParams.get('action');\r\n\r\n    // Determinar si es acci\xF3n masiva o creaci\xF3n\r\n    if (action === 'bulk') {\r\n      // Validar datos para acci\xF3n masiva\r\n      const validationResult = BulkActionSchema.safeParse(body);\r\n      if (!validationResult.success) {\r\n        const errorResponse: ApiResponse<null> = {\r\n          data: null,\r\n          success: false,\r\n          error: 'Datos de acci\xF3n masiva inv\xE1lidos',\r\n        };\r\n        return NextResponse.json(errorResponse, { status: 400 });\r\n      }\r\n\r\n      // Ejecutar acci\xF3n masiva\r\n      const result = await performBulkAction(\r\n        validationResult.data.action,\r\n        validationResult.data.notification_ids,\r\n        authResult.userId!\r\n      );\r\n\r\n      // Registrar m\xE9tricas\r\n      metricsCollector.recordApiCall({\r\n        endpoint: '/api/admin/notifications',\r\n        method: 'POST',\r\n        statusCode: 200,\r\n        responseTime: Date.now() - startTime,\r\n        userId: authResult.userId\r\n      });\r\n\r\n      const response: ApiResponse<typeof result> = {\r\n        data: result,\r\n        success: true,\r\n        message: `Acci\xF3n ${validationResult.data.action} ejecutada en ${result.affected} notificaciones`\r\n      };\r\n\r\n      const nextResponse = NextResponse.json(response);\r\n      addRateLimitHeaders(nextResponse, rateLimitResult);\r\n      return nextResponse;\r\n    } else {\r\n      // Validar datos para crear notificaci\xF3n\r\n      const validationResult = CreateNotificationSchema.safeParse(body);\r\n      if (!validationResult.success) {\r\n        const errorResponse: ApiResponse<null> = {\r\n          data: null,\r\n          success: false,\r\n          error: 'Datos de notificaci\xF3n inv\xE1lidos',\r\n        };\r\n        return NextResponse.json(errorResponse, { status: 400 });\r\n      }\r\n\r\n      // Crear notificaci\xF3n\r\n      const notification = await createNotification(\r\n        validationResult.data,\r\n        authResult.userId!\r\n      );\r\n\r\n      // Registrar m\xE9tricas\r\n      metricsCollector.recordApiCall({\r\n        endpoint: '/api/admin/notifications',\r\n        method: 'POST',\r\n        statusCode: 201,\r\n        responseTime: Date.now() - startTime,\r\n        userId: authResult.userId\r\n      });\r\n\r\n      const response: ApiResponse<NotificationData> = {\r\n        data: notification,\r\n        success: true,\r\n        message: 'Notificaci\xF3n creada exitosamente'\r\n      };\r\n\r\n      const nextResponse = NextResponse.json(response, { status: 201 });\r\n      addRateLimitHeaders(nextResponse, rateLimitResult);\r\n      return nextResponse;\r\n    }\r\n\r\n  } catch (error) {\r\n    logger.log(LogLevel.ERROR, LogCategory.API, 'Error en POST /api/admin/notifications', { error });\r\n\r\n    // Registrar m\xE9tricas de error\r\n    metricsCollector.recordApiCall({\r\n      endpoint: '/api/admin/notifications',\r\n      method: 'POST',\r\n      statusCode: 500,\r\n      responseTime: Date.now() - startTime,\r\n      error: error instanceof Error ? error.message : 'Unknown error'\r\n    });\r\n\r\n    const errorResponse: ApiResponse<null> = {\r\n      data: null,\r\n      success: false,\r\n      error: 'Error interno del servidor',\r\n    };\r\n\r\n    return NextResponse.json(errorResponse, { status: 500 });\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "POST", "runtime", "supabase", "createClient", "process", "env", "NEXT_PUBLIC_SUPABASE_URL", "SUPABASE_SERVICE_ROLE_KEY", "RATE_LIMIT_CONFIGS", "admin", "windowMs", "maxRequests", "message", "create", "NotificationFiltersSchema", "z", "object", "type", "enum", "optional", "status", "priority", "recipient_type", "date_from", "string", "date_to", "search", "page", "coerce", "number", "min", "default", "limit", "max", "sort_by", "sort_order", "CreateNotificationSchema", "title", "recipient_ids", "array", "action_url", "url", "action_label", "expires_at", "datetime", "metadata", "record", "any", "BulkActionSchema", "action", "notification_ids", "validateAdminAuth", "session", "auth", "user", "error", "data", "profile", "from", "select", "eq", "id", "single", "role", "userId", "getNotifications", "filters", "query", "gte", "lte", "or", "count", "head", "offset", "order", "ascending", "range", "Error", "notifications", "total", "totalPages", "Math", "ceil", "createNotification", "notificationData", "createdBy", "insert", "created_by", "length", "individualNotifications", "map", "recipientId", "recipient_id", "performBulkAction", "notificationIds", "updateData", "deleteError", "delete", "in", "affected", "update", "updated_at", "Date", "toISOString", "getNotificationStats", "stats", "not", "summary", "unread", "filter", "n", "by_type", "info", "warning", "success", "by_priority", "low", "medium", "high", "urgent", "request", "startTime", "now", "rateLimitResult", "checkRateLimit", "response", "NextResponse", "json", "addRateLimitHeaders", "authResult", "errorResponse", "searchParams", "URL", "parse", "get", "metricsCollector", "recordApiCall", "endpoint", "method", "statusCode", "responseTime", "pagination", "nextResponse", "logger", "log", "LogLevel", "ERROR", "LogCategory", "API", "body", "validationResult", "safeParse", "result", "notification"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ecc0f869c837d90a0afed8ae6c3e91fedfdca064"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1gyl8z81ds = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1gyl8z81ds();
cov_1gyl8z81ds().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1gyl8z81ds().f[0]++;
  cov_1gyl8z81ds().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1gyl8z81ds().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1gyl8z81ds().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_1gyl8z81ds().f[1]++;
    cov_1gyl8z81ds().s[4]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_1gyl8z81ds().f[2]++;
    cov_1gyl8z81ds().s[5]++;
    return POST;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_1gyl8z81ds().f[3]++;
    cov_1gyl8z81ds().s[6]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_1gyl8z81ds().s[7]++, require("next/server"));
const _zod =
/* istanbul ignore next */
(cov_1gyl8z81ds().s[8]++, require("zod"));
const _supabasejs =
/* istanbul ignore next */
(cov_1gyl8z81ds().s[9]++, require("@supabase/supabase-js"));
const _config =
/* istanbul ignore next */
(cov_1gyl8z81ds().s[10]++, require("../../../../lib/auth/config"));
const _ratelimiter =
/* istanbul ignore next */
(cov_1gyl8z81ds().s[11]++, require("../../../../lib/enterprise/rate-limiter"));
const _logger =
/* istanbul ignore next */
(cov_1gyl8z81ds().s[12]++, require("../../../../lib/enterprise/logger"));
const _metrics =
/* istanbul ignore next */
(cov_1gyl8z81ds().s[13]++, require("../../../../lib/enterprise/metrics"));
const runtime =
/* istanbul ignore next */
(cov_1gyl8z81ds().s[14]++, 'nodejs');
// ===================================
// CONFIGURACIÃN
// ===================================
const supabase =
/* istanbul ignore next */
(cov_1gyl8z81ds().s[15]++, (0, _supabasejs.createClient)(process.env.NEXT_PUBLIC_SUPABASE_URL, process.env.SUPABASE_SERVICE_ROLE_KEY));
const RATE_LIMIT_CONFIGS =
/* istanbul ignore next */
(cov_1gyl8z81ds().s[16]++, {
  admin: {
    windowMs: 15 * 60 * 1000,
    maxRequests: 100,
    message: 'Demasiadas solicitudes administrativas'
  },
  create: {
    windowMs: 60 * 1000,
    maxRequests: 10,
    message: 'Demasiadas notificaciones creadas'
  }
});
// ===================================
// ESQUEMAS DE VALIDACIÃN
// ===================================
const NotificationFiltersSchema =
/* istanbul ignore next */
(cov_1gyl8z81ds().s[17]++, _zod.z.object({
  type: _zod.z.enum(['info', 'warning', 'error', 'success']).optional(),
  status: _zod.z.enum(['read', 'unread', 'archived']).optional(),
  priority: _zod.z.enum(['low', 'medium', 'high', 'urgent']).optional(),
  recipient_type: _zod.z.enum(['user', 'admin', 'all']).optional(),
  date_from: _zod.z.string().optional(),
  date_to: _zod.z.string().optional(),
  search: _zod.z.string().optional(),
  page: _zod.z.coerce.number().min(1).default(1),
  limit: _zod.z.coerce.number().min(1).max(100).default(20),
  sort_by: _zod.z.enum(['created_at', 'updated_at', 'priority', 'type']).default('created_at'),
  sort_order: _zod.z.enum(['asc', 'desc']).default('desc')
}));
const CreateNotificationSchema =
/* istanbul ignore next */
(cov_1gyl8z81ds().s[18]++, _zod.z.object({
  title: _zod.z.string().min(1).max(200),
  message: _zod.z.string().min(1).max(1000),
  type: _zod.z.enum(['info', 'warning', 'error', 'success']),
  priority: _zod.z.enum(['low', 'medium', 'high', 'urgent']).default('medium'),
  recipient_type: _zod.z.enum(['user', 'admin', 'all']),
  recipient_ids: _zod.z.array(_zod.z.string()).optional(),
  action_url: _zod.z.string().url().optional(),
  action_label: _zod.z.string().max(50).optional(),
  expires_at: _zod.z.string().datetime().optional(),
  metadata: _zod.z.record(_zod.z.any()).optional()
}));
const BulkActionSchema =
/* istanbul ignore next */
(cov_1gyl8z81ds().s[19]++, _zod.z.object({
  action: _zod.z.enum(['mark_read', 'mark_unread', 'archive', 'delete']),
  notification_ids: _zod.z.array(_zod.z.string()).min(1)
}));
// ===================================
// FUNCIONES AUXILIARES
// ===================================
async function validateAdminAuth() {
  /* istanbul ignore next */
  cov_1gyl8z81ds().f[4]++;
  const session =
  /* istanbul ignore next */
  (cov_1gyl8z81ds().s[20]++, await (0, _config.auth)());
  /* istanbul ignore next */
  cov_1gyl8z81ds().s[21]++;
  if (!session?.user) {
    /* istanbul ignore next */
    cov_1gyl8z81ds().b[0][0]++;
    cov_1gyl8z81ds().s[22]++;
    return {
      error: 'No autorizado',
      status: 401
    };
  } else
  /* istanbul ignore next */
  {
    cov_1gyl8z81ds().b[0][1]++;
  }
  // Verificar rol de administrador
  const {
    data: profile
  } =
  /* istanbul ignore next */
  (cov_1gyl8z81ds().s[23]++, await supabase.from('profiles').select('role').eq('id', session.user.id).single());
  /* istanbul ignore next */
  cov_1gyl8z81ds().s[24]++;
  if (profile?.role !== 'admin') {
    /* istanbul ignore next */
    cov_1gyl8z81ds().b[1][0]++;
    cov_1gyl8z81ds().s[25]++;
    return {
      error: 'Acceso denegado',
      status: 403
    };
  } else
  /* istanbul ignore next */
  {
    cov_1gyl8z81ds().b[1][1]++;
  }
  cov_1gyl8z81ds().s[26]++;
  return {
    userId: session.user.id
  };
}
async function getNotifications(filters) {
  /* istanbul ignore next */
  cov_1gyl8z81ds().f[5]++;
  let query =
  /* istanbul ignore next */
  (cov_1gyl8z81ds().s[27]++, supabase.from('notifications').select(`
      *,
      recipient:profiles!notifications_recipient_id_fkey(
        id,
        email,
        full_name
      ),
      creator:profiles!notifications_created_by_fkey(
        id,
        email,
        full_name
      )
    `));
  // Aplicar filtros
  /* istanbul ignore next */
  cov_1gyl8z81ds().s[28]++;
  if (filters.type) {
    /* istanbul ignore next */
    cov_1gyl8z81ds().b[2][0]++;
    cov_1gyl8z81ds().s[29]++;
    query = query.eq('type', filters.type);
  } else
  /* istanbul ignore next */
  {
    cov_1gyl8z81ds().b[2][1]++;
  }
  cov_1gyl8z81ds().s[30]++;
  if (filters.status) {
    /* istanbul ignore next */
    cov_1gyl8z81ds().b[3][0]++;
    cov_1gyl8z81ds().s[31]++;
    query = query.eq('status', filters.status);
  } else
  /* istanbul ignore next */
  {
    cov_1gyl8z81ds().b[3][1]++;
  }
  cov_1gyl8z81ds().s[32]++;
  if (filters.priority) {
    /* istanbul ignore next */
    cov_1gyl8z81ds().b[4][0]++;
    cov_1gyl8z81ds().s[33]++;
    query = query.eq('priority', filters.priority);
  } else
  /* istanbul ignore next */
  {
    cov_1gyl8z81ds().b[4][1]++;
  }
  cov_1gyl8z81ds().s[34]++;
  if (filters.recipient_type) {
    /* istanbul ignore next */
    cov_1gyl8z81ds().b[5][0]++;
    cov_1gyl8z81ds().s[35]++;
    query = query.eq('recipient_type', filters.recipient_type);
  } else
  /* istanbul ignore next */
  {
    cov_1gyl8z81ds().b[5][1]++;
  }
  cov_1gyl8z81ds().s[36]++;
  if (filters.date_from) {
    /* istanbul ignore next */
    cov_1gyl8z81ds().b[6][0]++;
    cov_1gyl8z81ds().s[37]++;
    query = query.gte('created_at', filters.date_from);
  } else
  /* istanbul ignore next */
  {
    cov_1gyl8z81ds().b[6][1]++;
  }
  cov_1gyl8z81ds().s[38]++;
  if (filters.date_to) {
    /* istanbul ignore next */
    cov_1gyl8z81ds().b[7][0]++;
    cov_1gyl8z81ds().s[39]++;
    query = query.lte('created_at', filters.date_to);
  } else
  /* istanbul ignore next */
  {
    cov_1gyl8z81ds().b[7][1]++;
  }
  cov_1gyl8z81ds().s[40]++;
  if (filters.search) {
    /* istanbul ignore next */
    cov_1gyl8z81ds().b[8][0]++;
    cov_1gyl8z81ds().s[41]++;
    query = query.or(`title.ilike.%${filters.search}%,message.ilike.%${filters.search}%`);
  } else
  /* istanbul ignore next */
  {
    cov_1gyl8z81ds().b[8][1]++;
  }
  // Contar total
  const {
    count
  } =
  /* istanbul ignore next */
  (cov_1gyl8z81ds().s[42]++, await query.select('*', {
    count: 'exact',
    head: true
  }));
  // Aplicar paginaciÃ³n y ordenamiento
  const offset =
  /* istanbul ignore next */
  (cov_1gyl8z81ds().s[43]++, (filters.page - 1) * filters.limit);
  /* istanbul ignore next */
  cov_1gyl8z81ds().s[44]++;
  query = query.order(filters.sort_by, {
    ascending: filters.sort_order === 'asc'
  }).range(offset, offset + filters.limit - 1);
  const {
    data,
    error
  } =
  /* istanbul ignore next */
  (cov_1gyl8z81ds().s[45]++, await query);
  /* istanbul ignore next */
  cov_1gyl8z81ds().s[46]++;
  if (error) {
    /* istanbul ignore next */
    cov_1gyl8z81ds().b[9][0]++;
    cov_1gyl8z81ds().s[47]++;
    throw new Error(`Error al obtener notificaciones: ${error.message}`);
  } else
  /* istanbul ignore next */
  {
    cov_1gyl8z81ds().b[9][1]++;
  }
  cov_1gyl8z81ds().s[48]++;
  return {
    notifications:
    /* istanbul ignore next */
    (cov_1gyl8z81ds().b[10][0]++, data) ||
    /* istanbul ignore next */
    (cov_1gyl8z81ds().b[10][1]++, []),
    total:
    /* istanbul ignore next */
    (cov_1gyl8z81ds().b[11][0]++, count) ||
    /* istanbul ignore next */
    (cov_1gyl8z81ds().b[11][1]++, 0),
    totalPages: Math.ceil((
    /* istanbul ignore next */
    (cov_1gyl8z81ds().b[12][0]++, count) ||
    /* istanbul ignore next */
    (cov_1gyl8z81ds().b[12][1]++, 0)) / filters.limit)
  };
}
async function createNotification(notificationData, createdBy) {
  /* istanbul ignore next */
  cov_1gyl8z81ds().f[6]++;
  const {
    data,
    error
  } =
  /* istanbul ignore next */
  (cov_1gyl8z81ds().s[49]++, await supabase.from('notifications').insert({
    ...notificationData,
    created_by: createdBy,
    status: 'unread'
  }).select().single());
  /* istanbul ignore next */
  cov_1gyl8z81ds().s[50]++;
  if (error) {
    /* istanbul ignore next */
    cov_1gyl8z81ds().b[13][0]++;
    cov_1gyl8z81ds().s[51]++;
    throw new Error(`Error al crear notificaciÃ³n: ${error.message}`);
  } else
  /* istanbul ignore next */
  {
    cov_1gyl8z81ds().b[13][1]++;
  }
  // Si es para usuarios especÃ­ficos, crear registros individuales
  cov_1gyl8z81ds().s[52]++;
  if (
  /* istanbul ignore next */
  (cov_1gyl8z81ds().b[15][0]++, notificationData.recipient_ids) &&
  /* istanbul ignore next */
  (cov_1gyl8z81ds().b[15][1]++, notificationData.recipient_ids.length > 0)) {
    /* istanbul ignore next */
    cov_1gyl8z81ds().b[14][0]++;
    const individualNotifications =
    /* istanbul ignore next */
    (cov_1gyl8z81ds().s[53]++, notificationData.recipient_ids.map(recipientId => {
      /* istanbul ignore next */
      cov_1gyl8z81ds().f[7]++;
      cov_1gyl8z81ds().s[54]++;
      return {
        ...notificationData,
        recipient_id: recipientId,
        recipient_type: 'user',
        created_by: createdBy,
        status: 'unread'
      };
    }));
    /* istanbul ignore next */
    cov_1gyl8z81ds().s[55]++;
    await supabase.from('notifications').insert(individualNotifications);
  } else
  /* istanbul ignore next */
  {
    cov_1gyl8z81ds().b[14][1]++;
  }
  cov_1gyl8z81ds().s[56]++;
  return data;
}
async function performBulkAction(action, notificationIds, userId) {
  /* istanbul ignore next */
  cov_1gyl8z81ds().f[8]++;
  let updateData =
  /* istanbul ignore next */
  (cov_1gyl8z81ds().s[57]++, {});
  /* istanbul ignore next */
  cov_1gyl8z81ds().s[58]++;
  switch (action) {
    case 'mark_read':
      /* istanbul ignore next */
      cov_1gyl8z81ds().b[16][0]++;
      cov_1gyl8z81ds().s[59]++;
      updateData = {
        status: 'read'
      };
      /* istanbul ignore next */
      cov_1gyl8z81ds().s[60]++;
      break;
    case 'mark_unread':
      /* istanbul ignore next */
      cov_1gyl8z81ds().b[16][1]++;
      cov_1gyl8z81ds().s[61]++;
      updateData = {
        status: 'unread'
      };
      /* istanbul ignore next */
      cov_1gyl8z81ds().s[62]++;
      break;
    case 'archive':
      /* istanbul ignore next */
      cov_1gyl8z81ds().b[16][2]++;
      cov_1gyl8z81ds().s[63]++;
      updateData = {
        status: 'archived'
      };
      /* istanbul ignore next */
      cov_1gyl8z81ds().s[64]++;
      break;
    case 'delete':
      /* istanbul ignore next */
      cov_1gyl8z81ds().b[16][3]++;
      const {
        error: deleteError
      } =
      /* istanbul ignore next */
      (cov_1gyl8z81ds().s[65]++, await supabase.from('notifications').delete().in('id', notificationIds));
      /* istanbul ignore next */
      cov_1gyl8z81ds().s[66]++;
      if (deleteError) {
        /* istanbul ignore next */
        cov_1gyl8z81ds().b[17][0]++;
        cov_1gyl8z81ds().s[67]++;
        throw new Error(`Error al eliminar notificaciones: ${deleteError.message}`);
      } else
      /* istanbul ignore next */
      {
        cov_1gyl8z81ds().b[17][1]++;
      }
      cov_1gyl8z81ds().s[68]++;
      return {
        affected: notificationIds.length
      };
  }
  const {
    data,
    error
  } =
  /* istanbul ignore next */
  (cov_1gyl8z81ds().s[69]++, await supabase.from('notifications').update({
    ...updateData,
    updated_at: new Date().toISOString()
  }).in('id', notificationIds).select());
  /* istanbul ignore next */
  cov_1gyl8z81ds().s[70]++;
  if (error) {
    /* istanbul ignore next */
    cov_1gyl8z81ds().b[18][0]++;
    cov_1gyl8z81ds().s[71]++;
    throw new Error(`Error en acciÃ³n masiva: ${error.message}`);
  } else
  /* istanbul ignore next */
  {
    cov_1gyl8z81ds().b[18][1]++;
  }
  cov_1gyl8z81ds().s[72]++;
  return {
    affected:
    /* istanbul ignore next */
    (cov_1gyl8z81ds().b[19][0]++, data?.length) ||
    /* istanbul ignore next */
    (cov_1gyl8z81ds().b[19][1]++, 0)
  };
}
async function getNotificationStats() {
  /* istanbul ignore next */
  cov_1gyl8z81ds().f[9]++;
  const {
    data: stats,
    error
  } =
  /* istanbul ignore next */
  (cov_1gyl8z81ds().s[73]++, await supabase.from('notifications').select('type, status, priority').not('status', 'eq', 'archived'));
  /* istanbul ignore next */
  cov_1gyl8z81ds().s[74]++;
  if (error) {
    /* istanbul ignore next */
    cov_1gyl8z81ds().b[20][0]++;
    cov_1gyl8z81ds().s[75]++;
    throw new Error(`Error al obtener estadÃ­sticas: ${error.message}`);
  } else
  /* istanbul ignore next */
  {
    cov_1gyl8z81ds().b[20][1]++;
  }
  const summary =
  /* istanbul ignore next */
  (cov_1gyl8z81ds().s[76]++, {
    total: stats.length,
    unread: stats.filter(n => {
      /* istanbul ignore next */
      cov_1gyl8z81ds().f[10]++;
      cov_1gyl8z81ds().s[77]++;
      return n.status === 'unread';
    }).length,
    by_type: {
      info: stats.filter(n => {
        /* istanbul ignore next */
        cov_1gyl8z81ds().f[11]++;
        cov_1gyl8z81ds().s[78]++;
        return n.type === 'info';
      }).length,
      warning: stats.filter(n => {
        /* istanbul ignore next */
        cov_1gyl8z81ds().f[12]++;
        cov_1gyl8z81ds().s[79]++;
        return n.type === 'warning';
      }).length,
      error: stats.filter(n => {
        /* istanbul ignore next */
        cov_1gyl8z81ds().f[13]++;
        cov_1gyl8z81ds().s[80]++;
        return n.type === 'error';
      }).length,
      success: stats.filter(n => {
        /* istanbul ignore next */
        cov_1gyl8z81ds().f[14]++;
        cov_1gyl8z81ds().s[81]++;
        return n.type === 'success';
      }).length
    },
    by_priority: {
      low: stats.filter(n => {
        /* istanbul ignore next */
        cov_1gyl8z81ds().f[15]++;
        cov_1gyl8z81ds().s[82]++;
        return n.priority === 'low';
      }).length,
      medium: stats.filter(n => {
        /* istanbul ignore next */
        cov_1gyl8z81ds().f[16]++;
        cov_1gyl8z81ds().s[83]++;
        return n.priority === 'medium';
      }).length,
      high: stats.filter(n => {
        /* istanbul ignore next */
        cov_1gyl8z81ds().f[17]++;
        cov_1gyl8z81ds().s[84]++;
        return n.priority === 'high';
      }).length,
      urgent: stats.filter(n => {
        /* istanbul ignore next */
        cov_1gyl8z81ds().f[18]++;
        cov_1gyl8z81ds().s[85]++;
        return n.priority === 'urgent';
      }).length
    }
  });
  /* istanbul ignore next */
  cov_1gyl8z81ds().s[86]++;
  return summary;
}
async function GET(request) {
  /* istanbul ignore next */
  cov_1gyl8z81ds().f[19]++;
  const startTime =
  /* istanbul ignore next */
  (cov_1gyl8z81ds().s[87]++, Date.now());
  /* istanbul ignore next */
  cov_1gyl8z81ds().s[88]++;
  try {
    // Rate limiting
    const rateLimitResult =
    /* istanbul ignore next */
    (cov_1gyl8z81ds().s[89]++, await (0, _ratelimiter.checkRateLimit)(request, {
      windowMs: RATE_LIMIT_CONFIGS.admin.windowMs,
      maxRequests: RATE_LIMIT_CONFIGS.admin.maxRequests,
      message: RATE_LIMIT_CONFIGS.admin.message
    }, 'admin-notifications'));
    /* istanbul ignore next */
    cov_1gyl8z81ds().s[90]++;
    if (!rateLimitResult.success) {
      /* istanbul ignore next */
      cov_1gyl8z81ds().b[21][0]++;
      const response =
      /* istanbul ignore next */
      (cov_1gyl8z81ds().s[91]++, _server.NextResponse.json({
        error: rateLimitResult.message
      }, {
        status: 429
      }));
      /* istanbul ignore next */
      cov_1gyl8z81ds().s[92]++;
      (0, _ratelimiter.addRateLimitHeaders)(response, rateLimitResult);
      /* istanbul ignore next */
      cov_1gyl8z81ds().s[93]++;
      return response;
    } else
    /* istanbul ignore next */
    {
      cov_1gyl8z81ds().b[21][1]++;
    }
    // Validar autenticaciÃ³n admin
    const authResult =
    /* istanbul ignore next */
    (cov_1gyl8z81ds().s[94]++, await validateAdminAuth());
    /* istanbul ignore next */
    cov_1gyl8z81ds().s[95]++;
    if (authResult.error) {
      /* istanbul ignore next */
      cov_1gyl8z81ds().b[22][0]++;
      const errorResponse =
      /* istanbul ignore next */
      (cov_1gyl8z81ds().s[96]++, {
        data: null,
        success: false,
        error: authResult.error
      });
      /* istanbul ignore next */
      cov_1gyl8z81ds().s[97]++;
      return _server.NextResponse.json(errorResponse, {
        status: authResult.status
      });
    } else
    /* istanbul ignore next */
    {
      cov_1gyl8z81ds().b[22][1]++;
    }
    // Parsear parÃ¡metros de consulta
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_1gyl8z81ds().s[98]++, new URL(request.url));
    const filters =
    /* istanbul ignore next */
    (cov_1gyl8z81ds().s[99]++, NotificationFiltersSchema.parse({
      type: searchParams.get('type'),
      status: searchParams.get('status'),
      priority: searchParams.get('priority'),
      recipient_type: searchParams.get('recipient_type'),
      date_from: searchParams.get('date_from'),
      date_to: searchParams.get('date_to'),
      search: searchParams.get('search'),
      page: searchParams.get('page'),
      limit: searchParams.get('limit'),
      sort_by: searchParams.get('sort_by'),
      sort_order: searchParams.get('sort_order')
    }));
    // Obtener notificaciones
    const {
      notifications,
      total,
      totalPages
    } =
    /* istanbul ignore next */
    (cov_1gyl8z81ds().s[100]++, await getNotifications(filters));
    // Obtener estadÃ­sticas si se solicita
    let stats =
    /* istanbul ignore next */
    (cov_1gyl8z81ds().s[101]++, null);
    /* istanbul ignore next */
    cov_1gyl8z81ds().s[102]++;
    if (searchParams.get('include_stats') === 'true') {
      /* istanbul ignore next */
      cov_1gyl8z81ds().b[23][0]++;
      cov_1gyl8z81ds().s[103]++;
      stats = await getNotificationStats();
    } else
    /* istanbul ignore next */
    {
      cov_1gyl8z81ds().b[23][1]++;
    }
    // Registrar mÃ©tricas
    cov_1gyl8z81ds().s[104]++;
    _metrics.metricsCollector.recordApiCall({
      endpoint: '/api/admin/notifications',
      method: 'GET',
      statusCode: 200,
      responseTime: Date.now() - startTime,
      userId: authResult.userId
    });
    const response =
    /* istanbul ignore next */
    (cov_1gyl8z81ds().s[105]++, {
      data: notifications,
      success: true,
      message: 'Notificaciones obtenidas exitosamente',
      pagination: {
        page: filters.page,
        limit: filters.limit,
        total,
        totalPages
      },
      ...(
      /* istanbul ignore next */
      (cov_1gyl8z81ds().b[24][0]++, stats) &&
      /* istanbul ignore next */
      (cov_1gyl8z81ds().b[24][1]++, {
        stats
      }))
    });
    const nextResponse =
    /* istanbul ignore next */
    (cov_1gyl8z81ds().s[106]++, _server.NextResponse.json(response));
    /* istanbul ignore next */
    cov_1gyl8z81ds().s[107]++;
    (0, _ratelimiter.addRateLimitHeaders)(nextResponse, rateLimitResult);
    /* istanbul ignore next */
    cov_1gyl8z81ds().s[108]++;
    return nextResponse;
  } catch (error) {
    /* istanbul ignore next */
    cov_1gyl8z81ds().s[109]++;
    _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.API, 'Error en GET /api/admin/notifications', {
      error
    });
    // Registrar mÃ©tricas de error
    /* istanbul ignore next */
    cov_1gyl8z81ds().s[110]++;
    _metrics.metricsCollector.recordApiCall({
      endpoint: '/api/admin/notifications',
      method: 'GET',
      statusCode: 500,
      responseTime: Date.now() - startTime,
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_1gyl8z81ds().b[25][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1gyl8z81ds().b[25][1]++, 'Unknown error')
    });
    const errorResponse =
    /* istanbul ignore next */
    (cov_1gyl8z81ds().s[111]++, {
      data: null,
      success: false,
      error: 'Error interno del servidor'
    });
    /* istanbul ignore next */
    cov_1gyl8z81ds().s[112]++;
    return _server.NextResponse.json(errorResponse, {
      status: 500
    });
  }
}
async function POST(request) {
  /* istanbul ignore next */
  cov_1gyl8z81ds().f[20]++;
  const startTime =
  /* istanbul ignore next */
  (cov_1gyl8z81ds().s[113]++, Date.now());
  /* istanbul ignore next */
  cov_1gyl8z81ds().s[114]++;
  try {
    // Rate limiting
    const rateLimitResult =
    /* istanbul ignore next */
    (cov_1gyl8z81ds().s[115]++, await (0, _ratelimiter.checkRateLimit)(request, {
      windowMs: RATE_LIMIT_CONFIGS.create.windowMs,
      maxRequests: RATE_LIMIT_CONFIGS.create.maxRequests,
      message: RATE_LIMIT_CONFIGS.create.message
    }, 'admin-notifications-create'));
    /* istanbul ignore next */
    cov_1gyl8z81ds().s[116]++;
    if (!rateLimitResult.success) {
      /* istanbul ignore next */
      cov_1gyl8z81ds().b[26][0]++;
      const response =
      /* istanbul ignore next */
      (cov_1gyl8z81ds().s[117]++, _server.NextResponse.json({
        error: rateLimitResult.message
      }, {
        status: 429
      }));
      /* istanbul ignore next */
      cov_1gyl8z81ds().s[118]++;
      (0, _ratelimiter.addRateLimitHeaders)(response, rateLimitResult);
      /* istanbul ignore next */
      cov_1gyl8z81ds().s[119]++;
      return response;
    } else
    /* istanbul ignore next */
    {
      cov_1gyl8z81ds().b[26][1]++;
    }
    // Validar autenticaciÃ³n admin
    const authResult =
    /* istanbul ignore next */
    (cov_1gyl8z81ds().s[120]++, await validateAdminAuth());
    /* istanbul ignore next */
    cov_1gyl8z81ds().s[121]++;
    if (authResult.error) {
      /* istanbul ignore next */
      cov_1gyl8z81ds().b[27][0]++;
      const errorResponse =
      /* istanbul ignore next */
      (cov_1gyl8z81ds().s[122]++, {
        data: null,
        success: false,
        error: authResult.error
      });
      /* istanbul ignore next */
      cov_1gyl8z81ds().s[123]++;
      return _server.NextResponse.json(errorResponse, {
        status: authResult.status
      });
    } else
    /* istanbul ignore next */
    {
      cov_1gyl8z81ds().b[27][1]++;
    }
    const body =
    /* istanbul ignore next */
    (cov_1gyl8z81ds().s[124]++, await request.json());
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_1gyl8z81ds().s[125]++, new URL(request.url));
    const action =
    /* istanbul ignore next */
    (cov_1gyl8z81ds().s[126]++, searchParams.get('action'));
    // Determinar si es acciÃ³n masiva o creaciÃ³n
    /* istanbul ignore next */
    cov_1gyl8z81ds().s[127]++;
    if (action === 'bulk') {
      /* istanbul ignore next */
      cov_1gyl8z81ds().b[28][0]++;
      // Validar datos para acciÃ³n masiva
      const validationResult =
      /* istanbul ignore next */
      (cov_1gyl8z81ds().s[128]++, BulkActionSchema.safeParse(body));
      /* istanbul ignore next */
      cov_1gyl8z81ds().s[129]++;
      if (!validationResult.success) {
        /* istanbul ignore next */
        cov_1gyl8z81ds().b[29][0]++;
        const errorResponse =
        /* istanbul ignore next */
        (cov_1gyl8z81ds().s[130]++, {
          data: null,
          success: false,
          error: 'Datos de acciÃ³n masiva invÃ¡lidos'
        });
        /* istanbul ignore next */
        cov_1gyl8z81ds().s[131]++;
        return _server.NextResponse.json(errorResponse, {
          status: 400
        });
      } else
      /* istanbul ignore next */
      {
        cov_1gyl8z81ds().b[29][1]++;
      }
      // Ejecutar acciÃ³n masiva
      const result =
      /* istanbul ignore next */
      (cov_1gyl8z81ds().s[132]++, await performBulkAction(validationResult.data.action, validationResult.data.notification_ids, authResult.userId));
      // Registrar mÃ©tricas
      /* istanbul ignore next */
      cov_1gyl8z81ds().s[133]++;
      _metrics.metricsCollector.recordApiCall({
        endpoint: '/api/admin/notifications',
        method: 'POST',
        statusCode: 200,
        responseTime: Date.now() - startTime,
        userId: authResult.userId
      });
      const response =
      /* istanbul ignore next */
      (cov_1gyl8z81ds().s[134]++, {
        data: result,
        success: true,
        message: `AcciÃ³n ${validationResult.data.action} ejecutada en ${result.affected} notificaciones`
      });
      const nextResponse =
      /* istanbul ignore next */
      (cov_1gyl8z81ds().s[135]++, _server.NextResponse.json(response));
      /* istanbul ignore next */
      cov_1gyl8z81ds().s[136]++;
      (0, _ratelimiter.addRateLimitHeaders)(nextResponse, rateLimitResult);
      /* istanbul ignore next */
      cov_1gyl8z81ds().s[137]++;
      return nextResponse;
    } else {
      /* istanbul ignore next */
      cov_1gyl8z81ds().b[28][1]++;
      // Validar datos para crear notificaciÃ³n
      const validationResult =
      /* istanbul ignore next */
      (cov_1gyl8z81ds().s[138]++, CreateNotificationSchema.safeParse(body));
      /* istanbul ignore next */
      cov_1gyl8z81ds().s[139]++;
      if (!validationResult.success) {
        /* istanbul ignore next */
        cov_1gyl8z81ds().b[30][0]++;
        const errorResponse =
        /* istanbul ignore next */
        (cov_1gyl8z81ds().s[140]++, {
          data: null,
          success: false,
          error: 'Datos de notificaciÃ³n invÃ¡lidos'
        });
        /* istanbul ignore next */
        cov_1gyl8z81ds().s[141]++;
        return _server.NextResponse.json(errorResponse, {
          status: 400
        });
      } else
      /* istanbul ignore next */
      {
        cov_1gyl8z81ds().b[30][1]++;
      }
      // Crear notificaciÃ³n
      const notification =
      /* istanbul ignore next */
      (cov_1gyl8z81ds().s[142]++, await createNotification(validationResult.data, authResult.userId));
      // Registrar mÃ©tricas
      /* istanbul ignore next */
      cov_1gyl8z81ds().s[143]++;
      _metrics.metricsCollector.recordApiCall({
        endpoint: '/api/admin/notifications',
        method: 'POST',
        statusCode: 201,
        responseTime: Date.now() - startTime,
        userId: authResult.userId
      });
      const response =
      /* istanbul ignore next */
      (cov_1gyl8z81ds().s[144]++, {
        data: notification,
        success: true,
        message: 'NotificaciÃ³n creada exitosamente'
      });
      const nextResponse =
      /* istanbul ignore next */
      (cov_1gyl8z81ds().s[145]++, _server.NextResponse.json(response, {
        status: 201
      }));
      /* istanbul ignore next */
      cov_1gyl8z81ds().s[146]++;
      (0, _ratelimiter.addRateLimitHeaders)(nextResponse, rateLimitResult);
      /* istanbul ignore next */
      cov_1gyl8z81ds().s[147]++;
      return nextResponse;
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_1gyl8z81ds().s[148]++;
    _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.API, 'Error en POST /api/admin/notifications', {
      error
    });
    // Registrar mÃ©tricas de error
    /* istanbul ignore next */
    cov_1gyl8z81ds().s[149]++;
    _metrics.metricsCollector.recordApiCall({
      endpoint: '/api/admin/notifications',
      method: 'POST',
      statusCode: 500,
      responseTime: Date.now() - startTime,
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_1gyl8z81ds().b[31][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1gyl8z81ds().b[31][1]++, 'Unknown error')
    });
    const errorResponse =
    /* istanbul ignore next */
    (cov_1gyl8z81ds().s[150]++, {
      data: null,
      success: false,
      error: 'Error interno del servidor'
    });
    /* istanbul ignore next */
    cov_1gyl8z81ds().s[151]++;
    return _server.NextResponse.json(errorResponse, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,