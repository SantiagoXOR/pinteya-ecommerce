{"version":3,"names":["cov_7gur7wk6","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","validateJWTIntegrity","validateJWTPermissions","withJWTValidation","JWT_SECURITY_CONFIG","maxTokenAge","minTimeBeforeExpiry","expectedIssuer","process","env","NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY","split","expectedAudience","allowedAlgorithms","requiredClaims","request","valid","error","code","severity","session","_config","auth","user","payload","userId","id","email","details","subject","issuer","console","performTokenSecurityChecks","token","now","Math","floor","Date","notExpired","exp","notBeforeValid","nbf","issuerValid","iss","includes","audienceValid","aud","subjectValid","sub","metadataValid","sessionValid","sid","signatureValid","requiredRole","requiredPermissions","jwtValidation","userRole","role","length","userPermissions","permissions","hasAllPermissions","every","permission","join","handler","args","errorResponse","success","res","status","json","Response","JSON","stringify","headers","permissionValidation","jwtPayload","jwtDetails"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\auth\\jwt-validation.ts"],"sourcesContent":["/**\r\n * Validaciones Avanzadas de JWT para Seguridad\r\n * Implementa verificación de integridad, autenticidad y validez de tokens\r\n */\r\n\r\nimport { auth } from '@/lib/auth/config';\r\nimport { NextRequest } from 'next/server';\r\nimport type { NextApiRequest } from 'next';\r\n\r\n// =====================================================\r\n// TIPOS Y INTERFACES\r\n// =====================================================\r\n\r\n// Tipos específicos para JWT\r\nexport interface JWTPayload {\r\n  sub?: string;\r\n  iss?: string;\r\n  aud?: string | string[];\r\n  exp?: number;\r\n  iat?: number;\r\n  nbf?: number;\r\n  jti?: string;\r\n  email?: string;\r\n  role?: string;\r\n  permissions?: string[];\r\n  sessionId?: string;\r\n  [key: string]: unknown;\r\n}\r\n\r\nexport interface JWTMetadata {\r\n  tokenType?: string;\r\n  deviceId?: string;\r\n  ipAddress?: string;\r\n  userAgent?: string;\r\n  lastActivity?: number;\r\n  [key: string]: unknown;\r\n}\r\n\r\nexport interface JWTDetails {\r\n  issuer?: string;\r\n  audience?: string;\r\n  expiresAt?: number;\r\n  issuedAt?: number;\r\n  notBefore?: number;\r\n  subject?: string;\r\n  sessionId?: string;\r\n  metadata?: JWTMetadata;\r\n}\r\n\r\nexport interface JWTValidationResult {\r\n  valid: boolean;\r\n  payload?: JWTPayload;\r\n  error?: string;\r\n  code?: string;\r\n  severity?: 'low' | 'medium' | 'high' | 'critical';\r\n  details?: JWTDetails;\r\n}\r\n\r\nexport interface TokenSecurityChecks {\r\n  signatureValid: boolean;\r\n  notExpired: boolean;\r\n  notBeforeValid: boolean;\r\n  issuerValid: boolean;\r\n  audienceValid: boolean;\r\n  subjectValid: boolean;\r\n  metadataValid: boolean;\r\n  sessionValid: boolean;\r\n}\r\n\r\nexport interface RequestWithJWT extends NextRequest {\r\n  jwtPayload?: JWTPayload;\r\n  jwtDetails?: JWTDetails;\r\n}\r\n\r\nexport interface NextApiRequestWithJWT extends NextApiRequest {\r\n  jwtPayload?: JWTPayload;\r\n  jwtDetails?: JWTDetails;\r\n}\r\n\r\nexport interface ResponseLike {\r\n  status: (code: number) => {\r\n    json: (data: unknown) => unknown;\r\n  };\r\n}\r\n\r\n// =====================================================\r\n// CONFIGURACIÓN DE SEGURIDAD\r\n// =====================================================\r\n\r\nconst JWT_SECURITY_CONFIG = {\r\n  // Tiempo máximo de vida del token (24 horas)\r\n  maxTokenAge: 24 * 60 * 60 * 1000,\r\n  \r\n  // Tiempo mínimo antes de expiración para considerar válido (5 minutos)\r\n  minTimeBeforeExpiry: 5 * 60 * 1000,\r\n  \r\n  // Issuer esperado de Clerk\r\n  expectedIssuer: process.env.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY?.split('_')[1] || 'clerk',\r\n  \r\n  // Audience esperada\r\n  expectedAudience: process.env.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY || '',\r\n  \r\n  // Algoritmos permitidos\r\n  allowedAlgorithms: ['RS256', 'HS256'],\r\n  \r\n  // Claims requeridos\r\n  requiredClaims: ['sub', 'iat', 'exp', 'iss', 'aud']\r\n};\r\n\r\n// =====================================================\r\n// FUNCIONES DE VALIDACIÓN DE JWT\r\n// =====================================================\r\n\r\n/**\r\n * Valida la integridad y autenticidad de un token JWT\r\n */\r\nexport async function validateJWTIntegrity(\r\n  request?: NextRequest | NextApiRequest\r\n): Promise<JWTValidationResult> {\r\n  try {\r\n    // NextAuth.js - Obtener sesión en lugar de token JWT\r\n    if (request && 'query' in request) {\r\n      // Pages Router - No soportado con NextAuth.js\r\n      return {\r\n        valid: false,\r\n        error: 'Pages Router no soportado con NextAuth.js',\r\n        code: 'NOT_SUPPORTED',\r\n        severity: 'medium'\r\n      };\r\n    } else {\r\n      // App Router - NextAuth.js\r\n      try {\r\n        const session = await auth();\r\n        if (!session?.user) {\r\n          return {\r\n            valid: false,\r\n            error: 'Usuario no autenticado',\r\n            code: 'NOT_AUTHENTICATED',\r\n            severity: 'medium'\r\n          };\r\n        }\r\n        // Para NextAuth.js, consideramos válida la sesión si existe\r\n        return {\r\n          valid: true,\r\n          payload: {\r\n            userId: session.user.id,\r\n            email: session.user.email,\r\n            name: session.user.name\r\n          } as JWTPayload,\r\n          details: {\r\n            subject: session.user.id,\r\n            issuer: 'nextauth'\r\n          }\r\n        };\r\n      } catch (error) {\r\n        return {\r\n          valid: false,\r\n          error: 'Error obteniendo sesión desde NextAuth.js',\r\n          code: 'SESSION_RETRIEVAL_ERROR',\r\n          severity: 'medium'\r\n        };\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error('[JWT] Error en validación de integridad:', error);\r\n    return {\r\n      valid: false,\r\n      error: 'Error interno en validación de JWT',\r\n      code: 'VALIDATION_ERROR',\r\n      severity: 'critical'\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Realiza verificaciones de seguridad específicas del token\r\n */\r\nasync function performTokenSecurityChecks(\r\n  payload: any,\r\n  token: string\r\n): Promise<TokenSecurityChecks> {\r\n  const now = Math.floor(Date.now() / 1000);\r\n\r\n  return {\r\n    // Verificar que el token no esté expirado\r\n    notExpired: payload.exp && payload.exp > now,\r\n    \r\n    // Verificar notBefore si existe\r\n    notBeforeValid: !payload.nbf || payload.nbf <= now,\r\n    \r\n    // Verificar issuer\r\n    issuerValid: payload.iss && payload.iss.includes('clerk'),\r\n    \r\n    // Verificar audience\r\n    audienceValid: payload.aud && typeof payload.aud === 'string',\r\n    \r\n    // Verificar subject (userId)\r\n    subjectValid: payload.sub && typeof payload.sub === 'string',\r\n    \r\n    // Verificar metadata básica\r\n    metadataValid: true, // Clerk maneja esto internamente\r\n    \r\n    // Verificar sesión\r\n    sessionValid: payload.sid && typeof payload.sid === 'string',\r\n    \r\n    // Nota: La verificación de firma la hace Clerk internamente\r\n    signatureValid: true\r\n  };\r\n}\r\n\r\n/**\r\n * Valida permisos específicos en el token JWT\r\n */\r\nexport async function validateJWTPermissions(\r\n  requiredRole: string,\r\n  requiredPermissions: string[] = [],\r\n  request?: NextRequest | NextApiRequest\r\n): Promise<JWTValidationResult> {\r\n  try {\r\n    const jwtValidation = await validateJWTIntegrity(request);\r\n    \r\n    if (!jwtValidation.valid) {\r\n      return jwtValidation;\r\n    }\r\n\r\n    const payload = jwtValidation.payload;\r\n    \r\n    // Verificar rol en metadata\r\n    const userRole = payload?.role;\r\n    if (requiredRole && userRole !== requiredRole) {\r\n      return {\r\n        valid: false,\r\n        error: `Rol requerido: ${requiredRole}, rol actual: ${userRole}`,\r\n        code: 'INSUFFICIENT_ROLE',\r\n        severity: 'high'\r\n      };\r\n    }\r\n\r\n    // Verificar permisos específicos si se proporcionan\r\n    if (requiredPermissions.length > 0) {\r\n      const userPermissions = payload?.permissions || [];\r\n      const hasAllPermissions = requiredPermissions.every(\r\n        permission => userPermissions.includes(permission)\r\n      );\r\n      \r\n      if (!hasAllPermissions) {\r\n        return {\r\n          valid: false,\r\n          error: `Permisos insuficientes. Requeridos: ${requiredPermissions.join(', ')}`,\r\n          code: 'INSUFFICIENT_PERMISSIONS',\r\n          severity: 'high'\r\n        };\r\n      }\r\n    }\r\n\r\n    return {\r\n      valid: true,\r\n      payload,\r\n      details: jwtValidation.details\r\n    };\r\n\r\n  } catch (error) {\r\n    console.error('[JWT] Error en validación de permisos:', error);\r\n    return {\r\n      valid: false,\r\n      error: 'Error interno en validación de permisos JWT',\r\n      code: 'PERMISSION_VALIDATION_ERROR',\r\n      severity: 'critical'\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Middleware para validación automática de JWT\r\n */\r\nexport function withJWTValidation(\r\n  requiredRole?: string,\r\n  requiredPermissions?: string[]\r\n) {\r\n  return function (handler: Function) {\r\n    return async (request: NextRequest | NextApiRequest, ...args: any[]) => {\r\n      try {\r\n        // Validar integridad del JWT\r\n        const jwtValidation = await validateJWTIntegrity(request);\r\n        \r\n        if (!jwtValidation.valid) {\r\n          const errorResponse = {\r\n            success: false,\r\n            error: jwtValidation.error,\r\n            code: jwtValidation.code,\r\n            severity: jwtValidation.severity\r\n          };\r\n\r\n          if ('query' in request) {\r\n            // Pages Router\r\n            const res = args[0] as ResponseLike;\r\n            return res.status(401).json(errorResponse);\r\n          } else {\r\n            // App Router\r\n            return new Response(JSON.stringify(errorResponse), {\r\n              status: 401,\r\n              headers: { 'Content-Type': 'application/json' }\r\n            });\r\n          }\r\n        }\r\n\r\n        // Validar permisos si se especifican\r\n        if (requiredRole || requiredPermissions) {\r\n          const permissionValidation = await validateJWTPermissions(\r\n            requiredRole || '',\r\n            requiredPermissions || [],\r\n            request\r\n          );\r\n          \r\n          if (!permissionValidation.valid) {\r\n            const errorResponse = {\r\n              success: false,\r\n              error: permissionValidation.error,\r\n              code: permissionValidation.code,\r\n              severity: permissionValidation.severity\r\n            };\r\n\r\n            if ('query' in request) {\r\n              // Pages Router\r\n              const res = args[0] as ResponseLike;\r\n              return res.status(403).json(errorResponse);\r\n            } else {\r\n              // App Router\r\n              return new Response(JSON.stringify(errorResponse), {\r\n                status: 403,\r\n                headers: { 'Content-Type': 'application/json' }\r\n              });\r\n            }\r\n          }\r\n        }\r\n\r\n        // Añadir información del JWT al request\r\n        (request as RequestWithJWT).jwtPayload = jwtValidation.payload;\r\n        (request as RequestWithJWT).jwtDetails = jwtValidation.details;\r\n\r\n        // Continuar con el handler original\r\n        return handler(request, ...args);\r\n\r\n      } catch (error) {\r\n        console.error('[JWT] Error en middleware de validación:', error);\r\n        \r\n        const errorResponse = {\r\n          success: false,\r\n          error: 'Error interno en validación JWT',\r\n          code: 'JWT_MIDDLEWARE_ERROR'\r\n        };\r\n\r\n        if ('query' in request) {\r\n          // Pages Router\r\n          const res = args[0] as ResponseLike;\r\n          return res.status(500).json(errorResponse);\r\n        } else {\r\n          // App Router\r\n          return new Response(JSON.stringify(errorResponse), {\r\n            status: 500,\r\n            headers: { 'Content-Type': 'application/json' }\r\n          });\r\n        }\r\n      }\r\n    };\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]}