ef81664620ec3c4791a40db1aa4a7e9a
// ===================================
// PINTEYA E-COMMERCE - ENTERPRISE MONITORING MANAGER
// Sistema de monitoreo enterprise con error tracking, performance y analytics
// ===================================
// Importar performance hooks solo en servidor
"use strict";

/* istanbul ignore next */
function cov_2mm4eitwes() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\monitoring\\enterprise-monitoring-manager.ts";
  var hash = "fef37584cb6db145f10b9a25d1dcc5ee1f7888f6";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\monitoring\\enterprise-monitoring-manager.ts",
    statementMap: {
      "0": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 9,
          column: 3
        }
      },
      "1": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "2": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 24
        }
      },
      "3": {
        start: {
          line: 19,
          column: 18
        },
        end: {
          line: 19,
          column: 78
        }
      },
      "4": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 32
        }
      },
      "5": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 34
        }
      },
      "6": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 36
        }
      },
      "7": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 38
        }
      },
      "8": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 29
        }
      },
      "9": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 50
        }
      },
      "10": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 43
        }
      },
      "11": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 42
        }
      },
      "12": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 42,
          column: 9
        }
      },
      "13": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 40,
          column: 13
        }
      },
      "14": {
        start: {
          line: 39,
          column: 16
        },
        end: {
          line: 39,
          column: 83
        }
      },
      "15": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 41,
          column: 91
        }
      },
      "16": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 52
        }
      },
      "17": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 53,
          column: 9
        }
      },
      "18": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 22
        }
      },
      "19": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 57,
          column: 9
        }
      },
      "20": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 56,
          column: 22
        }
      },
      "21": {
        start: {
          line: 58,
          column: 29
        },
        end: {
          line: 58,
          column: 78
        }
      },
      "22": {
        start: {
          line: 59,
          column: 22
        },
        end: {
          line: 59,
          column: 73
        }
      },
      "23": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 63,
          column: 9
        }
      },
      "24": {
        start: {
          line: 61,
          column: 67
        },
        end: {
          line: 61,
          column: 97
        }
      },
      "25": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 22
        }
      },
      "26": {
        start: {
          line: 64,
          column: 28
        },
        end: {
          line: 64,
          column: 78
        }
      },
      "27": {
        start: {
          line: 65,
          column: 24
        },
        end: {
          line: 65,
          column: 46
        }
      },
      "28": {
        start: {
          line: 66,
          column: 27
        },
        end: {
          line: 81,
          column: 9
        }
      },
      "29": {
        start: {
          line: 83,
          column: 30
        },
        end: {
          line: 83,
          column: 103
        }
      },
      "30": {
        start: {
          line: 83,
          column: 73
        },
        end: {
          line: 83,
          column: 102
        }
      },
      "31": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 89,
          column: 9
        }
      },
      "32": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 34
        }
      },
      "33": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 86,
          column: 49
        }
      },
      "34": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 49
        }
      },
      "35": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 91,
          column: 42
        }
      },
      "36": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 95,
          column: 9
        }
      },
      "37": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 94,
          column: 70
        }
      },
      "38": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 96,
          column: 23
        }
      },
      "39": {
        start: {
          line: 101,
          column: 21
        },
        end: {
          line: 101,
          column: 53
        }
      },
      "40": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 105,
          column: 9
        }
      },
      "41": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 67
        }
      },
      "42": {
        start: {
          line: 104,
          column: 40
        },
        end: {
          line: 104,
          column: 65
        }
      },
      "43": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 108,
          column: 9
        }
      },
      "44": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 120
        }
      },
      "45": {
        start: {
          line: 107,
          column: 40
        },
        end: {
          line: 107,
          column: 118
        }
      },
      "46": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 111,
          column: 9
        }
      },
      "47": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 110,
          column: 83
        }
      },
      "48": {
        start: {
          line: 110,
          column: 40
        },
        end: {
          line: 110,
          column: 81
        }
      },
      "49": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 113,
          column: 75
        }
      },
      "50": {
        start: {
          line: 113,
          column: 28
        },
        end: {
          line: 113,
          column: 73
        }
      },
      "51": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 117,
          column: 9
        }
      },
      "52": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 52
        }
      },
      "53": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 118,
          column: 22
        }
      },
      "54": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 128,
          column: 9
        }
      },
      "55": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 127,
          column: 19
        }
      },
      "56": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 130,
          column: 32
        }
      },
      "57": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 134,
          column: 18
        }
      },
      "58": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 133,
          column: 45
        }
      },
      "59": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 140,
          column: 11
        }
      },
      "60": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 139,
          column: 13
        }
      },
      "61": {
        start: {
          line: 138,
          column: 16
        },
        end: {
          line: 138,
          column: 49
        }
      },
      "62": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 154,
          column: 11
        }
      },
      "63": {
        start: {
          line: 147,
          column: 28
        },
        end: {
          line: 147,
          column: 50
        }
      },
      "64": {
        start: {
          line: 148,
          column: 30
        },
        end: {
          line: 148,
          column: 57
        }
      },
      "65": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 149,
          column: 58
        }
      },
      "66": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 164,
          column: 11
        }
      },
      "67": {
        start: {
          line: 156,
          column: 28
        },
        end: {
          line: 156,
          column: 50
        }
      },
      "68": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 159,
          column: 15
        }
      },
      "69": {
        start: {
          line: 158,
          column: 16
        },
        end: {
          line: 158,
          column: 82
        }
      },
      "70": {
        start: {
          line: 166,
          column: 23
        },
        end: {
          line: 166,
          column: 24
        }
      },
      "71": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 179,
          column: 11
        }
      },
      "72": {
        start: {
          line: 168,
          column: 28
        },
        end: {
          line: 168,
          column: 50
        }
      },
      "73": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 173,
          column: 15
        }
      },
      "74": {
        start: {
          line: 170,
          column: 16
        },
        end: {
          line: 172,
          column: 17
        }
      },
      "75": {
        start: {
          line: 171,
          column: 20
        },
        end: {
          line: 171,
          column: 44
        }
      },
      "76": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 174,
          column: 47
        }
      },
      "77": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 186,
          column: 9
        }
      },
      "78": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 185,
          column: 19
        }
      },
      "79": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 190,
          column: 9
        }
      },
      "80": {
        start: {
          line: 189,
          column: 12
        },
        end: {
          line: 189,
          column: 19
        }
      },
      "81": {
        start: {
          line: 191,
          column: 24
        },
        end: {
          line: 211,
          column: 9
        }
      },
      "82": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 212,
          column: 43
        }
      },
      "83": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 216,
          column: 9
        }
      },
      "84": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 215,
          column: 69
        }
      },
      "85": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 218,
          column: 45
        }
      },
      "86": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 222,
          column: 9
        }
      },
      "87": {
        start: {
          line: 221,
          column: 12
        },
        end: {
          line: 221,
          column: 79
        }
      },
      "88": {
        start: {
          line: 227,
          column: 23
        },
        end: {
          line: 235,
          column: 9
        }
      },
      "89": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 237,
          column: 44
        }
      },
      "90": {
        start: {
          line: 239,
          column: 8
        },
        end: {
          line: 241,
          column: 9
        }
      },
      "91": {
        start: {
          line: 240,
          column: 12
        },
        end: {
          line: 240,
          column: 84
        }
      },
      "92": {
        start: {
          line: 249,
          column: 29
        },
        end: {
          line: 290,
          column: 9
        }
      },
      "93": {
        start: {
          line: 291,
          column: 8
        },
        end: {
          line: 293,
          column: 11
        }
      },
      "94": {
        start: {
          line: 292,
          column: 12
        },
        end: {
          line: 292,
          column: 47
        }
      },
      "95": {
        start: {
          line: 299,
          column: 29
        },
        end: {
          line: 304,
          column: 10
        }
      },
      "96": {
        start: {
          line: 305,
          column: 26
        },
        end: {
          line: 305,
          column: 51
        }
      },
      "97": {
        start: {
          line: 306,
          column: 8
        },
        end: {
          line: 306,
          column: 56
        }
      },
      "98": {
        start: {
          line: 308,
          column: 8
        },
        end: {
          line: 315,
          column: 9
        }
      },
      "99": {
        start: {
          line: 309,
          column: 12
        },
        end: {
          line: 314,
          column: 15
        }
      },
      "100": {
        start: {
          line: 320,
          column: 31
        },
        end: {
          line: 320,
          column: 38
        }
      },
      "101": {
        start: {
          line: 322,
          column: 8
        },
        end: {
          line: 326,
          column: 11
        }
      },
      "102": {
        start: {
          line: 323,
          column: 12
        },
        end: {
          line: 325,
          column: 13
        }
      },
      "103": {
        start: {
          line: 324,
          column: 16
        },
        end: {
          line: 324,
          column: 58
        }
      },
      "104": {
        start: {
          line: 331,
          column: 30
        },
        end: {
          line: 331,
          column: 125
        }
      },
      "105": {
        start: {
          line: 331,
          column: 82
        },
        end: {
          line: 331,
          column: 124
        }
      },
      "106": {
        start: {
          line: 332,
          column: 8
        },
        end: {
          line: 345,
          column: 11
        }
      },
      "107": {
        start: {
          line: 333,
          column: 34
        },
        end: {
          line: 333,
          column: 74
        }
      },
      "108": {
        start: {
          line: 334,
          column: 12
        },
        end: {
          line: 344,
          column: 13
        }
      },
      "109": {
        start: {
          line: 335,
          column: 16
        },
        end: {
          line: 343,
          column: 19
        }
      },
      "110": {
        start: {
          line: 350,
          column: 8
        },
        end: {
          line: 363,
          column: 9
        }
      },
      "111": {
        start: {
          line: 352,
          column: 16
        },
        end: {
          line: 352,
          column: 46
        }
      },
      "112": {
        start: {
          line: 354,
          column: 16
        },
        end: {
          line: 354,
          column: 46
        }
      },
      "113": {
        start: {
          line: 356,
          column: 16
        },
        end: {
          line: 356,
          column: 47
        }
      },
      "114": {
        start: {
          line: 358,
          column: 16
        },
        end: {
          line: 358,
          column: 47
        }
      },
      "115": {
        start: {
          line: 360,
          column: 16
        },
        end: {
          line: 360,
          column: 48
        }
      },
      "116": {
        start: {
          line: 362,
          column: 16
        },
        end: {
          line: 362,
          column: 29
        }
      },
      "117": {
        start: {
          line: 368,
          column: 8
        },
        end: {
          line: 370,
          column: 9
        }
      },
      "118": {
        start: {
          line: 369,
          column: 12
        },
        end: {
          line: 369,
          column: 24
        }
      },
      "119": {
        start: {
          line: 371,
          column: 27
        },
        end: {
          line: 371,
          column: 52
        }
      },
      "120": {
        start: {
          line: 372,
          column: 37
        },
        end: {
          line: 372,
          column: 78
        }
      },
      "121": {
        start: {
          line: 373,
          column: 8
        },
        end: {
          line: 373,
          column: 50
        }
      },
      "122": {
        start: {
          line: 378,
          column: 21
        },
        end: {
          line: 378,
          column: 48
        }
      },
      "123": {
        start: {
          line: 379,
          column: 8
        },
        end: {
          line: 381,
          column: 9
        }
      },
      "124": {
        start: {
          line: 380,
          column: 12
        },
        end: {
          line: 380,
          column: 19
        }
      },
      "125": {
        start: {
          line: 382,
          column: 24
        },
        end: {
          line: 382,
          column: 46
        }
      },
      "126": {
        start: {
          line: 383,
          column: 22
        },
        end: {
          line: 393,
          column: 9
        }
      },
      "127": {
        start: {
          line: 394,
          column: 8
        },
        end: {
          line: 394,
          column: 46
        }
      },
      "128": {
        start: {
          line: 395,
          column: 8
        },
        end: {
          line: 395,
          column: 40
        }
      },
      "129": {
        start: {
          line: 397,
          column: 8
        },
        end: {
          line: 397,
          column: 43
        }
      },
      "130": {
        start: {
          line: 398,
          column: 8
        },
        end: {
          line: 398,
          column: 61
        }
      },
      "131": {
        start: {
          line: 403,
          column: 8
        },
        end: {
          line: 405,
          column: 9
        }
      },
      "132": {
        start: {
          line: 404,
          column: 12
        },
        end: {
          line: 404,
          column: 19
        }
      },
      "133": {
        start: {
          line: 406,
          column: 29
        },
        end: {
          line: 406,
          column: 47
        }
      },
      "134": {
        start: {
          line: 408,
          column: 8
        },
        end: {
          line: 411,
          column: 9
        }
      },
      "135": {
        start: {
          line: 410,
          column: 12
        },
        end: {
          line: 410,
          column: 90
        }
      },
      "136": {
        start: {
          line: 413,
          column: 8
        },
        end: {
          line: 416,
          column: 9
        }
      },
      "137": {
        start: {
          line: 415,
          column: 12
        },
        end: {
          line: 415,
          column: 79
        }
      },
      "138": {
        start: {
          line: 418,
          column: 8
        },
        end: {
          line: 425,
          column: 9
        }
      },
      "139": {
        start: {
          line: 419,
          column: 12
        },
        end: {
          line: 424,
          column: 13
        }
      },
      "140": {
        start: {
          line: 421,
          column: 16
        },
        end: {
          line: 421,
          column: 87
        }
      },
      "141": {
        start: {
          line: 423,
          column: 16
        },
        end: {
          line: 423,
          column: 83
        }
      },
      "142": {
        start: {
          line: 431,
          column: 8
        },
        end: {
          line: 431,
          column: 82
        }
      },
      "143": {
        start: {
          line: 434,
          column: 8
        },
        end: {
          line: 434,
          column: 80
        }
      },
      "144": {
        start: {
          line: 437,
          column: 8
        },
        end: {
          line: 437,
          column: 80
        }
      },
      "145": {
        start: {
          line: 440,
          column: 24
        },
        end: {
          line: 440,
          column: 50
        }
      },
      "146": {
        start: {
          line: 442,
          column: 19
        },
        end: {
          line: 442,
          column: 20
        }
      },
      "147": {
        start: {
          line: 443,
          column: 8
        },
        end: {
          line: 447,
          column: 9
        }
      },
      "148": {
        start: {
          line: 443,
          column: 20
        },
        end: {
          line: 443,
          column: 21
        }
      },
      "149": {
        start: {
          line: 444,
          column: 25
        },
        end: {
          line: 444,
          column: 46
        }
      },
      "150": {
        start: {
          line: 445,
          column: 12
        },
        end: {
          line: 445,
          column: 45
        }
      },
      "151": {
        start: {
          line: 446,
          column: 12
        },
        end: {
          line: 446,
          column: 31
        }
      },
      "152": {
        start: {
          line: 448,
          column: 8
        },
        end: {
          line: 448,
          column: 33
        }
      },
      "153": {
        start: {
          line: 451,
          column: 8
        },
        end: {
          line: 453,
          column: 9
        }
      },
      "154": {
        start: {
          line: 452,
          column: 12
        },
        end: {
          line: 452,
          column: 21
        }
      },
      "155": {
        start: {
          line: 454,
          column: 27
        },
        end: {
          line: 454,
          column: 72
        }
      },
      "156": {
        start: {
          line: 455,
          column: 8
        },
        end: {
          line: 455,
          column: 84
        }
      },
      "157": {
        start: {
          line: 458,
          column: 8
        },
        end: {
          line: 460,
          column: 9
        }
      },
      "158": {
        start: {
          line: 459,
          column: 12
        },
        end: {
          line: 459,
          column: 21
        }
      },
      "159": {
        start: {
          line: 461,
          column: 27
        },
        end: {
          line: 461,
          column: 72
        }
      },
      "160": {
        start: {
          line: 462,
          column: 8
        },
        end: {
          line: 462,
          column: 108
        }
      },
      "161": {
        start: {
          line: 465,
          column: 8
        },
        end: {
          line: 467,
          column: 9
        }
      },
      "162": {
        start: {
          line: 466,
          column: 12
        },
        end: {
          line: 466,
          column: 21
        }
      },
      "163": {
        start: {
          line: 468,
          column: 8
        },
        end: {
          line: 468,
          column: 63
        }
      },
      "164": {
        start: {
          line: 472,
          column: 8
        },
        end: {
          line: 472,
          column: 17
        }
      },
      "165": {
        start: {
          line: 476,
          column: 8
        },
        end: {
          line: 476,
          column: 17
        }
      },
      "166": {
        start: {
          line: 480,
          column: 8
        },
        end: {
          line: 480,
          column: 17
        }
      },
      "167": {
        start: {
          line: 483,
          column: 8
        },
        end: {
          line: 483,
          column: 67
        }
      },
      "168": {
        start: {
          line: 487,
          column: 8
        },
        end: {
          line: 487,
          column: 17
        }
      },
      "169": {
        start: {
          line: 491,
          column: 8
        },
        end: {
          line: 491,
          column: 17
        }
      },
      "170": {
        start: {
          line: 494,
          column: 8
        },
        end: {
          line: 496,
          column: 9
        }
      },
      "171": {
        start: {
          line: 495,
          column: 12
        },
        end: {
          line: 495,
          column: 29
        }
      },
      "172": {
        start: {
          line: 497,
          column: 22
        },
        end: {
          line: 497,
          column: 39
        }
      },
      "173": {
        start: {
          line: 498,
          column: 8
        },
        end: {
          line: 500,
          column: 9
        }
      },
      "174": {
        start: {
          line: 499,
          column: 12
        },
        end: {
          line: 499,
          column: 28
        }
      },
      "175": {
        start: {
          line: 501,
          column: 8
        },
        end: {
          line: 503,
          column: 9
        }
      },
      "176": {
        start: {
          line: 502,
          column: 12
        },
        end: {
          line: 502,
          column: 28
        }
      },
      "177": {
        start: {
          line: 504,
          column: 8
        },
        end: {
          line: 504,
          column: 25
        }
      },
      "178": {
        start: {
          line: 507,
          column: 8
        },
        end: {
          line: 509,
          column: 9
        }
      },
      "179": {
        start: {
          line: 508,
          column: 12
        },
        end: {
          line: 508,
          column: 29
        }
      },
      "180": {
        start: {
          line: 510,
          column: 26
        },
        end: {
          line: 510,
          column: 45
        }
      },
      "181": {
        start: {
          line: 511,
          column: 8
        },
        end: {
          line: 513,
          column: 9
        }
      },
      "182": {
        start: {
          line: 512,
          column: 12
        },
        end: {
          line: 512,
          column: 28
        }
      },
      "183": {
        start: {
          line: 514,
          column: 8
        },
        end: {
          line: 516,
          column: 9
        }
      },
      "184": {
        start: {
          line: 515,
          column: 12
        },
        end: {
          line: 515,
          column: 29
        }
      },
      "185": {
        start: {
          line: 517,
          column: 8
        },
        end: {
          line: 519,
          column: 9
        }
      },
      "186": {
        start: {
          line: 518,
          column: 12
        },
        end: {
          line: 518,
          column: 28
        }
      },
      "187": {
        start: {
          line: 520,
          column: 8
        },
        end: {
          line: 522,
          column: 9
        }
      },
      "188": {
        start: {
          line: 521,
          column: 12
        },
        end: {
          line: 521,
          column: 26
        }
      },
      "189": {
        start: {
          line: 523,
          column: 8
        },
        end: {
          line: 523,
          column: 23
        }
      },
      "190": {
        start: {
          line: 527,
          column: 8
        },
        end: {
          line: 527,
          column: 25
        }
      },
      "191": {
        start: {
          line: 535,
          column: 19
        },
        end: {
          line: 535,
          column: 39
        }
      },
      "192": {
        start: {
          line: 536,
          column: 8
        },
        end: {
          line: 538,
          column: 9
        }
      },
      "193": {
        start: {
          line: 537,
          column: 12
        },
        end: {
          line: 537,
          column: 100
        }
      },
      "194": {
        start: {
          line: 537,
          column: 36
        },
        end: {
          line: 537,
          column: 98
        }
      },
      "195": {
        start: {
          line: 539,
          column: 8
        },
        end: {
          line: 539,
          column: 20
        }
      },
      "196": {
        start: {
          line: 544,
          column: 8
        },
        end: {
          line: 544,
          column: 149
        }
      },
      "197": {
        start: {
          line: 544,
          column: 70
        },
        end: {
          line: 544,
          column: 87
        }
      },
      "198": {
        start: {
          line: 544,
          column: 102
        },
        end: {
          line: 544,
          column: 147
        }
      },
      "199": {
        start: {
          line: 549,
          column: 22
        },
        end: {
          line: 549,
          column: 52
        }
      },
      "200": {
        start: {
          line: 550,
          column: 8
        },
        end: {
          line: 553,
          column: 9
        }
      },
      "201": {
        start: {
          line: 551,
          column: 12
        },
        end: {
          line: 551,
          column: 38
        }
      },
      "202": {
        start: {
          line: 552,
          column: 12
        },
        end: {
          line: 552,
          column: 24
        }
      },
      "203": {
        start: {
          line: 554,
          column: 8
        },
        end: {
          line: 554,
          column: 21
        }
      },
      "204": {
        start: {
          line: 559,
          column: 22
        },
        end: {
          line: 559,
          column: 52
        }
      },
      "205": {
        start: {
          line: 560,
          column: 8
        },
        end: {
          line: 563,
          column: 9
        }
      },
      "206": {
        start: {
          line: 561,
          column: 12
        },
        end: {
          line: 561,
          column: 42
        }
      },
      "207": {
        start: {
          line: 562,
          column: 12
        },
        end: {
          line: 562,
          column: 24
        }
      },
      "208": {
        start: {
          line: 564,
          column: 8
        },
        end: {
          line: 564,
          column: 21
        }
      },
      "209": {
        start: {
          line: 569,
          column: 20
        },
        end: {
          line: 569,
          column: 30
        }
      },
      "210": {
        start: {
          line: 570,
          column: 27
        },
        end: {
          line: 570,
          column: 67
        }
      },
      "211": {
        start: {
          line: 571,
          column: 29
        },
        end: {
          line: 576,
          column: 10
        }
      },
      "212": {
        start: {
          line: 577,
          column: 30
        },
        end: {
          line: 580,
          column: 10
        }
      },
      "213": {
        start: {
          line: 581,
          column: 29
        },
        end: {
          line: 581,
          column: 51
        }
      },
      "214": {
        start: {
          line: 582,
          column: 8
        },
        end: {
          line: 601,
          column: 10
        }
      },
      "215": {
        start: {
          line: 585,
          column: 51
        },
        end: {
          line: 585,
          column: 73
        }
      },
      "216": {
        start: {
          line: 586,
          column: 50
        },
        end: {
          line: 586,
          column: 71
        }
      },
      "217": {
        start: {
          line: 589,
          column: 91
        },
        end: {
          line: 589,
          column: 115
        }
      },
      "218": {
        start: {
          line: 590,
          column: 94
        },
        end: {
          line: 590,
          column: 121
        }
      },
      "219": {
        start: {
          line: 594,
          column: 51
        },
        end: {
          line: 594,
          column: 76
        }
      },
      "220": {
        start: {
          line: 595,
          column: 57
        },
        end: {
          line: 595,
          column: 72
        }
      },
      "221": {
        start: {
          line: 604,
          column: 17
        },
        end: {
          line: 604,
          column: 44
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 15,
            column: 9
          },
          end: {
            line: 15,
            column: 10
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        loc: {
          start: {
            line: 26,
            column: 23
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 26
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        loc: {
          start: {
            line: 36,
            column: 31
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 36
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 50,
            column: 6
          },
          end: {
            line: 50,
            column: 7
          }
        },
        loc: {
          start: {
            line: 50,
            column: 68
          },
          end: {
            line: 97,
            column: 5
          }
        },
        line: 50
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 61,
            column: 56
          },
          end: {
            line: 61,
            column: 57
          }
        },
        loc: {
          start: {
            line: 61,
            column: 67
          },
          end: {
            line: 61,
            column: 97
          }
        },
        line: 61
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 83,
            column: 68
          },
          end: {
            line: 83,
            column: 69
          }
        },
        loc: {
          start: {
            line: 83,
            column: 73
          },
          end: {
            line: 83,
            column: 102
          }
        },
        line: 83
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 100,
            column: 6
          },
          end: {
            line: 100,
            column: 7
          }
        },
        loc: {
          start: {
            line: 100,
            column: 30
          },
          end: {
            line: 119,
            column: 5
          }
        },
        line: 100
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 104,
            column: 35
          },
          end: {
            line: 104,
            column: 36
          }
        },
        loc: {
          start: {
            line: 104,
            column: 40
          },
          end: {
            line: 104,
            column: 65
          }
        },
        line: 104
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 107,
            column: 35
          },
          end: {
            line: 107,
            column: 36
          }
        },
        loc: {
          start: {
            line: 107,
            column: 40
          },
          end: {
            line: 107,
            column: 118
          }
        },
        line: 107
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 110,
            column: 35
          },
          end: {
            line: 110,
            column: 36
          }
        },
        loc: {
          start: {
            line: 110,
            column: 40
          },
          end: {
            line: 110,
            column: 81
          }
        },
        line: 110
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 113,
            column: 20
          },
          end: {
            line: 113,
            column: 21
          }
        },
        loc: {
          start: {
            line: 113,
            column: 28
          },
          end: {
            line: 113,
            column: 73
          }
        },
        line: 113
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 125,
            column: 6
          },
          end: {
            line: 125,
            column: 7
          }
        },
        loc: {
          start: {
            line: 125,
            column: 35
          },
          end: {
            line: 141,
            column: 5
          }
        },
        line: 125
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 132,
            column: 20
          },
          end: {
            line: 132,
            column: 21
          }
        },
        loc: {
          start: {
            line: 132,
            column: 24
          },
          end: {
            line: 134,
            column: 9
          }
        },
        line: 132
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 136,
            column: 54
          },
          end: {
            line: 136,
            column: 55
          }
        },
        loc: {
          start: {
            line: 136,
            column: 58
          },
          end: {
            line: 140,
            column: 9
          }
        },
        line: 136
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 144,
            column: 6
          },
          end: {
            line: 144,
            column: 7
          }
        },
        loc: {
          start: {
            line: 144,
            column: 25
          },
          end: {
            line: 180,
            column: 5
          }
        },
        line: 144
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 146,
            column: 32
          },
          end: {
            line: 146,
            column: 33
          }
        },
        loc: {
          start: {
            line: 146,
            column: 45
          },
          end: {
            line: 150,
            column: 9
          }
        },
        line: 146
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 155,
            column: 32
          },
          end: {
            line: 155,
            column: 33
          }
        },
        loc: {
          start: {
            line: 155,
            column: 45
          },
          end: {
            line: 160,
            column: 9
          }
        },
        line: 155
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 157,
            column: 28
          },
          end: {
            line: 157,
            column: 29
          }
        },
        loc: {
          start: {
            line: 157,
            column: 37
          },
          end: {
            line: 159,
            column: 13
          }
        },
        line: 157
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 167,
            column: 32
          },
          end: {
            line: 167,
            column: 33
          }
        },
        loc: {
          start: {
            line: 167,
            column: 45
          },
          end: {
            line: 175,
            column: 9
          }
        },
        line: 167
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 169,
            column: 28
          },
          end: {
            line: 169,
            column: 29
          }
        },
        loc: {
          start: {
            line: 169,
            column: 37
          },
          end: {
            line: 173,
            column: 13
          }
        },
        line: 169
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 183,
            column: 6
          },
          end: {
            line: 183,
            column: 7
          }
        },
        loc: {
          start: {
            line: 183,
            column: 34
          },
          end: {
            line: 223,
            column: 5
          }
        },
        line: 183
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 226,
            column: 6
          },
          end: {
            line: 226,
            column: 7
          }
        },
        loc: {
          start: {
            line: 226,
            column: 46
          },
          end: {
            line: 242,
            column: 5
          }
        },
        line: 226
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 248,
            column: 6
          },
          end: {
            line: 248,
            column: 7
          }
        },
        loc: {
          start: {
            line: 248,
            column: 36
          },
          end: {
            line: 294,
            column: 5
          }
        },
        line: 248
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 291,
            column: 29
          },
          end: {
            line: 291,
            column: 30
          }
        },
        loc: {
          start: {
            line: 291,
            column: 37
          },
          end: {
            line: 293,
            column: 9
          }
        },
        line: 291
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 297,
            column: 6
          },
          end: {
            line: 297,
            column: 7
          }
        },
        loc: {
          start: {
            line: 297,
            column: 35
          },
          end: {
            line: 316,
            column: 5
          }
        },
        line: 297
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 319,
            column: 6
          },
          end: {
            line: 319,
            column: 7
          }
        },
        loc: {
          start: {
            line: 319,
            column: 38
          },
          end: {
            line: 327,
            column: 5
          }
        },
        line: 319
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 322,
            column: 34
          },
          end: {
            line: 322,
            column: 35
          }
        },
        loc: {
          start: {
            line: 322,
            column: 57
          },
          end: {
            line: 326,
            column: 9
          }
        },
        line: 322
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 330,
            column: 6
          },
          end: {
            line: 330,
            column: 7
          }
        },
        loc: {
          start: {
            line: 330,
            column: 43
          },
          end: {
            line: 346,
            column: 5
          }
        },
        line: 330
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 331,
            column: 74
          },
          end: {
            line: 331,
            column: 75
          }
        },
        loc: {
          start: {
            line: 331,
            column: 82
          },
          end: {
            line: 331,
            column: 124
          }
        },
        line: 331
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 332,
            column: 30
          },
          end: {
            line: 332,
            column: 31
          }
        },
        loc: {
          start: {
            line: 332,
            column: 38
          },
          end: {
            line: 345,
            column: 9
          }
        },
        line: 332
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 349,
            column: 6
          },
          end: {
            line: 349,
            column: 7
          }
        },
        loc: {
          start: {
            line: 349,
            column: 42
          },
          end: {
            line: 364,
            column: 5
          }
        },
        line: 349
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 367,
            column: 6
          },
          end: {
            line: 367,
            column: 7
          }
        },
        loc: {
          start: {
            line: 367,
            column: 28
          },
          end: {
            line: 374,
            column: 5
          }
        },
        line: 367
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 377,
            column: 6
          },
          end: {
            line: 377,
            column: 7
          }
        },
        loc: {
          start: {
            line: 377,
            column: 38
          },
          end: {
            line: 399,
            column: 5
          }
        },
        line: 377
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 402,
            column: 6
          },
          end: {
            line: 402,
            column: 7
          }
        },
        loc: {
          start: {
            line: 402,
            column: 42
          },
          end: {
            line: 426,
            column: 5
          }
        },
        line: 402
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 430,
            column: 4
          },
          end: {
            line: 430,
            column: 5
          }
        },
        loc: {
          start: {
            line: 430,
            column: 24
          },
          end: {
            line: 432,
            column: 5
          }
        },
        line: 430
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 433,
            column: 4
          },
          end: {
            line: 433,
            column: 5
          }
        },
        loc: {
          start: {
            line: 433,
            column: 22
          },
          end: {
            line: 435,
            column: 5
          }
        },
        line: 433
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 436,
            column: 4
          },
          end: {
            line: 436,
            column: 5
          }
        },
        loc: {
          start: {
            line: 436,
            column: 22
          },
          end: {
            line: 438,
            column: 5
          }
        },
        line: 436
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 439,
            column: 4
          },
          end: {
            line: 439,
            column: 5
          }
        },
        loc: {
          start: {
            line: 439,
            column: 45
          },
          end: {
            line: 449,
            column: 5
          }
        },
        line: 439
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 450,
            column: 4
          },
          end: {
            line: 450,
            column: 5
          }
        },
        loc: {
          start: {
            line: 450,
            column: 18
          },
          end: {
            line: 456,
            column: 5
          }
        },
        line: 450
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 457,
            column: 4
          },
          end: {
            line: 457,
            column: 5
          }
        },
        loc: {
          start: {
            line: 457,
            column: 20
          },
          end: {
            line: 463,
            column: 5
          }
        },
        line: 457
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 464,
            column: 4
          },
          end: {
            line: 464,
            column: 5
          }
        },
        loc: {
          start: {
            line: 464,
            column: 21
          },
          end: {
            line: 469,
            column: 5
          }
        },
        line: 464
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 470,
            column: 4
          },
          end: {
            line: 470,
            column: 5
          }
        },
        loc: {
          start: {
            line: 470,
            column: 20
          },
          end: {
            line: 473,
            column: 5
          }
        },
        line: 470
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 474,
            column: 4
          },
          end: {
            line: 474,
            column: 5
          }
        },
        loc: {
          start: {
            line: 474,
            column: 32
          },
          end: {
            line: 477,
            column: 5
          }
        },
        line: 474
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 478,
            column: 4
          },
          end: {
            line: 478,
            column: 5
          }
        },
        loc: {
          start: {
            line: 478,
            column: 22
          },
          end: {
            line: 481,
            column: 5
          }
        },
        line: 478
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 482,
            column: 4
          },
          end: {
            line: 482,
            column: 5
          }
        },
        loc: {
          start: {
            line: 482,
            column: 25
          },
          end: {
            line: 484,
            column: 5
          }
        },
        line: 482
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 485,
            column: 4
          },
          end: {
            line: 485,
            column: 5
          }
        },
        loc: {
          start: {
            line: 485,
            column: 19
          },
          end: {
            line: 488,
            column: 5
          }
        },
        line: 485
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 489,
            column: 4
          },
          end: {
            line: 489,
            column: 5
          }
        },
        loc: {
          start: {
            line: 489,
            column: 20
          },
          end: {
            line: 492,
            column: 5
          }
        },
        line: 489
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 493,
            column: 4
          },
          end: {
            line: 493,
            column: 5
          }
        },
        loc: {
          start: {
            line: 493,
            column: 20
          },
          end: {
            line: 505,
            column: 5
          }
        },
        line: 493
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 506,
            column: 4
          },
          end: {
            line: 506,
            column: 5
          }
        },
        loc: {
          start: {
            line: 506,
            column: 21
          },
          end: {
            line: 524,
            column: 5
          }
        },
        line: 506
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 525,
            column: 4
          },
          end: {
            line: 525,
            column: 5
          }
        },
        loc: {
          start: {
            line: 525,
            column: 16
          },
          end: {
            line: 528,
            column: 5
          }
        },
        line: 525
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 534,
            column: 6
          },
          end: {
            line: 534,
            column: 7
          }
        },
        loc: {
          start: {
            line: 534,
            column: 39
          },
          end: {
            line: 540,
            column: 5
          }
        },
        line: 534
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 537,
            column: 31
          },
          end: {
            line: 537,
            column: 32
          }
        },
        loc: {
          start: {
            line: 537,
            column: 36
          },
          end: {
            line: 537,
            column: 98
          }
        },
        line: 537
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 543,
            column: 6
          },
          end: {
            line: 543,
            column: 7
          }
        },
        loc: {
          start: {
            line: 543,
            column: 24
          },
          end: {
            line: 545,
            column: 5
          }
        },
        line: 543
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 544,
            column: 61
          },
          end: {
            line: 544,
            column: 62
          }
        },
        loc: {
          start: {
            line: 544,
            column: 70
          },
          end: {
            line: 544,
            column: 87
          }
        },
        line: 544
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 544,
            column: 94
          },
          end: {
            line: 544,
            column: 95
          }
        },
        loc: {
          start: {
            line: 544,
            column: 102
          },
          end: {
            line: 544,
            column: 147
          }
        },
        line: 544
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 548,
            column: 6
          },
          end: {
            line: 548,
            column: 7
          }
        },
        loc: {
          start: {
            line: 548,
            column: 32
          },
          end: {
            line: 555,
            column: 5
          }
        },
        line: 548
      },
      "56": {
        name: "(anonymous_56)",
        decl: {
          start: {
            line: 558,
            column: 6
          },
          end: {
            line: 558,
            column: 7
          }
        },
        loc: {
          start: {
            line: 558,
            column: 28
          },
          end: {
            line: 565,
            column: 5
          }
        },
        line: 558
      },
      "57": {
        name: "(anonymous_57)",
        decl: {
          start: {
            line: 568,
            column: 6
          },
          end: {
            line: 568,
            column: 7
          }
        },
        loc: {
          start: {
            line: 568,
            column: 29
          },
          end: {
            line: 602,
            column: 5
          }
        },
        line: 568
      },
      "58": {
        name: "(anonymous_58)",
        decl: {
          start: {
            line: 585,
            column: 46
          },
          end: {
            line: 585,
            column: 47
          }
        },
        loc: {
          start: {
            line: 585,
            column: 51
          },
          end: {
            line: 585,
            column: 73
          }
        },
        line: 585
      },
      "59": {
        name: "(anonymous_59)",
        decl: {
          start: {
            line: 586,
            column: 45
          },
          end: {
            line: 586,
            column: 46
          }
        },
        loc: {
          start: {
            line: 586,
            column: 50
          },
          end: {
            line: 586,
            column: 71
          }
        },
        line: 586
      },
      "60": {
        name: "(anonymous_60)",
        decl: {
          start: {
            line: 589,
            column: 81
          },
          end: {
            line: 589,
            column: 82
          }
        },
        loc: {
          start: {
            line: 589,
            column: 91
          },
          end: {
            line: 589,
            column: 115
          }
        },
        line: 589
      },
      "61": {
        name: "(anonymous_61)",
        decl: {
          start: {
            line: 590,
            column: 84
          },
          end: {
            line: 590,
            column: 85
          }
        },
        loc: {
          start: {
            line: 590,
            column: 94
          },
          end: {
            line: 590,
            column: 121
          }
        },
        line: 590
      },
      "62": {
        name: "(anonymous_62)",
        decl: {
          start: {
            line: 594,
            column: 46
          },
          end: {
            line: 594,
            column: 47
          }
        },
        loc: {
          start: {
            line: 594,
            column: 51
          },
          end: {
            line: 594,
            column: 76
          }
        },
        line: 594
      },
      "63": {
        name: "(anonymous_63)",
        decl: {
          start: {
            line: 595,
            column: 52
          },
          end: {
            line: 595,
            column: 53
          }
        },
        loc: {
          start: {
            line: 595,
            column: 57
          },
          end: {
            line: 595,
            column: 72
          }
        },
        line: 595
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 19,
            column: 18
          },
          end: {
            line: 19,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 19,
            column: 50
          },
          end: {
            line: 19,
            column: 71
          }
        }, {
          start: {
            line: 19,
            column: 74
          },
          end: {
            line: 19,
            column: 78
          }
        }],
        line: 19
      },
      "1": {
        loc: {
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 42,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 42,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "2": {
        loc: {
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 40,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 40,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "3": {
        loc: {
          start: {
            line: 50,
            column: 26
          },
          end: {
            line: 50,
            column: 41
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 50,
            column: 34
          },
          end: {
            line: 50,
            column: 41
          }
        }],
        line: 50
      },
      "4": {
        loc: {
          start: {
            line: 50,
            column: 43
          },
          end: {
            line: 50,
            column: 55
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 50,
            column: 53
          },
          end: {
            line: 50,
            column: 55
          }
        }],
        line: 50
      },
      "5": {
        loc: {
          start: {
            line: 50,
            column: 57
          },
          end: {
            line: 50,
            column: 66
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 50,
            column: 64
          },
          end: {
            line: 50,
            column: 66
          }
        }],
        line: 50
      },
      "6": {
        loc: {
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "7": {
        loc: {
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "8": {
        loc: {
          start: {
            line: 58,
            column: 29
          },
          end: {
            line: 58,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 58,
            column: 57
          },
          end: {
            line: 58,
            column: 62
          }
        }, {
          start: {
            line: 58,
            column: 65
          },
          end: {
            line: 58,
            column: 78
          }
        }],
        line: 58
      },
      "9": {
        loc: {
          start: {
            line: 59,
            column: 22
          },
          end: {
            line: 59,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 59,
            column: 50
          },
          end: {
            line: 59,
            column: 59
          }
        }, {
          start: {
            line: 59,
            column: 62
          },
          end: {
            line: 59,
            column: 73
          }
        }],
        line: 59
      },
      "10": {
        loc: {
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "11": {
        loc: {
          start: {
            line: 74,
            column: 21
          },
          end: {
            line: 74,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 74,
            column: 53
          },
          end: {
            line: 74,
            column: 73
          }
        }, {
          start: {
            line: 74,
            column: 76
          },
          end: {
            line: 74,
            column: 78
          }
        }],
        line: 74
      },
      "12": {
        loc: {
          start: {
            line: 75,
            column: 27
          },
          end: {
            line: 75,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 75,
            column: 62
          },
          end: {
            line: 75,
            column: 81
          }
        }, {
          start: {
            line: 75,
            column: 84
          },
          end: {
            line: 75,
            column: 86
          }
        }],
        line: 75
      },
      "13": {
        loc: {
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 89,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 89,
            column: 9
          }
        }, {
          start: {
            line: 87,
            column: 15
          },
          end: {
            line: 89,
            column: 9
          }
        }],
        line: 84
      },
      "14": {
        loc: {
          start: {
            line: 93,
            column: 8
          },
          end: {
            line: 95,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 8
          },
          end: {
            line: 95,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 93
      },
      "15": {
        loc: {
          start: {
            line: 100,
            column: 16
          },
          end: {
            line: 100,
            column: 28
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 100,
            column: 26
          },
          end: {
            line: 100,
            column: 28
          }
        }],
        line: 100
      },
      "16": {
        loc: {
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "17": {
        loc: {
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 108,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 108,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "18": {
        loc: {
          start: {
            line: 107,
            column: 40
          },
          end: {
            line: 107,
            column: 118
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 107,
            column: 40
          },
          end: {
            line: 107,
            column: 78
          }
        }, {
          start: {
            line: 107,
            column: 82
          },
          end: {
            line: 107,
            column: 118
          }
        }],
        line: 107
      },
      "19": {
        loc: {
          start: {
            line: 109,
            column: 8
          },
          end: {
            line: 111,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 109,
            column: 8
          },
          end: {
            line: 111,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 109
      },
      "20": {
        loc: {
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 117,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 117,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 115
      },
      "21": {
        loc: {
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 128,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 128,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 126
      },
      "22": {
        loc: {
          start: {
            line: 126,
            column: 12
          },
          end: {
            line: 126,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 126,
            column: 12
          },
          end: {
            line: 126,
            column: 44
          }
        }, {
          start: {
            line: 126,
            column: 48
          },
          end: {
            line: 126,
            column: 77
          }
        }],
        line: 126
      },
      "23": {
        loc: {
          start: {
            line: 137,
            column: 12
          },
          end: {
            line: 139,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 137,
            column: 12
          },
          end: {
            line: 139,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 137
      },
      "24": {
        loc: {
          start: {
            line: 170,
            column: 16
          },
          end: {
            line: 172,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 170,
            column: 16
          },
          end: {
            line: 172,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 170
      },
      "25": {
        loc: {
          start: {
            line: 184,
            column: 8
          },
          end: {
            line: 186,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 184,
            column: 8
          },
          end: {
            line: 186,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 184
      },
      "26": {
        loc: {
          start: {
            line: 188,
            column: 8
          },
          end: {
            line: 190,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 188,
            column: 8
          },
          end: {
            line: 190,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 188
      },
      "27": {
        loc: {
          start: {
            line: 205,
            column: 22
          },
          end: {
            line: 205,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 205,
            column: 54
          },
          end: {
            line: 205,
            column: 78
          }
        }, {
          start: {
            line: 205,
            column: 81
          },
          end: {
            line: 205,
            column: 83
          }
        }],
        line: 205
      },
      "28": {
        loc: {
          start: {
            line: 214,
            column: 8
          },
          end: {
            line: 216,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 214,
            column: 8
          },
          end: {
            line: 216,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 214
      },
      "29": {
        loc: {
          start: {
            line: 220,
            column: 8
          },
          end: {
            line: 222,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 220,
            column: 8
          },
          end: {
            line: 222,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 220
      },
      "30": {
        loc: {
          start: {
            line: 226,
            column: 32
          },
          end: {
            line: 226,
            column: 44
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 226,
            column: 42
          },
          end: {
            line: 226,
            column: 44
          }
        }],
        line: 226
      },
      "31": {
        loc: {
          start: {
            line: 239,
            column: 8
          },
          end: {
            line: 241,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 239,
            column: 8
          },
          end: {
            line: 241,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 239
      },
      "32": {
        loc: {
          start: {
            line: 308,
            column: 8
          },
          end: {
            line: 315,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 308,
            column: 8
          },
          end: {
            line: 315,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 308
      },
      "33": {
        loc: {
          start: {
            line: 323,
            column: 12
          },
          end: {
            line: 325,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 323,
            column: 12
          },
          end: {
            line: 325,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 323
      },
      "34": {
        loc: {
          start: {
            line: 331,
            column: 82
          },
          end: {
            line: 331,
            column: 124
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 331,
            column: 82
          },
          end: {
            line: 331,
            column: 108
          }
        }, {
          start: {
            line: 331,
            column: 112
          },
          end: {
            line: 331,
            column: 124
          }
        }],
        line: 331
      },
      "35": {
        loc: {
          start: {
            line: 334,
            column: 12
          },
          end: {
            line: 344,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 334,
            column: 12
          },
          end: {
            line: 344,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 334
      },
      "36": {
        loc: {
          start: {
            line: 334,
            column: 16
          },
          end: {
            line: 334,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 334,
            column: 16
          },
          end: {
            line: 334,
            column: 29
          }
        }, {
          start: {
            line: 334,
            column: 33
          },
          end: {
            line: 334,
            column: 59
          }
        }],
        line: 334
      },
      "37": {
        loc: {
          start: {
            line: 350,
            column: 8
          },
          end: {
            line: 363,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 351,
            column: 12
          },
          end: {
            line: 352,
            column: 46
          }
        }, {
          start: {
            line: 353,
            column: 12
          },
          end: {
            line: 354,
            column: 46
          }
        }, {
          start: {
            line: 355,
            column: 12
          },
          end: {
            line: 356,
            column: 47
          }
        }, {
          start: {
            line: 357,
            column: 12
          },
          end: {
            line: 358,
            column: 47
          }
        }, {
          start: {
            line: 359,
            column: 12
          },
          end: {
            line: 360,
            column: 48
          }
        }, {
          start: {
            line: 361,
            column: 12
          },
          end: {
            line: 362,
            column: 29
          }
        }],
        line: 350
      },
      "38": {
        loc: {
          start: {
            line: 368,
            column: 8
          },
          end: {
            line: 370,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 368,
            column: 8
          },
          end: {
            line: 370,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 368
      },
      "39": {
        loc: {
          start: {
            line: 379,
            column: 8
          },
          end: {
            line: 381,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 379,
            column: 8
          },
          end: {
            line: 381,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 379
      },
      "40": {
        loc: {
          start: {
            line: 403,
            column: 8
          },
          end: {
            line: 405,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 403,
            column: 8
          },
          end: {
            line: 405,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 403
      },
      "41": {
        loc: {
          start: {
            line: 408,
            column: 8
          },
          end: {
            line: 411,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 408,
            column: 8
          },
          end: {
            line: 411,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 408
      },
      "42": {
        loc: {
          start: {
            line: 408,
            column: 12
          },
          end: {
            line: 408,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 408,
            column: 12
          },
          end: {
            line: 408,
            column: 26
          }
        }, {
          start: {
            line: 408,
            column: 30
          },
          end: {
            line: 408,
            column: 55
          }
        }],
        line: 408
      },
      "43": {
        loc: {
          start: {
            line: 413,
            column: 8
          },
          end: {
            line: 416,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 413,
            column: 8
          },
          end: {
            line: 416,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 413
      },
      "44": {
        loc: {
          start: {
            line: 418,
            column: 8
          },
          end: {
            line: 425,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 418,
            column: 8
          },
          end: {
            line: 425,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 418
      },
      "45": {
        loc: {
          start: {
            line: 440,
            column: 37
          },
          end: {
            line: 440,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 440,
            column: 37
          },
          end: {
            line: 440,
            column: 42
          }
        }, {
          start: {
            line: 440,
            column: 46
          },
          end: {
            line: 440,
            column: 48
          }
        }],
        line: 440
      },
      "46": {
        loc: {
          start: {
            line: 451,
            column: 8
          },
          end: {
            line: 453,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 451,
            column: 8
          },
          end: {
            line: 453,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 451
      },
      "47": {
        loc: {
          start: {
            line: 455,
            column: 15
          },
          end: {
            line: 455,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 455,
            column: 28
          },
          end: {
            line: 455,
            column: 79
          }
        }, {
          start: {
            line: 455,
            column: 82
          },
          end: {
            line: 455,
            column: 83
          }
        }],
        line: 455
      },
      "48": {
        loc: {
          start: {
            line: 458,
            column: 8
          },
          end: {
            line: 460,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 458,
            column: 8
          },
          end: {
            line: 460,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 458
      },
      "49": {
        loc: {
          start: {
            line: 462,
            column: 15
          },
          end: {
            line: 462,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 462,
            column: 28
          },
          end: {
            line: 462,
            column: 103
          }
        }, {
          start: {
            line: 462,
            column: 106
          },
          end: {
            line: 462,
            column: 107
          }
        }],
        line: 462
      },
      "50": {
        loc: {
          start: {
            line: 465,
            column: 8
          },
          end: {
            line: 467,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 465,
            column: 8
          },
          end: {
            line: 467,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 465
      },
      "51": {
        loc: {
          start: {
            line: 465,
            column: 12
          },
          end: {
            line: 465,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 465,
            column: 12
          },
          end: {
            line: 465,
            column: 41
          }
        }, {
          start: {
            line: 465,
            column: 45
          },
          end: {
            line: 465,
            column: 64
          }
        }],
        line: 465
      },
      "52": {
        loc: {
          start: {
            line: 494,
            column: 8
          },
          end: {
            line: 496,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 494,
            column: 8
          },
          end: {
            line: 496,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 494
      },
      "53": {
        loc: {
          start: {
            line: 498,
            column: 8
          },
          end: {
            line: 500,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 498,
            column: 8
          },
          end: {
            line: 500,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 498
      },
      "54": {
        loc: {
          start: {
            line: 501,
            column: 8
          },
          end: {
            line: 503,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 501,
            column: 8
          },
          end: {
            line: 503,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 501
      },
      "55": {
        loc: {
          start: {
            line: 507,
            column: 8
          },
          end: {
            line: 509,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 507,
            column: 8
          },
          end: {
            line: 509,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 507
      },
      "56": {
        loc: {
          start: {
            line: 511,
            column: 8
          },
          end: {
            line: 513,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 511,
            column: 8
          },
          end: {
            line: 513,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 511
      },
      "57": {
        loc: {
          start: {
            line: 514,
            column: 8
          },
          end: {
            line: 516,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 514,
            column: 8
          },
          end: {
            line: 516,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 514
      },
      "58": {
        loc: {
          start: {
            line: 517,
            column: 8
          },
          end: {
            line: 519,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 517,
            column: 8
          },
          end: {
            line: 519,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 517
      },
      "59": {
        loc: {
          start: {
            line: 520,
            column: 8
          },
          end: {
            line: 522,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 520,
            column: 8
          },
          end: {
            line: 522,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 520
      },
      "60": {
        loc: {
          start: {
            line: 536,
            column: 8
          },
          end: {
            line: 538,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 536,
            column: 8
          },
          end: {
            line: 538,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 536
      },
      "61": {
        loc: {
          start: {
            line: 537,
            column: 36
          },
          end: {
            line: 537,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 537,
            column: 36
          },
          end: {
            line: 537,
            column: 66
          }
        }, {
          start: {
            line: 537,
            column: 70
          },
          end: {
            line: 537,
            column: 98
          }
        }],
        line: 537
      },
      "62": {
        loc: {
          start: {
            line: 550,
            column: 8
          },
          end: {
            line: 553,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 550,
            column: 8
          },
          end: {
            line: 553,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 550
      },
      "63": {
        loc: {
          start: {
            line: 560,
            column: 8
          },
          end: {
            line: 563,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 560,
            column: 8
          },
          end: {
            line: 563,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 560
      },
      "64": {
        loc: {
          start: {
            line: 589,
            column: 33
          },
          end: {
            line: 589,
            column: 146
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 589,
            column: 60
          },
          end: {
            line: 589,
            column: 142
          }
        }, {
          start: {
            line: 589,
            column: 145
          },
          end: {
            line: 589,
            column: 146
          }
        }],
        line: 589
      },
      "65": {
        loc: {
          start: {
            line: 590,
            column: 36
          },
          end: {
            line: 590,
            column: 152
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 590,
            column: 63
          },
          end: {
            line: 590,
            column: 148
          }
        }, {
          start: {
            line: 590,
            column: 151
          },
          end: {
            line: 590,
            column: 152
          }
        }],
        line: 590
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0],
      "4": [0],
      "5": [0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0, 0, 0, 0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\monitoring\\enterprise-monitoring-manager.ts"],
      sourcesContent: ["// ===================================\r\n// PINTEYA E-COMMERCE - ENTERPRISE MONITORING MANAGER\r\n// Sistema de monitoreo enterprise con error tracking, performance y analytics\r\n// ===================================\r\n\r\n// Importar performance hooks solo en servidor\r\nconst perfHooks = typeof window === 'undefined' ? require('perf_hooks') : null;\r\n\r\n// ===================================\r\n// TIPOS Y INTERFACES ESPEC\xCDFICAS\r\n// ===================================\r\n\r\n// Tipos base para m\xE9tricas\r\ntype MetricValue = number;\r\ntype MetricTimestamp = Date;\r\ntype MetricContext = Record<string, string | number | boolean>;\r\n\r\n// Interfaces espec\xEDficas para Core Web Vitals\r\ninterface CoreWebVitals {\r\n  lcp?: MetricValue; // Largest Contentful Paint\r\n  fid?: MetricValue; // First Input Delay\r\n  cls?: MetricValue; // Cumulative Layout Shift\r\n}\r\n\r\n// Interfaces espec\xEDficas para m\xE9tricas personalizadas\r\ninterface CustomPerformanceMetrics {\r\n  loadTime: MetricValue;\r\n  renderTime: MetricValue;\r\n  memoryUsage: MetricValue;\r\n  bundleSize: MetricValue;\r\n}\r\n\r\n// Interfaces espec\xEDficas para m\xE9tricas de API\r\ninterface ApiMetrics {\r\n  apiResponseTime: MetricValue;\r\n  apiErrorRate: MetricValue;\r\n}\r\n\r\n// Interfaces espec\xEDficas para m\xE9tricas de usuario\r\ninterface UserMetrics {\r\n  sessionDuration: MetricValue;\r\n  pageViews: MetricValue;\r\n  bounceRate: MetricValue;\r\n}\r\n\r\n// Interface espec\xEDfica para contexto de m\xE9tricas\r\ninterface MetricsContext {\r\n  page: string;\r\n  userId?: string;\r\n  sessionId: string;\r\n  device: string;\r\n  browser: string;\r\n}\r\n\r\ninterface ErrorEvent {\r\n  id: string;\r\n  timestamp: MetricTimestamp;\r\n  message: string;\r\n  stack?: string;\r\n  level: 'info' | 'warning' | 'error' | 'critical';\r\n  context: {\r\n    userId?: string;\r\n    sessionId: string;\r\n    url: string;\r\n    userAgent: string;\r\n    component?: string;\r\n    action?: string;\r\n  };\r\n  tags: string[];\r\n  fingerprint: string;\r\n  count: number;\r\n}\r\n\r\ninterface PerformanceMetrics {\r\n  timestamp: MetricTimestamp;\r\n  metrics: CoreWebVitals & CustomPerformanceMetrics & ApiMetrics & UserMetrics;\r\n  context: MetricsContext;\r\n}\r\n\r\n// Tipos espec\xEDficos para alertas\r\ntype AlertSeverity = 'low' | 'medium' | 'high' | 'critical';\r\ntype AlertOperator = '>' | '<' | '=' | '>=' | '<=';\r\ntype AlertMetricName = string;\r\n\r\n// Interface espec\xEDfica para contexto de alertas\r\ninterface AlertContext {\r\n  page?: string;\r\n  userId?: string;\r\n  sessionId?: string;\r\n  component?: string;\r\n  action?: string;\r\n  metadata?: Record<string, string | number | boolean>;\r\n}\r\n\r\n// Interfaces espec\xEDficas para configuraci\xF3n de monitoreo\r\ninterface ErrorTrackingConfig {\r\n  enabled: boolean;\r\n  sampleRate: number;\r\n  ignoreErrors: string[];\r\n  maxBreadcrumbs: number;\r\n}\r\n\r\ninterface PerformanceThresholds {\r\n  lcp: MetricValue;\r\n  fid: MetricValue;\r\n  cls: MetricValue;\r\n  loadTime: MetricValue;\r\n}\r\n\r\ninterface PerformanceConfig {\r\n  enabled: boolean;\r\n  sampleRate: number;\r\n  thresholds: PerformanceThresholds;\r\n}\r\n\r\ninterface AlertChannels {\r\n  email?: string[];\r\n  slack?: string;\r\n  webhook?: string;\r\n}\r\n\r\ninterface AlertsConfig {\r\n  enabled: boolean;\r\n  channels: AlertChannels;\r\n}\r\n\r\ninterface AlertRule {\r\n  id: string;\r\n  name: string;\r\n  metric: AlertMetricName;\r\n  threshold: MetricValue;\r\n  operator: AlertOperator;\r\n  severity: AlertSeverity;\r\n  enabled: boolean;\r\n  cooldown: number; // minutes\r\n  lastTriggered?: MetricTimestamp;\r\n}\r\n\r\ninterface AlertEvent {\r\n  id: string;\r\n  ruleId: string;\r\n  timestamp: MetricTimestamp;\r\n  severity: AlertSeverity;\r\n  message: string;\r\n  value: MetricValue;\r\n  threshold: MetricValue;\r\n  context: AlertContext;\r\n  acknowledged: boolean;\r\n  resolvedAt?: MetricTimestamp;\r\n}\r\n\r\ninterface MonitoringConfig {\r\n  errorTracking: ErrorTrackingConfig;\r\n  performance: PerformanceConfig;\r\n  alerts: AlertsConfig;\r\n}\r\n\r\n// ===================================\r\n// INTERFACES\r\n// ===================================\r\n\r\n// Interface para Navigation Timing\r\ninterface NavigationTiming extends PerformanceEntry {\r\n  loadEventEnd: number;\r\n  loadEventStart: number;\r\n  domContentLoadedEventEnd: number;\r\n  domContentLoadedEventStart: number;\r\n}\r\n\r\n// Interface para Performance Memory\r\ninterface PerformanceMemory {\r\n  usedJSHeapSize: number;\r\n}\r\n\r\ninterface PerformanceWithMemory extends Performance {\r\n  memory?: PerformanceMemory;\r\n}\r\n\r\n// ===================================\r\n// ENTERPRISE MONITORING MANAGER\r\n// ===================================\r\n// CLASE PRINCIPAL\r\n// ===================================\r\n\r\nclass EnterpriseMonitoringManager {\r\n  private static instance: EnterpriseMonitoringManager;\r\n  private config: MonitoringConfig;\r\n  private errors: Map<string, ErrorEvent> = new Map();\r\n  private performanceData: PerformanceMetrics[] = [];\r\n  private alertRules: Map<string, AlertRule> = new Map();\r\n  private activeAlerts: Map<string, AlertEvent> = new Map();\r\n  private sessionId: string;\r\n\r\n  constructor(config: MonitoringConfig) {\r\n    this.config = config;\r\n    this.sessionId = this.generateSessionId();\r\n    this.initializeDefaultAlertRules();\r\n    this.startPerformanceMonitoring();\r\n  }\r\n\r\n  static getInstance(config?: MonitoringConfig): EnterpriseMonitoringManager {\r\n    if (!EnterpriseMonitoringManager.instance) {\r\n      if (!config) {\r\n        throw new Error('Configuration required for first initialization');\r\n      }\r\n      EnterpriseMonitoringManager.instance = new EnterpriseMonitoringManager(config);\r\n    }\r\n    return EnterpriseMonitoringManager.instance;\r\n  }\r\n\r\n  // ===================================\r\n  // ERROR TRACKING\r\n  // ===================================\r\n\r\n  /**\r\n   * Capturar y procesar error\r\n   */\r\n  captureError(\r\n    error: Error | string,\r\n    level: ErrorEvent['level'] = 'error',\r\n    context: Partial<ErrorEvent['context']> = {},\r\n    tags: string[] = []\r\n  ): string {\r\n    if (!this.config.errorTracking.enabled) {\r\n      return '';\r\n    }\r\n\r\n    // Sample rate check\r\n    if (Math.random() > this.config.errorTracking.sampleRate) {\r\n      return '';\r\n    }\r\n\r\n    const errorMessage = typeof error === 'string' ? error : error.message;\r\n    const stack = typeof error === 'string' ? undefined : error.stack;\r\n\r\n    // Check if error should be ignored\r\n    if (this.config.errorTracking.ignoreErrors.some(pattern => \r\n      errorMessage.includes(pattern)\r\n    )) {\r\n      return '';\r\n    }\r\n\r\n    const fingerprint = this.generateErrorFingerprint(errorMessage, stack);\r\n    const errorId = this.generateErrorId();\r\n\r\n    const errorEvent: ErrorEvent = {\r\n      id: errorId,\r\n      timestamp: new Date(),\r\n      message: errorMessage,\r\n      stack,\r\n      level,\r\n      context: {\r\n        sessionId: this.sessionId,\r\n        url: typeof window !== 'undefined' ? window.location.href : '',\r\n        userAgent: typeof navigator !== 'undefined' ? navigator.userAgent : '',\r\n        ...context\r\n      },\r\n      tags,\r\n      fingerprint,\r\n      count: 1\r\n    };\r\n\r\n    // Check if error already exists (deduplication)\r\n    const existingError = Array.from(this.errors.values())\r\n      .find(e => e.fingerprint === fingerprint);\r\n\r\n    if (existingError) {\r\n      existingError.count++;\r\n      existingError.timestamp = new Date();\r\n    } else {\r\n      this.errors.set(errorId, errorEvent);\r\n    }\r\n\r\n    // Check alert rules\r\n    this.checkErrorAlerts(errorEvent);\r\n\r\n    // Log to console in development\r\n    if (process.env.NODE_ENV === 'development') {\r\n      console.error('[Monitoring] Error captured:', errorEvent);\r\n    }\r\n\r\n    return errorId;\r\n  }\r\n\r\n  /**\r\n   * Obtener errores con filtros\r\n   */\r\n  getErrors(filters: {\r\n    level?: ErrorEvent['level'];\r\n    timeRange?: { start: Date; end: Date };\r\n    component?: string;\r\n    limit?: number;\r\n  } = {}): ErrorEvent[] {\r\n    let errors = Array.from(this.errors.values());\r\n\r\n    // Apply filters\r\n    if (filters.level) {\r\n      errors = errors.filter(e => e.level === filters.level);\r\n    }\r\n\r\n    if (filters.timeRange) {\r\n      errors = errors.filter(e => \r\n        e.timestamp >= filters.timeRange!.start && \r\n        e.timestamp <= filters.timeRange!.end\r\n      );\r\n    }\r\n\r\n    if (filters.component) {\r\n      errors = errors.filter(e => e.context.component === filters.component);\r\n    }\r\n\r\n    // Sort by timestamp (newest first)\r\n    errors.sort((a, b) => b.timestamp.getTime() - a.timestamp.getTime());\r\n\r\n    // Apply limit\r\n    if (filters.limit) {\r\n      errors = errors.slice(0, filters.limit);\r\n    }\r\n\r\n    return errors;\r\n  }\r\n\r\n  // ===================================\r\n  // PERFORMANCE MONITORING\r\n  // ===================================\r\n\r\n  /**\r\n   * Inicializar monitoreo de performance\r\n   */\r\n  private startPerformanceMonitoring(): void {\r\n    if (!this.config.performance.enabled || typeof window === 'undefined') {\r\n      return;\r\n    }\r\n\r\n    // Monitor Core Web Vitals\r\n    this.monitorWebVitals();\r\n\r\n    // Monitor custom metrics every 30 seconds\r\n    setInterval(() => {\r\n      this.capturePerformanceMetrics();\r\n    }, 30000);\r\n\r\n    // Monitor page visibility changes\r\n    document.addEventListener('visibilitychange', () => {\r\n      if (document.visibilityState === 'hidden') {\r\n        this.capturePerformanceMetrics();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Monitorear Core Web Vitals\r\n   */\r\n  private monitorWebVitals(): void {\r\n    // LCP - Largest Contentful Paint\r\n    new PerformanceObserver((entryList) => {\r\n      const entries = entryList.getEntries();\r\n      const lastEntry = entries[entries.length - 1];\r\n      this.recordMetric('lcp', lastEntry.startTime);\r\n    }).observe({ entryTypes: ['largest-contentful-paint'] });\r\n\r\n    // FID - First Input Delay\r\n// Interfaces para Performance Observer entries\r\ninterface PerformanceEventTiming extends PerformanceEntry {\r\n  processingStart: number;\r\n  startTime: number;\r\n}\r\n\r\ninterface LayoutShiftEntry extends PerformanceEntry {\r\n  value: number;\r\n  hadRecentInput: boolean;\r\n}\r\n\r\n    new PerformanceObserver((entryList) => {\r\n      const entries = entryList.getEntries();\r\n      entries.forEach((entry: PerformanceEventTiming) => {\r\n        this.recordMetric('fid', entry.processingStart - entry.startTime);\r\n      });\r\n    }).observe({ entryTypes: ['first-input'] });\r\n\r\n    // CLS - Cumulative Layout Shift\r\n    let clsValue = 0;\r\n    new PerformanceObserver((entryList) => {\r\n      const entries = entryList.getEntries();\r\n      entries.forEach((entry: LayoutShiftEntry) => {\r\n        if (!entry.hadRecentInput) {\r\n          clsValue += entry.value;\r\n        }\r\n      });\r\n      this.recordMetric('cls', clsValue);\r\n    }).observe({ entryTypes: ['layout-shift'] });\r\n  }\r\n\r\n  /**\r\n   * Capturar m\xE9tricas de performance\r\n   */\r\n  capturePerformanceMetrics(): void {\r\n    if (!this.config.performance.enabled) {\r\n      return;\r\n    }\r\n\r\n    // Sample rate check\r\n    if (Math.random() > this.config.performance.sampleRate) {\r\n      return;\r\n    }\r\n\r\n    const metrics: PerformanceMetrics = {\r\n      timestamp: new Date(),\r\n      metrics: {\r\n        loadTime: this.getLoadTime(),\r\n        renderTime: this.getRenderTime(),\r\n        memoryUsage: this.getMemoryUsage(),\r\n        bundleSize: this.getBundleSize(),\r\n        apiResponseTime: this.getAverageApiResponseTime(),\r\n        apiErrorRate: this.getApiErrorRate(),\r\n        sessionDuration: this.getSessionDuration(),\r\n        pageViews: this.getPageViews(),\r\n        bounceRate: this.getBounceRate()\r\n      },\r\n      context: {\r\n        page: typeof window !== 'undefined' ? window.location.pathname : '',\r\n        sessionId: this.sessionId,\r\n        device: this.getDeviceType(),\r\n        browser: this.getBrowserType(),\r\n        userId: this.getUserId()\r\n      }\r\n    };\r\n\r\n    this.performanceData.push(metrics);\r\n\r\n    // Keep only last 1000 entries\r\n    if (this.performanceData.length > 1000) {\r\n      this.performanceData = this.performanceData.slice(-1000);\r\n    }\r\n\r\n    // Check performance alerts\r\n    this.checkPerformanceAlerts(metrics);\r\n\r\n    // Log in development\r\n    if (process.env.NODE_ENV === 'development') {\r\n      console.log('[Monitoring] Performance metrics captured:', metrics);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Registrar m\xE9trica espec\xEDfica\r\n   */\r\n  recordMetric(name: string, value: number, context: MetricContext = {}): void {\r\n    const metric = {\r\n      name,\r\n      value,\r\n      timestamp: new Date(),\r\n      context: {\r\n        sessionId: this.sessionId,\r\n        ...context\r\n      }\r\n    };\r\n\r\n    // Check if metric triggers alerts\r\n    this.checkMetricAlerts(name, value);\r\n\r\n    // Log in development\r\n    if (process.env.NODE_ENV === 'development') {\r\n      console.log(`[Monitoring] Metric recorded: ${name} = ${value}`, metric);\r\n    }\r\n  }\r\n\r\n  // ===================================\r\n  // ALERT SYSTEM\r\n  // ===================================\r\n\r\n  /**\r\n   * Inicializar reglas de alerta por defecto\r\n   */\r\n  private initializeDefaultAlertRules(): void {\r\n    const defaultRules: AlertRule[] = [\r\n      {\r\n        id: 'high-error-rate',\r\n        name: 'High Error Rate',\r\n        metric: 'error_rate',\r\n        threshold: 0.05, // 5%\r\n        operator: '>',\r\n        severity: 'high',\r\n        enabled: true,\r\n        cooldown: 15\r\n      },\r\n      {\r\n        id: 'slow-page-load',\r\n        name: 'Slow Page Load',\r\n        metric: 'load_time',\r\n        threshold: 3000, // 3 seconds\r\n        operator: '>',\r\n        severity: 'medium',\r\n        enabled: true,\r\n        cooldown: 10\r\n      },\r\n      {\r\n        id: 'high-memory-usage',\r\n        name: 'High Memory Usage',\r\n        metric: 'memory_usage',\r\n        threshold: 100, // 100MB\r\n        operator: '>',\r\n        severity: 'medium',\r\n        enabled: true,\r\n        cooldown: 20\r\n      },\r\n      {\r\n        id: 'poor-lcp',\r\n        name: 'Poor Largest Contentful Paint',\r\n        metric: 'lcp',\r\n        threshold: 2500, // 2.5 seconds\r\n        operator: '>',\r\n        severity: 'medium',\r\n        enabled: true,\r\n        cooldown: 15\r\n      }\r\n    ];\r\n\r\n    defaultRules.forEach(rule => {\r\n      this.alertRules.set(rule.id, rule);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Verificar alertas de errores\r\n   */\r\n  private checkErrorAlerts(errorEvent: ErrorEvent): void {\r\n    // Calculate error rate\r\n    const recentErrors = this.getErrors({\r\n      timeRange: {\r\n        start: new Date(Date.now() - 5 * 60 * 1000), // Last 5 minutes\r\n        end: new Date()\r\n      }\r\n    });\r\n\r\n    const errorRate = recentErrors.length / 100; // Assuming 100 requests per 5 minutes\r\n\r\n    this.checkMetricAlerts('error_rate', errorRate);\r\n\r\n    // Check for critical errors\r\n    if (errorEvent.level === 'critical') {\r\n      this.triggerAlert('critical-error', {\r\n        message: `Critical error occurred: ${errorEvent.message}`,\r\n        value: 1,\r\n        threshold: 0,\r\n        context: errorEvent\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Verificar alertas de performance\r\n   */\r\n  private checkPerformanceAlerts(metrics: PerformanceMetrics): void {\r\n    const { metrics: m } = metrics;\r\n\r\n    // Check each metric against alert rules\r\n    Object.entries(m).forEach(([metricName, value]) => {\r\n      if (typeof value === 'number') {\r\n        this.checkMetricAlerts(metricName, value);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Verificar alertas para una m\xE9trica espec\xEDfica\r\n   */\r\n  private checkMetricAlerts(metricName: string, value: number): void {\r\n    const relevantRules = Array.from(this.alertRules.values())\r\n      .filter(rule => rule.metric === metricName && rule.enabled);\r\n\r\n    relevantRules.forEach(rule => {\r\n      const shouldTrigger = this.evaluateAlertCondition(rule, value);\r\n      \r\n      if (shouldTrigger && this.canTriggerAlert(rule)) {\r\n        this.triggerAlert(rule.id, {\r\n          message: `${rule.name}: ${metricName} is ${value} (threshold: ${rule.threshold})`,\r\n          value,\r\n          threshold: rule.threshold,\r\n          context: { metricName, rule }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Evaluar condici\xF3n de alerta\r\n   */\r\n  private evaluateAlertCondition(rule: AlertRule, value: number): boolean {\r\n    switch (rule.operator) {\r\n      case '>': return value > rule.threshold;\r\n      case '<': return value < rule.threshold;\r\n      case '>=': return value >= rule.threshold;\r\n      case '<=': return value <= rule.threshold;\r\n      case '=': return value === rule.threshold;\r\n      default: return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Verificar si se puede disparar alerta (cooldown)\r\n   */\r\n  private canTriggerAlert(rule: AlertRule): boolean {\r\n    if (!rule.lastTriggered) {\r\n      return true;\r\n    }\r\n\r\n    const cooldownMs = rule.cooldown * 60 * 1000;\r\n    const timeSinceLastTrigger = Date.now() - rule.lastTriggered.getTime();\r\n    \r\n    return timeSinceLastTrigger >= cooldownMs;\r\n  }\r\n\r\n  /**\r\n   * Disparar alerta\r\n   */\r\n  private triggerAlert(ruleId: string, alertData: {\r\n    message: string;\r\n    value: number;\r\n    threshold: number;\r\n    context: AlertContext;\r\n  }): void {\r\n    const rule = this.alertRules.get(ruleId);\r\n    if (!rule) {return;}\r\n\r\n    const alertId = this.generateAlertId();\r\n    const alert: AlertEvent = {\r\n      id: alertId,\r\n      ruleId,\r\n      timestamp: new Date(),\r\n      severity: rule.severity,\r\n      message: alertData.message,\r\n      value: alertData.value,\r\n      threshold: alertData.threshold,\r\n      context: alertData.context,\r\n      acknowledged: false\r\n    };\r\n\r\n    this.activeAlerts.set(alertId, alert);\r\n    rule.lastTriggered = new Date();\r\n\r\n    // Send notifications\r\n    this.sendAlertNotifications(alert);\r\n\r\n    console.warn('[Monitoring] Alert triggered:', alert);\r\n  }\r\n\r\n  /**\r\n   * Enviar notificaciones de alerta\r\n   */\r\n  private async sendAlertNotifications(alert: AlertEvent): Promise<void> {\r\n    if (!this.config.alerts.enabled) {\r\n      return;\r\n    }\r\n\r\n    const { channels } = this.config.alerts;\r\n\r\n    // Email notifications\r\n    if (channels.email && channels.email.length > 0) {\r\n      // Implementation would integrate with email service\r\n      console.log(`[Monitoring] Email alert sent to: ${channels.email.join(', ')}`);\r\n    }\r\n\r\n    // Slack notifications\r\n    if (channels.slack) {\r\n      // Implementation would integrate with Slack webhook\r\n      console.log(`[Monitoring] Slack alert sent to: ${channels.slack}`);\r\n    }\r\n\r\n    // Webhook notifications\r\n    if (channels.webhook) {\r\n      try {\r\n        // Implementation would send HTTP POST to webhook\r\n        console.log(`[Monitoring] Webhook alert sent to: ${channels.webhook}`);\r\n      } catch (error) {\r\n        console.error('[Monitoring] Failed to send webhook alert:', error);\r\n      }\r\n    }\r\n  }\r\n\r\n  // ===================================\r\n  // UTILITY METHODS\r\n  // ===================================\r\n\r\n  private generateSessionId(): string {\r\n    return `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n  }\r\n\r\n  private generateErrorId(): string {\r\n    return `error_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n  }\r\n\r\n  private generateAlertId(): string {\r\n    return `alert_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n  }\r\n\r\n  private generateErrorFingerprint(message: string, stack?: string): string {\r\n    const content = `${message}${stack || ''}`;\r\n    // Simple hash function for fingerprinting\r\n    let hash = 0;\r\n    for (let i = 0; i < content.length; i++) {\r\n      const char = content.charCodeAt(i);\r\n      hash = ((hash << 5) - hash) + char;\r\n      hash = hash & hash; // Convert to 32-bit integer\r\n    }\r\n    return hash.toString(36);\r\n  }\r\n\r\n\r\n\r\n  private getLoadTime(): number {\r\n    if (typeof window === 'undefined') {return 0;}\r\n    const navigation = performance.getEntriesByType('navigation')[0] as NavigationTiming;\r\n    return navigation ? navigation.loadEventEnd - navigation.loadEventStart : 0;\r\n  }\r\n\r\n  private getRenderTime(): number {\r\n    if (typeof window === 'undefined') {return 0;}\r\n    const navigation = performance.getEntriesByType('navigation')[0] as NavigationTiming;\r\n    return navigation ? navigation.domContentLoadedEventEnd - navigation.domContentLoadedEventStart : 0;\r\n  }\r\n\r\n  private getMemoryUsage(): number {\r\n    if (typeof window === 'undefined' || !(performance as PerformanceWithMemory).memory) {return 0;}\r\n    return (performance as PerformanceWithMemory).memory!.usedJSHeapSize / 1024 / 1024; // MB\r\n  }\r\n\r\n  private getBundleSize(): number {\r\n    // This would be calculated based on loaded resources\r\n    return 0; // Placeholder\r\n  }\r\n\r\n  private getAverageApiResponseTime(): number {\r\n    // This would be calculated from API call metrics\r\n    return 0; // Placeholder\r\n  }\r\n\r\n  private getApiErrorRate(): number {\r\n    // This would be calculated from API call metrics\r\n    return 0; // Placeholder\r\n  }\r\n\r\n  private getSessionDuration(): number {\r\n    return Date.now() - parseInt(this.sessionId.split('_')[1]);\r\n  }\r\n\r\n  private getPageViews(): number {\r\n    // This would be tracked separately\r\n    return 1; // Placeholder\r\n  }\r\n\r\n  private getBounceRate(): number {\r\n    // This would be calculated from user behavior\r\n    return 0; // Placeholder\r\n  }\r\n\r\n  private getDeviceType(): string {\r\n    if (typeof window === 'undefined') {return 'unknown';}\r\n    const width = window.innerWidth;\r\n    if (width < 768) {return 'mobile';}\r\n    if (width < 1024) {return 'tablet';}\r\n    return 'desktop';\r\n  }\r\n\r\n  private getBrowserType(): string {\r\n    if (typeof navigator === 'undefined') {return 'unknown';}\r\n    const userAgent = navigator.userAgent;\r\n    if (userAgent.includes('Chrome')) {return 'chrome';}\r\n    if (userAgent.includes('Firefox')) {return 'firefox';}\r\n    if (userAgent.includes('Safari')) {return 'safari';}\r\n    if (userAgent.includes('Edge')) {return 'edge';}\r\n    return 'other';\r\n  }\r\n\r\n  private getUserId(): string | undefined {\r\n    // This would be retrieved from authentication context\r\n    return undefined; // Placeholder\r\n  }\r\n\r\n  // ===================================\r\n  // PUBLIC API\r\n  // ===================================\r\n\r\n  /**\r\n   * Obtener m\xE9tricas de performance\r\n   */\r\n  getPerformanceMetrics(timeRange?: { start: Date; end: Date }): PerformanceMetrics[] {\r\n    let data = this.performanceData;\r\n\r\n    if (timeRange) {\r\n      data = data.filter(m => \r\n        m.timestamp >= timeRange.start && m.timestamp <= timeRange.end\r\n      );\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * Obtener alertas activas\r\n   */\r\n  getActiveAlerts(): AlertEvent[] {\r\n    return Array.from(this.activeAlerts.values())\r\n      .filter(alert => !alert.resolvedAt)\r\n      .sort((a, b) => b.timestamp.getTime() - a.timestamp.getTime());\r\n  }\r\n\r\n  /**\r\n   * Reconocer alerta\r\n   */\r\n  acknowledgeAlert(alertId: string): boolean {\r\n    const alert = this.activeAlerts.get(alertId);\r\n    if (alert) {\r\n      alert.acknowledged = true;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Resolver alerta\r\n   */\r\n  resolveAlert(alertId: string): boolean {\r\n    const alert = this.activeAlerts.get(alertId);\r\n    if (alert) {\r\n      alert.resolvedAt = new Date();\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Obtener resumen de monitoreo\r\n   */\r\n  getMonitoringSummary() {\r\n    const now = new Date();\r\n    const oneHourAgo = new Date(now.getTime() - 60 * 60 * 1000);\r\n\r\n    const recentErrors = this.getErrors({\r\n      timeRange: { start: oneHourAgo, end: now }\r\n    });\r\n\r\n    const recentMetrics = this.getPerformanceMetrics({\r\n      start: oneHourAgo,\r\n      end: now\r\n    });\r\n\r\n    const activeAlerts = this.getActiveAlerts();\r\n\r\n    return {\r\n      errors: {\r\n        total: recentErrors.length,\r\n        critical: recentErrors.filter(e => e.level === 'critical').length,\r\n        warning: recentErrors.filter(e => e.level === 'warning').length\r\n      },\r\n      performance: {\r\n        averageLoadTime: recentMetrics.length > 0 \r\n          ? recentMetrics.reduce((sum, m) => sum + m.metrics.loadTime, 0) / recentMetrics.length \r\n          : 0,\r\n        averageMemoryUsage: recentMetrics.length > 0\r\n          ? recentMetrics.reduce((sum, m) => sum + m.metrics.memoryUsage, 0) / recentMetrics.length\r\n          : 0\r\n      },\r\n      alerts: {\r\n        active: activeAlerts.length,\r\n        critical: activeAlerts.filter(a => a.severity === 'critical').length,\r\n        unacknowledged: activeAlerts.filter(a => !a.acknowledged).length\r\n      },\r\n      system: {\r\n        uptime: this.getSessionDuration(),\r\n        sessionId: this.sessionId\r\n      }\r\n    };\r\n  }\r\n}\r\n\r\n// ===================================\r\n// EXPORTS\r\n// ===================================\r\n\r\nexport default EnterpriseMonitoringManager;\r\n\r\nexport type {\r\n  ErrorEvent,\r\n  PerformanceMetrics,\r\n  AlertRule,\r\n  AlertEvent,\r\n  MonitoringConfig\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["perfHooks", "window", "require", "EnterpriseMonitoringManager", "config", "errors", "Map", "performanceData", "alertRules", "activeAlerts", "sessionId", "generateSessionId", "initializeDefaultAlertRules", "startPerformanceMonitoring", "getInstance", "instance", "Error", "captureError", "error", "level", "context", "tags", "errorTracking", "enabled", "Math", "random", "sampleRate", "errorMessage", "message", "stack", "undefined", "ignoreErrors", "some", "pattern", "includes", "fingerprint", "generateErrorFingerprint", "errorId", "generateErrorId", "errorEvent", "id", "timestamp", "Date", "url", "location", "href", "userAgent", "navigator", "count", "existingError", "Array", "from", "values", "find", "e", "set", "checkErrorAlerts", "process", "env", "NODE_ENV", "console", "getErrors", "filters", "filter", "timeRange", "start", "end", "component", "sort", "a", "b", "getTime", "limit", "slice", "performance", "monitorWebVitals", "setInterval", "capturePerformanceMetrics", "document", "addEventListener", "visibilityState", "PerformanceObserver", "entryList", "entries", "getEntries", "lastEntry", "length", "recordMetric", "startTime", "observe", "entryTypes", "forEach", "entry", "processingStart", "clsValue", "hadRecentInput", "value", "metrics", "loadTime", "getLoadTime", "renderTime", "getRenderTime", "memoryUsage", "getMemoryUsage", "bundleSize", "getBundleSize", "apiResponseTime", "getAverageApiResponseTime", "apiErrorRate", "getApiErrorRate", "sessionDuration", "getSessionDuration", "pageViews", "getPageViews", "bounceRate", "getBounceRate", "page", "pathname", "device", "getDeviceType", "browser", "getBrowserType", "userId", "getUserId", "push", "checkPerformanceAlerts", "log", "name", "metric", "checkMetricAlerts", "defaultRules", "threshold", "operator", "severity", "cooldown", "rule", "recentErrors", "now", "errorRate", "triggerAlert", "m", "Object", "metricName", "relevantRules", "shouldTrigger", "evaluateAlertCondition", "canTriggerAlert", "lastTriggered", "cooldownMs", "timeSinceLastTrigger", "ruleId", "alertData", "get", "alertId", "generateAlertId", "alert", "acknowledged", "sendAlertNotifications", "warn", "alerts", "channels", "email", "join", "slack", "webhook", "toString", "substr", "content", "hash", "i", "char", "charCodeAt", "navigation", "getEntriesByType", "loadEventEnd", "loadEventStart", "domContentLoadedEventEnd", "domContentLoadedEventStart", "memory", "usedJSHeapSize", "parseInt", "split", "width", "innerWidth", "getPerformanceMetrics", "data", "getActiveAlerts", "resolvedAt", "acknowledgeAlert", "resolveAlert", "getMonitoringSummary", "oneHourAgo", "recentMetrics", "total", "critical", "warning", "averageLoadTime", "reduce", "sum", "averageMemoryUsage", "active", "unacknowledged", "system", "uptime"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "fef37584cb6db145f10b9a25d1dcc5ee1f7888f6"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2mm4eitwes = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2mm4eitwes();
cov_2mm4eitwes().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2mm4eitwes().s[1]++;
Object.defineProperty(exports,
// ===================================
// EXPORTS
// ===================================
"default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2mm4eitwes().f[0]++;
    cov_2mm4eitwes().s[2]++;
    return _default;
  }
});
const perfHooks =
/* istanbul ignore next */
(cov_2mm4eitwes().s[3]++, typeof window === 'undefined' ?
/* istanbul ignore next */
(cov_2mm4eitwes().b[0][0]++, require('perf_hooks')) :
/* istanbul ignore next */
(cov_2mm4eitwes().b[0][1]++, null));
// ===================================
// ENTERPRISE MONITORING MANAGER
// ===================================
// CLASE PRINCIPAL
// ===================================
class EnterpriseMonitoringManager {
  constructor(config) {
    /* istanbul ignore next */
    cov_2mm4eitwes().f[1]++;
    cov_2mm4eitwes().s[4]++;
    this.errors = new Map();
    /* istanbul ignore next */
    cov_2mm4eitwes().s[5]++;
    this.performanceData = [];
    /* istanbul ignore next */
    cov_2mm4eitwes().s[6]++;
    this.alertRules = new Map();
    /* istanbul ignore next */
    cov_2mm4eitwes().s[7]++;
    this.activeAlerts = new Map();
    /* istanbul ignore next */
    cov_2mm4eitwes().s[8]++;
    this.config = config;
    /* istanbul ignore next */
    cov_2mm4eitwes().s[9]++;
    this.sessionId = this.generateSessionId();
    /* istanbul ignore next */
    cov_2mm4eitwes().s[10]++;
    this.initializeDefaultAlertRules();
    /* istanbul ignore next */
    cov_2mm4eitwes().s[11]++;
    this.startPerformanceMonitoring();
  }
  static getInstance(config) {
    /* istanbul ignore next */
    cov_2mm4eitwes().f[2]++;
    cov_2mm4eitwes().s[12]++;
    if (!EnterpriseMonitoringManager.instance) {
      /* istanbul ignore next */
      cov_2mm4eitwes().b[1][0]++;
      cov_2mm4eitwes().s[13]++;
      if (!config) {
        /* istanbul ignore next */
        cov_2mm4eitwes().b[2][0]++;
        cov_2mm4eitwes().s[14]++;
        throw new Error('Configuration required for first initialization');
      } else
      /* istanbul ignore next */
      {
        cov_2mm4eitwes().b[2][1]++;
      }
      cov_2mm4eitwes().s[15]++;
      EnterpriseMonitoringManager.instance = new EnterpriseMonitoringManager(config);
    } else
    /* istanbul ignore next */
    {
      cov_2mm4eitwes().b[1][1]++;
    }
    cov_2mm4eitwes().s[16]++;
    return EnterpriseMonitoringManager.instance;
  }
  // ===================================
  // ERROR TRACKING
  // ===================================
  /**
  * Capturar y procesar error
  */
  captureError(error, level =
  /* istanbul ignore next */
  (cov_2mm4eitwes().b[3][0]++, 'error'), context =
  /* istanbul ignore next */
  (cov_2mm4eitwes().b[4][0]++, {}), tags =
  /* istanbul ignore next */
  (cov_2mm4eitwes().b[5][0]++, [])) {
    /* istanbul ignore next */
    cov_2mm4eitwes().f[3]++;
    cov_2mm4eitwes().s[17]++;
    if (!this.config.errorTracking.enabled) {
      /* istanbul ignore next */
      cov_2mm4eitwes().b[6][0]++;
      cov_2mm4eitwes().s[18]++;
      return '';
    } else
    /* istanbul ignore next */
    {
      cov_2mm4eitwes().b[6][1]++;
    }
    // Sample rate check
    cov_2mm4eitwes().s[19]++;
    if (Math.random() > this.config.errorTracking.sampleRate) {
      /* istanbul ignore next */
      cov_2mm4eitwes().b[7][0]++;
      cov_2mm4eitwes().s[20]++;
      return '';
    } else
    /* istanbul ignore next */
    {
      cov_2mm4eitwes().b[7][1]++;
    }
    const errorMessage =
    /* istanbul ignore next */
    (cov_2mm4eitwes().s[21]++, typeof error === 'string' ?
    /* istanbul ignore next */
    (cov_2mm4eitwes().b[8][0]++, error) :
    /* istanbul ignore next */
    (cov_2mm4eitwes().b[8][1]++, error.message));
    const stack =
    /* istanbul ignore next */
    (cov_2mm4eitwes().s[22]++, typeof error === 'string' ?
    /* istanbul ignore next */
    (cov_2mm4eitwes().b[9][0]++, undefined) :
    /* istanbul ignore next */
    (cov_2mm4eitwes().b[9][1]++, error.stack));
    // Check if error should be ignored
    /* istanbul ignore next */
    cov_2mm4eitwes().s[23]++;
    if (this.config.errorTracking.ignoreErrors.some(pattern => {
      /* istanbul ignore next */
      cov_2mm4eitwes().f[4]++;
      cov_2mm4eitwes().s[24]++;
      return errorMessage.includes(pattern);
    })) {
      /* istanbul ignore next */
      cov_2mm4eitwes().b[10][0]++;
      cov_2mm4eitwes().s[25]++;
      return '';
    } else
    /* istanbul ignore next */
    {
      cov_2mm4eitwes().b[10][1]++;
    }
    const fingerprint =
    /* istanbul ignore next */
    (cov_2mm4eitwes().s[26]++, this.generateErrorFingerprint(errorMessage, stack));
    const errorId =
    /* istanbul ignore next */
    (cov_2mm4eitwes().s[27]++, this.generateErrorId());
    const errorEvent =
    /* istanbul ignore next */
    (cov_2mm4eitwes().s[28]++, {
      id: errorId,
      timestamp: new Date(),
      message: errorMessage,
      stack,
      level,
      context: {
        sessionId: this.sessionId,
        url: typeof window !== 'undefined' ?
        /* istanbul ignore next */
        (cov_2mm4eitwes().b[11][0]++, window.location.href) :
        /* istanbul ignore next */
        (cov_2mm4eitwes().b[11][1]++, ''),
        userAgent: typeof navigator !== 'undefined' ?
        /* istanbul ignore next */
        (cov_2mm4eitwes().b[12][0]++, navigator.userAgent) :
        /* istanbul ignore next */
        (cov_2mm4eitwes().b[12][1]++, ''),
        ...context
      },
      tags,
      fingerprint,
      count: 1
    });
    // Check if error already exists (deduplication)
    const existingError =
    /* istanbul ignore next */
    (cov_2mm4eitwes().s[29]++, Array.from(this.errors.values()).find(e => {
      /* istanbul ignore next */
      cov_2mm4eitwes().f[5]++;
      cov_2mm4eitwes().s[30]++;
      return e.fingerprint === fingerprint;
    }));
    /* istanbul ignore next */
    cov_2mm4eitwes().s[31]++;
    if (existingError) {
      /* istanbul ignore next */
      cov_2mm4eitwes().b[13][0]++;
      cov_2mm4eitwes().s[32]++;
      existingError.count++;
      /* istanbul ignore next */
      cov_2mm4eitwes().s[33]++;
      existingError.timestamp = new Date();
    } else {
      /* istanbul ignore next */
      cov_2mm4eitwes().b[13][1]++;
      cov_2mm4eitwes().s[34]++;
      this.errors.set(errorId, errorEvent);
    }
    // Check alert rules
    /* istanbul ignore next */
    cov_2mm4eitwes().s[35]++;
    this.checkErrorAlerts(errorEvent);
    // Log to console in development
    /* istanbul ignore next */
    cov_2mm4eitwes().s[36]++;
    if (process.env.NODE_ENV === 'development') {
      /* istanbul ignore next */
      cov_2mm4eitwes().b[14][0]++;
      cov_2mm4eitwes().s[37]++;
      console.error('[Monitoring] Error captured:', errorEvent);
    } else
    /* istanbul ignore next */
    {
      cov_2mm4eitwes().b[14][1]++;
    }
    cov_2mm4eitwes().s[38]++;
    return errorId;
  }
  /**
  * Obtener errores con filtros
  */
  getErrors(filters =
  /* istanbul ignore next */
  (cov_2mm4eitwes().b[15][0]++, {})) {
    /* istanbul ignore next */
    cov_2mm4eitwes().f[6]++;
    let errors =
    /* istanbul ignore next */
    (cov_2mm4eitwes().s[39]++, Array.from(this.errors.values()));
    // Apply filters
    /* istanbul ignore next */
    cov_2mm4eitwes().s[40]++;
    if (filters.level) {
      /* istanbul ignore next */
      cov_2mm4eitwes().b[16][0]++;
      cov_2mm4eitwes().s[41]++;
      errors = errors.filter(e => {
        /* istanbul ignore next */
        cov_2mm4eitwes().f[7]++;
        cov_2mm4eitwes().s[42]++;
        return e.level === filters.level;
      });
    } else
    /* istanbul ignore next */
    {
      cov_2mm4eitwes().b[16][1]++;
    }
    cov_2mm4eitwes().s[43]++;
    if (filters.timeRange) {
      /* istanbul ignore next */
      cov_2mm4eitwes().b[17][0]++;
      cov_2mm4eitwes().s[44]++;
      errors = errors.filter(e => {
        /* istanbul ignore next */
        cov_2mm4eitwes().f[8]++;
        cov_2mm4eitwes().s[45]++;
        return /* istanbul ignore next */(cov_2mm4eitwes().b[18][0]++, e.timestamp >= filters.timeRange.start) &&
        /* istanbul ignore next */
        (cov_2mm4eitwes().b[18][1]++, e.timestamp <= filters.timeRange.end);
      });
    } else
    /* istanbul ignore next */
    {
      cov_2mm4eitwes().b[17][1]++;
    }
    cov_2mm4eitwes().s[46]++;
    if (filters.component) {
      /* istanbul ignore next */
      cov_2mm4eitwes().b[19][0]++;
      cov_2mm4eitwes().s[47]++;
      errors = errors.filter(e => {
        /* istanbul ignore next */
        cov_2mm4eitwes().f[9]++;
        cov_2mm4eitwes().s[48]++;
        return e.context.component === filters.component;
      });
    } else
    /* istanbul ignore next */
    {
      cov_2mm4eitwes().b[19][1]++;
    }
    // Sort by timestamp (newest first)
    cov_2mm4eitwes().s[49]++;
    errors.sort((a, b) => {
      /* istanbul ignore next */
      cov_2mm4eitwes().f[10]++;
      cov_2mm4eitwes().s[50]++;
      return b.timestamp.getTime() - a.timestamp.getTime();
    });
    // Apply limit
    /* istanbul ignore next */
    cov_2mm4eitwes().s[51]++;
    if (filters.limit) {
      /* istanbul ignore next */
      cov_2mm4eitwes().b[20][0]++;
      cov_2mm4eitwes().s[52]++;
      errors = errors.slice(0, filters.limit);
    } else
    /* istanbul ignore next */
    {
      cov_2mm4eitwes().b[20][1]++;
    }
    cov_2mm4eitwes().s[53]++;
    return errors;
  }
  // ===================================
  // PERFORMANCE MONITORING
  // ===================================
  /**
  * Inicializar monitoreo de performance
  */
  startPerformanceMonitoring() {
    /* istanbul ignore next */
    cov_2mm4eitwes().f[11]++;
    cov_2mm4eitwes().s[54]++;
    if (
    /* istanbul ignore next */
    (cov_2mm4eitwes().b[22][0]++, !this.config.performance.enabled) ||
    /* istanbul ignore next */
    (cov_2mm4eitwes().b[22][1]++, typeof window === 'undefined')) {
      /* istanbul ignore next */
      cov_2mm4eitwes().b[21][0]++;
      cov_2mm4eitwes().s[55]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2mm4eitwes().b[21][1]++;
    }
    // Monitor Core Web Vitals
    cov_2mm4eitwes().s[56]++;
    this.monitorWebVitals();
    // Monitor custom metrics every 30 seconds
    /* istanbul ignore next */
    cov_2mm4eitwes().s[57]++;
    setInterval(() => {
      /* istanbul ignore next */
      cov_2mm4eitwes().f[12]++;
      cov_2mm4eitwes().s[58]++;
      this.capturePerformanceMetrics();
    }, 30000);
    // Monitor page visibility changes
    /* istanbul ignore next */
    cov_2mm4eitwes().s[59]++;
    document.addEventListener('visibilitychange', () => {
      /* istanbul ignore next */
      cov_2mm4eitwes().f[13]++;
      cov_2mm4eitwes().s[60]++;
      if (document.visibilityState === 'hidden') {
        /* istanbul ignore next */
        cov_2mm4eitwes().b[23][0]++;
        cov_2mm4eitwes().s[61]++;
        this.capturePerformanceMetrics();
      } else
      /* istanbul ignore next */
      {
        cov_2mm4eitwes().b[23][1]++;
      }
    });
  }
  /**
  * Monitorear Core Web Vitals
  */
  monitorWebVitals() {
    /* istanbul ignore next */
    cov_2mm4eitwes().f[14]++;
    cov_2mm4eitwes().s[62]++;
    // LCP - Largest Contentful Paint
    new PerformanceObserver(entryList => {
      /* istanbul ignore next */
      cov_2mm4eitwes().f[15]++;
      const entries =
      /* istanbul ignore next */
      (cov_2mm4eitwes().s[63]++, entryList.getEntries());
      const lastEntry =
      /* istanbul ignore next */
      (cov_2mm4eitwes().s[64]++, entries[entries.length - 1]);
      /* istanbul ignore next */
      cov_2mm4eitwes().s[65]++;
      this.recordMetric('lcp', lastEntry.startTime);
    }).observe({
      entryTypes: ['largest-contentful-paint']
    });
    /* istanbul ignore next */
    cov_2mm4eitwes().s[66]++;
    new PerformanceObserver(entryList => {
      /* istanbul ignore next */
      cov_2mm4eitwes().f[16]++;
      const entries =
      /* istanbul ignore next */
      (cov_2mm4eitwes().s[67]++, entryList.getEntries());
      /* istanbul ignore next */
      cov_2mm4eitwes().s[68]++;
      entries.forEach(entry => {
        /* istanbul ignore next */
        cov_2mm4eitwes().f[17]++;
        cov_2mm4eitwes().s[69]++;
        this.recordMetric('fid', entry.processingStart - entry.startTime);
      });
    }).observe({
      entryTypes: ['first-input']
    });
    // CLS - Cumulative Layout Shift
    let clsValue =
    /* istanbul ignore next */
    (cov_2mm4eitwes().s[70]++, 0);
    /* istanbul ignore next */
    cov_2mm4eitwes().s[71]++;
    new PerformanceObserver(entryList => {
      /* istanbul ignore next */
      cov_2mm4eitwes().f[18]++;
      const entries =
      /* istanbul ignore next */
      (cov_2mm4eitwes().s[72]++, entryList.getEntries());
      /* istanbul ignore next */
      cov_2mm4eitwes().s[73]++;
      entries.forEach(entry => {
        /* istanbul ignore next */
        cov_2mm4eitwes().f[19]++;
        cov_2mm4eitwes().s[74]++;
        if (!entry.hadRecentInput) {
          /* istanbul ignore next */
          cov_2mm4eitwes().b[24][0]++;
          cov_2mm4eitwes().s[75]++;
          clsValue += entry.value;
        } else
        /* istanbul ignore next */
        {
          cov_2mm4eitwes().b[24][1]++;
        }
      });
      /* istanbul ignore next */
      cov_2mm4eitwes().s[76]++;
      this.recordMetric('cls', clsValue);
    }).observe({
      entryTypes: ['layout-shift']
    });
  }
  /**
  * Capturar métricas de performance
  */
  capturePerformanceMetrics() {
    /* istanbul ignore next */
    cov_2mm4eitwes().f[20]++;
    cov_2mm4eitwes().s[77]++;
    if (!this.config.performance.enabled) {
      /* istanbul ignore next */
      cov_2mm4eitwes().b[25][0]++;
      cov_2mm4eitwes().s[78]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2mm4eitwes().b[25][1]++;
    }
    // Sample rate check
    cov_2mm4eitwes().s[79]++;
    if (Math.random() > this.config.performance.sampleRate) {
      /* istanbul ignore next */
      cov_2mm4eitwes().b[26][0]++;
      cov_2mm4eitwes().s[80]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2mm4eitwes().b[26][1]++;
    }
    const metrics =
    /* istanbul ignore next */
    (cov_2mm4eitwes().s[81]++, {
      timestamp: new Date(),
      metrics: {
        loadTime: this.getLoadTime(),
        renderTime: this.getRenderTime(),
        memoryUsage: this.getMemoryUsage(),
        bundleSize: this.getBundleSize(),
        apiResponseTime: this.getAverageApiResponseTime(),
        apiErrorRate: this.getApiErrorRate(),
        sessionDuration: this.getSessionDuration(),
        pageViews: this.getPageViews(),
        bounceRate: this.getBounceRate()
      },
      context: {
        page: typeof window !== 'undefined' ?
        /* istanbul ignore next */
        (cov_2mm4eitwes().b[27][0]++, window.location.pathname) :
        /* istanbul ignore next */
        (cov_2mm4eitwes().b[27][1]++, ''),
        sessionId: this.sessionId,
        device: this.getDeviceType(),
        browser: this.getBrowserType(),
        userId: this.getUserId()
      }
    });
    /* istanbul ignore next */
    cov_2mm4eitwes().s[82]++;
    this.performanceData.push(metrics);
    // Keep only last 1000 entries
    /* istanbul ignore next */
    cov_2mm4eitwes().s[83]++;
    if (this.performanceData.length > 1000) {
      /* istanbul ignore next */
      cov_2mm4eitwes().b[28][0]++;
      cov_2mm4eitwes().s[84]++;
      this.performanceData = this.performanceData.slice(-1000);
    } else
    /* istanbul ignore next */
    {
      cov_2mm4eitwes().b[28][1]++;
    }
    // Check performance alerts
    cov_2mm4eitwes().s[85]++;
    this.checkPerformanceAlerts(metrics);
    // Log in development
    /* istanbul ignore next */
    cov_2mm4eitwes().s[86]++;
    if (process.env.NODE_ENV === 'development') {
      /* istanbul ignore next */
      cov_2mm4eitwes().b[29][0]++;
      cov_2mm4eitwes().s[87]++;
      console.log('[Monitoring] Performance metrics captured:', metrics);
    } else
    /* istanbul ignore next */
    {
      cov_2mm4eitwes().b[29][1]++;
    }
  }
  /**
  * Registrar métrica específica
  */
  recordMetric(name, value, context =
  /* istanbul ignore next */
  (cov_2mm4eitwes().b[30][0]++, {})) {
    /* istanbul ignore next */
    cov_2mm4eitwes().f[21]++;
    const metric =
    /* istanbul ignore next */
    (cov_2mm4eitwes().s[88]++, {
      name,
      value,
      timestamp: new Date(),
      context: {
        sessionId: this.sessionId,
        ...context
      }
    });
    // Check if metric triggers alerts
    /* istanbul ignore next */
    cov_2mm4eitwes().s[89]++;
    this.checkMetricAlerts(name, value);
    // Log in development
    /* istanbul ignore next */
    cov_2mm4eitwes().s[90]++;
    if (process.env.NODE_ENV === 'development') {
      /* istanbul ignore next */
      cov_2mm4eitwes().b[31][0]++;
      cov_2mm4eitwes().s[91]++;
      console.log(`[Monitoring] Metric recorded: ${name} = ${value}`, metric);
    } else
    /* istanbul ignore next */
    {
      cov_2mm4eitwes().b[31][1]++;
    }
  }
  // ===================================
  // ALERT SYSTEM
  // ===================================
  /**
  * Inicializar reglas de alerta por defecto
  */
  initializeDefaultAlertRules() {
    /* istanbul ignore next */
    cov_2mm4eitwes().f[22]++;
    const defaultRules =
    /* istanbul ignore next */
    (cov_2mm4eitwes().s[92]++, [{
      id: 'high-error-rate',
      name: 'High Error Rate',
      metric: 'error_rate',
      threshold: 0.05,
      operator: '>',
      severity: 'high',
      enabled: true,
      cooldown: 15
    }, {
      id: 'slow-page-load',
      name: 'Slow Page Load',
      metric: 'load_time',
      threshold: 3000,
      operator: '>',
      severity: 'medium',
      enabled: true,
      cooldown: 10
    }, {
      id: 'high-memory-usage',
      name: 'High Memory Usage',
      metric: 'memory_usage',
      threshold: 100,
      operator: '>',
      severity: 'medium',
      enabled: true,
      cooldown: 20
    }, {
      id: 'poor-lcp',
      name: 'Poor Largest Contentful Paint',
      metric: 'lcp',
      threshold: 2500,
      operator: '>',
      severity: 'medium',
      enabled: true,
      cooldown: 15
    }]);
    /* istanbul ignore next */
    cov_2mm4eitwes().s[93]++;
    defaultRules.forEach(rule => {
      /* istanbul ignore next */
      cov_2mm4eitwes().f[23]++;
      cov_2mm4eitwes().s[94]++;
      this.alertRules.set(rule.id, rule);
    });
  }
  /**
  * Verificar alertas de errores
  */
  checkErrorAlerts(errorEvent) {
    /* istanbul ignore next */
    cov_2mm4eitwes().f[24]++;
    // Calculate error rate
    const recentErrors =
    /* istanbul ignore next */
    (cov_2mm4eitwes().s[95]++, this.getErrors({
      timeRange: {
        start: new Date(Date.now() - 5 * 60 * 1000),
        end: new Date()
      }
    }));
    const errorRate =
    /* istanbul ignore next */
    (cov_2mm4eitwes().s[96]++, recentErrors.length / 100); // Assuming 100 requests per 5 minutes
    /* istanbul ignore next */
    cov_2mm4eitwes().s[97]++;
    this.checkMetricAlerts('error_rate', errorRate);
    // Check for critical errors
    /* istanbul ignore next */
    cov_2mm4eitwes().s[98]++;
    if (errorEvent.level === 'critical') {
      /* istanbul ignore next */
      cov_2mm4eitwes().b[32][0]++;
      cov_2mm4eitwes().s[99]++;
      this.triggerAlert('critical-error', {
        message: `Critical error occurred: ${errorEvent.message}`,
        value: 1,
        threshold: 0,
        context: errorEvent
      });
    } else
    /* istanbul ignore next */
    {
      cov_2mm4eitwes().b[32][1]++;
    }
  }
  /**
  * Verificar alertas de performance
  */
  checkPerformanceAlerts(metrics) {
    /* istanbul ignore next */
    cov_2mm4eitwes().f[25]++;
    const {
      metrics: m
    } =
    /* istanbul ignore next */
    (cov_2mm4eitwes().s[100]++, metrics);
    // Check each metric against alert rules
    /* istanbul ignore next */
    cov_2mm4eitwes().s[101]++;
    Object.entries(m).forEach(([metricName, value]) => {
      /* istanbul ignore next */
      cov_2mm4eitwes().f[26]++;
      cov_2mm4eitwes().s[102]++;
      if (typeof value === 'number') {
        /* istanbul ignore next */
        cov_2mm4eitwes().b[33][0]++;
        cov_2mm4eitwes().s[103]++;
        this.checkMetricAlerts(metricName, value);
      } else
      /* istanbul ignore next */
      {
        cov_2mm4eitwes().b[33][1]++;
      }
    });
  }
  /**
  * Verificar alertas para una métrica específica
  */
  checkMetricAlerts(metricName, value) {
    /* istanbul ignore next */
    cov_2mm4eitwes().f[27]++;
    const relevantRules =
    /* istanbul ignore next */
    (cov_2mm4eitwes().s[104]++, Array.from(this.alertRules.values()).filter(rule => {
      /* istanbul ignore next */
      cov_2mm4eitwes().f[28]++;
      cov_2mm4eitwes().s[105]++;
      return /* istanbul ignore next */(cov_2mm4eitwes().b[34][0]++, rule.metric === metricName) &&
      /* istanbul ignore next */
      (cov_2mm4eitwes().b[34][1]++, rule.enabled);
    }));
    /* istanbul ignore next */
    cov_2mm4eitwes().s[106]++;
    relevantRules.forEach(rule => {
      /* istanbul ignore next */
      cov_2mm4eitwes().f[29]++;
      const shouldTrigger =
      /* istanbul ignore next */
      (cov_2mm4eitwes().s[107]++, this.evaluateAlertCondition(rule, value));
      /* istanbul ignore next */
      cov_2mm4eitwes().s[108]++;
      if (
      /* istanbul ignore next */
      (cov_2mm4eitwes().b[36][0]++, shouldTrigger) &&
      /* istanbul ignore next */
      (cov_2mm4eitwes().b[36][1]++, this.canTriggerAlert(rule))) {
        /* istanbul ignore next */
        cov_2mm4eitwes().b[35][0]++;
        cov_2mm4eitwes().s[109]++;
        this.triggerAlert(rule.id, {
          message: `${rule.name}: ${metricName} is ${value} (threshold: ${rule.threshold})`,
          value,
          threshold: rule.threshold,
          context: {
            metricName,
            rule
          }
        });
      } else
      /* istanbul ignore next */
      {
        cov_2mm4eitwes().b[35][1]++;
      }
    });
  }
  /**
  * Evaluar condición de alerta
  */
  evaluateAlertCondition(rule, value) {
    /* istanbul ignore next */
    cov_2mm4eitwes().f[30]++;
    cov_2mm4eitwes().s[110]++;
    switch (rule.operator) {
      case '>':
        /* istanbul ignore next */
        cov_2mm4eitwes().b[37][0]++;
        cov_2mm4eitwes().s[111]++;
        return value > rule.threshold;
      case '<':
        /* istanbul ignore next */
        cov_2mm4eitwes().b[37][1]++;
        cov_2mm4eitwes().s[112]++;
        return value < rule.threshold;
      case '>=':
        /* istanbul ignore next */
        cov_2mm4eitwes().b[37][2]++;
        cov_2mm4eitwes().s[113]++;
        return value >= rule.threshold;
      case '<=':
        /* istanbul ignore next */
        cov_2mm4eitwes().b[37][3]++;
        cov_2mm4eitwes().s[114]++;
        return value <= rule.threshold;
      case '=':
        /* istanbul ignore next */
        cov_2mm4eitwes().b[37][4]++;
        cov_2mm4eitwes().s[115]++;
        return value === rule.threshold;
      default:
        /* istanbul ignore next */
        cov_2mm4eitwes().b[37][5]++;
        cov_2mm4eitwes().s[116]++;
        return false;
    }
  }
  /**
  * Verificar si se puede disparar alerta (cooldown)
  */
  canTriggerAlert(rule) {
    /* istanbul ignore next */
    cov_2mm4eitwes().f[31]++;
    cov_2mm4eitwes().s[117]++;
    if (!rule.lastTriggered) {
      /* istanbul ignore next */
      cov_2mm4eitwes().b[38][0]++;
      cov_2mm4eitwes().s[118]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_2mm4eitwes().b[38][1]++;
    }
    const cooldownMs =
    /* istanbul ignore next */
    (cov_2mm4eitwes().s[119]++, rule.cooldown * 60 * 1000);
    const timeSinceLastTrigger =
    /* istanbul ignore next */
    (cov_2mm4eitwes().s[120]++, Date.now() - rule.lastTriggered.getTime());
    /* istanbul ignore next */
    cov_2mm4eitwes().s[121]++;
    return timeSinceLastTrigger >= cooldownMs;
  }
  /**
  * Disparar alerta
  */
  triggerAlert(ruleId, alertData) {
    /* istanbul ignore next */
    cov_2mm4eitwes().f[32]++;
    const rule =
    /* istanbul ignore next */
    (cov_2mm4eitwes().s[122]++, this.alertRules.get(ruleId));
    /* istanbul ignore next */
    cov_2mm4eitwes().s[123]++;
    if (!rule) {
      /* istanbul ignore next */
      cov_2mm4eitwes().b[39][0]++;
      cov_2mm4eitwes().s[124]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2mm4eitwes().b[39][1]++;
    }
    const alertId =
    /* istanbul ignore next */
    (cov_2mm4eitwes().s[125]++, this.generateAlertId());
    const alert =
    /* istanbul ignore next */
    (cov_2mm4eitwes().s[126]++, {
      id: alertId,
      ruleId,
      timestamp: new Date(),
      severity: rule.severity,
      message: alertData.message,
      value: alertData.value,
      threshold: alertData.threshold,
      context: alertData.context,
      acknowledged: false
    });
    /* istanbul ignore next */
    cov_2mm4eitwes().s[127]++;
    this.activeAlerts.set(alertId, alert);
    /* istanbul ignore next */
    cov_2mm4eitwes().s[128]++;
    rule.lastTriggered = new Date();
    // Send notifications
    /* istanbul ignore next */
    cov_2mm4eitwes().s[129]++;
    this.sendAlertNotifications(alert);
    /* istanbul ignore next */
    cov_2mm4eitwes().s[130]++;
    console.warn('[Monitoring] Alert triggered:', alert);
  }
  /**
  * Enviar notificaciones de alerta
  */
  async sendAlertNotifications(alert) {
    /* istanbul ignore next */
    cov_2mm4eitwes().f[33]++;
    cov_2mm4eitwes().s[131]++;
    if (!this.config.alerts.enabled) {
      /* istanbul ignore next */
      cov_2mm4eitwes().b[40][0]++;
      cov_2mm4eitwes().s[132]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2mm4eitwes().b[40][1]++;
    }
    const {
      channels
    } =
    /* istanbul ignore next */
    (cov_2mm4eitwes().s[133]++, this.config.alerts);
    // Email notifications
    /* istanbul ignore next */
    cov_2mm4eitwes().s[134]++;
    if (
    /* istanbul ignore next */
    (cov_2mm4eitwes().b[42][0]++, channels.email) &&
    /* istanbul ignore next */
    (cov_2mm4eitwes().b[42][1]++, channels.email.length > 0)) {
      /* istanbul ignore next */
      cov_2mm4eitwes().b[41][0]++;
      cov_2mm4eitwes().s[135]++;
      // Implementation would integrate with email service
      console.log(`[Monitoring] Email alert sent to: ${channels.email.join(', ')}`);
    } else
    /* istanbul ignore next */
    {
      cov_2mm4eitwes().b[41][1]++;
    }
    // Slack notifications
    cov_2mm4eitwes().s[136]++;
    if (channels.slack) {
      /* istanbul ignore next */
      cov_2mm4eitwes().b[43][0]++;
      cov_2mm4eitwes().s[137]++;
      // Implementation would integrate with Slack webhook
      console.log(`[Monitoring] Slack alert sent to: ${channels.slack}`);
    } else
    /* istanbul ignore next */
    {
      cov_2mm4eitwes().b[43][1]++;
    }
    // Webhook notifications
    cov_2mm4eitwes().s[138]++;
    if (channels.webhook) {
      /* istanbul ignore next */
      cov_2mm4eitwes().b[44][0]++;
      cov_2mm4eitwes().s[139]++;
      try {
        /* istanbul ignore next */
        cov_2mm4eitwes().s[140]++;
        // Implementation would send HTTP POST to webhook
        console.log(`[Monitoring] Webhook alert sent to: ${channels.webhook}`);
      } catch (error) {
        /* istanbul ignore next */
        cov_2mm4eitwes().s[141]++;
        console.error('[Monitoring] Failed to send webhook alert:', error);
      }
    } else
    /* istanbul ignore next */
    {
      cov_2mm4eitwes().b[44][1]++;
    }
  }
  // ===================================
  // UTILITY METHODS
  // ===================================
  generateSessionId() {
    /* istanbul ignore next */
    cov_2mm4eitwes().f[34]++;
    cov_2mm4eitwes().s[142]++;
    return `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
  }
  generateErrorId() {
    /* istanbul ignore next */
    cov_2mm4eitwes().f[35]++;
    cov_2mm4eitwes().s[143]++;
    return `error_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
  }
  generateAlertId() {
    /* istanbul ignore next */
    cov_2mm4eitwes().f[36]++;
    cov_2mm4eitwes().s[144]++;
    return `alert_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
  }
  generateErrorFingerprint(message, stack) {
    /* istanbul ignore next */
    cov_2mm4eitwes().f[37]++;
    const content =
    /* istanbul ignore next */
    (cov_2mm4eitwes().s[145]++, `${message}${
    /* istanbul ignore next */
    (cov_2mm4eitwes().b[45][0]++, stack) ||
    /* istanbul ignore next */
    (cov_2mm4eitwes().b[45][1]++, '')}`);
    // Simple hash function for fingerprinting
    let hash =
    /* istanbul ignore next */
    (cov_2mm4eitwes().s[146]++, 0);
    /* istanbul ignore next */
    cov_2mm4eitwes().s[147]++;
    for (let i =
    /* istanbul ignore next */
    (cov_2mm4eitwes().s[148]++, 0); i < content.length; i++) {
      const char =
      /* istanbul ignore next */
      (cov_2mm4eitwes().s[149]++, content.charCodeAt(i));
      /* istanbul ignore next */
      cov_2mm4eitwes().s[150]++;
      hash = (hash << 5) - hash + char;
      /* istanbul ignore next */
      cov_2mm4eitwes().s[151]++;
      hash = hash & hash; // Convert to 32-bit integer
    }
    /* istanbul ignore next */
    cov_2mm4eitwes().s[152]++;
    return hash.toString(36);
  }
  getLoadTime() {
    /* istanbul ignore next */
    cov_2mm4eitwes().f[38]++;
    cov_2mm4eitwes().s[153]++;
    if (typeof window === 'undefined') {
      /* istanbul ignore next */
      cov_2mm4eitwes().b[46][0]++;
      cov_2mm4eitwes().s[154]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_2mm4eitwes().b[46][1]++;
    }
    const navigation =
    /* istanbul ignore next */
    (cov_2mm4eitwes().s[155]++, performance.getEntriesByType('navigation')[0]);
    /* istanbul ignore next */
    cov_2mm4eitwes().s[156]++;
    return navigation ?
    /* istanbul ignore next */
    (cov_2mm4eitwes().b[47][0]++, navigation.loadEventEnd - navigation.loadEventStart) :
    /* istanbul ignore next */
    (cov_2mm4eitwes().b[47][1]++, 0);
  }
  getRenderTime() {
    /* istanbul ignore next */
    cov_2mm4eitwes().f[39]++;
    cov_2mm4eitwes().s[157]++;
    if (typeof window === 'undefined') {
      /* istanbul ignore next */
      cov_2mm4eitwes().b[48][0]++;
      cov_2mm4eitwes().s[158]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_2mm4eitwes().b[48][1]++;
    }
    const navigation =
    /* istanbul ignore next */
    (cov_2mm4eitwes().s[159]++, performance.getEntriesByType('navigation')[0]);
    /* istanbul ignore next */
    cov_2mm4eitwes().s[160]++;
    return navigation ?
    /* istanbul ignore next */
    (cov_2mm4eitwes().b[49][0]++, navigation.domContentLoadedEventEnd - navigation.domContentLoadedEventStart) :
    /* istanbul ignore next */
    (cov_2mm4eitwes().b[49][1]++, 0);
  }
  getMemoryUsage() {
    /* istanbul ignore next */
    cov_2mm4eitwes().f[40]++;
    cov_2mm4eitwes().s[161]++;
    if (
    /* istanbul ignore next */
    (cov_2mm4eitwes().b[51][0]++, typeof window === 'undefined') ||
    /* istanbul ignore next */
    (cov_2mm4eitwes().b[51][1]++, !performance.memory)) {
      /* istanbul ignore next */
      cov_2mm4eitwes().b[50][0]++;
      cov_2mm4eitwes().s[162]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_2mm4eitwes().b[50][1]++;
    }
    cov_2mm4eitwes().s[163]++;
    return performance.memory.usedJSHeapSize / 1024 / 1024; // MB
  }
  getBundleSize() {
    /* istanbul ignore next */
    cov_2mm4eitwes().f[41]++;
    cov_2mm4eitwes().s[164]++;
    // This would be calculated based on loaded resources
    return 0; // Placeholder
  }
  getAverageApiResponseTime() {
    /* istanbul ignore next */
    cov_2mm4eitwes().f[42]++;
    cov_2mm4eitwes().s[165]++;
    // This would be calculated from API call metrics
    return 0; // Placeholder
  }
  getApiErrorRate() {
    /* istanbul ignore next */
    cov_2mm4eitwes().f[43]++;
    cov_2mm4eitwes().s[166]++;
    // This would be calculated from API call metrics
    return 0; // Placeholder
  }
  getSessionDuration() {
    /* istanbul ignore next */
    cov_2mm4eitwes().f[44]++;
    cov_2mm4eitwes().s[167]++;
    return Date.now() - parseInt(this.sessionId.split('_')[1]);
  }
  getPageViews() {
    /* istanbul ignore next */
    cov_2mm4eitwes().f[45]++;
    cov_2mm4eitwes().s[168]++;
    // This would be tracked separately
    return 1; // Placeholder
  }
  getBounceRate() {
    /* istanbul ignore next */
    cov_2mm4eitwes().f[46]++;
    cov_2mm4eitwes().s[169]++;
    // This would be calculated from user behavior
    return 0; // Placeholder
  }
  getDeviceType() {
    /* istanbul ignore next */
    cov_2mm4eitwes().f[47]++;
    cov_2mm4eitwes().s[170]++;
    if (typeof window === 'undefined') {
      /* istanbul ignore next */
      cov_2mm4eitwes().b[52][0]++;
      cov_2mm4eitwes().s[171]++;
      return 'unknown';
    } else
    /* istanbul ignore next */
    {
      cov_2mm4eitwes().b[52][1]++;
    }
    const width =
    /* istanbul ignore next */
    (cov_2mm4eitwes().s[172]++, window.innerWidth);
    /* istanbul ignore next */
    cov_2mm4eitwes().s[173]++;
    if (width < 768) {
      /* istanbul ignore next */
      cov_2mm4eitwes().b[53][0]++;
      cov_2mm4eitwes().s[174]++;
      return 'mobile';
    } else
    /* istanbul ignore next */
    {
      cov_2mm4eitwes().b[53][1]++;
    }
    cov_2mm4eitwes().s[175]++;
    if (width < 1024) {
      /* istanbul ignore next */
      cov_2mm4eitwes().b[54][0]++;
      cov_2mm4eitwes().s[176]++;
      return 'tablet';
    } else
    /* istanbul ignore next */
    {
      cov_2mm4eitwes().b[54][1]++;
    }
    cov_2mm4eitwes().s[177]++;
    return 'desktop';
  }
  getBrowserType() {
    /* istanbul ignore next */
    cov_2mm4eitwes().f[48]++;
    cov_2mm4eitwes().s[178]++;
    if (typeof navigator === 'undefined') {
      /* istanbul ignore next */
      cov_2mm4eitwes().b[55][0]++;
      cov_2mm4eitwes().s[179]++;
      return 'unknown';
    } else
    /* istanbul ignore next */
    {
      cov_2mm4eitwes().b[55][1]++;
    }
    const userAgent =
    /* istanbul ignore next */
    (cov_2mm4eitwes().s[180]++, navigator.userAgent);
    /* istanbul ignore next */
    cov_2mm4eitwes().s[181]++;
    if (userAgent.includes('Chrome')) {
      /* istanbul ignore next */
      cov_2mm4eitwes().b[56][0]++;
      cov_2mm4eitwes().s[182]++;
      return 'chrome';
    } else
    /* istanbul ignore next */
    {
      cov_2mm4eitwes().b[56][1]++;
    }
    cov_2mm4eitwes().s[183]++;
    if (userAgent.includes('Firefox')) {
      /* istanbul ignore next */
      cov_2mm4eitwes().b[57][0]++;
      cov_2mm4eitwes().s[184]++;
      return 'firefox';
    } else
    /* istanbul ignore next */
    {
      cov_2mm4eitwes().b[57][1]++;
    }
    cov_2mm4eitwes().s[185]++;
    if (userAgent.includes('Safari')) {
      /* istanbul ignore next */
      cov_2mm4eitwes().b[58][0]++;
      cov_2mm4eitwes().s[186]++;
      return 'safari';
    } else
    /* istanbul ignore next */
    {
      cov_2mm4eitwes().b[58][1]++;
    }
    cov_2mm4eitwes().s[187]++;
    if (userAgent.includes('Edge')) {
      /* istanbul ignore next */
      cov_2mm4eitwes().b[59][0]++;
      cov_2mm4eitwes().s[188]++;
      return 'edge';
    } else
    /* istanbul ignore next */
    {
      cov_2mm4eitwes().b[59][1]++;
    }
    cov_2mm4eitwes().s[189]++;
    return 'other';
  }
  getUserId() {
    /* istanbul ignore next */
    cov_2mm4eitwes().f[49]++;
    cov_2mm4eitwes().s[190]++;
    // This would be retrieved from authentication context
    return undefined; // Placeholder
  }
  // ===================================
  // PUBLIC API
  // ===================================
  /**
  * Obtener métricas de performance
  */
  getPerformanceMetrics(timeRange) {
    /* istanbul ignore next */
    cov_2mm4eitwes().f[50]++;
    let data =
    /* istanbul ignore next */
    (cov_2mm4eitwes().s[191]++, this.performanceData);
    /* istanbul ignore next */
    cov_2mm4eitwes().s[192]++;
    if (timeRange) {
      /* istanbul ignore next */
      cov_2mm4eitwes().b[60][0]++;
      cov_2mm4eitwes().s[193]++;
      data = data.filter(m => {
        /* istanbul ignore next */
        cov_2mm4eitwes().f[51]++;
        cov_2mm4eitwes().s[194]++;
        return /* istanbul ignore next */(cov_2mm4eitwes().b[61][0]++, m.timestamp >= timeRange.start) &&
        /* istanbul ignore next */
        (cov_2mm4eitwes().b[61][1]++, m.timestamp <= timeRange.end);
      });
    } else
    /* istanbul ignore next */
    {
      cov_2mm4eitwes().b[60][1]++;
    }
    cov_2mm4eitwes().s[195]++;
    return data;
  }
  /**
  * Obtener alertas activas
  */
  getActiveAlerts() {
    /* istanbul ignore next */
    cov_2mm4eitwes().f[52]++;
    cov_2mm4eitwes().s[196]++;
    return Array.from(this.activeAlerts.values()).filter(alert => {
      /* istanbul ignore next */
      cov_2mm4eitwes().f[53]++;
      cov_2mm4eitwes().s[197]++;
      return !alert.resolvedAt;
    }).sort((a, b) => {
      /* istanbul ignore next */
      cov_2mm4eitwes().f[54]++;
      cov_2mm4eitwes().s[198]++;
      return b.timestamp.getTime() - a.timestamp.getTime();
    });
  }
  /**
  * Reconocer alerta
  */
  acknowledgeAlert(alertId) {
    /* istanbul ignore next */
    cov_2mm4eitwes().f[55]++;
    const alert =
    /* istanbul ignore next */
    (cov_2mm4eitwes().s[199]++, this.activeAlerts.get(alertId));
    /* istanbul ignore next */
    cov_2mm4eitwes().s[200]++;
    if (alert) {
      /* istanbul ignore next */
      cov_2mm4eitwes().b[62][0]++;
      cov_2mm4eitwes().s[201]++;
      alert.acknowledged = true;
      /* istanbul ignore next */
      cov_2mm4eitwes().s[202]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_2mm4eitwes().b[62][1]++;
    }
    cov_2mm4eitwes().s[203]++;
    return false;
  }
  /**
  * Resolver alerta
  */
  resolveAlert(alertId) {
    /* istanbul ignore next */
    cov_2mm4eitwes().f[56]++;
    const alert =
    /* istanbul ignore next */
    (cov_2mm4eitwes().s[204]++, this.activeAlerts.get(alertId));
    /* istanbul ignore next */
    cov_2mm4eitwes().s[205]++;
    if (alert) {
      /* istanbul ignore next */
      cov_2mm4eitwes().b[63][0]++;
      cov_2mm4eitwes().s[206]++;
      alert.resolvedAt = new Date();
      /* istanbul ignore next */
      cov_2mm4eitwes().s[207]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_2mm4eitwes().b[63][1]++;
    }
    cov_2mm4eitwes().s[208]++;
    return false;
  }
  /**
  * Obtener resumen de monitoreo
  */
  getMonitoringSummary() {
    /* istanbul ignore next */
    cov_2mm4eitwes().f[57]++;
    const now =
    /* istanbul ignore next */
    (cov_2mm4eitwes().s[209]++, new Date());
    const oneHourAgo =
    /* istanbul ignore next */
    (cov_2mm4eitwes().s[210]++, new Date(now.getTime() - 60 * 60 * 1000));
    const recentErrors =
    /* istanbul ignore next */
    (cov_2mm4eitwes().s[211]++, this.getErrors({
      timeRange: {
        start: oneHourAgo,
        end: now
      }
    }));
    const recentMetrics =
    /* istanbul ignore next */
    (cov_2mm4eitwes().s[212]++, this.getPerformanceMetrics({
      start: oneHourAgo,
      end: now
    }));
    const activeAlerts =
    /* istanbul ignore next */
    (cov_2mm4eitwes().s[213]++, this.getActiveAlerts());
    /* istanbul ignore next */
    cov_2mm4eitwes().s[214]++;
    return {
      errors: {
        total: recentErrors.length,
        critical: recentErrors.filter(e => {
          /* istanbul ignore next */
          cov_2mm4eitwes().f[58]++;
          cov_2mm4eitwes().s[215]++;
          return e.level === 'critical';
        }).length,
        warning: recentErrors.filter(e => {
          /* istanbul ignore next */
          cov_2mm4eitwes().f[59]++;
          cov_2mm4eitwes().s[216]++;
          return e.level === 'warning';
        }).length
      },
      performance: {
        averageLoadTime: recentMetrics.length > 0 ?
        /* istanbul ignore next */
        (cov_2mm4eitwes().b[64][0]++, recentMetrics.reduce((sum, m) => {
          /* istanbul ignore next */
          cov_2mm4eitwes().f[60]++;
          cov_2mm4eitwes().s[217]++;
          return sum + m.metrics.loadTime;
        }, 0) / recentMetrics.length) :
        /* istanbul ignore next */
        (cov_2mm4eitwes().b[64][1]++, 0),
        averageMemoryUsage: recentMetrics.length > 0 ?
        /* istanbul ignore next */
        (cov_2mm4eitwes().b[65][0]++, recentMetrics.reduce((sum, m) => {
          /* istanbul ignore next */
          cov_2mm4eitwes().f[61]++;
          cov_2mm4eitwes().s[218]++;
          return sum + m.metrics.memoryUsage;
        }, 0) / recentMetrics.length) :
        /* istanbul ignore next */
        (cov_2mm4eitwes().b[65][1]++, 0)
      },
      alerts: {
        active: activeAlerts.length,
        critical: activeAlerts.filter(a => {
          /* istanbul ignore next */
          cov_2mm4eitwes().f[62]++;
          cov_2mm4eitwes().s[219]++;
          return a.severity === 'critical';
        }).length,
        unacknowledged: activeAlerts.filter(a => {
          /* istanbul ignore next */
          cov_2mm4eitwes().f[63]++;
          cov_2mm4eitwes().s[220]++;
          return !a.acknowledged;
        }).length
      },
      system: {
        uptime: this.getSessionDuration(),
        sessionId: this.sessionId
      }
    };
  }
}
const _default =
/* istanbul ignore next */
(cov_2mm4eitwes().s[221]++, EnterpriseMonitoringManager);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,