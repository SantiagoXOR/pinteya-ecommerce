{"version":3,"names":["DynamicSEOManager","cov_1n9f5ljqy6","f","s","EnhancedDynamicSEOManager","SEO_TEMPLATES","SITE_CONFIG","dynamicSEOManager","enhancedDynamicSEOManager","DEFAULT_SEO_CONFIG","defaultLanguage","supportedLanguages","baseUrl","b","process","env","NEXT_PUBLIC_APP_URL","siteName","defaultImage","twitterHandle","enableAutoGeneration","enableAnalytics","cacheEnabled","cacheTTL","DEFAULT_TEMPLATES","id","name","type","titleTemplate","descriptionTemplate","keywordsTemplate","robotsDirective","priority","isActive","variables","constructor","config","templates","Map","cache","forEach","template","set","initializeRedis","_logger","logger","info","LogLevel","INFO","templatesCount","size","LogCategory","SEO","getInstance","instance","redis","_redis","getRedisClient","error","warn","WARN","addTemplate","templateId","updateTemplate","updates","get","updatedTemplate","clearCacheByType","changes","Object","keys","getTemplatesByType","Array","from","values","filter","sort","a","generateMetadata","data","options","cacheKey","generateCacheKey","cached","getCachedMetadata","selectTemplate","Error","metadata","processTemplate","setCachedMetadata","titleLength","title","length","descriptionLength","description","ERROR","generateFallbackMetadata","customTemplate","candidates","evaluateConditions","conditions","every","condition","value","getNestedValue","field","operator","String","includes","startsWith","endsWith","Number","language","processedData","enrichData","processTemplateString","keywords","map","keyword","Boolean","canonical","generateCanonicalUrl","structuredData","generateStructuredData","optimizeTitle","optimizeDescription","optimizeKeywords","ogImage","image","ogType","getOGType","twitterCard","undefined","noindex","nofollow","replace","match","key","currentDate","Date","toISOString","split","currentYear","getFullYear","obj","path","reduce","current","truncated","substring","lastSpace","lastIndexOf","unique","Set","slice","slug","langPrefix","generateProductStructuredData","generateCategoryStructuredData","generateArticleStructuredData","generateWebsiteStructuredData","productName","productDescription","brand","offers","price","productPrice","priceCurrency","availability","stock","seller","categoryName","categoryDescription","url","headline","author","publisher","logo","datePublished","publishedAt","createdAt","dateModified","updatedAt","potentialAction","target","keyData","JSON","stringify","parse","memoryCached","isExpired","now","timestamp","delete","setex","keysToDelete","clearedKeys","clearCache","clear","analyzeSEO","issues","recommendations","push","category","message","impact","fix","totalIssues","criticalIssues","i","mediumIssues","score","Math","max","metrics","keywordDensity","readabilityScore","imageOptimization","updateConfig","getConfig","getStats","activeTemplatesByType","t","acc","cacheSize","destroy","locale","currency","themeColor","product","_dynamicseotext","generateProductSEOText","toLowerCase","subcategory","productCount","page","generateProductMetadata","console","images","alternates","openGraph","width","height","alt","twitter","card","robots","index","follow","googleBot","other","toString","generateCategoryMetadata","generatePageMetadata","maxLength","lastPeriod","cutPoint","generateSlug","text","normalize","extractKeywords","maxKeywords","stopWords","words","word","has","wordCount","entries","validateSEOConfig","errors","isValid"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\seo\\dynamic-seo-manager.ts"],"sourcesContent":["// ===================================\r\n// PINTEYA E-COMMERCE - DYNAMIC SEO MANAGER - ENHANCED\r\n// Sistema de gestión dinámica de SEO para productos, categorías y páginas\r\n// Versión mejorada con templates, cache y análisis automático\r\n// ===================================\r\n\r\nimport type { Metadata } from 'next';\r\nimport { generateProductSEOText, generateCategorySEOText } from './dynamic-seo-text';\r\nimport { logger, LogCategory, LogLevel } from '@/lib/enterprise/logger';\r\nimport { getRedisClient } from '@/lib/integrations/redis';\r\n\r\n// ===================================\r\n// INTERFACES Y TIPOS MEJORADOS\r\n// ===================================\r\n\r\n// Configuración SEO mejorada\r\nexport interface SEOConfig {\r\n  title: string;\r\n  description: string;\r\n  keywords: string[];\r\n  canonical?: string;\r\n  noindex?: boolean;\r\n  nofollow?: boolean;\r\n  ogImage?: string;\r\n  ogType?: string;\r\n  twitterCard?: 'summary' | 'summary_large_image' | 'app' | 'player';\r\n  structuredData?: object[];\r\n}\r\n\r\n// Template SEO para generación dinámica\r\nexport interface SEOTemplate {\r\n  id: string;\r\n  name: string;\r\n  type: 'product' | 'category' | 'page' | 'blog' | 'custom';\r\n  titleTemplate: string;\r\n  descriptionTemplate: string;\r\n  keywordsTemplate: string[];\r\n  robotsDirective?: string;\r\n  priority: number;\r\n  isActive: boolean;\r\n  variables: string[];\r\n  conditions?: SEOCondition[];\r\n}\r\n\r\n// Condiciones para aplicar templates\r\nexport interface SEOCondition {\r\n  field: string;\r\n  operator: 'equals' | 'contains' | 'startsWith' | 'endsWith' | 'greaterThan' | 'lessThan';\r\n  value: any;\r\n}\r\n\r\n// Análisis SEO\r\nexport interface SEOAnalysis {\r\n  score: number;\r\n  issues: SEOIssue[];\r\n  recommendations: SEORecommendation[];\r\n  metrics: {\r\n    titleLength: number;\r\n    descriptionLength: number;\r\n    keywordDensity: number;\r\n    readabilityScore: number;\r\n    imageOptimization: number;\r\n  };\r\n}\r\n\r\n// Problemas SEO detectados\r\nexport interface SEOIssue {\r\n  type: 'error' | 'warning' | 'info';\r\n  category: 'title' | 'description' | 'keywords' | 'images' | 'structure' | 'performance';\r\n  message: string;\r\n  impact: 'high' | 'medium' | 'low';\r\n  fix?: string;\r\n}\r\n\r\n// Recomendaciones SEO\r\nexport interface SEORecommendation {\r\n  category: string;\r\n  message: string;\r\n  priority: 'high' | 'medium' | 'low';\r\n  implementation: string;\r\n}\r\n\r\n// Configuración global del sistema SEO\r\nexport interface DynamicSEOConfig {\r\n  defaultLanguage: string;\r\n  supportedLanguages: string[];\r\n  baseUrl: string;\r\n  siteName: string;\r\n  defaultImage: string;\r\n  twitterHandle: string;\r\n  facebookAppId?: string;\r\n  enableAutoGeneration: boolean;\r\n  enableAnalytics: boolean;\r\n  cacheEnabled: boolean;\r\n  cacheTTL: number;\r\n}\r\n\r\n// ===================================\r\n// CONFIGURACIÓN POR DEFECTO\r\n// ===================================\r\n\r\nconst DEFAULT_SEO_CONFIG: DynamicSEOConfig = {\r\n  defaultLanguage: 'es',\r\n  supportedLanguages: ['es', 'en'],\r\n  baseUrl: process.env.NEXT_PUBLIC_APP_URL || 'https://pinteya.com',\r\n  siteName: 'Pinteya E-commerce',\r\n  defaultImage: '/images/og-default.jpg',\r\n  twitterHandle: '@pinteya',\r\n  enableAutoGeneration: true,\r\n  enableAnalytics: true,\r\n  cacheEnabled: true,\r\n  cacheTTL: 3600 // 1 hora\r\n};\r\n\r\nconst DEFAULT_TEMPLATES: SEOTemplate[] = [\r\n  {\r\n    id: 'product-default',\r\n    name: 'Producto por Defecto',\r\n    type: 'product',\r\n    titleTemplate: '{productName} - {categoryName} | {siteName}',\r\n    descriptionTemplate: 'Compra {productName} en {siteName}. {productDescription} Precio: ${productPrice}. Envío gratis.',\r\n    keywordsTemplate: ['{productName}', '{categoryName}', 'comprar', 'precio', '{siteName}'],\r\n    robotsDirective: 'index,follow',\r\n    priority: 1,\r\n    isActive: true,\r\n    variables: ['productName', 'categoryName', 'productDescription', 'productPrice', 'siteName']\r\n  },\r\n  {\r\n    id: 'category-default',\r\n    name: 'Categoría por Defecto',\r\n    type: 'category',\r\n    titleTemplate: '{categoryName} - Productos de Calidad | {siteName}',\r\n    descriptionTemplate: 'Descubre nuestra selección de {categoryName} en {siteName}. {productCount} productos disponibles con envío gratis.',\r\n    keywordsTemplate: ['{categoryName}', 'productos', 'comprar', '{siteName}'],\r\n    robotsDirective: 'index,follow',\r\n    priority: 1,\r\n    isActive: true,\r\n    variables: ['categoryName', 'productCount', 'siteName']\r\n  },\r\n  {\r\n    id: 'page-default',\r\n    name: 'Página por Defecto',\r\n    type: 'page',\r\n    titleTemplate: '{pageTitle} | {siteName}',\r\n    descriptionTemplate: '{pageDescription}',\r\n    keywordsTemplate: ['{pageKeywords}'],\r\n    robotsDirective: 'index,follow',\r\n    priority: 1,\r\n    isActive: true,\r\n    variables: ['pageTitle', 'pageDescription', 'pageKeywords', 'siteName']\r\n  }\r\n];\r\n\r\nexport interface ProductSEOData {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  price: number;\r\n  currency: string;\r\n  brand: string;\r\n  category: string;\r\n  subcategory?: string;\r\n  images: string[];\r\n  availability: 'InStock' | 'OutOfStock' | 'PreOrder';\r\n  condition: 'NewCondition' | 'UsedCondition' | 'RefurbishedCondition';\r\n  sku?: string;\r\n  gtin?: string;\r\n  mpn?: string;\r\n  slug: string;\r\n}\r\n\r\nexport interface CategorySEOData {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  slug: string;\r\n  parentCategory?: string;\r\n  productCount: number;\r\n  image?: string;\r\n  subcategories?: string[];\r\n}\r\n\r\nexport interface PageSEOData {\r\n  path: string;\r\n  title: string;\r\n  description: string;\r\n  type: 'page' | 'article' | 'product' | 'category' | 'checkout' | 'profile';\r\n  lastModified?: Date;\r\n  priority?: number;\r\n  changeFreq?: 'always' | 'hourly' | 'daily' | 'weekly' | 'monthly' | 'yearly' | 'never';\r\n}\r\n\r\n// ===================================\r\n// ENHANCED DYNAMIC SEO MANAGER CLASS\r\n// ===================================\r\n\r\nexport class EnhancedDynamicSEOManager {\r\n  private static instance: EnhancedDynamicSEOManager;\r\n  private config: DynamicSEOConfig;\r\n  private templates: Map<string, SEOTemplate>;\r\n  private cache: Map<string, { metadata: SEOConfig; timestamp: number }>;\r\n  private redis: any;\r\n\r\n  private constructor(config?: Partial<DynamicSEOConfig>) {\r\n    this.config = { ...DEFAULT_SEO_CONFIG, ...config };\r\n    this.templates = new Map();\r\n    this.cache = new Map();\r\n\r\n    // Cargar templates por defecto\r\n    DEFAULT_TEMPLATES.forEach(template => {\r\n      this.templates.set(template.id, template);\r\n    });\r\n\r\n    // Inicializar Redis si está disponible\r\n    this.initializeRedis();\r\n\r\n    logger.info(LogLevel.INFO, 'Enhanced Dynamic SEO Manager initialized', {\r\n      templatesCount: this.templates.size,\r\n      cacheEnabled: this.config.cacheEnabled\r\n    }, LogCategory.SEO);\r\n  }\r\n\r\n  public static getInstance(config?: Partial<DynamicSEOConfig>): EnhancedDynamicSEOManager {\r\n    if (!EnhancedDynamicSEOManager.instance) {\r\n      EnhancedDynamicSEOManager.instance = new EnhancedDynamicSEOManager(config);\r\n    }\r\n    return EnhancedDynamicSEOManager.instance;\r\n  }\r\n\r\n  private async initializeRedis(): Promise<void> {\r\n    try {\r\n      this.redis = await getRedisClient();\r\n      logger.info(LogLevel.INFO, 'Redis initialized for SEO caching', {}, LogCategory.SEO);\r\n    } catch (error) {\r\n      logger.warn(LogLevel.WARN, 'Redis not available, using memory cache only', {}, LogCategory.SEO);\r\n    }\r\n  }\r\n\r\n  // ===================================\r\n  // GESTIÓN DE TEMPLATES\r\n  // ===================================\r\n\r\n  public addTemplate(template: SEOTemplate): void {\r\n    this.templates.set(template.id, template);\r\n\r\n    logger.info(LogLevel.INFO, 'SEO template added', {\r\n      templateId: template.id,\r\n      type: template.type,\r\n      priority: template.priority\r\n    }, LogCategory.SEO);\r\n  }\r\n\r\n  public updateTemplate(templateId: string, updates: Partial<SEOTemplate>): boolean {\r\n    const template = this.templates.get(templateId);\r\n    if (!template) {\r\n      logger.warn(LogLevel.WARN, 'SEO template not found for update', {\r\n        templateId\r\n      }, LogCategory.SEO);\r\n      return false;\r\n    }\r\n\r\n    const updatedTemplate = { ...template, ...updates };\r\n    this.templates.set(templateId, updatedTemplate);\r\n\r\n    // Limpiar cache relacionado\r\n    this.clearCacheByType(template.type);\r\n\r\n    logger.info(LogLevel.INFO, 'SEO template updated', {\r\n      templateId,\r\n      changes: Object.keys(updates)\r\n    }, LogCategory.SEO);\r\n\r\n    return true;\r\n  }\r\n\r\n  public getTemplatesByType(type: SEOTemplate['type']): SEOTemplate[] {\r\n    return Array.from(this.templates.values())\r\n      .filter(template => template.type === type && template.isActive)\r\n      .sort((a, b) => b.priority - a.priority);\r\n  }\r\n\r\n  // ===================================\r\n  // GENERACIÓN DE METADATA MEJORADA\r\n  // ===================================\r\n\r\n  public async generateMetadata(\r\n    type: SEOTemplate['type'],\r\n    data: Record<string, any>,\r\n    options?: {\r\n      templateId?: string;\r\n      language?: string;\r\n      customTemplate?: Partial<SEOTemplate>;\r\n    }\r\n  ): Promise<SEOConfig> {\r\n    const cacheKey = this.generateCacheKey(type, data, options);\r\n\r\n    // Verificar cache\r\n    if (this.config.cacheEnabled) {\r\n      const cached = await this.getCachedMetadata(cacheKey);\r\n      if (cached) {\r\n        return cached;\r\n      }\r\n    }\r\n\r\n    try {\r\n      // Seleccionar template\r\n      const template = this.selectTemplate(type, data, options);\r\n\r\n      if (!template) {\r\n        throw new Error(`No template found for type: ${type}`);\r\n      }\r\n\r\n      // Generar metadata\r\n      const metadata = await this.processTemplate(template, data, options);\r\n\r\n      // Cachear resultado\r\n      if (this.config.cacheEnabled) {\r\n        await this.setCachedMetadata(cacheKey, metadata);\r\n      }\r\n\r\n      logger.info(LogLevel.INFO, 'SEO metadata generated', {\r\n        type,\r\n        templateId: template.id,\r\n        cacheKey,\r\n        titleLength: metadata.title.length,\r\n        descriptionLength: metadata.description.length\r\n      }, LogCategory.SEO);\r\n\r\n      return metadata;\r\n\r\n    } catch (error) {\r\n      logger.error(LogLevel.ERROR, 'Failed to generate SEO metadata', error as Error, LogCategory.SEO);\r\n\r\n      // Fallback a metadata básica\r\n      return this.generateFallbackMetadata(type, data);\r\n    }\r\n  }\r\n\r\n  private selectTemplate(\r\n    type: SEOTemplate['type'],\r\n    data: Record<string, any>,\r\n    options?: { templateId?: string; customTemplate?: Partial<SEOTemplate> }\r\n  ): SEOTemplate | null {\r\n    // Template personalizado\r\n    if (options?.customTemplate) {\r\n      return {\r\n        id: 'custom',\r\n        name: 'Custom Template',\r\n        type,\r\n        priority: 999,\r\n        isActive: true,\r\n        variables: [],\r\n        titleTemplate: '',\r\n        descriptionTemplate: '',\r\n        keywordsTemplate: [],\r\n        ...options.customTemplate\r\n      } as SEOTemplate;\r\n    }\r\n\r\n    // Template específico\r\n    if (options?.templateId) {\r\n      const template = this.templates.get(options.templateId);\r\n      if (template && template.isActive) {\r\n        return template;\r\n      }\r\n    }\r\n\r\n    // Buscar template por tipo y condiciones\r\n    const candidates = this.getTemplatesByType(type);\r\n\r\n    for (const template of candidates) {\r\n      if (this.evaluateConditions(template, data)) {\r\n        return template;\r\n      }\r\n    }\r\n\r\n    return candidates[0] || null;\r\n  }\r\n\r\n  private evaluateConditions(template: SEOTemplate, data: Record<string, any>): boolean {\r\n    if (!template.conditions || template.conditions.length === 0) {\r\n      return true;\r\n    }\r\n\r\n    return template.conditions.every(condition => {\r\n      const value = this.getNestedValue(data, condition.field);\r\n\r\n      switch (condition.operator) {\r\n        case 'equals':\r\n          return value === condition.value;\r\n        case 'contains':\r\n          return String(value).includes(String(condition.value));\r\n        case 'startsWith':\r\n          return String(value).startsWith(String(condition.value));\r\n        case 'endsWith':\r\n          return String(value).endsWith(String(condition.value));\r\n        case 'greaterThan':\r\n          return Number(value) > Number(condition.value);\r\n        case 'lessThan':\r\n          return Number(value) < Number(condition.value);\r\n        default:\r\n          return true;\r\n      }\r\n    });\r\n  }\r\n\r\n  private async processTemplate(\r\n    template: SEOTemplate,\r\n    data: Record<string, any>,\r\n    options?: { language?: string }\r\n  ): Promise<SEOConfig> {\r\n    const language = options?.language || this.config.defaultLanguage;\r\n    const processedData = this.enrichData(data, language);\r\n\r\n    // Procesar title\r\n    const title = this.processTemplateString(template.titleTemplate, processedData);\r\n\r\n    // Procesar description\r\n    const description = this.processTemplateString(template.descriptionTemplate, processedData);\r\n\r\n    // Procesar keywords\r\n    const keywords = template.keywordsTemplate.map(keyword =>\r\n      this.processTemplateString(keyword, processedData)\r\n    ).filter(Boolean);\r\n\r\n    // Generar URL canónica\r\n    const canonical = this.generateCanonicalUrl(data, language);\r\n\r\n    // Generar structured data\r\n    const structuredData = await this.generateStructuredData(template.type, processedData);\r\n\r\n    return {\r\n      title: this.optimizeTitle(title),\r\n      description: this.optimizeDescription(description),\r\n      keywords: this.optimizeKeywords(keywords),\r\n      canonical,\r\n      ogImage: data.image || this.config.defaultImage,\r\n      ogType: this.getOGType(template.type),\r\n      twitterCard: 'summary_large_image',\r\n      structuredData: structuredData ? [structuredData] : undefined,\r\n      noindex: template.robotsDirective?.includes('noindex') || false,\r\n      nofollow: template.robotsDirective?.includes('nofollow') || false\r\n    };\r\n  }\r\n\r\n  private processTemplateString(template: string, data: Record<string, any>): string {\r\n    return template.replace(/\\{([^}]+)\\}/g, (match, key) => {\r\n      const value = this.getNestedValue(data, key);\r\n      return value !== undefined ? String(value) : match;\r\n    });\r\n  }\r\n\r\n  private enrichData(data: Record<string, any>, language: string): Record<string, any> {\r\n    return {\r\n      ...data,\r\n      siteName: this.config.siteName,\r\n      baseUrl: this.config.baseUrl,\r\n      language,\r\n      currentDate: new Date().toISOString().split('T')[0],\r\n      currentYear: new Date().getFullYear()\r\n    };\r\n  }\r\n\r\n  private getNestedValue(obj: Record<string, any>, path: string): any {\r\n    return path.split('.').reduce((current, key) => current?.[key], obj);\r\n  }\r\n\r\n  // ===================================\r\n  // OPTIMIZACIÓN DE METADATA\r\n  // ===================================\r\n\r\n  private optimizeTitle(title: string): string {\r\n    // Límite recomendado: 60 caracteres\r\n    if (title.length <= 60) {\r\n      return title;\r\n    }\r\n\r\n    // Truncar en palabra completa\r\n    const truncated = title.substring(0, 57);\r\n    const lastSpace = truncated.lastIndexOf(' ');\r\n\r\n    return lastSpace > 40 ? truncated.substring(0, lastSpace) + '...' : truncated + '...';\r\n  }\r\n\r\n  private optimizeDescription(description: string): string {\r\n    // Límite recomendado: 160 caracteres\r\n    if (description.length <= 160) {\r\n      return description;\r\n    }\r\n\r\n    // Truncar en palabra completa\r\n    const truncated = description.substring(0, 157);\r\n    const lastSpace = truncated.lastIndexOf(' ');\r\n\r\n    return lastSpace > 140 ? truncated.substring(0, lastSpace) + '...' : truncated + '...';\r\n  }\r\n\r\n  private optimizeKeywords(keywords: string[]): string[] {\r\n    // Filtrar keywords vacías y duplicadas\r\n    const unique = [...new Set(keywords.filter(Boolean))];\r\n\r\n    // Límite recomendado: 10 keywords\r\n    return unique.slice(0, 10);\r\n  }\r\n\r\n  // ===================================\r\n  // UTILIDADES\r\n  // ===================================\r\n\r\n  private generateCanonicalUrl(data: Record<string, any>, language: string): string {\r\n    const baseUrl = this.config.baseUrl;\r\n    const path = data.path || data.slug || '';\r\n    const langPrefix = language !== this.config.defaultLanguage ? `/${language}` : '';\r\n\r\n    return `${baseUrl}${langPrefix}${path}`;\r\n  }\r\n\r\n  private getOGType(type: SEOTemplate['type']): string {\r\n    switch (type) {\r\n      case 'product':\r\n        return 'product';\r\n      case 'blog':\r\n        return 'article';\r\n      default:\r\n        return 'website';\r\n    }\r\n  }\r\n\r\n  private async generateStructuredData(type: SEOTemplate['type'], data: Record<string, any>): Promise<any> {\r\n    switch (type) {\r\n      case 'product':\r\n        return this.generateProductStructuredData(data);\r\n      case 'category':\r\n        return this.generateCategoryStructuredData(data);\r\n      case 'blog':\r\n        return this.generateArticleStructuredData(data);\r\n      default:\r\n        return this.generateWebsiteStructuredData(data);\r\n    }\r\n  }\r\n\r\n  private generateProductStructuredData(data: Record<string, any>): any {\r\n    return {\r\n      '@context': 'https://schema.org',\r\n      '@type': 'Product',\r\n      name: data.productName || data.name,\r\n      description: data.productDescription || data.description,\r\n      image: data.image || this.config.defaultImage,\r\n      brand: {\r\n        '@type': 'Brand',\r\n        name: this.config.siteName\r\n      },\r\n      offers: {\r\n        '@type': 'Offer',\r\n        price: data.productPrice || data.price,\r\n        priceCurrency: 'ARS',\r\n        availability: data.stock > 0 ? 'https://schema.org/InStock' : 'https://schema.org/OutOfStock',\r\n        seller: {\r\n          '@type': 'Organization',\r\n          name: this.config.siteName\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  private generateCategoryStructuredData(data: Record<string, any>): any {\r\n    return {\r\n      '@context': 'https://schema.org',\r\n      '@type': 'CollectionPage',\r\n      name: data.categoryName || data.name,\r\n      description: data.categoryDescription || data.description,\r\n      url: this.generateCanonicalUrl(data, this.config.defaultLanguage)\r\n    };\r\n  }\r\n\r\n  private generateArticleStructuredData(data: Record<string, any>): any {\r\n    return {\r\n      '@context': 'https://schema.org',\r\n      '@type': 'Article',\r\n      headline: data.title,\r\n      description: data.description,\r\n      image: data.image || this.config.defaultImage,\r\n      author: {\r\n        '@type': 'Person',\r\n        name: data.author || this.config.siteName\r\n      },\r\n      publisher: {\r\n        '@type': 'Organization',\r\n        name: this.config.siteName,\r\n        logo: {\r\n          '@type': 'ImageObject',\r\n          url: `${this.config.baseUrl}/logo.png`\r\n        }\r\n      },\r\n      datePublished: data.publishedAt || data.createdAt,\r\n      dateModified: data.updatedAt || data.publishedAt || data.createdAt\r\n    };\r\n  }\r\n\r\n  private generateWebsiteStructuredData(data: Record<string, any>): any {\r\n    return {\r\n      '@context': 'https://schema.org',\r\n      '@type': 'WebSite',\r\n      name: this.config.siteName,\r\n      url: this.config.baseUrl,\r\n      potentialAction: {\r\n        '@type': 'SearchAction',\r\n        target: `${this.config.baseUrl}/search?q={search_term_string}`,\r\n        'query-input': 'required name=search_term_string'\r\n      }\r\n    };\r\n  }\r\n\r\n  private generateFallbackMetadata(type: SEOTemplate['type'], data: Record<string, any>): SEOConfig {\r\n    const title = data.title || data.name || `${this.config.siteName}`;\r\n    const description = data.description || `Descubre productos de calidad en ${this.config.siteName}`;\r\n\r\n    return {\r\n      title: this.optimizeTitle(title),\r\n      description: this.optimizeDescription(description),\r\n      keywords: ['ecommerce', 'productos', 'comprar'],\r\n      canonical: this.generateCanonicalUrl(data, this.config.defaultLanguage),\r\n      ogImage: this.config.defaultImage,\r\n      ogType: 'website',\r\n      twitterCard: 'summary_large_image',\r\n      noindex: false,\r\n      nofollow: false\r\n    };\r\n  }\r\n\r\n  // ===================================\r\n  // GESTIÓN DE CACHE\r\n  // ===================================\r\n\r\n  private generateCacheKey(\r\n    type: SEOTemplate['type'],\r\n    data: Record<string, any>,\r\n    options?: any\r\n  ): string {\r\n    const keyData = {\r\n      type,\r\n      id: data.id || data.slug,\r\n      templateId: options?.templateId,\r\n      language: options?.language || this.config.defaultLanguage\r\n    };\r\n\r\n    return `seo:${JSON.stringify(keyData)}`;\r\n  }\r\n\r\n  private async getCachedMetadata(cacheKey: string): Promise<SEOConfig | null> {\r\n    try {\r\n      // Intentar Redis primero\r\n      if (this.redis) {\r\n        const cached = await this.redis.get(cacheKey);\r\n        if (cached) {\r\n          return JSON.parse(cached);\r\n        }\r\n      }\r\n\r\n      // Fallback a cache en memoria\r\n      const memoryCached = this.cache.get(cacheKey);\r\n      if (memoryCached) {\r\n        const isExpired = Date.now() - memoryCached.timestamp > this.config.cacheTTL * 1000;\r\n        if (!isExpired) {\r\n          return memoryCached.metadata;\r\n        } else {\r\n          this.cache.delete(cacheKey);\r\n        }\r\n      }\r\n\r\n      return null;\r\n    } catch (error) {\r\n      logger.warn(LogLevel.WARN, 'Failed to get cached SEO metadata', { cacheKey }, LogCategory.SEO);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  private async setCachedMetadata(cacheKey: string, metadata: SEOConfig): Promise<void> {\r\n    try {\r\n      // Cachear en Redis si está disponible\r\n      if (this.redis) {\r\n        await this.redis.setex(cacheKey, this.config.cacheTTL, JSON.stringify(metadata));\r\n      }\r\n\r\n      // Cachear en memoria como backup\r\n      this.cache.set(cacheKey, {\r\n        metadata,\r\n        timestamp: Date.now()\r\n      });\r\n    } catch (error) {\r\n      logger.warn(LogLevel.WARN, 'Failed to cache SEO metadata', { cacheKey }, LogCategory.SEO);\r\n    }\r\n  }\r\n\r\n  private clearCacheByType(type: SEOTemplate['type']): void {\r\n    const keysToDelete = Array.from(this.cache.keys())\r\n      .filter(key => key.includes(`\"type\":\"${type}\"`));\r\n\r\n    keysToDelete.forEach(key => this.cache.delete(key));\r\n\r\n    logger.info(LogLevel.INFO, 'SEO cache cleared by type', {\r\n      type,\r\n      clearedKeys: keysToDelete.length\r\n    }, LogCategory.SEO);\r\n  }\r\n\r\n  public clearCache(): void {\r\n    this.cache.clear();\r\n    logger.info(LogLevel.INFO, 'SEO cache cleared completely', {}, LogCategory.SEO);\r\n  }\r\n\r\n  // ===================================\r\n  // ANÁLISIS SEO\r\n  // ===================================\r\n\r\n  public analyzeSEO(metadata: SEOConfig): SEOAnalysis {\r\n    const issues: SEOIssue[] = [];\r\n    const recommendations: SEORecommendation[] = [];\r\n\r\n    // Analizar título\r\n    if (!metadata.title) {\r\n      issues.push({\r\n        type: 'error',\r\n        category: 'title',\r\n        message: 'El título es requerido',\r\n        impact: 'high',\r\n        fix: 'Agregar un título descriptivo'\r\n      });\r\n    } else if (metadata.title.length > 60) {\r\n      issues.push({\r\n        type: 'warning',\r\n        category: 'title',\r\n        message: 'El título es demasiado largo (>60 caracteres)',\r\n        impact: 'medium',\r\n        fix: 'Reducir la longitud del título'\r\n      });\r\n    } else if (metadata.title.length < 30) {\r\n      issues.push({\r\n        type: 'warning',\r\n        category: 'title',\r\n        message: 'El título es demasiado corto (<30 caracteres)',\r\n        impact: 'medium',\r\n        fix: 'Expandir el título con más información relevante'\r\n      });\r\n    }\r\n\r\n    // Analizar descripción\r\n    if (!metadata.description) {\r\n      issues.push({\r\n        type: 'error',\r\n        category: 'description',\r\n        message: 'La descripción es requerida',\r\n        impact: 'high',\r\n        fix: 'Agregar una descripción informativa'\r\n      });\r\n    } else if (metadata.description.length > 160) {\r\n      issues.push({\r\n        type: 'warning',\r\n        category: 'description',\r\n        message: 'La descripción es demasiado larga (>160 caracteres)',\r\n        impact: 'medium',\r\n        fix: 'Reducir la longitud de la descripción'\r\n      });\r\n    } else if (metadata.description.length < 120) {\r\n      issues.push({\r\n        type: 'info',\r\n        category: 'description',\r\n        message: 'La descripción podría ser más descriptiva',\r\n        impact: 'low',\r\n        fix: 'Expandir la descripción con más detalles'\r\n      });\r\n    }\r\n\r\n    // Analizar keywords\r\n    if (!metadata.keywords || metadata.keywords.length === 0) {\r\n      issues.push({\r\n        type: 'warning',\r\n        category: 'keywords',\r\n        message: 'No hay palabras clave definidas',\r\n        impact: 'medium',\r\n        fix: 'Agregar palabras clave relevantes'\r\n      });\r\n    } else if (metadata.keywords.length > 10) {\r\n      issues.push({\r\n        type: 'warning',\r\n        category: 'keywords',\r\n        message: 'Demasiadas palabras clave (>10)',\r\n        impact: 'low',\r\n        fix: 'Reducir a las palabras clave más importantes'\r\n      });\r\n    }\r\n\r\n    // Calcular score\r\n    const totalIssues = issues.length;\r\n    const criticalIssues = issues.filter(i => i.impact === 'high').length;\r\n    const mediumIssues = issues.filter(i => i.impact === 'medium').length;\r\n\r\n    let score = 100;\r\n    score -= criticalIssues * 20;\r\n    score -= mediumIssues * 10;\r\n    score -= (totalIssues - criticalIssues - mediumIssues) * 5;\r\n    score = Math.max(0, score);\r\n\r\n    return {\r\n      score,\r\n      issues,\r\n      recommendations,\r\n      metrics: {\r\n        titleLength: metadata.title?.length || 0,\r\n        descriptionLength: metadata.description?.length || 0,\r\n        keywordDensity: metadata.keywords?.length || 0,\r\n        readabilityScore: 0, // TODO: Implementar análisis de legibilidad\r\n        imageOptimization: metadata.ogImage ? 100 : 0\r\n      }\r\n    };\r\n  }\r\n\r\n  // ===================================\r\n  // CONFIGURACIÓN Y ESTADÍSTICAS\r\n  // ===================================\r\n\r\n  public updateConfig(updates: Partial<DynamicSEOConfig>): void {\r\n    this.config = { ...this.config, ...updates };\r\n\r\n    logger.info(LogLevel.INFO, 'SEO configuration updated', {\r\n      changes: Object.keys(updates)\r\n    }, LogCategory.SEO);\r\n  }\r\n\r\n  public getConfig(): DynamicSEOConfig {\r\n    return { ...this.config };\r\n  }\r\n\r\n  public getStats(): {\r\n    templatesCount: number;\r\n    cacheSize: number;\r\n    activeTemplatesByType: Record<string, number>;\r\n  } {\r\n    const activeTemplatesByType = Array.from(this.templates.values())\r\n      .filter(t => t.isActive)\r\n      .reduce((acc, template) => {\r\n        acc[template.type] = (acc[template.type] || 0) + 1;\r\n        return acc;\r\n      }, {} as Record<string, number>);\r\n\r\n    return {\r\n      templatesCount: this.templates.size,\r\n      cacheSize: this.cache.size,\r\n      activeTemplatesByType\r\n    };\r\n  }\r\n\r\n  public destroy(): void {\r\n    this.cache.clear();\r\n    this.templates.clear();\r\n    EnhancedDynamicSEOManager.instance = null as any;\r\n  }\r\n}\r\n\r\n// ===================================\r\n// INSTANCIA SINGLETON Y UTILIDADES\r\n// ===================================\r\n\r\nexport const enhancedDynamicSEOManager = EnhancedDynamicSEOManager.getInstance();\r\n\r\n// Configuración base del sitio (mantenida para compatibilidad)\r\nconst SITE_CONFIG = {\r\n  name: 'Pinteya E-commerce',\r\n  description: 'Tu pinturería online especializada en productos de pintura, ferretería y corralón',\r\n  url: 'https://pinteya-ecommerce.vercel.app',\r\n  logo: '/images/logo/LOGO POSITIVO.svg',\r\n  defaultImage: '/images/hero/hero-bg.jpg',\r\n  locale: 'es_AR',\r\n  currency: 'ARS',\r\n  themeColor: '#ea5a17',\r\n  twitterHandle: '@pinteya_ecommerce',\r\n};\r\n\r\n// Plantillas de SEO optimizadas (mantenidas para compatibilidad)\r\nconst SEO_TEMPLATES = {\r\n  product: {\r\n    title: (product: ProductSEOData) =>\r\n      `${product.name} - ${product.brand} | Pinteya E-commerce`,\r\n    description: async (product: ProductSEOData) => await generateProductSEOText(product),\r\n    keywords: (product: ProductSEOData) => [\r\n      product.name.toLowerCase(),\r\n      product.brand.toLowerCase(),\r\n      product.category.toLowerCase(),\r\n      ...(product.subcategory ? [product.subcategory.toLowerCase()] : []),\r\n      'pinturería online',\r\n      'envío gratis',\r\n      'argentina',\r\n      'comprar online'\r\n    ]\r\n  },\r\n  category: {\r\n    title: (category: CategorySEOData) =>\r\n      `${category.name} | Pinteya E-commerce - Tu Pinturería Online`,\r\n    description: (category: CategorySEOData) =>\r\n      `Descubre nuestra selección de ${category.name.toLowerCase()} en Pinteya. ${category.description} ${category.productCount} productos disponibles. Envío gratis en compras superiores a $50.000.`,\r\n    keywords: (category: CategorySEOData) => [\r\n      category.name.toLowerCase(),\r\n      'pinturería online',\r\n      'ferretería',\r\n      'corralón',\r\n      'envío gratis',\r\n      'argentina',\r\n      'productos de calidad'\r\n    ]\r\n  },\r\n  page: {\r\n    title: (page: PageSEOData) =>\r\n      `${page.title} | Pinteya E-commerce`,\r\n    description: (page: PageSEOData) =>\r\n      page.description,\r\n    keywords: () => [\r\n      'pinturería online',\r\n      'pinturas',\r\n      'ferretería',\r\n      'corralón',\r\n      'argentina'\r\n    ]\r\n  }\r\n};\r\n\r\nclass DynamicSEOManager {\r\n  private static instance: DynamicSEOManager;\r\n\r\n  static getInstance(): DynamicSEOManager {\r\n    if (!DynamicSEOManager.instance) {\r\n      DynamicSEOManager.instance = new DynamicSEOManager();\r\n    }\r\n    return DynamicSEOManager.instance;\r\n  }\r\n\r\n  // Generar metadata para productos\r\n  generateProductMetadata(product: ProductSEOData): Metadata {\r\n    const title = SEO_TEMPLATES.product.title(product);\r\n    const description = SEO_TEMPLATES.product.description(product);\r\n    const keywords = SEO_TEMPLATES.product.keywords(product);\r\n    \r\n    // Validar que product.slug existe antes de generar canonical\r\n    if (!product.slug) {\r\n      console.warn('Product slug is missing, using fallback');\r\n    }\r\n    \r\n    const canonical = product.slug ? `${SITE_CONFIG.url}/products/${product.slug}` : SITE_CONFIG.url;\r\n    const ogImage = product.images?.[0] || SITE_CONFIG.defaultImage;\r\n\r\n    return {\r\n      title,\r\n      description,\r\n      keywords,\r\n      alternates: canonical ? {\r\n        canonical,\r\n      } : undefined,\r\n      openGraph: {\r\n        title,\r\n        description,\r\n        url: canonical,\r\n        siteName: SITE_CONFIG.name,\r\n        images: [\r\n          {\r\n            url: ogImage,\r\n            width: 1200,\r\n            height: 630,\r\n            alt: product.name,\r\n          },\r\n        ],\r\n        locale: SITE_CONFIG.locale,\r\n        type: 'website',\r\n      },\r\n      twitter: {\r\n        card: 'summary_large_image',\r\n        title,\r\n        description,\r\n        images: [ogImage],\r\n      },\r\n      robots: {\r\n        index: true,\r\n        follow: true,\r\n        googleBot: {\r\n          index: true,\r\n          follow: true,\r\n          'max-video-preview': -1,\r\n          'max-image-preview': 'large',\r\n          'max-snippet': -1,\r\n        },\r\n      },\r\n      other: {\r\n        'product:price:amount': product.price.toString(),\r\n        'product:price:currency': 'ARS',\r\n        'product:availability': product.stock > 0 ? 'InStock' : 'OutOfStock',\r\n        'product:condition': 'NewCondition',\r\n        'product:brand': product.brand,\r\n        'product:category': product.category,\r\n      },\r\n    };\r\n  }\r\n\r\n  // Generar metadata para categorías\r\n  generateCategoryMetadata(category: CategorySEOData): Metadata {\r\n    const title = SEO_TEMPLATES.category.title(category);\r\n    const description = SEO_TEMPLATES.category.description(category);\r\n    const keywords = SEO_TEMPLATES.category.keywords(category);\r\n    \r\n    // Validar que category.slug existe antes de generar canonical\r\n    if (!category.slug) {\r\n      console.warn('Category slug is missing, using fallback');\r\n    }\r\n    \r\n    const canonical = category.slug ? `${SITE_CONFIG.url}/categories/${category.slug}` : SITE_CONFIG.url;\r\n    const ogImage = category.image || SITE_CONFIG.defaultImage;\r\n\r\n    return {\r\n      title,\r\n      description,\r\n      keywords,\r\n      alternates: canonical ? {\r\n        canonical,\r\n      } : undefined,\r\n      openGraph: {\r\n        title,\r\n        description,\r\n        url: canonical,\r\n        siteName: SITE_CONFIG.name,\r\n        images: [\r\n          {\r\n            url: ogImage,\r\n            width: 1200,\r\n            height: 630,\r\n            alt: `${category.name} - ${SITE_CONFIG.name}`,\r\n          },\r\n        ],\r\n        locale: SITE_CONFIG.locale,\r\n        type: 'website',\r\n      },\r\n      twitter: {\r\n        card: 'summary_large_image',\r\n        title,\r\n        description,\r\n        images: [ogImage],\r\n      },\r\n      robots: {\r\n        index: true,\r\n        follow: true,\r\n        googleBot: {\r\n          index: true,\r\n          follow: true,\r\n          'max-video-preview': -1,\r\n          'max-image-preview': 'large',\r\n          'max-snippet': -1,\r\n        },\r\n      },\r\n      other: {\r\n        'category:name': category.name,\r\n        'category:product_count': category.productCount.toString(),\r\n      },\r\n    };\r\n  }\r\n\r\n  // Generar metadata para páginas generales\r\n  generatePageMetadata(page: PageSEOData): Metadata {\r\n    const title = SEO_TEMPLATES.page.title(page);\r\n    const description = SEO_TEMPLATES.page.description(page);\r\n    const keywords = SEO_TEMPLATES.page.keywords();\r\n    \r\n    // Validar que page.path existe antes de generar canonical\r\n    if (!page.path) {\r\n      console.warn('Page path is missing, using fallback');\r\n    }\r\n    \r\n    const canonical = page.path ? `${SITE_CONFIG.url}${page.path}` : SITE_CONFIG.url;\r\n\r\n    return {\r\n      title,\r\n      description,\r\n      keywords,\r\n      alternates: canonical ? {\r\n        canonical,\r\n      } : undefined,\r\n      openGraph: {\r\n        title,\r\n        description,\r\n        url: canonical,\r\n        siteName: SITE_CONFIG.name,\r\n        images: [\r\n          {\r\n            url: SITE_CONFIG.defaultImage,\r\n            width: 1200,\r\n            height: 630,\r\n            alt: `${page.title} - ${SITE_CONFIG.name}`,\r\n          },\r\n        ],\r\n        locale: SITE_CONFIG.locale,\r\n        type: page.type === 'article' ? 'article' : 'website',\r\n      },\r\n      twitter: {\r\n        card: 'summary_large_image',\r\n        title,\r\n        description,\r\n        images: [SITE_CONFIG.defaultImage],\r\n      },\r\n      robots: {\r\n        index: page.type !== 'checkout' && page.type !== 'profile',\r\n        follow: true,\r\n        googleBot: {\r\n          index: page.type !== 'checkout' && page.type !== 'profile',\r\n          follow: true,\r\n          'max-video-preview': -1,\r\n          'max-image-preview': 'large',\r\n          'max-snippet': -1,\r\n        },\r\n      },\r\n    };\r\n  }\r\n\r\n  // Optimizar título para SEO\r\n  optimizeTitle(title: string, maxLength: number = 60): string {\r\n    if (title.length <= maxLength) {return title;}\r\n    \r\n    // Truncar en la última palabra completa\r\n    const truncated = title.slice(0, maxLength);\r\n    const lastSpace = truncated.lastIndexOf(' ');\r\n    \r\n    return lastSpace > 0 ? truncated.slice(0, lastSpace) + '...' : truncated + '...';\r\n  }\r\n\r\n  // Optimizar descripción para SEO\r\n  optimizeDescription(description: string, maxLength: number = 160): string {\r\n    if (description.length <= maxLength) {return description;}\r\n    \r\n    // Truncar en la última oración completa\r\n    const truncated = description.slice(0, maxLength);\r\n    const lastPeriod = truncated.lastIndexOf('.');\r\n    const lastSpace = truncated.lastIndexOf(' ');\r\n    \r\n    const cutPoint = lastPeriod > 0 ? lastPeriod + 1 : lastSpace;\r\n    return cutPoint > 0 ? truncated.slice(0, cutPoint) + '...' : truncated + '...';\r\n  }\r\n\r\n  // Generar slug SEO-friendly\r\n  generateSlug(text: string): string {\r\n    return text\r\n      .toLowerCase()\r\n      .normalize('NFD')\r\n      .replace(/[\\u0300-\\u036f]/g, '') // Remover acentos\r\n      .replace(/[^a-z0-9\\s-]/g, '') // Solo letras, números, espacios y guiones\r\n      .replace(/\\s+/g, '-') // Espacios a guiones\r\n      .replace(/-+/g, '-') // Múltiples guiones a uno\r\n      .replace(/^-|-$/g, ''); // Remover guiones al inicio y final\r\n  }\r\n\r\n  // Extraer keywords relevantes del texto\r\n  extractKeywords(text: string, maxKeywords: number = 10): string[] {\r\n    const stopWords = new Set([\r\n      'el', 'la', 'de', 'que', 'y', 'a', 'en', 'un', 'es', 'se', 'no', 'te', 'lo', 'le',\r\n      'da', 'su', 'por', 'son', 'con', 'para', 'al', 'del', 'los', 'las', 'una', 'como',\r\n      'pero', 'sus', 'le', 'ya', 'o', 'porque', 'cuando', 'muy', 'sin', 'sobre', 'también',\r\n      'me', 'hasta', 'donde', 'quien', 'desde', 'todos', 'durante', 'todo', 'esto', 'eso'\r\n    ]);\r\n\r\n    const words = text\r\n      .toLowerCase()\r\n      .replace(/[^\\w\\s]/g, ' ')\r\n      .split(/\\s+/)\r\n      .filter(word => word.length > 3 && !stopWords.has(word));\r\n\r\n    // Contar frecuencia de palabras\r\n    const wordCount = words.reduce((acc, word) => {\r\n      acc[word] = (acc[word] || 0) + 1;\r\n      return acc;\r\n    }, {} as Record<string, number>);\r\n\r\n    // Ordenar por frecuencia y tomar las más relevantes\r\n    return Object.entries(wordCount)\r\n      .sort(([, a], [, b]) => b - a)\r\n      .slice(0, maxKeywords)\r\n      .map(([word]) => word);\r\n  }\r\n\r\n  // Validar configuración SEO\r\n  validateSEOConfig(config: SEOConfig): { isValid: boolean; errors: string[] } {\r\n    const errors: string[] = [];\r\n\r\n    if (!config.title || config.title.length === 0) {\r\n      errors.push('El título es requerido');\r\n    } else if (config.title.length > 60) {\r\n      errors.push('El título no debe exceder 60 caracteres');\r\n    }\r\n\r\n    if (!config.description || config.description.length === 0) {\r\n      errors.push('La descripción es requerida');\r\n    } else if (config.description.length > 160) {\r\n      errors.push('La descripción no debe exceder 160 caracteres');\r\n    }\r\n\r\n    if (config.keywords && config.keywords.length === 0) {\r\n      errors.push('Se recomienda incluir al menos 3 keywords');\r\n    }\r\n\r\n    return {\r\n      isValid: errors.length === 0,\r\n      errors\r\n    };\r\n  }\r\n}\r\n\r\n// Exportar instancia singleton\r\nexport const dynamicSEOManager = DynamicSEOManager.getInstance();\r\n\r\n// Exportar tipos y utilidades\r\nexport { DynamicSEOManager, SITE_CONFIG, SEO_TEMPLATES };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}