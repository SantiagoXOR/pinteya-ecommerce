f5ecf6cf651a934835b4dc59c452e347
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_default(require("react"));
const _react1 = require("@testing-library/react");
const _card = require("../card");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
describe('ProductCard - Nuevo Diseño', ()=>{
    const defaultProps = {
        image: '/test-image.jpg',
        title: 'Pintura Látex Premium Sherwin Williams',
        price: 2500,
        originalPrice: 3200,
        discount: '25%',
        badge: 'Llega gratis hoy',
        cta: 'Agregar al carrito',
        stock: 10,
        onAddToCart: jest.fn()
    };
    beforeEach(()=>{
        jest.clearAllMocks();
    });
    it('renderiza correctamente con todas las props', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_card.ProductCard, {
            ...defaultProps
        }));
        expect(_react1.screen.getByTestId('product-card')).toBeInTheDocument();
        expect(_react1.screen.getByTestId('product-name')).toHaveTextContent('Pintura Látex Premium Sherwin Williams');
        expect(_react1.screen.getByTestId('product-price')).toBeInTheDocument();
        expect(_react1.screen.getByTestId('add-to-cart-btn')).toHaveTextContent('Agregar al carrito');
    });
    it('muestra el badge de descuento correctamente', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_card.ProductCard, {
            ...defaultProps
        }));
        expect(_react1.screen.getByText('25%')).toBeInTheDocument();
        expect(_react1.screen.getByText('Descuento')).toBeInTheDocument();
        expect(_react1.screen.getByText('especial')).toBeInTheDocument();
    });
    it('muestra el badge de envío', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_card.ProductCard, {
            ...defaultProps
        }));
        expect(_react1.screen.getByText('Llega gratis hoy')).toBeInTheDocument();
    });
    it('muestra precios correctamente formateados', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_card.ProductCard, {
            ...defaultProps
        }));
        expect(_react1.screen.getByText('$2.500')).toBeInTheDocument();
        expect(_react1.screen.getByText('$3.200')).toBeInTheDocument();
    });
    it('no muestra precio original si no se proporciona', ()=>{
        const props = {
            ...defaultProps,
            originalPrice: undefined
        };
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_card.ProductCard, {
            ...props
        }));
        expect(_react1.screen.getByText('$2.500')).toBeInTheDocument();
        expect(_react1.screen.queryByText('$3.200')).not.toBeInTheDocument();
    });
    it('no muestra badge de descuento si no se proporciona', ()=>{
        const props = {
            ...defaultProps,
            discount: undefined
        };
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_card.ProductCard, {
            ...props
        }));
        expect(_react1.screen.queryByText('25%')).not.toBeInTheDocument();
        expect(_react1.screen.queryByText('Descuento especial')).not.toBeInTheDocument();
    });
    it('muestra placeholder cuando no hay imagen', ()=>{
        const props = {
            ...defaultProps,
            image: undefined
        };
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_card.ProductCard, {
            ...props
        }));
        // Verifica que se muestra el placeholder SVG
        const placeholder = _react1.screen.getByTestId('product-card').querySelector('svg');
        expect(placeholder).toBeInTheDocument();
    });
    it('llama a onAddToCart cuando se hace click en el botón', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_card.ProductCard, {
            ...defaultProps
        }));
        const button = _react1.screen.getByTestId('add-to-cart-btn');
        _react1.fireEvent.click(button);
        expect(defaultProps.onAddToCart).toHaveBeenCalledTimes(1);
    });
    it('muestra animación de carga al agregar al carrito', async ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_card.ProductCard, {
            ...defaultProps,
            showCartAnimation: true
        }));
        const button = _react1.screen.getByTestId('add-to-cart-btn');
        _react1.fireEvent.click(button);
        // Debe mostrar "Agregando..." inmediatamente
        expect(_react1.screen.getByText('Agregando...')).toBeInTheDocument();
        expect(button).toBeDisabled();
        // Debe volver al estado original después de 1 segundo
        await (0, _react1.waitFor)(()=>{
            expect(_react1.screen.getByText('Agregar al carrito')).toBeInTheDocument();
            expect(button).not.toBeDisabled();
        }, {
            timeout: 1500
        });
    });
    it('deshabilita el botón cuando stock es 0', ()=>{
        const props = {
            ...defaultProps,
            stock: 0
        };
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_card.ProductCard, {
            ...props
        }));
        const button = _react1.screen.getByTestId('add-to-cart-btn');
        expect(button).toBeDisabled();
        expect(button).toHaveTextContent('Sin stock');
    });
    it('permite personalizar el texto del CTA', ()=>{
        const props = {
            ...defaultProps,
            cta: 'Comprar ahora'
        };
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_card.ProductCard, {
            ...props
        }));
        expect(_react1.screen.getByText('Comprar ahora')).toBeInTheDocument();
    });
    it('usa CTA por defecto si no se proporciona', ()=>{
        const props = {
            ...defaultProps,
            cta: undefined
        };
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_card.ProductCard, {
            ...props
        }));
        expect(_react1.screen.getByText('Agregar al carrito')).toBeInTheDocument();
    });
    it('renderiza link al producto si se proporciona productId', ()=>{
        const props = {
            ...defaultProps,
            productId: '123'
        };
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_card.ProductCard, {
            ...props
        }));
        const link = _react1.screen.getByRole('link');
        expect(link).toHaveAttribute('href', '/shop-details/123');
    });
    it('no renderiza link si no se proporciona productId', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_card.ProductCard, {
            ...defaultProps
        }));
        expect(_react1.screen.queryByRole('link')).not.toBeInTheDocument();
    });
    it('aplica clases CSS correctas para el diseño', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_card.ProductCard, {
            ...defaultProps
        }));
        const card = _react1.screen.getByTestId('product-card');
        expect(card).toHaveClass('bg-white');
        expect(card).toHaveClass('rounded-xl'); // Mobile-first: rounded-xl
        expect(card).toHaveClass('md:rounded-2xl'); // Desktop: rounded-2xl
        expect(card).toHaveClass('md:max-w-[300px]'); // Desktop: max-width
    });
    it('muestra ícono de carrito en el botón CTA', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_card.ProductCard, {
            ...defaultProps
        }));
        const button = _react1.screen.getByTestId('add-to-cart-btn');
        const icon = button.querySelector('svg');
        expect(icon).toBeInTheDocument();
    });
    it('maneja correctamente productos sin precio', ()=>{
        const props = {
            ...defaultProps,
            price: undefined
        };
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_card.ProductCard, {
            ...props
        }));
        // El ProductCard siempre muestra el precio, incluso si es undefined (muestra $0)
        expect(_react1.screen.getByTestId('product-price')).toBeInTheDocument();
        expect(_react1.screen.getByText('$0')).toBeInTheDocument();
    });
    it('renderiza children adicionales si se proporcionan', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_card.ProductCard, {
            ...defaultProps,
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                "data-testid": "custom-content",
                children: "Contenido personalizado"
            })
        }));
        expect(_react1.screen.getByTestId('custom-content')).toBeInTheDocument();
        expect(_react1.screen.getByText('Contenido personalizado')).toBeInTheDocument();
    });
    it('aplica className personalizada', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_card.ProductCard, {
            ...defaultProps,
            className: "custom-class"
        }));
        const card = _react1.screen.getByTestId('product-card');
        expect(card).toHaveClass('custom-class');
    });
    it('pasa props adicionales al componente Card', ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_card.ProductCard, {
            ...defaultProps,
            "data-custom": "test-value"
        }));
        const card = _react1.screen.getByTestId('product-card');
        expect(card).toHaveAttribute('data-custom', 'test-value');
    });
});

//# sourceMappingURL=data:application/json;base64,