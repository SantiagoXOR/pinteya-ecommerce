{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\ui\\__tests__\\product-card-new.test.tsx"],"sourcesContent":["import React from 'react'\nimport { render, screen, fireEvent, waitFor } from '@testing-library/react'\nimport { ProductCard } from '../card'\n\ndescribe('ProductCard - Nuevo Diseño', () => {\n  const defaultProps = {\n    image: '/test-image.jpg',\n    title: 'Pintura Látex Premium Sherwin Williams',\n    price: 2500,\n    originalPrice: 3200,\n    discount: '25%',\n    badge: 'Llega gratis hoy',\n    cta: 'Agregar al carrito',\n    stock: 10, // Agregamos stock para que no aparezca \"Sin stock\"\n    onAddToCart: jest.fn(),\n  }\n\n  beforeEach(() => {\n    jest.clearAllMocks()\n  })\n\n  it('renderiza correctamente con todas las props', () => {\n    render(<ProductCard {...defaultProps} />)\n\n    expect(screen.getByTestId('product-card')).toBeInTheDocument()\n    expect(screen.getByTestId('product-name')).toHaveTextContent(\n      'Pintura Látex Premium Sherwin Williams'\n    )\n    expect(screen.getByTestId('product-price')).toBeInTheDocument()\n    expect(screen.getByTestId('add-to-cart-btn')).toHaveTextContent('Agregar al carrito')\n  })\n\n  it('muestra el badge de descuento correctamente', () => {\n    render(<ProductCard {...defaultProps} />)\n\n    expect(screen.getByText('25%')).toBeInTheDocument()\n    expect(screen.getByText('Descuento')).toBeInTheDocument()\n    expect(screen.getByText('especial')).toBeInTheDocument()\n  })\n\n  it('muestra el badge de envío', () => {\n    render(<ProductCard {...defaultProps} />)\n\n    expect(screen.getByText('Llega gratis hoy')).toBeInTheDocument()\n  })\n\n  it('muestra precios correctamente formateados', () => {\n    render(<ProductCard {...defaultProps} />)\n\n    expect(screen.getByText('$2.500')).toBeInTheDocument()\n    expect(screen.getByText('$3.200')).toBeInTheDocument()\n  })\n\n  it('no muestra precio original si no se proporciona', () => {\n    const props = { ...defaultProps, originalPrice: undefined }\n    render(<ProductCard {...props} />)\n\n    expect(screen.getByText('$2.500')).toBeInTheDocument()\n    expect(screen.queryByText('$3.200')).not.toBeInTheDocument()\n  })\n\n  it('no muestra badge de descuento si no se proporciona', () => {\n    const props = { ...defaultProps, discount: undefined }\n    render(<ProductCard {...props} />)\n\n    expect(screen.queryByText('25%')).not.toBeInTheDocument()\n    expect(screen.queryByText('Descuento especial')).not.toBeInTheDocument()\n  })\n\n  it('muestra placeholder cuando no hay imagen', () => {\n    const props = { ...defaultProps, image: undefined }\n    render(<ProductCard {...props} />)\n\n    // Verifica que se muestra el placeholder SVG\n    const placeholder = screen.getByTestId('product-card').querySelector('svg')\n    expect(placeholder).toBeInTheDocument()\n  })\n\n  it('llama a onAddToCart cuando se hace click en el botón', () => {\n    render(<ProductCard {...defaultProps} />)\n\n    const button = screen.getByTestId('add-to-cart-btn')\n    fireEvent.click(button)\n\n    expect(defaultProps.onAddToCart).toHaveBeenCalledTimes(1)\n  })\n\n  it('muestra animación de carga al agregar al carrito', async () => {\n    render(<ProductCard {...defaultProps} showCartAnimation={true} />)\n\n    const button = screen.getByTestId('add-to-cart-btn')\n    fireEvent.click(button)\n\n    // Debe mostrar \"Agregando...\" inmediatamente\n    expect(screen.getByText('Agregando...')).toBeInTheDocument()\n    expect(button).toBeDisabled()\n\n    // Debe volver al estado original después de 1 segundo\n    await waitFor(\n      () => {\n        expect(screen.getByText('Agregar al carrito')).toBeInTheDocument()\n        expect(button).not.toBeDisabled()\n      },\n      { timeout: 1500 }\n    )\n  })\n\n  it('deshabilita el botón cuando stock es 0', () => {\n    const props = { ...defaultProps, stock: 0 }\n    render(<ProductCard {...props} />)\n\n    const button = screen.getByTestId('add-to-cart-btn')\n    expect(button).toBeDisabled()\n    expect(button).toHaveTextContent('Sin stock')\n  })\n\n  it('permite personalizar el texto del CTA', () => {\n    const props = { ...defaultProps, cta: 'Comprar ahora' }\n    render(<ProductCard {...props} />)\n\n    expect(screen.getByText('Comprar ahora')).toBeInTheDocument()\n  })\n\n  it('usa CTA por defecto si no se proporciona', () => {\n    const props = { ...defaultProps, cta: undefined }\n    render(<ProductCard {...props} />)\n\n    expect(screen.getByText('Agregar al carrito')).toBeInTheDocument()\n  })\n\n  it('renderiza link al producto si se proporciona productId', () => {\n    const props = { ...defaultProps, productId: '123' }\n    render(<ProductCard {...props} />)\n\n    const link = screen.getByRole('link')\n    expect(link).toHaveAttribute('href', '/shop-details/123')\n  })\n\n  it('no renderiza link si no se proporciona productId', () => {\n    render(<ProductCard {...defaultProps} />)\n\n    expect(screen.queryByRole('link')).not.toBeInTheDocument()\n  })\n\n  it('aplica clases CSS correctas para el diseño', () => {\n    render(<ProductCard {...defaultProps} />)\n\n    const card = screen.getByTestId('product-card')\n    expect(card).toHaveClass('bg-white')\n    expect(card).toHaveClass('rounded-xl') // Mobile-first: rounded-xl\n    expect(card).toHaveClass('md:rounded-2xl') // Desktop: rounded-2xl\n    expect(card).toHaveClass('md:max-w-[300px]') // Desktop: max-width\n  })\n\n  it('muestra ícono de carrito en el botón CTA', () => {\n    render(<ProductCard {...defaultProps} />)\n\n    const button = screen.getByTestId('add-to-cart-btn')\n    const icon = button.querySelector('svg')\n    expect(icon).toBeInTheDocument()\n  })\n\n  it('maneja correctamente productos sin precio', () => {\n    const props = { ...defaultProps, price: undefined }\n    render(<ProductCard {...props} />)\n\n    // El ProductCard siempre muestra el precio, incluso si es undefined (muestra $0)\n    expect(screen.getByTestId('product-price')).toBeInTheDocument()\n    expect(screen.getByText('$0')).toBeInTheDocument()\n  })\n\n  it('renderiza children adicionales si se proporcionan', () => {\n    render(\n      <ProductCard {...defaultProps}>\n        <div data-testid='custom-content'>Contenido personalizado</div>\n      </ProductCard>\n    )\n\n    expect(screen.getByTestId('custom-content')).toBeInTheDocument()\n    expect(screen.getByText('Contenido personalizado')).toBeInTheDocument()\n  })\n\n  it('aplica className personalizada', () => {\n    render(<ProductCard {...defaultProps} className='custom-class' />)\n\n    const card = screen.getByTestId('product-card')\n    expect(card).toHaveClass('custom-class')\n  })\n\n  it('pasa props adicionales al componente Card', () => {\n    render(<ProductCard {...defaultProps} data-custom='test-value' />)\n\n    const card = screen.getByTestId('product-card')\n    expect(card).toHaveAttribute('data-custom', 'test-value')\n  })\n})\n"],"names":["describe","defaultProps","image","title","price","originalPrice","discount","badge","cta","stock","onAddToCart","jest","fn","beforeEach","clearAllMocks","it","render","ProductCard","expect","screen","getByTestId","toBeInTheDocument","toHaveTextContent","getByText","props","undefined","queryByText","not","placeholder","querySelector","button","fireEvent","click","toHaveBeenCalledTimes","showCartAnimation","toBeDisabled","waitFor","timeout","productId","link","getByRole","toHaveAttribute","queryByRole","card","toHaveClass","icon","div","data-testid","className","data-custom"],"mappings":"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"}