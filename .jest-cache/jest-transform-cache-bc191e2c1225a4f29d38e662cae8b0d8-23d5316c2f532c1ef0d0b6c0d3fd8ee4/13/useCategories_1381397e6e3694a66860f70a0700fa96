4adbf9ce303885fa7f4f91982fcbbb7a
// ===================================
// PINTEYA E-COMMERCE - HOOK PARA CATEGORÍAS
// ===================================
"use strict";

/* istanbul ignore next */
function cov_1j81op4gb6() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useCategories.ts";
  var hash = "a6906c23ba64bd401451e161fff32f4eeca556ee";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useCategories.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "2": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "3": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 24,
          column: 3
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 29
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 39
        }
      },
      "6": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 33
        }
      },
      "7": {
        start: {
          line: 25,
          column: 15
        },
        end: {
          line: 25,
          column: 31
        }
      },
      "8": {
        start: {
          line: 26,
          column: 20
        },
        end: {
          line: 26,
          column: 52
        }
      },
      "9": {
        start: {
          line: 28,
          column: 54
        },
        end: {
          line: 28,
          column: 61
        }
      },
      "10": {
        start: {
          line: 29,
          column: 30
        },
        end: {
          line: 33,
          column: 6
        }
      },
      "11": {
        start: {
          line: 34,
          column: 34
        },
        end: {
          line: 34,
          column: 70
        }
      },
      "12": {
        start: {
          line: 37,
          column: 30
        },
        end: {
          line: 70,
          column: 6
        }
      },
      "13": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 42,
          column: 16
        }
      },
      "14": {
        start: {
          line: 38,
          column: 26
        },
        end: {
          line: 42,
          column: 13
        }
      },
      "15": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 67,
          column: 9
        }
      },
      "16": {
        start: {
          line: 45,
          column: 33
        },
        end: {
          line: 45,
          column: 54
        }
      },
      "17": {
        start: {
          line: 46,
          column: 29
        },
        end: {
          line: 46,
          column: 79
        }
      },
      "18": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 59,
          column: 13
        }
      },
      "19": {
        start: {
          line: 48,
          column: 16
        },
        end: {
          line: 52,
          column: 24
        }
      },
      "20": {
        start: {
          line: 48,
          column: 34
        },
        end: {
          line: 52,
          column: 21
        }
      },
      "21": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 58,
          column: 24
        }
      },
      "22": {
        start: {
          line: 54,
          column: 34
        },
        end: {
          line: 58,
          column: 21
        }
      },
      "23": {
        start: {
          line: 61,
          column: 33
        },
        end: {
          line: 61,
          column: 92
        }
      },
      "24": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 66,
          column: 20
        }
      },
      "25": {
        start: {
          line: 62,
          column: 30
        },
        end: {
          line: 66,
          column: 17
        }
      },
      "26": {
        start: {
          line: 73,
          column: 28
        },
        end: {
          line: 83,
          column: 6
        }
      },
      "27": {
        start: {
          line: 74,
          column: 31
        },
        end: {
          line: 77,
          column: 9
        }
      },
      "28": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 35
        }
      },
      "29": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 40
        }
      },
      "30": {
        start: {
          line: 86,
          column: 31
        },
        end: {
          line: 92,
          column: 6
        }
      },
      "31": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 89,
          column: 11
        }
      },
      "32": {
        start: {
          line: 96,
          column: 32
        },
        end: {
          line: 100,
          column: 6
        }
      },
      "33": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 97,
          column: 26
        }
      },
      "34": {
        start: {
          line: 102,
          column: 4
        },
        end: {
          line: 109,
          column: 7
        }
      },
      "35": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 105,
          column: 9
        }
      },
      "36": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 30
        }
      },
      "37": {
        start: {
          line: 110,
          column: 4
        },
        end: {
          line: 120,
          column: 6
        }
      },
      "38": {
        start: {
          line: 123,
          column: 4
        },
        end: {
          line: 123,
          column: 27
        }
      },
      "39": {
        start: {
          line: 126,
          column: 62
        },
        end: {
          line: 126,
          column: 77
        }
      },
      "40": {
        start: {
          line: 128,
          column: 33
        },
        end: {
          line: 134,
          column: 11
        }
      },
      "41": {
        start: {
          line: 128,
          column: 61
        },
        end: {
          line: 134,
          column: 9
        }
      },
      "42": {
        start: {
          line: 135,
          column: 4
        },
        end: {
          line: 140,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 16
          }
        },
        loc: {
          start: {
            line: 8,
            column: 30
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 25
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 35
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 29
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "4": {
        name: "useCategories",
        decl: {
          start: {
            line: 27,
            column: 9
          },
          end: {
            line: 27,
            column: 22
          }
        },
        loc: {
          start: {
            line: 27,
            column: 37
          },
          end: {
            line: 121,
            column: 1
          }
        },
        line: 27
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 37,
            column: 54
          },
          end: {
            line: 37,
            column: 55
          }
        },
        loc: {
          start: {
            line: 37,
            column: 74
          },
          end: {
            line: 68,
            column: 5
          }
        },
        line: 37
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 38,
            column: 17
          },
          end: {
            line: 38,
            column: 18
          }
        },
        loc: {
          start: {
            line: 38,
            column: 26
          },
          end: {
            line: 42,
            column: 13
          }
        },
        line: 38
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 48,
            column: 25
          },
          end: {
            line: 48,
            column: 26
          }
        },
        loc: {
          start: {
            line: 48,
            column: 34
          },
          end: {
            line: 52,
            column: 21
          }
        },
        line: 48
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 54,
            column: 25
          },
          end: {
            line: 54,
            column: 26
          }
        },
        loc: {
          start: {
            line: 54,
            column: 34
          },
          end: {
            line: 58,
            column: 21
          }
        },
        line: 54
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 62,
            column: 21
          },
          end: {
            line: 62,
            column: 22
          }
        },
        loc: {
          start: {
            line: 62,
            column: 30
          },
          end: {
            line: 66,
            column: 17
          }
        },
        line: 62
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 73,
            column: 52
          },
          end: {
            line: 73,
            column: 53
          }
        },
        loc: {
          start: {
            line: 73,
            column: 66
          },
          end: {
            line: 80,
            column: 5
          }
        },
        line: 73
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 86,
            column: 55
          },
          end: {
            line: 86,
            column: 56
          }
        },
        loc: {
          start: {
            line: 86,
            column: 69
          },
          end: {
            line: 90,
            column: 5
          }
        },
        line: 86
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 96,
            column: 56
          },
          end: {
            line: 96,
            column: 57
          }
        },
        loc: {
          start: {
            line: 96,
            column: 60
          },
          end: {
            line: 98,
            column: 5
          }
        },
        line: 96
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 102,
            column: 26
          },
          end: {
            line: 102,
            column: 27
          }
        },
        loc: {
          start: {
            line: 102,
            column: 30
          },
          end: {
            line: 106,
            column: 5
          }
        },
        line: 102
      },
      "14": {
        name: "useMainCategories",
        decl: {
          start: {
            line: 122,
            column: 9
          },
          end: {
            line: 122,
            column: 26
          }
        },
        loc: {
          start: {
            line: 122,
            column: 29
          },
          end: {
            line: 124,
            column: 1
          }
        },
        line: 122
      },
      "15": {
        name: "useCategoriesForFilters",
        decl: {
          start: {
            line: 125,
            column: 9
          },
          end: {
            line: 125,
            column: 32
          }
        },
        loc: {
          start: {
            line: 125,
            column: 35
          },
          end: {
            line: 141,
            column: 1
          }
        },
        line: 125
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 128,
            column: 48
          },
          end: {
            line: 128,
            column: 49
          }
        },
        loc: {
          start: {
            line: 128,
            column: 61
          },
          end: {
            line: 134,
            column: 9
          }
        },
        line: 128
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 27,
            column: 23
          },
          end: {
            line: 27,
            column: 35
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 27,
            column: 33
          },
          end: {
            line: 27,
            column: 35
          }
        }],
        line: 27
      },
      "1": {
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 31
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 28,
            column: 29
          },
          end: {
            line: 28,
            column: 31
          }
        }],
        line: 28
      },
      "2": {
        loc: {
          start: {
            line: 28,
            column: 33
          },
          end: {
            line: 28,
            column: 49
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 28,
            column: 45
          },
          end: {
            line: 28,
            column: 49
          }
        }],
        line: 28
      },
      "3": {
        loc: {
          start: {
            line: 45,
            column: 33
          },
          end: {
            line: 45,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 33
          },
          end: {
            line: 45,
            column: 43
          }
        }, {
          start: {
            line: 45,
            column: 47
          },
          end: {
            line: 45,
            column: 54
          }
        }],
        line: 45
      },
      "4": {
        loc: {
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 59,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 59,
            column: 13
          }
        }, {
          start: {
            line: 53,
            column: 19
          },
          end: {
            line: 59,
            column: 13
          }
        }],
        line: 47
      },
      "5": {
        loc: {
          start: {
            line: 50,
            column: 36
          },
          end: {
            line: 50,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 36
          },
          end: {
            line: 50,
            column: 49
          }
        }, {
          start: {
            line: 50,
            column: 53
          },
          end: {
            line: 50,
            column: 55
          }
        }],
        line: 50
      },
      "6": {
        loc: {
          start: {
            line: 57,
            column: 31
          },
          end: {
            line: 57,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 57,
            column: 31
          },
          end: {
            line: 57,
            column: 45
          }
        }, {
          start: {
            line: 57,
            column: 49
          },
          end: {
            line: 57,
            column: 78
          }
        }],
        line: 57
      },
      "7": {
        loc: {
          start: {
            line: 61,
            column: 33
          },
          end: {
            line: 61,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 61,
            column: 58
          },
          end: {
            line: 61,
            column: 71
          }
        }, {
          start: {
            line: 61,
            column: 74
          },
          end: {
            line: 61,
            column: 92
          }
        }],
        line: 61
      },
      "8": {
        loc: {
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "9": {
        loc: {
          start: {
            line: 130,
            column: 22
          },
          end: {
            line: 130,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 130,
            column: 22
          },
          end: {
            line: 130,
            column: 45
          }
        }, {
          start: {
            line: 130,
            column: 49
          },
          end: {
            line: 130,
            column: 50
          }
        }],
        line: 130
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useCategories.ts"],
      sourcesContent: ["// ===================================\r\n// PINTEYA E-COMMERCE - HOOK PARA CATEGOR\xCDAS\r\n// ===================================\r\n\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport { Category } from '@/types/database';\r\nimport { CategoryFilters, ApiResponse } from '@/types/api';\r\nimport { getCategories, getMainCategories } from '@/lib/api/categories';\r\n\r\ninterface UseCategoriesState {\r\n  categories: Category[];\r\n  loading: boolean;\r\n  error: string | null;\r\n}\r\n\r\ninterface UseCategoriesOptions {\r\n  initialFilters?: CategoryFilters;\r\n  autoFetch?: boolean;\r\n}\r\n\r\nexport function useCategories(options: UseCategoriesOptions = {}) {\r\n  const { initialFilters = {}, autoFetch = true } = options;\r\n\r\n  const [state, setState] = useState<UseCategoriesState>({\r\n    categories: [],\r\n    loading: false,\r\n    error: null,\r\n  });\r\n\r\n  const [filters, setFilters] = useState<CategoryFilters>(initialFilters);\r\n\r\n  /**\r\n   * Obtiene categor\xEDas desde la API\r\n   */\r\n  const fetchCategories = useCallback(async (newFilters?: CategoryFilters) => {\r\n    setState(prev => ({ ...prev, loading: true, error: null }));\r\n\r\n    try {\r\n      // Obtener categor\xEDas con filtros\r\n      const filtersToUse = newFilters || filters;\r\n      const response = await getCategories(filtersToUse);\r\n\r\n      if (response.success) {\r\n        setState(prev => ({\r\n          ...prev,\r\n          categories: response.data || [],\r\n          loading: false,\r\n        }));\r\n      } else {\r\n        setState(prev => ({\r\n          ...prev,\r\n          loading: false,\r\n          error: response.error || 'Error obteniendo categor\xEDas',\r\n        }));\r\n      }\r\n    } catch (error: unknown) {\r\n      const errorMessage = error instanceof Error ? error.message : 'Error inesperado';\r\n      setState(prev => ({\r\n        ...prev,\r\n        loading: false,\r\n        error: errorMessage,\r\n      }));\r\n    }\r\n  }, [filters]);\r\n\r\n  /**\r\n   * Actualiza los filtros y obtiene categor\xEDas\r\n   */\r\n  const updateFilters = useCallback((newFilters: Partial<CategoryFilters>) => {\r\n    const updatedFilters = { ...filters, ...newFilters };\r\n    setFilters(updatedFilters);\r\n    fetchCategories(updatedFilters);\r\n  }, [filters, fetchCategories]);\r\n\r\n  /**\r\n   * Busca categor\xEDas por t\xE9rmino\r\n   */\r\n  const searchCategories = useCallback((searchTerm: string) => {\r\n    updateFilters({ search: searchTerm });\r\n  }, [updateFilters]);\r\n\r\n  // Funci\xF3n removida ya que no hay jerarqu\xEDa en la estructura actual\r\n\r\n  /**\r\n   * Refresca las categor\xEDas\r\n   */\r\n  const refreshCategories = useCallback(() => {\r\n    fetchCategories();\r\n  }, [fetchCategories]);\r\n\r\n  // Auto-fetch al montar el componente\r\n  useEffect(() => {\r\n    if (autoFetch) {\r\n      fetchCategories();\r\n    }\r\n  }, [autoFetch, fetchCategories]);\r\n\r\n  return {\r\n    // Estado\r\n    categories: state.categories,\r\n    loading: state.loading,\r\n    error: state.error,\r\n    \r\n    // Acciones\r\n    fetchCategories,\r\n    updateFilters,\r\n    searchCategories,\r\n    refreshCategories,\r\n  };\r\n}\r\n\r\n/**\r\n * Hook espec\xEDfico para obtener todas las categor\xEDas\r\n */\r\nexport function useMainCategories() {\r\n  return useCategories();\r\n}\r\n\r\n/**\r\n * Hook para obtener categor\xEDas con conteo de productos para filtros\r\n */\r\nexport function useCategoriesForFilters() {\r\n  const { categories, loading, error, refreshCategories } = useCategories();\r\n\r\n  // Transformar categor\xEDas para el formato esperado por los filtros\r\n  const categoriesForFilters = categories.map(category => ({\r\n    name: category.name,\r\n    products: category.products_count || 0,\r\n    isRefined: false, // Se manejar\xE1 en el componente\r\n    slug: category.slug,\r\n    id: category.id,\r\n  }));\r\n\r\n  return {\r\n    categories: categoriesForFilters,\r\n    loading,\r\n    error,\r\n    refreshCategories,\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["useCategories", "useCategoriesForFilters", "useMainCategories", "options", "initialFilters", "autoFetch", "state", "setState", "useState", "categories", "loading", "error", "filters", "setFilters", "fetchCategories", "useCallback", "newFilters", "prev", "filtersToUse", "response", "getCategories", "success", "data", "errorMessage", "Error", "message", "updateFilters", "updatedFilters", "searchCategories", "searchTerm", "search", "refreshCategories", "useEffect", "categoriesForFilters", "map", "category", "name", "products", "products_count", "isRefined", "slug", "id"],
      mappings: "AAAA,sCAAsC;AACtC,4CAA4C;AAC5C,sCAAsC;;;;;;;;;;;;QAkBtBA;eAAAA;;QAqGAC;eAAAA;;QAPAC;eAAAA;;;uBA9GiC;4BAGA;AAa1C,SAASF,cAAcG,UAAgC,CAAC,CAAC;IAC9D,MAAM,EAAEC,iBAAiB,CAAC,CAAC,EAAEC,YAAY,IAAI,EAAE,GAAGF;IAElD,MAAM,CAACG,OAAOC,SAAS,GAAGC,IAAAA,eAAQ,EAAqB;QACrDC,YAAY,EAAE;QACdC,SAAS;QACTC,OAAO;IACT;IAEA,MAAM,CAACC,SAASC,WAAW,GAAGL,IAAAA,eAAQ,EAAkBJ;IAExD;;GAEC,GACD,MAAMU,kBAAkBC,IAAAA,kBAAW,EAAC,OAAOC;QACzCT,SAASU,CAAAA,OAAS,CAAA;gBAAE,GAAGA,IAAI;gBAAEP,SAAS;gBAAMC,OAAO;YAAK,CAAA;QAExD,IAAI;YACF,iCAAiC;YACjC,MAAMO,eAAeF,cAAcJ;YACnC,MAAMO,WAAW,MAAMC,IAAAA,yBAAa,EAACF;YAErC,IAAIC,SAASE,OAAO,EAAE;gBACpBd,SAASU,CAAAA,OAAS,CAAA;wBAChB,GAAGA,IAAI;wBACPR,YAAYU,SAASG,IAAI,IAAI,EAAE;wBAC/BZ,SAAS;oBACX,CAAA;YACF,OAAO;gBACLH,SAASU,CAAAA,OAAS,CAAA;wBAChB,GAAGA,IAAI;wBACPP,SAAS;wBACTC,OAAOQ,SAASR,KAAK,IAAI;oBAC3B,CAAA;YACF;QACF,EAAE,OAAOA,OAAgB;YACvB,MAAMY,eAAeZ,iBAAiBa,QAAQb,MAAMc,OAAO,GAAG;YAC9DlB,SAASU,CAAAA,OAAS,CAAA;oBAChB,GAAGA,IAAI;oBACPP,SAAS;oBACTC,OAAOY;gBACT,CAAA;QACF;IACF,GAAG;QAACX;KAAQ;IAEZ;;GAEC,GACD,MAAMc,gBAAgBX,IAAAA,kBAAW,EAAC,CAACC;QACjC,MAAMW,iBAAiB;YAAE,GAAGf,OAAO;YAAE,GAAGI,UAAU;QAAC;QACnDH,WAAWc;QACXb,gBAAgBa;IAClB,GAAG;QAACf;QAASE;KAAgB;IAE7B;;GAEC,GACD,MAAMc,mBAAmBb,IAAAA,kBAAW,EAAC,CAACc;QACpCH,cAAc;YAAEI,QAAQD;QAAW;IACrC,GAAG;QAACH;KAAc;IAElB,mEAAmE;IAEnE;;GAEC,GACD,MAAMK,oBAAoBhB,IAAAA,kBAAW,EAAC;QACpCD;IACF,GAAG;QAACA;KAAgB;IAEpB,qCAAqC;IACrCkB,IAAAA,gBAAS,EAAC;QACR,IAAI3B,WAAW;YACbS;QACF;IACF,GAAG;QAACT;QAAWS;KAAgB;IAE/B,OAAO;QACL,SAAS;QACTL,YAAYH,MAAMG,UAAU;QAC5BC,SAASJ,MAAMI,OAAO;QACtBC,OAAOL,MAAMK,KAAK;QAElB,WAAW;QACXG;QACAY;QACAE;QACAG;IACF;AACF;AAKO,SAAS7B;IACd,OAAOF;AACT;AAKO,SAASC;IACd,MAAM,EAAEQ,UAAU,EAAEC,OAAO,EAAEC,KAAK,EAAEoB,iBAAiB,EAAE,GAAG/B;IAE1D,kEAAkE;IAClE,MAAMiC,uBAAuBxB,WAAWyB,GAAG,CAACC,CAAAA,WAAa,CAAA;YACvDC,MAAMD,SAASC,IAAI;YACnBC,UAAUF,SAASG,cAAc,IAAI;YACrCC,WAAW;YACXC,MAAML,SAASK,IAAI;YACnBC,IAAIN,SAASM,EAAE;QACjB,CAAA;IAEA,OAAO;QACLhC,YAAYwB;QACZvB;QACAC;QACAoB;IACF;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a6906c23ba64bd401451e161fff32f4eeca556ee"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1j81op4gb6 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1j81op4gb6();
cov_1j81op4gb6().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1j81op4gb6().f[0]++;
  cov_1j81op4gb6().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1j81op4gb6().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1j81op4gb6().s[3]++;
_export(exports, {
  get useCategories() {
    /* istanbul ignore next */
    cov_1j81op4gb6().f[1]++;
    cov_1j81op4gb6().s[4]++;
    return useCategories;
  },
  get useCategoriesForFilters() {
    /* istanbul ignore next */
    cov_1j81op4gb6().f[2]++;
    cov_1j81op4gb6().s[5]++;
    return useCategoriesForFilters;
  },
  get useMainCategories() {
    /* istanbul ignore next */
    cov_1j81op4gb6().f[3]++;
    cov_1j81op4gb6().s[6]++;
    return useMainCategories;
  }
});
const _react =
/* istanbul ignore next */
(cov_1j81op4gb6().s[7]++, require("react"));
const _categories =
/* istanbul ignore next */
(cov_1j81op4gb6().s[8]++, require("../lib/api/categories"));
function useCategories(options =
/* istanbul ignore next */
(cov_1j81op4gb6().b[0][0]++, {})) {
  /* istanbul ignore next */
  cov_1j81op4gb6().f[4]++;
  const {
    initialFilters =
    /* istanbul ignore next */
    (cov_1j81op4gb6().b[1][0]++, {}),
    autoFetch =
    /* istanbul ignore next */
    (cov_1j81op4gb6().b[2][0]++, true)
  } =
  /* istanbul ignore next */
  (cov_1j81op4gb6().s[9]++, options);
  const [state, setState] =
  /* istanbul ignore next */
  (cov_1j81op4gb6().s[10]++, (0, _react.useState)({
    categories: [],
    loading: false,
    error: null
  }));
  const [filters, setFilters] =
  /* istanbul ignore next */
  (cov_1j81op4gb6().s[11]++, (0, _react.useState)(initialFilters));
  /**
  * Obtiene categorías desde la API
  */
  const fetchCategories =
  /* istanbul ignore next */
  (cov_1j81op4gb6().s[12]++, (0, _react.useCallback)(async newFilters => {
    /* istanbul ignore next */
    cov_1j81op4gb6().f[5]++;
    cov_1j81op4gb6().s[13]++;
    setState(prev => {
      /* istanbul ignore next */
      cov_1j81op4gb6().f[6]++;
      cov_1j81op4gb6().s[14]++;
      return {
        ...prev,
        loading: true,
        error: null
      };
    });
    /* istanbul ignore next */
    cov_1j81op4gb6().s[15]++;
    try {
      // Obtener categorías con filtros
      const filtersToUse =
      /* istanbul ignore next */
      (cov_1j81op4gb6().s[16]++,
      /* istanbul ignore next */
      (cov_1j81op4gb6().b[3][0]++, newFilters) ||
      /* istanbul ignore next */
      (cov_1j81op4gb6().b[3][1]++, filters));
      const response =
      /* istanbul ignore next */
      (cov_1j81op4gb6().s[17]++, await (0, _categories.getCategories)(filtersToUse));
      /* istanbul ignore next */
      cov_1j81op4gb6().s[18]++;
      if (response.success) {
        /* istanbul ignore next */
        cov_1j81op4gb6().b[4][0]++;
        cov_1j81op4gb6().s[19]++;
        setState(prev => {
          /* istanbul ignore next */
          cov_1j81op4gb6().f[7]++;
          cov_1j81op4gb6().s[20]++;
          return {
            ...prev,
            categories:
            /* istanbul ignore next */
            (cov_1j81op4gb6().b[5][0]++, response.data) ||
            /* istanbul ignore next */
            (cov_1j81op4gb6().b[5][1]++, []),
            loading: false
          };
        });
      } else {
        /* istanbul ignore next */
        cov_1j81op4gb6().b[4][1]++;
        cov_1j81op4gb6().s[21]++;
        setState(prev => {
          /* istanbul ignore next */
          cov_1j81op4gb6().f[8]++;
          cov_1j81op4gb6().s[22]++;
          return {
            ...prev,
            loading: false,
            error:
            /* istanbul ignore next */
            (cov_1j81op4gb6().b[6][0]++, response.error) ||
            /* istanbul ignore next */
            (cov_1j81op4gb6().b[6][1]++, 'Error obteniendo categorías')
          };
        });
      }
    } catch (error) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_1j81op4gb6().s[23]++, error instanceof Error ?
      /* istanbul ignore next */
      (cov_1j81op4gb6().b[7][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1j81op4gb6().b[7][1]++, 'Error inesperado'));
      /* istanbul ignore next */
      cov_1j81op4gb6().s[24]++;
      setState(prev => {
        /* istanbul ignore next */
        cov_1j81op4gb6().f[9]++;
        cov_1j81op4gb6().s[25]++;
        return {
          ...prev,
          loading: false,
          error: errorMessage
        };
      });
    }
  }, [filters]));
  /**
  * Actualiza los filtros y obtiene categorías
  */
  const updateFilters =
  /* istanbul ignore next */
  (cov_1j81op4gb6().s[26]++, (0, _react.useCallback)(newFilters => {
    /* istanbul ignore next */
    cov_1j81op4gb6().f[10]++;
    const updatedFilters =
    /* istanbul ignore next */
    (cov_1j81op4gb6().s[27]++, {
      ...filters,
      ...newFilters
    });
    /* istanbul ignore next */
    cov_1j81op4gb6().s[28]++;
    setFilters(updatedFilters);
    /* istanbul ignore next */
    cov_1j81op4gb6().s[29]++;
    fetchCategories(updatedFilters);
  }, [filters, fetchCategories]));
  /**
  * Busca categorías por término
  */
  const searchCategories =
  /* istanbul ignore next */
  (cov_1j81op4gb6().s[30]++, (0, _react.useCallback)(searchTerm => {
    /* istanbul ignore next */
    cov_1j81op4gb6().f[11]++;
    cov_1j81op4gb6().s[31]++;
    updateFilters({
      search: searchTerm
    });
  }, [updateFilters]));
  // Función removida ya que no hay jerarquía en la estructura actual
  /**
  * Refresca las categorías
  */
  const refreshCategories =
  /* istanbul ignore next */
  (cov_1j81op4gb6().s[32]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_1j81op4gb6().f[12]++;
    cov_1j81op4gb6().s[33]++;
    fetchCategories();
  }, [fetchCategories]));
  // Auto-fetch al montar el componente
  /* istanbul ignore next */
  cov_1j81op4gb6().s[34]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1j81op4gb6().f[13]++;
    cov_1j81op4gb6().s[35]++;
    if (autoFetch) {
      /* istanbul ignore next */
      cov_1j81op4gb6().b[8][0]++;
      cov_1j81op4gb6().s[36]++;
      fetchCategories();
    } else
    /* istanbul ignore next */
    {
      cov_1j81op4gb6().b[8][1]++;
    }
  }, [autoFetch, fetchCategories]);
  /* istanbul ignore next */
  cov_1j81op4gb6().s[37]++;
  return {
    // Estado
    categories: state.categories,
    loading: state.loading,
    error: state.error,
    // Acciones
    fetchCategories,
    updateFilters,
    searchCategories,
    refreshCategories
  };
}
function useMainCategories() {
  /* istanbul ignore next */
  cov_1j81op4gb6().f[14]++;
  cov_1j81op4gb6().s[38]++;
  return useCategories();
}
function useCategoriesForFilters() {
  /* istanbul ignore next */
  cov_1j81op4gb6().f[15]++;
  const {
    categories,
    loading,
    error,
    refreshCategories
  } =
  /* istanbul ignore next */
  (cov_1j81op4gb6().s[39]++, useCategories());
  // Transformar categorías para el formato esperado por los filtros
  const categoriesForFilters =
  /* istanbul ignore next */
  (cov_1j81op4gb6().s[40]++, categories.map(category => {
    /* istanbul ignore next */
    cov_1j81op4gb6().f[16]++;
    cov_1j81op4gb6().s[41]++;
    return {
      name: category.name,
      products:
      /* istanbul ignore next */
      (cov_1j81op4gb6().b[9][0]++, category.products_count) ||
      /* istanbul ignore next */
      (cov_1j81op4gb6().b[9][1]++, 0),
      isRefined: false,
      slug: category.slug,
      id: category.id
    };
  }));
  /* istanbul ignore next */
  cov_1j81op4gb6().s[42]++;
  return {
    categories: categoriesForFilters,
    loading,
    error,
    refreshCategories
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,