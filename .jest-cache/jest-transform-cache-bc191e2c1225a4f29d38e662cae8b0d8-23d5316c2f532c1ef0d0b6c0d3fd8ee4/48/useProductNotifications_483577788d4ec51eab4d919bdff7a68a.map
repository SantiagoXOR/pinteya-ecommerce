{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\admin\\useProductNotifications.ts"],"sourcesContent":["/**\r\n * Hook de Notificaciones para Panel Administrativo de Productos\r\n * Basado en mejores pr√°cticas de e-commerce (Shopify, WooCommerce)\r\n */\r\n\r\nimport { useCallback } from 'react';\r\nimport { toast } from '@/components/ui/use-toast';\r\n\r\n// ===================================\r\n// TIPOS\r\n// ===================================\r\n\r\nexport interface ProductNotificationOptions {\r\n  productId?: number | string;\r\n  productName?: string;\r\n  sku?: string;\r\n  price?: number;\r\n  stock?: number;\r\n  duration?: number;\r\n  changes?: string;\r\n}\r\n\r\nexport interface BulkProductActionOptions {\r\n  selectedCount: number;\r\n  action: string;\r\n  duration?: number;\r\n  affectedProducts?: string[];\r\n}\r\n\r\nexport interface ProductExportOptions {\r\n  format: 'CSV' | 'Excel' | 'JSON';\r\n  recordCount: number;\r\n  duration?: number;\r\n}\r\n\r\nexport interface ProductImportOptions {\r\n  format: 'CSV' | 'Excel' | 'JSON';\r\n  recordCount: number;\r\n  successCount: number;\r\n  errorCount: number;\r\n  duration?: number;\r\n}\r\n\r\nexport interface InventoryNotificationOptions {\r\n  productName: string;\r\n  currentStock: number;\r\n  threshold?: number;\r\n  action?: 'low_stock' | 'out_of_stock' | 'restocked';\r\n  duration?: number;\r\n}\r\n\r\n// ===================================\r\n// HOOK PRINCIPAL\r\n// ===================================\r\n\r\nexport const useProductNotifications = () => {\r\n  \r\n  // ===================================\r\n  // NOTIFICACIONES DE √âXITO - CRUD\r\n  // ===================================\r\n\r\n  const showProductCreated = useCallback((options: ProductNotificationOptions) => {\r\n    const { productId, productName, sku, price } = options;\r\n    \r\n    return toast({\r\n      variant: 'success',\r\n      title: '‚úÖ Producto creado exitosamente',\r\n      description: `${productName || 'Producto'} ${sku ? `(${sku})` : ''} ${price ? `- $${price.toLocaleString()}` : ''} ha sido creado`,\r\n      duration: 4000,\r\n    });\r\n  }, []);\r\n\r\n  const showProductUpdated = useCallback((options: ProductNotificationOptions) => {\r\n    const { productId, productName, changes } = options;\r\n\r\n    return toast({\r\n      variant: 'success',\r\n      title: '‚úÖ Producto actualizado',\r\n      description: `${productName || `Producto #${productId}`} se actualiz√≥ correctamente${changes ? ` (${changes})` : ''}`,\r\n      duration: 3000,\r\n    });\r\n  }, []);\r\n\r\n  const showProductDeleted = useCallback((options: ProductNotificationOptions) => {\r\n    const { productName, productId } = options;\r\n\r\n    return toast({\r\n      variant: 'success',\r\n      title: 'üóëÔ∏è Producto eliminado',\r\n      description: `${productName || `Producto #${productId}`} ha sido eliminado exitosamente`,\r\n      duration: 3000,\r\n    });\r\n  }, []);\r\n\r\n  const showProductDuplicated = useCallback((options: ProductNotificationOptions) => {\r\n    const { productName, productId } = options;\r\n\r\n    return toast({\r\n      variant: 'success',\r\n      title: 'üìã Producto duplicado',\r\n      description: `Se cre√≥ una copia de ${productName || `Producto #${productId}`}`,\r\n      duration: 3000,\r\n    });\r\n  }, []);\r\n\r\n  // ===================================\r\n  // NOTIFICACIONES DE ESTADO\r\n  // ===================================\r\n\r\n  const showProductStatusChanged = useCallback((productName: string, newStatus: string) => {\r\n    const statusLabels: Record<string, string> = {\r\n      'active': 'Activo',\r\n      'inactive': 'Inactivo',\r\n      'draft': 'Borrador',\r\n      'archived': 'Archivado'\r\n    };\r\n\r\n    return toast({\r\n      variant: 'success',\r\n      title: 'üîÑ Estado actualizado',\r\n      description: `${productName} cambi√≥ a: ${statusLabels[newStatus] || newStatus}`,\r\n      duration: 3000,\r\n    });\r\n  }, []);\r\n\r\n  // ===================================\r\n  // NOTIFICACIONES DE INVENTARIO\r\n  // ===================================\r\n\r\n  const showInventoryUpdated = useCallback((options: ProductNotificationOptions) => {\r\n    const { productName, stock } = options;\r\n\r\n    return toast({\r\n      variant: 'success',\r\n      title: 'üì¶ Inventario actualizado',\r\n      description: `${productName}: ${stock} unidades en stock`,\r\n      duration: 3000,\r\n    });\r\n  }, []);\r\n\r\n  const showLowStockAlert = useCallback((options: InventoryNotificationOptions) => {\r\n    const { productName, currentStock, threshold } = options;\r\n\r\n    return toast({\r\n      variant: 'warning',\r\n      title: '‚ö†Ô∏è Stock bajo',\r\n      description: `${productName} tiene solo ${currentStock} unidades${threshold ? ` (m√≠nimo: ${threshold})` : ''}`,\r\n      duration: 6000,\r\n    });\r\n  }, []);\r\n\r\n  const showOutOfStockAlert = useCallback((productName: string) => {\r\n    return toast({\r\n      variant: 'destructive',\r\n      title: 'üö´ Sin stock',\r\n      description: `${productName} est√° agotado`,\r\n      duration: 6000,\r\n    });\r\n  }, []);\r\n\r\n  const showRestockedAlert = useCallback((options: InventoryNotificationOptions) => {\r\n    const { productName, currentStock } = options;\r\n\r\n    return toast({\r\n      variant: 'success',\r\n      title: 'üìà Producto reabastecido',\r\n      description: `${productName} ahora tiene ${currentStock} unidades en stock`,\r\n      duration: 4000,\r\n    });\r\n  }, []);\r\n\r\n  // ===================================\r\n  // NOTIFICACIONES DE OPERACIONES MASIVAS\r\n  // ===================================\r\n\r\n  const showBulkActionSuccess = useCallback((options: BulkProductActionOptions) => {\r\n    const { selectedCount, action } = options;\r\n    \r\n    const actionLabels: Record<string, string> = {\r\n      'delete': 'eliminaci√≥n',\r\n      'activate': 'activaci√≥n',\r\n      'deactivate': 'desactivaci√≥n',\r\n      'archive': 'archivado',\r\n      'update_price': 'actualizaci√≥n de precios',\r\n      'update_category': 'cambio de categor√≠a',\r\n      'update_stock': 'actualizaci√≥n de inventario'\r\n    };\r\n    \r\n    return toast({\r\n      variant: 'success',\r\n      title: '‚úÖ Acci√≥n en lote completada',\r\n      description: `${actionLabels[action] || action} aplicada a ${selectedCount} productos exitosamente`,\r\n      duration: 4000,\r\n    });\r\n  }, []);\r\n\r\n  const showBulkActionPartial = useCallback((successCount: number, errorCount: number, action: string) => {\r\n    return toast({\r\n      variant: 'warning',\r\n      title: '‚ö†Ô∏è Acci√≥n parcialmente completada',\r\n      description: `${action}: ${successCount} exitosos, ${errorCount} con errores`,\r\n      duration: 5000,\r\n    });\r\n  }, []);\r\n\r\n  // ===================================\r\n  // NOTIFICACIONES DE IMPORTACI√ìN/EXPORTACI√ìN\r\n  // ===================================\r\n\r\n  const showExportSuccess = useCallback((options: ProductExportOptions) => {\r\n    const { format, recordCount } = options;\r\n    \r\n    return toast({\r\n      variant: 'success',\r\n      title: 'üìä Exportaci√≥n completada',\r\n      description: `${recordCount} productos exportados en formato ${format}`,\r\n      duration: 5000,\r\n    });\r\n  }, []);\r\n\r\n  const showImportSuccess = useCallback((options: ProductImportOptions) => {\r\n    const { format, successCount, errorCount } = options;\r\n    \r\n    if (errorCount === 0) {\r\n      return toast({\r\n        variant: 'success',\r\n        title: 'üì• Importaci√≥n completada',\r\n        description: `${successCount} productos importados exitosamente desde ${format}`,\r\n        duration: 5000,\r\n      });\r\n    } else {\r\n      return toast({\r\n        variant: 'warning',\r\n        title: 'üì• Importaci√≥n completada con errores',\r\n        description: `${successCount} productos importados, ${errorCount} con errores`,\r\n        duration: 6000,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  // ===================================\r\n  // NOTIFICACIONES DE PROCESAMIENTO\r\n  // ===================================\r\n\r\n  const showProcessingInfo = useCallback((message: string) => {\r\n    return toast({\r\n      variant: 'info',\r\n      title: '‚è≥ Procesando...',\r\n      description: message,\r\n      duration: 2000,\r\n    });\r\n  }, []);\r\n\r\n  const showDataRefreshed = useCallback((recordCount: number) => {\r\n    return toast({\r\n      variant: 'success',\r\n      title: 'üîÑ Datos actualizados',\r\n      description: `${recordCount} productos cargados exitosamente`,\r\n      duration: 2000,\r\n    });\r\n  }, []);\r\n\r\n  // ===================================\r\n  // NOTIFICACIONES DE ERROR\r\n  // ===================================\r\n\r\n  const showProductCreationError = useCallback((error: string) => {\r\n    return toast({\r\n      variant: 'destructive',\r\n      title: '‚ùå Error al crear producto',\r\n      description: error || 'No se pudo crear el producto. Intenta nuevamente.',\r\n      duration: 6000,\r\n    });\r\n  }, []);\r\n\r\n  const showProductUpdateError = useCallback((error: string, productName?: string) => {\r\n    return toast({\r\n      variant: 'destructive',\r\n      title: '‚ùå Error al actualizar producto',\r\n      description: `${productName ? `${productName}: ` : ''}${error || 'No se pudo actualizar el producto'}`,\r\n      duration: 6000,\r\n    });\r\n  }, []);\r\n\r\n  const showProductDeleteError = useCallback((error: string, productName?: string) => {\r\n    return toast({\r\n      variant: 'destructive',\r\n      title: '‚ùå Error al eliminar producto',\r\n      description: `${productName ? `${productName}: ` : ''}${error || 'No se pudo eliminar el producto'}`,\r\n      duration: 6000,\r\n    });\r\n  }, []);\r\n\r\n  const showBulkActionError = useCallback((action: string, error: string) => {\r\n    return toast({\r\n      variant: 'destructive',\r\n      title: '‚ùå Error en acci√≥n en lote',\r\n      description: `No se pudo completar ${action}: ${error}`,\r\n      duration: 6000,\r\n    });\r\n  }, []);\r\n\r\n  const showExportError = useCallback((format: string, error: string) => {\r\n    return toast({\r\n      variant: 'destructive',\r\n      title: '‚ùå Error en exportaci√≥n',\r\n      description: `No se pudo exportar en formato ${format}: ${error}`,\r\n      duration: 6000,\r\n    });\r\n  }, []);\r\n\r\n  const showImportError = useCallback((format: string, error: string) => {\r\n    return toast({\r\n      variant: 'destructive',\r\n      title: '‚ùå Error en importaci√≥n',\r\n      description: `No se pudo importar desde ${format}: ${error}`,\r\n      duration: 6000,\r\n    });\r\n  }, []);\r\n\r\n  const showNetworkError = useCallback((action: string) => {\r\n    return toast({\r\n      variant: 'destructive',\r\n      title: 'üåê Error de conexi√≥n',\r\n      description: `No se pudo ${action}. Verifica tu conexi√≥n a internet.`,\r\n      duration: 6000,\r\n    });\r\n  }, []);\r\n\r\n  // ===================================\r\n  // NOTIFICACIONES DE ADVERTENCIA\r\n  // ===================================\r\n\r\n  const showValidationWarning = useCallback((message: string) => {\r\n    return toast({\r\n      variant: 'warning',\r\n      title: '‚ö†Ô∏è Datos incompletos',\r\n      description: message,\r\n      duration: 5000,\r\n    });\r\n  }, []);\r\n\r\n  const showDuplicateSkuWarning = useCallback((sku: string) => {\r\n    return toast({\r\n      variant: 'warning',\r\n      title: '‚ö†Ô∏è SKU duplicado',\r\n      description: `El SKU \"${sku}\" ya existe. Por favor, usa uno diferente.`,\r\n      duration: 5000,\r\n    });\r\n  }, []);\r\n\r\n  const showImageUploadWarning = useCallback((message: string) => {\r\n    return toast({\r\n      variant: 'warning',\r\n      title: '‚ö†Ô∏è Problema con im√°genes',\r\n      description: message,\r\n      duration: 5000,\r\n    });\r\n  }, []);\r\n\r\n  const showVariantWarning = useCallback((message: string) => {\r\n    return toast({\r\n      variant: 'warning',\r\n      title: '‚ö†Ô∏è Problema con variantes',\r\n      description: message,\r\n      duration: 5000,\r\n    });\r\n  }, []);\r\n\r\n  // ===================================\r\n  // NOTIFICACIONES DE INFORMACI√ìN\r\n  // ===================================\r\n\r\n  const showInfoMessage = useCallback((title: string, message: string) => {\r\n    return toast({\r\n      variant: 'info',\r\n      title: `‚ÑπÔ∏è ${title}`,\r\n      description: message,\r\n      duration: 4000,\r\n    });\r\n  }, []);\r\n\r\n  // ===================================\r\n  // RETURN DEL HOOK\r\n  // ===================================\r\n\r\n  return {\r\n    // CRUD Operations\r\n    showProductCreated,\r\n    showProductUpdated,\r\n    showProductDeleted,\r\n    showProductDuplicated,\r\n    showProductStatusChanged,\r\n    \r\n    // Inventory\r\n    showInventoryUpdated,\r\n    showLowStockAlert,\r\n    showOutOfStockAlert,\r\n    showRestockedAlert,\r\n    \r\n    // Bulk Operations\r\n    showBulkActionSuccess,\r\n    showBulkActionPartial,\r\n    \r\n    // Import/Export\r\n    showExportSuccess,\r\n    showImportSuccess,\r\n    \r\n    // Processing\r\n    showProcessingInfo,\r\n    showDataRefreshed,\r\n    \r\n    // Errors\r\n    showProductCreationError,\r\n    showProductUpdateError,\r\n    showProductDeleteError,\r\n    showBulkActionError,\r\n    showExportError,\r\n    showImportError,\r\n    showNetworkError,\r\n    \r\n    // Warnings\r\n    showValidationWarning,\r\n    showDuplicateSkuWarning,\r\n    showImageUploadWarning,\r\n    showVariantWarning,\r\n    \r\n    // Info\r\n    showInfoMessage,\r\n  };\r\n};\r\n\r\n// ===================================\r\n// EXPORT DEFAULT\r\n// ===================================\r\n\r\nexport default useProductNotifications;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["useProductNotifications","showProductCreated","useCallback","options","productId","productName","sku","price","toast","variant","title","description","toLocaleString","duration","showProductUpdated","changes","showProductDeleted","showProductDuplicated","showProductStatusChanged","newStatus","statusLabels","showInventoryUpdated","stock","showLowStockAlert","currentStock","threshold","showOutOfStockAlert","showRestockedAlert","showBulkActionSuccess","selectedCount","action","actionLabels","showBulkActionPartial","successCount","errorCount","showExportSuccess","format","recordCount","showImportSuccess","showProcessingInfo","message","showDataRefreshed","showProductCreationError","error","showProductUpdateError","showProductDeleteError","showBulkActionError","showExportError","showImportError","showNetworkError","showValidationWarning","showDuplicateSkuWarning","showImageUploadWarning","showVariantWarning","showInfoMessage"],"mappings":"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"}