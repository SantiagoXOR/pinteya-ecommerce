d1e7b2aadcfb54851be88536e96487ba
"use strict";

/* istanbul ignore next */
function cov_kgvjozxu2() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\testing\\sample-e2e-test.ts";
  var hash = "68c6c86d746d1587cfc63060ebc4af24d042f865";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\testing\\sample-e2e-test.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 29
        }
      },
      "3": {
        start: {
          line: 11,
          column: 32
        },
        end: {
          line: 11,
          column: 69
        }
      },
      "4": {
        start: {
          line: 12,
          column: 27
        },
        end: {
          line: 12,
          column: 58
        }
      },
      "5": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 13,
          column: 54
        }
      },
      "6": {
        start: {
          line: 14,
          column: 28
        },
        end: {
          line: 14,
          column: 69
        }
      },
      "7": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 18,
          column: 6
        }
      },
      "8": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 31
        }
      },
      "9": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 32,
          column: 11
        }
      },
      "10": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 37,
          column: 11
        }
      },
      "11": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 47,
          column: 11
        }
      },
      "12": {
        start: {
          line: 52,
          column: 22
        },
        end: {
          line: 52,
          column: 27
        }
      },
      "13": {
        start: {
          line: 53,
          column: 26
        },
        end: {
          line: 53,
          column: 28
        }
      },
      "14": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 91,
          column: 9
        }
      },
      "15": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 76
        }
      },
      "16": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 46
        }
      },
      "17": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 59,
          column: 42
        }
      },
      "18": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 58
        }
      },
      "19": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 27
        }
      },
      "20": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 58
        }
      },
      "21": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 75
        }
      },
      "22": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 74,
          column: 13
        }
      },
      "23": {
        start: {
          line: 68,
          column: 40
        },
        end: {
          line: 70,
          column: 18
        }
      },
      "24": {
        start: {
          line: 71,
          column: 16
        },
        end: {
          line: 71,
          column: 50
        }
      },
      "25": {
        start: {
          line: 73,
          column: 16
        },
        end: {
          line: 73,
          column: 88
        }
      },
      "26": {
        start: {
          line: 77,
          column: 31
        },
        end: {
          line: 77,
          column: 100
        }
      },
      "27": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 49
        }
      },
      "28": {
        start: {
          line: 81,
          column: 27
        },
        end: {
          line: 81,
          column: 57
        }
      },
      "29": {
        start: {
          line: 82,
          column: 34
        },
        end: {
          line: 82,
          column: 96
        }
      },
      "30": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 50
        }
      },
      "31": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 65
        }
      },
      "32": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 65
        }
      },
      "33": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 90,
          column: 14
        }
      },
      "34": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 122,
          column: 11
        }
      },
      "35": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 105,
          column: 15
        }
      },
      "36": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 114,
          column: 15
        }
      },
      "37": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 117,
          column: 14
        }
      },
      "38": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 147,
          column: 11
        }
      },
      "39": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 129,
          column: 66
        }
      },
      "40": {
        start: {
          line: 130,
          column: 29
        },
        end: {
          line: 130,
          column: 71
        }
      },
      "41": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 137,
          column: 15
        }
      },
      "42": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 141,
          column: 15
        }
      },
      "43": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 142,
          column: 28
        }
      },
      "44": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 208,
          column: 11
        }
      },
      "45": {
        start: {
          line: 150,
          column: 25
        },
        end: {
          line: 150,
          column: 57
        }
      },
      "46": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 153,
          column: 13
        }
      },
      "47": {
        start: {
          line: 152,
          column: 16
        },
        end: {
          line: 152,
          column: 56
        }
      },
      "48": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 155,
          column: 76
        }
      },
      "49": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 157,
          column: 44
        }
      },
      "50": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 162,
          column: 15
        }
      },
      "51": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 166,
          column: 15
        }
      },
      "52": {
        start: {
          line: 168,
          column: 12
        },
        end: {
          line: 197,
          column: 13
        }
      },
      "53": {
        start: {
          line: 169,
          column: 16
        },
        end: {
          line: 169,
          column: 59
        }
      },
      "54": {
        start: {
          line: 170,
          column: 16
        },
        end: {
          line: 173,
          column: 19
        }
      },
      "55": {
        start: {
          line: 176,
          column: 16
        },
        end: {
          line: 176,
          column: 82
        }
      },
      "56": {
        start: {
          line: 177,
          column: 42
        },
        end: {
          line: 181,
          column: 17
        }
      },
      "57": {
        start: {
          line: 182,
          column: 28
        },
        end: {
          line: 182,
          column: 33
        }
      },
      "58": {
        start: {
          line: 183,
          column: 16
        },
        end: {
          line: 193,
          column: 17
        }
      },
      "59": {
        start: {
          line: 184,
          column: 20
        },
        end: {
          line: 192,
          column: 21
        }
      },
      "60": {
        start: {
          line: 185,
          column: 24
        },
        end: {
          line: 187,
          column: 27
        }
      },
      "61": {
        start: {
          line: 188,
          column: 24
        },
        end: {
          line: 188,
          column: 37
        }
      },
      "62": {
        start: {
          line: 189,
          column: 24
        },
        end: {
          line: 189,
          column: 30
        }
      },
      "63": {
        start: {
          line: 191,
          column: 24
        },
        end: {
          line: 191,
          column: 33
        }
      },
      "64": {
        start: {
          line: 194,
          column: 16
        },
        end: {
          line: 196,
          column: 17
        }
      },
      "65": {
        start: {
          line: 195,
          column: 20
        },
        end: {
          line: 195,
          column: 94
        }
      },
      "66": {
        start: {
          line: 199,
          column: 33
        },
        end: {
          line: 199,
          column: 91
        }
      },
      "67": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 203,
          column: 14
        }
      },
      "68": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 266,
          column: 11
        }
      },
      "69": {
        start: {
          line: 211,
          column: 25
        },
        end: {
          line: 211,
          column: 57
        }
      },
      "70": {
        start: {
          line: 212,
          column: 12
        },
        end: {
          line: 214,
          column: 13
        }
      },
      "71": {
        start: {
          line: 213,
          column: 16
        },
        end: {
          line: 213,
          column: 56
        }
      },
      "72": {
        start: {
          line: 216,
          column: 33
        },
        end: {
          line: 216,
          column: 85
        }
      },
      "73": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 249,
          column: 13
        }
      },
      "74": {
        start: {
          line: 219,
          column: 16
        },
        end: {
          line: 222,
          column: 19
        }
      },
      "75": {
        start: {
          line: 224,
          column: 16
        },
        end: {
          line: 224,
          column: 159
        }
      },
      "76": {
        start: {
          line: 226,
          column: 16
        },
        end: {
          line: 226,
          column: 43
        }
      },
      "77": {
        start: {
          line: 229,
          column: 16
        },
        end: {
          line: 229,
          column: 87
        }
      },
      "78": {
        start: {
          line: 230,
          column: 42
        },
        end: {
          line: 233,
          column: 17
        }
      },
      "79": {
        start: {
          line: 234,
          column: 30
        },
        end: {
          line: 234,
          column: 35
        }
      },
      "80": {
        start: {
          line: 235,
          column: 16
        },
        end: {
          line: 245,
          column: 17
        }
      },
      "81": {
        start: {
          line: 236,
          column: 20
        },
        end: {
          line: 244,
          column: 21
        }
      },
      "82": {
        start: {
          line: 237,
          column: 24
        },
        end: {
          line: 239,
          column: 27
        }
      },
      "83": {
        start: {
          line: 240,
          column: 24
        },
        end: {
          line: 240,
          column: 39
        }
      },
      "84": {
        start: {
          line: 241,
          column: 24
        },
        end: {
          line: 241,
          column: 30
        }
      },
      "85": {
        start: {
          line: 243,
          column: 24
        },
        end: {
          line: 243,
          column: 33
        }
      },
      "86": {
        start: {
          line: 246,
          column: 16
        },
        end: {
          line: 248,
          column: 17
        }
      },
      "87": {
        start: {
          line: 247,
          column: 20
        },
        end: {
          line: 247,
          column: 78
        }
      },
      "88": {
        start: {
          line: 251,
          column: 12
        },
        end: {
          line: 251,
          column: 44
        }
      },
      "89": {
        start: {
          line: 253,
          column: 12
        },
        end: {
          line: 257,
          column: 15
        }
      },
      "90": {
        start: {
          line: 258,
          column: 12
        },
        end: {
          line: 261,
          column: 14
        }
      },
      "91": {
        start: {
          line: 268,
          column: 8
        },
        end: {
          line: 331,
          column: 11
        }
      },
      "92": {
        start: {
          line: 269,
          column: 25
        },
        end: {
          line: 269,
          column: 57
        }
      },
      "93": {
        start: {
          line: 270,
          column: 12
        },
        end: {
          line: 272,
          column: 13
        }
      },
      "94": {
        start: {
          line: 271,
          column: 16
        },
        end: {
          line: 271,
          column: 56
        }
      },
      "95": {
        start: {
          line: 274,
          column: 12
        },
        end: {
          line: 277,
          column: 15
        }
      },
      "96": {
        start: {
          line: 279,
          column: 36
        },
        end: {
          line: 279,
          column: 91
        }
      },
      "97": {
        start: {
          line: 281,
          column: 12
        },
        end: {
          line: 316,
          column: 13
        }
      },
      "98": {
        start: {
          line: 282,
          column: 16
        },
        end: {
          line: 285,
          column: 19
        }
      },
      "99": {
        start: {
          line: 287,
          column: 16
        },
        end: {
          line: 289,
          column: 19
        }
      },
      "100": {
        start: {
          line: 291,
          column: 16
        },
        end: {
          line: 291,
          column: 46
        }
      },
      "101": {
        start: {
          line: 294,
          column: 16
        },
        end: {
          line: 294,
          column: 88
        }
      },
      "102": {
        start: {
          line: 295,
          column: 42
        },
        end: {
          line: 300,
          column: 17
        }
      },
      "103": {
        start: {
          line: 301,
          column: 30
        },
        end: {
          line: 301,
          column: 35
        }
      },
      "104": {
        start: {
          line: 302,
          column: 16
        },
        end: {
          line: 312,
          column: 17
        }
      },
      "105": {
        start: {
          line: 303,
          column: 20
        },
        end: {
          line: 311,
          column: 21
        }
      },
      "106": {
        start: {
          line: 304,
          column: 24
        },
        end: {
          line: 306,
          column: 27
        }
      },
      "107": {
        start: {
          line: 307,
          column: 24
        },
        end: {
          line: 307,
          column: 39
        }
      },
      "108": {
        start: {
          line: 308,
          column: 24
        },
        end: {
          line: 308,
          column: 30
        }
      },
      "109": {
        start: {
          line: 310,
          column: 24
        },
        end: {
          line: 310,
          column: 33
        }
      },
      "110": {
        start: {
          line: 313,
          column: 16
        },
        end: {
          line: 315,
          column: 17
        }
      },
      "111": {
        start: {
          line: 314,
          column: 20
        },
        end: {
          line: 314,
          column: 81
        }
      },
      "112": {
        start: {
          line: 318,
          column: 12
        },
        end: {
          line: 318,
          column: 44
        }
      },
      "113": {
        start: {
          line: 320,
          column: 12
        },
        end: {
          line: 322,
          column: 15
        }
      },
      "114": {
        start: {
          line: 323,
          column: 12
        },
        end: {
          line: 326,
          column: 14
        }
      },
      "115": {
        start: {
          line: 333,
          column: 8
        },
        end: {
          line: 366,
          column: 11
        }
      },
      "116": {
        start: {
          line: 334,
          column: 25
        },
        end: {
          line: 334,
          column: 57
        }
      },
      "117": {
        start: {
          line: 335,
          column: 12
        },
        end: {
          line: 337,
          column: 13
        }
      },
      "118": {
        start: {
          line: 336,
          column: 16
        },
        end: {
          line: 336,
          column: 56
        }
      },
      "119": {
        start: {
          line: 339,
          column: 12
        },
        end: {
          line: 339,
          column: 76
        }
      },
      "120": {
        start: {
          line: 341,
          column: 12
        },
        end: {
          line: 341,
          column: 44
        }
      },
      "121": {
        start: {
          line: 343,
          column: 12
        },
        end: {
          line: 345,
          column: 15
        }
      },
      "122": {
        start: {
          line: 347,
          column: 12
        },
        end: {
          line: 347,
          column: 55
        }
      },
      "123": {
        start: {
          line: 349,
          column: 12
        },
        end: {
          line: 352,
          column: 15
        }
      },
      "124": {
        start: {
          line: 353,
          column: 12
        },
        end: {
          line: 356,
          column: 15
        }
      },
      "125": {
        start: {
          line: 357,
          column: 30
        },
        end: {
          line: 357,
          column: 85
        }
      },
      "126": {
        start: {
          line: 358,
          column: 12
        },
        end: {
          line: 361,
          column: 14
        }
      },
      "127": {
        start: {
          line: 368,
          column: 8
        },
        end: {
          line: 405,
          column: 11
        }
      },
      "128": {
        start: {
          line: 369,
          column: 25
        },
        end: {
          line: 369,
          column: 57
        }
      },
      "129": {
        start: {
          line: 370,
          column: 12
        },
        end: {
          line: 372,
          column: 13
        }
      },
      "130": {
        start: {
          line: 371,
          column: 16
        },
        end: {
          line: 371,
          column: 56
        }
      },
      "131": {
        start: {
          line: 374,
          column: 35
        },
        end: {
          line: 374,
          column: 94
        }
      },
      "132": {
        start: {
          line: 375,
          column: 36
        },
        end: {
          line: 375,
          column: 41
        }
      },
      "133": {
        start: {
          line: 376,
          column: 12
        },
        end: {
          line: 395,
          column: 13
        }
      },
      "134": {
        start: {
          line: 378,
          column: 16
        },
        end: {
          line: 381,
          column: 19
        }
      },
      "135": {
        start: {
          line: 382,
          column: 16
        },
        end: {
          line: 382,
          column: 45
        }
      },
      "136": {
        start: {
          line: 383,
          column: 16
        },
        end: {
          line: 383,
          column: 48
        }
      },
      "137": {
        start: {
          line: 384,
          column: 16
        },
        end: {
          line: 384,
          column: 41
        }
      },
      "138": {
        start: {
          line: 386,
          column: 16
        },
        end: {
          line: 388,
          column: 19
        }
      },
      "139": {
        start: {
          line: 391,
          column: 16
        },
        end: {
          line: 391,
          column: 85
        }
      },
      "140": {
        start: {
          line: 392,
          column: 16
        },
        end: {
          line: 394,
          column: 19
        }
      },
      "141": {
        start: {
          line: 396,
          column: 12
        },
        end: {
          line: 400,
          column: 14
        }
      },
      "142": {
        start: {
          line: 407,
          column: 8
        },
        end: {
          line: 428,
          column: 11
        }
      },
      "143": {
        start: {
          line: 408,
          column: 25
        },
        end: {
          line: 408,
          column: 57
        }
      },
      "144": {
        start: {
          line: 409,
          column: 12
        },
        end: {
          line: 411,
          column: 13
        }
      },
      "145": {
        start: {
          line: 410,
          column: 16
        },
        end: {
          line: 410,
          column: 56
        }
      },
      "146": {
        start: {
          line: 413,
          column: 12
        },
        end: {
          line: 415,
          column: 15
        }
      },
      "147": {
        start: {
          line: 417,
          column: 34
        },
        end: {
          line: 417,
          column: 76
        }
      },
      "148": {
        start: {
          line: 418,
          column: 12
        },
        end: {
          line: 423,
          column: 14
        }
      },
      "149": {
        start: {
          line: 433,
          column: 21
        },
        end: {
          line: 433,
          column: 53
        }
      },
      "150": {
        start: {
          line: 434,
          column: 8
        },
        end: {
          line: 436,
          column: 9
        }
      },
      "151": {
        start: {
          line: 435,
          column: 12
        },
        end: {
          line: 435,
          column: 68
        }
      },
      "152": {
        start: {
          line: 437,
          column: 8
        },
        end: {
          line: 437,
          column: 62
        }
      },
      "153": {
        start: {
          line: 438,
          column: 8
        },
        end: {
          line: 449,
          column: 9
        }
      },
      "154": {
        start: {
          line: 439,
          column: 12
        },
        end: {
          line: 448,
          column: 13
        }
      },
      "155": {
        start: {
          line: 440,
          column: 16
        },
        end: {
          line: 443,
          column: 19
        }
      },
      "156": {
        start: {
          line: 444,
          column: 16
        },
        end: {
          line: 444,
          column: 65
        }
      },
      "157": {
        start: {
          line: 446,
          column: 16
        },
        end: {
          line: 446,
          column: 69
        }
      },
      "158": {
        start: {
          line: 457,
          column: 8
        },
        end: {
          line: 457,
          column: 18
        }
      },
      "159": {
        start: {
          line: 462,
          column: 21
        },
        end: {
          line: 462,
          column: 47
        }
      },
      "160": {
        start: {
          line: 463,
          column: 8
        },
        end: {
          line: 482,
          column: 9
        }
      },
      "161": {
        start: {
          line: 464,
          column: 27
        },
        end: {
          line: 464,
          column: 47
        }
      },
      "162": {
        start: {
          line: 465,
          column: 12
        },
        end: {
          line: 465,
          column: 47
        }
      },
      "163": {
        start: {
          line: 466,
          column: 12
        },
        end: {
          line: 466,
          column: 47
        }
      },
      "164": {
        start: {
          line: 467,
          column: 12
        },
        end: {
          line: 467,
          column: 40
        }
      },
      "165": {
        start: {
          line: 468,
          column: 12
        },
        end: {
          line: 468,
          column: 79
        }
      },
      "166": {
        start: {
          line: 469,
          column: 12
        },
        end: {
          line: 469,
          column: 65
        }
      },
      "167": {
        start: {
          line: 470,
          column: 12
        },
        end: {
          line: 472,
          column: 13
        }
      },
      "168": {
        start: {
          line: 471,
          column: 16
        },
        end: {
          line: 471,
          column: 73
        }
      },
      "169": {
        start: {
          line: 473,
          column: 12
        },
        end: {
          line: 473,
          column: 40
        }
      },
      "170": {
        start: {
          line: 474,
          column: 12
        },
        end: {
          line: 478,
          column: 13
        }
      },
      "171": {
        start: {
          line: 475,
          column: 16
        },
        end: {
          line: 475,
          column: 65
        }
      },
      "172": {
        start: {
          line: 477,
          column: 16
        },
        end: {
          line: 477,
          column: 84
        }
      },
      "173": {
        start: {
          line: 480,
          column: 12
        },
        end: {
          line: 480,
          column: 73
        }
      },
      "174": {
        start: {
          line: 481,
          column: 12
        },
        end: {
          line: 481,
          column: 28
        }
      },
      "175": {
        start: {
          line: 486,
          column: 0
        },
        end: {
          line: 490,
          column: 1
        }
      },
      "176": {
        start: {
          line: 487,
          column: 20
        },
        end: {
          line: 487,
          column: 62
        }
      },
      "177": {
        start: {
          line: 488,
          column: 4
        },
        end: {
          line: 488,
          column: 57
        }
      },
      "178": {
        start: {
          line: 489,
          column: 4
        },
        end: {
          line: 489,
          column: 31
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 15,
            column: 9
          },
          end: {
            line: 15,
            column: 33
          }
        },
        loc: {
          start: {
            line: 15,
            column: 39
          },
          end: {
            line: 19,
            column: 1
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 50
          },
          end: {
            line: 48,
            column: 5
          }
        },
        line: 21
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 51,
            column: 6
          },
          end: {
            line: 51,
            column: 7
          }
        },
        loc: {
          start: {
            line: 51,
            column: 22
          },
          end: {
            line: 92,
            column: 5
          }
        },
        line: 51
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 95,
            column: 6
          },
          end: {
            line: 95,
            column: 7
          }
        },
        loc: {
          start: {
            line: 95,
            column: 35
          },
          end: {
            line: 123,
            column: 5
          }
        },
        line: 95
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 96,
            column: 75
          },
          end: {
            line: 96,
            column: 76
          }
        },
        loc: {
          start: {
            line: 96,
            column: 85
          },
          end: {
            line: 118,
            column: 9
          }
        },
        line: 96
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 126,
            column: 6
          },
          end: {
            line: 126,
            column: 7
          }
        },
        loc: {
          start: {
            line: 126,
            column: 31
          },
          end: {
            line: 429,
            column: 5
          }
        },
        line: 126
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 128,
            column: 78
          },
          end: {
            line: 128,
            column: 79
          }
        },
        loc: {
          start: {
            line: 128,
            column: 88
          },
          end: {
            line: 143,
            column: 9
          }
        },
        line: 128
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 149,
            column: 78
          },
          end: {
            line: 149,
            column: 79
          }
        },
        loc: {
          start: {
            line: 149,
            column: 88
          },
          end: {
            line: 204,
            column: 9
          }
        },
        line: 149
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 210,
            column: 87
          },
          end: {
            line: 210,
            column: 88
          }
        },
        loc: {
          start: {
            line: 210,
            column: 97
          },
          end: {
            line: 262,
            column: 9
          }
        },
        line: 210
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 268,
            column: 76
          },
          end: {
            line: 268,
            column: 77
          }
        },
        loc: {
          start: {
            line: 268,
            column: 86
          },
          end: {
            line: 327,
            column: 9
          }
        },
        line: 268
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 333,
            column: 80
          },
          end: {
            line: 333,
            column: 81
          }
        },
        loc: {
          start: {
            line: 333,
            column: 90
          },
          end: {
            line: 362,
            column: 9
          }
        },
        line: 333
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 368,
            column: 76
          },
          end: {
            line: 368,
            column: 77
          }
        },
        loc: {
          start: {
            line: 368,
            column: 86
          },
          end: {
            line: 401,
            column: 9
          }
        },
        line: 368
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 407,
            column: 76
          },
          end: {
            line: 407,
            column: 77
          }
        },
        loc: {
          start: {
            line: 407,
            column: 86
          },
          end: {
            line: 424,
            column: 9
          }
        },
        line: 407
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 432,
            column: 6
          },
          end: {
            line: 432,
            column: 7
          }
        },
        loc: {
          start: {
            line: 432,
            column: 62
          },
          end: {
            line: 450,
            column: 5
          }
        },
        line: 432
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 453,
            column: 6
          },
          end: {
            line: 453,
            column: 7
          }
        },
        loc: {
          start: {
            line: 453,
            column: 33
          },
          end: {
            line: 458,
            column: 5
          }
        },
        line: 453
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 461,
            column: 6
          },
          end: {
            line: 461,
            column: 7
          }
        },
        loc: {
          start: {
            line: 461,
            column: 32
          },
          end: {
            line: 483,
            column: 5
          }
        },
        line: 461
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 11
          },
          end: {
            line: 18,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 16,
            column: 35
          },
          end: {
            line: 16,
            column: 38
          }
        }, {
          start: {
            line: 16,
            column: 41
          },
          end: {
            line: 18,
            column: 5
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 16,
            column: 11
          },
          end: {
            line: 16,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 11
          },
          end: {
            line: 16,
            column: 14
          }
        }, {
          start: {
            line: 16,
            column: 18
          },
          end: {
            line: 16,
            column: 32
          }
        }],
        line: 16
      },
      "2": {
        loc: {
          start: {
            line: 21,
            column: 16
          },
          end: {
            line: 21,
            column: 49
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 21,
            column: 26
          },
          end: {
            line: 21,
            column: 49
          }
        }],
        line: 21
      },
      "3": {
        loc: {
          start: {
            line: 68,
            column: 127
          },
          end: {
            line: 68,
            column: 181
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 68,
            column: 152
          },
          end: {
            line: 68,
            column: 165
          }
        }, {
          start: {
            line: 68,
            column: 168
          },
          end: {
            line: 68,
            column: 181
          }
        }],
        line: 68
      },
      "4": {
        loc: {
          start: {
            line: 77,
            column: 67
          },
          end: {
            line: 77,
            column: 99
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 77,
            column: 77
          },
          end: {
            line: 77,
            column: 88
          }
        }, {
          start: {
            line: 77,
            column: 91
          },
          end: {
            line: 77,
            column: 99
          }
        }],
        line: 77
      },
      "5": {
        loc: {
          start: {
            line: 89,
            column: 32
          },
          end: {
            line: 89,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 89,
            column: 32
          },
          end: {
            line: 89,
            column: 54
          }
        }, {
          start: {
            line: 89,
            column: 58
          },
          end: {
            line: 89,
            column: 67
          }
        }],
        line: 89
      },
      "6": {
        loc: {
          start: {
            line: 151,
            column: 12
          },
          end: {
            line: 153,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 151,
            column: 12
          },
          end: {
            line: 153,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 151
      },
      "7": {
        loc: {
          start: {
            line: 194,
            column: 16
          },
          end: {
            line: 196,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 194,
            column: 16
          },
          end: {
            line: 196,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 194
      },
      "8": {
        loc: {
          start: {
            line: 212,
            column: 12
          },
          end: {
            line: 214,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 212,
            column: 12
          },
          end: {
            line: 214,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 212
      },
      "9": {
        loc: {
          start: {
            line: 246,
            column: 16
          },
          end: {
            line: 248,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 246,
            column: 16
          },
          end: {
            line: 248,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 246
      },
      "10": {
        loc: {
          start: {
            line: 270,
            column: 12
          },
          end: {
            line: 272,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 270,
            column: 12
          },
          end: {
            line: 272,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 270
      },
      "11": {
        loc: {
          start: {
            line: 313,
            column: 16
          },
          end: {
            line: 315,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 313,
            column: 16
          },
          end: {
            line: 315,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 313
      },
      "12": {
        loc: {
          start: {
            line: 335,
            column: 12
          },
          end: {
            line: 337,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 335,
            column: 12
          },
          end: {
            line: 337,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 335
      },
      "13": {
        loc: {
          start: {
            line: 370,
            column: 12
          },
          end: {
            line: 372,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 370,
            column: 12
          },
          end: {
            line: 372,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 370
      },
      "14": {
        loc: {
          start: {
            line: 409,
            column: 12
          },
          end: {
            line: 411,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 409,
            column: 12
          },
          end: {
            line: 411,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 409
      },
      "15": {
        loc: {
          start: {
            line: 434,
            column: 8
          },
          end: {
            line: 436,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 434,
            column: 8
          },
          end: {
            line: 436,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 434
      },
      "16": {
        loc: {
          start: {
            line: 468,
            column: 37
          },
          end: {
            line: 468,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 468,
            column: 54
          },
          end: {
            line: 468,
            column: 63
          }
        }, {
          start: {
            line: 468,
            column: 66
          },
          end: {
            line: 468,
            column: 75
          }
        }],
        line: 468
      },
      "17": {
        loc: {
          start: {
            line: 470,
            column: 12
          },
          end: {
            line: 472,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 470,
            column: 12
          },
          end: {
            line: 472,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 470
      },
      "18": {
        loc: {
          start: {
            line: 474,
            column: 12
          },
          end: {
            line: 478,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 474,
            column: 12
          },
          end: {
            line: 478,
            column: 13
          }
        }, {
          start: {
            line: 476,
            column: 19
          },
          end: {
            line: 478,
            column: 13
          }
        }],
        line: 474
      },
      "19": {
        loc: {
          start: {
            line: 486,
            column: 0
          },
          end: {
            line: 490,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 486,
            column: 0
          },
          end: {
            line: 490,
            column: 1
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 486
      },
      "20": {
        loc: {
          start: {
            line: 487,
            column: 20
          },
          end: {
            line: 487,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 487,
            column: 20
          },
          end: {
            line: 487,
            column: 35
          }
        }, {
          start: {
            line: 487,
            column: 39
          },
          end: {
            line: 487,
            column: 62
          }
        }],
        line: 487
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\testing\\sample-e2e-test.ts"],
      sourcesContent: ["import { AutomatedTestFramework } from './automated-test-framework';\r\nimport { ScreenshotManager } from './screenshot-manager';\r\nimport { ReportGenerator } from './report-generator';\r\nimport path from 'path';\r\n\r\n/**\r\n * Test E2E de ejemplo que demuestra todas las funcionalidades del framework\r\n */\r\nexport class SampleE2ETest {\r\n  private testFramework: AutomatedTestFramework;\r\n  private screenshotManager: ScreenshotManager;\r\n  private reportGenerator: ReportGenerator;\r\n  private baseUrl: string;\r\n\r\n  constructor(baseUrl: string = 'http://localhost:3000') {\r\n    this.baseUrl = baseUrl;\r\n    \r\n    // Inicializar framework de testing\r\n    this.testFramework = new AutomatedTestFramework(\r\n      'E2E Test - Flujo de Compra Completo',\r\n      'Test automatizado que verifica el flujo completo de compra en el e-commerce',\r\n      {\r\n        reportsDir: path.join(process.cwd(), 'test-reports'),\r\n        screenshotsDir: path.join(process.cwd(), 'test-screenshots'),\r\n        tags: ['e2e', 'purchase-flow', 'critical']\r\n      }\r\n    );\r\n\r\n    // Inicializar manager de screenshots\r\n    this.screenshotManager = new ScreenshotManager({\r\n      screenshotsDir: path.join(process.cwd(), 'test-screenshots'),\r\n      browserType: 'chromium'\r\n    });\r\n\r\n    // Inicializar generador de reportes\r\n    this.reportGenerator = new ReportGenerator({\r\n      outputDir: path.join(process.cwd(), 'test-reports'),\r\n      includeScreenshots: true,\r\n      generateHtml: true,\r\n      generateJson: true,\r\n      theme: 'light',\r\n      includeTimeline: true,\r\n      includeSummaryCharts: true\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Ejecuta el test completo\r\n   */\r\n  async runTest(): Promise<{\r\n    success: boolean;\r\n    reportPath: string;\r\n    htmlReportPath?: string | undefined;\r\n  }> {\r\n    let success = false;\r\n    let screenshots: any[] = [];\r\n\r\n    try {\r\n      console.log('\uD83D\uDE80 Iniciando test E2E - Flujo de Compra Completo');\r\n      \r\n      // Configurar entorno del test\r\n      await this.setupTestEnvironment();\r\n\r\n      // Ejecutar pasos del test\r\n      await this.executeTestSteps();\r\n\r\n      // Recopilar screenshots\r\n      screenshots = await this.collectScreenshots();\r\n\r\n      success = true;\r\n      console.log('\u2705 Test completado exitosamente');\r\n\r\n    } catch (error) {\r\n      console.error('\u274C Error durante la ejecuci\xF3n del test:', error);\r\n      \r\n      // Capturar screenshot de error\r\n      try {\r\n        const errorScreenshot = await this.screenshotManager.captureScreenshot(\r\n          'final-error',\r\n          `Error final del test: ${error instanceof Error ? error.message : String(error)}`,\r\n          { fullPage: true }\r\n        );\r\n        screenshots.push(errorScreenshot);\r\n      } catch (screenshotError) {\r\n        console.error('Error capturando screenshot de error:', screenshotError);\r\n      }\r\n\r\n    } finally {\r\n      // Finalizar test y generar reportes\r\n      const reportPath = await this.testFramework.finishTest(\r\n        success ? 'completed' : 'failed'\r\n      );\r\n\r\n      // Cerrar navegador\r\n      await this.screenshotManager.close();\r\n\r\n      // Generar reporte completo\r\n      const report = this.testFramework.getReport();\r\n      const reportResults = await this.reportGenerator.generateReport(report, screenshots);\r\n\r\n      console.log('\uD83D\uDCCA Reportes generados:');\r\n      console.log(`   \uD83D\uDCC4 JSON: ${reportResults.jsonPath}`);\r\n      console.log(`   \uD83C\uDF10 HTML: ${reportResults.htmlPath}`);\r\n\r\n      return {\r\n        success,\r\n        reportPath,\r\n        htmlReportPath: reportResults.htmlPath || undefined\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Configura el entorno del test\r\n   */\r\n  private async setupTestEnvironment(): Promise<void> {\r\n    await this.testFramework.executeStep(\r\n      'Configurar entorno de test',\r\n      async () => {\r\n        // Inicializar navegador\r\n        await this.screenshotManager.initialize({\r\n          headless: false, // Cambiar a true para ejecuci\xF3n sin interfaz\r\n          viewport: { width: 1920, height: 1080 },\r\n          userAgent: 'AutomatedTestFramework/1.0.0'\r\n        });\r\n\r\n        // Configurar informaci\xF3n del entorno\r\n        this.testFramework.setEnvironment({\r\n          browser: 'Chromium',\r\n          viewport: { width: 1920, height: 1080 },\r\n          url: this.baseUrl\r\n        });\r\n\r\n        return { initialized: true };\r\n      },\r\n      {\r\n        category: 'setup',\r\n        severity: 'critical',\r\n        captureScreenshot: false\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Ejecuta todos los pasos del test\r\n   */\r\n  private async executeTestSteps(): Promise<void> {\r\n    // Paso 1: Navegar a la p\xE1gina principal\r\n    await this.testFramework.executeStep(\r\n      'Navegar a la p\xE1gina principal',\r\n      async () => {\r\n        await this.screenshotManager.navigateTo(this.baseUrl);\r\n        const pageInfo = await this.screenshotManager.getPageInfo();\r\n        \r\n        // Validar que la p\xE1gina se carg\xF3 correctamente\r\n        await this.validatePageStructure('homepage', [\r\n          'header', 'nav', 'main', '[data-testid=\"product-card\"]'\r\n        ]);\r\n        \r\n        // Capturar screenshot de la p\xE1gina principal\r\n        await this.screenshotManager.captureScreenshot(\r\n          'homepage-loaded',\r\n          'P\xE1gina principal cargada correctamente',\r\n          { fullPage: true }\r\n        );\r\n\r\n        return pageInfo;\r\n      },\r\n      {\r\n        category: 'action',\r\n        severity: 'high',\r\n        captureScreenshot: true\r\n      }\r\n    );\r\n\r\n    // Paso 2: Buscar productos\r\n    await this.testFramework.executeStep(\r\n      'Buscar productos en la tienda',\r\n      async () => {\r\n        const page = this.screenshotManager.getPage();\r\n        if (!page) {throw new Error('P\xE1gina no disponible');}\r\n\r\n        // Navegar a la secci\xF3n de productos\r\n        await this.screenshotManager.navigateTo(`${this.baseUrl}/shop`);\r\n        \r\n        // Esperar a que los productos se carguen\r\n        await page.waitForTimeout(2000);\r\n        \r\n        // Validar estructura de p\xE1gina de productos\r\n        await this.validatePageStructure('products-page', [\r\n          '[data-testid=\"product-card\"]', '.product-grid, .products-container'\r\n        ]);\r\n        \r\n        // Capturar screenshot de los productos\r\n        await this.screenshotManager.captureScreenshot(\r\n          'products-page',\r\n          'P\xE1gina de productos cargada',\r\n          { fullPage: true }\r\n        );\r\n\r\n        // Buscar productos con estrategia de espera robusta y manejo de errores\r\n        try {\r\n          await page.waitForLoadState('networkidle');\r\n          await page.waitForSelector('[data-testid=\"product-card\"]', {\r\n            timeout: 15000,\r\n            state: 'visible'\r\n          });\r\n        } catch (error) {\r\n          // Fallback: intentar con selectores alternativos\r\n          console.warn('Selector principal fall\xF3, intentando fallbacks...');\r\n          const fallbackSelectors = ['.product-card', '.product-item', '[class*=\"product\"]'];\r\n          let found = false;\r\n          \r\n          for (const selector of fallbackSelectors) {\r\n            try {\r\n              await page.waitForSelector(selector, { timeout: 5000 });\r\n              found = true;\r\n              break;\r\n            } catch (e) {\r\n              continue;\r\n            }\r\n          }\r\n          \r\n          if (!found) {\r\n            throw new Error('No se pudieron encontrar productos con ning\xFAn selector');\r\n          }\r\n        }\r\n        \r\n        // Verificar que hay productos\r\n        const productCount = await page.locator('[data-testid=\"product-card\"]').count();\r\n        \r\n        return {\r\n          productsFound: productCount,\r\n          url: page.url()\r\n        };\r\n      },\r\n      {\r\n        category: 'action',\r\n        severity: 'high',\r\n        captureScreenshot: true\r\n      }\r\n    );\r\n\r\n    // Paso 3: Seleccionar un producto\r\n    await this.testFramework.executeStep(\r\n      'Seleccionar primer producto disponible',\r\n      async () => {\r\n        const page = this.screenshotManager.getPage();\r\n        if (!page) {throw new Error('P\xE1gina no disponible');}\r\n\r\n        // Buscar el primer producto disponible\r\n        const firstProduct = page.locator('[data-testid=\"product-card\"]').first();\r\n        \r\n        // Esperar a que el producto sea visible con espera robusta y manejo de errores\r\n        try {\r\n          await firstProduct.waitFor({ state: 'visible', timeout: 15000 });\r\n          \r\n          // Capturar screenshot del producto seleccionado\r\n          await this.screenshotManager.captureElementScreenshot(\r\n            '[data-testid=\"product-card\"]',\r\n            'selected-product',\r\n            'Producto seleccionado para compra'\r\n          );\r\n          \r\n          // Hacer clic en el producto\r\n          await firstProduct.click();\r\n        } catch (error) {\r\n          // Fallback: intentar con otros selectores\r\n          console.warn('Fallo al seleccionar producto, intentando fallbacks...');\r\n          const fallbackSelectors = ['.product-card:first-child', '.product-item:first-child'];\r\n          let clicked = false;\r\n          \r\n          for (const selector of fallbackSelectors) {\r\n            try {\r\n              await page.click(selector, { timeout: 5000 });\r\n              clicked = true;\r\n              break;\r\n            } catch (e) {\r\n              continue;\r\n            }\r\n          }\r\n          \r\n          if (!clicked) {\r\n            throw new Error('No se pudo seleccionar ning\xFAn producto');\r\n          }\r\n        }\r\n        \r\n        // Esperar a que se cargue la p\xE1gina del producto y validar estructura\r\n        await page.waitForTimeout(2000);\r\n        \r\n        // Validar estructura de p\xE1gina de producto\r\n        await this.validatePageStructure('product-page', [\r\n          '[data-testid=\"add-to-cart-btn\"]', '.product-title, h1', '.price'\r\n        ]);\r\n        \r\n        return {\r\n          productSelected: true,\r\n          currentUrl: page.url()\r\n        };\r\n      },\r\n      {\r\n        category: 'action',\r\n        severity: 'high',\r\n        captureScreenshot: true\r\n      }\r\n    );\r\n\r\n    // Paso 4: Agregar al carrito\r\n    await this.testFramework.executeStep(\r\n      'Agregar producto al carrito',\r\n      async () => {\r\n        const page = this.screenshotManager.getPage();\r\n        if (!page) {throw new Error('P\xE1gina no disponible');}\r\n\r\n        // Validar estructura antes de agregar al carrito\r\n        await this.validatePageStructure('product-detail', [\r\n          '[data-testid=\"add-to-cart-btn\"]', '.product-info'\r\n        ]);\r\n        \r\n        // Buscar bot\xF3n de agregar al carrito\r\n        const addToCartButton = page.locator('[data-testid=\"add-to-cart-btn\"]').first();\r\n        \r\n        // Esperar a que el bot\xF3n sea visible con espera robusta y manejo de errores\r\n        try {\r\n          await addToCartButton.waitFor({ state: 'visible', timeout: 15000 });\r\n          \r\n          // Capturar screenshot antes de agregar al carrito\r\n          await this.screenshotManager.captureScreenshot(\r\n            'before-add-to-cart',\r\n            'Antes de agregar producto al carrito',\r\n            { fullPage: true }\r\n          );\r\n          \r\n          // Hacer clic en agregar al carrito\r\n          await addToCartButton.click();\r\n        } catch (error) {\r\n          // Fallback: intentar con otros selectores de bot\xF3n\r\n          console.warn('Fallo bot\xF3n agregar al carrito, intentando fallbacks...');\r\n          const fallbackSelectors = [\r\n            'button:has-text(\"Agregar\")',\r\n            'button:has-text(\"Add to Cart\")',\r\n            '.add-to-cart',\r\n            '[class*=\"add-cart\"]'\r\n          ];\r\n          let clicked = false;\r\n          \r\n          for (const selector of fallbackSelectors) {\r\n            try {\r\n              await page.click(selector, { timeout: 5000 });\r\n              clicked = true;\r\n              break;\r\n            } catch (e) {\r\n              continue;\r\n            }\r\n          }\r\n          \r\n          if (!clicked) {\r\n            throw new Error('No se pudo agregar el producto al carrito');\r\n          }\r\n        }\r\n        \r\n        // Esperar confirmaci\xF3n\r\n        await page.waitForTimeout(2000);\r\n        \r\n        // Capturar screenshot despu\xE9s de agregar al carrito\r\n        await this.screenshotManager.captureScreenshot(\r\n          'after-add-to-cart',\r\n          'Producto agregado al carrito exitosamente',\r\n          { fullPage: true }\r\n        );\r\n        \r\n        return {\r\n          addedToCart: true,\r\n          timestamp: new Date().toISOString()\r\n        };\r\n      },\r\n      {\r\n        category: 'action',\r\n        severity: 'critical',\r\n        captureScreenshot: true\r\n      }\r\n    );\r\n\r\n    // Paso 5: Verificar carrito\r\n    await this.testFramework.executeStep(\r\n      'Verificar contenido del carrito',\r\n      async () => {\r\n        const page = this.screenshotManager.getPage();\r\n        if (!page) {throw new Error('P\xE1gina no disponible');}\r\n\r\n        // Navegar al carrito\r\n        await this.screenshotManager.navigateTo(`${this.baseUrl}/cart`);\r\n        \r\n        // Esperar a que se cargue el carrito\r\n        await page.waitForTimeout(2000);\r\n        \r\n        // Capturar screenshot del carrito\r\n        await this.screenshotManager.captureScreenshot(\r\n          'cart-contents',\r\n          'Contenido del carrito de compras',\r\n          { fullPage: true }\r\n        );\r\n        \r\n        // Verificar que hay items en el carrito con espera robusta\r\n        await page.waitForLoadState('networkidle');\r\n        \r\n        // Validar estructura de p\xE1gina de carrito\r\n        await this.validatePageStructure('cart-page', [\r\n          '[data-testid=\"clear-cart-btn\"]', 'button:has-text(\"Finalizar Compra\")'\r\n        ]);\r\n        \r\n        await page.waitForSelector('[data-testid=\"clear-cart-btn\"]', {\r\n          timeout: 15000,\r\n          state: 'visible'\r\n        });\r\n        \r\n        const cartItems = await page.locator('[data-testid=\"cart-item\"]').count();\r\n        \r\n        return {\r\n          cartItemCount: cartItems,\r\n          cartVerified: cartItems > 0\r\n        };\r\n      },\r\n      {\r\n        category: 'verification',\r\n        severity: 'high',\r\n        captureScreenshot: true\r\n      }\r\n    );\r\n\r\n    // Paso 6: Proceso de checkout (simulado)\r\n    await this.testFramework.executeStep(\r\n      'Simular proceso de checkout',\r\n      async () => {\r\n        const page = this.screenshotManager.getPage();\r\n        if (!page) {throw new Error('P\xE1gina no disponible');}\r\n\r\n        // Buscar bot\xF3n de checkout\r\n        const checkoutButton = page.locator('button:has-text(\"Finalizar Compra\")').first();\r\n        \r\n        let checkoutInitiated = false;\r\n        \r\n        try {\r\n          // Intentar hacer clic en checkout si existe\r\n          await checkoutButton.waitFor({ state: 'visible', timeout: 5000 });\r\n          await checkoutButton.click();\r\n          await page.waitForTimeout(2000);\r\n          checkoutInitiated = true;\r\n          \r\n          // Capturar screenshot del proceso de checkout\r\n          await this.screenshotManager.captureScreenshot(\r\n            'checkout-process',\r\n            'Proceso de checkout iniciado',\r\n            { fullPage: true }\r\n          );\r\n          \r\n        } catch (error) {\r\n          // Si no se encuentra el bot\xF3n de checkout, simular el proceso\r\n          console.log('Bot\xF3n de checkout no encontrado, simulando proceso...');\r\n          \r\n          await this.screenshotManager.captureScreenshot(\r\n            'checkout-simulation',\r\n            'Simulaci\xF3n de proceso de checkout',\r\n            { fullPage: true }\r\n          );\r\n        }\r\n        \r\n        return {\r\n          checkoutInitiated,\r\n          simulatedCheckout: !checkoutInitiated,\r\n          timestamp: new Date().toISOString()\r\n        };\r\n      },\r\n      {\r\n        category: 'action',\r\n        severity: 'medium',\r\n        captureScreenshot: true\r\n      }\r\n    );\r\n\r\n    // Paso 7: Verificaci\xF3n final\r\n    await this.testFramework.executeStep(\r\n      'Verificaci\xF3n final del test',\r\n      async () => {\r\n        const page = this.screenshotManager.getPage();\r\n        if (!page) {throw new Error('P\xE1gina no disponible');}\r\n\r\n        // Capturar screenshot final\r\n        await this.screenshotManager.captureScreenshot(\r\n          'final-state',\r\n          'Estado final del test E2E',\r\n          { fullPage: true }\r\n        );\r\n        \r\n        // Obtener informaci\xF3n final de la p\xE1gina\r\n        const finalPageInfo = await this.screenshotManager.getPageInfo();\r\n        \r\n        return {\r\n          testCompleted: true,\r\n          finalUrl: finalPageInfo.url,\r\n          finalTitle: finalPageInfo.title,\r\n          completionTime: new Date().toISOString()\r\n        };\r\n      },\r\n      {\r\n        category: 'verification',\r\n        severity: 'medium',\r\n        captureScreenshot: true\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Valida la estructura de una p\xE1gina verificando elementos requeridos\r\n   */\r\n  private async validatePageStructure(pageName: string, requiredElements: string[]): Promise<void> {\r\n    const page = this.screenshotManager.getPage();\r\n    if (!page) {throw new Error('P\xE1gina no disponible para validaci\xF3n');}\r\n    \r\n    console.log(`Validando estructura de ${pageName}...`);\r\n    \r\n    for (const element of requiredElements) {\r\n      try {\r\n        await page.waitForSelector(element, { timeout: 5000, state: 'attached' });\r\n        console.log(`\u2713 Elemento encontrado: ${element}`);\r\n      } catch (error) {\r\n        console.warn(`\u26A0 Elemento no encontrado: ${element}`);\r\n        // No lanzar error, solo advertir\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Recopila todas las screenshots tomadas durante el test\r\n   */\r\n  private async collectScreenshots(): Promise<any[]> {\r\n    // En una implementaci\xF3n real, aqu\xED se recopilar\xEDan todas las screenshots\r\n    // Por ahora, retornamos un array vac\xEDo ya que las screenshots se manejan\r\n    // autom\xE1ticamente en cada paso\r\n    return [];\r\n  }\r\n\r\n  /**\r\n   * Ejecuta el test con manejo de errores mejorado\r\n   */\r\n  static async run(baseUrl?: string): Promise<void> {\r\n    const test = new SampleE2ETest(baseUrl);\r\n    \r\n    try {\r\n      const result = await test.runTest();\r\n      \r\n      console.log('\\n' + '='.repeat(60));\r\n      console.log('\uD83D\uDCCA RESUMEN DEL TEST');\r\n      console.log('='.repeat(60));\r\n      console.log(`\u2705 Estado: ${result.success ? 'EXITOSO' : 'FALLIDO'}`);\r\n      console.log(`\uD83D\uDCC4 Reporte JSON: ${result.reportPath}`);\r\n      if (result.htmlReportPath) {\r\n        console.log(`\uD83C\uDF10 Reporte HTML: ${result.htmlReportPath}`);\r\n      }\r\n      console.log('='.repeat(60));\r\n      \r\n      if (result.success) {\r\n        console.log('\uD83C\uDF89 \xA1Test completado exitosamente!');\r\n      } else {\r\n        console.log('\u274C Test fall\xF3. Revisa los reportes para m\xE1s detalles.');\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('\uD83D\uDCA5 Error cr\xEDtico ejecutando el test:', error);\r\n      process.exit(1);\r\n    }\r\n  }\r\n}\r\n\r\n// Permitir ejecuci\xF3n directa del script\r\nif (require.main === module) {\r\n  const baseUrl = process.argv[2] || 'http://localhost:3000';\r\n  console.log(`\uD83D\uDE80 Ejecutando test E2E en: ${baseUrl}`);\r\n  SampleE2ETest.run(baseUrl);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["SampleE2ETest", "baseUrl", "testFramework", "AutomatedTestFramework", "reportsDir", "path", "join", "process", "cwd", "screenshotsDir", "tags", "screenshotManager", "ScreenshotManager", "browserType", "reportGenerator", "ReportGenerator", "outputDir", "includeScreenshots", "generateHtml", "generateJson", "theme", "includeTimeline", "includeSummaryCharts", "runTest", "success", "screenshots", "console", "log", "setupTestEnvironment", "executeTestSteps", "collectScreenshots", "error", "errorScreenshot", "captureScreenshot", "Error", "message", "String", "fullPage", "push", "screenshotError", "reportPath", "finishTest", "close", "report", "getReport", "reportResults", "generateReport", "jsonPath", "htmlPath", "htmlReportPath", "undefined", "executeStep", "initialize", "headless", "viewport", "width", "height", "userAgent", "setEnvironment", "browser", "url", "initialized", "category", "severity", "navigateTo", "pageInfo", "getPageInfo", "validatePageStructure", "page", "getPage", "waitForTimeout", "waitForLoadState", "waitForSelector", "timeout", "state", "warn", "fallbackSelectors", "found", "selector", "e", "productCount", "locator", "count", "productsFound", "firstProduct", "first", "waitFor", "captureElementScreenshot", "click", "clicked", "productSelected", "currentUrl", "addToCartButton", "addedToCart", "timestamp", "Date", "toISOString", "cartItems", "cartItemCount", "cartVerified", "checkoutButton", "checkoutInitiated", "simulatedCheckout", "finalPageInfo", "testCompleted", "finalUrl", "finalTitle", "title", "completionTime", "pageName", "requiredElements", "element", "run", "test", "result", "repeat", "exit", "require", "main", "module", "argv"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "68c6c86d746d1587cfc63060ebc4af24d042f865"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_kgvjozxu2 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_kgvjozxu2();
cov_kgvjozxu2().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_kgvjozxu2().s[1]++;
Object.defineProperty(exports, "SampleE2ETest", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_kgvjozxu2().f[0]++;
    cov_kgvjozxu2().s[2]++;
    return SampleE2ETest;
  }
});
const _automatedtestframework =
/* istanbul ignore next */
(cov_kgvjozxu2().s[3]++, require("./automated-test-framework"));
const _screenshotmanager =
/* istanbul ignore next */
(cov_kgvjozxu2().s[4]++, require("./screenshot-manager"));
const _reportgenerator =
/* istanbul ignore next */
(cov_kgvjozxu2().s[5]++, require("./report-generator"));
const _path =
/* istanbul ignore next */
(/*#__PURE__*/cov_kgvjozxu2().s[6]++, _interop_require_default(require("path")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_kgvjozxu2().f[1]++;
  cov_kgvjozxu2().s[7]++;
  return /* istanbul ignore next */(cov_kgvjozxu2().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_kgvjozxu2().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_kgvjozxu2().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_kgvjozxu2().b[0][1]++, {
    default: obj
  });
}
class SampleE2ETest {
  constructor(baseUrl =
  /* istanbul ignore next */
  (cov_kgvjozxu2().b[2][0]++, 'http://localhost:3000')) {
    /* istanbul ignore next */
    cov_kgvjozxu2().f[2]++;
    cov_kgvjozxu2().s[8]++;
    this.baseUrl = baseUrl;
    // Inicializar framework de testing
    /* istanbul ignore next */
    cov_kgvjozxu2().s[9]++;
    this.testFramework = new _automatedtestframework.AutomatedTestFramework('E2E Test - Flujo de Compra Completo', 'Test automatizado que verifica el flujo completo de compra en el e-commerce', {
      reportsDir: _path.default.join(process.cwd(), 'test-reports'),
      screenshotsDir: _path.default.join(process.cwd(), 'test-screenshots'),
      tags: ['e2e', 'purchase-flow', 'critical']
    });
    // Inicializar manager de screenshots
    /* istanbul ignore next */
    cov_kgvjozxu2().s[10]++;
    this.screenshotManager = new _screenshotmanager.ScreenshotManager({
      screenshotsDir: _path.default.join(process.cwd(), 'test-screenshots'),
      browserType: 'chromium'
    });
    // Inicializar generador de reportes
    /* istanbul ignore next */
    cov_kgvjozxu2().s[11]++;
    this.reportGenerator = new _reportgenerator.ReportGenerator({
      outputDir: _path.default.join(process.cwd(), 'test-reports'),
      includeScreenshots: true,
      generateHtml: true,
      generateJson: true,
      theme: 'light',
      includeTimeline: true,
      includeSummaryCharts: true
    });
  }
  /**
  * Ejecuta el test completo
  */
  async runTest() {
    /* istanbul ignore next */
    cov_kgvjozxu2().f[3]++;
    let success =
    /* istanbul ignore next */
    (cov_kgvjozxu2().s[12]++, false);
    let screenshots =
    /* istanbul ignore next */
    (cov_kgvjozxu2().s[13]++, []);
    /* istanbul ignore next */
    cov_kgvjozxu2().s[14]++;
    try {
      /* istanbul ignore next */
      cov_kgvjozxu2().s[15]++;
      console.log('🚀 Iniciando test E2E - Flujo de Compra Completo');
      // Configurar entorno del test
      /* istanbul ignore next */
      cov_kgvjozxu2().s[16]++;
      await this.setupTestEnvironment();
      // Ejecutar pasos del test
      /* istanbul ignore next */
      cov_kgvjozxu2().s[17]++;
      await this.executeTestSteps();
      // Recopilar screenshots
      /* istanbul ignore next */
      cov_kgvjozxu2().s[18]++;
      screenshots = await this.collectScreenshots();
      /* istanbul ignore next */
      cov_kgvjozxu2().s[19]++;
      success = true;
      /* istanbul ignore next */
      cov_kgvjozxu2().s[20]++;
      console.log('✅ Test completado exitosamente');
    } catch (error) {
      /* istanbul ignore next */
      cov_kgvjozxu2().s[21]++;
      console.error('❌ Error durante la ejecución del test:', error);
      // Capturar screenshot de error
      /* istanbul ignore next */
      cov_kgvjozxu2().s[22]++;
      try {
        const errorScreenshot =
        /* istanbul ignore next */
        (cov_kgvjozxu2().s[23]++, await this.screenshotManager.captureScreenshot('final-error', `Error final del test: ${error instanceof Error ?
        /* istanbul ignore next */
        (cov_kgvjozxu2().b[3][0]++, error.message) :
        /* istanbul ignore next */
        (cov_kgvjozxu2().b[3][1]++, String(error))}`, {
          fullPage: true
        }));
        /* istanbul ignore next */
        cov_kgvjozxu2().s[24]++;
        screenshots.push(errorScreenshot);
      } catch (screenshotError) {
        /* istanbul ignore next */
        cov_kgvjozxu2().s[25]++;
        console.error('Error capturando screenshot de error:', screenshotError);
      }
    } finally {
      // Finalizar test y generar reportes
      const reportPath =
      /* istanbul ignore next */
      (cov_kgvjozxu2().s[26]++, await this.testFramework.finishTest(success ?
      /* istanbul ignore next */
      (cov_kgvjozxu2().b[4][0]++, 'completed') :
      /* istanbul ignore next */
      (cov_kgvjozxu2().b[4][1]++, 'failed')));
      // Cerrar navegador
      /* istanbul ignore next */
      cov_kgvjozxu2().s[27]++;
      await this.screenshotManager.close();
      // Generar reporte completo
      const report =
      /* istanbul ignore next */
      (cov_kgvjozxu2().s[28]++, this.testFramework.getReport());
      const reportResults =
      /* istanbul ignore next */
      (cov_kgvjozxu2().s[29]++, await this.reportGenerator.generateReport(report, screenshots));
      /* istanbul ignore next */
      cov_kgvjozxu2().s[30]++;
      console.log('📊 Reportes generados:');
      /* istanbul ignore next */
      cov_kgvjozxu2().s[31]++;
      console.log(`   📄 JSON: ${reportResults.jsonPath}`);
      /* istanbul ignore next */
      cov_kgvjozxu2().s[32]++;
      console.log(`   🌐 HTML: ${reportResults.htmlPath}`);
      /* istanbul ignore next */
      cov_kgvjozxu2().s[33]++;
      return {
        success,
        reportPath,
        htmlReportPath:
        /* istanbul ignore next */
        (cov_kgvjozxu2().b[5][0]++, reportResults.htmlPath) ||
        /* istanbul ignore next */
        (cov_kgvjozxu2().b[5][1]++, undefined)
      };
    }
  }
  /**
  * Configura el entorno del test
  */
  async setupTestEnvironment() {
    /* istanbul ignore next */
    cov_kgvjozxu2().f[4]++;
    cov_kgvjozxu2().s[34]++;
    await this.testFramework.executeStep('Configurar entorno de test', async () => {
      /* istanbul ignore next */
      cov_kgvjozxu2().f[5]++;
      cov_kgvjozxu2().s[35]++;
      // Inicializar navegador
      await this.screenshotManager.initialize({
        headless: false,
        viewport: {
          width: 1920,
          height: 1080
        },
        userAgent: 'AutomatedTestFramework/1.0.0'
      });
      // Configurar información del entorno
      /* istanbul ignore next */
      cov_kgvjozxu2().s[36]++;
      this.testFramework.setEnvironment({
        browser: 'Chromium',
        viewport: {
          width: 1920,
          height: 1080
        },
        url: this.baseUrl
      });
      /* istanbul ignore next */
      cov_kgvjozxu2().s[37]++;
      return {
        initialized: true
      };
    }, {
      category: 'setup',
      severity: 'critical',
      captureScreenshot: false
    });
  }
  /**
  * Ejecuta todos los pasos del test
  */
  async executeTestSteps() {
    /* istanbul ignore next */
    cov_kgvjozxu2().f[6]++;
    cov_kgvjozxu2().s[38]++;
    // Paso 1: Navegar a la página principal
    await this.testFramework.executeStep('Navegar a la página principal', async () => {
      /* istanbul ignore next */
      cov_kgvjozxu2().f[7]++;
      cov_kgvjozxu2().s[39]++;
      await this.screenshotManager.navigateTo(this.baseUrl);
      const pageInfo =
      /* istanbul ignore next */
      (cov_kgvjozxu2().s[40]++, await this.screenshotManager.getPageInfo());
      // Validar que la página se cargó correctamente
      /* istanbul ignore next */
      cov_kgvjozxu2().s[41]++;
      await this.validatePageStructure('homepage', ['header', 'nav', 'main', '[data-testid="product-card"]']);
      // Capturar screenshot de la página principal
      /* istanbul ignore next */
      cov_kgvjozxu2().s[42]++;
      await this.screenshotManager.captureScreenshot('homepage-loaded', 'Página principal cargada correctamente', {
        fullPage: true
      });
      /* istanbul ignore next */
      cov_kgvjozxu2().s[43]++;
      return pageInfo;
    }, {
      category: 'action',
      severity: 'high',
      captureScreenshot: true
    });
    // Paso 2: Buscar productos
    /* istanbul ignore next */
    cov_kgvjozxu2().s[44]++;
    await this.testFramework.executeStep('Buscar productos en la tienda', async () => {
      /* istanbul ignore next */
      cov_kgvjozxu2().f[8]++;
      const page =
      /* istanbul ignore next */
      (cov_kgvjozxu2().s[45]++, this.screenshotManager.getPage());
      /* istanbul ignore next */
      cov_kgvjozxu2().s[46]++;
      if (!page) {
        /* istanbul ignore next */
        cov_kgvjozxu2().b[6][0]++;
        cov_kgvjozxu2().s[47]++;
        throw new Error('Página no disponible');
      } else
      /* istanbul ignore next */
      {
        cov_kgvjozxu2().b[6][1]++;
      }
      // Navegar a la sección de productos
      cov_kgvjozxu2().s[48]++;
      await this.screenshotManager.navigateTo(`${this.baseUrl}/shop`);
      // Esperar a que los productos se carguen
      /* istanbul ignore next */
      cov_kgvjozxu2().s[49]++;
      await page.waitForTimeout(2000);
      // Validar estructura de página de productos
      /* istanbul ignore next */
      cov_kgvjozxu2().s[50]++;
      await this.validatePageStructure('products-page', ['[data-testid="product-card"]', '.product-grid, .products-container']);
      // Capturar screenshot de los productos
      /* istanbul ignore next */
      cov_kgvjozxu2().s[51]++;
      await this.screenshotManager.captureScreenshot('products-page', 'Página de productos cargada', {
        fullPage: true
      });
      // Buscar productos con estrategia de espera robusta y manejo de errores
      /* istanbul ignore next */
      cov_kgvjozxu2().s[52]++;
      try {
        /* istanbul ignore next */
        cov_kgvjozxu2().s[53]++;
        await page.waitForLoadState('networkidle');
        /* istanbul ignore next */
        cov_kgvjozxu2().s[54]++;
        await page.waitForSelector('[data-testid="product-card"]', {
          timeout: 15000,
          state: 'visible'
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_kgvjozxu2().s[55]++;
        // Fallback: intentar con selectores alternativos
        console.warn('Selector principal falló, intentando fallbacks...');
        const fallbackSelectors =
        /* istanbul ignore next */
        (cov_kgvjozxu2().s[56]++, ['.product-card', '.product-item', '[class*="product"]']);
        let found =
        /* istanbul ignore next */
        (cov_kgvjozxu2().s[57]++, false);
        /* istanbul ignore next */
        cov_kgvjozxu2().s[58]++;
        for (const selector of fallbackSelectors) {
          /* istanbul ignore next */
          cov_kgvjozxu2().s[59]++;
          try {
            /* istanbul ignore next */
            cov_kgvjozxu2().s[60]++;
            await page.waitForSelector(selector, {
              timeout: 5000
            });
            /* istanbul ignore next */
            cov_kgvjozxu2().s[61]++;
            found = true;
            /* istanbul ignore next */
            cov_kgvjozxu2().s[62]++;
            break;
          } catch (e) {
            /* istanbul ignore next */
            cov_kgvjozxu2().s[63]++;
            continue;
          }
        }
        /* istanbul ignore next */
        cov_kgvjozxu2().s[64]++;
        if (!found) {
          /* istanbul ignore next */
          cov_kgvjozxu2().b[7][0]++;
          cov_kgvjozxu2().s[65]++;
          throw new Error('No se pudieron encontrar productos con ningún selector');
        } else
        /* istanbul ignore next */
        {
          cov_kgvjozxu2().b[7][1]++;
        }
      }
      // Verificar que hay productos
      const productCount =
      /* istanbul ignore next */
      (cov_kgvjozxu2().s[66]++, await page.locator('[data-testid="product-card"]').count());
      /* istanbul ignore next */
      cov_kgvjozxu2().s[67]++;
      return {
        productsFound: productCount,
        url: page.url()
      };
    }, {
      category: 'action',
      severity: 'high',
      captureScreenshot: true
    });
    // Paso 3: Seleccionar un producto
    /* istanbul ignore next */
    cov_kgvjozxu2().s[68]++;
    await this.testFramework.executeStep('Seleccionar primer producto disponible', async () => {
      /* istanbul ignore next */
      cov_kgvjozxu2().f[9]++;
      const page =
      /* istanbul ignore next */
      (cov_kgvjozxu2().s[69]++, this.screenshotManager.getPage());
      /* istanbul ignore next */
      cov_kgvjozxu2().s[70]++;
      if (!page) {
        /* istanbul ignore next */
        cov_kgvjozxu2().b[8][0]++;
        cov_kgvjozxu2().s[71]++;
        throw new Error('Página no disponible');
      } else
      /* istanbul ignore next */
      {
        cov_kgvjozxu2().b[8][1]++;
      }
      // Buscar el primer producto disponible
      const firstProduct =
      /* istanbul ignore next */
      (cov_kgvjozxu2().s[72]++, page.locator('[data-testid="product-card"]').first());
      // Esperar a que el producto sea visible con espera robusta y manejo de errores
      /* istanbul ignore next */
      cov_kgvjozxu2().s[73]++;
      try {
        /* istanbul ignore next */
        cov_kgvjozxu2().s[74]++;
        await firstProduct.waitFor({
          state: 'visible',
          timeout: 15000
        });
        // Capturar screenshot del producto seleccionado
        /* istanbul ignore next */
        cov_kgvjozxu2().s[75]++;
        await this.screenshotManager.captureElementScreenshot('[data-testid="product-card"]', 'selected-product', 'Producto seleccionado para compra');
        // Hacer clic en el producto
        /* istanbul ignore next */
        cov_kgvjozxu2().s[76]++;
        await firstProduct.click();
      } catch (error) {
        /* istanbul ignore next */
        cov_kgvjozxu2().s[77]++;
        // Fallback: intentar con otros selectores
        console.warn('Fallo al seleccionar producto, intentando fallbacks...');
        const fallbackSelectors =
        /* istanbul ignore next */
        (cov_kgvjozxu2().s[78]++, ['.product-card:first-child', '.product-item:first-child']);
        let clicked =
        /* istanbul ignore next */
        (cov_kgvjozxu2().s[79]++, false);
        /* istanbul ignore next */
        cov_kgvjozxu2().s[80]++;
        for (const selector of fallbackSelectors) {
          /* istanbul ignore next */
          cov_kgvjozxu2().s[81]++;
          try {
            /* istanbul ignore next */
            cov_kgvjozxu2().s[82]++;
            await page.click(selector, {
              timeout: 5000
            });
            /* istanbul ignore next */
            cov_kgvjozxu2().s[83]++;
            clicked = true;
            /* istanbul ignore next */
            cov_kgvjozxu2().s[84]++;
            break;
          } catch (e) {
            /* istanbul ignore next */
            cov_kgvjozxu2().s[85]++;
            continue;
          }
        }
        /* istanbul ignore next */
        cov_kgvjozxu2().s[86]++;
        if (!clicked) {
          /* istanbul ignore next */
          cov_kgvjozxu2().b[9][0]++;
          cov_kgvjozxu2().s[87]++;
          throw new Error('No se pudo seleccionar ningún producto');
        } else
        /* istanbul ignore next */
        {
          cov_kgvjozxu2().b[9][1]++;
        }
      }
      // Esperar a que se cargue la página del producto y validar estructura
      /* istanbul ignore next */
      cov_kgvjozxu2().s[88]++;
      await page.waitForTimeout(2000);
      // Validar estructura de página de producto
      /* istanbul ignore next */
      cov_kgvjozxu2().s[89]++;
      await this.validatePageStructure('product-page', ['[data-testid="add-to-cart-btn"]', '.product-title, h1', '.price']);
      /* istanbul ignore next */
      cov_kgvjozxu2().s[90]++;
      return {
        productSelected: true,
        currentUrl: page.url()
      };
    }, {
      category: 'action',
      severity: 'high',
      captureScreenshot: true
    });
    // Paso 4: Agregar al carrito
    /* istanbul ignore next */
    cov_kgvjozxu2().s[91]++;
    await this.testFramework.executeStep('Agregar producto al carrito', async () => {
      /* istanbul ignore next */
      cov_kgvjozxu2().f[10]++;
      const page =
      /* istanbul ignore next */
      (cov_kgvjozxu2().s[92]++, this.screenshotManager.getPage());
      /* istanbul ignore next */
      cov_kgvjozxu2().s[93]++;
      if (!page) {
        /* istanbul ignore next */
        cov_kgvjozxu2().b[10][0]++;
        cov_kgvjozxu2().s[94]++;
        throw new Error('Página no disponible');
      } else
      /* istanbul ignore next */
      {
        cov_kgvjozxu2().b[10][1]++;
      }
      // Validar estructura antes de agregar al carrito
      cov_kgvjozxu2().s[95]++;
      await this.validatePageStructure('product-detail', ['[data-testid="add-to-cart-btn"]', '.product-info']);
      // Buscar botón de agregar al carrito
      const addToCartButton =
      /* istanbul ignore next */
      (cov_kgvjozxu2().s[96]++, page.locator('[data-testid="add-to-cart-btn"]').first());
      // Esperar a que el botón sea visible con espera robusta y manejo de errores
      /* istanbul ignore next */
      cov_kgvjozxu2().s[97]++;
      try {
        /* istanbul ignore next */
        cov_kgvjozxu2().s[98]++;
        await addToCartButton.waitFor({
          state: 'visible',
          timeout: 15000
        });
        // Capturar screenshot antes de agregar al carrito
        /* istanbul ignore next */
        cov_kgvjozxu2().s[99]++;
        await this.screenshotManager.captureScreenshot('before-add-to-cart', 'Antes de agregar producto al carrito', {
          fullPage: true
        });
        // Hacer clic en agregar al carrito
        /* istanbul ignore next */
        cov_kgvjozxu2().s[100]++;
        await addToCartButton.click();
      } catch (error) {
        /* istanbul ignore next */
        cov_kgvjozxu2().s[101]++;
        // Fallback: intentar con otros selectores de botón
        console.warn('Fallo botón agregar al carrito, intentando fallbacks...');
        const fallbackSelectors =
        /* istanbul ignore next */
        (cov_kgvjozxu2().s[102]++, ['button:has-text("Agregar")', 'button:has-text("Add to Cart")', '.add-to-cart', '[class*="add-cart"]']);
        let clicked =
        /* istanbul ignore next */
        (cov_kgvjozxu2().s[103]++, false);
        /* istanbul ignore next */
        cov_kgvjozxu2().s[104]++;
        for (const selector of fallbackSelectors) {
          /* istanbul ignore next */
          cov_kgvjozxu2().s[105]++;
          try {
            /* istanbul ignore next */
            cov_kgvjozxu2().s[106]++;
            await page.click(selector, {
              timeout: 5000
            });
            /* istanbul ignore next */
            cov_kgvjozxu2().s[107]++;
            clicked = true;
            /* istanbul ignore next */
            cov_kgvjozxu2().s[108]++;
            break;
          } catch (e) {
            /* istanbul ignore next */
            cov_kgvjozxu2().s[109]++;
            continue;
          }
        }
        /* istanbul ignore next */
        cov_kgvjozxu2().s[110]++;
        if (!clicked) {
          /* istanbul ignore next */
          cov_kgvjozxu2().b[11][0]++;
          cov_kgvjozxu2().s[111]++;
          throw new Error('No se pudo agregar el producto al carrito');
        } else
        /* istanbul ignore next */
        {
          cov_kgvjozxu2().b[11][1]++;
        }
      }
      // Esperar confirmación
      /* istanbul ignore next */
      cov_kgvjozxu2().s[112]++;
      await page.waitForTimeout(2000);
      // Capturar screenshot después de agregar al carrito
      /* istanbul ignore next */
      cov_kgvjozxu2().s[113]++;
      await this.screenshotManager.captureScreenshot('after-add-to-cart', 'Producto agregado al carrito exitosamente', {
        fullPage: true
      });
      /* istanbul ignore next */
      cov_kgvjozxu2().s[114]++;
      return {
        addedToCart: true,
        timestamp: new Date().toISOString()
      };
    }, {
      category: 'action',
      severity: 'critical',
      captureScreenshot: true
    });
    // Paso 5: Verificar carrito
    /* istanbul ignore next */
    cov_kgvjozxu2().s[115]++;
    await this.testFramework.executeStep('Verificar contenido del carrito', async () => {
      /* istanbul ignore next */
      cov_kgvjozxu2().f[11]++;
      const page =
      /* istanbul ignore next */
      (cov_kgvjozxu2().s[116]++, this.screenshotManager.getPage());
      /* istanbul ignore next */
      cov_kgvjozxu2().s[117]++;
      if (!page) {
        /* istanbul ignore next */
        cov_kgvjozxu2().b[12][0]++;
        cov_kgvjozxu2().s[118]++;
        throw new Error('Página no disponible');
      } else
      /* istanbul ignore next */
      {
        cov_kgvjozxu2().b[12][1]++;
      }
      // Navegar al carrito
      cov_kgvjozxu2().s[119]++;
      await this.screenshotManager.navigateTo(`${this.baseUrl}/cart`);
      // Esperar a que se cargue el carrito
      /* istanbul ignore next */
      cov_kgvjozxu2().s[120]++;
      await page.waitForTimeout(2000);
      // Capturar screenshot del carrito
      /* istanbul ignore next */
      cov_kgvjozxu2().s[121]++;
      await this.screenshotManager.captureScreenshot('cart-contents', 'Contenido del carrito de compras', {
        fullPage: true
      });
      // Verificar que hay items en el carrito con espera robusta
      /* istanbul ignore next */
      cov_kgvjozxu2().s[122]++;
      await page.waitForLoadState('networkidle');
      // Validar estructura de página de carrito
      /* istanbul ignore next */
      cov_kgvjozxu2().s[123]++;
      await this.validatePageStructure('cart-page', ['[data-testid="clear-cart-btn"]', 'button:has-text("Finalizar Compra")']);
      /* istanbul ignore next */
      cov_kgvjozxu2().s[124]++;
      await page.waitForSelector('[data-testid="clear-cart-btn"]', {
        timeout: 15000,
        state: 'visible'
      });
      const cartItems =
      /* istanbul ignore next */
      (cov_kgvjozxu2().s[125]++, await page.locator('[data-testid="cart-item"]').count());
      /* istanbul ignore next */
      cov_kgvjozxu2().s[126]++;
      return {
        cartItemCount: cartItems,
        cartVerified: cartItems > 0
      };
    }, {
      category: 'verification',
      severity: 'high',
      captureScreenshot: true
    });
    // Paso 6: Proceso de checkout (simulado)
    /* istanbul ignore next */
    cov_kgvjozxu2().s[127]++;
    await this.testFramework.executeStep('Simular proceso de checkout', async () => {
      /* istanbul ignore next */
      cov_kgvjozxu2().f[12]++;
      const page =
      /* istanbul ignore next */
      (cov_kgvjozxu2().s[128]++, this.screenshotManager.getPage());
      /* istanbul ignore next */
      cov_kgvjozxu2().s[129]++;
      if (!page) {
        /* istanbul ignore next */
        cov_kgvjozxu2().b[13][0]++;
        cov_kgvjozxu2().s[130]++;
        throw new Error('Página no disponible');
      } else
      /* istanbul ignore next */
      {
        cov_kgvjozxu2().b[13][1]++;
      }
      // Buscar botón de checkout
      const checkoutButton =
      /* istanbul ignore next */
      (cov_kgvjozxu2().s[131]++, page.locator('button:has-text("Finalizar Compra")').first());
      let checkoutInitiated =
      /* istanbul ignore next */
      (cov_kgvjozxu2().s[132]++, false);
      /* istanbul ignore next */
      cov_kgvjozxu2().s[133]++;
      try {
        /* istanbul ignore next */
        cov_kgvjozxu2().s[134]++;
        // Intentar hacer clic en checkout si existe
        await checkoutButton.waitFor({
          state: 'visible',
          timeout: 5000
        });
        /* istanbul ignore next */
        cov_kgvjozxu2().s[135]++;
        await checkoutButton.click();
        /* istanbul ignore next */
        cov_kgvjozxu2().s[136]++;
        await page.waitForTimeout(2000);
        /* istanbul ignore next */
        cov_kgvjozxu2().s[137]++;
        checkoutInitiated = true;
        // Capturar screenshot del proceso de checkout
        /* istanbul ignore next */
        cov_kgvjozxu2().s[138]++;
        await this.screenshotManager.captureScreenshot('checkout-process', 'Proceso de checkout iniciado', {
          fullPage: true
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_kgvjozxu2().s[139]++;
        // Si no se encuentra el botón de checkout, simular el proceso
        console.log('Botón de checkout no encontrado, simulando proceso...');
        /* istanbul ignore next */
        cov_kgvjozxu2().s[140]++;
        await this.screenshotManager.captureScreenshot('checkout-simulation', 'Simulación de proceso de checkout', {
          fullPage: true
        });
      }
      /* istanbul ignore next */
      cov_kgvjozxu2().s[141]++;
      return {
        checkoutInitiated,
        simulatedCheckout: !checkoutInitiated,
        timestamp: new Date().toISOString()
      };
    }, {
      category: 'action',
      severity: 'medium',
      captureScreenshot: true
    });
    // Paso 7: Verificación final
    /* istanbul ignore next */
    cov_kgvjozxu2().s[142]++;
    await this.testFramework.executeStep('Verificación final del test', async () => {
      /* istanbul ignore next */
      cov_kgvjozxu2().f[13]++;
      const page =
      /* istanbul ignore next */
      (cov_kgvjozxu2().s[143]++, this.screenshotManager.getPage());
      /* istanbul ignore next */
      cov_kgvjozxu2().s[144]++;
      if (!page) {
        /* istanbul ignore next */
        cov_kgvjozxu2().b[14][0]++;
        cov_kgvjozxu2().s[145]++;
        throw new Error('Página no disponible');
      } else
      /* istanbul ignore next */
      {
        cov_kgvjozxu2().b[14][1]++;
      }
      // Capturar screenshot final
      cov_kgvjozxu2().s[146]++;
      await this.screenshotManager.captureScreenshot('final-state', 'Estado final del test E2E', {
        fullPage: true
      });
      // Obtener información final de la página
      const finalPageInfo =
      /* istanbul ignore next */
      (cov_kgvjozxu2().s[147]++, await this.screenshotManager.getPageInfo());
      /* istanbul ignore next */
      cov_kgvjozxu2().s[148]++;
      return {
        testCompleted: true,
        finalUrl: finalPageInfo.url,
        finalTitle: finalPageInfo.title,
        completionTime: new Date().toISOString()
      };
    }, {
      category: 'verification',
      severity: 'medium',
      captureScreenshot: true
    });
  }
  /**
  * Valida la estructura de una página verificando elementos requeridos
  */
  async validatePageStructure(pageName, requiredElements) {
    /* istanbul ignore next */
    cov_kgvjozxu2().f[14]++;
    const page =
    /* istanbul ignore next */
    (cov_kgvjozxu2().s[149]++, this.screenshotManager.getPage());
    /* istanbul ignore next */
    cov_kgvjozxu2().s[150]++;
    if (!page) {
      /* istanbul ignore next */
      cov_kgvjozxu2().b[15][0]++;
      cov_kgvjozxu2().s[151]++;
      throw new Error('Página no disponible para validación');
    } else
    /* istanbul ignore next */
    {
      cov_kgvjozxu2().b[15][1]++;
    }
    cov_kgvjozxu2().s[152]++;
    console.log(`Validando estructura de ${pageName}...`);
    /* istanbul ignore next */
    cov_kgvjozxu2().s[153]++;
    for (const element of requiredElements) {
      /* istanbul ignore next */
      cov_kgvjozxu2().s[154]++;
      try {
        /* istanbul ignore next */
        cov_kgvjozxu2().s[155]++;
        await page.waitForSelector(element, {
          timeout: 5000,
          state: 'attached'
        });
        /* istanbul ignore next */
        cov_kgvjozxu2().s[156]++;
        console.log(`✓ Elemento encontrado: ${element}`);
      } catch (error) {
        /* istanbul ignore next */
        cov_kgvjozxu2().s[157]++;
        console.warn(`⚠ Elemento no encontrado: ${element}`);
        // No lanzar error, solo advertir
      }
    }
  }
  /**
  * Recopila todas las screenshots tomadas durante el test
  */
  async collectScreenshots() {
    /* istanbul ignore next */
    cov_kgvjozxu2().f[15]++;
    cov_kgvjozxu2().s[158]++;
    // En una implementación real, aquí se recopilarían todas las screenshots
    // Por ahora, retornamos un array vacío ya que las screenshots se manejan
    // automáticamente en cada paso
    return [];
  }
  /**
  * Ejecuta el test con manejo de errores mejorado
  */
  static async run(baseUrl) {
    /* istanbul ignore next */
    cov_kgvjozxu2().f[16]++;
    const test =
    /* istanbul ignore next */
    (cov_kgvjozxu2().s[159]++, new SampleE2ETest(baseUrl));
    /* istanbul ignore next */
    cov_kgvjozxu2().s[160]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_kgvjozxu2().s[161]++, await test.runTest());
      /* istanbul ignore next */
      cov_kgvjozxu2().s[162]++;
      console.log('\n' + '='.repeat(60));
      /* istanbul ignore next */
      cov_kgvjozxu2().s[163]++;
      console.log('📊 RESUMEN DEL TEST');
      /* istanbul ignore next */
      cov_kgvjozxu2().s[164]++;
      console.log('='.repeat(60));
      /* istanbul ignore next */
      cov_kgvjozxu2().s[165]++;
      console.log(`✅ Estado: ${result.success ?
      /* istanbul ignore next */
      (cov_kgvjozxu2().b[16][0]++, 'EXITOSO') :
      /* istanbul ignore next */
      (cov_kgvjozxu2().b[16][1]++, 'FALLIDO')}`);
      /* istanbul ignore next */
      cov_kgvjozxu2().s[166]++;
      console.log(`📄 Reporte JSON: ${result.reportPath}`);
      /* istanbul ignore next */
      cov_kgvjozxu2().s[167]++;
      if (result.htmlReportPath) {
        /* istanbul ignore next */
        cov_kgvjozxu2().b[17][0]++;
        cov_kgvjozxu2().s[168]++;
        console.log(`🌐 Reporte HTML: ${result.htmlReportPath}`);
      } else
      /* istanbul ignore next */
      {
        cov_kgvjozxu2().b[17][1]++;
      }
      cov_kgvjozxu2().s[169]++;
      console.log('='.repeat(60));
      /* istanbul ignore next */
      cov_kgvjozxu2().s[170]++;
      if (result.success) {
        /* istanbul ignore next */
        cov_kgvjozxu2().b[18][0]++;
        cov_kgvjozxu2().s[171]++;
        console.log('🎉 ¡Test completado exitosamente!');
      } else {
        /* istanbul ignore next */
        cov_kgvjozxu2().b[18][1]++;
        cov_kgvjozxu2().s[172]++;
        console.log('❌ Test falló. Revisa los reportes para más detalles.');
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_kgvjozxu2().s[173]++;
      console.error('💥 Error crítico ejecutando el test:', error);
      /* istanbul ignore next */
      cov_kgvjozxu2().s[174]++;
      process.exit(1);
    }
  }
}
// Permitir ejecución directa del script
/* istanbul ignore next */
cov_kgvjozxu2().s[175]++;
if (require.main === module) {
  /* istanbul ignore next */
  cov_kgvjozxu2().b[19][0]++;
  const baseUrl =
  /* istanbul ignore next */
  (cov_kgvjozxu2().s[176]++,
  /* istanbul ignore next */
  (cov_kgvjozxu2().b[20][0]++, process.argv[2]) ||
  /* istanbul ignore next */
  (cov_kgvjozxu2().b[20][1]++, 'http://localhost:3000'));
  /* istanbul ignore next */
  cov_kgvjozxu2().s[177]++;
  console.log(`🚀 Ejecutando test E2E en: ${baseUrl}`);
  /* istanbul ignore next */
  cov_kgvjozxu2().s[178]++;
  SampleE2ETest.run(baseUrl);
} else
/* istanbul ignore next */
{
  cov_kgvjozxu2().b[19][1]++;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,