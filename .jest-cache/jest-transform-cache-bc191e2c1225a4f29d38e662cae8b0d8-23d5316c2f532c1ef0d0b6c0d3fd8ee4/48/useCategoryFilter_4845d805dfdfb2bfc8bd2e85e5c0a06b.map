{"version":3,"names":["cov_20lheixv7g","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","default","_default","isCategoryId","useCategoryFilter","validateCategoryIds","options","initialCategories","maxSelections","syncWithUrl","urlParamName","onCategoryChange","enableAnalytics","searchParams","_navigation","useSearchParams","getInitialState","_react","useCallback","urlCategories","get","split","filter","Boolean","selectedCategories","setSelectedCategories","useState","createChangeEvent","categoryId","newCategories","previousCategories","timestamp","Date","trackAnalytics","event","window","gtag","event_category","event_label","value","length","custom_parameters","action_type","selected_count","process","env","NODE_ENV","toggleCategory","prev","isCurrentlySelected","includes","id","console","warn","clearAll","selectAll","categoryIds","limitedCategories","slice","isSelected","selectedCount","useMemo","returnValue"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useCategoryFilter.ts"],"sourcesContent":["/**\r\n * useCategoryFilter Hook\r\n * Manages category filter state and logic\r\n * Pinteya E-commerce - Enterprise-ready implementation\r\n */\r\n\r\nimport { useState, useCallback, useMemo } from 'react';\r\nimport { useSearchParams } from 'next/navigation';\r\nimport type { \r\n  CategoryId, \r\n  UseCategoryFilterReturn,\r\n  CategoryChangeEvent \r\n} from '@/types/categories';\r\n\r\n/**\r\n * Configuration options for the category filter hook\r\n */\r\ninterface UseCategoryFilterOptions {\r\n  /** Initial selected categories */\r\n  initialCategories?: CategoryId[];\r\n  /** Maximum number of categories that can be selected */\r\n  maxSelections?: number;\r\n  /** Whether to sync with URL parameters */\r\n  syncWithUrl?: boolean;\r\n  /** URL parameter name for categories */\r\n  urlParamName?: string;\r\n  /** Callback for category change events */\r\n  onCategoryChange?: (event: CategoryChangeEvent) => void;\r\n  /** Whether to enable analytics tracking */\r\n  enableAnalytics?: boolean;\r\n}\r\n\r\n/**\r\n * Custom hook for managing category filter state\r\n * \r\n * Features:\r\n * - State management for selected categories\r\n * - URL synchronization\r\n * - Analytics tracking\r\n * - Accessibility support\r\n * - Performance optimization\r\n * \r\n * @param options Configuration options\r\n * @returns Category filter state and actions\r\n */\r\nexport const useCategoryFilter = (\r\n  options: UseCategoryFilterOptions = {}\r\n): UseCategoryFilterReturn => {\r\n  const {\r\n    initialCategories = [],\r\n    maxSelections = 10,\r\n    syncWithUrl = true,\r\n    urlParamName = 'categories',\r\n    onCategoryChange,\r\n    enableAnalytics = true,\r\n  } = options;\r\n\r\n  const searchParams = useSearchParams();\r\n\r\n  // Initialize state from URL if sync is enabled, otherwise use initial categories\r\n  const getInitialState = useCallback((): CategoryId[] => {\r\n    if (syncWithUrl) {\r\n      const urlCategories = searchParams.get(urlParamName);\r\n      if (urlCategories) {\r\n        return urlCategories.split(',').filter(Boolean);\r\n      }\r\n    }\r\n    return initialCategories;\r\n  }, [syncWithUrl, searchParams, urlParamName, initialCategories]);\r\n\r\n  const [selectedCategories, setSelectedCategories] = useState<CategoryId[]>(getInitialState);\r\n\r\n  /**\r\n   * Create category change event for analytics and callbacks\r\n   */\r\n  const createChangeEvent = useCallback((\r\n    type: CategoryChangeEvent['type'],\r\n    categoryId: CategoryId | undefined,\r\n    newCategories: CategoryId[],\r\n    previousCategories: CategoryId[]\r\n  ): CategoryChangeEvent => ({\r\n    type,\r\n    categoryId,\r\n    selectedCategories: newCategories,\r\n    previousCategories,\r\n    timestamp: new Date(),\r\n  }), []);\r\n\r\n  /**\r\n   * Track analytics event if enabled\r\n   */\r\n  const trackAnalytics = useCallback((event: CategoryChangeEvent) => {\r\n    if (!enableAnalytics) {return;}\r\n\r\n    // Track with analytics service (placeholder for actual implementation)\r\n    if (typeof window !== 'undefined' && window.gtag) {\r\n      window.gtag('event', 'category_filter_change', {\r\n        event_category: 'filters',\r\n        event_label: event.categoryId || 'bulk_action',\r\n        value: event.selectedCategories.length,\r\n        custom_parameters: {\r\n          action_type: event.type,\r\n          selected_count: event.selectedCategories.length,\r\n        },\r\n      });\r\n    }\r\n\r\n    // Console log for development\r\n    if (process.env.NODE_ENV === 'development') {\r\n    }\r\n  }, [enableAnalytics]);\r\n\r\n  /**\r\n   * Toggle a category selection\r\n   */\r\n  const toggleCategory = useCallback((categoryId: CategoryId) => {\r\n    setSelectedCategories(prev => {\r\n      const isCurrentlySelected = prev.includes(categoryId);\r\n      let newCategories: CategoryId[];\r\n\r\n      if (isCurrentlySelected) {\r\n        // Remove category\r\n        newCategories = prev.filter(id => id !== categoryId);\r\n      } else {\r\n        // Add category (respect max selections)\r\n        if (prev.length >= maxSelections) {\r\n          console.warn(`Maximum ${maxSelections} categories can be selected`);\r\n          return prev;\r\n        }\r\n        newCategories = [...prev, categoryId];\r\n      }\r\n\r\n      // Create and track event\r\n      const event = createChangeEvent(\r\n        isCurrentlySelected ? 'deselect' : 'select',\r\n        categoryId,\r\n        newCategories,\r\n        prev\r\n      );\r\n\r\n      trackAnalytics(event);\r\n      onCategoryChange?.(event);\r\n\r\n      return newCategories;\r\n    });\r\n  }, [maxSelections, createChangeEvent, trackAnalytics, onCategoryChange]);\r\n\r\n  /**\r\n   * Clear all selected categories\r\n   */\r\n  const clearAll = useCallback(() => {\r\n    setSelectedCategories(prev => {\r\n      if (prev.length === 0) {return prev;}\r\n\r\n      const event = createChangeEvent('clear', undefined, [], prev);\r\n      trackAnalytics(event);\r\n      onCategoryChange?.(event);\r\n\r\n      return [];\r\n    });\r\n  }, [createChangeEvent, trackAnalytics, onCategoryChange]);\r\n\r\n  /**\r\n   * Select all provided categories\r\n   */\r\n  const selectAll = useCallback((categoryIds: CategoryId[]) => {\r\n    setSelectedCategories(prev => {\r\n      // Respect max selections\r\n      const limitedCategories = categoryIds.slice(0, maxSelections);\r\n\r\n      if (categoryIds.length > maxSelections) {\r\n        console.warn(`Only first ${maxSelections} categories will be selected`);\r\n      }\r\n\r\n      const event = createChangeEvent('selectAll', undefined, limitedCategories, prev);\r\n      trackAnalytics(event);\r\n      onCategoryChange?.(event);\r\n\r\n      return limitedCategories;\r\n    });\r\n  }, [maxSelections, createChangeEvent, trackAnalytics, onCategoryChange]);\r\n\r\n  /**\r\n   * Check if a category is selected\r\n   */\r\n  const isSelected = useCallback((categoryId: CategoryId): boolean => {\r\n    return selectedCategories.includes(categoryId);\r\n  }, [selectedCategories]);\r\n\r\n  /**\r\n   * Get count of selected categories\r\n   */\r\n  const selectedCount = useMemo(() => selectedCategories.length, [selectedCategories]);\r\n\r\n  /**\r\n   * Memoized return object for performance\r\n   */\r\n  const returnValue = useMemo((): UseCategoryFilterReturn => ({\r\n    selectedCategories,\r\n    toggleCategory,\r\n    clearAll,\r\n    selectAll,\r\n    isSelected,\r\n    selectedCount,\r\n  }), [\r\n    selectedCategories,\r\n    toggleCategory,\r\n    clearAll,\r\n    selectAll,\r\n    isSelected,\r\n    selectedCount,\r\n  ]);\r\n\r\n  return returnValue;\r\n};\r\n\r\n/**\r\n * Type guard to check if a value is a valid CategoryId\r\n */\r\nexport const isCategoryId = (value: unknown): value is CategoryId => {\r\n  return typeof value === 'string' && value.length > 0;\r\n};\r\n\r\n/**\r\n * Utility to validate category IDs array\r\n */\r\nexport const validateCategoryIds = (categoryIds: unknown[]): CategoryId[] => {\r\n  return categoryIds.filter(isCategoryId);\r\n};\r\n\r\n/**\r\n * Default export for convenience\r\n */\r\nexport default useCategoryFilter;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]}