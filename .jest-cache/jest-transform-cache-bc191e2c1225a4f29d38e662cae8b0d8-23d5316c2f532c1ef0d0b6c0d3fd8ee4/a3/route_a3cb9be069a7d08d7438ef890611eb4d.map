{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\driver\\routes\\[id]\\route.ts"],"sourcesContent":["/**\r\n * API para obtener detalles específicos de una ruta asignada al driver\r\n * GET /api/driver/routes/[id]\r\n */\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { auth } from '@/auth';\r\nimport { createClient } from '@/lib/integrations/supabase/server';\r\n\r\nexport async function GET(\r\n  request: NextRequest,\r\n  { params }: { params: { id: string } }\r\n) {\r\n  try {\r\n    const routeId = params.id;\r\n\r\n    // Para pruebas, devolver datos de ejemplo\r\n    const routeData = {\r\n      id: routeId,\r\n      name: `Ruta de Entrega #${routeId}`,\r\n      total_distance: 35.6,\r\n      estimated_time: 2640, // 44 minutos en segundos\r\n      status: 'active',\r\n      shipments: [\r\n        {\r\n          id: routeId,\r\n          orderNumber: `#${routeId}`,\r\n          tracking_number: `TRK-${routeId}`,\r\n          customer_name: 'Cliente de Prueba',\r\n          customer_phone: '+54 351 123-4567',\r\n          destination: {\r\n            address: 'Av. Colón 1234, Piso 2, Depto A, Córdoba, Córdoba 5000',\r\n            city: 'Córdoba',\r\n            postal_code: '5000',\r\n            coordinates: {\r\n              lat: -31.4084841,\r\n              lng: -64.1917654\r\n            }\r\n          },\r\n          items: [\r\n            {\r\n              name: 'Producto de Prueba',\r\n              quantity: 1,\r\n              weight: 1\r\n            }\r\n          ],\r\n          status: 'confirmed',\r\n          estimated_delivery_time: '14:00 - 18:00',\r\n          requires_signature: false\r\n        }\r\n      ],\r\n      waypoints: [\r\n        {\r\n          lat: -31.4084841,\r\n          lng: -64.1917654\r\n        }\r\n      ],\r\n      driver: {\r\n        id: 'driver-1',\r\n        name: 'Santiago Martinez'\r\n      },\r\n      created_at: new Date().toISOString(),\r\n      updated_at: new Date().toISOString()\r\n    };\r\n\r\n    return NextResponse.json(routeData);\r\n\r\n\r\n\r\n  } catch (error) {\r\n    console.error('Error in driver route API:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\nexport async function PUT(\r\n  request: NextRequest,\r\n  { params }: { params: { id: string } }\r\n) {\r\n  try {\r\n    // Verificar autenticación\r\n    const session = await auth();\r\n    \r\n    if (!session?.user?.email) {\r\n      return NextResponse.json(\r\n        { error: 'No autorizado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    const routeId = params.id;\r\n    const body = await request.json();\r\n    const { status, shipments, current_shipment_index } = body;\r\n\r\n    const supabase = await createClient();\r\n\r\n    // Obtener información del driver\r\n    const { data: driver, error: driverError } = await supabase\r\n      .from('drivers')\r\n      .select('id')\r\n      .eq('email', session.user.email)\r\n      .single();\r\n\r\n    if (driverError || !driver) {\r\n      return NextResponse.json(\r\n        { error: 'Driver no encontrado' },\r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    // Actualizar la ruta\r\n    const updateData: any = {\r\n      updated_at: new Date().toISOString()\r\n    };\r\n\r\n    if (status) updateData.status = status;\r\n    if (shipments) updateData.shipments = shipments;\r\n\r\n    const { data: updatedRoute, error: updateError } = await supabase\r\n      .from('optimized_routes')\r\n      .update(updateData)\r\n      .eq('id', routeId)\r\n      .eq('driver_id', driver.id)\r\n      .select()\r\n      .single();\r\n\r\n    if (updateError) {\r\n      console.error('Error updating route:', updateError);\r\n      return NextResponse.json(\r\n        { error: 'Error actualizando ruta' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    return NextResponse.json(updatedRoute);\r\n\r\n  } catch (error) {\r\n    console.error('Error in driver route update API:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n"],"names":["GET","PUT","request","params","routeId","id","routeData","name","total_distance","estimated_time","status","shipments","orderNumber","tracking_number","customer_name","customer_phone","destination","address","city","postal_code","coordinates","lat","lng","items","quantity","weight","estimated_delivery_time","requires_signature","waypoints","driver","created_at","Date","toISOString","updated_at","NextResponse","json","error","console","session","auth","user","email","body","current_shipment_index","supabase","createClient","data","driverError","from","select","eq","single","updateData","updatedRoute","updateError","update"],"mappings":"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"}