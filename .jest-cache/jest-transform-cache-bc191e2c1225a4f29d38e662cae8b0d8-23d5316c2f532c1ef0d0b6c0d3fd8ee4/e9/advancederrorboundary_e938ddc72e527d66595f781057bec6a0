5b524d484adc372f45511cc4a0360b34
'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "AdvancedErrorBoundary", {
    enumerable: true,
    get: function() {
        return AdvancedErrorBoundary;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _lucidereact = require("lucide-react");
const _button = require("../../components/ui/button");
const _card = require("../../components/ui/card");
const _alert = require("../../components/ui/alert");
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
class AdvancedErrorBoundary extends _react.Component {
    constructor(props){
        super(props), this.retryTimeoutId = null, this.recoveryTimeoutId = null, this.startTime = Date.now(), // ===================================
        // M√âTODOS DE RECUPERACI√ìN
        // ===================================
        this.attemptAutoRecovery = ()=>{
            const { recoveryTimeout = 5000 } = this.props;
            const { recoveryStrategy } = this.state;
            this.recoveryTimeoutId = setTimeout(()=>{
                switch(recoveryStrategy){
                    case 'retry':
                        this.handleRetry();
                        break;
                    case 'reload':
                        window.location.reload();
                        break;
                    case 'redirect':
                        window.location.href = '/';
                        break;
                    default:
                        break;
                }
            }, recoveryTimeout);
        }, this.handleRetry = ()=>{
            const { maxRetries = 3, retryDelay = 1000 } = this.props;
            const { retryCount } = this.state;
            if (retryCount >= maxRetries) {
                console.warn('üîÑ Max retries reached, showing fallback UI');
                return;
            }
            this.retryTimeoutId = setTimeout(()=>{
                this.setState((prevState)=>({
                        hasError: false,
                        error: null,
                        errorInfo: null,
                        retryCount: prevState.retryCount + 1
                    }));
            }, retryDelay * (retryCount + 1)); // Backoff exponencial
        }, this.handleManualRetry = ()=>{
            this.setState({
                hasError: false,
                error: null,
                errorInfo: null,
                retryCount: 0
            });
        }, this.handleReload = ()=>{
            window.location.reload();
        }, this.handleGoHome = ()=>{
            window.location.href = '/';
        }, // ===================================
        // REPORTE DE ERRORES
        // ===================================
        this.reportError = async (error, errorInfo)=>{
            try {
                const report = {
                    errorId: this.state.errorId,
                    timestamp: Date.now(),
                    error: {
                        name: error.name,
                        message: error.message,
                        stack: error.stack
                    },
                    errorInfo: {
                        componentStack: errorInfo.componentStack
                    },
                    context: {
                        level: this.props.level || 'component',
                        component: this.props.context || 'unknown',
                        url: window.location.href,
                        userAgent: navigator.userAgent,
                        userId: this.getUserId()
                    },
                    recovery: {
                        strategy: this.state.recoveryStrategy,
                        retryCount: this.state.retryCount,
                        successful: false
                    },
                    performance: {
                        timeToError: Date.now() - this.startTime,
                        memoryUsage: this.getMemoryUsage()
                    }
                };
                // Enviar reporte al sistema de monitoreo
                await this.sendErrorReport(report);
            } catch (reportError) {
                console.error('‚ùå Failed to report error:', reportError);
            }
        }, this.reportIssue = ()=>{
            const subject = `Error Report - ${this.state.errorId}`;
            const body = `Error ID: ${this.state.errorId}\nTipo: ${this.state.errorType}\nURL: ${window.location.href}\nFecha: ${new Date().toISOString()}`;
            const mailtoUrl = `mailto:soporte@pinteya.com?subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(body)}`;
            window.open(mailtoUrl);
        };
        this.state = {
            hasError: false,
            error: null,
            errorInfo: null,
            errorId: '',
            retryCount: 0,
            lastErrorTime: 0,
            errorType: 'unknown',
            recoveryStrategy: 'retry'
        };
    }
    static getDerivedStateFromError(error) {
        const errorId = `error_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
        const errorType = AdvancedErrorBoundary.classifyError(error);
        const recoveryStrategy = AdvancedErrorBoundary.determineRecoveryStrategy(error, errorType);
        return {
            hasError: true,
            error,
            errorId,
            errorType,
            recoveryStrategy,
            lastErrorTime: Date.now()
        };
    }
    componentDidCatch(error, errorInfo) {
        const { onError, enableReporting = true } = this.props;
        this.setState({
            errorInfo
        });
        // Reportar error
        if (enableReporting) {
            this.reportError(error, errorInfo);
        }
        // Callback personalizado
        if (onError) {
            onError(error, errorInfo, this.state.errorId);
        }
        // Intentar recuperaci√≥n autom√°tica
        if (this.props.enableAutoRecovery) {
            this.attemptAutoRecovery();
        }
        console.error('üö® Error Boundary caught an error:', error);
        console.error('üìç Error Info:', errorInfo);
    }
    componentWillUnmount() {
        if (this.retryTimeoutId) {
            clearTimeout(this.retryTimeoutId);
        }
        if (this.recoveryTimeoutId) {
            clearTimeout(this.recoveryTimeoutId);
        }
    }
    // ===================================
    // M√âTODOS DE CLASIFICACI√ìN
    // ===================================
    static classifyError(error) {
        const message = error.message.toLowerCase();
        const stack = error.stack?.toLowerCase() || '';
        // Error de chunk loading (lazy loading)
        if (message.includes('loading chunk') || message.includes('loading css chunk')) {
            return 'chunk';
        }
        // Error de red
        if (message.includes('network') || message.includes('fetch') || message.includes('timeout')) {
            return 'network';
        }
        // Error de componente
        if (stack.includes('react') || message.includes('render') || message.includes('component')) {
            return 'component';
        }
        return 'unknown';
    }
    static determineRecoveryStrategy(error, errorType) {
        switch(errorType){
            case 'chunk':
                return 'reload' // Recargar para obtener chunks actualizados
                ;
            case 'network':
                return 'retry' // Reintentar operaci√≥n de red
                ;
            case 'component':
                return 'fallback' // Mostrar UI de fallback
                ;
            default:
                return 'retry';
        }
    }
    getUserId() {
        // Intentar obtener ID de usuario de diferentes fuentes
        try {
            // Clerk
            const clerkUser = window.__clerk_user;
            if (clerkUser?.id) {
                return clerkUser.id;
            }
            // LocalStorage
            const storedUser = localStorage.getItem('user');
            if (storedUser) {
                const user = JSON.parse(storedUser);
                return user.id;
            }
            return undefined;
        } catch  {
            return undefined;
        }
    }
    getMemoryUsage() {
        try {
            if ('memory' in performance) {
                return performance.memory.usedJSHeapSize;
            }
            return undefined;
        } catch  {
            return undefined;
        }
    }
    async sendErrorReport(report) {
        try {
            await fetch('/api/monitoring/errors', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(report)
            });
        } catch (error) {
            console.error('‚ùå Failed to send error report:', error);
        }
    }
    // ===================================
    // RENDER
    // ===================================
    render() {
        const { hasError, error, errorType, recoveryStrategy, retryCount } = this.state;
        const { children, fallback, enableRetry = true, maxRetries = 3, level = 'component' } = this.props;
        if (hasError && error) {
            // Si hay un fallback personalizado, usarlo
            if (fallback) {
                return fallback;
            }
            // Renderizar UI de error apropiada seg√∫n el nivel
            return this.renderErrorUI(error, errorType, recoveryStrategy, retryCount, maxRetries, enableRetry, level);
        }
        return children;
    }
    renderErrorUI(error, errorType, recoveryStrategy, retryCount, maxRetries, enableRetry, level) {
        const isPageLevel = level === 'page';
        const canRetry = enableRetry && retryCount < maxRetries;
        if (isPageLevel) {
            return this.renderPageErrorUI(error, errorType, canRetry);
        } else {
            return this.renderComponentErrorUI(error, errorType, canRetry);
        }
    }
    renderPageErrorUI(error, errorType, canRetry) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
            className: "min-h-screen flex items-center justify-center bg-gray-50 px-4",
            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.Card, {
                className: "w-full max-w-md",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.CardHeader, {
                        className: "text-center",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                className: "mx-auto w-12 h-12 bg-red-100 rounded-full flex items-center justify-center mb-4",
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.AlertTriangle, {
                                    className: "w-6 h-6 text-red-600"
                                })
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardTitle, {
                                className: "text-xl",
                                children: "\xa1Oops! Algo sali\xf3 mal"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardDescription, {
                                children: this.getErrorMessage(errorType)
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.CardContent, {
                        className: "space-y-4",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_alert.Alert, {
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Bug, {
                                        className: "h-4 w-4"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_alert.AlertTitle, {
                                        children: "Detalles del Error"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_alert.AlertDescription, {
                                        className: "text-sm",
                                        children: [
                                            "ID: ",
                                            this.state.errorId,
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("br", {}),
                                            "Tipo: ",
                                            errorType,
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("br", {}),
                                            process.env.NODE_ENV === 'development' && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
                                                children: [
                                                    "Mensaje: ",
                                                    error.message
                                                ]
                                            })
                                        ]
                                    })
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "flex flex-col gap-2",
                                children: [
                                    canRetry && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_button.Button, {
                                        onClick: this.handleManualRetry,
                                        className: "w-full",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.RefreshCw, {
                                                className: "w-4 h-4 mr-2"
                                            }),
                                            "Intentar de nuevo"
                                        ]
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_button.Button, {
                                        variant: "outline",
                                        onClick: this.handleGoHome,
                                        className: "w-full",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Home, {
                                                className: "w-4 h-4 mr-2"
                                            }),
                                            "Ir al inicio"
                                        ]
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_button.Button, {
                                        variant: "outline",
                                        onClick: this.handleReload,
                                        className: "w-full",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.RefreshCw, {
                                                className: "w-4 h-4 mr-2"
                                            }),
                                            "Recargar p\xe1gina"
                                        ]
                                    })
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                className: "text-center",
                                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_button.Button, {
                                    variant: "link",
                                    size: "sm",
                                    onClick: ()=>this.reportIssue(),
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Mail, {
                                            className: "w-4 h-4 mr-2"
                                        }),
                                        "Reportar problema"
                                    ]
                                })
                            })
                        ]
                    })
                ]
            })
        });
    }
    renderComponentErrorUI(error, errorType, canRetry) {
        return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
            className: "p-4 border border-red-200 rounded-lg bg-red-50",
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "flex items-center gap-2 mb-2",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.AlertTriangle, {
                            className: "w-4 h-4 text-red-600"
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                            className: "text-sm font-medium text-red-800",
                            children: "Error en componente"
                        })
                    ]
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                    className: "text-sm text-red-700 mb-3",
                    children: this.getErrorMessage(errorType)
                }),
                canRetry && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_button.Button, {
                    size: "sm",
                    variant: "outline",
                    onClick: this.handleManualRetry,
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.RefreshCw, {
                            className: "w-3 h-3 mr-1"
                        }),
                        "Reintentar"
                    ]
                })
            ]
        });
    }
    getErrorMessage(errorType) {
        switch(errorType){
            case 'chunk':
                return 'Error cargando recursos. La p√°gina se recargar√° autom√°ticamente.';
            case 'network':
                return 'Error de conexi√≥n. Verifica tu conexi√≥n a internet.';
            case 'component':
                return 'Error en el componente. Intentando recuperaci√≥n autom√°tica.';
            default:
                return 'Ha ocurrido un error inesperado. Estamos trabajando para solucionarlo.';
        }
    }
}

//# sourceMappingURL=data:application/json;base64,