fb61dc3228a09a979d40cf4dc661b81d
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_twpg5sg6b() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\run-purchase-simulation\\route.ts";
  var hash = "9cc6b08f7cff5485716b10560d9a8285df513601";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\run-purchase-simulation\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 20
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 23
        }
      },
      "7": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "8": {
        start: {
          line: 24,
          column: 23
        },
        end: {
          line: 24,
          column: 47
        }
      },
      "9": {
        start: {
          line: 25,
          column: 14
        },
        end: {
          line: 25,
          column: 29
        }
      },
      "10": {
        start: {
          line: 26,
          column: 26
        },
        end: {
          line: 26,
          column: 65
        }
      },
      "11": {
        start: {
          line: 27,
          column: 28
        },
        end: {
          line: 27,
          column: 69
        }
      },
      "12": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 31,
          column: 6
        }
      },
      "13": {
        start: {
          line: 33,
          column: 16
        },
        end: {
          line: 33,
          column: 24
        }
      },
      "14": {
        start: {
          line: 34,
          column: 18
        },
        end: {
          line: 34,
          column: 59
        }
      },
      "15": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 100,
          column: 5
        }
      },
      "16": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 69
        }
      },
      "17": {
        start: {
          line: 39,
          column: 27
        },
        end: {
          line: 39,
          column: 100
        }
      },
      "18": {
        start: {
          line: 40,
          column: 25
        },
        end: {
          line: 40,
          column: 85
        }
      },
      "19": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 49,
          column: 9
        }
      },
      "20": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 48,
          column: 15
        }
      },
      "21": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 57
        }
      },
      "22": {
        start: {
          line: 52,
          column: 35
        },
        end: {
          line: 55,
          column: 10
        }
      },
      "23": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 55
        }
      },
      "24": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 42
        }
      },
      "25": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 60,
          column: 9
        }
      },
      "26": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 59,
          column: 47
        }
      },
      "27": {
        start: {
          line: 62,
          column: 19
        },
        end: {
          line: 62,
          column: 23
        }
      },
      "28": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 71,
          column: 9
        }
      },
      "29": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 70,
          column: 13
        }
      },
      "30": {
        start: {
          line: 65,
          column: 36
        },
        end: {
          line: 65,
          column: 78
        }
      },
      "31": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 66,
          column: 47
        }
      },
      "32": {
        start: {
          line: 67,
          column: 16
        },
        end: {
          line: 67,
          column: 61
        }
      },
      "33": {
        start: {
          line: 69,
          column: 16
        },
        end: {
          line: 69,
          column: 69
        }
      },
      "34": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 78,
          column: 11
        }
      },
      "35": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 55
        }
      },
      "36": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 93,
          column: 9
        }
      },
      "37": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 92,
          column: 15
        }
      },
      "38": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 99,
          column: 11
        }
      },
      "39": {
        start: {
          line: 103,
          column: 23
        },
        end: {
          line: 103,
          column: 96
        }
      },
      "40": {
        start: {
          line: 104,
          column: 21
        },
        end: {
          line: 104,
          column: 81
        }
      },
      "41": {
        start: {
          line: 105,
          column: 4
        },
        end: {
          line: 111,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 28,
            column: 9
          },
          end: {
            line: 28,
            column: 33
          }
        },
        loc: {
          start: {
            line: 28,
            column: 39
          },
          end: {
            line: 32,
            column: 1
          }
        },
        line: 28
      },
      "5": {
        name: "POST",
        decl: {
          start: {
            line: 35,
            column: 15
          },
          end: {
            line: 35,
            column: 19
          }
        },
        loc: {
          start: {
            line: 35,
            column: 29
          },
          end: {
            line: 101,
            column: 1
          }
        },
        line: 35
      },
      "6": {
        name: "GET",
        decl: {
          start: {
            line: 102,
            column: 15
          },
          end: {
            line: 102,
            column: 18
          }
        },
        loc: {
          start: {
            line: 102,
            column: 21
          },
          end: {
            line: 112,
            column: 1
          }
        },
        line: 102
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 29,
            column: 11
          },
          end: {
            line: 31,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 29,
            column: 35
          },
          end: {
            line: 29,
            column: 38
          }
        }, {
          start: {
            line: 29,
            column: 41
          },
          end: {
            line: 31,
            column: 5
          }
        }],
        line: 29
      },
      "1": {
        loc: {
          start: {
            line: 29,
            column: 11
          },
          end: {
            line: 29,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 11
          },
          end: {
            line: 29,
            column: 14
          }
        }, {
          start: {
            line: 29,
            column: 18
          },
          end: {
            line: 29,
            column: 32
          }
        }],
        line: 29
      },
      "2": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "3": {
        loc: {
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "4": {
        loc: {
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "5": {
        loc: {
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 93,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 93,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "6": {
        loc: {
          start: {
            line: 88,
            column: 27
          },
          end: {
            line: 88,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 88,
            column: 68
          },
          end: {
            line: 88,
            column: 79
          }
        }, {
          start: {
            line: 88,
            column: 82
          },
          end: {
            line: 88,
            column: 91
          }
        }],
        line: 88
      },
      "7": {
        loc: {
          start: {
            line: 109,
            column: 17
          },
          end: {
            line: 109,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 109,
            column: 52
          },
          end: {
            line: 109,
            column: 88
          }
        }, {
          start: {
            line: 109,
            column: 91
          },
          end: {
            line: 109,
            column: 95
          }
        }],
        line: 109
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\run-purchase-simulation\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { exec } from 'child_process';\r\nimport { promisify } from 'util';\r\nimport fs from 'fs';\r\nimport path from 'path';\r\n\r\nconst execAsync = promisify(exec);\r\n\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    console.log('\uD83D\uDE80 Iniciando simulaci\xF3n de flujo de compra...');\r\n    \r\n    // Ruta al script de simulaci\xF3n\r\n    const scriptPath = path.join(process.cwd(), 'complete-purchase-flow-simulation.js');\r\n    const logsPath = path.join(process.cwd(), 'purchase-flow-logs.json');\r\n    \r\n    // Verificar que el script existe\r\n    if (!fs.existsSync(scriptPath)) {\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: 'Script de simulaci\xF3n no encontrado'\r\n      }, { status: 404 });\r\n    }\r\n    \r\n    // Ejecutar el script de simulaci\xF3n\r\n    console.log('\uD83D\uDCDD Ejecutando script:', scriptPath);\r\n    \r\n    const { stdout, stderr } = await execAsync(`node \"${scriptPath}\"`, {\r\n      cwd: process.cwd(),\r\n      timeout: 30000 // 30 segundos timeout\r\n    });\r\n    \r\n    console.log('\u2705 Script ejecutado exitosamente');\r\n    console.log('\uD83D\uDCE4 Stdout:', stdout);\r\n    \r\n    if (stderr) {\r\n      console.warn('\u26A0\uFE0F Stderr:', stderr);\r\n    }\r\n    \r\n    // Leer los logs generados\r\n    let logs = null;\r\n    if (fs.existsSync(logsPath)) {\r\n      try {\r\n        const logsContent = fs.readFileSync(logsPath, 'utf8');\r\n        logs = JSON.parse(logsContent);\r\n        console.log('\uD83D\uDCCA Logs cargados exitosamente');\r\n      } catch (parseError) {\r\n        console.error('\u274C Error parseando logs:', parseError);\r\n      }\r\n    }\r\n    \r\n    return NextResponse.json({\r\n      success: true,\r\n      message: 'Simulaci\xF3n completada exitosamente',\r\n      logs,\r\n      output: stdout,\r\n      timestamp: new Date().toISOString()\r\n    });\r\n    \r\n  } catch (error) {\r\n    console.error('\u274C Error en simulaci\xF3n:', error);\r\n    \r\n    // Si es un error de timeout o ejecuci\xF3n\r\n    if (error instanceof Error) {\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: error.message,\r\n        details: {\r\n          name: error.name,\r\n          stack: process.env.NODE_ENV === 'development' ? error.stack : undefined\r\n        }\r\n      }, { status: 500 });\r\n    }\r\n    \r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Error desconocido en la simulaci\xF3n'\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n// M\xE9todo GET para verificar el estado del endpoint\r\nexport async function GET() {\r\n  const scriptPath = path.join(process.cwd(), 'complete-purchase-flow-simulation.js');\r\n  const logsPath = path.join(process.cwd(), 'purchase-flow-logs.json');\r\n  \r\n  return NextResponse.json({\r\n    status: 'ready',\r\n    scriptExists: fs.existsSync(scriptPath),\r\n    logsExist: fs.existsSync(logsPath),\r\n    lastRun: fs.existsSync(logsPath) ? fs.statSync(logsPath).mtime : null,\r\n    timestamp: new Date().toISOString()\r\n  });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "POST", "runtime", "execAsync", "promisify", "exec", "request", "console", "log", "scriptPath", "path", "join", "process", "cwd", "logsPath", "fs", "existsSync", "NextResponse", "json", "success", "error", "status", "stdout", "stderr", "timeout", "warn", "logs", "logsContent", "readFileSync", "JSON", "parse", "parseError", "message", "output", "timestamp", "Date", "toISOString", "Error", "details", "name", "stack", "env", "NODE_ENV", "undefined", "scriptExists", "logsExist", "lastRun", "statSync", "mtime"],
      mappings: "AAAA,qCAAqC;;;;;;;;;;;;QAqFfA;eAAAA;;QA1EAC;eAAAA;;QAVTC;eAAAA;;;wBAE6B;+BACrB;sBACK;2DACX;6DACE;;;;;;AANV,MAAMA,UAAU;AAQvB,MAAMC,YAAYC,IAAAA,eAAS,EAACC,mBAAI;AAEzB,eAAeJ,KAAKK,OAAoB;IAC7C,IAAI;QACFC,QAAQC,GAAG,CAAC;QAEZ,+BAA+B;QAC/B,MAAMC,aAAaC,aAAI,CAACC,IAAI,CAACC,QAAQC,GAAG,IAAI;QAC5C,MAAMC,WAAWJ,aAAI,CAACC,IAAI,CAACC,QAAQC,GAAG,IAAI;QAE1C,iCAAiC;QACjC,IAAI,CAACE,WAAE,CAACC,UAAU,CAACP,aAAa;YAC9B,OAAOQ,oBAAY,CAACC,IAAI,CAAC;gBACvBC,SAAS;gBACTC,OAAO;YACT,GAAG;gBAAEC,QAAQ;YAAI;QACnB;QAEA,mCAAmC;QACnCd,QAAQC,GAAG,CAAC,yBAAyBC;QAErC,MAAM,EAAEa,MAAM,EAAEC,MAAM,EAAE,GAAG,MAAMpB,UAAU,CAAC,MAAM,EAAEM,WAAW,CAAC,CAAC,EAAE;YACjEI,KAAKD,QAAQC,GAAG;YAChBW,SAAS,MAAM,sBAAsB;QACvC;QAEAjB,QAAQC,GAAG,CAAC;QACZD,QAAQC,GAAG,CAAC,cAAcc;QAE1B,IAAIC,QAAQ;YACVhB,QAAQkB,IAAI,CAAC,cAAcF;QAC7B;QAEA,0BAA0B;QAC1B,IAAIG,OAAO;QACX,IAAIX,WAAE,CAACC,UAAU,CAACF,WAAW;YAC3B,IAAI;gBACF,MAAMa,cAAcZ,WAAE,CAACa,YAAY,CAACd,UAAU;gBAC9CY,OAAOG,KAAKC,KAAK,CAACH;gBAClBpB,QAAQC,GAAG,CAAC;YACd,EAAE,OAAOuB,YAAY;gBACnBxB,QAAQa,KAAK,CAAC,2BAA2BW;YAC3C;QACF;QAEA,OAAOd,oBAAY,CAACC,IAAI,CAAC;YACvBC,SAAS;YACTa,SAAS;YACTN;YACAO,QAAQX;YACRY,WAAW,IAAIC,OAAOC,WAAW;QACnC;IAEF,EAAE,OAAOhB,OAAO;QACdb,QAAQa,KAAK,CAAC,0BAA0BA;QAExC,wCAAwC;QACxC,IAAIA,iBAAiBiB,OAAO;YAC1B,OAAOpB,oBAAY,CAACC,IAAI,CAAC;gBACvBC,SAAS;gBACTC,OAAOA,MAAMY,OAAO;gBACpBM,SAAS;oBACPC,MAAMnB,MAAMmB,IAAI;oBAChBC,OAAO5B,QAAQ6B,GAAG,CAACC,QAAQ,KAAK,gBAAgBtB,MAAMoB,KAAK,GAAGG;gBAChE;YACF,GAAG;gBAAEtB,QAAQ;YAAI;QACnB;QAEA,OAAOJ,oBAAY,CAACC,IAAI,CAAC;YACvBC,SAAS;YACTC,OAAO;QACT,GAAG;YAAEC,QAAQ;QAAI;IACnB;AACF;AAGO,eAAerB;IACpB,MAAMS,aAAaC,aAAI,CAACC,IAAI,CAACC,QAAQC,GAAG,IAAI;IAC5C,MAAMC,WAAWJ,aAAI,CAACC,IAAI,CAACC,QAAQC,GAAG,IAAI;IAE1C,OAAOI,oBAAY,CAACC,IAAI,CAAC;QACvBG,QAAQ;QACRuB,cAAc7B,WAAE,CAACC,UAAU,CAACP;QAC5BoC,WAAW9B,WAAE,CAACC,UAAU,CAACF;QACzBgC,SAAS/B,WAAE,CAACC,UAAU,CAACF,YAAYC,WAAE,CAACgC,QAAQ,CAACjC,UAAUkC,KAAK,GAAG;QACjEd,WAAW,IAAIC,OAAOC,WAAW;IACnC;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9cc6b08f7cff5485716b10560d9a8285df513601"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_twpg5sg6b = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_twpg5sg6b();
cov_twpg5sg6b().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_twpg5sg6b().f[0]++;
  cov_twpg5sg6b().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_twpg5sg6b().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_twpg5sg6b().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_twpg5sg6b().f[1]++;
    cov_twpg5sg6b().s[4]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_twpg5sg6b().f[2]++;
    cov_twpg5sg6b().s[5]++;
    return POST;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_twpg5sg6b().f[3]++;
    cov_twpg5sg6b().s[6]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_twpg5sg6b().s[7]++, require("next/server"));
const _child_process =
/* istanbul ignore next */
(cov_twpg5sg6b().s[8]++, require("child_process"));
const _util =
/* istanbul ignore next */
(cov_twpg5sg6b().s[9]++, require("util"));
const _fs =
/* istanbul ignore next */
(/*#__PURE__*/cov_twpg5sg6b().s[10]++, _interop_require_default(require("fs")));
const _path =
/* istanbul ignore next */
(/*#__PURE__*/cov_twpg5sg6b().s[11]++, _interop_require_default(require("path")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_twpg5sg6b().f[4]++;
  cov_twpg5sg6b().s[12]++;
  return /* istanbul ignore next */(cov_twpg5sg6b().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_twpg5sg6b().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_twpg5sg6b().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_twpg5sg6b().b[0][1]++, {
    default: obj
  });
}
const runtime =
/* istanbul ignore next */
(cov_twpg5sg6b().s[13]++, 'nodejs');
const execAsync =
/* istanbul ignore next */
(cov_twpg5sg6b().s[14]++, (0, _util.promisify)(_child_process.exec));
async function POST(request) {
  /* istanbul ignore next */
  cov_twpg5sg6b().f[5]++;
  cov_twpg5sg6b().s[15]++;
  try {
    /* istanbul ignore next */
    cov_twpg5sg6b().s[16]++;
    console.log('ğ Iniciando simulaciÃ³n de flujo de compra...');
    // Ruta al script de simulaciÃ³n
    const scriptPath =
    /* istanbul ignore next */
    (cov_twpg5sg6b().s[17]++, _path.default.join(process.cwd(), 'complete-purchase-flow-simulation.js'));
    const logsPath =
    /* istanbul ignore next */
    (cov_twpg5sg6b().s[18]++, _path.default.join(process.cwd(), 'purchase-flow-logs.json'));
    // Verificar que el script existe
    /* istanbul ignore next */
    cov_twpg5sg6b().s[19]++;
    if (!_fs.default.existsSync(scriptPath)) {
      /* istanbul ignore next */
      cov_twpg5sg6b().b[2][0]++;
      cov_twpg5sg6b().s[20]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Script de simulaciÃ³n no encontrado'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_twpg5sg6b().b[2][1]++;
    }
    // Ejecutar el script de simulaciÃ³n
    cov_twpg5sg6b().s[21]++;
    console.log('ğ Ejecutando script:', scriptPath);
    const {
      stdout,
      stderr
    } =
    /* istanbul ignore next */
    (cov_twpg5sg6b().s[22]++, await execAsync(`node "${scriptPath}"`, {
      cwd: process.cwd(),
      timeout: 30000 // 30 segundos timeout
    }));
    /* istanbul ignore next */
    cov_twpg5sg6b().s[23]++;
    console.log('â Script ejecutado exitosamente');
    /* istanbul ignore next */
    cov_twpg5sg6b().s[24]++;
    console.log('ğ¤ Stdout:', stdout);
    /* istanbul ignore next */
    cov_twpg5sg6b().s[25]++;
    if (stderr) {
      /* istanbul ignore next */
      cov_twpg5sg6b().b[3][0]++;
      cov_twpg5sg6b().s[26]++;
      console.warn('â ï¸ Stderr:', stderr);
    } else
    /* istanbul ignore next */
    {
      cov_twpg5sg6b().b[3][1]++;
    }
    // Leer los logs generados
    let logs =
    /* istanbul ignore next */
    (cov_twpg5sg6b().s[27]++, null);
    /* istanbul ignore next */
    cov_twpg5sg6b().s[28]++;
    if (_fs.default.existsSync(logsPath)) {
      /* istanbul ignore next */
      cov_twpg5sg6b().b[4][0]++;
      cov_twpg5sg6b().s[29]++;
      try {
        const logsContent =
        /* istanbul ignore next */
        (cov_twpg5sg6b().s[30]++, _fs.default.readFileSync(logsPath, 'utf8'));
        /* istanbul ignore next */
        cov_twpg5sg6b().s[31]++;
        logs = JSON.parse(logsContent);
        /* istanbul ignore next */
        cov_twpg5sg6b().s[32]++;
        console.log('ğ Logs cargados exitosamente');
      } catch (parseError) {
        /* istanbul ignore next */
        cov_twpg5sg6b().s[33]++;
        console.error('â Error parseando logs:', parseError);
      }
    } else
    /* istanbul ignore next */
    {
      cov_twpg5sg6b().b[4][1]++;
    }
    cov_twpg5sg6b().s[34]++;
    return _server.NextResponse.json({
      success: true,
      message: 'SimulaciÃ³n completada exitosamente',
      logs,
      output: stdout,
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_twpg5sg6b().s[35]++;
    console.error('â Error en simulaciÃ³n:', error);
    // Si es un error de timeout o ejecuciÃ³n
    /* istanbul ignore next */
    cov_twpg5sg6b().s[36]++;
    if (error instanceof Error) {
      /* istanbul ignore next */
      cov_twpg5sg6b().b[5][0]++;
      cov_twpg5sg6b().s[37]++;
      return _server.NextResponse.json({
        success: false,
        error: error.message,
        details: {
          name: error.name,
          stack: process.env.NODE_ENV === 'development' ?
          /* istanbul ignore next */
          (cov_twpg5sg6b().b[6][0]++, error.stack) :
          /* istanbul ignore next */
          (cov_twpg5sg6b().b[6][1]++, undefined)
        }
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_twpg5sg6b().b[5][1]++;
    }
    cov_twpg5sg6b().s[38]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Error desconocido en la simulaciÃ³n'
    }, {
      status: 500
    });
  }
}
async function GET() {
  /* istanbul ignore next */
  cov_twpg5sg6b().f[6]++;
  const scriptPath =
  /* istanbul ignore next */
  (cov_twpg5sg6b().s[39]++, _path.default.join(process.cwd(), 'complete-purchase-flow-simulation.js'));
  const logsPath =
  /* istanbul ignore next */
  (cov_twpg5sg6b().s[40]++, _path.default.join(process.cwd(), 'purchase-flow-logs.json'));
  /* istanbul ignore next */
  cov_twpg5sg6b().s[41]++;
  return _server.NextResponse.json({
    status: 'ready',
    scriptExists: _fs.default.existsSync(scriptPath),
    logsExist: _fs.default.existsSync(logsPath),
    lastRun: _fs.default.existsSync(logsPath) ?
    /* istanbul ignore next */
    (cov_twpg5sg6b().b[7][0]++, _fs.default.statSync(logsPath).mtime) :
    /* istanbul ignore next */
    (cov_twpg5sg6b().b[7][1]++, null),
    timestamp: new Date().toISOString()
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,