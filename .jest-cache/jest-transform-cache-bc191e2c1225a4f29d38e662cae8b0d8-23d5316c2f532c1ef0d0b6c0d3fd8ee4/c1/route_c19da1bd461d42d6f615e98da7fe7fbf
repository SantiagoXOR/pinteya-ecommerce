8b98a7e67d2bf4b979b611da3e14b944
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_bo5zyrjha() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\seo\\testing\\metadata\\route.ts";
  var hash = "a9b9247b45d32f6388238208890b0ad0cb94fd00";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\seo\\testing\\metadata\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 25,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 23
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 20
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 23
        }
      },
      "8": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 38
        }
      },
      "9": {
        start: {
          line: 27,
          column: 25
        },
        end: {
          line: 27,
          column: 76
        }
      },
      "10": {
        start: {
          line: 28,
          column: 16
        },
        end: {
          line: 28,
          column: 63
        }
      },
      "11": {
        start: {
          line: 29,
          column: 16
        },
        end: {
          line: 29,
          column: 24
        }
      },
      "12": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 95,
          column: 5
        }
      },
      "13": {
        start: {
          line: 32,
          column: 33
        },
        end: {
          line: 32,
          column: 53
        }
      },
      "14": {
        start: {
          line: 33,
          column: 20
        },
        end: {
          line: 33,
          column: 43
        }
      },
      "15": {
        start: {
          line: 34,
          column: 21
        },
        end: {
          line: 34,
          column: 57
        }
      },
      "16": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 55,
          column: 9
        }
      },
      "17": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 54,
          column: 15
        }
      },
      "18": {
        start: {
          line: 56,
          column: 25
        },
        end: {
          line: 58,
          column: 9
        }
      },
      "19": {
        start: {
          line: 59,
          column: 24
        },
        end: {
          line: 59,
          column: 107
        }
      },
      "20": {
        start: {
          line: 61,
          column: 29
        },
        end: {
          line: 64,
          column: 14
        }
      },
      "21": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 66
        }
      },
      "22": {
        start: {
          line: 62,
          column: 47
        },
        end: {
          line: 62,
          column: 64
        }
      },
      "23": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 23
        }
      },
      "24": {
        start: {
          line: 66,
          column: 32
        },
        end: {
          line: 66,
          column: 72
        }
      },
      "25": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 70,
          column: 36
        }
      },
      "26": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 85,
          column: 11
        }
      },
      "27": {
        start: {
          line: 77,
          column: 48
        },
        end: {
          line: 77,
          column: 69
        }
      },
      "28": {
        start: {
          line: 78,
          column: 48
        },
        end: {
          line: 78,
          column: 69
        }
      },
      "29": {
        start: {
          line: 79,
          column: 50
        },
        end: {
          line: 79,
          column: 72
        }
      },
      "30": {
        start: {
          line: 80,
          column: 91
        },
        end: {
          line: 80,
          column: 104
        }
      },
      "31": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 87,
          column: 119
        }
      },
      "32": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 94,
          column: 11
        }
      },
      "33": {
        start: {
          line: 98,
          column: 4
        },
        end: {
          line: 168,
          column: 5
        }
      },
      "34": {
        start: {
          line: 99,
          column: 21
        },
        end: {
          line: 99,
          column: 41
        }
      },
      "35": {
        start: {
          line: 100,
          column: 68
        },
        end: {
          line: 100,
          column: 72
        }
      },
      "36": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 122,
          column: 9
        }
      },
      "37": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 121,
          column: 15
        }
      },
      "38": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 131,
          column: 9
        }
      },
      "39": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 130,
          column: 15
        }
      },
      "40": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 137,
          column: 9
        }
      },
      "41": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 136,
          column: 15
        }
      },
      "42": {
        start: {
          line: 139,
          column: 24
        },
        end: {
          line: 139,
          column: 103
        }
      },
      "43": {
        start: {
          line: 141,
          column: 25
        },
        end: {
          line: 141,
          column: 56
        }
      },
      "44": {
        start: {
          line: 143,
          column: 32
        },
        end: {
          line: 143,
          column: 120
        }
      },
      "45": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 148,
          column: 36
        }
      },
      "46": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 158,
          column: 11
        }
      },
      "47": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 160,
          column: 120
        }
      },
      "48": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 167,
          column: 11
        }
      },
      "49": {
        start: {
          line: 174,
          column: 28
        },
        end: {
          line: 174,
          column: 30
        }
      },
      "50": {
        start: {
          line: 175,
          column: 25
        },
        end: {
          line: 175,
          column: 99
        }
      },
      "51": {
        start: {
          line: 175,
          column: 45
        },
        end: {
          line: 175,
          column: 98
        }
      },
      "52": {
        start: {
          line: 176,
          column: 31
        },
        end: {
          line: 176,
          column: 111
        }
      },
      "53": {
        start: {
          line: 176,
          column: 51
        },
        end: {
          line: 176,
          column: 110
        }
      },
      "54": {
        start: {
          line: 177,
          column: 27
        },
        end: {
          line: 177,
          column: 104
        }
      },
      "55": {
        start: {
          line: 177,
          column: 47
        },
        end: {
          line: 177,
          column: 103
        }
      },
      "56": {
        start: {
          line: 178,
          column: 28
        },
        end: {
          line: 178,
          column: 107
        }
      },
      "57": {
        start: {
          line: 178,
          column: 48
        },
        end: {
          line: 178,
          column: 106
        }
      },
      "58": {
        start: {
          line: 179,
          column: 4
        },
        end: {
          line: 181,
          column: 5
        }
      },
      "59": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 180,
          column: 108
        }
      },
      "60": {
        start: {
          line: 182,
          column: 4
        },
        end: {
          line: 184,
          column: 5
        }
      },
      "61": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 183,
          column: 116
        }
      },
      "62": {
        start: {
          line: 185,
          column: 4
        },
        end: {
          line: 187,
          column: 5
        }
      },
      "63": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 186,
          column: 114
        }
      },
      "64": {
        start: {
          line: 188,
          column: 4
        },
        end: {
          line: 190,
          column: 5
        }
      },
      "65": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 189,
          column: 113
        }
      },
      "66": {
        start: {
          line: 191,
          column: 4
        },
        end: {
          line: 193,
          column: 5
        }
      },
      "67": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 192,
          column: 88
        }
      },
      "68": {
        start: {
          line: 194,
          column: 4
        },
        end: {
          line: 194,
          column: 27
        }
      },
      "69": {
        start: {
          line: 197,
          column: 25
        },
        end: {
          line: 197,
          column: 121
        }
      },
      "70": {
        start: {
          line: 197,
          column: 82
        },
        end: {
          line: 197,
          column: 95
        }
      },
      "71": {
        start: {
          line: 198,
          column: 24
        },
        end: {
          line: 198,
          column: 105
        }
      },
      "72": {
        start: {
          line: 198,
          column: 44
        },
        end: {
          line: 198,
          column: 97
        }
      },
      "73": {
        start: {
          line: 199,
          column: 30
        },
        end: {
          line: 199,
          column: 117
        }
      },
      "74": {
        start: {
          line: 199,
          column: 50
        },
        end: {
          line: 199,
          column: 109
        }
      },
      "75": {
        start: {
          line: 200,
          column: 26
        },
        end: {
          line: 200,
          column: 110
        }
      },
      "76": {
        start: {
          line: 200,
          column: 46
        },
        end: {
          line: 200,
          column: 102
        }
      },
      "77": {
        start: {
          line: 201,
          column: 28
        },
        end: {
          line: 201,
          column: 114
        }
      },
      "78": {
        start: {
          line: 201,
          column: 48
        },
        end: {
          line: 201,
          column: 106
        }
      },
      "79": {
        start: {
          line: 202,
          column: 29
        },
        end: {
          line: 202,
          column: 31
        }
      },
      "80": {
        start: {
          line: 203,
          column: 4
        },
        end: {
          line: 205,
          column: 5
        }
      },
      "81": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 204,
          column: 59
        }
      },
      "82": {
        start: {
          line: 206,
          column: 4
        },
        end: {
          line: 208,
          column: 5
        }
      },
      "83": {
        start: {
          line: 207,
          column: 8
        },
        end: {
          line: 207,
          column: 57
        }
      },
      "84": {
        start: {
          line: 209,
          column: 4
        },
        end: {
          line: 211,
          column: 5
        }
      },
      "85": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 210,
          column: 63
        }
      },
      "86": {
        start: {
          line: 212,
          column: 4
        },
        end: {
          line: 214,
          column: 5
        }
      },
      "87": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 213,
          column: 57
        }
      },
      "88": {
        start: {
          line: 215,
          column: 27
        },
        end: {
          line: 217,
          column: 5
        }
      },
      "89": {
        start: {
          line: 216,
          column: 39
        },
        end: {
          line: 216,
          column: 60
        }
      },
      "90": {
        start: {
          line: 216,
          column: 71
        },
        end: {
          line: 216,
          column: 76
        }
      },
      "91": {
        start: {
          line: 218,
          column: 4
        },
        end: {
          line: 226,
          column: 6
        }
      },
      "92": {
        start: {
          line: 229,
          column: 28
        },
        end: {
          line: 229,
          column: 30
        }
      },
      "93": {
        start: {
          line: 230,
          column: 4
        },
        end: {
          line: 239,
          column: 5
        }
      },
      "94": {
        start: {
          line: 231,
          column: 29
        },
        end: {
          line: 231,
          column: 119
        }
      },
      "95": {
        start: {
          line: 231,
          column: 49
        },
        end: {
          line: 231,
          column: 102
        }
      },
      "96": {
        start: {
          line: 231,
          column: 113
        },
        end: {
          line: 231,
          column: 118
        }
      },
      "97": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 238,
          column: 11
        }
      },
      "98": {
        start: {
          line: 240,
          column: 4
        },
        end: {
          line: 249,
          column: 5
        }
      },
      "99": {
        start: {
          line: 241,
          column: 29
        },
        end: {
          line: 241,
          column: 125
        }
      },
      "100": {
        start: {
          line: 241,
          column: 49
        },
        end: {
          line: 241,
          column: 108
        }
      },
      "101": {
        start: {
          line: 241,
          column: 119
        },
        end: {
          line: 241,
          column: 124
        }
      },
      "102": {
        start: {
          line: 242,
          column: 8
        },
        end: {
          line: 248,
          column: 11
        }
      },
      "103": {
        start: {
          line: 250,
          column: 4
        },
        end: {
          line: 259,
          column: 5
        }
      },
      "104": {
        start: {
          line: 251,
          column: 29
        },
        end: {
          line: 251,
          column: 124
        }
      },
      "105": {
        start: {
          line: 251,
          column: 49
        },
        end: {
          line: 251,
          column: 107
        }
      },
      "106": {
        start: {
          line: 251,
          column: 118
        },
        end: {
          line: 251,
          column: 123
        }
      },
      "107": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 258,
          column: 11
        }
      },
      "108": {
        start: {
          line: 260,
          column: 4
        },
        end: {
          line: 269,
          column: 5
        }
      },
      "109": {
        start: {
          line: 261,
          column: 29
        },
        end: {
          line: 261,
          column: 122
        }
      },
      "110": {
        start: {
          line: 261,
          column: 49
        },
        end: {
          line: 261,
          column: 105
        }
      },
      "111": {
        start: {
          line: 261,
          column: 116
        },
        end: {
          line: 261,
          column: 121
        }
      },
      "112": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 268,
          column: 11
        }
      },
      "113": {
        start: {
          line: 270,
          column: 4
        },
        end: {
          line: 270,
          column: 27
        }
      },
      "114": {
        start: {
          line: 273,
          column: 4
        },
        end: {
          line: 280,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 19
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 16
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 19
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "GET",
        decl: {
          start: {
            line: 30,
            column: 15
          },
          end: {
            line: 30,
            column: 18
          }
        },
        loc: {
          start: {
            line: 30,
            column: 28
          },
          end: {
            line: 96,
            column: 1
          }
        },
        line: 30
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 61,
            column: 45
          },
          end: {
            line: 61,
            column: 46
          }
        },
        loc: {
          start: {
            line: 61,
            column: 61
          },
          end: {
            line: 64,
            column: 9
          }
        },
        line: 61
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 62,
            column: 42
          },
          end: {
            line: 62,
            column: 43
          }
        },
        loc: {
          start: {
            line: 62,
            column: 47
          },
          end: {
            line: 62,
            column: 64
          }
        },
        line: 62
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 77,
            column: 43
          },
          end: {
            line: 77,
            column: 44
          }
        },
        loc: {
          start: {
            line: 77,
            column: 48
          },
          end: {
            line: 77,
            column: 69
          }
        },
        line: 77
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 78,
            column: 43
          },
          end: {
            line: 78,
            column: 44
          }
        },
        loc: {
          start: {
            line: 78,
            column: 48
          },
          end: {
            line: 78,
            column: 69
          }
        },
        line: 78
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 79,
            column: 45
          },
          end: {
            line: 79,
            column: 46
          }
        },
        loc: {
          start: {
            line: 79,
            column: 50
          },
          end: {
            line: 79,
            column: 72
          }
        },
        line: 79
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 80,
            column: 81
          },
          end: {
            line: 80,
            column: 82
          }
        },
        loc: {
          start: {
            line: 80,
            column: 91
          },
          end: {
            line: 80,
            column: 104
          }
        },
        line: 80
      },
      "12": {
        name: "POST",
        decl: {
          start: {
            line: 97,
            column: 15
          },
          end: {
            line: 97,
            column: 19
          }
        },
        loc: {
          start: {
            line: 97,
            column: 29
          },
          end: {
            line: 169,
            column: 1
          }
        },
        line: 97
      },
      "13": {
        name: "generateMetadataRecommendations",
        decl: {
          start: {
            line: 173,
            column: 9
          },
          end: {
            line: 173,
            column: 40
          }
        },
        loc: {
          start: {
            line: 173,
            column: 50
          },
          end: {
            line: 195,
            column: 1
          }
        },
        line: 173
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 175,
            column: 40
          },
          end: {
            line: 175,
            column: 41
          }
        },
        loc: {
          start: {
            line: 175,
            column: 45
          },
          end: {
            line: 175,
            column: 98
          }
        },
        line: 175
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 176,
            column: 46
          },
          end: {
            line: 176,
            column: 47
          }
        },
        loc: {
          start: {
            line: 176,
            column: 51
          },
          end: {
            line: 176,
            column: 110
          }
        },
        line: 176
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 177,
            column: 42
          },
          end: {
            line: 177,
            column: 43
          }
        },
        loc: {
          start: {
            line: 177,
            column: 47
          },
          end: {
            line: 177,
            column: 103
          }
        },
        line: 177
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 178,
            column: 43
          },
          end: {
            line: 178,
            column: 44
          }
        },
        loc: {
          start: {
            line: 178,
            column: 48
          },
          end: {
            line: 178,
            column: 106
          }
        },
        line: 178
      },
      "18": {
        name: "analyzeMetadataResults",
        decl: {
          start: {
            line: 196,
            column: 9
          },
          end: {
            line: 196,
            column: 31
          }
        },
        loc: {
          start: {
            line: 196,
            column: 41
          },
          end: {
            line: 227,
            column: 1
          }
        },
        line: 196
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 197,
            column: 72
          },
          end: {
            line: 197,
            column: 73
          }
        },
        loc: {
          start: {
            line: 197,
            column: 82
          },
          end: {
            line: 197,
            column: 95
          }
        },
        line: 197
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 198,
            column: 39
          },
          end: {
            line: 198,
            column: 40
          }
        },
        loc: {
          start: {
            line: 198,
            column: 44
          },
          end: {
            line: 198,
            column: 97
          }
        },
        line: 198
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 199,
            column: 45
          },
          end: {
            line: 199,
            column: 46
          }
        },
        loc: {
          start: {
            line: 199,
            column: 50
          },
          end: {
            line: 199,
            column: 109
          }
        },
        line: 199
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 200,
            column: 41
          },
          end: {
            line: 200,
            column: 42
          }
        },
        loc: {
          start: {
            line: 200,
            column: 46
          },
          end: {
            line: 200,
            column: 102
          }
        },
        line: 200
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 201,
            column: 43
          },
          end: {
            line: 201,
            column: 44
          }
        },
        loc: {
          start: {
            line: 201,
            column: 48
          },
          end: {
            line: 201,
            column: 106
          }
        },
        line: 201
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 216,
            column: 34
          },
          end: {
            line: 216,
            column: 35
          }
        },
        loc: {
          start: {
            line: 216,
            column: 39
          },
          end: {
            line: 216,
            column: 60
          }
        },
        line: 216
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 216,
            column: 66
          },
          end: {
            line: 216,
            column: 67
          }
        },
        loc: {
          start: {
            line: 216,
            column: 71
          },
          end: {
            line: 216,
            column: 76
          }
        },
        line: 216
      },
      "26": {
        name: "generateDetailedMetadataRecommendations",
        decl: {
          start: {
            line: 228,
            column: 9
          },
          end: {
            line: 228,
            column: 48
          }
        },
        loc: {
          start: {
            line: 228,
            column: 68
          },
          end: {
            line: 271,
            column: 1
          }
        },
        line: 228
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 231,
            column: 44
          },
          end: {
            line: 231,
            column: 45
          }
        },
        loc: {
          start: {
            line: 231,
            column: 49
          },
          end: {
            line: 231,
            column: 102
          }
        },
        line: 231
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 231,
            column: 108
          },
          end: {
            line: 231,
            column: 109
          }
        },
        loc: {
          start: {
            line: 231,
            column: 113
          },
          end: {
            line: 231,
            column: 118
          }
        },
        line: 231
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 241,
            column: 44
          },
          end: {
            line: 241,
            column: 45
          }
        },
        loc: {
          start: {
            line: 241,
            column: 49
          },
          end: {
            line: 241,
            column: 108
          }
        },
        line: 241
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 241,
            column: 114
          },
          end: {
            line: 241,
            column: 115
          }
        },
        loc: {
          start: {
            line: 241,
            column: 119
          },
          end: {
            line: 241,
            column: 124
          }
        },
        line: 241
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 251,
            column: 44
          },
          end: {
            line: 251,
            column: 45
          }
        },
        loc: {
          start: {
            line: 251,
            column: 49
          },
          end: {
            line: 251,
            column: 107
          }
        },
        line: 251
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 251,
            column: 113
          },
          end: {
            line: 251,
            column: 114
          }
        },
        loc: {
          start: {
            line: 251,
            column: 118
          },
          end: {
            line: 251,
            column: 123
          }
        },
        line: 251
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 261,
            column: 44
          },
          end: {
            line: 261,
            column: 45
          }
        },
        loc: {
          start: {
            line: 261,
            column: 49
          },
          end: {
            line: 261,
            column: 105
          }
        },
        line: 261
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 261,
            column: 111
          },
          end: {
            line: 261,
            column: 112
          }
        },
        loc: {
          start: {
            line: 261,
            column: 116
          },
          end: {
            line: 261,
            column: 121
          }
        },
        line: 261
      },
      "35": {
        name: "OPTIONS",
        decl: {
          start: {
            line: 272,
            column: 15
          },
          end: {
            line: 272,
            column: 22
          }
        },
        loc: {
          start: {
            line: 272,
            column: 32
          },
          end: {
            line: 281,
            column: 1
          }
        },
        line: 272
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "1": {
        loc: {
          start: {
            line: 35,
            column: 12
          },
          end: {
            line: 35,
            column: 25
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 12
          },
          end: {
            line: 35,
            column: 16
          }
        }, {
          start: {
            line: 35,
            column: 20
          },
          end: {
            line: 35,
            column: 25
          }
        }],
        line: 35
      },
      "2": {
        loc: {
          start: {
            line: 56,
            column: 25
          },
          end: {
            line: 58,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 25
          },
          end: {
            line: 56,
            column: 29
          }
        }, {
          start: {
            line: 56,
            column: 33
          },
          end: {
            line: 58,
            column: 9
          }
        }],
        line: 56
      },
      "3": {
        loc: {
          start: {
            line: 80,
            column: 34
          },
          end: {
            line: 80,
            column: 130
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 80,
            column: 55
          },
          end: {
            line: 80,
            column: 126
          }
        }, {
          start: {
            line: 80,
            column: 129
          },
          end: {
            line: 80,
            column: 130
          }
        }],
        line: 80
      },
      "4": {
        loc: {
          start: {
            line: 91,
            column: 21
          },
          end: {
            line: 91,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 91,
            column: 46
          },
          end: {
            line: 91,
            column: 59
          }
        }, {
          start: {
            line: 91,
            column: 62
          },
          end: {
            line: 91,
            column: 77
          }
        }],
        line: 91
      },
      "5": {
        loc: {
          start: {
            line: 100,
            column: 34
          },
          end: {
            line: 100,
            column: 63
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 100,
            column: 59
          },
          end: {
            line: 100,
            column: 63
          }
        }],
        line: 100
      },
      "6": {
        loc: {
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 122,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 122,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 101
      },
      "7": {
        loc: {
          start: {
            line: 101,
            column: 12
          },
          end: {
            line: 101,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 101,
            column: 12
          },
          end: {
            line: 101,
            column: 17
          }
        }, {
          start: {
            line: 101,
            column: 21
          },
          end: {
            line: 101,
            column: 41
          }
        }, {
          start: {
            line: 101,
            column: 45
          },
          end: {
            line: 101,
            column: 62
          }
        }],
        line: 101
      },
      "8": {
        loc: {
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 131,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 131,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 124
      },
      "9": {
        loc: {
          start: {
            line: 133,
            column: 8
          },
          end: {
            line: 137,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 133,
            column: 8
          },
          end: {
            line: 137,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 133
      },
      "10": {
        loc: {
          start: {
            line: 143,
            column: 32
          },
          end: {
            line: 143,
            column: 120
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 143,
            column: 57
          },
          end: {
            line: 143,
            column: 115
          }
        }, {
          start: {
            line: 143,
            column: 118
          },
          end: {
            line: 143,
            column: 120
          }
        }],
        line: 143
      },
      "11": {
        loc: {
          start: {
            line: 155,
            column: 31
          },
          end: {
            line: 155,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 155,
            column: 31
          },
          end: {
            line: 155,
            column: 41
          }
        }, {
          start: {
            line: 155,
            column: 45
          },
          end: {
            line: 155,
            column: 54
          }
        }],
        line: 155
      },
      "12": {
        loc: {
          start: {
            line: 164,
            column: 21
          },
          end: {
            line: 164,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 164,
            column: 46
          },
          end: {
            line: 164,
            column: 59
          }
        }, {
          start: {
            line: 164,
            column: 62
          },
          end: {
            line: 164,
            column: 77
          }
        }],
        line: 164
      },
      "13": {
        loc: {
          start: {
            line: 175,
            column: 45
          },
          end: {
            line: 175,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 175,
            column: 45
          },
          end: {
            line: 175,
            column: 73
          }
        }, {
          start: {
            line: 175,
            column: 77
          },
          end: {
            line: 175,
            column: 98
          }
        }],
        line: 175
      },
      "14": {
        loc: {
          start: {
            line: 176,
            column: 51
          },
          end: {
            line: 176,
            column: 110
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 176,
            column: 51
          },
          end: {
            line: 176,
            column: 85
          }
        }, {
          start: {
            line: 176,
            column: 89
          },
          end: {
            line: 176,
            column: 110
          }
        }],
        line: 176
      },
      "15": {
        loc: {
          start: {
            line: 177,
            column: 47
          },
          end: {
            line: 177,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 177,
            column: 47
          },
          end: {
            line: 177,
            column: 78
          }
        }, {
          start: {
            line: 177,
            column: 82
          },
          end: {
            line: 177,
            column: 103
          }
        }],
        line: 177
      },
      "16": {
        loc: {
          start: {
            line: 178,
            column: 48
          },
          end: {
            line: 178,
            column: 106
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 178,
            column: 48
          },
          end: {
            line: 178,
            column: 81
          }
        }, {
          start: {
            line: 178,
            column: 85
          },
          end: {
            line: 178,
            column: 106
          }
        }],
        line: 178
      },
      "17": {
        loc: {
          start: {
            line: 179,
            column: 4
          },
          end: {
            line: 181,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 179,
            column: 4
          },
          end: {
            line: 181,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 179
      },
      "18": {
        loc: {
          start: {
            line: 182,
            column: 4
          },
          end: {
            line: 184,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 182,
            column: 4
          },
          end: {
            line: 184,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 182
      },
      "19": {
        loc: {
          start: {
            line: 185,
            column: 4
          },
          end: {
            line: 187,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 185,
            column: 4
          },
          end: {
            line: 187,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 185
      },
      "20": {
        loc: {
          start: {
            line: 188,
            column: 4
          },
          end: {
            line: 190,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 188,
            column: 4
          },
          end: {
            line: 190,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 188
      },
      "21": {
        loc: {
          start: {
            line: 191,
            column: 4
          },
          end: {
            line: 193,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 191,
            column: 4
          },
          end: {
            line: 193,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 191
      },
      "22": {
        loc: {
          start: {
            line: 197,
            column: 25
          },
          end: {
            line: 197,
            column: 121
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 197,
            column: 46
          },
          end: {
            line: 197,
            column: 117
          }
        }, {
          start: {
            line: 197,
            column: 120
          },
          end: {
            line: 197,
            column: 121
          }
        }],
        line: 197
      },
      "23": {
        loc: {
          start: {
            line: 198,
            column: 44
          },
          end: {
            line: 198,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 198,
            column: 44
          },
          end: {
            line: 198,
            column: 72
          }
        }, {
          start: {
            line: 198,
            column: 76
          },
          end: {
            line: 198,
            column: 97
          }
        }],
        line: 198
      },
      "24": {
        loc: {
          start: {
            line: 199,
            column: 50
          },
          end: {
            line: 199,
            column: 109
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 199,
            column: 50
          },
          end: {
            line: 199,
            column: 84
          }
        }, {
          start: {
            line: 199,
            column: 88
          },
          end: {
            line: 199,
            column: 109
          }
        }],
        line: 199
      },
      "25": {
        loc: {
          start: {
            line: 200,
            column: 46
          },
          end: {
            line: 200,
            column: 102
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 200,
            column: 46
          },
          end: {
            line: 200,
            column: 77
          }
        }, {
          start: {
            line: 200,
            column: 81
          },
          end: {
            line: 200,
            column: 102
          }
        }],
        line: 200
      },
      "26": {
        loc: {
          start: {
            line: 201,
            column: 48
          },
          end: {
            line: 201,
            column: 106
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 201,
            column: 48
          },
          end: {
            line: 201,
            column: 81
          }
        }, {
          start: {
            line: 201,
            column: 85
          },
          end: {
            line: 201,
            column: 106
          }
        }],
        line: 201
      },
      "27": {
        loc: {
          start: {
            line: 203,
            column: 4
          },
          end: {
            line: 205,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 203,
            column: 4
          },
          end: {
            line: 205,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 203
      },
      "28": {
        loc: {
          start: {
            line: 206,
            column: 4
          },
          end: {
            line: 208,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 206,
            column: 4
          },
          end: {
            line: 208,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 206
      },
      "29": {
        loc: {
          start: {
            line: 209,
            column: 4
          },
          end: {
            line: 211,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 209,
            column: 4
          },
          end: {
            line: 211,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 209
      },
      "30": {
        loc: {
          start: {
            line: 212,
            column: 4
          },
          end: {
            line: 214,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 212,
            column: 4
          },
          end: {
            line: 214,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 212
      },
      "31": {
        loc: {
          start: {
            line: 230,
            column: 4
          },
          end: {
            line: 239,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 230,
            column: 4
          },
          end: {
            line: 239,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 230
      },
      "32": {
        loc: {
          start: {
            line: 231,
            column: 49
          },
          end: {
            line: 231,
            column: 102
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 231,
            column: 49
          },
          end: {
            line: 231,
            column: 77
          }
        }, {
          start: {
            line: 231,
            column: 81
          },
          end: {
            line: 231,
            column: 102
          }
        }],
        line: 231
      },
      "33": {
        loc: {
          start: {
            line: 240,
            column: 4
          },
          end: {
            line: 249,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 240,
            column: 4
          },
          end: {
            line: 249,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 240
      },
      "34": {
        loc: {
          start: {
            line: 241,
            column: 49
          },
          end: {
            line: 241,
            column: 108
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 241,
            column: 49
          },
          end: {
            line: 241,
            column: 83
          }
        }, {
          start: {
            line: 241,
            column: 87
          },
          end: {
            line: 241,
            column: 108
          }
        }],
        line: 241
      },
      "35": {
        loc: {
          start: {
            line: 250,
            column: 4
          },
          end: {
            line: 259,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 250,
            column: 4
          },
          end: {
            line: 259,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 250
      },
      "36": {
        loc: {
          start: {
            line: 251,
            column: 49
          },
          end: {
            line: 251,
            column: 107
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 251,
            column: 49
          },
          end: {
            line: 251,
            column: 82
          }
        }, {
          start: {
            line: 251,
            column: 86
          },
          end: {
            line: 251,
            column: 107
          }
        }],
        line: 251
      },
      "37": {
        loc: {
          start: {
            line: 260,
            column: 4
          },
          end: {
            line: 269,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 260,
            column: 4
          },
          end: {
            line: 269,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 260
      },
      "38": {
        loc: {
          start: {
            line: 261,
            column: 49
          },
          end: {
            line: 261,
            column: 105
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 261,
            column: 49
          },
          end: {
            line: 261,
            column: 80
          }
        }, {
          start: {
            line: 261,
            column: 84
          },
          end: {
            line: 261,
            column: 105
          }
        }],
        line: 261
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0],
      "6": [0, 0],
      "7": [0, 0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\seo\\testing\\metadata\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - METADATA TESTING API\r\n// API espec\xEDfica para validaci\xF3n de metadata SEO\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { enhancedSEOTestingSuite } from '@/lib/seo/seo-testing-suite';\r\nimport { logger, LogCategory, LogLevel } from '@/lib/enterprise/logger';\r\n\r\n// ===================================\r\n// GET - Validar metadata de URLs espec\xEDficas\r\n// ===================================\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    const { searchParams } = new URL(request.url);\r\n    const url = searchParams.get('url');\r\n    const urls = searchParams.get('urls')?.split(',');\r\n\r\n    if (!url && !urls) {\r\n      return NextResponse.json({\r\n        success: true,\r\n        data: {\r\n          message: 'Metadata Testing API',\r\n          description: 'Validate SEO metadata including titles, descriptions, keywords, and Open Graph tags',\r\n          usage: {\r\n            'GET ?url=/products/example': 'Test metadata for single URL',\r\n            'GET ?urls=/,/shop,/about': 'Test metadata for multiple URLs',\r\n            'POST': 'Batch validate metadata with custom configuration'\r\n          },\r\n          validationCriteria: {\r\n            title: 'Length: 30-60 characters, unique, contains keywords',\r\n            description: 'Length: 120-160 characters, unique, contains call-to-action',\r\n            keywords: '3-5 relevant keywords',\r\n            openGraph: 'og:title, og:description, og:image, og:url',\r\n            twitter: 'twitter:card, twitter:title, twitter:description, twitter:image'\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    const testUrls = urls || [url!];\r\n    const results = await enhancedSEOTestingSuite.runTestsByType('metadata', testUrls);\r\n\r\n    // Agrupar resultados por URL\r\n    const resultsByUrl = testUrls.reduce((acc, testUrl) => {\r\n      acc[testUrl] = results.filter(r => r.url === testUrl);\r\n      return acc;\r\n    }, {} as Record<string, any[]>);\r\n\r\n    // Generar recomendaciones espec\xEDficas\r\n    const recommendations = generateMetadataRecommendations(results);\r\n\r\n    logger.info(LogLevel.INFO, 'Metadata validation completed', {\r\n      urlsCount: testUrls.length,\r\n      testsRun: results.length\r\n    }, LogCategory.SEO);\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: {\r\n        results: resultsByUrl,\r\n        summary: {\r\n          totalTests: results.length,\r\n          passed: results.filter(r => r.status === 'passed').length,\r\n          failed: results.filter(r => r.status === 'failed').length,\r\n          warnings: results.filter(r => r.status === 'warning').length,\r\n          averageScore: results.length > 0 \r\n            ? Math.round(results.reduce((sum, r) => sum + r.score, 0) / results.length)\r\n            : 0\r\n        },\r\n        recommendations,\r\n        timestamp: new Date().toISOString()\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    logger.error(LogLevel.ERROR, 'Metadata testing API GET error', error as Error, LogCategory.SEO);\r\n    \r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Failed to validate metadata',\r\n      details: error instanceof Error ? error.message : 'Unknown error'\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n// ===================================\r\n// POST - Validaci\xF3n batch con configuraci\xF3n personalizada\r\n// ===================================\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    const body = await request.json();\r\n    const { urls, thresholds, includeRecommendations = true } = body;\r\n\r\n    if (!urls || !Array.isArray(urls) || urls.length === 0) {\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: 'urls array is required and must not be empty',\r\n        example: {\r\n          urls: ['/products/pintura-interior', '/categories/pinturas', '/'],\r\n          thresholds: {\r\n            titleMinLength: 30,\r\n            titleMaxLength: 60,\r\n            descriptionMinLength: 120,\r\n            descriptionMaxLength: 160\r\n          },\r\n          includeRecommendations: true\r\n        }\r\n      }, { status: 400 });\r\n    }\r\n\r\n    // Limitar n\xFAmero de URLs\r\n    if (urls.length > 20) {\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: 'Maximum 20 URLs allowed per batch request'\r\n      }, { status: 400 });\r\n    }\r\n\r\n    // Configurar umbrales temporalmente si se proporcionan\r\n    if (thresholds) {\r\n      enhancedSEOTestingSuite.configure({ thresholds });\r\n    }\r\n\r\n    // Ejecutar tests de metadata\r\n    const results = await enhancedSEOTestingSuite.runTestsByType('metadata', urls);\r\n\r\n    // Analizar resultados por categor\xEDa\r\n    const analysis = analyzeMetadataResults(results);\r\n\r\n    // Generar recomendaciones si se solicitan\r\n    const recommendations = includeRecommendations \r\n      ? generateDetailedMetadataRecommendations(results, analysis)\r\n      : [];\r\n\r\n    logger.info(LogLevel.INFO, 'Batch metadata validation completed', {\r\n      urlsCount: urls.length,\r\n      testsRun: results.length,\r\n      averageScore: analysis.averageScore\r\n    }, LogCategory.SEO);\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: {\r\n        results,\r\n        analysis,\r\n        recommendations,\r\n        configuration: thresholds || 'default',\r\n        timestamp: new Date().toISOString()\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    logger.error(LogLevel.ERROR, 'Metadata testing API POST error', error as Error, LogCategory.SEO);\r\n    \r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Failed to perform batch metadata validation',\r\n      details: error instanceof Error ? error.message : 'Unknown error'\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n// ===================================\r\n// FUNCIONES DE UTILIDAD\r\n// ===================================\r\n\r\nfunction generateMetadataRecommendations(results: Array<{\r\n  testName: string;\r\n  status: 'passed' | 'failed' | 'warning';\r\n  message?: string;\r\n  details?: any;\r\n}>): string[] {\r\n  const recommendations = [];\r\n  \r\n  const failedTitles = results.filter(r => r.testName.includes('Title') && r.status === 'failed');\r\n  const failedDescriptions = results.filter(r => r.testName.includes('Description') && r.status === 'failed');\r\n  const failedKeywords = results.filter(r => r.testName.includes('Keywords') && r.status !== 'passed');\r\n  const failedOpenGraph = results.filter(r => r.testName.includes('Open Graph') && r.status !== 'passed');\r\n\r\n  if (failedTitles.length > 0) {\r\n    recommendations.push(`Fix ${failedTitles.length} title tag issues - ensure 30-60 character length`);\r\n  }\r\n  \r\n  if (failedDescriptions.length > 0) {\r\n    recommendations.push(`Improve ${failedDescriptions.length} meta descriptions - aim for 120-160 characters`);\r\n  }\r\n  \r\n  if (failedKeywords.length > 0) {\r\n    recommendations.push(`Optimize keywords for ${failedKeywords.length} pages - include 3-5 relevant terms`);\r\n  }\r\n  \r\n  if (failedOpenGraph.length > 0) {\r\n    recommendations.push(`Add Open Graph tags to ${failedOpenGraph.length} pages for better social sharing`);\r\n  }\r\n\r\n  if (recommendations.length === 0) {\r\n    recommendations.push('All metadata tests passed - excellent SEO optimization!');\r\n  }\r\n\r\n  return recommendations;\r\n}\r\n\r\nfunction analyzeMetadataResults(results: Array<{\r\n  testName: string;\r\n  status: 'passed' | 'failed' | 'warning';\r\n  score: number;\r\n  message?: string;\r\n  details?: any;\r\n}>): {\r\n  averageScore: number;\r\n  titleIssues: number;\r\n  descriptionIssues: number;\r\n  keywordIssues: number;\r\n  openGraphIssues: number;\r\n  mostCommonIssues: string[];\r\n  urlsWithIssues: string[];\r\n} {\r\n  const averageScore = results.length > 0 \r\n    ? Math.round(results.reduce((sum, r) => sum + r.score, 0) / results.length)\r\n    : 0;\r\n\r\n  const titleIssues = results.filter(r => \r\n    r.testName.includes('Title') && r.status !== 'passed'\r\n  ).length;\r\n\r\n  const descriptionIssues = results.filter(r => \r\n    r.testName.includes('Description') && r.status !== 'passed'\r\n  ).length;\r\n\r\n  const keywordIssues = results.filter(r => \r\n    r.testName.includes('Keywords') && r.status !== 'passed'\r\n  ).length;\r\n\r\n  const openGraphIssues = results.filter(r => \r\n    r.testName.includes('Open Graph') && r.status !== 'passed'\r\n  ).length;\r\n\r\n  const mostCommonIssues = [];\r\n  if (titleIssues > 0) {mostCommonIssues.push('Title optimization needed');}\r\n  if (descriptionIssues > 0) {mostCommonIssues.push('Meta description issues');}\r\n  if (keywordIssues > 0) {mostCommonIssues.push('Keyword optimization required');}\r\n  if (openGraphIssues > 0) {mostCommonIssues.push('Missing Open Graph tags');}\r\n\r\n  const urlsWithIssues = [...new Set(\r\n    results\r\n      .filter(r => r.status !== 'passed')\r\n      .map(r => r.url)\r\n  )];\r\n\r\n  return {\r\n    averageScore,\r\n    titleIssues,\r\n    descriptionIssues,\r\n    keywordIssues,\r\n    openGraphIssues,\r\n    mostCommonIssues,\r\n    urlsWithIssues\r\n  };\r\n}\r\n\r\nfunction generateDetailedMetadataRecommendations(\r\n  results: Array<{\r\n    testName: string;\r\n    status: 'passed' | 'failed' | 'warning';\r\n    url: string;\r\n    message?: string;\r\n    details?: any;\r\n  }>, \r\n  analysis: {\r\n    averageScore: number;\r\n    titleIssues: number;\r\n    descriptionIssues: number;\r\n    keywordIssues: number;\r\n    openGraphIssues: number;\r\n    mostCommonIssues: string[];\r\n    urlsWithIssues: string[];\r\n  }\r\n): Array<{\r\n  priority: 'high' | 'medium' | 'low';\r\n  category: string;\r\n  issue: string;\r\n  solution: string;\r\n  affectedUrls: string[];\r\n}> {\r\n  const recommendations = [];\r\n\r\n  if (analysis.titleIssues > 0) {\r\n    const affectedUrls = results\r\n      .filter(r => r.testName.includes('Title') && r.status !== 'passed')\r\n      .map(r => r.url);\r\n\r\n    recommendations.push({\r\n      priority: 'high' as const,\r\n      category: 'Title Tags',\r\n      issue: `${analysis.titleIssues} pages have title tag issues`,\r\n      solution: 'Optimize title tags to 30-60 characters, include primary keywords, and ensure uniqueness',\r\n      affectedUrls\r\n    });\r\n  }\r\n\r\n  if (analysis.descriptionIssues > 0) {\r\n    const affectedUrls = results\r\n      .filter(r => r.testName.includes('Description') && r.status !== 'passed')\r\n      .map(r => r.url);\r\n\r\n    recommendations.push({\r\n      priority: 'high' as const,\r\n      category: 'Meta Descriptions',\r\n      issue: `${analysis.descriptionIssues} pages have meta description issues`,\r\n      solution: 'Write compelling meta descriptions of 120-160 characters with clear call-to-action',\r\n      affectedUrls\r\n    });\r\n  }\r\n\r\n  if (analysis.openGraphIssues > 0) {\r\n    const affectedUrls = results\r\n      .filter(r => r.testName.includes('Open Graph') && r.status !== 'passed')\r\n      .map(r => r.url);\r\n\r\n    recommendations.push({\r\n      priority: 'medium' as const,\r\n      category: 'Open Graph',\r\n      issue: `${analysis.openGraphIssues} pages missing Open Graph tags`,\r\n      solution: 'Add og:title, og:description, og:image, and og:url tags for better social media sharing',\r\n      affectedUrls\r\n    });\r\n  }\r\n\r\n  if (analysis.keywordIssues > 0) {\r\n    const affectedUrls = results\r\n      .filter(r => r.testName.includes('Keywords') && r.status !== 'passed')\r\n      .map(r => r.url);\r\n\r\n    recommendations.push({\r\n      priority: 'medium' as const,\r\n      category: 'Keywords',\r\n      issue: `${analysis.keywordIssues} pages need keyword optimization`,\r\n      solution: 'Include 3-5 relevant keywords that match user search intent and page content',\r\n      affectedUrls\r\n    });\r\n  }\r\n\r\n  return recommendations;\r\n}\r\n\r\n// ===================================\r\n// OPCIONES CORS\r\n// ===================================\r\nexport async function OPTIONS(request: NextRequest) {\r\n  return new NextResponse(null, {\r\n    status: 200,\r\n    headers: {\r\n      'Access-Control-Allow-Origin': '*',\r\n      'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',\r\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization',\r\n    },\r\n  });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "OPTIONS", "POST", "runtime", "request", "searchParams", "URL", "url", "get", "urls", "split", "NextResponse", "json", "success", "data", "message", "description", "usage", "validationCriteria", "title", "keywords", "openGraph", "twitter", "testUrls", "results", "enhancedSEOTestingSuite", "runTestsByType", "resultsByUrl", "reduce", "acc", "testUrl", "filter", "r", "recommendations", "generateMetadataRecommendations", "logger", "info", "LogLevel", "INFO", "urlsCount", "length", "testsRun", "LogCategory", "SEO", "summary", "totalTests", "passed", "status", "failed", "warnings", "averageScore", "Math", "round", "sum", "score", "timestamp", "Date", "toISOString", "error", "ERROR", "details", "Error", "body", "thresholds", "includeRecommendations", "Array", "isArray", "example", "titleMinLength", "titleMaxLength", "descriptionMinLength", "descriptionMaxLength", "configure", "analysis", "analyzeMetadataResults", "generateDetailedMetadataRecommendations", "configuration", "failedTitles", "testName", "includes", "failedDescriptions", "failedKeywords", "failedOpenGraph", "push", "titleIssues", "descriptionIssues", "keywordIssues", "openGraphIssues", "mostCommonIssues", "urlsWithIssues", "Set", "map", "affectedUrls", "priority", "category", "issue", "solution", "headers"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a9b9247b45d32f6388238208890b0ad0cb94fd00"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_bo5zyrjha = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_bo5zyrjha();
cov_bo5zyrjha().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_bo5zyrjha().f[0]++;
  cov_bo5zyrjha().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_bo5zyrjha().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_bo5zyrjha().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_bo5zyrjha().f[1]++;
    cov_bo5zyrjha().s[4]++;
    return GET;
  },
  get OPTIONS() {
    /* istanbul ignore next */
    cov_bo5zyrjha().f[2]++;
    cov_bo5zyrjha().s[5]++;
    return OPTIONS;
  },
  get POST() {
    /* istanbul ignore next */
    cov_bo5zyrjha().f[3]++;
    cov_bo5zyrjha().s[6]++;
    return POST;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_bo5zyrjha().f[4]++;
    cov_bo5zyrjha().s[7]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_bo5zyrjha().s[8]++, require("next/server"));
const _seotestingsuite =
/* istanbul ignore next */
(cov_bo5zyrjha().s[9]++, require("../../../../../lib/seo/seo-testing-suite"));
const _logger =
/* istanbul ignore next */
(cov_bo5zyrjha().s[10]++, require("../../../../../lib/enterprise/logger"));
const runtime =
/* istanbul ignore next */
(cov_bo5zyrjha().s[11]++, 'nodejs');
async function GET(request) {
  /* istanbul ignore next */
  cov_bo5zyrjha().f[5]++;
  cov_bo5zyrjha().s[12]++;
  try {
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_bo5zyrjha().s[13]++, new URL(request.url));
    const url =
    /* istanbul ignore next */
    (cov_bo5zyrjha().s[14]++, searchParams.get('url'));
    const urls =
    /* istanbul ignore next */
    (cov_bo5zyrjha().s[15]++, searchParams.get('urls')?.split(','));
    /* istanbul ignore next */
    cov_bo5zyrjha().s[16]++;
    if (
    /* istanbul ignore next */
    (cov_bo5zyrjha().b[1][0]++, !url) &&
    /* istanbul ignore next */
    (cov_bo5zyrjha().b[1][1]++, !urls)) {
      /* istanbul ignore next */
      cov_bo5zyrjha().b[0][0]++;
      cov_bo5zyrjha().s[17]++;
      return _server.NextResponse.json({
        success: true,
        data: {
          message: 'Metadata Testing API',
          description: 'Validate SEO metadata including titles, descriptions, keywords, and Open Graph tags',
          usage: {
            'GET ?url=/products/example': 'Test metadata for single URL',
            'GET ?urls=/,/shop,/about': 'Test metadata for multiple URLs',
            'POST': 'Batch validate metadata with custom configuration'
          },
          validationCriteria: {
            title: 'Length: 30-60 characters, unique, contains keywords',
            description: 'Length: 120-160 characters, unique, contains call-to-action',
            keywords: '3-5 relevant keywords',
            openGraph: 'og:title, og:description, og:image, og:url',
            twitter: 'twitter:card, twitter:title, twitter:description, twitter:image'
          }
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_bo5zyrjha().b[0][1]++;
    }
    const testUrls =
    /* istanbul ignore next */
    (cov_bo5zyrjha().s[18]++,
    /* istanbul ignore next */
    (cov_bo5zyrjha().b[2][0]++, urls) ||
    /* istanbul ignore next */
    (cov_bo5zyrjha().b[2][1]++, [url]));
    const results =
    /* istanbul ignore next */
    (cov_bo5zyrjha().s[19]++, await _seotestingsuite.enhancedSEOTestingSuite.runTestsByType('metadata', testUrls));
    // Agrupar resultados por URL
    const resultsByUrl =
    /* istanbul ignore next */
    (cov_bo5zyrjha().s[20]++, testUrls.reduce((acc, testUrl) => {
      /* istanbul ignore next */
      cov_bo5zyrjha().f[6]++;
      cov_bo5zyrjha().s[21]++;
      acc[testUrl] = results.filter(r => {
        /* istanbul ignore next */
        cov_bo5zyrjha().f[7]++;
        cov_bo5zyrjha().s[22]++;
        return r.url === testUrl;
      });
      /* istanbul ignore next */
      cov_bo5zyrjha().s[23]++;
      return acc;
    }, {}));
    // Generar recomendaciones especÃ­ficas
    const recommendations =
    /* istanbul ignore next */
    (cov_bo5zyrjha().s[24]++, generateMetadataRecommendations(results));
    /* istanbul ignore next */
    cov_bo5zyrjha().s[25]++;
    _logger.logger.info(_logger.LogLevel.INFO, 'Metadata validation completed', {
      urlsCount: testUrls.length,
      testsRun: results.length
    }, _logger.LogCategory.SEO);
    /* istanbul ignore next */
    cov_bo5zyrjha().s[26]++;
    return _server.NextResponse.json({
      success: true,
      data: {
        results: resultsByUrl,
        summary: {
          totalTests: results.length,
          passed: results.filter(r => {
            /* istanbul ignore next */
            cov_bo5zyrjha().f[8]++;
            cov_bo5zyrjha().s[27]++;
            return r.status === 'passed';
          }).length,
          failed: results.filter(r => {
            /* istanbul ignore next */
            cov_bo5zyrjha().f[9]++;
            cov_bo5zyrjha().s[28]++;
            return r.status === 'failed';
          }).length,
          warnings: results.filter(r => {
            /* istanbul ignore next */
            cov_bo5zyrjha().f[10]++;
            cov_bo5zyrjha().s[29]++;
            return r.status === 'warning';
          }).length,
          averageScore: results.length > 0 ?
          /* istanbul ignore next */
          (cov_bo5zyrjha().b[3][0]++, Math.round(results.reduce((sum, r) => {
            /* istanbul ignore next */
            cov_bo5zyrjha().f[11]++;
            cov_bo5zyrjha().s[30]++;
            return sum + r.score;
          }, 0) / results.length)) :
          /* istanbul ignore next */
          (cov_bo5zyrjha().b[3][1]++, 0)
        },
        recommendations,
        timestamp: new Date().toISOString()
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_bo5zyrjha().s[31]++;
    _logger.logger.error(_logger.LogLevel.ERROR, 'Metadata testing API GET error', error, _logger.LogCategory.SEO);
    /* istanbul ignore next */
    cov_bo5zyrjha().s[32]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Failed to validate metadata',
      details: error instanceof Error ?
      /* istanbul ignore next */
      (cov_bo5zyrjha().b[4][0]++, error.message) :
      /* istanbul ignore next */
      (cov_bo5zyrjha().b[4][1]++, 'Unknown error')
    }, {
      status: 500
    });
  }
}
async function POST(request) {
  /* istanbul ignore next */
  cov_bo5zyrjha().f[12]++;
  cov_bo5zyrjha().s[33]++;
  try {
    const body =
    /* istanbul ignore next */
    (cov_bo5zyrjha().s[34]++, await request.json());
    const {
      urls,
      thresholds,
      includeRecommendations =
      /* istanbul ignore next */
      (cov_bo5zyrjha().b[5][0]++, true)
    } =
    /* istanbul ignore next */
    (cov_bo5zyrjha().s[35]++, body);
    /* istanbul ignore next */
    cov_bo5zyrjha().s[36]++;
    if (
    /* istanbul ignore next */
    (cov_bo5zyrjha().b[7][0]++, !urls) ||
    /* istanbul ignore next */
    (cov_bo5zyrjha().b[7][1]++, !Array.isArray(urls)) ||
    /* istanbul ignore next */
    (cov_bo5zyrjha().b[7][2]++, urls.length === 0)) {
      /* istanbul ignore next */
      cov_bo5zyrjha().b[6][0]++;
      cov_bo5zyrjha().s[37]++;
      return _server.NextResponse.json({
        success: false,
        error: 'urls array is required and must not be empty',
        example: {
          urls: ['/products/pintura-interior', '/categories/pinturas', '/'],
          thresholds: {
            titleMinLength: 30,
            titleMaxLength: 60,
            descriptionMinLength: 120,
            descriptionMaxLength: 160
          },
          includeRecommendations: true
        }
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_bo5zyrjha().b[6][1]++;
    }
    // Limitar nÃºmero de URLs
    cov_bo5zyrjha().s[38]++;
    if (urls.length > 20) {
      /* istanbul ignore next */
      cov_bo5zyrjha().b[8][0]++;
      cov_bo5zyrjha().s[39]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Maximum 20 URLs allowed per batch request'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_bo5zyrjha().b[8][1]++;
    }
    // Configurar umbrales temporalmente si se proporcionan
    cov_bo5zyrjha().s[40]++;
    if (thresholds) {
      /* istanbul ignore next */
      cov_bo5zyrjha().b[9][0]++;
      cov_bo5zyrjha().s[41]++;
      _seotestingsuite.enhancedSEOTestingSuite.configure({
        thresholds
      });
    } else
    /* istanbul ignore next */
    {
      cov_bo5zyrjha().b[9][1]++;
    }
    // Ejecutar tests de metadata
    const results =
    /* istanbul ignore next */
    (cov_bo5zyrjha().s[42]++, await _seotestingsuite.enhancedSEOTestingSuite.runTestsByType('metadata', urls));
    // Analizar resultados por categorÃ­a
    const analysis =
    /* istanbul ignore next */
    (cov_bo5zyrjha().s[43]++, analyzeMetadataResults(results));
    // Generar recomendaciones si se solicitan
    const recommendations =
    /* istanbul ignore next */
    (cov_bo5zyrjha().s[44]++, includeRecommendations ?
    /* istanbul ignore next */
    (cov_bo5zyrjha().b[10][0]++, generateDetailedMetadataRecommendations(results, analysis)) :
    /* istanbul ignore next */
    (cov_bo5zyrjha().b[10][1]++, []));
    /* istanbul ignore next */
    cov_bo5zyrjha().s[45]++;
    _logger.logger.info(_logger.LogLevel.INFO, 'Batch metadata validation completed', {
      urlsCount: urls.length,
      testsRun: results.length,
      averageScore: analysis.averageScore
    }, _logger.LogCategory.SEO);
    /* istanbul ignore next */
    cov_bo5zyrjha().s[46]++;
    return _server.NextResponse.json({
      success: true,
      data: {
        results,
        analysis,
        recommendations,
        configuration:
        /* istanbul ignore next */
        (cov_bo5zyrjha().b[11][0]++, thresholds) ||
        /* istanbul ignore next */
        (cov_bo5zyrjha().b[11][1]++, 'default'),
        timestamp: new Date().toISOString()
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_bo5zyrjha().s[47]++;
    _logger.logger.error(_logger.LogLevel.ERROR, 'Metadata testing API POST error', error, _logger.LogCategory.SEO);
    /* istanbul ignore next */
    cov_bo5zyrjha().s[48]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Failed to perform batch metadata validation',
      details: error instanceof Error ?
      /* istanbul ignore next */
      (cov_bo5zyrjha().b[12][0]++, error.message) :
      /* istanbul ignore next */
      (cov_bo5zyrjha().b[12][1]++, 'Unknown error')
    }, {
      status: 500
    });
  }
}
// ===================================
// FUNCIONES DE UTILIDAD
// ===================================
function generateMetadataRecommendations(results) {
  /* istanbul ignore next */
  cov_bo5zyrjha().f[13]++;
  const recommendations =
  /* istanbul ignore next */
  (cov_bo5zyrjha().s[49]++, []);
  const failedTitles =
  /* istanbul ignore next */
  (cov_bo5zyrjha().s[50]++, results.filter(r => {
    /* istanbul ignore next */
    cov_bo5zyrjha().f[14]++;
    cov_bo5zyrjha().s[51]++;
    return /* istanbul ignore next */(cov_bo5zyrjha().b[13][0]++, r.testName.includes('Title')) &&
    /* istanbul ignore next */
    (cov_bo5zyrjha().b[13][1]++, r.status === 'failed');
  }));
  const failedDescriptions =
  /* istanbul ignore next */
  (cov_bo5zyrjha().s[52]++, results.filter(r => {
    /* istanbul ignore next */
    cov_bo5zyrjha().f[15]++;
    cov_bo5zyrjha().s[53]++;
    return /* istanbul ignore next */(cov_bo5zyrjha().b[14][0]++, r.testName.includes('Description')) &&
    /* istanbul ignore next */
    (cov_bo5zyrjha().b[14][1]++, r.status === 'failed');
  }));
  const failedKeywords =
  /* istanbul ignore next */
  (cov_bo5zyrjha().s[54]++, results.filter(r => {
    /* istanbul ignore next */
    cov_bo5zyrjha().f[16]++;
    cov_bo5zyrjha().s[55]++;
    return /* istanbul ignore next */(cov_bo5zyrjha().b[15][0]++, r.testName.includes('Keywords')) &&
    /* istanbul ignore next */
    (cov_bo5zyrjha().b[15][1]++, r.status !== 'passed');
  }));
  const failedOpenGraph =
  /* istanbul ignore next */
  (cov_bo5zyrjha().s[56]++, results.filter(r => {
    /* istanbul ignore next */
    cov_bo5zyrjha().f[17]++;
    cov_bo5zyrjha().s[57]++;
    return /* istanbul ignore next */(cov_bo5zyrjha().b[16][0]++, r.testName.includes('Open Graph')) &&
    /* istanbul ignore next */
    (cov_bo5zyrjha().b[16][1]++, r.status !== 'passed');
  }));
  /* istanbul ignore next */
  cov_bo5zyrjha().s[58]++;
  if (failedTitles.length > 0) {
    /* istanbul ignore next */
    cov_bo5zyrjha().b[17][0]++;
    cov_bo5zyrjha().s[59]++;
    recommendations.push(`Fix ${failedTitles.length} title tag issues - ensure 30-60 character length`);
  } else
  /* istanbul ignore next */
  {
    cov_bo5zyrjha().b[17][1]++;
  }
  cov_bo5zyrjha().s[60]++;
  if (failedDescriptions.length > 0) {
    /* istanbul ignore next */
    cov_bo5zyrjha().b[18][0]++;
    cov_bo5zyrjha().s[61]++;
    recommendations.push(`Improve ${failedDescriptions.length} meta descriptions - aim for 120-160 characters`);
  } else
  /* istanbul ignore next */
  {
    cov_bo5zyrjha().b[18][1]++;
  }
  cov_bo5zyrjha().s[62]++;
  if (failedKeywords.length > 0) {
    /* istanbul ignore next */
    cov_bo5zyrjha().b[19][0]++;
    cov_bo5zyrjha().s[63]++;
    recommendations.push(`Optimize keywords for ${failedKeywords.length} pages - include 3-5 relevant terms`);
  } else
  /* istanbul ignore next */
  {
    cov_bo5zyrjha().b[19][1]++;
  }
  cov_bo5zyrjha().s[64]++;
  if (failedOpenGraph.length > 0) {
    /* istanbul ignore next */
    cov_bo5zyrjha().b[20][0]++;
    cov_bo5zyrjha().s[65]++;
    recommendations.push(`Add Open Graph tags to ${failedOpenGraph.length} pages for better social sharing`);
  } else
  /* istanbul ignore next */
  {
    cov_bo5zyrjha().b[20][1]++;
  }
  cov_bo5zyrjha().s[66]++;
  if (recommendations.length === 0) {
    /* istanbul ignore next */
    cov_bo5zyrjha().b[21][0]++;
    cov_bo5zyrjha().s[67]++;
    recommendations.push('All metadata tests passed - excellent SEO optimization!');
  } else
  /* istanbul ignore next */
  {
    cov_bo5zyrjha().b[21][1]++;
  }
  cov_bo5zyrjha().s[68]++;
  return recommendations;
}
function analyzeMetadataResults(results) {
  /* istanbul ignore next */
  cov_bo5zyrjha().f[18]++;
  const averageScore =
  /* istanbul ignore next */
  (cov_bo5zyrjha().s[69]++, results.length > 0 ?
  /* istanbul ignore next */
  (cov_bo5zyrjha().b[22][0]++, Math.round(results.reduce((sum, r) => {
    /* istanbul ignore next */
    cov_bo5zyrjha().f[19]++;
    cov_bo5zyrjha().s[70]++;
    return sum + r.score;
  }, 0) / results.length)) :
  /* istanbul ignore next */
  (cov_bo5zyrjha().b[22][1]++, 0));
  const titleIssues =
  /* istanbul ignore next */
  (cov_bo5zyrjha().s[71]++, results.filter(r => {
    /* istanbul ignore next */
    cov_bo5zyrjha().f[20]++;
    cov_bo5zyrjha().s[72]++;
    return /* istanbul ignore next */(cov_bo5zyrjha().b[23][0]++, r.testName.includes('Title')) &&
    /* istanbul ignore next */
    (cov_bo5zyrjha().b[23][1]++, r.status !== 'passed');
  }).length);
  const descriptionIssues =
  /* istanbul ignore next */
  (cov_bo5zyrjha().s[73]++, results.filter(r => {
    /* istanbul ignore next */
    cov_bo5zyrjha().f[21]++;
    cov_bo5zyrjha().s[74]++;
    return /* istanbul ignore next */(cov_bo5zyrjha().b[24][0]++, r.testName.includes('Description')) &&
    /* istanbul ignore next */
    (cov_bo5zyrjha().b[24][1]++, r.status !== 'passed');
  }).length);
  const keywordIssues =
  /* istanbul ignore next */
  (cov_bo5zyrjha().s[75]++, results.filter(r => {
    /* istanbul ignore next */
    cov_bo5zyrjha().f[22]++;
    cov_bo5zyrjha().s[76]++;
    return /* istanbul ignore next */(cov_bo5zyrjha().b[25][0]++, r.testName.includes('Keywords')) &&
    /* istanbul ignore next */
    (cov_bo5zyrjha().b[25][1]++, r.status !== 'passed');
  }).length);
  const openGraphIssues =
  /* istanbul ignore next */
  (cov_bo5zyrjha().s[77]++, results.filter(r => {
    /* istanbul ignore next */
    cov_bo5zyrjha().f[23]++;
    cov_bo5zyrjha().s[78]++;
    return /* istanbul ignore next */(cov_bo5zyrjha().b[26][0]++, r.testName.includes('Open Graph')) &&
    /* istanbul ignore next */
    (cov_bo5zyrjha().b[26][1]++, r.status !== 'passed');
  }).length);
  const mostCommonIssues =
  /* istanbul ignore next */
  (cov_bo5zyrjha().s[79]++, []);
  /* istanbul ignore next */
  cov_bo5zyrjha().s[80]++;
  if (titleIssues > 0) {
    /* istanbul ignore next */
    cov_bo5zyrjha().b[27][0]++;
    cov_bo5zyrjha().s[81]++;
    mostCommonIssues.push('Title optimization needed');
  } else
  /* istanbul ignore next */
  {
    cov_bo5zyrjha().b[27][1]++;
  }
  cov_bo5zyrjha().s[82]++;
  if (descriptionIssues > 0) {
    /* istanbul ignore next */
    cov_bo5zyrjha().b[28][0]++;
    cov_bo5zyrjha().s[83]++;
    mostCommonIssues.push('Meta description issues');
  } else
  /* istanbul ignore next */
  {
    cov_bo5zyrjha().b[28][1]++;
  }
  cov_bo5zyrjha().s[84]++;
  if (keywordIssues > 0) {
    /* istanbul ignore next */
    cov_bo5zyrjha().b[29][0]++;
    cov_bo5zyrjha().s[85]++;
    mostCommonIssues.push('Keyword optimization required');
  } else
  /* istanbul ignore next */
  {
    cov_bo5zyrjha().b[29][1]++;
  }
  cov_bo5zyrjha().s[86]++;
  if (openGraphIssues > 0) {
    /* istanbul ignore next */
    cov_bo5zyrjha().b[30][0]++;
    cov_bo5zyrjha().s[87]++;
    mostCommonIssues.push('Missing Open Graph tags');
  } else
  /* istanbul ignore next */
  {
    cov_bo5zyrjha().b[30][1]++;
  }
  const urlsWithIssues =
  /* istanbul ignore next */
  (cov_bo5zyrjha().s[88]++, [...new Set(results.filter(r => {
    /* istanbul ignore next */
    cov_bo5zyrjha().f[24]++;
    cov_bo5zyrjha().s[89]++;
    return r.status !== 'passed';
  }).map(r => {
    /* istanbul ignore next */
    cov_bo5zyrjha().f[25]++;
    cov_bo5zyrjha().s[90]++;
    return r.url;
  }))]);
  /* istanbul ignore next */
  cov_bo5zyrjha().s[91]++;
  return {
    averageScore,
    titleIssues,
    descriptionIssues,
    keywordIssues,
    openGraphIssues,
    mostCommonIssues,
    urlsWithIssues
  };
}
function generateDetailedMetadataRecommendations(results, analysis) {
  /* istanbul ignore next */
  cov_bo5zyrjha().f[26]++;
  const recommendations =
  /* istanbul ignore next */
  (cov_bo5zyrjha().s[92]++, []);
  /* istanbul ignore next */
  cov_bo5zyrjha().s[93]++;
  if (analysis.titleIssues > 0) {
    /* istanbul ignore next */
    cov_bo5zyrjha().b[31][0]++;
    const affectedUrls =
    /* istanbul ignore next */
    (cov_bo5zyrjha().s[94]++, results.filter(r => {
      /* istanbul ignore next */
      cov_bo5zyrjha().f[27]++;
      cov_bo5zyrjha().s[95]++;
      return /* istanbul ignore next */(cov_bo5zyrjha().b[32][0]++, r.testName.includes('Title')) &&
      /* istanbul ignore next */
      (cov_bo5zyrjha().b[32][1]++, r.status !== 'passed');
    }).map(r => {
      /* istanbul ignore next */
      cov_bo5zyrjha().f[28]++;
      cov_bo5zyrjha().s[96]++;
      return r.url;
    }));
    /* istanbul ignore next */
    cov_bo5zyrjha().s[97]++;
    recommendations.push({
      priority: 'high',
      category: 'Title Tags',
      issue: `${analysis.titleIssues} pages have title tag issues`,
      solution: 'Optimize title tags to 30-60 characters, include primary keywords, and ensure uniqueness',
      affectedUrls
    });
  } else
  /* istanbul ignore next */
  {
    cov_bo5zyrjha().b[31][1]++;
  }
  cov_bo5zyrjha().s[98]++;
  if (analysis.descriptionIssues > 0) {
    /* istanbul ignore next */
    cov_bo5zyrjha().b[33][0]++;
    const affectedUrls =
    /* istanbul ignore next */
    (cov_bo5zyrjha().s[99]++, results.filter(r => {
      /* istanbul ignore next */
      cov_bo5zyrjha().f[29]++;
      cov_bo5zyrjha().s[100]++;
      return /* istanbul ignore next */(cov_bo5zyrjha().b[34][0]++, r.testName.includes('Description')) &&
      /* istanbul ignore next */
      (cov_bo5zyrjha().b[34][1]++, r.status !== 'passed');
    }).map(r => {
      /* istanbul ignore next */
      cov_bo5zyrjha().f[30]++;
      cov_bo5zyrjha().s[101]++;
      return r.url;
    }));
    /* istanbul ignore next */
    cov_bo5zyrjha().s[102]++;
    recommendations.push({
      priority: 'high',
      category: 'Meta Descriptions',
      issue: `${analysis.descriptionIssues} pages have meta description issues`,
      solution: 'Write compelling meta descriptions of 120-160 characters with clear call-to-action',
      affectedUrls
    });
  } else
  /* istanbul ignore next */
  {
    cov_bo5zyrjha().b[33][1]++;
  }
  cov_bo5zyrjha().s[103]++;
  if (analysis.openGraphIssues > 0) {
    /* istanbul ignore next */
    cov_bo5zyrjha().b[35][0]++;
    const affectedUrls =
    /* istanbul ignore next */
    (cov_bo5zyrjha().s[104]++, results.filter(r => {
      /* istanbul ignore next */
      cov_bo5zyrjha().f[31]++;
      cov_bo5zyrjha().s[105]++;
      return /* istanbul ignore next */(cov_bo5zyrjha().b[36][0]++, r.testName.includes('Open Graph')) &&
      /* istanbul ignore next */
      (cov_bo5zyrjha().b[36][1]++, r.status !== 'passed');
    }).map(r => {
      /* istanbul ignore next */
      cov_bo5zyrjha().f[32]++;
      cov_bo5zyrjha().s[106]++;
      return r.url;
    }));
    /* istanbul ignore next */
    cov_bo5zyrjha().s[107]++;
    recommendations.push({
      priority: 'medium',
      category: 'Open Graph',
      issue: `${analysis.openGraphIssues} pages missing Open Graph tags`,
      solution: 'Add og:title, og:description, og:image, and og:url tags for better social media sharing',
      affectedUrls
    });
  } else
  /* istanbul ignore next */
  {
    cov_bo5zyrjha().b[35][1]++;
  }
  cov_bo5zyrjha().s[108]++;
  if (analysis.keywordIssues > 0) {
    /* istanbul ignore next */
    cov_bo5zyrjha().b[37][0]++;
    const affectedUrls =
    /* istanbul ignore next */
    (cov_bo5zyrjha().s[109]++, results.filter(r => {
      /* istanbul ignore next */
      cov_bo5zyrjha().f[33]++;
      cov_bo5zyrjha().s[110]++;
      return /* istanbul ignore next */(cov_bo5zyrjha().b[38][0]++, r.testName.includes('Keywords')) &&
      /* istanbul ignore next */
      (cov_bo5zyrjha().b[38][1]++, r.status !== 'passed');
    }).map(r => {
      /* istanbul ignore next */
      cov_bo5zyrjha().f[34]++;
      cov_bo5zyrjha().s[111]++;
      return r.url;
    }));
    /* istanbul ignore next */
    cov_bo5zyrjha().s[112]++;
    recommendations.push({
      priority: 'medium',
      category: 'Keywords',
      issue: `${analysis.keywordIssues} pages need keyword optimization`,
      solution: 'Include 3-5 relevant keywords that match user search intent and page content',
      affectedUrls
    });
  } else
  /* istanbul ignore next */
  {
    cov_bo5zyrjha().b[37][1]++;
  }
  cov_bo5zyrjha().s[113]++;
  return recommendations;
}
async function OPTIONS(request) {
  /* istanbul ignore next */
  cov_bo5zyrjha().f[35]++;
  cov_bo5zyrjha().s[114]++;
  return new _server.NextResponse(null, {
    status: 200,
    headers: {
      'Access-Control-Allow-Origin': '*',
      'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',
      'Access-Control-Allow-Headers': 'Content-Type, Authorization'
    }
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,