d86aecd93952cad9e6a2e3dadef1e47e
// =====================================================
// HOOK: useOrderLogistics
// Descripción: Hook para integración entre órdenes y logística
// Gestiona: Creación de envíos, tracking, estados
// =====================================================
'use client';
"use strict";

/* istanbul ignore next */
function cov_1fitxmtalb() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\admin\\useOrderLogistics.ts";
  var hash = "f5b39910126e8436a6529f9694d3e72ef97f296d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\admin\\useOrderLogistics.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "1": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 15,
          column: 7
        }
      },
      "2": {
        start: {
          line: 12,
          column: 24
        },
        end: {
          line: 15,
          column: 7
        }
      },
      "3": {
        start: {
          line: 17,
          column: 0
        },
        end: {
          line: 24,
          column: 3
        }
      },
      "4": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 33
        }
      },
      "5": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 35
        }
      },
      "6": {
        start: {
          line: 25,
          column: 15
        },
        end: {
          line: 25,
          column: 31
        }
      },
      "7": {
        start: {
          line: 26,
          column: 20
        },
        end: {
          line: 26,
          column: 52
        }
      },
      "8": {
        start: {
          line: 28,
          column: 24
        },
        end: {
          line: 28,
          column: 57
        }
      },
      "9": {
        start: {
          line: 29,
          column: 46
        },
        end: {
          line: 29,
          column: 70
        }
      },
      "10": {
        start: {
          line: 34,
          column: 115
        },
        end: {
          line: 49,
          column: 6
        }
      },
      "11": {
        start: {
          line: 40,
          column: 29
        },
        end: {
          line: 40,
          column: 82
        }
      },
      "12": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 43,
          column: 13
        }
      },
      "13": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 42,
          column: 84
        }
      },
      "14": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 44,
          column: 35
        }
      },
      "15": {
        start: {
          line: 51,
          column: 85
        },
        end: {
          line: 64,
          column: 6
        }
      },
      "16": {
        start: {
          line: 56,
          column: 29
        },
        end: {
          line: 56,
          column: 90
        }
      },
      "17": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 59,
          column: 13
        }
      },
      "18": {
        start: {
          line: 58,
          column: 16
        },
        end: {
          line: 58,
          column: 84
        }
      },
      "19": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 60,
          column: 35
        }
      },
      "20": {
        start: {
          line: 69,
          column: 35
        },
        end: {
          line: 103,
          column: 6
        }
      },
      "21": {
        start: {
          line: 71,
          column: 29
        },
        end: {
          line: 77,
          column: 14
        }
      },
      "22": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 81,
          column: 13
        }
      },
      "23": {
        start: {
          line: 79,
          column: 34
        },
        end: {
          line: 79,
          column: 55
        }
      },
      "24": {
        start: {
          line: 80,
          column: 16
        },
        end: {
          line: 80,
          column: 103
        }
      },
      "25": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 35
        }
      },
      "26": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 90,
          column: 15
        }
      },
      "27": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 95,
          column: 15
        }
      },
      "28": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 100,
          column: 15
        }
      },
      "29": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 101,
          column: 33
        }
      },
      "30": {
        start: {
          line: 105,
          column: 41
        },
        end: {
          line: 136,
          column: 6
        }
      },
      "31": {
        start: {
          line: 107,
          column: 29
        },
        end: {
          line: 116,
          column: 14
        }
      },
      "32": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 120,
          column: 13
        }
      },
      "33": {
        start: {
          line: 118,
          column: 34
        },
        end: {
          line: 118,
          column: 55
        }
      },
      "34": {
        start: {
          line: 119,
          column: 16
        },
        end: {
          line: 119,
          column: 103
        }
      },
      "35": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 121,
          column: 35
        }
      },
      "36": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 129,
          column: 15
        }
      },
      "37": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 134,
          column: 15
        }
      },
      "38": {
        start: {
          line: 140,
          column: 27
        },
        end: {
          line: 144,
          column: 6
        }
      },
      "39": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 141,
          column: 64
        }
      },
      "40": {
        start: {
          line: 145,
          column: 33
        },
        end: {
          line: 153,
          column: 6
        }
      },
      "41": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 150,
          column: 11
        }
      },
      "42": {
        start: {
          line: 154,
          column: 32
        },
        end: {
          line: 159,
          column: 10
        }
      },
      "43": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 158,
          column: 15
        }
      },
      "44": {
        start: {
          line: 155,
          column: 33
        },
        end: {
          line: 158,
          column: 13
        }
      },
      "45": {
        start: {
          line: 155,
          column: 75
        },
        end: {
          line: 155,
          column: 88
        }
      },
      "46": {
        start: {
          line: 160,
          column: 27
        },
        end: {
          line: 162,
          column: 10
        }
      },
      "47": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 161,
          column: 34
        }
      },
      "48": {
        start: {
          line: 163,
          column: 27
        },
        end: {
          line: 165,
          column: 10
        }
      },
      "49": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 164,
          column: 29
        }
      },
      "50": {
        start: {
          line: 169,
          column: 27
        },
        end: {
          line: 178,
          column: 5
        }
      },
      "51": {
        start: {
          line: 171,
          column: 59
        },
        end: {
          line: 171,
          column: 81
        }
      },
      "52": {
        start: {
          line: 172,
          column: 61
        },
        end: {
          line: 172,
          column: 86
        }
      },
      "53": {
        start: {
          line: 173,
          column: 61
        },
        end: {
          line: 173,
          column: 85
        }
      },
      "54": {
        start: {
          line: 182,
          column: 4
        },
        end: {
          line: 224,
          column: 6
        }
      },
      "55": {
        start: {
          line: 209,
          column: 40
        },
        end: {
          line: 209,
          column: 99
        }
      },
      "56": {
        start: {
          line: 209,
          column: 73
        },
        end: {
          line: 209,
          column: 92
        }
      },
      "57": {
        start: {
          line: 210,
          column: 44
        },
        end: {
          line: 210,
          column: 81
        }
      },
      "58": {
        start: {
          line: 211,
          column: 33
        },
        end: {
          line: 211,
          column: 51
        }
      },
      "59": {
        start: {
          line: 213,
          column: 32
        },
        end: {
          line: 220,
          column: 13
        }
      },
      "60": {
        start: {
          line: 221,
          column: 33
        },
        end: {
          line: 221,
          column: 69
        }
      },
      "61": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 222,
          column: 89
        }
      },
      "62": {
        start: {
          line: 227,
          column: 62
        },
        end: {
          line: 243,
          column: 6
        }
      },
      "63": {
        start: {
          line: 233,
          column: 29
        },
        end: {
          line: 233,
          column: 87
        }
      },
      "64": {
        start: {
          line: 234,
          column: 12
        },
        end: {
          line: 236,
          column: 13
        }
      },
      "65": {
        start: {
          line: 235,
          column: 16
        },
        end: {
          line: 235,
          column: 84
        }
      },
      "66": {
        start: {
          line: 237,
          column: 12
        },
        end: {
          line: 237,
          column: 35
        }
      },
      "67": {
        start: {
          line: 244,
          column: 4
        },
        end: {
          line: 256,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 11,
            column: 9
          },
          end: {
            line: 11,
            column: 16
          }
        },
        loc: {
          start: {
            line: 11,
            column: 30
          },
          end: {
            line: 16,
            column: 1
          }
        },
        line: 11
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 29
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 31
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "3": {
        name: "useOrderLogistics",
        decl: {
          start: {
            line: 27,
            column: 9
          },
          end: {
            line: 27,
            column: 26
          }
        },
        loc: {
          start: {
            line: 27,
            column: 36
          },
          end: {
            line: 225,
            column: 1
          }
        },
        line: 27
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 39,
            column: 17
          },
          end: {
            line: 39,
            column: 18
          }
        },
        loc: {
          start: {
            line: 39,
            column: 27
          },
          end: {
            line: 45,
            column: 9
          }
        },
        line: 39
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 55,
            column: 17
          },
          end: {
            line: 55,
            column: 18
          }
        },
        loc: {
          start: {
            line: 55,
            column: 27
          },
          end: {
            line: 61,
            column: 9
          }
        },
        line: 55
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 70,
            column: 20
          },
          end: {
            line: 70,
            column: 21
          }
        },
        loc: {
          start: {
            line: 70,
            column: 42
          },
          end: {
            line: 83,
            column: 9
          }
        },
        line: 70
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 84,
            column: 19
          },
          end: {
            line: 84,
            column: 20
          }
        },
        loc: {
          start: {
            line: 84,
            column: 23
          },
          end: {
            line: 102,
            column: 9
          }
        },
        line: 84
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 106,
            column: 20
          },
          end: {
            line: 106,
            column: 21
          }
        },
        loc: {
          start: {
            line: 106,
            column: 59
          },
          end: {
            line: 122,
            column: 9
          }
        },
        line: 106
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 123,
            column: 19
          },
          end: {
            line: 123,
            column: 20
          }
        },
        loc: {
          start: {
            line: 123,
            column: 23
          },
          end: {
            line: 135,
            column: 9
          }
        },
        line: 123
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 140,
            column: 51
          },
          end: {
            line: 140,
            column: 52
          }
        },
        loc: {
          start: {
            line: 140,
            column: 67
          },
          end: {
            line: 142,
            column: 5
          }
        },
        line: 140
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 145,
            column: 57
          },
          end: {
            line: 145,
            column: 58
          }
        },
        loc: {
          start: {
            line: 145,
            column: 86
          },
          end: {
            line: 151,
            column: 5
          }
        },
        line: 145
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 154,
            column: 56
          },
          end: {
            line: 154,
            column: 57
          }
        },
        loc: {
          start: {
            line: 154,
            column: 66
          },
          end: {
            line: 159,
            column: 5
          }
        },
        line: 154
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 155,
            column: 25
          },
          end: {
            line: 155,
            column: 26
          }
        },
        loc: {
          start: {
            line: 155,
            column: 33
          },
          end: {
            line: 158,
            column: 13
          }
        },
        line: 155
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 155,
            column: 69
          },
          end: {
            line: 155,
            column: 70
          }
        },
        loc: {
          start: {
            line: 155,
            column: 75
          },
          end: {
            line: 155,
            column: 88
          }
        },
        line: 155
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 160,
            column: 51
          },
          end: {
            line: 160,
            column: 52
          }
        },
        loc: {
          start: {
            line: 160,
            column: 62
          },
          end: {
            line: 162,
            column: 5
          }
        },
        line: 160
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 163,
            column: 51
          },
          end: {
            line: 163,
            column: 52
          }
        },
        loc: {
          start: {
            line: 163,
            column: 55
          },
          end: {
            line: 165,
            column: 5
          }
        },
        line: 163
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 171,
            column: 54
          },
          end: {
            line: 171,
            column: 55
          }
        },
        loc: {
          start: {
            line: 171,
            column: 59
          },
          end: {
            line: 171,
            column: 81
          }
        },
        line: 171
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 172,
            column: 56
          },
          end: {
            line: 172,
            column: 57
          }
        },
        loc: {
          start: {
            line: 172,
            column: 61
          },
          end: {
            line: 172,
            column: 86
          }
        },
        line: 172
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 173,
            column: 56
          },
          end: {
            line: 173,
            column: 57
          }
        },
        loc: {
          start: {
            line: 173,
            column: 61
          },
          end: {
            line: 173,
            column: 85
          }
        },
        line: 173
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 209,
            column: 30
          },
          end: {
            line: 209,
            column: 31
          }
        },
        loc: {
          start: {
            line: 209,
            column: 40
          },
          end: {
            line: 209,
            column: 99
          }
        },
        line: 209
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 209,
            column: 68
          },
          end: {
            line: 209,
            column: 69
          }
        },
        loc: {
          start: {
            line: 209,
            column: 73
          },
          end: {
            line: 209,
            column: 92
          }
        },
        line: 209
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 210,
            column: 32
          },
          end: {
            line: 210,
            column: 33
          }
        },
        loc: {
          start: {
            line: 210,
            column: 44
          },
          end: {
            line: 210,
            column: 81
          }
        },
        line: 210
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 211,
            column: 22
          },
          end: {
            line: 211,
            column: 23
          }
        },
        loc: {
          start: {
            line: 211,
            column: 33
          },
          end: {
            line: 211,
            column: 51
          }
        },
        line: 211
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 212,
            column: 29
          },
          end: {
            line: 212,
            column: 30
          }
        },
        loc: {
          start: {
            line: 212,
            column: 41
          },
          end: {
            line: 223,
            column: 9
          }
        },
        line: 212
      },
      "25": {
        name: "useShipmentTracking",
        decl: {
          start: {
            line: 226,
            column: 9
          },
          end: {
            line: 226,
            column: 28
          }
        },
        loc: {
          start: {
            line: 226,
            column: 41
          },
          end: {
            line: 257,
            column: 1
          }
        },
        line: 226
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 232,
            column: 17
          },
          end: {
            line: 232,
            column: 18
          }
        },
        loc: {
          start: {
            line: 232,
            column: 27
          },
          end: {
            line: 238,
            column: 9
          }
        },
        line: 232
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 43,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 43,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "1": {
        loc: {
          start: {
            line: 57,
            column: 12
          },
          end: {
            line: 59,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 12
          },
          end: {
            line: 59,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "2": {
        loc: {
          start: {
            line: 78,
            column: 12
          },
          end: {
            line: 81,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 12
          },
          end: {
            line: 81,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 78
      },
      "3": {
        loc: {
          start: {
            line: 80,
            column: 32
          },
          end: {
            line: 80,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 80,
            column: 32
          },
          end: {
            line: 80,
            column: 47
          }
        }, {
          start: {
            line: 80,
            column: 51
          },
          end: {
            line: 80,
            column: 101
          }
        }],
        line: 80
      },
      "4": {
        loc: {
          start: {
            line: 117,
            column: 12
          },
          end: {
            line: 120,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 117,
            column: 12
          },
          end: {
            line: 120,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 117
      },
      "5": {
        loc: {
          start: {
            line: 119,
            column: 32
          },
          end: {
            line: 119,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 119,
            column: 32
          },
          end: {
            line: 119,
            column: 47
          }
        }, {
          start: {
            line: 119,
            column: 51
          },
          end: {
            line: 119,
            column: 101
          }
        }],
        line: 119
      },
      "6": {
        loc: {
          start: {
            line: 155,
            column: 33
          },
          end: {
            line: 158,
            column: 13
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 155,
            column: 57
          },
          end: {
            line: 155,
            column: 89
          }
        }, {
          start: {
            line: 155,
            column: 92
          },
          end: {
            line: 158,
            column: 13
          }
        }],
        line: 155
      },
      "7": {
        loc: {
          start: {
            line: 170,
            column: 24
          },
          end: {
            line: 170,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 170,
            column: 24
          },
          end: {
            line: 170,
            column: 51
          }
        }, {
          start: {
            line: 170,
            column: 55
          },
          end: {
            line: 170,
            column: 56
          }
        }],
        line: 170
      },
      "8": {
        loc: {
          start: {
            line: 171,
            column: 26
          },
          end: {
            line: 171,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 171,
            column: 26
          },
          end: {
            line: 171,
            column: 89
          }
        }, {
          start: {
            line: 171,
            column: 93
          },
          end: {
            line: 171,
            column: 94
          }
        }],
        line: 171
      },
      "9": {
        loc: {
          start: {
            line: 172,
            column: 28
          },
          end: {
            line: 172,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 172,
            column: 28
          },
          end: {
            line: 172,
            column: 94
          }
        }, {
          start: {
            line: 172,
            column: 98
          },
          end: {
            line: 172,
            column: 99
          }
        }],
        line: 172
      },
      "10": {
        loc: {
          start: {
            line: 173,
            column: 28
          },
          end: {
            line: 173,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 173,
            column: 28
          },
          end: {
            line: 173,
            column: 93
          }
        }, {
          start: {
            line: 173,
            column: 97
          },
          end: {
            line: 173,
            column: 98
          }
        }],
        line: 173
      },
      "11": {
        loc: {
          start: {
            line: 174,
            column: 23
          },
          end: {
            line: 174,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 174,
            column: 23
          },
          end: {
            line: 174,
            column: 50
          }
        }, {
          start: {
            line: 174,
            column: 54
          },
          end: {
            line: 174,
            column: 55
          }
        }],
        line: 174
      },
      "12": {
        loc: {
          start: {
            line: 176,
            column: 27
          },
          end: {
            line: 176,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 176,
            column: 27
          },
          end: {
            line: 176,
            column: 45
          }
        }, {
          start: {
            line: 176,
            column: 49
          },
          end: {
            line: 176,
            column: 51
          }
        }],
        line: 176
      },
      "13": {
        loc: {
          start: {
            line: 184,
            column: 19
          },
          end: {
            line: 184,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 184,
            column: 19
          },
          end: {
            line: 184,
            column: 38
          }
        }, {
          start: {
            line: 184,
            column: 42
          },
          end: {
            line: 184,
            column: 44
          }
        }],
        line: 184
      },
      "14": {
        loc: {
          start: {
            line: 185,
            column: 18
          },
          end: {
            line: 185,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 185,
            column: 18
          },
          end: {
            line: 185,
            column: 36
          }
        }, {
          start: {
            line: 185,
            column: 40
          },
          end: {
            line: 185,
            column: 42
          }
        }],
        line: 185
      },
      "15": {
        loc: {
          start: {
            line: 187,
            column: 19
          },
          end: {
            line: 187,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 187,
            column: 19
          },
          end: {
            line: 187,
            column: 35
          }
        }, {
          start: {
            line: 187,
            column: 39
          },
          end: {
            line: 187,
            column: 54
          }
        }],
        line: 187
      },
      "16": {
        loc: {
          start: {
            line: 191,
            column: 15
          },
          end: {
            line: 191,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 191,
            column: 15
          },
          end: {
            line: 191,
            column: 29
          }
        }, {
          start: {
            line: 191,
            column: 33
          },
          end: {
            line: 191,
            column: 46
          }
        }],
        line: 191
      },
      "17": {
        loc: {
          start: {
            line: 209,
            column: 40
          },
          end: {
            line: 209,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 209,
            column: 40
          },
          end: {
            line: 209,
            column: 93
          }
        }, {
          start: {
            line: 209,
            column: 97
          },
          end: {
            line: 209,
            column: 99
          }
        }],
        line: 209
      },
      "18": {
        loc: {
          start: {
            line: 210,
            column: 44
          },
          end: {
            line: 210,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 210,
            column: 44
          },
          end: {
            line: 210,
            column: 73
          }
        }, {
          start: {
            line: 210,
            column: 77
          },
          end: {
            line: 210,
            column: 81
          }
        }],
        line: 210
      },
      "19": {
        loc: {
          start: {
            line: 222,
            column: 19
          },
          end: {
            line: 222,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 222,
            column: 39
          },
          end: {
            line: 222,
            column: 84
          }
        }, {
          start: {
            line: 222,
            column: 87
          },
          end: {
            line: 222,
            column: 88
          }
        }],
        line: 222
      },
      "20": {
        loc: {
          start: {
            line: 234,
            column: 12
          },
          end: {
            line: 236,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 12
          },
          end: {
            line: 236,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 234
      },
      "21": {
        loc: {
          start: {
            line: 245,
            column: 24
          },
          end: {
            line: 245,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 245,
            column: 24
          },
          end: {
            line: 245,
            column: 42
          }
        }, {
          start: {
            line: 245,
            column: 46
          },
          end: {
            line: 245,
            column: 48
          }
        }],
        line: 245
      },
      "22": {
        loc: {
          start: {
            line: 249,
            column: 21
          },
          end: {
            line: 249,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 249,
            column: 21
          },
          end: {
            line: 249,
            column: 44
          }
        }, {
          start: {
            line: 249,
            column: 48
          },
          end: {
            line: 249,
            column: 52
          }
        }],
        line: 249
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\admin\\useOrderLogistics.ts"],
      sourcesContent: ["// =====================================================\r\n// HOOK: useOrderLogistics\r\n// Descripci\xF3n: Hook para integraci\xF3n entre \xF3rdenes y log\xEDstica\r\n// Gestiona: Creaci\xF3n de env\xEDos, tracking, estados\r\n// =====================================================\r\n\r\n'use client';\r\n\r\nimport { useState, useCallback } from 'react';\r\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\r\n\r\n// =====================================================\r\n// TIPOS E INTERFACES\r\n// =====================================================\r\n\r\nexport interface CreateShipmentRequest {\r\n  carrier_id: number;\r\n  shipping_service: string;\r\n  items: Array<{\r\n    order_item_id: string;\r\n    quantity: number;\r\n  }>;\r\n  pickup_address?: {\r\n    street_name: string;\r\n    street_number: string;\r\n    city_name: string;\r\n    state_name: string;\r\n    zip_code: string;\r\n    country?: string;\r\n  };\r\n  delivery_address: {\r\n    street_name: string;\r\n    street_number: string;\r\n    apartment?: string;\r\n    city_name: string;\r\n    state_name: string;\r\n    zip_code: string;\r\n    country?: string;\r\n  };\r\n  weight_kg?: number;\r\n  dimensions_cm?: string;\r\n  special_instructions?: string;\r\n  notes?: string;\r\n  estimated_delivery_date?: string;\r\n}\r\n\r\nexport interface Shipment {\r\n  id: string;\r\n  shipment_number: string;\r\n  order_id: string;\r\n  status: string;\r\n  carrier_id: number;\r\n  shipping_service: string;\r\n  pickup_address?: any;\r\n  delivery_address: any;\r\n  weight_kg?: number;\r\n  dimensions_cm?: string;\r\n  special_instructions?: string;\r\n  notes?: string;\r\n  estimated_delivery_date?: string;\r\n  created_at: string;\r\n  updated_at: string;\r\n  carrier?: {\r\n    id: number;\r\n    name: string;\r\n    code: string;\r\n    logo_url?: string;\r\n  };\r\n  items?: Array<{\r\n    id: string;\r\n    quantity: number;\r\n    weight_kg?: number;\r\n    order_item: {\r\n      id: string;\r\n      quantity: number;\r\n      unit_price: number;\r\n      product: {\r\n        id: string;\r\n        name: string;\r\n        sku?: string;\r\n      };\r\n    };\r\n  }>;\r\n  tracking_events?: Array<{\r\n    id: string;\r\n    status: string;\r\n    description: string;\r\n    occurred_at: string;\r\n    location?: string;\r\n  }>;\r\n}\r\n\r\nexport interface Carrier {\r\n  id: number;\r\n  name: string;\r\n  code: string;\r\n  logo_url?: string;\r\n  is_active: boolean;\r\n  services: string[];\r\n}\r\n\r\n// =====================================================\r\n// HOOK PRINCIPAL\r\n// =====================================================\r\n\r\nexport function useOrderLogistics(orderId: string) {\r\n  const queryClient = useQueryClient();\r\n  const [selectedItems, setSelectedItems] = useState<string[]>([]);\r\n\r\n  // =====================================================\r\n  // QUERIES\r\n  // =====================================================\r\n\r\n  // Query para obtener env\xEDos de la orden\r\n  const {\r\n    data: shipmentsData,\r\n    isLoading: shipmentsLoading,\r\n    error: shipmentsError,\r\n    refetch: refetchShipments\r\n  } = useQuery({\r\n    queryKey: ['order-shipments', orderId],\r\n    queryFn: async () => {\r\n      const response = await fetch(`/api/admin/orders/${orderId}/shipments`);\r\n      if (!response.ok) {\r\n        throw new Error(`Error ${response.status}: ${response.statusText}`);\r\n      }\r\n      return response.json();\r\n    },\r\n    enabled: !!orderId,\r\n    staleTime: 30000,\r\n    refetchOnWindowFocus: false\r\n  });\r\n\r\n  // Query para obtener carriers disponibles\r\n  const {\r\n    data: carriersData,\r\n    isLoading: carriersLoading,\r\n    error: carriersError\r\n  } = useQuery({\r\n    queryKey: ['logistics-carriers'],\r\n    queryFn: async () => {\r\n      const response = await fetch('/api/admin/logistics/couriers?active_only=true');\r\n      if (!response.ok) {\r\n        throw new Error(`Error ${response.status}: ${response.statusText}`);\r\n      }\r\n      return response.json();\r\n    },\r\n    staleTime: 300000, // 5 minutos\r\n    refetchOnWindowFocus: false\r\n  });\r\n\r\n  // =====================================================\r\n  // MUTATIONS\r\n  // =====================================================\r\n\r\n  // Mutation para crear env\xEDo\r\n  const createShipmentMutation = useMutation({\r\n    mutationFn: async (shipmentData: CreateShipmentRequest) => {\r\n      const response = await fetch(`/api/admin/orders/${orderId}/shipments`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(shipmentData)\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || `Error ${response.status}: ${response.statusText}`);\r\n      }\r\n      \r\n      return response.json();\r\n    },\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({ queryKey: ['order-shipments', orderId] });\r\n      queryClient.invalidateQueries({ queryKey: ['admin-orders'] });\r\n      queryClient.invalidateQueries({ queryKey: ['admin-logistics'] });\r\n      setSelectedItems([]);\r\n    }\r\n  });\r\n\r\n  // Mutation para actualizar estado de env\xEDo\r\n  const updateShipmentStatusMutation = useMutation({\r\n    mutationFn: async ({ shipmentId, status, notes }: { \r\n      shipmentId: string; \r\n      status: string; \r\n      notes?: string;\r\n    }) => {\r\n      const response = await fetch(`/api/admin/logistics/shipments/${shipmentId}`, {\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ status, notes })\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || `Error ${response.status}: ${response.statusText}`);\r\n      }\r\n      \r\n      return response.json();\r\n    },\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({ queryKey: ['order-shipments', orderId] });\r\n      queryClient.invalidateQueries({ queryKey: ['admin-logistics'] });\r\n    }\r\n  });\r\n\r\n  // =====================================================\r\n  // FUNCIONES AUXILIARES\r\n  // =====================================================\r\n\r\n  const createShipment = useCallback((shipmentData: CreateShipmentRequest) => {\r\n    return createShipmentMutation.mutateAsync(shipmentData);\r\n  }, [createShipmentMutation]);\r\n\r\n  const updateShipmentStatus = useCallback((\r\n    shipmentId: string, \r\n    status: string, \r\n    notes?: string\r\n  ) => {\r\n    return updateShipmentStatusMutation.mutateAsync({ shipmentId, status, notes });\r\n  }, [updateShipmentStatusMutation]);\r\n\r\n  const toggleItemSelection = useCallback((itemId: string) => {\r\n    setSelectedItems(prev => \r\n      prev.includes(itemId) \r\n        ? prev.filter(id => id !== itemId)\r\n        : [...prev, itemId]\r\n    );\r\n  }, []);\r\n\r\n  const selectAllItems = useCallback((itemIds: string[]) => {\r\n    setSelectedItems(itemIds);\r\n  }, []);\r\n\r\n  const clearSelection = useCallback(() => {\r\n    setSelectedItems([]);\r\n  }, []);\r\n\r\n  // =====================================================\r\n  // M\xC9TRICAS DERIVADAS\r\n  // =====================================================\r\n\r\n  const derivedMetrics = {\r\n    totalShipments: shipmentsData?.data?.length || 0,\r\n    pendingShipments: shipmentsData?.data?.filter((s: Shipment) => s.status === 'pending').length || 0,\r\n    inTransitShipments: shipmentsData?.data?.filter((s: Shipment) => s.status === 'in_transit').length || 0,\r\n    deliveredShipments: shipmentsData?.data?.filter((s: Shipment) => s.status === 'delivered').length || 0,\r\n    \r\n    hasShipments: (shipmentsData?.data?.length || 0) > 0,\r\n    canCreateShipment: selectedItems.length > 0,\r\n    \r\n    availableCarriers: carriersData?.data || [],\r\n    selectedItemsCount: selectedItems.length\r\n  };\r\n\r\n  // =====================================================\r\n  // RETURN\r\n  // =====================================================\r\n\r\n  return {\r\n    // Datos\r\n    shipments: shipmentsData?.data || [],\r\n    carriers: carriersData?.data || [],\r\n    \r\n    // Estados de carga\r\n    isLoading: shipmentsLoading || carriersLoading,\r\n    isLoadingShipments: shipmentsLoading,\r\n    isLoadingCarriers: carriersLoading,\r\n    \r\n    // Errores\r\n    error: shipmentsError || carriersError,\r\n    shipmentsError,\r\n    carriersError,\r\n    \r\n    // Acciones\r\n    createShipment,\r\n    updateShipmentStatus,\r\n    refetchShipments,\r\n    \r\n    // Selecci\xF3n de items\r\n    selectedItems,\r\n    toggleItemSelection,\r\n    selectAllItems,\r\n    clearSelection,\r\n    \r\n    // Estados de mutations\r\n    isCreatingShipment: createShipmentMutation.isPending,\r\n    isUpdatingStatus: updateShipmentStatusMutation.isPending,\r\n    \r\n    // M\xE9tricas derivadas\r\n    derivedMetrics,\r\n    \r\n    // Helpers\r\n    getShipmentsByStatus: (status: string) => \r\n      shipmentsData?.data?.filter((s: Shipment) => s.status === status) || [],\r\n    \r\n    getLatestTrackingEvent: (shipment: Shipment) => \r\n      shipment.tracking_events?.[0] || null,\r\n    \r\n    canShipItems: (itemIds: string[]) => itemIds.length > 0,\r\n    \r\n    getShipmentProgress: (shipment: Shipment) => {\r\n      const statusOrder = ['pending', 'confirmed', 'picked_up', 'in_transit', 'out_for_delivery', 'delivered'];\r\n      const currentIndex = statusOrder.indexOf(shipment.status);\r\n      return currentIndex >= 0 ? ((currentIndex + 1) / statusOrder.length) * 100 : 0;\r\n    }\r\n  };\r\n}\r\n\r\n// =====================================================\r\n// HOOK PARA TRACKING EN TIEMPO REAL\r\n// =====================================================\r\n\r\nexport function useShipmentTracking(shipmentId: string) {\r\n  const {\r\n    data: trackingData,\r\n    isLoading,\r\n    error,\r\n    refetch\r\n  } = useQuery({\r\n    queryKey: ['shipment-tracking', shipmentId],\r\n    queryFn: async () => {\r\n      const response = await fetch(`/api/admin/logistics/tracking/${shipmentId}`);\r\n      if (!response.ok) {\r\n        throw new Error(`Error ${response.status}: ${response.statusText}`);\r\n      }\r\n      return response.json();\r\n    },\r\n    enabled: !!shipmentId,\r\n    refetchInterval: 30000, // Actualizar cada 30 segundos\r\n    staleTime: 10000,\r\n    refetchOnWindowFocus: true\r\n  });\r\n\r\n  return {\r\n    trackingEvents: trackingData?.data || [],\r\n    isLoading,\r\n    error,\r\n    refetch,\r\n    \r\n    latestEvent: trackingData?.data?.[0] || null,\r\n    isDelivered: trackingData?.data?.[0]?.status === 'delivered',\r\n    isInTransit: ['in_transit', 'out_for_delivery'].includes(trackingData?.data?.[0]?.status),\r\n    hasException: trackingData?.data?.[0]?.status === 'exception'\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["useOrderLogistics", "useShipmentTracking", "orderId", "queryClient", "useQueryClient", "selectedItems", "setSelectedItems", "useState", "data", "shipmentsData", "isLoading", "shipmentsLoading", "error", "shipmentsError", "refetch", "refetchShipments", "useQuery", "queryKey", "queryFn", "response", "fetch", "ok", "Error", "status", "statusText", "json", "enabled", "staleTime", "refetchOnWindowFocus", "carriersData", "carriersLoading", "carriersError", "createShipmentMutation", "useMutation", "mutationFn", "shipmentData", "method", "headers", "body", "JSON", "stringify", "errorData", "onSuccess", "invalidateQueries", "updateShipmentStatusMutation", "shipmentId", "notes", "createShipment", "useCallback", "mutateAsync", "updateShipmentStatus", "toggleItemSelection", "itemId", "prev", "includes", "filter", "id", "selectAllItems", "itemIds", "clearSelection", "derivedMetrics", "totalShipments", "length", "pendingShipments", "s", "inTransitShipments", "deliveredShipments", "hasShipments", "canCreateShipment", "availableCarriers", "selectedItemsCount", "shipments", "carriers", "isLoadingShipments", "isLoadingCarriers", "isCreatingShipment", "isPending", "isUpdatingStatus", "getShipmentsByStatus", "getLatestTrackingEvent", "shipment", "tracking_events", "canShipItems", "getShipmentProgress", "statusOrder", "currentIndex", "indexOf", "trackingData", "refetchInterval", "trackingEvents", "latestEvent", "isDelivered", "isInTransit", "hasException"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f5b39910126e8436a6529f9694d3e72ef97f296d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1fitxmtalb = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1fitxmtalb();
cov_1fitxmtalb().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1fitxmtalb().f[0]++;
  cov_1fitxmtalb().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1fitxmtalb().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1fitxmtalb().s[3]++;
_export(exports, {
  get useOrderLogistics() {
    /* istanbul ignore next */
    cov_1fitxmtalb().f[1]++;
    cov_1fitxmtalb().s[4]++;
    return useOrderLogistics;
  },
  get useShipmentTracking() {
    /* istanbul ignore next */
    cov_1fitxmtalb().f[2]++;
    cov_1fitxmtalb().s[5]++;
    return useShipmentTracking;
  }
});
const _react =
/* istanbul ignore next */
(cov_1fitxmtalb().s[6]++, require("react"));
const _reactquery =
/* istanbul ignore next */
(cov_1fitxmtalb().s[7]++, require("@tanstack/react-query"));
function useOrderLogistics(orderId) {
  /* istanbul ignore next */
  cov_1fitxmtalb().f[3]++;
  const queryClient =
  /* istanbul ignore next */
  (cov_1fitxmtalb().s[8]++, (0, _reactquery.useQueryClient)());
  const [selectedItems, setSelectedItems] =
  /* istanbul ignore next */
  (cov_1fitxmtalb().s[9]++, (0, _react.useState)([]));
  // =====================================================
  // QUERIES
  // =====================================================
  // Query para obtener envíos de la orden
  const {
    data: shipmentsData,
    isLoading: shipmentsLoading,
    error: shipmentsError,
    refetch: refetchShipments
  } =
  /* istanbul ignore next */
  (cov_1fitxmtalb().s[10]++, (0, _reactquery.useQuery)({
    queryKey: ['order-shipments', orderId],
    queryFn: async () => {
      /* istanbul ignore next */
      cov_1fitxmtalb().f[4]++;
      const response =
      /* istanbul ignore next */
      (cov_1fitxmtalb().s[11]++, await fetch(`/api/admin/orders/${orderId}/shipments`));
      /* istanbul ignore next */
      cov_1fitxmtalb().s[12]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_1fitxmtalb().b[0][0]++;
        cov_1fitxmtalb().s[13]++;
        throw new Error(`Error ${response.status}: ${response.statusText}`);
      } else
      /* istanbul ignore next */
      {
        cov_1fitxmtalb().b[0][1]++;
      }
      cov_1fitxmtalb().s[14]++;
      return response.json();
    },
    enabled: !!orderId,
    staleTime: 30000,
    refetchOnWindowFocus: false
  }));
  // Query para obtener carriers disponibles
  const {
    data: carriersData,
    isLoading: carriersLoading,
    error: carriersError
  } =
  /* istanbul ignore next */
  (cov_1fitxmtalb().s[15]++, (0, _reactquery.useQuery)({
    queryKey: ['logistics-carriers'],
    queryFn: async () => {
      /* istanbul ignore next */
      cov_1fitxmtalb().f[5]++;
      const response =
      /* istanbul ignore next */
      (cov_1fitxmtalb().s[16]++, await fetch('/api/admin/logistics/couriers?active_only=true'));
      /* istanbul ignore next */
      cov_1fitxmtalb().s[17]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_1fitxmtalb().b[1][0]++;
        cov_1fitxmtalb().s[18]++;
        throw new Error(`Error ${response.status}: ${response.statusText}`);
      } else
      /* istanbul ignore next */
      {
        cov_1fitxmtalb().b[1][1]++;
      }
      cov_1fitxmtalb().s[19]++;
      return response.json();
    },
    staleTime: 300000,
    refetchOnWindowFocus: false
  }));
  // =====================================================
  // MUTATIONS
  // =====================================================
  // Mutation para crear envío
  const createShipmentMutation =
  /* istanbul ignore next */
  (cov_1fitxmtalb().s[20]++, (0, _reactquery.useMutation)({
    mutationFn: async shipmentData => {
      /* istanbul ignore next */
      cov_1fitxmtalb().f[6]++;
      const response =
      /* istanbul ignore next */
      (cov_1fitxmtalb().s[21]++, await fetch(`/api/admin/orders/${orderId}/shipments`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(shipmentData)
      }));
      /* istanbul ignore next */
      cov_1fitxmtalb().s[22]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_1fitxmtalb().b[2][0]++;
        const errorData =
        /* istanbul ignore next */
        (cov_1fitxmtalb().s[23]++, await response.json());
        /* istanbul ignore next */
        cov_1fitxmtalb().s[24]++;
        throw new Error(
        /* istanbul ignore next */
        (cov_1fitxmtalb().b[3][0]++, errorData.error) ||
        /* istanbul ignore next */
        (cov_1fitxmtalb().b[3][1]++, `Error ${response.status}: ${response.statusText}`));
      } else
      /* istanbul ignore next */
      {
        cov_1fitxmtalb().b[2][1]++;
      }
      cov_1fitxmtalb().s[25]++;
      return response.json();
    },
    onSuccess: () => {
      /* istanbul ignore next */
      cov_1fitxmtalb().f[7]++;
      cov_1fitxmtalb().s[26]++;
      queryClient.invalidateQueries({
        queryKey: ['order-shipments', orderId]
      });
      /* istanbul ignore next */
      cov_1fitxmtalb().s[27]++;
      queryClient.invalidateQueries({
        queryKey: ['admin-orders']
      });
      /* istanbul ignore next */
      cov_1fitxmtalb().s[28]++;
      queryClient.invalidateQueries({
        queryKey: ['admin-logistics']
      });
      /* istanbul ignore next */
      cov_1fitxmtalb().s[29]++;
      setSelectedItems([]);
    }
  }));
  // Mutation para actualizar estado de envío
  const updateShipmentStatusMutation =
  /* istanbul ignore next */
  (cov_1fitxmtalb().s[30]++, (0, _reactquery.useMutation)({
    mutationFn: async ({
      shipmentId,
      status,
      notes
    }) => {
      /* istanbul ignore next */
      cov_1fitxmtalb().f[8]++;
      const response =
      /* istanbul ignore next */
      (cov_1fitxmtalb().s[31]++, await fetch(`/api/admin/logistics/shipments/${shipmentId}`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          status,
          notes
        })
      }));
      /* istanbul ignore next */
      cov_1fitxmtalb().s[32]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_1fitxmtalb().b[4][0]++;
        const errorData =
        /* istanbul ignore next */
        (cov_1fitxmtalb().s[33]++, await response.json());
        /* istanbul ignore next */
        cov_1fitxmtalb().s[34]++;
        throw new Error(
        /* istanbul ignore next */
        (cov_1fitxmtalb().b[5][0]++, errorData.error) ||
        /* istanbul ignore next */
        (cov_1fitxmtalb().b[5][1]++, `Error ${response.status}: ${response.statusText}`));
      } else
      /* istanbul ignore next */
      {
        cov_1fitxmtalb().b[4][1]++;
      }
      cov_1fitxmtalb().s[35]++;
      return response.json();
    },
    onSuccess: () => {
      /* istanbul ignore next */
      cov_1fitxmtalb().f[9]++;
      cov_1fitxmtalb().s[36]++;
      queryClient.invalidateQueries({
        queryKey: ['order-shipments', orderId]
      });
      /* istanbul ignore next */
      cov_1fitxmtalb().s[37]++;
      queryClient.invalidateQueries({
        queryKey: ['admin-logistics']
      });
    }
  }));
  // =====================================================
  // FUNCIONES AUXILIARES
  // =====================================================
  const createShipment =
  /* istanbul ignore next */
  (cov_1fitxmtalb().s[38]++, (0, _react.useCallback)(shipmentData => {
    /* istanbul ignore next */
    cov_1fitxmtalb().f[10]++;
    cov_1fitxmtalb().s[39]++;
    return createShipmentMutation.mutateAsync(shipmentData);
  }, [createShipmentMutation]));
  const updateShipmentStatus =
  /* istanbul ignore next */
  (cov_1fitxmtalb().s[40]++, (0, _react.useCallback)((shipmentId, status, notes) => {
    /* istanbul ignore next */
    cov_1fitxmtalb().f[11]++;
    cov_1fitxmtalb().s[41]++;
    return updateShipmentStatusMutation.mutateAsync({
      shipmentId,
      status,
      notes
    });
  }, [updateShipmentStatusMutation]));
  const toggleItemSelection =
  /* istanbul ignore next */
  (cov_1fitxmtalb().s[42]++, (0, _react.useCallback)(itemId => {
    /* istanbul ignore next */
    cov_1fitxmtalb().f[12]++;
    cov_1fitxmtalb().s[43]++;
    setSelectedItems(prev => {
      /* istanbul ignore next */
      cov_1fitxmtalb().f[13]++;
      cov_1fitxmtalb().s[44]++;
      return prev.includes(itemId) ?
      /* istanbul ignore next */
      (cov_1fitxmtalb().b[6][0]++, prev.filter(id => {
        /* istanbul ignore next */
        cov_1fitxmtalb().f[14]++;
        cov_1fitxmtalb().s[45]++;
        return id !== itemId;
      })) :
      /* istanbul ignore next */
      (cov_1fitxmtalb().b[6][1]++, [...prev, itemId]);
    });
  }, []));
  const selectAllItems =
  /* istanbul ignore next */
  (cov_1fitxmtalb().s[46]++, (0, _react.useCallback)(itemIds => {
    /* istanbul ignore next */
    cov_1fitxmtalb().f[15]++;
    cov_1fitxmtalb().s[47]++;
    setSelectedItems(itemIds);
  }, []));
  const clearSelection =
  /* istanbul ignore next */
  (cov_1fitxmtalb().s[48]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_1fitxmtalb().f[16]++;
    cov_1fitxmtalb().s[49]++;
    setSelectedItems([]);
  }, []));
  // =====================================================
  // MÉTRICAS DERIVADAS
  // =====================================================
  const derivedMetrics =
  /* istanbul ignore next */
  (cov_1fitxmtalb().s[50]++, {
    totalShipments:
    /* istanbul ignore next */
    (cov_1fitxmtalb().b[7][0]++, shipmentsData?.data?.length) ||
    /* istanbul ignore next */
    (cov_1fitxmtalb().b[7][1]++, 0),
    pendingShipments:
    /* istanbul ignore next */
    (cov_1fitxmtalb().b[8][0]++, shipmentsData?.data?.filter(s => {
      /* istanbul ignore next */
      cov_1fitxmtalb().f[17]++;
      cov_1fitxmtalb().s[51]++;
      return s.status === 'pending';
    }).length) ||
    /* istanbul ignore next */
    (cov_1fitxmtalb().b[8][1]++, 0),
    inTransitShipments:
    /* istanbul ignore next */
    (cov_1fitxmtalb().b[9][0]++, shipmentsData?.data?.filter(s => {
      /* istanbul ignore next */
      cov_1fitxmtalb().f[18]++;
      cov_1fitxmtalb().s[52]++;
      return s.status === 'in_transit';
    }).length) ||
    /* istanbul ignore next */
    (cov_1fitxmtalb().b[9][1]++, 0),
    deliveredShipments:
    /* istanbul ignore next */
    (cov_1fitxmtalb().b[10][0]++, shipmentsData?.data?.filter(s => {
      /* istanbul ignore next */
      cov_1fitxmtalb().f[19]++;
      cov_1fitxmtalb().s[53]++;
      return s.status === 'delivered';
    }).length) ||
    /* istanbul ignore next */
    (cov_1fitxmtalb().b[10][1]++, 0),
    hasShipments: (
    /* istanbul ignore next */
    (cov_1fitxmtalb().b[11][0]++, shipmentsData?.data?.length) ||
    /* istanbul ignore next */
    (cov_1fitxmtalb().b[11][1]++, 0)) > 0,
    canCreateShipment: selectedItems.length > 0,
    availableCarriers:
    /* istanbul ignore next */
    (cov_1fitxmtalb().b[12][0]++, carriersData?.data) ||
    /* istanbul ignore next */
    (cov_1fitxmtalb().b[12][1]++, []),
    selectedItemsCount: selectedItems.length
  });
  // =====================================================
  // RETURN
  // =====================================================
  /* istanbul ignore next */
  cov_1fitxmtalb().s[54]++;
  return {
    // Datos
    shipments:
    /* istanbul ignore next */
    (cov_1fitxmtalb().b[13][0]++, shipmentsData?.data) ||
    /* istanbul ignore next */
    (cov_1fitxmtalb().b[13][1]++, []),
    carriers:
    /* istanbul ignore next */
    (cov_1fitxmtalb().b[14][0]++, carriersData?.data) ||
    /* istanbul ignore next */
    (cov_1fitxmtalb().b[14][1]++, []),
    // Estados de carga
    isLoading:
    /* istanbul ignore next */
    (cov_1fitxmtalb().b[15][0]++, shipmentsLoading) ||
    /* istanbul ignore next */
    (cov_1fitxmtalb().b[15][1]++, carriersLoading),
    isLoadingShipments: shipmentsLoading,
    isLoadingCarriers: carriersLoading,
    // Errores
    error:
    /* istanbul ignore next */
    (cov_1fitxmtalb().b[16][0]++, shipmentsError) ||
    /* istanbul ignore next */
    (cov_1fitxmtalb().b[16][1]++, carriersError),
    shipmentsError,
    carriersError,
    // Acciones
    createShipment,
    updateShipmentStatus,
    refetchShipments,
    // Selección de items
    selectedItems,
    toggleItemSelection,
    selectAllItems,
    clearSelection,
    // Estados de mutations
    isCreatingShipment: createShipmentMutation.isPending,
    isUpdatingStatus: updateShipmentStatusMutation.isPending,
    // Métricas derivadas
    derivedMetrics,
    // Helpers
    getShipmentsByStatus: status => {
      /* istanbul ignore next */
      cov_1fitxmtalb().f[20]++;
      cov_1fitxmtalb().s[55]++;
      return /* istanbul ignore next */(cov_1fitxmtalb().b[17][0]++, shipmentsData?.data?.filter(s => {
        /* istanbul ignore next */
        cov_1fitxmtalb().f[21]++;
        cov_1fitxmtalb().s[56]++;
        return s.status === status;
      })) ||
      /* istanbul ignore next */
      (cov_1fitxmtalb().b[17][1]++, []);
    },
    getLatestTrackingEvent: shipment => {
      /* istanbul ignore next */
      cov_1fitxmtalb().f[22]++;
      cov_1fitxmtalb().s[57]++;
      return /* istanbul ignore next */(cov_1fitxmtalb().b[18][0]++, shipment.tracking_events?.[0]) ||
      /* istanbul ignore next */
      (cov_1fitxmtalb().b[18][1]++, null);
    },
    canShipItems: itemIds => {
      /* istanbul ignore next */
      cov_1fitxmtalb().f[23]++;
      cov_1fitxmtalb().s[58]++;
      return itemIds.length > 0;
    },
    getShipmentProgress: shipment => {
      /* istanbul ignore next */
      cov_1fitxmtalb().f[24]++;
      const statusOrder =
      /* istanbul ignore next */
      (cov_1fitxmtalb().s[59]++, ['pending', 'confirmed', 'picked_up', 'in_transit', 'out_for_delivery', 'delivered']);
      const currentIndex =
      /* istanbul ignore next */
      (cov_1fitxmtalb().s[60]++, statusOrder.indexOf(shipment.status));
      /* istanbul ignore next */
      cov_1fitxmtalb().s[61]++;
      return currentIndex >= 0 ?
      /* istanbul ignore next */
      (cov_1fitxmtalb().b[19][0]++, (currentIndex + 1) / statusOrder.length * 100) :
      /* istanbul ignore next */
      (cov_1fitxmtalb().b[19][1]++, 0);
    }
  };
}
function useShipmentTracking(shipmentId) {
  /* istanbul ignore next */
  cov_1fitxmtalb().f[25]++;
  const {
    data: trackingData,
    isLoading,
    error,
    refetch
  } =
  /* istanbul ignore next */
  (cov_1fitxmtalb().s[62]++, (0, _reactquery.useQuery)({
    queryKey: ['shipment-tracking', shipmentId],
    queryFn: async () => {
      /* istanbul ignore next */
      cov_1fitxmtalb().f[26]++;
      const response =
      /* istanbul ignore next */
      (cov_1fitxmtalb().s[63]++, await fetch(`/api/admin/logistics/tracking/${shipmentId}`));
      /* istanbul ignore next */
      cov_1fitxmtalb().s[64]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_1fitxmtalb().b[20][0]++;
        cov_1fitxmtalb().s[65]++;
        throw new Error(`Error ${response.status}: ${response.statusText}`);
      } else
      /* istanbul ignore next */
      {
        cov_1fitxmtalb().b[20][1]++;
      }
      cov_1fitxmtalb().s[66]++;
      return response.json();
    },
    enabled: !!shipmentId,
    refetchInterval: 30000,
    staleTime: 10000,
    refetchOnWindowFocus: true
  }));
  /* istanbul ignore next */
  cov_1fitxmtalb().s[67]++;
  return {
    trackingEvents:
    /* istanbul ignore next */
    (cov_1fitxmtalb().b[21][0]++, trackingData?.data) ||
    /* istanbul ignore next */
    (cov_1fitxmtalb().b[21][1]++, []),
    isLoading,
    error,
    refetch,
    latestEvent:
    /* istanbul ignore next */
    (cov_1fitxmtalb().b[22][0]++, trackingData?.data?.[0]) ||
    /* istanbul ignore next */
    (cov_1fitxmtalb().b[22][1]++, null),
    isDelivered: trackingData?.data?.[0]?.status === 'delivered',
    isInTransit: ['in_transit', 'out_for_delivery'].includes(trackingData?.data?.[0]?.status),
    hasException: trackingData?.data?.[0]?.status === 'exception'
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,