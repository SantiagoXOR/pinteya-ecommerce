ecb17829128dc1be853732e6247903d3
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_33kfsre5m() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\monitoring\\reports\\route.ts";
  var hash = "64e0b996f9d377db6eff7a92c1ff2e61e6e672ae";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\monitoring\\reports\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 23
        }
      },
      "6": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 38
        }
      },
      "7": {
        start: {
          line: 21,
          column: 19
        },
        end: {
          line: 21,
          column: 64
        }
      },
      "8": {
        start: {
          line: 22,
          column: 18
        },
        end: {
          line: 22,
          column: 69
        }
      },
      "9": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 63
        }
      },
      "10": {
        start: {
          line: 24,
          column: 16
        },
        end: {
          line: 24,
          column: 24
        }
      },
      "11": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 107,
          column: 5
        }
      },
      "12": {
        start: {
          line: 28,
          column: 27
        },
        end: {
          line: 28,
          column: 79
        }
      },
      "13": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 36,
          column: 9
        }
      },
      "14": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 35,
          column: 15
        }
      },
      "15": {
        start: {
          line: 37,
          column: 29
        },
        end: {
          line: 37,
          column: 57
        }
      },
      "16": {
        start: {
          line: 38,
          column: 27
        },
        end: {
          line: 38,
          column: 68
        }
      },
      "17": {
        start: {
          line: 39,
          column: 26
        },
        end: {
          line: 39,
          column: 119
        }
      },
      "18": {
        start: {
          line: 40,
          column: 24
        },
        end: {
          line: 40,
          column: 79
        }
      },
      "19": {
        start: {
          line: 41,
          column: 23
        },
        end: {
          line: 41,
          column: 59
        }
      },
      "20": {
        start: {
          line: 42,
          column: 23
        },
        end: {
          line: 49,
          column: 9
        }
      },
      "21": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 74,
          column: 9
        }
      },
      "22": {
        start: {
          line: 53,
          column: 16
        },
        end: {
          line: 53,
          column: 69
        }
      },
      "23": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 22
        }
      },
      "24": {
        start: {
          line: 56,
          column: 16
        },
        end: {
          line: 56,
          column: 66
        }
      },
      "25": {
        start: {
          line: 57,
          column: 16
        },
        end: {
          line: 57,
          column: 22
        }
      },
      "26": {
        start: {
          line: 59,
          column: 16
        },
        end: {
          line: 59,
          column: 66
        }
      },
      "27": {
        start: {
          line: 60,
          column: 16
        },
        end: {
          line: 60,
          column: 22
        }
      },
      "28": {
        start: {
          line: 62,
          column: 16
        },
        end: {
          line: 62,
          column: 68
        }
      },
      "29": {
        start: {
          line: 63,
          column: 16
        },
        end: {
          line: 63,
          column: 22
        }
      },
      "30": {
        start: {
          line: 65,
          column: 16
        },
        end: {
          line: 65,
          column: 65
        }
      },
      "31": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 66,
          column: 22
        }
      },
      "32": {
        start: {
          line: 68,
          column: 16
        },
        end: {
          line: 73,
          column: 19
        }
      },
      "33": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 80,
          column: 39
        }
      },
      "34": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 84,
          column: 9
        }
      },
      "35": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 63
        }
      },
      "36": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 96,
          column: 11
        }
      },
      "37": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 100,
          column: 39
        }
      },
      "38": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 106,
          column: 11
        }
      },
      "39": {
        start: {
          line: 112,
          column: 21
        },
        end: {
          line: 112,
          column: 59
        }
      },
      "40": {
        start: {
          line: 113,
          column: 4
        },
        end: {
          line: 115,
          column: 5
        }
      },
      "41": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 114,
          column: 57
        }
      },
      "42": {
        start: {
          line: 117,
          column: 30
        },
        end: {
          line: 124,
          column: 6
        }
      },
      "43": {
        start: {
          line: 125,
          column: 4
        },
        end: {
          line: 127,
          column: 5
        }
      },
      "44": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 126,
          column: 63
        }
      },
      "45": {
        start: {
          line: 129,
          column: 32
        },
        end: {
          line: 129,
          column: 90
        }
      },
      "46": {
        start: {
          line: 129,
          column: 52
        },
        end: {
          line: 129,
          column: 89
        }
      },
      "47": {
        start: {
          line: 130,
          column: 29
        },
        end: {
          line: 130,
          column: 89
        }
      },
      "48": {
        start: {
          line: 130,
          column: 49
        },
        end: {
          line: 130,
          column: 88
        }
      },
      "49": {
        start: {
          line: 131,
          column: 30
        },
        end: {
          line: 131,
          column: 90
        }
      },
      "50": {
        start: {
          line: 131,
          column: 50
        },
        end: {
          line: 131,
          column: 89
        }
      },
      "51": {
        start: {
          line: 132,
          column: 26
        },
        end: {
          line: 132,
          column: 85
        }
      },
      "52": {
        start: {
          line: 132,
          column: 46
        },
        end: {
          line: 132,
          column: 84
        }
      },
      "53": {
        start: {
          line: 133,
          column: 28
        },
        end: {
          line: 133,
          column: 148
        }
      },
      "54": {
        start: {
          line: 133,
          column: 98
        },
        end: {
          line: 133,
          column: 111
        }
      },
      "55": {
        start: {
          line: 134,
          column: 28
        },
        end: {
          line: 134,
          column: 115
        }
      },
      "56": {
        start: {
          line: 134,
          column: 102
        },
        end: {
          line: 134,
          column: 109
        }
      },
      "57": {
        start: {
          line: 135,
          column: 28
        },
        end: {
          line: 135,
          column: 115
        }
      },
      "58": {
        start: {
          line: 135,
          column: 102
        },
        end: {
          line: 135,
          column: 109
        }
      },
      "59": {
        start: {
          line: 136,
          column: 25
        },
        end: {
          line: 136,
          column: 136
        }
      },
      "60": {
        start: {
          line: 136,
          column: 89
        },
        end: {
          line: 136,
          column: 102
        }
      },
      "61": {
        start: {
          line: 137,
          column: 26
        },
        end: {
          line: 137,
          column: 140
        }
      },
      "62": {
        start: {
          line: 137,
          column: 92
        },
        end: {
          line: 137,
          column: 105
        }
      },
      "63": {
        start: {
          line: 138,
          column: 22
        },
        end: {
          line: 138,
          column: 127
        }
      },
      "64": {
        start: {
          line: 138,
          column: 80
        },
        end: {
          line: 138,
          column: 93
        }
      },
      "65": {
        start: {
          line: 140,
          column: 19
        },
        end: {
          line: 140,
          column: 48
        }
      },
      "66": {
        start: {
          line: 142,
          column: 22
        },
        end: {
          line: 163,
          column: 5
        }
      },
      "67": {
        start: {
          line: 164,
          column: 4
        },
        end: {
          line: 176,
          column: 6
        }
      },
      "68": {
        start: {
          line: 181,
          column: 21
        },
        end: {
          line: 181,
          column: 59
        }
      },
      "69": {
        start: {
          line: 182,
          column: 4
        },
        end: {
          line: 184,
          column: 5
        }
      },
      "70": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 183,
          column: 57
        }
      },
      "71": {
        start: {
          line: 186,
          column: 34
        },
        end: {
          line: 188,
          column: 6
        }
      },
      "72": {
        start: {
          line: 189,
          column: 4
        },
        end: {
          line: 191,
          column: 5
        }
      },
      "73": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 190,
          column: 56
        }
      },
      "74": {
        start: {
          line: 193,
          column: 27
        },
        end: {
          line: 193,
          column: 167
        }
      },
      "75": {
        start: {
          line: 193,
          column: 55
        },
        end: {
          line: 193,
          column: 166
        }
      },
      "76": {
        start: {
          line: 194,
          column: 27
        },
        end: {
          line: 194,
          column: 88
        }
      },
      "77": {
        start: {
          line: 194,
          column: 58
        },
        end: {
          line: 194,
          column: 87
        }
      },
      "78": {
        start: {
          line: 195,
          column: 28
        },
        end: {
          line: 195,
          column: 86
        }
      },
      "79": {
        start: {
          line: 195,
          column: 59
        },
        end: {
          line: 195,
          column: 85
        }
      },
      "80": {
        start: {
          line: 196,
          column: 25
        },
        end: {
          line: 196,
          column: 122
        }
      },
      "81": {
        start: {
          line: 196,
          column: 56
        },
        end: {
          line: 196,
          column: 121
        }
      },
      "82": {
        start: {
          line: 198,
          column: 29
        },
        end: {
          line: 198,
          column: 31
        }
      },
      "83": {
        start: {
          line: 199,
          column: 4
        },
        end: {
          line: 201,
          column: 7
        }
      },
      "84": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 200,
          column: 87
        }
      },
      "85": {
        start: {
          line: 203,
          column: 26
        },
        end: {
          line: 203,
          column: 28
        }
      },
      "86": {
        start: {
          line: 204,
          column: 4
        },
        end: {
          line: 206,
          column: 7
        }
      },
      "87": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 205,
          column: 81
        }
      },
      "88": {
        start: {
          line: 208,
          column: 20
        },
        end: {
          line: 208,
          column: 25
        }
      },
      "89": {
        start: {
          line: 209,
          column: 4
        },
        end: {
          line: 215,
          column: 5
        }
      },
      "90": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 210,
          column: 31
        }
      },
      "91": {
        start: {
          line: 211,
          column: 11
        },
        end: {
          line: 215,
          column: 5
        }
      },
      "92": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 212,
          column: 27
        }
      },
      "93": {
        start: {
          line: 213,
          column: 11
        },
        end: {
          line: 215,
          column: 5
        }
      },
      "94": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 214,
          column: 29
        }
      },
      "95": {
        start: {
          line: 217,
          column: 23
        },
        end: {
          line: 233,
          column: 40
        }
      },
      "96": {
        start: {
          line: 233,
          column: 23
        },
        end: {
          line: 233,
          column: 39
        }
      },
      "97": {
        start: {
          line: 234,
          column: 4
        },
        end: {
          line: 251,
          column: 6
        }
      },
      "98": {
        start: {
          line: 256,
          column: 21
        },
        end: {
          line: 256,
          column: 59
        }
      },
      "99": {
        start: {
          line: 257,
          column: 4
        },
        end: {
          line: 259,
          column: 5
        }
      },
      "100": {
        start: {
          line: 258,
          column: 8
        },
        end: {
          line: 258,
          column: 57
        }
      },
      "101": {
        start: {
          line: 261,
          column: 29
        },
        end: {
          line: 261,
          column: 140
        }
      },
      "102": {
        start: {
          line: 262,
          column: 4
        },
        end: {
          line: 264,
          column: 5
        }
      },
      "103": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 263,
          column: 50
        }
      },
      "104": {
        start: {
          line: 265,
          column: 28
        },
        end: {
          line: 265,
          column: 80
        }
      },
      "105": {
        start: {
          line: 265,
          column: 51
        },
        end: {
          line: 265,
          column: 79
        }
      },
      "106": {
        start: {
          line: 266,
          column: 25
        },
        end: {
          line: 266,
          column: 97
        }
      },
      "107": {
        start: {
          line: 266,
          column: 62
        },
        end: {
          line: 266,
          column: 93
        }
      },
      "108": {
        start: {
          line: 267,
          column: 26
        },
        end: {
          line: 267,
          column: 96
        }
      },
      "109": {
        start: {
          line: 269,
          column: 27
        },
        end: {
          line: 269,
          column: 32
        }
      },
      "110": {
        start: {
          line: 270,
          column: 31
        },
        end: {
          line: 270,
          column: 36
        }
      },
      "111": {
        start: {
          line: 272,
          column: 19
        },
        end: {
          line: 272,
          column: 71
        }
      },
      "112": {
        start: {
          line: 274,
          column: 27
        },
        end: {
          line: 280,
          column: 5
        }
      },
      "113": {
        start: {
          line: 281,
          column: 4
        },
        end: {
          line: 292,
          column: 6
        }
      },
      "114": {
        start: {
          line: 297,
          column: 4
        },
        end: {
          line: 322,
          column: 6
        }
      },
      "115": {
        start: {
          line: 327,
          column: 46
        },
        end: {
          line: 331,
          column: 6
        }
      },
      "116": {
        start: {
          line: 332,
          column: 4
        },
        end: {
          line: 351,
          column: 6
        }
      },
      "117": {
        start: {
          line: 357,
          column: 23
        },
        end: {
          line: 357,
          column: 25
        }
      },
      "118": {
        start: {
          line: 358,
          column: 4
        },
        end: {
          line: 374,
          column: 7
        }
      },
      "119": {
        start: {
          line: 359,
          column: 21
        },
        end: {
          line: 359,
          column: 94
        }
      },
      "120": {
        start: {
          line: 360,
          column: 8
        },
        end: {
          line: 366,
          column: 9
        }
      },
      "121": {
        start: {
          line: 361,
          column: 12
        },
        end: {
          line: 365,
          column: 14
        }
      },
      "122": {
        start: {
          line: 367,
          column: 8
        },
        end: {
          line: 373,
          column: 9
        }
      },
      "123": {
        start: {
          line: 368,
          column: 12
        },
        end: {
          line: 368,
          column: 61
        }
      },
      "124": {
        start: {
          line: 369,
          column: 15
        },
        end: {
          line: 373,
          column: 9
        }
      },
      "125": {
        start: {
          line: 370,
          column: 12
        },
        end: {
          line: 370,
          column: 58
        }
      },
      "126": {
        start: {
          line: 371,
          column: 15
        },
        end: {
          line: 373,
          column: 9
        }
      },
      "127": {
        start: {
          line: 372,
          column: 12
        },
        end: {
          line: 372,
          column: 59
        }
      },
      "128": {
        start: {
          line: 375,
          column: 4
        },
        end: {
          line: 380,
          column: 12
        }
      },
      "129": {
        start: {
          line: 375,
          column: 64
        },
        end: {
          line: 380,
          column: 9
        }
      },
      "130": {
        start: {
          line: 377,
          column: 90
        },
        end: {
          line: 377,
          column: 95
        }
      },
      "131": {
        start: {
          line: 378,
          column: 81
        },
        end: {
          line: 378,
          column: 86
        }
      },
      "132": {
        start: {
          line: 379,
          column: 84
        },
        end: {
          line: 379,
          column: 89
        }
      },
      "133": {
        start: {
          line: 383,
          column: 22
        },
        end: {
          line: 383,
          column: 24
        }
      },
      "134": {
        start: {
          line: 384,
          column: 4
        },
        end: {
          line: 394,
          column: 7
        }
      },
      "135": {
        start: {
          line: 385,
          column: 21
        },
        end: {
          line: 385,
          column: 78
        }
      },
      "136": {
        start: {
          line: 386,
          column: 8
        },
        end: {
          line: 391,
          column: 9
        }
      },
      "137": {
        start: {
          line: 387,
          column: 12
        },
        end: {
          line: 390,
          column: 14
        }
      },
      "138": {
        start: {
          line: 392,
          column: 8
        },
        end: {
          line: 392,
          column: 59
        }
      },
      "139": {
        start: {
          line: 393,
          column: 8
        },
        end: {
          line: 393,
          column: 36
        }
      },
      "140": {
        start: {
          line: 395,
          column: 4
        },
        end: {
          line: 400,
          column: 12
        }
      },
      "141": {
        start: {
          line: 395,
          column: 58
        },
        end: {
          line: 400,
          column: 9
        }
      },
      "142": {
        start: {
          line: 404,
          column: 16
        },
        end: {
          line: 404,
          column: 112
        }
      },
      "143": {
        start: {
          line: 405,
          column: 4
        },
        end: {
          line: 410,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 19
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "GET",
        decl: {
          start: {
            line: 25,
            column: 15
          },
          end: {
            line: 25,
            column: 18
          }
        },
        loc: {
          start: {
            line: 25,
            column: 28
          },
          end: {
            line: 108,
            column: 1
          }
        },
        line: 25
      },
      "4": {
        name: "generatePerformanceReport",
        decl: {
          start: {
            line: 111,
            column: 19
          },
          end: {
            line: 111,
            column: 44
          }
        },
        loc: {
          start: {
            line: 111,
            column: 53
          },
          end: {
            line: 177,
            column: 1
          }
        },
        line: 111
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 129,
            column: 47
          },
          end: {
            line: 129,
            column: 48
          }
        },
        loc: {
          start: {
            line: 129,
            column: 52
          },
          end: {
            line: 129,
            column: 89
          }
        },
        line: 129
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 130,
            column: 44
          },
          end: {
            line: 130,
            column: 45
          }
        },
        loc: {
          start: {
            line: 130,
            column: 49
          },
          end: {
            line: 130,
            column: 88
          }
        },
        line: 130
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 131,
            column: 45
          },
          end: {
            line: 131,
            column: 46
          }
        },
        loc: {
          start: {
            line: 131,
            column: 50
          },
          end: {
            line: 131,
            column: 89
          }
        },
        line: 131
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 132,
            column: 41
          },
          end: {
            line: 132,
            column: 42
          }
        },
        loc: {
          start: {
            line: 132,
            column: 46
          },
          end: {
            line: 132,
            column: 84
          }
        },
        line: 132
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 133,
            column: 88
          },
          end: {
            line: 133,
            column: 89
          }
        },
        loc: {
          start: {
            line: 133,
            column: 98
          },
          end: {
            line: 133,
            column: 111
          }
        },
        line: 133
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 134,
            column: 97
          },
          end: {
            line: 134,
            column: 98
          }
        },
        loc: {
          start: {
            line: 134,
            column: 102
          },
          end: {
            line: 134,
            column: 109
          }
        },
        line: 134
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 135,
            column: 97
          },
          end: {
            line: 135,
            column: 98
          }
        },
        loc: {
          start: {
            line: 135,
            column: 102
          },
          end: {
            line: 135,
            column: 109
          }
        },
        line: 135
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 136,
            column: 79
          },
          end: {
            line: 136,
            column: 80
          }
        },
        loc: {
          start: {
            line: 136,
            column: 89
          },
          end: {
            line: 136,
            column: 102
          }
        },
        line: 136
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 137,
            column: 82
          },
          end: {
            line: 137,
            column: 83
          }
        },
        loc: {
          start: {
            line: 137,
            column: 92
          },
          end: {
            line: 137,
            column: 105
          }
        },
        line: 137
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 138,
            column: 70
          },
          end: {
            line: 138,
            column: 71
          }
        },
        loc: {
          start: {
            line: 138,
            column: 80
          },
          end: {
            line: 138,
            column: 93
          }
        },
        line: 138
      },
      "15": {
        name: "generateSecurityReport",
        decl: {
          start: {
            line: 180,
            column: 19
          },
          end: {
            line: 180,
            column: 41
          }
        },
        loc: {
          start: {
            line: 180,
            column: 50
          },
          end: {
            line: 252,
            column: 1
          }
        },
        line: 180
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 193,
            column: 46
          },
          end: {
            line: 193,
            column: 47
          }
        },
        loc: {
          start: {
            line: 193,
            column: 55
          },
          end: {
            line: 193,
            column: 166
          }
        },
        line: 193
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 194,
            column: 49
          },
          end: {
            line: 194,
            column: 50
          }
        },
        loc: {
          start: {
            line: 194,
            column: 58
          },
          end: {
            line: 194,
            column: 87
          }
        },
        line: 194
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 195,
            column: 50
          },
          end: {
            line: 195,
            column: 51
          }
        },
        loc: {
          start: {
            line: 195,
            column: 59
          },
          end: {
            line: 195,
            column: 85
          }
        },
        line: 195
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 196,
            column: 47
          },
          end: {
            line: 196,
            column: 48
          }
        },
        loc: {
          start: {
            line: 196,
            column: 56
          },
          end: {
            line: 196,
            column: 121
          }
        },
        line: 196
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 199,
            column: 27
          },
          end: {
            line: 199,
            column: 28
          }
        },
        loc: {
          start: {
            line: 199,
            column: 36
          },
          end: {
            line: 201,
            column: 5
          }
        },
        line: 199
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 204,
            column: 27
          },
          end: {
            line: 204,
            column: 28
          }
        },
        loc: {
          start: {
            line: 204,
            column: 36
          },
          end: {
            line: 206,
            column: 5
          }
        },
        line: 204
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 233,
            column: 13
          },
          end: {
            line: 233,
            column: 14
          }
        },
        loc: {
          start: {
            line: 233,
            column: 23
          },
          end: {
            line: 233,
            column: 39
          }
        },
        line: 233
      },
      "23": {
        name: "generateBusinessReport",
        decl: {
          start: {
            line: 255,
            column: 19
          },
          end: {
            line: 255,
            column: 41
          }
        },
        loc: {
          start: {
            line: 255,
            column: 50
          },
          end: {
            line: 293,
            column: 1
          }
        },
        line: 255
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 265,
            column: 42
          },
          end: {
            line: 265,
            column: 43
          }
        },
        loc: {
          start: {
            line: 265,
            column: 51
          },
          end: {
            line: 265,
            column: 79
          }
        },
        line: 265
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 266,
            column: 48
          },
          end: {
            line: 266,
            column: 49
          }
        },
        loc: {
          start: {
            line: 266,
            column: 62
          },
          end: {
            line: 266,
            column: 93
          }
        },
        line: 266
      },
      "26": {
        name: "generateComplianceReport",
        decl: {
          start: {
            line: 296,
            column: 19
          },
          end: {
            line: 296,
            column: 43
          }
        },
        loc: {
          start: {
            line: 296,
            column: 52
          },
          end: {
            line: 323,
            column: 1
          }
        },
        line: 296
      },
      "27": {
        name: "generateSummaryReport",
        decl: {
          start: {
            line: 326,
            column: 19
          },
          end: {
            line: 326,
            column: 40
          }
        },
        loc: {
          start: {
            line: 326,
            column: 49
          },
          end: {
            line: 352,
            column: 1
          }
        },
        line: 326
      },
      "28": {
        name: "generateHourlyTrends",
        decl: {
          start: {
            line: 355,
            column: 13
          },
          end: {
            line: 355,
            column: 33
          }
        },
        loc: {
          start: {
            line: 355,
            column: 43
          },
          end: {
            line: 381,
            column: 1
          }
        },
        line: 355
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 358,
            column: 20
          },
          end: {
            line: 358,
            column: 21
          }
        },
        loc: {
          start: {
            line: 358,
            column: 30
          },
          end: {
            line: 374,
            column: 5
          }
        },
        line: 358
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 375,
            column: 42
          },
          end: {
            line: 375,
            column: 43
          }
        },
        loc: {
          start: {
            line: 375,
            column: 64
          },
          end: {
            line: 380,
            column: 9
          }
        },
        line: 375
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 377,
            column: 82
          },
          end: {
            line: 377,
            column: 83
          }
        },
        loc: {
          start: {
            line: 377,
            column: 90
          },
          end: {
            line: 377,
            column: 95
          }
        },
        line: 377
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 378,
            column: 73
          },
          end: {
            line: 378,
            column: 74
          }
        },
        loc: {
          start: {
            line: 378,
            column: 81
          },
          end: {
            line: 378,
            column: 86
          }
        },
        line: 378
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 379,
            column: 76
          },
          end: {
            line: 379,
            column: 77
          }
        },
        loc: {
          start: {
            line: 379,
            column: 84
          },
          end: {
            line: 379,
            column: 89
          }
        },
        line: 379
      },
      "34": {
        name: "generateDailyBusinessTrends",
        decl: {
          start: {
            line: 382,
            column: 9
          },
          end: {
            line: 382,
            column: 36
          }
        },
        loc: {
          start: {
            line: 382,
            column: 53
          },
          end: {
            line: 401,
            column: 1
          }
        },
        line: 382
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 384,
            column: 19
          },
          end: {
            line: 384,
            column: 20
          }
        },
        loc: {
          start: {
            line: 384,
            column: 28
          },
          end: {
            line: 394,
            column: 5
          }
        },
        line: 384
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 395,
            column: 41
          },
          end: {
            line: 395,
            column: 42
          }
        },
        loc: {
          start: {
            line: 395,
            column: 58
          },
          end: {
            line: 400,
            column: 9
          }
        },
        line: 395
      },
      "37": {
        name: "generateCSVResponse",
        decl: {
          start: {
            line: 402,
            column: 9
          },
          end: {
            line: 402,
            column: 28
          }
        },
        loc: {
          start: {
            line: 402,
            column: 47
          },
          end: {
            line: 411,
            column: 1
          }
        },
        line: 402
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "1": {
        loc: {
          start: {
            line: 29,
            column: 12
          },
          end: {
            line: 29,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 12
          },
          end: {
            line: 29,
            column: 31
          }
        }, {
          start: {
            line: 29,
            column: 35
          },
          end: {
            line: 29,
            column: 53
          }
        }],
        line: 29
      },
      "2": {
        loc: {
          start: {
            line: 38,
            column: 27
          },
          end: {
            line: 38,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 27
          },
          end: {
            line: 38,
            column: 51
          }
        }, {
          start: {
            line: 38,
            column: 55
          },
          end: {
            line: 38,
            column: 68
          }
        }],
        line: 38
      },
      "3": {
        loc: {
          start: {
            line: 39,
            column: 26
          },
          end: {
            line: 39,
            column: 119
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 26
          },
          end: {
            line: 39,
            column: 55
          }
        }, {
          start: {
            line: 39,
            column: 59
          },
          end: {
            line: 39,
            column: 119
          }
        }],
        line: 39
      },
      "4": {
        loc: {
          start: {
            line: 40,
            column: 24
          },
          end: {
            line: 40,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 24
          },
          end: {
            line: 40,
            column: 51
          }
        }, {
          start: {
            line: 40,
            column: 55
          },
          end: {
            line: 40,
            column: 79
          }
        }],
        line: 40
      },
      "5": {
        loc: {
          start: {
            line: 41,
            column: 23
          },
          end: {
            line: 41,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 23
          },
          end: {
            line: 41,
            column: 49
          }
        }, {
          start: {
            line: 41,
            column: 53
          },
          end: {
            line: 41,
            column: 59
          }
        }],
        line: 41
      },
      "6": {
        loc: {
          start: {
            line: 48,
            column: 28
          },
          end: {
            line: 48,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 28
          },
          end: {
            line: 48,
            column: 53
          }
        }, {
          start: {
            line: 48,
            column: 57
          },
          end: {
            line: 48,
            column: 63
          }
        }],
        line: 48
      },
      "7": {
        loc: {
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 74,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 54,
            column: 22
          }
        }, {
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 57,
            column: 22
          }
        }, {
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 60,
            column: 22
          }
        }, {
          start: {
            line: 61,
            column: 12
          },
          end: {
            line: 63,
            column: 22
          }
        }, {
          start: {
            line: 64,
            column: 12
          },
          end: {
            line: 66,
            column: 22
          }
        }, {
          start: {
            line: 67,
            column: 12
          },
          end: {
            line: 73,
            column: 19
          }
        }],
        line: 51
      },
      "8": {
        loc: {
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "9": {
        loc: {
          start: {
            line: 99,
            column: 19
          },
          end: {
            line: 99,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 99,
            column: 44
          },
          end: {
            line: 99,
            column: 57
          }
        }, {
          start: {
            line: 99,
            column: 60
          },
          end: {
            line: 99,
            column: 75
          }
        }],
        line: 99
      },
      "10": {
        loc: {
          start: {
            line: 113,
            column: 4
          },
          end: {
            line: 115,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 4
          },
          end: {
            line: 115,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 113
      },
      "11": {
        loc: {
          start: {
            line: 125,
            column: 4
          },
          end: {
            line: 127,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 4
          },
          end: {
            line: 127,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "12": {
        loc: {
          start: {
            line: 133,
            column: 28
          },
          end: {
            line: 133,
            column: 148
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 133,
            column: 61
          },
          end: {
            line: 133,
            column: 144
          }
        }, {
          start: {
            line: 133,
            column: 147
          },
          end: {
            line: 133,
            column: 148
          }
        }],
        line: 133
      },
      "13": {
        loc: {
          start: {
            line: 134,
            column: 28
          },
          end: {
            line: 134,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 134,
            column: 61
          },
          end: {
            line: 134,
            column: 111
          }
        }, {
          start: {
            line: 134,
            column: 114
          },
          end: {
            line: 134,
            column: 115
          }
        }],
        line: 134
      },
      "14": {
        loc: {
          start: {
            line: 135,
            column: 28
          },
          end: {
            line: 135,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 135,
            column: 61
          },
          end: {
            line: 135,
            column: 111
          }
        }, {
          start: {
            line: 135,
            column: 114
          },
          end: {
            line: 135,
            column: 115
          }
        }],
        line: 135
      },
      "15": {
        loc: {
          start: {
            line: 136,
            column: 25
          },
          end: {
            line: 136,
            column: 136
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 136,
            column: 55
          },
          end: {
            line: 136,
            column: 132
          }
        }, {
          start: {
            line: 136,
            column: 135
          },
          end: {
            line: 136,
            column: 136
          }
        }],
        line: 136
      },
      "16": {
        loc: {
          start: {
            line: 137,
            column: 26
          },
          end: {
            line: 137,
            column: 140
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 137,
            column: 57
          },
          end: {
            line: 137,
            column: 136
          }
        }, {
          start: {
            line: 137,
            column: 139
          },
          end: {
            line: 137,
            column: 140
          }
        }],
        line: 137
      },
      "17": {
        loc: {
          start: {
            line: 138,
            column: 22
          },
          end: {
            line: 138,
            column: 127
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 138,
            column: 49
          },
          end: {
            line: 138,
            column: 120
          }
        }, {
          start: {
            line: 138,
            column: 123
          },
          end: {
            line: 138,
            column: 127
          }
        }],
        line: 138
      },
      "18": {
        loc: {
          start: {
            line: 182,
            column: 4
          },
          end: {
            line: 184,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 182,
            column: 4
          },
          end: {
            line: 184,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 182
      },
      "19": {
        loc: {
          start: {
            line: 189,
            column: 4
          },
          end: {
            line: 191,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 189,
            column: 4
          },
          end: {
            line: 191,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 189
      },
      "20": {
        loc: {
          start: {
            line: 193,
            column: 55
          },
          end: {
            line: 193,
            column: 166
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 193,
            column: 55
          },
          end: {
            line: 193,
            column: 94
          }
        }, {
          start: {
            line: 193,
            column: 98
          },
          end: {
            line: 193,
            column: 133
          }
        }, {
          start: {
            line: 193,
            column: 137
          },
          end: {
            line: 193,
            column: 166
          }
        }],
        line: 193
      },
      "21": {
        loc: {
          start: {
            line: 196,
            column: 56
          },
          end: {
            line: 196,
            column: 121
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 196,
            column: 56
          },
          end: {
            line: 196,
            column: 91
          }
        }, {
          start: {
            line: 196,
            column: 95
          },
          end: {
            line: 196,
            column: 121
          }
        }],
        line: 196
      },
      "22": {
        loc: {
          start: {
            line: 200,
            column: 44
          },
          end: {
            line: 200,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 200,
            column: 44
          },
          end: {
            line: 200,
            column: 76
          }
        }, {
          start: {
            line: 200,
            column: 80
          },
          end: {
            line: 200,
            column: 81
          }
        }],
        line: 200
      },
      "23": {
        loc: {
          start: {
            line: 205,
            column: 41
          },
          end: {
            line: 205,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 205,
            column: 41
          },
          end: {
            line: 205,
            column: 70
          }
        }, {
          start: {
            line: 205,
            column: 74
          },
          end: {
            line: 205,
            column: 75
          }
        }],
        line: 205
      },
      "24": {
        loc: {
          start: {
            line: 209,
            column: 4
          },
          end: {
            line: 215,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 209,
            column: 4
          },
          end: {
            line: 215,
            column: 5
          }
        }, {
          start: {
            line: 211,
            column: 11
          },
          end: {
            line: 215,
            column: 5
          }
        }],
        line: 209
      },
      "25": {
        loc: {
          start: {
            line: 211,
            column: 11
          },
          end: {
            line: 215,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 211,
            column: 11
          },
          end: {
            line: 215,
            column: 5
          }
        }, {
          start: {
            line: 213,
            column: 11
          },
          end: {
            line: 215,
            column: 5
          }
        }],
        line: 211
      },
      "26": {
        loc: {
          start: {
            line: 213,
            column: 11
          },
          end: {
            line: 215,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 213,
            column: 11
          },
          end: {
            line: 215,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 213
      },
      "27": {
        loc: {
          start: {
            line: 257,
            column: 4
          },
          end: {
            line: 259,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 257,
            column: 4
          },
          end: {
            line: 259,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 257
      },
      "28": {
        loc: {
          start: {
            line: 262,
            column: 4
          },
          end: {
            line: 264,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 262,
            column: 4
          },
          end: {
            line: 264,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 262
      },
      "29": {
        loc: {
          start: {
            line: 266,
            column: 69
          },
          end: {
            line: 266,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 266,
            column: 69
          },
          end: {
            line: 266,
            column: 87
          }
        }, {
          start: {
            line: 266,
            column: 91
          },
          end: {
            line: 266,
            column: 92
          }
        }],
        line: 266
      },
      "30": {
        loc: {
          start: {
            line: 267,
            column: 26
          },
          end: {
            line: 267,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 267,
            column: 55
          },
          end: {
            line: 267,
            column: 92
          }
        }, {
          start: {
            line: 267,
            column: 95
          },
          end: {
            line: 267,
            column: 96
          }
        }],
        line: 267
      },
      "31": {
        loc: {
          start: {
            line: 360,
            column: 8
          },
          end: {
            line: 366,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 360,
            column: 8
          },
          end: {
            line: 366,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 360
      },
      "32": {
        loc: {
          start: {
            line: 367,
            column: 8
          },
          end: {
            line: 373,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 367,
            column: 8
          },
          end: {
            line: 373,
            column: 9
          }
        }, {
          start: {
            line: 369,
            column: 15
          },
          end: {
            line: 373,
            column: 9
          }
        }],
        line: 367
      },
      "33": {
        loc: {
          start: {
            line: 369,
            column: 15
          },
          end: {
            line: 373,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 369,
            column: 15
          },
          end: {
            line: 373,
            column: 9
          }
        }, {
          start: {
            line: 371,
            column: 15
          },
          end: {
            line: 373,
            column: 9
          }
        }],
        line: 369
      },
      "34": {
        loc: {
          start: {
            line: 371,
            column: 15
          },
          end: {
            line: 373,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 371,
            column: 15
          },
          end: {
            line: 373,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 371
      },
      "35": {
        loc: {
          start: {
            line: 377,
            column: 26
          },
          end: {
            line: 377,
            column: 130
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 377,
            column: 57
          },
          end: {
            line: 377,
            column: 126
          }
        }, {
          start: {
            line: 377,
            column: 129
          },
          end: {
            line: 377,
            column: 130
          }
        }],
        line: 377
      },
      "36": {
        loc: {
          start: {
            line: 378,
            column: 23
          },
          end: {
            line: 378,
            column: 118
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 378,
            column: 51
          },
          end: {
            line: 378,
            column: 114
          }
        }, {
          start: {
            line: 378,
            column: 117
          },
          end: {
            line: 378,
            column: 118
          }
        }],
        line: 378
      },
      "37": {
        loc: {
          start: {
            line: 379,
            column: 24
          },
          end: {
            line: 379,
            column: 122
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 379,
            column: 53
          },
          end: {
            line: 379,
            column: 118
          }
        }, {
          start: {
            line: 379,
            column: 121
          },
          end: {
            line: 379,
            column: 122
          }
        }],
        line: 379
      },
      "38": {
        loc: {
          start: {
            line: 386,
            column: 8
          },
          end: {
            line: 391,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 386,
            column: 8
          },
          end: {
            line: 391,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 386
      },
      "39": {
        loc: {
          start: {
            line: 392,
            column: 35
          },
          end: {
            line: 392,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 392,
            column: 35
          },
          end: {
            line: 392,
            column: 53
          }
        }, {
          start: {
            line: 392,
            column: 57
          },
          end: {
            line: 392,
            column: 58
          }
        }],
        line: 392
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0, 0, 0, 0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\monitoring\\reports\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - MONITORING REPORTS API\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { getAuthenticatedAdmin } from '@/lib/auth/admin-auth';\r\nimport { getSupabaseClient } from '@/lib/integrations/supabase';\r\nimport { logger, LogLevel, LogCategory } from '@/lib/enterprise/logger';\r\n\r\ninterface ReportFilter {\r\n  startDate: string;\r\n  endDate: string;\r\n  services?: string[];\r\n  levels?: string[];\r\n  categories?: string[];\r\n  limit?: number;\r\n}\r\n\r\ninterface PerformanceReport {\r\n  period: string;\r\n  metrics: {\r\n    avgResponseTime: number;\r\n    maxResponseTime: number;\r\n    minResponseTime: number;\r\n    errorRate: number;\r\n    throughput: number;\r\n    uptime: number;\r\n  };\r\n  trends: Array<{\r\n    timestamp: string;\r\n    responseTime: number;\r\n    errorRate: number;\r\n    throughput: number;\r\n  }>;\r\n  topErrors: Array<{\r\n    error: string;\r\n    count: number;\r\n    percentage: number;\r\n  }>;\r\n}\r\n\r\ninterface SecurityReport {\r\n  period: string;\r\n  summary: {\r\n    totalEvents: number;\r\n    criticalEvents: number;\r\n    blockedRequests: number;\r\n    authFailures: number;\r\n    riskLevel: string;\r\n  };\r\n  eventsByCategory: Record<string, number>;\r\n  eventsByLevel: Record<string, number>;\r\n  topThreats: Array<{\r\n    type: string;\r\n    count: number;\r\n    lastSeen: string;\r\n  }>;\r\n  complianceStatus: {\r\n    auditCoverage: number;\r\n    retentionCompliance: number;\r\n    encryptionStatus: string;\r\n  };\r\n}\r\n\r\ninterface BusinessReport {\r\n  period: string;\r\n  metrics: {\r\n    totalRevenue: number;\r\n    totalOrders: number;\r\n    avgOrderValue: number;\r\n    conversionRate: number;\r\n    paymentSuccessRate: number;\r\n  };\r\n  trends: Array<{\r\n    date: string;\r\n    revenue: number;\r\n    orders: number;\r\n    conversionRate: number;\r\n  }>;\r\n  paymentMethods: Record<string, {\r\n    count: number;\r\n    revenue: number;\r\n    successRate: number;\r\n  }>;\r\n}\r\n\r\n/**\r\n * GET /api/admin/monitoring/reports\r\n * Genera reportes de monitoreo seg\xFAn el tipo solicitado\r\n */\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    // Verificar autenticaci\xF3n de admin\r\n    const authResult = await getAuthenticatedAdmin(request);\r\n    \r\n    if (!authResult.isAdmin || !authResult.userId) {\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: 'Acceso no autorizado'\r\n      }, { status: 401 });\r\n    }\r\n\r\n    const searchParams = request.nextUrl.searchParams;\r\n    const reportType = searchParams.get('type') || 'performance';\r\n    const startDate = searchParams.get('startDate') || new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString();\r\n    const endDate = searchParams.get('endDate') || new Date().toISOString();\r\n    const format = searchParams.get('format') || 'json';\r\n\r\n    const filter: ReportFilter = {\r\n      startDate,\r\n      endDate,\r\n      services: searchParams.get('services')?.split(','),\r\n      levels: searchParams.get('levels')?.split(','),\r\n      categories: searchParams.get('categories')?.split(','),\r\n      limit: parseInt(searchParams.get('limit') || '1000')\r\n    };\r\n\r\n    let reportData: any;\r\n\r\n    switch (reportType) {\r\n      case 'performance':\r\n        reportData = await generatePerformanceReport(filter);\r\n        break;\r\n      case 'security':\r\n        reportData = await generateSecurityReport(filter);\r\n        break;\r\n      case 'business':\r\n        reportData = await generateBusinessReport(filter);\r\n        break;\r\n      case 'compliance':\r\n        reportData = await generateComplianceReport(filter);\r\n        break;\r\n      case 'summary':\r\n        reportData = await generateSummaryReport(filter);\r\n        break;\r\n      default:\r\n        return NextResponse.json({\r\n          success: false,\r\n          error: 'Tipo de reporte no v\xE1lido'\r\n        }, { status: 400 });\r\n    }\r\n\r\n    logger.info(LogLevel.INFO, `Monitoring report generated: ${reportType}`, {\r\n      userId: authResult.userId,\r\n      reportType,\r\n      period: `${startDate} to ${endDate}`,\r\n      format\r\n    }, LogCategory.SYSTEM);\r\n\r\n    // Retornar en formato solicitado\r\n    if (format === 'csv') {\r\n      return generateCSVResponse(reportData, reportType);\r\n    }\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: {\r\n        reportType,\r\n        period: {\r\n          startDate,\r\n          endDate\r\n        },\r\n        generatedAt: new Date().toISOString(),\r\n        report: reportData\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    logger.error(LogLevel.ERROR, 'Failed to generate monitoring report', {\r\n      error: error instanceof Error ? error.message : 'Unknown error'\r\n    }, LogCategory.SYSTEM);\r\n\r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Error interno del servidor'\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n/**\r\n * Genera reporte de performance\r\n */\r\nasync function generatePerformanceReport(filter: ReportFilter): Promise<PerformanceReport> {\r\n  const supabase = getSupabaseClient(true);\r\n  \r\n  if (!supabase) {\r\n    throw new Error('Supabase client not available');\r\n  }\r\n\r\n  // Obtener m\xE9tricas de performance\r\n  const { data: metrics } = await supabase\r\n    .from('enterprise_metrics')\r\n    .select('*')\r\n    .in('name', [\r\n      'performance.api.duration',\r\n      'performance.api.error_rate',\r\n      'performance.api.throughput',\r\n      'performance.system.uptime'\r\n    ])\r\n    .gte('timestamp', filter.startDate)\r\n    .lte('timestamp', filter.endDate)\r\n    .order('timestamp', { ascending: true });\r\n\r\n  if (!metrics) {\r\n    throw new Error('Failed to fetch performance metrics');\r\n  }\r\n\r\n  // Calcular m\xE9tricas agregadas\r\n  const responseTimeMetrics = metrics.filter(m => m.name === 'performance.api.duration');\r\n  const errorRateMetrics = metrics.filter(m => m.name === 'performance.api.error_rate');\r\n  const throughputMetrics = metrics.filter(m => m.name === 'performance.api.throughput');\r\n  const uptimeMetrics = metrics.filter(m => m.name === 'performance.system.uptime');\r\n\r\n  const avgResponseTime = responseTimeMetrics.length > 0 \r\n    ? responseTimeMetrics.reduce((sum, m) => sum + m.value, 0) / responseTimeMetrics.length \r\n    : 0;\r\n\r\n  const maxResponseTime = responseTimeMetrics.length > 0 \r\n    ? Math.max(...responseTimeMetrics.map(m => m.value)) \r\n    : 0;\r\n\r\n  const minResponseTime = responseTimeMetrics.length > 0 \r\n    ? Math.min(...responseTimeMetrics.map(m => m.value)) \r\n    : 0;\r\n\r\n  const avgErrorRate = errorRateMetrics.length > 0 \r\n    ? errorRateMetrics.reduce((sum, m) => sum + m.value, 0) / errorRateMetrics.length \r\n    : 0;\r\n\r\n  const avgThroughput = throughputMetrics.length > 0 \r\n    ? throughputMetrics.reduce((sum, m) => sum + m.value, 0) / throughputMetrics.length \r\n    : 0;\r\n\r\n  const avgUptime = uptimeMetrics.length > 0 \r\n    ? uptimeMetrics.reduce((sum, m) => sum + m.value, 0) / uptimeMetrics.length \r\n    : 0.99;\r\n\r\n  // Generar tendencias (agrupadas por hora)\r\n  const trends = generateHourlyTrends(metrics);\r\n\r\n  // Obtener top errores (simulado)\r\n  const topErrors = [\r\n    { error: 'Database timeout', count: 5, percentage: 45.5 },\r\n    { error: 'MercadoPago API error', count: 3, percentage: 27.3 },\r\n    { error: 'Cache miss', count: 2, percentage: 18.2 },\r\n    { error: 'Rate limit exceeded', count: 1, percentage: 9.1 }\r\n  ];\r\n\r\n  return {\r\n    period: `${filter.startDate} to ${filter.endDate}`,\r\n    metrics: {\r\n      avgResponseTime,\r\n      maxResponseTime,\r\n      minResponseTime,\r\n      errorRate: avgErrorRate,\r\n      throughput: avgThroughput,\r\n      uptime: avgUptime\r\n    },\r\n    trends,\r\n    topErrors\r\n  };\r\n}\r\n\r\n/**\r\n * Genera reporte de seguridad\r\n */\r\nasync function generateSecurityReport(filter: ReportFilter): Promise<SecurityReport> {\r\n  const supabase = getSupabaseClient(true);\r\n  \r\n  if (!supabase) {\r\n    throw new Error('Supabase client not available');\r\n  }\r\n\r\n  // Obtener eventos de auditor\xEDa de seguridad\r\n  const { data: auditEvents } = await supabase\r\n    .from('audit_events')\r\n    .select('*')\r\n    .gte('timestamp', filter.startDate)\r\n    .lte('timestamp', filter.endDate)\r\n    .order('timestamp', { ascending: false });\r\n\r\n  if (!auditEvents) {\r\n    throw new Error('Failed to fetch audit events');\r\n  }\r\n\r\n  // Filtrar eventos de seguridad\r\n  const securityEvents = auditEvents.filter(event => \r\n    event.category === 'security_violation' || \r\n    event.category === 'authentication' ||\r\n    event.severity === 'critical'\r\n  );\r\n\r\n  const criticalEvents = securityEvents.filter(event => event.severity === 'critical');\r\n  const blockedRequests = securityEvents.filter(event => event.result === 'blocked');\r\n  const authFailures = securityEvents.filter(event => \r\n    event.category === 'authentication' && event.result === 'failure'\r\n  );\r\n\r\n  // Agrupar por categor\xEDa\r\n  const eventsByCategory: Record<string, number> = {};\r\n  securityEvents.forEach(event => {\r\n    eventsByCategory[event.category] = (eventsByCategory[event.category] || 0) + 1;\r\n  });\r\n\r\n  // Agrupar por nivel\r\n  const eventsByLevel: Record<string, number> = {};\r\n  securityEvents.forEach(event => {\r\n    eventsByLevel[event.severity] = (eventsByLevel[event.severity] || 0) + 1;\r\n  });\r\n\r\n  // Determinar nivel de riesgo\r\n  let riskLevel = 'low';\r\n  if (criticalEvents.length > 10) {riskLevel = 'critical';}\r\n  else if (criticalEvents.length > 5) {riskLevel = 'high';}\r\n  else if (criticalEvents.length > 2) {riskLevel = 'medium';}\r\n\r\n  // Top amenazas (simulado basado en eventos reales)\r\n  const topThreats = [\r\n    { type: 'Invalid signature', count: blockedRequests.length, lastSeen: new Date().toISOString() },\r\n    { type: 'Authentication failure', count: authFailures.length, lastSeen: new Date().toISOString() },\r\n    { type: 'Rate limit violation', count: 2, lastSeen: new Date().toISOString() }\r\n  ].filter(threat => threat.count > 0);\r\n\r\n  return {\r\n    period: `${filter.startDate} to ${filter.endDate}`,\r\n    summary: {\r\n      totalEvents: securityEvents.length,\r\n      criticalEvents: criticalEvents.length,\r\n      blockedRequests: blockedRequests.length,\r\n      authFailures: authFailures.length,\r\n      riskLevel\r\n    },\r\n    eventsByCategory,\r\n    eventsByLevel,\r\n    topThreats,\r\n    complianceStatus: {\r\n      auditCoverage: 100,\r\n      retentionCompliance: 100,\r\n      encryptionStatus: 'HMAC-SHA256'\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Genera reporte de negocio\r\n */\r\nasync function generateBusinessReport(filter: ReportFilter): Promise<BusinessReport> {\r\n  const supabase = getSupabaseClient(true);\r\n  \r\n  if (!supabase) {\r\n    throw new Error('Supabase client not available');\r\n  }\r\n\r\n  // Obtener \xF3rdenes del per\xEDodo\r\n  const { data: orders } = await supabase\r\n    .from('orders')\r\n    .select('*')\r\n    .gte('created_at', filter.startDate)\r\n    .lte('created_at', filter.endDate);\r\n\r\n  if (!orders) {\r\n    throw new Error('Failed to fetch orders');\r\n  }\r\n\r\n  const completedOrders = orders.filter(order => order.status === 'completed');\r\n  const totalRevenue = completedOrders.reduce((sum, order) => sum + (order.total_amount || 0), 0);\r\n  const avgOrderValue = completedOrders.length > 0 ? totalRevenue / completedOrders.length : 0;\r\n\r\n  // M\xE9tricas simuladas (en producci\xF3n vendr\xEDan de analytics reales)\r\n  const conversionRate = 0.034; // 3.4%\r\n  const paymentSuccessRate = 0.978; // 97.8%\r\n\r\n  // Tendencias diarias\r\n  const trends = generateDailyBusinessTrends(completedOrders, filter);\r\n\r\n  // M\xE9todos de pago\r\n  const paymentMethods = {\r\n    mercadopago: {\r\n      count: completedOrders.length,\r\n      revenue: totalRevenue,\r\n      successRate: paymentSuccessRate\r\n    }\r\n  };\r\n\r\n  return {\r\n    period: `${filter.startDate} to ${filter.endDate}`,\r\n    metrics: {\r\n      totalRevenue,\r\n      totalOrders: completedOrders.length,\r\n      avgOrderValue,\r\n      conversionRate,\r\n      paymentSuccessRate\r\n    },\r\n    trends,\r\n    paymentMethods\r\n  };\r\n}\r\n\r\n/**\r\n * Genera reporte de compliance\r\n */\r\nasync function generateComplianceReport(filter: ReportFilter) {\r\n  return {\r\n    period: `${filter.startDate} to ${filter.endDate}`,\r\n    standards: {\r\n      'ISO/IEC 27001:2013': {\r\n        status: 'compliant',\r\n        coverage: 100,\r\n        lastAudit: new Date().toISOString()\r\n      },\r\n      'GDPR': {\r\n        status: 'compliant',\r\n        coverage: 100,\r\n        dataRetention: 'configured'\r\n      }\r\n    },\r\n    auditTrail: {\r\n      eventsLogged: 1000,\r\n      integrityChecks: 'passed',\r\n      encryption: 'HMAC-SHA256'\r\n    },\r\n    retentionPolicies: {\r\n      authentication: '365 days',\r\n      paymentProcessing: '2555 days',\r\n      securityViolation: '2555 days',\r\n      dataAccess: '1095 days'\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Genera reporte resumen\r\n */\r\nasync function generateSummaryReport(filter: ReportFilter) {\r\n  const [performance, security, business] = await Promise.all([\r\n    generatePerformanceReport(filter),\r\n    generateSecurityReport(filter),\r\n    generateBusinessReport(filter)\r\n  ]);\r\n\r\n  return {\r\n    period: `${filter.startDate} to ${filter.endDate}`,\r\n    overview: {\r\n      systemHealth: 'healthy',\r\n      securityRisk: security.summary.riskLevel,\r\n      businessPerformance: 'good'\r\n    },\r\n    keyMetrics: {\r\n      avgResponseTime: performance.metrics.avgResponseTime,\r\n      errorRate: performance.metrics.errorRate,\r\n      securityEvents: security.summary.totalEvents,\r\n      totalRevenue: business.metrics.totalRevenue,\r\n      totalOrders: business.metrics.totalOrders\r\n    },\r\n    alerts: {\r\n      active: 2,\r\n      resolved: 15,\r\n      escalated: 0\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Funciones auxiliares\r\n */\r\nfunction generateHourlyTrends(metrics: any[]) {\r\n  // Agrupar m\xE9tricas por hora y calcular promedios\r\n  const hourlyData: Record<string, any> = {};\r\n  \r\n  metrics.forEach(metric => {\r\n    const hour = new Date(metric.timestamp).toISOString().substring(0, 13) + ':00:00.000Z';\r\n    if (!hourlyData[hour]) {\r\n      hourlyData[hour] = { responseTime: [], errorRate: [], throughput: [] };\r\n    }\r\n    \r\n    if (metric.name === 'performance.api.duration') {\r\n      hourlyData[hour].responseTime.push(metric.value);\r\n    } else if (metric.name === 'performance.api.error_rate') {\r\n      hourlyData[hour].errorRate.push(metric.value);\r\n    } else if (metric.name === 'performance.api.throughput') {\r\n      hourlyData[hour].throughput.push(metric.value);\r\n    }\r\n  });\r\n\r\n  return Object.entries(hourlyData).map(([timestamp, data]) => ({\r\n    timestamp,\r\n    responseTime: data.responseTime.length > 0 ? data.responseTime.reduce((a: number, b: number) => a + b, 0) / data.responseTime.length : 0,\r\n    errorRate: data.errorRate.length > 0 ? data.errorRate.reduce((a: number, b: number) => a + b, 0) / data.errorRate.length : 0,\r\n    throughput: data.throughput.length > 0 ? data.throughput.reduce((a: number, b: number) => a + b, 0) / data.throughput.length : 0\r\n  }));\r\n}\r\n\r\nfunction generateDailyBusinessTrends(orders: any[], filter: ReportFilter) {\r\n  const dailyData: Record<string, { revenue: number; orders: number }> = {};\r\n  \r\n  orders.forEach(order => {\r\n    const date = new Date(order.created_at).toISOString().substring(0, 10);\r\n    if (!dailyData[date]) {\r\n      dailyData[date] = { revenue: 0, orders: 0 };\r\n    }\r\n    dailyData[date].revenue += order.total_amount || 0;\r\n    dailyData[date].orders += 1;\r\n  });\r\n\r\n  return Object.entries(dailyData).map(([date, data]) => ({\r\n    date,\r\n    revenue: data.revenue,\r\n    orders: data.orders,\r\n    conversionRate: 0.034 // Simulado\r\n  }));\r\n}\r\n\r\nfunction generateCSVResponse(data: Record<string, unknown> | unknown[], reportType: string) {\r\n  // Implementaci\xF3n b\xE1sica de CSV\r\n  const csv = `Report Type,${reportType}\\nGenerated At,${new Date().toISOString()}\\n\\n${JSON.stringify(data)}`;\r\n  \r\n  return new NextResponse(csv, {\r\n    headers: {\r\n      'Content-Type': 'text/csv',\r\n      'Content-Disposition': `attachment; filename=\"${reportType}_report_${new Date().toISOString().substring(0, 10)}.csv\"`\r\n    }\r\n  });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "runtime", "request", "authResult", "getAuthenticatedAdmin", "isAdmin", "userId", "NextResponse", "json", "success", "error", "status", "searchParams", "nextUrl", "reportType", "get", "startDate", "Date", "now", "toISOString", "endDate", "format", "filter", "services", "split", "levels", "categories", "limit", "parseInt", "reportData", "generatePerformanceReport", "generateSecurityReport", "generateBusinessReport", "generateComplianceReport", "generateSummaryReport", "logger", "info", "LogLevel", "INFO", "period", "LogCategory", "SYSTEM", "generateCSVResponse", "data", "generatedAt", "report", "ERROR", "Error", "message", "supabase", "getSupabaseClient", "metrics", "from", "select", "in", "gte", "lte", "order", "ascending", "responseTimeMetrics", "m", "name", "errorRateMetrics", "throughputMetrics", "uptimeMetrics", "avgResponseTime", "length", "reduce", "sum", "value", "maxResponseTime", "Math", "max", "map", "minResponseTime", "min", "avgErrorRate", "avgThroughput", "avgUptime", "trends", "generateHourlyTrends", "topErrors", "count", "percentage", "errorRate", "throughput", "uptime", "auditEvents", "securityEvents", "event", "category", "severity", "criticalEvents", "blockedRequests", "result", "authFailures", "eventsByCategory", "forEach", "eventsByLevel", "riskLevel", "topThreats", "type", "lastSeen", "threat", "summary", "totalEvents", "complianceStatus", "auditCoverage", "retentionCompliance", "encryptionStatus", "orders", "completedOrders", "totalRevenue", "total_amount", "avgOrderValue", "conversionRate", "paymentSuccessRate", "generateDailyBusinessTrends", "paymentMethods", "mercadopago", "revenue", "successRate", "totalOrders", "standards", "coverage", "lastAudit", "dataRetention", "auditTrail", "eventsLogged", "integrityChecks", "encryption", "retentionPolicies", "authentication", "paymentProcessing", "securityViolation", "dataAccess", "performance", "security", "business", "Promise", "all", "overview", "systemHealth", "securityRisk", "businessPerformance", "keyMetrics", "alerts", "active", "resolved", "escalated", "hourlyData", "metric", "hour", "timestamp", "substring", "responseTime", "push", "Object", "entries", "a", "b", "dailyData", "date", "created_at", "csv", "JSON", "stringify", "headers"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "64e0b996f9d377db6eff7a92c1ff2e61e6e672ae"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_33kfsre5m = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_33kfsre5m();
cov_33kfsre5m().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_33kfsre5m().f[0]++;
  cov_33kfsre5m().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_33kfsre5m().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_33kfsre5m().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_33kfsre5m().f[1]++;
    cov_33kfsre5m().s[4]++;
    return GET;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_33kfsre5m().f[2]++;
    cov_33kfsre5m().s[5]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_33kfsre5m().s[6]++, require("next/server"));
const _adminauth =
/* istanbul ignore next */
(cov_33kfsre5m().s[7]++, require("../../../../../lib/auth/admin-auth"));
const _supabase =
/* istanbul ignore next */
(cov_33kfsre5m().s[8]++, require("../../../../../lib/integrations/supabase"));
const _logger =
/* istanbul ignore next */
(cov_33kfsre5m().s[9]++, require("../../../../../lib/enterprise/logger"));
const runtime =
/* istanbul ignore next */
(cov_33kfsre5m().s[10]++, 'nodejs');
async function GET(request) {
  /* istanbul ignore next */
  cov_33kfsre5m().f[3]++;
  cov_33kfsre5m().s[11]++;
  try {
    // Verificar autenticaciÃ³n de admin
    const authResult =
    /* istanbul ignore next */
    (cov_33kfsre5m().s[12]++, await (0, _adminauth.getAuthenticatedAdmin)(request));
    /* istanbul ignore next */
    cov_33kfsre5m().s[13]++;
    if (
    /* istanbul ignore next */
    (cov_33kfsre5m().b[1][0]++, !authResult.isAdmin) ||
    /* istanbul ignore next */
    (cov_33kfsre5m().b[1][1]++, !authResult.userId)) {
      /* istanbul ignore next */
      cov_33kfsre5m().b[0][0]++;
      cov_33kfsre5m().s[14]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Acceso no autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_33kfsre5m().b[0][1]++;
    }
    const searchParams =
    /* istanbul ignore next */
    (cov_33kfsre5m().s[15]++, request.nextUrl.searchParams);
    const reportType =
    /* istanbul ignore next */
    (cov_33kfsre5m().s[16]++,
    /* istanbul ignore next */
    (cov_33kfsre5m().b[2][0]++, searchParams.get('type')) ||
    /* istanbul ignore next */
    (cov_33kfsre5m().b[2][1]++, 'performance'));
    const startDate =
    /* istanbul ignore next */
    (cov_33kfsre5m().s[17]++,
    /* istanbul ignore next */
    (cov_33kfsre5m().b[3][0]++, searchParams.get('startDate')) ||
    /* istanbul ignore next */
    (cov_33kfsre5m().b[3][1]++, new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString()));
    const endDate =
    /* istanbul ignore next */
    (cov_33kfsre5m().s[18]++,
    /* istanbul ignore next */
    (cov_33kfsre5m().b[4][0]++, searchParams.get('endDate')) ||
    /* istanbul ignore next */
    (cov_33kfsre5m().b[4][1]++, new Date().toISOString()));
    const format =
    /* istanbul ignore next */
    (cov_33kfsre5m().s[19]++,
    /* istanbul ignore next */
    (cov_33kfsre5m().b[5][0]++, searchParams.get('format')) ||
    /* istanbul ignore next */
    (cov_33kfsre5m().b[5][1]++, 'json'));
    const filter =
    /* istanbul ignore next */
    (cov_33kfsre5m().s[20]++, {
      startDate,
      endDate,
      services: searchParams.get('services')?.split(','),
      levels: searchParams.get('levels')?.split(','),
      categories: searchParams.get('categories')?.split(','),
      limit: parseInt(
      /* istanbul ignore next */
      (cov_33kfsre5m().b[6][0]++, searchParams.get('limit')) ||
      /* istanbul ignore next */
      (cov_33kfsre5m().b[6][1]++, '1000'))
    });
    let reportData;
    /* istanbul ignore next */
    cov_33kfsre5m().s[21]++;
    switch (reportType) {
      case 'performance':
        /* istanbul ignore next */
        cov_33kfsre5m().b[7][0]++;
        cov_33kfsre5m().s[22]++;
        reportData = await generatePerformanceReport(filter);
        /* istanbul ignore next */
        cov_33kfsre5m().s[23]++;
        break;
      case 'security':
        /* istanbul ignore next */
        cov_33kfsre5m().b[7][1]++;
        cov_33kfsre5m().s[24]++;
        reportData = await generateSecurityReport(filter);
        /* istanbul ignore next */
        cov_33kfsre5m().s[25]++;
        break;
      case 'business':
        /* istanbul ignore next */
        cov_33kfsre5m().b[7][2]++;
        cov_33kfsre5m().s[26]++;
        reportData = await generateBusinessReport(filter);
        /* istanbul ignore next */
        cov_33kfsre5m().s[27]++;
        break;
      case 'compliance':
        /* istanbul ignore next */
        cov_33kfsre5m().b[7][3]++;
        cov_33kfsre5m().s[28]++;
        reportData = await generateComplianceReport(filter);
        /* istanbul ignore next */
        cov_33kfsre5m().s[29]++;
        break;
      case 'summary':
        /* istanbul ignore next */
        cov_33kfsre5m().b[7][4]++;
        cov_33kfsre5m().s[30]++;
        reportData = await generateSummaryReport(filter);
        /* istanbul ignore next */
        cov_33kfsre5m().s[31]++;
        break;
      default:
        /* istanbul ignore next */
        cov_33kfsre5m().b[7][5]++;
        cov_33kfsre5m().s[32]++;
        return _server.NextResponse.json({
          success: false,
          error: 'Tipo de reporte no vÃ¡lido'
        }, {
          status: 400
        });
    }
    /* istanbul ignore next */
    cov_33kfsre5m().s[33]++;
    _logger.logger.info(_logger.LogLevel.INFO, `Monitoring report generated: ${reportType}`, {
      userId: authResult.userId,
      reportType,
      period: `${startDate} to ${endDate}`,
      format
    }, _logger.LogCategory.SYSTEM);
    // Retornar en formato solicitado
    /* istanbul ignore next */
    cov_33kfsre5m().s[34]++;
    if (format === 'csv') {
      /* istanbul ignore next */
      cov_33kfsre5m().b[8][0]++;
      cov_33kfsre5m().s[35]++;
      return generateCSVResponse(reportData, reportType);
    } else
    /* istanbul ignore next */
    {
      cov_33kfsre5m().b[8][1]++;
    }
    cov_33kfsre5m().s[36]++;
    return _server.NextResponse.json({
      success: true,
      data: {
        reportType,
        period: {
          startDate,
          endDate
        },
        generatedAt: new Date().toISOString(),
        report: reportData
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_33kfsre5m().s[37]++;
    _logger.logger.error(_logger.LogLevel.ERROR, 'Failed to generate monitoring report', {
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_33kfsre5m().b[9][0]++, error.message) :
      /* istanbul ignore next */
      (cov_33kfsre5m().b[9][1]++, 'Unknown error')
    }, _logger.LogCategory.SYSTEM);
    /* istanbul ignore next */
    cov_33kfsre5m().s[38]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
/**
 * Genera reporte de performance
 */
async function generatePerformanceReport(filter) {
  /* istanbul ignore next */
  cov_33kfsre5m().f[4]++;
  const supabase =
  /* istanbul ignore next */
  (cov_33kfsre5m().s[39]++, (0, _supabase.getSupabaseClient)(true));
  /* istanbul ignore next */
  cov_33kfsre5m().s[40]++;
  if (!supabase) {
    /* istanbul ignore next */
    cov_33kfsre5m().b[10][0]++;
    cov_33kfsre5m().s[41]++;
    throw new Error('Supabase client not available');
  } else
  /* istanbul ignore next */
  {
    cov_33kfsre5m().b[10][1]++;
  }
  // Obtener mÃ©tricas de performance
  const {
    data: metrics
  } =
  /* istanbul ignore next */
  (cov_33kfsre5m().s[42]++, await supabase.from('enterprise_metrics').select('*').in('name', ['performance.api.duration', 'performance.api.error_rate', 'performance.api.throughput', 'performance.system.uptime']).gte('timestamp', filter.startDate).lte('timestamp', filter.endDate).order('timestamp', {
    ascending: true
  }));
  /* istanbul ignore next */
  cov_33kfsre5m().s[43]++;
  if (!metrics) {
    /* istanbul ignore next */
    cov_33kfsre5m().b[11][0]++;
    cov_33kfsre5m().s[44]++;
    throw new Error('Failed to fetch performance metrics');
  } else
  /* istanbul ignore next */
  {
    cov_33kfsre5m().b[11][1]++;
  }
  // Calcular mÃ©tricas agregadas
  const responseTimeMetrics =
  /* istanbul ignore next */
  (cov_33kfsre5m().s[45]++, metrics.filter(m => {
    /* istanbul ignore next */
    cov_33kfsre5m().f[5]++;
    cov_33kfsre5m().s[46]++;
    return m.name === 'performance.api.duration';
  }));
  const errorRateMetrics =
  /* istanbul ignore next */
  (cov_33kfsre5m().s[47]++, metrics.filter(m => {
    /* istanbul ignore next */
    cov_33kfsre5m().f[6]++;
    cov_33kfsre5m().s[48]++;
    return m.name === 'performance.api.error_rate';
  }));
  const throughputMetrics =
  /* istanbul ignore next */
  (cov_33kfsre5m().s[49]++, metrics.filter(m => {
    /* istanbul ignore next */
    cov_33kfsre5m().f[7]++;
    cov_33kfsre5m().s[50]++;
    return m.name === 'performance.api.throughput';
  }));
  const uptimeMetrics =
  /* istanbul ignore next */
  (cov_33kfsre5m().s[51]++, metrics.filter(m => {
    /* istanbul ignore next */
    cov_33kfsre5m().f[8]++;
    cov_33kfsre5m().s[52]++;
    return m.name === 'performance.system.uptime';
  }));
  const avgResponseTime =
  /* istanbul ignore next */
  (cov_33kfsre5m().s[53]++, responseTimeMetrics.length > 0 ?
  /* istanbul ignore next */
  (cov_33kfsre5m().b[12][0]++, responseTimeMetrics.reduce((sum, m) => {
    /* istanbul ignore next */
    cov_33kfsre5m().f[9]++;
    cov_33kfsre5m().s[54]++;
    return sum + m.value;
  }, 0) / responseTimeMetrics.length) :
  /* istanbul ignore next */
  (cov_33kfsre5m().b[12][1]++, 0));
  const maxResponseTime =
  /* istanbul ignore next */
  (cov_33kfsre5m().s[55]++, responseTimeMetrics.length > 0 ?
  /* istanbul ignore next */
  (cov_33kfsre5m().b[13][0]++, Math.max(...responseTimeMetrics.map(m => {
    /* istanbul ignore next */
    cov_33kfsre5m().f[10]++;
    cov_33kfsre5m().s[56]++;
    return m.value;
  }))) :
  /* istanbul ignore next */
  (cov_33kfsre5m().b[13][1]++, 0));
  const minResponseTime =
  /* istanbul ignore next */
  (cov_33kfsre5m().s[57]++, responseTimeMetrics.length > 0 ?
  /* istanbul ignore next */
  (cov_33kfsre5m().b[14][0]++, Math.min(...responseTimeMetrics.map(m => {
    /* istanbul ignore next */
    cov_33kfsre5m().f[11]++;
    cov_33kfsre5m().s[58]++;
    return m.value;
  }))) :
  /* istanbul ignore next */
  (cov_33kfsre5m().b[14][1]++, 0));
  const avgErrorRate =
  /* istanbul ignore next */
  (cov_33kfsre5m().s[59]++, errorRateMetrics.length > 0 ?
  /* istanbul ignore next */
  (cov_33kfsre5m().b[15][0]++, errorRateMetrics.reduce((sum, m) => {
    /* istanbul ignore next */
    cov_33kfsre5m().f[12]++;
    cov_33kfsre5m().s[60]++;
    return sum + m.value;
  }, 0) / errorRateMetrics.length) :
  /* istanbul ignore next */
  (cov_33kfsre5m().b[15][1]++, 0));
  const avgThroughput =
  /* istanbul ignore next */
  (cov_33kfsre5m().s[61]++, throughputMetrics.length > 0 ?
  /* istanbul ignore next */
  (cov_33kfsre5m().b[16][0]++, throughputMetrics.reduce((sum, m) => {
    /* istanbul ignore next */
    cov_33kfsre5m().f[13]++;
    cov_33kfsre5m().s[62]++;
    return sum + m.value;
  }, 0) / throughputMetrics.length) :
  /* istanbul ignore next */
  (cov_33kfsre5m().b[16][1]++, 0));
  const avgUptime =
  /* istanbul ignore next */
  (cov_33kfsre5m().s[63]++, uptimeMetrics.length > 0 ?
  /* istanbul ignore next */
  (cov_33kfsre5m().b[17][0]++, uptimeMetrics.reduce((sum, m) => {
    /* istanbul ignore next */
    cov_33kfsre5m().f[14]++;
    cov_33kfsre5m().s[64]++;
    return sum + m.value;
  }, 0) / uptimeMetrics.length) :
  /* istanbul ignore next */
  (cov_33kfsre5m().b[17][1]++, 0.99));
  // Generar tendencias (agrupadas por hora)
  const trends =
  /* istanbul ignore next */
  (cov_33kfsre5m().s[65]++, generateHourlyTrends(metrics));
  // Obtener top errores (simulado)
  const topErrors =
  /* istanbul ignore next */
  (cov_33kfsre5m().s[66]++, [{
    error: 'Database timeout',
    count: 5,
    percentage: 45.5
  }, {
    error: 'MercadoPago API error',
    count: 3,
    percentage: 27.3
  }, {
    error: 'Cache miss',
    count: 2,
    percentage: 18.2
  }, {
    error: 'Rate limit exceeded',
    count: 1,
    percentage: 9.1
  }]);
  /* istanbul ignore next */
  cov_33kfsre5m().s[67]++;
  return {
    period: `${filter.startDate} to ${filter.endDate}`,
    metrics: {
      avgResponseTime,
      maxResponseTime,
      minResponseTime,
      errorRate: avgErrorRate,
      throughput: avgThroughput,
      uptime: avgUptime
    },
    trends,
    topErrors
  };
}
/**
 * Genera reporte de seguridad
 */
async function generateSecurityReport(filter) {
  /* istanbul ignore next */
  cov_33kfsre5m().f[15]++;
  const supabase =
  /* istanbul ignore next */
  (cov_33kfsre5m().s[68]++, (0, _supabase.getSupabaseClient)(true));
  /* istanbul ignore next */
  cov_33kfsre5m().s[69]++;
  if (!supabase) {
    /* istanbul ignore next */
    cov_33kfsre5m().b[18][0]++;
    cov_33kfsre5m().s[70]++;
    throw new Error('Supabase client not available');
  } else
  /* istanbul ignore next */
  {
    cov_33kfsre5m().b[18][1]++;
  }
  // Obtener eventos de auditorÃ­a de seguridad
  const {
    data: auditEvents
  } =
  /* istanbul ignore next */
  (cov_33kfsre5m().s[71]++, await supabase.from('audit_events').select('*').gte('timestamp', filter.startDate).lte('timestamp', filter.endDate).order('timestamp', {
    ascending: false
  }));
  /* istanbul ignore next */
  cov_33kfsre5m().s[72]++;
  if (!auditEvents) {
    /* istanbul ignore next */
    cov_33kfsre5m().b[19][0]++;
    cov_33kfsre5m().s[73]++;
    throw new Error('Failed to fetch audit events');
  } else
  /* istanbul ignore next */
  {
    cov_33kfsre5m().b[19][1]++;
  }
  // Filtrar eventos de seguridad
  const securityEvents =
  /* istanbul ignore next */
  (cov_33kfsre5m().s[74]++, auditEvents.filter(event => {
    /* istanbul ignore next */
    cov_33kfsre5m().f[16]++;
    cov_33kfsre5m().s[75]++;
    return /* istanbul ignore next */(cov_33kfsre5m().b[20][0]++, event.category === 'security_violation') ||
    /* istanbul ignore next */
    (cov_33kfsre5m().b[20][1]++, event.category === 'authentication') ||
    /* istanbul ignore next */
    (cov_33kfsre5m().b[20][2]++, event.severity === 'critical');
  }));
  const criticalEvents =
  /* istanbul ignore next */
  (cov_33kfsre5m().s[76]++, securityEvents.filter(event => {
    /* istanbul ignore next */
    cov_33kfsre5m().f[17]++;
    cov_33kfsre5m().s[77]++;
    return event.severity === 'critical';
  }));
  const blockedRequests =
  /* istanbul ignore next */
  (cov_33kfsre5m().s[78]++, securityEvents.filter(event => {
    /* istanbul ignore next */
    cov_33kfsre5m().f[18]++;
    cov_33kfsre5m().s[79]++;
    return event.result === 'blocked';
  }));
  const authFailures =
  /* istanbul ignore next */
  (cov_33kfsre5m().s[80]++, securityEvents.filter(event => {
    /* istanbul ignore next */
    cov_33kfsre5m().f[19]++;
    cov_33kfsre5m().s[81]++;
    return /* istanbul ignore next */(cov_33kfsre5m().b[21][0]++, event.category === 'authentication') &&
    /* istanbul ignore next */
    (cov_33kfsre5m().b[21][1]++, event.result === 'failure');
  }));
  // Agrupar por categorÃ­a
  const eventsByCategory =
  /* istanbul ignore next */
  (cov_33kfsre5m().s[82]++, {});
  /* istanbul ignore next */
  cov_33kfsre5m().s[83]++;
  securityEvents.forEach(event => {
    /* istanbul ignore next */
    cov_33kfsre5m().f[20]++;
    cov_33kfsre5m().s[84]++;
    eventsByCategory[event.category] = (
    /* istanbul ignore next */
    (cov_33kfsre5m().b[22][0]++, eventsByCategory[event.category]) ||
    /* istanbul ignore next */
    (cov_33kfsre5m().b[22][1]++, 0)) + 1;
  });
  // Agrupar por nivel
  const eventsByLevel =
  /* istanbul ignore next */
  (cov_33kfsre5m().s[85]++, {});
  /* istanbul ignore next */
  cov_33kfsre5m().s[86]++;
  securityEvents.forEach(event => {
    /* istanbul ignore next */
    cov_33kfsre5m().f[21]++;
    cov_33kfsre5m().s[87]++;
    eventsByLevel[event.severity] = (
    /* istanbul ignore next */
    (cov_33kfsre5m().b[23][0]++, eventsByLevel[event.severity]) ||
    /* istanbul ignore next */
    (cov_33kfsre5m().b[23][1]++, 0)) + 1;
  });
  // Determinar nivel de riesgo
  let riskLevel =
  /* istanbul ignore next */
  (cov_33kfsre5m().s[88]++, 'low');
  /* istanbul ignore next */
  cov_33kfsre5m().s[89]++;
  if (criticalEvents.length > 10) {
    /* istanbul ignore next */
    cov_33kfsre5m().b[24][0]++;
    cov_33kfsre5m().s[90]++;
    riskLevel = 'critical';
  } else {
    /* istanbul ignore next */
    cov_33kfsre5m().b[24][1]++;
    cov_33kfsre5m().s[91]++;
    if (criticalEvents.length > 5) {
      /* istanbul ignore next */
      cov_33kfsre5m().b[25][0]++;
      cov_33kfsre5m().s[92]++;
      riskLevel = 'high';
    } else {
      /* istanbul ignore next */
      cov_33kfsre5m().b[25][1]++;
      cov_33kfsre5m().s[93]++;
      if (criticalEvents.length > 2) {
        /* istanbul ignore next */
        cov_33kfsre5m().b[26][0]++;
        cov_33kfsre5m().s[94]++;
        riskLevel = 'medium';
      } else
      /* istanbul ignore next */
      {
        cov_33kfsre5m().b[26][1]++;
      }
    }
  }
  // Top amenazas (simulado basado en eventos reales)
  const topThreats =
  /* istanbul ignore next */
  (cov_33kfsre5m().s[95]++, [{
    type: 'Invalid signature',
    count: blockedRequests.length,
    lastSeen: new Date().toISOString()
  }, {
    type: 'Authentication failure',
    count: authFailures.length,
    lastSeen: new Date().toISOString()
  }, {
    type: 'Rate limit violation',
    count: 2,
    lastSeen: new Date().toISOString()
  }].filter(threat => {
    /* istanbul ignore next */
    cov_33kfsre5m().f[22]++;
    cov_33kfsre5m().s[96]++;
    return threat.count > 0;
  }));
  /* istanbul ignore next */
  cov_33kfsre5m().s[97]++;
  return {
    period: `${filter.startDate} to ${filter.endDate}`,
    summary: {
      totalEvents: securityEvents.length,
      criticalEvents: criticalEvents.length,
      blockedRequests: blockedRequests.length,
      authFailures: authFailures.length,
      riskLevel
    },
    eventsByCategory,
    eventsByLevel,
    topThreats,
    complianceStatus: {
      auditCoverage: 100,
      retentionCompliance: 100,
      encryptionStatus: 'HMAC-SHA256'
    }
  };
}
/**
 * Genera reporte de negocio
 */
async function generateBusinessReport(filter) {
  /* istanbul ignore next */
  cov_33kfsre5m().f[23]++;
  const supabase =
  /* istanbul ignore next */
  (cov_33kfsre5m().s[98]++, (0, _supabase.getSupabaseClient)(true));
  /* istanbul ignore next */
  cov_33kfsre5m().s[99]++;
  if (!supabase) {
    /* istanbul ignore next */
    cov_33kfsre5m().b[27][0]++;
    cov_33kfsre5m().s[100]++;
    throw new Error('Supabase client not available');
  } else
  /* istanbul ignore next */
  {
    cov_33kfsre5m().b[27][1]++;
  }
  // Obtener Ã³rdenes del perÃ­odo
  const {
    data: orders
  } =
  /* istanbul ignore next */
  (cov_33kfsre5m().s[101]++, await supabase.from('orders').select('*').gte('created_at', filter.startDate).lte('created_at', filter.endDate));
  /* istanbul ignore next */
  cov_33kfsre5m().s[102]++;
  if (!orders) {
    /* istanbul ignore next */
    cov_33kfsre5m().b[28][0]++;
    cov_33kfsre5m().s[103]++;
    throw new Error('Failed to fetch orders');
  } else
  /* istanbul ignore next */
  {
    cov_33kfsre5m().b[28][1]++;
  }
  const completedOrders =
  /* istanbul ignore next */
  (cov_33kfsre5m().s[104]++, orders.filter(order => {
    /* istanbul ignore next */
    cov_33kfsre5m().f[24]++;
    cov_33kfsre5m().s[105]++;
    return order.status === 'completed';
  }));
  const totalRevenue =
  /* istanbul ignore next */
  (cov_33kfsre5m().s[106]++, completedOrders.reduce((sum, order) => {
    /* istanbul ignore next */
    cov_33kfsre5m().f[25]++;
    cov_33kfsre5m().s[107]++;
    return sum + (
    /* istanbul ignore next */
    (cov_33kfsre5m().b[29][0]++, order.total_amount) ||
    /* istanbul ignore next */
    (cov_33kfsre5m().b[29][1]++, 0));
  }, 0));
  const avgOrderValue =
  /* istanbul ignore next */
  (cov_33kfsre5m().s[108]++, completedOrders.length > 0 ?
  /* istanbul ignore next */
  (cov_33kfsre5m().b[30][0]++, totalRevenue / completedOrders.length) :
  /* istanbul ignore next */
  (cov_33kfsre5m().b[30][1]++, 0));
  // MÃ©tricas simuladas (en producciÃ³n vendrÃ­an de analytics reales)
  const conversionRate =
  /* istanbul ignore next */
  (cov_33kfsre5m().s[109]++, 0.034); // 3.4%
  const paymentSuccessRate =
  /* istanbul ignore next */
  (cov_33kfsre5m().s[110]++, 0.978); // 97.8%
  // Tendencias diarias
  const trends =
  /* istanbul ignore next */
  (cov_33kfsre5m().s[111]++, generateDailyBusinessTrends(completedOrders, filter));
  // MÃ©todos de pago
  const paymentMethods =
  /* istanbul ignore next */
  (cov_33kfsre5m().s[112]++, {
    mercadopago: {
      count: completedOrders.length,
      revenue: totalRevenue,
      successRate: paymentSuccessRate
    }
  });
  /* istanbul ignore next */
  cov_33kfsre5m().s[113]++;
  return {
    period: `${filter.startDate} to ${filter.endDate}`,
    metrics: {
      totalRevenue,
      totalOrders: completedOrders.length,
      avgOrderValue,
      conversionRate,
      paymentSuccessRate
    },
    trends,
    paymentMethods
  };
}
/**
 * Genera reporte de compliance
 */
async function generateComplianceReport(filter) {
  /* istanbul ignore next */
  cov_33kfsre5m().f[26]++;
  cov_33kfsre5m().s[114]++;
  return {
    period: `${filter.startDate} to ${filter.endDate}`,
    standards: {
      'ISO/IEC 27001:2013': {
        status: 'compliant',
        coverage: 100,
        lastAudit: new Date().toISOString()
      },
      'GDPR': {
        status: 'compliant',
        coverage: 100,
        dataRetention: 'configured'
      }
    },
    auditTrail: {
      eventsLogged: 1000,
      integrityChecks: 'passed',
      encryption: 'HMAC-SHA256'
    },
    retentionPolicies: {
      authentication: '365 days',
      paymentProcessing: '2555 days',
      securityViolation: '2555 days',
      dataAccess: '1095 days'
    }
  };
}
/**
 * Genera reporte resumen
 */
async function generateSummaryReport(filter) {
  /* istanbul ignore next */
  cov_33kfsre5m().f[27]++;
  const [performance, security, business] =
  /* istanbul ignore next */
  (cov_33kfsre5m().s[115]++, await Promise.all([generatePerformanceReport(filter), generateSecurityReport(filter), generateBusinessReport(filter)]));
  /* istanbul ignore next */
  cov_33kfsre5m().s[116]++;
  return {
    period: `${filter.startDate} to ${filter.endDate}`,
    overview: {
      systemHealth: 'healthy',
      securityRisk: security.summary.riskLevel,
      businessPerformance: 'good'
    },
    keyMetrics: {
      avgResponseTime: performance.metrics.avgResponseTime,
      errorRate: performance.metrics.errorRate,
      securityEvents: security.summary.totalEvents,
      totalRevenue: business.metrics.totalRevenue,
      totalOrders: business.metrics.totalOrders
    },
    alerts: {
      active: 2,
      resolved: 15,
      escalated: 0
    }
  };
}
/**
 * Funciones auxiliares
 */
function generateHourlyTrends(metrics) {
  /* istanbul ignore next */
  cov_33kfsre5m().f[28]++;
  // Agrupar mÃ©tricas por hora y calcular promedios
  const hourlyData =
  /* istanbul ignore next */
  (cov_33kfsre5m().s[117]++, {});
  /* istanbul ignore next */
  cov_33kfsre5m().s[118]++;
  metrics.forEach(metric => {
    /* istanbul ignore next */
    cov_33kfsre5m().f[29]++;
    const hour =
    /* istanbul ignore next */
    (cov_33kfsre5m().s[119]++, new Date(metric.timestamp).toISOString().substring(0, 13) + ':00:00.000Z');
    /* istanbul ignore next */
    cov_33kfsre5m().s[120]++;
    if (!hourlyData[hour]) {
      /* istanbul ignore next */
      cov_33kfsre5m().b[31][0]++;
      cov_33kfsre5m().s[121]++;
      hourlyData[hour] = {
        responseTime: [],
        errorRate: [],
        throughput: []
      };
    } else
    /* istanbul ignore next */
    {
      cov_33kfsre5m().b[31][1]++;
    }
    cov_33kfsre5m().s[122]++;
    if (metric.name === 'performance.api.duration') {
      /* istanbul ignore next */
      cov_33kfsre5m().b[32][0]++;
      cov_33kfsre5m().s[123]++;
      hourlyData[hour].responseTime.push(metric.value);
    } else {
      /* istanbul ignore next */
      cov_33kfsre5m().b[32][1]++;
      cov_33kfsre5m().s[124]++;
      if (metric.name === 'performance.api.error_rate') {
        /* istanbul ignore next */
        cov_33kfsre5m().b[33][0]++;
        cov_33kfsre5m().s[125]++;
        hourlyData[hour].errorRate.push(metric.value);
      } else {
        /* istanbul ignore next */
        cov_33kfsre5m().b[33][1]++;
        cov_33kfsre5m().s[126]++;
        if (metric.name === 'performance.api.throughput') {
          /* istanbul ignore next */
          cov_33kfsre5m().b[34][0]++;
          cov_33kfsre5m().s[127]++;
          hourlyData[hour].throughput.push(metric.value);
        } else
        /* istanbul ignore next */
        {
          cov_33kfsre5m().b[34][1]++;
        }
      }
    }
  });
  /* istanbul ignore next */
  cov_33kfsre5m().s[128]++;
  return Object.entries(hourlyData).map(([timestamp, data]) => {
    /* istanbul ignore next */
    cov_33kfsre5m().f[30]++;
    cov_33kfsre5m().s[129]++;
    return {
      timestamp,
      responseTime: data.responseTime.length > 0 ?
      /* istanbul ignore next */
      (cov_33kfsre5m().b[35][0]++, data.responseTime.reduce((a, b) => {
        /* istanbul ignore next */
        cov_33kfsre5m().f[31]++;
        cov_33kfsre5m().s[130]++;
        return a + b;
      }, 0) / data.responseTime.length) :
      /* istanbul ignore next */
      (cov_33kfsre5m().b[35][1]++, 0),
      errorRate: data.errorRate.length > 0 ?
      /* istanbul ignore next */
      (cov_33kfsre5m().b[36][0]++, data.errorRate.reduce((a, b) => {
        /* istanbul ignore next */
        cov_33kfsre5m().f[32]++;
        cov_33kfsre5m().s[131]++;
        return a + b;
      }, 0) / data.errorRate.length) :
      /* istanbul ignore next */
      (cov_33kfsre5m().b[36][1]++, 0),
      throughput: data.throughput.length > 0 ?
      /* istanbul ignore next */
      (cov_33kfsre5m().b[37][0]++, data.throughput.reduce((a, b) => {
        /* istanbul ignore next */
        cov_33kfsre5m().f[33]++;
        cov_33kfsre5m().s[132]++;
        return a + b;
      }, 0) / data.throughput.length) :
      /* istanbul ignore next */
      (cov_33kfsre5m().b[37][1]++, 0)
    };
  });
}
function generateDailyBusinessTrends(orders, filter) {
  /* istanbul ignore next */
  cov_33kfsre5m().f[34]++;
  const dailyData =
  /* istanbul ignore next */
  (cov_33kfsre5m().s[133]++, {});
  /* istanbul ignore next */
  cov_33kfsre5m().s[134]++;
  orders.forEach(order => {
    /* istanbul ignore next */
    cov_33kfsre5m().f[35]++;
    const date =
    /* istanbul ignore next */
    (cov_33kfsre5m().s[135]++, new Date(order.created_at).toISOString().substring(0, 10));
    /* istanbul ignore next */
    cov_33kfsre5m().s[136]++;
    if (!dailyData[date]) {
      /* istanbul ignore next */
      cov_33kfsre5m().b[38][0]++;
      cov_33kfsre5m().s[137]++;
      dailyData[date] = {
        revenue: 0,
        orders: 0
      };
    } else
    /* istanbul ignore next */
    {
      cov_33kfsre5m().b[38][1]++;
    }
    cov_33kfsre5m().s[138]++;
    dailyData[date].revenue +=
    /* istanbul ignore next */
    (cov_33kfsre5m().b[39][0]++, order.total_amount) ||
    /* istanbul ignore next */
    (cov_33kfsre5m().b[39][1]++, 0);
    /* istanbul ignore next */
    cov_33kfsre5m().s[139]++;
    dailyData[date].orders += 1;
  });
  /* istanbul ignore next */
  cov_33kfsre5m().s[140]++;
  return Object.entries(dailyData).map(([date, data]) => {
    /* istanbul ignore next */
    cov_33kfsre5m().f[36]++;
    cov_33kfsre5m().s[141]++;
    return {
      date,
      revenue: data.revenue,
      orders: data.orders,
      conversionRate: 0.034 // Simulado
    };
  });
}
function generateCSVResponse(data, reportType) {
  /* istanbul ignore next */
  cov_33kfsre5m().f[37]++;
  // ImplementaciÃ³n bÃ¡sica de CSV
  const csv =
  /* istanbul ignore next */
  (cov_33kfsre5m().s[142]++, `Report Type,${reportType}\nGenerated At,${new Date().toISOString()}\n\n${JSON.stringify(data)}`);
  /* istanbul ignore next */
  cov_33kfsre5m().s[143]++;
  return new _server.NextResponse(csv, {
    headers: {
      'Content-Type': 'text/csv',
      'Content-Disposition': `attachment; filename="${reportType}_report_${new Date().toISOString().substring(0, 10)}.csv"`
    }
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,