0ba2f5cb09fa336f82001681c50dc134
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_14bxu0qh3i() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\products\\validate-slug\\route.ts";
  var hash = "a41473a9b567ded0cad64e7f53967a56685eecda";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\products\\validate-slug\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 20
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 23
        }
      },
      "6": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 38
        }
      },
      "7": {
        start: {
          line: 21,
          column: 13
        },
        end: {
          line: 21,
          column: 27
        }
      },
      "8": {
        start: {
          line: 22,
          column: 28
        },
        end: {
          line: 22,
          column: 81
        }
      },
      "9": {
        start: {
          line: 23,
          column: 22
        },
        end: {
          line: 23,
          column: 69
        }
      },
      "10": {
        start: {
          line: 24,
          column: 19
        },
        end: {
          line: 24,
          column: 63
        }
      },
      "11": {
        start: {
          line: 25,
          column: 27
        },
        end: {
          line: 25,
          column: 81
        }
      },
      "12": {
        start: {
          line: 26,
          column: 22
        },
        end: {
          line: 26,
          column: 76
        }
      },
      "13": {
        start: {
          line: 27,
          column: 16
        },
        end: {
          line: 27,
          column: 24
        }
      },
      "14": {
        start: {
          line: 29,
          column: 29
        },
        end: {
          line: 32,
          column: 2
        }
      },
      "15": {
        start: {
          line: 36,
          column: 24
        },
        end: {
          line: 57,
          column: 1
        }
      },
      "16": {
        start: {
          line: 37,
          column: 40
        },
        end: {
          line: 37,
          column: 47
        }
      },
      "17": {
        start: {
          line: 38,
          column: 32
        },
        end: {
          line: 38,
          column: 45
        }
      },
      "18": {
        start: {
          line: 40,
          column: 16
        },
        end: {
          line: 40,
          column: 71
        }
      },
      "19": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "20": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 43
        }
      },
      "21": {
        start: {
          line: 45,
          column: 46
        },
        end: {
          line: 45,
          column: 66
        }
      },
      "22": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 49,
          column: 5
        }
      },
      "23": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 64
        }
      },
      "24": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 49
        }
      },
      "25": {
        start: {
          line: 50,
          column: 24
        },
        end: {
          line: 50,
          column: 74
        }
      },
      "26": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 56,
          column: 7
        }
      },
      "27": {
        start: {
          line: 58,
          column: 13
        },
        end: {
          line: 60,
          column: 73
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 16
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 19
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 36,
            column: 24
          },
          end: {
            line: 36,
            column: 25
          }
        },
        loc: {
          start: {
            line: 36,
            column: 41
          },
          end: {
            line: 57,
            column: 1
          }
        },
        line: 36
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "1": {
        loc: {
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "2": {
        loc: {
          start: {
            line: 50,
            column: 24
          },
          end: {
            line: 50,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 24
          },
          end: {
            line: 50,
            column: 41
          }
        }, {
          start: {
            line: 50,
            column: 45
          },
          end: {
            line: 50,
            column: 74
          }
        }],
        line: 50
      },
      "3": {
        loc: {
          start: {
            line: 54,
            column: 17
          },
          end: {
            line: 54,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 54,
            column: 31
          },
          end: {
            line: 54,
            column: 48
          }
        }, {
          start: {
            line: 54,
            column: 51
          },
          end: {
            line: 54,
            column: 72
          }
        }],
        line: 54
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\products\\validate-slug\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// \uD83D\uDD0D Enterprise Slug Validation API\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { z } from 'zod';\r\nimport { composeMiddlewares } from '@/lib/api/middleware-composer';\r\nimport { withErrorHandler, ValidationError } from '@/lib/api/error-handler';\r\nimport { withApiLogging } from '@/lib/api/api-logger';\r\nimport { withAdminAuth } from '@/lib/auth/api-auth-middleware';\r\nimport { withValidation } from '@/lib/validation/admin-schemas';\r\n\r\n// Validation schema\r\nconst SlugValidationSchema = z.object({\r\n  slug: z.string().min(1, 'Slug es requerido'),\r\n  productId: z.string().uuid().optional()\r\n});\r\n\r\n/**\r\n * POST /api/admin/products/validate-slug\r\n * Validate if a product slug is unique\r\n */\r\nconst postHandler = async (request: NextRequest) => {\r\n  const { supabase, validatedData } = request as any;\r\n  const { slug, productId } = validatedData;\r\n\r\n  // Check if slug exists\r\n  let query = supabase\r\n    .from('products')\r\n    .select('id')\r\n    .eq('slug', slug);\r\n\r\n  // Exclude current product if editing\r\n  if (productId) {\r\n    query = query.neq('id', productId);\r\n  }\r\n\r\n  const { data: existingProducts, error } = await query.limit(1);\r\n\r\n  if (error) {\r\n    console.error('Error checking slug uniqueness:', error);\r\n    throw new Error('Error al validar slug');\r\n  }\r\n\r\n  const isAvailable = !existingProducts || existingProducts.length === 0;\r\n\r\n  return NextResponse.json({\r\n    available: isAvailable,\r\n    slug,\r\n    message: isAvailable ? 'Slug disponible' : 'Slug ya est\xE1 en uso',\r\n    success: true\r\n  });\r\n};\r\n\r\n// Apply enterprise middlewares and export handler\r\nexport const POST = composeMiddlewares(\r\n  withErrorHandler,\r\n  withApiLogging,\r\n  withAdminAuth(['products_read']),\r\n  withValidation(SlugValidationSchema)\r\n)(postHandler);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["POST", "runtime", "SlugValidationSchema", "z", "object", "slug", "string", "min", "productId", "uuid", "optional", "postHandler", "request", "supabase", "validatedData", "query", "from", "select", "eq", "neq", "data", "existingProducts", "error", "limit", "console", "Error", "isAvailable", "length", "NextResponse", "json", "available", "message", "success", "composeMiddlewares", "withErrorHandler", "withApiLogging", "withAdminAuth", "withValidation"],
      mappings: "AAAA,qCAAqC;;;;;;;;;;;;QAwDxBA;eAAAA;;QAvDAC;eAAAA;;;wBAI6B;qBACxB;oCACiB;8BACe;2BACnB;mCACD;8BACC;AAVxB,MAAMA,UAAU;AAYvB,oBAAoB;AACpB,MAAMC,uBAAuBC,MAAC,CAACC,MAAM,CAAC;IACpCC,MAAMF,MAAC,CAACG,MAAM,GAAGC,GAAG,CAAC,GAAG;IACxBC,WAAWL,MAAC,CAACG,MAAM,GAAGG,IAAI,GAAGC,QAAQ;AACvC;AAEA;;;CAGC,GACD,MAAMC,cAAc,OAAOC;IACzB,MAAM,EAAEC,QAAQ,EAAEC,aAAa,EAAE,GAAGF;IACpC,MAAM,EAAEP,IAAI,EAAEG,SAAS,EAAE,GAAGM;IAE5B,uBAAuB;IACvB,IAAIC,QAAQF,SACTG,IAAI,CAAC,YACLC,MAAM,CAAC,MACPC,EAAE,CAAC,QAAQb;IAEd,qCAAqC;IACrC,IAAIG,WAAW;QACbO,QAAQA,MAAMI,GAAG,CAAC,MAAMX;IAC1B;IAEA,MAAM,EAAEY,MAAMC,gBAAgB,EAAEC,KAAK,EAAE,GAAG,MAAMP,MAAMQ,KAAK,CAAC;IAE5D,IAAID,OAAO;QACTE,QAAQF,KAAK,CAAC,mCAAmCA;QACjD,MAAM,IAAIG,MAAM;IAClB;IAEA,MAAMC,cAAc,CAACL,oBAAoBA,iBAAiBM,MAAM,KAAK;IAErE,OAAOC,oBAAY,CAACC,IAAI,CAAC;QACvBC,WAAWJ;QACXrB;QACA0B,SAASL,cAAc,oBAAoB;QAC3CM,SAAS;IACX;AACF;AAGO,MAAMhC,OAAOiC,IAAAA,sCAAkB,EACpCC,8BAAgB,EAChBC,yBAAc,EACdC,IAAAA,gCAAa,EAAC;IAAC;CAAgB,GAC/BC,IAAAA,4BAAc,EAACnC,uBACfS"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a41473a9b567ded0cad64e7f53967a56685eecda"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_14bxu0qh3i = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_14bxu0qh3i();
cov_14bxu0qh3i().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_14bxu0qh3i().f[0]++;
  cov_14bxu0qh3i().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_14bxu0qh3i().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_14bxu0qh3i().s[3]++;
_export(exports, {
  get POST() {
    /* istanbul ignore next */
    cov_14bxu0qh3i().f[1]++;
    cov_14bxu0qh3i().s[4]++;
    return POST;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_14bxu0qh3i().f[2]++;
    cov_14bxu0qh3i().s[5]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_14bxu0qh3i().s[6]++, require("next/server"));
const _zod =
/* istanbul ignore next */
(cov_14bxu0qh3i().s[7]++, require("zod"));
const _middlewarecomposer =
/* istanbul ignore next */
(cov_14bxu0qh3i().s[8]++, require("../../../../../lib/api/middleware-composer"));
const _errorhandler =
/* istanbul ignore next */
(cov_14bxu0qh3i().s[9]++, require("../../../../../lib/api/error-handler"));
const _apilogger =
/* istanbul ignore next */
(cov_14bxu0qh3i().s[10]++, require("../../../../../lib/api/api-logger"));
const _apiauthmiddleware =
/* istanbul ignore next */
(cov_14bxu0qh3i().s[11]++, require("../../../../../lib/auth/api-auth-middleware"));
const _adminschemas =
/* istanbul ignore next */
(cov_14bxu0qh3i().s[12]++, require("../../../../../lib/validation/admin-schemas"));
const runtime =
/* istanbul ignore next */
(cov_14bxu0qh3i().s[13]++, 'nodejs');
// Validation schema
const SlugValidationSchema =
/* istanbul ignore next */
(cov_14bxu0qh3i().s[14]++, _zod.z.object({
  slug: _zod.z.string().min(1, 'Slug es requerido'),
  productId: _zod.z.string().uuid().optional()
}));
/**
 * POST /api/admin/products/validate-slug
 * Validate if a product slug is unique
 */
/* istanbul ignore next */
cov_14bxu0qh3i().s[15]++;
const postHandler = async request => {
  /* istanbul ignore next */
  cov_14bxu0qh3i().f[3]++;
  const {
    supabase,
    validatedData
  } =
  /* istanbul ignore next */
  (cov_14bxu0qh3i().s[16]++, request);
  const {
    slug,
    productId
  } =
  /* istanbul ignore next */
  (cov_14bxu0qh3i().s[17]++, validatedData);
  // Check if slug exists
  let query =
  /* istanbul ignore next */
  (cov_14bxu0qh3i().s[18]++, supabase.from('products').select('id').eq('slug', slug));
  // Exclude current product if editing
  /* istanbul ignore next */
  cov_14bxu0qh3i().s[19]++;
  if (productId) {
    /* istanbul ignore next */
    cov_14bxu0qh3i().b[0][0]++;
    cov_14bxu0qh3i().s[20]++;
    query = query.neq('id', productId);
  } else
  /* istanbul ignore next */
  {
    cov_14bxu0qh3i().b[0][1]++;
  }
  const {
    data: existingProducts,
    error
  } =
  /* istanbul ignore next */
  (cov_14bxu0qh3i().s[21]++, await query.limit(1));
  /* istanbul ignore next */
  cov_14bxu0qh3i().s[22]++;
  if (error) {
    /* istanbul ignore next */
    cov_14bxu0qh3i().b[1][0]++;
    cov_14bxu0qh3i().s[23]++;
    console.error('Error checking slug uniqueness:', error);
    /* istanbul ignore next */
    cov_14bxu0qh3i().s[24]++;
    throw new Error('Error al validar slug');
  } else
  /* istanbul ignore next */
  {
    cov_14bxu0qh3i().b[1][1]++;
  }
  const isAvailable =
  /* istanbul ignore next */
  (cov_14bxu0qh3i().s[25]++,
  /* istanbul ignore next */
  (cov_14bxu0qh3i().b[2][0]++, !existingProducts) ||
  /* istanbul ignore next */
  (cov_14bxu0qh3i().b[2][1]++, existingProducts.length === 0));
  /* istanbul ignore next */
  cov_14bxu0qh3i().s[26]++;
  return _server.NextResponse.json({
    available: isAvailable,
    slug,
    message: isAvailable ?
    /* istanbul ignore next */
    (cov_14bxu0qh3i().b[3][0]++, 'Slug disponible') :
    /* istanbul ignore next */
    (cov_14bxu0qh3i().b[3][1]++, 'Slug ya estÃ¡ en uso'),
    success: true
  });
};
const POST =
/* istanbul ignore next */
(cov_14bxu0qh3i().s[27]++, (0, _middlewarecomposer.composeMiddlewares)(_errorhandler.withErrorHandler, _apilogger.withApiLogging, (0, _apiauthmiddleware.withAdminAuth)(['products_read']), (0, _adminschemas.withValidation)(SlugValidationSchema))(postHandler));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMTRieHUwcWgzaSIsImFjdHVhbENvdmVyYWdlIiwicyIsIlBPU1QiLCJmIiwicnVudGltZSIsIlNsdWdWYWxpZGF0aW9uU2NoZW1hIiwiX3pvZCIsInoiLCJvYmplY3QiLCJzbHVnIiwic3RyaW5nIiwibWluIiwicHJvZHVjdElkIiwidXVpZCIsIm9wdGlvbmFsIiwicG9zdEhhbmRsZXIiLCJyZXF1ZXN0Iiwic3VwYWJhc2UiLCJ2YWxpZGF0ZWREYXRhIiwicXVlcnkiLCJmcm9tIiwic2VsZWN0IiwiZXEiLCJiIiwibmVxIiwiZGF0YSIsImV4aXN0aW5nUHJvZHVjdHMiLCJlcnJvciIsImxpbWl0IiwiY29uc29sZSIsIkVycm9yIiwiaXNBdmFpbGFibGUiLCJsZW5ndGgiLCJfc2VydmVyIiwiTmV4dFJlc3BvbnNlIiwianNvbiIsImF2YWlsYWJsZSIsIm1lc3NhZ2UiLCJzdWNjZXNzIiwiX21pZGRsZXdhcmVjb21wb3NlciIsImNvbXBvc2VNaWRkbGV3YXJlcyIsIl9lcnJvcmhhbmRsZXIiLCJ3aXRoRXJyb3JIYW5kbGVyIiwiX2FwaWxvZ2dlciIsIndpdGhBcGlMb2dnaW5nIiwiX2FwaWF1dGhtaWRkbGV3YXJlIiwid2l0aEFkbWluQXV0aCIsIl9hZG1pbnNjaGVtYXMiLCJ3aXRoVmFsaWRhdGlvbiJdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbWFydGlcXERlc2t0b3BcXERFU0FSUk9MTE9TV1xcQk9JTEVSUExBVFRFIEUtQ09NTUVSQ0VcXHNyY1xcYXBwXFxhcGlcXGFkbWluXFxwcm9kdWN0c1xcdmFsaWRhdGUtc2x1Z1xccm91dGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29uZmlndXJhY2nDs24gcGFyYSBOb2RlLmpzIFJ1bnRpbWVcclxuZXhwb3J0IGNvbnN0IHJ1bnRpbWUgPSAnbm9kZWpzJztcclxuXHJcbi8vIPCflI0gRW50ZXJwcmlzZSBTbHVnIFZhbGlkYXRpb24gQVBJXHJcblxyXG5pbXBvcnQgeyBOZXh0UmVxdWVzdCwgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInO1xyXG5pbXBvcnQgeyB6IH0gZnJvbSAnem9kJztcclxuaW1wb3J0IHsgY29tcG9zZU1pZGRsZXdhcmVzIH0gZnJvbSAnQC9saWIvYXBpL21pZGRsZXdhcmUtY29tcG9zZXInO1xyXG5pbXBvcnQgeyB3aXRoRXJyb3JIYW5kbGVyLCBWYWxpZGF0aW9uRXJyb3IgfSBmcm9tICdAL2xpYi9hcGkvZXJyb3ItaGFuZGxlcic7XHJcbmltcG9ydCB7IHdpdGhBcGlMb2dnaW5nIH0gZnJvbSAnQC9saWIvYXBpL2FwaS1sb2dnZXInO1xyXG5pbXBvcnQgeyB3aXRoQWRtaW5BdXRoIH0gZnJvbSAnQC9saWIvYXV0aC9hcGktYXV0aC1taWRkbGV3YXJlJztcclxuaW1wb3J0IHsgd2l0aFZhbGlkYXRpb24gfSBmcm9tICdAL2xpYi92YWxpZGF0aW9uL2FkbWluLXNjaGVtYXMnO1xyXG5cclxuLy8gVmFsaWRhdGlvbiBzY2hlbWFcclxuY29uc3QgU2x1Z1ZhbGlkYXRpb25TY2hlbWEgPSB6Lm9iamVjdCh7XHJcbiAgc2x1Zzogei5zdHJpbmcoKS5taW4oMSwgJ1NsdWcgZXMgcmVxdWVyaWRvJyksXHJcbiAgcHJvZHVjdElkOiB6LnN0cmluZygpLnV1aWQoKS5vcHRpb25hbCgpXHJcbn0pO1xyXG5cclxuLyoqXHJcbiAqIFBPU1QgL2FwaS9hZG1pbi9wcm9kdWN0cy92YWxpZGF0ZS1zbHVnXHJcbiAqIFZhbGlkYXRlIGlmIGEgcHJvZHVjdCBzbHVnIGlzIHVuaXF1ZVxyXG4gKi9cclxuY29uc3QgcG9zdEhhbmRsZXIgPSBhc3luYyAocmVxdWVzdDogTmV4dFJlcXVlc3QpID0+IHtcclxuICBjb25zdCB7IHN1cGFiYXNlLCB2YWxpZGF0ZWREYXRhIH0gPSByZXF1ZXN0IGFzIGFueTtcclxuICBjb25zdCB7IHNsdWcsIHByb2R1Y3RJZCB9ID0gdmFsaWRhdGVkRGF0YTtcclxuXHJcbiAgLy8gQ2hlY2sgaWYgc2x1ZyBleGlzdHNcclxuICBsZXQgcXVlcnkgPSBzdXBhYmFzZVxyXG4gICAgLmZyb20oJ3Byb2R1Y3RzJylcclxuICAgIC5zZWxlY3QoJ2lkJylcclxuICAgIC5lcSgnc2x1ZycsIHNsdWcpO1xyXG5cclxuICAvLyBFeGNsdWRlIGN1cnJlbnQgcHJvZHVjdCBpZiBlZGl0aW5nXHJcbiAgaWYgKHByb2R1Y3RJZCkge1xyXG4gICAgcXVlcnkgPSBxdWVyeS5uZXEoJ2lkJywgcHJvZHVjdElkKTtcclxuICB9XHJcblxyXG4gIGNvbnN0IHsgZGF0YTogZXhpc3RpbmdQcm9kdWN0cywgZXJyb3IgfSA9IGF3YWl0IHF1ZXJ5LmxpbWl0KDEpO1xyXG5cclxuICBpZiAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGNoZWNraW5nIHNsdWcgdW5pcXVlbmVzczonLCBlcnJvcik7XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0Vycm9yIGFsIHZhbGlkYXIgc2x1ZycpO1xyXG4gIH1cclxuXHJcbiAgY29uc3QgaXNBdmFpbGFibGUgPSAhZXhpc3RpbmdQcm9kdWN0cyB8fCBleGlzdGluZ1Byb2R1Y3RzLmxlbmd0aCA9PT0gMDtcclxuXHJcbiAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHtcclxuICAgIGF2YWlsYWJsZTogaXNBdmFpbGFibGUsXHJcbiAgICBzbHVnLFxyXG4gICAgbWVzc2FnZTogaXNBdmFpbGFibGUgPyAnU2x1ZyBkaXNwb25pYmxlJyA6ICdTbHVnIHlhIGVzdMOhIGVuIHVzbycsXHJcbiAgICBzdWNjZXNzOiB0cnVlXHJcbiAgfSk7XHJcbn07XHJcblxyXG4vLyBBcHBseSBlbnRlcnByaXNlIG1pZGRsZXdhcmVzIGFuZCBleHBvcnQgaGFuZGxlclxyXG5leHBvcnQgY29uc3QgUE9TVCA9IGNvbXBvc2VNaWRkbGV3YXJlcyhcclxuICB3aXRoRXJyb3JIYW5kbGVyLFxyXG4gIHdpdGhBcGlMb2dnaW5nLFxyXG4gIHdpdGhBZG1pbkF1dGgoWydwcm9kdWN0c19yZWFkJ10pLFxyXG4gIHdpdGhWYWxpZGF0aW9uKFNsdWdWYWxpZGF0aW9uU2NoZW1hKVxyXG4pKHBvc3RIYW5kbGVyKTtcclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFDYTtJQUFBQSxjQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBQyxjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBRCxjQUFBO0FBQUFBLGNBQUEsR0FBQUUsQ0FBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7TUF1REFDLEtBQUE7SUFBQTtJQUFBSCxjQUFBLEdBQUFJLENBQUE7SUFBQUosY0FBQSxHQUFBRSxDQUFBO1dBQUFDLElBQUE7O01BdkRBRSxRQUFBO0lBQUE7SUFBQUwsY0FBQSxHQUFBSSxDQUFBO0lBQUFKLGNBQUEsR0FBQUUsQ0FBQTtXQUFBRyxPQUFBOzs7OztrQ0FJNkI7OztrQ0FDeEI7OztrQ0FDaUI7OztrQ0FDZTs7O21DQUNuQjs7O21DQUNEOzs7bUNBQ0M7QUFWeEIsTUFBTUEsT0FBQTtBQUFBO0FBQUEsQ0FBQUwsY0FBQSxHQUFBRSxDQUFBLFFBQVU7QUFZdkI7QUFDQSxNQUFNSSxvQkFBQTtBQUFBO0FBQUEsQ0FBQU4sY0FBQSxHQUFBRSxDQUFBLFFBQXVCSyxJQUFBLENBQUFDLENBQUMsQ0FBQ0MsTUFBTSxDQUFDO0VBQ3BDQyxJQUFBLEVBQU1ILElBQUEsQ0FBQUMsQ0FBQyxDQUFDRyxNQUFNLEdBQUdDLEdBQUcsQ0FBQyxHQUFHO0VBQ3hCQyxTQUFBLEVBQVdOLElBQUEsQ0FBQUMsQ0FBQyxDQUFDRyxNQUFNLEdBQUdHLElBQUksR0FBR0MsUUFBUTtBQUN2QztBQUVBOzs7O0FBQUE7QUFBQWYsY0FBQSxHQUFBRSxDQUFBO0FBSUEsTUFBTWMsV0FBQSxHQUFjLE1BQU9DLE9BQUE7RUFBQTtFQUFBakIsY0FBQSxHQUFBSSxDQUFBO0VBQ3pCLE1BQU07SUFBRWMsUUFBUTtJQUFFQztFQUFhLENBQUU7RUFBQTtFQUFBLENBQUFuQixjQUFBLEdBQUFFLENBQUEsUUFBR2UsT0FBQTtFQUNwQyxNQUFNO0lBQUVQLElBQUk7SUFBRUc7RUFBUyxDQUFFO0VBQUE7RUFBQSxDQUFBYixjQUFBLEdBQUFFLENBQUEsUUFBR2lCLGFBQUE7RUFFNUI7RUFDQSxJQUFJQyxLQUFBO0VBQUE7RUFBQSxDQUFBcEIsY0FBQSxHQUFBRSxDQUFBLFFBQVFnQixRQUFBLENBQ1RHLElBQUksQ0FBQyxZQUNMQyxNQUFNLENBQUMsTUFDUEMsRUFBRSxDQUFDLFFBQVFiLElBQUE7RUFFZDtFQUFBO0VBQUFWLGNBQUEsR0FBQUUsQ0FBQTtFQUNBLElBQUlXLFNBQUEsRUFBVztJQUFBO0lBQUFiLGNBQUEsR0FBQXdCLENBQUE7SUFBQXhCLGNBQUEsR0FBQUUsQ0FBQTtJQUNia0IsS0FBQSxHQUFRQSxLQUFBLENBQU1LLEdBQUcsQ0FBQyxNQUFNWixTQUFBO0VBQzFCO0VBQUE7RUFBQTtJQUFBYixjQUFBLEdBQUF3QixDQUFBO0VBQUE7RUFFQSxNQUFNO0lBQUVFLElBQUEsRUFBTUMsZ0JBQWdCO0lBQUVDO0VBQUssQ0FBRTtFQUFBO0VBQUEsQ0FBQTVCLGNBQUEsR0FBQUUsQ0FBQSxRQUFHLE1BQU1rQixLQUFBLENBQU1TLEtBQUssQ0FBQztFQUFBO0VBQUE3QixjQUFBLEdBQUFFLENBQUE7RUFFNUQsSUFBSTBCLEtBQUEsRUFBTztJQUFBO0lBQUE1QixjQUFBLEdBQUF3QixDQUFBO0lBQUF4QixjQUFBLEdBQUFFLENBQUE7SUFDVDRCLE9BQUEsQ0FBUUYsS0FBSyxDQUFDLG1DQUFtQ0EsS0FBQTtJQUFBO0lBQUE1QixjQUFBLEdBQUFFLENBQUE7SUFDakQsTUFBTSxJQUFJNkIsS0FBQSxDQUFNO0VBQ2xCO0VBQUE7RUFBQTtJQUFBL0IsY0FBQSxHQUFBd0IsQ0FBQTtFQUFBO0VBRUEsTUFBTVEsV0FBQTtFQUFBO0VBQUEsQ0FBQWhDLGNBQUEsR0FBQUUsQ0FBQTtFQUFjO0VBQUEsQ0FBQUYsY0FBQSxHQUFBd0IsQ0FBQSxXQUFDRyxnQkFBQTtFQUFBO0VBQUEsQ0FBQTNCLGNBQUEsR0FBQXdCLENBQUEsVUFBb0JHLGdCQUFBLENBQWlCTSxNQUFNLEtBQUs7RUFBQTtFQUFBakMsY0FBQSxHQUFBRSxDQUFBO0VBRXJFLE9BQU9nQyxPQUFBLENBQUFDLFlBQVksQ0FBQ0MsSUFBSSxDQUFDO0lBQ3ZCQyxTQUFBLEVBQVdMLFdBQUE7SUFDWHRCLElBQUE7SUFDQTRCLE9BQUEsRUFBU04sV0FBQTtJQUFBO0lBQUEsQ0FBQWhDLGNBQUEsR0FBQXdCLENBQUEsVUFBYztJQUFBO0lBQUEsQ0FBQXhCLGNBQUEsR0FBQXdCLENBQUEsVUFBb0I7SUFDM0NlLE9BQUEsRUFBUztFQUNYO0FBQ0Y7QUFHTyxNQUFNcEMsSUFBQTtBQUFBO0FBQUEsQ0FBQUgsY0FBQSxHQUFBRSxDQUFBLFFBQU8sSUFBQXNDLG1CQUFBLENBQUFDLGtCQUFrQixFQUNwQ0MsYUFBQSxDQUFBQyxnQkFBZ0IsRUFDaEJDLFVBQUEsQ0FBQUMsY0FBYyxFQUNkLElBQUFDLGtCQUFBLENBQUFDLGFBQWEsRUFBQyxDQUFDLGdCQUFnQixHQUMvQixJQUFBQyxhQUFBLENBQUFDLGNBQWMsRUFBQzNDLG9CQUFBLEdBQ2ZVLFdBQUEiLCJpZ25vcmVMaXN0IjpbXX0=