{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\ShopDetails\\ShopDetailModal.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { QuickViewModal } from '@/components/ui/modal';\nimport { useShopDetailsReducer } from '@/hooks/optimization/useShopDetailsReducer';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Separator } from '@/components/ui/separator';\nimport { ShoppingCart, Heart, Minus, Plus, Package, Box, Layers, Ruler, Maximize } from 'lucide-react';\nimport { cn } from '@/lib/core/utils';\nimport { FreeShippingText } from '@/components/ui/free-shipping-text';\nimport { AdvancedColorPicker, PAINT_COLORS, ColorOption } from '@/components/ui/advanced-color-picker';\nimport { detectProductType, formatCapacity, getDefaultColor } from '@/utils/product-utils';\nimport { ProductVariant, getProductVariants, findVariantByCapacity, getAvailableCapacities, getEffectivePrice, hasDiscount } from '@/lib/api/product-variants';\n\n// ===================================\n// TIPOS\n// ===================================\n\ninterface Product {\n  id: string;\n  name: string;\n  price: number;\n  originalPrice?: number;\n  image: string;\n  brand: string;\n  stock: number;\n  description?: string;\n  colors?: ColorOption[];\n  capacities?: string[];\n}\n\ninterface ShopDetailModalProps {\n  product: Product | null;\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n  onAddToCart?: (product: Product, variants: any) => void;\n  onAddToWishlist?: (product: Product) => void;\n}\n\n// ===================================\n// COMPONENTES DE SELECTORES\n// ===================================\n\ninterface ColorSelectorProps {\n  colors: string[];\n  selectedColor: string;\n  onColorChange: (color: string) => void;\n}\n\nconst ColorSelector: React.FC<ColorSelectorProps> = ({\n  colors,\n  selectedColor,\n  onColorChange\n}) => {\n  const colorMap: Record<string, string> = {\n    'blanco': '#FFFFFF',\n    'negro': '#000000',\n    'rojo': '#DC2626',\n    'azul': '#2563EB',\n    'verde': '#16A34A',\n    'amarillo': '#EAB308',\n    'naranja': '#EA580C',\n    'gris': '#6B7280',\n    'marron': '#92400E',\n    'rosa': '#EC4899'\n  };\n\n  return (\n    <div className=\"space-y-3\">\n      <h4 className=\"text-sm font-medium text-gray-900\">Color</h4>\n      <div className=\"flex flex-wrap gap-2\">\n        {colors.map((color) => (\n          <button\n            key={color}\n            onClick={() => onColorChange(color)}\n            className={cn(\n              \"w-8 h-8 rounded-full border-2 transition-all duration-200\",\n              selectedColor === color \n                ? \"border-blaze-orange-500 ring-2 ring-blaze-orange-200\" \n                : \"border-gray-300 hover:border-gray-400\"\n            )}\n            style={{ \n              backgroundColor: colorMap[color.toLowerCase()] || '#E5E7EB',\n              boxShadow: color.toLowerCase() === 'blanco' ? 'inset 0 0 0 1px #E5E7EB' : 'none'\n            }}\n            title={color}\n            aria-label={`Seleccionar color ${color}`}\n          />\n        ))}\n      </div>\n      {selectedColor && (\n        <p className=\"text-sm text-gray-600 capitalize\">\n          Color seleccionado: <span className=\"font-medium\">{PAINT_COLORS.find(color => color.id === selectedColor)?.displayName}</span>\n        </p>\n      )}\n    </div>\n  );\n};\n\ninterface CapacitySelectorProps {\n  capacities: string[];\n  selectedCapacity: string;\n  onCapacityChange: (capacity: string) => void;\n}\n\nconst CapacitySelector: React.FC<CapacitySelectorProps> = ({\n  capacities,\n  selectedCapacity,\n  onCapacityChange\n}) => {\n  return (\n    <div className=\"space-y-3\">\n      <h4 className=\"text-sm font-medium text-gray-900\">Capacidad</h4>\n      <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-2\">\n        {capacities.map((capacity) => (\n          <button\n            key={capacity}\n            onClick={() => onCapacityChange(capacity)}\n            className={cn(\n              \"px-4 py-2 text-sm font-medium rounded-lg border transition-all duration-200\",\n              selectedCapacity === capacity\n                ? \"border-blaze-orange-500 bg-blaze-orange-50 text-blaze-orange-700\"\n                : \"border-gray-300 bg-white text-gray-700 hover:border-gray-400 hover:bg-gray-50\"\n            )}\n          >\n            {capacity}\n          </button>\n        ))}\n      </div>\n      {selectedCapacity && (\n        <p className=\"text-sm text-gray-600\">\n          <span className=\"font-medium\">{selectedCapacity}</span>\n        </p>\n      )}\n    </div>\n  );\n};\n\ninterface QuantitySelectorProps {\n  quantity: number;\n  onQuantityChange: (quantity: number) => void;\n  onIncrement: () => void;\n  onDecrement: () => void;\n  maxQuantity?: number;\n  stock: number;\n}\n\nconst QuantitySelector: React.FC<QuantitySelectorProps> = ({\n  quantity,\n  onQuantityChange,\n  onIncrement,\n  onDecrement,\n  maxQuantity = 99,\n  stock\n}) => {\n  const isMinQuantity = quantity <= 1;\n  const isMaxQuantity = quantity >= Math.min(maxQuantity, stock);\n\n  return (\n    <div className=\"space-y-4\">\n      <h4 className=\"text-base font-semibold text-gray-900 flex items-center gap-2\">\n        <ShoppingCart className=\"w-5 h-5 text-blaze-orange-600\" />\n        Cantidad\n      </h4>\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center border-2 border-gray-200 rounded-xl overflow-hidden bg-white shadow-sm\">\n          <button\n            onClick={onDecrement}\n            disabled={isMinQuantity}\n            className={cn(\n              \"p-3 transition-all duration-200\",\n              isMinQuantity \n                ? \"opacity-50 cursor-not-allowed bg-gray-50\" \n                : \"hover:bg-blaze-orange-50 hover:text-blaze-orange-600\"\n            )}\n            aria-label=\"Disminuir cantidad\"\n          >\n            <Minus className=\"w-4 h-4\" />\n          </button>\n          \n          <input\n            type=\"number\"\n            value={quantity}\n            onChange={(e) => {\n              const value = parseInt(e.target.value) || 1;\n              const clampedValue = Math.max(1, Math.min(value, Math.min(maxQuantity, stock)));\n              onQuantityChange(clampedValue);\n            }}\n            className=\"w-16 px-3 py-3 text-center border-0 focus:outline-none font-semibold text-gray-900 [appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none\"\n            min=\"1\"\n            max={Math.min(maxQuantity, stock)}\n          />\n          \n          <button\n            onClick={onIncrement}\n            disabled={isMaxQuantity}\n            className={cn(\n              \"p-3 transition-all duration-200\",\n              isMaxQuantity \n                ? \"opacity-50 cursor-not-allowed bg-gray-50\" \n                : \"hover:bg-blaze-orange-50 hover:text-blaze-orange-600\"\n            )}\n            aria-label=\"Aumentar cantidad\"\n          >\n            <Plus className=\"w-4 h-4\" />\n          </button>\n        </div>\n        \n        <div className=\"bg-gray-50 px-3 py-2 rounded-lg hidden\">\n          <span className={cn(\n            \"text-sm font-medium\",\n            stock > 0 ? \"text-green-600\" : \"text-red-600\"\n          )}>\n            {stock > 0 ? `${stock} disponibles` : 'Sin stock'}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// ===================================\n// SELECTORES ESPECÍFICOS\n// ===================================\n\ninterface GrainSelectorProps {\n  grainOptions: string[];\n  selectedGrain: string;\n  onGrainChange: (grain: string) => void;\n}\n\nconst GrainSelector: React.FC<GrainSelectorProps> = ({\n  grainOptions,\n  selectedGrain,\n  onGrainChange\n}) => {\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"flex items-center gap-2\">\n        <Layers className=\"w-5 h-5 text-blaze-orange-600\" />\n        <span className=\"text-base font-semibold text-gray-900\">Grano</span>\n      </div>\n      <div className=\"grid grid-cols-4 gap-2\">\n        {grainOptions.map((grain) => (\n          <button\n            key={grain}\n            onClick={() => onGrainChange(grain)}\n            className={cn(\n              \"px-3 py-2 rounded-lg border-2 text-sm font-semibold transition-all duration-200 hover:shadow-md\",\n              selectedGrain === grain\n                ? \"border-blaze-orange-500 bg-blaze-orange-50 text-blaze-orange-700 shadow-sm\"\n                : \"border-gray-200 bg-white text-gray-700 hover:border-blaze-orange-300 hover:bg-blaze-orange-25\"\n            )}\n          >\n            {grain}\n          </button>\n        ))}\n      </div>\n      {selectedGrain && (\n        <p className=\"text-sm text-gray-600\">\n          Grano seleccionado: <span className=\"font-medium\">{selectedGrain}</span>\n        </p>\n      )}\n    </div>\n  );\n};\n\ninterface SizeSelectorProps {\n  sizeOptions: string[];\n  selectedSize: string;\n  onSizeChange: (size: string) => void;\n}\n\nconst SizeSelector: React.FC<SizeSelectorProps> = ({\n  sizeOptions,\n  selectedSize,\n  onSizeChange\n}) => {\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"flex items-center gap-2\">\n        <Ruler className=\"w-5 h-5 text-blaze-orange-600\" />\n        <span className=\"text-base font-semibold text-gray-900\">Tamaño</span>\n      </div>\n      <div className=\"grid grid-cols-3 gap-2\">\n        {sizeOptions.map((size) => (\n          <button\n            key={size}\n            onClick={() => onSizeChange(size)}\n            className={cn(\n              \"px-3 py-2 rounded-lg border-2 text-sm font-semibold transition-all duration-200 hover:shadow-md\",\n              selectedSize === size\n                ? \"border-blaze-orange-500 bg-blaze-orange-50 text-blaze-orange-700 shadow-sm\"\n                : \"border-gray-200 bg-white text-gray-700 hover:border-blaze-orange-300 hover:bg-blaze-orange-25\"\n            )}\n          >\n            {size}\n          </button>\n        ))}\n      </div>\n      {selectedSize && (\n        <p className=\"text-sm text-gray-600\">\n          Tamaño seleccionado: <span className=\"font-medium\">{selectedSize}</span>\n        </p>\n      )}\n    </div>\n  );\n};\n\ninterface WidthSelectorProps {\n  widthOptions: string[];\n  selectedWidth: string;\n  onWidthChange: (width: string) => void;\n}\n\nconst WidthSelector: React.FC<WidthSelectorProps> = ({\n  widthOptions,\n  selectedWidth,\n  onWidthChange\n}) => {\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"flex items-center gap-2\">\n        <Maximize className=\"w-5 h-5 text-blaze-orange-600\" />\n        <span className=\"text-base font-semibold text-gray-900\">Ancho</span>\n      </div>\n      <div className=\"grid grid-cols-3 gap-2\">\n        {widthOptions.map((width) => (\n          <button\n            key={width}\n            onClick={() => onWidthChange(width)}\n            className={cn(\n              \"px-3 py-2 rounded-lg border-2 text-sm font-semibold transition-all duration-200 hover:shadow-md\",\n              selectedWidth === width\n                ? \"border-blaze-orange-500 bg-blaze-orange-50 text-blaze-orange-700 shadow-sm\"\n                : \"border-gray-200 bg-white text-gray-700 hover:border-blaze-orange-300 hover:bg-blaze-orange-25\"\n            )}\n          >\n            {width}\n          </button>\n        ))}\n      </div>\n      {selectedWidth && (\n        <p className=\"text-sm text-gray-600\">\n          Ancho seleccionado: <span className=\"font-medium\">{selectedWidth}</span>\n        </p>\n      )}\n    </div>\n  );\n};\n\n// ===================================\n// COMPONENTE PRINCIPAL\n// ===================================\n\nexport const ShopDetailModal: React.FC<ShopDetailModalProps> = ({\n  product,\n  open,\n  onOpenChange,\n  onAddToCart,\n  onAddToWishlist\n}) => {\n  // Debug: Verificar que onOpenChange se recibe correctamente\n  console.log('ShopDetailModal - onOpenChange recibido:', typeof onOpenChange, onOpenChange);\n  const { state, actions, selectors } = useShopDetailsReducer();\n  \n  // Estados del modal\n  const [selectedColor, setSelectedColor] = useState<string>('');\n  const [selectedCapacity, setSelectedCapacity] = useState<string>('');\n  const [selectedGrain, setSelectedGrain] = useState<string>('');\n  const [selectedSize, setSelectedSize] = useState<string>('');\n  const [selectedWidth, setSelectedWidth] = useState<string>('');\n  const [quantity, setQuantity] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const [variants, setVariants] = useState<ProductVariant[]>([]);\n  const [selectedVariant, setSelectedVariant] = useState<ProductVariant | null>(null);\n  const [loadingVariants, setLoadingVariants] = useState(false);\n  \n  // Función para resetear estados\n  const resetStates = () => {\n    setSelectedColor('');\n    setSelectedCapacity('');\n    setSelectedGrain('');\n    setSelectedSize('');\n    setSelectedWidth('');\n    setQuantity(1);\n    setVariants([]);\n    setSelectedVariant(null);\n  };\n  \n  // Detectar tipo de producto\n  const productType = detectProductType(product.name, product.category);\n  \n  // Cargar variantes del producto\n  useEffect(() => {\n    if (open && product.id) {\n      setLoadingVariants(true);\n      getProductVariants(product.id)\n        .then(response => {\n          if (response.success && response.data) {\n            setVariants(response.data);\n            // Seleccionar la primera variante por defecto\n            if (response.data.length > 0) {\n              const firstVariant = response.data[0];\n              setSelectedVariant(firstVariant);\n              setSelectedCapacity(firstVariant.capacity);\n            }\n          }\n        })\n        .catch(error => {\n          console.error('Error cargando variantes:', error);\n          setVariants([]);\n        })\n        .finally(() => {\n          setLoadingVariants(false);\n        });\n    }\n  }, [open, product.id]);\n  \n  // Configurar valores por defecto\n  useEffect(() => {\n    if (!selectedColor && productType.hasColorSelector) {\n      const defaultColorName = getDefaultColor(productType);\n      const defaultColor = PAINT_COLORS.find(color => \n        color.name.toLowerCase().includes(defaultColorName.toLowerCase())\n      );\n      if (defaultColor) {\n        setSelectedColor(defaultColor.id);\n      }\n    }\n    \n    if (!selectedCapacity && productType.defaultCapacities.length > 0) {\n      setSelectedCapacity(productType.defaultCapacities[0]);\n    }\n\n    // Configurar valores por defecto para los nuevos selectores\n    if (!selectedGrain && productType.hasGrainSelector && productType.grainOptions.length > 0) {\n      setSelectedGrain(productType.grainOptions[0]);\n    }\n\n    if (!selectedSize && productType.hasSizeSelector && productType.sizeOptions.length > 0) {\n      setSelectedSize(productType.sizeOptions[0]);\n    }\n\n    if (!selectedWidth && productType.hasWidthSelector && productType.widthOptions.length > 0) {\n      setSelectedWidth(productType.widthOptions[0]);\n    }\n  }, [productType, selectedColor, selectedCapacity, selectedGrain, selectedSize, selectedWidth]);\n  \n  // Actualizar variante seleccionada cuando cambia la capacidad\n  useEffect(() => {\n    if (selectedCapacity && variants.length > 0) {\n      const variant = findVariantByCapacity(variants, selectedCapacity);\n      setSelectedVariant(variant);\n    }\n  }, [selectedCapacity, variants]);\n\n  // Calcular capacidades disponibles basándose en las variantes\n  const availableCapacities = variants.length > 0 \n    ? getAvailableCapacities(variants)\n    : productType.defaultCapacities;\n\n  // Calcular precio dinámico basado en selecciones\n  const calculateDynamicPrice = useCallback(() => {\n    let basePrice = selectedVariant ? getEffectivePrice(selectedVariant) : parseFloat(product.discounted_price || product.price);\n    \n    // Aplicar modificadores de precio por tamaño\n    if (selectedSize && productType.hasSizeSelector) {\n      const sizeMultipliers: { [key: string]: number } = {\n        '1/2\"': 1.0,\n        '1\"': 1.2,\n        '1 1/2\"': 1.4,\n        '2\"': 1.6,\n        '2 1/2\"': 1.8,\n        '3\"': 2.0,\n        '4\"': 2.4\n      };\n      const multiplier = sizeMultipliers[selectedSize] || 1.0;\n      basePrice *= multiplier;\n    }\n    \n    // Aplicar modificadores de precio por ancho/longitud\n    if (selectedWidth && productType.hasWidthSelector) {\n      const widthMultipliers: { [key: string]: number } = {\n        '12mm': 1.0,\n        '18mm': 1.2,\n        '24mm': 1.4,\n        '36mm': 1.6,\n        '48mm': 1.8,\n        '72mm': 2.0\n      };\n      const multiplier = widthMultipliers[selectedWidth] || 1.0;\n      basePrice *= multiplier;\n    }\n    \n    return basePrice;\n  }, [selectedVariant, selectedSize, selectedWidth, productType, product]);\n\n  // Obtener precio actual basado en la variante seleccionada y modificadores\n  const currentPrice = calculateDynamicPrice();\n  const originalPrice = selectedVariant ? parseFloat(selectedVariant.price) : parseFloat(product.price);\n  const hasVariantDiscount = selectedVariant ? hasDiscount(selectedVariant) : (product.discounted_price && parseFloat(product.discounted_price) < parseFloat(product.price));\n\n  // Datos por defecto para productos de pinturería\n  const availableColors = product.colors || PAINT_COLORS.slice(0, 12); // Usar colores del producto o los primeros 12 por defecto\n  const defaultCapacities = product.capacities || ['1L', '4L', '10L', '20L'];\n\n  const handleAddToCart = () => {\n    if (onAddToCart) {\n      // Usar el producto de la variante seleccionada si está disponible\n      const productToAdd = selectedVariant ? {\n        ...product,\n        id: selectedVariant.id,\n        price: selectedVariant.price,\n        discounted_price: selectedVariant.discounted_price,\n        capacity: selectedVariant.capacity\n      } : product;\n      \n      onAddToCart(productToAdd, quantity, selectedColor, selectedCapacity);\n    }\n    // Verificar que onOpenChange existe antes de llamarla\n    if (onOpenChange) {\n      onOpenChange(false);\n    }\n  };\n\n  const handleAddToFavorites = () => {\n    if (onAddToFavorites) {\n      onAddToFavorites(product);\n    }\n  };\n\n  // Calcular si hay descuento (renombrado para evitar conflicto)\n  const hasProductDiscount = product.originalPrice && product.originalPrice > product.price;\n\n  return (\n    <QuickViewModal open={open} onOpenChange={onOpenChange}>\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 max-w-4xl mx-auto\">\n        {/* Imagen del producto */}\n        <div className=\"space-y-4\">\n          <div className=\"aspect-square bg-gray-100 rounded-lg overflow-hidden\">\n            <img\n              src={product.images?.[0] || '/images/placeholder-product.jpg'}\n              alt={product.name}\n              className=\"w-full h-full object-cover\"\n            />\n          </div>\n          \n          {hasProductDiscount && (\n            <Badge variant=\"destructive\" className=\"w-fit\">\n              {Math.round(((product.originalPrice! - product.price) / product.originalPrice!) * 100)}% OFF\n            </Badge>\n          )}\n        </div>\n\n        {/* Información del producto */}\n        <div className=\"space-y-6\">\n          {/* Header */}\n          <div className=\"space-y-2\">\n            <p className=\"text-sm text-gray-500 uppercase font-medium\">{product.brand}</p>\n            <h2 className=\"text-2xl font-bold text-gray-900\">{product.name}</h2>\n            \n            <div className=\"flex items-center gap-3\">\n              {hasVariantDiscount ? (\n                <>\n                  <span className=\"text-3xl font-bold text-blaze-orange-600\">\n                    ${currentPrice.toLocaleString()}\n                  </span>\n                  <span className=\"text-xl text-gray-500 line-through\">\n                    ${originalPrice.toLocaleString()}\n                  </span>\n                  <Badge variant=\"destructive\" className=\"text-sm\">\n                    {Math.round(((originalPrice - currentPrice) / originalPrice) * 100)}% OFF\n                  </Badge>\n                </>\n              ) : (\n                <span className=\"text-3xl font-bold text-blaze-orange-600\">\n                  ${currentPrice.toLocaleString()}\n                </span>\n              )}\n            </div>\n          </div>\n\n          {/* Descripción */}\n          {product.description && (\n            <div>\n              <p className=\"text-gray-600 leading-relaxed\">{product.description}</p>\n            </div>\n          )}\n\n          <Separator />\n\n          {/* Selectores de variantes */}\n          <div className=\"space-y-6\">\n            {/* Selector de colores condicional */}\n            {productType.hasColorSelector && (\n              <AdvancedColorPicker\n                colors={PAINT_COLORS}\n                selectedColor={selectedColor}\n                onColorChange={setSelectedColor}\n                showSearch={PAINT_COLORS.length > 12}\n                showCategories={PAINT_COLORS.length > 20}\n                maxDisplayColors={16}\n                className=\"bg-white\"\n                productType={productType}\n              />\n            )}\n\n            {/* Selector de capacidad */}\n            {availableCapacities.length > 0 && \n             !(availableCapacities.length === 1 && availableCapacities[0] === 'Sin especificar') && (\n              <div className=\"space-y-4\">\n                <div className=\"flex items-center gap-2\">\n                  <Box className=\"w-5 h-5 text-blaze-orange-600\" />\n                  <span className=\"text-base font-semibold text-gray-900\">\n                    {productType.capacityUnit === 'litros' ? 'Capacidad' : \n                     productType.capacityUnit === 'kg' ? 'Peso' : \n                     productType.capacityUnit === 'metros' ? 'Longitud' : 'Cantidad'}\n                  </span>\n                </div>\n                \n                {loadingVariants ? (\n                  <div className=\"grid grid-cols-2 gap-3\">\n                    <div className=\"animate-pulse bg-gray-200 rounded-xl h-12\"></div>\n                    <div className=\"animate-pulse bg-gray-200 rounded-xl h-12\"></div>\n                    <div className=\"animate-pulse bg-gray-200 rounded-xl h-12\"></div>\n                    <div className=\"animate-pulse bg-gray-200 rounded-xl h-12\"></div>\n                  </div>\n                ) : (\n                  <div className=\"grid grid-cols-2 gap-3\">\n                    {availableCapacities.map((capacity) => (\n                      <button\n                        key={capacity}\n                        onClick={() => setSelectedCapacity(capacity)}\n                        className={cn(\n                          \"px-4 py-3 rounded-xl border-2 text-sm font-semibold transition-all duration-200 hover:shadow-md\",\n                          selectedCapacity === capacity\n                            ? \"border-blaze-orange-500 bg-blaze-orange-50 text-blaze-orange-700 shadow-sm\"\n                            : \"border-gray-200 bg-white text-gray-700 hover:border-blaze-orange-300 hover:bg-blaze-orange-25\"\n                        )}\n                      >\n                        {formatCapacity(capacity, productType.capacityUnit)}\n                      </button>\n                    ))}\n                  </div>\n                )}\n              </div>\n            )}\n\n            {/* Selector de cantidad - ÚNICO */}\n            <QuantitySelector\n              quantity={quantity}\n              onQuantityChange={setQuantity}\n              onIncrement={() => setQuantity(prev => prev + 1)}\n              onDecrement={() => setQuantity(prev => Math.max(1, prev - 1))}\n              stock={product.stock}\n            />\n\n            {/* Selector de grano para lijas */}\n            {productType.hasGrainSelector && (\n              <GrainSelector\n                grainOptions={productType.grainOptions}\n                selectedGrain={selectedGrain}\n                onGrainChange={setSelectedGrain}\n              />\n            )}\n\n            {/* Selector de tamaño para pinceles */}\n            {productType.hasSizeSelector && (\n              <SizeSelector\n                sizeOptions={productType.sizeOptions}\n                selectedSize={selectedSize}\n                onSizeChange={setSelectedSize}\n              />\n            )}\n\n            {/* Selector de ancho para cintas de papel */}\n            {productType.hasWidthSelector && (\n              <WidthSelector\n                widthOptions={productType.widthOptions}\n                selectedWidth={selectedWidth}\n                onWidthChange={setSelectedWidth}\n              />\n            )}\n          </div>\n\n          <Separator />\n\n          {/* Precio total */}\n          <div className=\"bg-gray-50 p-4 rounded-lg\">\n            <div className=\"flex justify-between items-center\">\n              <span className=\"text-lg font-medium text-gray-900\">Total:</span>\n              <span className=\"text-2xl font-bold text-blaze-orange-600\">\n                ${(currentPrice * quantity).toLocaleString()}\n              </span>\n            </div>\n            {quantity > 1 && (\n              <p className=\"text-sm text-gray-600 mt-1\">\n                ${currentPrice.toLocaleString()} × {quantity} unidades\n              </p>\n            )}\n            \n            {/* Mostrar selecciones actuales */}\n            <div className=\"mt-3 space-y-1\">\n              {productType.hasColorSelector && selectedColor && (\n                <p className=\"text-xs text-gray-500\">\n                  Color: <span className=\"font-medium capitalize\">\n                    {PAINT_COLORS.find(color => color.id === selectedColor)?.displayName || \n                     PAINT_COLORS.find(color => color.id === selectedColor)?.name || \n                     selectedColor}\n                  </span>\n                </p>\n              )}\n              {selectedCapacity && (\n                <p className=\"text-xs text-gray-500\">\n                  <span className=\"font-medium\">\n                    {productType.capacityUnit === 'litros' ? 'Capacidad' : \n                     productType.capacityUnit === 'kg' ? 'Peso' : \n                     productType.capacityUnit === 'metros' ? 'Longitud' : 'Cantidad'}:\n                  </span> {formatCapacity(selectedCapacity, productType.capacityUnit)}\n                </p>\n              )}\n              {productType.hasGrainSelector && selectedGrain && (\n                <p className=\"text-xs text-gray-500\">\n                  Grano: <span className=\"font-medium\">{selectedGrain}</span>\n                </p>\n              )}\n              {productType.hasSizeSelector && selectedSize && (\n                <p className=\"text-xs text-gray-500\">\n                  Tamaño: <span className=\"font-medium\">{selectedSize}</span>\n                </p>\n              )}\n              {productType.hasWidthSelector && selectedWidth && (\n                <p className=\"text-xs text-gray-500\">\n                  Ancho: <span className=\"font-medium\">{selectedWidth}</span>\n                </p>\n              )}\n            </div>\n          </div>\n\n          {/* Botones de acción */}\n          <div className=\"space-y-3\">\n            <Button\n              onClick={handleAddToCart}\n              disabled={product.stock === 0 || isLoading}\n              className=\"w-full bg-yellow-400 hover:bg-yellow-500 text-black text-lg py-3 rounded-xl font-semibold\"\n              size=\"lg\"\n            >\n              <ShoppingCart className=\"mr-2 h-5 w-5\" />\n              {product.stock === 0 ? 'Sin Stock' : isLoading ? 'Agregando...' : 'Agregar al Carrito'}\n            </Button>\n\n\n          </div>\n\n          {/* Información adicional */}\n          <div className=\"text-sm text-gray-600 space-y-1\">\n            <FreeShippingText />\n            <p>• Garantía de calidad en todos nuestros productos</p>\n            <p>• Asesoramiento técnico especializado</p>\n          </div>\n        </div>\n      </div>\n    </QuickViewModal>\n  );\n};\n\nexport default ShopDetailModal;"],"names":["ShopDetailModal","ColorSelector","colors","selectedColor","onColorChange","colorMap","div","className","h4","map","color","button","onClick","cn","style","backgroundColor","toLowerCase","boxShadow","title","aria-label","p","span","PAINT_COLORS","find","id","displayName","CapacitySelector","capacities","selectedCapacity","onCapacityChange","capacity","QuantitySelector","quantity","onQuantityChange","onIncrement","onDecrement","maxQuantity","stock","isMinQuantity","isMaxQuantity","Math","min","ShoppingCart","disabled","Minus","input","type","value","onChange","e","parseInt","target","clampedValue","max","Plus","GrainSelector","grainOptions","selectedGrain","onGrainChange","Layers","grain","SizeSelector","sizeOptions","selectedSize","onSizeChange","Ruler","size","WidthSelector","widthOptions","selectedWidth","onWidthChange","Maximize","width","product","open","onOpenChange","onAddToCart","onAddToWishlist","console","log","state","actions","selectors","useShopDetailsReducer","setSelectedColor","useState","setSelectedCapacity","setSelectedGrain","setSelectedSize","setSelectedWidth","setQuantity","isLoading","setIsLoading","variants","setVariants","selectedVariant","setSelectedVariant","loadingVariants","setLoadingVariants","resetStates","productType","detectProductType","name","category","useEffect","getProductVariants","then","response","success","data","length","firstVariant","catch","error","finally","hasColorSelector","defaultColorName","getDefaultColor","defaultColor","includes","defaultCapacities","hasGrainSelector","hasSizeSelector","hasWidthSelector","variant","findVariantByCapacity","availableCapacities","getAvailableCapacities","calculateDynamicPrice","useCallback","basePrice","getEffectivePrice","parseFloat","discounted_price","price","sizeMultipliers","multiplier","widthMultipliers","currentPrice","originalPrice","hasVariantDiscount","hasDiscount","availableColors","slice","handleAddToCart","productToAdd","handleAddToFavorites","onAddToFavorites","hasProductDiscount","QuickViewModal","img","src","images","alt","Badge","round","brand","h2","toLocaleString","description","Separator","AdvancedColorPicker","showSearch","showCategories","maxDisplayColors","Box","capacityUnit","formatCapacity","prev","Button","FreeShippingText"],"mappings":"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"}