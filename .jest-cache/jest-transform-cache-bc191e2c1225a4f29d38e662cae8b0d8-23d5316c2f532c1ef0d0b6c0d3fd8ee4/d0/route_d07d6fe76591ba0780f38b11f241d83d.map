{"version":3,"names":["cov_14bxu0qh3i","actualCoverage","s","POST","f","runtime","SlugValidationSchema","_zod","z","object","slug","string","min","productId","uuid","optional","postHandler","request","supabase","validatedData","query","from","select","eq","b","neq","data","existingProducts","error","limit","console","Error","isAvailable","length","_server","NextResponse","json","available","message","success","_middlewarecomposer","composeMiddlewares","_errorhandler","withErrorHandler","_apilogger","withApiLogging","_apiauthmiddleware","withAdminAuth","_adminschemas","withValidation"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\products\\validate-slug\\route.ts"],"sourcesContent":["// Configuraci√≥n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// üîç Enterprise Slug Validation API\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { z } from 'zod';\r\nimport { composeMiddlewares } from '@/lib/api/middleware-composer';\r\nimport { withErrorHandler, ValidationError } from '@/lib/api/error-handler';\r\nimport { withApiLogging } from '@/lib/api/api-logger';\r\nimport { withAdminAuth } from '@/lib/auth/api-auth-middleware';\r\nimport { withValidation } from '@/lib/validation/admin-schemas';\r\n\r\n// Validation schema\r\nconst SlugValidationSchema = z.object({\r\n  slug: z.string().min(1, 'Slug es requerido'),\r\n  productId: z.string().uuid().optional()\r\n});\r\n\r\n/**\r\n * POST /api/admin/products/validate-slug\r\n * Validate if a product slug is unique\r\n */\r\nconst postHandler = async (request: NextRequest) => {\r\n  const { supabase, validatedData } = request as any;\r\n  const { slug, productId } = validatedData;\r\n\r\n  // Check if slug exists\r\n  let query = supabase\r\n    .from('products')\r\n    .select('id')\r\n    .eq('slug', slug);\r\n\r\n  // Exclude current product if editing\r\n  if (productId) {\r\n    query = query.neq('id', productId);\r\n  }\r\n\r\n  const { data: existingProducts, error } = await query.limit(1);\r\n\r\n  if (error) {\r\n    console.error('Error checking slug uniqueness:', error);\r\n    throw new Error('Error al validar slug');\r\n  }\r\n\r\n  const isAvailable = !existingProducts || existingProducts.length === 0;\r\n\r\n  return NextResponse.json({\r\n    available: isAvailable,\r\n    slug,\r\n    message: isAvailable ? 'Slug disponible' : 'Slug ya est√° en uso',\r\n    success: true\r\n  });\r\n};\r\n\r\n// Apply enterprise middlewares and export handler\r\nexport const POST = composeMiddlewares(\r\n  withErrorHandler,\r\n  withApiLogging,\r\n  withAdminAuth(['products_read']),\r\n  withValidation(SlugValidationSchema)\r\n)(postHandler);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}