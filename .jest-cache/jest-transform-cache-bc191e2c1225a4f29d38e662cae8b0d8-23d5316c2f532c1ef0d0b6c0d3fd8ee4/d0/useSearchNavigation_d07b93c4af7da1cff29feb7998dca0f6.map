{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useSearchNavigation.ts"],"sourcesContent":["// ===================================\n// HOOK: useSearchNavigation - Navegación optimizada para búsquedas\n// ===================================\n\nimport { useCallback } from 'react'\nimport { useRouter, useSearchParams } from 'next/navigation'\n\nexport interface SearchNavigationOptions {\n  /** Preservar parámetros existentes */\n  preserveParams?: boolean\n  /** Scroll al top después de navegar */\n  scrollToTop?: boolean\n  /** Usar replace en lugar de push */\n  replace?: boolean\n  /** Callback antes de navegar */\n  onBeforeNavigate?: (url: string) => void\n  /** Callback después de navegar */\n  onAfterNavigate?: (url: string) => void\n}\n\nexport function useSearchNavigation(options: SearchNavigationOptions = {}) {\n  const {\n    preserveParams = false,\n    scrollToTop = true,\n    replace = false,\n    onBeforeNavigate,\n    onAfterNavigate,\n  } = options\n\n  const router = useRouter()\n  const searchParams = useSearchParams()\n\n  // ===================================\n  // NAVEGACIÓN A RESULTADOS DE BÚSQUEDA\n  // ===================================\n\n  const navigateToSearch = useCallback(\n    (query: string, category?: string, additionalParams?: Record<string, string>) => {\n      if (!query.trim()) {\n        return\n      }\n\n      // Construir URL de búsqueda\n      const params = new URLSearchParams()\n\n      // Parámetro principal de búsqueda\n      params.set('q', query.trim())\n\n      // Categoría si se especifica\n      if (category && category !== 'all') {\n        params.set('category', category)\n      }\n\n      // Preservar parámetros existentes si está habilitado\n      if (preserveParams) {\n        searchParams.forEach((value, key) => {\n          if (key !== 'q' && key !== 'category') {\n            params.set(key, value)\n          }\n        })\n      }\n\n      // Parámetros adicionales\n      if (additionalParams) {\n        Object.entries(additionalParams).forEach(([key, value]) => {\n          params.set(key, value)\n        })\n      }\n\n      const searchUrl = `/search?${params.toString()}`\n\n      // Callback antes de navegar\n      onBeforeNavigate?.(searchUrl)\n\n      // Navegar\n      if (replace) {\n        router.replace(searchUrl)\n      } else {\n        router.push(searchUrl)\n      }\n\n      // Scroll al top si está habilitado\n      if (scrollToTop) {\n        setTimeout(() => {\n          window.scrollTo({ top: 0, behavior: 'smooth' })\n        }, 100)\n      }\n\n      // Callback después de navegar\n      onAfterNavigate?.(searchUrl)\n    },\n    [router, searchParams, preserveParams, replace, scrollToTop, onBeforeNavigate, onAfterNavigate]\n  )\n\n  // ===================================\n  // NAVEGACIÓN A PRODUCTO\n  // ===================================\n\n  const navigateToProduct = useCallback(\n    (productId: string, productSlug?: string) => {\n      const productUrl = productSlug ? `/products/${productSlug}` : `/products/${productId}`\n\n      onBeforeNavigate?.(productUrl)\n      router.push(productUrl)\n      onAfterNavigate?.(productUrl)\n    },\n    [router, onBeforeNavigate, onAfterNavigate]\n  )\n\n  // ===================================\n  // NAVEGACIÓN A CATEGORÍA\n  // ===================================\n\n  const navigateToCategory = useCallback(\n    (categoryId: string, categorySlug?: string) => {\n      const categoryUrl = categorySlug ? `/shop/${categorySlug}` : `/shop?category=${categoryId}`\n\n      onBeforeNavigate?.(categoryUrl)\n      router.push(categoryUrl)\n      onAfterNavigate?.(categoryUrl)\n    },\n    [router, onBeforeNavigate, onAfterNavigate]\n  )\n\n  // ===================================\n  // PREFETCH OPTIMIZADO\n  // ===================================\n\n  const prefetchSearch = useCallback(\n    (query: string, category?: string) => {\n      if (!query.trim()) {\n        return\n      }\n\n      const params = new URLSearchParams()\n      params.set('q', query.trim())\n      if (category && category !== 'all') {\n        params.set('category', category)\n      }\n\n      const searchUrl = `/search?${params.toString()}`\n      router.prefetch(searchUrl)\n    },\n    [router]\n  )\n\n  const prefetchProduct = useCallback(\n    (productId: string, productSlug?: string) => {\n      const productUrl = productSlug ? `/products/${productSlug}` : `/products/${productId}`\n\n      router.prefetch(productUrl)\n    },\n    [router]\n  )\n\n  // ===================================\n  // UTILIDADES\n  // ===================================\n\n  const getCurrentSearchQuery = useCallback(() => {\n    return searchParams.get('q') || ''\n  }, [searchParams])\n\n  const getCurrentCategory = useCallback(() => {\n    return searchParams.get('category') || ''\n  }, [searchParams])\n\n  const buildSearchUrl = useCallback(\n    (query: string, category?: string, additionalParams?: Record<string, string>) => {\n      const params = new URLSearchParams()\n      params.set('q', query.trim())\n\n      if (category && category !== 'all') {\n        params.set('category', category)\n      }\n\n      if (additionalParams) {\n        Object.entries(additionalParams).forEach(([key, value]) => {\n          params.set(key, value)\n        })\n      }\n\n      return `/search?${params.toString()}`\n    },\n    []\n  )\n\n  // ===================================\n  // RETURN\n  // ===================================\n\n  return {\n    // Funciones de navegación\n    navigateToSearch,\n    navigateToProduct,\n    navigateToCategory,\n\n    // Funciones de prefetch\n    prefetchSearch,\n    prefetchProduct,\n\n    // Utilidades\n    getCurrentSearchQuery,\n    getCurrentCategory,\n    buildSearchUrl,\n\n    // Router directo para casos especiales\n    router,\n  }\n}\n\nexport default useSearchNavigation\n"],"names":["useSearchNavigation","options","preserveParams","scrollToTop","replace","onBeforeNavigate","onAfterNavigate","router","useRouter","searchParams","useSearchParams","navigateToSearch","useCallback","query","category","additionalParams","trim","params","URLSearchParams","set","forEach","value","key","Object","entries","searchUrl","toString","push","setTimeout","window","scrollTo","top","behavior","navigateToProduct","productId","productSlug","productUrl","navigateToCategory","categoryId","categorySlug","categoryUrl","prefetchSearch","prefetch","prefetchProduct","getCurrentSearchQuery","get","getCurrentCategory","buildSearchUrl"],"mappings":"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"}