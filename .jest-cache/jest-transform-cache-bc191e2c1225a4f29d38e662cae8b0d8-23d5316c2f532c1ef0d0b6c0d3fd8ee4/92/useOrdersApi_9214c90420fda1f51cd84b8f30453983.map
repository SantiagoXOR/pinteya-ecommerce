{"version":3,"names":["useOrdersApi","buildApiUrl","filters","cov_1i14n4jd2y","f","searchParams","s","URLSearchParams","Object","entries","forEach","key","value","b","undefined","append","String","has","toString","makeApiRequest","url","signal","timeout","timeoutPromise","Promise","_","reject","setTimeout","Error","fetchPromise","fetch","method","headers","credentials","race","options","abortControllerRef","_react","useRef","fetchOrdersInternal","useCallback","isRetry","cache","isRequestTooRecent","process","env","NODE_ENV","console","log","_apistrict","createStrictApiError","enableCache","cachedData","getCachedData","success","data","message","timestamp","pendingRequest","getPendingRequest","requestId","JSON","stringify","current","aborted","currentRequestId","_requestId","abort","controller","AbortController","requestPromise","response","ok","errorText","text","catch","status","jsonData","json","parseError","validatedResponse","toStrictOrdersResponse","isStrictApiResponse","setCachedData","error","errorMessage","originalError","setPendingRequest","abortCurrentRequest","isRequestInProgress"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\admin\\useOrdersApi.ts"],"sourcesContent":["// ===================================\r\n// PINTEYA E-COMMERCE - ORDERS API HOOK\r\n// Hook especializado para llamadas a la API de órdenes\r\n// ===================================\r\n\r\nimport { useCallback, useRef } from 'react';\r\nimport {\r\n  StrictOrdersListResponse,\r\n  ApiResult,\r\n  toStrictOrdersResponse,\r\n  createStrictApiError,\r\n  isStrictApiResponse\r\n} from '@/types/api-strict';\r\nimport { StrictOrderFilters } from './useOrdersEnterpriseStrict';\r\nimport { UseOrdersCacheReturn } from './useOrdersCache';\r\n\r\n// ===================================\r\n// TIPOS Y CONFIGURACIÓN\r\n// ===================================\r\n\r\ninterface ApiOptions {\r\n  timeout: number;\r\n  maxRetries: number;\r\n  enableCache: boolean;\r\n}\r\n\r\ninterface UseOrdersApiOptions extends ApiOptions {\r\n  cache: UseOrdersCacheReturn;\r\n}\r\n\r\nexport interface UseOrdersApiReturn {\r\n  fetchOrdersInternal: (filters: StrictOrderFilters, isRetry?: boolean) => Promise<ApiResult<StrictOrdersListResponse['data']>>;\r\n  abortCurrentRequest: () => void;\r\n  isRequestInProgress: () => boolean;\r\n}\r\n\r\n// ===================================\r\n// UTILIDADES DE API\r\n// ===================================\r\n\r\nfunction buildApiUrl(filters: StrictOrderFilters): string {\r\n  const searchParams = new URLSearchParams();\r\n  \r\n  // Agregar parámetros de filtros\r\n  Object.entries(filters).forEach(([key, value]) => {\r\n    // Siempre incluir parámetros requeridos por la API\r\n    if (key === 'page' || key === 'limit' || key === 'sort_by' || key === 'sort_order') {\r\n      if (value !== undefined && value !== null && value !== '') {\r\n        searchParams.append(key, String(value));\r\n      }\r\n    }\r\n    // Para otros parámetros, aplicar filtros normales\r\n    else if (value !== undefined && value !== null && value !== 'all' && value !== '') {\r\n      searchParams.append(key, String(value));\r\n    }\r\n  });\r\n  \r\n  // Asegurar que siempre tengamos los parámetros mínimos requeridos\r\n  if (!searchParams.has('page')) {\r\n    searchParams.append('page', '1');\r\n  }\r\n  if (!searchParams.has('limit')) {\r\n    searchParams.append('limit', '20');\r\n  }\r\n  if (!searchParams.has('sort_by')) {\r\n    searchParams.append('sort_by', 'created_at');\r\n  }\r\n  if (!searchParams.has('sort_order')) {\r\n    searchParams.append('sort_order', 'desc');\r\n  }\r\n  \r\n  return `/api/admin/orders?${searchParams.toString()}`;\r\n}\r\n\r\nasync function makeApiRequest(\r\n  url: string, \r\n  signal: AbortSignal, \r\n  timeout: number\r\n): Promise<Response> {\r\n  // Crear timeout promise\r\n  const timeoutPromise = new Promise<never>((_, reject) => {\r\n    setTimeout(() => reject(new Error(`Request timeout after ${timeout}ms`)), timeout);\r\n  });\r\n  \r\n  // Hacer la petición con timeout\r\n  const fetchPromise = fetch(url, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Accept': 'application/json'\r\n    },\r\n    credentials: 'include', // ✅ AGREGADO: Incluir cookies de sesión NextAuth.js\r\n    signal\r\n  });\r\n  \r\n  return Promise.race([fetchPromise, timeoutPromise]);\r\n}\r\n\r\n// ===================================\r\n// HOOK DE API\r\n// ===================================\r\n\r\nexport function useOrdersApi(options: UseOrdersApiOptions): UseOrdersApiReturn {\r\n  const abortControllerRef = useRef<AbortController | null>(null);\r\n  \r\n  const fetchOrdersInternal = useCallback(async (\r\n    filters: StrictOrderFilters,\r\n    isRetry: boolean = false\r\n  ): Promise<ApiResult<StrictOrdersListResponse['data']>> => {\r\n    try {\r\n      // Validar si la petición es demasiado reciente (anti-spam)\r\n      if (!isRetry && options.cache.isRequestTooRecent(filters)) {\r\n        if (process.env.NODE_ENV === 'development') {\r\n          console.log('[useOrdersApi] Request blocked - too recent');\r\n        }\r\n        return createStrictApiError('Request too recent', 'REQUEST_THROTTLED');\r\n      }\r\n      \r\n      // Verificar cache primero\r\n      if (options.enableCache) {\r\n        const cachedData = options.cache.getCachedData(filters);\r\n        if (cachedData) {\r\n          return { \r\n            success: true, \r\n            data: cachedData.data, \r\n            message: cachedData.message, \r\n            timestamp: cachedData.timestamp \r\n          };\r\n        }\r\n      }\r\n      \r\n      // Verificar si ya hay una petición pendiente\r\n      const pendingRequest = options.cache.getPendingRequest(filters);\r\n      if (pendingRequest) {\r\n        if (process.env.NODE_ENV === 'development') {\r\n          console.log('[useOrdersApi] Using pending request');\r\n        }\r\n        return await pendingRequest;\r\n      }\r\n      \r\n      // Gestión del AbortController - Solo abortar si es una petición diferente\r\n      // Crear un identificador único para esta petición\r\n      const requestId = JSON.stringify(filters);\r\n      \r\n      // Solo abortar si hay una petición anterior Y es diferente\r\n      if (abortControllerRef.current && !abortControllerRef.current.signal.aborted) {\r\n        // Solo abortar si los filtros son diferentes (nueva petición)\r\n        const currentRequestId = (abortControllerRef.current as any)._requestId;\r\n        if (currentRequestId && currentRequestId !== requestId) {\r\n          if (process.env.NODE_ENV === 'development') {\r\n            console.log('[useOrdersApi] Aborting previous different request');\r\n          }\r\n          abortControllerRef.current.abort();\r\n        } else if (!currentRequestId) {\r\n          // Abortar si no tiene ID (petición antigua)\r\n          abortControllerRef.current.abort();\r\n        }\r\n      }\r\n      \r\n      const controller = new AbortController();\r\n      (controller as any)._requestId = requestId;\r\n      abortControllerRef.current = controller;\r\n      \r\n      // Crear la promesa de la petición\r\n      const requestPromise = (async (): Promise<ApiResult<StrictOrdersListResponse['data']>> => {\r\n        try {\r\n          const url = buildApiUrl(filters);\r\n          \r\n          if (process.env.NODE_ENV === 'development') {\r\n            console.log('[useOrdersApi] Making request:', { url, filters });\r\n          }\r\n          \r\n          const response = await makeApiRequest(url, controller.signal, options.timeout);\r\n          \r\n          // Verificar si la petición fue cancelada\r\n          if (controller.signal.aborted) {\r\n            return createStrictApiError('Request cancelled', 'REQUEST_CANCELLED');\r\n          }\r\n          \r\n          // Verificar status de respuesta\r\n          if (!response.ok) {\r\n            const errorText = await response.text().catch(() => 'Unknown error');\r\n            throw new Error(`HTTP ${response.status}: ${errorText}`);\r\n          }\r\n          \r\n          // Parsear respuesta JSON\r\n          let jsonData: unknown;\r\n          try {\r\n            jsonData = await response.json();\r\n          } catch (parseError) {\r\n            throw new Error(`Failed to parse JSON response: ${parseError instanceof Error ? parseError.message : 'Unknown error'}`);\r\n          }\r\n          \r\n          // Validar y transformar respuesta\r\n          const validatedResponse = toStrictOrdersResponse(jsonData);\r\n          \r\n          if (!isStrictApiResponse(validatedResponse)) {\r\n            return validatedResponse; // Es un error\r\n          }\r\n          \r\n          // Guardar en cache si está habilitado\r\n          if (options.enableCache) {\r\n            options.cache.setCachedData(filters, validatedResponse);\r\n          }\r\n          \r\n          return { \r\n            success: true, \r\n            data: validatedResponse.data, \r\n            message: validatedResponse.message, \r\n            timestamp: validatedResponse.timestamp \r\n          };\r\n          \r\n        } catch (error) {\r\n          if (controller.signal.aborted) {\r\n            return createStrictApiError('Request cancelled', 'REQUEST_CANCELLED');\r\n          }\r\n          \r\n          const errorMessage = error instanceof Error ? error.message : 'Unknown error occurred';\r\n          console.error('[useOrdersApi] Request failed:', errorMessage);\r\n          \r\n          return createStrictApiError(errorMessage, 'FETCH_ERROR', { \r\n            originalError: error,\r\n            filters,\r\n            url: buildApiUrl(filters)\r\n          });\r\n        }\r\n      })();\r\n      \r\n      // Registrar la petición como pendiente\r\n      options.cache.setPendingRequest(filters, requestPromise);\r\n      \r\n      return await requestPromise;\r\n      \r\n    } catch (error) {\r\n      const errorMessage = error instanceof Error ? error.message : 'Unexpected error in fetchOrdersInternal';\r\n      console.error('[useOrdersApi] Unexpected error:', errorMessage);\r\n      \r\n      return createStrictApiError(errorMessage, 'UNEXPECTED_ERROR', { \r\n        originalError: error,\r\n        filters \r\n      });\r\n    }\r\n  }, [options]);\r\n  \r\n  const abortCurrentRequest = useCallback((): void => {\r\n    if (abortControllerRef.current && !abortControllerRef.current.signal.aborted) {\r\n      abortControllerRef.current.abort();\r\n      \r\n      if (process.env.NODE_ENV === 'development') {\r\n        console.log('[useOrdersApi] Request aborted');\r\n      }\r\n    }\r\n  }, []);\r\n  \r\n  const isRequestInProgress = useCallback((): boolean => {\r\n    return abortControllerRef.current !== null && !abortControllerRef.current.signal.aborted;\r\n  }, []);\r\n  \r\n  return {\r\n    fetchOrdersInternal,\r\n    abortCurrentRequest,\r\n    isRequestInProgress\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappingsmGgB;;;;;;WAAAA,YAAA;;;;;kCAjGoB;;;kCAO7B;AAwBP;AACA;AACA;AAEA,SAASC,YAAYC,OAA2B;EAAA;EAAAC,cAAA,GAAAC,CAAA;EAC9C,MAAMC,YAAA;EAAA;EAAA,CAAAF,cAAA,GAAAG,CAAA,OAAe,IAAIC,eAAA;EAEzB;EAAA;EAAAJ,cAAA,GAAAG,CAAA;EACAE,MAAA,CAAOC,OAAO,CAACP,OAAA,EAASQ,OAAO,CAAC,CAAC,CAACC,GAAA,EAAKC,KAAA,CAAM;IAAA;IAAAT,cAAA,GAAAC,CAAA;IAAAD,cAAA,GAAAG,CAAA;IAC3C;IACA;IAAI;IAAA,CAAAH,cAAA,GAAAU,CAAA,UAAAF,GAAA,KAAQ;IAAA;IAAA,CAAAR,cAAA,GAAAU,CAAA,UAAUF,GAAA,KAAQ;IAAA;IAAA,CAAAR,cAAA,GAAAU,CAAA,UAAWF,GAAA,KAAQ;IAAA;IAAA,CAAAR,cAAA,GAAAU,CAAA,UAAaF,GAAA,KAAQ,eAAc;MAAA;MAAAR,cAAA,GAAAU,CAAA;MAAAV,cAAA,GAAAG,CAAA;MAClF;MAAI;MAAA,CAAAH,cAAA,GAAAU,CAAA,UAAAD,KAAA,KAAUE,SAAA;MAAA;MAAA,CAAAX,cAAA,GAAAU,CAAA,UAAaD,KAAA,KAAU;MAAA;MAAA,CAAAT,cAAA,GAAAU,CAAA,UAAQD,KAAA,KAAU,KAAI;QAAA;QAAAT,cAAA,GAAAU,CAAA;QAAAV,cAAA,GAAAG,CAAA;QACzDD,YAAA,CAAaU,MAAM,CAACJ,GAAA,EAAKK,MAAA,CAAOJ,KAAA;MAClC;MAAA;MAAA;QAAAT,cAAA,GAAAU,CAAA;MAAA;IACF,OAEK;MAAA;MAAAV,cAAA,GAAAU,CAAA;MAAAV,cAAA,GAAAG,CAAA;MAAA;MAAI;MAAA,CAAAH,cAAA,GAAAU,CAAA,UAAAD,KAAA,KAAUE,SAAA;MAAA;MAAA,CAAAX,cAAA,GAAAU,CAAA,UAAaD,KAAA,KAAU;MAAA;MAAA,CAAAT,cAAA,GAAAU,CAAA,UAAQD,KAAA,KAAU;MAAA;MAAA,CAAAT,cAAA,GAAAU,CAAA,UAASD,KAAA,KAAU,KAAI;QAAA;QAAAT,cAAA,GAAAU,CAAA;QAAAV,cAAA,GAAAG,CAAA;QACjFD,YAAA,CAAaU,MAAM,CAACJ,GAAA,EAAKK,MAAA,CAAOJ,KAAA;MAClC;MAAA;MAAA;QAAAT,cAAA,GAAAU,CAAA;MAAA;IAAA;EACF;EAEA;EAAA;EAAAV,cAAA,GAAAG,CAAA;EACA,IAAI,CAACD,YAAA,CAAaY,GAAG,CAAC,SAAS;IAAA;IAAAd,cAAA,GAAAU,CAAA;IAAAV,cAAA,GAAAG,CAAA;IAC7BD,YAAA,CAAaU,MAAM,CAAC,QAAQ;EAC9B;EAAA;EAAA;IAAAZ,cAAA,GAAAU,CAAA;EAAA;EAAAV,cAAA,GAAAG,CAAA;EACA,IAAI,CAACD,YAAA,CAAaY,GAAG,CAAC,UAAU;IAAA;IAAAd,cAAA,GAAAU,CAAA;IAAAV,cAAA,GAAAG,CAAA;IAC9BD,YAAA,CAAaU,MAAM,CAAC,SAAS;EAC/B;EAAA;EAAA;IAAAZ,cAAA,GAAAU,CAAA;EAAA;EAAAV,cAAA,GAAAG,CAAA;EACA,IAAI,CAACD,YAAA,CAAaY,GAAG,CAAC,YAAY;IAAA;IAAAd,cAAA,GAAAU,CAAA;IAAAV,cAAA,GAAAG,CAAA;IAChCD,YAAA,CAAaU,MAAM,CAAC,WAAW;EACjC;EAAA;EAAA;IAAAZ,cAAA,GAAAU,CAAA;EAAA;EAAAV,cAAA,GAAAG,CAAA;EACA,IAAI,CAACD,YAAA,CAAaY,GAAG,CAAC,eAAe;IAAA;IAAAd,cAAA,GAAAU,CAAA;IAAAV,cAAA,GAAAG,CAAA;IACnCD,YAAA,CAAaU,MAAM,CAAC,cAAc;EACpC;EAAA;EAAA;IAAAZ,cAAA,GAAAU,CAAA;EAAA;EAAAV,cAAA,GAAAG,CAAA;EAEA,OAAO,qBAAqBD,YAAA,CAAaa,QAAQ,IAAI;AACvD;AAEA,eAAeC,eACbC,GAAW,EACXC,MAAmB,EACnBC,OAAe;EAAA;EAAAnB,cAAA,GAAAC,CAAA;EAEf;EACA,MAAMmB,cAAA;EAAA;EAAA,CAAApB,cAAA,GAAAG,CAAA,QAAiB,IAAIkB,OAAA,CAAe,CAACC,CAAA,EAAGC,MAAA;IAAA;IAAAvB,cAAA,GAAAC,CAAA;IAAAD,cAAA,GAAAG,CAAA;IAC5CqB,UAAA,CAAW,MAAM;MAAA;MAAAxB,cAAA,GAAAC,CAAA;MAAAD,cAAA,GAAAG,CAAA;MAAA,OAAAoB,MAAA,CAAO,IAAIE,KAAA,CAAM,yBAAyBN,OAAA,IAAW;IAAA,GAAIA,OAAA;EAC5E;EAEA;EACA,MAAMO,YAAA;EAAA;EAAA,CAAA1B,cAAA,GAAAG,CAAA,QAAewB,KAAA,CAAMV,GAAA,EAAK;IAC9BW,MAAA,EAAQ;IACRC,OAAA,EAAS;MACP,gBAAgB;MAChB,UAAU;IACZ;IACAC,WAAA,EAAa;IACbZ;EACF;EAAA;EAAAlB,cAAA,GAAAG,CAAA;EAEA,OAAOkB,OAAA,CAAQU,IAAI,CAAC,CAACL,YAAA,EAAcN,cAAA,CAAe;AACpD;AAMO,SAASvB,aAAamC,OAA4B;EAAA;EAAAhC,cAAA,GAAAC,CAAA;EACvD,MAAMgC,kBAAA;EAAA;EAAA,CAAAjC,cAAA,GAAAG,CAAA,QAAqB,IAAA+B,MAAA,CAAAC,MAAM,EAAyB;EAE1D,MAAMC,mBAAA;EAAA;EAAA,CAAApC,cAAA,GAAAG,CAAA,QAAsB,IAAA+B,MAAA,CAAAG,WAAW,EAAC,OACtCtC,OAAA,EACAuC,OAAA;EAAA;EAAA,CAAAtC,cAAA,GAAAU,CAAA,WAAmB,KAAK;IAAA;IAAAV,cAAA,GAAAC,CAAA;IAAAD,cAAA,GAAAG,CAAA;IAExB,IAAI;MAAA;MAAAH,cAAA,GAAAG,CAAA;MACF;MACA;MAAI;MAAA,CAAAH,cAAA,GAAAU,CAAA,YAAC4B,OAAA;MAAA;MAAA,CAAAtC,cAAA,GAAAU,CAAA,WAAWsB,OAAA,CAAQO,KAAK,CAACC,kBAAkB,CAACzC,OAAA,IAAU;QAAA;QAAAC,cAAA,GAAAU,CAAA;QAAAV,cAAA,GAAAG,CAAA;QACzD,IAAIsC,OAAA,CAAQC,GAAG,CAACC,QAAQ,KAAK,eAAe;UAAA;UAAA3C,cAAA,GAAAU,CAAA;UAAAV,cAAA,GAAAG,CAAA;UAC1CyC,OAAA,CAAQC,GAAG,CAAC;QACd;QAAA;QAAA;UAAA7C,cAAA,GAAAU,CAAA;QAAA;QAAAV,cAAA,GAAAG,CAAA;QACA,OAAO,IAAA2C,UAAA,CAAAC,oBAAoB,EAAC,sBAAsB;MACpD;MAAA;MAAA;QAAA/C,cAAA,GAAAU,CAAA;MAAA;MAEA;MAAAV,cAAA,GAAAG,CAAA;MACA,IAAI6B,OAAA,CAAQgB,WAAW,EAAE;QAAA;QAAAhD,cAAA,GAAAU,CAAA;QACvB,MAAMuC,UAAA;QAAA;QAAA,CAAAjD,cAAA,GAAAG,CAAA,QAAa6B,OAAA,CAAQO,KAAK,CAACW,aAAa,CAACnD,OAAA;QAAA;QAAAC,cAAA,GAAAG,CAAA;QAC/C,IAAI8C,UAAA,EAAY;UAAA;UAAAjD,cAAA,GAAAU,CAAA;UAAAV,cAAA,GAAAG,CAAA;UACd,OAAO;YACLgD,OAAA,EAAS;YACTC,IAAA,EAAMH,UAAA,CAAWG,IAAI;YACrBC,OAAA,EAASJ,UAAA,CAAWI,OAAO;YAC3BC,SAAA,EAAWL,UAAA,CAAWK;UACxB;QACF;QAAA;QAAA;UAAAtD,cAAA,GAAAU,CAAA;QAAA;MACF;MAAA;MAAA;QAAAV,cAAA,GAAAU,CAAA;MAAA;MAEA;MACA,MAAM6C,cAAA;MAAA;MAAA,CAAAvD,cAAA,GAAAG,CAAA,QAAiB6B,OAAA,CAAQO,KAAK,CAACiB,iBAAiB,CAACzD,OAAA;MAAA;MAAAC,cAAA,GAAAG,CAAA;MACvD,IAAIoD,cAAA,EAAgB;QAAA;QAAAvD,cAAA,GAAAU,CAAA;QAAAV,cAAA,GAAAG,CAAA;QAClB,IAAIsC,OAAA,CAAQC,GAAG,CAACC,QAAQ,KAAK,eAAe;UAAA;UAAA3C,cAAA,GAAAU,CAAA;UAAAV,cAAA,GAAAG,CAAA;UAC1CyC,OAAA,CAAQC,GAAG,CAAC;QACd;QAAA;QAAA;UAAA7C,cAAA,GAAAU,CAAA;QAAA;QAAAV,cAAA,GAAAG,CAAA;QACA,OAAO,MAAMoD,cAAA;MACf;MAAA;MAAA;QAAAvD,cAAA,GAAAU,CAAA;MAAA;MAEA;MACA;MACA,MAAM+C,SAAA;MAAA;MAAA,CAAAzD,cAAA,GAAAG,CAAA,QAAYuD,IAAA,CAAKC,SAAS,CAAC5D,OAAA;MAEjC;MAAA;MAAAC,cAAA,GAAAG,CAAA;MACA;MAAI;MAAA,CAAAH,cAAA,GAAAU,CAAA,WAAAuB,kBAAA,CAAmB2B,OAAO;MAAA;MAAA,CAAA5D,cAAA,GAAAU,CAAA,WAAI,CAACuB,kBAAA,CAAmB2B,OAAO,CAAC1C,MAAM,CAAC2C,OAAO,GAAE;QAAA;QAAA7D,cAAA,GAAAU,CAAA;QAC5E;QACA,MAAMoD,gBAAA;QAAA;QAAA,CAAA9D,cAAA,GAAAG,CAAA,QAAmB8B,kBAAC,CAAmB2B,OAAO,CAASG,UAAU;QAAA;QAAA/D,cAAA,GAAAG,CAAA;QACvE;QAAI;QAAA,CAAAH,cAAA,GAAAU,CAAA,WAAAoD,gBAAA;QAAA;QAAA,CAAA9D,cAAA,GAAAU,CAAA,WAAoBoD,gBAAA,KAAqBL,SAAA,GAAW;UAAA;UAAAzD,cAAA,GAAAU,CAAA;UAAAV,cAAA,GAAAG,CAAA;UACtD,IAAIsC,OAAA,CAAQC,GAAG,CAACC,QAAQ,KAAK,eAAe;YAAA;YAAA3C,cAAA,GAAAU,CAAA;YAAAV,cAAA,GAAAG,CAAA;YAC1CyC,OAAA,CAAQC,GAAG,CAAC;UACd;UAAA;UAAA;YAAA7C,cAAA,GAAAU,CAAA;UAAA;UAAAV,cAAA,GAAAG,CAAA;UACA8B,kBAAA,CAAmB2B,OAAO,CAACI,KAAK;QAClC,OAAO;UAAA;UAAAhE,cAAA,GAAAU,CAAA;UAAAV,cAAA,GAAAG,CAAA;UAAA,IAAI,CAAC2D,gBAAA,EAAkB;YAAA;YAAA9D,cAAA,GAAAU,CAAA;YAAAV,cAAA,GAAAG,CAAA;YAC5B;YACA8B,kBAAA,CAAmB2B,OAAO,CAACI,KAAK;UAClC;UAAA;UAAA;YAAAhE,cAAA,GAAAU,CAAA;UAAA;QAAA;MACF;MAAA;MAAA;QAAAV,cAAA,GAAAU,CAAA;MAAA;MAEA,MAAMuD,UAAA;MAAA;MAAA,CAAAjE,cAAA,GAAAG,CAAA,QAAa,IAAI+D,eAAA;MAAA;MAAAlE,cAAA,GAAAG,CAAA;MACtB8D,UAAA,CAAmBF,UAAU,GAAGN,SAAA;MAAA;MAAAzD,cAAA,GAAAG,CAAA;MACjC8B,kBAAA,CAAmB2B,OAAO,GAAGK,UAAA;MAE7B;MACA,MAAME,cAAA;MAAA;MAAA,CAAAnE,cAAA,GAAAG,CAAA,QAAiB,CAAC;QAAA;QAAAH,cAAA,GAAAC,CAAA;QAAAD,cAAA,GAAAG,CAAA;QACtB,IAAI;UACF,MAAMc,GAAA;UAAA;UAAA,CAAAjB,cAAA,GAAAG,CAAA,QAAML,WAAA,CAAYC,OAAA;UAAA;UAAAC,cAAA,GAAAG,CAAA;UAExB,IAAIsC,OAAA,CAAQC,GAAG,CAACC,QAAQ,KAAK,eAAe;YAAA;YAAA3C,cAAA,GAAAU,CAAA;YAAAV,cAAA,GAAAG,CAAA;YAC1CyC,OAAA,CAAQC,GAAG,CAAC,kCAAkC;cAAE5B,GAAA;cAAKlB;YAAQ;UAC/D;UAAA;UAAA;YAAAC,cAAA,GAAAU,CAAA;UAAA;UAEA,MAAM0D,QAAA;UAAA;UAAA,CAAApE,cAAA,GAAAG,CAAA,QAAW,MAAMa,cAAA,CAAeC,GAAA,EAAKgD,UAAA,CAAW/C,MAAM,EAAEc,OAAA,CAAQb,OAAO;UAE7E;UAAA;UAAAnB,cAAA,GAAAG,CAAA;UACA,IAAI8D,UAAA,CAAW/C,MAAM,CAAC2C,OAAO,EAAE;YAAA;YAAA7D,cAAA,GAAAU,CAAA;YAAAV,cAAA,GAAAG,CAAA;YAC7B,OAAO,IAAA2C,UAAA,CAAAC,oBAAoB,EAAC,qBAAqB;UACnD;UAAA;UAAA;YAAA/C,cAAA,GAAAU,CAAA;UAAA;UAEA;UAAAV,cAAA,GAAAG,CAAA;UACA,IAAI,CAACiE,QAAA,CAASC,EAAE,EAAE;YAAA;YAAArE,cAAA,GAAAU,CAAA;YAChB,MAAM4D,SAAA;YAAA;YAAA,CAAAtE,cAAA,GAAAG,CAAA,QAAY,MAAMiE,QAAA,CAASG,IAAI,GAAGC,KAAK,CAAC,MAAM;cAAA;cAAAxE,cAAA,GAAAC,CAAA;cAAAD,cAAA,GAAAG,CAAA;cAAA;YAAA;YAAA;YAAAH,cAAA,GAAAG,CAAA;YACpD,MAAM,IAAIsB,KAAA,CAAM,QAAQ2C,QAAA,CAASK,MAAM,KAAKH,SAAA,EAAW;UACzD;UAAA;UAAA;YAAAtE,cAAA,GAAAU,CAAA;UAAA;UAEA;UACA,IAAIgE,QAAA;UAAA;UAAA1E,cAAA,GAAAG,CAAA;UACJ,IAAI;YAAA;YAAAH,cAAA,GAAAG,CAAA;YACFuE,QAAA,GAAW,MAAMN,QAAA,CAASO,IAAI;UAChC,EAAE,OAAOC,UAAA,EAAY;YAAA;YAAA5E,cAAA,GAAAG,CAAA;YACnB,MAAM,IAAIsB,KAAA,CAAM,kCAAkCmD,UAAA,YAAsBnD,KAAA;YAAA;YAAA,CAAAzB,cAAA,GAAAU,CAAA,WAAQkE,UAAA,CAAWvB,OAAO;YAAA;YAAA,CAAArD,cAAA,GAAAU,CAAA,WAAG,kBAAiB;UACxH;UAEA;UACA,MAAMmE,iBAAA;UAAA;UAAA,CAAA7E,cAAA,GAAAG,CAAA,QAAoB,IAAA2C,UAAA,CAAAgC,sBAAsB,EAACJ,QAAA;UAAA;UAAA1E,cAAA,GAAAG,CAAA;UAEjD,IAAI,CAAC,IAAA2C,UAAA,CAAAiC,mBAAmB,EAACF,iBAAA,GAAoB;YAAA;YAAA7E,cAAA,GAAAU,CAAA;YAAAV,cAAA,GAAAG,CAAA;YAC3C,OAAO0E,iBAAA,EAAmB;UAC5B;UAAA;UAAA;YAAA7E,cAAA,GAAAU,CAAA;UAAA;UAEA;UAAAV,cAAA,GAAAG,CAAA;UACA,IAAI6B,OAAA,CAAQgB,WAAW,EAAE;YAAA;YAAAhD,cAAA,GAAAU,CAAA;YAAAV,cAAA,GAAAG,CAAA;YACvB6B,OAAA,CAAQO,KAAK,CAACyC,aAAa,CAACjF,OAAA,EAAS8E,iBAAA;UACvC;UAAA;UAAA;YAAA7E,cAAA,GAAAU,CAAA;UAAA;UAAAV,cAAA,GAAAG,CAAA;UAEA,OAAO;YACLgD,OAAA,EAAS;YACTC,IAAA,EAAMyB,iBAAA,CAAkBzB,IAAI;YAC5BC,OAAA,EAASwB,iBAAA,CAAkBxB,OAAO;YAClCC,SAAA,EAAWuB,iBAAA,CAAkBvB;UAC/B;QAEF,EAAE,OAAO2B,KAAA,EAAO;UAAA;UAAAjF,cAAA,GAAAG,CAAA;UACd,IAAI8D,UAAA,CAAW/C,MAAM,CAAC2C,OAAO,EAAE;YAAA;YAAA7D,cAAA,GAAAU,CAAA;YAAAV,cAAA,GAAAG,CAAA;YAC7B,OAAO,IAAA2C,UAAA,CAAAC,oBAAoB,EAAC,qBAAqB;UACnD;UAAA;UAAA;YAAA/C,cAAA,GAAAU,CAAA;UAAA;UAEA,MAAMwE,YAAA;UAAA;UAAA,CAAAlF,cAAA,GAAAG,CAAA,QAAe8E,KAAA,YAAiBxD,KAAA;UAAA;UAAA,CAAAzB,cAAA,GAAAU,CAAA,WAAQuE,KAAA,CAAM5B,OAAO;UAAA;UAAA,CAAArD,cAAA,GAAAU,CAAA,WAAG;UAAA;UAAAV,cAAA,GAAAG,CAAA;UAC9DyC,OAAA,CAAQqC,KAAK,CAAC,kCAAkCC,YAAA;UAAA;UAAAlF,cAAA,GAAAG,CAAA;UAEhD,OAAO,IAAA2C,UAAA,CAAAC,oBAAoB,EAACmC,YAAA,EAAc,eAAe;YACvDC,aAAA,EAAeF,KAAA;YACflF,OAAA;YACAkB,GAAA,EAAKnB,WAAA,CAAYC,OAAA;UACnB;QACF;MACF;MAEA;MAAA;MAAAC,cAAA,GAAAG,CAAA;MACA6B,OAAA,CAAQO,KAAK,CAAC6C,iBAAiB,CAACrF,OAAA,EAASoE,cAAA;MAAA;MAAAnE,cAAA,GAAAG,CAAA;MAEzC,OAAO,MAAMgE,cAAA;IAEf,EAAE,OAAOc,KAAA,EAAO;MACd,MAAMC,YAAA;MAAA;MAAA,CAAAlF,cAAA,GAAAG,CAAA,QAAe8E,KAAA,YAAiBxD,KAAA;MAAA;MAAA,CAAAzB,cAAA,GAAAU,CAAA,WAAQuE,KAAA,CAAM5B,OAAO;MAAA;MAAA,CAAArD,cAAA,GAAAU,CAAA,WAAG;MAAA;MAAAV,cAAA,GAAAG,CAAA;MAC9DyC,OAAA,CAAQqC,KAAK,CAAC,oCAAoCC,YAAA;MAAA;MAAAlF,cAAA,GAAAG,CAAA;MAElD,OAAO,IAAA2C,UAAA,CAAAC,oBAAoB,EAACmC,YAAA,EAAc,oBAAoB;QAC5DC,aAAA,EAAeF,KAAA;QACflF;MACF;IACF;EACF,GAAG,CAACiC,OAAA,CAAQ;EAEZ,MAAMqD,mBAAA;EAAA;EAAA,CAAArF,cAAA,GAAAG,CAAA,QAAsB,IAAA+B,MAAA,CAAAG,WAAW,EAAC;IAAA;IAAArC,cAAA,GAAAC,CAAA;IAAAD,cAAA,GAAAG,CAAA;IACtC;IAAI;IAAA,CAAAH,cAAA,GAAAU,CAAA,WAAAuB,kBAAA,CAAmB2B,OAAO;IAAA;IAAA,CAAA5D,cAAA,GAAAU,CAAA,WAAI,CAACuB,kBAAA,CAAmB2B,OAAO,CAAC1C,MAAM,CAAC2C,OAAO,GAAE;MAAA;MAAA7D,cAAA,GAAAU,CAAA;MAAAV,cAAA,GAAAG,CAAA;MAC5E8B,kBAAA,CAAmB2B,OAAO,CAACI,KAAK;MAAA;MAAAhE,cAAA,GAAAG,CAAA;MAEhC,IAAIsC,OAAA,CAAQC,GAAG,CAACC,QAAQ,KAAK,eAAe;QAAA;QAAA3C,cAAA,GAAAU,CAAA;QAAAV,cAAA,GAAAG,CAAA;QAC1CyC,OAAA,CAAQC,GAAG,CAAC;MACd;MAAA;MAAA;QAAA7C,cAAA,GAAAU,CAAA;MAAA;IACF;IAAA;IAAA;MAAAV,cAAA,GAAAU,CAAA;IAAA;EACF,GAAG,EAAE;EAEL,MAAM4E,mBAAA;EAAA;EAAA,CAAAtF,cAAA,GAAAG,CAAA,QAAsB,IAAA+B,MAAA,CAAAG,WAAW,EAAC;IAAA;IAAArC,cAAA,GAAAC,CAAA;IAAAD,cAAA,GAAAG,CAAA;IACtC,OAAO,2BAAAH,cAAA,GAAAU,CAAA,WAAAuB,kBAAA,CAAmB2B,OAAO,KAAK;IAAA;IAAA,CAAA5D,cAAA,GAAAU,CAAA,WAAQ,CAACuB,kBAAA,CAAmB2B,OAAO,CAAC1C,MAAM,CAAC2C,OAAO;EAC1F,GAAG,EAAE;EAAA;EAAA7D,cAAA,GAAAG,CAAA;EAEL,OAAO;IACLiC,mBAAA;IACAiD,mBAAA;IACAC;EACF;AACF","ignoreList":[]}