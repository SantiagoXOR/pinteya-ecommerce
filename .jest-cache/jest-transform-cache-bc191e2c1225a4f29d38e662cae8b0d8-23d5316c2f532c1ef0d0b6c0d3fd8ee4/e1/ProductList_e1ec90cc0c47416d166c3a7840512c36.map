{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\admin\\products\\ProductList.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState } from 'react';\r\nimport Image from 'next/image';\r\nimport { useRouter } from 'next/navigation';\r\nimport { AdminDataTable } from '../ui/AdminDataTable';\r\nimport { ProductFilters } from './ProductFilters';\r\nimport { ProductActions, ProductRowActions } from './ProductActions';\r\nimport { useProductList } from '@/hooks/admin/useProductList';\r\nimport { cn } from '@/lib/core/utils';\r\nimport { Package, AlertCircle, CheckCircle, Clock } from 'lucide-react';\r\n\r\ninterface Product {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  price: number;\r\n  stock: number;\r\n  category_id: string;\r\n  category_name?: string;\r\n  image_url?: string;\r\n  images?: {\r\n    main: string;\r\n    gallery: string[];\r\n    previews: string[];\r\n    thumbnails: string[];\r\n  };\r\n  status: 'active' | 'inactive' | 'draft';\r\n  created_at: string;\r\n  updated_at: string;\r\n}\r\n\r\ninterface ProductListProps {\r\n  className?: string;\r\n}\r\n\r\n// Status Badge Component\r\nfunction StatusBadge({ status }: { status: Product['status'] }) {\r\n  const statusConfig = {\r\n    active: {\r\n      label: 'Activo',\r\n      icon: CheckCircle,\r\n      className: 'bg-green-100 text-green-800 border-green-200'\r\n    },\r\n    inactive: {\r\n      label: 'Inactivo',\r\n      icon: AlertCircle,\r\n      className: 'bg-red-100 text-red-800 border-red-200'\r\n    },\r\n    draft: {\r\n      label: 'Borrador',\r\n      icon: Clock,\r\n      className: 'bg-yellow-100 text-yellow-800 border-yellow-200'\r\n    }\r\n  };\r\n\r\n  const config = statusConfig[status];\r\n  const Icon = config && config.icon ? config.icon : Package;\r\n\r\n  return (\r\n    <span className={cn(\r\n      \"inline-flex items-center space-x-1 px-2 py-1 text-xs font-medium rounded-full border\",\r\n      config && config.className ? config.className : 'bg-gray-100 text-gray-800 border-gray-200'\r\n    )}>\r\n      <Icon className=\"w-3 h-3\" />\r\n      <span>{config && config.label ? config.label : 'Estado'}</span>\r\n    </span>\r\n  );\r\n}\r\n\r\n// Stock Badge Component\r\nfunction StockBadge({ stock }: { stock: number }) {\r\n  if (stock === 0) {\r\n    return (\r\n      <span className=\"inline-flex items-center px-2 py-1 text-xs font-medium bg-red-100 text-red-800 rounded-full\">\r\n        Sin stock\r\n      </span>\r\n    );\r\n  }\r\n  \r\n  if (stock <= 10) {\r\n    return (\r\n      <span className=\"inline-flex items-center px-2 py-1 text-xs font-medium bg-yellow-100 text-yellow-800 rounded-full\">\r\n        Stock bajo\r\n      </span>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <span className=\"text-sm text-gray-900\">\r\n      {stock} unidades\r\n    </span>\r\n  );\r\n}\r\n\r\nexport function ProductList({ className }: ProductListProps) {\r\n  console.log('ðŸ”§ ProductList: Componente iniciado');\r\n  const router = useRouter();\r\n  const [selectedProducts, setSelectedProducts] = useState<Product[]>([]);\r\n\r\n  const {\r\n    products,\r\n    isLoading,\r\n    error\r\n  } = useProductList();\r\n\r\n  // Valores temporales para compatibilidad\r\n  const total = 53; // Total real de la base de datos\r\n  const currentPage = 1;\r\n  const currentPageSize = 25;\r\n  const params = { filters: {} };\r\n  const updateFilters = () => {};\r\n  const clearFilters = () => {};\r\n  const goToPage = () => {};\r\n  const changePageSize = () => {};\r\n  const deleteProduct = () => {};\r\n  const bulkDelete = () => {};\r\n  const isDeleting = false;\r\n  const isBulkDeleting = false;\r\n\r\n  // Table columns configuration\r\n  const columns = [\r\n    {\r\n      key: 'images',\r\n      title: 'Imagen',\r\n      width: '100px',\r\n      render: (images: any, product: Product) => {\r\n        const imageUrl = images?.main || product.image_url;\r\n        return (\r\n          <div className=\"w-16 h-16 bg-gray-100 rounded-lg overflow-hidden flex items-center justify-center shadow-sm\">\r\n            {imageUrl ? (\r\n              <Image\r\n                src={imageUrl}\r\n                alt={product.name}\r\n                width={64}\r\n                height={64}\r\n                className=\"object-cover w-full h-full\"\r\n              />\r\n            ) : (\r\n              <Package className=\"w-8 h-8 text-gray-400\" />\r\n            )}\r\n          </div>\r\n        );\r\n      }\r\n    },\r\n    {\r\n      key: 'name',\r\n      title: 'Producto',\r\n      sortable: true,\r\n      render: (name: string, product: Product) => (\r\n        <div className=\"max-w-sm\">\r\n          <div className=\"font-semibold text-gray-900 text-base mb-1\">{name}</div>\r\n          <div className=\"text-sm text-gray-600 overflow-hidden leading-relaxed\" style={{display: '-webkit-box', WebkitLineClamp: 2, WebkitBoxOrient: 'vertical'}}>\r\n            {product.description || 'Sin descripciÃ³n disponible'}\r\n          </div>\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      key: 'category_name',\r\n      title: 'CategorÃ­a',\r\n      sortable: true,\r\n      render: (categoryName: string) => (\r\n        <span className=\"text-sm text-gray-900\">\r\n          {categoryName || 'Sin categorÃ­a'}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      key: 'price',\r\n      title: 'Precio',\r\n      align: 'right' as const,\r\n      sortable: true,\r\n      render: (price: number) => (\r\n        <div className=\"text-right\">\r\n          <span className=\"font-bold text-lg text-green-600\">\r\n            ${price.toLocaleString('es-AR')}\r\n          </span>\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      key: 'stock',\r\n      title: 'Stock',\r\n      align: 'center' as const,\r\n      sortable: true,\r\n      render: (stock: number) => <StockBadge stock={stock} />\r\n    },\r\n    {\r\n      key: 'status',\r\n      title: 'Estado',\r\n      align: 'center' as const,\r\n      sortable: true,\r\n      render: (status: Product['status']) => <StatusBadge status={status} />\r\n    },\r\n    {\r\n      key: 'created_at',\r\n      title: 'Creado',\r\n      sortable: true,\r\n      render: (createdAt: string) => (\r\n        <span className=\"text-sm text-gray-500\">\r\n          {new Date(createdAt).toLocaleDateString('es-AR')}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      key: 'actions',\r\n      title: 'Acciones',\r\n      width: '60px',\r\n      render: (_: any, product: Product) => (\r\n        <ProductRowActions\r\n          product={product}\r\n          onView={(id) => router.push(`/admin/products/${id}`)}\r\n          onEdit={(id) => router.push(`/admin/products/${id}/edit`)}\r\n          onDelete={handleDeleteProduct}\r\n          onDuplicate={handleDuplicateProduct}\r\n          isLoading={isDeleting}\r\n        />\r\n      )\r\n    }\r\n  ];\r\n\r\n  // Event handlers\r\n  const handleDeleteProduct = async (productId: string) => {\r\n    const result = await deleteProduct(productId);\r\n    if (!result.success) {\r\n      // Handle error (show toast, etc.)\r\n      console.error('Error deleting product:', result.error);\r\n    }\r\n  };\r\n\r\n  const handleBulkDelete = async (productIds: string[]) => {\r\n    const result = await bulkDelete(productIds);\r\n    if (result.success) {\r\n      setSelectedProducts([]);\r\n    } else {\r\n      // Handle error\r\n      console.error('Error bulk deleting products:', result.error);\r\n    }\r\n  };\r\n\r\n  const handleDuplicateProduct = (productId: string) => {\r\n    // TODO: Implement product duplication\r\n    console.log('Duplicate product:', productId);\r\n  };\r\n\r\n  const handleCreateProduct = () => {\r\n    router.push('/admin/products/new');\r\n  };\r\n\r\n  const handleExportProducts = () => {\r\n    // TODO: Implement export functionality\r\n    console.log('Export products');\r\n  };\r\n\r\n  const handleImportProducts = () => {\r\n    // TODO: Implement import functionality\r\n    console.log('Import products');\r\n  };\r\n\r\n  const handleRowClick = (product: Product) => {\r\n    router.push(`/admin/products/${product.id}`);\r\n  };\r\n\r\n  // Pagination configuration\r\n  const paginationConfig = {\r\n    page: currentPage,\r\n    pageSize: currentPageSize,\r\n    total,\r\n    onPageChange: goToPage,\r\n    onPageSizeChange: changePageSize\r\n  };\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"bg-red-50 border border-red-200 rounded-lg p-6\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          <AlertCircle className=\"w-6 h-6 text-red-600\" />\r\n          <div>\r\n            <h3 className=\"text-lg font-medium text-red-800\">\r\n              Error al cargar productos\r\n            </h3>\r\n            <p className=\"text-red-700 mt-1\">\r\n              {error.message}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={cn(\"space-y-6\", className)}>\r\n      {/* Filters */}\r\n      <ProductFilters\r\n        filters={params.filters || {}}\r\n        onFiltersChange={updateFilters}\r\n        onClearFilters={clearFilters}\r\n        categories={[]} // TODO: Load categories from API\r\n      />\r\n\r\n      {/* Actions */}\r\n      <ProductActions\r\n        selectedProducts={selectedProducts}\r\n        onCreateProduct={handleCreateProduct}\r\n        onBulkDelete={handleBulkDelete}\r\n        onExportProducts={handleExportProducts}\r\n        onImportProducts={handleImportProducts}\r\n        isLoading={isDeleting || isBulkDeleting}\r\n      />\r\n\r\n      {/* Data Table */}\r\n      <AdminDataTable\r\n        data={Array.isArray(products) ? products : []}\r\n        columns={columns}\r\n        loading={isLoading}\r\n        pagination={paginationConfig}\r\n        selectable\r\n        onRowClick={handleRowClick}\r\n        onSelectionChange={setSelectedProducts}\r\n        className=\"shadow-sm\"\r\n      />\r\n\r\n      {/* Summary */}\r\n      {!isLoading && (\r\n        <div className=\"text-sm text-gray-600 text-center\">\r\n          Mostrando {products.length} de {total} productos\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["ProductList","StatusBadge","status","statusConfig","active","label","icon","CheckCircle","className","inactive","AlertCircle","draft","Clock","config","Icon","Package","span","cn","StockBadge","stock","console","log","router","useRouter","selectedProducts","setSelectedProducts","useState","products","isLoading","error","useProductList","total","currentPage","currentPageSize","params","filters","updateFilters","clearFilters","goToPage","changePageSize","deleteProduct","bulkDelete","isDeleting","isBulkDeleting","columns","key","title","width","render","images","product","imageUrl","main","image_url","div","Image","src","alt","name","height","sortable","style","display","WebkitLineClamp","WebkitBoxOrient","description","categoryName","align","price","toLocaleString","createdAt","Date","toLocaleDateString","_","ProductRowActions","onView","id","push","onEdit","onDelete","handleDeleteProduct","onDuplicate","handleDuplicateProduct","productId","result","success","handleBulkDelete","productIds","handleCreateProduct","handleExportProducts","handleImportProducts","handleRowClick","paginationConfig","page","pageSize","onPageChange","onPageSizeChange","h3","p","message","ProductFilters","onFiltersChange","onClearFilters","categories","ProductActions","onCreateProduct","onBulkDelete","onExportProducts","onImportProducts","AdminDataTable","data","Array","isArray","loading","pagination","selectable","onRowClick","onSelectionChange","length"],"mappings":"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"}