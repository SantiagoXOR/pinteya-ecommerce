95374d08c290a9fa521628c4f925d7d4
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_rzrzidkvj() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\test\\route.ts";
  var hash = "f0a0f39b446f5d1549db7b3f2398ab6f771d73e1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\test\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 23
        }
      },
      "6": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 38
        }
      },
      "7": {
        start: {
          line: 21,
          column: 20
        },
        end: {
          line: 21,
          column: 52
        }
      },
      "8": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 24
        }
      },
      "9": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 63,
          column: 5
        }
      },
      "10": {
        start: {
          line: 26,
          column: 28
        },
        end: {
          line: 26,
          column: 64
        }
      },
      "11": {
        start: {
          line: 27,
          column: 28
        },
        end: {
          line: 27,
          column: 69
        }
      },
      "12": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 30,
          column: 9
        }
      },
      "13": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 80
        }
      },
      "14": {
        start: {
          line: 31,
          column: 25
        },
        end: {
          line: 31,
          column: 80
        }
      },
      "15": {
        start: {
          line: 33,
          column: 57
        },
        end: {
          line: 33,
          column: 110
        }
      },
      "16": {
        start: {
          line: 34,
          column: 61
        },
        end: {
          line: 34,
          column: 116
        }
      },
      "17": {
        start: {
          line: 35,
          column: 24
        },
        end: {
          line: 43,
          column: 9
        }
      },
      "18": {
        start: {
          line: 44,
          column: 26
        },
        end: {
          line: 44,
          column: 135
        }
      },
      "19": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 52,
          column: 11
        }
      },
      "20": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 58
        }
      },
      "21": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 62,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 19
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "GET",
        decl: {
          start: {
            line: 23,
            column: 15
          },
          end: {
            line: 23,
            column: 18
          }
        },
        loc: {
          start: {
            line: 23,
            column: 28
          },
          end: {
            line: 64,
            column: 1
          }
        },
        line: 23
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 30,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 30,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "1": {
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 24
          }
        }, {
          start: {
            line: 28,
            column: 28
          },
          end: {
            line: 28,
            column: 40
          }
        }],
        line: 28
      },
      "2": {
        loc: {
          start: {
            line: 38,
            column: 18
          },
          end: {
            line: 38,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 18
          },
          end: {
            line: 38,
            column: 32
          }
        }, {
          start: {
            line: 38,
            column: 36
          },
          end: {
            line: 38,
            column: 52
          }
        }],
        line: 38
      },
      "3": {
        loc: {
          start: {
            line: 44,
            column: 26
          },
          end: {
            line: 44,
            column: 135
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 26
          },
          end: {
            line: 44,
            column: 44
          }
        }, {
          start: {
            line: 44,
            column: 48
          },
          end: {
            line: 44,
            column: 71
          }
        }, {
          start: {
            line: 44,
            column: 75
          },
          end: {
            line: 44,
            column: 87
          }
        }, {
          start: {
            line: 44,
            column: 91
          },
          end: {
            line: 44,
            column: 135
          }
        }],
        line: 44
      },
      "4": {
        loc: {
          start: {
            line: 47,
            column: 21
          },
          end: {
            line: 47,
            column: 98
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 47,
            column: 33
          },
          end: {
            line: 47,
            column: 71
          }
        }, {
          start: {
            line: 47,
            column: 74
          },
          end: {
            line: 47,
            column: 98
          }
        }],
        line: 47
      },
      "5": {
        loc: {
          start: {
            line: 51,
            column: 20
          },
          end: {
            line: 51,
            column: 41
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 51,
            column: 32
          },
          end: {
            line: 51,
            column: 35
          }
        }, {
          start: {
            line: 51,
            column: 38
          },
          end: {
            line: 51,
            column: 41
          }
        }],
        line: 51
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\test\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - API DE TESTING\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { createClient } from '@supabase/supabase-js';\r\n\r\n// ===================================\r\n// GET /api/test - Ejecutar tests de conexi\xF3n\r\n// ===================================\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n\r\n    // Test b\xE1sico de conexi\xF3n a Supabase\r\n    const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;\r\n    const supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!;\r\n\r\n    if (!supabaseUrl || !supabaseKey) {\r\n      throw new Error('Variables de entorno de Supabase no configuradas');\r\n    }\r\n\r\n    const supabase = createClient(supabaseUrl, supabaseKey);\r\n\r\n    // Test de conexi\xF3n b\xE1sica\r\n    const { data: products, error: productsError } = await supabase\r\n      .from('products')\r\n      .select('id')\r\n      .limit(1);\r\n\r\n    const { data: categories, error: categoriesError } = await supabase\r\n      .from('categories')\r\n      .select('id')\r\n      .limit(1);\r\n\r\n    const results = {\r\n      connection: !productsError,\r\n      adminConnection: !categoriesError,\r\n      crud: !productsError && !categoriesError,\r\n      tables: {\r\n        products: !productsError,\r\n        categories: !categoriesError,\r\n      }\r\n    };\r\n\r\n    const allPassed = results.connection &&\r\n                     results.adminConnection &&\r\n                     results.crud &&\r\n                     Object.values(results.tables).every(Boolean);\r\n\r\n    return NextResponse.json({\r\n      success: allPassed,\r\n      message: allPassed ? 'Todos los tests pasaron exitosamente' : 'Algunos tests fallaron',\r\n      results,\r\n      timestamp: new Date().toISOString(),\r\n    }, {\r\n      status: allPassed ? 200 : 500\r\n    });\r\n\r\n  } catch (error: any) {\r\n    console.error('\u274C Error ejecutando tests:', error);\r\n\r\n    return NextResponse.json({\r\n      success: false,\r\n      message: 'Error ejecutando tests',\r\n      error: error.message,\r\n      timestamp: new Date().toISOString(),\r\n    }, {\r\n      status: 500\r\n    });\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "runtime", "request", "supabaseUrl", "process", "env", "NEXT_PUBLIC_SUPABASE_URL", "supabaseKey", "NEXT_PUBLIC_SUPABASE_ANON_KEY", "Error", "supabase", "createClient", "data", "products", "error", "productsError", "from", "select", "limit", "categories", "categoriesError", "results", "connection", "adminConnection", "crud", "tables", "allPassed", "Object", "values", "every", "Boolean", "NextResponse", "json", "success", "message", "timestamp", "Date", "toISOString", "status", "console"],
      mappings: "AAAA,qCAAqC;;;;;;;;;;;;QAafA;eAAAA;;QAZTC;eAAAA;;;wBAM6B;4BACb;AAPtB,MAAMA,UAAU;AAYhB,eAAeD,IAAIE,OAAoB;IAC5C,IAAI;QAEF,qCAAqC;QACrC,MAAMC,cAAcC,QAAQC,GAAG,CAACC,wBAAwB;QACxD,MAAMC,cAAcH,QAAQC,GAAG,CAACG,6BAA6B;QAE7D,IAAI,CAACL,eAAe,CAACI,aAAa;YAChC,MAAM,IAAIE,MAAM;QAClB;QAEA,MAAMC,WAAWC,IAAAA,wBAAY,EAACR,aAAaI;QAE3C,0BAA0B;QAC1B,MAAM,EAAEK,MAAMC,QAAQ,EAAEC,OAAOC,aAAa,EAAE,GAAG,MAAML,SACpDM,IAAI,CAAC,YACLC,MAAM,CAAC,MACPC,KAAK,CAAC;QAET,MAAM,EAAEN,MAAMO,UAAU,EAAEL,OAAOM,eAAe,EAAE,GAAG,MAAMV,SACxDM,IAAI,CAAC,cACLC,MAAM,CAAC,MACPC,KAAK,CAAC;QAET,MAAMG,UAAU;YACdC,YAAY,CAACP;YACbQ,iBAAiB,CAACH;YAClBI,MAAM,CAACT,iBAAiB,CAACK;YACzBK,QAAQ;gBACNZ,UAAU,CAACE;gBACXI,YAAY,CAACC;YACf;QACF;QAEA,MAAMM,YAAYL,QAAQC,UAAU,IACnBD,QAAQE,eAAe,IACvBF,QAAQG,IAAI,IACZG,OAAOC,MAAM,CAACP,QAAQI,MAAM,EAAEI,KAAK,CAACC;QAErD,OAAOC,oBAAY,CAACC,IAAI,CAAC;YACvBC,SAASP;YACTQ,SAASR,YAAY,yCAAyC;YAC9DL;YACAc,WAAW,IAAIC,OAAOC,WAAW;QACnC,GAAG;YACDC,QAAQZ,YAAY,MAAM;QAC5B;IAEF,EAAE,OAAOZ,OAAY;QACnByB,QAAQzB,KAAK,CAAC,6BAA6BA;QAE3C,OAAOiB,oBAAY,CAACC,IAAI,CAAC;YACvBC,SAAS;YACTC,SAAS;YACTpB,OAAOA,MAAMoB,OAAO;YACpBC,WAAW,IAAIC,OAAOC,WAAW;QACnC,GAAG;YACDC,QAAQ;QACV;IACF;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f0a0f39b446f5d1549db7b3f2398ab6f771d73e1"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_rzrzidkvj = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_rzrzidkvj();
cov_rzrzidkvj().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_rzrzidkvj().f[0]++;
  cov_rzrzidkvj().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_rzrzidkvj().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_rzrzidkvj().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_rzrzidkvj().f[1]++;
    cov_rzrzidkvj().s[4]++;
    return GET;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_rzrzidkvj().f[2]++;
    cov_rzrzidkvj().s[5]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_rzrzidkvj().s[6]++, require("next/server"));
const _supabasejs =
/* istanbul ignore next */
(cov_rzrzidkvj().s[7]++, require("@supabase/supabase-js"));
const runtime =
/* istanbul ignore next */
(cov_rzrzidkvj().s[8]++, 'nodejs');
async function GET(request) {
  /* istanbul ignore next */
  cov_rzrzidkvj().f[3]++;
  cov_rzrzidkvj().s[9]++;
  try {
    // Test bÃ¡sico de conexiÃ³n a Supabase
    const supabaseUrl =
    /* istanbul ignore next */
    (cov_rzrzidkvj().s[10]++, process.env.NEXT_PUBLIC_SUPABASE_URL);
    const supabaseKey =
    /* istanbul ignore next */
    (cov_rzrzidkvj().s[11]++, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY);
    /* istanbul ignore next */
    cov_rzrzidkvj().s[12]++;
    if (
    /* istanbul ignore next */
    (cov_rzrzidkvj().b[1][0]++, !supabaseUrl) ||
    /* istanbul ignore next */
    (cov_rzrzidkvj().b[1][1]++, !supabaseKey)) {
      /* istanbul ignore next */
      cov_rzrzidkvj().b[0][0]++;
      cov_rzrzidkvj().s[13]++;
      throw new Error('Variables de entorno de Supabase no configuradas');
    } else
    /* istanbul ignore next */
    {
      cov_rzrzidkvj().b[0][1]++;
    }
    const supabase =
    /* istanbul ignore next */
    (cov_rzrzidkvj().s[14]++, (0, _supabasejs.createClient)(supabaseUrl, supabaseKey));
    // Test de conexiÃ³n bÃ¡sica
    const {
      data: products,
      error: productsError
    } =
    /* istanbul ignore next */
    (cov_rzrzidkvj().s[15]++, await supabase.from('products').select('id').limit(1));
    const {
      data: categories,
      error: categoriesError
    } =
    /* istanbul ignore next */
    (cov_rzrzidkvj().s[16]++, await supabase.from('categories').select('id').limit(1));
    const results =
    /* istanbul ignore next */
    (cov_rzrzidkvj().s[17]++, {
      connection: !productsError,
      adminConnection: !categoriesError,
      crud:
      /* istanbul ignore next */
      (cov_rzrzidkvj().b[2][0]++, !productsError) &&
      /* istanbul ignore next */
      (cov_rzrzidkvj().b[2][1]++, !categoriesError),
      tables: {
        products: !productsError,
        categories: !categoriesError
      }
    });
    const allPassed =
    /* istanbul ignore next */
    (cov_rzrzidkvj().s[18]++,
    /* istanbul ignore next */
    (cov_rzrzidkvj().b[3][0]++, results.connection) &&
    /* istanbul ignore next */
    (cov_rzrzidkvj().b[3][1]++, results.adminConnection) &&
    /* istanbul ignore next */
    (cov_rzrzidkvj().b[3][2]++, results.crud) &&
    /* istanbul ignore next */
    (cov_rzrzidkvj().b[3][3]++, Object.values(results.tables).every(Boolean)));
    /* istanbul ignore next */
    cov_rzrzidkvj().s[19]++;
    return _server.NextResponse.json({
      success: allPassed,
      message: allPassed ?
      /* istanbul ignore next */
      (cov_rzrzidkvj().b[4][0]++, 'Todos los tests pasaron exitosamente') :
      /* istanbul ignore next */
      (cov_rzrzidkvj().b[4][1]++, 'Algunos tests fallaron'),
      results,
      timestamp: new Date().toISOString()
    }, {
      status: allPassed ?
      /* istanbul ignore next */
      (cov_rzrzidkvj().b[5][0]++, 200) :
      /* istanbul ignore next */
      (cov_rzrzidkvj().b[5][1]++, 500)
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_rzrzidkvj().s[20]++;
    console.error('â Error ejecutando tests:', error);
    /* istanbul ignore next */
    cov_rzrzidkvj().s[21]++;
    return _server.NextResponse.json({
      success: false,
      message: 'Error ejecutando tests',
      error: error.message,
      timestamp: new Date().toISOString()
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,