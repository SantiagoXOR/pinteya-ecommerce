4d2e6c0905e8e0ac99708236770318c1
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_18ez0roro2() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\orders-simple\\route.ts";
  var hash = "5ca1bf6b3d25892ae2c006a97d0ce0adef8f04e4";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\orders-simple\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 20
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 23
        }
      },
      "7": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "8": {
        start: {
          line: 24,
          column: 20
        },
        end: {
          line: 24,
          column: 52
        }
      },
      "9": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 24
        }
      },
      "10": {
        start: {
          line: 29,
          column: 17
        },
        end: {
          line: 29,
          column: 123
        }
      },
      "11": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 43,
          column: 5
        }
      },
      "12": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 42,
          column: 10
        }
      },
      "13": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 47,
          column: 6
        }
      },
      "14": {
        start: {
          line: 50,
          column: 22
        },
        end: {
          line: 50,
          column: 32
        }
      },
      "15": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 211,
          column: 5
        }
      },
      "16": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 68
        }
      },
      "17": {
        start: {
          line: 54,
          column: 27
        },
        end: {
          line: 54,
          column: 53
        }
      },
      "18": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 61,
          column: 9
        }
      },
      "19": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 60,
          column: 15
        }
      },
      "20": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 67
        }
      },
      "21": {
        start: {
          line: 64,
          column: 33
        },
        end: {
          line: 64,
          column: 53
        }
      },
      "22": {
        start: {
          line: 65,
          column: 21
        },
        end: {
          line: 65,
          column: 62
        }
      },
      "23": {
        start: {
          line: 66,
          column: 22
        },
        end: {
          line: 66,
          column: 65
        }
      },
      "24": {
        start: {
          line: 67,
          column: 23
        },
        end: {
          line: 67,
          column: 49
        }
      },
      "25": {
        start: {
          line: 68,
          column: 23
        },
        end: {
          line: 68,
          column: 49
        }
      },
      "26": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 74,
          column: 11
        }
      },
      "27": {
        start: {
          line: 76,
          column: 20
        },
        end: {
          line: 88,
          column: 10
        }
      },
      "28": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 92,
          column: 9
        }
      },
      "29": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 91,
          column: 47
        }
      },
      "30": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 95,
          column: 9
        }
      },
      "31": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 94,
          column: 95
        }
      },
      "32": {
        start: {
          line: 97,
          column: 21
        },
        end: {
          line: 97,
          column: 39
        }
      },
      "33": {
        start: {
          line: 98,
          column: 19
        },
        end: {
          line: 98,
          column: 35
        }
      },
      "34": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 99,
          column: 38
        }
      },
      "35": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 103,
          column: 11
        }
      },
      "36": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 104,
          column: 66
        }
      },
      "37": {
        start: {
          line: 106,
          column: 60
        },
        end: {
          line: 106,
          column: 71
        }
      },
      "38": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 110,
          column: 9
        }
      },
      "39": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 80
        }
      },
      "40": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 30
        }
      },
      "41": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 111,
          column: 103
        }
      },
      "42": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 113,
          column: 78
        }
      },
      "43": {
        start: {
          line: 114,
          column: 24
        },
        end: {
          line: 114,
          column: 81
        }
      },
      "44": {
        start: {
          line: 114,
          column: 45
        },
        end: {
          line: 114,
          column: 58
        }
      },
      "45": {
        start: {
          line: 115,
          column: 27
        },
        end: {
          line: 115,
          column: 29
        }
      },
      "46": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 124,
          column: 9
        }
      },
      "47": {
        start: {
          line: 117,
          column: 61
        },
        end: {
          line: 117,
          column: 158
        }
      },
      "48": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 123,
          column: 13
        }
      },
      "49": {
        start: {
          line: 119,
          column: 16
        },
        end: {
          line: 119,
          column: 40
        }
      },
      "50": {
        start: {
          line: 120,
          column: 16
        },
        end: {
          line: 120,
          column: 102
        }
      },
      "51": {
        start: {
          line: 122,
          column: 16
        },
        end: {
          line: 122,
          column: 96
        }
      },
      "52": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 126,
          column: 73
        }
      },
      "53": {
        start: {
          line: 127,
          column: 55
        },
        end: {
          line: 127,
          column: 108
        }
      },
      "54": {
        start: {
          line: 128,
          column: 20
        },
        end: {
          line: 137,
          column: 9
        }
      },
      "55": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 149,
          column: 9
        }
      },
      "56": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 148,
          column: 14
        }
      },
      "57": {
        start: {
          line: 141,
          column: 53
        },
        end: {
          line: 141,
          column: 75
        }
      },
      "58": {
        start: {
          line: 142,
          column: 55
        },
        end: {
          line: 142,
          column: 79
        }
      },
      "59": {
        start: {
          line: 143,
          column: 53
        },
        end: {
          line: 143,
          column: 75
        }
      },
      "60": {
        start: {
          line: 144,
          column: 55
        },
        end: {
          line: 144,
          column: 79
        }
      },
      "61": {
        start: {
          line: 145,
          column: 55
        },
        end: {
          line: 145,
          column: 79
        }
      },
      "62": {
        start: {
          line: 146,
          column: 57
        },
        end: {
          line: 146,
          column: 77
        }
      },
      "63": {
        start: {
          line: 147,
          column: 85
        },
        end: {
          line: 147,
          column: 105
        }
      },
      "64": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 150,
          column: 78
        }
      },
      "65": {
        start: {
          line: 152,
          column: 32
        },
        end: {
          line: 170,
          column: 16
        }
      },
      "66": {
        start: {
          line: 154,
          column: 32
        },
        end: {
          line: 154,
          column: 90
        }
      },
      "67": {
        start: {
          line: 154,
          column: 61
        },
        end: {
          line: 154,
          column: 89
        }
      },
      "68": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 169,
          column: 14
        }
      },
      "69": {
        start: {
          line: 171,
          column: 29
        },
        end: {
          line: 171,
          column: 51
        }
      },
      "70": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 172,
          column: 84
        }
      },
      "71": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 197,
          column: 11
        }
      },
      "72": {
        start: {
          line: 199,
          column: 29
        },
        end: {
          line: 199,
          column: 51
        }
      },
      "73": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 200,
          column: 61
        }
      },
      "74": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 210,
          column: 11
        }
      },
      "75": {
        start: {
          line: 214,
          column: 4
        },
        end: {
          line: 249,
          column: 5
        }
      },
      "76": {
        start: {
          line: 216,
          column: 27
        },
        end: {
          line: 216,
          column: 53
        }
      },
      "77": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 223,
          column: 9
        }
      },
      "78": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 222,
          column: 15
        }
      },
      "79": {
        start: {
          line: 224,
          column: 21
        },
        end: {
          line: 224,
          column: 41
        }
      },
      "80": {
        start: {
          line: 226,
          column: 39
        },
        end: {
          line: 233,
          column: 28
        }
      },
      "81": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 236,
          column: 9
        }
      },
      "82": {
        start: {
          line: 235,
          column: 12
        },
        end: {
          line: 235,
          column: 24
        }
      },
      "83": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 240,
          column: 11
        }
      },
      "84": {
        start: {
          line: 242,
          column: 8
        },
        end: {
          line: 242,
          column: 69
        }
      },
      "85": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 248,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "validateSimpleAuth",
        decl: {
          start: {
            line: 33,
            column: 15
          },
          end: {
            line: 33,
            column: 33
          }
        },
        loc: {
          start: {
            line: 33,
            column: 36
          },
          end: {
            line: 48,
            column: 1
          }
        },
        line: 33
      },
      "5": {
        name: "GET",
        decl: {
          start: {
            line: 49,
            column: 15
          },
          end: {
            line: 49,
            column: 18
          }
        },
        loc: {
          start: {
            line: 49,
            column: 28
          },
          end: {
            line: 212,
            column: 1
          }
        },
        line: 49
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 114,
            column: 36
          },
          end: {
            line: 114,
            column: 37
          }
        },
        loc: {
          start: {
            line: 114,
            column: 45
          },
          end: {
            line: 114,
            column: 58
          }
        },
        line: 114
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 141,
            column: 48
          },
          end: {
            line: 141,
            column: 49
          }
        },
        loc: {
          start: {
            line: 141,
            column: 53
          },
          end: {
            line: 141,
            column: 75
          }
        },
        line: 141
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 142,
            column: 50
          },
          end: {
            line: 142,
            column: 51
          }
        },
        loc: {
          start: {
            line: 142,
            column: 55
          },
          end: {
            line: 142,
            column: 79
          }
        },
        line: 142
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 143,
            column: 48
          },
          end: {
            line: 143,
            column: 49
          }
        },
        loc: {
          start: {
            line: 143,
            column: 53
          },
          end: {
            line: 143,
            column: 75
          }
        },
        line: 143
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 144,
            column: 50
          },
          end: {
            line: 144,
            column: 51
          }
        },
        loc: {
          start: {
            line: 144,
            column: 55
          },
          end: {
            line: 144,
            column: 79
          }
        },
        line: 144
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 145,
            column: 50
          },
          end: {
            line: 145,
            column: 51
          }
        },
        loc: {
          start: {
            line: 145,
            column: 55
          },
          end: {
            line: 145,
            column: 79
          }
        },
        line: 145
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 146,
            column: 47
          },
          end: {
            line: 146,
            column: 48
          }
        },
        loc: {
          start: {
            line: 146,
            column: 57
          },
          end: {
            line: 146,
            column: 77
          }
        },
        line: 146
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 147,
            column: 75
          },
          end: {
            line: 147,
            column: 76
          }
        },
        loc: {
          start: {
            line: 147,
            column: 85
          },
          end: {
            line: 147,
            column: 105
          }
        },
        line: 147
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 152,
            column: 44
          },
          end: {
            line: 152,
            column: 45
          }
        },
        loc: {
          start: {
            line: 152,
            column: 53
          },
          end: {
            line: 170,
            column: 9
          }
        },
        line: 152
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 154,
            column: 50
          },
          end: {
            line: 154,
            column: 51
          }
        },
        loc: {
          start: {
            line: 154,
            column: 61
          },
          end: {
            line: 154,
            column: 89
          }
        },
        line: 154
      },
      "16": {
        name: "POST",
        decl: {
          start: {
            line: 213,
            column: 15
          },
          end: {
            line: 213,
            column: 19
          }
        },
        loc: {
          start: {
            line: 213,
            column: 29
          },
          end: {
            line: 250,
            column: 1
          }
        },
        line: 213
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "1": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 46
          }
        }, {
          start: {
            line: 35,
            column: 50
          },
          end: {
            line: 35,
            column: 84
          }
        }],
        line: 35
      },
      "2": {
        loc: {
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 61,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 61,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "3": {
        loc: {
          start: {
            line: 65,
            column: 30
          },
          end: {
            line: 65,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 30
          },
          end: {
            line: 65,
            column: 54
          }
        }, {
          start: {
            line: 65,
            column: 58
          },
          end: {
            line: 65,
            column: 61
          }
        }],
        line: 65
      },
      "4": {
        loc: {
          start: {
            line: 66,
            column: 31
          },
          end: {
            line: 66,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 66,
            column: 31
          },
          end: {
            line: 66,
            column: 56
          }
        }, {
          start: {
            line: 66,
            column: 60
          },
          end: {
            line: 66,
            column: 64
          }
        }],
        line: 66
      },
      "5": {
        loc: {
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 92,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 92,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "6": {
        loc: {
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 90,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 90,
            column: 18
          }
        }, {
          start: {
            line: 90,
            column: 22
          },
          end: {
            line: 90,
            column: 38
          }
        }],
        line: 90
      },
      "7": {
        loc: {
          start: {
            line: 93,
            column: 8
          },
          end: {
            line: 95,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 8
          },
          end: {
            line: 95,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 93
      },
      "8": {
        loc: {
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "9": {
        loc: {
          start: {
            line: 111,
            column: 60
          },
          end: {
            line: 111,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 111,
            column: 60
          },
          end: {
            line: 111,
            column: 74
          }
        }, {
          start: {
            line: 111,
            column: 78
          },
          end: {
            line: 111,
            column: 79
          }
        }],
        line: 111
      },
      "10": {
        loc: {
          start: {
            line: 114,
            column: 24
          },
          end: {
            line: 114,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 114,
            column: 24
          },
          end: {
            line: 114,
            column: 75
          }
        }, {
          start: {
            line: 114,
            column: 79
          },
          end: {
            line: 114,
            column: 81
          }
        }],
        line: 114
      },
      "11": {
        loc: {
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 124,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 124,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "12": {
        loc: {
          start: {
            line: 118,
            column: 12
          },
          end: {
            line: 123,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 118,
            column: 12
          },
          end: {
            line: 123,
            column: 13
          }
        }, {
          start: {
            line: 121,
            column: 19
          },
          end: {
            line: 123,
            column: 13
          }
        }],
        line: 118
      },
      "13": {
        loc: {
          start: {
            line: 118,
            column: 16
          },
          end: {
            line: 118,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 118,
            column: 16
          },
          end: {
            line: 118,
            column: 30
          }
        }, {
          start: {
            line: 118,
            column: 34
          },
          end: {
            line: 118,
            column: 42
          }
        }],
        line: 118
      },
      "14": {
        loc: {
          start: {
            line: 129,
            column: 25
          },
          end: {
            line: 129,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 129,
            column: 25
          },
          end: {
            line: 129,
            column: 30
          }
        }, {
          start: {
            line: 129,
            column: 34
          },
          end: {
            line: 129,
            column: 35
          }
        }],
        line: 129
      },
      "15": {
        loc: {
          start: {
            line: 138,
            column: 8
          },
          end: {
            line: 149,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 138,
            column: 8
          },
          end: {
            line: 149,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 138
      },
      "16": {
        loc: {
          start: {
            line: 138,
            column: 12
          },
          end: {
            line: 138,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 138,
            column: 12
          },
          end: {
            line: 138,
            column: 23
          }
        }, {
          start: {
            line: 138,
            column: 27
          },
          end: {
            line: 138,
            column: 36
          }
        }],
        line: 138
      },
      "17": {
        loc: {
          start: {
            line: 140,
            column: 29
          },
          end: {
            line: 140,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 140,
            column: 29
          },
          end: {
            line: 140,
            column: 34
          }
        }, {
          start: {
            line: 140,
            column: 38
          },
          end: {
            line: 140,
            column: 39
          }
        }],
        line: 140
      },
      "18": {
        loc: {
          start: {
            line: 146,
            column: 64
          },
          end: {
            line: 146,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 146,
            column: 64
          },
          end: {
            line: 146,
            column: 71
          }
        }, {
          start: {
            line: 146,
            column: 75
          },
          end: {
            line: 146,
            column: 76
          }
        }],
        line: 146
      },
      "19": {
        loc: {
          start: {
            line: 147,
            column: 35
          },
          end: {
            line: 147,
            column: 132
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 147,
            column: 58
          },
          end: {
            line: 147,
            column: 128
          }
        }, {
          start: {
            line: 147,
            column: 131
          },
          end: {
            line: 147,
            column: 132
          }
        }],
        line: 147
      },
      "20": {
        loc: {
          start: {
            line: 147,
            column: 92
          },
          end: {
            line: 147,
            column: 104
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 147,
            column: 92
          },
          end: {
            line: 147,
            column: 99
          }
        }, {
          start: {
            line: 147,
            column: 103
          },
          end: {
            line: 147,
            column: 104
          }
        }],
        line: 147
      },
      "21": {
        loc: {
          start: {
            line: 152,
            column: 32
          },
          end: {
            line: 170,
            column: 16
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 152,
            column: 32
          },
          end: {
            line: 170,
            column: 10
          }
        }, {
          start: {
            line: 170,
            column: 14
          },
          end: {
            line: 170,
            column: 16
          }
        }],
        line: 152
      },
      "22": {
        loc: {
          start: {
            line: 157,
            column: 29
          },
          end: {
            line: 157,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 157,
            column: 29
          },
          end: {
            line: 157,
            column: 53
          }
        }, {
          start: {
            line: 157,
            column: 57
          },
          end: {
            line: 157,
            column: 95
          }
        }],
        line: 157
      },
      "23": {
        loc: {
          start: {
            line: 159,
            column: 24
          },
          end: {
            line: 159,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 159,
            column: 24
          },
          end: {
            line: 159,
            column: 39
          }
        }, {
          start: {
            line: 159,
            column: 43
          },
          end: {
            line: 159,
            column: 56
          }
        }],
        line: 159
      },
      "24": {
        loc: {
          start: {
            line: 160,
            column: 26
          },
          end: {
            line: 160,
            column: 137
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 160,
            column: 40
          },
          end: {
            line: 160,
            column: 111
          }
        }, {
          start: {
            line: 160,
            column: 114
          },
          end: {
            line: 160,
            column: 137
          }
        }],
        line: 160
      },
      "25": {
        loc: {
          start: {
            line: 160,
            column: 43
          },
          end: {
            line: 160,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 160,
            column: 43
          },
          end: {
            line: 160,
            column: 65
          }
        }, {
          start: {
            line: 160,
            column: 69
          },
          end: {
            line: 160,
            column: 71
          }
        }],
        line: 160
      },
      "26": {
        loc: {
          start: {
            line: 160,
            column: 75
          },
          end: {
            line: 160,
            column: 102
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 160,
            column: 75
          },
          end: {
            line: 160,
            column: 96
          }
        }, {
          start: {
            line: 160,
            column: 100
          },
          end: {
            line: 160,
            column: 102
          }
        }],
        line: 160
      },
      "27": {
        loc: {
          start: {
            line: 161,
            column: 27
          },
          end: {
            line: 161,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 161,
            column: 27
          },
          end: {
            line: 161,
            column: 45
          }
        }, {
          start: {
            line: 161,
            column: 49
          },
          end: {
            line: 161,
            column: 70
          }
        }],
        line: 161
      },
      "28": {
        loc: {
          start: {
            line: 187,
            column: 27
          },
          end: {
            line: 187,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 187,
            column: 27
          },
          end: {
            line: 187,
            column: 32
          }
        }, {
          start: {
            line: 187,
            column: 36
          },
          end: {
            line: 187,
            column: 37
          }
        }],
        line: 187
      },
      "29": {
        loc: {
          start: {
            line: 188,
            column: 43
          },
          end: {
            line: 188,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 188,
            column: 43
          },
          end: {
            line: 188,
            column: 48
          }
        }, {
          start: {
            line: 188,
            column: 52
          },
          end: {
            line: 188,
            column: 53
          }
        }],
        line: 188
      },
      "30": {
        loc: {
          start: {
            line: 189,
            column: 51
          },
          end: {
            line: 189,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 189,
            column: 51
          },
          end: {
            line: 189,
            column: 56
          }
        }, {
          start: {
            line: 189,
            column: 60
          },
          end: {
            line: 189,
            column: 61
          }
        }],
        line: 189
      },
      "31": {
        loc: {
          start: {
            line: 203,
            column: 21
          },
          end: {
            line: 203,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 203,
            column: 46
          },
          end: {
            line: 203,
            column: 59
          }
        }, {
          start: {
            line: 203,
            column: 62
          },
          end: {
            line: 203,
            column: 77
          }
        }],
        line: 203
      },
      "32": {
        loc: {
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 223,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 223,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 217
      },
      "33": {
        loc: {
          start: {
            line: 227,
            column: 21
          },
          end: {
            line: 227,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 227,
            column: 21
          },
          end: {
            line: 227,
            column: 33
          }
        }, {
          start: {
            line: 227,
            column: 37
          },
          end: {
            line: 227,
            column: 47
          }
        }],
        line: 227
      },
      "34": {
        loc: {
          start: {
            line: 228,
            column: 20
          },
          end: {
            line: 228,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 228,
            column: 20
          },
          end: {
            line: 228,
            column: 31
          }
        }, {
          start: {
            line: 228,
            column: 35
          },
          end: {
            line: 228,
            column: 44
          }
        }],
        line: 228
      },
      "35": {
        loc: {
          start: {
            line: 229,
            column: 19
          },
          end: {
            line: 229,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 229,
            column: 19
          },
          end: {
            line: 229,
            column: 29
          }
        }, {
          start: {
            line: 229,
            column: 33
          },
          end: {
            line: 229,
            column: 34
          }
        }],
        line: 229
      },
      "36": {
        loc: {
          start: {
            line: 230,
            column: 24
          },
          end: {
            line: 230,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 230,
            column: 24
          },
          end: {
            line: 230,
            column: 39
          }
        }, {
          start: {
            line: 230,
            column: 43
          },
          end: {
            line: 230,
            column: 56
          }
        }],
        line: 230
      },
      "37": {
        loc: {
          start: {
            line: 231,
            column: 30
          },
          end: {
            line: 231,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 231,
            column: 30
          },
          end: {
            line: 231,
            column: 51
          }
        }, {
          start: {
            line: 231,
            column: 55
          },
          end: {
            line: 231,
            column: 57
          }
        }],
        line: 231
      },
      "38": {
        loc: {
          start: {
            line: 232,
            column: 32
          },
          end: {
            line: 232,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 232,
            column: 32
          },
          end: {
            line: 232,
            column: 55
          }
        }, {
          start: {
            line: 232,
            column: 59
          },
          end: {
            line: 232,
            column: 78
          }
        }],
        line: 232
      },
      "39": {
        loc: {
          start: {
            line: 234,
            column: 8
          },
          end: {
            line: 236,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 8
          },
          end: {
            line: 236,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 234
      },
      "40": {
        loc: {
          start: {
            line: 245,
            column: 21
          },
          end: {
            line: 245,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 245,
            column: 46
          },
          end: {
            line: 245,
            column: 59
          }
        }, {
          start: {
            line: 245,
            column: 62
          },
          end: {
            line: 245,
            column: 77
          }
        }],
        line: 245
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\orders-simple\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// =====================================================\r\n// API: \xD3RDENES ADMIN SIMPLIFICADA (DESARROLLO)\r\n// Descripci\xF3n: Versi\xF3n simplificada sin Redis ni m\xE9tricas complejas\r\n// =====================================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { createClient } from '@supabase/supabase-js';\r\n\r\n// =====================================================\r\n// CONFIGURACI\xD3N SIMPLIFICADA\r\n// =====================================================\r\n\r\nconst supabase = createClient(\r\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\r\n  process.env.SUPABASE_SERVICE_ROLE_KEY!\r\n);\r\n\r\n// =====================================================\r\n// VALIDACI\xD3N DE AUTH SIMPLIFICADA\r\n// =====================================================\r\n\r\nasync function validateSimpleAuth() {\r\n  // En desarrollo, permitir acceso directo\r\n  if (process.env.NODE_ENV === 'development' && process.env.BYPASS_AUTH === 'true') {\r\n    return { \r\n      success: true, \r\n      user: { \r\n        id: 'dev-admin', \r\n        email: 'santiago@xor.com.ar' \r\n      } \r\n    };\r\n  }\r\n  \r\n  return { success: false, error: 'No autorizado' };\r\n}\r\n\r\n// =====================================================\r\n// HANDLER GET - LISTAR \xD3RDENES\r\n// =====================================================\r\n\r\nexport async function GET(request: NextRequest) {\r\n  const startTime = Date.now();\r\n  \r\n  try {\r\n    console.log('\uD83D\uDD0D [Orders Simple API] Iniciando GET request');\r\n    \r\n    // Validar autenticaci\xF3n\r\n    const authResult = await validateSimpleAuth();\r\n    if (!authResult.success) {\r\n      return NextResponse.json(\r\n        { error: authResult.error },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    console.log('\u2705 [Orders Simple API] Autenticaci\xF3n exitosa');\r\n\r\n    // Obtener par\xE1metros de query\r\n    const { searchParams } = new URL(request.url);\r\n    const page = parseInt(searchParams.get('page') || '1');\r\n    const limit = parseInt(searchParams.get('limit') || '10');\r\n    const status = searchParams.get('status');\r\n    const search = searchParams.get('search');\r\n\r\n    console.log('\uD83D\uDCCB [Orders Simple API] Par\xE1metros:', { page, limit, status, search });\r\n\r\n    // Construir query base (sin join autom\xE1tico)\r\n    let query = supabase\r\n      .from('orders')\r\n      .select(`\r\n        id,\r\n        user_id,\r\n        status,\r\n        total,\r\n        payment_id,\r\n        shipping_address,\r\n        external_reference,\r\n        created_at,\r\n        updated_at\r\n      `, { count: 'exact' });\r\n\r\n    // Aplicar filtros\r\n    if (status && status !== 'all') {\r\n      query = query.eq('status', status);\r\n    }\r\n\r\n    if (search) {\r\n      query = query.or(`external_reference.ilike.%${search}%,user_id.ilike.%${search}%`);\r\n    }\r\n\r\n    // Aplicar paginaci\xF3n\r\n    const from = (page - 1) * limit;\r\n    const to = from + limit - 1;\r\n    query = query.range(from, to);\r\n\r\n    // Ordenar por fecha de creaci\xF3n (m\xE1s recientes primero)\r\n    query = query.order('created_at', { ascending: false });\r\n\r\n    console.log('\uD83D\uDD0D [Orders Simple API] Ejecutando query...');\r\n\r\n    // Ejecutar query\r\n    const { data: orders, error: ordersError, count } = await query;\r\n\r\n    if (ordersError) {\r\n      console.error('\u274C [Orders Simple API] Error en query:', ordersError);\r\n      throw ordersError;\r\n    }\r\n\r\n    console.log(`\u2705 [Orders Simple API] Query exitosa: ${orders?.length || 0} \xF3rdenes encontradas`);\r\n\r\n    // Obtener datos de usuarios para hacer join manual\r\n    console.log('\uD83D\uDC65 [Orders Simple API] Obteniendo datos de usuarios...');\r\n\r\n    const userIds = orders?.map(order => order.user_id).filter(Boolean) || [];\r\n    let userProfiles = [];\r\n\r\n    if (userIds.length > 0) {\r\n      const { data: profiles, error: profilesError } = await supabase\r\n        .from('user_profiles')\r\n        .select('id, email, first_name, last_name')\r\n        .in('id', userIds);\r\n\r\n      if (!profilesError && profiles) {\r\n        userProfiles = profiles;\r\n        console.log(`\u2705 [Orders Simple API] ${profiles.length} perfiles de usuario obtenidos`);\r\n      } else {\r\n        console.log('\u26A0\uFE0F [Orders Simple API] Error obteniendo perfiles:', profilesError);\r\n      }\r\n    }\r\n\r\n    // Calcular estad\xEDsticas b\xE1sicas\r\n    console.log('\uD83D\uDCCA [Orders Simple API] Calculando estad\xEDsticas...');\r\n    \r\n    const { data: statsData, error: statsError } = await supabase\r\n      .from('orders')\r\n      .select('status, total');\r\n\r\n    let stats = {\r\n      totalOrders: count || 0,\r\n      pendingOrders: 0,\r\n      confirmedOrders: 0,\r\n      shippedOrders: 0,\r\n      deliveredOrders: 0,\r\n      cancelledOrders: 0,\r\n      totalRevenue: 0,\r\n      averageOrderValue: 0\r\n    };\r\n\r\n    if (!statsError && statsData) {\r\n      stats = {\r\n        totalOrders: count || 0,\r\n        pendingOrders: statsData.filter(o => o.status === 'pending').length,\r\n        confirmedOrders: statsData.filter(o => o.status === 'confirmed').length,\r\n        shippedOrders: statsData.filter(o => o.status === 'shipped').length,\r\n        deliveredOrders: statsData.filter(o => o.status === 'delivered').length,\r\n        cancelledOrders: statsData.filter(o => o.status === 'cancelled').length,\r\n        totalRevenue: statsData.reduce((sum, o) => sum + (o.total || 0), 0),\r\n        averageOrderValue: statsData.length > 0 ? statsData.reduce((sum, o) => sum + (o.total || 0), 0) / statsData.length : 0\r\n      };\r\n    }\r\n\r\n    console.log('\uD83D\uDCCA [Orders Simple API] Estad\xEDsticas calculadas:', stats);\r\n\r\n    // Formatear respuesta con join manual\r\n    const formattedOrders = orders?.map(order => {\r\n      // Buscar el perfil de usuario correspondiente\r\n      const userProfile = userProfiles.find(profile => profile.id === order.user_id);\r\n\r\n      return {\r\n        id: order.id,\r\n        orderNumber: order.external_reference || `ORD-${order.id.toString().slice(-8)}`,\r\n        customer: {\r\n          id: userProfile?.id || order.user_id,\r\n          name: userProfile ? `${userProfile.first_name || ''} ${userProfile.last_name || ''}`.trim() : 'Usuario no encontrado',\r\n          email: userProfile?.email || 'Email no disponible'\r\n        },\r\n        status: order.status,\r\n        total: order.total,\r\n        paymentId: order.payment_id,\r\n        shippingAddress: order.shipping_address,\r\n        createdAt: order.created_at,\r\n        updatedAt: order.updated_at\r\n      };\r\n    }) || [];\r\n\r\n    const responseTime = Date.now() - startTime;\r\n    \r\n    console.log(`\u2705 [Orders Simple API] Respuesta exitosa en ${responseTime}ms`);\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: {\r\n        orders: formattedOrders,\r\n        analytics: {\r\n          total_orders: stats.totalOrders,\r\n          pending_orders: stats.pendingOrders,\r\n          completed_orders: stats.confirmedOrders + stats.deliveredOrders,\r\n          total_revenue: stats.totalRevenue,\r\n          today_revenue: 0 // Placeholder, se puede calcular despu\xE9s\r\n        },\r\n        pagination: {\r\n          page,\r\n          limit,\r\n          total: count || 0,\r\n          totalPages: Math.ceil((count || 0) / limit),\r\n          hasNextPage: page < Math.ceil((count || 0) / limit),\r\n          hasPreviousPage: page > 1\r\n        }\r\n      },\r\n      meta: {\r\n        responseTime,\r\n        timestamp: new Date().toISOString()\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    const responseTime = Date.now() - startTime;\r\n    \r\n    console.error('\u274C [Orders Simple API] Error:', error);\r\n\r\n    return NextResponse.json(\r\n      { \r\n        error: 'Error interno del servidor',\r\n        details: error instanceof Error ? error.message : 'Unknown error',\r\n        meta: {\r\n          responseTime,\r\n          timestamp: new Date().toISOString()\r\n        }\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// =====================================================\r\n// HANDLER POST - CREAR ORDEN (SIMPLIFICADO)\r\n// =====================================================\r\n\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    // Validar autenticaci\xF3n\r\n    const authResult = await validateSimpleAuth();\r\n    if (!authResult.success) {\r\n      return NextResponse.json(\r\n        { error: authResult.error },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    const body = await request.json();\r\n    \r\n    // Crear orden b\xE1sica\r\n    const { data: order, error } = await supabase\r\n      .from('orders')\r\n      .insert({\r\n        user_id: body.user_id || 'dev-user',\r\n        status: body.status || 'pending',\r\n        total: body.total || 0,\r\n        payment_id: body.payment_id || 'dev-payment',\r\n        shipping_address: body.shipping_address || {},\r\n        external_reference: body.external_reference || `DEV-${Date.now()}`\r\n      })\r\n      .select()\r\n      .single();\r\n\r\n    if (error) {\r\n      throw error;\r\n    }\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: order\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('\u274C [Orders Simple API] Error en POST:', error);\r\n\r\n    return NextResponse.json(\r\n      { \r\n        error: 'Error creando orden',\r\n        details: error instanceof Error ? error.message : 'Unknown error'\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "POST", "runtime", "supabase", "createClient", "process", "env", "NEXT_PUBLIC_SUPABASE_URL", "SUPABASE_SERVICE_ROLE_KEY", "validateSimpleAuth", "NODE_ENV", "BYPASS_AUTH", "success", "user", "id", "email", "error", "request", "startTime", "Date", "now", "console", "log", "authResult", "NextResponse", "json", "status", "searchParams", "URL", "url", "page", "parseInt", "get", "limit", "search", "query", "from", "select", "count", "eq", "or", "to", "range", "order", "ascending", "data", "orders", "ordersError", "length", "userIds", "map", "user_id", "filter", "Boolean", "userProfiles", "profiles", "profilesError", "in", "statsData", "statsError", "stats", "totalOrders", "pendingOrders", "confirmedOrders", "shippedOrders", "deliveredOrders", "cancelledOrders", "totalRevenue", "averageOrderValue", "o", "reduce", "sum", "total", "formattedOrders", "userProfile", "find", "profile", "orderNumber", "external_reference", "toString", "slice", "customer", "name", "first_name", "last_name", "trim", "paymentId", "payment_id", "shippingAddress", "shipping_address", "createdAt", "created_at", "updatedAt", "updated_at", "responseTime", "analytics", "total_orders", "pending_orders", "completed_orders", "total_revenue", "today_revenue", "pagination", "totalPages", "Math", "ceil", "hasNextPage", "hasPreviousPage", "meta", "timestamp", "toISOString", "details", "Error", "message", "body", "insert", "single"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5ca1bf6b3d25892ae2c006a97d0ce0adef8f04e4"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_18ez0roro2 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_18ez0roro2();
cov_18ez0roro2().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_18ez0roro2().f[0]++;
  cov_18ez0roro2().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_18ez0roro2().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_18ez0roro2().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_18ez0roro2().f[1]++;
    cov_18ez0roro2().s[4]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_18ez0roro2().f[2]++;
    cov_18ez0roro2().s[5]++;
    return POST;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_18ez0roro2().f[3]++;
    cov_18ez0roro2().s[6]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_18ez0roro2().s[7]++, require("next/server"));
const _supabasejs =
/* istanbul ignore next */
(cov_18ez0roro2().s[8]++, require("@supabase/supabase-js"));
const runtime =
/* istanbul ignore next */
(cov_18ez0roro2().s[9]++, 'nodejs');
// =====================================================
// CONFIGURACIÃN SIMPLIFICADA
// =====================================================
const supabase =
/* istanbul ignore next */
(cov_18ez0roro2().s[10]++, (0, _supabasejs.createClient)(process.env.NEXT_PUBLIC_SUPABASE_URL, process.env.SUPABASE_SERVICE_ROLE_KEY));
// =====================================================
// VALIDACIÃN DE AUTH SIMPLIFICADA
// =====================================================
async function validateSimpleAuth() {
  /* istanbul ignore next */
  cov_18ez0roro2().f[4]++;
  cov_18ez0roro2().s[11]++;
  // En desarrollo, permitir acceso directo
  if (
  /* istanbul ignore next */
  (cov_18ez0roro2().b[1][0]++, process.env.NODE_ENV === 'development') &&
  /* istanbul ignore next */
  (cov_18ez0roro2().b[1][1]++, process.env.BYPASS_AUTH === 'true')) {
    /* istanbul ignore next */
    cov_18ez0roro2().b[0][0]++;
    cov_18ez0roro2().s[12]++;
    return {
      success: true,
      user: {
        id: 'dev-admin',
        email: 'santiago@xor.com.ar'
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_18ez0roro2().b[0][1]++;
  }
  cov_18ez0roro2().s[13]++;
  return {
    success: false,
    error: 'No autorizado'
  };
}
async function GET(request) {
  /* istanbul ignore next */
  cov_18ez0roro2().f[5]++;
  const startTime =
  /* istanbul ignore next */
  (cov_18ez0roro2().s[14]++, Date.now());
  /* istanbul ignore next */
  cov_18ez0roro2().s[15]++;
  try {
    /* istanbul ignore next */
    cov_18ez0roro2().s[16]++;
    console.log('ğ [Orders Simple API] Iniciando GET request');
    // Validar autenticaciÃ³n
    const authResult =
    /* istanbul ignore next */
    (cov_18ez0roro2().s[17]++, await validateSimpleAuth());
    /* istanbul ignore next */
    cov_18ez0roro2().s[18]++;
    if (!authResult.success) {
      /* istanbul ignore next */
      cov_18ez0roro2().b[2][0]++;
      cov_18ez0roro2().s[19]++;
      return _server.NextResponse.json({
        error: authResult.error
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_18ez0roro2().b[2][1]++;
    }
    cov_18ez0roro2().s[20]++;
    console.log('â [Orders Simple API] AutenticaciÃ³n exitosa');
    // Obtener parÃ¡metros de query
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_18ez0roro2().s[21]++, new URL(request.url));
    const page =
    /* istanbul ignore next */
    (cov_18ez0roro2().s[22]++, parseInt(
    /* istanbul ignore next */
    (cov_18ez0roro2().b[3][0]++, searchParams.get('page')) ||
    /* istanbul ignore next */
    (cov_18ez0roro2().b[3][1]++, '1')));
    const limit =
    /* istanbul ignore next */
    (cov_18ez0roro2().s[23]++, parseInt(
    /* istanbul ignore next */
    (cov_18ez0roro2().b[4][0]++, searchParams.get('limit')) ||
    /* istanbul ignore next */
    (cov_18ez0roro2().b[4][1]++, '10')));
    const status =
    /* istanbul ignore next */
    (cov_18ez0roro2().s[24]++, searchParams.get('status'));
    const search =
    /* istanbul ignore next */
    (cov_18ez0roro2().s[25]++, searchParams.get('search'));
    /* istanbul ignore next */
    cov_18ez0roro2().s[26]++;
    console.log('ğ [Orders Simple API] ParÃ¡metros:', {
      page,
      limit,
      status,
      search
    });
    // Construir query base (sin join automÃ¡tico)
    let query =
    /* istanbul ignore next */
    (cov_18ez0roro2().s[27]++, supabase.from('orders').select(`
        id,
        user_id,
        status,
        total,
        payment_id,
        shipping_address,
        external_reference,
        created_at,
        updated_at
      `, {
      count: 'exact'
    }));
    // Aplicar filtros
    /* istanbul ignore next */
    cov_18ez0roro2().s[28]++;
    if (
    /* istanbul ignore next */
    (cov_18ez0roro2().b[6][0]++, status) &&
    /* istanbul ignore next */
    (cov_18ez0roro2().b[6][1]++, status !== 'all')) {
      /* istanbul ignore next */
      cov_18ez0roro2().b[5][0]++;
      cov_18ez0roro2().s[29]++;
      query = query.eq('status', status);
    } else
    /* istanbul ignore next */
    {
      cov_18ez0roro2().b[5][1]++;
    }
    cov_18ez0roro2().s[30]++;
    if (search) {
      /* istanbul ignore next */
      cov_18ez0roro2().b[7][0]++;
      cov_18ez0roro2().s[31]++;
      query = query.or(`external_reference.ilike.%${search}%,user_id.ilike.%${search}%`);
    } else
    /* istanbul ignore next */
    {
      cov_18ez0roro2().b[7][1]++;
    }
    // Aplicar paginaciÃ³n
    const from =
    /* istanbul ignore next */
    (cov_18ez0roro2().s[32]++, (page - 1) * limit);
    const to =
    /* istanbul ignore next */
    (cov_18ez0roro2().s[33]++, from + limit - 1);
    /* istanbul ignore next */
    cov_18ez0roro2().s[34]++;
    query = query.range(from, to);
    // Ordenar por fecha de creaciÃ³n (mÃ¡s recientes primero)
    /* istanbul ignore next */
    cov_18ez0roro2().s[35]++;
    query = query.order('created_at', {
      ascending: false
    });
    /* istanbul ignore next */
    cov_18ez0roro2().s[36]++;
    console.log('ğ [Orders Simple API] Ejecutando query...');
    // Ejecutar query
    const {
      data: orders,
      error: ordersError,
      count
    } =
    /* istanbul ignore next */
    (cov_18ez0roro2().s[37]++, await query);
    /* istanbul ignore next */
    cov_18ez0roro2().s[38]++;
    if (ordersError) {
      /* istanbul ignore next */
      cov_18ez0roro2().b[8][0]++;
      cov_18ez0roro2().s[39]++;
      console.error('â [Orders Simple API] Error en query:', ordersError);
      /* istanbul ignore next */
      cov_18ez0roro2().s[40]++;
      throw ordersError;
    } else
    /* istanbul ignore next */
    {
      cov_18ez0roro2().b[8][1]++;
    }
    cov_18ez0roro2().s[41]++;
    console.log(`â [Orders Simple API] Query exitosa: ${
    /* istanbul ignore next */
    (cov_18ez0roro2().b[9][0]++, orders?.length) ||
    /* istanbul ignore next */
    (cov_18ez0roro2().b[9][1]++, 0)} Ã³rdenes encontradas`);
    // Obtener datos de usuarios para hacer join manual
    /* istanbul ignore next */
    cov_18ez0roro2().s[42]++;
    console.log('ğ¥ [Orders Simple API] Obteniendo datos de usuarios...');
    const userIds =
    /* istanbul ignore next */
    (cov_18ez0roro2().s[43]++,
    /* istanbul ignore next */
    (cov_18ez0roro2().b[10][0]++, orders?.map(order => {
      /* istanbul ignore next */
      cov_18ez0roro2().f[6]++;
      cov_18ez0roro2().s[44]++;
      return order.user_id;
    }).filter(Boolean)) ||
    /* istanbul ignore next */
    (cov_18ez0roro2().b[10][1]++, []));
    let userProfiles =
    /* istanbul ignore next */
    (cov_18ez0roro2().s[45]++, []);
    /* istanbul ignore next */
    cov_18ez0roro2().s[46]++;
    if (userIds.length > 0) {
      /* istanbul ignore next */
      cov_18ez0roro2().b[11][0]++;
      const {
        data: profiles,
        error: profilesError
      } =
      /* istanbul ignore next */
      (cov_18ez0roro2().s[47]++, await supabase.from('user_profiles').select('id, email, first_name, last_name').in('id', userIds));
      /* istanbul ignore next */
      cov_18ez0roro2().s[48]++;
      if (
      /* istanbul ignore next */
      (cov_18ez0roro2().b[13][0]++, !profilesError) &&
      /* istanbul ignore next */
      (cov_18ez0roro2().b[13][1]++, profiles)) {
        /* istanbul ignore next */
        cov_18ez0roro2().b[12][0]++;
        cov_18ez0roro2().s[49]++;
        userProfiles = profiles;
        /* istanbul ignore next */
        cov_18ez0roro2().s[50]++;
        console.log(`â [Orders Simple API] ${profiles.length} perfiles de usuario obtenidos`);
      } else {
        /* istanbul ignore next */
        cov_18ez0roro2().b[12][1]++;
        cov_18ez0roro2().s[51]++;
        console.log('â ï¸ [Orders Simple API] Error obteniendo perfiles:', profilesError);
      }
    } else
    /* istanbul ignore next */
    {
      cov_18ez0roro2().b[11][1]++;
    }
    // Calcular estadÃ­sticas bÃ¡sicas
    cov_18ez0roro2().s[52]++;
    console.log('ğ [Orders Simple API] Calculando estadÃ­sticas...');
    const {
      data: statsData,
      error: statsError
    } =
    /* istanbul ignore next */
    (cov_18ez0roro2().s[53]++, await supabase.from('orders').select('status, total'));
    let stats =
    /* istanbul ignore next */
    (cov_18ez0roro2().s[54]++, {
      totalOrders:
      /* istanbul ignore next */
      (cov_18ez0roro2().b[14][0]++, count) ||
      /* istanbul ignore next */
      (cov_18ez0roro2().b[14][1]++, 0),
      pendingOrders: 0,
      confirmedOrders: 0,
      shippedOrders: 0,
      deliveredOrders: 0,
      cancelledOrders: 0,
      totalRevenue: 0,
      averageOrderValue: 0
    });
    /* istanbul ignore next */
    cov_18ez0roro2().s[55]++;
    if (
    /* istanbul ignore next */
    (cov_18ez0roro2().b[16][0]++, !statsError) &&
    /* istanbul ignore next */
    (cov_18ez0roro2().b[16][1]++, statsData)) {
      /* istanbul ignore next */
      cov_18ez0roro2().b[15][0]++;
      cov_18ez0roro2().s[56]++;
      stats = {
        totalOrders:
        /* istanbul ignore next */
        (cov_18ez0roro2().b[17][0]++, count) ||
        /* istanbul ignore next */
        (cov_18ez0roro2().b[17][1]++, 0),
        pendingOrders: statsData.filter(o => {
          /* istanbul ignore next */
          cov_18ez0roro2().f[7]++;
          cov_18ez0roro2().s[57]++;
          return o.status === 'pending';
        }).length,
        confirmedOrders: statsData.filter(o => {
          /* istanbul ignore next */
          cov_18ez0roro2().f[8]++;
          cov_18ez0roro2().s[58]++;
          return o.status === 'confirmed';
        }).length,
        shippedOrders: statsData.filter(o => {
          /* istanbul ignore next */
          cov_18ez0roro2().f[9]++;
          cov_18ez0roro2().s[59]++;
          return o.status === 'shipped';
        }).length,
        deliveredOrders: statsData.filter(o => {
          /* istanbul ignore next */
          cov_18ez0roro2().f[10]++;
          cov_18ez0roro2().s[60]++;
          return o.status === 'delivered';
        }).length,
        cancelledOrders: statsData.filter(o => {
          /* istanbul ignore next */
          cov_18ez0roro2().f[11]++;
          cov_18ez0roro2().s[61]++;
          return o.status === 'cancelled';
        }).length,
        totalRevenue: statsData.reduce((sum, o) => {
          /* istanbul ignore next */
          cov_18ez0roro2().f[12]++;
          cov_18ez0roro2().s[62]++;
          return sum + (
          /* istanbul ignore next */
          (cov_18ez0roro2().b[18][0]++, o.total) ||
          /* istanbul ignore next */
          (cov_18ez0roro2().b[18][1]++, 0));
        }, 0),
        averageOrderValue: statsData.length > 0 ?
        /* istanbul ignore next */
        (cov_18ez0roro2().b[19][0]++, statsData.reduce((sum, o) => {
          /* istanbul ignore next */
          cov_18ez0roro2().f[13]++;
          cov_18ez0roro2().s[63]++;
          return sum + (
          /* istanbul ignore next */
          (cov_18ez0roro2().b[20][0]++, o.total) ||
          /* istanbul ignore next */
          (cov_18ez0roro2().b[20][1]++, 0));
        }, 0) / statsData.length) :
        /* istanbul ignore next */
        (cov_18ez0roro2().b[19][1]++, 0)
      };
    } else
    /* istanbul ignore next */
    {
      cov_18ez0roro2().b[15][1]++;
    }
    cov_18ez0roro2().s[64]++;
    console.log('ğ [Orders Simple API] EstadÃ­sticas calculadas:', stats);
    // Formatear respuesta con join manual
    const formattedOrders =
    /* istanbul ignore next */
    (cov_18ez0roro2().s[65]++,
    /* istanbul ignore next */
    (cov_18ez0roro2().b[21][0]++, orders?.map(order => {
      /* istanbul ignore next */
      cov_18ez0roro2().f[14]++;
      // Buscar el perfil de usuario correspondiente
      const userProfile =
      /* istanbul ignore next */
      (cov_18ez0roro2().s[66]++, userProfiles.find(profile => {
        /* istanbul ignore next */
        cov_18ez0roro2().f[15]++;
        cov_18ez0roro2().s[67]++;
        return profile.id === order.user_id;
      }));
      /* istanbul ignore next */
      cov_18ez0roro2().s[68]++;
      return {
        id: order.id,
        orderNumber:
        /* istanbul ignore next */
        (cov_18ez0roro2().b[22][0]++, order.external_reference) ||
        /* istanbul ignore next */
        (cov_18ez0roro2().b[22][1]++, `ORD-${order.id.toString().slice(-8)}`),
        customer: {
          id:
          /* istanbul ignore next */
          (cov_18ez0roro2().b[23][0]++, userProfile?.id) ||
          /* istanbul ignore next */
          (cov_18ez0roro2().b[23][1]++, order.user_id),
          name: userProfile ?
          /* istanbul ignore next */
          (cov_18ez0roro2().b[24][0]++, `${
          /* istanbul ignore next */
          (cov_18ez0roro2().b[25][0]++, userProfile.first_name) ||
          /* istanbul ignore next */
          (cov_18ez0roro2().b[25][1]++, '')} ${
          /* istanbul ignore next */
          (cov_18ez0roro2().b[26][0]++, userProfile.last_name) ||
          /* istanbul ignore next */
          (cov_18ez0roro2().b[26][1]++, '')}`.trim()) :
          /* istanbul ignore next */
          (cov_18ez0roro2().b[24][1]++, 'Usuario no encontrado'),
          email:
          /* istanbul ignore next */
          (cov_18ez0roro2().b[27][0]++, userProfile?.email) ||
          /* istanbul ignore next */
          (cov_18ez0roro2().b[27][1]++, 'Email no disponible')
        },
        status: order.status,
        total: order.total,
        paymentId: order.payment_id,
        shippingAddress: order.shipping_address,
        createdAt: order.created_at,
        updatedAt: order.updated_at
      };
    })) ||
    /* istanbul ignore next */
    (cov_18ez0roro2().b[21][1]++, []));
    const responseTime =
    /* istanbul ignore next */
    (cov_18ez0roro2().s[69]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_18ez0roro2().s[70]++;
    console.log(`â [Orders Simple API] Respuesta exitosa en ${responseTime}ms`);
    /* istanbul ignore next */
    cov_18ez0roro2().s[71]++;
    return _server.NextResponse.json({
      success: true,
      data: {
        orders: formattedOrders,
        analytics: {
          total_orders: stats.totalOrders,
          pending_orders: stats.pendingOrders,
          completed_orders: stats.confirmedOrders + stats.deliveredOrders,
          total_revenue: stats.totalRevenue,
          today_revenue: 0 // Placeholder, se puede calcular despuÃ©s
        },
        pagination: {
          page,
          limit,
          total:
          /* istanbul ignore next */
          (cov_18ez0roro2().b[28][0]++, count) ||
          /* istanbul ignore next */
          (cov_18ez0roro2().b[28][1]++, 0),
          totalPages: Math.ceil((
          /* istanbul ignore next */
          (cov_18ez0roro2().b[29][0]++, count) ||
          /* istanbul ignore next */
          (cov_18ez0roro2().b[29][1]++, 0)) / limit),
          hasNextPage: page < Math.ceil((
          /* istanbul ignore next */
          (cov_18ez0roro2().b[30][0]++, count) ||
          /* istanbul ignore next */
          (cov_18ez0roro2().b[30][1]++, 0)) / limit),
          hasPreviousPage: page > 1
        }
      },
      meta: {
        responseTime,
        timestamp: new Date().toISOString()
      }
    });
  } catch (error) {
    const responseTime =
    /* istanbul ignore next */
    (cov_18ez0roro2().s[72]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_18ez0roro2().s[73]++;
    console.error('â [Orders Simple API] Error:', error);
    /* istanbul ignore next */
    cov_18ez0roro2().s[74]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor',
      details: error instanceof Error ?
      /* istanbul ignore next */
      (cov_18ez0roro2().b[31][0]++, error.message) :
      /* istanbul ignore next */
      (cov_18ez0roro2().b[31][1]++, 'Unknown error'),
      meta: {
        responseTime,
        timestamp: new Date().toISOString()
      }
    }, {
      status: 500
    });
  }
}
async function POST(request) {
  /* istanbul ignore next */
  cov_18ez0roro2().f[16]++;
  cov_18ez0roro2().s[75]++;
  try {
    // Validar autenticaciÃ³n
    const authResult =
    /* istanbul ignore next */
    (cov_18ez0roro2().s[76]++, await validateSimpleAuth());
    /* istanbul ignore next */
    cov_18ez0roro2().s[77]++;
    if (!authResult.success) {
      /* istanbul ignore next */
      cov_18ez0roro2().b[32][0]++;
      cov_18ez0roro2().s[78]++;
      return _server.NextResponse.json({
        error: authResult.error
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_18ez0roro2().b[32][1]++;
    }
    const body =
    /* istanbul ignore next */
    (cov_18ez0roro2().s[79]++, await request.json());
    // Crear orden bÃ¡sica
    const {
      data: order,
      error
    } =
    /* istanbul ignore next */
    (cov_18ez0roro2().s[80]++, await supabase.from('orders').insert({
      user_id:
      /* istanbul ignore next */
      (cov_18ez0roro2().b[33][0]++, body.user_id) ||
      /* istanbul ignore next */
      (cov_18ez0roro2().b[33][1]++, 'dev-user'),
      status:
      /* istanbul ignore next */
      (cov_18ez0roro2().b[34][0]++, body.status) ||
      /* istanbul ignore next */
      (cov_18ez0roro2().b[34][1]++, 'pending'),
      total:
      /* istanbul ignore next */
      (cov_18ez0roro2().b[35][0]++, body.total) ||
      /* istanbul ignore next */
      (cov_18ez0roro2().b[35][1]++, 0),
      payment_id:
      /* istanbul ignore next */
      (cov_18ez0roro2().b[36][0]++, body.payment_id) ||
      /* istanbul ignore next */
      (cov_18ez0roro2().b[36][1]++, 'dev-payment'),
      shipping_address:
      /* istanbul ignore next */
      (cov_18ez0roro2().b[37][0]++, body.shipping_address) ||
      /* istanbul ignore next */
      (cov_18ez0roro2().b[37][1]++, {}),
      external_reference:
      /* istanbul ignore next */
      (cov_18ez0roro2().b[38][0]++, body.external_reference) ||
      /* istanbul ignore next */
      (cov_18ez0roro2().b[38][1]++, `DEV-${Date.now()}`)
    }).select().single());
    /* istanbul ignore next */
    cov_18ez0roro2().s[81]++;
    if (error) {
      /* istanbul ignore next */
      cov_18ez0roro2().b[39][0]++;
      cov_18ez0roro2().s[82]++;
      throw error;
    } else
    /* istanbul ignore next */
    {
      cov_18ez0roro2().b[39][1]++;
    }
    cov_18ez0roro2().s[83]++;
    return _server.NextResponse.json({
      success: true,
      data: order
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_18ez0roro2().s[84]++;
    console.error('â [Orders Simple API] Error en POST:', error);
    /* istanbul ignore next */
    cov_18ez0roro2().s[85]++;
    return _server.NextResponse.json({
      error: 'Error creando orden',
      details: error instanceof Error ?
      /* istanbul ignore next */
      (cov_18ez0roro2().b[40][0]++, error.message) :
      /* istanbul ignore next */
      (cov_18ez0roro2().b[40][1]++, 'Unknown error')
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,