aa1f13d258eea153e3204ee2f8422c07
"use client";
"use strict";

/* istanbul ignore next */
function cov_1uhltqlpy4() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useCategoryFilters.ts";
  var hash = "7e4624497a5b242854cf96a6b0ac7a5344f4898d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useCategoryFilters.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 34
        }
      },
      "3": {
        start: {
          line: 12,
          column: 15
        },
        end: {
          line: 12,
          column: 31
        }
      },
      "4": {
        start: {
          line: 13,
          column: 20
        },
        end: {
          line: 13,
          column: 46
        }
      },
      "5": {
        start: {
          line: 14,
          column: 27
        },
        end: {
          line: 95,
          column: 1
        }
      },
      "6": {
        start: {
          line: 15,
          column: 56
        },
        end: {
          line: 15,
          column: 80
        }
      },
      "7": {
        start: {
          line: 16,
          column: 42
        },
        end: {
          line: 16,
          column: 69
        }
      },
      "8": {
        start: {
          line: 17,
          column: 25
        },
        end: {
          line: 17,
          column: 59
        }
      },
      "9": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 18,
          column: 47
        }
      },
      "10": {
        start: {
          line: 19,
          column: 21
        },
        end: {
          line: 19,
          column: 51
        }
      },
      "11": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 30,
          column: 7
        }
      },
      "12": {
        start: {
          line: 22,
          column: 34
        },
        end: {
          line: 22,
          column: 64
        }
      },
      "13": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 27,
          column: 9
        }
      },
      "14": {
        start: {
          line: 24,
          column: 31
        },
        end: {
          line: 24,
          column: 75
        }
      },
      "15": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 25,
          column: 46
        }
      },
      "16": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 26,
          column: 50
        }
      },
      "17": {
        start: {
          line: 32,
          column: 22
        },
        end: {
          line: 47,
          column: 6
        }
      },
      "18": {
        start: {
          line: 33,
          column: 23
        },
        end: {
          line: 33,
          column: 67
        }
      },
      "19": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 38,
          column: 9
        }
      },
      "20": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 59
        }
      },
      "21": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 37,
          column: 40
        }
      },
      "22": {
        start: {
          line: 39,
          column: 23
        },
        end: {
          line: 39,
          column: 57
        }
      },
      "23": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 42,
          column: 11
        }
      },
      "24": {
        start: {
          line: 49,
          column: 33
        },
        end: {
          line: 55,
          column: 6
        }
      },
      "25": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 42
        }
      },
      "26": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 46
        }
      },
      "27": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 30
        }
      },
      "28": {
        start: {
          line: 57,
          column: 25
        },
        end: {
          line: 63,
          column: 6
        }
      },
      "29": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 34
        }
      },
      "30": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 30
        }
      },
      "31": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 22
        }
      },
      "32": {
        start: {
          line: 65,
          column: 31
        },
        end: {
          line: 69,
          column: 6
        }
      },
      "33": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 57
        }
      },
      "34": {
        start: {
          line: 71,
          column: 27
        },
        end: {
          line: 86,
          column: 6
        }
      },
      "35": {
        start: {
          line: 72,
          column: 27
        },
        end: {
          line: 72,
          column: 68
        }
      },
      "36": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 81,
          column: 9
        }
      },
      "37": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 84
        }
      },
      "38": {
        start: {
          line: 75,
          column: 61
        },
        end: {
          line: 75,
          column: 82
        }
      },
      "39": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 80,
          column: 14
        }
      },
      "40": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 43
        }
      },
      "41": {
        start: {
          line: 87,
          column: 4
        },
        end: {
          line: 94,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 14,
            column: 27
          },
          end: {
            line: 14,
            column: 28
          }
        },
        loc: {
          start: {
            line: 14,
            column: 31
          },
          end: {
            line: 95,
            column: 1
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 21,
            column: 26
          },
          end: {
            line: 21,
            column: 27
          }
        },
        loc: {
          start: {
            line: 21,
            column: 30
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 21
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 32,
            column: 46
          },
          end: {
            line: 32,
            column: 47
          }
        },
        loc: {
          start: {
            line: 32,
            column: 60
          },
          end: {
            line: 43,
            column: 5
          }
        },
        line: 32
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 49,
            column: 57
          },
          end: {
            line: 49,
            column: 58
          }
        },
        loc: {
          start: {
            line: 49,
            column: 71
          },
          end: {
            line: 53,
            column: 5
          }
        },
        line: 49
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 57,
            column: 49
          },
          end: {
            line: 57,
            column: 50
          }
        },
        loc: {
          start: {
            line: 57,
            column: 53
          },
          end: {
            line: 61,
            column: 5
          }
        },
        line: 57
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 65,
            column: 55
          },
          end: {
            line: 65,
            column: 56
          }
        },
        loc: {
          start: {
            line: 65,
            column: 71
          },
          end: {
            line: 67,
            column: 5
          }
        },
        line: 65
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 71,
            column: 51
          },
          end: {
            line: 71,
            column: 52
          }
        },
        loc: {
          start: {
            line: 71,
            column: 67
          },
          end: {
            line: 83,
            column: 5
          }
        },
        line: 71
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 75,
            column: 53
          },
          end: {
            line: 75,
            column: 54
          }
        },
        loc: {
          start: {
            line: 75,
            column: 61
          },
          end: {
            line: 75,
            column: 82
          }
        },
        line: 75
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 27,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 27,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 23
      },
      "1": {
        loc: {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        }, {
          start: {
            line: 36,
            column: 15
          },
          end: {
            line: 38,
            column: 9
          }
        }],
        line: 34
      },
      "2": {
        loc: {
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 81,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 81,
            column: 9
          }
        }, {
          start: {
            line: 76,
            column: 15
          },
          end: {
            line: 81,
            column: 9
          }
        }],
        line: 74
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useCategoryFilters.ts"],
      sourcesContent: ["\"use client\";\r\n\r\nimport { useState, useCallback, useEffect } from \"react\";\r\nimport { useSearchParams, useRouter, usePathname } from \"next/navigation\";\r\n\r\nexport interface CategoryFiltersState {\r\n  selectedCategories: string[];\r\n  isFiltering: boolean;\r\n}\r\n\r\nexport const useCategoryFilters = () => {\r\n  const [selectedCategories, setSelectedCategories] = useState<string[]>([]);\r\n  const [isFiltering, setIsFiltering] = useState(false);\r\n  \r\n  const searchParams = useSearchParams();\r\n  const router = useRouter();\r\n  const pathname = usePathname();\r\n\r\n  // Inicializar desde URL al cargar\r\n  useEffect(() => {\r\n    const categoriesFromUrl = searchParams.get('categories');\r\n    if (categoriesFromUrl) {\r\n      const categories = categoriesFromUrl.split(',').filter(Boolean);\r\n      setSelectedCategories(categories);\r\n      setIsFiltering(categories.length > 0);\r\n    }\r\n  }, [searchParams]);\r\n\r\n  // Actualizar URL cuando cambian las categor\xEDas\r\n  const updateUrl = useCallback((categories: string[]) => {\r\n    const params = new URLSearchParams(searchParams.toString());\r\n    \r\n    if (categories.length > 0) {\r\n      params.set('categories', categories.join(','));\r\n    } else {\r\n      params.delete('categories');\r\n    }\r\n\r\n    const newUrl = `${pathname}?${params.toString()}`;\r\n    router.replace(newUrl, { scroll: false });\r\n  }, [searchParams, pathname, router]);\r\n\r\n  // Cambiar categor\xEDas seleccionadas\r\n  const handleCategoryChange = useCallback((categories: string[]) => {\r\n    setSelectedCategories(categories);\r\n    setIsFiltering(categories.length > 0);\r\n    updateUrl(categories);\r\n  }, [updateUrl]);\r\n\r\n  // Limpiar todos los filtros\r\n  const clearFilters = useCallback(() => {\r\n    setSelectedCategories([]);\r\n    setIsFiltering(false);\r\n    updateUrl([]);\r\n  }, [updateUrl]);\r\n\r\n  // Verificar si una categor\xEDa est\xE1 seleccionada\r\n  const isCategorySelected = useCallback((categorySlug: string) => {\r\n    return selectedCategories.includes(categorySlug);\r\n  }, [selectedCategories]);\r\n\r\n  // Toggle de una categor\xEDa espec\xEDfica\r\n  const toggleCategory = useCallback((categorySlug: string) => {\r\n    const isSelected = selectedCategories.includes(categorySlug);\r\n    let newSelection: string[];\r\n\r\n    if (isSelected) {\r\n      newSelection = selectedCategories.filter(slug => slug !== categorySlug);\r\n    } else {\r\n      newSelection = [...selectedCategories, categorySlug];\r\n    }\r\n\r\n    handleCategoryChange(newSelection);\r\n  }, [selectedCategories, handleCategoryChange]);\r\n\r\n  return {\r\n    selectedCategories,\r\n    isFiltering,\r\n    handleCategoryChange,\r\n    clearFilters,\r\n    isCategorySelected,\r\n    toggleCategory,\r\n  };\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["useCategoryFilters", "selectedCategories", "setSelectedCategories", "useState", "isFiltering", "setIsFiltering", "searchParams", "useSearchParams", "router", "useRouter", "pathname", "usePathname", "useEffect", "categoriesFromUrl", "get", "categories", "split", "filter", "Boolean", "length", "updateUrl", "useCallback", "params", "URLSearchParams", "toString", "set", "join", "delete", "newUrl", "replace", "scroll", "handleCategoryChange", "clearFilters", "isCategorySelected", "categorySlug", "includes", "toggleCategory", "isSelected", "newSelection", "slug"],
      mappings: "AAAA;;;;;+BAUaA;;;eAAAA;;;uBARoC;4BACO;AAOjD,MAAMA,qBAAqB;IAChC,MAAM,CAACC,oBAAoBC,sBAAsB,GAAGC,IAAAA,eAAQ,EAAW,EAAE;IACzE,MAAM,CAACC,aAAaC,eAAe,GAAGF,IAAAA,eAAQ,EAAC;IAE/C,MAAMG,eAAeC,IAAAA,2BAAe;IACpC,MAAMC,SAASC,IAAAA,qBAAS;IACxB,MAAMC,WAAWC,IAAAA,uBAAW;IAE5B,kCAAkC;IAClCC,IAAAA,gBAAS,EAAC;QACR,MAAMC,oBAAoBP,aAAaQ,GAAG,CAAC;QAC3C,IAAID,mBAAmB;YACrB,MAAME,aAAaF,kBAAkBG,KAAK,CAAC,KAAKC,MAAM,CAACC;YACvDhB,sBAAsBa;YACtBV,eAAeU,WAAWI,MAAM,GAAG;QACrC;IACF,GAAG;QAACb;KAAa;IAEjB,+CAA+C;IAC/C,MAAMc,YAAYC,IAAAA,kBAAW,EAAC,CAACN;QAC7B,MAAMO,SAAS,IAAIC,gBAAgBjB,aAAakB,QAAQ;QAExD,IAAIT,WAAWI,MAAM,GAAG,GAAG;YACzBG,OAAOG,GAAG,CAAC,cAAcV,WAAWW,IAAI,CAAC;QAC3C,OAAO;YACLJ,OAAOK,MAAM,CAAC;QAChB;QAEA,MAAMC,SAAS,GAAGlB,SAAS,CAAC,EAAEY,OAAOE,QAAQ,IAAI;QACjDhB,OAAOqB,OAAO,CAACD,QAAQ;YAAEE,QAAQ;QAAM;IACzC,GAAG;QAACxB;QAAcI;QAAUF;KAAO;IAEnC,mCAAmC;IACnC,MAAMuB,uBAAuBV,IAAAA,kBAAW,EAAC,CAACN;QACxCb,sBAAsBa;QACtBV,eAAeU,WAAWI,MAAM,GAAG;QACnCC,UAAUL;IACZ,GAAG;QAACK;KAAU;IAEd,4BAA4B;IAC5B,MAAMY,eAAeX,IAAAA,kBAAW,EAAC;QAC/BnB,sBAAsB,EAAE;QACxBG,eAAe;QACfe,UAAU,EAAE;IACd,GAAG;QAACA;KAAU;IAEd,+CAA+C;IAC/C,MAAMa,qBAAqBZ,IAAAA,kBAAW,EAAC,CAACa;QACtC,OAAOjC,mBAAmBkC,QAAQ,CAACD;IACrC,GAAG;QAACjC;KAAmB;IAEvB,qCAAqC;IACrC,MAAMmC,iBAAiBf,IAAAA,kBAAW,EAAC,CAACa;QAClC,MAAMG,aAAapC,mBAAmBkC,QAAQ,CAACD;QAC/C,IAAII;QAEJ,IAAID,YAAY;YACdC,eAAerC,mBAAmBgB,MAAM,CAACsB,CAAAA,OAAQA,SAASL;QAC5D,OAAO;YACLI,eAAe;mBAAIrC;gBAAoBiC;aAAa;QACtD;QAEAH,qBAAqBO;IACvB,GAAG;QAACrC;QAAoB8B;KAAqB;IAE7C,OAAO;QACL9B;QACAG;QACA2B;QACAC;QACAC;QACAG;IACF;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "7e4624497a5b242854cf96a6b0ac7a5344f4898d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1uhltqlpy4 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1uhltqlpy4();
cov_1uhltqlpy4().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1uhltqlpy4().s[1]++;
Object.defineProperty(exports, "useCategoryFilters", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1uhltqlpy4().f[0]++;
    cov_1uhltqlpy4().s[2]++;
    return useCategoryFilters;
  }
});
const _react =
/* istanbul ignore next */
(cov_1uhltqlpy4().s[3]++, require("react"));
const _navigation =
/* istanbul ignore next */
(cov_1uhltqlpy4().s[4]++, require("next/navigation"));
/* istanbul ignore next */
cov_1uhltqlpy4().s[5]++;
const useCategoryFilters = () => {
  /* istanbul ignore next */
  cov_1uhltqlpy4().f[1]++;
  const [selectedCategories, setSelectedCategories] =
  /* istanbul ignore next */
  (cov_1uhltqlpy4().s[6]++, (0, _react.useState)([]));
  const [isFiltering, setIsFiltering] =
  /* istanbul ignore next */
  (cov_1uhltqlpy4().s[7]++, (0, _react.useState)(false));
  const searchParams =
  /* istanbul ignore next */
  (cov_1uhltqlpy4().s[8]++, (0, _navigation.useSearchParams)());
  const router =
  /* istanbul ignore next */
  (cov_1uhltqlpy4().s[9]++, (0, _navigation.useRouter)());
  const pathname =
  /* istanbul ignore next */
  (cov_1uhltqlpy4().s[10]++, (0, _navigation.usePathname)());
  // Inicializar desde URL al cargar
  /* istanbul ignore next */
  cov_1uhltqlpy4().s[11]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1uhltqlpy4().f[2]++;
    const categoriesFromUrl =
    /* istanbul ignore next */
    (cov_1uhltqlpy4().s[12]++, searchParams.get('categories'));
    /* istanbul ignore next */
    cov_1uhltqlpy4().s[13]++;
    if (categoriesFromUrl) {
      /* istanbul ignore next */
      cov_1uhltqlpy4().b[0][0]++;
      const categories =
      /* istanbul ignore next */
      (cov_1uhltqlpy4().s[14]++, categoriesFromUrl.split(',').filter(Boolean));
      /* istanbul ignore next */
      cov_1uhltqlpy4().s[15]++;
      setSelectedCategories(categories);
      /* istanbul ignore next */
      cov_1uhltqlpy4().s[16]++;
      setIsFiltering(categories.length > 0);
    } else
    /* istanbul ignore next */
    {
      cov_1uhltqlpy4().b[0][1]++;
    }
  }, [searchParams]);
  // Actualizar URL cuando cambian las categorías
  const updateUrl =
  /* istanbul ignore next */
  (cov_1uhltqlpy4().s[17]++, (0, _react.useCallback)(categories => {
    /* istanbul ignore next */
    cov_1uhltqlpy4().f[3]++;
    const params =
    /* istanbul ignore next */
    (cov_1uhltqlpy4().s[18]++, new URLSearchParams(searchParams.toString()));
    /* istanbul ignore next */
    cov_1uhltqlpy4().s[19]++;
    if (categories.length > 0) {
      /* istanbul ignore next */
      cov_1uhltqlpy4().b[1][0]++;
      cov_1uhltqlpy4().s[20]++;
      params.set('categories', categories.join(','));
    } else {
      /* istanbul ignore next */
      cov_1uhltqlpy4().b[1][1]++;
      cov_1uhltqlpy4().s[21]++;
      params.delete('categories');
    }
    const newUrl =
    /* istanbul ignore next */
    (cov_1uhltqlpy4().s[22]++, `${pathname}?${params.toString()}`);
    /* istanbul ignore next */
    cov_1uhltqlpy4().s[23]++;
    router.replace(newUrl, {
      scroll: false
    });
  }, [searchParams, pathname, router]));
  // Cambiar categorías seleccionadas
  const handleCategoryChange =
  /* istanbul ignore next */
  (cov_1uhltqlpy4().s[24]++, (0, _react.useCallback)(categories => {
    /* istanbul ignore next */
    cov_1uhltqlpy4().f[4]++;
    cov_1uhltqlpy4().s[25]++;
    setSelectedCategories(categories);
    /* istanbul ignore next */
    cov_1uhltqlpy4().s[26]++;
    setIsFiltering(categories.length > 0);
    /* istanbul ignore next */
    cov_1uhltqlpy4().s[27]++;
    updateUrl(categories);
  }, [updateUrl]));
  // Limpiar todos los filtros
  const clearFilters =
  /* istanbul ignore next */
  (cov_1uhltqlpy4().s[28]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_1uhltqlpy4().f[5]++;
    cov_1uhltqlpy4().s[29]++;
    setSelectedCategories([]);
    /* istanbul ignore next */
    cov_1uhltqlpy4().s[30]++;
    setIsFiltering(false);
    /* istanbul ignore next */
    cov_1uhltqlpy4().s[31]++;
    updateUrl([]);
  }, [updateUrl]));
  // Verificar si una categoría está seleccionada
  const isCategorySelected =
  /* istanbul ignore next */
  (cov_1uhltqlpy4().s[32]++, (0, _react.useCallback)(categorySlug => {
    /* istanbul ignore next */
    cov_1uhltqlpy4().f[6]++;
    cov_1uhltqlpy4().s[33]++;
    return selectedCategories.includes(categorySlug);
  }, [selectedCategories]));
  // Toggle de una categoría específica
  const toggleCategory =
  /* istanbul ignore next */
  (cov_1uhltqlpy4().s[34]++, (0, _react.useCallback)(categorySlug => {
    /* istanbul ignore next */
    cov_1uhltqlpy4().f[7]++;
    const isSelected =
    /* istanbul ignore next */
    (cov_1uhltqlpy4().s[35]++, selectedCategories.includes(categorySlug));
    let newSelection;
    /* istanbul ignore next */
    cov_1uhltqlpy4().s[36]++;
    if (isSelected) {
      /* istanbul ignore next */
      cov_1uhltqlpy4().b[2][0]++;
      cov_1uhltqlpy4().s[37]++;
      newSelection = selectedCategories.filter(slug => {
        /* istanbul ignore next */
        cov_1uhltqlpy4().f[8]++;
        cov_1uhltqlpy4().s[38]++;
        return slug !== categorySlug;
      });
    } else {
      /* istanbul ignore next */
      cov_1uhltqlpy4().b[2][1]++;
      cov_1uhltqlpy4().s[39]++;
      newSelection = [...selectedCategories, categorySlug];
    }
    /* istanbul ignore next */
    cov_1uhltqlpy4().s[40]++;
    handleCategoryChange(newSelection);
  }, [selectedCategories, handleCategoryChange]));
  /* istanbul ignore next */
  cov_1uhltqlpy4().s[41]++;
  return {
    selectedCategories,
    isFiltering,
    handleCategoryChange,
    clearFilters,
    isCategorySelected,
    toggleCategory
  };
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,