{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\checkout\\validate\\route.ts"],"sourcesContent":["// Configuración para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { z } from 'zod';\r\n\r\n// ===================================\r\n// MEJORAS DE SEGURIDAD - ALTA PRIORIDAD\r\n// ===================================\r\nimport {\r\n  withRateLimit,\r\n  RATE_LIMIT_CONFIGS\r\n} from '@/lib/rate-limiting/rate-limiter';\r\nimport {\r\n  API_TIMEOUTS,\r\n  withDatabaseTimeout,\r\n  getEndpointTimeouts\r\n} from '@/lib/config/api-timeouts';\r\nimport { createSecurityLogger } from '@/lib/logging/security-logger';\r\n\r\n// Schema de validación para checkout\r\nconst checkoutValidationSchema = z.object({\r\n  customerInfo: z.object({\r\n    firstName: z.string().min(1, 'Nombre es requerido'),\r\n    lastName: z.string().min(1, 'Apellido es requerido'),\r\n    email: z.string().email('Email inválido'),\r\n    phone: z.string().min(8, 'Teléfono debe tener al menos 8 dígitos'),\r\n  }),\r\n  shippingAddress: z.object({\r\n    streetAddress: z.string().min(5, 'Dirección debe tener al menos 5 caracteres'),\r\n    apartment: z.string().optional(),\r\n    city: z.string().min(2, 'Ciudad es requerida'),\r\n    state: z.string().min(2, 'Provincia es requerida'),\r\n    zipCode: z.string().min(4, 'Código postal inválido'),\r\n    country: z.string().default('Argentina'),\r\n    observations: z.string().optional(),\r\n  }),\r\n  items: z.array(z.object({\r\n    id: z.string(),\r\n    name: z.string(),\r\n    price: z.number().positive('Precio debe ser positivo'),\r\n    quantity: z.number().int().positive('Cantidad debe ser positiva'),\r\n    stock: z.number().int().nonnegative().optional(),\r\n  })).min(1, 'Debe haber al menos un producto'),\r\n  paymentMethod: z.enum(['mercadopago', 'bank', 'cash']),\r\n  shippingMethod: z.enum(['free', 'express', 'pickup']),\r\n  totals: z.object({\r\n    subtotal: z.number().nonnegative(),\r\n    shipping: z.number().nonnegative(),\r\n    discount: z.number().nonnegative().default(0),\r\n    total: z.number().positive('Total debe ser mayor a 0'),\r\n  }),\r\n});\r\n\r\nexport async function POST(request: NextRequest) {\r\n  // Crear logger de seguridad con contexto\r\n  const securityLogger = createSecurityLogger(request);\r\n\r\n  // Aplicar rate limiting para APIs de checkout\r\n  const rateLimitResult = await withRateLimit(\r\n    request,\r\n    RATE_LIMIT_CONFIGS.checkout,\r\n    async () => {\r\n      // Log de acceso a la API\r\n      securityLogger.log({\r\n        type: 'api_access',\r\n        endpoint: '/api/checkout/validate',\r\n        method: 'POST',\r\n        userAgent: request.headers.get('user-agent'),\r\n        timestamp: new Date().toISOString()\r\n      });\r\n\r\n      try {\r\n        const body = await request.json();\r\n    \r\n    // Validar estructura básica\r\n    const validatedData = checkoutValidationSchema.parse(body);\r\n    \r\n    const validationResults = {\r\n      isValid: true,\r\n      errors: [] as string[],\r\n      warnings: [] as string[],\r\n      suggestions: [] as string[],\r\n    };\r\n    \r\n    // Validaciones adicionales de negocio\r\n    \r\n    // 1. Validar stock de productos (simulado)\r\n    for (const item of validatedData.items) {\r\n      const simulatedStock = Math.floor(Math.random() * 100) + 10; // Stock simulado\r\n      if (item.quantity > simulatedStock) {\r\n        validationResults.errors.push(\r\n          `Producto \"${item.name}\": Stock insuficiente (disponible: ${simulatedStock}, solicitado: ${item.quantity})`\r\n        );\r\n        validationResults.isValid = false;\r\n      }\r\n    }\r\n    \r\n    // 2. Validar totales\r\n    const calculatedSubtotal = validatedData.items.reduce(\r\n      (sum, item) => sum + (item.price * item.quantity), 0\r\n    );\r\n    \r\n    if (Math.abs(calculatedSubtotal - validatedData.totals.subtotal) > 0.01) {\r\n      validationResults.errors.push(\r\n        `Subtotal incorrecto. Calculado: $${calculatedSubtotal}, Recibido: $${validatedData.totals.subtotal}`\r\n      );\r\n      validationResults.isValid = false;\r\n    }\r\n    \r\n    // 3. Validar costo de envío\r\n    const expectedShipping = calculateShippingCost(\r\n      validatedData.shippingMethod,\r\n      validatedData.totals.subtotal,\r\n      validatedData.shippingAddress.state\r\n    );\r\n    \r\n    if (Math.abs(expectedShipping - validatedData.totals.shipping) > 0.01) {\r\n      validationResults.errors.push(\r\n        `Costo de envío incorrecto. Esperado: $${expectedShipping}, Recibido: $${validatedData.totals.shipping}`\r\n      );\r\n      validationResults.isValid = false;\r\n    }\r\n    \r\n    // 4. Validar total final\r\n    const expectedTotal = calculatedSubtotal + expectedShipping - validatedData.totals.discount;\r\n    if (Math.abs(expectedTotal - validatedData.totals.total) > 0.01) {\r\n      validationResults.errors.push(\r\n        `Total incorrecto. Esperado: $${expectedTotal}, Recibido: $${validatedData.totals.total}`\r\n      );\r\n      validationResults.isValid = false;\r\n    }\r\n    \r\n    // 5. Validaciones de dirección\r\n    if (validatedData.shippingAddress.state === 'CABA' && !validatedData.shippingAddress.zipCode.startsWith('C')) {\r\n      validationResults.warnings.push(\r\n        'El código postal no parece corresponder a CABA'\r\n      );\r\n    }\r\n    \r\n    // 6. Sugerencias basadas en observaciones\r\n    if (validatedData.shippingAddress.observations) {\r\n      const obs = validatedData.shippingAddress.observations.toLowerCase();\r\n      if (obs.includes('barrio') || obs.includes('zona')) {\r\n        validationResults.suggestions.push(\r\n          'Excelente! Las observaciones sobre el barrio ayudarán al delivery'\r\n        );\r\n      }\r\n      if (obs.includes('horario') || obs.includes('hora')) {\r\n        validationResults.suggestions.push(\r\n          'Perfecto! Los horarios especificados facilitarán la entrega'\r\n        );\r\n      }\r\n    } else {\r\n      validationResults.suggestions.push(\r\n        'Considera agregar observaciones sobre el barrio o horarios preferidos para mejorar la entrega'\r\n      );\r\n    }\r\n    \r\n    // 7. Validar método de pago\r\n    if (validatedData.paymentMethod === 'bank' && validatedData.totals.total < 10000) {\r\n      validationResults.warnings.push(\r\n        'Para montos menores a $10.000, recomendamos MercadoPago para mayor comodidad'\r\n      );\r\n    }\r\n    \r\n    // Log de validación\r\n    console.log('✅ Validación de checkout:', {\r\n      customer: `${validatedData.customerInfo.firstName} ${validatedData.customerInfo.lastName}`,\r\n      items: validatedData.items.length,\r\n      total: validatedData.totals.total,\r\n      isValid: validationResults.isValid,\r\n      errors: validationResults.errors.length,\r\n      warnings: validationResults.warnings.length,\r\n      observations: validatedData.shippingAddress.observations ? 'Sí' : 'No'\r\n    });\r\n    \r\n    const response = {\r\n      success: true,\r\n      data: {\r\n        validation: validationResults,\r\n        estimatedDelivery: calculateEstimatedDelivery(validatedData.shippingMethod),\r\n        recommendedActions: generateRecommendations(validatedData, validationResults)\r\n      },\r\n      message: validationResults.isValid ? 'Checkout válido' : 'Checkout con errores'\r\n    };\r\n    \r\n        // Log de validación exitosa\r\n        securityLogger.log({\r\n          type: 'checkout_validation',\r\n          isValid: validationResults.isValid,\r\n          errorsCount: validationResults.errors.length,\r\n          warningsCount: validationResults.warnings.length,\r\n          total: validatedData.totals.total,\r\n          paymentMethod: validatedData.paymentMethod\r\n        });\r\n\r\n        return NextResponse.json(response, {\r\n          status: validationResults.isValid ? 200 : 400\r\n        });\r\n\r\n      } catch (error) {\r\n        console.error('❌ Error validando checkout:', error);\r\n\r\n        // Log de error de seguridad\r\n        securityLogger.logApiError(\r\n          error instanceof Error ? error.message : 'Unknown error',\r\n          '/api/checkout/validate'\r\n        );\r\n\r\n        if (error instanceof z.ZodError) {\r\n          return NextResponse.json({\r\n            success: false,\r\n            error: 'Datos de entrada inválidos',\r\n            details: error.errors.map(err => ({\r\n              field: err.path.join('.'),\r\n              message: err.message\r\n            }))\r\n          }, { status: 400 });\r\n        }\r\n\r\n        return NextResponse.json({\r\n          success: false,\r\n          error: 'Error interno del servidor'\r\n        }, { status: 500 });\r\n      }\r\n    }\r\n  );\r\n\r\n  // Manejar rate limit excedido\r\n  if (rateLimitResult instanceof NextResponse) {\r\n    securityLogger.logRateLimitExceeded(\r\n      securityLogger.context,\r\n      { endpoint: '/api/checkout/validate', method: 'POST' }\r\n    );\r\n    return rateLimitResult;\r\n  }\r\n\r\n  return rateLimitResult;\r\n}\r\n\r\n// Función auxiliar para calcular costo de envío\r\nfunction calculateShippingCost(method: string, subtotal: number, state: string): number {\r\n  if (method === 'pickup') {return 0;}\r\n  if (method === 'free' && subtotal >= 25000) {return 0;}\r\n  \r\n  const baseCost = method === 'express' ? 5000 : 2500;\r\n  \r\n  // Costo adicional por provincia\r\n  const stateSurcharge = state === 'CABA' ? 0 : 500;\r\n  \r\n  return baseCost + stateSurcharge;\r\n}\r\n\r\n// Función auxiliar para calcular fecha estimada de entrega\r\nfunction calculateEstimatedDelivery(shippingMethod: string): string {\r\n  const now = new Date();\r\n  let daysToAdd = 7;\r\n  \r\n  switch (shippingMethod) {\r\n    case 'express': daysToAdd = 2; break;\r\n    case 'free': daysToAdd = 7; break;\r\n    case 'pickup': daysToAdd = 1; break;\r\n  }\r\n  \r\n  const estimatedDate = new Date(now.getTime() + (daysToAdd * 24 * 60 * 60 * 1000));\r\n  return estimatedDate.toISOString().split('T')[0]; // Solo fecha\r\n}\r\n\r\n// Función auxiliar para generar recomendaciones\r\nfunction generateRecommendations(data: any, validation: any): string[] {\r\n  const recommendations = [];\r\n  \r\n  if (!validation.isValid) {\r\n    recommendations.push('Corrige los errores antes de continuar');\r\n  }\r\n  \r\n  if (data.totals.total > 50000) {\r\n    recommendations.push('Considera dividir la compra en múltiples órdenes para mayor seguridad');\r\n  }\r\n  \r\n  if (data.paymentMethod === 'cash' && data.totals.total > 30000) {\r\n    recommendations.push('Para montos altos, recomendamos pago digital por seguridad');\r\n  }\r\n  \r\n  if (!data.shippingAddress.observations) {\r\n    recommendations.push('Agrega observaciones para facilitar la entrega');\r\n  }\r\n  \r\n  return recommendations;\r\n}\r\n\r\n// Método OPTIONS para CORS\r\nexport async function OPTIONS() {\r\n  return new NextResponse(null, {\r\n    status: 200,\r\n    headers: {\r\n      'Access-Control-Allow-Origin': '*',\r\n      'Access-Control-Allow-Methods': 'POST, OPTIONS',\r\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization',\r\n    },\r\n  });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["OPTIONS","POST","runtime","checkoutValidationSchema","z","object","customerInfo","firstName","string","min","lastName","email","phone","shippingAddress","streetAddress","apartment","optional","city","state","zipCode","country","default","observations","items","array","id","name","price","number","positive","quantity","int","stock","nonnegative","paymentMethod","enum","shippingMethod","totals","subtotal","shipping","discount","total","request","securityLogger","createSecurityLogger","rateLimitResult","withRateLimit","RATE_LIMIT_CONFIGS","checkout","log","type","endpoint","method","userAgent","headers","get","timestamp","Date","toISOString","body","json","validatedData","parse","validationResults","isValid","errors","warnings","suggestions","item","simulatedStock","Math","floor","random","push","calculatedSubtotal","reduce","sum","abs","expectedShipping","calculateShippingCost","expectedTotal","startsWith","obs","toLowerCase","includes","console","customer","length","response","success","data","validation","estimatedDelivery","calculateEstimatedDelivery","recommendedActions","generateRecommendations","message","errorsCount","warningsCount","NextResponse","status","error","logApiError","Error","ZodError","details","map","err","field","path","join","logRateLimitExceeded","context","baseCost","stateSurcharge","now","daysToAdd","estimatedDate","getTime","split","recommendations"],"mappings":"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"}