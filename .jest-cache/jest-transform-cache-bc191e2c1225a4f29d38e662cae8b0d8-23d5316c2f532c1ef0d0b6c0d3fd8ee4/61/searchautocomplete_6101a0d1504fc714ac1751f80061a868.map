{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\ui\\search-autocomplete.tsx"],"sourcesContent":["'use client'\n\nimport * as React from 'react'\nimport { useState, useEffect, useRef, useCallback } from 'react'\nimport { cva, type VariantProps } from 'class-variance-authority'\nimport { cn } from '@/lib/utils'\nimport { Search, X, Clock, TrendingUp, Package } from 'lucide-react'\nimport { useRouter } from 'next/navigation'\nimport { searchProducts } from '@/lib/api/products'\nimport { ProductWithCategory } from '@/types/api'\nimport { Badge } from './badge'\nimport { Button } from './button'\nimport Image from 'next/image'\nimport { useTrendingSearches } from '@/hooks/useTrendingSearches'\nimport { useRecentSearches } from '@/hooks/useRecentSearches'\nimport { SEARCH_CONSTANTS } from '@/constants/shop'\n\nconst searchAutocompleteVariants = cva('relative w-full', {\n  variants: {\n    size: {\n      sm: 'text-sm',\n      md: 'text-base',\n      lg: 'text-lg',\n    },\n  },\n  defaultVariants: {\n    size: 'md',\n  },\n})\n\nexport interface SearchSuggestion {\n  id: string\n  type: 'product' | 'category' | 'recent' | 'trending'\n  title: string\n  subtitle?: string\n  image?: string\n  badge?: string\n  href: string\n}\n\nexport interface SearchAutocompleteProps\n  extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'size'>,\n    VariantProps<typeof searchAutocompleteVariants> {\n  onSearch?: (query: string) => void\n  onSuggestionSelect?: (suggestion: SearchSuggestion) => void\n  showRecentSearches?: boolean\n  showTrendingSearches?: boolean\n  maxSuggestions?: number\n  debounceMs?: number\n  // Props opcionales para integración con hooks externos\n  query?: string\n  suggestions?: SearchSuggestion[]\n  isLoading?: boolean\n  error?: string | null\n  searchWithDebounce?: (query: string) => void\n  onClear?: () => void\n}\n\n// Búsquedas trending por defecto para pinturería\nconst defaultTrendingSearches: SearchSuggestion[] = [\n  {\n    id: 'trending-1',\n    type: 'trending',\n    title: 'Pintura látex',\n    href: '/shop?search=pintura+latex',\n  },\n  {\n    id: 'trending-2',\n    type: 'trending',\n    title: 'Sherwin Williams',\n    href: '/shop?search=sherwin+williams',\n  },\n  {\n    id: 'trending-3',\n    type: 'trending',\n    title: 'Rodillos premium',\n    href: '/shop?search=rodillos+premium',\n  },\n  {\n    id: 'trending-4',\n    type: 'trending',\n    title: 'Pinceles',\n    href: '/shop?search=pinceles',\n  },\n]\n\nconst SearchAutocomplete = React.forwardRef<HTMLInputElement, SearchAutocompleteProps>(\n  (\n    {\n      className,\n      size,\n      onSearch,\n      onSuggestionSelect,\n      showRecentSearches = true,\n      showTrendingSearches = true,\n      maxSuggestions = 8,\n      debounceMs = 300,\n      placeholder = 'Látex interior blanco 20lts, rodillos, pinceles...',\n      // Props opcionales para integración con hooks externos\n      query: externalQuery,\n      suggestions: externalSuggestions,\n      isLoading: externalIsLoading,\n      error: externalError,\n      searchWithDebounce: externalSearchWithDebounce,\n      onClear: externalOnClear,\n      ...props\n    },\n    ref\n  ) => {\n    // Hook para obtener búsquedas trending reales\n    const { trendingSearches, trackSearch } = useTrendingSearches({\n      limit: 4,\n      enabled: showTrendingSearches,\n    })\n\n    // Hook para gestionar búsquedas recientes\n    const {\n      recentSearches,\n      addSearch: addRecentSearch,\n      getRecentSearches,\n    } = useRecentSearches({\n      maxSearches: SEARCH_CONSTANTS.MAX_RECENT_SEARCHES,\n      enablePersistence: showRecentSearches,\n      expirationDays: SEARCH_CONSTANTS.RECENT_SEARCHES_EXPIRATION_DAYS,\n    })\n    // Estado interno (usado solo si no hay props externas)\n    const [internalQuery, setInternalQuery] = useState('')\n    const [internalSuggestions, setInternalSuggestions] = useState<SearchSuggestion[]>([])\n    const [internalIsLoading, setInternalIsLoading] = useState(false)\n    const [isOpen, setIsOpen] = useState(false)\n    const [selectedIndex, setSelectedIndex] = useState(-1)\n\n    // Usar props externas si están disponibles, sino usar estado interno\n    const query = externalQuery !== undefined ? externalQuery : internalQuery\n    const suggestions =\n      externalSuggestions !== undefined ? externalSuggestions : internalSuggestions\n    const isLoading = externalIsLoading !== undefined ? externalIsLoading : internalIsLoading\n    const error = externalError\n\n    const router = useRouter()\n    const inputRef = useRef<HTMLInputElement>(null)\n    const dropdownRef = useRef<HTMLDivElement>(null)\n    const debounceRef = useRef<NodeJS.Timeout>()\n\n    // Buscar productos con debounce\n    const searchProductsDebounced = useCallback(\n      async (searchQuery: string) => {\n        // No ejecutar si hay props externas\n        if (externalSuggestions !== undefined) {\n          return\n        }\n\n        if (!searchQuery.trim()) {\n          setInternalSuggestions([])\n          return\n        }\n\n        setInternalIsLoading(true)\n\n        try {\n          const response = await searchProducts(searchQuery, 6)\n\n          if (response.success && response.data) {\n            const productSuggestions: SearchSuggestion[] = response.data.map(product => ({\n              id: `product-${product.id}`,\n              type: 'product',\n              title: product.name,\n              subtitle: product.category?.name,\n              image:\n                product.images?.previews?.[0] ||\n                product.images?.thumbnails?.[0] ||\n                '/images/products/placeholder.jpg',\n              badge: product.stock > 0 ? 'En stock' : 'Sin stock',\n              href: `/product/${product.id}`,\n            }))\n\n            setInternalSuggestions(productSuggestions.slice(0, maxSuggestions))\n          }\n        } catch (error) {\n          console.error('Error searching products:', error)\n          setInternalSuggestions([])\n        } finally {\n          setInternalIsLoading(false)\n        }\n      },\n      [maxSuggestions, externalSuggestions]\n    )\n\n    // Manejar cambio en el input\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      const value = e.target.value\n\n      // Si hay función externa de búsqueda, usarla\n      if (externalSearchWithDebounce) {\n        externalSearchWithDebounce(value)\n      } else {\n        // Usar lógica interna\n        setInternalQuery(value)\n        setSelectedIndex(-1)\n\n        // Limpiar debounce anterior\n        if (debounceRef.current) {\n          clearTimeout(debounceRef.current)\n        }\n\n        // Configurar nuevo debounce\n        debounceRef.current = setTimeout(() => {\n          searchProductsDebounced(value)\n        }, debounceMs)\n      }\n    }\n\n    // Mostrar sugerencias por defecto cuando se enfoca\n    const handleFocus = () => {\n      setIsOpen(true)\n\n      if (!query.trim() && !externalSuggestions) {\n        // Solo mostrar sugerencias por defecto si no hay props externas\n        const defaultSuggestions: SearchSuggestion[] = []\n\n        // Agregar búsquedas recientes\n        if (showRecentSearches && recentSearches.length > 0) {\n          defaultSuggestions.push(\n            ...getRecentSearches(3).map((search, index) => ({\n              id: `recent-${index}`,\n              type: 'recent' as const,\n              title: search,\n              href: `/search?q=${encodeURIComponent(search)}`,\n            }))\n          )\n        }\n\n        // Agregar búsquedas trending reales\n        if (showTrendingSearches && trendingSearches.length > 0) {\n          const trendingSuggestions: SearchSuggestion[] = trendingSearches.map(trending => ({\n            id: trending.id,\n            type: 'trending' as const,\n            title: trending.query,\n            href: trending.href,\n            badge: trending.count ? `${trending.count}` : undefined,\n          }))\n          defaultSuggestions.push(...trendingSuggestions.slice(0, 4))\n        }\n\n        setInternalSuggestions(defaultSuggestions.slice(0, maxSuggestions))\n      }\n    }\n\n    // Manejar selección de sugerencia\n    const handleSuggestionSelect = (suggestion: SearchSuggestion) => {\n      if (suggestion.type === 'product' || suggestion.type === 'category') {\n        addRecentSearch(suggestion.title)\n      }\n\n      // Registrar búsquedas trending y recientes en analytics\n      if (suggestion.type === 'trending' || suggestion.type === 'recent') {\n        trackSearch(suggestion.title).catch(console.warn)\n      }\n\n      // Solo actualizar query interna si no hay query externa\n      if (externalQuery === undefined) {\n        setInternalQuery(suggestion.title)\n      }\n      setIsOpen(false)\n\n      if (onSuggestionSelect) {\n        onSuggestionSelect(suggestion)\n      } else {\n        router.push(suggestion.href)\n      }\n    }\n\n    // Manejar envío del formulario\n    const handleSubmit = (e: React.FormEvent) => {\n      e.preventDefault()\n\n      if (query.trim()) {\n        addRecentSearch(query.trim())\n        setIsOpen(false)\n\n        // Registrar búsqueda en analytics para trending\n        trackSearch(query.trim()).catch(console.warn)\n\n        if (onSearch) {\n          onSearch(query.trim())\n        } else {\n          router.push(`/search?q=${encodeURIComponent(query.trim())}`)\n        }\n      }\n    }\n\n    // Manejar teclas\n    const handleKeyDown = (e: React.KeyboardEvent) => {\n      if (!isOpen) {\n        return\n      }\n\n      switch (e.key) {\n        case 'ArrowDown':\n          e.preventDefault()\n          setSelectedIndex(prev => (prev < suggestions.length - 1 ? prev + 1 : prev))\n          break\n        case 'ArrowUp':\n          e.preventDefault()\n          setSelectedIndex(prev => (prev > 0 ? prev - 1 : -1))\n          break\n        case 'Enter':\n          e.preventDefault()\n          if (selectedIndex >= 0 && suggestions[selectedIndex]) {\n            handleSuggestionSelect(suggestions[selectedIndex])\n          } else {\n            handleSubmit(e)\n          }\n          break\n        case 'Escape':\n          setIsOpen(false)\n          setSelectedIndex(-1)\n          break\n      }\n    }\n\n    // Cerrar dropdown al hacer click fuera\n    useEffect(() => {\n      const handleClickOutside = (event: MouseEvent) => {\n        if (\n          dropdownRef.current &&\n          !dropdownRef.current.contains(event.target as Node) &&\n          inputRef.current &&\n          !inputRef.current.contains(event.target as Node)\n        ) {\n          setIsOpen(false)\n        }\n      }\n\n      document.addEventListener('mousedown', handleClickOutside)\n      return () => document.removeEventListener('mousedown', handleClickOutside)\n    }, [])\n\n    // Limpiar debounce al desmontar\n    useEffect(() => {\n      return () => {\n        if (debounceRef.current) {\n          clearTimeout(debounceRef.current)\n        }\n      }\n    }, [])\n\n    const getSuggestionIcon = (type: SearchSuggestion['type']) => {\n      switch (type) {\n        case 'recent':\n          return <Clock className='w-4 h-4 text-gray-400' />\n        case 'trending':\n          return <TrendingUp className='w-4 h-4 text-fun-green-600' />\n        case 'product':\n          return <Package className='w-4 h-4 text-gray-600' />\n        default:\n          return <Search className='w-4 h-4 text-gray-400' />\n      }\n    }\n\n    return (\n      <div className={cn(searchAutocompleteVariants({ size }), className)}>\n        <div className='relative'>\n          <div className='relative'>\n            <input\n              ref={inputRef}\n              type='search'\n              value={query}\n              onChange={handleInputChange}\n              onFocus={handleFocus}\n              onKeyDown={handleKeyDown}\n              placeholder={placeholder}\n              autoComplete='off'\n              data-testid='search-input'\n              className={cn(\n                'w-full rounded-r-[5px] bg-yellow-100 border border-gray-3 py-2.5 pl-4 pr-10 outline-none transition-all duration-200',\n                'focus:border-primary/50 focus:ring-2 focus:ring-primary/20',\n                'placeholder:text-gray-400 placeholder:font-normal',\n                size === 'sm' && 'py-2 text-sm',\n                size === 'lg' && 'py-3 text-lg'\n              )}\n              {...props}\n            />\n\n            {/* Search Icon */}\n            <div className='absolute right-3 top-1/2 -translate-y-1/2 flex items-center gap-2'>\n              {query && (\n                <button\n                  type='button'\n                  onClick={() => {\n                    if (externalOnClear) {\n                      externalOnClear()\n                    } else {\n                      setInternalQuery('')\n                      setInternalSuggestions([])\n                    }\n                    inputRef.current?.focus()\n                  }}\n                  className='text-gray-400 hover:text-gray-600 transition-colors'\n                  aria-label='Clear search'\n                >\n                  <X className='w-4 h-4' />\n                </button>\n              )}\n              <button\n                type='submit'\n                className='text-gray-500 hover:text-primary transition-colors'\n                aria-label='Search'\n              >\n                <Search className='w-4 h-4' />\n              </button>\n            </div>\n          </div>\n\n          {/* Dropdown de sugerencias */}\n          {isOpen && (\n            <div\n              ref={dropdownRef}\n              className='absolute top-full left-0 right-0 z-50 mt-1 rounded-md shadow-lg max-h-96 overflow-y-auto'\n              style={{ backgroundColor: '#fff3c5' }}\n              role='listbox'\n              aria-label='Search suggestions'\n            >\n              {isLoading && (\n                <div className='p-4 text-center text-gray-500'>\n                  <div className='animate-spin w-5 h-5 border-2 border-primary border-t-transparent rounded-full mx-auto mb-2'></div>\n                  Buscando...\n                </div>\n              )}\n\n              {!isLoading && suggestions.length === 0 && query.trim() && (\n                <div className='p-4 text-center text-gray-500'>\n                  No se encontraron resultados para \"{query}\"\n                </div>\n              )}\n\n              {!isLoading && suggestions.length > 0 && (\n                <div className='py-2'>\n                  {/* Secciones de sugerencias */}\n                  {showRecentSearches && suggestions.some(s => s.type === 'recent') && (\n                    <div className='px-3 py-2'>\n                      <h4 className='text-xs font-medium text-fun-green-700 uppercase tracking-wide mb-2'>\n                        Búsquedas recientes\n                      </h4>\n                      {suggestions\n                        .filter(s => s.type === 'recent')\n                        .map((suggestion, index) => (\n                          <button\n                            key={suggestion.id}\n                            onClick={() => handleSuggestionSelect(suggestion)}\n                            onMouseEnter={() => setSelectedIndex(suggestions.indexOf(suggestion))}\n                            className={cn(\n                              'w-full flex items-center gap-3 px-3 py-2 text-left hover:bg-white/50 hover:border-l-2 hover:border-fun-green-500 rounded-md transition-all duration-200',\n                              selectedIndex === suggestions.indexOf(suggestion) &&\n                                'bg-white/70 border-l-2 border-fun-green-600'\n                            )}\n                            role='option'\n                            aria-selected={selectedIndex === suggestions.indexOf(suggestion)}\n                          >\n                            {getSuggestionIcon(suggestion.type)}\n                            <span className='text-sm text-gray-700'>{suggestion.title}</span>\n                          </button>\n                        ))}\n                    </div>\n                  )}\n\n                  {/* Productos */}\n                  {suggestions.some(s => s.type === 'product') && (\n                    <div className='px-3 py-2'>\n                      <h4 className='text-xs font-medium text-fun-green-700 uppercase tracking-wide mb-2'>\n                        Productos\n                      </h4>\n                      {suggestions\n                        .filter(s => s.type === 'product')\n                        .map((suggestion, index) => (\n                          <button\n                            key={suggestion.id}\n                            onClick={() => handleSuggestionSelect(suggestion)}\n                            onMouseEnter={() => setSelectedIndex(suggestions.indexOf(suggestion))}\n                            className={cn(\n                              'w-full flex items-center gap-3 px-3 py-2 text-left hover:bg-white/50 hover:border-l-2 hover:border-fun-green-500 rounded-md transition-all duration-200',\n                              selectedIndex === suggestions.indexOf(suggestion) &&\n                                'bg-white/70 border-l-2 border-fun-green-600'\n                            )}\n                            role='option'\n                            aria-selected={selectedIndex === suggestions.indexOf(suggestion)}\n                          >\n                            {suggestion.image ? (\n                              <div className='w-8 h-8 rounded-md overflow-hidden bg-gray-100 flex-shrink-0'>\n                                <Image\n                                  src={suggestion.image}\n                                  alt={suggestion.title}\n                                  width={32}\n                                  height={32}\n                                  className='w-full h-full object-cover'\n                                />\n                              </div>\n                            ) : (\n                              getSuggestionIcon(suggestion.type)\n                            )}\n                            <div className='flex-1 min-w-0'>\n                              <div className='text-sm font-medium text-gray-900 truncate'>\n                                {suggestion.title}\n                              </div>\n                              {suggestion.subtitle && (\n                                <div className='text-xs text-fun-green-600 truncate font-medium'>\n                                  {suggestion.subtitle}\n                                </div>\n                              )}\n                            </div>\n                            {suggestion.badge && (\n                              <Badge variant='secondary' size='sm'>\n                                {suggestion.badge}\n                              </Badge>\n                            )}\n                          </button>\n                        ))}\n                    </div>\n                  )}\n\n                  {/* Trending */}\n                  {showTrendingSearches &&\n                    suggestions.some(s => s.type === 'trending') &&\n                    !query.trim() && (\n                      <div className='px-3 py-2'>\n                        <h4 className='text-xs font-medium text-fun-green-700 uppercase tracking-wide mb-2'>\n                          Búsquedas populares\n                        </h4>\n                        {suggestions\n                          .filter(s => s.type === 'trending')\n                          .map((suggestion, index) => (\n                            <button\n                              key={suggestion.id}\n                              onClick={() => handleSuggestionSelect(suggestion)}\n                              onMouseEnter={() => setSelectedIndex(suggestions.indexOf(suggestion))}\n                              className={cn(\n                                'w-full flex items-center gap-3 px-3 py-2 text-left hover:bg-white/50 hover:border-l-2 hover:border-fun-green-500 rounded-md transition-all duration-200',\n                                selectedIndex === suggestions.indexOf(suggestion) &&\n                                  'bg-white/70 border-l-2 border-fun-green-600'\n                              )}\n                              role='option'\n                              aria-selected={selectedIndex === suggestions.indexOf(suggestion)}\n                            >\n                              {getSuggestionIcon(suggestion.type)}\n                              <span className='text-sm text-gray-700'>{suggestion.title}</span>\n                            </button>\n                          ))}\n                      </div>\n                    )}\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    )\n  }\n)\n\nSearchAutocomplete.displayName = 'SearchAutocomplete'\n\nexport { SearchAutocomplete, searchAutocompleteVariants }\n"],"names":["SearchAutocomplete","searchAutocompleteVariants","cva","variants","size","sm","md","lg","defaultVariants","defaultTrendingSearches","id","type","title","href","React","forwardRef","className","onSearch","onSuggestionSelect","showRecentSearches","showTrendingSearches","maxSuggestions","debounceMs","placeholder","query","externalQuery","suggestions","externalSuggestions","isLoading","externalIsLoading","error","externalError","searchWithDebounce","externalSearchWithDebounce","onClear","externalOnClear","props","ref","trendingSearches","trackSearch","useTrendingSearches","limit","enabled","recentSearches","addSearch","addRecentSearch","getRecentSearches","useRecentSearches","maxSearches","SEARCH_CONSTANTS","MAX_RECENT_SEARCHES","enablePersistence","expirationDays","RECENT_SEARCHES_EXPIRATION_DAYS","internalQuery","setInternalQuery","useState","internalSuggestions","setInternalSuggestions","internalIsLoading","setInternalIsLoading","isOpen","setIsOpen","selectedIndex","setSelectedIndex","undefined","router","useRouter","inputRef","useRef","dropdownRef","debounceRef","searchProductsDebounced","useCallback","searchQuery","trim","response","searchProducts","success","data","productSuggestions","map","product","name","subtitle","category","image","images","previews","thumbnails","badge","stock","slice","console","handleInputChange","e","value","target","current","clearTimeout","setTimeout","handleFocus","defaultSuggestions","length","push","search","index","encodeURIComponent","trendingSuggestions","trending","count","handleSuggestionSelect","suggestion","catch","warn","handleSubmit","preventDefault","handleKeyDown","key","prev","useEffect","handleClickOutside","event","contains","document","addEventListener","removeEventListener","getSuggestionIcon","Clock","TrendingUp","Package","Search","div","cn","input","onChange","onFocus","onKeyDown","autoComplete","data-testid","button","onClick","focus","aria-label","X","style","backgroundColor","role","some","s","h4","filter","onMouseEnter","indexOf","aria-selected","span","Image","src","alt","width","height","Badge","variant","displayName"],"mappings":"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"}