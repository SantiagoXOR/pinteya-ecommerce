{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\driver\\profile\\route.ts"],"sourcesContent":["// Configuración para Node.js Runtime\nexport const runtime = 'nodejs'\n\n/**\n * API para obtener el perfil del driver y sus rutas asignadas\n * GET /api/driver/profile\n */\n\nimport { NextRequest, NextResponse } from 'next/server'\nimport { auth } from '@/lib/auth/config'\nimport { createClient } from '@/lib/integrations/supabase/server'\n\nexport async function GET(request: NextRequest) {\n  try {\n    // Verificar autenticación\n    const session = await auth()\n\n    if (!session?.user?.email) {\n      return NextResponse.json({ error: 'No autorizado' }, { status: 401 })\n    }\n\n    const supabase = await createClient()\n\n    // Obtener información del driver\n    const { data: driver, error: driverError } = await supabase\n      .from('drivers')\n      .select(\n        'id, first_name, last_name, email, phone, status, rating, total_deliveries, created_at, updated_at'\n      )\n      .eq('email', session.user.email)\n      .single()\n\n    if (driverError || !driver) {\n      console.error('Driver not found:', driverError)\n      return NextResponse.json({ error: 'Driver no encontrado' }, { status: 404 })\n    }\n\n    // Obtener rutas asignadas al driver\n    const { data: routes, error: routesError } = await supabase\n      .from('optimized_routes')\n      .select('*')\n      .eq('driver_id', driver.id)\n      .in('status', ['planned', 'active'])\n      .order('created_at', { ascending: true })\n\n    if (routesError) {\n      console.error('Error fetching routes:', routesError)\n    }\n\n    // Obtener estadísticas del día\n    const today = new Date().toISOString().split('T')[0]\n\n    const { data: todayDeliveries, error: deliveriesError } = await supabase\n      .from('optimized_routes')\n      .select('shipments')\n      .eq('driver_id', driver.id)\n      .eq('status', 'completed')\n      .gte('created_at', `${today}T00:00:00.000Z`)\n      .lte('created_at', `${today}T23:59:59.999Z`)\n\n    let completedDeliveries = 0\n    let totalDistance = 0\n\n    if (todayDeliveries) {\n      todayDeliveries.forEach(route => {\n        if (route.shipments && Array.isArray(route.shipments)) {\n          completedDeliveries += route.shipments.filter(\n            (shipment: any) => shipment.status === 'delivered'\n          ).length\n        }\n      })\n    }\n\n    // Calcular distancia total del día\n    const { data: todayRoutes, error: todayRoutesError } = await supabase\n      .from('optimized_routes')\n      .select('total_distance')\n      .eq('driver_id', driver.id)\n      .gte('created_at', `${today}T00:00:00.000Z`)\n      .lte('created_at', `${today}T23:59:59.999Z`)\n\n    if (todayRoutes) {\n      totalDistance = todayRoutes.reduce((sum, route) => sum + (route.total_distance || 0), 0)\n    }\n\n    const response = {\n      driver: {\n        id: driver.id,\n        name: `${driver.first_name} ${driver.last_name}`,\n        first_name: driver.first_name,\n        last_name: driver.last_name,\n        email: driver.email,\n        phone: driver.phone,\n        status: driver.status,\n        rating: driver.rating,\n        total_deliveries: driver.total_deliveries,\n      },\n      routes: routes || [],\n      todayStats: {\n        completedDeliveries,\n        totalDistance: Math.round(totalDistance * 100) / 100,\n        activeTime: '0h 0m', // TODO: Implementar tracking de tiempo activo\n        efficiency:\n          routes?.length > 0\n            ? Math.round(\n                routes.reduce((sum, route) => sum + (route.optimization_score || 0), 0) /\n                  routes.length\n              )\n            : 0,\n      },\n    }\n\n    return NextResponse.json(response)\n  } catch (error) {\n    console.error('Error in driver profile API:', error)\n    return NextResponse.json({ error: 'Error interno del servidor' }, { status: 500 })\n  }\n}\n\nexport async function PUT(request: NextRequest) {\n  try {\n    // Verificar autenticación\n    const session = await auth()\n\n    if (!session?.user?.email) {\n      return NextResponse.json({ error: 'No autorizado' }, { status: 401 })\n    }\n\n    const body = await request.json()\n    const { status, current_location } = body\n\n    const supabase = await createClient()\n\n    // Actualizar información del driver\n    const { data: driver, error } = await supabase\n      .from('drivers')\n      .update({\n        status: status || undefined,\n        current_location: current_location || undefined,\n        updated_at: new Date().toISOString(),\n      })\n      .eq('email', session.user.email)\n      .select()\n      .single()\n\n    if (error) {\n      console.error('Error updating driver:', error)\n      return NextResponse.json({ error: 'Error actualizando driver' }, { status: 500 })\n    }\n\n    return NextResponse.json({ driver })\n  } catch (error) {\n    console.error('Error in driver profile update API:', error)\n    return NextResponse.json({ error: 'Error interno del servidor' }, { status: 500 })\n  }\n}\n"],"names":["GET","PUT","runtime","request","session","auth","user","email","NextResponse","json","error","status","supabase","createClient","data","driver","driverError","from","select","eq","single","console","routes","routesError","id","in","order","ascending","today","Date","toISOString","split","todayDeliveries","deliveriesError","gte","lte","completedDeliveries","totalDistance","forEach","route","shipments","Array","isArray","filter","shipment","length","todayRoutes","todayRoutesError","reduce","sum","total_distance","response","name","first_name","last_name","phone","rating","total_deliveries","todayStats","Math","round","activeTime","efficiency","optimization_score","body","current_location","update","undefined","updated_at"],"mappings":"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"}