{"version":3,"names":["createErrorSuppressionMiddleware","cov_11hmees8v","f","s","setupGlobalErrorSuppression","useErrorSuppression","withNetworkErrorHandling","errorSuppressionMiddleware","request","originalConsoleError","console","error","originalConsoleWarn","warn","suppressedErrorPatterns","shouldSuppressError","message","some","pattern","toLowerCase","includes","args","join","b","process","env","NODE_ENV","debug","response","_server","NextResponse","next","headers","set","nextUrl","pathname","startsWith","cleanup","__cleanup","handler","context","timeoutSignal","AbortSignal","timeout","signal","result","name","code","JSON","stringify","success","status","window","addEventListener","event","reason","preventDefault","originalFetch","fetch","log"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\middleware\\error-suppression.ts"],"sourcesContent":["// ===================================\r\n// MIDDLEWARE: Error Suppression\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\n\r\n/**\r\n * Middleware para suprimir errores de red comunes que no son críticos\r\n */\r\nexport function createErrorSuppressionMiddleware() {\r\n  return function errorSuppressionMiddleware(request: NextRequest) {\r\n    // Interceptar y suprimir errores comunes de red\r\n    const originalConsoleError = console.error;\r\n    const originalConsoleWarn = console.warn;\r\n\r\n    // Lista de patrones de errores a suprimir\r\n    const suppressedErrorPatterns = [\r\n      'ERR_ABORTED',\r\n      'AbortError',\r\n      'The user aborted a request',\r\n      'Request was aborted',\r\n      'net::ERR_ABORTED',\r\n      'Failed to fetch',\r\n      'NetworkError when attempting to fetch resource',\r\n      'Load failed',\r\n      'Connection was aborted'\r\n    ];\r\n\r\n    // Función para verificar si un error debe ser suprimido\r\n    const shouldSuppressError = (message: string): boolean => {\r\n      return suppressedErrorPatterns.some(pattern => \r\n        message.toLowerCase().includes(pattern.toLowerCase())\r\n      );\r\n    };\r\n\r\n    // Override console.error para filtrar errores\r\n    console.error = (...args: any[]) => {\r\n      const message = args.join(' ');\r\n      \r\n      if (shouldSuppressError(message)) {\r\n        // En desarrollo, mostrar como debug\r\n        if (process.env.NODE_ENV === 'development') {\r\n          console.debug('🔇 [Suppressed Error]:', ...args);\r\n        }\r\n        return;\r\n      }\r\n      \r\n      // Permitir otros errores\r\n      originalConsoleError(...args);\r\n    };\r\n\r\n    // Override console.warn para filtrar warnings\r\n    console.warn = (...args: any[]) => {\r\n      const message = args.join(' ');\r\n      \r\n      if (shouldSuppressError(message)) {\r\n        // En desarrollo, mostrar como debug\r\n        if (process.env.NODE_ENV === 'development') {\r\n          console.debug('🔇 [Suppressed Warning]:', ...args);\r\n        }\r\n        return;\r\n      }\r\n      \r\n      // Permitir otros warnings\r\n      originalConsoleWarn(...args);\r\n    };\r\n\r\n    // Configurar headers para mejorar el manejo de errores de red\r\n    const response = NextResponse.next();\r\n    \r\n    // Headers para mejorar la estabilidad de la conexión\r\n    response.headers.set('Connection', 'keep-alive');\r\n    response.headers.set('Keep-Alive', 'timeout=5, max=1000');\r\n    \r\n    // Headers para cache y performance\r\n    if (request.nextUrl.pathname.startsWith('/api/')) {\r\n      response.headers.set('Cache-Control', 'no-cache, no-store, must-revalidate');\r\n      response.headers.set('Pragma', 'no-cache');\r\n      response.headers.set('Expires', '0');\r\n    }\r\n\r\n    // Cleanup function (se ejecutará cuando la request termine)\r\n    const cleanup = () => {\r\n      console.error = originalConsoleError;\r\n      console.warn = originalConsoleWarn;\r\n    };\r\n\r\n    // Agregar cleanup al response\r\n    (response as any).__cleanup = cleanup;\r\n\r\n    return response;\r\n  };\r\n}\r\n\r\n/**\r\n * Wrapper para APIs que maneja errores de red de manera robusta\r\n */\r\nexport function withNetworkErrorHandling(handler: Function) {\r\n  return async function (request: NextRequest, context?: any) {\r\n    try {\r\n      // Configurar timeout para la request\r\n      const timeoutSignal = AbortSignal.timeout(30000); // 30 segundos\r\n      \r\n      // Agregar signal de timeout al request si no existe\r\n      if (!request.signal) {\r\n        (request as any).signal = timeoutSignal;\r\n      }\r\n\r\n      const result = await handler(request, context);\r\n      return result;\r\n\r\n    } catch (error: any) {\r\n      // Manejar diferentes tipos de errores\r\n      if (error.name === 'AbortError' || error.code === 'ERR_ABORTED') {\r\n        // Error de abort - respuesta silenciosa\r\n        return new NextResponse(\r\n          JSON.stringify({\r\n            success: false,\r\n            error: 'Request was cancelled',\r\n            code: 'REQUEST_CANCELLED'\r\n          }),\r\n          {\r\n            status: 499, // Client Closed Request\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'X-Error-Type': 'abort'\r\n            }\r\n          }\r\n        );\r\n      }\r\n\r\n      if (error.name === 'TimeoutError' || error.code === 'TIMEOUT') {\r\n        // Error de timeout\r\n        return new NextResponse(\r\n          JSON.stringify({\r\n            success: false,\r\n            error: 'Request timeout',\r\n            code: 'REQUEST_TIMEOUT'\r\n          }),\r\n          {\r\n            status: 408,\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'X-Error-Type': 'timeout'\r\n            }\r\n          }\r\n        );\r\n      }\r\n\r\n      // Re-throw otros errores para manejo normal\r\n      throw error;\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Función para configurar supresión de errores globalmente\r\n */\r\nexport function setupGlobalErrorSuppression() {\r\n  if (typeof window === 'undefined') {return;} // Solo en el cliente\r\n\r\n  // Suprimir errores de unhandled promise rejections para AbortError\r\n  window.addEventListener('unhandledrejection', (event) => {\r\n    if (event.reason?.name === 'AbortError' || \r\n        event.reason?.code === 'ERR_ABORTED' ||\r\n        event.reason?.message?.includes('aborted')) {\r\n      \r\n      // Prevenir que aparezca en la consola\r\n      event.preventDefault();\r\n      \r\n      if (process.env.NODE_ENV === 'development') {\r\n        console.debug('🔇 Suppressed unhandled AbortError:', event.reason);\r\n      }\r\n    }\r\n  });\r\n\r\n  // Interceptar errores de fetch globalmente\r\n  const originalFetch = window.fetch;\r\n  window.fetch = async (...args) => {\r\n    try {\r\n      return await originalFetch(...args);\r\n    } catch (error: any) {\r\n      // Suprimir errores de abort en fetch\r\n      if (error.name === 'AbortError' || error.code === 'ERR_ABORTED') {\r\n        if (process.env.NODE_ENV === 'development') {\r\n          console.debug('🔇 Suppressed fetch AbortError:', error);\r\n        }\r\n        throw error; // Re-throw para que el código que llama pueda manejarlo\r\n      }\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  console.log('🔇 Global error suppression configured');\r\n}\r\n\r\n/**\r\n * Hook para React que configura supresión de errores\r\n */\r\nexport function useErrorSuppression() {\r\n  if (typeof window !== 'undefined') {\r\n    setupGlobalErrorSuppression();\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}