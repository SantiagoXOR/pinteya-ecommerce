cb7f2ac01c3454fa01f239f3bdf854aa
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_1tjb6j05ib() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\driver\\complete-delivery\\route.ts";
  var hash = "e076987a282759579daec7ab0d45e72a81daa4d9";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\driver\\complete-delivery\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 20
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 23
        }
      },
      "6": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 38
        }
      },
      "7": {
        start: {
          line: 21,
          column: 16
        },
        end: {
          line: 21,
          column: 54
        }
      },
      "8": {
        start: {
          line: 22,
          column: 17
        },
        end: {
          line: 22,
          column: 72
        }
      },
      "9": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 24
        }
      },
      "10": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 168,
          column: 5
        }
      },
      "11": {
        start: {
          line: 27,
          column: 24
        },
        end: {
          line: 27,
          column: 49
        }
      },
      "12": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 34,
          column: 9
        }
      },
      "13": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 33,
          column: 15
        }
      },
      "14": {
        start: {
          line: 36,
          column: 25
        },
        end: {
          line: 36,
          column: 59
        }
      },
      "15": {
        start: {
          line: 38,
          column: 53
        },
        end: {
          line: 38,
          column: 168
        }
      },
      "16": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 45,
          column: 9
        }
      },
      "17": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 44,
          column: 15
        }
      },
      "18": {
        start: {
          line: 46,
          column: 21
        },
        end: {
          line: 46,
          column: 41
        }
      },
      "19": {
        start: {
          line: 47,
          column: 105
        },
        end: {
          line: 47,
          column: 109
        }
      },
      "20": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 54,
          column: 9
        }
      },
      "21": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 53,
          column: 15
        }
      },
      "22": {
        start: {
          line: 56,
          column: 51
        },
        end: {
          line: 56,
          column: 169
        }
      },
      "23": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 63,
          column: 9
        }
      },
      "24": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 62,
          column: 15
        }
      },
      "25": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 70,
          column: 9
        }
      },
      "26": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 69,
          column: 15
        }
      },
      "27": {
        start: {
          line: 72,
          column: 39
        },
        end: {
          line: 76,
          column: 28
        }
      },
      "28": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 84,
          column: 9
        }
      },
      "29": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 64
        }
      },
      "30": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 83,
          column: 15
        }
      },
      "31": {
        start: {
          line: 86,
          column: 31
        },
        end: {
          line: 95,
          column: 9
        }
      },
      "32": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 105,
          column: 9
        }
      },
      "33": {
        start: {
          line: 98,
          column: 45
        },
        end: {
          line: 98,
          column: 101
        }
      },
      "34": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 102,
          column: 13
        }
      },
      "35": {
        start: {
          line: 100,
          column: 16
        },
        end: {
          line: 100,
          column: 81
        }
      },
      "36": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 67
        }
      },
      "37": {
        start: {
          line: 107,
          column: 58
        },
        end: {
          line: 124,
          column: 35
        }
      },
      "38": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 127,
          column: 9
        }
      },
      "39": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 71
        }
      },
      "40": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 140,
          column: 9
        }
      },
      "41": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 137,
          column: 15
        }
      },
      "42": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 139,
          column: 64
        }
      },
      "43": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 160,
          column: 11
        }
      },
      "44": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 162,
          column: 64
        }
      },
      "45": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 167,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 16
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 19
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "POST",
        decl: {
          start: {
            line: 24,
            column: 15
          },
          end: {
            line: 24,
            column: 19
          }
        },
        loc: {
          start: {
            line: 24,
            column: 29
          },
          end: {
            line: 169,
            column: 1
          }
        },
        line: 24
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "1": {
        loc: {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 45,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 45,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "2": {
        loc: {
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 39,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 39,
            column: 23
          }
        }, {
          start: {
            line: 39,
            column: 27
          },
          end: {
            line: 39,
            column: 34
          }
        }],
        line: 39
      },
      "3": {
        loc: {
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "4": {
        loc: {
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "5": {
        loc: {
          start: {
            line: 57,
            column: 12
          },
          end: {
            line: 57,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 57,
            column: 12
          },
          end: {
            line: 57,
            column: 22
          }
        }, {
          start: {
            line: 57,
            column: 26
          },
          end: {
            line: 57,
            column: 32
          }
        }],
        line: 57
      },
      "6": {
        loc: {
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "7": {
        loc: {
          start: {
            line: 75,
            column: 19
          },
          end: {
            line: 75,
            column: 118
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 75,
            column: 35
          },
          end: {
            line: 75,
            column: 104
          }
        }, {
          start: {
            line: 75,
            column: 107
          },
          end: {
            line: 75,
            column: 118
          }
        }],
        line: 75
      },
      "8": {
        loc: {
          start: {
            line: 75,
            column: 38
          },
          end: {
            line: 75,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 75,
            column: 38
          },
          end: {
            line: 75,
            column: 49
          }
        }, {
          start: {
            line: 75,
            column: 53
          },
          end: {
            line: 75,
            column: 55
          }
        }],
        line: 75
      },
      "9": {
        loc: {
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "10": {
        loc: {
          start: {
            line: 89,
            column: 27
          },
          end: {
            line: 89,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 89,
            column: 27
          },
          end: {
            line: 89,
            column: 39
          }
        }, {
          start: {
            line: 89,
            column: 43
          },
          end: {
            line: 89,
            column: 67
          }
        }],
        line: 89
      },
      "11": {
        loc: {
          start: {
            line: 90,
            column: 31
          },
          end: {
            line: 90,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 90,
            column: 50
          },
          end: {
            line: 90,
            column: 82
          }
        }, {
          start: {
            line: 90,
            column: 85
          },
          end: {
            line: 90,
            column: 89
          }
        }],
        line: 90
      },
      "12": {
        loc: {
          start: {
            line: 91,
            column: 28
          },
          end: {
            line: 91,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 91,
            column: 28
          },
          end: {
            line: 91,
            column: 41
          }
        }, {
          start: {
            line: 91,
            column: 45
          },
          end: {
            line: 91,
            column: 49
          }
        }],
        line: 91
      },
      "13": {
        loc: {
          start: {
            line: 92,
            column: 28
          },
          end: {
            line: 92,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 92,
            column: 28
          },
          end: {
            line: 92,
            column: 41
          }
        }, {
          start: {
            line: 92,
            column: 45
          },
          end: {
            line: 92,
            column: 49
          }
        }],
        line: 92
      },
      "14": {
        loc: {
          start: {
            line: 93,
            column: 28
          },
          end: {
            line: 93,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 93,
            column: 28
          },
          end: {
            line: 93,
            column: 41
          }
        }, {
          start: {
            line: 93,
            column: 45
          },
          end: {
            line: 93,
            column: 49
          }
        }],
        line: 93
      },
      "15": {
        loc: {
          start: {
            line: 99,
            column: 12
          },
          end: {
            line: 102,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 12
          },
          end: {
            line: 102,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      },
      "16": {
        loc: {
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "17": {
        loc: {
          start: {
            line: 134,
            column: 26
          },
          end: {
            line: 134,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 134,
            column: 45
          },
          end: {
            line: 134,
            column: 77
          }
        }, {
          start: {
            line: 134,
            column: 80
          },
          end: {
            line: 134,
            column: 84
          }
        }],
        line: 134
      },
      "18": {
        loc: {
          start: {
            line: 135,
            column: 56
          },
          end: {
            line: 135,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 135,
            column: 56
          },
          end: {
            line: 135,
            column: 74
          }
        }, {
          start: {
            line: 135,
            column: 78
          },
          end: {
            line: 135,
            column: 91
          }
        }],
        line: 135
      },
      "19": {
        loc: {
          start: {
            line: 146,
            column: 29
          },
          end: {
            line: 146,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 146,
            column: 29
          },
          end: {
            line: 146,
            column: 47
          }
        }, {
          start: {
            line: 146,
            column: 51
          },
          end: {
            line: 146,
            column: 64
          }
        }],
        line: 146
      },
      "20": {
        loc: {
          start: {
            line: 147,
            column: 30
          },
          end: {
            line: 147,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 147,
            column: 30
          },
          end: {
            line: 147,
            column: 42
          }
        }, {
          start: {
            line: 147,
            column: 46
          },
          end: {
            line: 147,
            column: 70
          }
        }],
        line: 147
      },
      "21": {
        loc: {
          start: {
            line: 152,
            column: 23
          },
          end: {
            line: 152,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 152,
            column: 23
          },
          end: {
            line: 152,
            column: 35
          }
        }, {
          start: {
            line: 152,
            column: 39
          },
          end: {
            line: 152,
            column: 44
          }
        }],
        line: 152
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\driver\\complete-delivery\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n/**\r\n * API para marcar entregas como completadas\r\n * POST /api/driver/complete-delivery\r\n */\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { auth } from '@/lib/auth/config';\r\nimport { createClient } from '@/lib/integrations/supabase/server';\r\n\r\n\r\n\r\ninterface CompleteDeliveryRequest {\r\n  orderId: number;\r\n  deliveryLocation?: {\r\n    lat: number;\r\n    lng: number;\r\n  };\r\n  deliveryNotes?: string;\r\n  deliveryPhoto?: string; // Base64 encoded image\r\n  recipientName?: string;\r\n  deliveryTime?: string;\r\n}\r\n\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    // Verificar autenticaci\xF3n\r\n    const session = await auth();\r\n    if (!session?.user?.email) {\r\n      return NextResponse.json(\r\n        { error: 'No autorizado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    // Configurar Supabase\r\n    const supabase = await createClient();\r\n\r\n    // Verificar que el usuario sea un driver\r\n    const { data: driver, error: driverError } = await supabase\r\n      .from('drivers')\r\n      .select('id, first_name, last_name, status')\r\n      .eq('email', session.user.email)\r\n      .single();\r\n\r\n    if (driverError || !driver) {\r\n      return NextResponse.json(\r\n        { error: 'Driver no encontrado' },\r\n        { status: 403 }\r\n      );\r\n    }\r\n\r\n    const body: CompleteDeliveryRequest = await request.json();\r\n    const { \r\n      orderId, \r\n      deliveryLocation, \r\n      deliveryNotes, \r\n      deliveryPhoto, \r\n      recipientName,\r\n      deliveryTime \r\n    } = body;\r\n\r\n    if (!orderId) {\r\n      return NextResponse.json(\r\n        { error: 'ID de orden requerido' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Verificar que la orden existe y est\xE1 pendiente\r\n    const { data: order, error: orderError } = await supabase\r\n      .from('orders')\r\n      .select('id, status, fulfillment_status, total, order_number')\r\n      .eq('id', orderId)\r\n      .single();\r\n\r\n    if (orderError || !order) {\r\n      return NextResponse.json(\r\n        { error: 'Orden no encontrada' },\r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    if (order.fulfillment_status === 'fulfilled') {\r\n      return NextResponse.json(\r\n        { error: 'Esta orden ya fue entregada' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Actualizar el estado de la orden\r\n    const { error: updateError } = await supabase\r\n      .from('orders')\r\n      .update({\r\n        fulfillment_status: 'fulfilled',\r\n        updated_at: new Date().toISOString(),\r\n        notes: deliveryNotes ? `${order.notes || ''}\\n\\nEntrega completada: ${deliveryNotes}`.trim() : order.notes\r\n      })\r\n      .eq('id', orderId);\r\n\r\n    if (updateError) {\r\n      console.error('Error updating order:', updateError);\r\n      return NextResponse.json(\r\n        { error: 'Error al actualizar la orden' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Crear registro de entrega\r\n    const deliveryRecord = {\r\n      order_id: orderId,\r\n      driver_id: driver.id,\r\n      delivery_time: deliveryTime || new Date().toISOString(),\r\n      delivery_location: deliveryLocation ? JSON.stringify(deliveryLocation) : null,\r\n      delivery_notes: deliveryNotes || null,\r\n      recipient_name: recipientName || null,\r\n      delivery_photo: deliveryPhoto || null,\r\n      created_at: new Date().toISOString()\r\n    };\r\n\r\n    // Intentar insertar en tabla de entregas (si existe)\r\n    try {\r\n      const { error: deliveryError } = await supabase\r\n        .from('deliveries')\r\n        .insert(deliveryRecord);\r\n\r\n      if (deliveryError) {\r\n        console.warn('Could not insert delivery record:', deliveryError);\r\n        // No fallar si la tabla no existe, solo logear\r\n      }\r\n    } catch (err) {\r\n      console.warn('Deliveries table might not exist:', err);\r\n    }\r\n\r\n    // Obtener informaci\xF3n actualizada de la orden\r\n    const { data: updatedOrder, error: fetchError } = await supabase\r\n      .from('orders')\r\n      .select(`\r\n        id,\r\n        total,\r\n        status,\r\n        fulfillment_status,\r\n        order_number,\r\n        shipping_address,\r\n        created_at,\r\n        updated_at,\r\n        order_items (\r\n          id,\r\n          quantity,\r\n          price,\r\n          products (\r\n            name\r\n          )\r\n        )\r\n      `)\r\n      .eq('id', orderId)\r\n      .single();\r\n\r\n    if (fetchError) {\r\n      console.error('Error fetching updated order:', fetchError);\r\n    }\r\n\r\n    // Registrar actividad del driver\r\n    try {\r\n      await supabase\r\n        .from('driver_activities')\r\n        .insert({\r\n          driver_id: driver.id,\r\n          activity_type: 'delivery_completed',\r\n          order_id: orderId,\r\n          location: deliveryLocation ? JSON.stringify(deliveryLocation) : null,\r\n          notes: `Entrega completada para orden ${order.order_number || `#${orderId}`}`,\r\n          created_at: new Date().toISOString()\r\n        });\r\n    } catch (err) {\r\n      console.warn('Could not log driver activity:', err);\r\n    }\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      message: 'Entrega marcada como completada exitosamente',\r\n      data: {\r\n        orderId,\r\n        orderNumber: order.order_number || `#${orderId}`,\r\n        deliveryTime: deliveryTime || new Date().toISOString(),\r\n        driver: {\r\n          id: driver.id,\r\n          name: `${driver.first_name} ${driver.last_name}`\r\n        },\r\n        order: updatedOrder || order,\r\n        deliveryDetails: {\r\n          location: deliveryLocation,\r\n          notes: deliveryNotes,\r\n          recipientName,\r\n          hasPhoto: !!deliveryPhoto\r\n        }\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Error in complete-delivery API:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["POST", "runtime", "request", "session", "auth", "user", "email", "NextResponse", "json", "error", "status", "supabase", "createClient", "data", "driver", "driverError", "from", "select", "eq", "single", "body", "orderId", "deliveryLocation", "deliveryNotes", "deliveryPhoto", "recipientName", "deliveryTime", "order", "orderError", "fulfillment_status", "updateError", "update", "updated_at", "Date", "toISOString", "notes", "trim", "console", "deliveryRecord", "order_id", "driver_id", "id", "delivery_time", "delivery_location", "JSON", "stringify", "delivery_notes", "recipient_name", "delivery_photo", "created_at", "deliveryError", "insert", "warn", "err", "updatedOrder", "fetchError", "activity_type", "location", "order_number", "success", "message", "orderNumber", "name", "first_name", "last_name", "deliveryDetails", "hasPhoto"],
      mappings: "AAAA,qCAAqC;;;;;;;;;;;;QA0BfA;eAAAA;;QAzBTC;eAAAA;;;wBAO6B;wBACrB;yBACQ;AATtB,MAAMA,UAAU;AAyBhB,eAAeD,KAAKE,OAAoB;IAC7C,IAAI;QACF,0BAA0B;QAC1B,MAAMC,UAAU,MAAMC,IAAAA,YAAI;QAC1B,IAAI,CAACD,SAASE,MAAMC,OAAO;YACzB,OAAOC,oBAAY,CAACC,IAAI,CACtB;gBAAEC,OAAO;YAAgB,GACzB;gBAAEC,QAAQ;YAAI;QAElB;QAEA,sBAAsB;QACtB,MAAMC,WAAW,MAAMC,IAAAA,qBAAY;QAEnC,yCAAyC;QACzC,MAAM,EAAEC,MAAMC,MAAM,EAAEL,OAAOM,WAAW,EAAE,GAAG,MAAMJ,SAChDK,IAAI,CAAC,WACLC,MAAM,CAAC,qCACPC,EAAE,CAAC,SAASf,QAAQE,IAAI,CAACC,KAAK,EAC9Ba,MAAM;QAET,IAAIJ,eAAe,CAACD,QAAQ;YAC1B,OAAOP,oBAAY,CAACC,IAAI,CACtB;gBAAEC,OAAO;YAAuB,GAChC;gBAAEC,QAAQ;YAAI;QAElB;QAEA,MAAMU,OAAgC,MAAMlB,QAAQM,IAAI;QACxD,MAAM,EACJa,OAAO,EACPC,gBAAgB,EAChBC,aAAa,EACbC,aAAa,EACbC,aAAa,EACbC,YAAY,EACb,GAAGN;QAEJ,IAAI,CAACC,SAAS;YACZ,OAAOd,oBAAY,CAACC,IAAI,CACtB;gBAAEC,OAAO;YAAwB,GACjC;gBAAEC,QAAQ;YAAI;QAElB;QAEA,iDAAiD;QACjD,MAAM,EAAEG,MAAMc,KAAK,EAAElB,OAAOmB,UAAU,EAAE,GAAG,MAAMjB,SAC9CK,IAAI,CAAC,UACLC,MAAM,CAAC,uDACPC,EAAE,CAAC,MAAMG,SACTF,MAAM;QAET,IAAIS,cAAc,CAACD,OAAO;YACxB,OAAOpB,oBAAY,CAACC,IAAI,CACtB;gBAAEC,OAAO;YAAsB,GAC/B;gBAAEC,QAAQ;YAAI;QAElB;QAEA,IAAIiB,MAAME,kBAAkB,KAAK,aAAa;YAC5C,OAAOtB,oBAAY,CAACC,IAAI,CACtB;gBAAEC,OAAO;YAA8B,GACvC;gBAAEC,QAAQ;YAAI;QAElB;QAEA,mCAAmC;QACnC,MAAM,EAAED,OAAOqB,WAAW,EAAE,GAAG,MAAMnB,SAClCK,IAAI,CAAC,UACLe,MAAM,CAAC;YACNF,oBAAoB;YACpBG,YAAY,IAAIC,OAAOC,WAAW;YAClCC,OAAOZ,gBAAgB,GAAGI,MAAMQ,KAAK,IAAI,GAAG,wBAAwB,EAAEZ,eAAe,CAACa,IAAI,KAAKT,MAAMQ,KAAK;QAC5G,GACCjB,EAAE,CAAC,MAAMG;QAEZ,IAAIS,aAAa;YACfO,QAAQ5B,KAAK,CAAC,yBAAyBqB;YACvC,OAAOvB,oBAAY,CAACC,IAAI,CACtB;gBAAEC,OAAO;YAA+B,GACxC;gBAAEC,QAAQ;YAAI;QAElB;QAEA,4BAA4B;QAC5B,MAAM4B,iBAAiB;YACrBC,UAAUlB;YACVmB,WAAW1B,OAAO2B,EAAE;YACpBC,eAAehB,gBAAgB,IAAIO,OAAOC,WAAW;YACrDS,mBAAmBrB,mBAAmBsB,KAAKC,SAAS,CAACvB,oBAAoB;YACzEwB,gBAAgBvB,iBAAiB;YACjCwB,gBAAgBtB,iBAAiB;YACjCuB,gBAAgBxB,iBAAiB;YACjCyB,YAAY,IAAIhB,OAAOC,WAAW;QACpC;QAEA,qDAAqD;QACrD,IAAI;YACF,MAAM,EAAEzB,OAAOyC,aAAa,EAAE,GAAG,MAAMvC,SACpCK,IAAI,CAAC,cACLmC,MAAM,CAACb;YAEV,IAAIY,eAAe;gBACjBb,QAAQe,IAAI,CAAC,qCAAqCF;YAClD,+CAA+C;YACjD;QACF,EAAE,OAAOG,KAAK;YACZhB,QAAQe,IAAI,CAAC,qCAAqCC;QACpD;QAEA,8CAA8C;QAC9C,MAAM,EAAExC,MAAMyC,YAAY,EAAE7C,OAAO8C,UAAU,EAAE,GAAG,MAAM5C,SACrDK,IAAI,CAAC,UACLC,MAAM,CAAC,CAAC;;;;;;;;;;;;;;;;;MAiBT,CAAC,EACAC,EAAE,CAAC,MAAMG,SACTF,MAAM;QAET,IAAIoC,YAAY;YACdlB,QAAQ5B,KAAK,CAAC,iCAAiC8C;QACjD;QAEA,iCAAiC;QACjC,IAAI;YACF,MAAM5C,SACHK,IAAI,CAAC,qBACLmC,MAAM,CAAC;gBACNX,WAAW1B,OAAO2B,EAAE;gBACpBe,eAAe;gBACfjB,UAAUlB;gBACVoC,UAAUnC,mBAAmBsB,KAAKC,SAAS,CAACvB,oBAAoB;gBAChEa,OAAO,CAAC,8BAA8B,EAAER,MAAM+B,YAAY,IAAI,CAAC,CAAC,EAAErC,SAAS,EAAE;gBAC7E4B,YAAY,IAAIhB,OAAOC,WAAW;YACpC;QACJ,EAAE,OAAOmB,KAAK;YACZhB,QAAQe,IAAI,CAAC,kCAAkCC;QACjD;QAEA,OAAO9C,oBAAY,CAACC,IAAI,CAAC;YACvBmD,SAAS;YACTC,SAAS;YACT/C,MAAM;gBACJQ;gBACAwC,aAAalC,MAAM+B,YAAY,IAAI,CAAC,CAAC,EAAErC,SAAS;gBAChDK,cAAcA,gBAAgB,IAAIO,OAAOC,WAAW;gBACpDpB,QAAQ;oBACN2B,IAAI3B,OAAO2B,EAAE;oBACbqB,MAAM,GAAGhD,OAAOiD,UAAU,CAAC,CAAC,EAAEjD,OAAOkD,SAAS,EAAE;gBAClD;gBACArC,OAAO2B,gBAAgB3B;gBACvBsC,iBAAiB;oBACfR,UAAUnC;oBACVa,OAAOZ;oBACPE;oBACAyC,UAAU,CAAC,CAAC1C;gBACd;YACF;QACF;IAEF,EAAE,OAAOf,OAAO;QACd4B,QAAQ5B,KAAK,CAAC,mCAAmCA;QACjD,OAAOF,oBAAY,CAACC,IAAI,CACtB;YAAEC,OAAO;QAA6B,GACtC;YAAEC,QAAQ;QAAI;IAElB;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e076987a282759579daec7ab0d45e72a81daa4d9"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1tjb6j05ib = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1tjb6j05ib();
cov_1tjb6j05ib().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1tjb6j05ib().f[0]++;
  cov_1tjb6j05ib().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1tjb6j05ib().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1tjb6j05ib().s[3]++;
_export(exports, {
  get POST() {
    /* istanbul ignore next */
    cov_1tjb6j05ib().f[1]++;
    cov_1tjb6j05ib().s[4]++;
    return POST;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_1tjb6j05ib().f[2]++;
    cov_1tjb6j05ib().s[5]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_1tjb6j05ib().s[6]++, require("next/server"));
const _config =
/* istanbul ignore next */
(cov_1tjb6j05ib().s[7]++, require("../../../../lib/auth/config"));
const _server1 =
/* istanbul ignore next */
(cov_1tjb6j05ib().s[8]++, require("../../../../lib/integrations/supabase/server"));
const runtime =
/* istanbul ignore next */
(cov_1tjb6j05ib().s[9]++, 'nodejs');
async function POST(request) {
  /* istanbul ignore next */
  cov_1tjb6j05ib().f[3]++;
  cov_1tjb6j05ib().s[10]++;
  try {
    // Verificar autenticaciÃ³n
    const session =
    /* istanbul ignore next */
    (cov_1tjb6j05ib().s[11]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_1tjb6j05ib().s[12]++;
    if (!session?.user?.email) {
      /* istanbul ignore next */
      cov_1tjb6j05ib().b[0][0]++;
      cov_1tjb6j05ib().s[13]++;
      return _server.NextResponse.json({
        error: 'No autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_1tjb6j05ib().b[0][1]++;
    }
    // Configurar Supabase
    const supabase =
    /* istanbul ignore next */
    (cov_1tjb6j05ib().s[14]++, await (0, _server1.createClient)());
    // Verificar que el usuario sea un driver
    const {
      data: driver,
      error: driverError
    } =
    /* istanbul ignore next */
    (cov_1tjb6j05ib().s[15]++, await supabase.from('drivers').select('id, first_name, last_name, status').eq('email', session.user.email).single());
    /* istanbul ignore next */
    cov_1tjb6j05ib().s[16]++;
    if (
    /* istanbul ignore next */
    (cov_1tjb6j05ib().b[2][0]++, driverError) ||
    /* istanbul ignore next */
    (cov_1tjb6j05ib().b[2][1]++, !driver)) {
      /* istanbul ignore next */
      cov_1tjb6j05ib().b[1][0]++;
      cov_1tjb6j05ib().s[17]++;
      return _server.NextResponse.json({
        error: 'Driver no encontrado'
      }, {
        status: 403
      });
    } else
    /* istanbul ignore next */
    {
      cov_1tjb6j05ib().b[1][1]++;
    }
    const body =
    /* istanbul ignore next */
    (cov_1tjb6j05ib().s[18]++, await request.json());
    const {
      orderId,
      deliveryLocation,
      deliveryNotes,
      deliveryPhoto,
      recipientName,
      deliveryTime
    } =
    /* istanbul ignore next */
    (cov_1tjb6j05ib().s[19]++, body);
    /* istanbul ignore next */
    cov_1tjb6j05ib().s[20]++;
    if (!orderId) {
      /* istanbul ignore next */
      cov_1tjb6j05ib().b[3][0]++;
      cov_1tjb6j05ib().s[21]++;
      return _server.NextResponse.json({
        error: 'ID de orden requerido'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_1tjb6j05ib().b[3][1]++;
    }
    // Verificar que la orden existe y estÃ¡ pendiente
    const {
      data: order,
      error: orderError
    } =
    /* istanbul ignore next */
    (cov_1tjb6j05ib().s[22]++, await supabase.from('orders').select('id, status, fulfillment_status, total, order_number').eq('id', orderId).single());
    /* istanbul ignore next */
    cov_1tjb6j05ib().s[23]++;
    if (
    /* istanbul ignore next */
    (cov_1tjb6j05ib().b[5][0]++, orderError) ||
    /* istanbul ignore next */
    (cov_1tjb6j05ib().b[5][1]++, !order)) {
      /* istanbul ignore next */
      cov_1tjb6j05ib().b[4][0]++;
      cov_1tjb6j05ib().s[24]++;
      return _server.NextResponse.json({
        error: 'Orden no encontrada'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_1tjb6j05ib().b[4][1]++;
    }
    cov_1tjb6j05ib().s[25]++;
    if (order.fulfillment_status === 'fulfilled') {
      /* istanbul ignore next */
      cov_1tjb6j05ib().b[6][0]++;
      cov_1tjb6j05ib().s[26]++;
      return _server.NextResponse.json({
        error: 'Esta orden ya fue entregada'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_1tjb6j05ib().b[6][1]++;
    }
    // Actualizar el estado de la orden
    const {
      error: updateError
    } =
    /* istanbul ignore next */
    (cov_1tjb6j05ib().s[27]++, await supabase.from('orders').update({
      fulfillment_status: 'fulfilled',
      updated_at: new Date().toISOString(),
      notes: deliveryNotes ?
      /* istanbul ignore next */
      (cov_1tjb6j05ib().b[7][0]++, `${
      /* istanbul ignore next */
      (cov_1tjb6j05ib().b[8][0]++, order.notes) ||
      /* istanbul ignore next */
      (cov_1tjb6j05ib().b[8][1]++, '')}\n\nEntrega completada: ${deliveryNotes}`.trim()) :
      /* istanbul ignore next */
      (cov_1tjb6j05ib().b[7][1]++, order.notes)
    }).eq('id', orderId));
    /* istanbul ignore next */
    cov_1tjb6j05ib().s[28]++;
    if (updateError) {
      /* istanbul ignore next */
      cov_1tjb6j05ib().b[9][0]++;
      cov_1tjb6j05ib().s[29]++;
      console.error('Error updating order:', updateError);
      /* istanbul ignore next */
      cov_1tjb6j05ib().s[30]++;
      return _server.NextResponse.json({
        error: 'Error al actualizar la orden'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_1tjb6j05ib().b[9][1]++;
    }
    // Crear registro de entrega
    const deliveryRecord =
    /* istanbul ignore next */
    (cov_1tjb6j05ib().s[31]++, {
      order_id: orderId,
      driver_id: driver.id,
      delivery_time:
      /* istanbul ignore next */
      (cov_1tjb6j05ib().b[10][0]++, deliveryTime) ||
      /* istanbul ignore next */
      (cov_1tjb6j05ib().b[10][1]++, new Date().toISOString()),
      delivery_location: deliveryLocation ?
      /* istanbul ignore next */
      (cov_1tjb6j05ib().b[11][0]++, JSON.stringify(deliveryLocation)) :
      /* istanbul ignore next */
      (cov_1tjb6j05ib().b[11][1]++, null),
      delivery_notes:
      /* istanbul ignore next */
      (cov_1tjb6j05ib().b[12][0]++, deliveryNotes) ||
      /* istanbul ignore next */
      (cov_1tjb6j05ib().b[12][1]++, null),
      recipient_name:
      /* istanbul ignore next */
      (cov_1tjb6j05ib().b[13][0]++, recipientName) ||
      /* istanbul ignore next */
      (cov_1tjb6j05ib().b[13][1]++, null),
      delivery_photo:
      /* istanbul ignore next */
      (cov_1tjb6j05ib().b[14][0]++, deliveryPhoto) ||
      /* istanbul ignore next */
      (cov_1tjb6j05ib().b[14][1]++, null),
      created_at: new Date().toISOString()
    });
    // Intentar insertar en tabla de entregas (si existe)
    /* istanbul ignore next */
    cov_1tjb6j05ib().s[32]++;
    try {
      const {
        error: deliveryError
      } =
      /* istanbul ignore next */
      (cov_1tjb6j05ib().s[33]++, await supabase.from('deliveries').insert(deliveryRecord));
      /* istanbul ignore next */
      cov_1tjb6j05ib().s[34]++;
      if (deliveryError) {
        /* istanbul ignore next */
        cov_1tjb6j05ib().b[15][0]++;
        cov_1tjb6j05ib().s[35]++;
        console.warn('Could not insert delivery record:', deliveryError);
        // No fallar si la tabla no existe, solo logear
      } else
      /* istanbul ignore next */
      {
        cov_1tjb6j05ib().b[15][1]++;
      }
    } catch (err) {
      /* istanbul ignore next */
      cov_1tjb6j05ib().s[36]++;
      console.warn('Deliveries table might not exist:', err);
    }
    // Obtener informaciÃ³n actualizada de la orden
    const {
      data: updatedOrder,
      error: fetchError
    } =
    /* istanbul ignore next */
    (cov_1tjb6j05ib().s[37]++, await supabase.from('orders').select(`
        id,
        total,
        status,
        fulfillment_status,
        order_number,
        shipping_address,
        created_at,
        updated_at,
        order_items (
          id,
          quantity,
          price,
          products (
            name
          )
        )
      `).eq('id', orderId).single());
    /* istanbul ignore next */
    cov_1tjb6j05ib().s[38]++;
    if (fetchError) {
      /* istanbul ignore next */
      cov_1tjb6j05ib().b[16][0]++;
      cov_1tjb6j05ib().s[39]++;
      console.error('Error fetching updated order:', fetchError);
    } else
    /* istanbul ignore next */
    {
      cov_1tjb6j05ib().b[16][1]++;
    }
    // Registrar actividad del driver
    cov_1tjb6j05ib().s[40]++;
    try {
      /* istanbul ignore next */
      cov_1tjb6j05ib().s[41]++;
      await supabase.from('driver_activities').insert({
        driver_id: driver.id,
        activity_type: 'delivery_completed',
        order_id: orderId,
        location: deliveryLocation ?
        /* istanbul ignore next */
        (cov_1tjb6j05ib().b[17][0]++, JSON.stringify(deliveryLocation)) :
        /* istanbul ignore next */
        (cov_1tjb6j05ib().b[17][1]++, null),
        notes: `Entrega completada para orden ${
        /* istanbul ignore next */
        (cov_1tjb6j05ib().b[18][0]++, order.order_number) ||
        /* istanbul ignore next */
        (cov_1tjb6j05ib().b[18][1]++, `#${orderId}`)}`,
        created_at: new Date().toISOString()
      });
    } catch (err) {
      /* istanbul ignore next */
      cov_1tjb6j05ib().s[42]++;
      console.warn('Could not log driver activity:', err);
    }
    /* istanbul ignore next */
    cov_1tjb6j05ib().s[43]++;
    return _server.NextResponse.json({
      success: true,
      message: 'Entrega marcada como completada exitosamente',
      data: {
        orderId,
        orderNumber:
        /* istanbul ignore next */
        (cov_1tjb6j05ib().b[19][0]++, order.order_number) ||
        /* istanbul ignore next */
        (cov_1tjb6j05ib().b[19][1]++, `#${orderId}`),
        deliveryTime:
        /* istanbul ignore next */
        (cov_1tjb6j05ib().b[20][0]++, deliveryTime) ||
        /* istanbul ignore next */
        (cov_1tjb6j05ib().b[20][1]++, new Date().toISOString()),
        driver: {
          id: driver.id,
          name: `${driver.first_name} ${driver.last_name}`
        },
        order:
        /* istanbul ignore next */
        (cov_1tjb6j05ib().b[21][0]++, updatedOrder) ||
        /* istanbul ignore next */
        (cov_1tjb6j05ib().b[21][1]++, order),
        deliveryDetails: {
          location: deliveryLocation,
          notes: deliveryNotes,
          recipientName,
          hasPhoto: !!deliveryPhoto
        }
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1tjb6j05ib().s[44]++;
    console.error('Error in complete-delivery API:', error);
    /* istanbul ignore next */
    cov_1tjb6j05ib().s[45]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,