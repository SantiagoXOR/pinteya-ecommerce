0477a7d764f878e91f098ffc830085bc
// ===================================
// MIDDLEWARE: Error Suppression
// ===================================
"use strict";

/* istanbul ignore next */
function cov_11hmees8v() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\middleware\\error-suppression.ts";
  var hash = "8246bf33b37853cbdd9c29218c8272bca010d4b6";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\middleware\\error-suppression.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "2": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "3": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 27,
          column: 3
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 48
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 43
        }
      },
      "6": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 35
        }
      },
      "7": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 40
        }
      },
      "8": {
        start: {
          line: 28,
          column: 16
        },
        end: {
          line: 28,
          column: 38
        }
      },
      "9": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 95,
          column: 6
        }
      },
      "10": {
        start: {
          line: 32,
          column: 37
        },
        end: {
          line: 32,
          column: 50
        }
      },
      "11": {
        start: {
          line: 33,
          column: 36
        },
        end: {
          line: 33,
          column: 48
        }
      },
      "12": {
        start: {
          line: 35,
          column: 40
        },
        end: {
          line: 45,
          column: 9
        }
      },
      "13": {
        start: {
          line: 47,
          column: 36
        },
        end: {
          line: 49,
          column: 9
        }
      },
      "14": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 114
        }
      },
      "15": {
        start: {
          line: 48,
          column: 59
        },
        end: {
          line: 48,
          column: 112
        }
      },
      "16": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 62,
          column: 10
        }
      },
      "17": {
        start: {
          line: 52,
          column: 28
        },
        end: {
          line: 52,
          column: 42
        }
      },
      "18": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 59,
          column: 13
        }
      },
      "19": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 57,
          column: 17
        }
      },
      "20": {
        start: {
          line: 56,
          column: 20
        },
        end: {
          line: 56,
          column: 69
        }
      },
      "21": {
        start: {
          line: 58,
          column: 16
        },
        end: {
          line: 58,
          column: 23
        }
      },
      "22": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 42
        }
      },
      "23": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 75,
          column: 10
        }
      },
      "24": {
        start: {
          line: 65,
          column: 28
        },
        end: {
          line: 65,
          column: 42
        }
      },
      "25": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 72,
          column: 13
        }
      },
      "26": {
        start: {
          line: 68,
          column: 16
        },
        end: {
          line: 70,
          column: 17
        }
      },
      "27": {
        start: {
          line: 69,
          column: 20
        },
        end: {
          line: 69,
          column: 71
        }
      },
      "28": {
        start: {
          line: 71,
          column: 16
        },
        end: {
          line: 71,
          column: 23
        }
      },
      "29": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 41
        }
      },
      "30": {
        start: {
          line: 77,
          column: 25
        },
        end: {
          line: 77,
          column: 52
        }
      },
      "31": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 57
        }
      },
      "32": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 66
        }
      },
      "33": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 86,
          column: 9
        }
      },
      "34": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 89
        }
      },
      "35": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 55
        }
      },
      "36": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 49
        }
      },
      "37": {
        start: {
          line: 88,
          column: 24
        },
        end: {
          line: 91,
          column: 9
        }
      },
      "38": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 49
        }
      },
      "39": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 90,
          column: 47
        }
      },
      "40": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 93,
          column: 37
        }
      },
      "41": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 94,
          column: 24
        }
      },
      "42": {
        start: {
          line: 98,
          column: 4
        },
        end: {
          line: 141,
          column: 6
        }
      },
      "43": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 140,
          column: 9
        }
      },
      "44": {
        start: {
          line: 101,
          column: 34
        },
        end: {
          line: 101,
          column: 60
        }
      },
      "45": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 105,
          column: 13
        }
      },
      "46": {
        start: {
          line: 104,
          column: 16
        },
        end: {
          line: 104,
          column: 47
        }
      },
      "47": {
        start: {
          line: 106,
          column: 27
        },
        end: {
          line: 106,
          column: 58
        }
      },
      "48": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 26
        }
      },
      "49": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 123,
          column: 13
        }
      },
      "50": {
        start: {
          line: 112,
          column: 16
        },
        end: {
          line: 122,
          column: 19
        }
      },
      "51": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 137,
          column: 13
        }
      },
      "52": {
        start: {
          line: 126,
          column: 16
        },
        end: {
          line: 136,
          column: 19
        }
      },
      "53": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 139,
          column: 24
        }
      },
      "54": {
        start: {
          line: 144,
          column: 4
        },
        end: {
          line: 146,
          column: 5
        }
      },
      "55": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 145,
          column: 15
        }
      },
      "56": {
        start: {
          line: 148,
          column: 4
        },
        end: {
          line: 156,
          column: 7
        }
      },
      "57": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 155,
          column: 9
        }
      },
      "58": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 151,
          column: 35
        }
      },
      "59": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 154,
          column: 13
        }
      },
      "60": {
        start: {
          line: 153,
          column: 16
        },
        end: {
          line: 153,
          column: 83
        }
      },
      "61": {
        start: {
          line: 158,
          column: 26
        },
        end: {
          line: 158,
          column: 38
        }
      },
      "62": {
        start: {
          line: 159,
          column: 4
        },
        end: {
          line: 172,
          column: 6
        }
      },
      "63": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 171,
          column: 9
        }
      },
      "64": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 161,
          column: 48
        }
      },
      "65": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 169,
          column: 13
        }
      },
      "66": {
        start: {
          line: 165,
          column: 16
        },
        end: {
          line: 167,
          column: 17
        }
      },
      "67": {
        start: {
          line: 166,
          column: 20
        },
        end: {
          line: 166,
          column: 76
        }
      },
      "68": {
        start: {
          line: 168,
          column: 16
        },
        end: {
          line: 168,
          column: 28
        }
      },
      "69": {
        start: {
          line: 170,
          column: 12
        },
        end: {
          line: 170,
          column: 24
        }
      },
      "70": {
        start: {
          line: 173,
          column: 4
        },
        end: {
          line: 173,
          column: 58
        }
      },
      "71": {
        start: {
          line: 176,
          column: 4
        },
        end: {
          line: 178,
          column: 5
        }
      },
      "72": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 177,
          column: 38
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 16
          }
        },
        loc: {
          start: {
            line: 8,
            column: 30
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 44
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 39
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 31
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 36
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "5": {
        name: "createErrorSuppressionMiddleware",
        decl: {
          start: {
            line: 29,
            column: 9
          },
          end: {
            line: 29,
            column: 41
          }
        },
        loc: {
          start: {
            line: 29,
            column: 44
          },
          end: {
            line: 96,
            column: 1
          }
        },
        line: 29
      },
      "6": {
        name: "errorSuppressionMiddleware",
        decl: {
          start: {
            line: 30,
            column: 20
          },
          end: {
            line: 30,
            column: 46
          }
        },
        loc: {
          start: {
            line: 30,
            column: 56
          },
          end: {
            line: 95,
            column: 5
          }
        },
        line: 30
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 47,
            column: 36
          },
          end: {
            line: 47,
            column: 37
          }
        },
        loc: {
          start: {
            line: 47,
            column: 47
          },
          end: {
            line: 49,
            column: 9
          }
        },
        line: 47
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 48,
            column: 48
          },
          end: {
            line: 48,
            column: 49
          }
        },
        loc: {
          start: {
            line: 48,
            column: 59
          },
          end: {
            line: 48,
            column: 112
          }
        },
        line: 48
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 51,
            column: 24
          },
          end: {
            line: 51,
            column: 25
          }
        },
        loc: {
          start: {
            line: 51,
            column: 35
          },
          end: {
            line: 62,
            column: 9
          }
        },
        line: 51
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 64,
            column: 23
          },
          end: {
            line: 64,
            column: 24
          }
        },
        loc: {
          start: {
            line: 64,
            column: 34
          },
          end: {
            line: 75,
            column: 9
          }
        },
        line: 64
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 88,
            column: 24
          },
          end: {
            line: 88,
            column: 25
          }
        },
        loc: {
          start: {
            line: 88,
            column: 28
          },
          end: {
            line: 91,
            column: 9
          }
        },
        line: 88
      },
      "12": {
        name: "withNetworkErrorHandling",
        decl: {
          start: {
            line: 97,
            column: 9
          },
          end: {
            line: 97,
            column: 33
          }
        },
        loc: {
          start: {
            line: 97,
            column: 43
          },
          end: {
            line: 142,
            column: 1
          }
        },
        line: 97
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 98,
            column: 11
          },
          end: {
            line: 98,
            column: 12
          }
        },
        loc: {
          start: {
            line: 98,
            column: 44
          },
          end: {
            line: 141,
            column: 5
          }
        },
        line: 98
      },
      "14": {
        name: "setupGlobalErrorSuppression",
        decl: {
          start: {
            line: 143,
            column: 9
          },
          end: {
            line: 143,
            column: 36
          }
        },
        loc: {
          start: {
            line: 143,
            column: 39
          },
          end: {
            line: 174,
            column: 1
          }
        },
        line: 143
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 148,
            column: 50
          },
          end: {
            line: 148,
            column: 51
          }
        },
        loc: {
          start: {
            line: 148,
            column: 59
          },
          end: {
            line: 156,
            column: 5
          }
        },
        line: 148
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 159,
            column: 19
          },
          end: {
            line: 159,
            column: 20
          }
        },
        loc: {
          start: {
            line: 159,
            column: 36
          },
          end: {
            line: 172,
            column: 5
          }
        },
        line: 159
      },
      "17": {
        name: "useErrorSuppression",
        decl: {
          start: {
            line: 175,
            column: 9
          },
          end: {
            line: 175,
            column: 28
          }
        },
        loc: {
          start: {
            line: 175,
            column: 31
          },
          end: {
            line: 179,
            column: 1
          }
        },
        line: 175
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 59,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 59,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "1": {
        loc: {
          start: {
            line: 55,
            column: 16
          },
          end: {
            line: 57,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 16
          },
          end: {
            line: 57,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "2": {
        loc: {
          start: {
            line: 66,
            column: 12
          },
          end: {
            line: 72,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 12
          },
          end: {
            line: 72,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "3": {
        loc: {
          start: {
            line: 68,
            column: 16
          },
          end: {
            line: 70,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 16
          },
          end: {
            line: 70,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "4": {
        loc: {
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 86,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 86,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "5": {
        loc: {
          start: {
            line: 103,
            column: 12
          },
          end: {
            line: 105,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 12
          },
          end: {
            line: 105,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "6": {
        loc: {
          start: {
            line: 110,
            column: 12
          },
          end: {
            line: 123,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 12
          },
          end: {
            line: 123,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 110
      },
      "7": {
        loc: {
          start: {
            line: 110,
            column: 16
          },
          end: {
            line: 110,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 110,
            column: 16
          },
          end: {
            line: 110,
            column: 43
          }
        }, {
          start: {
            line: 110,
            column: 47
          },
          end: {
            line: 110,
            column: 75
          }
        }],
        line: 110
      },
      "8": {
        loc: {
          start: {
            line: 124,
            column: 12
          },
          end: {
            line: 137,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 124,
            column: 12
          },
          end: {
            line: 137,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 124
      },
      "9": {
        loc: {
          start: {
            line: 124,
            column: 16
          },
          end: {
            line: 124,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 124,
            column: 16
          },
          end: {
            line: 124,
            column: 45
          }
        }, {
          start: {
            line: 124,
            column: 49
          },
          end: {
            line: 124,
            column: 73
          }
        }],
        line: 124
      },
      "10": {
        loc: {
          start: {
            line: 144,
            column: 4
          },
          end: {
            line: 146,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 144,
            column: 4
          },
          end: {
            line: 146,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 144
      },
      "11": {
        loc: {
          start: {
            line: 149,
            column: 8
          },
          end: {
            line: 155,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 149,
            column: 8
          },
          end: {
            line: 155,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 149
      },
      "12": {
        loc: {
          start: {
            line: 149,
            column: 12
          },
          end: {
            line: 149,
            column: 133
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 149,
            column: 12
          },
          end: {
            line: 149,
            column: 47
          }
        }, {
          start: {
            line: 149,
            column: 51
          },
          end: {
            line: 149,
            column: 87
          }
        }, {
          start: {
            line: 149,
            column: 91
          },
          end: {
            line: 149,
            column: 133
          }
        }],
        line: 149
      },
      "13": {
        loc: {
          start: {
            line: 152,
            column: 12
          },
          end: {
            line: 154,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 12
          },
          end: {
            line: 154,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 152
      },
      "14": {
        loc: {
          start: {
            line: 164,
            column: 12
          },
          end: {
            line: 169,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 164,
            column: 12
          },
          end: {
            line: 169,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 164
      },
      "15": {
        loc: {
          start: {
            line: 164,
            column: 16
          },
          end: {
            line: 164,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 164,
            column: 16
          },
          end: {
            line: 164,
            column: 43
          }
        }, {
          start: {
            line: 164,
            column: 47
          },
          end: {
            line: 164,
            column: 75
          }
        }],
        line: 164
      },
      "16": {
        loc: {
          start: {
            line: 165,
            column: 16
          },
          end: {
            line: 167,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 165,
            column: 16
          },
          end: {
            line: 167,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 165
      },
      "17": {
        loc: {
          start: {
            line: 176,
            column: 4
          },
          end: {
            line: 178,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 4
          },
          end: {
            line: 178,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 176
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\middleware\\error-suppression.ts"],
      sourcesContent: ["// ===================================\r\n// MIDDLEWARE: Error Suppression\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\n\r\n/**\r\n * Middleware para suprimir errores de red comunes que no son cr\xEDticos\r\n */\r\nexport function createErrorSuppressionMiddleware() {\r\n  return function errorSuppressionMiddleware(request: NextRequest) {\r\n    // Interceptar y suprimir errores comunes de red\r\n    const originalConsoleError = console.error;\r\n    const originalConsoleWarn = console.warn;\r\n\r\n    // Lista de patrones de errores a suprimir\r\n    const suppressedErrorPatterns = [\r\n      'ERR_ABORTED',\r\n      'AbortError',\r\n      'The user aborted a request',\r\n      'Request was aborted',\r\n      'net::ERR_ABORTED',\r\n      'Failed to fetch',\r\n      'NetworkError when attempting to fetch resource',\r\n      'Load failed',\r\n      'Connection was aborted'\r\n    ];\r\n\r\n    // Funci\xF3n para verificar si un error debe ser suprimido\r\n    const shouldSuppressError = (message: string): boolean => {\r\n      return suppressedErrorPatterns.some(pattern => \r\n        message.toLowerCase().includes(pattern.toLowerCase())\r\n      );\r\n    };\r\n\r\n    // Override console.error para filtrar errores\r\n    console.error = (...args: any[]) => {\r\n      const message = args.join(' ');\r\n      \r\n      if (shouldSuppressError(message)) {\r\n        // En desarrollo, mostrar como debug\r\n        if (process.env.NODE_ENV === 'development') {\r\n          console.debug('\uD83D\uDD07 [Suppressed Error]:', ...args);\r\n        }\r\n        return;\r\n      }\r\n      \r\n      // Permitir otros errores\r\n      originalConsoleError(...args);\r\n    };\r\n\r\n    // Override console.warn para filtrar warnings\r\n    console.warn = (...args: any[]) => {\r\n      const message = args.join(' ');\r\n      \r\n      if (shouldSuppressError(message)) {\r\n        // En desarrollo, mostrar como debug\r\n        if (process.env.NODE_ENV === 'development') {\r\n          console.debug('\uD83D\uDD07 [Suppressed Warning]:', ...args);\r\n        }\r\n        return;\r\n      }\r\n      \r\n      // Permitir otros warnings\r\n      originalConsoleWarn(...args);\r\n    };\r\n\r\n    // Configurar headers para mejorar el manejo de errores de red\r\n    const response = NextResponse.next();\r\n    \r\n    // Headers para mejorar la estabilidad de la conexi\xF3n\r\n    response.headers.set('Connection', 'keep-alive');\r\n    response.headers.set('Keep-Alive', 'timeout=5, max=1000');\r\n    \r\n    // Headers para cache y performance\r\n    if (request.nextUrl.pathname.startsWith('/api/')) {\r\n      response.headers.set('Cache-Control', 'no-cache, no-store, must-revalidate');\r\n      response.headers.set('Pragma', 'no-cache');\r\n      response.headers.set('Expires', '0');\r\n    }\r\n\r\n    // Cleanup function (se ejecutar\xE1 cuando la request termine)\r\n    const cleanup = () => {\r\n      console.error = originalConsoleError;\r\n      console.warn = originalConsoleWarn;\r\n    };\r\n\r\n    // Agregar cleanup al response\r\n    (response as any).__cleanup = cleanup;\r\n\r\n    return response;\r\n  };\r\n}\r\n\r\n/**\r\n * Wrapper para APIs que maneja errores de red de manera robusta\r\n */\r\nexport function withNetworkErrorHandling(handler: Function) {\r\n  return async function (request: NextRequest, context?: any) {\r\n    try {\r\n      // Configurar timeout para la request\r\n      const timeoutSignal = AbortSignal.timeout(30000); // 30 segundos\r\n      \r\n      // Agregar signal de timeout al request si no existe\r\n      if (!request.signal) {\r\n        (request as any).signal = timeoutSignal;\r\n      }\r\n\r\n      const result = await handler(request, context);\r\n      return result;\r\n\r\n    } catch (error: any) {\r\n      // Manejar diferentes tipos de errores\r\n      if (error.name === 'AbortError' || error.code === 'ERR_ABORTED') {\r\n        // Error de abort - respuesta silenciosa\r\n        return new NextResponse(\r\n          JSON.stringify({\r\n            success: false,\r\n            error: 'Request was cancelled',\r\n            code: 'REQUEST_CANCELLED'\r\n          }),\r\n          {\r\n            status: 499, // Client Closed Request\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'X-Error-Type': 'abort'\r\n            }\r\n          }\r\n        );\r\n      }\r\n\r\n      if (error.name === 'TimeoutError' || error.code === 'TIMEOUT') {\r\n        // Error de timeout\r\n        return new NextResponse(\r\n          JSON.stringify({\r\n            success: false,\r\n            error: 'Request timeout',\r\n            code: 'REQUEST_TIMEOUT'\r\n          }),\r\n          {\r\n            status: 408,\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'X-Error-Type': 'timeout'\r\n            }\r\n          }\r\n        );\r\n      }\r\n\r\n      // Re-throw otros errores para manejo normal\r\n      throw error;\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Funci\xF3n para configurar supresi\xF3n de errores globalmente\r\n */\r\nexport function setupGlobalErrorSuppression() {\r\n  if (typeof window === 'undefined') {return;} // Solo en el cliente\r\n\r\n  // Suprimir errores de unhandled promise rejections para AbortError\r\n  window.addEventListener('unhandledrejection', (event) => {\r\n    if (event.reason?.name === 'AbortError' || \r\n        event.reason?.code === 'ERR_ABORTED' ||\r\n        event.reason?.message?.includes('aborted')) {\r\n      \r\n      // Prevenir que aparezca en la consola\r\n      event.preventDefault();\r\n      \r\n      if (process.env.NODE_ENV === 'development') {\r\n        console.debug('\uD83D\uDD07 Suppressed unhandled AbortError:', event.reason);\r\n      }\r\n    }\r\n  });\r\n\r\n  // Interceptar errores de fetch globalmente\r\n  const originalFetch = window.fetch;\r\n  window.fetch = async (...args) => {\r\n    try {\r\n      return await originalFetch(...args);\r\n    } catch (error: any) {\r\n      // Suprimir errores de abort en fetch\r\n      if (error.name === 'AbortError' || error.code === 'ERR_ABORTED') {\r\n        if (process.env.NODE_ENV === 'development') {\r\n          console.debug('\uD83D\uDD07 Suppressed fetch AbortError:', error);\r\n        }\r\n        throw error; // Re-throw para que el c\xF3digo que llama pueda manejarlo\r\n      }\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  console.log('\uD83D\uDD07 Global error suppression configured');\r\n}\r\n\r\n/**\r\n * Hook para React que configura supresi\xF3n de errores\r\n */\r\nexport function useErrorSuppression() {\r\n  if (typeof window !== 'undefined') {\r\n    setupGlobalErrorSuppression();\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["createErrorSuppressionMiddleware", "setupGlobalErrorSuppression", "useErrorSuppression", "withNetworkErrorHandling", "errorSuppressionMiddleware", "request", "originalConsoleError", "console", "error", "originalConsoleWarn", "warn", "suppressedErrorPatterns", "shouldSuppressError", "message", "some", "pattern", "toLowerCase", "includes", "args", "join", "process", "env", "NODE_ENV", "debug", "response", "NextResponse", "next", "headers", "set", "nextUrl", "pathname", "startsWith", "cleanup", "__cleanup", "handler", "context", "timeoutSignal", "AbortSignal", "timeout", "signal", "result", "name", "code", "JSON", "stringify", "success", "status", "window", "addEventListener", "event", "reason", "preventDefault", "originalFetch", "fetch", "log"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8246bf33b37853cbdd9c29218c8272bca010d4b6"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_11hmees8v = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_11hmees8v();
cov_11hmees8v().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_11hmees8v().f[0]++;
  cov_11hmees8v().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_11hmees8v().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_11hmees8v().s[3]++;
_export(exports, {
  get createErrorSuppressionMiddleware() {
    /* istanbul ignore next */
    cov_11hmees8v().f[1]++;
    cov_11hmees8v().s[4]++;
    return createErrorSuppressionMiddleware;
  },
  get setupGlobalErrorSuppression() {
    /* istanbul ignore next */
    cov_11hmees8v().f[2]++;
    cov_11hmees8v().s[5]++;
    return setupGlobalErrorSuppression;
  },
  get useErrorSuppression() {
    /* istanbul ignore next */
    cov_11hmees8v().f[3]++;
    cov_11hmees8v().s[6]++;
    return useErrorSuppression;
  },
  get withNetworkErrorHandling() {
    /* istanbul ignore next */
    cov_11hmees8v().f[4]++;
    cov_11hmees8v().s[7]++;
    return withNetworkErrorHandling;
  }
});
const _server =
/* istanbul ignore next */
(cov_11hmees8v().s[8]++, require("next/server"));
function createErrorSuppressionMiddleware() {
  /* istanbul ignore next */
  cov_11hmees8v().f[5]++;
  cov_11hmees8v().s[9]++;
  return function errorSuppressionMiddleware(request) {
    /* istanbul ignore next */
    cov_11hmees8v().f[6]++;
    // Interceptar y suprimir errores comunes de red
    const originalConsoleError =
    /* istanbul ignore next */
    (cov_11hmees8v().s[10]++, console.error);
    const originalConsoleWarn =
    /* istanbul ignore next */
    (cov_11hmees8v().s[11]++, console.warn);
    // Lista de patrones de errores a suprimir
    const suppressedErrorPatterns =
    /* istanbul ignore next */
    (cov_11hmees8v().s[12]++, ['ERR_ABORTED', 'AbortError', 'The user aborted a request', 'Request was aborted', 'net::ERR_ABORTED', 'Failed to fetch', 'NetworkError when attempting to fetch resource', 'Load failed', 'Connection was aborted']);
    // Función para verificar si un error debe ser suprimido
    /* istanbul ignore next */
    cov_11hmees8v().s[13]++;
    const shouldSuppressError = message => {
      /* istanbul ignore next */
      cov_11hmees8v().f[7]++;
      cov_11hmees8v().s[14]++;
      return suppressedErrorPatterns.some(pattern => {
        /* istanbul ignore next */
        cov_11hmees8v().f[8]++;
        cov_11hmees8v().s[15]++;
        return message.toLowerCase().includes(pattern.toLowerCase());
      });
    };
    // Override console.error para filtrar errores
    /* istanbul ignore next */
    cov_11hmees8v().s[16]++;
    console.error = (...args) => {
      /* istanbul ignore next */
      cov_11hmees8v().f[9]++;
      const message =
      /* istanbul ignore next */
      (cov_11hmees8v().s[17]++, args.join(' '));
      /* istanbul ignore next */
      cov_11hmees8v().s[18]++;
      if (shouldSuppressError(message)) {
        /* istanbul ignore next */
        cov_11hmees8v().b[0][0]++;
        cov_11hmees8v().s[19]++;
        // En desarrollo, mostrar como debug
        if (process.env.NODE_ENV === 'development') {
          /* istanbul ignore next */
          cov_11hmees8v().b[1][0]++;
          cov_11hmees8v().s[20]++;
          console.debug('🔇 [Suppressed Error]:', ...args);
        } else
        /* istanbul ignore next */
        {
          cov_11hmees8v().b[1][1]++;
        }
        cov_11hmees8v().s[21]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_11hmees8v().b[0][1]++;
      }
      // Permitir otros errores
      cov_11hmees8v().s[22]++;
      originalConsoleError(...args);
    };
    // Override console.warn para filtrar warnings
    /* istanbul ignore next */
    cov_11hmees8v().s[23]++;
    console.warn = (...args) => {
      /* istanbul ignore next */
      cov_11hmees8v().f[10]++;
      const message =
      /* istanbul ignore next */
      (cov_11hmees8v().s[24]++, args.join(' '));
      /* istanbul ignore next */
      cov_11hmees8v().s[25]++;
      if (shouldSuppressError(message)) {
        /* istanbul ignore next */
        cov_11hmees8v().b[2][0]++;
        cov_11hmees8v().s[26]++;
        // En desarrollo, mostrar como debug
        if (process.env.NODE_ENV === 'development') {
          /* istanbul ignore next */
          cov_11hmees8v().b[3][0]++;
          cov_11hmees8v().s[27]++;
          console.debug('🔇 [Suppressed Warning]:', ...args);
        } else
        /* istanbul ignore next */
        {
          cov_11hmees8v().b[3][1]++;
        }
        cov_11hmees8v().s[28]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_11hmees8v().b[2][1]++;
      }
      // Permitir otros warnings
      cov_11hmees8v().s[29]++;
      originalConsoleWarn(...args);
    };
    // Configurar headers para mejorar el manejo de errores de red
    const response =
    /* istanbul ignore next */
    (cov_11hmees8v().s[30]++, _server.NextResponse.next());
    // Headers para mejorar la estabilidad de la conexión
    /* istanbul ignore next */
    cov_11hmees8v().s[31]++;
    response.headers.set('Connection', 'keep-alive');
    /* istanbul ignore next */
    cov_11hmees8v().s[32]++;
    response.headers.set('Keep-Alive', 'timeout=5, max=1000');
    // Headers para cache y performance
    /* istanbul ignore next */
    cov_11hmees8v().s[33]++;
    if (request.nextUrl.pathname.startsWith('/api/')) {
      /* istanbul ignore next */
      cov_11hmees8v().b[4][0]++;
      cov_11hmees8v().s[34]++;
      response.headers.set('Cache-Control', 'no-cache, no-store, must-revalidate');
      /* istanbul ignore next */
      cov_11hmees8v().s[35]++;
      response.headers.set('Pragma', 'no-cache');
      /* istanbul ignore next */
      cov_11hmees8v().s[36]++;
      response.headers.set('Expires', '0');
    } else
    /* istanbul ignore next */
    {
      cov_11hmees8v().b[4][1]++;
    }
    // Cleanup function (se ejecutará cuando la request termine)
    cov_11hmees8v().s[37]++;
    const cleanup = () => {
      /* istanbul ignore next */
      cov_11hmees8v().f[11]++;
      cov_11hmees8v().s[38]++;
      console.error = originalConsoleError;
      /* istanbul ignore next */
      cov_11hmees8v().s[39]++;
      console.warn = originalConsoleWarn;
    };
    // Agregar cleanup al response
    /* istanbul ignore next */
    cov_11hmees8v().s[40]++;
    response.__cleanup = cleanup;
    /* istanbul ignore next */
    cov_11hmees8v().s[41]++;
    return response;
  };
}
function withNetworkErrorHandling(handler) {
  /* istanbul ignore next */
  cov_11hmees8v().f[12]++;
  cov_11hmees8v().s[42]++;
  return async function (request, context) {
    /* istanbul ignore next */
    cov_11hmees8v().f[13]++;
    cov_11hmees8v().s[43]++;
    try {
      // Configurar timeout para la request
      const timeoutSignal =
      /* istanbul ignore next */
      (cov_11hmees8v().s[44]++, AbortSignal.timeout(30000)); // 30 segundos
      // Agregar signal de timeout al request si no existe
      /* istanbul ignore next */
      cov_11hmees8v().s[45]++;
      if (!request.signal) {
        /* istanbul ignore next */
        cov_11hmees8v().b[5][0]++;
        cov_11hmees8v().s[46]++;
        request.signal = timeoutSignal;
      } else
      /* istanbul ignore next */
      {
        cov_11hmees8v().b[5][1]++;
      }
      const result =
      /* istanbul ignore next */
      (cov_11hmees8v().s[47]++, await handler(request, context));
      /* istanbul ignore next */
      cov_11hmees8v().s[48]++;
      return result;
    } catch (error) {
      /* istanbul ignore next */
      cov_11hmees8v().s[49]++;
      // Manejar diferentes tipos de errores
      if (
      /* istanbul ignore next */
      (cov_11hmees8v().b[7][0]++, error.name === 'AbortError') ||
      /* istanbul ignore next */
      (cov_11hmees8v().b[7][1]++, error.code === 'ERR_ABORTED')) {
        /* istanbul ignore next */
        cov_11hmees8v().b[6][0]++;
        cov_11hmees8v().s[50]++;
        // Error de abort - respuesta silenciosa
        return new _server.NextResponse(JSON.stringify({
          success: false,
          error: 'Request was cancelled',
          code: 'REQUEST_CANCELLED'
        }), {
          status: 499,
          headers: {
            'Content-Type': 'application/json',
            'X-Error-Type': 'abort'
          }
        });
      } else
      /* istanbul ignore next */
      {
        cov_11hmees8v().b[6][1]++;
      }
      cov_11hmees8v().s[51]++;
      if (
      /* istanbul ignore next */
      (cov_11hmees8v().b[9][0]++, error.name === 'TimeoutError') ||
      /* istanbul ignore next */
      (cov_11hmees8v().b[9][1]++, error.code === 'TIMEOUT')) {
        /* istanbul ignore next */
        cov_11hmees8v().b[8][0]++;
        cov_11hmees8v().s[52]++;
        // Error de timeout
        return new _server.NextResponse(JSON.stringify({
          success: false,
          error: 'Request timeout',
          code: 'REQUEST_TIMEOUT'
        }), {
          status: 408,
          headers: {
            'Content-Type': 'application/json',
            'X-Error-Type': 'timeout'
          }
        });
      } else
      /* istanbul ignore next */
      {
        cov_11hmees8v().b[8][1]++;
      }
      // Re-throw otros errores para manejo normal
      cov_11hmees8v().s[53]++;
      throw error;
    }
  };
}
function setupGlobalErrorSuppression() {
  /* istanbul ignore next */
  cov_11hmees8v().f[14]++;
  cov_11hmees8v().s[54]++;
  if (typeof window === 'undefined') {
    /* istanbul ignore next */
    cov_11hmees8v().b[10][0]++;
    cov_11hmees8v().s[55]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_11hmees8v().b[10][1]++;
  } // Solo en el cliente
  // Suprimir errores de unhandled promise rejections para AbortError
  cov_11hmees8v().s[56]++;
  window.addEventListener('unhandledrejection', event => {
    /* istanbul ignore next */
    cov_11hmees8v().f[15]++;
    cov_11hmees8v().s[57]++;
    if (
    /* istanbul ignore next */
    (cov_11hmees8v().b[12][0]++, event.reason?.name === 'AbortError') ||
    /* istanbul ignore next */
    (cov_11hmees8v().b[12][1]++, event.reason?.code === 'ERR_ABORTED') ||
    /* istanbul ignore next */
    (cov_11hmees8v().b[12][2]++, event.reason?.message?.includes('aborted'))) {
      /* istanbul ignore next */
      cov_11hmees8v().b[11][0]++;
      cov_11hmees8v().s[58]++;
      // Prevenir que aparezca en la consola
      event.preventDefault();
      /* istanbul ignore next */
      cov_11hmees8v().s[59]++;
      if (process.env.NODE_ENV === 'development') {
        /* istanbul ignore next */
        cov_11hmees8v().b[13][0]++;
        cov_11hmees8v().s[60]++;
        console.debug('🔇 Suppressed unhandled AbortError:', event.reason);
      } else
      /* istanbul ignore next */
      {
        cov_11hmees8v().b[13][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_11hmees8v().b[11][1]++;
    }
  });
  // Interceptar errores de fetch globalmente
  const originalFetch =
  /* istanbul ignore next */
  (cov_11hmees8v().s[61]++, window.fetch);
  /* istanbul ignore next */
  cov_11hmees8v().s[62]++;
  window.fetch = async (...args) => {
    /* istanbul ignore next */
    cov_11hmees8v().f[16]++;
    cov_11hmees8v().s[63]++;
    try {
      /* istanbul ignore next */
      cov_11hmees8v().s[64]++;
      return await originalFetch(...args);
    } catch (error) {
      /* istanbul ignore next */
      cov_11hmees8v().s[65]++;
      // Suprimir errores de abort en fetch
      if (
      /* istanbul ignore next */
      (cov_11hmees8v().b[15][0]++, error.name === 'AbortError') ||
      /* istanbul ignore next */
      (cov_11hmees8v().b[15][1]++, error.code === 'ERR_ABORTED')) {
        /* istanbul ignore next */
        cov_11hmees8v().b[14][0]++;
        cov_11hmees8v().s[66]++;
        if (process.env.NODE_ENV === 'development') {
          /* istanbul ignore next */
          cov_11hmees8v().b[16][0]++;
          cov_11hmees8v().s[67]++;
          console.debug('🔇 Suppressed fetch AbortError:', error);
        } else
        /* istanbul ignore next */
        {
          cov_11hmees8v().b[16][1]++;
        }
        cov_11hmees8v().s[68]++;
        throw error; // Re-throw para que el código que llama pueda manejarlo
      } else
      /* istanbul ignore next */
      {
        cov_11hmees8v().b[14][1]++;
      }
      cov_11hmees8v().s[69]++;
      throw error;
    }
  };
  /* istanbul ignore next */
  cov_11hmees8v().s[70]++;
  console.log('🔇 Global error suppression configured');
}
function useErrorSuppression() {
  /* istanbul ignore next */
  cov_11hmees8v().f[17]++;
  cov_11hmees8v().s[71]++;
  if (typeof window !== 'undefined') {
    /* istanbul ignore next */
    cov_11hmees8v().b[17][0]++;
    cov_11hmees8v().s[72]++;
    setupGlobalErrorSuppression();
  } else
  /* istanbul ignore next */
  {
    cov_11hmees8v().b[17][1]++;
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,