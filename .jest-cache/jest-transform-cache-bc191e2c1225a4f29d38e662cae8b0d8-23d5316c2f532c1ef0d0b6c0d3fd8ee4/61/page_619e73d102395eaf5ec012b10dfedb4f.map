{"version":3,"names":["cov_2p4rcxumwo","actualCoverage","s","default","f","TestAdminProtectionPage","dynamic","results","setResults","_react","useState","testing","setTesting","runTests","testResults","adminResponse","fetch","push","test","status","ok","b","message","details","url","error","apiResponse","sessionResponse","sessionData","json","user","email","protectedRoutes","route","response","getStatusIcon","_jsxruntime","jsx","_lucidereact","CheckCircle","className","XCircle","AlertTriangle","Shield","getStatusColor","jsxs","onClick","disabled","length","map","result","index","JSON","stringify","filter","r"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\test-admin-protection\\page.tsx"],"sourcesContent":["/**\r\n * Página de Prueba de Protección Admin\r\n * Para verificar que solo santiago@xor.com.ar tenga acceso admin\r\n */\r\n\r\n'use client';\r\n\r\nimport { useState } from 'react';\r\nimport { Shield, CheckCircle, XCircle, AlertTriangle } from 'lucide-react';\r\n\r\n// Forzar renderizado dinámico para evitar problemas con prerendering\r\nexport const dynamic = 'force-dynamic';\r\n\r\ninterface TestResult {\r\n  test: string;\r\n  status: 'success' | 'error' | 'warning';\r\n  message: string;\r\n  details?: any;\r\n}\r\n\r\nexport default function TestAdminProtectionPage() {\r\n  const [results, setResults] = useState<TestResult[]>([]);\r\n  const [testing, setTesting] = useState(false);\r\n\r\n  const runTests = async () => {\r\n    setTesting(true);\r\n    setResults([]);\r\n    const testResults: TestResult[] = [];\r\n\r\n    // Test 1: Verificar acceso a /admin\r\n    try {\r\n      const adminResponse = await fetch('/admin');\r\n      testResults.push({\r\n        test: 'Acceso a /admin',\r\n        status: adminResponse.ok ? 'success' : 'error',\r\n        message: adminResponse.ok \r\n          ? 'Acceso permitido (usuario admin)' \r\n          : `Acceso denegado (${adminResponse.status})`,\r\n        details: { status: adminResponse.status, url: '/admin' }\r\n      });\r\n    } catch (error) {\r\n      testResults.push({\r\n        test: 'Acceso a /admin',\r\n        status: 'error',\r\n        message: 'Error de conexión',\r\n        details: error\r\n      });\r\n    }\r\n\r\n    // Test 2: Verificar acceso a API admin\r\n    try {\r\n      const apiResponse = await fetch('/api/admin/products');\r\n      testResults.push({\r\n        test: 'API /api/admin/products',\r\n        status: apiResponse.ok ? 'success' : 'error',\r\n        message: apiResponse.ok \r\n          ? 'API accesible (usuario admin)' \r\n          : `API bloqueada (${apiResponse.status})`,\r\n        details: { status: apiResponse.status, url: '/api/admin/products' }\r\n      });\r\n    } catch (error) {\r\n      testResults.push({\r\n        test: 'API /api/admin/products',\r\n        status: 'error',\r\n        message: 'Error de conexión',\r\n        details: error\r\n      });\r\n    }\r\n\r\n    // Test 3: Verificar sesión actual\r\n    try {\r\n      const sessionResponse = await fetch('/api/auth/session');\r\n      const sessionData = await sessionResponse.json();\r\n      testResults.push({\r\n        test: 'Sesión actual',\r\n        status: sessionData?.user ? 'success' : 'warning',\r\n        message: sessionData?.user \r\n          ? `Usuario: ${sessionData.user.email}` \r\n          : 'No hay sesión activa',\r\n        details: sessionData\r\n      });\r\n    } catch (error) {\r\n      testResults.push({\r\n        test: 'Sesión actual',\r\n        status: 'error',\r\n        message: 'Error obteniendo sesión',\r\n        details: error\r\n      });\r\n    }\r\n\r\n    // Test 4: Verificar protección de middleware\r\n    try {\r\n      const protectedRoutes = [\r\n        '/api/admin/orders',\r\n        '/api/admin/users',\r\n        '/api/admin/analytics'\r\n      ];\r\n\r\n      for (const route of protectedRoutes) {\r\n        const response = await fetch(route);\r\n        testResults.push({\r\n          test: `Protección ${route}`,\r\n          status: response.ok ? 'success' : 'error',\r\n          message: response.ok \r\n            ? 'Acceso permitido' \r\n            : `Bloqueado (${response.status})`,\r\n          details: { status: response.status, url: route }\r\n        });\r\n      }\r\n    } catch (error) {\r\n      testResults.push({\r\n        test: 'Protección de rutas',\r\n        status: 'error',\r\n        message: 'Error probando rutas protegidas',\r\n        details: error\r\n      });\r\n    }\r\n\r\n    setResults(testResults);\r\n    setTesting(false);\r\n  };\r\n\r\n  const getStatusIcon = (status: string) => {\r\n    switch (status) {\r\n      case 'success':\r\n        return <CheckCircle className=\"w-5 h-5 text-green-500\" />;\r\n      case 'error':\r\n        return <XCircle className=\"w-5 h-5 text-red-500\" />;\r\n      case 'warning':\r\n        return <AlertTriangle className=\"w-5 h-5 text-yellow-500\" />;\r\n      default:\r\n        return <Shield className=\"w-5 h-5 text-gray-500\" />;\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'success':\r\n        return 'bg-green-50 border-green-200';\r\n      case 'error':\r\n        return 'bg-red-50 border-red-200';\r\n      case 'warning':\r\n        return 'bg-yellow-50 border-yellow-200';\r\n      default:\r\n        return 'bg-gray-50 border-gray-200';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 py-8\">\r\n      <div className=\"max-w-4xl mx-auto px-4\">\r\n        {/* Header */}\r\n        <div className=\"bg-white rounded-lg shadow-sm p-6 mb-6\">\r\n          <div className=\"flex items-center gap-3 mb-4\">\r\n            <Shield className=\"w-8 h-8 text-blaze-orange-600\" />\r\n            <div>\r\n              <h1 className=\"text-2xl font-bold text-gray-900\">\r\n                Test de Protección Admin\r\n              </h1>\r\n              <p className=\"text-gray-600\">\r\n                Verificar que solo santiago@xor.com.ar tenga acceso al panel administrativo\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <button\r\n            onClick={runTests}\r\n            disabled={testing}\r\n            className=\"bg-blaze-orange-600 hover:bg-blaze-orange-700 disabled:bg-gray-400 text-white px-6 py-2 rounded-lg font-medium transition-colors\"\r\n          >\r\n            {testing ? 'Ejecutando Tests...' : 'Ejecutar Tests de Seguridad'}\r\n          </button>\r\n        </div>\r\n\r\n        {/* Results */}\r\n        {results.length > 0 && (\r\n          <div className=\"bg-white rounded-lg shadow-sm p-6\">\r\n            <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">\r\n              Resultados de las Pruebas\r\n            </h2>\r\n\r\n            <div className=\"space-y-4\">\r\n              {results.map((result, index) => (\r\n                <div\r\n                  key={index}\r\n                  className={`border rounded-lg p-4 ${getStatusColor(result.status)}`}\r\n                >\r\n                  <div className=\"flex items-start gap-3\">\r\n                    {getStatusIcon(result.status)}\r\n                    <div className=\"flex-1\">\r\n                      <h3 className=\"font-semibold text-gray-900\">\r\n                        {result.test}\r\n                      </h3>\r\n                      <p className=\"text-gray-700 mt-1\">\r\n                        {result.message}\r\n                      </p>\r\n                      {result.details && (\r\n                        <details className=\"mt-2\">\r\n                          <summary className=\"text-sm text-gray-600 cursor-pointer\">\r\n                            Ver detalles\r\n                          </summary>\r\n                          <pre className=\"mt-2 text-xs bg-gray-100 p-2 rounded overflow-auto\">\r\n                            {JSON.stringify(result.details, null, 2)}\r\n                          </pre>\r\n                        </details>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            {/* Summary */}\r\n            <div className=\"mt-6 p-4 bg-gray-100 rounded-lg\">\r\n              <h3 className=\"font-semibold text-gray-900 mb-2\">Resumen</h3>\r\n              <div className=\"grid grid-cols-3 gap-4 text-center\">\r\n                <div>\r\n                  <div className=\"text-2xl font-bold text-green-600\">\r\n                    {results.filter(r => r.status === 'success').length}\r\n                  </div>\r\n                  <div className=\"text-sm text-gray-600\">Exitosos</div>\r\n                </div>\r\n                <div>\r\n                  <div className=\"text-2xl font-bold text-red-600\">\r\n                    {results.filter(r => r.status === 'error').length}\r\n                  </div>\r\n                  <div className=\"text-sm text-gray-600\">Errores</div>\r\n                </div>\r\n                <div>\r\n                  <div className=\"text-2xl font-bold text-yellow-600\">\r\n                    {results.filter(r => r.status === 'warning').length}\r\n                  </div>\r\n                  <div className=\"text-sm text-gray-600\">Advertencias</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Instructions */}\r\n        <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-6 mt-6\">\r\n          <h3 className=\"font-semibold text-blue-900 mb-2\">\r\n            Instrucciones de Prueba\r\n          </h3>\r\n          <div className=\"text-blue-800 space-y-2\">\r\n            <p>\r\n              <strong>Para usuario admin (santiago@xor.com.ar):</strong> \r\n              Todos los tests deben ser exitosos (verde).\r\n            </p>\r\n            <p>\r\n              <strong>Para usuarios no-admin:</strong> \r\n              Los accesos a /admin y APIs admin deben fallar (rojo).\r\n            </p>\r\n            <p>\r\n              <strong>Sin autenticación:</strong> \r\n              Debe redirigir a login o mostrar 401/403.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}