c134c2d86188b22eedf9904a04253f08
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_19y2coeblh() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\products\\stats\\route.ts";
  var hash = "a027da5427179f3f2172ec1a4bdb94d9bf452276";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\products\\stats\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 23
        }
      },
      "6": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 38
        }
      },
      "7": {
        start: {
          line: 21,
          column: 19
        },
        end: {
          line: 21,
          column: 64
        }
      },
      "8": {
        start: {
          line: 22,
          column: 18
        },
        end: {
          line: 22,
          column: 69
        }
      },
      "9": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 24
        }
      },
      "10": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 90,
          column: 5
        }
      },
      "11": {
        start: {
          line: 27,
          column: 27
        },
        end: {
          line: 27,
          column: 67
        }
      },
      "12": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 34,
          column: 9
        }
      },
      "13": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 33,
          column: 15
        }
      },
      "14": {
        start: {
          line: 36,
          column: 39
        },
        end: {
          line: 36,
          column: 93
        }
      },
      "15": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 70,
          column: 9
        }
      },
      "16": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 38,
          column: 80
        }
      },
      "17": {
        start: {
          line: 40,
          column: 79
        },
        end: {
          line: 57,
          column: 14
        }
      },
      "18": {
        start: {
          line: 58,
          column: 34
        },
        end: {
          line: 63,
          column: 13
        }
      },
      "19": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 69,
          column: 15
        }
      },
      "20": {
        start: {
          line: 71,
          column: 29
        },
        end: {
          line: 76,
          column: 9
        }
      },
      "21": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 82,
          column: 11
        }
      },
      "22": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 72
        }
      },
      "23": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 89,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 19
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "GET",
        decl: {
          start: {
            line: 24,
            column: 15
          },
          end: {
            line: 24,
            column: 18
          }
        },
        loc: {
          start: {
            line: 24,
            column: 28
          },
          end: {
            line: 91,
            column: 1
          }
        },
        line: 24
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "1": {
        loc: {
          start: {
            line: 32,
            column: 24
          },
          end: {
            line: 32,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 24
          },
          end: {
            line: 32,
            column: 41
          }
        }, {
          start: {
            line: 32,
            column: 45
          },
          end: {
            line: 32,
            column: 48
          }
        }],
        line: 32
      },
      "2": {
        loc: {
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "3": {
        loc: {
          start: {
            line: 59,
            column: 32
          },
          end: {
            line: 59,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 32
          },
          end: {
            line: 59,
            column: 49
          }
        }, {
          start: {
            line: 59,
            column: 53
          },
          end: {
            line: 59,
            column: 54
          }
        }],
        line: 59
      },
      "4": {
        loc: {
          start: {
            line: 60,
            column: 33
          },
          end: {
            line: 60,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 33
          },
          end: {
            line: 60,
            column: 51
          }
        }, {
          start: {
            line: 60,
            column: 55
          },
          end: {
            line: 60,
            column: 56
          }
        }],
        line: 60
      },
      "5": {
        loc: {
          start: {
            line: 61,
            column: 36
          },
          end: {
            line: 61,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 61,
            column: 36
          },
          end: {
            line: 61,
            column: 56
          }
        }, {
          start: {
            line: 61,
            column: 60
          },
          end: {
            line: 61,
            column: 61
          }
        }],
        line: 61
      },
      "6": {
        loc: {
          start: {
            line: 62,
            column: 35
          },
          end: {
            line: 62,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 62,
            column: 35
          },
          end: {
            line: 62,
            column: 54
          }
        }, {
          start: {
            line: 62,
            column: 58
          },
          end: {
            line: 62,
            column: 59
          }
        }],
        line: 62
      },
      "7": {
        loc: {
          start: {
            line: 71,
            column: 29
          },
          end: {
            line: 76,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 71,
            column: 29
          },
          end: {
            line: 71,
            column: 39
          }
        }, {
          start: {
            line: 71,
            column: 43
          },
          end: {
            line: 76,
            column: 9
          }
        }],
        line: 71
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\products\\stats\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { requireAdminAuth } from '@/lib/auth/admin-auth';\r\nimport { supabaseAdmin } from '@/lib/integrations/supabase';\r\n\r\n/**\r\n * GET /api/admin/products/stats\r\n * Obtener estad\xEDsticas reales de productos desde Supabase\r\n */\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    // Verificar autenticaci\xF3n y permisos de admin\r\n    const authResult = await requireAdminAuth();\r\n\r\n    if (!authResult.success) {\r\n      return NextResponse.json(\r\n        { error: authResult.error },\r\n        { status: authResult.status || 401 }\r\n      );\r\n    }\r\n\r\n    // Obtener estad\xEDsticas usando una sola query optimizada\r\n    const { data: stats, error } = await supabaseAdmin.rpc('get_product_stats');\r\n\r\n    if (error) {\r\n      console.error('Error obteniendo estad\xEDsticas de productos:', error);\r\n\r\n      // Fallback: calcular estad\xEDsticas manualmente\r\n      const [totalResult, activeResult, lowStockResult, noStockResult] = await Promise.all([\r\n        supabaseAdmin.from('products').select('id', { count: 'exact', head: true }),\r\n        supabaseAdmin.from('products').select('id', { count: 'exact', head: true }).gt('stock', 0),\r\n        supabaseAdmin.from('products').select('id', { count: 'exact', head: true }).gt('stock', 0).lte('stock', 10),\r\n        supabaseAdmin.from('products').select('id', { count: 'exact', head: true }).or('stock.eq.0,stock.is.null')\r\n      ]);\r\n\r\n      const fallbackStats = {\r\n        total_products: totalResult.count || 0,\r\n        active_products: activeResult.count || 0,\r\n        low_stock_products: lowStockResult.count || 0,\r\n        no_stock_products: noStockResult.count || 0\r\n      };\r\n\r\n      return NextResponse.json({\r\n        success: true,\r\n        stats: fallbackStats,\r\n        source: 'fallback',\r\n        timestamp: new Date().toISOString()\r\n      });\r\n    }\r\n\r\n    const productStats = stats?.[0] || {\r\n      total_products: 0,\r\n      active_products: 0,\r\n      low_stock_products: 0,\r\n      no_stock_products: 0\r\n    };\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      stats: productStats,\r\n      source: 'database_function',\r\n      timestamp: new Date().toISOString()\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Error en GET /api/admin/products/stats:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "runtime", "request", "authResult", "requireAdminAuth", "success", "NextResponse", "json", "error", "status", "data", "stats", "supabaseAdmin", "rpc", "console", "totalResult", "activeResult", "lowStockResult", "noStockResult", "Promise", "all", "from", "select", "count", "head", "gt", "lte", "or", "fallbackStats", "total_products", "active_products", "low_stock_products", "no_stock_products", "source", "timestamp", "Date", "toISOString", "productStats"],
      mappings: "AAAA,qCAAqC;;;;;;;;;;;;QAWfA;eAAAA;;QAVTC;eAAAA;;;wBAE6B;2BACT;0BACH;AAJvB,MAAMA,UAAU;AAUhB,eAAeD,IAAIE,OAAoB;IAC5C,IAAI;QACF,8CAA8C;QAC9C,MAAMC,aAAa,MAAMC,IAAAA,2BAAgB;QAEzC,IAAI,CAACD,WAAWE,OAAO,EAAE;YACvB,OAAOC,oBAAY,CAACC,IAAI,CACtB;gBAAEC,OAAOL,WAAWK,KAAK;YAAC,GAC1B;gBAAEC,QAAQN,WAAWM,MAAM,IAAI;YAAI;QAEvC;QAEA,wDAAwD;QACxD,MAAM,EAAEC,MAAMC,KAAK,EAAEH,KAAK,EAAE,GAAG,MAAMI,uBAAa,CAACC,GAAG,CAAC;QAEvD,IAAIL,OAAO;YACTM,QAAQN,KAAK,CAAC,+CAA+CA;YAE7D,8CAA8C;YAC9C,MAAM,CAACO,aAAaC,cAAcC,gBAAgBC,cAAc,GAAG,MAAMC,QAAQC,GAAG,CAAC;gBACnFR,uBAAa,CAACS,IAAI,CAAC,YAAYC,MAAM,CAAC,MAAM;oBAAEC,OAAO;oBAASC,MAAM;gBAAK;gBACzEZ,uBAAa,CAACS,IAAI,CAAC,YAAYC,MAAM,CAAC,MAAM;oBAAEC,OAAO;oBAASC,MAAM;gBAAK,GAAGC,EAAE,CAAC,SAAS;gBACxFb,uBAAa,CAACS,IAAI,CAAC,YAAYC,MAAM,CAAC,MAAM;oBAAEC,OAAO;oBAASC,MAAM;gBAAK,GAAGC,EAAE,CAAC,SAAS,GAAGC,GAAG,CAAC,SAAS;gBACxGd,uBAAa,CAACS,IAAI,CAAC,YAAYC,MAAM,CAAC,MAAM;oBAAEC,OAAO;oBAASC,MAAM;gBAAK,GAAGG,EAAE,CAAC;aAChF;YAED,MAAMC,gBAAgB;gBACpBC,gBAAgBd,YAAYQ,KAAK,IAAI;gBACrCO,iBAAiBd,aAAaO,KAAK,IAAI;gBACvCQ,oBAAoBd,eAAeM,KAAK,IAAI;gBAC5CS,mBAAmBd,cAAcK,KAAK,IAAI;YAC5C;YAEA,OAAOjB,oBAAY,CAACC,IAAI,CAAC;gBACvBF,SAAS;gBACTM,OAAOiB;gBACPK,QAAQ;gBACRC,WAAW,IAAIC,OAAOC,WAAW;YACnC;QACF;QAEA,MAAMC,eAAe1B,OAAO,CAAC,EAAE,IAAI;YACjCkB,gBAAgB;YAChBC,iBAAiB;YACjBC,oBAAoB;YACpBC,mBAAmB;QACrB;QAEA,OAAO1B,oBAAY,CAACC,IAAI,CAAC;YACvBF,SAAS;YACTM,OAAO0B;YACPJ,QAAQ;YACRC,WAAW,IAAIC,OAAOC,WAAW;QACnC;IAEF,EAAE,OAAO5B,OAAO;QACdM,QAAQN,KAAK,CAAC,2CAA2CA;QACzD,OAAOF,oBAAY,CAACC,IAAI,CACtB;YAAEC,OAAO;QAA6B,GACtC;YAAEC,QAAQ;QAAI;IAElB;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a027da5427179f3f2172ec1a4bdb94d9bf452276"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_19y2coeblh = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_19y2coeblh();
cov_19y2coeblh().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_19y2coeblh().f[0]++;
  cov_19y2coeblh().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_19y2coeblh().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_19y2coeblh().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_19y2coeblh().f[1]++;
    cov_19y2coeblh().s[4]++;
    return GET;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_19y2coeblh().f[2]++;
    cov_19y2coeblh().s[5]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_19y2coeblh().s[6]++, require("next/server"));
const _adminauth =
/* istanbul ignore next */
(cov_19y2coeblh().s[7]++, require("../../../../../lib/auth/admin-auth"));
const _supabase =
/* istanbul ignore next */
(cov_19y2coeblh().s[8]++, require("../../../../../lib/integrations/supabase"));
const runtime =
/* istanbul ignore next */
(cov_19y2coeblh().s[9]++, 'nodejs');
async function GET(request) {
  /* istanbul ignore next */
  cov_19y2coeblh().f[3]++;
  cov_19y2coeblh().s[10]++;
  try {
    // Verificar autenticaciÃ³n y permisos de admin
    const authResult =
    /* istanbul ignore next */
    (cov_19y2coeblh().s[11]++, await (0, _adminauth.requireAdminAuth)());
    /* istanbul ignore next */
    cov_19y2coeblh().s[12]++;
    if (!authResult.success) {
      /* istanbul ignore next */
      cov_19y2coeblh().b[0][0]++;
      cov_19y2coeblh().s[13]++;
      return _server.NextResponse.json({
        error: authResult.error
      }, {
        status:
        /* istanbul ignore next */
        (cov_19y2coeblh().b[1][0]++, authResult.status) ||
        /* istanbul ignore next */
        (cov_19y2coeblh().b[1][1]++, 401)
      });
    } else
    /* istanbul ignore next */
    {
      cov_19y2coeblh().b[0][1]++;
    }
    // Obtener estadÃ­sticas usando una sola query optimizada
    const {
      data: stats,
      error
    } =
    /* istanbul ignore next */
    (cov_19y2coeblh().s[14]++, await _supabase.supabaseAdmin.rpc('get_product_stats'));
    /* istanbul ignore next */
    cov_19y2coeblh().s[15]++;
    if (error) {
      /* istanbul ignore next */
      cov_19y2coeblh().b[2][0]++;
      cov_19y2coeblh().s[16]++;
      console.error('Error obteniendo estadÃ­sticas de productos:', error);
      // Fallback: calcular estadÃ­sticas manualmente
      const [totalResult, activeResult, lowStockResult, noStockResult] =
      /* istanbul ignore next */
      (cov_19y2coeblh().s[17]++, await Promise.all([_supabase.supabaseAdmin.from('products').select('id', {
        count: 'exact',
        head: true
      }), _supabase.supabaseAdmin.from('products').select('id', {
        count: 'exact',
        head: true
      }).gt('stock', 0), _supabase.supabaseAdmin.from('products').select('id', {
        count: 'exact',
        head: true
      }).gt('stock', 0).lte('stock', 10), _supabase.supabaseAdmin.from('products').select('id', {
        count: 'exact',
        head: true
      }).or('stock.eq.0,stock.is.null')]));
      const fallbackStats =
      /* istanbul ignore next */
      (cov_19y2coeblh().s[18]++, {
        total_products:
        /* istanbul ignore next */
        (cov_19y2coeblh().b[3][0]++, totalResult.count) ||
        /* istanbul ignore next */
        (cov_19y2coeblh().b[3][1]++, 0),
        active_products:
        /* istanbul ignore next */
        (cov_19y2coeblh().b[4][0]++, activeResult.count) ||
        /* istanbul ignore next */
        (cov_19y2coeblh().b[4][1]++, 0),
        low_stock_products:
        /* istanbul ignore next */
        (cov_19y2coeblh().b[5][0]++, lowStockResult.count) ||
        /* istanbul ignore next */
        (cov_19y2coeblh().b[5][1]++, 0),
        no_stock_products:
        /* istanbul ignore next */
        (cov_19y2coeblh().b[6][0]++, noStockResult.count) ||
        /* istanbul ignore next */
        (cov_19y2coeblh().b[6][1]++, 0)
      });
      /* istanbul ignore next */
      cov_19y2coeblh().s[19]++;
      return _server.NextResponse.json({
        success: true,
        stats: fallbackStats,
        source: 'fallback',
        timestamp: new Date().toISOString()
      });
    } else
    /* istanbul ignore next */
    {
      cov_19y2coeblh().b[2][1]++;
    }
    const productStats =
    /* istanbul ignore next */
    (cov_19y2coeblh().s[20]++,
    /* istanbul ignore next */
    (cov_19y2coeblh().b[7][0]++, stats?.[0]) ||
    /* istanbul ignore next */
    (cov_19y2coeblh().b[7][1]++, {
      total_products: 0,
      active_products: 0,
      low_stock_products: 0,
      no_stock_products: 0
    }));
    /* istanbul ignore next */
    cov_19y2coeblh().s[21]++;
    return _server.NextResponse.json({
      success: true,
      stats: productStats,
      source: 'database_function',
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_19y2coeblh().s[22]++;
    console.error('Error en GET /api/admin/products/stats:', error);
    /* istanbul ignore next */
    cov_19y2coeblh().s[23]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,