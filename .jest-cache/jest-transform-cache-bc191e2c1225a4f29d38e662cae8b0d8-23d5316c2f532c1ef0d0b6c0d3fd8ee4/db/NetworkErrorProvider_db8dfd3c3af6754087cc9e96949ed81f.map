{"version":3,"names":["cov_oempuhuho","actualCoverage","s","NetworkErrorBoundary","f","NetworkErrorProvider","useNetworkError","NetworkErrorContext","_react","createContext","undefined","children","enableDebugMode","b","process","env","NODE_ENV","isOnline","setIsOnline","useState","hasNetworkError","setHasNetworkError","lastError","setLastError","handleNetworkError","setupGlobalErrorHandling","_useNetworkErrorHandler","useNetworkErrorHandler","enableLogging","enableRetry","maxRetries","retryDelay","useEffect","handleOnline","console","log","handleOffline","window","addEventListener","navigator","onLine","removeEventListener","cleanup","clearError","retryConnection","response","fetch","method","cache","signal","AbortSignal","timeout","ok","Error","status","error","type","contextValue","_jsxruntime","jsx","Provider","value","context","useContext","className","jsxs","onClick","Fragment"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\providers\\NetworkErrorProvider.tsx"],"sourcesContent":["// ===================================\r\n// PROVIDER: Network Error Handler\r\n// ===================================\r\n\r\n'use client';\r\n\r\nimport React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport { useNetworkErrorHandler } from '@/hooks/useNetworkErrorHandler';\r\n\r\ninterface NetworkErrorContextType {\r\n  isOnline: boolean;\r\n  hasNetworkError: boolean;\r\n  lastError: any;\r\n  clearError: () => void;\r\n  retryConnection: () => void;\r\n}\r\n\r\nconst NetworkErrorContext = createContext<NetworkErrorContextType | undefined>(undefined);\r\n\r\ninterface NetworkErrorProviderProps {\r\n  children: React.ReactNode;\r\n  enableDebugMode?: boolean;\r\n}\r\n\r\nexport function NetworkErrorProvider({ \r\n  children, \r\n  enableDebugMode = process.env.NODE_ENV === 'development' \r\n}: NetworkErrorProviderProps) {\r\n  const [isOnline, setIsOnline] = useState(true);\r\n  const [hasNetworkError, setHasNetworkError] = useState(false);\r\n  const [lastError, setLastError] = useState<any>(null);\r\n\r\n  const { handleNetworkError, setupGlobalErrorHandling } = useNetworkErrorHandler({\r\n    enableLogging: enableDebugMode,\r\n    enableRetry: true,\r\n    maxRetries: 3,\r\n    retryDelay: 1000\r\n  });\r\n\r\n  // Monitorear estado de conexi√≥n\r\n  useEffect(() => {\r\n    const handleOnline = () => {\r\n      setIsOnline(true);\r\n      setHasNetworkError(false);\r\n      if (enableDebugMode) {\r\n        console.log('üü¢ Connection restored');\r\n      }\r\n    };\r\n\r\n    const handleOffline = () => {\r\n      setIsOnline(false);\r\n      setHasNetworkError(true);\r\n      if (enableDebugMode) {\r\n        console.log('üî¥ Connection lost');\r\n      }\r\n    };\r\n\r\n    window.addEventListener('online', handleOnline);\r\n    window.addEventListener('offline', handleOffline);\r\n\r\n    // Verificar estado inicial\r\n    setIsOnline(navigator.onLine);\r\n\r\n    return () => {\r\n      window.removeEventListener('online', handleOnline);\r\n      window.removeEventListener('offline', handleOffline);\r\n    };\r\n  }, [enableDebugMode]);\r\n\r\n  // Setup global error handling (solo para AbortError)\r\n  useEffect(() => {\r\n    const cleanup = setupGlobalErrorHandling();\r\n    return cleanup;\r\n  }, [setupGlobalErrorHandling]);\r\n\r\n  // Funci√≥n para limpiar errores\r\n  const clearError = () => {\r\n    setHasNetworkError(false);\r\n    setLastError(null);\r\n  };\r\n\r\n  // Funci√≥n para reintentar conexi√≥n\r\n  const retryConnection = async () => {\r\n    try {\r\n      // Hacer un request simple para verificar conectividad\r\n      const response = await fetch('/api/test-simple', {\r\n        method: 'GET',\r\n        cache: 'no-cache',\r\n        signal: AbortSignal.timeout(5000)\r\n      });\r\n\r\n      if (response.ok) {\r\n        setIsOnline(true);\r\n        setHasNetworkError(false);\r\n        setLastError(null);\r\n        if (enableDebugMode) {\r\n          console.log('‚úÖ Connection test successful');\r\n        }\r\n      } else {\r\n        throw new Error(`HTTP ${response.status}`);\r\n      }\r\n    } catch (error) {\r\n      setHasNetworkError(true);\r\n      setLastError(error);\r\n      handleNetworkError(error, { type: 'connection-test' });\r\n      if (enableDebugMode) {\r\n        console.error('‚ùå Connection test failed:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const contextValue: NetworkErrorContextType = {\r\n    isOnline,\r\n    hasNetworkError,\r\n    lastError,\r\n    clearError,\r\n    retryConnection\r\n  };\r\n\r\n  return (\r\n    <NetworkErrorContext.Provider value={contextValue}>\r\n      {children}\r\n    </NetworkErrorContext.Provider>\r\n  );\r\n}\r\n\r\n// Hook para usar el contexto\r\nexport function useNetworkError() {\r\n  const context = useContext(NetworkErrorContext);\r\n  if (context === undefined) {\r\n    throw new Error('useNetworkError must be used within a NetworkErrorProvider');\r\n  }\r\n  return context;\r\n}\r\n\r\n// Componente de error de red\r\nexport function NetworkErrorBoundary({ children }: { children: React.ReactNode }) {\r\n  const { hasNetworkError, retryConnection, clearError } = useNetworkError();\r\n\r\n  if (hasNetworkError) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\r\n        <div className=\"max-w-md w-full bg-white rounded-lg shadow-lg p-6 text-center\">\r\n          <div className=\"text-red-500 text-6xl mb-4\">üåê</div>\r\n          <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\r\n            Error de Conexi√≥n\r\n          </h2>\r\n          <p className=\"text-gray-600 mb-6\">\r\n            Parece que hay un problema con tu conexi√≥n a internet. \r\n            Por favor, verifica tu conexi√≥n e intenta nuevamente.\r\n          </p>\r\n          <div className=\"space-y-3\">\r\n            <button\r\n              onClick={retryConnection}\r\n              className=\"w-full bg-blue-600 text-white py-2 px-4 rounded-lg hover:bg-blue-700 transition-colors\"\r\n            >\r\n              Reintentar Conexi√≥n\r\n            </button>\r\n            <button\r\n              onClick={clearError}\r\n              className=\"w-full bg-gray-200 text-gray-800 py-2 px-4 rounded-lg hover:bg-gray-300 transition-colors\"\r\n            >\r\n              Continuar sin Conexi√≥n\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <>{children}</>;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}