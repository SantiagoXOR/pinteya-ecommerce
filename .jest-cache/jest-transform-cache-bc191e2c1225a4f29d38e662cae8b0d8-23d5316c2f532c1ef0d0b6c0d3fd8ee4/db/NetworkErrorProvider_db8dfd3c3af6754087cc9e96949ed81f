465fca0d057753e0c1f0efd615db888c
// ===================================
// PROVIDER: Network Error Handler
// ===================================
'use client';
"use strict";

/* istanbul ignore next */
function cov_oempuhuho() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\providers\\NetworkErrorProvider.tsx";
  var hash = "b3daf31fe3e6276762477f39e38d51576e9d160e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\providers\\NetworkErrorProvider.tsx",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 8,
          column: 3
        }
      },
      "1": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 13,
          column: 7
        }
      },
      "2": {
        start: {
          line: 10,
          column: 24
        },
        end: {
          line: 13,
          column: 7
        }
      },
      "3": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 25,
          column: 3
        }
      },
      "4": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 36
        }
      },
      "5": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 36
        }
      },
      "6": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 31
        }
      },
      "7": {
        start: {
          line: 26,
          column: 20
        },
        end: {
          line: 26,
          column: 48
        }
      },
      "8": {
        start: {
          line: 27,
          column: 29
        },
        end: {
          line: 27,
          column: 72
        }
      },
      "9": {
        start: {
          line: 28,
          column: 32
        },
        end: {
          line: 28,
          column: 77
        }
      },
      "10": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 30,
          column: 51
        }
      },
      "11": {
        start: {
          line: 30,
          column: 39
        },
        end: {
          line: 30,
          column: 51
        }
      },
      "12": {
        start: {
          line: 31,
          column: 28
        },
        end: {
          line: 31,
          column: 41
        }
      },
      "13": {
        start: {
          line: 32,
          column: 27
        },
        end: {
          line: 32,
          column: 40
        }
      },
      "14": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 35,
          column: 20
        }
      },
      "15": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 66
        }
      },
      "16": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "17": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 19
        }
      },
      "18": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 45,
          column: 5
        }
      },
      "19": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 44,
          column: 10
        }
      },
      "20": {
        start: {
          line: 46,
          column: 16
        },
        end: {
          line: 46,
          column: 53
        }
      },
      "21": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 49,
          column: 5
        }
      },
      "22": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 30
        }
      },
      "23": {
        start: {
          line: 50,
          column: 17
        },
        end: {
          line: 52,
          column: 5
        }
      },
      "24": {
        start: {
          line: 53,
          column: 32
        },
        end: {
          line: 53,
          column: 88
        }
      },
      "25": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 63,
          column: 5
        }
      },
      "26": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 62,
          column: 9
        }
      },
      "27": {
        start: {
          line: 56,
          column: 23
        },
        end: {
          line: 56,
          column: 95
        }
      },
      "28": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 61,
          column: 13
        }
      },
      "29": {
        start: {
          line: 58,
          column: 16
        },
        end: {
          line: 58,
          column: 57
        }
      },
      "30": {
        start: {
          line: 60,
          column: 16
        },
        end: {
          line: 60,
          column: 39
        }
      },
      "31": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 64,
          column: 25
        }
      },
      "32": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 67,
          column: 5
        }
      },
      "33": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 31
        }
      },
      "34": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 68,
          column: 18
        }
      },
      "35": {
        start: {
          line: 70,
          column: 42
        },
        end: {
          line: 70,
          column: 78
        }
      },
      "36": {
        start: {
          line: 72,
          column: 36
        },
        end: {
          line: 72,
          column: 62
        }
      },
      "37": {
        start: {
          line: 73,
          column: 50
        },
        end: {
          line: 73,
          column: 77
        }
      },
      "38": {
        start: {
          line: 74,
          column: 38
        },
        end: {
          line: 74,
          column: 64
        }
      },
      "39": {
        start: {
          line: 75,
          column: 61
        },
        end: {
          line: 80,
          column: 6
        }
      },
      "40": {
        start: {
          line: 82,
          column: 4
        },
        end: {
          line: 107,
          column: 7
        }
      },
      "41": {
        start: {
          line: 83,
          column: 29
        },
        end: {
          line: 89,
          column: 9
        }
      },
      "42": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 30
        }
      },
      "43": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 38
        }
      },
      "44": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 88,
          column: 13
        }
      },
      "45": {
        start: {
          line: 87,
          column: 16
        },
        end: {
          line: 87,
          column: 54
        }
      },
      "46": {
        start: {
          line: 90,
          column: 30
        },
        end: {
          line: 96,
          column: 9
        }
      },
      "47": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 91,
          column: 31
        }
      },
      "48": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 37
        }
      },
      "49": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 95,
          column: 13
        }
      },
      "50": {
        start: {
          line: 94,
          column: 16
        },
        end: {
          line: 94,
          column: 50
        }
      },
      "51": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 97,
          column: 56
        }
      },
      "52": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 98,
          column: 58
        }
      },
      "53": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 100,
          column: 38
        }
      },
      "54": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 104,
          column: 10
        }
      },
      "55": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 63
        }
      },
      "56": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 65
        }
      },
      "57": {
        start: {
          line: 109,
          column: 4
        },
        end: {
          line: 114,
          column: 7
        }
      },
      "58": {
        start: {
          line: 110,
          column: 24
        },
        end: {
          line: 110,
          column: 50
        }
      },
      "59": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 111,
          column: 23
        }
      },
      "60": {
        start: {
          line: 116,
          column: 23
        },
        end: {
          line: 119,
          column: 5
        }
      },
      "61": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 117,
          column: 34
        }
      },
      "62": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 118,
          column: 27
        }
      },
      "63": {
        start: {
          line: 121,
          column: 28
        },
        end: {
          line: 149,
          column: 5
        }
      },
      "64": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 148,
          column: 9
        }
      },
      "65": {
        start: {
          line: 124,
          column: 29
        },
        end: {
          line: 128,
          column: 14
        }
      },
      "66": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 138,
          column: 13
        }
      },
      "67": {
        start: {
          line: 130,
          column: 16
        },
        end: {
          line: 130,
          column: 34
        }
      },
      "68": {
        start: {
          line: 131,
          column: 16
        },
        end: {
          line: 131,
          column: 42
        }
      },
      "69": {
        start: {
          line: 132,
          column: 16
        },
        end: {
          line: 132,
          column: 35
        }
      },
      "70": {
        start: {
          line: 133,
          column: 16
        },
        end: {
          line: 135,
          column: 17
        }
      },
      "71": {
        start: {
          line: 134,
          column: 20
        },
        end: {
          line: 134,
          column: 64
        }
      },
      "72": {
        start: {
          line: 137,
          column: 16
        },
        end: {
          line: 137,
          column: 59
        }
      },
      "73": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 140,
          column: 37
        }
      },
      "74": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 141,
          column: 32
        }
      },
      "75": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 144,
          column: 15
        }
      },
      "76": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 147,
          column: 13
        }
      },
      "77": {
        start: {
          line: 146,
          column: 16
        },
        end: {
          line: 146,
          column: 66
        }
      },
      "78": {
        start: {
          line: 150,
          column: 25
        },
        end: {
          line: 156,
          column: 5
        }
      },
      "79": {
        start: {
          line: 157,
          column: 4
        },
        end: {
          line: 160,
          column: 7
        }
      },
      "80": {
        start: {
          line: 163,
          column: 20
        },
        end: {
          line: 163,
          column: 63
        }
      },
      "81": {
        start: {
          line: 164,
          column: 4
        },
        end: {
          line: 166,
          column: 5
        }
      },
      "82": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 165,
          column: 86
        }
      },
      "83": {
        start: {
          line: 167,
          column: 4
        },
        end: {
          line: 167,
          column: 19
        }
      },
      "84": {
        start: {
          line: 170,
          column: 61
        },
        end: {
          line: 170,
          column: 78
        }
      },
      "85": {
        start: {
          line: 171,
          column: 4
        },
        end: {
          line: 207,
          column: 5
        }
      },
      "86": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 206,
          column: 11
        }
      },
      "87": {
        start: {
          line: 208,
          column: 4
        },
        end: {
          line: 210,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 9,
            column: 9
          },
          end: {
            line: 9,
            column: 16
          }
        },
        loc: {
          start: {
            line: 9,
            column: 30
          },
          end: {
            line: 14,
            column: 1
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 32
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 32
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 27
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "4": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 29,
            column: 9
          },
          end: {
            line: 29,
            column: 33
          }
        },
        loc: {
          start: {
            line: 29,
            column: 47
          },
          end: {
            line: 36,
            column: 1
          }
        },
        line: 29
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 33,
            column: 39
          },
          end: {
            line: 33,
            column: 40
          }
        },
        loc: {
          start: {
            line: 33,
            column: 61
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 33
      },
      "6": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 37,
            column: 9
          },
          end: {
            line: 37,
            column: 34
          }
        },
        loc: {
          start: {
            line: 37,
            column: 53
          },
          end: {
            line: 69,
            column: 1
          }
        },
        line: 37
      },
      "7": {
        name: "NetworkErrorProvider",
        decl: {
          start: {
            line: 71,
            column: 9
          },
          end: {
            line: 71,
            column: 29
          }
        },
        loc: {
          start: {
            line: 71,
            column: 102
          },
          end: {
            line: 161,
            column: 1
          }
        },
        line: 71
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 82,
            column: 26
          },
          end: {
            line: 82,
            column: 27
          }
        },
        loc: {
          start: {
            line: 82,
            column: 30
          },
          end: {
            line: 105,
            column: 5
          }
        },
        line: 82
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 83,
            column: 29
          },
          end: {
            line: 83,
            column: 30
          }
        },
        loc: {
          start: {
            line: 83,
            column: 33
          },
          end: {
            line: 89,
            column: 9
          }
        },
        line: 83
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 90,
            column: 30
          },
          end: {
            line: 90,
            column: 31
          }
        },
        loc: {
          start: {
            line: 90,
            column: 34
          },
          end: {
            line: 96,
            column: 9
          }
        },
        line: 90
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 101,
            column: 15
          },
          end: {
            line: 101,
            column: 16
          }
        },
        loc: {
          start: {
            line: 101,
            column: 19
          },
          end: {
            line: 104,
            column: 9
          }
        },
        line: 101
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 109,
            column: 26
          },
          end: {
            line: 109,
            column: 27
          }
        },
        loc: {
          start: {
            line: 109,
            column: 30
          },
          end: {
            line: 112,
            column: 5
          }
        },
        line: 109
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 116,
            column: 23
          },
          end: {
            line: 116,
            column: 24
          }
        },
        loc: {
          start: {
            line: 116,
            column: 27
          },
          end: {
            line: 119,
            column: 5
          }
        },
        line: 116
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 121,
            column: 28
          },
          end: {
            line: 121,
            column: 29
          }
        },
        loc: {
          start: {
            line: 121,
            column: 38
          },
          end: {
            line: 149,
            column: 5
          }
        },
        line: 121
      },
      "15": {
        name: "useNetworkError",
        decl: {
          start: {
            line: 162,
            column: 9
          },
          end: {
            line: 162,
            column: 24
          }
        },
        loc: {
          start: {
            line: 162,
            column: 27
          },
          end: {
            line: 168,
            column: 1
          }
        },
        line: 162
      },
      "16": {
        name: "NetworkErrorBoundary",
        decl: {
          start: {
            line: 169,
            column: 9
          },
          end: {
            line: 169,
            column: 29
          }
        },
        loc: {
          start: {
            line: 169,
            column: 44
          },
          end: {
            line: 211,
            column: 1
          }
        },
        line: 169
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "1": {
        loc: {
          start: {
            line: 34,
            column: 15
          },
          end: {
            line: 34,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 34,
            column: 29
          },
          end: {
            line: 34,
            column: 45
          }
        }, {
          start: {
            line: 34,
            column: 48
          },
          end: {
            line: 34,
            column: 65
          }
        }],
        line: 34
      },
      "2": {
        loc: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "3": {
        loc: {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 38,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 38,
            column: 20
          }
        }, {
          start: {
            line: 38,
            column: 24
          },
          end: {
            line: 38,
            column: 27
          }
        }, {
          start: {
            line: 38,
            column: 31
          },
          end: {
            line: 38,
            column: 45
          }
        }],
        line: 38
      },
      "4": {
        loc: {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "5": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 41,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 41,
            column: 20
          }
        }, {
          start: {
            line: 41,
            column: 24
          },
          end: {
            line: 41,
            column: 47
          }
        }, {
          start: {
            line: 41,
            column: 51
          },
          end: {
            line: 41,
            column: 76
          }
        }],
        line: 41
      },
      "6": {
        loc: {
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "7": {
        loc: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 47,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 47,
            column: 13
          }
        }, {
          start: {
            line: 47,
            column: 17
          },
          end: {
            line: 47,
            column: 31
          }
        }],
        line: 47
      },
      "8": {
        loc: {
          start: {
            line: 53,
            column: 32
          },
          end: {
            line: 53,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 32
          },
          end: {
            line: 53,
            column: 53
          }
        }, {
          start: {
            line: 53,
            column: 57
          },
          end: {
            line: 53,
            column: 88
          }
        }],
        line: 53
      },
      "9": {
        loc: {
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "10": {
        loc: {
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 55,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 55,
            column: 29
          }
        }, {
          start: {
            line: 55,
            column: 33
          },
          end: {
            line: 55,
            column: 79
          }
        }],
        line: 55
      },
      "11": {
        loc: {
          start: {
            line: 56,
            column: 23
          },
          end: {
            line: 56,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 56,
            column: 47
          },
          end: {
            line: 56,
            column: 88
          }
        }, {
          start: {
            line: 56,
            column: 91
          },
          end: {
            line: 56,
            column: 95
          }
        }],
        line: 56
      },
      "12": {
        loc: {
          start: {
            line: 57,
            column: 12
          },
          end: {
            line: 61,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 12
          },
          end: {
            line: 61,
            column: 13
          }
        }, {
          start: {
            line: 59,
            column: 19
          },
          end: {
            line: 61,
            column: 13
          }
        }],
        line: 57
      },
      "13": {
        loc: {
          start: {
            line: 57,
            column: 16
          },
          end: {
            line: 57,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 57,
            column: 16
          },
          end: {
            line: 57,
            column: 20
          }
        }, {
          start: {
            line: 57,
            column: 25
          },
          end: {
            line: 57,
            column: 33
          }
        }, {
          start: {
            line: 57,
            column: 37
          },
          end: {
            line: 57,
            column: 45
          }
        }],
        line: 57
      },
      "14": {
        loc: {
          start: {
            line: 65,
            column: 4
          },
          end: {
            line: 67,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 4
          },
          end: {
            line: 67,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "15": {
        loc: {
          start: {
            line: 71,
            column: 42
          },
          end: {
            line: 71,
            column: 98
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 71,
            column: 60
          },
          end: {
            line: 71,
            column: 98
          }
        }],
        line: 71
      },
      "16": {
        loc: {
          start: {
            line: 86,
            column: 12
          },
          end: {
            line: 88,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 12
          },
          end: {
            line: 88,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "17": {
        loc: {
          start: {
            line: 93,
            column: 12
          },
          end: {
            line: 95,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 12
          },
          end: {
            line: 95,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 93
      },
      "18": {
        loc: {
          start: {
            line: 129,
            column: 12
          },
          end: {
            line: 138,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 129,
            column: 12
          },
          end: {
            line: 138,
            column: 13
          }
        }, {
          start: {
            line: 136,
            column: 19
          },
          end: {
            line: 138,
            column: 13
          }
        }],
        line: 129
      },
      "19": {
        loc: {
          start: {
            line: 133,
            column: 16
          },
          end: {
            line: 135,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 133,
            column: 16
          },
          end: {
            line: 135,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 133
      },
      "20": {
        loc: {
          start: {
            line: 145,
            column: 12
          },
          end: {
            line: 147,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 145,
            column: 12
          },
          end: {
            line: 147,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 145
      },
      "21": {
        loc: {
          start: {
            line: 164,
            column: 4
          },
          end: {
            line: 166,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 164,
            column: 4
          },
          end: {
            line: 166,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 164
      },
      "22": {
        loc: {
          start: {
            line: 171,
            column: 4
          },
          end: {
            line: 207,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 171,
            column: 4
          },
          end: {
            line: 207,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 171
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\providers\\NetworkErrorProvider.tsx"],
      sourcesContent: ["// ===================================\r\n// PROVIDER: Network Error Handler\r\n// ===================================\r\n\r\n'use client';\r\n\r\nimport React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport { useNetworkErrorHandler } from '@/hooks/useNetworkErrorHandler';\r\n\r\ninterface NetworkErrorContextType {\r\n  isOnline: boolean;\r\n  hasNetworkError: boolean;\r\n  lastError: any;\r\n  clearError: () => void;\r\n  retryConnection: () => void;\r\n}\r\n\r\nconst NetworkErrorContext = createContext<NetworkErrorContextType | undefined>(undefined);\r\n\r\ninterface NetworkErrorProviderProps {\r\n  children: React.ReactNode;\r\n  enableDebugMode?: boolean;\r\n}\r\n\r\nexport function NetworkErrorProvider({ \r\n  children, \r\n  enableDebugMode = process.env.NODE_ENV === 'development' \r\n}: NetworkErrorProviderProps) {\r\n  const [isOnline, setIsOnline] = useState(true);\r\n  const [hasNetworkError, setHasNetworkError] = useState(false);\r\n  const [lastError, setLastError] = useState<any>(null);\r\n\r\n  const { handleNetworkError, setupGlobalErrorHandling } = useNetworkErrorHandler({\r\n    enableLogging: enableDebugMode,\r\n    enableRetry: true,\r\n    maxRetries: 3,\r\n    retryDelay: 1000\r\n  });\r\n\r\n  // Monitorear estado de conexi\xF3n\r\n  useEffect(() => {\r\n    const handleOnline = () => {\r\n      setIsOnline(true);\r\n      setHasNetworkError(false);\r\n      if (enableDebugMode) {\r\n        console.log('\uD83D\uDFE2 Connection restored');\r\n      }\r\n    };\r\n\r\n    const handleOffline = () => {\r\n      setIsOnline(false);\r\n      setHasNetworkError(true);\r\n      if (enableDebugMode) {\r\n        console.log('\uD83D\uDD34 Connection lost');\r\n      }\r\n    };\r\n\r\n    window.addEventListener('online', handleOnline);\r\n    window.addEventListener('offline', handleOffline);\r\n\r\n    // Verificar estado inicial\r\n    setIsOnline(navigator.onLine);\r\n\r\n    return () => {\r\n      window.removeEventListener('online', handleOnline);\r\n      window.removeEventListener('offline', handleOffline);\r\n    };\r\n  }, [enableDebugMode]);\r\n\r\n  // Setup global error handling (solo para AbortError)\r\n  useEffect(() => {\r\n    const cleanup = setupGlobalErrorHandling();\r\n    return cleanup;\r\n  }, [setupGlobalErrorHandling]);\r\n\r\n  // Funci\xF3n para limpiar errores\r\n  const clearError = () => {\r\n    setHasNetworkError(false);\r\n    setLastError(null);\r\n  };\r\n\r\n  // Funci\xF3n para reintentar conexi\xF3n\r\n  const retryConnection = async () => {\r\n    try {\r\n      // Hacer un request simple para verificar conectividad\r\n      const response = await fetch('/api/test-simple', {\r\n        method: 'GET',\r\n        cache: 'no-cache',\r\n        signal: AbortSignal.timeout(5000)\r\n      });\r\n\r\n      if (response.ok) {\r\n        setIsOnline(true);\r\n        setHasNetworkError(false);\r\n        setLastError(null);\r\n        if (enableDebugMode) {\r\n          console.log('\u2705 Connection test successful');\r\n        }\r\n      } else {\r\n        throw new Error(`HTTP ${response.status}`);\r\n      }\r\n    } catch (error) {\r\n      setHasNetworkError(true);\r\n      setLastError(error);\r\n      handleNetworkError(error, { type: 'connection-test' });\r\n      if (enableDebugMode) {\r\n        console.error('\u274C Connection test failed:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const contextValue: NetworkErrorContextType = {\r\n    isOnline,\r\n    hasNetworkError,\r\n    lastError,\r\n    clearError,\r\n    retryConnection\r\n  };\r\n\r\n  return (\r\n    <NetworkErrorContext.Provider value={contextValue}>\r\n      {children}\r\n    </NetworkErrorContext.Provider>\r\n  );\r\n}\r\n\r\n// Hook para usar el contexto\r\nexport function useNetworkError() {\r\n  const context = useContext(NetworkErrorContext);\r\n  if (context === undefined) {\r\n    throw new Error('useNetworkError must be used within a NetworkErrorProvider');\r\n  }\r\n  return context;\r\n}\r\n\r\n// Componente de error de red\r\nexport function NetworkErrorBoundary({ children }: { children: React.ReactNode }) {\r\n  const { hasNetworkError, retryConnection, clearError } = useNetworkError();\r\n\r\n  if (hasNetworkError) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\r\n        <div className=\"max-w-md w-full bg-white rounded-lg shadow-lg p-6 text-center\">\r\n          <div className=\"text-red-500 text-6xl mb-4\">\uD83C\uDF10</div>\r\n          <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\r\n            Error de Conexi\xF3n\r\n          </h2>\r\n          <p className=\"text-gray-600 mb-6\">\r\n            Parece que hay un problema con tu conexi\xF3n a internet. \r\n            Por favor, verifica tu conexi\xF3n e intenta nuevamente.\r\n          </p>\r\n          <div className=\"space-y-3\">\r\n            <button\r\n              onClick={retryConnection}\r\n              className=\"w-full bg-blue-600 text-white py-2 px-4 rounded-lg hover:bg-blue-700 transition-colors\"\r\n            >\r\n              Reintentar Conexi\xF3n\r\n            </button>\r\n            <button\r\n              onClick={clearError}\r\n              className=\"w-full bg-gray-200 text-gray-800 py-2 px-4 rounded-lg hover:bg-gray-300 transition-colors\"\r\n            >\r\n              Continuar sin Conexi\xF3n\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <>{children}</>;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["NetworkErrorBoundary", "NetworkErrorProvider", "useNetworkError", "NetworkErrorContext", "createContext", "undefined", "children", "enableDebugMode", "process", "env", "NODE_ENV", "isOnline", "setIsOnline", "useState", "hasNetworkError", "setHasNetworkError", "lastError", "setLastError", "handleNetworkError", "setupGlobalErrorHandling", "useNetworkErrorHandler", "enableLogging", "enableRetry", "maxRetries", "retryDelay", "useEffect", "handleOnline", "console", "log", "handleOffline", "window", "addEventListener", "navigator", "onLine", "removeEventListener", "cleanup", "clearError", "retryConnection", "response", "fetch", "method", "cache", "signal", "AbortSignal", "timeout", "ok", "Error", "status", "error", "type", "contextValue", "Provider", "value", "context", "useContext", "div", "className", "h2", "p", "button", "onClick"],
      mappings: "AAAA,sCAAsC;AACtC,kCAAkC;AAClC,sCAAsC;AAEtC;;;;;;;;;;;;QAoIgBA;eAAAA;;QAhHAC;eAAAA;;QAuGAC;eAAAA;;;;+DAzHsD;wCAC/B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUvC,MAAMC,oCAAsBC,IAAAA,oBAAa,EAAsCC;AAOxE,SAASJ,qBAAqB,EACnCK,QAAQ,EACRC,kBAAkBC,QAAQC,GAAG,CAACC,QAAQ,KAAK,aAAa,EAC9B;IAC1B,MAAM,CAACC,UAAUC,YAAY,GAAGC,IAAAA,eAAQ,EAAC;IACzC,MAAM,CAACC,iBAAiBC,mBAAmB,GAAGF,IAAAA,eAAQ,EAAC;IACvD,MAAM,CAACG,WAAWC,aAAa,GAAGJ,IAAAA,eAAQ,EAAM;IAEhD,MAAM,EAAEK,kBAAkB,EAAEC,wBAAwB,EAAE,GAAGC,IAAAA,8CAAsB,EAAC;QAC9EC,eAAed;QACfe,aAAa;QACbC,YAAY;QACZC,YAAY;IACd;IAEA,gCAAgC;IAChCC,IAAAA,gBAAS,EAAC;QACR,MAAMC,eAAe;YACnBd,YAAY;YACZG,mBAAmB;YACnB,IAAIR,iBAAiB;gBACnBoB,QAAQC,GAAG,CAAC;YACd;QACF;QAEA,MAAMC,gBAAgB;YACpBjB,YAAY;YACZG,mBAAmB;YACnB,IAAIR,iBAAiB;gBACnBoB,QAAQC,GAAG,CAAC;YACd;QACF;QAEAE,OAAOC,gBAAgB,CAAC,UAAUL;QAClCI,OAAOC,gBAAgB,CAAC,WAAWF;QAEnC,2BAA2B;QAC3BjB,YAAYoB,UAAUC,MAAM;QAE5B,OAAO;YACLH,OAAOI,mBAAmB,CAAC,UAAUR;YACrCI,OAAOI,mBAAmB,CAAC,WAAWL;QACxC;IACF,GAAG;QAACtB;KAAgB;IAEpB,qDAAqD;IACrDkB,IAAAA,gBAAS,EAAC;QACR,MAAMU,UAAUhB;QAChB,OAAOgB;IACT,GAAG;QAAChB;KAAyB;IAE7B,+BAA+B;IAC/B,MAAMiB,aAAa;QACjBrB,mBAAmB;QACnBE,aAAa;IACf;IAEA,mCAAmC;IACnC,MAAMoB,kBAAkB;QACtB,IAAI;YACF,sDAAsD;YACtD,MAAMC,WAAW,MAAMC,MAAM,oBAAoB;gBAC/CC,QAAQ;gBACRC,OAAO;gBACPC,QAAQC,YAAYC,OAAO,CAAC;YAC9B;YAEA,IAAIN,SAASO,EAAE,EAAE;gBACfjC,YAAY;gBACZG,mBAAmB;gBACnBE,aAAa;gBACb,IAAIV,iBAAiB;oBACnBoB,QAAQC,GAAG,CAAC;gBACd;YACF,OAAO;gBACL,MAAM,IAAIkB,MAAM,CAAC,KAAK,EAAER,SAASS,MAAM,EAAE;YAC3C;QACF,EAAE,OAAOC,OAAO;YACdjC,mBAAmB;YACnBE,aAAa+B;YACb9B,mBAAmB8B,OAAO;gBAAEC,MAAM;YAAkB;YACpD,IAAI1C,iBAAiB;gBACnBoB,QAAQqB,KAAK,CAAC,6BAA6BA;YAC7C;QACF;IACF;IAEA,MAAME,eAAwC;QAC5CvC;QACAG;QACAE;QACAoB;QACAC;IACF;IAEA,qBACE,qBAAClC,oBAAoBgD,QAAQ;QAACC,OAAOF;kBAClC5C;;AAGP;AAGO,SAASJ;IACd,MAAMmD,UAAUC,IAAAA,iBAAU,EAACnD;IAC3B,IAAIkD,YAAYhD,WAAW;QACzB,MAAM,IAAIyC,MAAM;IAClB;IACA,OAAOO;AACT;AAGO,SAASrD,qBAAqB,EAAEM,QAAQ,EAAiC;IAC9E,MAAM,EAAEQ,eAAe,EAAEuB,eAAe,EAAED,UAAU,EAAE,GAAGlC;IAEzD,IAAIY,iBAAiB;QACnB,qBACE,qBAACyC;YAAIC,WAAU;sBACb,cAAA,sBAACD;gBAAIC,WAAU;;kCACb,qBAACD;wBAAIC,WAAU;kCAA6B;;kCAC5C,qBAACC;wBAAGD,WAAU;kCAAwC;;kCAGtD,qBAACE;wBAAEF,WAAU;kCAAqB;;kCAIlC,sBAACD;wBAAIC,WAAU;;0CACb,qBAACG;gCACCC,SAASvB;gCACTmB,WAAU;0CACX;;0CAGD,qBAACG;gCACCC,SAASxB;gCACToB,WAAU;0CACX;;;;;;;IAOX;IAEA,qBAAO;kBAAGlD;;AACZ"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b3daf31fe3e6276762477f39e38d51576e9d160e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_oempuhuho = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_oempuhuho();
cov_oempuhuho().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_oempuhuho().f[0]++;
  cov_oempuhuho().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_oempuhuho().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_oempuhuho().s[3]++;
_export(exports, {
  get NetworkErrorBoundary() {
    /* istanbul ignore next */
    cov_oempuhuho().f[1]++;
    cov_oempuhuho().s[4]++;
    return NetworkErrorBoundary;
  },
  get NetworkErrorProvider() {
    /* istanbul ignore next */
    cov_oempuhuho().f[2]++;
    cov_oempuhuho().s[5]++;
    return NetworkErrorProvider;
  },
  get useNetworkError() {
    /* istanbul ignore next */
    cov_oempuhuho().f[3]++;
    cov_oempuhuho().s[6]++;
    return useNetworkError;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_oempuhuho().s[7]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_oempuhuho().s[8]++, _interop_require_wildcard(require("react")));
const _useNetworkErrorHandler =
/* istanbul ignore next */
(cov_oempuhuho().s[9]++, require("../../hooks/useNetworkErrorHandler"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_oempuhuho().f[4]++;
  cov_oempuhuho().s[10]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_oempuhuho().b[0][0]++;
    cov_oempuhuho().s[11]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_oempuhuho().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_oempuhuho().s[12]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_oempuhuho().s[13]++, new WeakMap());
  /* istanbul ignore next */
  cov_oempuhuho().s[14]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_oempuhuho().f[5]++;
    cov_oempuhuho().s[15]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_oempuhuho().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_oempuhuho().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_oempuhuho().f[6]++;
  cov_oempuhuho().s[16]++;
  if (
  /* istanbul ignore next */
  (cov_oempuhuho().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_oempuhuho().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_oempuhuho().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_oempuhuho().b[2][0]++;
    cov_oempuhuho().s[17]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_oempuhuho().b[2][1]++;
  }
  cov_oempuhuho().s[18]++;
  if (
  /* istanbul ignore next */
  (cov_oempuhuho().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_oempuhuho().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_oempuhuho().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_oempuhuho().b[4][0]++;
    cov_oempuhuho().s[19]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_oempuhuho().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_oempuhuho().s[20]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_oempuhuho().s[21]++;
  if (
  /* istanbul ignore next */
  (cov_oempuhuho().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_oempuhuho().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_oempuhuho().b[6][0]++;
    cov_oempuhuho().s[22]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_oempuhuho().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_oempuhuho().s[23]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_oempuhuho().s[24]++,
  /* istanbul ignore next */
  (cov_oempuhuho().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_oempuhuho().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_oempuhuho().s[25]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_oempuhuho().s[26]++;
    if (
    /* istanbul ignore next */
    (cov_oempuhuho().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_oempuhuho().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_oempuhuho().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_oempuhuho().s[27]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_oempuhuho().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_oempuhuho().b[11][1]++, null));
      /* istanbul ignore next */
      cov_oempuhuho().s[28]++;
      if (
      /* istanbul ignore next */
      (cov_oempuhuho().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_oempuhuho().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_oempuhuho().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_oempuhuho().b[12][0]++;
        cov_oempuhuho().s[29]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_oempuhuho().b[12][1]++;
        cov_oempuhuho().s[30]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_oempuhuho().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_oempuhuho().s[31]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_oempuhuho().s[32]++;
  if (cache) {
    /* istanbul ignore next */
    cov_oempuhuho().b[14][0]++;
    cov_oempuhuho().s[33]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_oempuhuho().b[14][1]++;
  }
  cov_oempuhuho().s[34]++;
  return newObj;
}
const NetworkErrorContext =
/* istanbul ignore next */
(/*#__PURE__*/cov_oempuhuho().s[35]++, (0, _react.createContext)(undefined));
function NetworkErrorProvider({
  children,
  enableDebugMode =
  /* istanbul ignore next */
  (cov_oempuhuho().b[15][0]++, process.env.NODE_ENV === 'development')
}) {
  /* istanbul ignore next */
  cov_oempuhuho().f[7]++;
  const [isOnline, setIsOnline] =
  /* istanbul ignore next */
  (cov_oempuhuho().s[36]++, (0, _react.useState)(true));
  const [hasNetworkError, setHasNetworkError] =
  /* istanbul ignore next */
  (cov_oempuhuho().s[37]++, (0, _react.useState)(false));
  const [lastError, setLastError] =
  /* istanbul ignore next */
  (cov_oempuhuho().s[38]++, (0, _react.useState)(null));
  const {
    handleNetworkError,
    setupGlobalErrorHandling
  } =
  /* istanbul ignore next */
  (cov_oempuhuho().s[39]++, (0, _useNetworkErrorHandler.useNetworkErrorHandler)({
    enableLogging: enableDebugMode,
    enableRetry: true,
    maxRetries: 3,
    retryDelay: 1000
  }));
  // Monitorear estado de conexión
  /* istanbul ignore next */
  cov_oempuhuho().s[40]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_oempuhuho().f[8]++;
    cov_oempuhuho().s[41]++;
    const handleOnline = () => {
      /* istanbul ignore next */
      cov_oempuhuho().f[9]++;
      cov_oempuhuho().s[42]++;
      setIsOnline(true);
      /* istanbul ignore next */
      cov_oempuhuho().s[43]++;
      setHasNetworkError(false);
      /* istanbul ignore next */
      cov_oempuhuho().s[44]++;
      if (enableDebugMode) {
        /* istanbul ignore next */
        cov_oempuhuho().b[16][0]++;
        cov_oempuhuho().s[45]++;
        console.log('🟢 Connection restored');
      } else
      /* istanbul ignore next */
      {
        cov_oempuhuho().b[16][1]++;
      }
    };
    /* istanbul ignore next */
    cov_oempuhuho().s[46]++;
    const handleOffline = () => {
      /* istanbul ignore next */
      cov_oempuhuho().f[10]++;
      cov_oempuhuho().s[47]++;
      setIsOnline(false);
      /* istanbul ignore next */
      cov_oempuhuho().s[48]++;
      setHasNetworkError(true);
      /* istanbul ignore next */
      cov_oempuhuho().s[49]++;
      if (enableDebugMode) {
        /* istanbul ignore next */
        cov_oempuhuho().b[17][0]++;
        cov_oempuhuho().s[50]++;
        console.log('🔴 Connection lost');
      } else
      /* istanbul ignore next */
      {
        cov_oempuhuho().b[17][1]++;
      }
    };
    /* istanbul ignore next */
    cov_oempuhuho().s[51]++;
    window.addEventListener('online', handleOnline);
    /* istanbul ignore next */
    cov_oempuhuho().s[52]++;
    window.addEventListener('offline', handleOffline);
    // Verificar estado inicial
    /* istanbul ignore next */
    cov_oempuhuho().s[53]++;
    setIsOnline(navigator.onLine);
    /* istanbul ignore next */
    cov_oempuhuho().s[54]++;
    return () => {
      /* istanbul ignore next */
      cov_oempuhuho().f[11]++;
      cov_oempuhuho().s[55]++;
      window.removeEventListener('online', handleOnline);
      /* istanbul ignore next */
      cov_oempuhuho().s[56]++;
      window.removeEventListener('offline', handleOffline);
    };
  }, [enableDebugMode]);
  // Setup global error handling (solo para AbortError)
  /* istanbul ignore next */
  cov_oempuhuho().s[57]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_oempuhuho().f[12]++;
    const cleanup =
    /* istanbul ignore next */
    (cov_oempuhuho().s[58]++, setupGlobalErrorHandling());
    /* istanbul ignore next */
    cov_oempuhuho().s[59]++;
    return cleanup;
  }, [setupGlobalErrorHandling]);
  // Función para limpiar errores
  /* istanbul ignore next */
  cov_oempuhuho().s[60]++;
  const clearError = () => {
    /* istanbul ignore next */
    cov_oempuhuho().f[13]++;
    cov_oempuhuho().s[61]++;
    setHasNetworkError(false);
    /* istanbul ignore next */
    cov_oempuhuho().s[62]++;
    setLastError(null);
  };
  // Función para reintentar conexión
  /* istanbul ignore next */
  cov_oempuhuho().s[63]++;
  const retryConnection = async () => {
    /* istanbul ignore next */
    cov_oempuhuho().f[14]++;
    cov_oempuhuho().s[64]++;
    try {
      // Hacer un request simple para verificar conectividad
      const response =
      /* istanbul ignore next */
      (cov_oempuhuho().s[65]++, await fetch('/api/test-simple', {
        method: 'GET',
        cache: 'no-cache',
        signal: AbortSignal.timeout(5000)
      }));
      /* istanbul ignore next */
      cov_oempuhuho().s[66]++;
      if (response.ok) {
        /* istanbul ignore next */
        cov_oempuhuho().b[18][0]++;
        cov_oempuhuho().s[67]++;
        setIsOnline(true);
        /* istanbul ignore next */
        cov_oempuhuho().s[68]++;
        setHasNetworkError(false);
        /* istanbul ignore next */
        cov_oempuhuho().s[69]++;
        setLastError(null);
        /* istanbul ignore next */
        cov_oempuhuho().s[70]++;
        if (enableDebugMode) {
          /* istanbul ignore next */
          cov_oempuhuho().b[19][0]++;
          cov_oempuhuho().s[71]++;
          console.log('✅ Connection test successful');
        } else
        /* istanbul ignore next */
        {
          cov_oempuhuho().b[19][1]++;
        }
      } else {
        /* istanbul ignore next */
        cov_oempuhuho().b[18][1]++;
        cov_oempuhuho().s[72]++;
        throw new Error(`HTTP ${response.status}`);
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_oempuhuho().s[73]++;
      setHasNetworkError(true);
      /* istanbul ignore next */
      cov_oempuhuho().s[74]++;
      setLastError(error);
      /* istanbul ignore next */
      cov_oempuhuho().s[75]++;
      handleNetworkError(error, {
        type: 'connection-test'
      });
      /* istanbul ignore next */
      cov_oempuhuho().s[76]++;
      if (enableDebugMode) {
        /* istanbul ignore next */
        cov_oempuhuho().b[20][0]++;
        cov_oempuhuho().s[77]++;
        console.error('❌ Connection test failed:', error);
      } else
      /* istanbul ignore next */
      {
        cov_oempuhuho().b[20][1]++;
      }
    }
  };
  const contextValue =
  /* istanbul ignore next */
  (cov_oempuhuho().s[78]++, {
    isOnline,
    hasNetworkError,
    lastError,
    clearError,
    retryConnection
  });
  /* istanbul ignore next */
  cov_oempuhuho().s[79]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(NetworkErrorContext.Provider, {
    value: contextValue,
    children: children
  });
}
function useNetworkError() {
  /* istanbul ignore next */
  cov_oempuhuho().f[15]++;
  const context =
  /* istanbul ignore next */
  (cov_oempuhuho().s[80]++, (0, _react.useContext)(NetworkErrorContext));
  /* istanbul ignore next */
  cov_oempuhuho().s[81]++;
  if (context === undefined) {
    /* istanbul ignore next */
    cov_oempuhuho().b[21][0]++;
    cov_oempuhuho().s[82]++;
    throw new Error('useNetworkError must be used within a NetworkErrorProvider');
  } else
  /* istanbul ignore next */
  {
    cov_oempuhuho().b[21][1]++;
  }
  cov_oempuhuho().s[83]++;
  return context;
}
function NetworkErrorBoundary({
  children
}) {
  /* istanbul ignore next */
  cov_oempuhuho().f[16]++;
  const {
    hasNetworkError,
    retryConnection,
    clearError
  } =
  /* istanbul ignore next */
  (cov_oempuhuho().s[84]++, useNetworkError());
  /* istanbul ignore next */
  cov_oempuhuho().s[85]++;
  if (hasNetworkError) {
    /* istanbul ignore next */
    cov_oempuhuho().b[22][0]++;
    cov_oempuhuho().s[86]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "min-h-screen flex items-center justify-center bg-gray-50",
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "max-w-md w-full bg-white rounded-lg shadow-lg p-6 text-center",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "text-red-500 text-6xl mb-4",
          children: "\uD83C\uDF10"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("h2", {
          className: "text-2xl font-bold text-gray-900 mb-2",
          children: "Error de Conexi\xf3n"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
          className: "text-gray-600 mb-6",
          children: "Parece que hay un problema con tu conexi\xf3n a internet. Por favor, verifica tu conexi\xf3n e intenta nuevamente."
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "space-y-3",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("button", {
            onClick: retryConnection,
            className: "w-full bg-blue-600 text-white py-2 px-4 rounded-lg hover:bg-blue-700 transition-colors",
            children: "Reintentar Conexi\xf3n"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
            onClick: clearError,
            className: "w-full bg-gray-200 text-gray-800 py-2 px-4 rounded-lg hover:bg-gray-300 transition-colors",
            children: "Continuar sin Conexi\xf3n"
          })]
        })]
      })
    });
  } else
  /* istanbul ignore next */
  {
    cov_oempuhuho().b[22][1]++;
  }
  cov_oempuhuho().s[87]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(_jsxruntime.Fragment, {
    children: children
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,