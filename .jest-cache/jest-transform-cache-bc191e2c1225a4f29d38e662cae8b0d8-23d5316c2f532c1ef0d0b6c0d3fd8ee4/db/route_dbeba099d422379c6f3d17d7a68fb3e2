ba066f11c5ef85f8f3b5883c7c365b36
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_1js9ckycx() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\user\\activity\\route.ts";
  var hash = "de40650aaaf5508daff6a1c4a874fa8878207b07";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\user\\activity\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 20
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 23
        }
      },
      "7": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "8": {
        start: {
          line: 24,
          column: 16
        },
        end: {
          line: 24,
          column: 54
        }
      },
      "9": {
        start: {
          line: 25,
          column: 18
        },
        end: {
          line: 25,
          column: 66
        }
      },
      "10": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 24
        }
      },
      "11": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 124,
          column: 5
        }
      },
      "12": {
        start: {
          line: 30,
          column: 24
        },
        end: {
          line: 30,
          column: 49
        }
      },
      "13": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 37,
          column: 9
        }
      },
      "14": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 36,
          column: 15
        }
      },
      "15": {
        start: {
          line: 39,
          column: 26
        },
        end: {
          line: 39,
          column: 44
        }
      },
      "16": {
        start: {
          line: 40,
          column: 31
        },
        end: {
          line: 40,
          column: 119
        }
      },
      "17": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 47,
          column: 9
        }
      },
      "18": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 46,
          column: 15
        }
      },
      "19": {
        start: {
          line: 49,
          column: 33
        },
        end: {
          line: 49,
          column: 53
        }
      },
      "20": {
        start: {
          line: 50,
          column: 24
        },
        end: {
          line: 57,
          column: 9
        }
      },
      "21": {
        start: {
          line: 59,
          column: 20
        },
        end: {
          line: 59,
          column: 100
        }
      },
      "22": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 63,
          column: 9
        }
      },
      "23": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 59
        }
      },
      "24": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 66,
          column: 9
        }
      },
      "25": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 55
        }
      },
      "26": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 69,
          column: 9
        }
      },
      "27": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 63
        }
      },
      "28": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 72,
          column: 9
        }
      },
      "29": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 61
        }
      },
      "30": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 76,
          column: 69
        }
      },
      "31": {
        start: {
          line: 77,
          column: 44
        },
        end: {
          line: 77,
          column: 55
        }
      },
      "32": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 85,
          column: 9
        }
      },
      "33": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 64
        }
      },
      "34": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 84,
          column: 15
        }
      },
      "35": {
        start: {
          line: 87,
          column: 25
        },
        end: {
          line: 90,
          column: 33
        }
      },
      "36": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 93,
          column: 9
        }
      },
      "37": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 69
        }
      },
      "38": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 96,
          column: 9
        }
      },
      "39": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 95,
          column: 65
        }
      },
      "40": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 99,
          column: 9
        }
      },
      "41": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 98,
          column: 73
        }
      },
      "42": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 102,
          column: 9
        }
      },
      "43": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 101,
          column: 71
        }
      },
      "44": {
        start: {
          line: 103,
          column: 26
        },
        end: {
          line: 103,
          column: 42
        }
      },
      "45": {
        start: {
          line: 105,
          column: 22
        },
        end: {
          line: 105,
          column: 62
        }
      },
      "46": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 116,
          column: 11
        }
      },
      "47": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 118,
          column: 65
        }
      },
      "48": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 123,
          column: 11
        }
      },
      "49": {
        start: {
          line: 127,
          column: 4
        },
        end: {
          line: 191,
          column: 5
        }
      },
      "50": {
        start: {
          line: 129,
          column: 24
        },
        end: {
          line: 129,
          column: 49
        }
      },
      "51": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 136,
          column: 9
        }
      },
      "52": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 135,
          column: 15
        }
      },
      "53": {
        start: {
          line: 138,
          column: 26
        },
        end: {
          line: 138,
          column: 44
        }
      },
      "54": {
        start: {
          line: 139,
          column: 31
        },
        end: {
          line: 139,
          column: 119
        }
      },
      "55": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 146,
          column: 9
        }
      },
      "56": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 145,
          column: 15
        }
      },
      "57": {
        start: {
          line: 147,
          column: 21
        },
        end: {
          line: 147,
          column: 41
        }
      },
      "58": {
        start: {
          line: 148,
          column: 60
        },
        end: {
          line: 148,
          column: 64
        }
      },
      "59": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 156,
          column: 9
        }
      },
      "60": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 155,
          column: 15
        }
      },
      "61": {
        start: {
          line: 158,
          column: 25
        },
        end: {
          line: 158,
          column: 45
        }
      },
      "62": {
        start: {
          line: 159,
          column: 26
        },
        end: {
          line: 159,
          column: 65
        }
      },
      "63": {
        start: {
          line: 161,
          column: 29
        },
        end: {
          line: 169,
          column: 9
        }
      },
      "64": {
        start: {
          line: 170,
          column: 45
        },
        end: {
          line: 170,
          column: 135
        }
      },
      "65": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 178,
          column: 9
        }
      },
      "66": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 172,
          column: 62
        }
      },
      "67": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 177,
          column: 15
        }
      },
      "68": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 183,
          column: 11
        }
      },
      "69": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 185,
          column: 66
        }
      },
      "70": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 190,
          column: 11
        }
      },
      "71": {
        start: {
          line: 195,
          column: 4
        },
        end: {
          line: 222,
          column: 5
        }
      },
      "72": {
        start: {
          line: 197,
          column: 40
        },
        end: {
          line: 197,
          column: 234
        }
      },
      "73": {
        start: {
          line: 198,
          column: 31
        },
        end: {
          line: 201,
          column: 20
        }
      },
      "74": {
        start: {
          line: 199,
          column: 12
        },
        end: {
          line: 199,
          column: 63
        }
      },
      "75": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 200,
          column: 23
        }
      },
      "76": {
        start: {
          line: 203,
          column: 29
        },
        end: {
          line: 203,
          column: 89
        }
      },
      "77": {
        start: {
          line: 204,
          column: 40
        },
        end: {
          line: 204,
          column: 166
        }
      },
      "78": {
        start: {
          line: 205,
          column: 28
        },
        end: {
          line: 209,
          column: 20
        }
      },
      "79": {
        start: {
          line: 206,
          column: 25
        },
        end: {
          line: 206,
          column: 78
        }
      },
      "80": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 207,
          column: 45
        }
      },
      "81": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 208,
          column: 23
        }
      },
      "82": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 214,
          column: 10
        }
      },
      "83": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 216,
          column: 63
        }
      },
      "84": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 221,
          column: 10
        }
      },
      "85": {
        start: {
          line: 226,
          column: 22
        },
        end: {
          line: 226,
          column: 60
        }
      },
      "86": {
        start: {
          line: 227,
          column: 19
        },
        end: {
          line: 227,
          column: 51
        }
      },
      "87": {
        start: {
          line: 228,
          column: 4
        },
        end: {
          line: 230,
          column: 5
        }
      },
      "88": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 229,
          column: 46
        }
      },
      "89": {
        start: {
          line: 231,
          column: 4
        },
        end: {
          line: 233,
          column: 5
        }
      },
      "90": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 232,
          column: 22
        }
      },
      "91": {
        start: {
          line: 234,
          column: 4
        },
        end: {
          line: 234,
          column: 35
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "GET",
        decl: {
          start: {
            line: 27,
            column: 15
          },
          end: {
            line: 27,
            column: 18
          }
        },
        loc: {
          start: {
            line: 27,
            column: 28
          },
          end: {
            line: 125,
            column: 1
          }
        },
        line: 27
      },
      "5": {
        name: "POST",
        decl: {
          start: {
            line: 126,
            column: 15
          },
          end: {
            line: 126,
            column: 19
          }
        },
        loc: {
          start: {
            line: 126,
            column: 29
          },
          end: {
            line: 192,
            column: 1
          }
        },
        line: 126
      },
      "6": {
        name: "getActivityStats",
        decl: {
          start: {
            line: 194,
            column: 15
          },
          end: {
            line: 194,
            column: 31
          }
        },
        loc: {
          start: {
            line: 194,
            column: 49
          },
          end: {
            line: 223,
            column: 1
          }
        },
        line: 194
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 198,
            column: 53
          },
          end: {
            line: 198,
            column: 54
          }
        },
        loc: {
          start: {
            line: 198,
            column: 66
          },
          end: {
            line: 201,
            column: 9
          }
        },
        line: 198
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 205,
            column: 50
          },
          end: {
            line: 205,
            column: 51
          }
        },
        loc: {
          start: {
            line: 205,
            column: 63
          },
          end: {
            line: 209,
            column: 9
          }
        },
        line: 205
      },
      "9": {
        name: "getClientIP",
        decl: {
          start: {
            line: 225,
            column: 9
          },
          end: {
            line: 225,
            column: 20
          }
        },
        loc: {
          start: {
            line: 225,
            column: 30
          },
          end: {
            line: 235,
            column: 1
          }
        },
        line: 225
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "1": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "2": {
        loc: {
          start: {
            line: 51,
            column: 22
          },
          end: {
            line: 51,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 22
          },
          end: {
            line: 51,
            column: 50
          }
        }, {
          start: {
            line: 51,
            column: 54
          },
          end: {
            line: 51,
            column: 63
          }
        }],
        line: 51
      },
      "3": {
        loc: {
          start: {
            line: 52,
            column: 20
          },
          end: {
            line: 52,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 20
          },
          end: {
            line: 52,
            column: 46
          }
        }, {
          start: {
            line: 52,
            column: 50
          },
          end: {
            line: 52,
            column: 59
          }
        }],
        line: 52
      },
      "4": {
        loc: {
          start: {
            line: 53,
            column: 23
          },
          end: {
            line: 53,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 23
          },
          end: {
            line: 53,
            column: 52
          }
        }, {
          start: {
            line: 53,
            column: 56
          },
          end: {
            line: 53,
            column: 65
          }
        }],
        line: 53
      },
      "5": {
        loc: {
          start: {
            line: 54,
            column: 21
          },
          end: {
            line: 54,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 21
          },
          end: {
            line: 54,
            column: 48
          }
        }, {
          start: {
            line: 54,
            column: 52
          },
          end: {
            line: 54,
            column: 61
          }
        }],
        line: 54
      },
      "6": {
        loc: {
          start: {
            line: 55,
            column: 28
          },
          end: {
            line: 55,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 55,
            column: 28
          },
          end: {
            line: 55,
            column: 53
          }
        }, {
          start: {
            line: 55,
            column: 57
          },
          end: {
            line: 55,
            column: 61
          }
        }],
        line: 55
      },
      "7": {
        loc: {
          start: {
            line: 56,
            column: 29
          },
          end: {
            line: 56,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 29
          },
          end: {
            line: 56,
            column: 55
          }
        }, {
          start: {
            line: 56,
            column: 59
          },
          end: {
            line: 56,
            column: 62
          }
        }],
        line: 56
      },
      "8": {
        loc: {
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "9": {
        loc: {
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "10": {
        loc: {
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 69,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 69,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "11": {
        loc: {
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 72,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 72,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "12": {
        loc: {
          start: {
            line: 78,
            column: 8
          },
          end: {
            line: 85,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 8
          },
          end: {
            line: 85,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 78
      },
      "13": {
        loc: {
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 93,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 93,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 91
      },
      "14": {
        loc: {
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 96,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 96,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "15": {
        loc: {
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 99,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 99,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "16": {
        loc: {
          start: {
            line: 100,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 100,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 100
      },
      "17": {
        loc: {
          start: {
            line: 108,
            column: 24
          },
          end: {
            line: 108,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 108,
            column: 24
          },
          end: {
            line: 108,
            column: 34
          }
        }, {
          start: {
            line: 108,
            column: 38
          },
          end: {
            line: 108,
            column: 40
          }
        }],
        line: 108
      },
      "18": {
        loc: {
          start: {
            line: 110,
            column: 23
          },
          end: {
            line: 110,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 110,
            column: 23
          },
          end: {
            line: 110,
            column: 28
          }
        }, {
          start: {
            line: 110,
            column: 32
          },
          end: {
            line: 110,
            column: 33
          }
        }],
        line: 110
      },
      "19": {
        loc: {
          start: {
            line: 113,
            column: 59
          },
          end: {
            line: 113,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 113,
            column: 59
          },
          end: {
            line: 113,
            column: 64
          }
        }, {
          start: {
            line: 113,
            column: 68
          },
          end: {
            line: 113,
            column: 69
          }
        }],
        line: 113
      },
      "20": {
        loc: {
          start: {
            line: 130,
            column: 8
          },
          end: {
            line: 136,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 130,
            column: 8
          },
          end: {
            line: 136,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 130
      },
      "21": {
        loc: {
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 146,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 146,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 140
      },
      "22": {
        loc: {
          start: {
            line: 150,
            column: 8
          },
          end: {
            line: 156,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 8
          },
          end: {
            line: 156,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 150
      },
      "23": {
        loc: {
          start: {
            line: 150,
            column: 12
          },
          end: {
            line: 150,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 150,
            column: 12
          },
          end: {
            line: 150,
            column: 19
          }
        }, {
          start: {
            line: 150,
            column: 23
          },
          end: {
            line: 150,
            column: 32
          }
        }],
        line: 150
      },
      "24": {
        loc: {
          start: {
            line: 159,
            column: 26
          },
          end: {
            line: 159,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 159,
            column: 26
          },
          end: {
            line: 159,
            column: 59
          }
        }, {
          start: {
            line: 159,
            column: 63
          },
          end: {
            line: 159,
            column: 65
          }
        }],
        line: 159
      },
      "25": {
        loc: {
          start: {
            line: 171,
            column: 8
          },
          end: {
            line: 178,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 171,
            column: 8
          },
          end: {
            line: 178,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 171
      },
      "26": {
        loc: {
          start: {
            line: 197,
            column: 151
          },
          end: {
            line: 197,
            column: 233
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 197,
            column: 151
          },
          end: {
            line: 197,
            column: 168
          }
        }, {
          start: {
            line: 197,
            column: 172
          },
          end: {
            line: 197,
            column: 233
          }
        }],
        line: 197
      },
      "27": {
        loc: {
          start: {
            line: 198,
            column: 31
          },
          end: {
            line: 201,
            column: 20
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 198,
            column: 31
          },
          end: {
            line: 201,
            column: 14
          }
        }, {
          start: {
            line: 201,
            column: 18
          },
          end: {
            line: 201,
            column: 20
          }
        }],
        line: 198
      },
      "28": {
        loc: {
          start: {
            line: 199,
            column: 34
          },
          end: {
            line: 199,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 199,
            column: 34
          },
          end: {
            line: 199,
            column: 52
          }
        }, {
          start: {
            line: 199,
            column: 56
          },
          end: {
            line: 199,
            column: 57
          }
        }],
        line: 199
      },
      "29": {
        loc: {
          start: {
            line: 205,
            column: 28
          },
          end: {
            line: 209,
            column: 20
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 205,
            column: 28
          },
          end: {
            line: 209,
            column: 14
          }
        }, {
          start: {
            line: 209,
            column: 18
          },
          end: {
            line: 209,
            column: 20
          }
        }],
        line: 205
      },
      "30": {
        loc: {
          start: {
            line: 207,
            column: 25
          },
          end: {
            line: 207,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 207,
            column: 25
          },
          end: {
            line: 207,
            column: 34
          }
        }, {
          start: {
            line: 207,
            column: 38
          },
          end: {
            line: 207,
            column: 39
          }
        }],
        line: 207
      },
      "31": {
        loc: {
          start: {
            line: 213,
            column: 29
          },
          end: {
            line: 213,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 213,
            column: 29
          },
          end: {
            line: 213,
            column: 50
          }
        }, {
          start: {
            line: 213,
            column: 54
          },
          end: {
            line: 213,
            column: 55
          }
        }],
        line: 213
      },
      "32": {
        loc: {
          start: {
            line: 228,
            column: 4
          },
          end: {
            line: 230,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 228,
            column: 4
          },
          end: {
            line: 230,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 228
      },
      "33": {
        loc: {
          start: {
            line: 231,
            column: 4
          },
          end: {
            line: 233,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 231,
            column: 4
          },
          end: {
            line: 233,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 231
      },
      "34": {
        loc: {
          start: {
            line: 234,
            column: 11
          },
          end: {
            line: 234,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 234,
            column: 11
          },
          end: {
            line: 234,
            column: 21
          }
        }, {
          start: {
            line: 234,
            column: 25
          },
          end: {
            line: 234,
            column: 34
          }
        }],
        line: 234
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\user\\activity\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - API DE GESTI\xD3N DE ACTIVIDAD DE USUARIO\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { auth } from '@/lib/auth/config';\r\nimport { supabaseAdmin } from '@/lib/integrations/supabase';\r\n\r\n// Tipos para actividad\r\nexport interface UserActivity {\r\n  id: string;\r\n  user_id: string;\r\n  action: string;\r\n  category: 'auth' | 'profile' | 'order' | 'security' | 'session' | 'preference';\r\n  description?: string;\r\n  metadata?: Record<string, any>;\r\n  ip_address?: string;\r\n  user_agent?: string;\r\n  created_at: string;\r\n}\r\n\r\ninterface ActivityFilters {\r\n  category?: string;\r\n  action?: string;\r\n  startDate?: string;\r\n  endDate?: string;\r\n  limit?: number;\r\n  offset?: number;\r\n}\r\n\r\n// GET - Obtener historial de actividad del usuario\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    // Verificar autenticaci\xF3n\r\n    const session = await auth();\r\n    if (!session?.user) {\r\n      return NextResponse.json(\r\n        { error: 'Usuario no autenticado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    // Obtener usuario por email\r\n    const userEmail = session.user.email;\r\n    const { data: user } = await supabaseAdmin\r\n      .from('users')\r\n      .select('id')\r\n      .eq('email', userEmail)\r\n      .single();\r\n\r\n    if (!user) {\r\n      return NextResponse.json(\r\n        { error: 'Usuario no encontrado' },\r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    // Obtener par\xE1metros de filtro\r\n    const { searchParams } = new URL(request.url);\r\n    const filters: ActivityFilters = {\r\n      category: searchParams.get('category') || undefined,\r\n      action: searchParams.get('action') || undefined,\r\n      startDate: searchParams.get('startDate') || undefined,\r\n      endDate: searchParams.get('endDate') || undefined,\r\n      limit: parseInt(searchParams.get('limit') || '50'),\r\n      offset: parseInt(searchParams.get('offset') || '0'),\r\n    };\r\n\r\n    // Construir query\r\n    let query = supabaseAdmin\r\n      .from('user_activity')\r\n      .select('*')\r\n      .eq('user_id', user.id);\r\n\r\n    // Aplicar filtros\r\n    if (filters.category) {\r\n      query = query.eq('category', filters.category);\r\n    }\r\n\r\n    if (filters.action) {\r\n      query = query.eq('action', filters.action);\r\n    }\r\n\r\n    if (filters.startDate) {\r\n      query = query.gte('created_at', filters.startDate);\r\n    }\r\n\r\n    if (filters.endDate) {\r\n      query = query.lte('created_at', filters.endDate);\r\n    }\r\n\r\n    // Aplicar paginaci\xF3n y ordenamiento\r\n    query = query\r\n      .order('created_at', { ascending: false })\r\n      .range(filters.offset!, filters.offset! + filters.limit! - 1);\r\n\r\n    const { data: activities, error } = await query;\r\n\r\n    if (error) {\r\n      console.error('Error al obtener actividad:', error);\r\n      return NextResponse.json(\r\n        { error: 'Error al obtener historial de actividad' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Obtener conteo total para paginaci\xF3n\r\n    let countQuery = supabaseAdmin\r\n      .from('user_activity')\r\n      .select('*', { count: 'exact', head: true })\r\n      .eq('user_id', user.id);\r\n\r\n    if (filters.category) {\r\n      countQuery = countQuery.eq('category', filters.category);\r\n    }\r\n\r\n    if (filters.action) {\r\n      countQuery = countQuery.eq('action', filters.action);\r\n    }\r\n\r\n    if (filters.startDate) {\r\n      countQuery = countQuery.gte('created_at', filters.startDate);\r\n    }\r\n\r\n    if (filters.endDate) {\r\n      countQuery = countQuery.lte('created_at', filters.endDate);\r\n    }\r\n\r\n    const { count } = await countQuery;\r\n\r\n    // Obtener estad\xEDsticas de actividad\r\n    const stats = await getActivityStats(user.id, filters);\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      activities: activities || [],\r\n      pagination: {\r\n        total: count || 0,\r\n        limit: filters.limit,\r\n        offset: filters.offset,\r\n        hasMore: (filters.offset! + filters.limit!) < (count || 0),\r\n      },\r\n      stats,\r\n    });\r\n  } catch (error) {\r\n    console.error('Error en GET /api/user/activity:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// POST - Registrar nueva actividad\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    // Verificar autenticaci\xF3n\r\n    const session = await auth();\r\n    if (!session?.user) {\r\n      return NextResponse.json(\r\n        { error: 'Usuario no autenticado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    // Obtener usuario por email\r\n    const userEmail = session.user.email;\r\n    const { data: user } = await supabaseAdmin\r\n      .from('users')\r\n      .select('id')\r\n      .eq('email', userEmail)\r\n      .single();\r\n\r\n    if (!user) {\r\n      return NextResponse.json(\r\n        { error: 'Usuario no encontrado' },\r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    const body = await request.json();\r\n    const { action, category, description, metadata } = body;\r\n\r\n    // Validar datos requeridos\r\n    if (!action || !category) {\r\n      return NextResponse.json(\r\n        { error: 'Acci\xF3n y categor\xEDa son requeridas' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Obtener informaci\xF3n del request\r\n    const clientIP = getClientIP(request);\r\n    const userAgent = request.headers.get('user-agent') || '';\r\n\r\n    // Crear registro de actividad\r\n    const activityData: Omit<UserActivity, 'id' | 'created_at'> = {\r\n      user_id: user.id,\r\n      action,\r\n      category,\r\n      description,\r\n      metadata,\r\n      ip_address: clientIP,\r\n      user_agent: userAgent,\r\n    };\r\n\r\n    const { data: newActivity, error } = await supabaseAdmin\r\n      .from('user_activity')\r\n      .insert(activityData)\r\n      .select()\r\n      .single();\r\n\r\n    if (error) {\r\n      console.error('Error al crear actividad:', error);\r\n      return NextResponse.json(\r\n        { error: 'Error al registrar actividad' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      activity: newActivity,\r\n      message: 'Actividad registrada exitosamente',\r\n    });\r\n  } catch (error) {\r\n    console.error('Error en POST /api/user/activity:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// Funci\xF3n auxiliar para obtener estad\xEDsticas de actividad\r\nasync function getActivityStats(userId: string, filters: ActivityFilters) {\r\n  try {\r\n    // Estad\xEDsticas por categor\xEDa\r\n    const { data: categoryStats } = await supabaseAdmin\r\n      .from('user_activity')\r\n      .select('category')\r\n      .eq('user_id', userId)\r\n      .gte('created_at', filters.startDate || new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString());\r\n\r\n    const categoryCounts = categoryStats?.reduce((acc, item) => {\r\n      acc[item.category] = (acc[item.category] || 0) + 1;\r\n      return acc;\r\n    }, {} as Record<string, number>) || {};\r\n\r\n    // Actividad por d\xEDa (\xFAltimos 7 d\xEDas)\r\n    const sevenDaysAgo = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString();\r\n    const { data: dailyActivity } = await supabaseAdmin\r\n      .from('user_activity')\r\n      .select('created_at')\r\n      .eq('user_id', userId)\r\n      .gte('created_at', sevenDaysAgo);\r\n\r\n    const dailyCounts = dailyActivity?.reduce((acc, item) => {\r\n      const date = new Date(item.created_at).toISOString().split('T')[0];\r\n      acc[date] = (acc[date] || 0) + 1;\r\n      return acc;\r\n    }, {} as Record<string, number>) || {};\r\n\r\n    return {\r\n      byCategory: categoryCounts,\r\n      byDay: dailyCounts,\r\n      totalActivities: categoryStats?.length || 0,\r\n    };\r\n  } catch (error) {\r\n    console.error('Error al obtener estad\xEDsticas:', error);\r\n    return {\r\n      byCategory: {},\r\n      byDay: {},\r\n      totalActivities: 0,\r\n    };\r\n  }\r\n}\r\n\r\n// Funci\xF3n auxiliar para obtener IP del cliente\r\nfunction getClientIP(request: NextRequest): string {\r\n  const forwarded = request.headers.get('x-forwarded-for');\r\n  const realIP = request.headers.get('x-real-ip');\r\n  \r\n  if (forwarded) {\r\n    return forwarded.split(',')[0].trim();\r\n  }\r\n  \r\n  if (realIP) {\r\n    return realIP;\r\n  }\r\n  \r\n  return request.ip || 'unknown';\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "POST", "runtime", "request", "session", "auth", "user", "NextResponse", "json", "error", "status", "userEmail", "email", "data", "supabaseAdmin", "from", "select", "eq", "single", "searchParams", "URL", "url", "filters", "category", "get", "undefined", "action", "startDate", "endDate", "limit", "parseInt", "offset", "query", "id", "gte", "lte", "order", "ascending", "range", "activities", "console", "countQuery", "count", "head", "stats", "getActivityStats", "success", "pagination", "total", "hasMore", "body", "description", "metadata", "clientIP", "getClientIP", "userAgent", "headers", "activityData", "user_id", "ip_address", "user_agent", "newActivity", "insert", "activity", "message", "userId", "categoryStats", "Date", "now", "toISOString", "categoryCounts", "reduce", "acc", "item", "sevenDaysAgo", "dailyActivity", "dailyCounts", "date", "created_at", "split", "byCategory", "byDay", "totalActivities", "length", "forwarded", "realIP", "trim", "ip"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "de40650aaaf5508daff6a1c4a874fa8878207b07"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1js9ckycx = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1js9ckycx();
cov_1js9ckycx().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1js9ckycx().f[0]++;
  cov_1js9ckycx().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1js9ckycx().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1js9ckycx().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_1js9ckycx().f[1]++;
    cov_1js9ckycx().s[4]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_1js9ckycx().f[2]++;
    cov_1js9ckycx().s[5]++;
    return POST;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_1js9ckycx().f[3]++;
    cov_1js9ckycx().s[6]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_1js9ckycx().s[7]++, require("next/server"));
const _config =
/* istanbul ignore next */
(cov_1js9ckycx().s[8]++, require("../../../../lib/auth/config"));
const _supabase =
/* istanbul ignore next */
(cov_1js9ckycx().s[9]++, require("../../../../lib/integrations/supabase"));
const runtime =
/* istanbul ignore next */
(cov_1js9ckycx().s[10]++, 'nodejs');
async function GET(request) {
  /* istanbul ignore next */
  cov_1js9ckycx().f[4]++;
  cov_1js9ckycx().s[11]++;
  try {
    // Verificar autenticaciÃ³n
    const session =
    /* istanbul ignore next */
    (cov_1js9ckycx().s[12]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_1js9ckycx().s[13]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_1js9ckycx().b[0][0]++;
      cov_1js9ckycx().s[14]++;
      return _server.NextResponse.json({
        error: 'Usuario no autenticado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_1js9ckycx().b[0][1]++;
    }
    // Obtener usuario por email
    const userEmail =
    /* istanbul ignore next */
    (cov_1js9ckycx().s[15]++, session.user.email);
    const {
      data: user
    } =
    /* istanbul ignore next */
    (cov_1js9ckycx().s[16]++, await _supabase.supabaseAdmin.from('users').select('id').eq('email', userEmail).single());
    /* istanbul ignore next */
    cov_1js9ckycx().s[17]++;
    if (!user) {
      /* istanbul ignore next */
      cov_1js9ckycx().b[1][0]++;
      cov_1js9ckycx().s[18]++;
      return _server.NextResponse.json({
        error: 'Usuario no encontrado'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_1js9ckycx().b[1][1]++;
    }
    // Obtener parÃ¡metros de filtro
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_1js9ckycx().s[19]++, new URL(request.url));
    const filters =
    /* istanbul ignore next */
    (cov_1js9ckycx().s[20]++, {
      category:
      /* istanbul ignore next */
      (cov_1js9ckycx().b[2][0]++, searchParams.get('category')) ||
      /* istanbul ignore next */
      (cov_1js9ckycx().b[2][1]++, undefined),
      action:
      /* istanbul ignore next */
      (cov_1js9ckycx().b[3][0]++, searchParams.get('action')) ||
      /* istanbul ignore next */
      (cov_1js9ckycx().b[3][1]++, undefined),
      startDate:
      /* istanbul ignore next */
      (cov_1js9ckycx().b[4][0]++, searchParams.get('startDate')) ||
      /* istanbul ignore next */
      (cov_1js9ckycx().b[4][1]++, undefined),
      endDate:
      /* istanbul ignore next */
      (cov_1js9ckycx().b[5][0]++, searchParams.get('endDate')) ||
      /* istanbul ignore next */
      (cov_1js9ckycx().b[5][1]++, undefined),
      limit: parseInt(
      /* istanbul ignore next */
      (cov_1js9ckycx().b[6][0]++, searchParams.get('limit')) ||
      /* istanbul ignore next */
      (cov_1js9ckycx().b[6][1]++, '50')),
      offset: parseInt(
      /* istanbul ignore next */
      (cov_1js9ckycx().b[7][0]++, searchParams.get('offset')) ||
      /* istanbul ignore next */
      (cov_1js9ckycx().b[7][1]++, '0'))
    });
    // Construir query
    let query =
    /* istanbul ignore next */
    (cov_1js9ckycx().s[21]++, _supabase.supabaseAdmin.from('user_activity').select('*').eq('user_id', user.id));
    // Aplicar filtros
    /* istanbul ignore next */
    cov_1js9ckycx().s[22]++;
    if (filters.category) {
      /* istanbul ignore next */
      cov_1js9ckycx().b[8][0]++;
      cov_1js9ckycx().s[23]++;
      query = query.eq('category', filters.category);
    } else
    /* istanbul ignore next */
    {
      cov_1js9ckycx().b[8][1]++;
    }
    cov_1js9ckycx().s[24]++;
    if (filters.action) {
      /* istanbul ignore next */
      cov_1js9ckycx().b[9][0]++;
      cov_1js9ckycx().s[25]++;
      query = query.eq('action', filters.action);
    } else
    /* istanbul ignore next */
    {
      cov_1js9ckycx().b[9][1]++;
    }
    cov_1js9ckycx().s[26]++;
    if (filters.startDate) {
      /* istanbul ignore next */
      cov_1js9ckycx().b[10][0]++;
      cov_1js9ckycx().s[27]++;
      query = query.gte('created_at', filters.startDate);
    } else
    /* istanbul ignore next */
    {
      cov_1js9ckycx().b[10][1]++;
    }
    cov_1js9ckycx().s[28]++;
    if (filters.endDate) {
      /* istanbul ignore next */
      cov_1js9ckycx().b[11][0]++;
      cov_1js9ckycx().s[29]++;
      query = query.lte('created_at', filters.endDate);
    } else
    /* istanbul ignore next */
    {
      cov_1js9ckycx().b[11][1]++;
    }
    // Aplicar paginaciÃ³n y ordenamiento
    cov_1js9ckycx().s[30]++;
    query = query.order('created_at', {
      ascending: false
    }).range(filters.offset, filters.offset + filters.limit - 1);
    const {
      data: activities,
      error
    } =
    /* istanbul ignore next */
    (cov_1js9ckycx().s[31]++, await query);
    /* istanbul ignore next */
    cov_1js9ckycx().s[32]++;
    if (error) {
      /* istanbul ignore next */
      cov_1js9ckycx().b[12][0]++;
      cov_1js9ckycx().s[33]++;
      console.error('Error al obtener actividad:', error);
      /* istanbul ignore next */
      cov_1js9ckycx().s[34]++;
      return _server.NextResponse.json({
        error: 'Error al obtener historial de actividad'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_1js9ckycx().b[12][1]++;
    }
    // Obtener conteo total para paginaciÃ³n
    let countQuery =
    /* istanbul ignore next */
    (cov_1js9ckycx().s[35]++, _supabase.supabaseAdmin.from('user_activity').select('*', {
      count: 'exact',
      head: true
    }).eq('user_id', user.id));
    /* istanbul ignore next */
    cov_1js9ckycx().s[36]++;
    if (filters.category) {
      /* istanbul ignore next */
      cov_1js9ckycx().b[13][0]++;
      cov_1js9ckycx().s[37]++;
      countQuery = countQuery.eq('category', filters.category);
    } else
    /* istanbul ignore next */
    {
      cov_1js9ckycx().b[13][1]++;
    }
    cov_1js9ckycx().s[38]++;
    if (filters.action) {
      /* istanbul ignore next */
      cov_1js9ckycx().b[14][0]++;
      cov_1js9ckycx().s[39]++;
      countQuery = countQuery.eq('action', filters.action);
    } else
    /* istanbul ignore next */
    {
      cov_1js9ckycx().b[14][1]++;
    }
    cov_1js9ckycx().s[40]++;
    if (filters.startDate) {
      /* istanbul ignore next */
      cov_1js9ckycx().b[15][0]++;
      cov_1js9ckycx().s[41]++;
      countQuery = countQuery.gte('created_at', filters.startDate);
    } else
    /* istanbul ignore next */
    {
      cov_1js9ckycx().b[15][1]++;
    }
    cov_1js9ckycx().s[42]++;
    if (filters.endDate) {
      /* istanbul ignore next */
      cov_1js9ckycx().b[16][0]++;
      cov_1js9ckycx().s[43]++;
      countQuery = countQuery.lte('created_at', filters.endDate);
    } else
    /* istanbul ignore next */
    {
      cov_1js9ckycx().b[16][1]++;
    }
    const {
      count
    } =
    /* istanbul ignore next */
    (cov_1js9ckycx().s[44]++, await countQuery);
    // Obtener estadÃ­sticas de actividad
    const stats =
    /* istanbul ignore next */
    (cov_1js9ckycx().s[45]++, await getActivityStats(user.id, filters));
    /* istanbul ignore next */
    cov_1js9ckycx().s[46]++;
    return _server.NextResponse.json({
      success: true,
      activities:
      /* istanbul ignore next */
      (cov_1js9ckycx().b[17][0]++, activities) ||
      /* istanbul ignore next */
      (cov_1js9ckycx().b[17][1]++, []),
      pagination: {
        total:
        /* istanbul ignore next */
        (cov_1js9ckycx().b[18][0]++, count) ||
        /* istanbul ignore next */
        (cov_1js9ckycx().b[18][1]++, 0),
        limit: filters.limit,
        offset: filters.offset,
        hasMore: filters.offset + filters.limit < (
        /* istanbul ignore next */
        (cov_1js9ckycx().b[19][0]++, count) ||
        /* istanbul ignore next */
        (cov_1js9ckycx().b[19][1]++, 0))
      },
      stats
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1js9ckycx().s[47]++;
    console.error('Error en GET /api/user/activity:', error);
    /* istanbul ignore next */
    cov_1js9ckycx().s[48]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
async function POST(request) {
  /* istanbul ignore next */
  cov_1js9ckycx().f[5]++;
  cov_1js9ckycx().s[49]++;
  try {
    // Verificar autenticaciÃ³n
    const session =
    /* istanbul ignore next */
    (cov_1js9ckycx().s[50]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_1js9ckycx().s[51]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_1js9ckycx().b[20][0]++;
      cov_1js9ckycx().s[52]++;
      return _server.NextResponse.json({
        error: 'Usuario no autenticado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_1js9ckycx().b[20][1]++;
    }
    // Obtener usuario por email
    const userEmail =
    /* istanbul ignore next */
    (cov_1js9ckycx().s[53]++, session.user.email);
    const {
      data: user
    } =
    /* istanbul ignore next */
    (cov_1js9ckycx().s[54]++, await _supabase.supabaseAdmin.from('users').select('id').eq('email', userEmail).single());
    /* istanbul ignore next */
    cov_1js9ckycx().s[55]++;
    if (!user) {
      /* istanbul ignore next */
      cov_1js9ckycx().b[21][0]++;
      cov_1js9ckycx().s[56]++;
      return _server.NextResponse.json({
        error: 'Usuario no encontrado'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_1js9ckycx().b[21][1]++;
    }
    const body =
    /* istanbul ignore next */
    (cov_1js9ckycx().s[57]++, await request.json());
    const {
      action,
      category,
      description,
      metadata
    } =
    /* istanbul ignore next */
    (cov_1js9ckycx().s[58]++, body);
    // Validar datos requeridos
    /* istanbul ignore next */
    cov_1js9ckycx().s[59]++;
    if (
    /* istanbul ignore next */
    (cov_1js9ckycx().b[23][0]++, !action) ||
    /* istanbul ignore next */
    (cov_1js9ckycx().b[23][1]++, !category)) {
      /* istanbul ignore next */
      cov_1js9ckycx().b[22][0]++;
      cov_1js9ckycx().s[60]++;
      return _server.NextResponse.json({
        error: 'AcciÃ³n y categorÃ­a son requeridas'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_1js9ckycx().b[22][1]++;
    }
    // Obtener informaciÃ³n del request
    const clientIP =
    /* istanbul ignore next */
    (cov_1js9ckycx().s[61]++, getClientIP(request));
    const userAgent =
    /* istanbul ignore next */
    (cov_1js9ckycx().s[62]++,
    /* istanbul ignore next */
    (cov_1js9ckycx().b[24][0]++, request.headers.get('user-agent')) ||
    /* istanbul ignore next */
    (cov_1js9ckycx().b[24][1]++, ''));
    // Crear registro de actividad
    const activityData =
    /* istanbul ignore next */
    (cov_1js9ckycx().s[63]++, {
      user_id: user.id,
      action,
      category,
      description,
      metadata,
      ip_address: clientIP,
      user_agent: userAgent
    });
    const {
      data: newActivity,
      error
    } =
    /* istanbul ignore next */
    (cov_1js9ckycx().s[64]++, await _supabase.supabaseAdmin.from('user_activity').insert(activityData).select().single());
    /* istanbul ignore next */
    cov_1js9ckycx().s[65]++;
    if (error) {
      /* istanbul ignore next */
      cov_1js9ckycx().b[25][0]++;
      cov_1js9ckycx().s[66]++;
      console.error('Error al crear actividad:', error);
      /* istanbul ignore next */
      cov_1js9ckycx().s[67]++;
      return _server.NextResponse.json({
        error: 'Error al registrar actividad'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_1js9ckycx().b[25][1]++;
    }
    cov_1js9ckycx().s[68]++;
    return _server.NextResponse.json({
      success: true,
      activity: newActivity,
      message: 'Actividad registrada exitosamente'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1js9ckycx().s[69]++;
    console.error('Error en POST /api/user/activity:', error);
    /* istanbul ignore next */
    cov_1js9ckycx().s[70]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
// FunciÃ³n auxiliar para obtener estadÃ­sticas de actividad
async function getActivityStats(userId, filters) {
  /* istanbul ignore next */
  cov_1js9ckycx().f[6]++;
  cov_1js9ckycx().s[71]++;
  try {
    // EstadÃ­sticas por categorÃ­a
    const {
      data: categoryStats
    } =
    /* istanbul ignore next */
    (cov_1js9ckycx().s[72]++, await _supabase.supabaseAdmin.from('user_activity').select('category').eq('user_id', userId).gte('created_at',
    /* istanbul ignore next */
    (cov_1js9ckycx().b[26][0]++, filters.startDate) ||
    /* istanbul ignore next */
    (cov_1js9ckycx().b[26][1]++, new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString())));
    const categoryCounts =
    /* istanbul ignore next */
    (cov_1js9ckycx().s[73]++,
    /* istanbul ignore next */
    (cov_1js9ckycx().b[27][0]++, categoryStats?.reduce((acc, item) => {
      /* istanbul ignore next */
      cov_1js9ckycx().f[7]++;
      cov_1js9ckycx().s[74]++;
      acc[item.category] = (
      /* istanbul ignore next */
      (cov_1js9ckycx().b[28][0]++, acc[item.category]) ||
      /* istanbul ignore next */
      (cov_1js9ckycx().b[28][1]++, 0)) + 1;
      /* istanbul ignore next */
      cov_1js9ckycx().s[75]++;
      return acc;
    }, {})) ||
    /* istanbul ignore next */
    (cov_1js9ckycx().b[27][1]++, {}));
    // Actividad por dÃ­a (Ãºltimos 7 dÃ­as)
    const sevenDaysAgo =
    /* istanbul ignore next */
    (cov_1js9ckycx().s[76]++, new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString());
    const {
      data: dailyActivity
    } =
    /* istanbul ignore next */
    (cov_1js9ckycx().s[77]++, await _supabase.supabaseAdmin.from('user_activity').select('created_at').eq('user_id', userId).gte('created_at', sevenDaysAgo));
    const dailyCounts =
    /* istanbul ignore next */
    (cov_1js9ckycx().s[78]++,
    /* istanbul ignore next */
    (cov_1js9ckycx().b[29][0]++, dailyActivity?.reduce((acc, item) => {
      /* istanbul ignore next */
      cov_1js9ckycx().f[8]++;
      const date =
      /* istanbul ignore next */
      (cov_1js9ckycx().s[79]++, new Date(item.created_at).toISOString().split('T')[0]);
      /* istanbul ignore next */
      cov_1js9ckycx().s[80]++;
      acc[date] = (
      /* istanbul ignore next */
      (cov_1js9ckycx().b[30][0]++, acc[date]) ||
      /* istanbul ignore next */
      (cov_1js9ckycx().b[30][1]++, 0)) + 1;
      /* istanbul ignore next */
      cov_1js9ckycx().s[81]++;
      return acc;
    }, {})) ||
    /* istanbul ignore next */
    (cov_1js9ckycx().b[29][1]++, {}));
    /* istanbul ignore next */
    cov_1js9ckycx().s[82]++;
    return {
      byCategory: categoryCounts,
      byDay: dailyCounts,
      totalActivities:
      /* istanbul ignore next */
      (cov_1js9ckycx().b[31][0]++, categoryStats?.length) ||
      /* istanbul ignore next */
      (cov_1js9ckycx().b[31][1]++, 0)
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1js9ckycx().s[83]++;
    console.error('Error al obtener estadÃ­sticas:', error);
    /* istanbul ignore next */
    cov_1js9ckycx().s[84]++;
    return {
      byCategory: {},
      byDay: {},
      totalActivities: 0
    };
  }
}
// FunciÃ³n auxiliar para obtener IP del cliente
function getClientIP(request) {
  /* istanbul ignore next */
  cov_1js9ckycx().f[9]++;
  const forwarded =
  /* istanbul ignore next */
  (cov_1js9ckycx().s[85]++, request.headers.get('x-forwarded-for'));
  const realIP =
  /* istanbul ignore next */
  (cov_1js9ckycx().s[86]++, request.headers.get('x-real-ip'));
  /* istanbul ignore next */
  cov_1js9ckycx().s[87]++;
  if (forwarded) {
    /* istanbul ignore next */
    cov_1js9ckycx().b[32][0]++;
    cov_1js9ckycx().s[88]++;
    return forwarded.split(',')[0].trim();
  } else
  /* istanbul ignore next */
  {
    cov_1js9ckycx().b[32][1]++;
  }
  cov_1js9ckycx().s[89]++;
  if (realIP) {
    /* istanbul ignore next */
    cov_1js9ckycx().b[33][0]++;
    cov_1js9ckycx().s[90]++;
    return realIP;
  } else
  /* istanbul ignore next */
  {
    cov_1js9ckycx().b[33][1]++;
  }
  cov_1js9ckycx().s[91]++;
  return /* istanbul ignore next */(cov_1js9ckycx().b[34][0]++, request.ip) ||
  /* istanbul ignore next */
  (cov_1js9ckycx().b[34][1]++, 'unknown');
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMWpzOWNreWN4IiwiYWN0dWFsQ292ZXJhZ2UiLCJzIiwiR0VUIiwiZiIsIlBPU1QiLCJydW50aW1lIiwicmVxdWVzdCIsInNlc3Npb24iLCJfY29uZmlnIiwiYXV0aCIsInVzZXIiLCJiIiwiX3NlcnZlciIsIk5leHRSZXNwb25zZSIsImpzb24iLCJlcnJvciIsInN0YXR1cyIsInVzZXJFbWFpbCIsImVtYWlsIiwiZGF0YSIsIl9zdXBhYmFzZSIsInN1cGFiYXNlQWRtaW4iLCJmcm9tIiwic2VsZWN0IiwiZXEiLCJzaW5nbGUiLCJzZWFyY2hQYXJhbXMiLCJVUkwiLCJ1cmwiLCJmaWx0ZXJzIiwiY2F0ZWdvcnkiLCJnZXQiLCJ1bmRlZmluZWQiLCJhY3Rpb24iLCJzdGFydERhdGUiLCJlbmREYXRlIiwibGltaXQiLCJwYXJzZUludCIsIm9mZnNldCIsInF1ZXJ5IiwiaWQiLCJndGUiLCJsdGUiLCJvcmRlciIsImFzY2VuZGluZyIsInJhbmdlIiwiYWN0aXZpdGllcyIsImNvbnNvbGUiLCJjb3VudFF1ZXJ5IiwiY291bnQiLCJoZWFkIiwic3RhdHMiLCJnZXRBY3Rpdml0eVN0YXRzIiwic3VjY2VzcyIsInBhZ2luYXRpb24iLCJ0b3RhbCIsImhhc01vcmUiLCJib2R5IiwiZGVzY3JpcHRpb24iLCJtZXRhZGF0YSIsImNsaWVudElQIiwiZ2V0Q2xpZW50SVAiLCJ1c2VyQWdlbnQiLCJoZWFkZXJzIiwiYWN0aXZpdHlEYXRhIiwidXNlcl9pZCIsImlwX2FkZHJlc3MiLCJ1c2VyX2FnZW50IiwibmV3QWN0aXZpdHkiLCJpbnNlcnQiLCJhY3Rpdml0eSIsIm1lc3NhZ2UiLCJ1c2VySWQiLCJjYXRlZ29yeVN0YXRzIiwiRGF0ZSIsIm5vdyIsInRvSVNPU3RyaW5nIiwiY2F0ZWdvcnlDb3VudHMiLCJyZWR1Y2UiLCJhY2MiLCJpdGVtIiwic2V2ZW5EYXlzQWdvIiwiZGFpbHlBY3Rpdml0eSIsImRhaWx5Q291bnRzIiwiZGF0ZSIsImNyZWF0ZWRfYXQiLCJzcGxpdCIsImJ5Q2F0ZWdvcnkiLCJieURheSIsInRvdGFsQWN0aXZpdGllcyIsImxlbmd0aCIsImZvcndhcmRlZCIsInJlYWxJUCIsInRyaW0iLCJpcCJdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbWFydGlcXERlc2t0b3BcXERFU0FSUk9MTE9TV1xcQk9JTEVSUExBVFRFIEUtQ09NTUVSQ0VcXHNyY1xcYXBwXFxhcGlcXHVzZXJcXGFjdGl2aXR5XFxyb3V0ZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb25maWd1cmFjacOzbiBwYXJhIE5vZGUuanMgUnVudGltZVxyXG5leHBvcnQgY29uc3QgcnVudGltZSA9ICdub2RlanMnO1xyXG5cclxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy8gUElOVEVZQSBFLUNPTU1FUkNFIC0gQVBJIERFIEdFU1RJw5NOIERFIEFDVElWSURBRCBERSBVU1VBUklPXHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcblxyXG5pbXBvcnQgeyBOZXh0UmVxdWVzdCwgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInO1xyXG5pbXBvcnQgeyBhdXRoIH0gZnJvbSAnQC9saWIvYXV0aC9jb25maWcnO1xyXG5pbXBvcnQgeyBzdXBhYmFzZUFkbWluIH0gZnJvbSAnQC9saWIvaW50ZWdyYXRpb25zL3N1cGFiYXNlJztcclxuXHJcbi8vIFRpcG9zIHBhcmEgYWN0aXZpZGFkXHJcbmV4cG9ydCBpbnRlcmZhY2UgVXNlckFjdGl2aXR5IHtcclxuICBpZDogc3RyaW5nO1xyXG4gIHVzZXJfaWQ6IHN0cmluZztcclxuICBhY3Rpb246IHN0cmluZztcclxuICBjYXRlZ29yeTogJ2F1dGgnIHwgJ3Byb2ZpbGUnIHwgJ29yZGVyJyB8ICdzZWN1cml0eScgfCAnc2Vzc2lvbicgfCAncHJlZmVyZW5jZSc7XHJcbiAgZGVzY3JpcHRpb24/OiBzdHJpbmc7XHJcbiAgbWV0YWRhdGE/OiBSZWNvcmQ8c3RyaW5nLCBhbnk+O1xyXG4gIGlwX2FkZHJlc3M/OiBzdHJpbmc7XHJcbiAgdXNlcl9hZ2VudD86IHN0cmluZztcclxuICBjcmVhdGVkX2F0OiBzdHJpbmc7XHJcbn1cclxuXHJcbmludGVyZmFjZSBBY3Rpdml0eUZpbHRlcnMge1xyXG4gIGNhdGVnb3J5Pzogc3RyaW5nO1xyXG4gIGFjdGlvbj86IHN0cmluZztcclxuICBzdGFydERhdGU/OiBzdHJpbmc7XHJcbiAgZW5kRGF0ZT86IHN0cmluZztcclxuICBsaW1pdD86IG51bWJlcjtcclxuICBvZmZzZXQ/OiBudW1iZXI7XHJcbn1cclxuXHJcbi8vIEdFVCAtIE9idGVuZXIgaGlzdG9yaWFsIGRlIGFjdGl2aWRhZCBkZWwgdXN1YXJpb1xyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gR0VUKHJlcXVlc3Q6IE5leHRSZXF1ZXN0KSB7XHJcbiAgdHJ5IHtcclxuICAgIC8vIFZlcmlmaWNhciBhdXRlbnRpY2FjacOzblxyXG4gICAgY29uc3Qgc2Vzc2lvbiA9IGF3YWl0IGF1dGgoKTtcclxuICAgIGlmICghc2Vzc2lvbj8udXNlcikge1xyXG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXHJcbiAgICAgICAgeyBlcnJvcjogJ1VzdWFyaW8gbm8gYXV0ZW50aWNhZG8nIH0sXHJcbiAgICAgICAgeyBzdGF0dXM6IDQwMSB9XHJcbiAgICAgICk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gT2J0ZW5lciB1c3VhcmlvIHBvciBlbWFpbFxyXG4gICAgY29uc3QgdXNlckVtYWlsID0gc2Vzc2lvbi51c2VyLmVtYWlsO1xyXG4gICAgY29uc3QgeyBkYXRhOiB1c2VyIH0gPSBhd2FpdCBzdXBhYmFzZUFkbWluXHJcbiAgICAgIC5mcm9tKCd1c2VycycpXHJcbiAgICAgIC5zZWxlY3QoJ2lkJylcclxuICAgICAgLmVxKCdlbWFpbCcsIHVzZXJFbWFpbClcclxuICAgICAgLnNpbmdsZSgpO1xyXG5cclxuICAgIGlmICghdXNlcikge1xyXG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXHJcbiAgICAgICAgeyBlcnJvcjogJ1VzdWFyaW8gbm8gZW5jb250cmFkbycgfSxcclxuICAgICAgICB7IHN0YXR1czogNDA0IH1cclxuICAgICAgKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBPYnRlbmVyIHBhcsOhbWV0cm9zIGRlIGZpbHRyb1xyXG4gICAgY29uc3QgeyBzZWFyY2hQYXJhbXMgfSA9IG5ldyBVUkwocmVxdWVzdC51cmwpO1xyXG4gICAgY29uc3QgZmlsdGVyczogQWN0aXZpdHlGaWx0ZXJzID0ge1xyXG4gICAgICBjYXRlZ29yeTogc2VhcmNoUGFyYW1zLmdldCgnY2F0ZWdvcnknKSB8fCB1bmRlZmluZWQsXHJcbiAgICAgIGFjdGlvbjogc2VhcmNoUGFyYW1zLmdldCgnYWN0aW9uJykgfHwgdW5kZWZpbmVkLFxyXG4gICAgICBzdGFydERhdGU6IHNlYXJjaFBhcmFtcy5nZXQoJ3N0YXJ0RGF0ZScpIHx8IHVuZGVmaW5lZCxcclxuICAgICAgZW5kRGF0ZTogc2VhcmNoUGFyYW1zLmdldCgnZW5kRGF0ZScpIHx8IHVuZGVmaW5lZCxcclxuICAgICAgbGltaXQ6IHBhcnNlSW50KHNlYXJjaFBhcmFtcy5nZXQoJ2xpbWl0JykgfHwgJzUwJyksXHJcbiAgICAgIG9mZnNldDogcGFyc2VJbnQoc2VhcmNoUGFyYW1zLmdldCgnb2Zmc2V0JykgfHwgJzAnKSxcclxuICAgIH07XHJcblxyXG4gICAgLy8gQ29uc3RydWlyIHF1ZXJ5XHJcbiAgICBsZXQgcXVlcnkgPSBzdXBhYmFzZUFkbWluXHJcbiAgICAgIC5mcm9tKCd1c2VyX2FjdGl2aXR5JylcclxuICAgICAgLnNlbGVjdCgnKicpXHJcbiAgICAgIC5lcSgndXNlcl9pZCcsIHVzZXIuaWQpO1xyXG5cclxuICAgIC8vIEFwbGljYXIgZmlsdHJvc1xyXG4gICAgaWYgKGZpbHRlcnMuY2F0ZWdvcnkpIHtcclxuICAgICAgcXVlcnkgPSBxdWVyeS5lcSgnY2F0ZWdvcnknLCBmaWx0ZXJzLmNhdGVnb3J5KTtcclxuICAgIH1cclxuXHJcbiAgICBpZiAoZmlsdGVycy5hY3Rpb24pIHtcclxuICAgICAgcXVlcnkgPSBxdWVyeS5lcSgnYWN0aW9uJywgZmlsdGVycy5hY3Rpb24pO1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChmaWx0ZXJzLnN0YXJ0RGF0ZSkge1xyXG4gICAgICBxdWVyeSA9IHF1ZXJ5Lmd0ZSgnY3JlYXRlZF9hdCcsIGZpbHRlcnMuc3RhcnREYXRlKTtcclxuICAgIH1cclxuXHJcbiAgICBpZiAoZmlsdGVycy5lbmREYXRlKSB7XHJcbiAgICAgIHF1ZXJ5ID0gcXVlcnkubHRlKCdjcmVhdGVkX2F0JywgZmlsdGVycy5lbmREYXRlKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBBcGxpY2FyIHBhZ2luYWNpw7NuIHkgb3JkZW5hbWllbnRvXHJcbiAgICBxdWVyeSA9IHF1ZXJ5XHJcbiAgICAgIC5vcmRlcignY3JlYXRlZF9hdCcsIHsgYXNjZW5kaW5nOiBmYWxzZSB9KVxyXG4gICAgICAucmFuZ2UoZmlsdGVycy5vZmZzZXQhLCBmaWx0ZXJzLm9mZnNldCEgKyBmaWx0ZXJzLmxpbWl0ISAtIDEpO1xyXG5cclxuICAgIGNvbnN0IHsgZGF0YTogYWN0aXZpdGllcywgZXJyb3IgfSA9IGF3YWl0IHF1ZXJ5O1xyXG5cclxuICAgIGlmIChlcnJvcikge1xyXG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBhbCBvYnRlbmVyIGFjdGl2aWRhZDonLCBlcnJvcik7XHJcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcclxuICAgICAgICB7IGVycm9yOiAnRXJyb3IgYWwgb2J0ZW5lciBoaXN0b3JpYWwgZGUgYWN0aXZpZGFkJyB9LFxyXG4gICAgICAgIHsgc3RhdHVzOiA1MDAgfVxyXG4gICAgICApO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIE9idGVuZXIgY29udGVvIHRvdGFsIHBhcmEgcGFnaW5hY2nDs25cclxuICAgIGxldCBjb3VudFF1ZXJ5ID0gc3VwYWJhc2VBZG1pblxyXG4gICAgICAuZnJvbSgndXNlcl9hY3Rpdml0eScpXHJcbiAgICAgIC5zZWxlY3QoJyonLCB7IGNvdW50OiAnZXhhY3QnLCBoZWFkOiB0cnVlIH0pXHJcbiAgICAgIC5lcSgndXNlcl9pZCcsIHVzZXIuaWQpO1xyXG5cclxuICAgIGlmIChmaWx0ZXJzLmNhdGVnb3J5KSB7XHJcbiAgICAgIGNvdW50UXVlcnkgPSBjb3VudFF1ZXJ5LmVxKCdjYXRlZ29yeScsIGZpbHRlcnMuY2F0ZWdvcnkpO1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChmaWx0ZXJzLmFjdGlvbikge1xyXG4gICAgICBjb3VudFF1ZXJ5ID0gY291bnRRdWVyeS5lcSgnYWN0aW9uJywgZmlsdGVycy5hY3Rpb24pO1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChmaWx0ZXJzLnN0YXJ0RGF0ZSkge1xyXG4gICAgICBjb3VudFF1ZXJ5ID0gY291bnRRdWVyeS5ndGUoJ2NyZWF0ZWRfYXQnLCBmaWx0ZXJzLnN0YXJ0RGF0ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKGZpbHRlcnMuZW5kRGF0ZSkge1xyXG4gICAgICBjb3VudFF1ZXJ5ID0gY291bnRRdWVyeS5sdGUoJ2NyZWF0ZWRfYXQnLCBmaWx0ZXJzLmVuZERhdGUpO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IHsgY291bnQgfSA9IGF3YWl0IGNvdW50UXVlcnk7XHJcblxyXG4gICAgLy8gT2J0ZW5lciBlc3RhZMOtc3RpY2FzIGRlIGFjdGl2aWRhZFxyXG4gICAgY29uc3Qgc3RhdHMgPSBhd2FpdCBnZXRBY3Rpdml0eVN0YXRzKHVzZXIuaWQsIGZpbHRlcnMpO1xyXG5cclxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7XHJcbiAgICAgIHN1Y2Nlc3M6IHRydWUsXHJcbiAgICAgIGFjdGl2aXRpZXM6IGFjdGl2aXRpZXMgfHwgW10sXHJcbiAgICAgIHBhZ2luYXRpb246IHtcclxuICAgICAgICB0b3RhbDogY291bnQgfHwgMCxcclxuICAgICAgICBsaW1pdDogZmlsdGVycy5saW1pdCxcclxuICAgICAgICBvZmZzZXQ6IGZpbHRlcnMub2Zmc2V0LFxyXG4gICAgICAgIGhhc01vcmU6IChmaWx0ZXJzLm9mZnNldCEgKyBmaWx0ZXJzLmxpbWl0ISkgPCAoY291bnQgfHwgMCksXHJcbiAgICAgIH0sXHJcbiAgICAgIHN0YXRzLFxyXG4gICAgfSk7XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGVuIEdFVCAvYXBpL3VzZXIvYWN0aXZpdHk6JywgZXJyb3IpO1xyXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxyXG4gICAgICB7IGVycm9yOiAnRXJyb3IgaW50ZXJubyBkZWwgc2Vydmlkb3InIH0sXHJcbiAgICAgIHsgc3RhdHVzOiA1MDAgfVxyXG4gICAgKTtcclxuICB9XHJcbn1cclxuXHJcbi8vIFBPU1QgLSBSZWdpc3RyYXIgbnVldmEgYWN0aXZpZGFkXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBQT1NUKHJlcXVlc3Q6IE5leHRSZXF1ZXN0KSB7XHJcbiAgdHJ5IHtcclxuICAgIC8vIFZlcmlmaWNhciBhdXRlbnRpY2FjacOzblxyXG4gICAgY29uc3Qgc2Vzc2lvbiA9IGF3YWl0IGF1dGgoKTtcclxuICAgIGlmICghc2Vzc2lvbj8udXNlcikge1xyXG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXHJcbiAgICAgICAgeyBlcnJvcjogJ1VzdWFyaW8gbm8gYXV0ZW50aWNhZG8nIH0sXHJcbiAgICAgICAgeyBzdGF0dXM6IDQwMSB9XHJcbiAgICAgICk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gT2J0ZW5lciB1c3VhcmlvIHBvciBlbWFpbFxyXG4gICAgY29uc3QgdXNlckVtYWlsID0gc2Vzc2lvbi51c2VyLmVtYWlsO1xyXG4gICAgY29uc3QgeyBkYXRhOiB1c2VyIH0gPSBhd2FpdCBzdXBhYmFzZUFkbWluXHJcbiAgICAgIC5mcm9tKCd1c2VycycpXHJcbiAgICAgIC5zZWxlY3QoJ2lkJylcclxuICAgICAgLmVxKCdlbWFpbCcsIHVzZXJFbWFpbClcclxuICAgICAgLnNpbmdsZSgpO1xyXG5cclxuICAgIGlmICghdXNlcikge1xyXG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXHJcbiAgICAgICAgeyBlcnJvcjogJ1VzdWFyaW8gbm8gZW5jb250cmFkbycgfSxcclxuICAgICAgICB7IHN0YXR1czogNDA0IH1cclxuICAgICAgKTtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBib2R5ID0gYXdhaXQgcmVxdWVzdC5qc29uKCk7XHJcbiAgICBjb25zdCB7IGFjdGlvbiwgY2F0ZWdvcnksIGRlc2NyaXB0aW9uLCBtZXRhZGF0YSB9ID0gYm9keTtcclxuXHJcbiAgICAvLyBWYWxpZGFyIGRhdG9zIHJlcXVlcmlkb3NcclxuICAgIGlmICghYWN0aW9uIHx8ICFjYXRlZ29yeSkge1xyXG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXHJcbiAgICAgICAgeyBlcnJvcjogJ0FjY2nDs24geSBjYXRlZ29yw61hIHNvbiByZXF1ZXJpZGFzJyB9LFxyXG4gICAgICAgIHsgc3RhdHVzOiA0MDAgfVxyXG4gICAgICApO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIE9idGVuZXIgaW5mb3JtYWNpw7NuIGRlbCByZXF1ZXN0XHJcbiAgICBjb25zdCBjbGllbnRJUCA9IGdldENsaWVudElQKHJlcXVlc3QpO1xyXG4gICAgY29uc3QgdXNlckFnZW50ID0gcmVxdWVzdC5oZWFkZXJzLmdldCgndXNlci1hZ2VudCcpIHx8ICcnO1xyXG5cclxuICAgIC8vIENyZWFyIHJlZ2lzdHJvIGRlIGFjdGl2aWRhZFxyXG4gICAgY29uc3QgYWN0aXZpdHlEYXRhOiBPbWl0PFVzZXJBY3Rpdml0eSwgJ2lkJyB8ICdjcmVhdGVkX2F0Jz4gPSB7XHJcbiAgICAgIHVzZXJfaWQ6IHVzZXIuaWQsXHJcbiAgICAgIGFjdGlvbixcclxuICAgICAgY2F0ZWdvcnksXHJcbiAgICAgIGRlc2NyaXB0aW9uLFxyXG4gICAgICBtZXRhZGF0YSxcclxuICAgICAgaXBfYWRkcmVzczogY2xpZW50SVAsXHJcbiAgICAgIHVzZXJfYWdlbnQ6IHVzZXJBZ2VudCxcclxuICAgIH07XHJcblxyXG4gICAgY29uc3QgeyBkYXRhOiBuZXdBY3Rpdml0eSwgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlQWRtaW5cclxuICAgICAgLmZyb20oJ3VzZXJfYWN0aXZpdHknKVxyXG4gICAgICAuaW5zZXJ0KGFjdGl2aXR5RGF0YSlcclxuICAgICAgLnNlbGVjdCgpXHJcbiAgICAgIC5zaW5nbGUoKTtcclxuXHJcbiAgICBpZiAoZXJyb3IpIHtcclxuICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgYWwgY3JlYXIgYWN0aXZpZGFkOicsIGVycm9yKTtcclxuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxyXG4gICAgICAgIHsgZXJyb3I6ICdFcnJvciBhbCByZWdpc3RyYXIgYWN0aXZpZGFkJyB9LFxyXG4gICAgICAgIHsgc3RhdHVzOiA1MDAgfVxyXG4gICAgICApO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7XHJcbiAgICAgIHN1Y2Nlc3M6IHRydWUsXHJcbiAgICAgIGFjdGl2aXR5OiBuZXdBY3Rpdml0eSxcclxuICAgICAgbWVzc2FnZTogJ0FjdGl2aWRhZCByZWdpc3RyYWRhIGV4aXRvc2FtZW50ZScsXHJcbiAgICB9KTtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgZW4gUE9TVCAvYXBpL3VzZXIvYWN0aXZpdHk6JywgZXJyb3IpO1xyXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxyXG4gICAgICB7IGVycm9yOiAnRXJyb3IgaW50ZXJubyBkZWwgc2Vydmlkb3InIH0sXHJcbiAgICAgIHsgc3RhdHVzOiA1MDAgfVxyXG4gICAgKTtcclxuICB9XHJcbn1cclxuXHJcbi8vIEZ1bmNpw7NuIGF1eGlsaWFyIHBhcmEgb2J0ZW5lciBlc3RhZMOtc3RpY2FzIGRlIGFjdGl2aWRhZFxyXG5hc3luYyBmdW5jdGlvbiBnZXRBY3Rpdml0eVN0YXRzKHVzZXJJZDogc3RyaW5nLCBmaWx0ZXJzOiBBY3Rpdml0eUZpbHRlcnMpIHtcclxuICB0cnkge1xyXG4gICAgLy8gRXN0YWTDrXN0aWNhcyBwb3IgY2F0ZWdvcsOtYVxyXG4gICAgY29uc3QgeyBkYXRhOiBjYXRlZ29yeVN0YXRzIH0gPSBhd2FpdCBzdXBhYmFzZUFkbWluXHJcbiAgICAgIC5mcm9tKCd1c2VyX2FjdGl2aXR5JylcclxuICAgICAgLnNlbGVjdCgnY2F0ZWdvcnknKVxyXG4gICAgICAuZXEoJ3VzZXJfaWQnLCB1c2VySWQpXHJcbiAgICAgIC5ndGUoJ2NyZWF0ZWRfYXQnLCBmaWx0ZXJzLnN0YXJ0RGF0ZSB8fCBuZXcgRGF0ZShEYXRlLm5vdygpIC0gMzAgKiAyNCAqIDYwICogNjAgKiAxMDAwKS50b0lTT1N0cmluZygpKTtcclxuXHJcbiAgICBjb25zdCBjYXRlZ29yeUNvdW50cyA9IGNhdGVnb3J5U3RhdHM/LnJlZHVjZSgoYWNjLCBpdGVtKSA9PiB7XHJcbiAgICAgIGFjY1tpdGVtLmNhdGVnb3J5XSA9IChhY2NbaXRlbS5jYXRlZ29yeV0gfHwgMCkgKyAxO1xyXG4gICAgICByZXR1cm4gYWNjO1xyXG4gICAgfSwge30gYXMgUmVjb3JkPHN0cmluZywgbnVtYmVyPikgfHwge307XHJcblxyXG4gICAgLy8gQWN0aXZpZGFkIHBvciBkw61hICjDumx0aW1vcyA3IGTDrWFzKVxyXG4gICAgY29uc3Qgc2V2ZW5EYXlzQWdvID0gbmV3IERhdGUoRGF0ZS5ub3coKSAtIDcgKiAyNCAqIDYwICogNjAgKiAxMDAwKS50b0lTT1N0cmluZygpO1xyXG4gICAgY29uc3QgeyBkYXRhOiBkYWlseUFjdGl2aXR5IH0gPSBhd2FpdCBzdXBhYmFzZUFkbWluXHJcbiAgICAgIC5mcm9tKCd1c2VyX2FjdGl2aXR5JylcclxuICAgICAgLnNlbGVjdCgnY3JlYXRlZF9hdCcpXHJcbiAgICAgIC5lcSgndXNlcl9pZCcsIHVzZXJJZClcclxuICAgICAgLmd0ZSgnY3JlYXRlZF9hdCcsIHNldmVuRGF5c0Fnbyk7XHJcblxyXG4gICAgY29uc3QgZGFpbHlDb3VudHMgPSBkYWlseUFjdGl2aXR5Py5yZWR1Y2UoKGFjYywgaXRlbSkgPT4ge1xyXG4gICAgICBjb25zdCBkYXRlID0gbmV3IERhdGUoaXRlbS5jcmVhdGVkX2F0KS50b0lTT1N0cmluZygpLnNwbGl0KCdUJylbMF07XHJcbiAgICAgIGFjY1tkYXRlXSA9IChhY2NbZGF0ZV0gfHwgMCkgKyAxO1xyXG4gICAgICByZXR1cm4gYWNjO1xyXG4gICAgfSwge30gYXMgUmVjb3JkPHN0cmluZywgbnVtYmVyPikgfHwge307XHJcblxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgYnlDYXRlZ29yeTogY2F0ZWdvcnlDb3VudHMsXHJcbiAgICAgIGJ5RGF5OiBkYWlseUNvdW50cyxcclxuICAgICAgdG90YWxBY3Rpdml0aWVzOiBjYXRlZ29yeVN0YXRzPy5sZW5ndGggfHwgMCxcclxuICAgIH07XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGFsIG9idGVuZXIgZXN0YWTDrXN0aWNhczonLCBlcnJvcik7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBieUNhdGVnb3J5OiB7fSxcclxuICAgICAgYnlEYXk6IHt9LFxyXG4gICAgICB0b3RhbEFjdGl2aXRpZXM6IDAsXHJcbiAgICB9O1xyXG4gIH1cclxufVxyXG5cclxuLy8gRnVuY2nDs24gYXV4aWxpYXIgcGFyYSBvYnRlbmVyIElQIGRlbCBjbGllbnRlXHJcbmZ1bmN0aW9uIGdldENsaWVudElQKHJlcXVlc3Q6IE5leHRSZXF1ZXN0KTogc3RyaW5nIHtcclxuICBjb25zdCBmb3J3YXJkZWQgPSByZXF1ZXN0LmhlYWRlcnMuZ2V0KCd4LWZvcndhcmRlZC1mb3InKTtcclxuICBjb25zdCByZWFsSVAgPSByZXF1ZXN0LmhlYWRlcnMuZ2V0KCd4LXJlYWwtaXAnKTtcclxuICBcclxuICBpZiAoZm9yd2FyZGVkKSB7XHJcbiAgICByZXR1cm4gZm9yd2FyZGVkLnNwbGl0KCcsJylbMF0udHJpbSgpO1xyXG4gIH1cclxuICBcclxuICBpZiAocmVhbElQKSB7XHJcbiAgICByZXR1cm4gcmVhbElQO1xyXG4gIH1cclxuICBcclxuICByZXR1cm4gcmVxdWVzdC5pcCB8fCAndW5rbm93bic7XHJcbn1cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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