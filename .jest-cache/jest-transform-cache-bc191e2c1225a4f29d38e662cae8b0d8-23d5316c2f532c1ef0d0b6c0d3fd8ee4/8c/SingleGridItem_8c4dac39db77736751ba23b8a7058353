07b5ecd824294dfbad3311b6fe26d3da
'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_default(require("react"));
const _quickViewslice = require("../../redux/features/quickView-slice");
const _cartslice = require("../../redux/features/cart-slice");
const _wishlistslice = require("../../redux/features/wishlist-slice");
const _reactredux = require("react-redux");
const _productcardcommercial = require("../ui/product-card-commercial");
const _productAdapter = require("../../lib/adapters/productAdapter");
const _useCartWithBackend = require("../../hooks/useCartWithBackend");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
const SingleGridItem = ({ item })=>{
    const dispatch = (0, _reactredux.useDispatch)();
    // Hook para carrito con backend
    const { addItem, loading } = (0, _useCartWithBackend.useCartWithBackend)();
    // update the QuickView state
    const handleQuickViewUpdate = ()=>{
        dispatch((0, _quickViewslice.updateQuickView)({
            ...item
        }));
    };
    // add to cart - Conectado con backend
    const handleAddToCart = async ()=>{
        // Intentar agregar al backend primero
        const success = await addItem(item.id, 1);
        if (success) {
            // Si el backend funciona, también actualizar Redux para compatibilidad
            dispatch((0, _cartslice.addItemToCart)({
                ...item,
                quantity: 1
            }));
        } else {
            // Si falla el backend, solo usar Redux (fallback)
            dispatch((0, _cartslice.addItemToCart)({
                ...item,
                quantity: 1
            }));
        }
    };
    const handleItemToWishList = ()=>{
        dispatch((0, _wishlistslice.addItemToWishlist)({
            ...item,
            status: 'available',
            quantity: 1
        }));
    };
    // Calcular características del producto usando el adaptador
    const features = (0, _productAdapter.calculateProductFeatures)(item);
    // FIX DIRECTO: Limpiar "Poxipol" del título si está presente
    let cleanTitle = item.name || item.title;
    if (cleanTitle && cleanTitle.includes('Poximix') && cleanTitle.includes('Poxipol')) {
        cleanTitle = cleanTitle.replace(/\s*Poxipol\s*$/, '').trim();
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_productcardcommercial.CommercialProductCard, {
        className: "bg-white",
        image: item.images?.previews?.[0] || item.imgs?.previews?.[0] || '/images/products/placeholder.svg',
        title: cleanTitle,
        brand: item.brand,
        price: features.discount ? Math.round(item.price * (1 - features.discount / 100)) : features.currentPrice,
        originalPrice: features.discount ? item.price : undefined,
        discount: features.discount ? `${features.discount}%` : undefined,
        isNew: features.isNew,
        stock: features.stock,
        productId: item.id,
        cta: "Agregar al carrito",
        onAddToCart: handleAddToCart,
        showCartAnimation: true,
        // Información de cuotas automática
        installments: features.currentPrice >= 5000 ? {
            quantity: 3,
            amount: Math.round(features.currentPrice / 3),
            interestFree: true
        } : undefined,
        // Envío gratis automático para productos >= $15000
        freeShipping: features.freeShipping || features.currentPrice >= 15000,
        shippingText: features.freeShipping ? 'Envío gratis' : features.fastShipping ? 'Envío rápido' : undefined
    });
};
const _default = SingleGridItem;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbWFydGlcXERlc2t0b3BcXERFU0FSUk9MTE9TV1xcQk9JTEVSUExBVFRFIEUtQ09NTUVSQ0VcXHNyY1xcY29tcG9uZW50c1xcU2hvcFxcU2luZ2xlR3JpZEl0ZW0udHN4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50J1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgUHJvZHVjdCB9IGZyb20gJ0AvdHlwZXMvcHJvZHVjdCdcbmltcG9ydCB7IHVwZGF0ZVF1aWNrVmlldyB9IGZyb20gJ0AvcmVkdXgvZmVhdHVyZXMvcXVpY2tWaWV3LXNsaWNlJ1xuaW1wb3J0IHsgYWRkSXRlbVRvQ2FydCB9IGZyb20gJ0AvcmVkdXgvZmVhdHVyZXMvY2FydC1zbGljZSdcbmltcG9ydCB7IGFkZEl0ZW1Ub1dpc2hsaXN0IH0gZnJvbSAnQC9yZWR1eC9mZWF0dXJlcy93aXNobGlzdC1zbGljZSdcbmltcG9ydCB7IHVzZURpc3BhdGNoIH0gZnJvbSAncmVhY3QtcmVkdXgnXG5pbXBvcnQgeyBBcHBEaXNwYXRjaCB9IGZyb20gJ0AvcmVkdXgvc3RvcmUnXG5pbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnXG5pbXBvcnQgSW1hZ2UgZnJvbSAnbmV4dC9pbWFnZSdcbmltcG9ydCB7IENvbW1lcmNpYWxQcm9kdWN0Q2FyZCB9IGZyb20gJ0AvY29tcG9uZW50cy91aS9wcm9kdWN0LWNhcmQtY29tbWVyY2lhbCdcbmltcG9ydCB7IEV4dGVuZGVkUHJvZHVjdCwgY2FsY3VsYXRlUHJvZHVjdEZlYXR1cmVzIH0gZnJvbSAnQC9saWIvYWRhcHRlcnMvcHJvZHVjdEFkYXB0ZXInXG5pbXBvcnQgeyB1c2VDYXJ0V2l0aEJhY2tlbmQgfSBmcm9tICdAL2hvb2tzL3VzZUNhcnRXaXRoQmFja2VuZCdcbmltcG9ydCB7IHVzZUNhcnRBY3Rpb25zIH0gZnJvbSAnQC9ob29rcy91c2VDYXJ0QWN0aW9ucydcbmltcG9ydCB7IHVzZUFuYWx5dGljcyB9IGZyb20gJ0AvaG9va3MvdXNlQW5hbHl0aWNzJ1xuaW1wb3J0IHsgQmFkZ2UgfSBmcm9tICdAL2NvbXBvbmVudHMvdWkvYmFkZ2UnXG5pbXBvcnQgeyBCdXR0b24gfSBmcm9tICdAL2NvbXBvbmVudHMvdWkvYnV0dG9uJ1xuaW1wb3J0IHsgU2hvcHBpbmdDYXJ0LCBFeWUgfSBmcm9tICdsdWNpZGUtcmVhY3QnXG5cbmNvbnN0IFNpbmdsZUdyaWRJdGVtID0gKHsgaXRlbSB9OiB7IGl0ZW06IEV4dGVuZGVkUHJvZHVjdCB9KSA9PiB7XG4gIGNvbnN0IGRpc3BhdGNoID0gdXNlRGlzcGF0Y2g8QXBwRGlzcGF0Y2g+KClcblxuICAvLyBIb29rIHBhcmEgY2Fycml0byBjb24gYmFja2VuZFxuICBjb25zdCB7IGFkZEl0ZW0sIGxvYWRpbmcgfSA9IHVzZUNhcnRXaXRoQmFja2VuZCgpXG5cbiAgLy8gdXBkYXRlIHRoZSBRdWlja1ZpZXcgc3RhdGVcbiAgY29uc3QgaGFuZGxlUXVpY2tWaWV3VXBkYXRlID0gKCkgPT4ge1xuICAgIGRpc3BhdGNoKHVwZGF0ZVF1aWNrVmlldyh7IC4uLml0ZW0gfSkpXG4gIH1cblxuICAvLyBhZGQgdG8gY2FydCAtIENvbmVjdGFkbyBjb24gYmFja2VuZFxuICBjb25zdCBoYW5kbGVBZGRUb0NhcnQgPSBhc3luYyAoKSA9PiB7XG4gICAgLy8gSW50ZW50YXIgYWdyZWdhciBhbCBiYWNrZW5kIHByaW1lcm9cbiAgICBjb25zdCBzdWNjZXNzID0gYXdhaXQgYWRkSXRlbShpdGVtLmlkLCAxKVxuXG4gICAgaWYgKHN1Y2Nlc3MpIHtcbiAgICAgIC8vIFNpIGVsIGJhY2tlbmQgZnVuY2lvbmEsIHRhbWJpw6luIGFjdHVhbGl6YXIgUmVkdXggcGFyYSBjb21wYXRpYmlsaWRhZFxuICAgICAgZGlzcGF0Y2goXG4gICAgICAgIGFkZEl0ZW1Ub0NhcnQoe1xuICAgICAgICAgIC4uLml0ZW0sXG4gICAgICAgICAgcXVhbnRpdHk6IDEsXG4gICAgICAgIH0pXG4gICAgICApXG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIFNpIGZhbGxhIGVsIGJhY2tlbmQsIHNvbG8gdXNhciBSZWR1eCAoZmFsbGJhY2spXG4gICAgICBkaXNwYXRjaChcbiAgICAgICAgYWRkSXRlbVRvQ2FydCh7XG4gICAgICAgICAgLi4uaXRlbSxcbiAgICAgICAgICBxdWFudGl0eTogMSxcbiAgICAgICAgfSlcbiAgICAgIClcbiAgICB9XG4gIH1cblxuICBjb25zdCBoYW5kbGVJdGVtVG9XaXNoTGlzdCA9ICgpID0+IHtcbiAgICBkaXNwYXRjaChcbiAgICAgIGFkZEl0ZW1Ub1dpc2hsaXN0KHtcbiAgICAgICAgLi4uaXRlbSxcbiAgICAgICAgc3RhdHVzOiAnYXZhaWxhYmxlJyxcbiAgICAgICAgcXVhbnRpdHk6IDEsXG4gICAgICB9KVxuICAgIClcbiAgfVxuXG4gIC8vIENhbGN1bGFyIGNhcmFjdGVyw61zdGljYXMgZGVsIHByb2R1Y3RvIHVzYW5kbyBlbCBhZGFwdGFkb3JcbiAgY29uc3QgZmVhdHVyZXMgPSBjYWxjdWxhdGVQcm9kdWN0RmVhdHVyZXMoaXRlbSlcblxuICAvLyBGSVggRElSRUNUTzogTGltcGlhciBcIlBveGlwb2xcIiBkZWwgdMOtdHVsbyBzaSBlc3TDoSBwcmVzZW50ZVxuICBsZXQgY2xlYW5UaXRsZSA9IGl0ZW0ubmFtZSB8fCBpdGVtLnRpdGxlXG4gIGlmIChjbGVhblRpdGxlICYmIGNsZWFuVGl0bGUuaW5jbHVkZXMoJ1BveGltaXgnKSAmJiBjbGVhblRpdGxlLmluY2x1ZGVzKCdQb3hpcG9sJykpIHtcbiAgICBjbGVhblRpdGxlID0gY2xlYW5UaXRsZS5yZXBsYWNlKC9cXHMqUG94aXBvbFxccyokLywgJycpLnRyaW0oKVxuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8Q29tbWVyY2lhbFByb2R1Y3RDYXJkXG4gICAgICBjbGFzc05hbWU9J2JnLXdoaXRlJyAvLyBGb3J6YXIgZm9uZG8gYmxhbmNvXG4gICAgICBpbWFnZT17XG4gICAgICAgIGl0ZW0uaW1hZ2VzPy5wcmV2aWV3cz8uWzBdIHx8IGl0ZW0uaW1ncz8ucHJldmlld3M/LlswXSB8fCAnL2ltYWdlcy9wcm9kdWN0cy9wbGFjZWhvbGRlci5zdmcnXG4gICAgICB9XG4gICAgICB0aXRsZT17Y2xlYW5UaXRsZX1cbiAgICAgIGJyYW5kPXtpdGVtLmJyYW5kfVxuICAgICAgcHJpY2U9e1xuICAgICAgICBmZWF0dXJlcy5kaXNjb3VudFxuICAgICAgICAgID8gTWF0aC5yb3VuZChpdGVtLnByaWNlICogKDEgLSBmZWF0dXJlcy5kaXNjb3VudCAvIDEwMCkpXG4gICAgICAgICAgOiBmZWF0dXJlcy5jdXJyZW50UHJpY2VcbiAgICAgIH1cbiAgICAgIG9yaWdpbmFsUHJpY2U9e2ZlYXR1cmVzLmRpc2NvdW50ID8gaXRlbS5wcmljZSA6IHVuZGVmaW5lZH1cbiAgICAgIGRpc2NvdW50PXtmZWF0dXJlcy5kaXNjb3VudCA/IGAke2ZlYXR1cmVzLmRpc2NvdW50fSVgIDogdW5kZWZpbmVkfVxuICAgICAgaXNOZXc9e2ZlYXR1cmVzLmlzTmV3fVxuICAgICAgc3RvY2s9e2ZlYXR1cmVzLnN0b2NrfVxuICAgICAgcHJvZHVjdElkPXtpdGVtLmlkfVxuICAgICAgY3RhPSdBZ3JlZ2FyIGFsIGNhcnJpdG8nXG4gICAgICBvbkFkZFRvQ2FydD17aGFuZGxlQWRkVG9DYXJ0fVxuICAgICAgc2hvd0NhcnRBbmltYXRpb249e3RydWV9XG4gICAgICAvLyBJbmZvcm1hY2nDs24gZGUgY3VvdGFzIGF1dG9tw6F0aWNhXG4gICAgICBpbnN0YWxsbWVudHM9e1xuICAgICAgICBmZWF0dXJlcy5jdXJyZW50UHJpY2UgPj0gNTAwMFxuICAgICAgICAgID8ge1xuICAgICAgICAgICAgICBxdWFudGl0eTogMyxcbiAgICAgICAgICAgICAgYW1vdW50OiBNYXRoLnJvdW5kKGZlYXR1cmVzLmN1cnJlbnRQcmljZSAvIDMpLFxuICAgICAgICAgICAgICBpbnRlcmVzdEZyZWU6IHRydWUsXG4gICAgICAgICAgICB9XG4gICAgICAgICAgOiB1bmRlZmluZWRcbiAgICAgIH1cbiAgICAgIC8vIEVudsOtbyBncmF0aXMgYXV0b23DoXRpY28gcGFyYSBwcm9kdWN0b3MgPj0gJDE1MDAwXG4gICAgICBmcmVlU2hpcHBpbmc9e2ZlYXR1cmVzLmZyZWVTaGlwcGluZyB8fCBmZWF0dXJlcy5jdXJyZW50UHJpY2UgPj0gMTUwMDB9XG4gICAgICBzaGlwcGluZ1RleHQ9e1xuICAgICAgICBmZWF0dXJlcy5mcmVlU2hpcHBpbmcgPyAnRW52w61vIGdyYXRpcycgOiBmZWF0dXJlcy5mYXN0U2hpcHBpbmcgPyAnRW52w61vIHLDoXBpZG8nIDogdW5kZWZpbmVkXG4gICAgICB9XG4gICAgLz5cbiAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBTaW5nbGVHcmlkSXRlbVxuIl0sIm5hbWVzIjpbIlNpbmdsZUdyaWRJdGVtIiwiaXRlbSIsImRpc3BhdGNoIiwidXNlRGlzcGF0Y2giLCJhZGRJdGVtIiwibG9hZGluZyIsInVzZUNhcnRXaXRoQmFja2VuZCIsImhhbmRsZVF1aWNrVmlld1VwZGF0ZSIsInVwZGF0ZVF1aWNrVmlldyIsImhhbmRsZUFkZFRvQ2FydCIsInN1Y2Nlc3MiLCJpZCIsImFkZEl0ZW1Ub0NhcnQiLCJxdWFudGl0eSIsImhhbmRsZUl0ZW1Ub1dpc2hMaXN0IiwiYWRkSXRlbVRvV2lzaGxpc3QiLCJzdGF0dXMiLCJmZWF0dXJlcyIsImNhbGN1bGF0ZVByb2R1Y3RGZWF0dXJlcyIsImNsZWFuVGl0bGUiLCJuYW1lIiwidGl0bGUiLCJpbmNsdWRlcyIsInJlcGxhY2UiLCJ0cmltIiwiQ29tbWVyY2lhbFByb2R1Y3RDYXJkIiwiY2xhc3NOYW1lIiwiaW1hZ2UiLCJpbWFnZXMiLCJwcmV2aWV3cyIsImltZ3MiLCJicmFuZCIsInByaWNlIiwiZGlzY291bnQiLCJNYXRoIiwicm91bmQiLCJjdXJyZW50UHJpY2UiLCJvcmlnaW5hbFByaWNlIiwidW5kZWZpbmVkIiwiaXNOZXciLCJzdG9jayIsInByb2R1Y3RJZCIsImN0YSIsIm9uQWRkVG9DYXJ0Iiwic2hvd0NhcnRBbmltYXRpb24iLCJpbnN0YWxsbWVudHMiLCJhbW91bnQiLCJpbnRlcmVzdEZyZWUiLCJmcmVlU2hpcHBpbmciLCJzaGlwcGluZ1RleHQiLCJmYXN0U2hpcHBpbmciXSwibWFwcGluZ3MiOiJBQUFBOzs7OzsrQkFpSEE7OztlQUFBOzs7OzhEQWhIa0I7Z0NBRWM7MkJBQ0Y7K0JBQ0k7NEJBQ047dUNBSVU7Z0NBQ29CO29DQUN2Qjs7Ozs7O0FBT25DLE1BQU1BLGlCQUFpQixDQUFDLEVBQUVDLElBQUksRUFBNkI7SUFDekQsTUFBTUMsV0FBV0MsSUFBQUEsdUJBQVc7SUFFNUIsZ0NBQWdDO0lBQ2hDLE1BQU0sRUFBRUMsT0FBTyxFQUFFQyxPQUFPLEVBQUUsR0FBR0MsSUFBQUEsc0NBQWtCO0lBRS9DLDZCQUE2QjtJQUM3QixNQUFNQyx3QkFBd0I7UUFDNUJMLFNBQVNNLElBQUFBLCtCQUFlLEVBQUM7WUFBRSxHQUFHUCxJQUFJO1FBQUM7SUFDckM7SUFFQSxzQ0FBc0M7SUFDdEMsTUFBTVEsa0JBQWtCO1FBQ3RCLHNDQUFzQztRQUN0QyxNQUFNQyxVQUFVLE1BQU1OLFFBQVFILEtBQUtVLEVBQUUsRUFBRTtRQUV2QyxJQUFJRCxTQUFTO1lBQ1gsdUVBQXVFO1lBQ3ZFUixTQUNFVSxJQUFBQSx3QkFBYSxFQUFDO2dCQUNaLEdBQUdYLElBQUk7Z0JBQ1BZLFVBQVU7WUFDWjtRQUVKLE9BQU87WUFDTCxrREFBa0Q7WUFDbERYLFNBQ0VVLElBQUFBLHdCQUFhLEVBQUM7Z0JBQ1osR0FBR1gsSUFBSTtnQkFDUFksVUFBVTtZQUNaO1FBRUo7SUFDRjtJQUVBLE1BQU1DLHVCQUF1QjtRQUMzQlosU0FDRWEsSUFBQUEsZ0NBQWlCLEVBQUM7WUFDaEIsR0FBR2QsSUFBSTtZQUNQZSxRQUFRO1lBQ1JILFVBQVU7UUFDWjtJQUVKO0lBRUEsNERBQTREO0lBQzVELE1BQU1JLFdBQVdDLElBQUFBLHdDQUF3QixFQUFDakI7SUFFMUMsNkRBQTZEO0lBQzdELElBQUlrQixhQUFhbEIsS0FBS21CLElBQUksSUFBSW5CLEtBQUtvQixLQUFLO0lBQ3hDLElBQUlGLGNBQWNBLFdBQVdHLFFBQVEsQ0FBQyxjQUFjSCxXQUFXRyxRQUFRLENBQUMsWUFBWTtRQUNsRkgsYUFBYUEsV0FBV0ksT0FBTyxDQUFDLGtCQUFrQixJQUFJQyxJQUFJO0lBQzVEO0lBRUEscUJBQ0UscUJBQUNDLDRDQUFxQjtRQUNwQkMsV0FBVTtRQUNWQyxPQUNFMUIsS0FBSzJCLE1BQU0sRUFBRUMsVUFBVSxDQUFDLEVBQUUsSUFBSTVCLEtBQUs2QixJQUFJLEVBQUVELFVBQVUsQ0FBQyxFQUFFLElBQUk7UUFFNURSLE9BQU9GO1FBQ1BZLE9BQU85QixLQUFLOEIsS0FBSztRQUNqQkMsT0FDRWYsU0FBU2dCLFFBQVEsR0FDYkMsS0FBS0MsS0FBSyxDQUFDbEMsS0FBSytCLEtBQUssR0FBSSxDQUFBLElBQUlmLFNBQVNnQixRQUFRLEdBQUcsR0FBRSxLQUNuRGhCLFNBQVNtQixZQUFZO1FBRTNCQyxlQUFlcEIsU0FBU2dCLFFBQVEsR0FBR2hDLEtBQUsrQixLQUFLLEdBQUdNO1FBQ2hETCxVQUFVaEIsU0FBU2dCLFFBQVEsR0FBRyxHQUFHaEIsU0FBU2dCLFFBQVEsQ0FBQyxDQUFDLENBQUMsR0FBR0s7UUFDeERDLE9BQU90QixTQUFTc0IsS0FBSztRQUNyQkMsT0FBT3ZCLFNBQVN1QixLQUFLO1FBQ3JCQyxXQUFXeEMsS0FBS1UsRUFBRTtRQUNsQitCLEtBQUk7UUFDSkMsYUFBYWxDO1FBQ2JtQyxtQkFBbUI7UUFDbkIsbUNBQW1DO1FBQ25DQyxjQUNFNUIsU0FBU21CLFlBQVksSUFBSSxPQUNyQjtZQUNFdkIsVUFBVTtZQUNWaUMsUUFBUVosS0FBS0MsS0FBSyxDQUFDbEIsU0FBU21CLFlBQVksR0FBRztZQUMzQ1csY0FBYztRQUNoQixJQUNBVDtRQUVOLG1EQUFtRDtRQUNuRFUsY0FBYy9CLFNBQVMrQixZQUFZLElBQUkvQixTQUFTbUIsWUFBWSxJQUFJO1FBQ2hFYSxjQUNFaEMsU0FBUytCLFlBQVksR0FBRyxpQkFBaUIvQixTQUFTaUMsWUFBWSxHQUFHLGlCQUFpQlo7O0FBSTFGO01BRUEsV0FBZXRDIn0=