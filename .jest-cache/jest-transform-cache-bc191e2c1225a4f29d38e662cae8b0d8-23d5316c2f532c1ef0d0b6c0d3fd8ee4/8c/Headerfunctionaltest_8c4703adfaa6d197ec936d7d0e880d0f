e972311226d1758fb30941ef72988692
/**
 * Header Functional Test Ultra-Simplificado
 * Sin dependencias complejas - Solo funcionalidad básica
 */ "use strict";
// Mock completo del Header para evitar dependencias
jest.mock('../index', ()=>{
    return function MockHeader() {
        const [searchValue, setSearchValue] = _react.default.useState('');
        const [isCartOpen, setIsCartOpen] = _react.default.useState(false);
        return /*#__PURE__*/ (0, _jsxruntime.jsxs)("header", {
            role: "banner",
            "data-testid": "header",
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                    "data-testid": "header-logo",
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)("img", {
                        alt: "Pinteya",
                        src: "/logo.svg"
                    })
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    "data-testid": "search-section",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                            role: "searchbox",
                            "aria-label": "Buscar productos",
                            value: searchValue,
                            onChange: (e)=>setSearchValue(e.target.value),
                            placeholder: "Buscar productos..."
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                            onClick: ()=>setSearchValue(''),
                            children: "Limpiar"
                        })
                    ]
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                    "data-testid": "auth-section",
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                        children: "Iniciar Sesi\xf3n"
                    })
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    "data-testid": "cart-section",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                            "data-testid": "cart-button",
                            onClick: ()=>setIsCartOpen(!isCartOpen),
                            children: "Carrito (0)"
                        }),
                        isCartOpen && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            "data-testid": "cart-modal",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                    children: "Carrito vac\xedo"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                    onClick: ()=>setIsCartOpen(false),
                                    children: "Cerrar"
                                })
                            ]
                        })
                    ]
                })
            ]
        });
    };
});
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_default(require("react"));
const _react1 = require("@testing-library/react");
const _index = /*#__PURE__*/ _interop_require_default(require("../index"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
describe('Header Functional - Ultra-Simplified Tests', ()=>{
    beforeEach(()=>{
        jest.clearAllMocks();
    });
    describe('Renderizado Básico', ()=>{
        it('debe renderizar header con todas las secciones', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            expect(_react1.screen.getByRole('banner')).toBeInTheDocument();
            expect(_react1.screen.getByTestId('header-logo')).toBeInTheDocument();
            expect(_react1.screen.getByTestId('search-section')).toBeInTheDocument();
            expect(_react1.screen.getByTestId('auth-section')).toBeInTheDocument();
            expect(_react1.screen.getByTestId('cart-section')).toBeInTheDocument();
        });
        it('debe tener estructura semántica correcta', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const header = _react1.screen.getByRole('banner');
            const searchInput = _react1.screen.getByRole('searchbox');
            const buttons = _react1.screen.getAllByRole('button');
            expect(header).toBeInTheDocument();
            expect(searchInput).toBeInTheDocument();
            expect(buttons.length).toBeGreaterThan(0);
        });
    });
    describe('Funcionalidad de Búsqueda', ()=>{
        it('debe permitir escribir en el campo de búsqueda', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const searchInput = _react1.screen.getByRole('searchbox');
            _react1.fireEvent.change(searchInput, {
                target: {
                    value: 'pintura'
                }
            });
            expect(searchInput.value).toBe('pintura');
        });
        it('debe limpiar el campo de búsqueda', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const searchInput = _react1.screen.getByRole('searchbox');
            const clearButton = _react1.screen.getByText('Limpiar');
            _react1.fireEvent.change(searchInput, {
                target: {
                    value: 'test'
                }
            });
            expect(searchInput.value).toBe('test');
            _react1.fireEvent.click(clearButton);
            expect(searchInput.value).toBe('');
        });
        it('debe tener placeholder descriptivo', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const searchInput = _react1.screen.getByRole('searchbox');
            expect(searchInput).toHaveAttribute('placeholder', 'Buscar productos...');
        });
        it('debe tener aria-label para accesibilidad', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const searchInput = _react1.screen.getByRole('searchbox');
            expect(searchInput).toHaveAttribute('aria-label', 'Buscar productos');
        });
    });
    describe('Funcionalidad del Carrito', ()=>{
        it('debe mostrar botón del carrito', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const cartButton = _react1.screen.getByTestId('cart-button');
            expect(cartButton).toBeInTheDocument();
            expect(cartButton).toHaveTextContent('Carrito (0)');
        });
        it('debe abrir modal del carrito al hacer click', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const cartButton = _react1.screen.getByTestId('cart-button');
            // Modal no debe estar visible inicialmente
            expect(_react1.screen.queryByTestId('cart-modal')).not.toBeInTheDocument();
            // Click para abrir
            _react1.fireEvent.click(cartButton);
            expect(_react1.screen.getByTestId('cart-modal')).toBeInTheDocument();
        });
        it('debe cerrar modal del carrito', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const cartButton = _react1.screen.getByTestId('cart-button');
            // Abrir modal
            _react1.fireEvent.click(cartButton);
            expect(_react1.screen.getByTestId('cart-modal')).toBeInTheDocument();
            // Cerrar modal
            const closeButton = _react1.screen.getByText('Cerrar');
            _react1.fireEvent.click(closeButton);
            expect(_react1.screen.queryByTestId('cart-modal')).not.toBeInTheDocument();
        });
        it('debe mostrar contenido del carrito vacío', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const cartButton = _react1.screen.getByTestId('cart-button');
            _react1.fireEvent.click(cartButton);
            const cartModal = _react1.screen.getByTestId('cart-modal');
            expect(cartModal).toHaveTextContent('Carrito vacío');
        });
    });
    describe('Funcionalidad de Autenticación', ()=>{
        it('debe mostrar botón de iniciar sesión', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const loginButton = _react1.screen.getByText('Iniciar Sesión');
            expect(loginButton).toBeInTheDocument();
        });
        it('debe ser clickeable el botón de login', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const loginButton = _react1.screen.getByText('Iniciar Sesión');
            _react1.fireEvent.click(loginButton);
            // No debe lanzar errores
            expect(loginButton).toBeInTheDocument();
        });
    });
    describe('Interacciones del Usuario', ()=>{
        it('debe manejar múltiples interacciones', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const searchInput = _react1.screen.getByRole('searchbox');
            const cartButton = _react1.screen.getByTestId('cart-button');
            const loginButton = _react1.screen.getByText('Iniciar Sesión');
            // Escribir en búsqueda
            _react1.fireEvent.change(searchInput, {
                target: {
                    value: 'test'
                }
            });
            expect(searchInput.value).toBe('test');
            // Abrir carrito
            _react1.fireEvent.click(cartButton);
            expect(_react1.screen.getByTestId('cart-modal')).toBeInTheDocument();
            // Click en login
            _react1.fireEvent.click(loginButton);
            // Todo debe seguir funcionando
            expect(searchInput.value).toBe('test');
            expect(_react1.screen.getByTestId('cart-modal')).toBeInTheDocument();
        });
        it('debe mantener estado independiente entre componentes', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const searchInput = _react1.screen.getByRole('searchbox');
            const cartButton = _react1.screen.getByTestId('cart-button');
            // Cambiar búsqueda no debe afectar carrito
            _react1.fireEvent.change(searchInput, {
                target: {
                    value: 'pintura'
                }
            });
            _react1.fireEvent.click(cartButton);
            expect(searchInput.value).toBe('pintura');
            expect(_react1.screen.getByTestId('cart-modal')).toBeInTheDocument();
            // Cerrar carrito no debe afectar búsqueda
            const closeButton = _react1.screen.getByText('Cerrar');
            _react1.fireEvent.click(closeButton);
            expect(searchInput.value).toBe('pintura');
            expect(_react1.screen.queryByTestId('cart-modal')).not.toBeInTheDocument();
        });
    });
    describe('Accesibilidad', ()=>{
        it('debe tener elementos focusables', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const searchInput = _react1.screen.getByRole('searchbox');
            const buttons = _react1.screen.getAllByRole('button');
            // Verificar que se pueden enfocar
            searchInput.focus();
            expect(document.activeElement).toBe(searchInput);
            if (buttons.length > 0) {
                buttons[0].focus();
                expect(document.activeElement).toBe(buttons[0]);
            }
        });
        it('debe tener roles ARIA correctos', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            expect(_react1.screen.getByRole('banner')).toBeInTheDocument();
            expect(_react1.screen.getByRole('searchbox')).toBeInTheDocument();
            const buttons = _react1.screen.getAllByRole('button');
            expect(buttons.length).toBeGreaterThan(0);
        });
        it('debe tener labels descriptivos', ()=>{
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const searchInput = _react1.screen.getByRole('searchbox');
            expect(searchInput).toHaveAttribute('aria-label');
            const logoImg = _react1.screen.getByAltText('Pinteya');
            expect(logoImg).toBeInTheDocument();
        });
    });
    describe('Responsive Behavior', ()=>{
        it('debe renderizar en diferentes tamaños de pantalla', ()=>{
            // Simular móvil
            Object.defineProperty(window, 'innerWidth', {
                writable: true,
                configurable: true,
                value: 375
            });
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            expect(_react1.screen.getByRole('banner')).toBeInTheDocument();
            expect(_react1.screen.getByRole('searchbox')).toBeInTheDocument();
            // Simular desktop
            Object.defineProperty(window, 'innerWidth', {
                writable: true,
                configurable: true,
                value: 1200
            });
            expect(_react1.screen.getByRole('banner')).toBeInTheDocument();
        });
    });
    describe('Performance', ()=>{
        it('debe renderizar rápidamente', ()=>{
            const startTime = performance.now();
            (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_index.default, {}));
            const endTime = performance.now();
            const renderTime = endTime - startTime;
            // Verificar que renderiza en tiempo razonable
            expect(renderTime).toBeLessThan(100);
            expect(_react1.screen.getByRole('banner')).toBeInTheDocument();
        });
    });
});

//# sourceMappingURL=data:application/json;base64,