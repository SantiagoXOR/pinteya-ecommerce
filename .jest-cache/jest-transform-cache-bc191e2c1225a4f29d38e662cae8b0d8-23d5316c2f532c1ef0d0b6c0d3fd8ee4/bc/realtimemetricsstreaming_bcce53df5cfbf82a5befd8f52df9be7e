3daeb7c13fcd4ccb8ad2fa09bdf133ff
// ===================================
// PINTEYA E-COMMERCE - REAL-TIME METRICS STREAMING
// ===================================
"use strict";

/* istanbul ignore next */
function cov_ne5j69el1() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\monitoring\\real-time-metrics-streaming.ts";
  var hash = "81a7511f69d4f2e514d1f08c02b42a679caff6be";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\monitoring\\real-time-metrics-streaming.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "2": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "3": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 27,
          column: 3
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 40
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 31
        }
      },
      "6": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 30
        }
      },
      "7": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 40
        }
      },
      "8": {
        start: {
          line: 28,
          column: 16
        },
        end: {
          line: 28,
          column: 47
        }
      },
      "9": {
        start: {
          line: 29,
          column: 36
        },
        end: {
          line: 29,
          column: 78
        }
      },
      "10": {
        start: {
          line: 30,
          column: 36
        },
        end: {
          line: 38,
          column: 5
        }
      },
      "11": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 31,
          column: 57
        }
      },
      "12": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 32,
          column: 55
        }
      },
      "13": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 33,
          column: 57
        }
      },
      "14": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 34,
          column: 61
        }
      },
      "15": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 35,
          column: 55
        }
      },
      "16": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 47
        }
      },
      "17": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 37,
          column: 27
        }
      },
      "18": {
        start: {
          line: 41,
          column: 27
        },
        end: {
          line: 50,
          column: 1
        }
      },
      "19": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 33
        }
      },
      "20": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 31
        }
      },
      "21": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 64,
          column: 10
        }
      },
      "22": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 35
        }
      },
      "23": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 70,
          column: 9
        }
      },
      "24": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 79
        }
      },
      "25": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 49
        }
      },
      "26": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 84,
          column: 11
        }
      },
      "27": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 83,
          column: 15
        }
      },
      "28": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 30
        }
      },
      "29": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 88,
          column: 28
        }
      },
      "30": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 90,
          column: 37
        }
      },
      "31": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 91,
          column: 103
        }
      },
      "32": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 98,
          column: 9
        }
      },
      "33": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 97,
          column: 75
        }
      },
      "34": {
        start: {
          line: 99,
          column: 23
        },
        end: {
          line: 110,
          column: 9
        }
      },
      "35": {
        start: {
          line: 109,
          column: 28
        },
        end: {
          line: 109,
          column: 66
        }
      },
      "36": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 111,
          column: 50
        }
      },
      "37": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 34
        }
      },
      "38": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 113,
          column: 53
        }
      },
      "39": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 117,
          column: 11
        }
      },
      "40": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 119,
          column: 38
        }
      },
      "41": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 120,
          column: 22
        }
      },
      "42": {
        start: {
          line: 125,
          column: 23
        },
        end: {
          line: 125,
          column: 49
        }
      },
      "43": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 132,
          column: 9
        }
      },
      "44": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 127,
          column: 42
        }
      },
      "45": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 128,
          column: 57
        }
      },
      "46": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 131,
          column: 15
        }
      },
      "47": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 138,
          column: 38
        }
      },
      "48": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 142,
          column: 9
        }
      },
      "49": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 141,
          column: 63
        }
      },
      "50": {
        start: {
          line: 143,
          column: 32
        },
        end: {
          line: 143,
          column: 120
        }
      },
      "51": {
        start: {
          line: 143,
          column: 83
        },
        end: {
          line: 143,
          column: 119
        }
      },
      "52": {
        start: {
          line: 144,
          column: 29
        },
        end: {
          line: 165,
          column: 10
        }
      },
      "53": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 164,
          column: 13
        }
      },
      "54": {
        start: {
          line: 147,
          column: 16
        },
        end: {
          line: 153,
          column: 17
        }
      },
      "55": {
        start: {
          line: 149,
          column: 20
        },
        end: {
          line: 151,
          column: 21
        }
      },
      "56": {
        start: {
          line: 150,
          column: 24
        },
        end: {
          line: 150,
          column: 54
        }
      },
      "57": {
        start: {
          line: 152,
          column: 20
        },
        end: {
          line: 152,
          column: 33
        }
      },
      "58": {
        start: {
          line: 154,
          column: 32
        },
        end: {
          line: 154,
          column: 56
        }
      },
      "59": {
        start: {
          line: 155,
          column: 16
        },
        end: {
          line: 159,
          column: 17
        }
      },
      "60": {
        start: {
          line: 156,
          column: 20
        },
        end: {
          line: 156,
          column: 49
        }
      },
      "61": {
        start: {
          line: 157,
          column: 20
        },
        end: {
          line: 157,
          column: 49
        }
      },
      "62": {
        start: {
          line: 158,
          column: 20
        },
        end: {
          line: 158,
          column: 53
        }
      },
      "63": {
        start: {
          line: 160,
          column: 16
        },
        end: {
          line: 160,
          column: 31
        }
      },
      "64": {
        start: {
          line: 162,
          column: 16
        },
        end: {
          line: 162,
          column: 122
        }
      },
      "65": {
        start: {
          line: 163,
          column: 16
        },
        end: {
          line: 163,
          column: 29
        }
      },
      "66": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 166,
          column: 47
        }
      },
      "67": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 174,
          column: 9
        }
      },
      "68": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 173,
          column: 25
        }
      },
      "69": {
        start: {
          line: 176,
          column: 28
        },
        end: {
          line: 176,
          column: 41
        }
      },
      "70": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 197,
          column: 9
        }
      },
      "71": {
        start: {
          line: 179,
          column: 12
        },
        end: {
          line: 183,
          column: 13
        }
      },
      "72": {
        start: {
          line: 180,
          column: 16
        },
        end: {
          line: 182,
          column: 17
        }
      },
      "73": {
        start: {
          line: 181,
          column: 20
        },
        end: {
          line: 181,
          column: 33
        }
      },
      "74": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 189,
          column: 13
        }
      },
      "75": {
        start: {
          line: 186,
          column: 16
        },
        end: {
          line: 188,
          column: 17
        }
      },
      "76": {
        start: {
          line: 187,
          column: 20
        },
        end: {
          line: 187,
          column: 33
        }
      },
      "77": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 196,
          column: 13
        }
      },
      "78": {
        start: {
          line: 192,
          column: 39
        },
        end: {
          line: 192,
          column: 94
        }
      },
      "79": {
        start: {
          line: 192,
          column: 64
        },
        end: {
          line: 192,
          column: 93
        }
      },
      "80": {
        start: {
          line: 193,
          column: 16
        },
        end: {
          line: 195,
          column: 17
        }
      },
      "81": {
        start: {
          line: 194,
          column: 20
        },
        end: {
          line: 194,
          column: 33
        }
      },
      "82": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 198,
          column: 20
        }
      },
      "83": {
        start: {
          line: 203,
          column: 20
        },
        end: {
          line: 203,
          column: 30
        }
      },
      "84": {
        start: {
          line: 204,
          column: 26
        },
        end: {
          line: 204,
          column: 84
        }
      },
      "85": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 209,
          column: 9
        }
      },
      "86": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 207,
          column: 46
        }
      },
      "87": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 208,
          column: 59
        }
      },
      "88": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 210,
          column: 76
        }
      },
      "89": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 215,
          column: 40
        }
      },
      "90": {
        start: {
          line: 220,
          column: 29
        },
        end: {
          line: 220,
          column: 111
        }
      },
      "91": {
        start: {
          line: 220,
          column: 63
        },
        end: {
          line: 220,
          column: 99
        }
      },
      "92": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 227,
          column: 9
        }
      },
      "93": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 226,
          column: 13
        }
      },
      "94": {
        start: {
          line: 223,
          column: 16
        },
        end: {
          line: 223,
          column: 41
        }
      },
      "95": {
        start: {
          line: 225,
          column: 16
        },
        end: {
          line: 225,
          column: 129
        }
      },
      "96": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 246,
          column: 9
        }
      },
      "97": {
        start: {
          line: 233,
          column: 26
        },
        end: {
          line: 233,
          column: 51
        }
      },
      "98": {
        start: {
          line: 234,
          column: 12
        },
        end: {
          line: 245,
          column: 13
        }
      },
      "99": {
        start: {
          line: 235,
          column: 16
        },
        end: {
          line: 244,
          column: 17
        }
      },
      "100": {
        start: {
          line: 236,
          column: 36
        },
        end: {
          line: 236,
          column: 60
        }
      },
      "101": {
        start: {
          line: 237,
          column: 20
        },
        end: {
          line: 241,
          column: 21
        }
      },
      "102": {
        start: {
          line: 238,
          column: 24
        },
        end: {
          line: 238,
          column: 53
        }
      },
      "103": {
        start: {
          line: 239,
          column: 24
        },
        end: {
          line: 239,
          column: 53
        }
      },
      "104": {
        start: {
          line: 240,
          column: 24
        },
        end: {
          line: 240,
          column: 57
        }
      },
      "105": {
        start: {
          line: 243,
          column: 20
        },
        end: {
          line: 243,
          column: 137
        }
      },
      "106": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 263,
          column: 45
        }
      },
      "107": {
        start: {
          line: 252,
          column: 35
        },
        end: {
          line: 261,
          column: 13
        }
      },
      "108": {
        start: {
          line: 262,
          column: 12
        },
        end: {
          line: 262,
          column: 48
        }
      },
      "109": {
        start: {
          line: 268,
          column: 8
        },
        end: {
          line: 281,
          column: 18
        }
      },
      "110": {
        start: {
          line: 269,
          column: 24
        },
        end: {
          line: 269,
          column: 34
        }
      },
      "111": {
        start: {
          line: 270,
          column: 28
        },
        end: {
          line: 270,
          column: 56
        }
      },
      "112": {
        start: {
          line: 272,
          column: 12
        },
        end: {
          line: 280,
          column: 13
        }
      },
      "113": {
        start: {
          line: 273,
          column: 16
        },
        end: {
          line: 279,
          column: 17
        }
      },
      "114": {
        start: {
          line: 274,
          column: 20
        },
        end: {
          line: 274,
          column: 52
        }
      },
      "115": {
        start: {
          line: 275,
          column: 20
        },
        end: {
          line: 275,
          column: 122
        }
      },
      "116": {
        start: {
          line: 278,
          column: 20
        },
        end: {
          line: 278,
          column: 52
        }
      },
      "117": {
        start: {
          line: 286,
          column: 29
        },
        end: {
          line: 286,
          column: 30
        }
      },
      "118": {
        start: {
          line: 287,
          column: 28
        },
        end: {
          line: 287,
          column: 38
        }
      },
      "119": {
        start: {
          line: 288,
          column: 8
        },
        end: {
          line: 305,
          column: 18
        }
      },
      "120": {
        start: {
          line: 289,
          column: 24
        },
        end: {
          line: 289,
          column: 34
        }
      },
      "121": {
        start: {
          line: 290,
          column: 29
        },
        end: {
          line: 290,
          column: 57
        }
      },
      "122": {
        start: {
          line: 291,
          column: 30
        },
        end: {
          line: 291,
          column: 73
        }
      },
      "123": {
        start: {
          line: 292,
          column: 12
        },
        end: {
          line: 292,
          column: 62
        }
      },
      "124": {
        start: {
          line: 293,
          column: 12
        },
        end: {
          line: 293,
          column: 57
        }
      },
      "125": {
        start: {
          line: 295,
          column: 32
        },
        end: {
          line: 295,
          column: 41
        }
      },
      "126": {
        start: {
          line: 296,
          column: 12
        },
        end: {
          line: 298,
          column: 15
        }
      },
      "127": {
        start: {
          line: 297,
          column: 16
        },
        end: {
          line: 297,
          column: 84
        }
      },
      "128": {
        start: {
          line: 299,
          column: 12
        },
        end: {
          line: 302,
          column: 64
        }
      },
      "129": {
        start: {
          line: 299,
          column: 91
        },
        end: {
          line: 302,
          column: 17
        }
      },
      "130": {
        start: {
          line: 302,
          column: 33
        },
        end: {
          line: 302,
          column: 50
        }
      },
      "131": {
        start: {
          line: 303,
          column: 12
        },
        end: {
          line: 303,
          column: 56
        }
      },
      "132": {
        start: {
          line: 304,
          column: 12
        },
        end: {
          line: 304,
          column: 32
        }
      },
      "133": {
        start: {
          line: 310,
          column: 22
        },
        end: {
          line: 315,
          column: 9
        }
      },
      "134": {
        start: {
          line: 316,
          column: 8
        },
        end: {
          line: 316,
          column: 35
        }
      },
      "135": {
        start: {
          line: 321,
          column: 22
        },
        end: {
          line: 329,
          column: 9
        }
      },
      "136": {
        start: {
          line: 330,
          column: 8
        },
        end: {
          line: 330,
          column: 35
        }
      },
      "137": {
        start: {
          line: 335,
          column: 22
        },
        end: {
          line: 340,
          column: 9
        }
      },
      "138": {
        start: {
          line: 341,
          column: 8
        },
        end: {
          line: 341,
          column: 35
        }
      },
      "139": {
        start: {
          line: 346,
          column: 22
        },
        end: {
          line: 351,
          column: 9
        }
      },
      "140": {
        start: {
          line: 352,
          column: 8
        },
        end: {
          line: 352,
          column: 35
        }
      },
      "141": {
        start: {
          line: 357,
          column: 8
        },
        end: {
          line: 359,
          column: 10
        }
      },
      "142": {
        start: {
          line: 364,
          column: 8
        },
        end: {
          line: 369,
          column: 16
        }
      },
      "143": {
        start: {
          line: 364,
          column: 64
        },
        end: {
          line: 369,
          column: 13
        }
      },
      "144": {
        start: {
          line: 374,
          column: 8
        },
        end: {
          line: 374,
          column: 47
        }
      },
      "145": {
        start: {
          line: 379,
          column: 8
        },
        end: {
          line: 379,
          column: 80
        }
      },
      "146": {
        start: {
          line: 384,
          column: 8
        },
        end: {
          line: 386,
          column: 9
        }
      },
      "147": {
        start: {
          line: 385,
          column: 12
        },
        end: {
          line: 385,
          column: 50
        }
      },
      "148": {
        start: {
          line: 387,
          column: 8
        },
        end: {
          line: 389,
          column: 9
        }
      },
      "149": {
        start: {
          line: 388,
          column: 12
        },
        end: {
          line: 388,
          column: 48
        }
      },
      "150": {
        start: {
          line: 390,
          column: 8
        },
        end: {
          line: 392,
          column: 9
        }
      },
      "151": {
        start: {
          line: 391,
          column: 12
        },
        end: {
          line: 391,
          column: 46
        }
      },
      "152": {
        start: {
          line: 394,
          column: 8
        },
        end: {
          line: 394,
          column: 29
        }
      },
      "153": {
        start: {
          line: 397,
          column: 33
        },
        end: {
          line: 397,
          column: 71
        }
      },
      "154": {
        start: {
          line: 398,
          column: 23
        },
        end: {
          line: 462,
          column: 1
        }
      },
      "155": {
        start: {
          line: 405,
          column: 8
        },
        end: {
          line: 409,
          column: 10
        }
      },
      "156": {
        start: {
          line: 414,
          column: 8
        },
        end: {
          line: 427,
          column: 10
        }
      },
      "157": {
        start: {
          line: 432,
          column: 8
        },
        end: {
          line: 448,
          column: 10
        }
      },
      "158": {
        start: {
          line: 453,
          column: 22
        },
        end: {
          line: 453,
          column: 57
        }
      },
      "159": {
        start: {
          line: 454,
          column: 29
        },
        end: {
          line: 454,
          column: 72
        }
      },
      "160": {
        start: {
          line: 455,
          column: 8
        },
        end: {
          line: 460,
          column: 10
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 16
          }
        },
        loc: {
          start: {
            line: 8,
            column: 30
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 36
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 27
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 26
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 36
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 30,
            column: 36
          },
          end: {
            line: 30,
            column: 37
          }
        },
        loc: {
          start: {
            line: 30,
            column: 62
          },
          end: {
            line: 38,
            column: 1
          }
        },
        line: 30
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        },
        loc: {
          start: {
            line: 52,
            column: 17
          },
          end: {
            line: 66,
            column: 5
          }
        },
        line: 52
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 67,
            column: 4
          },
          end: {
            line: 67,
            column: 5
          }
        },
        loc: {
          start: {
            line: 67,
            column: 25
          },
          end: {
            line: 72,
            column: 5
          }
        },
        line: 67
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 75,
            column: 6
          },
          end: {
            line: 75,
            column: 7
          }
        },
        loc: {
          start: {
            line: 75,
            column: 28
          },
          end: {
            line: 92,
            column: 5
          }
        },
        line: 75
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 77,
            column: 73
          },
          end: {
            line: 77,
            column: 74
          }
        },
        loc: {
          start: {
            line: 77,
            column: 81
          },
          end: {
            line: 84,
            column: 9
          }
        },
        line: 77
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 95,
            column: 6
          },
          end: {
            line: 95,
            column: 7
          }
        },
        loc: {
          start: {
            line: 95,
            column: 43
          },
          end: {
            line: 121,
            column: 5
          }
        },
        line: 95
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 109,
            column: 24
          },
          end: {
            line: 109,
            column: 25
          }
        },
        loc: {
          start: {
            line: 109,
            column: 28
          },
          end: {
            line: 109,
            column: 66
          }
        },
        line: 109
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 124,
            column: 6
          },
          end: {
            line: 124,
            column: 7
          }
        },
        loc: {
          start: {
            line: 124,
            column: 33
          },
          end: {
            line: 133,
            column: 5
          }
        },
        line: 124
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 136,
            column: 6
          },
          end: {
            line: 136,
            column: 7
          }
        },
        loc: {
          start: {
            line: 136,
            column: 34
          },
          end: {
            line: 167,
            column: 5
          }
        },
        line: 136
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 143,
            column: 73
          },
          end: {
            line: 143,
            column: 74
          }
        },
        loc: {
          start: {
            line: 143,
            column: 83
          },
          end: {
            line: 143,
            column: 119
          }
        },
        line: 143
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 144,
            column: 49
          },
          end: {
            line: 144,
            column: 50
          }
        },
        loc: {
          start: {
            line: 144,
            column: 65
          },
          end: {
            line: 165,
            column: 9
          }
        },
        line: 144
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 170,
            column: 6
          },
          end: {
            line: 170,
            column: 7
          }
        },
        loc: {
          start: {
            line: 170,
            column: 38
          },
          end: {
            line: 199,
            column: 5
          }
        },
        line: 170
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 192,
            column: 57
          },
          end: {
            line: 192,
            column: 58
          }
        },
        loc: {
          start: {
            line: 192,
            column: 64
          },
          end: {
            line: 192,
            column: 93
          }
        },
        line: 192
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 202,
            column: 6
          },
          end: {
            line: 202,
            column: 7
          }
        },
        loc: {
          start: {
            line: 202,
            column: 29
          },
          end: {
            line: 211,
            column: 5
          }
        },
        line: 202
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 214,
            column: 6
          },
          end: {
            line: 214,
            column: 7
          }
        },
        loc: {
          start: {
            line: 214,
            column: 30
          },
          end: {
            line: 216,
            column: 5
          }
        },
        line: 214
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 219,
            column: 6
          },
          end: {
            line: 219,
            column: 7
          }
        },
        loc: {
          start: {
            line: 219,
            column: 37
          },
          end: {
            line: 228,
            column: 5
          }
        },
        line: 219
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 220,
            column: 54
          },
          end: {
            line: 220,
            column: 55
          }
        },
        loc: {
          start: {
            line: 220,
            column: 63
          },
          end: {
            line: 220,
            column: 99
          }
        },
        line: 220
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 231,
            column: 6
          },
          end: {
            line: 231,
            column: 7
          }
        },
        loc: {
          start: {
            line: 231,
            column: 39
          },
          end: {
            line: 247,
            column: 5
          }
        },
        line: 231
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 250,
            column: 6
          },
          end: {
            line: 250,
            column: 7
          }
        },
        loc: {
          start: {
            line: 250,
            column: 23
          },
          end: {
            line: 264,
            column: 5
          }
        },
        line: 250
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 251,
            column: 45
          },
          end: {
            line: 251,
            column: 46
          }
        },
        loc: {
          start: {
            line: 251,
            column: 49
          },
          end: {
            line: 263,
            column: 9
          }
        },
        line: 251
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 267,
            column: 6
          },
          end: {
            line: 267,
            column: 7
          }
        },
        loc: {
          start: {
            line: 267,
            column: 21
          },
          end: {
            line: 282,
            column: 5
          }
        },
        line: 267
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 268,
            column: 43
          },
          end: {
            line: 268,
            column: 44
          }
        },
        loc: {
          start: {
            line: 268,
            column: 47
          },
          end: {
            line: 281,
            column: 9
          }
        },
        line: 268
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 285,
            column: 6
          },
          end: {
            line: 285,
            column: 7
          }
        },
        loc: {
          start: {
            line: 285,
            column: 30
          },
          end: {
            line: 306,
            column: 5
          }
        },
        line: 285
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 288,
            column: 41
          },
          end: {
            line: 288,
            column: 42
          }
        },
        loc: {
          start: {
            line: 288,
            column: 45
          },
          end: {
            line: 305,
            column: 9
          }
        },
        line: 288
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 296,
            column: 50
          },
          end: {
            line: 296,
            column: 51
          }
        },
        loc: {
          start: {
            line: 296,
            column: 59
          },
          end: {
            line: 298,
            column: 13
          }
        },
        line: 296
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 299,
            column: 73
          },
          end: {
            line: 299,
            column: 74
          }
        },
        loc: {
          start: {
            line: 299,
            column: 91
          },
          end: {
            line: 302,
            column: 17
          }
        },
        line: 299
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 302,
            column: 25
          },
          end: {
            line: 302,
            column: 26
          }
        },
        loc: {
          start: {
            line: 302,
            column: 33
          },
          end: {
            line: 302,
            column: 50
          }
        },
        line: 302
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 309,
            column: 6
          },
          end: {
            line: 309,
            column: 7
          }
        },
        loc: {
          start: {
            line: 309,
            column: 30
          },
          end: {
            line: 317,
            column: 5
          }
        },
        line: 309
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 320,
            column: 6
          },
          end: {
            line: 320,
            column: 7
          }
        },
        loc: {
          start: {
            line: 320,
            column: 40
          },
          end: {
            line: 331,
            column: 5
          }
        },
        line: 320
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 334,
            column: 6
          },
          end: {
            line: 334,
            column: 7
          }
        },
        loc: {
          start: {
            line: 334,
            column: 44
          },
          end: {
            line: 342,
            column: 5
          }
        },
        line: 334
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 345,
            column: 6
          },
          end: {
            line: 345,
            column: 7
          }
        },
        loc: {
          start: {
            line: 345,
            column: 38
          },
          end: {
            line: 353,
            column: 5
          }
        },
        line: 345
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 356,
            column: 6
          },
          end: {
            line: 356,
            column: 7
          }
        },
        loc: {
          start: {
            line: 356,
            column: 17
          },
          end: {
            line: 360,
            column: 5
          }
        },
        line: 356
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 363,
            column: 6
          },
          end: {
            line: 363,
            column: 7
          }
        },
        loc: {
          start: {
            line: 363,
            column: 25
          },
          end: {
            line: 370,
            column: 5
          }
        },
        line: 363
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 364,
            column: 53
          },
          end: {
            line: 364,
            column: 54
          }
        },
        loc: {
          start: {
            line: 364,
            column: 64
          },
          end: {
            line: 369,
            column: 13
          }
        },
        line: 364
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 373,
            column: 6
          },
          end: {
            line: 373,
            column: 7
          }
        },
        loc: {
          start: {
            line: 373,
            column: 34
          },
          end: {
            line: 375,
            column: 5
          }
        },
        line: 373
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 378,
            column: 6
          },
          end: {
            line: 378,
            column: 7
          }
        },
        loc: {
          start: {
            line: 378,
            column: 24
          },
          end: {
            line: 380,
            column: 5
          }
        },
        line: 378
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 383,
            column: 6
          },
          end: {
            line: 383,
            column: 7
          }
        },
        loc: {
          start: {
            line: 383,
            column: 16
          },
          end: {
            line: 395,
            column: 5
          }
        },
        line: 383
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 401,
            column: 6
          },
          end: {
            line: 401,
            column: 7
          }
        },
        loc: {
          start: {
            line: 404,
            column: 7
          },
          end: {
            line: 410,
            column: 5
          }
        },
        line: 404
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 413,
            column: 6
          },
          end: {
            line: 413,
            column: 7
          }
        },
        loc: {
          start: {
            line: 413,
            column: 45
          },
          end: {
            line: 428,
            column: 5
          }
        },
        line: 413
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 431,
            column: 6
          },
          end: {
            line: 431,
            column: 7
          }
        },
        loc: {
          start: {
            line: 431,
            column: 50
          },
          end: {
            line: 449,
            column: 5
          }
        },
        line: 431
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 452,
            column: 6
          },
          end: {
            line: 452,
            column: 7
          }
        },
        loc: {
          start: {
            line: 452,
            column: 29
          },
          end: {
            line: 461,
            column: 5
          }
        },
        line: 452
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "1": {
        loc: {
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 98,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 98,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 96
      },
      "2": {
        loc: {
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 132,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 132,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 126
      },
      "3": {
        loc: {
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 142,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 142,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 140
      },
      "4": {
        loc: {
          start: {
            line: 147,
            column: 16
          },
          end: {
            line: 153,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 147,
            column: 16
          },
          end: {
            line: 153,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 147
      },
      "5": {
        loc: {
          start: {
            line: 149,
            column: 20
          },
          end: {
            line: 151,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 149,
            column: 20
          },
          end: {
            line: 151,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 149
      },
      "6": {
        loc: {
          start: {
            line: 155,
            column: 16
          },
          end: {
            line: 159,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 155,
            column: 16
          },
          end: {
            line: 159,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 155
      },
      "7": {
        loc: {
          start: {
            line: 172,
            column: 8
          },
          end: {
            line: 174,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 172,
            column: 8
          },
          end: {
            line: 174,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 172
      },
      "8": {
        loc: {
          start: {
            line: 177,
            column: 8
          },
          end: {
            line: 197,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 177,
            column: 8
          },
          end: {
            line: 197,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 177
      },
      "9": {
        loc: {
          start: {
            line: 179,
            column: 12
          },
          end: {
            line: 183,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 179,
            column: 12
          },
          end: {
            line: 183,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 179
      },
      "10": {
        loc: {
          start: {
            line: 179,
            column: 16
          },
          end: {
            line: 179,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 179,
            column: 16
          },
          end: {
            line: 179,
            column: 34
          }
        }, {
          start: {
            line: 179,
            column: 38
          },
          end: {
            line: 179,
            column: 57
          }
        }],
        line: 179
      },
      "11": {
        loc: {
          start: {
            line: 180,
            column: 16
          },
          end: {
            line: 182,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 180,
            column: 16
          },
          end: {
            line: 182,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 180
      },
      "12": {
        loc: {
          start: {
            line: 185,
            column: 12
          },
          end: {
            line: 189,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 185,
            column: 12
          },
          end: {
            line: 189,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 185
      },
      "13": {
        loc: {
          start: {
            line: 185,
            column: 16
          },
          end: {
            line: 185,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 185,
            column: 16
          },
          end: {
            line: 185,
            column: 31
          }
        }, {
          start: {
            line: 185,
            column: 35
          },
          end: {
            line: 185,
            column: 52
          }
        }],
        line: 185
      },
      "14": {
        loc: {
          start: {
            line: 186,
            column: 16
          },
          end: {
            line: 188,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 186,
            column: 16
          },
          end: {
            line: 188,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 186
      },
      "15": {
        loc: {
          start: {
            line: 191,
            column: 12
          },
          end: {
            line: 196,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 191,
            column: 12
          },
          end: {
            line: 196,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 191
      },
      "16": {
        loc: {
          start: {
            line: 191,
            column: 16
          },
          end: {
            line: 191,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 191,
            column: 16
          },
          end: {
            line: 191,
            column: 28
          }
        }, {
          start: {
            line: 191,
            column: 32
          },
          end: {
            line: 191,
            column: 47
          }
        }],
        line: 191
      },
      "17": {
        loc: {
          start: {
            line: 193,
            column: 16
          },
          end: {
            line: 195,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 193,
            column: 16
          },
          end: {
            line: 195,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 193
      },
      "18": {
        loc: {
          start: {
            line: 204,
            column: 26
          },
          end: {
            line: 204,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 204,
            column: 26
          },
          end: {
            line: 204,
            column: 49
          }
        }, {
          start: {
            line: 204,
            column: 53
          },
          end: {
            line: 204,
            column: 84
          }
        }],
        line: 204
      },
      "19": {
        loc: {
          start: {
            line: 206,
            column: 8
          },
          end: {
            line: 209,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 206,
            column: 8
          },
          end: {
            line: 209,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 206
      },
      "20": {
        loc: {
          start: {
            line: 232,
            column: 14
          },
          end: {
            line: 232,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 232,
            column: 14
          },
          end: {
            line: 232,
            column: 42
          }
        }, {
          start: {
            line: 232,
            column: 46
          },
          end: {
            line: 232,
            column: 73
          }
        }],
        line: 232
      },
      "21": {
        loc: {
          start: {
            line: 234,
            column: 12
          },
          end: {
            line: 245,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 12
          },
          end: {
            line: 245,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 234
      },
      "22": {
        loc: {
          start: {
            line: 237,
            column: 20
          },
          end: {
            line: 241,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 237,
            column: 20
          },
          end: {
            line: 241,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 237
      },
      "23": {
        loc: {
          start: {
            line: 273,
            column: 16
          },
          end: {
            line: 279,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 273,
            column: 16
          },
          end: {
            line: 279,
            column: 17
          }
        }, {
          start: {
            line: 276,
            column: 23
          },
          end: {
            line: 279,
            column: 17
          }
        }],
        line: 273
      },
      "24": {
        loc: {
          start: {
            line: 297,
            column: 45
          },
          end: {
            line: 297,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 297,
            column: 45
          },
          end: {
            line: 297,
            column: 72
          }
        }, {
          start: {
            line: 297,
            column: 76
          },
          end: {
            line: 297,
            column: 77
          }
        }],
        line: 297
      },
      "25": {
        loc: {
          start: {
            line: 373,
            column: 22
          },
          end: {
            line: 373,
            column: 32
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 373,
            column: 30
          },
          end: {
            line: 373,
            column: 32
          }
        }],
        line: 373
      },
      "26": {
        loc: {
          start: {
            line: 384,
            column: 8
          },
          end: {
            line: 386,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 384,
            column: 8
          },
          end: {
            line: 386,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 384
      },
      "27": {
        loc: {
          start: {
            line: 387,
            column: 8
          },
          end: {
            line: 389,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 387,
            column: 8
          },
          end: {
            line: 389,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 387
      },
      "28": {
        loc: {
          start: {
            line: 390,
            column: 8
          },
          end: {
            line: 392,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 390,
            column: 8
          },
          end: {
            line: 392,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 390
      },
      "29": {
        loc: {
          start: {
            line: 401,
            column: 41
          },
          end: {
            line: 404,
            column: 5
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 401,
            column: 57
          },
          end: {
            line: 404,
            column: 5
          }
        }],
        line: 401
      },
      "30": {
        loc: {
          start: {
            line: 459,
            column: 27
          },
          end: {
            line: 459,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 459,
            column: 53
          },
          end: {
            line: 459,
            column: 78
          }
        }, {
          start: {
            line: 459,
            column: 81
          },
          end: {
            line: 459,
            column: 82
          }
        }],
        line: 459
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0],
      "30": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\monitoring\\real-time-metrics-streaming.ts"],
      sourcesContent: ["// ===================================\r\n// PINTEYA E-COMMERCE - REAL-TIME METRICS STREAMING\r\n// ===================================\r\n\r\nimport { logger, LogCategory } from '../enterprise/logger';\r\nimport { realTimePerformanceMonitor } from './real-time-performance-monitor';\r\nimport { advancedAlertingEngine } from './advanced-alerting-engine';\r\nimport { performanceBudgetsMonitor } from './performance-budgets-monitor';\r\n\r\n/**\r\n * Tipos de eventos de streaming\r\n */\r\nexport enum StreamEventType {\r\n  METRICS_UPDATE = 'metrics_update',\r\n  ALERT_CREATED = 'alert_created',\r\n  ALERT_RESOLVED = 'alert_resolved',\r\n  BUDGET_VIOLATION = 'budget_violation',\r\n  SYSTEM_STATUS = 'system_status',\r\n  HEARTBEAT = 'heartbeat'\r\n}\r\n\r\n/**\r\n * Evento de streaming\r\n */\r\nexport interface StreamEvent {\r\n  type: StreamEventType;\r\n  data: any;\r\n  timestamp: number;\r\n  id: string;\r\n}\r\n\r\n/**\r\n * Configuraci\xF3n de cliente de streaming\r\n */\r\nexport interface StreamClientConfig {\r\n  clientId: string;\r\n  subscriptions: StreamEventType[];\r\n  filters?: {\r\n    severities?: string[];\r\n    sources?: string[];\r\n    tags?: string[];\r\n  };\r\n  rateLimit?: {\r\n    maxEventsPerSecond: number;\r\n    burstLimit: number;\r\n  };\r\n}\r\n\r\n/**\r\n * Cliente de streaming\r\n */\r\nexport interface StreamClient {\r\n  id: string;\r\n  config: StreamClientConfig;\r\n  lastActivity: number;\r\n  eventQueue: StreamEvent[];\r\n  rateLimitCounter: {\r\n    count: number;\r\n    resetTime: number;\r\n  };\r\n  send: (event: StreamEvent) => Promise<boolean>;\r\n  disconnect: () => void;\r\n}\r\n\r\n/**\r\n * Estad\xEDsticas de streaming\r\n */\r\nexport interface StreamingStats {\r\n  totalClients: number;\r\n  activeClients: number;\r\n  totalEventsSent: number;\r\n  eventsPerSecond: number;\r\n  averageLatency: number;\r\n  errorRate: number;\r\n  clientsByType: Record<string, number>;\r\n  topEvents: Array<{\r\n    type: StreamEventType;\r\n    count: number;\r\n  }>;\r\n}\r\n\r\n/**\r\n * Configuraci\xF3n por defecto\r\n */\r\nconst DEFAULT_CONFIG = {\r\n  maxClients: 1000,\r\n  heartbeatInterval: 30000, // 30 segundos\r\n  clientTimeout: 300000, // 5 minutos\r\n  maxQueueSize: 100,\r\n  defaultRateLimit: {\r\n    maxEventsPerSecond: 10,\r\n    burstLimit: 50\r\n  }\r\n};\r\n\r\n/**\r\n * Sistema de streaming de m\xE9tricas en tiempo real\r\n */\r\nexport class RealTimeMetricsStreaming {\r\n  private static instance: RealTimeMetricsStreaming;\r\n  private clients: Map<string, StreamClient> = new Map();\r\n  private eventHistory: StreamEvent[] = [];\r\n  private stats: StreamingStats = {\r\n    totalClients: 0,\r\n    activeClients: 0,\r\n    totalEventsSent: 0,\r\n    eventsPerSecond: 0,\r\n    averageLatency: 0,\r\n    errorRate: 0,\r\n    clientsByType: {},\r\n    topEvents: []\r\n  };\r\n  private heartbeatInterval?: NodeJS.Timeout;\r\n  private cleanupInterval?: NodeJS.Timeout;\r\n  private statsInterval?: NodeJS.Timeout;\r\n\r\n  private constructor() {\r\n    this.initializeStreaming();\r\n  }\r\n\r\n  static getInstance(): RealTimeMetricsStreaming {\r\n    if (!RealTimeMetricsStreaming.instance) {\r\n      RealTimeMetricsStreaming.instance = new RealTimeMetricsStreaming();\r\n    }\r\n    return RealTimeMetricsStreaming.instance;\r\n  }\r\n\r\n  /**\r\n   * Inicializa el sistema de streaming\r\n   */\r\n  private initializeStreaming(): void {\r\n    // Suscribirse a eventos del monitor de performance\r\n    realTimePerformanceMonitor.subscribe((data) => {\r\n      this.broadcastEvent({\r\n        type: StreamEventType.METRICS_UPDATE,\r\n        data,\r\n        timestamp: Date.now(),\r\n        id: this.generateEventId()\r\n      });\r\n    });\r\n\r\n    // Iniciar heartbeat\r\n    this.startHeartbeat();\r\n    \r\n    // Iniciar limpieza peri\xF3dica\r\n    this.startCleanup();\r\n    \r\n    // Iniciar c\xE1lculo de estad\xEDsticas\r\n    this.startStatsCalculation();\r\n\r\n    logger.info(LogCategory.MONITORING, 'Real-time metrics streaming initialized');\r\n  }\r\n\r\n  /**\r\n   * Registra un nuevo cliente de streaming\r\n   */\r\n  registerClient(config: StreamClientConfig, sendFunction: (event: StreamEvent) => Promise<boolean>): StreamClient {\r\n    if (this.clients.size >= DEFAULT_CONFIG.maxClients) {\r\n      throw new Error('Maximum number of streaming clients reached');\r\n    }\r\n\r\n    const client: StreamClient = {\r\n      id: config.clientId,\r\n      config,\r\n      lastActivity: Date.now(),\r\n      eventQueue: [],\r\n      rateLimitCounter: {\r\n        count: 0,\r\n        resetTime: Date.now() + 1000\r\n      },\r\n      send: sendFunction,\r\n      disconnect: () => this.disconnectClient(config.clientId)\r\n    };\r\n\r\n    this.clients.set(config.clientId, client);\r\n    this.stats.totalClients++;\r\n    this.stats.activeClients = this.clients.size;\r\n\r\n    logger.info(LogCategory.MONITORING, `Streaming client registered: ${config.clientId}`, {\r\n      subscriptions: config.subscriptions,\r\n      totalClients: this.clients.size\r\n    });\r\n\r\n    // Enviar eventos recientes al nuevo cliente\r\n    this.sendRecentEvents(client);\r\n\r\n    return client;\r\n  }\r\n\r\n  /**\r\n   * Desconecta un cliente\r\n   */\r\n  disconnectClient(clientId: string): void {\r\n    const client = this.clients.get(clientId);\r\n    if (client) {\r\n      this.clients.delete(clientId);\r\n      this.stats.activeClients = this.clients.size;\r\n      \r\n      logger.info(LogCategory.MONITORING, `Streaming client disconnected: ${clientId}`, {\r\n        remainingClients: this.clients.size\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Difunde un evento a todos los clientes suscritos\r\n   */\r\n  private async broadcastEvent(event: StreamEvent): Promise<void> {\r\n    // Agregar a historial\r\n    this.eventHistory.push(event);\r\n    \r\n    // Mantener solo los \xFAltimos 1000 eventos\r\n    if (this.eventHistory.length > 1000) {\r\n      this.eventHistory = this.eventHistory.slice(-1000);\r\n    }\r\n\r\n    const eligibleClients = Array.from(this.clients.values()).filter(client => \r\n      this.isClientEligible(client, event)\r\n    );\r\n\r\n    const sendPromises = eligibleClients.map(async (client) => {\r\n      try {\r\n        // Verificar rate limiting\r\n        if (!this.checkRateLimit(client)) {\r\n          // Agregar a cola si est\xE1 dentro del l\xEDmite\r\n          if (client.eventQueue.length < DEFAULT_CONFIG.maxQueueSize) {\r\n            client.eventQueue.push(event);\r\n          }\r\n          return false;\r\n        }\r\n\r\n        const success = await client.send(event);\r\n        \r\n        if (success) {\r\n          this.updateRateLimit(client);\r\n          this.stats.totalEventsSent++;\r\n          client.lastActivity = Date.now();\r\n        }\r\n        \r\n        return success;\r\n      } catch (error) {\r\n        logger.error(LogCategory.MONITORING, `Error sending event to client ${client.id}`, error as Error);\r\n        return false;\r\n      }\r\n    });\r\n\r\n    await Promise.allSettled(sendPromises);\r\n  }\r\n\r\n  /**\r\n   * Verifica si un cliente es elegible para recibir un evento\r\n   */\r\n  private isClientEligible(client: StreamClient, event: StreamEvent): boolean {\r\n    // Verificar suscripciones\r\n    if (!client.config.subscriptions.includes(event.type)) {\r\n      return false;\r\n    }\r\n\r\n    // Aplicar filtros si existen\r\n    const { filters } = client.config;\r\n    if (filters) {\r\n      // Filtrar por severidad (para alertas)\r\n      if (filters.severities && event.data.severity) {\r\n        if (!filters.severities.includes(event.data.severity)) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      // Filtrar por fuente\r\n      if (filters.sources && event.data.source) {\r\n        if (!filters.sources.includes(event.data.source)) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      // Filtrar por tags\r\n      if (filters.tags && event.data.tags) {\r\n        const hasMatchingTag = filters.tags.some(tag => \r\n          event.data.tags.includes(tag)\r\n        );\r\n        if (!hasMatchingTag) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Verifica rate limiting para un cliente\r\n   */\r\n  private checkRateLimit(client: StreamClient): boolean {\r\n    const now = Date.now();\r\n    const rateLimit = client.config.rateLimit || DEFAULT_CONFIG.defaultRateLimit;\r\n    \r\n    // Reset counter si ha pasado un segundo\r\n    if (now >= client.rateLimitCounter.resetTime) {\r\n      client.rateLimitCounter.count = 0;\r\n      client.rateLimitCounter.resetTime = now + 1000;\r\n    }\r\n\r\n    return client.rateLimitCounter.count < rateLimit.maxEventsPerSecond;\r\n  }\r\n\r\n  /**\r\n   * Actualiza contador de rate limiting\r\n   */\r\n  private updateRateLimit(client: StreamClient): void {\r\n    client.rateLimitCounter.count++;\r\n  }\r\n\r\n  /**\r\n   * Env\xEDa eventos recientes a un cliente nuevo\r\n   */\r\n  private async sendRecentEvents(client: StreamClient): Promise<void> {\r\n    const recentEvents = this.eventHistory\r\n      .filter(event => this.isClientEligible(client, event))\r\n      .slice(-10); // \xDAltimos 10 eventos relevantes\r\n\r\n    for (const event of recentEvents) {\r\n      try {\r\n        await client.send(event);\r\n      } catch (error) {\r\n        logger.error(LogCategory.MONITORING, `Error sending recent event to client ${client.id}`, error as Error);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Procesa cola de eventos de un cliente\r\n   */\r\n  private async processClientQueue(client: StreamClient): Promise<void> {\r\n    while (client.eventQueue.length > 0 && this.checkRateLimit(client)) {\r\n      const event = client.eventQueue.shift();\r\n      if (event) {\r\n        try {\r\n          const success = await client.send(event);\r\n          if (success) {\r\n            this.updateRateLimit(client);\r\n            this.stats.totalEventsSent++;\r\n            client.lastActivity = Date.now();\r\n          }\r\n        } catch (error) {\r\n          logger.error(LogCategory.MONITORING, `Error processing queued event for client ${client.id}`, error as Error);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Inicia heartbeat peri\xF3dico\r\n   */\r\n  private startHeartbeat(): void {\r\n    this.heartbeatInterval = setInterval(() => {\r\n      const heartbeatEvent: StreamEvent = {\r\n        type: StreamEventType.HEARTBEAT,\r\n        data: {\r\n          timestamp: Date.now(),\r\n          activeClients: this.clients.size,\r\n          serverStatus: 'healthy'\r\n        },\r\n        timestamp: Date.now(),\r\n        id: this.generateEventId()\r\n      };\r\n\r\n      this.broadcastEvent(heartbeatEvent);\r\n    }, DEFAULT_CONFIG.heartbeatInterval);\r\n  }\r\n\r\n  /**\r\n   * Inicia limpieza peri\xF3dica\r\n   */\r\n  private startCleanup(): void {\r\n    this.cleanupInterval = setInterval(() => {\r\n      const now = Date.now();\r\n      const timeout = DEFAULT_CONFIG.clientTimeout;\r\n\r\n      // Remover clientes inactivos\r\n      for (const [clientId, client] of this.clients) {\r\n        if (now - client.lastActivity > timeout) {\r\n          this.disconnectClient(clientId);\r\n          logger.info(LogCategory.MONITORING, `Removed inactive streaming client: ${clientId}`);\r\n        } else {\r\n          // Procesar cola de eventos pendientes\r\n          this.processClientQueue(client);\r\n        }\r\n      }\r\n    }, 60000); // Cada minuto\r\n  }\r\n\r\n  /**\r\n   * Inicia c\xE1lculo de estad\xEDsticas\r\n   */\r\n  private startStatsCalculation(): void {\r\n    let lastEventCount = 0;\r\n    let lastTimestamp = Date.now();\r\n\r\n    this.statsInterval = setInterval(() => {\r\n      const now = Date.now();\r\n      const timeDiff = (now - lastTimestamp) / 1000; // segundos\r\n      const eventDiff = this.stats.totalEventsSent - lastEventCount;\r\n\r\n      this.stats.eventsPerSecond = eventDiff / timeDiff;\r\n      this.stats.activeClients = this.clients.size;\r\n\r\n      // Calcular eventos m\xE1s frecuentes\r\n      const eventCounts = new Map<StreamEventType, number>();\r\n      this.eventHistory.slice(-100).forEach(event => {\r\n        eventCounts.set(event.type, (eventCounts.get(event.type) || 0) + 1);\r\n      });\r\n\r\n      this.stats.topEvents = Array.from(eventCounts.entries())\r\n        .map(([type, count]) => ({ type, count }))\r\n        .sort((a, b) => b.count - a.count)\r\n        .slice(0, 5);\r\n\r\n      lastEventCount = this.stats.totalEventsSent;\r\n      lastTimestamp = now;\r\n    }, 10000); // Cada 10 segundos\r\n  }\r\n\r\n  /**\r\n   * Crea evento de alerta\r\n   */\r\n  createAlertEvent(alert: any): void {\r\n    const event: StreamEvent = {\r\n      type: StreamEventType.ALERT_CREATED,\r\n      data: alert,\r\n      timestamp: Date.now(),\r\n      id: this.generateEventId()\r\n    };\r\n\r\n    this.broadcastEvent(event);\r\n  }\r\n\r\n  /**\r\n   * Crea evento de resoluci\xF3n de alerta\r\n   */\r\n  createAlertResolvedEvent(alertId: string): void {\r\n    const event: StreamEvent = {\r\n      type: StreamEventType.ALERT_RESOLVED,\r\n      data: { alertId, resolvedAt: Date.now() },\r\n      timestamp: Date.now(),\r\n      id: this.generateEventId()\r\n    };\r\n\r\n    this.broadcastEvent(event);\r\n  }\r\n\r\n  /**\r\n   * Crea evento de violaci\xF3n de presupuesto\r\n   */\r\n  createBudgetViolationEvent(violation: any): void {\r\n    const event: StreamEvent = {\r\n      type: StreamEventType.BUDGET_VIOLATION,\r\n      data: violation,\r\n      timestamp: Date.now(),\r\n      id: this.generateEventId()\r\n    };\r\n\r\n    this.broadcastEvent(event);\r\n  }\r\n\r\n  /**\r\n   * Crea evento de estado del sistema\r\n   */\r\n  createSystemStatusEvent(status: any): void {\r\n    const event: StreamEvent = {\r\n      type: StreamEventType.SYSTEM_STATUS,\r\n      data: status,\r\n      timestamp: Date.now(),\r\n      id: this.generateEventId()\r\n    };\r\n\r\n    this.broadcastEvent(event);\r\n  }\r\n\r\n  /**\r\n   * Obtiene estad\xEDsticas de streaming\r\n   */\r\n  getStats(): StreamingStats {\r\n    return { ...this.stats };\r\n  }\r\n\r\n  /**\r\n   * Obtiene clientes activos\r\n   */\r\n  getActiveClients(): Array<{\r\n    id: string;\r\n    subscriptions: StreamEventType[];\r\n    lastActivity: number;\r\n    queueSize: number;\r\n  }> {\r\n    return Array.from(this.clients.values()).map(client => ({\r\n      id: client.id,\r\n      subscriptions: client.config.subscriptions,\r\n      lastActivity: client.lastActivity,\r\n      queueSize: client.eventQueue.length\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Obtiene eventos recientes\r\n   */\r\n  getRecentEvents(limit: number = 50): StreamEvent[] {\r\n    return this.eventHistory.slice(-limit);\r\n  }\r\n\r\n  /**\r\n   * Genera ID \xFAnico para evento\r\n   */\r\n  private generateEventId(): string {\r\n    return `event_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n  }\r\n\r\n  /**\r\n   * Destructor\r\n   */\r\n  destroy(): void {\r\n    if (this.heartbeatInterval) {\r\n      clearInterval(this.heartbeatInterval);\r\n    }\r\n    if (this.cleanupInterval) {\r\n      clearInterval(this.cleanupInterval);\r\n    }\r\n    if (this.statsInterval) {\r\n      clearInterval(this.statsInterval);\r\n    }\r\n    \r\n    // Desconectar todos los clientes\r\n    this.clients.clear();\r\n  }\r\n}\r\n\r\n// Instancia singleton\r\nexport const realTimeMetricsStreaming = RealTimeMetricsStreaming.getInstance();\r\n\r\n/**\r\n * Utilidades para streaming de m\xE9tricas\r\n */\r\nexport const StreamingUtils = {\r\n  /**\r\n   * Crea configuraci\xF3n de cliente b\xE1sica\r\n   */\r\n  createBasicClientConfig(\r\n    clientId: string,\r\n    subscriptions: StreamEventType[] = [StreamEventType.METRICS_UPDATE, StreamEventType.ALERT_CREATED]\r\n  ): StreamClientConfig {\r\n    return {\r\n      clientId,\r\n      subscriptions,\r\n      rateLimit: DEFAULT_CONFIG.defaultRateLimit\r\n    };\r\n  },\r\n\r\n  /**\r\n   * Crea configuraci\xF3n de cliente para dashboard\r\n   */\r\n  createDashboardClientConfig(clientId: string): StreamClientConfig {\r\n    return {\r\n      clientId,\r\n      subscriptions: [\r\n        StreamEventType.METRICS_UPDATE,\r\n        StreamEventType.ALERT_CREATED,\r\n        StreamEventType.ALERT_RESOLVED,\r\n        StreamEventType.BUDGET_VIOLATION,\r\n        StreamEventType.SYSTEM_STATUS\r\n      ],\r\n      rateLimit: {\r\n        maxEventsPerSecond: 20,\r\n        burstLimit: 100\r\n      }\r\n    };\r\n  },\r\n\r\n  /**\r\n   * Crea configuraci\xF3n de cliente para alertas cr\xEDticas\r\n   */\r\n  createCriticalAlertsClientConfig(clientId: string): StreamClientConfig {\r\n    return {\r\n      clientId,\r\n      subscriptions: [\r\n        StreamEventType.ALERT_CREATED,\r\n        StreamEventType.BUDGET_VIOLATION\r\n      ],\r\n      filters: {\r\n        severities: ['high', 'critical']\r\n      },\r\n      rateLimit: {\r\n        maxEventsPerSecond: 5,\r\n        burstLimit: 20\r\n      }\r\n    };\r\n  },\r\n\r\n  /**\r\n   * Obtiene resumen de streaming\r\n   */\r\n  getStreamingSummary(): {\r\n    isActive: boolean;\r\n    clientCount: number;\r\n    eventsPerSecond: number;\r\n    lastEventTime: number;\r\n  } {\r\n    const stats = realTimeMetricsStreaming.getStats();\r\n    const recentEvents = realTimeMetricsStreaming.getRecentEvents(1);\r\n    \r\n    return {\r\n      isActive: stats.activeClients > 0,\r\n      clientCount: stats.activeClients,\r\n      eventsPerSecond: stats.eventsPerSecond,\r\n      lastEventTime: recentEvents.length > 0 ? recentEvents[0].timestamp : 0\r\n    };\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["RealTimeMetricsStreaming", "StreamEventType", "StreamingUtils", "realTimeMetricsStreaming", "DEFAULT_CONFIG", "maxClients", "heartbeatInterval", "clientTimeout", "maxQueueSize", "defaultRateLimit", "maxEventsPerSecond", "burstLimit", "clients", "Map", "eventHistory", "stats", "totalClients", "activeClients", "totalEventsSent", "eventsPerSecond", "averageLatency", "errorRate", "clientsByType", "topEvents", "initializeStreaming", "getInstance", "instance", "realTimePerformanceMonitor", "subscribe", "data", "broadcastEvent", "type", "timestamp", "Date", "now", "id", "generateEventId", "startHeartbeat", "startCleanup", "startStatsCalculation", "logger", "info", "LogCategory", "MONITORING", "registerClient", "config", "sendFunction", "size", "Error", "client", "clientId", "lastActivity", "eventQueue", "rateLimitCounter", "count", "resetTime", "send", "disconnect", "disconnectClient", "set", "subscriptions", "sendRecentEvents", "get", "delete", "remainingClients", "event", "push", "length", "slice", "eligibleClients", "Array", "from", "values", "filter", "isClientEligible", "sendPromises", "map", "checkRateLimit", "success", "updateRateLimit", "error", "Promise", "allSettled", "includes", "filters", "severities", "severity", "sources", "source", "tags", "hasMatchingTag", "some", "tag", "rateLimit", "recentEvents", "processClientQueue", "shift", "setInterval", "heartbeatEvent", "serverStatus", "cleanupInterval", "timeout", "lastEventCount", "lastTimestamp", "statsInterval", "timeDiff", "eventDiff", "eventCounts", "forEach", "entries", "sort", "a", "b", "createAlertEvent", "alert", "createAlertResolvedEvent", "alertId", "resolvedAt", "createBudgetViolationEvent", "violation", "createSystemStatusEvent", "status", "getStats", "getActiveClients", "queueSize", "getRecentEvents", "limit", "Math", "random", "toString", "substr", "destroy", "clearInterval", "clear", "createBasicClientConfig", "createDashboardClientConfig", "createCriticalAlertsClientConfig", "getStreamingSummary", "isActive", "clientCount", "lastEventTime"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "81a7511f69d4f2e514d1f08c02b42a679caff6be"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_ne5j69el1 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_ne5j69el1();
cov_ne5j69el1().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_ne5j69el1().f[0]++;
  cov_ne5j69el1().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_ne5j69el1().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_ne5j69el1().s[3]++;
_export(exports, {
  get RealTimeMetricsStreaming() {
    /* istanbul ignore next */
    cov_ne5j69el1().f[1]++;
    cov_ne5j69el1().s[4]++;
    return RealTimeMetricsStreaming;
  },
  get StreamEventType() {
    /* istanbul ignore next */
    cov_ne5j69el1().f[2]++;
    cov_ne5j69el1().s[5]++;
    return StreamEventType;
  },
  get StreamingUtils() {
    /* istanbul ignore next */
    cov_ne5j69el1().f[3]++;
    cov_ne5j69el1().s[6]++;
    return StreamingUtils;
  },
  get realTimeMetricsStreaming() {
    /* istanbul ignore next */
    cov_ne5j69el1().f[4]++;
    cov_ne5j69el1().s[7]++;
    return realTimeMetricsStreaming;
  }
});
const _logger =
/* istanbul ignore next */
(cov_ne5j69el1().s[8]++, require("../enterprise/logger"));
const _realtimeperformancemonitor =
/* istanbul ignore next */
(cov_ne5j69el1().s[9]++, require("./real-time-performance-monitor"));
var StreamEventType =
/* istanbul ignore next */
(/*#__PURE__*/cov_ne5j69el1().s[10]++, function (StreamEventType) {
  /* istanbul ignore next */
  cov_ne5j69el1().f[5]++;
  cov_ne5j69el1().s[11]++;
  StreamEventType["METRICS_UPDATE"] = "metrics_update";
  /* istanbul ignore next */
  cov_ne5j69el1().s[12]++;
  StreamEventType["ALERT_CREATED"] = "alert_created";
  /* istanbul ignore next */
  cov_ne5j69el1().s[13]++;
  StreamEventType["ALERT_RESOLVED"] = "alert_resolved";
  /* istanbul ignore next */
  cov_ne5j69el1().s[14]++;
  StreamEventType["BUDGET_VIOLATION"] = "budget_violation";
  /* istanbul ignore next */
  cov_ne5j69el1().s[15]++;
  StreamEventType["SYSTEM_STATUS"] = "system_status";
  /* istanbul ignore next */
  cov_ne5j69el1().s[16]++;
  StreamEventType["HEARTBEAT"] = "heartbeat";
  /* istanbul ignore next */
  cov_ne5j69el1().s[17]++;
  return StreamEventType;
}({}));
/**
 * Configuración por defecto
 */
const DEFAULT_CONFIG =
/* istanbul ignore next */
(cov_ne5j69el1().s[18]++, {
  maxClients: 1000,
  heartbeatInterval: 30000,
  clientTimeout: 300000,
  maxQueueSize: 100,
  defaultRateLimit: {
    maxEventsPerSecond: 10,
    burstLimit: 50
  }
});
class RealTimeMetricsStreaming {
  constructor() {
    /* istanbul ignore next */
    cov_ne5j69el1().f[6]++;
    cov_ne5j69el1().s[19]++;
    this.clients = new Map();
    /* istanbul ignore next */
    cov_ne5j69el1().s[20]++;
    this.eventHistory = [];
    /* istanbul ignore next */
    cov_ne5j69el1().s[21]++;
    this.stats = {
      totalClients: 0,
      activeClients: 0,
      totalEventsSent: 0,
      eventsPerSecond: 0,
      averageLatency: 0,
      errorRate: 0,
      clientsByType: {},
      topEvents: []
    };
    /* istanbul ignore next */
    cov_ne5j69el1().s[22]++;
    this.initializeStreaming();
  }
  static getInstance() {
    /* istanbul ignore next */
    cov_ne5j69el1().f[7]++;
    cov_ne5j69el1().s[23]++;
    if (!RealTimeMetricsStreaming.instance) {
      /* istanbul ignore next */
      cov_ne5j69el1().b[0][0]++;
      cov_ne5j69el1().s[24]++;
      RealTimeMetricsStreaming.instance = new RealTimeMetricsStreaming();
    } else
    /* istanbul ignore next */
    {
      cov_ne5j69el1().b[0][1]++;
    }
    cov_ne5j69el1().s[25]++;
    return RealTimeMetricsStreaming.instance;
  }
  /**
  * Inicializa el sistema de streaming
  */
  initializeStreaming() {
    /* istanbul ignore next */
    cov_ne5j69el1().f[8]++;
    cov_ne5j69el1().s[26]++;
    // Suscribirse a eventos del monitor de performance
    _realtimeperformancemonitor.realTimePerformanceMonitor.subscribe(data => {
      /* istanbul ignore next */
      cov_ne5j69el1().f[9]++;
      cov_ne5j69el1().s[27]++;
      this.broadcastEvent({
        type: "metrics_update",
        data,
        timestamp: Date.now(),
        id: this.generateEventId()
      });
    });
    // Iniciar heartbeat
    /* istanbul ignore next */
    cov_ne5j69el1().s[28]++;
    this.startHeartbeat();
    // Iniciar limpieza periódica
    /* istanbul ignore next */
    cov_ne5j69el1().s[29]++;
    this.startCleanup();
    // Iniciar cálculo de estadísticas
    /* istanbul ignore next */
    cov_ne5j69el1().s[30]++;
    this.startStatsCalculation();
    /* istanbul ignore next */
    cov_ne5j69el1().s[31]++;
    _logger.logger.info(_logger.LogCategory.MONITORING, 'Real-time metrics streaming initialized');
  }
  /**
  * Registra un nuevo cliente de streaming
  */
  registerClient(config, sendFunction) {
    /* istanbul ignore next */
    cov_ne5j69el1().f[10]++;
    cov_ne5j69el1().s[32]++;
    if (this.clients.size >= DEFAULT_CONFIG.maxClients) {
      /* istanbul ignore next */
      cov_ne5j69el1().b[1][0]++;
      cov_ne5j69el1().s[33]++;
      throw new Error('Maximum number of streaming clients reached');
    } else
    /* istanbul ignore next */
    {
      cov_ne5j69el1().b[1][1]++;
    }
    const client =
    /* istanbul ignore next */
    (cov_ne5j69el1().s[34]++, {
      id: config.clientId,
      config,
      lastActivity: Date.now(),
      eventQueue: [],
      rateLimitCounter: {
        count: 0,
        resetTime: Date.now() + 1000
      },
      send: sendFunction,
      disconnect: () => {
        /* istanbul ignore next */
        cov_ne5j69el1().f[11]++;
        cov_ne5j69el1().s[35]++;
        return this.disconnectClient(config.clientId);
      }
    });
    /* istanbul ignore next */
    cov_ne5j69el1().s[36]++;
    this.clients.set(config.clientId, client);
    /* istanbul ignore next */
    cov_ne5j69el1().s[37]++;
    this.stats.totalClients++;
    /* istanbul ignore next */
    cov_ne5j69el1().s[38]++;
    this.stats.activeClients = this.clients.size;
    /* istanbul ignore next */
    cov_ne5j69el1().s[39]++;
    _logger.logger.info(_logger.LogCategory.MONITORING, `Streaming client registered: ${config.clientId}`, {
      subscriptions: config.subscriptions,
      totalClients: this.clients.size
    });
    // Enviar eventos recientes al nuevo cliente
    /* istanbul ignore next */
    cov_ne5j69el1().s[40]++;
    this.sendRecentEvents(client);
    /* istanbul ignore next */
    cov_ne5j69el1().s[41]++;
    return client;
  }
  /**
  * Desconecta un cliente
  */
  disconnectClient(clientId) {
    /* istanbul ignore next */
    cov_ne5j69el1().f[12]++;
    const client =
    /* istanbul ignore next */
    (cov_ne5j69el1().s[42]++, this.clients.get(clientId));
    /* istanbul ignore next */
    cov_ne5j69el1().s[43]++;
    if (client) {
      /* istanbul ignore next */
      cov_ne5j69el1().b[2][0]++;
      cov_ne5j69el1().s[44]++;
      this.clients.delete(clientId);
      /* istanbul ignore next */
      cov_ne5j69el1().s[45]++;
      this.stats.activeClients = this.clients.size;
      /* istanbul ignore next */
      cov_ne5j69el1().s[46]++;
      _logger.logger.info(_logger.LogCategory.MONITORING, `Streaming client disconnected: ${clientId}`, {
        remainingClients: this.clients.size
      });
    } else
    /* istanbul ignore next */
    {
      cov_ne5j69el1().b[2][1]++;
    }
  }
  /**
  * Difunde un evento a todos los clientes suscritos
  */
  async broadcastEvent(event) {
    /* istanbul ignore next */
    cov_ne5j69el1().f[13]++;
    cov_ne5j69el1().s[47]++;
    // Agregar a historial
    this.eventHistory.push(event);
    // Mantener solo los últimos 1000 eventos
    /* istanbul ignore next */
    cov_ne5j69el1().s[48]++;
    if (this.eventHistory.length > 1000) {
      /* istanbul ignore next */
      cov_ne5j69el1().b[3][0]++;
      cov_ne5j69el1().s[49]++;
      this.eventHistory = this.eventHistory.slice(-1000);
    } else
    /* istanbul ignore next */
    {
      cov_ne5j69el1().b[3][1]++;
    }
    const eligibleClients =
    /* istanbul ignore next */
    (cov_ne5j69el1().s[50]++, Array.from(this.clients.values()).filter(client => {
      /* istanbul ignore next */
      cov_ne5j69el1().f[14]++;
      cov_ne5j69el1().s[51]++;
      return this.isClientEligible(client, event);
    }));
    const sendPromises =
    /* istanbul ignore next */
    (cov_ne5j69el1().s[52]++, eligibleClients.map(async client => {
      /* istanbul ignore next */
      cov_ne5j69el1().f[15]++;
      cov_ne5j69el1().s[53]++;
      try {
        /* istanbul ignore next */
        cov_ne5j69el1().s[54]++;
        // Verificar rate limiting
        if (!this.checkRateLimit(client)) {
          /* istanbul ignore next */
          cov_ne5j69el1().b[4][0]++;
          cov_ne5j69el1().s[55]++;
          // Agregar a cola si está dentro del límite
          if (client.eventQueue.length < DEFAULT_CONFIG.maxQueueSize) {
            /* istanbul ignore next */
            cov_ne5j69el1().b[5][0]++;
            cov_ne5j69el1().s[56]++;
            client.eventQueue.push(event);
          } else
          /* istanbul ignore next */
          {
            cov_ne5j69el1().b[5][1]++;
          }
          cov_ne5j69el1().s[57]++;
          return false;
        } else
        /* istanbul ignore next */
        {
          cov_ne5j69el1().b[4][1]++;
        }
        const success =
        /* istanbul ignore next */
        (cov_ne5j69el1().s[58]++, await client.send(event));
        /* istanbul ignore next */
        cov_ne5j69el1().s[59]++;
        if (success) {
          /* istanbul ignore next */
          cov_ne5j69el1().b[6][0]++;
          cov_ne5j69el1().s[60]++;
          this.updateRateLimit(client);
          /* istanbul ignore next */
          cov_ne5j69el1().s[61]++;
          this.stats.totalEventsSent++;
          /* istanbul ignore next */
          cov_ne5j69el1().s[62]++;
          client.lastActivity = Date.now();
        } else
        /* istanbul ignore next */
        {
          cov_ne5j69el1().b[6][1]++;
        }
        cov_ne5j69el1().s[63]++;
        return success;
      } catch (error) {
        /* istanbul ignore next */
        cov_ne5j69el1().s[64]++;
        _logger.logger.error(_logger.LogCategory.MONITORING, `Error sending event to client ${client.id}`, error);
        /* istanbul ignore next */
        cov_ne5j69el1().s[65]++;
        return false;
      }
    }));
    /* istanbul ignore next */
    cov_ne5j69el1().s[66]++;
    await Promise.allSettled(sendPromises);
  }
  /**
  * Verifica si un cliente es elegible para recibir un evento
  */
  isClientEligible(client, event) {
    /* istanbul ignore next */
    cov_ne5j69el1().f[16]++;
    cov_ne5j69el1().s[67]++;
    // Verificar suscripciones
    if (!client.config.subscriptions.includes(event.type)) {
      /* istanbul ignore next */
      cov_ne5j69el1().b[7][0]++;
      cov_ne5j69el1().s[68]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_ne5j69el1().b[7][1]++;
    }
    // Aplicar filtros si existen
    const {
      filters
    } =
    /* istanbul ignore next */
    (cov_ne5j69el1().s[69]++, client.config);
    /* istanbul ignore next */
    cov_ne5j69el1().s[70]++;
    if (filters) {
      /* istanbul ignore next */
      cov_ne5j69el1().b[8][0]++;
      cov_ne5j69el1().s[71]++;
      // Filtrar por severidad (para alertas)
      if (
      /* istanbul ignore next */
      (cov_ne5j69el1().b[10][0]++, filters.severities) &&
      /* istanbul ignore next */
      (cov_ne5j69el1().b[10][1]++, event.data.severity)) {
        /* istanbul ignore next */
        cov_ne5j69el1().b[9][0]++;
        cov_ne5j69el1().s[72]++;
        if (!filters.severities.includes(event.data.severity)) {
          /* istanbul ignore next */
          cov_ne5j69el1().b[11][0]++;
          cov_ne5j69el1().s[73]++;
          return false;
        } else
        /* istanbul ignore next */
        {
          cov_ne5j69el1().b[11][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_ne5j69el1().b[9][1]++;
      }
      // Filtrar por fuente
      cov_ne5j69el1().s[74]++;
      if (
      /* istanbul ignore next */
      (cov_ne5j69el1().b[13][0]++, filters.sources) &&
      /* istanbul ignore next */
      (cov_ne5j69el1().b[13][1]++, event.data.source)) {
        /* istanbul ignore next */
        cov_ne5j69el1().b[12][0]++;
        cov_ne5j69el1().s[75]++;
        if (!filters.sources.includes(event.data.source)) {
          /* istanbul ignore next */
          cov_ne5j69el1().b[14][0]++;
          cov_ne5j69el1().s[76]++;
          return false;
        } else
        /* istanbul ignore next */
        {
          cov_ne5j69el1().b[14][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_ne5j69el1().b[12][1]++;
      }
      // Filtrar por tags
      cov_ne5j69el1().s[77]++;
      if (
      /* istanbul ignore next */
      (cov_ne5j69el1().b[16][0]++, filters.tags) &&
      /* istanbul ignore next */
      (cov_ne5j69el1().b[16][1]++, event.data.tags)) {
        /* istanbul ignore next */
        cov_ne5j69el1().b[15][0]++;
        const hasMatchingTag =
        /* istanbul ignore next */
        (cov_ne5j69el1().s[78]++, filters.tags.some(tag => {
          /* istanbul ignore next */
          cov_ne5j69el1().f[17]++;
          cov_ne5j69el1().s[79]++;
          return event.data.tags.includes(tag);
        }));
        /* istanbul ignore next */
        cov_ne5j69el1().s[80]++;
        if (!hasMatchingTag) {
          /* istanbul ignore next */
          cov_ne5j69el1().b[17][0]++;
          cov_ne5j69el1().s[81]++;
          return false;
        } else
        /* istanbul ignore next */
        {
          cov_ne5j69el1().b[17][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_ne5j69el1().b[15][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_ne5j69el1().b[8][1]++;
    }
    cov_ne5j69el1().s[82]++;
    return true;
  }
  /**
  * Verifica rate limiting para un cliente
  */
  checkRateLimit(client) {
    /* istanbul ignore next */
    cov_ne5j69el1().f[18]++;
    const now =
    /* istanbul ignore next */
    (cov_ne5j69el1().s[83]++, Date.now());
    const rateLimit =
    /* istanbul ignore next */
    (cov_ne5j69el1().s[84]++,
    /* istanbul ignore next */
    (cov_ne5j69el1().b[18][0]++, client.config.rateLimit) ||
    /* istanbul ignore next */
    (cov_ne5j69el1().b[18][1]++, DEFAULT_CONFIG.defaultRateLimit));
    // Reset counter si ha pasado un segundo
    /* istanbul ignore next */
    cov_ne5j69el1().s[85]++;
    if (now >= client.rateLimitCounter.resetTime) {
      /* istanbul ignore next */
      cov_ne5j69el1().b[19][0]++;
      cov_ne5j69el1().s[86]++;
      client.rateLimitCounter.count = 0;
      /* istanbul ignore next */
      cov_ne5j69el1().s[87]++;
      client.rateLimitCounter.resetTime = now + 1000;
    } else
    /* istanbul ignore next */
    {
      cov_ne5j69el1().b[19][1]++;
    }
    cov_ne5j69el1().s[88]++;
    return client.rateLimitCounter.count < rateLimit.maxEventsPerSecond;
  }
  /**
  * Actualiza contador de rate limiting
  */
  updateRateLimit(client) {
    /* istanbul ignore next */
    cov_ne5j69el1().f[19]++;
    cov_ne5j69el1().s[89]++;
    client.rateLimitCounter.count++;
  }
  /**
  * Envía eventos recientes a un cliente nuevo
  */
  async sendRecentEvents(client) {
    /* istanbul ignore next */
    cov_ne5j69el1().f[20]++;
    const recentEvents =
    /* istanbul ignore next */
    (cov_ne5j69el1().s[90]++, this.eventHistory.filter(event => {
      /* istanbul ignore next */
      cov_ne5j69el1().f[21]++;
      cov_ne5j69el1().s[91]++;
      return this.isClientEligible(client, event);
    }).slice(-10)); // Últimos 10 eventos relevantes
    /* istanbul ignore next */
    cov_ne5j69el1().s[92]++;
    for (const event of recentEvents) {
      /* istanbul ignore next */
      cov_ne5j69el1().s[93]++;
      try {
        /* istanbul ignore next */
        cov_ne5j69el1().s[94]++;
        await client.send(event);
      } catch (error) {
        /* istanbul ignore next */
        cov_ne5j69el1().s[95]++;
        _logger.logger.error(_logger.LogCategory.MONITORING, `Error sending recent event to client ${client.id}`, error);
      }
    }
  }
  /**
  * Procesa cola de eventos de un cliente
  */
  async processClientQueue(client) {
    /* istanbul ignore next */
    cov_ne5j69el1().f[22]++;
    cov_ne5j69el1().s[96]++;
    while (
    /* istanbul ignore next */
    (cov_ne5j69el1().b[20][0]++, client.eventQueue.length > 0) &&
    /* istanbul ignore next */
    (cov_ne5j69el1().b[20][1]++, this.checkRateLimit(client))) {
      const event =
      /* istanbul ignore next */
      (cov_ne5j69el1().s[97]++, client.eventQueue.shift());
      /* istanbul ignore next */
      cov_ne5j69el1().s[98]++;
      if (event) {
        /* istanbul ignore next */
        cov_ne5j69el1().b[21][0]++;
        cov_ne5j69el1().s[99]++;
        try {
          const success =
          /* istanbul ignore next */
          (cov_ne5j69el1().s[100]++, await client.send(event));
          /* istanbul ignore next */
          cov_ne5j69el1().s[101]++;
          if (success) {
            /* istanbul ignore next */
            cov_ne5j69el1().b[22][0]++;
            cov_ne5j69el1().s[102]++;
            this.updateRateLimit(client);
            /* istanbul ignore next */
            cov_ne5j69el1().s[103]++;
            this.stats.totalEventsSent++;
            /* istanbul ignore next */
            cov_ne5j69el1().s[104]++;
            client.lastActivity = Date.now();
          } else
          /* istanbul ignore next */
          {
            cov_ne5j69el1().b[22][1]++;
          }
        } catch (error) {
          /* istanbul ignore next */
          cov_ne5j69el1().s[105]++;
          _logger.logger.error(_logger.LogCategory.MONITORING, `Error processing queued event for client ${client.id}`, error);
        }
      } else
      /* istanbul ignore next */
      {
        cov_ne5j69el1().b[21][1]++;
      }
    }
  }
  /**
  * Inicia heartbeat periódico
  */
  startHeartbeat() {
    /* istanbul ignore next */
    cov_ne5j69el1().f[23]++;
    cov_ne5j69el1().s[106]++;
    this.heartbeatInterval = setInterval(() => {
      /* istanbul ignore next */
      cov_ne5j69el1().f[24]++;
      const heartbeatEvent =
      /* istanbul ignore next */
      (cov_ne5j69el1().s[107]++, {
        type: "heartbeat",
        data: {
          timestamp: Date.now(),
          activeClients: this.clients.size,
          serverStatus: 'healthy'
        },
        timestamp: Date.now(),
        id: this.generateEventId()
      });
      /* istanbul ignore next */
      cov_ne5j69el1().s[108]++;
      this.broadcastEvent(heartbeatEvent);
    }, DEFAULT_CONFIG.heartbeatInterval);
  }
  /**
  * Inicia limpieza periódica
  */
  startCleanup() {
    /* istanbul ignore next */
    cov_ne5j69el1().f[25]++;
    cov_ne5j69el1().s[109]++;
    this.cleanupInterval = setInterval(() => {
      /* istanbul ignore next */
      cov_ne5j69el1().f[26]++;
      const now =
      /* istanbul ignore next */
      (cov_ne5j69el1().s[110]++, Date.now());
      const timeout =
      /* istanbul ignore next */
      (cov_ne5j69el1().s[111]++, DEFAULT_CONFIG.clientTimeout);
      // Remover clientes inactivos
      /* istanbul ignore next */
      cov_ne5j69el1().s[112]++;
      for (const [clientId, client] of this.clients) {
        /* istanbul ignore next */
        cov_ne5j69el1().s[113]++;
        if (now - client.lastActivity > timeout) {
          /* istanbul ignore next */
          cov_ne5j69el1().b[23][0]++;
          cov_ne5j69el1().s[114]++;
          this.disconnectClient(clientId);
          /* istanbul ignore next */
          cov_ne5j69el1().s[115]++;
          _logger.logger.info(_logger.LogCategory.MONITORING, `Removed inactive streaming client: ${clientId}`);
        } else {
          /* istanbul ignore next */
          cov_ne5j69el1().b[23][1]++;
          cov_ne5j69el1().s[116]++;
          // Procesar cola de eventos pendientes
          this.processClientQueue(client);
        }
      }
    }, 60000); // Cada minuto
  }
  /**
  * Inicia cálculo de estadísticas
  */
  startStatsCalculation() {
    /* istanbul ignore next */
    cov_ne5j69el1().f[27]++;
    let lastEventCount =
    /* istanbul ignore next */
    (cov_ne5j69el1().s[117]++, 0);
    let lastTimestamp =
    /* istanbul ignore next */
    (cov_ne5j69el1().s[118]++, Date.now());
    /* istanbul ignore next */
    cov_ne5j69el1().s[119]++;
    this.statsInterval = setInterval(() => {
      /* istanbul ignore next */
      cov_ne5j69el1().f[28]++;
      const now =
      /* istanbul ignore next */
      (cov_ne5j69el1().s[120]++, Date.now());
      const timeDiff =
      /* istanbul ignore next */
      (cov_ne5j69el1().s[121]++, (now - lastTimestamp) / 1000); // segundos
      const eventDiff =
      /* istanbul ignore next */
      (cov_ne5j69el1().s[122]++, this.stats.totalEventsSent - lastEventCount);
      /* istanbul ignore next */
      cov_ne5j69el1().s[123]++;
      this.stats.eventsPerSecond = eventDiff / timeDiff;
      /* istanbul ignore next */
      cov_ne5j69el1().s[124]++;
      this.stats.activeClients = this.clients.size;
      // Calcular eventos más frecuentes
      const eventCounts =
      /* istanbul ignore next */
      (cov_ne5j69el1().s[125]++, new Map());
      /* istanbul ignore next */
      cov_ne5j69el1().s[126]++;
      this.eventHistory.slice(-100).forEach(event => {
        /* istanbul ignore next */
        cov_ne5j69el1().f[29]++;
        cov_ne5j69el1().s[127]++;
        eventCounts.set(event.type, (
        /* istanbul ignore next */
        (cov_ne5j69el1().b[24][0]++, eventCounts.get(event.type)) ||
        /* istanbul ignore next */
        (cov_ne5j69el1().b[24][1]++, 0)) + 1);
      });
      /* istanbul ignore next */
      cov_ne5j69el1().s[128]++;
      this.stats.topEvents = Array.from(eventCounts.entries()).map(([type, count]) => {
        /* istanbul ignore next */
        cov_ne5j69el1().f[30]++;
        cov_ne5j69el1().s[129]++;
        return {
          type,
          count
        };
      }).sort((a, b) => {
        /* istanbul ignore next */
        cov_ne5j69el1().f[31]++;
        cov_ne5j69el1().s[130]++;
        return b.count - a.count;
      }).slice(0, 5);
      /* istanbul ignore next */
      cov_ne5j69el1().s[131]++;
      lastEventCount = this.stats.totalEventsSent;
      /* istanbul ignore next */
      cov_ne5j69el1().s[132]++;
      lastTimestamp = now;
    }, 10000); // Cada 10 segundos
  }
  /**
  * Crea evento de alerta
  */
  createAlertEvent(alert) {
    /* istanbul ignore next */
    cov_ne5j69el1().f[32]++;
    const event =
    /* istanbul ignore next */
    (cov_ne5j69el1().s[133]++, {
      type: "alert_created",
      data: alert,
      timestamp: Date.now(),
      id: this.generateEventId()
    });
    /* istanbul ignore next */
    cov_ne5j69el1().s[134]++;
    this.broadcastEvent(event);
  }
  /**
  * Crea evento de resolución de alerta
  */
  createAlertResolvedEvent(alertId) {
    /* istanbul ignore next */
    cov_ne5j69el1().f[33]++;
    const event =
    /* istanbul ignore next */
    (cov_ne5j69el1().s[135]++, {
      type: "alert_resolved",
      data: {
        alertId,
        resolvedAt: Date.now()
      },
      timestamp: Date.now(),
      id: this.generateEventId()
    });
    /* istanbul ignore next */
    cov_ne5j69el1().s[136]++;
    this.broadcastEvent(event);
  }
  /**
  * Crea evento de violación de presupuesto
  */
  createBudgetViolationEvent(violation) {
    /* istanbul ignore next */
    cov_ne5j69el1().f[34]++;
    const event =
    /* istanbul ignore next */
    (cov_ne5j69el1().s[137]++, {
      type: "budget_violation",
      data: violation,
      timestamp: Date.now(),
      id: this.generateEventId()
    });
    /* istanbul ignore next */
    cov_ne5j69el1().s[138]++;
    this.broadcastEvent(event);
  }
  /**
  * Crea evento de estado del sistema
  */
  createSystemStatusEvent(status) {
    /* istanbul ignore next */
    cov_ne5j69el1().f[35]++;
    const event =
    /* istanbul ignore next */
    (cov_ne5j69el1().s[139]++, {
      type: "system_status",
      data: status,
      timestamp: Date.now(),
      id: this.generateEventId()
    });
    /* istanbul ignore next */
    cov_ne5j69el1().s[140]++;
    this.broadcastEvent(event);
  }
  /**
  * Obtiene estadísticas de streaming
  */
  getStats() {
    /* istanbul ignore next */
    cov_ne5j69el1().f[36]++;
    cov_ne5j69el1().s[141]++;
    return {
      ...this.stats
    };
  }
  /**
  * Obtiene clientes activos
  */
  getActiveClients() {
    /* istanbul ignore next */
    cov_ne5j69el1().f[37]++;
    cov_ne5j69el1().s[142]++;
    return Array.from(this.clients.values()).map(client => {
      /* istanbul ignore next */
      cov_ne5j69el1().f[38]++;
      cov_ne5j69el1().s[143]++;
      return {
        id: client.id,
        subscriptions: client.config.subscriptions,
        lastActivity: client.lastActivity,
        queueSize: client.eventQueue.length
      };
    });
  }
  /**
  * Obtiene eventos recientes
  */
  getRecentEvents(limit =
  /* istanbul ignore next */
  (cov_ne5j69el1().b[25][0]++, 50)) {
    /* istanbul ignore next */
    cov_ne5j69el1().f[39]++;
    cov_ne5j69el1().s[144]++;
    return this.eventHistory.slice(-limit);
  }
  /**
  * Genera ID único para evento
  */
  generateEventId() {
    /* istanbul ignore next */
    cov_ne5j69el1().f[40]++;
    cov_ne5j69el1().s[145]++;
    return `event_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
  }
  /**
  * Destructor
  */
  destroy() {
    /* istanbul ignore next */
    cov_ne5j69el1().f[41]++;
    cov_ne5j69el1().s[146]++;
    if (this.heartbeatInterval) {
      /* istanbul ignore next */
      cov_ne5j69el1().b[26][0]++;
      cov_ne5j69el1().s[147]++;
      clearInterval(this.heartbeatInterval);
    } else
    /* istanbul ignore next */
    {
      cov_ne5j69el1().b[26][1]++;
    }
    cov_ne5j69el1().s[148]++;
    if (this.cleanupInterval) {
      /* istanbul ignore next */
      cov_ne5j69el1().b[27][0]++;
      cov_ne5j69el1().s[149]++;
      clearInterval(this.cleanupInterval);
    } else
    /* istanbul ignore next */
    {
      cov_ne5j69el1().b[27][1]++;
    }
    cov_ne5j69el1().s[150]++;
    if (this.statsInterval) {
      /* istanbul ignore next */
      cov_ne5j69el1().b[28][0]++;
      cov_ne5j69el1().s[151]++;
      clearInterval(this.statsInterval);
    } else
    /* istanbul ignore next */
    {
      cov_ne5j69el1().b[28][1]++;
    }
    // Desconectar todos los clientes
    cov_ne5j69el1().s[152]++;
    this.clients.clear();
  }
}
const realTimeMetricsStreaming =
/* istanbul ignore next */
(cov_ne5j69el1().s[153]++, RealTimeMetricsStreaming.getInstance());
const StreamingUtils =
/* istanbul ignore next */
(cov_ne5j69el1().s[154]++, {
  /**
  * Crea configuración de cliente básica
  */
  createBasicClientConfig(clientId, subscriptions =
  /* istanbul ignore next */
  (cov_ne5j69el1().b[29][0]++, ["metrics_update", "alert_created"])) {
    /* istanbul ignore next */
    cov_ne5j69el1().f[42]++;
    cov_ne5j69el1().s[155]++;
    return {
      clientId,
      subscriptions,
      rateLimit: DEFAULT_CONFIG.defaultRateLimit
    };
  },
  /**
  * Crea configuración de cliente para dashboard
  */
  createDashboardClientConfig(clientId) {
    /* istanbul ignore next */
    cov_ne5j69el1().f[43]++;
    cov_ne5j69el1().s[156]++;
    return {
      clientId,
      subscriptions: ["metrics_update", "alert_created", "alert_resolved", "budget_violation", "system_status"],
      rateLimit: {
        maxEventsPerSecond: 20,
        burstLimit: 100
      }
    };
  },
  /**
  * Crea configuración de cliente para alertas críticas
  */
  createCriticalAlertsClientConfig(clientId) {
    /* istanbul ignore next */
    cov_ne5j69el1().f[44]++;
    cov_ne5j69el1().s[157]++;
    return {
      clientId,
      subscriptions: ["alert_created", "budget_violation"],
      filters: {
        severities: ['high', 'critical']
      },
      rateLimit: {
        maxEventsPerSecond: 5,
        burstLimit: 20
      }
    };
  },
  /**
  * Obtiene resumen de streaming
  */
  getStreamingSummary() {
    /* istanbul ignore next */
    cov_ne5j69el1().f[45]++;
    const stats =
    /* istanbul ignore next */
    (cov_ne5j69el1().s[158]++, realTimeMetricsStreaming.getStats());
    const recentEvents =
    /* istanbul ignore next */
    (cov_ne5j69el1().s[159]++, realTimeMetricsStreaming.getRecentEvents(1));
    /* istanbul ignore next */
    cov_ne5j69el1().s[160]++;
    return {
      isActive: stats.activeClients > 0,
      clientCount: stats.activeClients,
      eventsPerSecond: stats.eventsPerSecond,
      lastEventTime: recentEvents.length > 0 ?
      /* istanbul ignore next */
      (cov_ne5j69el1().b[30][0]++, recentEvents[0].timestamp) :
      /* istanbul ignore next */
      (cov_ne5j69el1().b[30][1]++, 0)
    };
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,