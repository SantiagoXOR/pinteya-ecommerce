a80a947bd716e1adda7cd354d5f69614
// ===================================
// ADMIN TEST FLOWS DASHBOARD
// Dashboard para gestiÃ³n de flujos de testing automatizados
// ===================================
'use client';
"use strict";

/* istanbul ignore next */
function cov_t7ttuvxzs() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\admin\\test-flows\\page.tsx";
  var hash = "b6cee9791b811c3fdb95f01486226406593c899e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\admin\\test-flows\\page.tsx",
    statementMap: {
      "0": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 9,
          column: 3
        }
      },
      "1": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 15,
          column: 3
        }
      },
      "2": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 24
        }
      },
      "3": {
        start: {
          line: 16,
          column: 20
        },
        end: {
          line: 16,
          column: 48
        }
      },
      "4": {
        start: {
          line: 17,
          column: 29
        },
        end: {
          line: 17,
          column: 72
        }
      },
      "5": {
        start: {
          line: 18,
          column: 14
        },
        end: {
          line: 18,
          column: 52
        }
      },
      "6": {
        start: {
          line: 19,
          column: 15
        },
        end: {
          line: 19,
          column: 54
        }
      },
      "7": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 56
        }
      },
      "8": {
        start: {
          line: 21,
          column: 14
        },
        end: {
          line: 21,
          column: 52
        }
      },
      "9": {
        start: {
          line: 22,
          column: 21
        },
        end: {
          line: 22,
          column: 44
        }
      },
      "10": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 51
        }
      },
      "11": {
        start: {
          line: 24,
          column: 39
        },
        end: {
          line: 24,
          column: 51
        }
      },
      "12": {
        start: {
          line: 25,
          column: 28
        },
        end: {
          line: 25,
          column: 41
        }
      },
      "13": {
        start: {
          line: 26,
          column: 27
        },
        end: {
          line: 26,
          column: 40
        }
      },
      "14": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 29,
          column: 20
        }
      },
      "15": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 66
        }
      },
      "16": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 34,
          column: 5
        }
      },
      "17": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 19
        }
      },
      "18": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 39,
          column: 5
        }
      },
      "19": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 38,
          column: 10
        }
      },
      "20": {
        start: {
          line: 40,
          column: 16
        },
        end: {
          line: 40,
          column: 53
        }
      },
      "21": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 43,
          column: 5
        }
      },
      "22": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 30
        }
      },
      "23": {
        start: {
          line: 44,
          column: 17
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "24": {
        start: {
          line: 47,
          column: 32
        },
        end: {
          line: 47,
          column: 88
        }
      },
      "25": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 57,
          column: 5
        }
      },
      "26": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "27": {
        start: {
          line: 50,
          column: 23
        },
        end: {
          line: 50,
          column: 95
        }
      },
      "28": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 55,
          column: 13
        }
      },
      "29": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 52,
          column: 57
        }
      },
      "30": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 39
        }
      },
      "31": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 58,
          column: 25
        }
      },
      "32": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 61,
          column: 5
        }
      },
      "33": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 31
        }
      },
      "34": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 62,
          column: 18
        }
      },
      "35": {
        start: {
          line: 64,
          column: 27
        },
        end: {
          line: 664,
          column: 1
        }
      },
      "36": {
        start: {
          line: 65,
          column: 30
        },
        end: {
          line: 65,
          column: 54
        }
      },
      "37": {
        start: {
          line: 66,
          column: 40
        },
        end: {
          line: 66,
          column: 64
        }
      },
      "38": {
        start: {
          line: 67,
          column: 38
        },
        end: {
          line: 67,
          column: 64
        }
      },
      "39": {
        start: {
          line: 68,
          column: 44
        },
        end: {
          line: 68,
          column: 75
        }
      },
      "40": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 73,
          column: 11
        }
      },
      "41": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 20
        }
      },
      "42": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 25
        }
      },
      "43": {
        start: {
          line: 74,
          column: 22
        },
        end: {
          line: 84,
          column: 5
        }
      },
      "44": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 83,
          column: 9
        }
      },
      "45": {
        start: {
          line: 76,
          column: 29
        },
        end: {
          line: 76,
          column: 78
        }
      },
      "46": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 80,
          column: 13
        }
      },
      "47": {
        start: {
          line: 78,
          column: 29
        },
        end: {
          line: 78,
          column: 50
        }
      },
      "48": {
        start: {
          line: 79,
          column: 16
        },
        end: {
          line: 79,
          column: 42
        }
      },
      "49": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 59
        }
      },
      "50": {
        start: {
          line: 85,
          column: 27
        },
        end: {
          line: 97,
          column: 5
        }
      },
      "51": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 96,
          column: 9
        }
      },
      "52": {
        start: {
          line: 87,
          column: 29
        },
        end: {
          line: 87,
          column: 83
        }
      },
      "53": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 91,
          column: 13
        }
      },
      "54": {
        start: {
          line: 89,
          column: 29
        },
        end: {
          line: 89,
          column: 50
        }
      },
      "55": {
        start: {
          line: 90,
          column: 16
        },
        end: {
          line: 90,
          column: 47
        }
      },
      "56": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 64
        }
      },
      "57": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 95,
          column: 32
        }
      },
      "58": {
        start: {
          line: 98,
          column: 24
        },
        end: {
          line: 132,
          column: 5
        }
      },
      "59": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 99,
          column: 59
        }
      },
      "60": {
        start: {
          line: 99,
          column: 32
        },
        end: {
          line: 99,
          column: 57
        }
      },
      "61": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 131,
          column: 9
        }
      },
      "62": {
        start: {
          line: 101,
          column: 29
        },
        end: {
          line: 111,
          column: 14
        }
      },
      "63": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 120,
          column: 13
        }
      },
      "64": {
        start: {
          line: 113,
          column: 31
        },
        end: {
          line: 113,
          column: 52
        }
      },
      "65": {
        start: {
          line: 114,
          column: 16
        },
        end: {
          line: 114,
          column: 56
        }
      },
      "66": {
        start: {
          line: 116,
          column: 16
        },
        end: {
          line: 119,
          column: 25
        }
      },
      "67": {
        start: {
          line: 117,
          column: 20
        },
        end: {
          line: 117,
          column: 32
        }
      },
      "68": {
        start: {
          line: 118,
          column: 20
        },
        end: {
          line: 118,
          column: 37
        }
      },
      "69": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 122,
          column: 60
        }
      },
      "70": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 130,
          column: 21
        }
      },
      "71": {
        start: {
          line: 125,
          column: 16
        },
        end: {
          line: 129,
          column: 19
        }
      },
      "72": {
        start: {
          line: 126,
          column: 35
        },
        end: {
          line: 126,
          column: 48
        }
      },
      "73": {
        start: {
          line: 127,
          column: 20
        },
        end: {
          line: 127,
          column: 42
        }
      },
      "74": {
        start: {
          line: 128,
          column: 20
        },
        end: {
          line: 128,
          column: 34
        }
      },
      "75": {
        start: {
          line: 133,
          column: 26
        },
        end: {
          line: 152,
          column: 5
        }
      },
      "76": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 151,
          column: 9
        }
      },
      "77": {
        start: {
          line: 136,
          column: 16
        },
        end: {
          line: 138,
          column: 19
        }
      },
      "78": {
        start: {
          line: 140,
          column: 16
        },
        end: {
          line: 142,
          column: 19
        }
      },
      "79": {
        start: {
          line: 144,
          column: 16
        },
        end: {
          line: 146,
          column: 19
        }
      },
      "80": {
        start: {
          line: 148,
          column: 16
        },
        end: {
          line: 150,
          column: 19
        }
      },
      "81": {
        start: {
          line: 153,
          column: 27
        },
        end: {
          line: 164,
          column: 5
        }
      },
      "82": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 163,
          column: 9
        }
      },
      "83": {
        start: {
          line: 156,
          column: 16
        },
        end: {
          line: 156,
          column: 52
        }
      },
      "84": {
        start: {
          line: 158,
          column: 16
        },
        end: {
          line: 158,
          column: 48
        }
      },
      "85": {
        start: {
          line: 160,
          column: 16
        },
        end: {
          line: 160,
          column: 50
        }
      },
      "86": {
        start: {
          line: 162,
          column: 16
        },
        end: {
          line: 162,
          column: 50
        }
      },
      "87": {
        start: {
          line: 165,
          column: 27
        },
        end: {
          line: 173,
          column: 5
        }
      },
      "88": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 168,
          column: 9
        }
      },
      "89": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 167,
          column: 29
        }
      },
      "90": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 171,
          column: 9
        }
      },
      "91": {
        start: {
          line: 170,
          column: 12
        },
        end: {
          line: 170,
          column: 48
        }
      },
      "92": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 172,
          column: 45
        }
      },
      "93": {
        start: {
          line: 175,
          column: 22
        },
        end: {
          line: 206,
          column: 5
        }
      },
      "94": {
        start: {
          line: 207,
          column: 25
        },
        end: {
          line: 207,
          column: 61
        }
      },
      "95": {
        start: {
          line: 208,
          column: 4
        },
        end: {
          line: 663,
          column: 7
        }
      },
      "96": {
        start: {
          line: 238,
          column: 36
        },
        end: {
          line: 238,
          column: 48
        }
      },
      "97": {
        start: {
          line: 239,
          column: 36
        },
        end: {
          line: 239,
          column: 53
        }
      },
      "98": {
        start: {
          line: 308,
          column: 119
        },
        end: {
          line: 308,
          column: 138
        }
      },
      "99": {
        start: {
          line: 341,
          column: 88
        },
        end: {
          line: 341,
          column: 111
        }
      },
      "100": {
        start: {
          line: 372,
          column: 129
        },
        end: {
          line: 372,
          column: 152
        }
      },
      "101": {
        start: {
          line: 414,
          column: 77
        },
        end: {
          line: 534,
          column: 43
        }
      },
      "102": {
        start: {
          line: 510,
          column: 73
        },
        end: {
          line: 510,
          column: 93
        }
      },
      "103": {
        start: {
          line: 665,
          column: 17
        },
        end: {
          line: 665,
          column: 35
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 9
          },
          end: {
            line: 12,
            column: 10
          }
        },
        loc: {
          start: {
            line: 12,
            column: 20
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 23,
            column: 9
          },
          end: {
            line: 23,
            column: 33
          }
        },
        loc: {
          start: {
            line: 23,
            column: 47
          },
          end: {
            line: 30,
            column: 1
          }
        },
        line: 23
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 27,
            column: 39
          },
          end: {
            line: 27,
            column: 40
          }
        },
        loc: {
          start: {
            line: 27,
            column: 61
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 31,
            column: 9
          },
          end: {
            line: 31,
            column: 34
          }
        },
        loc: {
          start: {
            line: 31,
            column: 53
          },
          end: {
            line: 63,
            column: 1
          }
        },
        line: 31
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 64,
            column: 27
          },
          end: {
            line: 64,
            column: 28
          }
        },
        loc: {
          start: {
            line: 64,
            column: 31
          },
          end: {
            line: 664,
            column: 1
          }
        },
        line: 64
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 70,
            column: 26
          },
          end: {
            line: 70,
            column: 27
          }
        },
        loc: {
          start: {
            line: 70,
            column: 30
          },
          end: {
            line: 73,
            column: 5
          }
        },
        line: 70
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 74,
            column: 22
          },
          end: {
            line: 74,
            column: 23
          }
        },
        loc: {
          start: {
            line: 74,
            column: 32
          },
          end: {
            line: 84,
            column: 5
          }
        },
        line: 74
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 85,
            column: 27
          },
          end: {
            line: 85,
            column: 28
          }
        },
        loc: {
          start: {
            line: 85,
            column: 37
          },
          end: {
            line: 97,
            column: 5
          }
        },
        line: 85
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 98,
            column: 24
          },
          end: {
            line: 98,
            column: 25
          }
        },
        loc: {
          start: {
            line: 98,
            column: 40
          },
          end: {
            line: 132,
            column: 5
          }
        },
        line: 98
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 99,
            column: 24
          },
          end: {
            line: 99,
            column: 25
          }
        },
        loc: {
          start: {
            line: 99,
            column: 32
          },
          end: {
            line: 99,
            column: 57
          }
        },
        line: 99
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 116,
            column: 27
          },
          end: {
            line: 116,
            column: 28
          }
        },
        loc: {
          start: {
            line: 116,
            column: 31
          },
          end: {
            line: 119,
            column: 17
          }
        },
        line: 116
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 124,
            column: 23
          },
          end: {
            line: 124,
            column: 24
          }
        },
        loc: {
          start: {
            line: 124,
            column: 27
          },
          end: {
            line: 130,
            column: 13
          }
        },
        line: 124
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 125,
            column: 32
          },
          end: {
            line: 125,
            column: 33
          }
        },
        loc: {
          start: {
            line: 125,
            column: 40
          },
          end: {
            line: 129,
            column: 17
          }
        },
        line: 125
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 133,
            column: 26
          },
          end: {
            line: 133,
            column: 27
          }
        },
        loc: {
          start: {
            line: 133,
            column: 36
          },
          end: {
            line: 152,
            column: 5
          }
        },
        line: 133
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 153,
            column: 27
          },
          end: {
            line: 153,
            column: 28
          }
        },
        loc: {
          start: {
            line: 153,
            column: 37
          },
          end: {
            line: 164,
            column: 5
          }
        },
        line: 153
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 165,
            column: 27
          },
          end: {
            line: 165,
            column: 28
          }
        },
        loc: {
          start: {
            line: 165,
            column: 33
          },
          end: {
            line: 173,
            column: 5
          }
        },
        line: 165
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 237,
            column: 41
          },
          end: {
            line: 237,
            column: 42
          }
        },
        loc: {
          start: {
            line: 237,
            column: 45
          },
          end: {
            line: 240,
            column: 33
          }
        },
        line: 237
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 308,
            column: 109
          },
          end: {
            line: 308,
            column: 110
          }
        },
        loc: {
          start: {
            line: 308,
            column: 119
          },
          end: {
            line: 308,
            column: 138
          }
        },
        line: 308
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 341,
            column: 78
          },
          end: {
            line: 341,
            column: 79
          }
        },
        loc: {
          start: {
            line: 341,
            column: 88
          },
          end: {
            line: 341,
            column: 111
          }
        },
        line: 341
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 372,
            column: 119
          },
          end: {
            line: 372,
            column: 120
          }
        },
        loc: {
          start: {
            line: 372,
            column: 129
          },
          end: {
            line: 372,
            column: 152
          }
        },
        line: 372
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 414,
            column: 55
          },
          end: {
            line: 414,
            column: 56
          }
        },
        loc: {
          start: {
            line: 414,
            column: 77
          },
          end: {
            line: 534,
            column: 43
          }
        },
        line: 414
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 510,
            column: 69
          },
          end: {
            line: 510,
            column: 70
          }
        },
        loc: {
          start: {
            line: 510,
            column: 73
          },
          end: {
            line: 510,
            column: 93
          }
        },
        line: 510
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "1": {
        loc: {
          start: {
            line: 28,
            column: 15
          },
          end: {
            line: 28,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 28,
            column: 29
          },
          end: {
            line: 28,
            column: 45
          }
        }, {
          start: {
            line: 28,
            column: 48
          },
          end: {
            line: 28,
            column: 65
          }
        }],
        line: 28
      },
      "2": {
        loc: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "3": {
        loc: {
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 32,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 32,
            column: 20
          }
        }, {
          start: {
            line: 32,
            column: 24
          },
          end: {
            line: 32,
            column: 27
          }
        }, {
          start: {
            line: 32,
            column: 31
          },
          end: {
            line: 32,
            column: 45
          }
        }],
        line: 32
      },
      "4": {
        loc: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "5": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 20
          }
        }, {
          start: {
            line: 35,
            column: 24
          },
          end: {
            line: 35,
            column: 47
          }
        }, {
          start: {
            line: 35,
            column: 51
          },
          end: {
            line: 35,
            column: 76
          }
        }],
        line: 35
      },
      "6": {
        loc: {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "7": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 41,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 41,
            column: 13
          }
        }, {
          start: {
            line: 41,
            column: 17
          },
          end: {
            line: 41,
            column: 31
          }
        }],
        line: 41
      },
      "8": {
        loc: {
          start: {
            line: 47,
            column: 32
          },
          end: {
            line: 47,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 32
          },
          end: {
            line: 47,
            column: 53
          }
        }, {
          start: {
            line: 47,
            column: 57
          },
          end: {
            line: 47,
            column: 88
          }
        }],
        line: 47
      },
      "9": {
        loc: {
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "10": {
        loc: {
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 49,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 49,
            column: 29
          }
        }, {
          start: {
            line: 49,
            column: 33
          },
          end: {
            line: 49,
            column: 79
          }
        }],
        line: 49
      },
      "11": {
        loc: {
          start: {
            line: 50,
            column: 23
          },
          end: {
            line: 50,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 50,
            column: 47
          },
          end: {
            line: 50,
            column: 88
          }
        }, {
          start: {
            line: 50,
            column: 91
          },
          end: {
            line: 50,
            column: 95
          }
        }],
        line: 50
      },
      "12": {
        loc: {
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 55,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 55,
            column: 13
          }
        }, {
          start: {
            line: 53,
            column: 19
          },
          end: {
            line: 55,
            column: 13
          }
        }],
        line: 51
      },
      "13": {
        loc: {
          start: {
            line: 51,
            column: 16
          },
          end: {
            line: 51,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 16
          },
          end: {
            line: 51,
            column: 20
          }
        }, {
          start: {
            line: 51,
            column: 25
          },
          end: {
            line: 51,
            column: 33
          }
        }, {
          start: {
            line: 51,
            column: 37
          },
          end: {
            line: 51,
            column: 45
          }
        }],
        line: 51
      },
      "14": {
        loc: {
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "15": {
        loc: {
          start: {
            line: 77,
            column: 12
          },
          end: {
            line: 80,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 12
          },
          end: {
            line: 80,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "16": {
        loc: {
          start: {
            line: 79,
            column: 25
          },
          end: {
            line: 79,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 79,
            column: 25
          },
          end: {
            line: 79,
            column: 34
          }
        }, {
          start: {
            line: 79,
            column: 38
          },
          end: {
            line: 79,
            column: 40
          }
        }],
        line: 79
      },
      "17": {
        loc: {
          start: {
            line: 88,
            column: 12
          },
          end: {
            line: 91,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 12
          },
          end: {
            line: 91,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 88
      },
      "18": {
        loc: {
          start: {
            line: 90,
            column: 30
          },
          end: {
            line: 90,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 90,
            column: 30
          },
          end: {
            line: 90,
            column: 39
          }
        }, {
          start: {
            line: 90,
            column: 43
          },
          end: {
            line: 90,
            column: 45
          }
        }],
        line: 90
      },
      "19": {
        loc: {
          start: {
            line: 112,
            column: 12
          },
          end: {
            line: 120,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 112,
            column: 12
          },
          end: {
            line: 120,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 112
      },
      "20": {
        loc: {
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 151,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 135,
            column: 12
          },
          end: {
            line: 138,
            column: 19
          }
        }, {
          start: {
            line: 139,
            column: 12
          },
          end: {
            line: 142,
            column: 19
          }
        }, {
          start: {
            line: 143,
            column: 12
          },
          end: {
            line: 146,
            column: 19
          }
        }, {
          start: {
            line: 147,
            column: 12
          },
          end: {
            line: 150,
            column: 19
          }
        }],
        line: 134
      },
      "21": {
        loc: {
          start: {
            line: 154,
            column: 8
          },
          end: {
            line: 163,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 155,
            column: 12
          },
          end: {
            line: 156,
            column: 52
          }
        }, {
          start: {
            line: 157,
            column: 12
          },
          end: {
            line: 158,
            column: 48
          }
        }, {
          start: {
            line: 159,
            column: 12
          },
          end: {
            line: 160,
            column: 50
          }
        }, {
          start: {
            line: 161,
            column: 12
          },
          end: {
            line: 162,
            column: 50
          }
        }],
        line: 154
      },
      "22": {
        loc: {
          start: {
            line: 166,
            column: 8
          },
          end: {
            line: 168,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 166,
            column: 8
          },
          end: {
            line: 168,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 166
      },
      "23": {
        loc: {
          start: {
            line: 169,
            column: 8
          },
          end: {
            line: 171,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 169,
            column: 8
          },
          end: {
            line: 171,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 169
      },
      "24": {
        loc: {
          start: {
            line: 207,
            column: 25
          },
          end: {
            line: 207,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 207,
            column: 44
          },
          end: {
            line: 207,
            column: 49
          }
        }, {
          start: {
            line: 207,
            column: 52
          },
          end: {
            line: 207,
            column: 61
          }
        }],
        line: 207
      },
      "25": {
        loc: {
          start: {
            line: 308,
            column: 52
          },
          end: {
            line: 308,
            column: 169
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 308,
            column: 78
          },
          end: {
            line: 308,
            column: 165
          }
        }, {
          start: {
            line: 308,
            column: 168
          },
          end: {
            line: 308,
            column: 169
          }
        }],
        line: 308
      },
      "26": {
        loc: {
          start: {
            line: 372,
            column: 58
          },
          end: {
            line: 372,
            column: 186
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 372,
            column: 84
          },
          end: {
            line: 372,
            column: 179
          }
        }, {
          start: {
            line: 372,
            column: 182
          },
          end: {
            line: 372,
            column: 186
          }
        }],
        line: 372
      },
      "27": {
        loc: {
          start: {
            line: 372,
            column: 136
          },
          end: {
            line: 372,
            column: 151
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 372,
            column: 136
          },
          end: {
            line: 372,
            column: 146
          }
        }, {
          start: {
            line: 372,
            column: 150
          },
          end: {
            line: 372,
            column: 151
          }
        }],
        line: 372
      },
      "28": {
        loc: {
          start: {
            line: 488,
            column: 78
          },
          end: {
            line: 488,
            column: 132
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 488,
            column: 93
          },
          end: {
            line: 488,
            column: 122
          }
        }, {
          start: {
            line: 488,
            column: 125
          },
          end: {
            line: 488,
            column: 132
          }
        }],
        line: 488
      },
      "29": {
        loc: {
          start: {
            line: 500,
            column: 78
          },
          end: {
            line: 500,
            column: 131
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 500,
            column: 94
          },
          end: {
            line: 500,
            column: 123
          }
        }, {
          start: {
            line: 500,
            column: 126
          },
          end: {
            line: 500,
            column: 131
          }
        }],
        line: 500
      },
      "30": {
        loc: {
          start: {
            line: 514,
            column: 64
          },
          end: {
            line: 518,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 514,
            column: 106
          },
          end: {
            line: 516,
            column: 66
          }
        }, {
          start: {
            line: 516,
            column: 83
          },
          end: {
            line: 518,
            column: 66
          }
        }],
        line: 514
      },
      "31": {
        loc: {
          start: {
            line: 519,
            column: 64
          },
          end: {
            line: 519,
            column: 120
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 519,
            column: 92
          },
          end: {
            line: 519,
            column: 107
          }
        }, {
          start: {
            line: 519,
            column: 110
          },
          end: {
            line: 519,
            column: 120
          }
        }],
        line: 519
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0, 0, 0],
      "21": [0, 0, 0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\admin\\test-flows\\page.tsx"],
      sourcesContent: ["// ===================================\r\n// ADMIN TEST FLOWS DASHBOARD\r\n// Dashboard para gesti\xF3n de flujos de testing automatizados\r\n// ===================================\r\n\r\n'use client';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport { \r\n  GitBranch, \r\n  Play, \r\n  Clock, \r\n  CheckCircle, \r\n  XCircle,\r\n  RefreshCw,\r\n  Settings,\r\n  TrendingUp,\r\n  Activity,\r\n  Zap,\r\n  AlertTriangle\r\n} from 'lucide-react';\r\n\r\ninterface TestFlow {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  status: 'idle' | 'running' | 'success' | 'failed';\r\n  lastRun?: Date;\r\n  duration?: number;\r\n  successRate: number;\r\n  totalExecutions: number;\r\n}\r\n\r\ninterface FlowExecution {\r\n  id: string;\r\n  flowId: string;\r\n  status: 'running' | 'success' | 'failed' | 'cancelled';\r\n  startTime: Date;\r\n  endTime?: Date;\r\n  duration?: number;\r\n  trigger: string;\r\n  steps: any[];\r\n}\r\n\r\nconst TestFlowsDashboard = () => {\r\n  const [flows, setFlows] = useState<TestFlow[]>([]);\r\n  const [executions, setExecutions] = useState<FlowExecution[]>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [runningFlows, setRunningFlows] = useState<Set<string>>(new Set());\r\n\r\n  // Cargar datos iniciales\r\n  useEffect(() => {\r\n    loadFlows();\r\n    loadExecutions();\r\n  }, []);\r\n\r\n  const loadFlows = async () => {\r\n    try {\r\n      const response = await fetch('/api/admin/test-flows?action=flows');\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setFlows(data.data || []);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error cargando flujos:', error);\r\n    }\r\n  };\r\n\r\n  const loadExecutions = async () => {\r\n    try {\r\n      const response = await fetch('/api/admin/test-flows?action=executions');\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setExecutions(data.data || []);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error cargando ejecuciones:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const executeFlow = async (flowId: string) => {\r\n    setRunningFlows(prev => new Set(prev).add(flowId));\r\n    \r\n    try {\r\n      const response = await fetch('/api/admin/test-flows', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          action: 'execute',\r\n          flowId,\r\n          trigger: 'manual'\r\n        })\r\n      });\r\n\r\n      if (response.ok) {\r\n        const result = await response.json();\r\n        console.log('Flujo ejecutado:', result);\r\n        \r\n        // Actualizar datos despu\xE9s de un delay\r\n        setTimeout(() => {\r\n          loadFlows();\r\n          loadExecutions();\r\n        }, 2000);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error ejecutando flujo:', error);\r\n    } finally {\r\n      setTimeout(() => {\r\n        setRunningFlows(prev => {\r\n          const newSet = new Set(prev);\r\n          newSet.delete(flowId);\r\n          return newSet;\r\n        });\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n  const getStatusIcon = (status: string) => {\r\n    switch (status) {\r\n      case 'success': return <CheckCircle className=\"w-4 h-4 text-green-600\" />;\r\n      case 'failed': return <XCircle className=\"w-4 h-4 text-red-600\" />;\r\n      case 'running': return <RefreshCw className=\"w-4 h-4 text-blue-600 animate-spin\" />;\r\n      default: return <Clock className=\"w-4 h-4 text-gray-600\" />;\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'success': return 'text-green-600 bg-green-50';\r\n      case 'failed': return 'text-red-600 bg-red-50';\r\n      case 'running': return 'text-blue-600 bg-blue-50';\r\n      default: return 'text-gray-600 bg-gray-50';\r\n    }\r\n  };\r\n\r\n  const formatDuration = (ms: number) => {\r\n    if (ms < 1000) {return `${ms}ms`;}\r\n    if (ms < 60000) {return `${(ms / 1000).toFixed(1)}s`;}\r\n    return `${(ms / 60000).toFixed(1)}m`;\r\n  };\r\n\r\n  // Datos simulados para demostraci\xF3n\r\n  const mockFlows: TestFlow[] = [\r\n    {\r\n      id: 'ci-cd-complete',\r\n      name: 'CI/CD Completo',\r\n      description: 'Flujo completo de integraci\xF3n continua y despliegue',\r\n      status: 'idle',\r\n      lastRun: new Date(Date.now() - 3600000),\r\n      duration: 180000,\r\n      successRate: 92.5,\r\n      totalExecutions: 47\r\n    },\r\n    {\r\n      id: 'quick-test',\r\n      name: 'Testing R\xE1pido',\r\n      description: 'Flujo r\xE1pido para desarrollo',\r\n      status: 'success',\r\n      lastRun: new Date(Date.now() - 1800000),\r\n      duration: 45000,\r\n      successRate: 98.2,\r\n      totalExecutions: 156\r\n    },\r\n    {\r\n      id: 'performance-test',\r\n      name: 'Testing de Performance',\r\n      description: 'Flujo especializado en performance y Core Web Vitals',\r\n      status: 'idle',\r\n      lastRun: new Date(Date.now() - 86400000),\r\n      duration: 240000,\r\n      successRate: 87.3,\r\n      totalExecutions: 23\r\n    }\r\n  ];\r\n\r\n  const displayFlows = flows.length > 0 ? flows : mockFlows;\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-6 space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold text-gray-900\">Test Flows Dashboard</h1>\r\n          <p className=\"text-gray-600 mt-1\">\r\n            Gesti\xF3n de flujos automatizados de CI/CD y testing\r\n          </p>\r\n        </div>\r\n        <div className=\"flex items-center gap-4\">\r\n          <Badge variant=\"outline\">\r\n            {displayFlows.length} flujos configurados\r\n          </Badge>\r\n          <Button \r\n            onClick={() => {\r\n              loadFlows();\r\n              loadExecutions();\r\n            }}\r\n            variant=\"outline\" \r\n            size=\"sm\"\r\n          >\r\n            <RefreshCw className=\"w-4 h-4 mr-2\" />\r\n            Actualizar\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Summary Cards */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n        <Card>\r\n          <CardHeader className=\"pb-3\">\r\n            <CardTitle className=\"text-sm font-medium text-gray-600\">Flujos Activos</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"text-2xl font-bold\">{displayFlows.length}</div>\r\n              <GitBranch className=\"w-8 h-8 text-blue-500\" />\r\n            </div>\r\n            <div className=\"text-xs text-gray-500 mt-1\">\r\n              {runningFlows.size} ejecut\xE1ndose\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardHeader className=\"pb-3\">\r\n            <CardTitle className=\"text-sm font-medium text-gray-600\">Success Rate</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"text-2xl font-bold text-green-600\">\r\n                {displayFlows.length > 0 ? \r\n                  Math.round(displayFlows.reduce((acc, f) => acc + f.successRate, 0) / displayFlows.length) : 0\r\n                }%\r\n              </div>\r\n              <TrendingUp className=\"w-8 h-8 text-green-500\" />\r\n            </div>\r\n            <div className=\"text-xs text-gray-500 mt-1\">\r\n              Promedio general\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardHeader className=\"pb-3\">\r\n            <CardTitle className=\"text-sm font-medium text-gray-600\">Ejecuciones Totales</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"text-2xl font-bold\">\r\n                {displayFlows.reduce((acc, f) => acc + f.totalExecutions, 0)}\r\n              </div>\r\n              <Activity className=\"w-8 h-8 text-purple-500\" />\r\n            </div>\r\n            <div className=\"text-xs text-gray-500 mt-1\">\r\n              Todas las ejecuciones\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardHeader className=\"pb-3\">\r\n            <CardTitle className=\"text-sm font-medium text-gray-600\">Tiempo Promedio</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"text-2xl font-bold\">\r\n                {displayFlows.length > 0 ? \r\n                  formatDuration(displayFlows.reduce((acc, f) => acc + (f.duration || 0), 0) / displayFlows.length) : '0s'\r\n                }\r\n              </div>\r\n              <Zap className=\"w-8 h-8 text-yellow-500\" />\r\n            </div>\r\n            <div className=\"text-xs text-gray-500 mt-1\">\r\n              Por ejecuci\xF3n\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Flows List */}\r\n      <Tabs defaultValue=\"flows\" className=\"space-y-6\">\r\n        <TabsList>\r\n          <TabsTrigger value=\"flows\">Flujos Disponibles</TabsTrigger>\r\n          <TabsTrigger value=\"executions\">Ejecuciones Recientes</TabsTrigger>\r\n          <TabsTrigger value=\"config\">Configuraci\xF3n</TabsTrigger>\r\n        </TabsList>\r\n\r\n        <TabsContent value=\"flows\" className=\"space-y-4\">\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n            {displayFlows.map((flow) => (\r\n              <Card key={flow.id}>\r\n                <CardHeader>\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <CardTitle className=\"flex items-center gap-2\">\r\n                      <GitBranch className=\"w-5 h-5\" />\r\n                      {flow.name}\r\n                    </CardTitle>\r\n                    <Badge className={getStatusColor(flow.status)}>\r\n                      {getStatusIcon(flow.status)}\r\n                      <span className=\"ml-1 capitalize\">{flow.status}</span>\r\n                    </Badge>\r\n                  </div>\r\n                  <CardDescription>{flow.description}</CardDescription>\r\n                </CardHeader>\r\n                <CardContent className=\"space-y-4\">\r\n                  <div className=\"grid grid-cols-2 gap-4 text-sm\">\r\n                    <div>\r\n                      <div className=\"text-gray-500\">Success Rate</div>\r\n                      <div className=\"font-medium text-green-600\">{flow.successRate}%</div>\r\n                    </div>\r\n                    <div>\r\n                      <div className=\"text-gray-500\">Ejecuciones</div>\r\n                      <div className=\"font-medium\">{flow.totalExecutions}</div>\r\n                    </div>\r\n                    <div>\r\n                      <div className=\"text-gray-500\">\xDAltima Ejecuci\xF3n</div>\r\n                      <div className=\"font-medium\">\r\n                        {flow.lastRun ? flow.lastRun.toLocaleString() : 'Nunca'}\r\n                      </div>\r\n                    </div>\r\n                    <div>\r\n                      <div className=\"text-gray-500\">Duraci\xF3n</div>\r\n                      <div className=\"font-medium\">\r\n                        {flow.duration ? formatDuration(flow.duration) : 'N/A'}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div className=\"flex items-center gap-2\">\r\n                    <Button \r\n                      onClick={() => executeFlow(flow.id)}\r\n                      disabled={runningFlows.has(flow.id)}\r\n                      className=\"flex-1\"\r\n                    >\r\n                      {runningFlows.has(flow.id) ? (\r\n                        <RefreshCw className=\"w-4 h-4 mr-2 animate-spin\" />\r\n                      ) : (\r\n                        <Play className=\"w-4 h-4 mr-2\" />\r\n                      )}\r\n                      {runningFlows.has(flow.id) ? 'Ejecutando...' : 'Ejecutar'}\r\n                    </Button>\r\n                    <Button variant=\"outline\" size=\"sm\">\r\n                      <Settings className=\"w-4 h-4\" />\r\n                    </Button>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            ))}\r\n          </div>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"executions\" className=\"space-y-4\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Ejecuciones Recientes</CardTitle>\r\n              <CardDescription>\r\n                Historial de ejecuciones de flujos de testing\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"text-center text-gray-500 py-8\">\r\n                <Activity className=\"w-12 h-12 mx-auto mb-4 opacity-50\" />\r\n                <p>No hay ejecuciones recientes</p>\r\n                <p className=\"text-sm\">Ejecuta un flujo para ver el historial aqu\xED</p>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"config\" className=\"space-y-4\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Configuraci\xF3n de Flujos</CardTitle>\r\n              <CardDescription>\r\n                Configuraci\xF3n avanzada y programaci\xF3n de flujos\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-4\">\r\n                <div className=\"flex items-center justify-between p-4 border rounded-lg\">\r\n                  <div>\r\n                    <div className=\"font-medium\">Ejecuci\xF3n Autom\xE1tica</div>\r\n                    <div className=\"text-sm text-gray-500\">\r\n                      Ejecutar flujos autom\xE1ticamente en eventos espec\xEDficos\r\n                    </div>\r\n                  </div>\r\n                  <Badge variant=\"secondary\">Pr\xF3ximamente</Badge>\r\n                </div>\r\n                \r\n                <div className=\"flex items-center justify-between p-4 border rounded-lg\">\r\n                  <div>\r\n                    <div className=\"font-medium\">Notificaciones</div>\r\n                    <div className=\"text-sm text-gray-500\">\r\n                      Configurar alertas por email y Slack\r\n                    </div>\r\n                  </div>\r\n                  <Badge variant=\"secondary\">Pr\xF3ximamente</Badge>\r\n                </div>\r\n                \r\n                <div className=\"flex items-center justify-between p-4 border rounded-lg\">\r\n                  <div>\r\n                    <div className=\"font-medium\">Programaci\xF3n</div>\r\n                    <div className=\"text-sm text-gray-500\">\r\n                      Programar ejecuciones con cron jobs\r\n                    </div>\r\n                  </div>\r\n                  <Badge variant=\"secondary\">Pr\xF3ximamente</Badge>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TestFlowsDashboard;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["TestFlowsDashboard", "flows", "setFlows", "useState", "executions", "setExecutions", "isLoading", "setIsLoading", "runningFlows", "setRunningFlows", "Set", "useEffect", "loadFlows", "loadExecutions", "response", "fetch", "ok", "data", "json", "error", "console", "executeFlow", "flowId", "prev", "add", "method", "headers", "body", "JSON", "stringify", "action", "trigger", "result", "log", "setTimeout", "newSet", "delete", "getStatusIcon", "status", "CheckCircle", "className", "XCircle", "RefreshCw", "Clock", "getStatusColor", "formatDuration", "ms", "toFixed", "mockFlows", "id", "name", "description", "lastRun", "Date", "now", "duration", "successRate", "totalExecutions", "displayFlows", "length", "div", "h1", "p", "Badge", "variant", "Button", "onClick", "size", "Card", "CardHeader", "CardTitle", "CardContent", "GitBranch", "Math", "round", "reduce", "acc", "f", "TrendingUp", "Activity", "Zap", "Tabs", "defaultValue", "TabsList", "TabsTrigger", "value", "TabsContent", "map", "flow", "span", "CardDescription", "toLocaleString", "disabled", "has", "Play", "Settings"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b6cee9791b811c3fdb95f01486226406593c899e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_t7ttuvxzs = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_t7ttuvxzs();
cov_t7ttuvxzs().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_t7ttuvxzs().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_t7ttuvxzs().f[0]++;
    cov_t7ttuvxzs().s[2]++;
    return _default;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_t7ttuvxzs().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_t7ttuvxzs().s[4]++, _interop_require_wildcard(require("react")));
const _card =
/* istanbul ignore next */
(cov_t7ttuvxzs().s[5]++, require("../../../components/ui/card"));
const _badge =
/* istanbul ignore next */
(cov_t7ttuvxzs().s[6]++, require("../../../components/ui/badge"));
const _button =
/* istanbul ignore next */
(cov_t7ttuvxzs().s[7]++, require("../../../components/ui/button"));
const _tabs =
/* istanbul ignore next */
(cov_t7ttuvxzs().s[8]++, require("../../../components/ui/tabs"));
const _lucidereact =
/* istanbul ignore next */
(cov_t7ttuvxzs().s[9]++, require("lucide-react"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_t7ttuvxzs().f[1]++;
  cov_t7ttuvxzs().s[10]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_t7ttuvxzs().b[0][0]++;
    cov_t7ttuvxzs().s[11]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_t7ttuvxzs().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_t7ttuvxzs().s[12]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_t7ttuvxzs().s[13]++, new WeakMap());
  /* istanbul ignore next */
  cov_t7ttuvxzs().s[14]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_t7ttuvxzs().f[2]++;
    cov_t7ttuvxzs().s[15]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_t7ttuvxzs().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_t7ttuvxzs().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_t7ttuvxzs().f[3]++;
  cov_t7ttuvxzs().s[16]++;
  if (
  /* istanbul ignore next */
  (cov_t7ttuvxzs().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_t7ttuvxzs().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_t7ttuvxzs().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_t7ttuvxzs().b[2][0]++;
    cov_t7ttuvxzs().s[17]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_t7ttuvxzs().b[2][1]++;
  }
  cov_t7ttuvxzs().s[18]++;
  if (
  /* istanbul ignore next */
  (cov_t7ttuvxzs().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_t7ttuvxzs().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_t7ttuvxzs().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_t7ttuvxzs().b[4][0]++;
    cov_t7ttuvxzs().s[19]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_t7ttuvxzs().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_t7ttuvxzs().s[20]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_t7ttuvxzs().s[21]++;
  if (
  /* istanbul ignore next */
  (cov_t7ttuvxzs().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_t7ttuvxzs().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_t7ttuvxzs().b[6][0]++;
    cov_t7ttuvxzs().s[22]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_t7ttuvxzs().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_t7ttuvxzs().s[23]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_t7ttuvxzs().s[24]++,
  /* istanbul ignore next */
  (cov_t7ttuvxzs().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_t7ttuvxzs().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_t7ttuvxzs().s[25]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_t7ttuvxzs().s[26]++;
    if (
    /* istanbul ignore next */
    (cov_t7ttuvxzs().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_t7ttuvxzs().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_t7ttuvxzs().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_t7ttuvxzs().s[27]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_t7ttuvxzs().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_t7ttuvxzs().b[11][1]++, null));
      /* istanbul ignore next */
      cov_t7ttuvxzs().s[28]++;
      if (
      /* istanbul ignore next */
      (cov_t7ttuvxzs().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_t7ttuvxzs().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_t7ttuvxzs().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_t7ttuvxzs().b[12][0]++;
        cov_t7ttuvxzs().s[29]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_t7ttuvxzs().b[12][1]++;
        cov_t7ttuvxzs().s[30]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_t7ttuvxzs().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_t7ttuvxzs().s[31]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_t7ttuvxzs().s[32]++;
  if (cache) {
    /* istanbul ignore next */
    cov_t7ttuvxzs().b[14][0]++;
    cov_t7ttuvxzs().s[33]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_t7ttuvxzs().b[14][1]++;
  }
  cov_t7ttuvxzs().s[34]++;
  return newObj;
}
/* istanbul ignore next */
cov_t7ttuvxzs().s[35]++;
const TestFlowsDashboard = () => {
  /* istanbul ignore next */
  cov_t7ttuvxzs().f[4]++;
  const [flows, setFlows] =
  /* istanbul ignore next */
  (cov_t7ttuvxzs().s[36]++, (0, _react.useState)([]));
  const [executions, setExecutions] =
  /* istanbul ignore next */
  (cov_t7ttuvxzs().s[37]++, (0, _react.useState)([]));
  const [isLoading, setIsLoading] =
  /* istanbul ignore next */
  (cov_t7ttuvxzs().s[38]++, (0, _react.useState)(true));
  const [runningFlows, setRunningFlows] =
  /* istanbul ignore next */
  (cov_t7ttuvxzs().s[39]++, (0, _react.useState)(new Set()));
  // Cargar datos iniciales
  /* istanbul ignore next */
  cov_t7ttuvxzs().s[40]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_t7ttuvxzs().f[5]++;
    cov_t7ttuvxzs().s[41]++;
    loadFlows();
    /* istanbul ignore next */
    cov_t7ttuvxzs().s[42]++;
    loadExecutions();
  }, []);
  /* istanbul ignore next */
  cov_t7ttuvxzs().s[43]++;
  const loadFlows = async () => {
    /* istanbul ignore next */
    cov_t7ttuvxzs().f[6]++;
    cov_t7ttuvxzs().s[44]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_t7ttuvxzs().s[45]++, await fetch('/api/admin/test-flows?action=flows'));
      /* istanbul ignore next */
      cov_t7ttuvxzs().s[46]++;
      if (response.ok) {
        /* istanbul ignore next */
        cov_t7ttuvxzs().b[15][0]++;
        const data =
        /* istanbul ignore next */
        (cov_t7ttuvxzs().s[47]++, await response.json());
        /* istanbul ignore next */
        cov_t7ttuvxzs().s[48]++;
        setFlows(
        /* istanbul ignore next */
        (cov_t7ttuvxzs().b[16][0]++, data.data) ||
        /* istanbul ignore next */
        (cov_t7ttuvxzs().b[16][1]++, []));
      } else
      /* istanbul ignore next */
      {
        cov_t7ttuvxzs().b[15][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_t7ttuvxzs().s[49]++;
      console.error('Error cargando flujos:', error);
    }
  };
  /* istanbul ignore next */
  cov_t7ttuvxzs().s[50]++;
  const loadExecutions = async () => {
    /* istanbul ignore next */
    cov_t7ttuvxzs().f[7]++;
    cov_t7ttuvxzs().s[51]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_t7ttuvxzs().s[52]++, await fetch('/api/admin/test-flows?action=executions'));
      /* istanbul ignore next */
      cov_t7ttuvxzs().s[53]++;
      if (response.ok) {
        /* istanbul ignore next */
        cov_t7ttuvxzs().b[17][0]++;
        const data =
        /* istanbul ignore next */
        (cov_t7ttuvxzs().s[54]++, await response.json());
        /* istanbul ignore next */
        cov_t7ttuvxzs().s[55]++;
        setExecutions(
        /* istanbul ignore next */
        (cov_t7ttuvxzs().b[18][0]++, data.data) ||
        /* istanbul ignore next */
        (cov_t7ttuvxzs().b[18][1]++, []));
      } else
      /* istanbul ignore next */
      {
        cov_t7ttuvxzs().b[17][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_t7ttuvxzs().s[56]++;
      console.error('Error cargando ejecuciones:', error);
    } finally {
      /* istanbul ignore next */
      cov_t7ttuvxzs().s[57]++;
      setIsLoading(false);
    }
  };
  /* istanbul ignore next */
  cov_t7ttuvxzs().s[58]++;
  const executeFlow = async flowId => {
    /* istanbul ignore next */
    cov_t7ttuvxzs().f[8]++;
    cov_t7ttuvxzs().s[59]++;
    setRunningFlows(prev => {
      /* istanbul ignore next */
      cov_t7ttuvxzs().f[9]++;
      cov_t7ttuvxzs().s[60]++;
      return new Set(prev).add(flowId);
    });
    /* istanbul ignore next */
    cov_t7ttuvxzs().s[61]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_t7ttuvxzs().s[62]++, await fetch('/api/admin/test-flows', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          action: 'execute',
          flowId,
          trigger: 'manual'
        })
      }));
      /* istanbul ignore next */
      cov_t7ttuvxzs().s[63]++;
      if (response.ok) {
        /* istanbul ignore next */
        cov_t7ttuvxzs().b[19][0]++;
        const result =
        /* istanbul ignore next */
        (cov_t7ttuvxzs().s[64]++, await response.json());
        /* istanbul ignore next */
        cov_t7ttuvxzs().s[65]++;
        console.log('Flujo ejecutado:', result);
        // Actualizar datos despuÃ©s de un delay
        /* istanbul ignore next */
        cov_t7ttuvxzs().s[66]++;
        setTimeout(() => {
          /* istanbul ignore next */
          cov_t7ttuvxzs().f[10]++;
          cov_t7ttuvxzs().s[67]++;
          loadFlows();
          /* istanbul ignore next */
          cov_t7ttuvxzs().s[68]++;
          loadExecutions();
        }, 2000);
      } else
      /* istanbul ignore next */
      {
        cov_t7ttuvxzs().b[19][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_t7ttuvxzs().s[69]++;
      console.error('Error ejecutando flujo:', error);
    } finally {
      /* istanbul ignore next */
      cov_t7ttuvxzs().s[70]++;
      setTimeout(() => {
        /* istanbul ignore next */
        cov_t7ttuvxzs().f[11]++;
        cov_t7ttuvxzs().s[71]++;
        setRunningFlows(prev => {
          /* istanbul ignore next */
          cov_t7ttuvxzs().f[12]++;
          const newSet =
          /* istanbul ignore next */
          (cov_t7ttuvxzs().s[72]++, new Set(prev));
          /* istanbul ignore next */
          cov_t7ttuvxzs().s[73]++;
          newSet.delete(flowId);
          /* istanbul ignore next */
          cov_t7ttuvxzs().s[74]++;
          return newSet;
        });
      }, 3000);
    }
  };
  /* istanbul ignore next */
  cov_t7ttuvxzs().s[75]++;
  const getStatusIcon = status => {
    /* istanbul ignore next */
    cov_t7ttuvxzs().f[13]++;
    cov_t7ttuvxzs().s[76]++;
    switch (status) {
      case 'success':
        /* istanbul ignore next */
        cov_t7ttuvxzs().b[20][0]++;
        cov_t7ttuvxzs().s[77]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.CheckCircle, {
          className: "w-4 h-4 text-green-600"
        });
      case 'failed':
        /* istanbul ignore next */
        cov_t7ttuvxzs().b[20][1]++;
        cov_t7ttuvxzs().s[78]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.XCircle, {
          className: "w-4 h-4 text-red-600"
        });
      case 'running':
        /* istanbul ignore next */
        cov_t7ttuvxzs().b[20][2]++;
        cov_t7ttuvxzs().s[79]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.RefreshCw, {
          className: "w-4 h-4 text-blue-600 animate-spin"
        });
      default:
        /* istanbul ignore next */
        cov_t7ttuvxzs().b[20][3]++;
        cov_t7ttuvxzs().s[80]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Clock, {
          className: "w-4 h-4 text-gray-600"
        });
    }
  };
  /* istanbul ignore next */
  cov_t7ttuvxzs().s[81]++;
  const getStatusColor = status => {
    /* istanbul ignore next */
    cov_t7ttuvxzs().f[14]++;
    cov_t7ttuvxzs().s[82]++;
    switch (status) {
      case 'success':
        /* istanbul ignore next */
        cov_t7ttuvxzs().b[21][0]++;
        cov_t7ttuvxzs().s[83]++;
        return 'text-green-600 bg-green-50';
      case 'failed':
        /* istanbul ignore next */
        cov_t7ttuvxzs().b[21][1]++;
        cov_t7ttuvxzs().s[84]++;
        return 'text-red-600 bg-red-50';
      case 'running':
        /* istanbul ignore next */
        cov_t7ttuvxzs().b[21][2]++;
        cov_t7ttuvxzs().s[85]++;
        return 'text-blue-600 bg-blue-50';
      default:
        /* istanbul ignore next */
        cov_t7ttuvxzs().b[21][3]++;
        cov_t7ttuvxzs().s[86]++;
        return 'text-gray-600 bg-gray-50';
    }
  };
  /* istanbul ignore next */
  cov_t7ttuvxzs().s[87]++;
  const formatDuration = ms => {
    /* istanbul ignore next */
    cov_t7ttuvxzs().f[15]++;
    cov_t7ttuvxzs().s[88]++;
    if (ms < 1000) {
      /* istanbul ignore next */
      cov_t7ttuvxzs().b[22][0]++;
      cov_t7ttuvxzs().s[89]++;
      return `${ms}ms`;
    } else
    /* istanbul ignore next */
    {
      cov_t7ttuvxzs().b[22][1]++;
    }
    cov_t7ttuvxzs().s[90]++;
    if (ms < 60000) {
      /* istanbul ignore next */
      cov_t7ttuvxzs().b[23][0]++;
      cov_t7ttuvxzs().s[91]++;
      return `${(ms / 1000).toFixed(1)}s`;
    } else
    /* istanbul ignore next */
    {
      cov_t7ttuvxzs().b[23][1]++;
    }
    cov_t7ttuvxzs().s[92]++;
    return `${(ms / 60000).toFixed(1)}m`;
  };
  // Datos simulados para demostraciÃ³n
  const mockFlows =
  /* istanbul ignore next */
  (cov_t7ttuvxzs().s[93]++, [{
    id: 'ci-cd-complete',
    name: 'CI/CD Completo',
    description: 'Flujo completo de integraciÃ³n continua y despliegue',
    status: 'idle',
    lastRun: new Date(Date.now() - 3600000),
    duration: 180000,
    successRate: 92.5,
    totalExecutions: 47
  }, {
    id: 'quick-test',
    name: 'Testing RÃ¡pido',
    description: 'Flujo rÃ¡pido para desarrollo',
    status: 'success',
    lastRun: new Date(Date.now() - 1800000),
    duration: 45000,
    successRate: 98.2,
    totalExecutions: 156
  }, {
    id: 'performance-test',
    name: 'Testing de Performance',
    description: 'Flujo especializado en performance y Core Web Vitals',
    status: 'idle',
    lastRun: new Date(Date.now() - 86400000),
    duration: 240000,
    successRate: 87.3,
    totalExecutions: 23
  }]);
  const displayFlows =
  /* istanbul ignore next */
  (cov_t7ttuvxzs().s[94]++, flows.length > 0 ?
  /* istanbul ignore next */
  (cov_t7ttuvxzs().b[24][0]++, flows) :
  /* istanbul ignore next */
  (cov_t7ttuvxzs().b[24][1]++, mockFlows));
  /* istanbul ignore next */
  cov_t7ttuvxzs().s[95]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "container mx-auto p-6 space-y-6",
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "flex items-center justify-between",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h1", {
          className: "text-3xl font-bold text-gray-900",
          children: "Test Flows Dashboard"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
          className: "text-gray-600 mt-1",
          children: "Gesti\xf3n de flujos automatizados de CI/CD y testing"
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex items-center gap-4",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_badge.Badge, {
          variant: "outline",
          children: [displayFlows.length, " flujos configurados"]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_button.Button, {
          onClick: () => {
            /* istanbul ignore next */
            cov_t7ttuvxzs().f[16]++;
            cov_t7ttuvxzs().s[96]++;
            loadFlows();
            /* istanbul ignore next */
            cov_t7ttuvxzs().s[97]++;
            loadExecutions();
          },
          variant: "outline",
          size: "sm",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.RefreshCw, {
            className: "w-4 h-4 mr-2"
          }), "Actualizar"]
        })]
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
          className: "pb-3",
          children: /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
            className: "text-sm font-medium text-gray-600",
            children: "Flujos Activos"
          })
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardContent, {
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex items-center justify-between",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "text-2xl font-bold",
              children: displayFlows.length
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.GitBranch, {
              className: "w-8 h-8 text-blue-500"
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "text-xs text-gray-500 mt-1",
            children: [runningFlows.size, " ejecut\xe1ndose"]
          })]
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
          className: "pb-3",
          children: /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
            className: "text-sm font-medium text-gray-600",
            children: "Success Rate"
          })
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardContent, {
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex items-center justify-between",
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "text-2xl font-bold text-green-600",
              children: [displayFlows.length > 0 ?
              /* istanbul ignore next */
              (cov_t7ttuvxzs().b[25][0]++, Math.round(displayFlows.reduce((acc, f) => {
                /* istanbul ignore next */
                cov_t7ttuvxzs().f[17]++;
                cov_t7ttuvxzs().s[98]++;
                return acc + f.successRate;
              }, 0) / displayFlows.length)) :
              /* istanbul ignore next */
              (cov_t7ttuvxzs().b[25][1]++, 0), "%"]
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.TrendingUp, {
              className: "w-8 h-8 text-green-500"
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "text-xs text-gray-500 mt-1",
            children: "Promedio general"
          })]
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
          className: "pb-3",
          children: /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
            className: "text-sm font-medium text-gray-600",
            children: "Ejecuciones Totales"
          })
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardContent, {
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex items-center justify-between",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "text-2xl font-bold",
              children: displayFlows.reduce((acc, f) => {
                /* istanbul ignore next */
                cov_t7ttuvxzs().f[18]++;
                cov_t7ttuvxzs().s[99]++;
                return acc + f.totalExecutions;
              }, 0)
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Activity, {
              className: "w-8 h-8 text-purple-500"
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "text-xs text-gray-500 mt-1",
            children: "Todas las ejecuciones"
          })]
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
          className: "pb-3",
          children: /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
            className: "text-sm font-medium text-gray-600",
            children: "Tiempo Promedio"
          })
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardContent, {
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex items-center justify-between",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "text-2xl font-bold",
              children: displayFlows.length > 0 ?
              /* istanbul ignore next */
              (cov_t7ttuvxzs().b[26][0]++, formatDuration(displayFlows.reduce((acc, f) => {
                /* istanbul ignore next */
                cov_t7ttuvxzs().f[19]++;
                cov_t7ttuvxzs().s[100]++;
                return acc + (
                /* istanbul ignore next */
                (cov_t7ttuvxzs().b[27][0]++, f.duration) ||
                /* istanbul ignore next */
                (cov_t7ttuvxzs().b[27][1]++, 0));
              }, 0) / displayFlows.length)) :
              /* istanbul ignore next */
              (cov_t7ttuvxzs().b[26][1]++, '0s')
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Zap, {
              className: "w-8 h-8 text-yellow-500"
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "text-xs text-gray-500 mt-1",
            children: "Por ejecuci\xf3n"
          })]
        })]
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_tabs.Tabs, {
      defaultValue: "flows",
      className: "space-y-6",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_tabs.TabsList, {
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_tabs.TabsTrigger, {
          value: "flows",
          children: "Flujos Disponibles"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_tabs.TabsTrigger, {
          value: "executions",
          children: "Ejecuciones Recientes"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_tabs.TabsTrigger, {
          value: "config",
          children: "Configuraci\xf3n"
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_tabs.TabsContent, {
        value: "flows",
        className: "space-y-4",
        children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "grid grid-cols-1 lg:grid-cols-2 gap-6",
          children: displayFlows.map(flow => {
            /* istanbul ignore next */
            cov_t7ttuvxzs().f[20]++;
            cov_t7ttuvxzs().s[101]++;
            return /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardHeader, {
                children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "flex items-center justify-between",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardTitle, {
                    className: "flex items-center gap-2",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.GitBranch, {
                      className: "w-5 h-5"
                    }), flow.name]
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_badge.Badge, {
                    className: getStatusColor(flow.status),
                    children: [getStatusIcon(flow.status), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                      className: "ml-1 capitalize",
                      children: flow.status
                    })]
                  })]
                }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardDescription, {
                  children: flow.description
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardContent, {
                className: "space-y-4",
                children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "grid grid-cols-2 gap-4 text-sm",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                      className: "text-gray-500",
                      children: "Success Rate"
                    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      className: "font-medium text-green-600",
                      children: [flow.successRate, "%"]
                    })]
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                      className: "text-gray-500",
                      children: "Ejecuciones"
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                      className: "font-medium",
                      children: flow.totalExecutions
                    })]
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                      className: "text-gray-500",
                      children: "\xdaltima Ejecuci\xf3n"
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                      className: "font-medium",
                      children: flow.lastRun ?
                      /* istanbul ignore next */
                      (cov_t7ttuvxzs().b[28][0]++, flow.lastRun.toLocaleString()) :
                      /* istanbul ignore next */
                      (cov_t7ttuvxzs().b[28][1]++, 'Nunca')
                    })]
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                      className: "text-gray-500",
                      children: "Duraci\xf3n"
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                      className: "font-medium",
                      children: flow.duration ?
                      /* istanbul ignore next */
                      (cov_t7ttuvxzs().b[29][0]++, formatDuration(flow.duration)) :
                      /* istanbul ignore next */
                      (cov_t7ttuvxzs().b[29][1]++, 'N/A')
                    })]
                  })]
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "flex items-center gap-2",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_button.Button, {
                    onClick: () => {
                      /* istanbul ignore next */
                      cov_t7ttuvxzs().f[21]++;
                      cov_t7ttuvxzs().s[102]++;
                      return executeFlow(flow.id);
                    },
                    disabled: runningFlows.has(flow.id),
                    className: "flex-1",
                    children: [runningFlows.has(flow.id) ?
                    /* istanbul ignore next */
                    (/*#__PURE__*/cov_t7ttuvxzs().b[30][0]++, (0, _jsxruntime.jsx)(_lucidereact.RefreshCw, {
                      className: "w-4 h-4 mr-2 animate-spin"
                    })) :
                    /* istanbul ignore next */
                    (/*#__PURE__*/cov_t7ttuvxzs().b[30][1]++, (0, _jsxruntime.jsx)(_lucidereact.Play, {
                      className: "w-4 h-4 mr-2"
                    })), runningFlows.has(flow.id) ?
                    /* istanbul ignore next */
                    (cov_t7ttuvxzs().b[31][0]++, 'Ejecutando...') :
                    /* istanbul ignore next */
                    (cov_t7ttuvxzs().b[31][1]++, 'Ejecutar')]
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
                    variant: "outline",
                    size: "sm",
                    children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Settings, {
                      className: "w-4 h-4"
                    })
                  })]
                })]
              })]
            }, flow.id);
          })
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_tabs.TabsContent, {
        value: "executions",
        className: "space-y-4",
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardHeader, {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
              children: "Ejecuciones Recientes"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardDescription, {
              children: "Historial de ejecuciones de flujos de testing"
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
            children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "text-center text-gray-500 py-8",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Activity, {
                className: "w-12 h-12 mx-auto mb-4 opacity-50"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                children: "No hay ejecuciones recientes"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                className: "text-sm",
                children: "Ejecuta un flujo para ver el historial aqu\xed"
              })]
            })
          })]
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_tabs.TabsContent, {
        value: "config",
        className: "space-y-4",
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardHeader, {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
              children: "Configuraci\xf3n de Flujos"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardDescription, {
              children: "Configuraci\xf3n avanzada y programaci\xf3n de flujos"
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
            children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "space-y-4",
              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex items-center justify-between p-4 border rounded-lg",
                children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                    className: "font-medium",
                    children: "Ejecuci\xf3n Autom\xe1tica"
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                    className: "text-sm text-gray-500",
                    children: "Ejecutar flujos autom\xe1ticamente en eventos espec\xedficos"
                  })]
                }), /*#__PURE__*/(0, _jsxruntime.jsx)(_badge.Badge, {
                  variant: "secondary",
                  children: "Pr\xf3ximamente"
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex items-center justify-between p-4 border rounded-lg",
                children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                    className: "font-medium",
                    children: "Notificaciones"
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                    className: "text-sm text-gray-500",
                    children: "Configurar alertas por email y Slack"
                  })]
                }), /*#__PURE__*/(0, _jsxruntime.jsx)(_badge.Badge, {
                  variant: "secondary",
                  children: "Pr\xf3ximamente"
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex items-center justify-between p-4 border rounded-lg",
                children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                    className: "font-medium",
                    children: "Programaci\xf3n"
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                    className: "text-sm text-gray-500",
                    children: "Programar ejecuciones con cron jobs"
                  })]
                }), /*#__PURE__*/(0, _jsxruntime.jsx)(_badge.Badge, {
                  variant: "secondary",
                  children: "Pr\xf3ximamente"
                })]
              })]
            })
          })]
        })
      })]
    })]
  });
};
const _default =
/* istanbul ignore next */
(cov_t7ttuvxzs().s[103]++, TestFlowsDashboard);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,