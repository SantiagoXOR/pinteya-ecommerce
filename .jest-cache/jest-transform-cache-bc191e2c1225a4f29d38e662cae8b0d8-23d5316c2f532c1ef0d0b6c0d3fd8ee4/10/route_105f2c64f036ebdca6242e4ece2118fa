a29d3fa8c2edd0f308eb46bd9e188abd
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_ue0hicam6() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\debug\\auth\\route.ts";
  var hash = "b61dd249d10cc84131dabed3d1849bf231a63338";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\debug\\auth\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 20
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 23
        }
      },
      "7": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "8": {
        start: {
          line: 24,
          column: 19
        },
        end: {
          line: 24,
          column: 61
        }
      },
      "9": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 54
        }
      },
      "10": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 24
        }
      },
      "11": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 98,
          column: 5
        }
      },
      "12": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 71
        }
      },
      "13": {
        start: {
          line: 31,
          column: 27
        },
        end: {
          line: 31,
          column: 78
        }
      },
      "14": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 40,
          column: 9
        }
      },
      "15": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 57
        }
      },
      "16": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 39,
          column: 14
        }
      },
      "17": {
        start: {
          line: 42,
          column: 34
        },
        end: {
          line: 42,
          column: 83
        }
      },
      "18": {
        start: {
          line: 44,
          column: 24
        },
        end: {
          line: 44,
          column: 39
        }
      },
      "19": {
        start: {
          line: 45,
          column: 30
        },
        end: {
          line: 45,
          column: 54
        }
      },
      "20": {
        start: {
          line: 46,
          column: 35
        },
        end: {
          line: 46,
          column: 65
        }
      },
      "21": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 51,
          column: 11
        }
      },
      "22": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 86,
          column: 11
        }
      },
      "23": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 88,
          column: 54
        }
      },
      "24": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 97,
          column: 11
        }
      },
      "25": {
        start: {
          line: 101,
          column: 4
        },
        end: {
          line: 127,
          column: 5
        }
      },
      "26": {
        start: {
          line: 102,
          column: 21
        },
        end: {
          line: 102,
          column: 41
        }
      },
      "27": {
        start: {
          line: 103,
          column: 39
        },
        end: {
          line: 103,
          column: 43
        }
      },
      "28": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 107,
          column: 11
        }
      },
      "29": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 115,
          column: 11
        }
      },
      "30": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 117,
          column: 59
        }
      },
      "31": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 126,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "GET",
        decl: {
          start: {
            line: 27,
            column: 15
          },
          end: {
            line: 27,
            column: 18
          }
        },
        loc: {
          start: {
            line: 27,
            column: 28
          },
          end: {
            line: 99,
            column: 1
          }
        },
        line: 27
      },
      "5": {
        name: "POST",
        decl: {
          start: {
            line: 100,
            column: 15
          },
          end: {
            line: 100,
            column: 19
          }
        },
        loc: {
          start: {
            line: 100,
            column: 29
          },
          end: {
            line: 128,
            column: 1
          }
        },
        line: 100
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 75,
            column: 35
          },
          end: {
            line: 75,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 75,
            column: 51
          },
          end: {
            line: 75,
            column: 60
          }
        }, {
          start: {
            line: 75,
            column: 63
          },
          end: {
            line: 75,
            column: 72
          }
        }],
        line: 75
      },
      "1": {
        loc: {
          start: {
            line: 76,
            column: 40
          },
          end: {
            line: 76,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 76,
            column: 61
          },
          end: {
            line: 76,
            column: 70
          }
        }, {
          start: {
            line: 76,
            column: 73
          },
          end: {
            line: 76,
            column: 82
          }
        }],
        line: 76
      },
      "2": {
        loc: {
          start: {
            line: 93,
            column: 30
          },
          end: {
            line: 93,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 93,
            column: 55
          },
          end: {
            line: 93,
            column: 68
          }
        }, {
          start: {
            line: 93,
            column: 71
          },
          end: {
            line: 93,
            column: 86
          }
        }],
        line: 93
      },
      "3": {
        loc: {
          start: {
            line: 122,
            column: 30
          },
          end: {
            line: 122,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 122,
            column: 55
          },
          end: {
            line: 122,
            column: 68
          }
        }, {
          start: {
            line: 122,
            column: 71
          },
          end: {
            line: 122,
            column: 86
          }
        }],
        line: 122
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\debug\\auth\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { getAuthenticatedUser, getAuthFromHeaders } from '@/lib/auth/admin-auth';\r\nimport { auth } from '@/lib/auth/config';\r\n\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    console.log('\uD83D\uDD0D Debug Auth: Starting authentication check...');\r\n\r\n    // MIGRADO: Usar m\xE9todos oficiales de Clerk\r\n    const authResult = await getAuthenticatedUser(request);\r\n\r\n    // Tambi\xE9n probar auth() directamente\r\n    let directAuthResult;\r\n    try {\r\n      directAuthResult = await auth();\r\n    } catch (directAuthError) {\r\n      directAuthResult = { error: directAuthError.message };\r\n    }\r\n\r\n    // DEPRECADO: Headers para comparaci\xF3n (solo debug)\r\n    const deprecatedHeaders = await getAuthFromHeaders(request);\r\n\r\n    // Obtener cookies para debug\r\n    const cookies = request.cookies;\r\n    const sessionCookie = cookies.get('__session');\r\n    const clerkSessionCookie = cookies.get('__clerk_session');\r\n\r\n    console.log('\uD83D\uDD0D Debug Auth: Resultados de migraci\xF3n:', {\r\n      newMethod: authResult,\r\n      directAuth: directAuthResult,\r\n      deprecatedHeaders: deprecatedHeaders\r\n    });\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      migration: {\r\n        status: 'MIGRATED_TO_OFFICIAL_METHODS',\r\n        newAuthMethod: {\r\n          userId: authResult.userId,\r\n          sessionId: authResult.sessionId,\r\n          isAdmin: authResult.isAdmin,\r\n          error: authResult.error\r\n        },\r\n        directAuthMethod: {\r\n          userId: directAuthResult.userId,\r\n          sessionId: directAuthResult.sessionId,\r\n          error: directAuthResult.error\r\n        },\r\n        deprecatedHeaderMethod: {\r\n          userId: deprecatedHeaders.userId,\r\n          deprecated: deprecatedHeaders.deprecated,\r\n          error: deprecatedHeaders.error\r\n        }\r\n      },\r\n      debug: {\r\n        cookies: {\r\n          sessionCookie: sessionCookie ? 'Present' : 'Missing',\r\n          clerkSessionCookie: clerkSessionCookie ? 'Present' : 'Missing',\r\n          totalCookies: Array.from(cookies.entries()).length\r\n        },\r\n        migrationNotes: [\r\n          'Esta API ha sido migrada a usar getAuthenticatedUser()',\r\n          'Ya no depende de headers x-clerk-user-id',\r\n          'Usa m\xE9todos oficiales de Clerk: getAuth() y auth()',\r\n          'Headers mostrados solo para comparaci\xF3n en debug'\r\n        ]\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('\uD83D\uDD0D Debug Auth: Error:', error);\r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Authentication error',\r\n      debug: {\r\n        errorMessage: error instanceof Error ? error.message : 'Unknown error'\r\n      }\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    const body = await request.json();\r\n    const { clerkUserId, email } = body;\r\n\r\n    console.log('\uD83D\uDD0D Debug Auth POST: Received data:', { clerkUserId, email });\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      debug: {\r\n        receivedClerkUserId: clerkUserId,\r\n        receivedEmail: email,\r\n        message: 'Data received successfully'\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('\uD83D\uDD0D Debug Auth POST: Error:', error);\r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Error processing request',\r\n      debug: {\r\n        errorMessage: error instanceof Error ? error.message : 'Unknown error'\r\n      }\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "POST", "runtime", "request", "console", "log", "authResult", "getAuthenticatedUser", "directAuthResult", "auth", "directAuthError", "error", "message", "deprecatedHeaders", "getAuthFromHeaders", "cookies", "sessionCookie", "get", "clerkSessionCookie", "newMethod", "directAuth", "NextResponse", "json", "success", "migration", "status", "newAuthMethod", "userId", "sessionId", "isAdmin", "directAuthMethod", "deprecatedHeaderMethod", "deprecated", "debug", "totalCookies", "Array", "from", "entries", "length", "migrationNotes", "errorMessage", "Error", "body", "clerkUserId", "email", "receivedClerkUserId", "receivedEmail"],
      mappings: "AAAA,qCAAqC;;;;;;;;;;;;QAOfA;eAAAA;;QA6EAC;eAAAA;;QAnFTC;eAAAA;;;wBAE6B;2BACe;wBACpC;AAJd,MAAMA,UAAU;AAMhB,eAAeF,IAAIG,OAAoB;IAC5C,IAAI;QACFC,QAAQC,GAAG,CAAC;QAEZ,2CAA2C;QAC3C,MAAMC,aAAa,MAAMC,IAAAA,+BAAoB,EAACJ;QAE9C,qCAAqC;QACrC,IAAIK;QACJ,IAAI;YACFA,mBAAmB,MAAMC,IAAAA,YAAI;QAC/B,EAAE,OAAOC,iBAAiB;YACxBF,mBAAmB;gBAAEG,OAAOD,gBAAgBE,OAAO;YAAC;QACtD;QAEA,mDAAmD;QACnD,MAAMC,oBAAoB,MAAMC,IAAAA,6BAAkB,EAACX;QAEnD,6BAA6B;QAC7B,MAAMY,UAAUZ,QAAQY,OAAO;QAC/B,MAAMC,gBAAgBD,QAAQE,GAAG,CAAC;QAClC,MAAMC,qBAAqBH,QAAQE,GAAG,CAAC;QAEvCb,QAAQC,GAAG,CAAC,2CAA2C;YACrDc,WAAWb;YACXc,YAAYZ;YACZK,mBAAmBA;QACrB;QAEA,OAAOQ,oBAAY,CAACC,IAAI,CAAC;YACvBC,SAAS;YACTC,WAAW;gBACTC,QAAQ;gBACRC,eAAe;oBACbC,QAAQrB,WAAWqB,MAAM;oBACzBC,WAAWtB,WAAWsB,SAAS;oBAC/BC,SAASvB,WAAWuB,OAAO;oBAC3BlB,OAAOL,WAAWK,KAAK;gBACzB;gBACAmB,kBAAkB;oBAChBH,QAAQnB,iBAAiBmB,MAAM;oBAC/BC,WAAWpB,iBAAiBoB,SAAS;oBACrCjB,OAAOH,iBAAiBG,KAAK;gBAC/B;gBACAoB,wBAAwB;oBACtBJ,QAAQd,kBAAkBc,MAAM;oBAChCK,YAAYnB,kBAAkBmB,UAAU;oBACxCrB,OAAOE,kBAAkBF,KAAK;gBAChC;YACF;YACAsB,OAAO;gBACLlB,SAAS;oBACPC,eAAeA,gBAAgB,YAAY;oBAC3CE,oBAAoBA,qBAAqB,YAAY;oBACrDgB,cAAcC,MAAMC,IAAI,CAACrB,QAAQsB,OAAO,IAAIC,MAAM;gBACpD;gBACAC,gBAAgB;oBACd;oBACA;oBACA;oBACA;iBACD;YACH;QACF;IAEF,EAAE,OAAO5B,OAAO;QACdP,QAAQO,KAAK,CAAC,yBAAyBA;QACvC,OAAOU,oBAAY,CAACC,IAAI,CAAC;YACvBC,SAAS;YACTZ,OAAO;YACPsB,OAAO;gBACLO,cAAc7B,iBAAiB8B,QAAQ9B,MAAMC,OAAO,GAAG;YACzD;QACF,GAAG;YAAEa,QAAQ;QAAI;IACnB;AACF;AAEO,eAAexB,KAAKE,OAAoB;IAC7C,IAAI;QACF,MAAMuC,OAAO,MAAMvC,QAAQmB,IAAI;QAC/B,MAAM,EAAEqB,WAAW,EAAEC,KAAK,EAAE,GAAGF;QAE/BtC,QAAQC,GAAG,CAAC,sCAAsC;YAAEsC;YAAaC;QAAM;QAEvE,OAAOvB,oBAAY,CAACC,IAAI,CAAC;YACvBC,SAAS;YACTU,OAAO;gBACLY,qBAAqBF;gBACrBG,eAAeF;gBACfhC,SAAS;YACX;QACF;IAEF,EAAE,OAAOD,OAAO;QACdP,QAAQO,KAAK,CAAC,8BAA8BA;QAC5C,OAAOU,oBAAY,CAACC,IAAI,CAAC;YACvBC,SAAS;YACTZ,OAAO;YACPsB,OAAO;gBACLO,cAAc7B,iBAAiB8B,QAAQ9B,MAAMC,OAAO,GAAG;YACzD;QACF,GAAG;YAAEa,QAAQ;QAAI;IACnB;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b61dd249d10cc84131dabed3d1849bf231a63338"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_ue0hicam6 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_ue0hicam6();
cov_ue0hicam6().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_ue0hicam6().f[0]++;
  cov_ue0hicam6().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_ue0hicam6().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_ue0hicam6().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_ue0hicam6().f[1]++;
    cov_ue0hicam6().s[4]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_ue0hicam6().f[2]++;
    cov_ue0hicam6().s[5]++;
    return POST;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_ue0hicam6().f[3]++;
    cov_ue0hicam6().s[6]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_ue0hicam6().s[7]++, require("next/server"));
const _adminauth =
/* istanbul ignore next */
(cov_ue0hicam6().s[8]++, require("../../../../lib/auth/admin-auth"));
const _config =
/* istanbul ignore next */
(cov_ue0hicam6().s[9]++, require("../../../../lib/auth/config"));
const runtime =
/* istanbul ignore next */
(cov_ue0hicam6().s[10]++, 'nodejs');
async function GET(request) {
  /* istanbul ignore next */
  cov_ue0hicam6().f[4]++;
  cov_ue0hicam6().s[11]++;
  try {
    /* istanbul ignore next */
    cov_ue0hicam6().s[12]++;
    console.log('ğ Debug Auth: Starting authentication check...');
    // MIGRADO: Usar mÃ©todos oficiales de Clerk
    const authResult =
    /* istanbul ignore next */
    (cov_ue0hicam6().s[13]++, await (0, _adminauth.getAuthenticatedUser)(request));
    // TambiÃ©n probar auth() directamente
    let directAuthResult;
    /* istanbul ignore next */
    cov_ue0hicam6().s[14]++;
    try {
      /* istanbul ignore next */
      cov_ue0hicam6().s[15]++;
      directAuthResult = await (0, _config.auth)();
    } catch (directAuthError) {
      /* istanbul ignore next */
      cov_ue0hicam6().s[16]++;
      directAuthResult = {
        error: directAuthError.message
      };
    }
    // DEPRECADO: Headers para comparaciÃ³n (solo debug)
    const deprecatedHeaders =
    /* istanbul ignore next */
    (cov_ue0hicam6().s[17]++, await (0, _adminauth.getAuthFromHeaders)(request));
    // Obtener cookies para debug
    const cookies =
    /* istanbul ignore next */
    (cov_ue0hicam6().s[18]++, request.cookies);
    const sessionCookie =
    /* istanbul ignore next */
    (cov_ue0hicam6().s[19]++, cookies.get('__session'));
    const clerkSessionCookie =
    /* istanbul ignore next */
    (cov_ue0hicam6().s[20]++, cookies.get('__clerk_session'));
    /* istanbul ignore next */
    cov_ue0hicam6().s[21]++;
    console.log('ğ Debug Auth: Resultados de migraciÃ³n:', {
      newMethod: authResult,
      directAuth: directAuthResult,
      deprecatedHeaders: deprecatedHeaders
    });
    /* istanbul ignore next */
    cov_ue0hicam6().s[22]++;
    return _server.NextResponse.json({
      success: true,
      migration: {
        status: 'MIGRATED_TO_OFFICIAL_METHODS',
        newAuthMethod: {
          userId: authResult.userId,
          sessionId: authResult.sessionId,
          isAdmin: authResult.isAdmin,
          error: authResult.error
        },
        directAuthMethod: {
          userId: directAuthResult.userId,
          sessionId: directAuthResult.sessionId,
          error: directAuthResult.error
        },
        deprecatedHeaderMethod: {
          userId: deprecatedHeaders.userId,
          deprecated: deprecatedHeaders.deprecated,
          error: deprecatedHeaders.error
        }
      },
      debug: {
        cookies: {
          sessionCookie: sessionCookie ?
          /* istanbul ignore next */
          (cov_ue0hicam6().b[0][0]++, 'Present') :
          /* istanbul ignore next */
          (cov_ue0hicam6().b[0][1]++, 'Missing'),
          clerkSessionCookie: clerkSessionCookie ?
          /* istanbul ignore next */
          (cov_ue0hicam6().b[1][0]++, 'Present') :
          /* istanbul ignore next */
          (cov_ue0hicam6().b[1][1]++, 'Missing'),
          totalCookies: Array.from(cookies.entries()).length
        },
        migrationNotes: ['Esta API ha sido migrada a usar getAuthenticatedUser()', 'Ya no depende de headers x-clerk-user-id', 'Usa mÃ©todos oficiales de Clerk: getAuth() y auth()', 'Headers mostrados solo para comparaciÃ³n en debug']
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_ue0hicam6().s[23]++;
    console.error('ğ Debug Auth: Error:', error);
    /* istanbul ignore next */
    cov_ue0hicam6().s[24]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Authentication error',
      debug: {
        errorMessage: error instanceof Error ?
        /* istanbul ignore next */
        (cov_ue0hicam6().b[2][0]++, error.message) :
        /* istanbul ignore next */
        (cov_ue0hicam6().b[2][1]++, 'Unknown error')
      }
    }, {
      status: 500
    });
  }
}
async function POST(request) {
  /* istanbul ignore next */
  cov_ue0hicam6().f[5]++;
  cov_ue0hicam6().s[25]++;
  try {
    const body =
    /* istanbul ignore next */
    (cov_ue0hicam6().s[26]++, await request.json());
    const {
      clerkUserId,
      email
    } =
    /* istanbul ignore next */
    (cov_ue0hicam6().s[27]++, body);
    /* istanbul ignore next */
    cov_ue0hicam6().s[28]++;
    console.log('ğ Debug Auth POST: Received data:', {
      clerkUserId,
      email
    });
    /* istanbul ignore next */
    cov_ue0hicam6().s[29]++;
    return _server.NextResponse.json({
      success: true,
      debug: {
        receivedClerkUserId: clerkUserId,
        receivedEmail: email,
        message: 'Data received successfully'
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_ue0hicam6().s[30]++;
    console.error('ğ Debug Auth POST: Error:', error);
    /* istanbul ignore next */
    cov_ue0hicam6().s[31]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Error processing request',
      debug: {
        errorMessage: error instanceof Error ?
        /* istanbul ignore next */
        (cov_ue0hicam6().b[3][0]++, error.message) :
        /* istanbul ignore next */
        (cov_ue0hicam6().b[3][1]++, 'Unknown error')
      }
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,