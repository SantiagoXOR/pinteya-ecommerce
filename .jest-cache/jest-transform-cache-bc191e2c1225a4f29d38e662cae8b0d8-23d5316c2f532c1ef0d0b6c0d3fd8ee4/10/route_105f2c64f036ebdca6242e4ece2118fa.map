{"version":3,"names":["cov_ue0hicam6","actualCoverage","s","GET","f","POST","runtime","request","console","log","authResult","_adminauth","getAuthenticatedUser","directAuthResult","_config","auth","directAuthError","error","message","deprecatedHeaders","getAuthFromHeaders","cookies","sessionCookie","get","clerkSessionCookie","newMethod","directAuth","_server","NextResponse","json","success","migration","status","newAuthMethod","userId","sessionId","isAdmin","directAuthMethod","deprecatedHeaderMethod","deprecated","debug","b","totalCookies","Array","from","entries","length","migrationNotes","errorMessage","Error","body","clerkUserId","email","receivedClerkUserId","receivedEmail"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\debug\\auth\\route.ts"],"sourcesContent":["// Configuración para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { getAuthenticatedUser, getAuthFromHeaders } from '@/lib/auth/admin-auth';\r\nimport { auth } from '@/lib/auth/config';\r\n\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    console.log('🔍 Debug Auth: Starting authentication check...');\r\n\r\n    // MIGRADO: Usar métodos oficiales de Clerk\r\n    const authResult = await getAuthenticatedUser(request);\r\n\r\n    // También probar auth() directamente\r\n    let directAuthResult;\r\n    try {\r\n      directAuthResult = await auth();\r\n    } catch (directAuthError) {\r\n      directAuthResult = { error: directAuthError.message };\r\n    }\r\n\r\n    // DEPRECADO: Headers para comparación (solo debug)\r\n    const deprecatedHeaders = await getAuthFromHeaders(request);\r\n\r\n    // Obtener cookies para debug\r\n    const cookies = request.cookies;\r\n    const sessionCookie = cookies.get('__session');\r\n    const clerkSessionCookie = cookies.get('__clerk_session');\r\n\r\n    console.log('🔍 Debug Auth: Resultados de migración:', {\r\n      newMethod: authResult,\r\n      directAuth: directAuthResult,\r\n      deprecatedHeaders: deprecatedHeaders\r\n    });\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      migration: {\r\n        status: 'MIGRATED_TO_OFFICIAL_METHODS',\r\n        newAuthMethod: {\r\n          userId: authResult.userId,\r\n          sessionId: authResult.sessionId,\r\n          isAdmin: authResult.isAdmin,\r\n          error: authResult.error\r\n        },\r\n        directAuthMethod: {\r\n          userId: directAuthResult.userId,\r\n          sessionId: directAuthResult.sessionId,\r\n          error: directAuthResult.error\r\n        },\r\n        deprecatedHeaderMethod: {\r\n          userId: deprecatedHeaders.userId,\r\n          deprecated: deprecatedHeaders.deprecated,\r\n          error: deprecatedHeaders.error\r\n        }\r\n      },\r\n      debug: {\r\n        cookies: {\r\n          sessionCookie: sessionCookie ? 'Present' : 'Missing',\r\n          clerkSessionCookie: clerkSessionCookie ? 'Present' : 'Missing',\r\n          totalCookies: Array.from(cookies.entries()).length\r\n        },\r\n        migrationNotes: [\r\n          'Esta API ha sido migrada a usar getAuthenticatedUser()',\r\n          'Ya no depende de headers x-clerk-user-id',\r\n          'Usa métodos oficiales de Clerk: getAuth() y auth()',\r\n          'Headers mostrados solo para comparación en debug'\r\n        ]\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('🔍 Debug Auth: Error:', error);\r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Authentication error',\r\n      debug: {\r\n        errorMessage: error instanceof Error ? error.message : 'Unknown error'\r\n      }\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    const body = await request.json();\r\n    const { clerkUserId, email } = body;\r\n\r\n    console.log('🔍 Debug Auth POST: Received data:', { clerkUserId, email });\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      debug: {\r\n        receivedClerkUserId: clerkUserId,\r\n        receivedEmail: email,\r\n        message: 'Data received successfully'\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('🔍 Debug Auth POST: Error:', error);\r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Error processing request',\r\n      debug: {\r\n        errorMessage: error instanceof Error ? error.message : 'Unknown error'\r\n      }\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}