{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\__tests__\\components\\ProductTypesList.test.tsx"],"sourcesContent":["// ===================================\n// PINTEYA E-COMMERCE - TESTS PARA PRODUCT TYPES LIST\n// ===================================\n\nimport React from 'react'\nimport { render, screen, fireEvent } from '@testing-library/react'\nimport ProductTypesList from '@/components/ShopWithSidebar/ProductTypesList'\nimport { PRODUCT_CATEGORIES } from '@/constants/shop'\n\n// Mock del hook useCategoryData\njest.mock('@/hooks/useCategoryData', () => ({\n  useCategoryData: () => ({\n    categories: Object.values(PRODUCT_CATEGORIES),\n    loading: false,\n    error: null,\n  }),\n}))\n\nconst mockOnCategorySelect = jest.fn()\n\nconst defaultProps = {\n  onCategorySelect: mockOnCategorySelect,\n  selectedCategory: '',\n}\n\nbeforeEach(() => {\n  mockOnCategorySelect.mockClear()\n})\n\ndescribe('ProductTypesList', () => {\n  it('should render component title', () => {\n    render(<ProductTypesList {...defaultProps} />)\n\n    expect(screen.getByText('Tipos de Productos')).toBeInTheDocument()\n  })\n\n  it('should render all product categories', () => {\n    render(<ProductTypesList {...defaultProps} />)\n\n    Object.values(PRODUCT_CATEGORIES).forEach(category => {\n      expect(screen.getByText(category.name)).toBeInTheDocument()\n    })\n  })\n\n  it('should render category buttons', () => {\n    render(<ProductTypesList {...defaultProps} />)\n\n    const buttons = screen.getAllByRole('button')\n    expect(buttons).toHaveLength(Object.keys(PRODUCT_CATEGORIES).length)\n  })\n\n  it('should call onCategorySelect when category is clicked', () => {\n    render(<ProductTypesList {...defaultProps} />)\n\n    const pinturaButton = screen.getByText('Pinturas')\n    fireEvent.click(pinturaButton)\n\n    expect(mockOnCategorySelect).toHaveBeenCalledWith('pinturas')\n  })\n\n  it('should highlight selected category', () => {\n    const propsWithSelected = {\n      ...defaultProps,\n      selectedCategory: 'pinturas',\n    }\n\n    render(<ProductTypesList {...propsWithSelected} />)\n\n    const pinturaButton = screen.getByText('Pinturas').closest('button')\n    expect(pinturaButton).toHaveClass('bg-primary', 'text-white')\n  })\n\n  it('should not highlight unselected categories', () => {\n    const propsWithSelected = {\n      ...defaultProps,\n      selectedCategory: 'pinturas',\n    }\n\n    render(<ProductTypesList {...propsWithSelected} />)\n\n    const herramientasButton = screen.getByText('Herramientas').closest('button')\n    expect(herramientasButton).not.toHaveClass('bg-primary', 'text-white')\n    expect(herramientasButton).toHaveClass('hover:bg-gray-100')\n  })\n\n  it('should show category descriptions in title attribute', () => {\n    render(<ProductTypesList {...defaultProps} />)\n\n    Object.values(PRODUCT_CATEGORIES).forEach(category => {\n      const button = screen.getByText(category.name).closest('button')\n      expect(button).toHaveAttribute('title', category.description)\n    })\n  })\n\n  it('should handle multiple category selections', () => {\n    render(<ProductTypesList {...defaultProps} />)\n\n    const pinturaButton = screen.getByText('Pinturas')\n    const herramientasButton = screen.getByText('Herramientas')\n\n    fireEvent.click(pinturaButton)\n    expect(mockOnCategorySelect).toHaveBeenCalledWith('pinturas')\n\n    fireEvent.click(herramientasButton)\n    expect(mockOnCategorySelect).toHaveBeenCalledWith('herramientas')\n\n    expect(mockOnCategorySelect).toHaveBeenCalledTimes(2)\n  })\n\n  it('should render with proper accessibility attributes', () => {\n    render(<ProductTypesList {...defaultProps} />)\n\n    const buttons = screen.getAllByRole('button')\n    buttons.forEach(button => {\n      expect(button).toBeInTheDocument()\n      expect(button).toHaveAttribute('title')\n    })\n  })\n\n  it('should handle empty selected category', () => {\n    const propsWithEmpty = {\n      ...defaultProps,\n      selectedCategory: '',\n    }\n\n    render(<ProductTypesList {...propsWithEmpty} />)\n\n    const buttons = screen.getAllByRole('button')\n    buttons.forEach(button => {\n      expect(button).not.toHaveClass('bg-primary', 'text-white')\n    })\n  })\n\n  it('should handle invalid selected category', () => {\n    const propsWithInvalid = {\n      ...defaultProps,\n      selectedCategory: 'invalid-category',\n    }\n\n    render(<ProductTypesList {...propsWithInvalid} />)\n\n    const buttons = screen.getAllByRole('button')\n    buttons.forEach(button => {\n      expect(button).not.toHaveClass('bg-primary', 'text-white')\n    })\n  })\n\n  it('should maintain consistent styling', () => {\n    render(<ProductTypesList {...defaultProps} />)\n\n    const container = screen.getByText('Tipos de Productos').closest('div')\n    expect(container).toHaveClass('mb-7.5')\n\n    const title = screen.getByText('Tipos de Productos')\n    expect(title).toHaveClass('font-medium', 'text-dark', 'text-lg', 'mb-4')\n\n    const list = screen.getByRole('list', { hidden: true })\n    expect(list).toHaveClass('space-y-2')\n  })\n})\n"],"names":["jest","mock","useCategoryData","categories","Object","values","PRODUCT_CATEGORIES","loading","error","mockOnCategorySelect","fn","defaultProps","onCategorySelect","selectedCategory","beforeEach","mockClear","describe","it","render","ProductTypesList","expect","screen","getByText","toBeInTheDocument","forEach","category","name","buttons","getAllByRole","toHaveLength","keys","length","pinturaButton","fireEvent","click","toHaveBeenCalledWith","propsWithSelected","closest","toHaveClass","herramientasButton","not","button","toHaveAttribute","description","toHaveBeenCalledTimes","propsWithEmpty","propsWithInvalid","container","title","list","getByRole","hidden"],"mappings":"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"}