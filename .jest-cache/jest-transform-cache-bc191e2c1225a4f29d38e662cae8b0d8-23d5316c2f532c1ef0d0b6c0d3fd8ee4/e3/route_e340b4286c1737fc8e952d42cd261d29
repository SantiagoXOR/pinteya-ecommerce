6f9da9ffffdf6413322b339655a1627c
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_qehnw8be() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\orders\\route.ts";
  var hash = "8c26f9e743910622abbfce109ef2238869acf700";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\orders\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 20
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 23
        }
      },
      "7": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "8": {
        start: {
          line: 24,
          column: 18
        },
        end: {
          line: 24,
          column: 66
        }
      },
      "9": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 54
        }
      },
      "10": {
        start: {
          line: 26,
          column: 13
        },
        end: {
          line: 26,
          column: 27
        }
      },
      "11": {
        start: {
          line: 27,
          column: 16
        },
        end: {
          line: 27,
          column: 60
        }
      },
      "12": {
        start: {
          line: 28,
          column: 22
        },
        end: {
          line: 28,
          column: 67
        }
      },
      "13": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 29,
          column: 71
        }
      },
      "14": {
        start: {
          line: 30,
          column: 17
        },
        end: {
          line: 30,
          column: 62
        }
      },
      "15": {
        start: {
          line: 31,
          column: 16
        },
        end: {
          line: 31,
          column: 24
        }
      },
      "16": {
        start: {
          line: 35,
          column: 27
        },
        end: {
          line: 51,
          column: 2
        }
      },
      "17": {
        start: {
          line: 52,
          column: 26
        },
        end: {
          line: 67,
          column: 2
        }
      },
      "18": {
        start: {
          line: 72,
          column: 4
        },
        end: {
          line: 111,
          column: 5
        }
      },
      "19": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 83,
          column: 9
        }
      },
      "20": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 82,
          column: 14
        }
      },
      "21": {
        start: {
          line: 84,
          column: 24
        },
        end: {
          line: 84,
          column: 49
        }
      },
      "22": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 90,
          column: 9
        }
      },
      "23": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 89,
          column: 14
        }
      },
      "24": {
        start: {
          line: 92,
          column: 24
        },
        end: {
          line: 92,
          column: 68
        }
      },
      "25": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 98,
          column: 9
        }
      },
      "26": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 97,
          column: 14
        }
      },
      "27": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 102,
          column: 10
        }
      },
      "28": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 106,
          column: 11
        }
      },
      "29": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 110,
          column: 10
        }
      },
      "30": {
        start: {
          line: 114,
          column: 22
        },
        end: {
          line: 114,
          column: 32
        }
      },
      "31": {
        start: {
          line: 115,
          column: 4
        },
        end: {
          line: 302,
          column: 5
        }
      },
      "32": {
        start: {
          line: 117,
          column: 32
        },
        end: {
          line: 121,
          column: 26
        }
      },
      "33": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 130,
          column: 9
        }
      },
      "34": {
        start: {
          line: 123,
          column: 29
        },
        end: {
          line: 127,
          column: 14
        }
      },
      "35": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 128,
          column: 116
        }
      },
      "36": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 129,
          column: 28
        }
      },
      "37": {
        start: {
          line: 132,
          column: 27
        },
        end: {
          line: 132,
          column: 52
        }
      },
      "38": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 139,
          column: 9
        }
      },
      "39": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 138,
          column: 15
        }
      },
      "40": {
        start: {
          line: 141,
          column: 33
        },
        end: {
          line: 141,
          column: 53
        }
      },
      "41": {
        start: {
          line: 142,
          column: 28
        },
        end: {
          line: 151,
          column: 9
        }
      },
      "42": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 154,
          column: 11
        }
      },
      "43": {
        start: {
          line: 155,
          column: 30
        },
        end: {
          line: 155,
          column: 71
        }
      },
      "44": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 167,
          column: 9
        }
      },
      "45": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 160,
          column: 15
        }
      },
      "46": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 166,
          column: 15
        }
      },
      "47": {
        start: {
          line: 168,
          column: 24
        },
        end: {
          line: 168,
          column: 42
        }
      },
      "48": {
        start: {
          line: 170,
          column: 20
        },
        end: {
          line: 198,
          column: 10
        }
      },
      "49": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 202,
          column: 9
        }
      },
      "50": {
        start: {
          line: 201,
          column: 12
        },
        end: {
          line: 201,
          column: 55
        }
      },
      "51": {
        start: {
          line: 203,
          column: 8
        },
        end: {
          line: 205,
          column: 9
        }
      },
      "52": {
        start: {
          line: 204,
          column: 12
        },
        end: {
          line: 204,
          column: 63
        }
      },
      "53": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 208,
          column: 9
        }
      },
      "54": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 207,
          column: 61
        }
      },
      "55": {
        start: {
          line: 209,
          column: 8
        },
        end: {
          line: 211,
          column: 9
        }
      },
      "56": {
        start: {
          line: 210,
          column: 12
        },
        end: {
          line: 210,
          column: 114
        }
      },
      "57": {
        start: {
          line: 213,
          column: 21
        },
        end: {
          line: 213,
          column: 55
        }
      },
      "58": {
        start: {
          line: 214,
          column: 19
        },
        end: {
          line: 214,
          column: 43
        }
      },
      "59": {
        start: {
          line: 215,
          column: 47
        },
        end: {
          line: 217,
          column: 26
        }
      },
      "60": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 227,
          column: 9
        }
      },
      "61": {
        start: {
          line: 219,
          column: 12
        },
        end: {
          line: 221,
          column: 15
        }
      },
      "62": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 226,
          column: 15
        }
      },
      "63": {
        start: {
          line: 229,
          column: 27
        },
        end: {
          line: 229,
          column: 66
        }
      },
      "64": {
        start: {
          line: 230,
          column: 28
        },
        end: {
          line: 230,
          column: 53
        }
      },
      "65": {
        start: {
          line: 231,
          column: 32
        },
        end: {
          line: 231,
          column: 48
        }
      },
      "66": {
        start: {
          line: 233,
          column: 22
        },
        end: {
          line: 233,
          column: 32
        }
      },
      "67": {
        start: {
          line: 234,
          column: 27
        },
        end: {
          line: 234,
          column: 91
        }
      },
      "68": {
        start: {
          line: 235,
          column: 28
        },
        end: {
          line: 238,
          column: 16
        }
      },
      "69": {
        start: {
          line: 236,
          column: 30
        },
        end: {
          line: 236,
          column: 56
        }
      },
      "70": {
        start: {
          line: 237,
          column: 12
        },
        end: {
          line: 237,
          column: 43
        }
      },
      "71": {
        start: {
          line: 239,
          column: 26
        },
        end: {
          line: 245,
          column: 9
        }
      },
      "72": {
        start: {
          line: 241,
          column: 52
        },
        end: {
          line: 241,
          column: 78
        }
      },
      "73": {
        start: {
          line: 242,
          column: 54
        },
        end: {
          line: 242,
          column: 82
        }
      },
      "74": {
        start: {
          line: 243,
          column: 56
        },
        end: {
          line: 243,
          column: 80
        }
      },
      "75": {
        start: {
          line: 244,
          column: 60
        },
        end: {
          line: 244,
          column: 84
        }
      },
      "76": {
        start: {
          line: 247,
          column: 29
        },
        end: {
          line: 247,
          column: 51
        }
      },
      "77": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 248,
          column: 101
        }
      },
      "78": {
        start: {
          line: 249,
          column: 25
        },
        end: {
          line: 266,
          column: 9
        }
      },
      "79": {
        start: {
          line: 267,
          column: 29
        },
        end: {
          line: 267,
          column: 64
        }
      },
      "80": {
        start: {
          line: 268,
          column: 8
        },
        end: {
          line: 268,
          column: 116
        }
      },
      "81": {
        start: {
          line: 269,
          column: 8
        },
        end: {
          line: 273,
          column: 11
        }
      },
      "82": {
        start: {
          line: 274,
          column: 8
        },
        end: {
          line: 274,
          column: 28
        }
      },
      "83": {
        start: {
          line: 276,
          column: 29
        },
        end: {
          line: 276,
          column: 51
        }
      },
      "84": {
        start: {
          line: 277,
          column: 8
        },
        end: {
          line: 277,
          column: 96
        }
      },
      "85": {
        start: {
          line: 279,
          column: 29
        },
        end: {
          line: 284,
          column: 9
        }
      },
      "86": {
        start: {
          line: 285,
          column: 8
        },
        end: {
          line: 285,
          column: 71
        }
      },
      "87": {
        start: {
          line: 286,
          column: 8
        },
        end: {
          line: 294,
          column: 9
        }
      },
      "88": {
        start: {
          line: 287,
          column: 12
        },
        end: {
          line: 290,
          column: 15
        }
      },
      "89": {
        start: {
          line: 293,
          column: 12
        },
        end: {
          line: 293,
          column: 55
        }
      },
      "90": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 301,
          column: 11
        }
      },
      "91": {
        start: {
          line: 305,
          column: 22
        },
        end: {
          line: 305,
          column: 32
        }
      },
      "92": {
        start: {
          line: 306,
          column: 4
        },
        end: {
          line: 427,
          column: 5
        }
      },
      "93": {
        start: {
          line: 308,
          column: 32
        },
        end: {
          line: 312,
          column: 33
        }
      },
      "94": {
        start: {
          line: 313,
          column: 8
        },
        end: {
          line: 321,
          column: 9
        }
      },
      "95": {
        start: {
          line: 314,
          column: 29
        },
        end: {
          line: 318,
          column: 14
        }
      },
      "96": {
        start: {
          line: 319,
          column: 12
        },
        end: {
          line: 319,
          column: 116
        }
      },
      "97": {
        start: {
          line: 320,
          column: 12
        },
        end: {
          line: 320,
          column: 28
        }
      },
      "98": {
        start: {
          line: 323,
          column: 27
        },
        end: {
          line: 323,
          column: 52
        }
      },
      "99": {
        start: {
          line: 324,
          column: 8
        },
        end: {
          line: 330,
          column: 9
        }
      },
      "100": {
        start: {
          line: 325,
          column: 12
        },
        end: {
          line: 329,
          column: 15
        }
      },
      "101": {
        start: {
          line: 332,
          column: 21
        },
        end: {
          line: 332,
          column: 41
        }
      },
      "102": {
        start: {
          line: 333,
          column: 8
        },
        end: {
          line: 333,
          column: 88
        }
      },
      "103": {
        start: {
          line: 334,
          column: 33
        },
        end: {
          line: 334,
          column: 66
        }
      },
      "104": {
        start: {
          line: 335,
          column: 8
        },
        end: {
          line: 343,
          column: 9
        }
      },
      "105": {
        start: {
          line: 336,
          column: 12
        },
        end: {
          line: 336,
          column: 93
        }
      },
      "106": {
        start: {
          line: 337,
          column: 12
        },
        end: {
          line: 342,
          column: 15
        }
      },
      "107": {
        start: {
          line: 344,
          column: 26
        },
        end: {
          line: 344,
          column: 47
        }
      },
      "108": {
        start: {
          line: 345,
          column: 8
        },
        end: {
          line: 345,
          column: 91
        }
      },
      "109": {
        start: {
          line: 347,
          column: 28
        },
        end: {
          line: 347,
          column: 104
        }
      },
      "110": {
        start: {
          line: 349,
          column: 28
        },
        end: {
          line: 349,
          column: 105
        }
      },
      "111": {
        start: {
          line: 349,
          column: 64
        },
        end: {
          line: 349,
          column: 101
        }
      },
      "112": {
        start: {
          line: 352,
          column: 32
        },
        end: {
          line: 359,
          column: 9
        }
      },
      "113": {
        start: {
          line: 360,
          column: 8
        },
        end: {
          line: 360,
          column: 99
        }
      },
      "114": {
        start: {
          line: 361,
          column: 51
        },
        end: {
          line: 361,
          column: 137
        }
      },
      "115": {
        start: {
          line: 362,
          column: 8
        },
        end: {
          line: 372,
          column: 9
        }
      },
      "116": {
        start: {
          line: 363,
          column: 12
        },
        end: {
          line: 363,
          column: 76
        }
      },
      "117": {
        start: {
          line: 364,
          column: 12
        },
        end: {
          line: 366,
          column: 15
        }
      },
      "118": {
        start: {
          line: 367,
          column: 12
        },
        end: {
          line: 371,
          column: 15
        }
      },
      "119": {
        start: {
          line: 373,
          column: 8
        },
        end: {
          line: 373,
          column: 72
        }
      },
      "120": {
        start: {
          line: 375,
          column: 27
        },
        end: {
          line: 380,
          column: 15
        }
      },
      "121": {
        start: {
          line: 375,
          column: 56
        },
        end: {
          line: 380,
          column: 13
        }
      },
      "122": {
        start: {
          line: 381,
          column: 8
        },
        end: {
          line: 381,
          column: 94
        }
      },
      "123": {
        start: {
          line: 382,
          column: 38
        },
        end: {
          line: 382,
          column: 106
        }
      },
      "124": {
        start: {
          line: 383,
          column: 8
        },
        end: {
          line: 395,
          column: 9
        }
      },
      "125": {
        start: {
          line: 384,
          column: 12
        },
        end: {
          line: 384,
          column: 76
        }
      },
      "126": {
        start: {
          line: 386,
          column: 12
        },
        end: {
          line: 386,
          column: 85
        }
      },
      "127": {
        start: {
          line: 387,
          column: 12
        },
        end: {
          line: 389,
          column: 15
        }
      },
      "128": {
        start: {
          line: 390,
          column: 12
        },
        end: {
          line: 394,
          column: 15
        }
      },
      "129": {
        start: {
          line: 396,
          column: 8
        },
        end: {
          line: 396,
          column: 65
        }
      },
      "130": {
        start: {
          line: 398,
          column: 29
        },
        end: {
          line: 398,
          column: 51
        }
      },
      "131": {
        start: {
          line: 399,
          column: 8
        },
        end: {
          line: 399,
          column: 104
        }
      },
      "132": {
        start: {
          line: 400,
          column: 25
        },
        end: {
          line: 404,
          column: 9
        }
      },
      "133": {
        start: {
          line: 405,
          column: 29
        },
        end: {
          line: 407,
          column: 10
        }
      },
      "134": {
        start: {
          line: 408,
          column: 8
        },
        end: {
          line: 408,
          column: 116
        }
      },
      "135": {
        start: {
          line: 409,
          column: 8
        },
        end: {
          line: 414,
          column: 11
        }
      },
      "136": {
        start: {
          line: 415,
          column: 8
        },
        end: {
          line: 415,
          column: 28
        }
      },
      "137": {
        start: {
          line: 417,
          column: 29
        },
        end: {
          line: 417,
          column: 51
        }
      },
      "138": {
        start: {
          line: 418,
          column: 8
        },
        end: {
          line: 418,
          column: 90
        }
      },
      "139": {
        start: {
          line: 419,
          column: 8
        },
        end: {
          line: 421,
          column: 11
        }
      },
      "140": {
        start: {
          line: 422,
          column: 8
        },
        end: {
          line: 426,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "validateAdminAuth",
        decl: {
          start: {
            line: 71,
            column: 15
          },
          end: {
            line: 71,
            column: 32
          }
        },
        loc: {
          start: {
            line: 71,
            column: 35
          },
          end: {
            line: 112,
            column: 1
          }
        },
        line: 71
      },
      "5": {
        name: "GET",
        decl: {
          start: {
            line: 113,
            column: 15
          },
          end: {
            line: 113,
            column: 18
          }
        },
        loc: {
          start: {
            line: 113,
            column: 28
          },
          end: {
            line: 303,
            column: 1
          }
        },
        line: 113
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 235,
            column: 43
          },
          end: {
            line: 235,
            column: 44
          }
        },
        loc: {
          start: {
            line: 235,
            column: 52
          },
          end: {
            line: 238,
            column: 9
          }
        },
        line: 235
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 241,
            column: 43
          },
          end: {
            line: 241,
            column: 44
          }
        },
        loc: {
          start: {
            line: 241,
            column: 52
          },
          end: {
            line: 241,
            column: 78
          }
        },
        line: 241
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 242,
            column: 45
          },
          end: {
            line: 242,
            column: 46
          }
        },
        loc: {
          start: {
            line: 242,
            column: 54
          },
          end: {
            line: 242,
            column: 82
          }
        },
        line: 242
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 243,
            column: 42
          },
          end: {
            line: 243,
            column: 43
          }
        },
        loc: {
          start: {
            line: 243,
            column: 56
          },
          end: {
            line: 243,
            column: 80
          }
        },
        line: 243
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 244,
            column: 46
          },
          end: {
            line: 244,
            column: 47
          }
        },
        loc: {
          start: {
            line: 244,
            column: 60
          },
          end: {
            line: 244,
            column: 84
          }
        },
        line: 244
      },
      "11": {
        name: "POST",
        decl: {
          start: {
            line: 304,
            column: 15
          },
          end: {
            line: 304,
            column: 19
          }
        },
        loc: {
          start: {
            line: 304,
            column: 29
          },
          end: {
            line: 428,
            column: 1
          }
        },
        line: 304
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 349,
            column: 51
          },
          end: {
            line: 349,
            column: 52
          }
        },
        loc: {
          start: {
            line: 349,
            column: 64
          },
          end: {
            line: 349,
            column: 101
          }
        },
        line: 349
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 375,
            column: 47
          },
          end: {
            line: 375,
            column: 48
          }
        },
        loc: {
          start: {
            line: 375,
            column: 56
          },
          end: {
            line: 380,
            column: 13
          }
        },
        line: 375
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 83,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 83,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "1": {
        loc: {
          start: {
            line: 74,
            column: 12
          },
          end: {
            line: 74,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 74,
            column: 12
          },
          end: {
            line: 74,
            column: 50
          }
        }, {
          start: {
            line: 74,
            column: 54
          },
          end: {
            line: 74,
            column: 88
          }
        }],
        line: 74
      },
      "2": {
        loc: {
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 90,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 90,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "3": {
        loc: {
          start: {
            line: 93,
            column: 8
          },
          end: {
            line: 98,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 8
          },
          end: {
            line: 98,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 93
      },
      "4": {
        loc: {
          start: {
            line: 120,
            column: 21
          },
          end: {
            line: 120,
            column: 110
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 120,
            column: 21
          },
          end: {
            line: 120,
            column: 66
          }
        }, {
          start: {
            line: 120,
            column: 70
          },
          end: {
            line: 120,
            column: 110
          }
        }],
        line: 120
      },
      "5": {
        loc: {
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 130,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 130,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 122
      },
      "6": {
        loc: {
          start: {
            line: 133,
            column: 8
          },
          end: {
            line: 139,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 133,
            column: 8
          },
          end: {
            line: 139,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 133
      },
      "7": {
        loc: {
          start: {
            line: 156,
            column: 8
          },
          end: {
            line: 167,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 156,
            column: 8
          },
          end: {
            line: 167,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 156
      },
      "8": {
        loc: {
          start: {
            line: 200,
            column: 8
          },
          end: {
            line: 202,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 200,
            column: 8
          },
          end: {
            line: 202,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 200
      },
      "9": {
        loc: {
          start: {
            line: 203,
            column: 8
          },
          end: {
            line: 205,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 203,
            column: 8
          },
          end: {
            line: 205,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 203
      },
      "10": {
        loc: {
          start: {
            line: 206,
            column: 8
          },
          end: {
            line: 208,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 206,
            column: 8
          },
          end: {
            line: 208,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 206
      },
      "11": {
        loc: {
          start: {
            line: 209,
            column: 8
          },
          end: {
            line: 211,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 209,
            column: 8
          },
          end: {
            line: 211,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 209
      },
      "12": {
        loc: {
          start: {
            line: 218,
            column: 8
          },
          end: {
            line: 227,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 218,
            column: 8
          },
          end: {
            line: 227,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 218
      },
      "13": {
        loc: {
          start: {
            line: 229,
            column: 38
          },
          end: {
            line: 229,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 229,
            column: 38
          },
          end: {
            line: 229,
            column: 43
          }
        }, {
          start: {
            line: 229,
            column: 47
          },
          end: {
            line: 229,
            column: 48
          }
        }],
        line: 229
      },
      "14": {
        loc: {
          start: {
            line: 235,
            column: 28
          },
          end: {
            line: 238,
            column: 16
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 235,
            column: 28
          },
          end: {
            line: 238,
            column: 10
          }
        }, {
          start: {
            line: 238,
            column: 14
          },
          end: {
            line: 238,
            column: 16
          }
        }],
        line: 235
      },
      "15": {
        loc: {
          start: {
            line: 240,
            column: 26
          },
          end: {
            line: 240,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 240,
            column: 26
          },
          end: {
            line: 240,
            column: 31
          }
        }, {
          start: {
            line: 240,
            column: 35
          },
          end: {
            line: 240,
            column: 36
          }
        }],
        line: 240
      },
      "16": {
        loc: {
          start: {
            line: 241,
            column: 28
          },
          end: {
            line: 241,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 241,
            column: 28
          },
          end: {
            line: 241,
            column: 86
          }
        }, {
          start: {
            line: 241,
            column: 90
          },
          end: {
            line: 241,
            column: 91
          }
        }],
        line: 241
      },
      "17": {
        loc: {
          start: {
            line: 242,
            column: 30
          },
          end: {
            line: 242,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 242,
            column: 30
          },
          end: {
            line: 242,
            column: 90
          }
        }, {
          start: {
            line: 242,
            column: 94
          },
          end: {
            line: 242,
            column: 95
          }
        }],
        line: 242
      },
      "18": {
        loc: {
          start: {
            line: 243,
            column: 27
          },
          end: {
            line: 243,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 243,
            column: 27
          },
          end: {
            line: 243,
            column: 84
          }
        }, {
          start: {
            line: 243,
            column: 88
          },
          end: {
            line: 243,
            column: 89
          }
        }],
        line: 243
      },
      "19": {
        loc: {
          start: {
            line: 243,
            column: 63
          },
          end: {
            line: 243,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 243,
            column: 63
          },
          end: {
            line: 243,
            column: 74
          }
        }, {
          start: {
            line: 243,
            column: 78
          },
          end: {
            line: 243,
            column: 79
          }
        }],
        line: 243
      },
      "20": {
        loc: {
          start: {
            line: 244,
            column: 67
          },
          end: {
            line: 244,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 244,
            column: 67
          },
          end: {
            line: 244,
            column: 78
          }
        }, {
          start: {
            line: 244,
            column: 82
          },
          end: {
            line: 244,
            column: 83
          }
        }],
        line: 244
      },
      "21": {
        loc: {
          start: {
            line: 255,
            column: 27
          },
          end: {
            line: 255,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 255,
            column: 27
          },
          end: {
            line: 255,
            column: 32
          }
        }, {
          start: {
            line: 255,
            column: 36
          },
          end: {
            line: 255,
            column: 37
          }
        }],
        line: 255
      },
      "22": {
        loc: {
          start: {
            line: 280,
            column: 21
          },
          end: {
            line: 280,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 280,
            column: 46
          },
          end: {
            line: 280,
            column: 59
          }
        }, {
          start: {
            line: 280,
            column: 62
          },
          end: {
            line: 280,
            column: 77
          }
        }],
        line: 280
      },
      "23": {
        loc: {
          start: {
            line: 281,
            column: 19
          },
          end: {
            line: 281,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 281,
            column: 44
          },
          end: {
            line: 281,
            column: 55
          }
        }, {
          start: {
            line: 281,
            column: 58
          },
          end: {
            line: 281,
            column: 67
          }
        }],
        line: 281
      },
      "24": {
        loc: {
          start: {
            line: 282,
            column: 18
          },
          end: {
            line: 282,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 282,
            column: 43
          },
          end: {
            line: 282,
            column: 53
          }
        }, {
          start: {
            line: 282,
            column: 56
          },
          end: {
            line: 282,
            column: 70
          }
        }],
        line: 282
      },
      "25": {
        loc: {
          start: {
            line: 283,
            column: 19
          },
          end: {
            line: 283,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 283,
            column: 44
          },
          end: {
            line: 283,
            column: 55
          }
        }, {
          start: {
            line: 283,
            column: 58
          },
          end: {
            line: 283,
            column: 67
          }
        }],
        line: 283
      },
      "26": {
        loc: {
          start: {
            line: 298,
            column: 19
          },
          end: {
            line: 298,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 298,
            column: 60
          },
          end: {
            line: 298,
            column: 72
          }
        }, {
          start: {
            line: 298,
            column: 75
          },
          end: {
            line: 298,
            column: 84
          }
        }],
        line: 298
      },
      "27": {
        loc: {
          start: {
            line: 311,
            column: 21
          },
          end: {
            line: 311,
            column: 110
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 311,
            column: 21
          },
          end: {
            line: 311,
            column: 66
          }
        }, {
          start: {
            line: 311,
            column: 70
          },
          end: {
            line: 311,
            column: 110
          }
        }],
        line: 311
      },
      "28": {
        loc: {
          start: {
            line: 313,
            column: 8
          },
          end: {
            line: 321,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 313,
            column: 8
          },
          end: {
            line: 321,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 313
      },
      "29": {
        loc: {
          start: {
            line: 324,
            column: 8
          },
          end: {
            line: 330,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 324,
            column: 8
          },
          end: {
            line: 330,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 324
      },
      "30": {
        loc: {
          start: {
            line: 335,
            column: 8
          },
          end: {
            line: 343,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 335,
            column: 8
          },
          end: {
            line: 343,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 335
      },
      "31": {
        loc: {
          start: {
            line: 357,
            column: 30
          },
          end: {
            line: 357,
            column: 108
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 357,
            column: 59
          },
          end: {
            line: 357,
            column: 101
          }
        }, {
          start: {
            line: 357,
            column: 104
          },
          end: {
            line: 357,
            column: 108
          }
        }],
        line: 357
      },
      "32": {
        loc: {
          start: {
            line: 362,
            column: 8
          },
          end: {
            line: 372,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 362,
            column: 8
          },
          end: {
            line: 372,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 362
      },
      "33": {
        loc: {
          start: {
            line: 383,
            column: 8
          },
          end: {
            line: 395,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 383,
            column: 8
          },
          end: {
            line: 395,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 383
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\orders\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - ADMIN ORDERS API ENTERPRISE\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { supabaseAdmin } from '@/lib/integrations/supabase';\r\nimport { auth } from '@/lib/auth/config';\r\nimport { ApiResponse } from '@/types/api';\r\nimport { z } from 'zod';\r\nimport { logger, LogLevel, LogCategory } from '@/lib/enterprise/logger';\r\nimport { checkRateLimit } from '@/lib/auth/rate-limiting';\r\nimport { addRateLimitHeaders, RATE_LIMIT_CONFIGS } from '@/lib/enterprise/rate-limiter';\r\nimport { metricsCollector } from '@/lib/enterprise/metrics';\r\n\r\n// ===================================\r\n// SCHEMAS DE VALIDACI\xD3N ENTERPRISE\r\n// ===================================\r\n\r\nconst OrderFiltersSchema = z.object({\r\n  page: z.coerce.number().min(1).default(1),\r\n  limit: z.coerce.number().min(1).max(100).default(25),\r\n  status: z.string().optional().nullable(),\r\n  date_from: z.string().optional().nullable(),\r\n  date_to: z.string().optional().nullable(),\r\n  search: z.string().optional().nullable(),\r\n  sort_by: z.enum(['created_at', 'total', 'id']).default('created_at'),\r\n  sort_order: z.enum(['asc', 'desc']).default('desc'),\r\n});\r\n\r\nconst CreateOrderSchema = z.object({\r\n  user_id: z.string().uuid('ID de usuario inv\xE1lido'),\r\n  items: z.array(z.object({\r\n    product_id: z.number().min(1),\r\n    quantity: z.number().min(1).max(99),\r\n    unit_price: z.number().min(0),\r\n  })).min(1, 'Al menos un item es requerido'),\r\n  shipping_address: z.object({\r\n    street_name: z.string().min(1),\r\n    street_number: z.string().min(1),\r\n    zip_code: z.string().min(1),\r\n    city_name: z.string().min(1),\r\n    state_name: z.string().min(1),\r\n  }).optional(),\r\n  notes: z.string().optional(),\r\n});\r\n\r\n// ===================================\r\n// MIDDLEWARE DE AUTENTICACI\xD3N ADMIN\r\n// ===================================\r\n\r\nasync function validateAdminAuth() {\r\n  try {\r\n    // BYPASS TEMPORAL PARA DESARROLLO\r\n    if (process.env.NODE_ENV === 'development' && process.env.BYPASS_AUTH === 'true') {\r\n      return {\r\n        user: {\r\n          id: 'dev-admin',\r\n          email: 'santiago@xor.com.ar',\r\n          name: 'Dev Admin'\r\n        },\r\n        userId: 'dev-admin'\r\n      };\r\n    }\r\n\r\n    const session = await auth();\r\n    if (!session?.user) {\r\n      return { error: 'Usuario no autenticado', status: 401 };\r\n    }\r\n\r\n    // Verificar si es admin (usando email como en otros endpoints admin)\r\n    const isAdmin = session.user.email === 'santiago@xor.com.ar';\r\n    if (!isAdmin) {\r\n      return { error: 'Acceso denegado - Se requieren permisos de administrador', status: 403 };\r\n    }\r\n\r\n    return { user: session.user, userId: session.user.id };\r\n  } catch (error) {\r\n    logger.log(LogLevel.ERROR, LogCategory.AUTH, 'Error en validaci\xF3n admin', { error });\r\n    return { error: 'Error de autenticaci\xF3n', status: 500 };\r\n  }\r\n}\r\n\r\n// ===================================\r\n// GET - Listar \xF3rdenes con filtros avanzados\r\n// ===================================\r\nexport async function GET(request: NextRequest) {\r\n  const startTime = Date.now();\r\n\r\n  try {\r\n    // Rate limiting\r\n    const rateLimitResult = await checkRateLimit(\r\n      request,\r\n      {\r\n        windowMs: RATE_LIMIT_CONFIGS.admin.windowMs,\r\n        maxRequests: RATE_LIMIT_CONFIGS.admin.maxRequests,\r\n        message: RATE_LIMIT_CONFIGS.admin.message || 'Demasiadas solicitudes administrativas'\r\n      },\r\n      'admin-orders'\r\n    );\r\n\r\n    if (!rateLimitResult.allowed) {\r\n      const response = NextResponse.json(\r\n        { error: 'Demasiadas solicitudes' },\r\n        { status: 429 }\r\n      );\r\n      addRateLimitHeaders(response, rateLimitResult, RATE_LIMIT_CONFIGS.admin);\r\n      return response;\r\n    }\r\n\r\n    // Validar autenticaci\xF3n admin\r\n    const authResult = await validateAdminAuth();\r\n    if ('error' in authResult) {\r\n      return NextResponse.json(\r\n        { error: authResult.error },\r\n        { status: authResult.status }\r\n      );\r\n    }\r\n\r\n    // Validar par\xE1metros de consulta\r\n    const { searchParams } = new URL(request.url);\r\n    const queryParams = {\r\n      page: searchParams.get('page'),\r\n      limit: searchParams.get('limit'),\r\n      status: searchParams.get('status'),\r\n      date_from: searchParams.get('date_from'),\r\n      date_to: searchParams.get('date_to'),\r\n      search: searchParams.get('search'),\r\n      sort_by: searchParams.get('sort_by'),\r\n      sort_order: searchParams.get('sort_order'),\r\n    };\r\n\r\n    logger.log(LogLevel.INFO, LogCategory.API, 'Par\xE1metros recibidos', { queryParams });\r\n\r\n    const filtersResult = OrderFiltersSchema.safeParse(queryParams);\r\n\r\n    if (!filtersResult.success) {\r\n      logger.log(LogLevel.ERROR, LogCategory.VALIDATION, 'Par\xE1metros de consulta inv\xE1lidos', {\r\n        queryParams,\r\n        errors: filtersResult.error.errors\r\n      });\r\n      return NextResponse.json(\r\n        { error: 'Par\xE1metros de consulta inv\xE1lidos', details: filtersResult.error.errors },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    const filters = filtersResult.data;\r\n\r\n    // Construir query base con joins optimizados\r\n    let query = supabaseAdmin\r\n      .from('orders')\r\n      .select(`\r\n        id,\r\n        status,\r\n        total,\r\n        payment_id,\r\n        created_at,\r\n        updated_at,\r\n        shipping_address,\r\n        external_reference,\r\n        payment_preference_id,\r\n        payer_info,\r\n        users (\r\n          id,\r\n          name,\r\n          email\r\n        ),\r\n        order_items (\r\n          id,\r\n          quantity,\r\n          price,\r\n          products (\r\n            id,\r\n            name,\r\n            images\r\n          )\r\n        )\r\n      `, { count: 'exact' });\r\n\r\n    // Aplicar filtros\r\n    if (filters.status) {\r\n      query = query.eq('status', filters.status);\r\n    }\r\n\r\n    if (filters.date_from) {\r\n      query = query.gte('created_at', filters.date_from);\r\n    }\r\n\r\n    if (filters.date_to) {\r\n      query = query.lte('created_at', filters.date_to);\r\n    }\r\n\r\n    if (filters.search) {\r\n      query = query.or(`external_reference.ilike.%${filters.search}%,payment_id.ilike.%${filters.search}%`);\r\n    }\r\n\r\n    // Aplicar ordenamiento y paginaci\xF3n\r\n    const from = (filters.page - 1) * filters.limit;\r\n    const to = from + filters.limit - 1;\r\n\r\n    const { data: orders, error, count } = await query\r\n      .order(filters.sort_by, { ascending: filters.sort_order === 'asc' })\r\n      .range(from, to);\r\n\r\n    if (error) {\r\n      logger.log(LogLevel.ERROR, LogCategory.DATABASE, 'Error al obtener \xF3rdenes admin', { error });\r\n      return NextResponse.json(\r\n        { error: 'Error al obtener \xF3rdenes' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Calcular estad\xEDsticas de paginaci\xF3n\r\n    const totalPages = Math.ceil((count || 0) / filters.limit);\r\n    const hasNextPage = filters.page < totalPages;\r\n    const hasPreviousPage = filters.page > 1;\r\n\r\n    // Calcular analytics b\xE1sicas\r\n    const today = new Date();\r\n    const todayStart = new Date(today.getFullYear(), today.getMonth(), today.getDate());\r\n    const todayOrders = orders?.filter(order => {\r\n      const orderDate = new Date(order.created_at);\r\n      return orderDate >= todayStart;\r\n    }) || [];\r\n    \r\n    const analytics = {\r\n      total_orders: count || 0,\r\n      pending_orders: orders?.filter(order => order.status === 'pending').length || 0,\r\n      completed_orders: orders?.filter(order => order.status === 'completed').length || 0,\r\n      total_revenue: orders?.reduce((sum, order) => sum + (order.total || 0), 0) || 0,\r\n      today_revenue: todayOrders.reduce((sum, order) => sum + (order.total || 0), 0)\r\n    };\r\n\r\n    // M\xE9tricas de performance\r\n    const responseTime = Date.now() - startTime;\r\n    await metricsCollector.recordRequest('admin-orders-list', 'GET', 200, responseTime);\r\n\r\n    const response: ApiResponse<{\r\n      orders: typeof orders;\r\n      pagination: {\r\n        page: number;\r\n        limit: number;\r\n        total: number;\r\n        totalPages: number;\r\n        hasNextPage: boolean;\r\n        hasPreviousPage: boolean;\r\n      };\r\n      analytics: {\r\n         total_orders: number;\r\n         pending_orders: number;\r\n         completed_orders: number;\r\n         total_revenue: number;\r\n         today_revenue: number;\r\n       };\r\n      filters: typeof filters;\r\n    }> = {\r\n      data: {\r\n        orders,\r\n        pagination: {\r\n          page: filters.page,\r\n          limit: filters.limit,\r\n          total: count || 0,\r\n          totalPages,\r\n          hasNextPage,\r\n          hasPreviousPage,\r\n        },\r\n        analytics,\r\n        filters,\r\n      },\r\n      success: true,\r\n      error: null,\r\n      timestamp: new Date().toISOString()\r\n    };\r\n\r\n    const nextResponse = NextResponse.json(response);\r\n    addRateLimitHeaders(nextResponse, rateLimitResult, RATE_LIMIT_CONFIGS.admin);\r\n\r\n    logger.log(LogLevel.INFO, LogCategory.API, '\xD3rdenes admin obtenidas exitosamente', {\r\n      count: orders?.length,\r\n      total: count,\r\n      responseTime,\r\n    });\r\n\r\n    return nextResponse;\r\n\r\n  } catch (error) {\r\n    const responseTime = Date.now() - startTime;\r\n    await metricsCollector.recordRequest('admin-orders', 'GET', 500, responseTime);\r\n\r\n    // Logging detallado del error\r\n    const errorDetails = {\r\n      message: error instanceof Error ? error.message : 'Unknown error',\r\n      stack: error instanceof Error ? error.stack : undefined,\r\n      name: error instanceof Error ? error.name : 'UnknownError',\r\n      cause: error instanceof Error ? error.cause : undefined\r\n    };\r\n\r\n    console.error('\u274C [Orders API] Error detallado:', errorDetails);\r\n\r\n    try {\r\n      logger.log(LogLevel.ERROR, LogCategory.API, 'Error en GET /api/admin/orders', {\r\n        error: errorDetails,\r\n        timestamp: new Date().toISOString()\r\n      });\r\n    } catch (logError) {\r\n      // Ignorar errores de logging en desarrollo\r\n      console.error('Logging failed:', logError);\r\n    }\r\n\r\n    return NextResponse.json(\r\n      {\r\n        error: 'Error interno del servidor',\r\n        details: errorDetails.message,\r\n        debug: process.env.NODE_ENV === 'development' ? errorDetails : undefined\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// ===================================\r\n// POST - Crear nueva orden (admin)\r\n// ===================================\r\nexport async function POST(request: NextRequest) {\r\n  const startTime = Date.now();\r\n\r\n  try {\r\n    // Rate limiting\r\n    const rateLimitResult = await checkRateLimit(\r\n      request,\r\n      {\r\n        windowMs: RATE_LIMIT_CONFIGS.admin.windowMs,\r\n        maxRequests: RATE_LIMIT_CONFIGS.admin.maxRequests,\r\n        message: RATE_LIMIT_CONFIGS.admin.message || 'Demasiadas solicitudes administrativas'\r\n      },\r\n      'admin-orders-create'\r\n    );\r\n\r\n    if (!rateLimitResult.allowed) {\r\n      const response = NextResponse.json(\r\n        { error: 'Demasiadas solicitudes' },\r\n        { status: 429 }\r\n      );\r\n      addRateLimitHeaders(response, rateLimitResult, RATE_LIMIT_CONFIGS.admin);\r\n      return response;\r\n    }\r\n\r\n    // Validar autenticaci\xF3n admin\r\n    const authResult = await validateAdminAuth();\r\n    if ('error' in authResult) {\r\n      return NextResponse.json(\r\n        { error: authResult.error },\r\n        { status: authResult.status }\r\n      );\r\n    }\r\n\r\n    // Validar datos de entrada\r\n    const body = await request.json();\r\n    console.log('\uD83D\uDD0D [Orders API] Payload recibido:', JSON.stringify(body, null, 2));\r\n\r\n    const validationResult = CreateOrderSchema.safeParse(body);\r\n\r\n    if (!validationResult.success) {\r\n      console.log('\u274C [Orders API] Validaci\xF3n fallida:', validationResult.error.errors);\r\n      return NextResponse.json(\r\n        { error: 'Datos de orden inv\xE1lidos', details: validationResult.error.errors },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    const orderData = validationResult.data;\r\n    console.log('\u2705 [Orders API] Datos validados:', JSON.stringify(orderData, null, 2));\r\n\r\n    // Generar n\xFAmero de orden \xFAnico\r\n    const orderNumber = `ORD-${Date.now()}-${Math.random().toString(36).substr(2, 9).toUpperCase()}`;\r\n\r\n    // Calcular total\r\n    const totalAmount = orderData.items.reduce((sum, item) =>\r\n      sum + (item.unit_price * item.quantity), 0\r\n    );\r\n\r\n    // Crear orden en transacci\xF3n\r\n    // Solo usar columnas que existen en la tabla: id, user_id, total, status, payment_id, shipping_address, created_at, updated_at, external_reference, payment_preference_id, payer_info, payment_status\r\n    const orderInsertData = {\r\n      user_id: orderData.user_id,\r\n      status: 'pending',\r\n      payment_status: 'pending',\r\n      total: totalAmount,\r\n      shipping_address: orderData.shipping_address ? JSON.stringify(orderData.shipping_address) : null,\r\n      external_reference: orderNumber, // Usar external_reference para almacenar el n\xFAmero de orden\r\n    };\r\n\r\n    console.log('\uD83D\uDCDD [Orders API] Insertando orden:', JSON.stringify(orderInsertData, null, 2));\r\n\r\n    const { data: order, error: orderError } = await supabaseAdmin\r\n      .from('orders')\r\n      .insert(orderInsertData)\r\n      .select()\r\n      .single();\r\n\r\n    if (orderError) {\r\n      console.log('\u274C [Orders API] Error al crear orden:', orderError);\r\n      logger.log(LogLevel.ERROR, LogCategory.DATABASE, 'Error al crear orden', { orderError });\r\n      return NextResponse.json(\r\n        { error: 'Error al crear orden' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    console.log('\u2705 [Orders API] Orden creada exitosamente:', order);\r\n\r\n    // Crear items de la orden\r\n    const orderItems = orderData.items.map(item => ({\r\n      order_id: order.id,\r\n      product_id: item.product_id,\r\n      quantity: item.quantity,\r\n      price: item.unit_price, // La tabla order_items usa 'price' en lugar de 'unit_price' y 'total_price'\r\n    }));\r\n\r\n    console.log('\uD83D\uDCDD [Orders API] Insertando items:', JSON.stringify(orderItems, null, 2));\r\n\r\n    const { error: itemsError } = await supabaseAdmin\r\n      .from('order_items')\r\n      .insert(orderItems);\r\n\r\n    if (itemsError) {\r\n      console.log('\u274C [Orders API] Error al crear items:', itemsError);\r\n      // Rollback: eliminar orden creada\r\n      await supabaseAdmin.from('orders').delete().eq('id', order.id);\r\n\r\n      logger.log(LogLevel.ERROR, LogCategory.DATABASE, 'Error al crear items de orden', { itemsError });\r\n      return NextResponse.json(\r\n        { error: 'Error al crear items de orden' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    console.log('\u2705 [Orders API] Items creados exitosamente');\r\n\r\n    // M\xE9tricas de performance\r\n    const responseTime = Date.now() - startTime;\r\n    await metricsCollector.recordRequest('admin-orders-create', 'POST', 201, responseTime);\r\n\r\n    const response: ApiResponse<typeof order> = {\r\n      data: order,\r\n      success: true,\r\n      error: null,\r\n    };\r\n\r\n    const nextResponse = NextResponse.json(response, { status: 201 });\r\n    addRateLimitHeaders(nextResponse, rateLimitResult, RATE_LIMIT_CONFIGS.admin);\r\n\r\n    logger.log(LogLevel.INFO, LogCategory.API, 'Orden creada exitosamente por admin', {\r\n      orderId: order.id,\r\n      orderNumber,\r\n      totalAmount,\r\n      responseTime,\r\n    });\r\n\r\n    return nextResponse;\r\n\r\n  } catch (error) {\r\n    const responseTime = Date.now() - startTime;\r\n    metricsCollector.recordApiCall('admin-orders-create', responseTime, 500);\r\n\r\n    logger.log(LogLevel.ERROR, LogCategory.API, 'Error en POST /api/admin/orders', { error });\r\n\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "POST", "runtime", "OrderFiltersSchema", "z", "object", "page", "coerce", "number", "min", "default", "limit", "max", "status", "string", "optional", "nullable", "date_from", "date_to", "search", "sort_by", "enum", "sort_order", "CreateOrderSchema", "user_id", "uuid", "items", "array", "product_id", "quantity", "unit_price", "shipping_address", "street_name", "street_number", "zip_code", "city_name", "state_name", "notes", "validateAdminAuth", "process", "env", "NODE_ENV", "BYPASS_AUTH", "user", "id", "email", "name", "userId", "session", "auth", "error", "isAdmin", "logger", "log", "LogLevel", "ERROR", "LogCategory", "AUTH", "request", "startTime", "Date", "now", "rateLimitResult", "checkRateLimit", "windowMs", "RATE_LIMIT_CONFIGS", "admin", "maxRequests", "message", "allowed", "response", "NextResponse", "json", "addRateLimitHeaders", "authResult", "searchParams", "URL", "url", "queryParams", "get", "INFO", "API", "filtersResult", "safeParse", "success", "VALIDATION", "errors", "details", "filters", "data", "query", "supabaseAdmin", "from", "select", "count", "eq", "gte", "lte", "or", "to", "orders", "order", "ascending", "range", "DATABASE", "totalPages", "Math", "ceil", "hasNextPage", "hasPreviousPage", "today", "todayStart", "getFullYear", "getMonth", "getDate", "todayOrders", "filter", "orderDate", "created_at", "analytics", "total_orders", "pending_orders", "length", "completed_orders", "total_revenue", "reduce", "sum", "total", "today_revenue", "responseTime", "metricsCollector", "recordRequest", "pagination", "timestamp", "toISOString", "nextResponse", "errorDetails", "Error", "stack", "undefined", "cause", "console", "logError", "debug", "body", "JSON", "stringify", "validationResult", "orderData", "orderNumber", "random", "toString", "substr", "toUpperCase", "totalAmount", "item", "orderInsertData", "payment_status", "external_reference", "orderError", "insert", "single", "orderItems", "map", "order_id", "price", "itemsError", "delete", "orderId", "recordApiCall"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8c26f9e743910622abbfce109ef2238869acf700"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_qehnw8be = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_qehnw8be();
cov_qehnw8be().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_qehnw8be().f[0]++;
  cov_qehnw8be().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_qehnw8be().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_qehnw8be().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_qehnw8be().f[1]++;
    cov_qehnw8be().s[4]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_qehnw8be().f[2]++;
    cov_qehnw8be().s[5]++;
    return POST;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_qehnw8be().f[3]++;
    cov_qehnw8be().s[6]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_qehnw8be().s[7]++, require("next/server"));
const _supabase =
/* istanbul ignore next */
(cov_qehnw8be().s[8]++, require("../../../../lib/integrations/supabase"));
const _config =
/* istanbul ignore next */
(cov_qehnw8be().s[9]++, require("../../../../lib/auth/config"));
const _zod =
/* istanbul ignore next */
(cov_qehnw8be().s[10]++, require("zod"));
const _logger =
/* istanbul ignore next */
(cov_qehnw8be().s[11]++, require("../../../../lib/enterprise/logger"));
const _ratelimiting =
/* istanbul ignore next */
(cov_qehnw8be().s[12]++, require("../../../../lib/auth/rate-limiting"));
const _ratelimiter =
/* istanbul ignore next */
(cov_qehnw8be().s[13]++, require("../../../../lib/enterprise/rate-limiter"));
const _metrics =
/* istanbul ignore next */
(cov_qehnw8be().s[14]++, require("../../../../lib/enterprise/metrics"));
const runtime =
/* istanbul ignore next */
(cov_qehnw8be().s[15]++, 'nodejs');
// ===================================
// SCHEMAS DE VALIDACIÃN ENTERPRISE
// ===================================
const OrderFiltersSchema =
/* istanbul ignore next */
(cov_qehnw8be().s[16]++, _zod.z.object({
  page: _zod.z.coerce.number().min(1).default(1),
  limit: _zod.z.coerce.number().min(1).max(100).default(25),
  status: _zod.z.string().optional().nullable(),
  date_from: _zod.z.string().optional().nullable(),
  date_to: _zod.z.string().optional().nullable(),
  search: _zod.z.string().optional().nullable(),
  sort_by: _zod.z.enum(['created_at', 'total', 'id']).default('created_at'),
  sort_order: _zod.z.enum(['asc', 'desc']).default('desc')
}));
const CreateOrderSchema =
/* istanbul ignore next */
(cov_qehnw8be().s[17]++, _zod.z.object({
  user_id: _zod.z.string().uuid('ID de usuario invÃ¡lido'),
  items: _zod.z.array(_zod.z.object({
    product_id: _zod.z.number().min(1),
    quantity: _zod.z.number().min(1).max(99),
    unit_price: _zod.z.number().min(0)
  })).min(1, 'Al menos un item es requerido'),
  shipping_address: _zod.z.object({
    street_name: _zod.z.string().min(1),
    street_number: _zod.z.string().min(1),
    zip_code: _zod.z.string().min(1),
    city_name: _zod.z.string().min(1),
    state_name: _zod.z.string().min(1)
  }).optional(),
  notes: _zod.z.string().optional()
}));
// ===================================
// MIDDLEWARE DE AUTENTICACIÃN ADMIN
// ===================================
async function validateAdminAuth() {
  /* istanbul ignore next */
  cov_qehnw8be().f[4]++;
  cov_qehnw8be().s[18]++;
  try {
    /* istanbul ignore next */
    cov_qehnw8be().s[19]++;
    // BYPASS TEMPORAL PARA DESARROLLO
    if (
    /* istanbul ignore next */
    (cov_qehnw8be().b[1][0]++, process.env.NODE_ENV === 'development') &&
    /* istanbul ignore next */
    (cov_qehnw8be().b[1][1]++, process.env.BYPASS_AUTH === 'true')) {
      /* istanbul ignore next */
      cov_qehnw8be().b[0][0]++;
      cov_qehnw8be().s[20]++;
      return {
        user: {
          id: 'dev-admin',
          email: 'santiago@xor.com.ar',
          name: 'Dev Admin'
        },
        userId: 'dev-admin'
      };
    } else
    /* istanbul ignore next */
    {
      cov_qehnw8be().b[0][1]++;
    }
    const session =
    /* istanbul ignore next */
    (cov_qehnw8be().s[21]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_qehnw8be().s[22]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_qehnw8be().b[2][0]++;
      cov_qehnw8be().s[23]++;
      return {
        error: 'Usuario no autenticado',
        status: 401
      };
    } else
    /* istanbul ignore next */
    {
      cov_qehnw8be().b[2][1]++;
    }
    // Verificar si es admin (usando email como en otros endpoints admin)
    const isAdmin =
    /* istanbul ignore next */
    (cov_qehnw8be().s[24]++, session.user.email === 'santiago@xor.com.ar');
    /* istanbul ignore next */
    cov_qehnw8be().s[25]++;
    if (!isAdmin) {
      /* istanbul ignore next */
      cov_qehnw8be().b[3][0]++;
      cov_qehnw8be().s[26]++;
      return {
        error: 'Acceso denegado - Se requieren permisos de administrador',
        status: 403
      };
    } else
    /* istanbul ignore next */
    {
      cov_qehnw8be().b[3][1]++;
    }
    cov_qehnw8be().s[27]++;
    return {
      user: session.user,
      userId: session.user.id
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_qehnw8be().s[28]++;
    _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.AUTH, 'Error en validaciÃ³n admin', {
      error
    });
    /* istanbul ignore next */
    cov_qehnw8be().s[29]++;
    return {
      error: 'Error de autenticaciÃ³n',
      status: 500
    };
  }
}
async function GET(request) {
  /* istanbul ignore next */
  cov_qehnw8be().f[5]++;
  const startTime =
  /* istanbul ignore next */
  (cov_qehnw8be().s[30]++, Date.now());
  /* istanbul ignore next */
  cov_qehnw8be().s[31]++;
  try {
    // Rate limiting
    const rateLimitResult =
    /* istanbul ignore next */
    (cov_qehnw8be().s[32]++, await (0, _ratelimiting.checkRateLimit)(request, {
      windowMs: _ratelimiter.RATE_LIMIT_CONFIGS.admin.windowMs,
      maxRequests: _ratelimiter.RATE_LIMIT_CONFIGS.admin.maxRequests,
      message:
      /* istanbul ignore next */
      (cov_qehnw8be().b[4][0]++, _ratelimiter.RATE_LIMIT_CONFIGS.admin.message) ||
      /* istanbul ignore next */
      (cov_qehnw8be().b[4][1]++, 'Demasiadas solicitudes administrativas')
    }, 'admin-orders'));
    /* istanbul ignore next */
    cov_qehnw8be().s[33]++;
    if (!rateLimitResult.allowed) {
      /* istanbul ignore next */
      cov_qehnw8be().b[5][0]++;
      const response =
      /* istanbul ignore next */
      (cov_qehnw8be().s[34]++, _server.NextResponse.json({
        error: 'Demasiadas solicitudes'
      }, {
        status: 429
      }));
      /* istanbul ignore next */
      cov_qehnw8be().s[35]++;
      (0, _ratelimiter.addRateLimitHeaders)(response, rateLimitResult, _ratelimiter.RATE_LIMIT_CONFIGS.admin);
      /* istanbul ignore next */
      cov_qehnw8be().s[36]++;
      return response;
    } else
    /* istanbul ignore next */
    {
      cov_qehnw8be().b[5][1]++;
    }
    // Validar autenticaciÃ³n admin
    const authResult =
    /* istanbul ignore next */
    (cov_qehnw8be().s[37]++, await validateAdminAuth());
    /* istanbul ignore next */
    cov_qehnw8be().s[38]++;
    if ('error' in authResult) {
      /* istanbul ignore next */
      cov_qehnw8be().b[6][0]++;
      cov_qehnw8be().s[39]++;
      return _server.NextResponse.json({
        error: authResult.error
      }, {
        status: authResult.status
      });
    } else
    /* istanbul ignore next */
    {
      cov_qehnw8be().b[6][1]++;
    }
    // Validar parÃ¡metros de consulta
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_qehnw8be().s[40]++, new URL(request.url));
    const queryParams =
    /* istanbul ignore next */
    (cov_qehnw8be().s[41]++, {
      page: searchParams.get('page'),
      limit: searchParams.get('limit'),
      status: searchParams.get('status'),
      date_from: searchParams.get('date_from'),
      date_to: searchParams.get('date_to'),
      search: searchParams.get('search'),
      sort_by: searchParams.get('sort_by'),
      sort_order: searchParams.get('sort_order')
    });
    /* istanbul ignore next */
    cov_qehnw8be().s[42]++;
    _logger.logger.log(_logger.LogLevel.INFO, _logger.LogCategory.API, 'ParÃ¡metros recibidos', {
      queryParams
    });
    const filtersResult =
    /* istanbul ignore next */
    (cov_qehnw8be().s[43]++, OrderFiltersSchema.safeParse(queryParams));
    /* istanbul ignore next */
    cov_qehnw8be().s[44]++;
    if (!filtersResult.success) {
      /* istanbul ignore next */
      cov_qehnw8be().b[7][0]++;
      cov_qehnw8be().s[45]++;
      _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.VALIDATION, 'ParÃ¡metros de consulta invÃ¡lidos', {
        queryParams,
        errors: filtersResult.error.errors
      });
      /* istanbul ignore next */
      cov_qehnw8be().s[46]++;
      return _server.NextResponse.json({
        error: 'ParÃ¡metros de consulta invÃ¡lidos',
        details: filtersResult.error.errors
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_qehnw8be().b[7][1]++;
    }
    const filters =
    /* istanbul ignore next */
    (cov_qehnw8be().s[47]++, filtersResult.data);
    // Construir query base con joins optimizados
    let query =
    /* istanbul ignore next */
    (cov_qehnw8be().s[48]++, _supabase.supabaseAdmin.from('orders').select(`
        id,
        status,
        total,
        payment_id,
        created_at,
        updated_at,
        shipping_address,
        external_reference,
        payment_preference_id,
        payer_info,
        users (
          id,
          name,
          email
        ),
        order_items (
          id,
          quantity,
          price,
          products (
            id,
            name,
            images
          )
        )
      `, {
      count: 'exact'
    }));
    // Aplicar filtros
    /* istanbul ignore next */
    cov_qehnw8be().s[49]++;
    if (filters.status) {
      /* istanbul ignore next */
      cov_qehnw8be().b[8][0]++;
      cov_qehnw8be().s[50]++;
      query = query.eq('status', filters.status);
    } else
    /* istanbul ignore next */
    {
      cov_qehnw8be().b[8][1]++;
    }
    cov_qehnw8be().s[51]++;
    if (filters.date_from) {
      /* istanbul ignore next */
      cov_qehnw8be().b[9][0]++;
      cov_qehnw8be().s[52]++;
      query = query.gte('created_at', filters.date_from);
    } else
    /* istanbul ignore next */
    {
      cov_qehnw8be().b[9][1]++;
    }
    cov_qehnw8be().s[53]++;
    if (filters.date_to) {
      /* istanbul ignore next */
      cov_qehnw8be().b[10][0]++;
      cov_qehnw8be().s[54]++;
      query = query.lte('created_at', filters.date_to);
    } else
    /* istanbul ignore next */
    {
      cov_qehnw8be().b[10][1]++;
    }
    cov_qehnw8be().s[55]++;
    if (filters.search) {
      /* istanbul ignore next */
      cov_qehnw8be().b[11][0]++;
      cov_qehnw8be().s[56]++;
      query = query.or(`external_reference.ilike.%${filters.search}%,payment_id.ilike.%${filters.search}%`);
    } else
    /* istanbul ignore next */
    {
      cov_qehnw8be().b[11][1]++;
    }
    // Aplicar ordenamiento y paginaciÃ³n
    const from =
    /* istanbul ignore next */
    (cov_qehnw8be().s[57]++, (filters.page - 1) * filters.limit);
    const to =
    /* istanbul ignore next */
    (cov_qehnw8be().s[58]++, from + filters.limit - 1);
    const {
      data: orders,
      error,
      count
    } =
    /* istanbul ignore next */
    (cov_qehnw8be().s[59]++, await query.order(filters.sort_by, {
      ascending: filters.sort_order === 'asc'
    }).range(from, to));
    /* istanbul ignore next */
    cov_qehnw8be().s[60]++;
    if (error) {
      /* istanbul ignore next */
      cov_qehnw8be().b[12][0]++;
      cov_qehnw8be().s[61]++;
      _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.DATABASE, 'Error al obtener Ã³rdenes admin', {
        error
      });
      /* istanbul ignore next */
      cov_qehnw8be().s[62]++;
      return _server.NextResponse.json({
        error: 'Error al obtener Ã³rdenes'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_qehnw8be().b[12][1]++;
    }
    // Calcular estadÃ­sticas de paginaciÃ³n
    const totalPages =
    /* istanbul ignore next */
    (cov_qehnw8be().s[63]++, Math.ceil((
    /* istanbul ignore next */
    (cov_qehnw8be().b[13][0]++, count) ||
    /* istanbul ignore next */
    (cov_qehnw8be().b[13][1]++, 0)) / filters.limit));
    const hasNextPage =
    /* istanbul ignore next */
    (cov_qehnw8be().s[64]++, filters.page < totalPages);
    const hasPreviousPage =
    /* istanbul ignore next */
    (cov_qehnw8be().s[65]++, filters.page > 1);
    // Calcular analytics bÃ¡sicas
    const today =
    /* istanbul ignore next */
    (cov_qehnw8be().s[66]++, new Date());
    const todayStart =
    /* istanbul ignore next */
    (cov_qehnw8be().s[67]++, new Date(today.getFullYear(), today.getMonth(), today.getDate()));
    const todayOrders =
    /* istanbul ignore next */
    (cov_qehnw8be().s[68]++,
    /* istanbul ignore next */
    (cov_qehnw8be().b[14][0]++, orders?.filter(order => {
      /* istanbul ignore next */
      cov_qehnw8be().f[6]++;
      const orderDate =
      /* istanbul ignore next */
      (cov_qehnw8be().s[69]++, new Date(order.created_at));
      /* istanbul ignore next */
      cov_qehnw8be().s[70]++;
      return orderDate >= todayStart;
    })) ||
    /* istanbul ignore next */
    (cov_qehnw8be().b[14][1]++, []));
    const analytics =
    /* istanbul ignore next */
    (cov_qehnw8be().s[71]++, {
      total_orders:
      /* istanbul ignore next */
      (cov_qehnw8be().b[15][0]++, count) ||
      /* istanbul ignore next */
      (cov_qehnw8be().b[15][1]++, 0),
      pending_orders:
      /* istanbul ignore next */
      (cov_qehnw8be().b[16][0]++, orders?.filter(order => {
        /* istanbul ignore next */
        cov_qehnw8be().f[7]++;
        cov_qehnw8be().s[72]++;
        return order.status === 'pending';
      }).length) ||
      /* istanbul ignore next */
      (cov_qehnw8be().b[16][1]++, 0),
      completed_orders:
      /* istanbul ignore next */
      (cov_qehnw8be().b[17][0]++, orders?.filter(order => {
        /* istanbul ignore next */
        cov_qehnw8be().f[8]++;
        cov_qehnw8be().s[73]++;
        return order.status === 'completed';
      }).length) ||
      /* istanbul ignore next */
      (cov_qehnw8be().b[17][1]++, 0),
      total_revenue:
      /* istanbul ignore next */
      (cov_qehnw8be().b[18][0]++, orders?.reduce((sum, order) => {
        /* istanbul ignore next */
        cov_qehnw8be().f[9]++;
        cov_qehnw8be().s[74]++;
        return sum + (
        /* istanbul ignore next */
        (cov_qehnw8be().b[19][0]++, order.total) ||
        /* istanbul ignore next */
        (cov_qehnw8be().b[19][1]++, 0));
      }, 0)) ||
      /* istanbul ignore next */
      (cov_qehnw8be().b[18][1]++, 0),
      today_revenue: todayOrders.reduce((sum, order) => {
        /* istanbul ignore next */
        cov_qehnw8be().f[10]++;
        cov_qehnw8be().s[75]++;
        return sum + (
        /* istanbul ignore next */
        (cov_qehnw8be().b[20][0]++, order.total) ||
        /* istanbul ignore next */
        (cov_qehnw8be().b[20][1]++, 0));
      }, 0)
    });
    // MÃ©tricas de performance
    const responseTime =
    /* istanbul ignore next */
    (cov_qehnw8be().s[76]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_qehnw8be().s[77]++;
    await _metrics.metricsCollector.recordRequest('admin-orders-list', 'GET', 200, responseTime);
    const response =
    /* istanbul ignore next */
    (cov_qehnw8be().s[78]++, {
      data: {
        orders,
        pagination: {
          page: filters.page,
          limit: filters.limit,
          total:
          /* istanbul ignore next */
          (cov_qehnw8be().b[21][0]++, count) ||
          /* istanbul ignore next */
          (cov_qehnw8be().b[21][1]++, 0),
          totalPages,
          hasNextPage,
          hasPreviousPage
        },
        analytics,
        filters
      },
      success: true,
      error: null,
      timestamp: new Date().toISOString()
    });
    const nextResponse =
    /* istanbul ignore next */
    (cov_qehnw8be().s[79]++, _server.NextResponse.json(response));
    /* istanbul ignore next */
    cov_qehnw8be().s[80]++;
    (0, _ratelimiter.addRateLimitHeaders)(nextResponse, rateLimitResult, _ratelimiter.RATE_LIMIT_CONFIGS.admin);
    /* istanbul ignore next */
    cov_qehnw8be().s[81]++;
    _logger.logger.log(_logger.LogLevel.INFO, _logger.LogCategory.API, 'Ãrdenes admin obtenidas exitosamente', {
      count: orders?.length,
      total: count,
      responseTime
    });
    /* istanbul ignore next */
    cov_qehnw8be().s[82]++;
    return nextResponse;
  } catch (error) {
    const responseTime =
    /* istanbul ignore next */
    (cov_qehnw8be().s[83]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_qehnw8be().s[84]++;
    await _metrics.metricsCollector.recordRequest('admin-orders', 'GET', 500, responseTime);
    // Logging detallado del error
    const errorDetails =
    /* istanbul ignore next */
    (cov_qehnw8be().s[85]++, {
      message: error instanceof Error ?
      /* istanbul ignore next */
      (cov_qehnw8be().b[22][0]++, error.message) :
      /* istanbul ignore next */
      (cov_qehnw8be().b[22][1]++, 'Unknown error'),
      stack: error instanceof Error ?
      /* istanbul ignore next */
      (cov_qehnw8be().b[23][0]++, error.stack) :
      /* istanbul ignore next */
      (cov_qehnw8be().b[23][1]++, undefined),
      name: error instanceof Error ?
      /* istanbul ignore next */
      (cov_qehnw8be().b[24][0]++, error.name) :
      /* istanbul ignore next */
      (cov_qehnw8be().b[24][1]++, 'UnknownError'),
      cause: error instanceof Error ?
      /* istanbul ignore next */
      (cov_qehnw8be().b[25][0]++, error.cause) :
      /* istanbul ignore next */
      (cov_qehnw8be().b[25][1]++, undefined)
    });
    /* istanbul ignore next */
    cov_qehnw8be().s[86]++;
    console.error('â [Orders API] Error detallado:', errorDetails);
    /* istanbul ignore next */
    cov_qehnw8be().s[87]++;
    try {
      /* istanbul ignore next */
      cov_qehnw8be().s[88]++;
      _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.API, 'Error en GET /api/admin/orders', {
        error: errorDetails,
        timestamp: new Date().toISOString()
      });
    } catch (logError) {
      /* istanbul ignore next */
      cov_qehnw8be().s[89]++;
      // Ignorar errores de logging en desarrollo
      console.error('Logging failed:', logError);
    }
    /* istanbul ignore next */
    cov_qehnw8be().s[90]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor',
      details: errorDetails.message,
      debug: process.env.NODE_ENV === 'development' ?
      /* istanbul ignore next */
      (cov_qehnw8be().b[26][0]++, errorDetails) :
      /* istanbul ignore next */
      (cov_qehnw8be().b[26][1]++, undefined)
    }, {
      status: 500
    });
  }
}
async function POST(request) {
  /* istanbul ignore next */
  cov_qehnw8be().f[11]++;
  const startTime =
  /* istanbul ignore next */
  (cov_qehnw8be().s[91]++, Date.now());
  /* istanbul ignore next */
  cov_qehnw8be().s[92]++;
  try {
    // Rate limiting
    const rateLimitResult =
    /* istanbul ignore next */
    (cov_qehnw8be().s[93]++, await (0, _ratelimiting.checkRateLimit)(request, {
      windowMs: _ratelimiter.RATE_LIMIT_CONFIGS.admin.windowMs,
      maxRequests: _ratelimiter.RATE_LIMIT_CONFIGS.admin.maxRequests,
      message:
      /* istanbul ignore next */
      (cov_qehnw8be().b[27][0]++, _ratelimiter.RATE_LIMIT_CONFIGS.admin.message) ||
      /* istanbul ignore next */
      (cov_qehnw8be().b[27][1]++, 'Demasiadas solicitudes administrativas')
    }, 'admin-orders-create'));
    /* istanbul ignore next */
    cov_qehnw8be().s[94]++;
    if (!rateLimitResult.allowed) {
      /* istanbul ignore next */
      cov_qehnw8be().b[28][0]++;
      const response =
      /* istanbul ignore next */
      (cov_qehnw8be().s[95]++, _server.NextResponse.json({
        error: 'Demasiadas solicitudes'
      }, {
        status: 429
      }));
      /* istanbul ignore next */
      cov_qehnw8be().s[96]++;
      (0, _ratelimiter.addRateLimitHeaders)(response, rateLimitResult, _ratelimiter.RATE_LIMIT_CONFIGS.admin);
      /* istanbul ignore next */
      cov_qehnw8be().s[97]++;
      return response;
    } else
    /* istanbul ignore next */
    {
      cov_qehnw8be().b[28][1]++;
    }
    // Validar autenticaciÃ³n admin
    const authResult =
    /* istanbul ignore next */
    (cov_qehnw8be().s[98]++, await validateAdminAuth());
    /* istanbul ignore next */
    cov_qehnw8be().s[99]++;
    if ('error' in authResult) {
      /* istanbul ignore next */
      cov_qehnw8be().b[29][0]++;
      cov_qehnw8be().s[100]++;
      return _server.NextResponse.json({
        error: authResult.error
      }, {
        status: authResult.status
      });
    } else
    /* istanbul ignore next */
    {
      cov_qehnw8be().b[29][1]++;
    }
    // Validar datos de entrada
    const body =
    /* istanbul ignore next */
    (cov_qehnw8be().s[101]++, await request.json());
    /* istanbul ignore next */
    cov_qehnw8be().s[102]++;
    console.log('ğ [Orders API] Payload recibido:', JSON.stringify(body, null, 2));
    const validationResult =
    /* istanbul ignore next */
    (cov_qehnw8be().s[103]++, CreateOrderSchema.safeParse(body));
    /* istanbul ignore next */
    cov_qehnw8be().s[104]++;
    if (!validationResult.success) {
      /* istanbul ignore next */
      cov_qehnw8be().b[30][0]++;
      cov_qehnw8be().s[105]++;
      console.log('â [Orders API] ValidaciÃ³n fallida:', validationResult.error.errors);
      /* istanbul ignore next */
      cov_qehnw8be().s[106]++;
      return _server.NextResponse.json({
        error: 'Datos de orden invÃ¡lidos',
        details: validationResult.error.errors
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_qehnw8be().b[30][1]++;
    }
    const orderData =
    /* istanbul ignore next */
    (cov_qehnw8be().s[107]++, validationResult.data);
    /* istanbul ignore next */
    cov_qehnw8be().s[108]++;
    console.log('â [Orders API] Datos validados:', JSON.stringify(orderData, null, 2));
    // Generar nÃºmero de orden Ãºnico
    const orderNumber =
    /* istanbul ignore next */
    (cov_qehnw8be().s[109]++, `ORD-${Date.now()}-${Math.random().toString(36).substr(2, 9).toUpperCase()}`);
    // Calcular total
    const totalAmount =
    /* istanbul ignore next */
    (cov_qehnw8be().s[110]++, orderData.items.reduce((sum, item) => {
      /* istanbul ignore next */
      cov_qehnw8be().f[12]++;
      cov_qehnw8be().s[111]++;
      return sum + item.unit_price * item.quantity;
    }, 0));
    // Crear orden en transacciÃ³n
    // Solo usar columnas que existen en la tabla: id, user_id, total, status, payment_id, shipping_address, created_at, updated_at, external_reference, payment_preference_id, payer_info, payment_status
    const orderInsertData =
    /* istanbul ignore next */
    (cov_qehnw8be().s[112]++, {
      user_id: orderData.user_id,
      status: 'pending',
      payment_status: 'pending',
      total: totalAmount,
      shipping_address: orderData.shipping_address ?
      /* istanbul ignore next */
      (cov_qehnw8be().b[31][0]++, JSON.stringify(orderData.shipping_address)) :
      /* istanbul ignore next */
      (cov_qehnw8be().b[31][1]++, null),
      external_reference: orderNumber
    });
    /* istanbul ignore next */
    cov_qehnw8be().s[113]++;
    console.log('ğ [Orders API] Insertando orden:', JSON.stringify(orderInsertData, null, 2));
    const {
      data: order,
      error: orderError
    } =
    /* istanbul ignore next */
    (cov_qehnw8be().s[114]++, await _supabase.supabaseAdmin.from('orders').insert(orderInsertData).select().single());
    /* istanbul ignore next */
    cov_qehnw8be().s[115]++;
    if (orderError) {
      /* istanbul ignore next */
      cov_qehnw8be().b[32][0]++;
      cov_qehnw8be().s[116]++;
      console.log('â [Orders API] Error al crear orden:', orderError);
      /* istanbul ignore next */
      cov_qehnw8be().s[117]++;
      _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.DATABASE, 'Error al crear orden', {
        orderError
      });
      /* istanbul ignore next */
      cov_qehnw8be().s[118]++;
      return _server.NextResponse.json({
        error: 'Error al crear orden'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_qehnw8be().b[32][1]++;
    }
    cov_qehnw8be().s[119]++;
    console.log('â [Orders API] Orden creada exitosamente:', order);
    // Crear items de la orden
    const orderItems =
    /* istanbul ignore next */
    (cov_qehnw8be().s[120]++, orderData.items.map(item => {
      /* istanbul ignore next */
      cov_qehnw8be().f[13]++;
      cov_qehnw8be().s[121]++;
      return {
        order_id: order.id,
        product_id: item.product_id,
        quantity: item.quantity,
        price: item.unit_price
      };
    }));
    /* istanbul ignore next */
    cov_qehnw8be().s[122]++;
    console.log('ğ [Orders API] Insertando items:', JSON.stringify(orderItems, null, 2));
    const {
      error: itemsError
    } =
    /* istanbul ignore next */
    (cov_qehnw8be().s[123]++, await _supabase.supabaseAdmin.from('order_items').insert(orderItems));
    /* istanbul ignore next */
    cov_qehnw8be().s[124]++;
    if (itemsError) {
      /* istanbul ignore next */
      cov_qehnw8be().b[33][0]++;
      cov_qehnw8be().s[125]++;
      console.log('â [Orders API] Error al crear items:', itemsError);
      // Rollback: eliminar orden creada
      /* istanbul ignore next */
      cov_qehnw8be().s[126]++;
      await _supabase.supabaseAdmin.from('orders').delete().eq('id', order.id);
      /* istanbul ignore next */
      cov_qehnw8be().s[127]++;
      _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.DATABASE, 'Error al crear items de orden', {
        itemsError
      });
      /* istanbul ignore next */
      cov_qehnw8be().s[128]++;
      return _server.NextResponse.json({
        error: 'Error al crear items de orden'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_qehnw8be().b[33][1]++;
    }
    cov_qehnw8be().s[129]++;
    console.log('â [Orders API] Items creados exitosamente');
    // MÃ©tricas de performance
    const responseTime =
    /* istanbul ignore next */
    (cov_qehnw8be().s[130]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_qehnw8be().s[131]++;
    await _metrics.metricsCollector.recordRequest('admin-orders-create', 'POST', 201, responseTime);
    const response =
    /* istanbul ignore next */
    (cov_qehnw8be().s[132]++, {
      data: order,
      success: true,
      error: null
    });
    const nextResponse =
    /* istanbul ignore next */
    (cov_qehnw8be().s[133]++, _server.NextResponse.json(response, {
      status: 201
    }));
    /* istanbul ignore next */
    cov_qehnw8be().s[134]++;
    (0, _ratelimiter.addRateLimitHeaders)(nextResponse, rateLimitResult, _ratelimiter.RATE_LIMIT_CONFIGS.admin);
    /* istanbul ignore next */
    cov_qehnw8be().s[135]++;
    _logger.logger.log(_logger.LogLevel.INFO, _logger.LogCategory.API, 'Orden creada exitosamente por admin', {
      orderId: order.id,
      orderNumber,
      totalAmount,
      responseTime
    });
    /* istanbul ignore next */
    cov_qehnw8be().s[136]++;
    return nextResponse;
  } catch (error) {
    const responseTime =
    /* istanbul ignore next */
    (cov_qehnw8be().s[137]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_qehnw8be().s[138]++;
    _metrics.metricsCollector.recordApiCall('admin-orders-create', responseTime, 500);
    /* istanbul ignore next */
    cov_qehnw8be().s[139]++;
    _logger.logger.log(_logger.LogLevel.ERROR, _logger.LogCategory.API, 'Error en POST /api/admin/orders', {
      error
    });
    /* istanbul ignore next */
    cov_qehnw8be().s[140]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,