{"version":3,"names":["cov_3kbxf7mrg","actualCoverage","s","POST","f","runtime","request","clientIP","b","headers","get","console","log","webhookData","json","JSON","stringify","type","_server","NextResponse","status","message","data","id","error","processWebhookTestAsync","catch","stack","timestamp","Date","toISOString","data_id","process","env","NODE_ENV","paymentData","external_reference","transaction_amount","currency_id","payer","first_name","last_name","email","phone","number","identification","additional_info","shipments","receiver_address","street_name","street_number","zip_code","floor","apartment","supabase","_supabase","getSupabaseClient","orderReference","order","orderError","from","select","eq","single","newOrderStatus","newPaymentStatus","updatedPayerInfo","payer_info","updatedShippingAddress","shipping_address","name","surname","mpShipping","city_name","state_name","updateError","update","payment_status","payment_id","updated_at"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\payments\\webhook-test\\route.ts"],"sourcesContent":["// Configuraci√≥n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - MERCADOPAGO WEBHOOK TEST API\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { getSupabaseClient } from '@/lib/integrations/supabase';\r\nimport { MercadoPagoWebhookData } from '@/types/mercadopago';\r\n\r\nexport async function POST(request: NextRequest) {\r\n  const clientIP = request.headers.get('x-forwarded-for') || 'unknown';\r\n  \r\n  try {\r\n    console.log('[WEBHOOK_TEST] Webhook test recibido desde IP:', clientIP);\r\n\r\n    // Parsear datos del webhook\r\n    const webhookData: MercadoPagoWebhookData = await request.json();\r\n    \r\n    console.log('[WEBHOOK_TEST] Datos del webhook:', JSON.stringify(webhookData, null, 2));\r\n\r\n    // Validar que sea un webhook de pago\r\n    if (webhookData.type !== 'payment') {\r\n      console.log('[WEBHOOK_TEST] Non-payment webhook ignorado:', webhookData.type);\r\n      return NextResponse.json({\r\n        status: 'ignored',\r\n        message: 'Non-payment webhook',\r\n        type: webhookData.type\r\n      }, { status: 200 });\r\n    }\r\n\r\n    // Validar que tenga datos de pago\r\n    if (!webhookData.data?.id) {\r\n      console.log('[WEBHOOK_TEST] Webhook sin datos de pago');\r\n      return NextResponse.json({\r\n        error: 'Bad Request',\r\n        message: 'Missing payment data'\r\n      }, { status: 400 });\r\n    }\r\n\r\n    console.log('[WEBHOOK_TEST] Procesando webhook para payment ID:', webhookData.data.id);\r\n\r\n    // Procesar webhook de forma as√≠ncrona\r\n    processWebhookTestAsync(webhookData, clientIP).catch(error => {\r\n      console.error('[WEBHOOK_TEST_ASYNC] Error en procesamiento as√≠ncrono:', error);\r\n      console.error('[WEBHOOK_TEST_ASYNC] Stack trace:', error.stack);\r\n    });\r\n\r\n    // Responder inmediatamente a MercadoPago\r\n    return NextResponse.json({\r\n      status: 'received',\r\n      message: 'Webhook test received and processing',\r\n      timestamp: new Date().toISOString(),\r\n      data_id: webhookData.data.id\r\n    }, { status: 200 });\r\n  } catch (error: any) {\r\n    console.error('[WEBHOOK_TEST] Error en webhook:', error);\r\n    console.error('[WEBHOOK_TEST] Stack trace:', error.stack);\r\n\r\n    return NextResponse.json({\r\n      error: 'Internal server error',\r\n      message: process.env.NODE_ENV === 'development' ? error.message : 'Processing failed',\r\n      timestamp: new Date().toISOString(),\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n// Funci√≥n de procesamiento as√≠ncrono simplificada\r\nasync function processWebhookTestAsync(webhookData: MercadoPagoWebhookData, clientIP: string) {\r\n  try {\r\n    console.log('[WEBHOOK_TEST_ASYNC] Iniciando procesamiento as√≠ncrono para:', webhookData.data.id);\r\n    console.log('[WEBHOOK_TEST_ASYNC] Webhook data completo:', JSON.stringify(webhookData, null, 2));\r\n\r\n    // Simular datos de pago para testing\r\n    let paymentData;\r\n    if (webhookData.data.id === '123456' || webhookData.data.id === 'test') {\r\n      console.log('[WEBHOOK_TEST_ASYNC] ID de prueba detectado, usando datos simulados');\r\n      paymentData = {\r\n        id: webhookData.data.id,\r\n        status: 'approved',\r\n        external_reference: 'express_checkout_1757431045283', // Usar una orden real\r\n        transaction_amount: 100,\r\n        currency_id: 'ARS'\r\n      };\r\n    } else if (webhookData.data.id === 'manual_payment_110') {\r\n      console.log('[WEBHOOK_TEST_ASYNC] Orden manual 110 detectada:', webhookData.data.id);\r\n      paymentData = {\r\n        id: webhookData.data.id,\r\n        status: 'approved',\r\n        external_reference: 'express_checkout_1757622395061', // Orden 110\r\n        transaction_amount: 405,\r\n        currency_id: 'ARS',\r\n        payer: {\r\n          first_name: 'Santiago',\r\n          last_name: 'Martinez',\r\n          email: 'santiago@xor.com.ar',\r\n          phone: {\r\n            number: '3547527070'\r\n          },\r\n          identification: {\r\n            type: 'DNI',\r\n            number: '12345678'\r\n          }\r\n        },\r\n        additional_info: {\r\n          shipments: {\r\n            receiver_address: {\r\n              street_name: 'Av. Col√≥n',\r\n              street_number: '1234',\r\n              zip_code: '5000',\r\n              floor: '2',\r\n              apartment: 'A'\r\n            }\r\n          }\r\n        }\r\n      };\r\n    } else if (webhookData.data.id === 'manual_payment_106') {\r\n      console.log('[WEBHOOK_TEST_ASYNC] Orden manual 106 detectada:', webhookData.data.id);\r\n      paymentData = {\r\n        id: webhookData.data.id,\r\n        status: 'approved',\r\n        external_reference: 'express_checkout_1757431045283', // Orden 106\r\n        transaction_amount: 780,\r\n        currency_id: 'ARS',\r\n        payer: {\r\n          first_name: 'Mar√≠a',\r\n          last_name: 'Gonz√°lez',\r\n          email: 'maria.gonzalez@email.com',\r\n          phone: {\r\n            number: '3511234567'\r\n          },\r\n          identification: {\r\n            type: 'DNI',\r\n            number: '87654321'\r\n          }\r\n        },\r\n        additional_info: {\r\n          shipments: {\r\n            receiver_address: {\r\n              street_name: 'Calle San Mart√≠n',\r\n              street_number: '567',\r\n              zip_code: '5000',\r\n              floor: '1',\r\n              apartment: 'B'\r\n            }\r\n          }\r\n        }\r\n      };\r\n    } else {\r\n      console.log('[WEBHOOK_TEST_ASYNC] ID real, saltando procesamiento por ahora');\r\n      return;\r\n    }\r\n\r\n    console.log('[WEBHOOK_TEST_ASYNC] Payment data:', JSON.stringify(paymentData, null, 2));\r\n\r\n    // Inicializar Supabase\r\n    const supabase = getSupabaseClient(true);\r\n    if (!supabase) {\r\n      console.error('[WEBHOOK_TEST_ASYNC] Cliente de Supabase no disponible');\r\n      return;\r\n    }\r\n\r\n    // Buscar la orden por external_reference\r\n    const orderReference = paymentData.external_reference;\r\n    if (!orderReference) {\r\n      console.error('[WEBHOOK_TEST_ASYNC] No external_reference found in payment');\r\n      return;\r\n    }\r\n\r\n    console.log('[WEBHOOK_TEST_ASYNC] Buscando orden con external_reference:', orderReference);\r\n\r\n    const { data: order, error: orderError } = await supabase\r\n      .from('orders')\r\n      .select('*')\r\n      .eq('external_reference', orderReference)\r\n      .single();\r\n\r\n    if (orderError) {\r\n      console.error('[WEBHOOK_TEST_ASYNC] Error buscando orden:', orderError);\r\n      return;\r\n    }\r\n\r\n    if (!order) {\r\n      console.error('[WEBHOOK_TEST_ASYNC] Order not found by external_reference:', orderReference);\r\n      return;\r\n    }\r\n\r\n    console.log('[WEBHOOK_TEST_ASYNC] Order encontrada:', order.id, 'Status actual:', order.status);\r\n\r\n    // Mapear estados\r\n    let newOrderStatus: string;\r\n    let newPaymentStatus: string;\r\n\r\n    switch (paymentData.status) {\r\n      case 'approved':\r\n        newOrderStatus = 'paid'; // ‚úÖ CORREGIDO: Usar estado v√°lido\r\n        newPaymentStatus = 'paid';\r\n        break;\r\n      case 'pending':\r\n      case 'in_process':\r\n        newOrderStatus = 'pending';\r\n        newPaymentStatus = 'pending';\r\n        break;\r\n      case 'rejected':\r\n      case 'cancelled':\r\n        newOrderStatus = 'cancelled';\r\n        newPaymentStatus = 'failed';\r\n        break;\r\n      default:\r\n        newOrderStatus = 'pending';\r\n        newPaymentStatus = 'pending';\r\n    }\r\n\r\n    console.log('[WEBHOOK_TEST_ASYNC] Actualizando orden con status:', newOrderStatus, 'payment_status:', newPaymentStatus);\r\n\r\n    // ‚úÖ NUEVO: Preparar informaci√≥n de env√≠o y payer actualizada desde MercadoPago\r\n    let updatedPayerInfo = order.payer_info || {};\r\n    let updatedShippingAddress = order.shipping_address;\r\n\r\n    // Actualizar informaci√≥n del payer desde MercadoPago si est√° disponible\r\n    if (paymentData.payer) {\r\n      console.log('[WEBHOOK_TEST_ASYNC] üîç Actualizando payer info desde MercadoPago');\r\n      updatedPayerInfo = {\r\n        ...updatedPayerInfo,\r\n        name: paymentData.payer.first_name || updatedPayerInfo.name,\r\n        surname: paymentData.payer.last_name || updatedPayerInfo.surname,\r\n        email: paymentData.payer.email || updatedPayerInfo.email,\r\n        phone: paymentData.payer.phone?.number || updatedPayerInfo.phone,\r\n        identification: paymentData.payer.identification ? {\r\n          type: paymentData.payer.identification.type,\r\n          number: paymentData.payer.identification.number\r\n        } : updatedPayerInfo.identification,\r\n      };\r\n    }\r\n\r\n    // Actualizar informaci√≥n de env√≠o desde MercadoPago si est√° disponible\r\n    if (paymentData.additional_info?.shipments?.receiver_address) {\r\n      console.log('[WEBHOOK_TEST_ASYNC] üîç Actualizando shipping address desde MercadoPago');\r\n      const mpShipping = paymentData.additional_info.shipments.receiver_address;\r\n      updatedShippingAddress = {\r\n        street_name: mpShipping.street_name || '',\r\n        street_number: mpShipping.street_number || '',\r\n        zip_code: mpShipping.zip_code || '',\r\n        floor: mpShipping.floor || '',\r\n        apartment: mpShipping.apartment || '',\r\n        city_name: 'C√≥rdoba', // Por defecto\r\n        state_name: 'C√≥rdoba', // Por defecto\r\n      };\r\n    }\r\n\r\n    console.log('[WEBHOOK_TEST_ASYNC] üîç Updated payer info:', JSON.stringify(updatedPayerInfo, null, 2));\r\n    console.log('[WEBHOOK_TEST_ASYNC] üîç Updated shipping address:', JSON.stringify(updatedShippingAddress, null, 2));\r\n\r\n    // Actualizar la orden con informaci√≥n completa\r\n    const { error: updateError } = await supabase\r\n      .from('orders')\r\n      .update({\r\n        payment_status: newPaymentStatus,\r\n        status: newOrderStatus,\r\n        payment_id: paymentData.id,\r\n        payer_info: updatedPayerInfo,\r\n        shipping_address: updatedShippingAddress,\r\n        updated_at: new Date().toISOString()\r\n      })\r\n      .eq('id', order.id);\r\n\r\n    if (updateError) {\r\n      console.error('[WEBHOOK_TEST_ASYNC] Error actualizando orden:', updateError);\r\n      return;\r\n    }\r\n\r\n    console.log('[WEBHOOK_TEST_ASYNC] ‚úÖ Orden actualizada exitosamente');\r\n\r\n    // Enviar email si el pago fue aprobado\r\n    if (paymentData.status === 'approved') {\r\n      console.log('[WEBHOOK_TEST_ASYNC] Enviando email de confirmaci√≥n...');\r\n      // await sendOrderConfirmationEmail(order);\r\n      console.log('[WEBHOOK_TEST_ASYNC] ‚úÖ Email de confirmaci√≥n enviado (simulado)');\r\n    }\r\n\r\n    console.log('[WEBHOOK_TEST_ASYNC] ‚úÖ Procesamiento completado exitosamente');\r\n\r\n  } catch (error) {\r\n    console.error('[WEBHOOK_TEST_ASYNC] Error en procesamiento as√≠ncrono:', error);\r\n    console.error('[WEBHOOK_TEST_ASYNC] Error stack:', error.stack);\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}