{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\ui\\modal.tsx"],"sourcesContent":["'use client'\n\nimport * as React from 'react'\nimport { X, ShoppingCart, Heart, Eye, AlertTriangle, CheckCircle, Info } from 'lucide-react'\nimport { cva, type VariantProps } from 'class-variance-authority'\nimport { cn } from '@/lib/utils'\nimport * as VisuallyHidden from '@radix-ui/react-visually-hidden'\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from './dialog'\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n} from './alert-dialog'\n\n// Modal básico para contenido general\nexport interface ModalProps {\n  children: React.ReactNode\n  trigger?: React.ReactNode\n  title?: string\n  description?: string\n  size?: 'sm' | 'md' | 'lg' | 'xl' | '2xl' | '3xl' | '4xl' | 'full'\n  variant?: 'default' | 'elevated' | 'fullscreen'\n  showCloseButton?: boolean\n  open?: boolean\n  onOpenChange?: (open: boolean) => void\n  className?: string\n}\n\nexport function Modal({\n  children,\n  trigger,\n  title,\n  description,\n  size = 'md',\n  variant = 'default',\n  showCloseButton = true,\n  open,\n  onOpenChange,\n  className,\n}: ModalProps) {\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      {trigger && <DialogTrigger asChild>{trigger}</DialogTrigger>}\n      <DialogContent\n        size={size}\n        variant={variant}\n        showCloseButton={showCloseButton}\n        className={className}\n      >\n        {(title || description) && (\n          <DialogHeader>\n            {title && <DialogTitle>{title}</DialogTitle>}\n            {description && <DialogDescription>{description}</DialogDescription>}\n          </DialogHeader>\n        )}\n        {children}\n      </DialogContent>\n    </Dialog>\n  )\n}\n\n// Modal de confirmación con variantes semánticas\nexport interface ConfirmModalProps {\n  children?: React.ReactNode\n  trigger?: React.ReactNode\n  title: string\n  description?: string\n  confirmText?: string\n  cancelText?: string\n  variant?: 'default' | 'destructive' | 'warning' | 'success' | 'info'\n  onConfirm?: () => void\n  onCancel?: () => void\n  open?: boolean\n  onOpenChange?: (open: boolean) => void\n  loading?: boolean\n}\n\nconst confirmModalIcons = {\n  default: Info,\n  destructive: AlertTriangle,\n  warning: AlertTriangle,\n  success: CheckCircle,\n  info: Info,\n}\n\nexport function ConfirmModal({\n  children,\n  trigger,\n  title,\n  description,\n  confirmText = 'Confirmar',\n  cancelText = 'Cancelar',\n  variant = 'default',\n  onConfirm,\n  onCancel,\n  open,\n  onOpenChange,\n  loading = false,\n}: ConfirmModalProps) {\n  const Icon = confirmModalIcons[variant]\n\n  return (\n    <AlertDialog open={open} onOpenChange={onOpenChange}>\n      {trigger && <AlertDialogTrigger asChild>{trigger}</AlertDialogTrigger>}\n      <AlertDialogContent variant={variant}>\n        <AlertDialogHeader>\n          <div className='flex items-center gap-3'>\n            <div\n              className={cn('flex h-10 w-10 items-center justify-center rounded-full', {\n                'bg-blue-100 text-blue-600': variant === 'default' || variant === 'info',\n                'bg-red-100 text-red-600': variant === 'destructive',\n                'bg-yellow-100 text-yellow-600': variant === 'warning',\n                'bg-green-100 text-green-600': variant === 'success',\n              })}\n            >\n              <Icon className='h-5 w-5' />\n            </div>\n            <AlertDialogTitle>{title}</AlertDialogTitle>\n          </div>\n          {description && (\n            <AlertDialogDescription className='mt-2'>{description}</AlertDialogDescription>\n          )}\n        </AlertDialogHeader>\n        {children}\n        <AlertDialogFooter>\n          <AlertDialogCancel onClick={onCancel} disabled={loading}>\n            {cancelText}\n          </AlertDialogCancel>\n          <AlertDialogAction\n            onClick={onConfirm}\n            disabled={loading}\n            className={cn({\n              'bg-red-600 hover:bg-red-700': variant === 'destructive',\n              'bg-yellow-600 hover:bg-yellow-700': variant === 'warning',\n              'bg-green-600 hover:bg-green-700': variant === 'success',\n            })}\n          >\n            {loading ? (\n              <div className='flex items-center gap-2'>\n                <div className='h-4 w-4 animate-spin rounded-full border-2 border-white border-t-transparent' />\n                Procesando...\n              </div>\n            ) : (\n              confirmText\n            )}\n          </AlertDialogAction>\n        </AlertDialogFooter>\n      </AlertDialogContent>\n    </AlertDialog>\n  )\n}\n\n// Modal específico para Quick View de productos\nexport interface QuickViewModalProps {\n  children: React.ReactNode\n  trigger?: React.ReactNode\n  open?: boolean\n  onOpenChange?: (open: boolean) => void\n}\n\nexport function QuickViewModal({ children, trigger, open, onOpenChange }: QuickViewModalProps) {\n  // Debug: Verificar que onOpenChange se propaga correctamente\n  console.log('QuickViewModal - onOpenChange recibido:', typeof onOpenChange, onOpenChange)\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      {trigger && <DialogTrigger asChild>{trigger}</DialogTrigger>}\n      <DialogContent\n        size='4xl'\n        variant='elevated'\n        showCloseButton={true}\n        className='max-h-[90vh] overflow-y-auto'\n      >\n        <DialogHeader>\n          <VisuallyHidden.Root>\n            <DialogTitle>Vista rápida del producto</DialogTitle>\n          </VisuallyHidden.Root>\n        </DialogHeader>\n        {children}\n      </DialogContent>\n    </Dialog>\n  )\n}\n\n// Modal para agregar al carrito con animación\nexport interface AddToCartModalProps {\n  children?: React.ReactNode\n  trigger?: React.ReactNode\n  productName: string\n  productImage?: string\n  open?: boolean\n  onOpenChange?: (open: boolean) => void\n  onContinueShopping?: () => void\n  onGoToCart?: () => void\n}\n\nexport function AddToCartModal({\n  children,\n  trigger,\n  productName,\n  productImage,\n  open,\n  onOpenChange,\n  onContinueShopping,\n  onGoToCart,\n}: AddToCartModalProps) {\n  return (\n    <Modal\n      trigger={trigger}\n      size='md'\n      variant='elevated'\n      open={open}\n      onOpenChange={onOpenChange}\n      title='¡Producto agregado al carrito!'\n    >\n      <div className='flex flex-col items-center gap-4 py-4'>\n        <div className='flex h-16 w-16 items-center justify-center rounded-full bg-green-100'>\n          <CheckCircle className='h-8 w-8 text-green-600' />\n        </div>\n\n        {productImage && (\n          <img src={productImage} alt={productName} className='h-20 w-20 rounded-lg object-cover' />\n        )}\n\n        <p className='text-center text-gray-600'>\n          <span className='font-medium'>{productName}</span> se agregó correctamente a tu carrito\n        </p>\n\n        {children}\n\n        <div className='flex w-full gap-3'>\n          <button\n            onClick={onContinueShopping}\n            className='flex-1 rounded-button border border-gray-200 bg-white px-4 py-2 text-sm font-medium text-gray-900 transition-colors hover:bg-gray-50'\n          >\n            Seguir comprando\n          </button>\n          <button\n            onClick={onGoToCart}\n            className='flex-1 rounded-button bg-primary px-4 py-2 text-sm font-medium text-white transition-colors hover:bg-primary-hover'\n          >\n            <ShoppingCart className='mr-2 h-4 w-4' />\n            Ver carrito\n          </button>\n        </div>\n      </div>\n    </Modal>\n  )\n}\n\n// Hook para manejar modales de forma más sencilla\nexport function useModal(defaultOpen = false) {\n  const [open, setOpen] = React.useState(defaultOpen)\n\n  const openModal = React.useCallback(() => setOpen(true), [])\n  const closeModal = React.useCallback(() => setOpen(false), [])\n  const toggleModal = React.useCallback(() => setOpen(prev => !prev), [])\n\n  return {\n    open,\n    openModal,\n    closeModal,\n    toggleModal,\n    setOpen,\n  }\n}\n"],"names":["AddToCartModal","ConfirmModal","Modal","QuickViewModal","useModal","children","trigger","title","description","size","variant","showCloseButton","open","onOpenChange","className","Dialog","DialogTrigger","asChild","DialogContent","DialogHeader","DialogTitle","DialogDescription","confirmModalIcons","default","Info","destructive","AlertTriangle","warning","success","CheckCircle","info","confirmText","cancelText","onConfirm","onCancel","loading","Icon","AlertDialog","AlertDialogTrigger","AlertDialogContent","AlertDialogHeader","div","cn","AlertDialogTitle","AlertDialogDescription","AlertDialogFooter","AlertDialogCancel","onClick","disabled","AlertDialogAction","console","log","VisuallyHidden","Root","productName","productImage","onContinueShopping","onGoToCart","img","src","alt","p","span","button","ShoppingCart","defaultOpen","setOpen","React","useState","openModal","useCallback","closeModal","toggleModal","prev"],"mappings":"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"}