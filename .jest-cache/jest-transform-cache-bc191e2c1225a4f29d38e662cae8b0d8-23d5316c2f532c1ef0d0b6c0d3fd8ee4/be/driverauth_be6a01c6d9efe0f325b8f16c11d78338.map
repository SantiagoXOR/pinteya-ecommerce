{"version":3,"names":["cov_1am04aq7vq","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","driverAuthMiddleware","getDriverFromHeaders","isDriverRoute","request","session","_config","auth","user","email","_server","NextResponse","redirect","URL","url","supabase","_server1","createClient","data","driver","error","from","select","eq","single","console","response","next","headers","set","id","vehicle_type","pathname","startsWith","get","vehicle"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\middleware\\driver-auth.ts"],"sourcesContent":["/**\r\n * Middleware de autenticación específico para drivers\r\n * Verifica que el usuario sea un driver válido y tenga acceso a las rutas de driver\r\n */\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { auth } from '@/lib/auth/config';\r\nimport { createClient } from '@/lib/integrations/supabase/server';\r\n\r\nexport async function driverAuthMiddleware(request: NextRequest) {\r\n  try {\r\n    // Verificar autenticación básica\r\n    const session = await auth();\r\n    \r\n    if (!session?.user?.email) {\r\n      return NextResponse.redirect(new URL('/driver/login', request.url));\r\n    }\r\n\r\n    // Verificar que el usuario sea un driver válido\r\n    const supabase = await createClient();\r\n    \r\n    const { data: driver, error } = await supabase\r\n      .from('drivers')\r\n      .select('*')\r\n      .eq('email', session.user.email)\r\n      .eq('status', 'available')\r\n      .single();\r\n\r\n    if (error || !driver) {\r\n      console.error('Driver not found or inactive:', error);\r\n      return NextResponse.redirect(new URL('/access-denied', request.url));\r\n    }\r\n\r\n    // Agregar información del driver a los headers para uso en las páginas\r\n    const response = NextResponse.next();\r\n    response.headers.set('x-driver-id', driver.id);\r\n    response.headers.set('x-driver-name', driver.name);\r\n    response.headers.set('x-driver-vehicle', driver.vehicle_type);\r\n    \r\n    return response;\r\n\r\n  } catch (error) {\r\n    console.error('Error in driver auth middleware:', error);\r\n    return NextResponse.redirect(new URL('/driver/login', request.url));\r\n  }\r\n}\r\n\r\n/**\r\n * Función helper para verificar si una ruta requiere autenticación de driver\r\n */\r\nexport function isDriverRoute(pathname: string): boolean {\r\n  return pathname.startsWith('/driver') && !pathname.startsWith('/driver/login');\r\n}\r\n\r\n/**\r\n * Función para obtener información del driver desde los headers\r\n */\r\nexport function getDriverFromHeaders(request: NextRequest) {\r\n  return {\r\n    id: request.headers.get('x-driver-id'),\r\n    name: request.headers.get('x-driver-name'),\r\n    vehicle: request.headers.get('x-driver-vehicle'),\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA;;;GAGC;;AAAA;AAAA,SAAAA,eAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;U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","ignoreList":[]}