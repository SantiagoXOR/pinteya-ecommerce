20b6e2311cbbcabe5fdd829c7f444e7b
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_2cih03buf7() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\seo\\optimization\\route.ts";
  var hash = "e0cb038ae71a3039bd95386f013c7ce7523aeeac";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\seo\\optimization\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 31,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 22
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 19
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 23
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 20
        }
      },
      "8": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 19
        }
      },
      "9": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 23
        }
      },
      "10": {
        start: {
          line: 32,
          column: 16
        },
        end: {
          line: 32,
          column: 38
        }
      },
      "11": {
        start: {
          line: 33,
          column: 30
        },
        end: {
          line: 33,
          column: 83
        }
      },
      "12": {
        start: {
          line: 34,
          column: 16
        },
        end: {
          line: 34,
          column: 60
        }
      },
      "13": {
        start: {
          line: 35,
          column: 16
        },
        end: {
          line: 35,
          column: 24
        }
      },
      "14": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 78,
          column: 5
        }
      },
      "15": {
        start: {
          line: 38,
          column: 33
        },
        end: {
          line: 38,
          column: 53
        }
      },
      "16": {
        start: {
          line: 39,
          column: 23
        },
        end: {
          line: 39,
          column: 49
        }
      },
      "17": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 68,
          column: 9
        }
      },
      "18": {
        start: {
          line: 42,
          column: 30
        },
        end: {
          line: 42,
          column: 96
        }
      },
      "19": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 46,
          column: 19
        }
      },
      "20": {
        start: {
          line: 48,
          column: 40
        },
        end: {
          line: 48,
          column: 131
        }
      },
      "21": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 52,
          column: 19
        }
      },
      "22": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 67,
          column: 19
        }
      },
      "23": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 70,
          column: 119
        }
      },
      "24": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 77,
          column: 11
        }
      },
      "25": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 205,
          column: 5
        }
      },
      "26": {
        start: {
          line: 82,
          column: 21
        },
        end: {
          line: 82,
          column: 41
        }
      },
      "27": {
        start: {
          line: 83,
          column: 38
        },
        end: {
          line: 83,
          column: 42
        }
      },
      "28": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 186,
          column: 9
        }
      },
      "29": {
        start: {
          line: 87,
          column: 16
        },
        end: {
          line: 94,
          column: 17
        }
      },
      "30": {
        start: {
          line: 88,
          column: 20
        },
        end: {
          line: 93,
          column: 23
        }
      },
      "31": {
        start: {
          line: 95,
          column: 16
        },
        end: {
          line: 95,
          column: 121
        }
      },
      "32": {
        start: {
          line: 96,
          column: 16
        },
        end: {
          line: 96,
          column: 22
        }
      },
      "33": {
        start: {
          line: 98,
          column: 16
        },
        end: {
          line: 105,
          column: 17
        }
      },
      "34": {
        start: {
          line: 99,
          column: 20
        },
        end: {
          line: 104,
          column: 23
        }
      },
      "35": {
        start: {
          line: 106,
          column: 16
        },
        end: {
          line: 110,
          column: 19
        }
      },
      "36": {
        start: {
          line: 111,
          column: 16
        },
        end: {
          line: 111,
          column: 22
        }
      },
      "37": {
        start: {
          line: 113,
          column: 16
        },
        end: {
          line: 120,
          column: 17
        }
      },
      "38": {
        start: {
          line: 114,
          column: 20
        },
        end: {
          line: 119,
          column: 23
        }
      },
      "39": {
        start: {
          line: 121,
          column: 16
        },
        end: {
          line: 121,
          column: 142
        }
      },
      "40": {
        start: {
          line: 122,
          column: 16
        },
        end: {
          line: 124,
          column: 18
        }
      },
      "41": {
        start: {
          line: 125,
          column: 16
        },
        end: {
          line: 125,
          column: 22
        }
      },
      "42": {
        start: {
          line: 127,
          column: 16
        },
        end: {
          line: 134,
          column: 17
        }
      },
      "43": {
        start: {
          line: 128,
          column: 20
        },
        end: {
          line: 133,
          column: 23
        }
      },
      "44": {
        start: {
          line: 135,
          column: 16
        },
        end: {
          line: 135,
          column: 118
        }
      },
      "45": {
        start: {
          line: 136,
          column: 16
        },
        end: {
          line: 136,
          column: 22
        }
      },
      "46": {
        start: {
          line: 138,
          column: 16
        },
        end: {
          line: 145,
          column: 17
        }
      },
      "47": {
        start: {
          line: 139,
          column: 20
        },
        end: {
          line: 144,
          column: 23
        }
      },
      "48": {
        start: {
          line: 146,
          column: 16
        },
        end: {
          line: 146,
          column: 115
        }
      },
      "49": {
        start: {
          line: 147,
          column: 16
        },
        end: {
          line: 147,
          column: 22
        }
      },
      "50": {
        start: {
          line: 149,
          column: 16
        },
        end: {
          line: 156,
          column: 17
        }
      },
      "51": {
        start: {
          line: 150,
          column: 20
        },
        end: {
          line: 155,
          column: 23
        }
      },
      "52": {
        start: {
          line: 157,
          column: 16
        },
        end: {
          line: 157,
          column: 130
        }
      },
      "53": {
        start: {
          line: 158,
          column: 16
        },
        end: {
          line: 158,
          column: 22
        }
      },
      "54": {
        start: {
          line: 160,
          column: 16
        },
        end: {
          line: 167,
          column: 17
        }
      },
      "55": {
        start: {
          line: 161,
          column: 20
        },
        end: {
          line: 166,
          column: 23
        }
      },
      "56": {
        start: {
          line: 168,
          column: 16
        },
        end: {
          line: 168,
          column: 116
        }
      },
      "57": {
        start: {
          line: 169,
          column: 16
        },
        end: {
          line: 169,
          column: 22
        }
      },
      "58": {
        start: {
          line: 171,
          column: 16
        },
        end: {
          line: 185,
          column: 19
        }
      },
      "59": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 190,
          column: 36
        }
      },
      "60": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 195,
          column: 11
        }
      },
      "61": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 197,
          column: 120
        }
      },
      "62": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 204,
          column: 11
        }
      },
      "63": {
        start: {
          line: 208,
          column: 4
        },
        end: {
          line: 239,
          column: 5
        }
      },
      "64": {
        start: {
          line: 209,
          column: 21
        },
        end: {
          line: 209,
          column: 41
        }
      },
      "65": {
        start: {
          line: 210,
          column: 27
        },
        end: {
          line: 210,
          column: 31
        }
      },
      "66": {
        start: {
          line: 211,
          column: 8
        },
        end: {
          line: 218,
          column: 9
        }
      },
      "67": {
        start: {
          line: 212,
          column: 12
        },
        end: {
          line: 217,
          column: 15
        }
      },
      "68": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 219,
          column: 77
        }
      },
      "69": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 222,
          column: 36
        }
      },
      "70": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 229,
          column: 11
        }
      },
      "71": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 231,
          column: 119
        }
      },
      "72": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 238,
          column: 11
        }
      },
      "73": {
        start: {
          line: 242,
          column: 4
        },
        end: {
          line: 260,
          column: 5
        }
      },
      "74": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 243,
          column: 78
        }
      },
      "75": {
        start: {
          line: 244,
          column: 8
        },
        end: {
          line: 244,
          column: 120
        }
      },
      "76": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 250,
          column: 11
        }
      },
      "77": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 252,
          column: 122
        }
      },
      "78": {
        start: {
          line: 253,
          column: 8
        },
        end: {
          line: 259,
          column: 11
        }
      },
      "79": {
        start: {
          line: 263,
          column: 4
        },
        end: {
          line: 270,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 18
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 15
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 16
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 15
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        loc: {
          start: {
            line: 28,
            column: 19
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 28
      },
      "7": {
        name: "GET",
        decl: {
          start: {
            line: 36,
            column: 15
          },
          end: {
            line: 36,
            column: 18
          }
        },
        loc: {
          start: {
            line: 36,
            column: 28
          },
          end: {
            line: 79,
            column: 1
          }
        },
        line: 36
      },
      "8": {
        name: "POST",
        decl: {
          start: {
            line: 80,
            column: 15
          },
          end: {
            line: 80,
            column: 19
          }
        },
        loc: {
          start: {
            line: 80,
            column: 29
          },
          end: {
            line: 206,
            column: 1
          }
        },
        line: 80
      },
      "9": {
        name: "PUT",
        decl: {
          start: {
            line: 207,
            column: 15
          },
          end: {
            line: 207,
            column: 18
          }
        },
        loc: {
          start: {
            line: 207,
            column: 28
          },
          end: {
            line: 240,
            column: 1
          }
        },
        line: 207
      },
      "10": {
        name: "DELETE",
        decl: {
          start: {
            line: 241,
            column: 15
          },
          end: {
            line: 241,
            column: 21
          }
        },
        loc: {
          start: {
            line: 241,
            column: 31
          },
          end: {
            line: 261,
            column: 1
          }
        },
        line: 241
      },
      "11": {
        name: "OPTIONS",
        decl: {
          start: {
            line: 262,
            column: 15
          },
          end: {
            line: 262,
            column: 22
          }
        },
        loc: {
          start: {
            line: 262,
            column: 32
          },
          end: {
            line: 271,
            column: 1
          }
        },
        line: 262
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 46,
            column: 19
          }
        }, {
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 52,
            column: 19
          }
        }, {
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 67,
            column: 19
          }
        }],
        line: 40
      },
      "1": {
        loc: {
          start: {
            line: 74,
            column: 21
          },
          end: {
            line: 74,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 74,
            column: 46
          },
          end: {
            line: 74,
            column: 59
          }
        }, {
          start: {
            line: 74,
            column: 62
          },
          end: {
            line: 74,
            column: 77
          }
        }],
        line: 74
      },
      "2": {
        loc: {
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 186,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 86,
            column: 12
          },
          end: {
            line: 96,
            column: 22
          }
        }, {
          start: {
            line: 97,
            column: 12
          },
          end: {
            line: 111,
            column: 22
          }
        }, {
          start: {
            line: 112,
            column: 12
          },
          end: {
            line: 125,
            column: 22
          }
        }, {
          start: {
            line: 126,
            column: 12
          },
          end: {
            line: 136,
            column: 22
          }
        }, {
          start: {
            line: 137,
            column: 12
          },
          end: {
            line: 147,
            column: 22
          }
        }, {
          start: {
            line: 148,
            column: 12
          },
          end: {
            line: 158,
            column: 22
          }
        }, {
          start: {
            line: 159,
            column: 12
          },
          end: {
            line: 169,
            column: 22
          }
        }, {
          start: {
            line: 170,
            column: 12
          },
          end: {
            line: 185,
            column: 19
          }
        }],
        line: 85
      },
      "3": {
        loc: {
          start: {
            line: 87,
            column: 16
          },
          end: {
            line: 94,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 16
          },
          end: {
            line: 94,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 87
      },
      "4": {
        loc: {
          start: {
            line: 87,
            column: 20
          },
          end: {
            line: 87,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 87,
            column: 20
          },
          end: {
            line: 87,
            column: 39
          }
        }, {
          start: {
            line: 87,
            column: 43
          },
          end: {
            line: 87,
            column: 77
          }
        }],
        line: 87
      },
      "5": {
        loc: {
          start: {
            line: 98,
            column: 16
          },
          end: {
            line: 105,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 16
          },
          end: {
            line: 105,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 98
      },
      "6": {
        loc: {
          start: {
            line: 98,
            column: 20
          },
          end: {
            line: 98,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 98,
            column: 20
          },
          end: {
            line: 98,
            column: 32
          }
        }, {
          start: {
            line: 98,
            column: 36
          },
          end: {
            line: 98,
            column: 47
          }
        }, {
          start: {
            line: 98,
            column: 51
          },
          end: {
            line: 98,
            column: 67
          }
        }],
        line: 98
      },
      "7": {
        loc: {
          start: {
            line: 113,
            column: 16
          },
          end: {
            line: 120,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 16
          },
          end: {
            line: 120,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 113
      },
      "8": {
        loc: {
          start: {
            line: 113,
            column: 20
          },
          end: {
            line: 113,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 113,
            column: 20
          },
          end: {
            line: 113,
            column: 34
          }
        }, {
          start: {
            line: 113,
            column: 38
          },
          end: {
            line: 113,
            column: 55
          }
        }, {
          start: {
            line: 113,
            column: 59
          },
          end: {
            line: 113,
            column: 74
          }
        }],
        line: 113
      },
      "9": {
        loc: {
          start: {
            line: 127,
            column: 16
          },
          end: {
            line: 134,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 16
          },
          end: {
            line: 134,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 127
      },
      "10": {
        loc: {
          start: {
            line: 138,
            column: 16
          },
          end: {
            line: 145,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 138,
            column: 16
          },
          end: {
            line: 145,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 138
      },
      "11": {
        loc: {
          start: {
            line: 149,
            column: 16
          },
          end: {
            line: 156,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 149,
            column: 16
          },
          end: {
            line: 156,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 149
      },
      "12": {
        loc: {
          start: {
            line: 149,
            column: 20
          },
          end: {
            line: 149,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 149,
            column: 20
          },
          end: {
            line: 149,
            column: 31
          }
        }, {
          start: {
            line: 149,
            column: 35
          },
          end: {
            line: 149,
            column: 54
          }
        }],
        line: 149
      },
      "13": {
        loc: {
          start: {
            line: 160,
            column: 16
          },
          end: {
            line: 167,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 160,
            column: 16
          },
          end: {
            line: 167,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 160
      },
      "14": {
        loc: {
          start: {
            line: 201,
            column: 21
          },
          end: {
            line: 201,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 201,
            column: 46
          },
          end: {
            line: 201,
            column: 59
          }
        }, {
          start: {
            line: 201,
            column: 62
          },
          end: {
            line: 201,
            column: 77
          }
        }],
        line: 201
      },
      "15": {
        loc: {
          start: {
            line: 211,
            column: 8
          },
          end: {
            line: 218,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 211,
            column: 8
          },
          end: {
            line: 218,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 211
      },
      "16": {
        loc: {
          start: {
            line: 211,
            column: 12
          },
          end: {
            line: 211,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 211,
            column: 12
          },
          end: {
            line: 211,
            column: 19
          }
        }, {
          start: {
            line: 211,
            column: 23
          },
          end: {
            line: 211,
            column: 49
          }
        }],
        line: 211
      },
      "17": {
        loc: {
          start: {
            line: 235,
            column: 21
          },
          end: {
            line: 235,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 235,
            column: 46
          },
          end: {
            line: 235,
            column: 59
          }
        }, {
          start: {
            line: 235,
            column: 62
          },
          end: {
            line: 235,
            column: 77
          }
        }],
        line: 235
      },
      "18": {
        loc: {
          start: {
            line: 256,
            column: 21
          },
          end: {
            line: 256,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 256,
            column: 46
          },
          end: {
            line: 256,
            column: 59
          }
        }, {
          start: {
            line: 256,
            column: 62
          },
          end: {
            line: 256,
            column: 77
          }
        }],
        line: 256
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0, 0, 0, 0, 0, 0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\seo\\optimization\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - SEO OPTIMIZATION API\r\n// API endpoints para herramientas de optimizaci\xF3n SEO\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { enhancedSEOOptimizationTools } from '@/lib/seo/seo-optimization-tools';\r\nimport { logger, LogCategory, LogLevel } from '@/lib/enterprise/logger';\r\n\r\n// ===================================\r\n// GET - Obtener estad\xEDsticas y configuraci\xF3n\r\n// ===================================\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    const { searchParams } = new URL(request.url);\r\n    const action = searchParams.get('action');\r\n\r\n    switch (action) {\r\n      case 'stats':\r\n        const stats = enhancedSEOOptimizationTools.getUsageStats();\r\n        return NextResponse.json({\r\n          success: true,\r\n          data: stats\r\n        });\r\n\r\n      case 'recommendations':\r\n        const recommendations = await enhancedSEOOptimizationTools.generateAutomatedRecommendations();\r\n        return NextResponse.json({\r\n          success: true,\r\n          data: recommendations\r\n        });\r\n\r\n      default:\r\n        return NextResponse.json({\r\n          success: true,\r\n          data: {\r\n            message: 'SEO Optimization Tools API',\r\n            version: '1.0.0',\r\n            endpoints: {\r\n              'GET ?action=stats': 'Get usage statistics',\r\n              'GET ?action=recommendations': 'Get automated recommendations',\r\n              'POST': 'Perform SEO analysis',\r\n              'PUT': 'Update configuration',\r\n              'DELETE': 'Clear cache'\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n  } catch (error) {\r\n    logger.error(LogLevel.ERROR, 'SEO optimization API GET error', error as Error, LogCategory.SEO);\r\n    \r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Failed to process request',\r\n      details: error instanceof Error ? error.message : 'Unknown error'\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n// ===================================\r\n// POST - Realizar an\xE1lisis SEO\r\n// ===================================\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    const body = await request.json();\r\n    const { action, ...params } = body;\r\n\r\n    let result;\r\n\r\n    switch (action) {\r\n      case 'analyze_competitors':\r\n        if (!params.competitors || !Array.isArray(params.competitors)) {\r\n          return NextResponse.json({\r\n            success: false,\r\n            error: 'competitors array is required'\r\n          }, { status: 400 });\r\n        }\r\n        \r\n        result = await enhancedSEOOptimizationTools.analyzeCompetitors(params.competitors);\r\n        break;\r\n\r\n      case 'create_ab_test':\r\n        if (!params.name || !params.url || !params.variants) {\r\n          return NextResponse.json({\r\n            success: false,\r\n            error: 'name, url, and variants are required'\r\n          }, { status: 400 });\r\n        }\r\n        \r\n        result = await enhancedSEOOptimizationTools.createABTest({\r\n          name: params.name,\r\n          url: params.url,\r\n          variants: params.variants\r\n        });\r\n        break;\r\n\r\n      case 'update_ab_test':\r\n        if (!params.testId || !params.variantId || !params.metrics) {\r\n          return NextResponse.json({\r\n            success: false,\r\n            error: 'testId, variantId, and metrics are required'\r\n          }, { status: 400 });\r\n        }\r\n        \r\n        await enhancedSEOOptimizationTools.updateABTestMetrics(\r\n          params.testId,\r\n          params.variantId,\r\n          params.metrics\r\n        );\r\n        result = { message: 'A/B test metrics updated successfully' };\r\n        break;\r\n\r\n      case 'analyze_ab_test':\r\n        if (!params.testId) {\r\n          return NextResponse.json({\r\n            success: false,\r\n            error: 'testId is required'\r\n          }, { status: 400 });\r\n        }\r\n        \r\n        result = await enhancedSEOOptimizationTools.analyzeABTestResults(params.testId);\r\n        break;\r\n\r\n      case 'analyze_core_web_vitals':\r\n        if (!params.url) {\r\n          return NextResponse.json({\r\n            success: false,\r\n            error: 'url is required'\r\n          }, { status: 400 });\r\n        }\r\n        \r\n        result = await enhancedSEOOptimizationTools.analyzeCoreWebVitals(params.url);\r\n        break;\r\n\r\n      case 'optimize_content':\r\n        if (!params.url || !params.contentType) {\r\n          return NextResponse.json({\r\n            success: false,\r\n            error: 'url and contentType are required'\r\n          }, { status: 400 });\r\n        }\r\n        \r\n        result = await enhancedSEOOptimizationTools.optimizeContent(\r\n          params.url,\r\n          params.contentType\r\n        );\r\n        break;\r\n\r\n      case 'technical_audit':\r\n        if (!params.url) {\r\n          return NextResponse.json({\r\n            success: false,\r\n            error: 'url is required'\r\n          }, { status: 400 });\r\n        }\r\n        \r\n        result = await enhancedSEOOptimizationTools.performTechnicalAudit(params.url);\r\n        break;\r\n\r\n      default:\r\n        return NextResponse.json({\r\n          success: false,\r\n          error: 'Invalid action',\r\n          availableActions: [\r\n            'analyze_competitors',\r\n            'create_ab_test',\r\n            'update_ab_test',\r\n            'analyze_ab_test',\r\n            'analyze_core_web_vitals',\r\n            'optimize_content',\r\n            'technical_audit'\r\n          ]\r\n        }, { status: 400 });\r\n    }\r\n\r\n    logger.info(LogLevel.INFO, 'SEO optimization analysis completed', {\r\n      action,\r\n      params: Object.keys(params)\r\n    }, LogCategory.SEO);\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: result,\r\n      timestamp: new Date().toISOString()\r\n    });\r\n\r\n  } catch (error) {\r\n    logger.error(LogLevel.ERROR, 'SEO optimization API POST error', error as Error, LogCategory.SEO);\r\n    \r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Failed to perform SEO analysis',\r\n      details: error instanceof Error ? error.message : 'Unknown error'\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n// ===================================\r\n// PUT - Actualizar configuraci\xF3n\r\n// ===================================\r\nexport async function PUT(request: NextRequest) {\r\n  try {\r\n    const body = await request.json();\r\n    const { config } = body;\r\n\r\n    if (!config || typeof config !== 'object') {\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: 'config object is required'\r\n      }, { status: 400 });\r\n    }\r\n\r\n    enhancedSEOOptimizationTools.configure(config);\r\n\r\n    logger.info(LogLevel.INFO, 'SEO optimization tools reconfigured', {\r\n      configKeys: Object.keys(config)\r\n    }, LogCategory.SEO);\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: {\r\n        message: 'Configuration updated successfully',\r\n        updatedKeys: Object.keys(config)\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    logger.error(LogLevel.ERROR, 'SEO optimization API PUT error', error as Error, LogCategory.SEO);\r\n    \r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Failed to update configuration',\r\n      details: error instanceof Error ? error.message : 'Unknown error'\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n// ===================================\r\n// DELETE - Limpiar cache\r\n// ===================================\r\nexport async function DELETE(request: NextRequest) {\r\n  try {\r\n    await enhancedSEOOptimizationTools.clearCache();\r\n\r\n    logger.info(LogLevel.INFO, 'SEO optimization tools cache cleared', {}, LogCategory.SEO);\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: {\r\n        message: 'Cache cleared successfully'\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    logger.error(LogLevel.ERROR, 'SEO optimization API DELETE error', error as Error, LogCategory.SEO);\r\n    \r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Failed to clear cache',\r\n      details: error instanceof Error ? error.message : 'Unknown error'\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n// ===================================\r\n// OPCIONES CORS\r\n// ===================================\r\nexport async function OPTIONS(request: NextRequest) {\r\n  return new NextResponse(null, {\r\n    status: 200,\r\n    headers: {\r\n      'Access-Control-Allow-Origin': '*',\r\n      'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\r\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization',\r\n    },\r\n  });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["DELETE", "GET", "OPTIONS", "POST", "PUT", "runtime", "request", "searchParams", "URL", "url", "action", "get", "stats", "enhancedSEOOptimizationTools", "getUsageStats", "NextResponse", "json", "success", "data", "recommendations", "generateAutomatedRecommendations", "message", "version", "endpoints", "error", "logger", "LogLevel", "ERROR", "LogCategory", "SEO", "details", "Error", "status", "body", "params", "result", "competitors", "Array", "isArray", "analyzeCompetitors", "name", "variants", "createABTest", "testId", "variantId", "metrics", "updateABTestMetrics", "analyzeABTestResults", "analyzeCoreWebVitals", "contentType", "optimizeContent", "performTechnicalAudit", "availableActions", "info", "INFO", "Object", "keys", "timestamp", "Date", "toISOString", "config", "configure", "configKeys", "updatedKeys", "clearCache", "headers"],
      mappings: "AAAA,qCAAqC;;;;;;;;;;;;QAoPfA;eAAAA;;QArOAC;eAAAA;;QAgQAC;eAAAA;;QA7MAC;eAAAA;;QA0IAC;eAAAA;;QA3MTC;eAAAA;;;wBAO6B;sCACG;wBACC;AATvC,MAAMA,UAAU;AAchB,eAAeJ,IAAIK,OAAoB;IAC5C,IAAI;QACF,MAAM,EAAEC,YAAY,EAAE,GAAG,IAAIC,IAAIF,QAAQG,GAAG;QAC5C,MAAMC,SAASH,aAAaI,GAAG,CAAC;QAEhC,OAAQD;YACN,KAAK;gBACH,MAAME,QAAQC,kDAA4B,CAACC,aAAa;gBACxD,OAAOC,oBAAY,CAACC,IAAI,CAAC;oBACvBC,SAAS;oBACTC,MAAMN;gBACR;YAEF,KAAK;gBACH,MAAMO,kBAAkB,MAAMN,kDAA4B,CAACO,gCAAgC;gBAC3F,OAAOL,oBAAY,CAACC,IAAI,CAAC;oBACvBC,SAAS;oBACTC,MAAMC;gBACR;YAEF;gBACE,OAAOJ,oBAAY,CAACC,IAAI,CAAC;oBACvBC,SAAS;oBACTC,MAAM;wBACJG,SAAS;wBACTC,SAAS;wBACTC,WAAW;4BACT,qBAAqB;4BACrB,+BAA+B;4BAC/B,QAAQ;4BACR,OAAO;4BACP,UAAU;wBACZ;oBACF;gBACF;QACJ;IAEF,EAAE,OAAOC,OAAO;QACdC,cAAM,CAACD,KAAK,CAACE,gBAAQ,CAACC,KAAK,EAAE,kCAAkCH,OAAgBI,mBAAW,CAACC,GAAG;QAE9F,OAAOd,oBAAY,CAACC,IAAI,CAAC;YACvBC,SAAS;YACTO,OAAO;YACPM,SAASN,iBAAiBO,QAAQP,MAAMH,OAAO,GAAG;QACpD,GAAG;YAAEW,QAAQ;QAAI;IACnB;AACF;AAKO,eAAe7B,KAAKG,OAAoB;IAC7C,IAAI;QACF,MAAM2B,OAAO,MAAM3B,QAAQU,IAAI;QAC/B,MAAM,EAAEN,MAAM,EAAE,GAAGwB,QAAQ,GAAGD;QAE9B,IAAIE;QAEJ,OAAQzB;YACN,KAAK;gBACH,IAAI,CAACwB,OAAOE,WAAW,IAAI,CAACC,MAAMC,OAAO,CAACJ,OAAOE,WAAW,GAAG;oBAC7D,OAAOrB,oBAAY,CAACC,IAAI,CAAC;wBACvBC,SAAS;wBACTO,OAAO;oBACT,GAAG;wBAAEQ,QAAQ;oBAAI;gBACnB;gBAEAG,SAAS,MAAMtB,kDAA4B,CAAC0B,kBAAkB,CAACL,OAAOE,WAAW;gBACjF;YAEF,KAAK;gBACH,IAAI,CAACF,OAAOM,IAAI,IAAI,CAACN,OAAOzB,GAAG,IAAI,CAACyB,OAAOO,QAAQ,EAAE;oBACnD,OAAO1B,oBAAY,CAACC,IAAI,CAAC;wBACvBC,SAAS;wBACTO,OAAO;oBACT,GAAG;wBAAEQ,QAAQ;oBAAI;gBACnB;gBAEAG,SAAS,MAAMtB,kDAA4B,CAAC6B,YAAY,CAAC;oBACvDF,MAAMN,OAAOM,IAAI;oBACjB/B,KAAKyB,OAAOzB,GAAG;oBACfgC,UAAUP,OAAOO,QAAQ;gBAC3B;gBACA;YAEF,KAAK;gBACH,IAAI,CAACP,OAAOS,MAAM,IAAI,CAACT,OAAOU,SAAS,IAAI,CAACV,OAAOW,OAAO,EAAE;oBAC1D,OAAO9B,oBAAY,CAACC,IAAI,CAAC;wBACvBC,SAAS;wBACTO,OAAO;oBACT,GAAG;wBAAEQ,QAAQ;oBAAI;gBACnB;gBAEA,MAAMnB,kDAA4B,CAACiC,mBAAmB,CACpDZ,OAAOS,MAAM,EACbT,OAAOU,SAAS,EAChBV,OAAOW,OAAO;gBAEhBV,SAAS;oBAAEd,SAAS;gBAAwC;gBAC5D;YAEF,KAAK;gBACH,IAAI,CAACa,OAAOS,MAAM,EAAE;oBAClB,OAAO5B,oBAAY,CAACC,IAAI,CAAC;wBACvBC,SAAS;wBACTO,OAAO;oBACT,GAAG;wBAAEQ,QAAQ;oBAAI;gBACnB;gBAEAG,SAAS,MAAMtB,kDAA4B,CAACkC,oBAAoB,CAACb,OAAOS,MAAM;gBAC9E;YAEF,KAAK;gBACH,IAAI,CAACT,OAAOzB,GAAG,EAAE;oBACf,OAAOM,oBAAY,CAACC,IAAI,CAAC;wBACvBC,SAAS;wBACTO,OAAO;oBACT,GAAG;wBAAEQ,QAAQ;oBAAI;gBACnB;gBAEAG,SAAS,MAAMtB,kDAA4B,CAACmC,oBAAoB,CAACd,OAAOzB,GAAG;gBAC3E;YAEF,KAAK;gBACH,IAAI,CAACyB,OAAOzB,GAAG,IAAI,CAACyB,OAAOe,WAAW,EAAE;oBACtC,OAAOlC,oBAAY,CAACC,IAAI,CAAC;wBACvBC,SAAS;wBACTO,OAAO;oBACT,GAAG;wBAAEQ,QAAQ;oBAAI;gBACnB;gBAEAG,SAAS,MAAMtB,kDAA4B,CAACqC,eAAe,CACzDhB,OAAOzB,GAAG,EACVyB,OAAOe,WAAW;gBAEpB;YAEF,KAAK;gBACH,IAAI,CAACf,OAAOzB,GAAG,EAAE;oBACf,OAAOM,oBAAY,CAACC,IAAI,CAAC;wBACvBC,SAAS;wBACTO,OAAO;oBACT,GAAG;wBAAEQ,QAAQ;oBAAI;gBACnB;gBAEAG,SAAS,MAAMtB,kDAA4B,CAACsC,qBAAqB,CAACjB,OAAOzB,GAAG;gBAC5E;YAEF;gBACE,OAAOM,oBAAY,CAACC,IAAI,CAAC;oBACvBC,SAAS;oBACTO,OAAO;oBACP4B,kBAAkB;wBAChB;wBACA;wBACA;wBACA;wBACA;wBACA;wBACA;qBACD;gBACH,GAAG;oBAAEpB,QAAQ;gBAAI;QACrB;QAEAP,cAAM,CAAC4B,IAAI,CAAC3B,gBAAQ,CAAC4B,IAAI,EAAE,uCAAuC;YAChE5C;YACAwB,QAAQqB,OAAOC,IAAI,CAACtB;QACtB,GAAGN,mBAAW,CAACC,GAAG;QAElB,OAAOd,oBAAY,CAACC,IAAI,CAAC;YACvBC,SAAS;YACTC,MAAMiB;YACNsB,WAAW,IAAIC,OAAOC,WAAW;QACnC;IAEF,EAAE,OAAOnC,OAAO;QACdC,cAAM,CAACD,KAAK,CAACE,gBAAQ,CAACC,KAAK,EAAE,mCAAmCH,OAAgBI,mBAAW,CAACC,GAAG;QAE/F,OAAOd,oBAAY,CAACC,IAAI,CAAC;YACvBC,SAAS;YACTO,OAAO;YACPM,SAASN,iBAAiBO,QAAQP,MAAMH,OAAO,GAAG;QACpD,GAAG;YAAEW,QAAQ;QAAI;IACnB;AACF;AAKO,eAAe5B,IAAIE,OAAoB;IAC5C,IAAI;QACF,MAAM2B,OAAO,MAAM3B,QAAQU,IAAI;QAC/B,MAAM,EAAE4C,MAAM,EAAE,GAAG3B;QAEnB,IAAI,CAAC2B,UAAU,OAAOA,WAAW,UAAU;YACzC,OAAO7C,oBAAY,CAACC,IAAI,CAAC;gBACvBC,SAAS;gBACTO,OAAO;YACT,GAAG;gBAAEQ,QAAQ;YAAI;QACnB;QAEAnB,kDAA4B,CAACgD,SAAS,CAACD;QAEvCnC,cAAM,CAAC4B,IAAI,CAAC3B,gBAAQ,CAAC4B,IAAI,EAAE,uCAAuC;YAChEQ,YAAYP,OAAOC,IAAI,CAACI;QAC1B,GAAGhC,mBAAW,CAACC,GAAG;QAElB,OAAOd,oBAAY,CAACC,IAAI,CAAC;YACvBC,SAAS;YACTC,MAAM;gBACJG,SAAS;gBACT0C,aAAaR,OAAOC,IAAI,CAACI;YAC3B;QACF;IAEF,EAAE,OAAOpC,OAAO;QACdC,cAAM,CAACD,KAAK,CAACE,gBAAQ,CAACC,KAAK,EAAE,kCAAkCH,OAAgBI,mBAAW,CAACC,GAAG;QAE9F,OAAOd,oBAAY,CAACC,IAAI,CAAC;YACvBC,SAAS;YACTO,OAAO;YACPM,SAASN,iBAAiBO,QAAQP,MAAMH,OAAO,GAAG;QACpD,GAAG;YAAEW,QAAQ;QAAI;IACnB;AACF;AAKO,eAAehC,OAAOM,OAAoB;IAC/C,IAAI;QACF,MAAMO,kDAA4B,CAACmD,UAAU;QAE7CvC,cAAM,CAAC4B,IAAI,CAAC3B,gBAAQ,CAAC4B,IAAI,EAAE,wCAAwC,CAAC,GAAG1B,mBAAW,CAACC,GAAG;QAEtF,OAAOd,oBAAY,CAACC,IAAI,CAAC;YACvBC,SAAS;YACTC,MAAM;gBACJG,SAAS;YACX;QACF;IAEF,EAAE,OAAOG,OAAO;QACdC,cAAM,CAACD,KAAK,CAACE,gBAAQ,CAACC,KAAK,EAAE,qCAAqCH,OAAgBI,mBAAW,CAACC,GAAG;QAEjG,OAAOd,oBAAY,CAACC,IAAI,CAAC;YACvBC,SAAS;YACTO,OAAO;YACPM,SAASN,iBAAiBO,QAAQP,MAAMH,OAAO,GAAG;QACpD,GAAG;YAAEW,QAAQ;QAAI;IACnB;AACF;AAKO,eAAe9B,QAAQI,OAAoB;IAChD,OAAO,IAAIS,oBAAY,CAAC,MAAM;QAC5BiB,QAAQ;QACRiC,SAAS;YACP,+BAA+B;YAC/B,gCAAgC;YAChC,gCAAgC;QAClC;IACF;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e0cb038ae71a3039bd95386f013c7ce7523aeeac"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2cih03buf7 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2cih03buf7();
cov_2cih03buf7().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2cih03buf7().f[0]++;
  cov_2cih03buf7().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2cih03buf7().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_2cih03buf7().s[3]++;
_export(exports, {
  get DELETE() {
    /* istanbul ignore next */
    cov_2cih03buf7().f[1]++;
    cov_2cih03buf7().s[4]++;
    return DELETE;
  },
  get GET() {
    /* istanbul ignore next */
    cov_2cih03buf7().f[2]++;
    cov_2cih03buf7().s[5]++;
    return GET;
  },
  get OPTIONS() {
    /* istanbul ignore next */
    cov_2cih03buf7().f[3]++;
    cov_2cih03buf7().s[6]++;
    return OPTIONS;
  },
  get POST() {
    /* istanbul ignore next */
    cov_2cih03buf7().f[4]++;
    cov_2cih03buf7().s[7]++;
    return POST;
  },
  get PUT() {
    /* istanbul ignore next */
    cov_2cih03buf7().f[5]++;
    cov_2cih03buf7().s[8]++;
    return PUT;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_2cih03buf7().f[6]++;
    cov_2cih03buf7().s[9]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_2cih03buf7().s[10]++, require("next/server"));
const _seooptimizationtools =
/* istanbul ignore next */
(cov_2cih03buf7().s[11]++, require("../../../../lib/seo/seo-optimization-tools"));
const _logger =
/* istanbul ignore next */
(cov_2cih03buf7().s[12]++, require("../../../../lib/enterprise/logger"));
const runtime =
/* istanbul ignore next */
(cov_2cih03buf7().s[13]++, 'nodejs');
async function GET(request) {
  /* istanbul ignore next */
  cov_2cih03buf7().f[7]++;
  cov_2cih03buf7().s[14]++;
  try {
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_2cih03buf7().s[15]++, new URL(request.url));
    const action =
    /* istanbul ignore next */
    (cov_2cih03buf7().s[16]++, searchParams.get('action'));
    /* istanbul ignore next */
    cov_2cih03buf7().s[17]++;
    switch (action) {
      case 'stats':
        /* istanbul ignore next */
        cov_2cih03buf7().b[0][0]++;
        const stats =
        /* istanbul ignore next */
        (cov_2cih03buf7().s[18]++, _seooptimizationtools.enhancedSEOOptimizationTools.getUsageStats());
        /* istanbul ignore next */
        cov_2cih03buf7().s[19]++;
        return _server.NextResponse.json({
          success: true,
          data: stats
        });
      case 'recommendations':
        /* istanbul ignore next */
        cov_2cih03buf7().b[0][1]++;
        const recommendations =
        /* istanbul ignore next */
        (cov_2cih03buf7().s[20]++, await _seooptimizationtools.enhancedSEOOptimizationTools.generateAutomatedRecommendations());
        /* istanbul ignore next */
        cov_2cih03buf7().s[21]++;
        return _server.NextResponse.json({
          success: true,
          data: recommendations
        });
      default:
        /* istanbul ignore next */
        cov_2cih03buf7().b[0][2]++;
        cov_2cih03buf7().s[22]++;
        return _server.NextResponse.json({
          success: true,
          data: {
            message: 'SEO Optimization Tools API',
            version: '1.0.0',
            endpoints: {
              'GET ?action=stats': 'Get usage statistics',
              'GET ?action=recommendations': 'Get automated recommendations',
              'POST': 'Perform SEO analysis',
              'PUT': 'Update configuration',
              'DELETE': 'Clear cache'
            }
          }
        });
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_2cih03buf7().s[23]++;
    _logger.logger.error(_logger.LogLevel.ERROR, 'SEO optimization API GET error', error, _logger.LogCategory.SEO);
    /* istanbul ignore next */
    cov_2cih03buf7().s[24]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Failed to process request',
      details: error instanceof Error ?
      /* istanbul ignore next */
      (cov_2cih03buf7().b[1][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2cih03buf7().b[1][1]++, 'Unknown error')
    }, {
      status: 500
    });
  }
}
async function POST(request) {
  /* istanbul ignore next */
  cov_2cih03buf7().f[8]++;
  cov_2cih03buf7().s[25]++;
  try {
    const body =
    /* istanbul ignore next */
    (cov_2cih03buf7().s[26]++, await request.json());
    const {
      action,
      ...params
    } =
    /* istanbul ignore next */
    (cov_2cih03buf7().s[27]++, body);
    let result;
    /* istanbul ignore next */
    cov_2cih03buf7().s[28]++;
    switch (action) {
      case 'analyze_competitors':
        /* istanbul ignore next */
        cov_2cih03buf7().b[2][0]++;
        cov_2cih03buf7().s[29]++;
        if (
        /* istanbul ignore next */
        (cov_2cih03buf7().b[4][0]++, !params.competitors) ||
        /* istanbul ignore next */
        (cov_2cih03buf7().b[4][1]++, !Array.isArray(params.competitors))) {
          /* istanbul ignore next */
          cov_2cih03buf7().b[3][0]++;
          cov_2cih03buf7().s[30]++;
          return _server.NextResponse.json({
            success: false,
            error: 'competitors array is required'
          }, {
            status: 400
          });
        } else
        /* istanbul ignore next */
        {
          cov_2cih03buf7().b[3][1]++;
        }
        cov_2cih03buf7().s[31]++;
        result = await _seooptimizationtools.enhancedSEOOptimizationTools.analyzeCompetitors(params.competitors);
        /* istanbul ignore next */
        cov_2cih03buf7().s[32]++;
        break;
      case 'create_ab_test':
        /* istanbul ignore next */
        cov_2cih03buf7().b[2][1]++;
        cov_2cih03buf7().s[33]++;
        if (
        /* istanbul ignore next */
        (cov_2cih03buf7().b[6][0]++, !params.name) ||
        /* istanbul ignore next */
        (cov_2cih03buf7().b[6][1]++, !params.url) ||
        /* istanbul ignore next */
        (cov_2cih03buf7().b[6][2]++, !params.variants)) {
          /* istanbul ignore next */
          cov_2cih03buf7().b[5][0]++;
          cov_2cih03buf7().s[34]++;
          return _server.NextResponse.json({
            success: false,
            error: 'name, url, and variants are required'
          }, {
            status: 400
          });
        } else
        /* istanbul ignore next */
        {
          cov_2cih03buf7().b[5][1]++;
        }
        cov_2cih03buf7().s[35]++;
        result = await _seooptimizationtools.enhancedSEOOptimizationTools.createABTest({
          name: params.name,
          url: params.url,
          variants: params.variants
        });
        /* istanbul ignore next */
        cov_2cih03buf7().s[36]++;
        break;
      case 'update_ab_test':
        /* istanbul ignore next */
        cov_2cih03buf7().b[2][2]++;
        cov_2cih03buf7().s[37]++;
        if (
        /* istanbul ignore next */
        (cov_2cih03buf7().b[8][0]++, !params.testId) ||
        /* istanbul ignore next */
        (cov_2cih03buf7().b[8][1]++, !params.variantId) ||
        /* istanbul ignore next */
        (cov_2cih03buf7().b[8][2]++, !params.metrics)) {
          /* istanbul ignore next */
          cov_2cih03buf7().b[7][0]++;
          cov_2cih03buf7().s[38]++;
          return _server.NextResponse.json({
            success: false,
            error: 'testId, variantId, and metrics are required'
          }, {
            status: 400
          });
        } else
        /* istanbul ignore next */
        {
          cov_2cih03buf7().b[7][1]++;
        }
        cov_2cih03buf7().s[39]++;
        await _seooptimizationtools.enhancedSEOOptimizationTools.updateABTestMetrics(params.testId, params.variantId, params.metrics);
        /* istanbul ignore next */
        cov_2cih03buf7().s[40]++;
        result = {
          message: 'A/B test metrics updated successfully'
        };
        /* istanbul ignore next */
        cov_2cih03buf7().s[41]++;
        break;
      case 'analyze_ab_test':
        /* istanbul ignore next */
        cov_2cih03buf7().b[2][3]++;
        cov_2cih03buf7().s[42]++;
        if (!params.testId) {
          /* istanbul ignore next */
          cov_2cih03buf7().b[9][0]++;
          cov_2cih03buf7().s[43]++;
          return _server.NextResponse.json({
            success: false,
            error: 'testId is required'
          }, {
            status: 400
          });
        } else
        /* istanbul ignore next */
        {
          cov_2cih03buf7().b[9][1]++;
        }
        cov_2cih03buf7().s[44]++;
        result = await _seooptimizationtools.enhancedSEOOptimizationTools.analyzeABTestResults(params.testId);
        /* istanbul ignore next */
        cov_2cih03buf7().s[45]++;
        break;
      case 'analyze_core_web_vitals':
        /* istanbul ignore next */
        cov_2cih03buf7().b[2][4]++;
        cov_2cih03buf7().s[46]++;
        if (!params.url) {
          /* istanbul ignore next */
          cov_2cih03buf7().b[10][0]++;
          cov_2cih03buf7().s[47]++;
          return _server.NextResponse.json({
            success: false,
            error: 'url is required'
          }, {
            status: 400
          });
        } else
        /* istanbul ignore next */
        {
          cov_2cih03buf7().b[10][1]++;
        }
        cov_2cih03buf7().s[48]++;
        result = await _seooptimizationtools.enhancedSEOOptimizationTools.analyzeCoreWebVitals(params.url);
        /* istanbul ignore next */
        cov_2cih03buf7().s[49]++;
        break;
      case 'optimize_content':
        /* istanbul ignore next */
        cov_2cih03buf7().b[2][5]++;
        cov_2cih03buf7().s[50]++;
        if (
        /* istanbul ignore next */
        (cov_2cih03buf7().b[12][0]++, !params.url) ||
        /* istanbul ignore next */
        (cov_2cih03buf7().b[12][1]++, !params.contentType)) {
          /* istanbul ignore next */
          cov_2cih03buf7().b[11][0]++;
          cov_2cih03buf7().s[51]++;
          return _server.NextResponse.json({
            success: false,
            error: 'url and contentType are required'
          }, {
            status: 400
          });
        } else
        /* istanbul ignore next */
        {
          cov_2cih03buf7().b[11][1]++;
        }
        cov_2cih03buf7().s[52]++;
        result = await _seooptimizationtools.enhancedSEOOptimizationTools.optimizeContent(params.url, params.contentType);
        /* istanbul ignore next */
        cov_2cih03buf7().s[53]++;
        break;
      case 'technical_audit':
        /* istanbul ignore next */
        cov_2cih03buf7().b[2][6]++;
        cov_2cih03buf7().s[54]++;
        if (!params.url) {
          /* istanbul ignore next */
          cov_2cih03buf7().b[13][0]++;
          cov_2cih03buf7().s[55]++;
          return _server.NextResponse.json({
            success: false,
            error: 'url is required'
          }, {
            status: 400
          });
        } else
        /* istanbul ignore next */
        {
          cov_2cih03buf7().b[13][1]++;
        }
        cov_2cih03buf7().s[56]++;
        result = await _seooptimizationtools.enhancedSEOOptimizationTools.performTechnicalAudit(params.url);
        /* istanbul ignore next */
        cov_2cih03buf7().s[57]++;
        break;
      default:
        /* istanbul ignore next */
        cov_2cih03buf7().b[2][7]++;
        cov_2cih03buf7().s[58]++;
        return _server.NextResponse.json({
          success: false,
          error: 'Invalid action',
          availableActions: ['analyze_competitors', 'create_ab_test', 'update_ab_test', 'analyze_ab_test', 'analyze_core_web_vitals', 'optimize_content', 'technical_audit']
        }, {
          status: 400
        });
    }
    /* istanbul ignore next */
    cov_2cih03buf7().s[59]++;
    _logger.logger.info(_logger.LogLevel.INFO, 'SEO optimization analysis completed', {
      action,
      params: Object.keys(params)
    }, _logger.LogCategory.SEO);
    /* istanbul ignore next */
    cov_2cih03buf7().s[60]++;
    return _server.NextResponse.json({
      success: true,
      data: result,
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2cih03buf7().s[61]++;
    _logger.logger.error(_logger.LogLevel.ERROR, 'SEO optimization API POST error', error, _logger.LogCategory.SEO);
    /* istanbul ignore next */
    cov_2cih03buf7().s[62]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Failed to perform SEO analysis',
      details: error instanceof Error ?
      /* istanbul ignore next */
      (cov_2cih03buf7().b[14][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2cih03buf7().b[14][1]++, 'Unknown error')
    }, {
      status: 500
    });
  }
}
async function PUT(request) {
  /* istanbul ignore next */
  cov_2cih03buf7().f[9]++;
  cov_2cih03buf7().s[63]++;
  try {
    const body =
    /* istanbul ignore next */
    (cov_2cih03buf7().s[64]++, await request.json());
    const {
      config
    } =
    /* istanbul ignore next */
    (cov_2cih03buf7().s[65]++, body);
    /* istanbul ignore next */
    cov_2cih03buf7().s[66]++;
    if (
    /* istanbul ignore next */
    (cov_2cih03buf7().b[16][0]++, !config) ||
    /* istanbul ignore next */
    (cov_2cih03buf7().b[16][1]++, typeof config !== 'object')) {
      /* istanbul ignore next */
      cov_2cih03buf7().b[15][0]++;
      cov_2cih03buf7().s[67]++;
      return _server.NextResponse.json({
        success: false,
        error: 'config object is required'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_2cih03buf7().b[15][1]++;
    }
    cov_2cih03buf7().s[68]++;
    _seooptimizationtools.enhancedSEOOptimizationTools.configure(config);
    /* istanbul ignore next */
    cov_2cih03buf7().s[69]++;
    _logger.logger.info(_logger.LogLevel.INFO, 'SEO optimization tools reconfigured', {
      configKeys: Object.keys(config)
    }, _logger.LogCategory.SEO);
    /* istanbul ignore next */
    cov_2cih03buf7().s[70]++;
    return _server.NextResponse.json({
      success: true,
      data: {
        message: 'Configuration updated successfully',
        updatedKeys: Object.keys(config)
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2cih03buf7().s[71]++;
    _logger.logger.error(_logger.LogLevel.ERROR, 'SEO optimization API PUT error', error, _logger.LogCategory.SEO);
    /* istanbul ignore next */
    cov_2cih03buf7().s[72]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Failed to update configuration',
      details: error instanceof Error ?
      /* istanbul ignore next */
      (cov_2cih03buf7().b[17][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2cih03buf7().b[17][1]++, 'Unknown error')
    }, {
      status: 500
    });
  }
}
async function DELETE(request) {
  /* istanbul ignore next */
  cov_2cih03buf7().f[10]++;
  cov_2cih03buf7().s[73]++;
  try {
    /* istanbul ignore next */
    cov_2cih03buf7().s[74]++;
    await _seooptimizationtools.enhancedSEOOptimizationTools.clearCache();
    /* istanbul ignore next */
    cov_2cih03buf7().s[75]++;
    _logger.logger.info(_logger.LogLevel.INFO, 'SEO optimization tools cache cleared', {}, _logger.LogCategory.SEO);
    /* istanbul ignore next */
    cov_2cih03buf7().s[76]++;
    return _server.NextResponse.json({
      success: true,
      data: {
        message: 'Cache cleared successfully'
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2cih03buf7().s[77]++;
    _logger.logger.error(_logger.LogLevel.ERROR, 'SEO optimization API DELETE error', error, _logger.LogCategory.SEO);
    /* istanbul ignore next */
    cov_2cih03buf7().s[78]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Failed to clear cache',
      details: error instanceof Error ?
      /* istanbul ignore next */
      (cov_2cih03buf7().b[18][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2cih03buf7().b[18][1]++, 'Unknown error')
    }, {
      status: 500
    });
  }
}
async function OPTIONS(request) {
  /* istanbul ignore next */
  cov_2cih03buf7().f[11]++;
  cov_2cih03buf7().s[79]++;
  return new _server.NextResponse(null, {
    status: 200,
    headers: {
      'Access-Control-Allow-Origin': '*',
      'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',
      'Access-Control-Allow-Headers': 'Content-Type, Authorization'
    }
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,