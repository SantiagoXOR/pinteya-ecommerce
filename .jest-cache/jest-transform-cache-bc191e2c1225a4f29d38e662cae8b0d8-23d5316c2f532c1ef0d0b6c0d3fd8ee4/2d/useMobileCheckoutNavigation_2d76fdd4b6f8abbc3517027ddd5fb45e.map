{"version":3,"names":["cov_19scu3zkav","actualCoverage","s","default","f","_default","useMobileCheckoutNavigation","config","b","enableSwipeGestures","enableHapticFeedback","onSwipeBack","onSwipeForward","enableKeyboardNavigation","router","_navigation","useRouter","isMobile","setIsMobile","_react","useState","isInteracting","setIsInteracting","useEffect","checkMobile","userAgent","navigator","toLowerCase","isMobileDevice","test","isSmallScreen","window","innerWidth","addEventListener","removeEventListener","triggerHapticFeedback","useCallback","type","patterns","light","medium","heavy","vibrate","feedbackTypes","hapticFeedback","error","console","debug","goBack","back","goForward","containerRef","_useSwipeGestures","useSwipeGestures","enabled","threshold","preventDefaultTouchmove","onSwipeRight","setTimeout","onSwipeLeft","handleKeyDown","event","target","HTMLInputElement","HTMLTextAreaElement","key","preventDefault","altKey","document","handleTouchStart","handleTouchEnd","element","current","passive"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useMobileCheckoutNavigation.ts"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useCallback, useEffect } from 'react';\r\nimport { useSwipeGestures } from './useSwipeGestures';\r\nimport { useRouter } from 'next/navigation';\r\n\r\nexport interface MobileCheckoutNavigationConfig {\r\n  /** Habilitar gestos de swipe */\r\n  enableSwipeGestures?: boolean;\r\n  /** Habilitar vibración háptica */\r\n  enableHapticFeedback?: boolean;\r\n  /** Callback cuando se swipe hacia atrás */\r\n  onSwipeBack?: () => void;\r\n  /** Callback cuando se swipe hacia adelante */\r\n  onSwipeForward?: () => void;\r\n  /** Habilitar navegación por teclado */\r\n  enableKeyboardNavigation?: boolean;\r\n}\r\n\r\nexport interface MobileCheckoutNavigationReturn {\r\n  /** Ref para el contenedor principal */\r\n  containerRef: React.RefObject<HTMLDivElement>;\r\n  /** Estado de si está en mobile */\r\n  isMobile: boolean;\r\n  /** Función para ir hacia atrás */\r\n  goBack: () => void;\r\n  /** Función para ir hacia adelante */\r\n  goForward: () => void;\r\n  /** Función para vibración háptica */\r\n  triggerHapticFeedback: (type?: 'light' | 'medium' | 'heavy') => void;\r\n  /** Estado de si el usuario está interactuando */\r\n  isInteracting: boolean;\r\n}\r\n\r\n/**\r\n * Hook para mejorar la navegación móvil en el checkout\r\n * Incluye gestos táctiles, feedback háptico y navegación por teclado\r\n */\r\nexport const useMobileCheckoutNavigation = (\r\n  config: MobileCheckoutNavigationConfig = {}\r\n): MobileCheckoutNavigationReturn => {\r\n  const {\r\n    enableSwipeGestures = true,\r\n    enableHapticFeedback = true,\r\n    onSwipeBack,\r\n    onSwipeForward,\r\n    enableKeyboardNavigation = true\r\n  } = config;\r\n\r\n  const router = useRouter();\r\n  const [isMobile, setIsMobile] = useState(false);\r\n  const [isInteracting, setIsInteracting] = useState(false);\r\n\r\n  // Detectar si estamos en mobile\r\n  useEffect(() => {\r\n    const checkMobile = () => {\r\n      const userAgent = navigator.userAgent.toLowerCase();\r\n      const isMobileDevice = /android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/.test(userAgent);\r\n      const isSmallScreen = window.innerWidth < 768;\r\n      setIsMobile(isMobileDevice || isSmallScreen);\r\n    };\r\n\r\n    checkMobile();\r\n    window.addEventListener('resize', checkMobile);\r\n    return () => window.removeEventListener('resize', checkMobile);\r\n  }, []);\r\n\r\n  // Función para vibración háptica\r\n  const triggerHapticFeedback = useCallback((type: 'light' | 'medium' | 'heavy' = 'light') => {\r\n    if (!enableHapticFeedback || !isMobile) {return;}\r\n    \r\n    try {\r\n      // Vibración háptica moderna\r\n      if ('vibrate' in navigator) {\r\n        const patterns = {\r\n          light: [10],\r\n          medium: [20],\r\n          heavy: [30]\r\n        };\r\n        navigator.vibrate(patterns[type]);\r\n      }\r\n      \r\n      // Feedback háptico en iOS (si está disponible)\r\n      if ('hapticFeedback' in window) {\r\n        const feedbackTypes = {\r\n          light: 'impactLight',\r\n          medium: 'impactMedium', \r\n          heavy: 'impactHeavy'\r\n        };\r\n        // @ts-ignore - API experimental\r\n        window.hapticFeedback?.[feedbackTypes[type]]?.();\r\n      }\r\n    } catch (error) {\r\n      console.debug('Haptic feedback not available:', error);\r\n    }\r\n  }, [enableHapticFeedback, isMobile]);\r\n\r\n  // Funciones de navegación\r\n  const goBack = useCallback(() => {\r\n    triggerHapticFeedback('light');\r\n    onSwipeBack?.() || router.back();\r\n  }, [router, triggerHapticFeedback, onSwipeBack]);\r\n\r\n  const goForward = useCallback(() => {\r\n    triggerHapticFeedback('light');\r\n    onSwipeForward?.();\r\n  }, [triggerHapticFeedback, onSwipeForward]);\r\n\r\n  // Configurar gestos de swipe\r\n  const containerRef = useSwipeGestures({\r\n    enabled: enableSwipeGestures && isMobile,\r\n    threshold: 80, // Threshold más alto para evitar activaciones accidentales\r\n    preventDefaultTouchmove: true,\r\n    onSwipeRight: () => {\r\n      // Swipe derecha = ir hacia atrás\r\n      setIsInteracting(true);\r\n      goBack();\r\n      setTimeout(() => setIsInteracting(false), 300);\r\n    },\r\n    onSwipeLeft: () => {\r\n      // Swipe izquierda = ir hacia adelante (si está disponible)\r\n      setIsInteracting(true);\r\n      goForward();\r\n      setTimeout(() => setIsInteracting(false), 300);\r\n    }\r\n  });\r\n\r\n  // Navegación por teclado\r\n  useEffect(() => {\r\n    if (!enableKeyboardNavigation) {return;}\r\n\r\n    const handleKeyDown = (event: KeyboardEvent) => {\r\n      // Solo activar si no estamos en un input\r\n      if (event.target instanceof HTMLInputElement || \r\n          event.target instanceof HTMLTextAreaElement) {\r\n        return;\r\n      }\r\n\r\n      switch (event.key) {\r\n        case 'Escape':\r\n          event.preventDefault();\r\n          goBack();\r\n          break;\r\n        case 'ArrowLeft':\r\n          if (event.altKey) {\r\n            event.preventDefault();\r\n            goBack();\r\n          }\r\n          break;\r\n        case 'ArrowRight':\r\n          if (event.altKey) {\r\n            event.preventDefault();\r\n            goForward();\r\n          }\r\n          break;\r\n      }\r\n    };\r\n\r\n    document.addEventListener('keydown', handleKeyDown);\r\n    return () => document.removeEventListener('keydown', handleKeyDown);\r\n  }, [enableKeyboardNavigation, goBack, goForward]);\r\n\r\n  // Detectar interacciones táctiles\r\n  useEffect(() => {\r\n    if (!isMobile) {return;}\r\n\r\n    const handleTouchStart = () => setIsInteracting(true);\r\n    const handleTouchEnd = () => {\r\n      setTimeout(() => setIsInteracting(false), 100);\r\n    };\r\n\r\n    const element = containerRef.current;\r\n    if (element) {\r\n      element.addEventListener('touchstart', handleTouchStart, { passive: true });\r\n      element.addEventListener('touchend', handleTouchEnd, { passive: true });\r\n      \r\n      return () => {\r\n        element.removeEventListener('touchstart', handleTouchStart);\r\n        element.removeEventListener('touchend', handleTouchEnd);\r\n      };\r\n    }\r\n  }, [isMobile, containerRef]);\r\n\r\n  return {\r\n    containerRef,\r\n    isMobile,\r\n    goBack,\r\n    goForward,\r\n    triggerHapticFeedback,\r\n    isInteracting\r\n  };\r\n};\r\n\r\nexport default useMobileCheckoutNavigation;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","ignoreList":[]}