{"version":3,"names":["DELETE","cov_jtyfid73x","f","s","GET","PATCH","request","params","session","_auth","auth","user","id","b","_server","NextResponse","json","error","status","userId","deviceId","body","is_trusted","data","existingDevice","fetchError","_supabase","supabaseAdmin","from","select","eq","single","updatedDevice","update","console","requestInfo","_activityLogger","getRequestInfo","logSecurityActivity","device_id","device_name","device_type","ip_address","previous_trust_status","new_trust_status","success","device","message","deleteError","delete","was_trusted","recentActivity","order","ascending","limit","stats","calculateDeviceStats","trust_level","calculateTrustLevel","recent_activity","allSessions","length","total_sessions","first_seen","created_at","total_usage_hours","average_session_duration","totalSessions","firstSeen","reduce","earliest","Date","totalUsageMinutes","forEach","start","end","last_activity","durationMinutes","Math","max","getTime","min","totalUsageHours","round","averageSessionDuration","trustLevel","now","lastActivity","createdAt","ageInDays","floor","inactiveHours","location"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\user\\trusted-devices\\[id]\\route.ts"],"sourcesContent":["// ===================================\r\n// PINTEYA E-COMMERCE - API DE DISPOSITIVO DE CONFIANZA INDIVIDUAL\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { auth } from '@/auth';\r\nimport { supabaseAdmin } from '@/lib/integrations/supabase';\r\nimport { logSecurityActivity, getRequestInfo } from '@/lib/activity/activityLogger';\r\n\r\n// PATCH - Actualizar estado de confianza de un dispositivo\r\nexport async function PATCH(\r\n  request: NextRequest,\r\n  { params }: { params: { id: string } }\r\n) {\r\n  try {\r\n    const session = await auth();\r\n    if (!session?.user?.id) {\r\n      return NextResponse.json(\r\n        { error: 'No autorizado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    const userId = session.user.id;\r\n    const deviceId = params.id;\r\n    const body = await request.json();\r\n    const { is_trusted } = body;\r\n\r\n    if (typeof is_trusted !== 'boolean') {\r\n      return NextResponse.json(\r\n        { error: 'Estado de confianza requerido' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Verificar que el dispositivo pertenece al usuario\r\n    const { data: existingDevice, error: fetchError } = await supabaseAdmin\r\n      .from('user_sessions')\r\n      .select('*')\r\n      .eq('id', deviceId)\r\n      .eq('user_id', userId)\r\n      .single();\r\n\r\n    if (fetchError || !existingDevice) {\r\n      return NextResponse.json(\r\n        { error: 'Dispositivo no encontrado' },\r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    // Actualizar estado de confianza\r\n    const { data: updatedDevice, error } = await supabaseAdmin\r\n      .from('user_sessions')\r\n      .update({ is_trusted })\r\n      .eq('id', deviceId)\r\n      .eq('user_id', userId)\r\n      .select()\r\n      .single();\r\n\r\n    if (error) {\r\n      console.error('Error al actualizar dispositivo:', error);\r\n      return NextResponse.json(\r\n        { error: 'Error al actualizar dispositivo' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Registrar actividad de seguridad\r\n    const requestInfo = getRequestInfo(request);\r\n    await logSecurityActivity(\r\n      userId,\r\n      is_trusted ? 'trust_device' : 'untrust_device',\r\n      {\r\n        device_id: deviceId,\r\n        device_name: updatedDevice.device_name,\r\n        device_type: updatedDevice.device_type,\r\n        ip_address: updatedDevice.ip_address,\r\n        previous_trust_status: existingDevice.is_trusted,\r\n        new_trust_status: is_trusted,\r\n      },\r\n      requestInfo\r\n    );\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      device: updatedDevice,\r\n      message: is_trusted \r\n        ? 'Dispositivo marcado como confiable' \r\n        : 'Confianza removida del dispositivo',\r\n    });\r\n  } catch (error) {\r\n    console.error('Error en PATCH /api/user/trusted-devices/[id]:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// DELETE - Eliminar dispositivo de confianza y cerrar sesiones\r\nexport async function DELETE(\r\n  request: NextRequest,\r\n  { params }: { params: { id: string } }\r\n) {\r\n  try {\r\n    const session = await auth();\r\n    if (!session?.user?.id) {\r\n      return NextResponse.json(\r\n        { error: 'No autorizado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    const userId = session.user.id;\r\n    const deviceId = params.id;\r\n\r\n    // Verificar que el dispositivo pertenece al usuario\r\n    const { data: existingDevice, error: fetchError } = await supabaseAdmin\r\n      .from('user_sessions')\r\n      .select('*')\r\n      .eq('id', deviceId)\r\n      .eq('user_id', userId)\r\n      .single();\r\n\r\n    if (fetchError || !existingDevice) {\r\n      return NextResponse.json(\r\n        { error: 'Dispositivo no encontrado' },\r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    // Eliminar todas las sesiones de este dispositivo\r\n    const { error: deleteError } = await supabaseAdmin\r\n      .from('user_sessions')\r\n      .delete()\r\n      .eq('id', deviceId)\r\n      .eq('user_id', userId);\r\n\r\n    if (deleteError) {\r\n      console.error('Error al eliminar dispositivo:', deleteError);\r\n      return NextResponse.json(\r\n        { error: 'Error al eliminar dispositivo' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Registrar actividad de seguridad\r\n    const requestInfo = getRequestInfo(request);\r\n    await logSecurityActivity(\r\n      userId,\r\n      'remove_trusted_device',\r\n      {\r\n        device_id: deviceId,\r\n        device_name: existingDevice.device_name,\r\n        device_type: existingDevice.device_type,\r\n        ip_address: existingDevice.ip_address,\r\n        was_trusted: existingDevice.is_trusted,\r\n      },\r\n      requestInfo\r\n    );\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      message: 'Dispositivo eliminado correctamente',\r\n    });\r\n  } catch (error) {\r\n    console.error('Error en DELETE /api/user/trusted-devices/[id]:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// GET - Obtener información detallada de un dispositivo\r\nexport async function GET(\r\n  request: NextRequest,\r\n  { params }: { params: { id: string } }\r\n) {\r\n  try {\r\n    const session = await auth();\r\n    if (!session?.user?.id) {\r\n      return NextResponse.json(\r\n        { error: 'No autorizado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    const userId = session.user.id;\r\n    const deviceId = params.id;\r\n\r\n    // Obtener información del dispositivo\r\n    const { data: device, error } = await supabaseAdmin\r\n      .from('user_sessions')\r\n      .select(`\r\n        id,\r\n        device_type,\r\n        device_name,\r\n        browser,\r\n        os,\r\n        ip_address,\r\n        location,\r\n        user_agent,\r\n        is_trusted,\r\n        last_activity,\r\n        created_at\r\n      `)\r\n      .eq('id', deviceId)\r\n      .eq('user_id', userId)\r\n      .single();\r\n\r\n    if (error || !device) {\r\n      return NextResponse.json(\r\n        { error: 'Dispositivo no encontrado' },\r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    // Obtener historial de actividad reciente para este dispositivo\r\n    const { data: recentActivity } = await supabaseAdmin\r\n      .from('user_activity')\r\n      .select('action, description, created_at')\r\n      .eq('user_id', userId)\r\n      .eq('metadata->>session_id', deviceId)\r\n      .order('created_at', { ascending: false })\r\n      .limit(10);\r\n\r\n    // Calcular estadísticas del dispositivo\r\n    const stats = await calculateDeviceStats(userId, device);\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      device: {\r\n        ...device,\r\n        trust_level: calculateTrustLevel(device),\r\n        stats,\r\n        recent_activity: recentActivity || [],\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.error('Error en GET /api/user/trusted-devices/[id]:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// Función para calcular estadísticas del dispositivo\r\nasync function calculateDeviceStats(userId: string, device: any) {\r\n  try {\r\n    // Obtener todas las sesiones de este dispositivo\r\n    const { data: allSessions } = await supabaseAdmin\r\n      .from('user_sessions')\r\n      .select('created_at, last_activity')\r\n      .eq('user_id', userId)\r\n      .eq('device_name', device.device_name)\r\n      .eq('ip_address', device.ip_address);\r\n\r\n    if (!allSessions || allSessions.length === 0) {\r\n      return {\r\n        total_sessions: 0,\r\n        first_seen: device.created_at,\r\n        total_usage_hours: 0,\r\n        average_session_duration: 0,\r\n      };\r\n    }\r\n\r\n    // Calcular estadísticas\r\n    const totalSessions = allSessions.length;\r\n    const firstSeen = allSessions.reduce((earliest, session) => {\r\n      return new Date(session.created_at) < new Date(earliest) ? session.created_at : earliest;\r\n    }, allSessions[0].created_at);\r\n\r\n    // Calcular duración total de uso (aproximada)\r\n    let totalUsageMinutes = 0;\r\n    allSessions.forEach(session => {\r\n      const start = new Date(session.created_at);\r\n      const end = new Date(session.last_activity);\r\n      const durationMinutes = Math.max(0, (end.getTime() - start.getTime()) / (1000 * 60));\r\n      totalUsageMinutes += Math.min(durationMinutes, 480); // Máximo 8 horas por sesión\r\n    });\r\n\r\n    const totalUsageHours = Math.round(totalUsageMinutes / 60);\r\n    const averageSessionDuration = Math.round(totalUsageMinutes / totalSessions);\r\n\r\n    return {\r\n      total_sessions: totalSessions,\r\n      first_seen: firstSeen,\r\n      total_usage_hours: totalUsageHours,\r\n      average_session_duration: averageSessionDuration,\r\n    };\r\n  } catch (error) {\r\n    console.error('Error al calcular estadísticas del dispositivo:', error);\r\n    return {\r\n      total_sessions: 0,\r\n      first_seen: device.created_at,\r\n      total_usage_hours: 0,\r\n      average_session_duration: 0,\r\n    };\r\n  }\r\n}\r\n\r\n// Función para calcular nivel de confianza (reutilizada)\r\nfunction calculateTrustLevel(device: any): number {\r\n  let trustLevel = 50; // Base\r\n\r\n  const now = new Date();\r\n  const lastActivity = new Date(device.last_activity);\r\n  const createdAt = new Date(device.created_at);\r\n  \r\n  // Antigüedad del dispositivo (máximo +30 puntos)\r\n  const ageInDays = Math.floor((now.getTime() - createdAt.getTime()) / (1000 * 60 * 60 * 24));\r\n  if (ageInDays > 30) trustLevel += 30;\r\n  else if (ageInDays > 7) trustLevel += 20;\r\n  else if (ageInDays > 1) trustLevel += 10;\r\n\r\n  // Actividad reciente (máximo +20 puntos)\r\n  const inactiveHours = Math.floor((now.getTime() - lastActivity.getTime()) / (1000 * 60 * 60));\r\n  if (inactiveHours < 1) trustLevel += 20;\r\n  else if (inactiveHours < 24) trustLevel += 15;\r\n  else if (inactiveHours < 168) trustLevel += 10;\r\n  else if (inactiveHours < 720) trustLevel += 5;\r\n\r\n  // Tipo de dispositivo\r\n  if (device.device_type === 'desktop') trustLevel += 5;\r\n  else if (device.device_type === 'mobile') trustLevel += 3;\r\n\r\n  // Ubicación conocida\r\n  if (device.location) trustLevel += 5;\r\n\r\n  return Math.min(100, Math.max(0, trustLevel));\r\n}\r\n"],"mappingskGsBA,OAAA;IAAA;IAAAC,aAAA,GAAAC,CAAA;IAAAD,aAAA,GAAAE,CAAA;WAAAH,MAAA;;MA2EAI,IAAA;IAAA;IAAAH,aAAA,GAAAC,CAAA;IAAAD,aAAA,GAAAE,CAAA;WAAAC,GAAA;;MArKAC,MAAA;IAAA;IAAAJ,aAAA,GAAAC,CAAA;IAAAD,aAAA,GAAAE,CAAA;WAAAE,KAAA;;;;;iCANoB;;;iCACrB;;;iCACS;;;kCACsB;AAG7C,eAAeA,MACpBC,OAAoB,EACpB;EAAEC;AAAM,CAA8B;EAAA;EAAAN,aAAA,GAAAC,CAAA;EAAAD,aAAA,GAAAE,CAAA;EAEtC,IAAI;IACF,MAAMK,OAAA;IAAA;IAAA,CAAAP,aAAA,GAAAE,CAAA,QAAU,MAAM,IAAAM,KAAA,CAAAC,IAAI;IAAA;IAAAT,aAAA,GAAAE,CAAA;IAC1B,IAAI,CAACK,OAAA,EAASG,IAAA,EAAMC,EAAA,EAAI;MAAA;MAAAX,aAAA,GAAAY,CAAA;MAAAZ,aAAA,GAAAE,CAAA;MACtB,OAAOW,OAAA,CAAAC,YAAY,CAACC,IAAI,CACtB;QAAEC,KAAA,EAAO;MAAgB,GACzB;QAAEC,MAAA,EAAQ;MAAI;IAElB;IAAA;IAAA;MAAAjB,aAAA,GAAAY,CAAA;IAAA;IAEA,MAAMM,MAAA;IAAA;IAAA,CAAAlB,aAAA,GAAAE,CAAA,QAASK,OAAA,CAAQG,IAAI,CAACC,EAAE;IAC9B,MAAMQ,QAAA;IAAA;IAAA,CAAAnB,aAAA,GAAAE,CAAA,QAAWI,MAAA,CAAOK,EAAE;IAC1B,MAAMS,IAAA;IAAA;IAAA,CAAApB,aAAA,GAAAE,CAAA,QAAO,MAAMG,OAAA,CAAQU,IAAI;IAC/B,MAAM;MAAEM;IAAU,CAAE;IAAA;IAAA,CAAArB,aAAA,GAAAE,CAAA,QAAGkB,IAAA;IAAA;IAAApB,aAAA,GAAAE,CAAA;IAEvB,IAAI,OAAOmB,UAAA,KAAe,WAAW;MAAA;MAAArB,aAAA,GAAAY,CAAA;MAAAZ,aAAA,GAAAE,CAAA;MACnC,OAAOW,OAAA,CAAAC,YAAY,CAACC,IAAI,CACtB;QAAEC,KAAA,EAAO;MAAgC,GACzC;QAAEC,MAAA,EAAQ;MAAI;IAElB;IAAA;IAAA;MAAAjB,aAAA,GAAAY,CAAA;IAAA;IAEA;IACA,MAAM;MAAEU,IAAA,EAAMC,cAAc;MAAEP,KAAA,EAAOQ;IAAU,CAAE;IAAA;IAAA,CAAAxB,aAAA,GAAAE,CAAA,QAAG,MAAMuB,SAAA,CAAAC,aAAa,CACpEC,IAAI,CAAC,iBACLC,MAAM,CAAC,KACPC,EAAE,CAAC,MAAMV,QAAA,EACTU,EAAE,CAAC,WAAWX,MAAA,EACdY,MAAM;IAAA;IAAA9B,aAAA,GAAAE,CAAA;IAET;IAAI;IAAA,CAAAF,aAAA,GAAAY,CAAA,UAAAY,UAAA;IAAA;IAAA,CAAAxB,aAAA,GAAAY,CAAA,UAAc,CAACW,cAAA,GAAgB;MAAA;MAAAvB,aAAA,GAAAY,CAAA;MAAAZ,aAAA,GAAAE,CAAA;MACjC,OAAOW,OAAA,CAAAC,YAAY,CAACC,IAAI,CACtB;QAAEC,KAAA,EAAO;MAA4B,GACrC;QAAEC,MAAA,EAAQ;MAAI;IAElB;IAAA;IAAA;MAAAjB,aAAA,GAAAY,CAAA;IAAA;IAEA;IACA,MAAM;MAAEU,IAAA,EAAMS,aAAa;MAAEf;IAAK,CAAE;IAAA;IAAA,CAAAhB,aAAA,GAAAE,CAAA,QAAG,MAAMuB,SAAA,CAAAC,aAAa,CACvDC,IAAI,CAAC,iBACLK,MAAM,CAAC;MAAEX;IAAW,GACpBQ,EAAE,CAAC,MAAMV,QAAA,EACTU,EAAE,CAAC,WAAWX,MAAA,EACdU,MAAM,GACNE,MAAM;IAAA;IAAA9B,aAAA,GAAAE,CAAA;IAET,IAAIc,KAAA,EAAO;MAAA;MAAAhB,aAAA,GAAAY,CAAA;MAAAZ,aAAA,GAAAE,CAAA;MACT+B,OAAA,CAAQjB,KAAK,CAAC,oCAAoCA,KAAA;MAAA;MAAAhB,aAAA,GAAAE,CAAA;MAClD,OAAOW,OAAA,CAAAC,YAAY,CAACC,IAAI,CACtB;QAAEC,KAAA,EAAO;MAAkC,GAC3C;QAAEC,MAAA,EAAQ;MAAI;IAElB;IAAA;IAAA;MAAAjB,aAAA,GAAAY,CAAA;IAAA;IAEA;IACA,MAAMsB,WAAA;IAAA;IAAA,CAAAlC,aAAA,GAAAE,CAAA,QAAc,IAAAiC,eAAA,CAAAC,cAAc,EAAC/B,OAAA;IAAA;IAAAL,aAAA,GAAAE,CAAA;IACnC,MAAM,IAAAiC,eAAA,CAAAE,mBAAmB,EACvBnB,MAAA,EACAG,UAAA;IAAA;IAAA,CAAArB,aAAA,GAAAY,CAAA,UAAa;IAAA;IAAA,CAAAZ,aAAA,GAAAY,CAAA,UAAiB,mBAC9B;MACE0B,SAAA,EAAWnB,QAAA;MACXoB,WAAA,EAAaR,aAAA,CAAcQ,WAAW;MACtCC,WAAA,EAAaT,aAAA,CAAcS,WAAW;MACtCC,UAAA,EAAYV,aAAA,CAAcU,UAAU;MACpCC,qBAAA,EAAuBnB,cAAA,CAAeF,UAAU;MAChDsB,gBAAA,EAAkBtB;IACpB,GACAa,WAAA;IAAA;IAAAlC,aAAA,GAAAE,CAAA;IAGF,OAAOW,OAAA,CAAAC,YAAY,CAACC,IAAI,CAAC;MACvB6B,OAAA,EAAS;MACTC,MAAA,EAAQd,aAAA;MACRe,OAAA,EAASzB,UAAA;MAAA;MAAA,CAAArB,aAAA,GAAAY,CAAA,UACL;MAAA;MAAA,CAAAZ,aAAA,GAAAY,CAAA,UACA;IACN;EACF,EAAE,OAAOI,KAAA,EAAO;IAAA;IAAAhB,aAAA,GAAAE,CAAA;IACd+B,OAAA,CAAQjB,KAAK,CAAC,kDAAkDA,KAAA;IAAA;IAAAhB,aAAA,GAAAE,CAAA;IAChE,OAAOW,OAAA,CAAAC,YAAY,CAACC,IAAI,CACtB;MAAEC,KAAA,EAAO;IAA6B,GACtC;MAAEC,MAAA,EAAQ;IAAI;EAElB;AACF;AAGO,eAAelB,OACpBM,OAAoB,EACpB;EAAEC;AAAM,CAA8B;EAAA;EAAAN,aAAA,GAAAC,CAAA;EAAAD,aAAA,GAAAE,CAAA;EAEtC,IAAI;IACF,MAAMK,OAAA;IAAA;IAAA,CAAAP,aAAA,GAAAE,CAAA,QAAU,MAAM,IAAAM,KAAA,CAAAC,IAAI;IAAA;IAAAT,aAAA,GAAAE,CAAA;IAC1B,IAAI,CAACK,OAAA,EAASG,IAAA,EAAMC,EAAA,EAAI;MAAA;MAAAX,aAAA,GAAAY,CAAA;MAAAZ,aAAA,GAAAE,CAAA;MACtB,OAAOW,OAAA,CAAAC,YAAY,CAACC,IAAI,CACtB;QAAEC,KAAA,EAAO;MAAgB,GACzB;QAAEC,MAAA,EAAQ;MAAI;IAElB;IAAA;IAAA;MAAAjB,aAAA,GAAAY,CAAA;IAAA;IAEA,MAAMM,MAAA;IAAA;IAAA,CAAAlB,aAAA,GAAAE,CAAA,QAASK,OAAA,CAAQG,IAAI,CAACC,EAAE;IAC9B,MAAMQ,QAAA;IAAA;IAAA,CAAAnB,aAAA,GAAAE,CAAA,QAAWI,MAAA,CAAOK,EAAE;IAE1B;IACA,MAAM;MAAEW,IAAA,EAAMC,cAAc;MAAEP,KAAA,EAAOQ;IAAU,CAAE;IAAA;IAAA,CAAAxB,aAAA,GAAAE,CAAA,QAAG,MAAMuB,SAAA,CAAAC,aAAa,CACpEC,IAAI,CAAC,iBACLC,MAAM,CAAC,KACPC,EAAE,CAAC,MAAMV,QAAA,EACTU,EAAE,CAAC,WAAWX,MAAA,EACdY,MAAM;IAAA;IAAA9B,aAAA,GAAAE,CAAA;IAET;IAAI;IAAA,CAAAF,aAAA,GAAAY,CAAA,UAAAY,UAAA;IAAA;IAAA,CAAAxB,aAAA,GAAAY,CAAA,UAAc,CAACW,cAAA,GAAgB;MAAA;MAAAvB,aAAA,GAAAY,CAAA;MAAAZ,aAAA,GAAAE,CAAA;MACjC,OAAOW,OAAA,CAAAC,YAAY,CAACC,IAAI,CACtB;QAAEC,KAAA,EAAO;MAA4B,GACrC;QAAEC,MAAA,EAAQ;MAAI;IAElB;IAAA;IAAA;MAAAjB,aAAA,GAAAY,CAAA;IAAA;IAEA;IACA,MAAM;MAAEI,KAAA,EAAO+B;IAAW,CAAE;IAAA;IAAA,CAAA/C,aAAA,GAAAE,CAAA,QAAG,MAAMuB,SAAA,CAAAC,aAAa,CAC/CC,IAAI,CAAC,iBACLqB,MAAM,GACNnB,EAAE,CAAC,MAAMV,QAAA,EACTU,EAAE,CAAC,WAAWX,MAAA;IAAA;IAAAlB,aAAA,GAAAE,CAAA;IAEjB,IAAI6C,WAAA,EAAa;MAAA;MAAA/C,aAAA,GAAAY,CAAA;MAAAZ,aAAA,GAAAE,CAAA;MACf+B,OAAA,CAAQjB,KAAK,CAAC,kCAAkC+B,WAAA;MAAA;MAAA/C,aAAA,GAAAE,CAAA;MAChD,OAAOW,OAAA,CAAAC,YAAY,CAACC,IAAI,CACtB;QAAEC,KAAA,EAAO;MAAgC,GACzC;QAAEC,MAAA,EAAQ;MAAI;IAElB;IAAA;IAAA;MAAAjB,aAAA,GAAAY,CAAA;IAAA;IAEA;IACA,MAAMsB,WAAA;IAAA;IAAA,CAAAlC,aAAA,GAAAE,CAAA,QAAc,IAAAiC,eAAA,CAAAC,cAAc,EAAC/B,OAAA;IAAA;IAAAL,aAAA,GAAAE,CAAA;IACnC,MAAM,IAAAiC,eAAA,CAAAE,mBAAmB,EACvBnB,MAAA,EACA,yBACA;MACEoB,SAAA,EAAWnB,QAAA;MACXoB,WAAA,EAAahB,cAAA,CAAegB,WAAW;MACvCC,WAAA,EAAajB,cAAA,CAAeiB,WAAW;MACvCC,UAAA,EAAYlB,cAAA,CAAekB,UAAU;MACrCQ,WAAA,EAAa1B,cAAA,CAAeF;IAC9B,GACAa,WAAA;IAAA;IAAAlC,aAAA,GAAAE,CAAA;IAGF,OAAOW,OAAA,CAAAC,YAAY,CAACC,IAAI,CAAC;MACvB6B,OAAA,EAAS;MACTE,OAAA,EAAS;IACX;EACF,EAAE,OAAO9B,KAAA,EAAO;IAAA;IAAAhB,aAAA,GAAAE,CAAA;IACd+B,OAAA,CAAQjB,KAAK,CAAC,mDAAmDA,KAAA;IAAA;IAAAhB,aAAA,GAAAE,CAAA;IACjE,OAAOW,OAAA,CAAAC,YAAY,CAACC,IAAI,CACtB;MAAEC,KAAA,EAAO;IAA6B,GACtC;MAAEC,MAAA,EAAQ;IAAI;EAElB;AACF;AAGO,eAAed,IACpBE,OAAoB,EACpB;EAAEC;AAAM,CAA8B;EAAA;EAAAN,aAAA,GAAAC,CAAA;EAAAD,aAAA,GAAAE,CAAA;EAEtC,IAAI;IACF,MAAMK,OAAA;IAAA;IAAA,CAAAP,aAAA,GAAAE,CAAA,QAAU,MAAM,IAAAM,KAAA,CAAAC,IAAI;IAAA;IAAAT,aAAA,GAAAE,CAAA;IAC1B,IAAI,CAACK,OAAA,EAASG,IAAA,EAAMC,EAAA,EAAI;MAAA;MAAAX,aAAA,GAAAY,CAAA;MAAAZ,aAAA,GAAAE,CAAA;MACtB,OAAOW,OAAA,CAAAC,YAAY,CAACC,IAAI,CACtB;QAAEC,KAAA,EAAO;MAAgB,GACzB;QAAEC,MAAA,EAAQ;MAAI;IAElB;IAAA;IAAA;MAAAjB,aAAA,GAAAY,CAAA;IAAA;IAEA,MAAMM,MAAA;IAAA;IAAA,CAAAlB,aAAA,GAAAE,CAAA,QAASK,OAAA,CAAQG,IAAI,CAACC,EAAE;IAC9B,MAAMQ,QAAA;IAAA;IAAA,CAAAnB,aAAA,GAAAE,CAAA,QAAWI,MAAA,CAAOK,EAAE;IAE1B;IACA,MAAM;MAAEW,IAAA,EAAMuB,MAAM;MAAE7B;IAAK,CAAE;IAAA;IAAA,CAAAhB,aAAA,GAAAE,CAAA,QAAG,MAAMuB,SAAA,CAAAC,aAAa,CAChDC,IAAI,CAAC,iBACLC,MAAM,CAAC;;;;;;;;;;;;OAYP,EACAC,EAAE,CAAC,MAAMV,QAAA,EACTU,EAAE,CAAC,WAAWX,MAAA,EACdY,MAAM;IAAA;IAAA9B,aAAA,GAAAE,CAAA;IAET;IAAI;IAAA,CAAAF,aAAA,GAAAY,CAAA,WAAAI,KAAA;IAAA;IAAA,CAAAhB,aAAA,GAAAY,CAAA,WAAS,CAACiC,MAAA,GAAQ;MAAA;MAAA7C,aAAA,GAAAY,CAAA;MAAAZ,aAAA,GAAAE,CAAA;MACpB,OAAOW,OAAA,CAAAC,YAAY,CAACC,IAAI,CACtB;QAAEC,KAAA,EAAO;MAA4B,GACrC;QAAEC,MAAA,EAAQ;MAAI;IAElB;IAAA;IAAA;MAAAjB,aAAA,GAAAY,CAAA;IAAA;IAEA;IACA,MAAM;MAAEU,IAAA,EAAM4B;IAAc,CAAE;IAAA;IAAA,CAAAlD,aAAA,GAAAE,CAAA,QAAG,MAAMuB,SAAA,CAAAC,aAAa,CACjDC,IAAI,CAAC,iBACLC,MAAM,CAAC,mCACPC,EAAE,CAAC,WAAWX,MAAA,EACdW,EAAE,CAAC,yBAAyBV,QAAA,EAC5BgC,KAAK,CAAC,cAAc;MAAEC,SAAA,EAAW;IAAM,GACvCC,KAAK,CAAC;IAET;IACA,MAAMC,KAAA;IAAA;IAAA,CAAAtD,aAAA,GAAAE,CAAA,QAAQ,MAAMqD,oBAAA,CAAqBrC,MAAA,EAAQ2B,MAAA;IAAA;IAAA7C,aAAA,GAAAE,CAAA;IAEjD,OAAOW,OAAA,CAAAC,YAAY,CAACC,IAAI,CAAC;MACvB6B,OAAA,EAAS;MACTC,MAAA,EAAQ;QACN,GAAGA,MAAM;QACTW,WAAA,EAAaC,mBAAA,CAAoBZ,MAAA;QACjCS,KAAA;QACAI,eAAA;QAAiB;QAAA,CAAA1D,aAAA,GAAAY,CAAA,WAAAsC,cAAA;QAAA;QAAA,CAAAlD,aAAA,GAAAY,CAAA,WAAkB,EAAE;MACvC;IACF;EACF,EAAE,OAAOI,KAAA,EAAO;IAAA;IAAAhB,aAAA,GAAAE,CAAA;IACd+B,OAAA,CAAQjB,KAAK,CAAC,gDAAgDA,KAAA;IAAA;IAAAhB,aAAA,GAAAE,CAAA;IAC9D,OAAOW,OAAA,CAAAC,YAAY,CAACC,IAAI,CACtB;MAAEC,KAAA,EAAO;IAA6B,GACtC;MAAEC,MAAA,EAAQ;IAAI;EAElB;AACF;AAEA;AACA,eAAesC,qBAAqBrC,MAAc,EAAE2B,MAAW;EAAA;EAAA7C,aAAA,GAAAC,CAAA;EAAAD,aAAA,GAAAE,CAAA;EAC7D,IAAI;IACF;IACA,MAAM;MAAEoB,IAAA,EAAMqC;IAAW,CAAE;IAAA;IAAA,CAAA3D,aAAA,GAAAE,CAAA,QAAG,MAAMuB,SAAA,CAAAC,aAAa,CAC9CC,IAAI,CAAC,iBACLC,MAAM,CAAC,6BACPC,EAAE,CAAC,WAAWX,MAAA,EACdW,EAAE,CAAC,eAAegB,MAAA,CAAON,WAAW,EACpCV,EAAE,CAAC,cAAcgB,MAAA,CAAOJ,UAAU;IAAA;IAAAzC,aAAA,GAAAE,CAAA;IAErC;IAAI;IAAA,CAAAF,aAAA,GAAAY,CAAA,YAAC+C,WAAA;IAAA;IAAA,CAAA3D,aAAA,GAAAY,CAAA,WAAe+C,WAAA,CAAYC,MAAM,KAAK,IAAG;MAAA;MAAA5D,aAAA,GAAAY,CAAA;MAAAZ,aAAA,GAAAE,CAAA;MAC5C,OAAO;QACL2D,cAAA,EAAgB;QAChBC,UAAA,EAAYjB,MAAA,CAAOkB,UAAU;QAC7BC,iBAAA,EAAmB;QACnBC,wBAAA,EAA0B;MAC5B;IACF;IAAA;IAAA;MAAAjE,aAAA,GAAAY,CAAA;IAAA;IAEA;IACA,MAAMsD,aAAA;IAAA;IAAA,CAAAlE,aAAA,GAAAE,CAAA,QAAgByD,WAAA,CAAYC,MAAM;IACxC,MAAMO,SAAA;IAAA;IAAA,CAAAnE,aAAA,GAAAE,CAAA,QAAYyD,WAAA,CAAYS,MAAM,CAAC,CAACC,QAAA,EAAU9D,OAAA;MAAA;MAAAP,aAAA,GAAAC,CAAA;MAAAD,aAAA,GAAAE,CAAA;MAC9C,OAAO,IAAIoE,IAAA,CAAK/D,OAAA,CAAQwD,UAAU,IAAI,IAAIO,IAAA,CAAKD,QAAA;MAAA;MAAA,CAAArE,aAAA,GAAAY,CAAA,WAAYL,OAAA,CAAQwD,UAAU;MAAA;MAAA,CAAA/D,aAAA,GAAAY,CAAA,WAAGyD,QAAA;IAClF,GAAGV,WAAW,CAAC,EAAE,CAACI,UAAU;IAE5B;IACA,IAAIQ,iBAAA;IAAA;IAAA,CAAAvE,aAAA,GAAAE,CAAA,QAAoB;IAAA;IAAAF,aAAA,GAAAE,CAAA;IACxByD,WAAA,CAAYa,OAAO,CAACjE,OAAA;MAAA;MAAAP,aAAA,GAAAC,CAAA;MAClB,MAAMwE,KAAA;MAAA;MAAA,CAAAzE,aAAA,GAAAE,CAAA,QAAQ,IAAIoE,IAAA,CAAK/D,OAAA,CAAQwD,UAAU;MACzC,MAAMW,GAAA;MAAA;MAAA,CAAA1E,aAAA,GAAAE,CAAA,QAAM,IAAIoE,IAAA,CAAK/D,OAAA,CAAQoE,aAAa;MAC1C,MAAMC,eAAA;MAAA;MAAA,CAAA5E,aAAA,GAAAE,CAAA,QAAkB2E,IAAA,CAAKC,GAAG,CAAC,GAAG,CAACJ,GAAA,CAAIK,OAAO,KAAKN,KAAA,CAAMM,OAAO,EAAC,KAAM,OAAO,EAAC;MAAA;MAAA/E,aAAA,GAAAE,CAAA;MACjFqE,iBAAA,IAAqBM,IAAA,CAAKG,GAAG,CAACJ,eAAA,EAAiB,MAAM;IACvD;IAEA,MAAMK,eAAA;IAAA;IAAA,CAAAjF,aAAA,GAAAE,CAAA,QAAkB2E,IAAA,CAAKK,KAAK,CAACX,iBAAA,GAAoB;IACvD,MAAMY,sBAAA;IAAA;IAAA,CAAAnF,aAAA,GAAAE,CAAA,QAAyB2E,IAAA,CAAKK,KAAK,CAACX,iBAAA,GAAoBL,aAAA;IAAA;IAAAlE,aAAA,GAAAE,CAAA;IAE9D,OAAO;MACL2D,cAAA,EAAgBK,aAAA;MAChBJ,UAAA,EAAYK,SAAA;MACZH,iBAAA,EAAmBiB,eAAA;MACnBhB,wBAAA,EAA0BkB;IAC5B;EACF,EAAE,OAAOnE,KAAA,EAAO;IAAA;IAAAhB,aAAA,GAAAE,CAAA;IACd+B,OAAA,CAAQjB,KAAK,CAAC,mDAAmDA,KAAA;IAAA;IAAAhB,aAAA,GAAAE,CAAA;IACjE,OAAO;MACL2D,cAAA,EAAgB;MAChBC,UAAA,EAAYjB,MAAA,CAAOkB,UAAU;MAC7BC,iBAAA,EAAmB;MACnBC,wBAAA,EAA0B;IAC5B;EACF;AACF;AAEA;AACA,SAASR,oBAAoBZ,MAAW;EAAA;EAAA7C,aAAA,GAAAC,CAAA;EACtC,IAAImF,UAAA;EAAA;EAAA,CAAApF,aAAA,GAAAE,CAAA,QAAa,KAAI;EAErB,MAAMmF,GAAA;EAAA;EAAA,CAAArF,aAAA,GAAAE,CAAA,QAAM,IAAIoE,IAAA;EAChB,MAAMgB,YAAA;EAAA;EAAA,CAAAtF,aAAA,GAAAE,CAAA,QAAe,IAAIoE,IAAA,CAAKzB,MAAA,CAAO8B,aAAa;EAClD,MAAMY,SAAA;EAAA;EAAA,CAAAvF,aAAA,GAAAE,CAAA,QAAY,IAAIoE,IAAA,CAAKzB,MAAA,CAAOkB,UAAU;EAE5C;EACA,MAAMyB,SAAA;EAAA;EAAA,CAAAxF,aAAA,GAAAE,CAAA,QAAY2E,IAAA,CAAKY,KAAK,CAAC,CAACJ,GAAA,CAAIN,OAAO,KAAKQ,SAAA,CAAUR,OAAO,EAAC,KAAM,OAAO,KAAK,KAAK,EAAC;EAAA;EAAA/E,aAAA,GAAAE,CAAA;EACxF,IAAIsF,SAAA,GAAY,IAAI;IAAA;IAAAxF,aAAA,GAAAY,CAAA;IAAAZ,aAAA,GAAAE,CAAA;IAAAkF,UAAA,IAAc;EAAA,OAC7B;IAAA;IAAApF,aAAA,GAAAY,CAAA;IAAAZ,aAAA,GAAAE,CAAA;IAAA,IAAIsF,SAAA,GAAY,GAAG;MAAA;MAAAxF,aAAA,GAAAY,CAAA;MAAAZ,aAAA,GAAAE,CAAA;MAAAkF,UAAA,IAAc;IAAA,OACjC;MAAA;MAAApF,aAAA,GAAAY,CAAA;MAAAZ,aAAA,GAAAE,CAAA;MAAA,IAAIsF,SAAA,GAAY,GAAG;QAAA;QAAAxF,aAAA,GAAAY,CAAA;QAAAZ,aAAA,GAAAE,CAAA;QAAAkF,UAAA,IAAc;MAAA;MAAA;MAAA;QAAApF,aAAA,GAAAY,CAAA;MAAA;IAAA;EAAA;EAEtC;EACA,MAAM8E,aAAA;EAAA;EAAA,CAAA1F,aAAA,GAAAE,CAAA,QAAgB2E,IAAA,CAAKY,KAAK,CAAC,CAACJ,GAAA,CAAIN,OAAO,KAAKO,YAAA,CAAaP,OAAO,EAAC,KAAM,OAAO,KAAK,EAAC;EAAA;EAAA/E,aAAA,GAAAE,CAAA;EAC1F,IAAIwF,aAAA,GAAgB,GAAG;IAAA;IAAA1F,aAAA,GAAAY,CAAA;IAAAZ,aAAA,GAAAE,CAAA;IAAAkF,UAAA,IAAc;EAAA,OAChC;IAAA;IAAApF,aAAA,GAAAY,CAAA;IAAAZ,aAAA,GAAAE,CAAA;IAAA,IAAIwF,aAAA,GAAgB,IAAI;MAAA;MAAA1F,aAAA,GAAAY,CAAA;MAAAZ,aAAA,GAAAE,CAAA;MAAAkF,UAAA,IAAc;IAAA,OACtC;MAAA;MAAApF,aAAA,GAAAY,CAAA;MAAAZ,aAAA,GAAAE,CAAA;MAAA,IAAIwF,aAAA,GAAgB,KAAK;QAAA;QAAA1F,aAAA,GAAAY,CAAA;QAAAZ,aAAA,GAAAE,CAAA;QAAAkF,UAAA,IAAc;MAAA,OACvC;QAAA;QAAApF,aAAA,GAAAY,CAAA;QAAAZ,aAAA,GAAAE,CAAA;QAAA,IAAIwF,aAAA,GAAgB,KAAK;UAAA;UAAA1F,aAAA,GAAAY,CAAA;UAAAZ,aAAA,GAAAE,CAAA;UAAAkF,UAAA,IAAc;QAAA;QAAA;QAAA;UAAApF,aAAA,GAAAY,CAAA;QAAA;MAAA;IAAA;EAAA;EAE5C;EAAA;EAAAZ,aAAA,GAAAE,CAAA;EACA,IAAI2C,MAAA,CAAOL,WAAW,KAAK,WAAW;IAAA;IAAAxC,aAAA,GAAAY,CAAA;IAAAZ,aAAA,GAAAE,CAAA;IAAAkF,UAAA,IAAc;EAAA,OAC/C;IAAA;IAAApF,aAAA,GAAAY,CAAA;IAAAZ,aAAA,GAAAE,CAAA;IAAA,IAAI2C,MAAA,CAAOL,WAAW,KAAK,UAAU;MAAA;MAAAxC,aAAA,GAAAY,CAAA;MAAAZ,aAAA,GAAAE,CAAA;MAAAkF,UAAA,IAAc;IAAA;IAAA;IAAA;MAAApF,aAAA,GAAAY,CAAA;IAAA;EAAA;EAExD;EAAA;EAAAZ,aAAA,GAAAE,CAAA;EACA,IAAI2C,MAAA,CAAO8C,QAAQ,EAAE;IAAA;IAAA3F,aAAA,GAAAY,CAAA;IAAAZ,aAAA,GAAAE,CAAA;IAAAkF,UAAA,IAAc;EAAA;EAAA;EAAA;IAAApF,aAAA,GAAAY,CAAA;EAAA;EAAAZ,aAAA,GAAAE,CAAA;EAEnC,OAAO2E,IAAA,CAAKG,GAAG,CAAC,KAAKH,IAAA,CAAKC,GAAG,CAAC,GAAGM,UAAA;AACnC","ignoreList":[]}