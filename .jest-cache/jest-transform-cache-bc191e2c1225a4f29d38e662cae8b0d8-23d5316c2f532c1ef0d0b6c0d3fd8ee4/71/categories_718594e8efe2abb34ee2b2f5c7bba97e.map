{"version":3,"names":["cov_zmhqk1d8f","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","clearConfigCache","configUtils","currentConfig","fetchRemoteConfig","getCachedConfig","getEnvironmentConfig","getMergedConfig","useCategoryConfig","developmentConfig","apiEndpoints","categories","categoryCount","categorySearch","features","enableAnalytics","enableBackgroundRefresh","enableCaching","enableKeyboardNavigation","enableErrorReporting","performance","cacheDuration","refreshInterval","maxCategories","debounceDelay","ui","defaultVariant","defaultSize","showCounts","enableAnimations","productionConfig","testConfig","env","process","NODE_ENV","response","fetch","ok","Error","status","statusText","config","json","error","console","warn","envConfig","remoteConfig","baseConfig","animationDuration","urlUpdateDelay","maxVisible","analytics","keyboardNavigation","configCache","ttl","now","Date","timestamp","setConfig","_react","default","useState","loading","setLoading","setError","useEffect","loadConfig1","loadConfig","newConfig","err","errorMessage","message","refreshConfig","useCallback"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\config\\categories.ts"],"sourcesContent":["/**\r\n * Categories Configuration System\r\n * Dynamic configuration for Categories component\r\n * Pinteya E-commerce - Enterprise Configuration\r\n */\r\n\r\nimport React from 'react';\r\nimport type { Category, CategoriesConfig } from '@/types/categories';\r\n\r\n/**\r\n * Environment-based configuration\r\n */\r\ninterface EnvironmentConfig {\r\n  /** API endpoints */\r\n  apiEndpoints: {\r\n    categories: string;\r\n    categoryCount: string;\r\n    categorySearch: string;\r\n  };\r\n  /** Feature flags */\r\n  features: {\r\n    enableAnalytics: boolean;\r\n    enableBackgroundRefresh: boolean;\r\n    enableCaching: boolean;\r\n    enableKeyboardNavigation: boolean;\r\n    enableErrorReporting: boolean;\r\n  };\r\n  /** Performance settings */\r\n  performance: {\r\n    cacheDuration: number;\r\n    refreshInterval: number;\r\n    maxCategories: number;\r\n    debounceDelay: number;\r\n  };\r\n  /** UI settings */\r\n  ui: {\r\n    defaultVariant: 'default' | 'compact' | 'minimal';\r\n    defaultSize: 'sm' | 'md' | 'lg';\r\n    showCounts: boolean;\r\n    enableAnimations: boolean;\r\n  };\r\n}\r\n\r\n/**\r\n * Development configuration\r\n */\r\nconst developmentConfig: EnvironmentConfig = {\r\n  apiEndpoints: {\r\n    categories: '/api/categories',\r\n    categoryCount: '/api/categories/count',\r\n    categorySearch: '/api/categories/search',\r\n  },\r\n  features: {\r\n    enableAnalytics: true,\r\n    enableBackgroundRefresh: true,\r\n    enableCaching: true,\r\n    enableKeyboardNavigation: true,\r\n    enableErrorReporting: true,\r\n  },\r\n  performance: {\r\n    cacheDuration: 5 * 60 * 1000, // 5 minutes\r\n    refreshInterval: 30 * 60 * 1000, // 30 minutes\r\n    maxCategories: 20,\r\n    debounceDelay: 300,\r\n  },\r\n  ui: {\r\n    defaultVariant: 'default',\r\n    defaultSize: 'md',\r\n    showCounts: true,\r\n    enableAnimations: true,\r\n  },\r\n};\r\n\r\n/**\r\n * Production configuration\r\n */\r\nconst productionConfig: EnvironmentConfig = {\r\n  apiEndpoints: {\r\n    categories: '/api/categories',\r\n    categoryCount: '/api/categories/count',\r\n    categorySearch: '/api/categories/search',\r\n  },\r\n  features: {\r\n    enableAnalytics: true,\r\n    enableBackgroundRefresh: true,\r\n    enableCaching: true,\r\n    enableKeyboardNavigation: true,\r\n    enableErrorReporting: true,\r\n  },\r\n  performance: {\r\n    cacheDuration: 15 * 60 * 1000, // 15 minutes\r\n    refreshInterval: 60 * 60 * 1000, // 1 hour\r\n    maxCategories: 15,\r\n    debounceDelay: 500,\r\n  },\r\n  ui: {\r\n    defaultVariant: 'default',\r\n    defaultSize: 'md',\r\n    showCounts: false, // Hide counts in production for cleaner UI\r\n    enableAnimations: true,\r\n  },\r\n};\r\n\r\n/**\r\n * Test configuration\r\n */\r\nconst testConfig: EnvironmentConfig = {\r\n  apiEndpoints: {\r\n    categories: '/api/test/categories',\r\n    categoryCount: '/api/test/categories/count',\r\n    categorySearch: '/api/test/categories/search',\r\n  },\r\n  features: {\r\n    enableAnalytics: false,\r\n    enableBackgroundRefresh: false,\r\n    enableCaching: false,\r\n    enableKeyboardNavigation: true,\r\n    enableErrorReporting: false,\r\n  },\r\n  performance: {\r\n    cacheDuration: 1000, // 1 second for testing\r\n    refreshInterval: 5000, // 5 seconds for testing\r\n    maxCategories: 5,\r\n    debounceDelay: 100,\r\n  },\r\n  ui: {\r\n    defaultVariant: 'default',\r\n    defaultSize: 'md',\r\n    showCounts: true,\r\n    enableAnimations: false, // Disable animations in tests\r\n  },\r\n};\r\n\r\n/**\r\n * Get configuration based on environment\r\n */\r\nexport const getEnvironmentConfig = (): EnvironmentConfig => {\r\n  const env = process.env.NODE_ENV;\r\n  \r\n  switch (env) {\r\n    case 'development':\r\n      return developmentConfig;\r\n    case 'production':\r\n      return productionConfig;\r\n    case 'test':\r\n      return testConfig;\r\n    default:\r\n      return developmentConfig;\r\n  }\r\n};\r\n\r\n/**\r\n * Remote configuration interface\r\n */\r\ninterface RemoteConfig {\r\n  /** Configuration version */\r\n  version: string;\r\n  /** Last updated timestamp */\r\n  updatedAt: string;\r\n  /** Categories configuration */\r\n  categories: {\r\n    enabled: boolean;\r\n    maxVisible: number;\r\n    layout: 'grid' | 'list' | 'carousel';\r\n    variants: string[];\r\n  };\r\n  /** Feature toggles */\r\n  features: Record<string, boolean>;\r\n  /** A/B testing configurations */\r\n  experiments: Record<string, {\r\n    enabled: boolean;\r\n    variant: string;\r\n    percentage: number;\r\n  }>;\r\n}\r\n\r\n/**\r\n * Fetch remote configuration\r\n */\r\nexport const fetchRemoteConfig = async (): Promise<RemoteConfig | null> => {\r\n  try {\r\n    const response = await fetch('/api/config/categories');\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n    }\r\n\r\n    const config = await response.json();\r\n    \r\n    // Validate configuration structure\r\n    if (!config.version || !config.categories) {\r\n      throw new Error('Invalid configuration format');\r\n    }\r\n\r\n    return config;\r\n  } catch (error) {\r\n    console.warn('Failed to fetch remote configuration:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\n/**\r\n * Merge configurations with priority: remote > environment > default\r\n */\r\nexport const getMergedConfig = async (): Promise<CategoriesConfig> => {\r\n  const envConfig = getEnvironmentConfig();\r\n  const remoteConfig = await fetchRemoteConfig();\r\n\r\n  // Base configuration from environment\r\n  const baseConfig: CategoriesConfig = {\r\n    defaultVariant: envConfig.ui.defaultVariant,\r\n    defaultSize: envConfig.ui.defaultSize,\r\n    maxCategories: envConfig.performance.maxCategories,\r\n    enableAnalytics: envConfig.features.enableAnalytics,\r\n    enableKeyboardNavigation: envConfig.features.enableKeyboardNavigation,\r\n    animationDuration: 200,\r\n    urlUpdateDelay: envConfig.performance.debounceDelay,\r\n  };\r\n\r\n  // Apply remote configuration overrides if available\r\n  if (remoteConfig) {\r\n    return {\r\n      ...baseConfig,\r\n      maxCategories: remoteConfig.categories.maxVisible || baseConfig.maxCategories,\r\n      enableAnalytics: remoteConfig.features.analytics ?? baseConfig.enableAnalytics,\r\n      enableKeyboardNavigation: remoteConfig.features.keyboardNavigation ?? baseConfig.enableKeyboardNavigation,\r\n    };\r\n  }\r\n\r\n  return baseConfig;\r\n};\r\n\r\n/**\r\n * Configuration cache\r\n */\r\nlet configCache: {\r\n  config: CategoriesConfig;\r\n  timestamp: number;\r\n  ttl: number;\r\n} | null = null;\r\n\r\n/**\r\n * Get cached configuration or fetch new one\r\n */\r\nexport const getCachedConfig = async (ttl = 5 * 60 * 1000): Promise<CategoriesConfig> => {\r\n  const now = Date.now();\r\n\r\n  // Return cached config if valid\r\n  if (configCache && (now - configCache.timestamp) < configCache.ttl) {\r\n    return configCache.config;\r\n  }\r\n\r\n  // Fetch new configuration\r\n  const config = await getMergedConfig();\r\n\r\n  // Update cache\r\n  configCache = {\r\n    config,\r\n    timestamp: now,\r\n    ttl,\r\n  };\r\n\r\n  return config;\r\n};\r\n\r\n/**\r\n * Clear configuration cache\r\n */\r\nexport const clearConfigCache = (): void => {\r\n  configCache = null;\r\n};\r\n\r\n/**\r\n * Configuration provider hook\r\n */\r\nexport const useCategoryConfig = () => {\r\n  const [config, setConfig] = React.useState<CategoriesConfig | null>(null);\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [error, setError] = React.useState<string | null>(null);\r\n\r\n  React.useEffect(() => {\r\n    const loadConfig = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const newConfig = await getCachedConfig();\r\n        setConfig(newConfig);\r\n        setError(null);\r\n      } catch (err) {\r\n        const errorMessage = err instanceof Error ? err.message : 'Failed to load configuration';\r\n        setError(errorMessage);\r\n        \r\n        // Fallback to environment config\r\n        const envConfig = getEnvironmentConfig();\r\n        setConfig({\r\n          defaultVariant: envConfig.ui.defaultVariant,\r\n          defaultSize: envConfig.ui.defaultSize,\r\n          maxCategories: envConfig.performance.maxCategories,\r\n          enableAnalytics: envConfig.features.enableAnalytics,\r\n          enableKeyboardNavigation: envConfig.features.enableKeyboardNavigation,\r\n          animationDuration: 200,\r\n          urlUpdateDelay: envConfig.performance.debounceDelay,\r\n        });\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadConfig();\r\n  }, []);\r\n\r\n  const refreshConfig = React.useCallback(async () => {\r\n    clearConfigCache();\r\n    await loadConfig();\r\n  }, []);\r\n\r\n  return {\r\n    config,\r\n    loading,\r\n    error,\r\n    refreshConfig,\r\n  };\r\n};\r\n\r\n/**\r\n * Export current environment configuration\r\n */\r\nexport const currentConfig = getEnvironmentConfig();\r\n\r\n/**\r\n * Export configuration utilities\r\n */\r\nexport const configUtils = {\r\n  getEnvironmentConfig,\r\n  fetchRemoteConfig,\r\n  getMergedConfig,\r\n  getCachedConfig,\r\n  clearConfigCache,\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA;;;;GAIC;;AAAA;AAAA,SAAAA,ccAAA;MAAAC,OAAA;MAAAC,OAAA;MAAAC,cAAA;MAAAC,KAAA;MAAAC,QAAA;IAAA;IAAAC,eAAA;IAAA3B,IAAA;EAAA;EAAA,IAAA4B,QAAA,GAAA3B,MAAA,CAAAE,GAAA,MAAAF,MAAA,CAAAE,GAAA;EAAA,KAAAyB,QAAA,CAAA7B,IAAA,KAAA6B,QAAA,CAAA7B,IAAA,EAAAC,IAAA,KAAAA,IAAA;IAAA4B,QAAA,CAAA7B,IAAA,IAAAK,YAAA;EAAA;EAAA,IAAAyB,cAAA,GAAAD,QAAA,CAAA7B,IAAA;EAAA;IAwQY;IAAAD,aAAA,YAAAA,CAAA;MAAA,OAAA+B,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAA/B,aAAA;AAAAA,aAAA,GAAAoB,CAAA;;;;;;;;;;;;;;;;;;;;MAAAY,iBAAA;IAAA;IAAAhC,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;WAAAY,gBAAA;;MA+DAC,YAAA;IAAA;IAAAjC,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;WAAAa,WAAA;;MALAC,cAAA;IAAA;IAAAlC,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;WAAAc,aAAA;;MAnJAC,kBAAA;IAAA;IAAAnC,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;WAAAe,iBAAA;;MAiEAC,gBAAA;IAAA;IAAApC,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;WAAAgB,eAAA;;MA5GAC,qBAAA;IAAA;IAAArC,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;WAAAiB,oBAAA;;MAoEAC,gBAAA;IAAA;IAAAtC,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;WAAAkB,eAAA;;MAuEAC,kBAAA;IAAA;IAAAvC,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;WAAAmB,iBAAA;;;;;wEA7QK;;;;;;;;;;;;;;;AAqClB;;;AAGA,MAAMC,iBAAA;AAAA;AAAA,CAAAxC,aAAA,GAAAoB,CAAA,QAAuC;EAC3CqB,YAAA,EAAc;IACZC,UAAA,EAAY;IACZC,aAAA,EAAe;IACfC,cAAA,EAAgB;EAClB;EACAC,QAAA,EAAU;IACRC,eAAA,EAAiB;IACjBC,uBAAA,EAAyB;IACzBC,aAAA,EAAe;IACfC,wBAAA,EAA0B;IAC1BC,oBAAA,EAAsB;EACxB;EACAC,WAAA,EAAa;IACXC,aAAA,EAAe,IAAI,KAAK;IACxBC,eAAA,EAAiB,KAAK,KAAK;IAC3BC,aAAA,EAAe;IACfC,aAAA,EAAe;EACjB;EACAC,EAAA,EAAI;IACFC,cAAA,EAAgB;IAChBC,WAAA,EAAa;IACbC,UAAA,EAAY;IACZC,gBAAA,EAAkB;EACpB;AACF;AAEA;;;AAGA,MAAMC,gBAAA;AAAA;AAAA,CAAA7D,aAAA,GAAAoB,CAAA,QAAsC;EAC1CqB,YAAA,EAAc;IACZC,UAAA,EAAY;IACZC,aAAA,EAAe;IACfC,cAAA,EAAgB;EAClB;EACAC,QAAA,EAAU;IACRC,eAAA,EAAiB;IACjBC,uBAAA,EAAyB;IACzBC,aAAA,EAAe;IACfC,wBAAA,EAA0B;IAC1BC,oBAAA,EAAsB;EACxB;EACAC,WAAA,EAAa;IACXC,aAAA,EAAe,KAAK,KAAK;IACzBC,eAAA,EAAiB,KAAK,KAAK;IAC3BC,aAAA,EAAe;IACfC,aAAA,EAAe;EACjB;EACAC,EAAA,EAAI;IACFC,cAAA,EAAgB;IAChBC,WAAA,EAAa;IACbC,UAAA,EAAY;IACZC,gBAAA,EAAkB;EACpB;AACF;AAEA;;;AAGA,MAAME,UAAA;AAAA;AAAA,CAAA9D,aAAA,GAAAoB,CAAA,QAAgC;EACpCqB,YAAA,EAAc;IACZC,UAAA,EAAY;IACZC,aAAA,EAAe;IACfC,cAAA,EAAgB;EAClB;EACAC,QAAA,EAAU;IACRC,eAAA,EAAiB;IACjBC,uBAAA,EAAyB;IACzBC,aAAA,EAAe;IACfC,wBAAA,EAA0B;IAC1BC,oBAAA,EAAsB;EACxB;EACAC,WAAA,EAAa;IACXC,aAAA,EAAe;IACfC,eAAA,EAAiB;IACjBC,aAAA,EAAe;IACfC,aAAA,EAAe;EACjB;EACAC,EAAA,EAAI;IACFC,cAAA,EAAgB;IAChBC,WAAA,EAAa;IACbC,UAAA,EAAY;IACZC,gBAAA,EAAkB;EACpB;AACF;AAAA;AAAA5D,aAAA,GAAAoB,CAAA;AAKO,MAAMiB,oBAAA,GAAuBA,CAAA;EAAA;EAAArC,aAAA,GAAAqB,CAAA;EAClC,MAAM0C,GAAA;EAAA;EAAA,CAAA/D,aAAA,GAAAoB,CAAA,QAAM4C,OAAA,CAAQD,GAAG,CAACE,QAAQ;EAAA;EAAAjE,aAAA,GAAAoB,CAAA;EAEhC,QAAQ2C,GAAA;IACN,KAAK;MAAA;MAAA/D,aAAA,GAAAsB,CAAA;MAAAtB,aAAA,GAAAoB,CAAA;MACH,OAAOoB,iBAAA;IACT,KAAK;MAAA;MAAAxC,aAAA,GAAAsB,CAAA;MAAAtB,aAAA,GAAAoB,CAAA;MACH,OAAOyC,gBAAA;IACT,KAAK;MAAA;MAAA7D,aAAA,GAAAsB,CAAA;MAAAtB,aAAA,GAAAoB,CAAA;MACH,OAAO0C,UAAA;IACT;MAAA;MAAA9D,aAAA,GAAAsB,CAAA;MAAAtB,aAAA,GAAAoB,CAAA;MACE,OAAOoB,iBAAA;EACX;AACF;AAAA;AAAAxC,aAAA,GAAAoB,CAAA;AA8BO,MAAMe,iBAAA,GAAoB,MAAAA,CAAA;EAAA;EAAAnC,aAAA,GAAAqB,CAAA;EAAArB,aAAA,GAAAoB,CAAA;EAC/B,IAAI;IACF,MAAM8C,QAAA;IAAA;IAAA,CAAAlE,aAAA,GAAAoB,CAAA,QAAW,MAAM+C,KAAA,CAAM;IAAA;IAAAnE,aAAA,GAAAoB,CAAA;IAE7B,IAAI,CAAC8C,QAAA,CAASE,EAAE,EAAE;MAAA;MAAApE,aAAA,GAAAsB,CAAA;MAAAtB,aAAA,GAAAoB,CAAA;MAChB,MAAM,IAAIiD,KAAA,CAAM,QAAQH,QAAA,CAASI,MAAM,KAAKJ,QAAA,CAASK,UAAU,EAAE;IACnE;IAAA;IAAA;MAAAvE,aAAA,GAAAsB,CAAA;IAAA;IAEA,MAAMkD,MAAA;IAAA;IAAA,CAAAxE,aAAA,GAAAoB,CAAA,QAAS,MAAM8C,QAAA,CAASO,IAAI;IAElC;IAAA;IAAAzE,aAAA,GAAAoB,CAAA;IACA;IAAI;IAAA,CAAApB,aAAA,GAAAsB,CAAA,WAACkD,MAAA,CAAOhD,OAAO;IAAA;IAAA,CAAAxB,aAAA,GAAAsB,CAAA,UAAI,CAACkD,MAAA,CAAO9B,UAAU,GAAE;MAAA;MAAA1C,aAAA,GAAAsB,CAAA;MAAAtB,aAAA,GAAAoB,CAAA;MACzC,MAAM,IAAIiD,KAAA,CAAM;IAClB;IAAA;IAAA;MAAArE,aAAA,GAAAsB,CAAA;IAAA;IAAAtB,aAAA,GAAAoB,CAAA;IAEA,OAAOoD,MAAA;EACT,EAAE,OAAOE,KAAA,EAAO;IAAA;IAAA1E,aAAA,GAAAoB,CAAA;IACduD,OAAA,CAAQC,IAAI,CAAC,yCAAyCF,KAAA;IAAA;IAAA1E,aAAA,GAAAoB,CAAA;IACtD,OAAO;EACT;AACF;AAAA;AAAApB,aAAA,GAAAoB,CAAA;AAKO,MAAMkB,eAAA,GAAkB,MAAAA,CAAA;EAAA;EAAAtC,aAAA,GAAAqB,CAAA;EAC7B,MAAMwD,SAAA;EAAA;EAAA,CAAA7E,aAAA,GAAAoB,CAAA,QAAYiB,oBAAA;EAClB,MAAMyC,YAAA;EAAA;EAAA,CAAA9E,aAAA,GAAAoB,CAAA,QAAe,MAAMe,iBAAA;EAE3B;EACA,MAAM4C,UAAA;EAAA;EAAA,CAAA/E,aAAA,GAAAoB,CAAA,QAA+B;IACnCqC,cAAA,EAAgBoB,SAAA,CAAUrB,EAAE,CAACC,cAAc;IAC3CC,WAAA,EAAamB,SAAA,CAAUrB,EAAE,CAACE,WAAW;IACrCJ,aAAA,EAAeuB,SAAA,CAAU1B,WAAW,CAACG,aAAa;IAClDR,eAAA,EAAiB+B,SAAA,CAAUhC,QAAQ,CAACC,eAAe;IACnDG,wBAAA,EAA0B4B,SAAA,CAAUhC,QAAQ,CAACI,wBAAwB;IACrE+B,iBAAA,EAAmB;IACnBC,cAAA,EAAgBJ,SAAA,CAAU1B,WAAW,CAACI;EACxC;EAEA;EAAA;EAAAvD,aAAA,GAAAoB,CAAA;EACA,IAAI0D,YAAA,EAAc;IAAA;IAAA9E,aAAA,GAAAsB,CAAA;IAAAtB,aAAA,GAAAoB,CAAA;IAChB,OAAO;MACL,GAAG2D,UAAU;MACbzB,aAAA;MAAe;MAAA,CAAAtD,aAAA,GAAAsB,CAAA,UAAAwD,YAAA,CAAapC,UAAU,CAACwC,UAAU;MAAA;MAAA,CAAAlF,aAAA,GAAAsB,CAAA,UAAIyD,UAAA,CAAWzB,aAAa;MAC7ER,eAAA;MAAiB;MAAA,CAAA9C,aAAA,GAAAsB,CAAA,UAAAwD,YAAA,CAAajC,QAAQ,CAACsC,SAAS;MAAA;MAAA,CAAAnF,aAAA,GAAAsB,CAAA,UAAIyD,UAAA,CAAWjC,eAAe;MAC9EG,wBAAA;MAA0B;MAAA,CAAAjD,aAAA,GAAAsB,CAAA,UAAAwD,YAAA,CAAajC,QAAQ,CAACuC,kBAAkB;MAAA;MAAA,CAAApF,aAAA,GAAAsB,CAAA,UAAIyD,UAAA,CAAW9B,wBAAwB;IAC3G;EACF;EAAA;EAAA;IAAAjD,aAAA,GAAAsB,CAAA;EAAA;EAAAtB,aAAA,GAAAoB,CAAA;EAEA,OAAO2D,UAAA;AACT;AAEA;;;AAGA,IAAIM,WAAA;AAAA;AAAA,CAAArF,aAAA,GAAAoB,CAAA,QAIO;AAAA;AAAApB,aAAA,GAAAoB,CAAA;AAKJ,MAAMgB,eAAA,GAAkB,MAAAA,CAAOkD,GAAA;AAAA;AAAA,CAAAtF,aAAA,GAAAsB,CAAA,WAAM,IAAI,KAAK,IAAI;EAAA;EAAAtB,aAAA,GAAAqB,CAAA;EACvD,MAAMkE,GAAA;EAAA;EAAA,CAAAvF,aAAA,GAAAoB,CAAA,QAAMoE,IAAA,CAAKD,GAAG;EAEpB;EAAA;EAAAvF,aAAA,GAAAoB,CAAA;EACA;EAAI;EAAA,CAAApB,aAAA,GAAAsB,CAAA,WAAA+D,WAAA;EAAA;EAAA,CAAArF,aAAA,GAAAsB,CAAA,WAAeiE,GAAC,GAAMF,WAAA,CAAYI,SAAS,GAAIJ,WAAA,CAAYC,GAAG,GAAE;IAAA;IAAAtF,aAAA,GAAAsB,CAAA;IAAAtB,aAAA,GAAAoB,CAAA;IAClE,OAAOiE,WAAA,CAAYb,MAAM;EAC3B;EAAA;EAAA;IAAAxE,aAAA,GAAAsB,CAAA;EAAA;EAEA;EACA,MAAMkD,MAAA;EAAA;EAAA,CAAAxE,aAAA,GAAAoB,CAAA,QAAS,MAAMkB,eAAA;EAErB;EAAA;EAAAtC,aAAA,GAAAoB,CAAA;EACAiE,WAAA,GAAc;IACZb,MAAA;IACAiB,SAAA,EAAWF,GAAA;IACXD;EACF;EAAA;EAAAtF,aAAA,GAAAoB,CAAA;EAEA,OAAOoD,MAAA;AACT;AAAA;AAAAxE,aAAA,GAAAoB,CAAA;AAKO,MAAMY,gBAAA,GAAmBA,CAAA;EAAA;EAAAhC,aAAA,GAAAqB,CAAA;EAAArB,aAAA,GAAAoB,CAAA;EAC9BiE,WAAA,GAAc;AAChB;AAAA;AAAArF,aAAA,GAAAoB,CAAA;AAKO,MAAMmB,iBAAA,GAAoBA,CAAA;EAAA;EAAAvC,aAAA,GAAAqB,CAAA;EAC/B,MAAM,CAACmD,MAAA,EAAQkB,SAAA,CAAU;EAAA;EAAA,CAAA1F,aAAA,GAAAoB,CAAA,QAAGuE,MAAA,CAAAC,OAAK,CAACC,QAAQ,CAA0B;EACpE,MAAM,CAACC,OAAA,EAASC,UAAA,CAAW;EAAA;EAAA,CAAA/F,aAAA,GAAAoB,CAAA,QAAGuE,MAAA,CAAAC,OAAK,CAACC,QAAQ,CAAC;EAC7C,MAAM,CAACnB,KAAA,EAAOsB,QAAA,CAAS;EAAA;EAAA,CAAAhG,aAAA,GAAAoB,CAAA,QAAGuE,MAAA,CAAAC,OAAK,CAACC,QAAQ,CAAgB;EAAA;EAAA7F,aAAA,GAAAoB,CAAA;EAExDuE,MAAA,CAAAC,OAAK,CAACK,SAAS,CAAC;IAAA;IAAAjG,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IACd,MAAM8E,WAAA,GAAa,MAAAC,CAAA;MAAA;MAAAnG,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAoB,CAAA;MACjB,IAAI;QAAA;QAAApB,aAAA,GAAAoB,CAAA;QACF2E,UAAA,CAAW;QACX,MAAMK,SAAA;QAAA;QAAA,CAAApG,aAAA,GAAAoB,CAAA,QAAY,MAAMgB,eAAA;QAAA;QAAApC,aAAA,GAAAoB,CAAA;QACxBsE,SAAA,CAAUU,SAAA;QAAA;QAAApG,aAAA,GAAAoB,CAAA;QACV4E,QAAA,CAAS;MACX,EAAE,OAAOK,GAAA,EAAK;QACZ,MAAMC,YAAA;QAAA;QAAA,CAAAtG,aAAA,GAAAoB,CAAA,QAAeiF,GAAA,YAAehC,KAAA;QAAA;QAAA,CAAArE,aAAA,GAAAsB,CAAA,WAAQ+E,GAAA,CAAIE,OAAO;QAAA;QAAA,CAAAvG,aAAA,GAAAsB,CAAA,WAAG;QAAA;QAAAtB,aAAA,GAAAoB,CAAA;QAC1D4E,QAAA,CAASM,YAAA;QAET;QACA,MAAMzB,SAAA;QAAA;QAAA,CAAA7E,aAAA,GAAAoB,CAAA,QAAYiB,oBAAA;QAAA;QAAArC,aAAA,GAAAoB,CAAA;QAClBsE,SAAA,CAAU;UACRjC,cAAA,EAAgBoB,SAAA,CAAUrB,EAAE,CAACC,cAAc;UAC3CC,WAAA,EAAamB,SAAA,CAAUrB,EAAE,CAACE,WAAW;UACrCJ,aAAA,EAAeuB,SAAA,CAAU1B,WAAW,CAACG,aAAa;UAClDR,eAAA,EAAiB+B,SAAA,CAAUhC,QAAQ,CAACC,eAAe;UACnDG,wBAAA,EAA0B4B,SAAA,CAAUhC,QAAQ,CAACI,wBAAwB;UACrE+B,iBAAA,EAAmB;UACnBC,cAAA,EAAgBJ,SAAA,CAAU1B,WAAW,CAACI;QACxC;MACF,UAAU;QAAA;QAAAvD,aAAA,GAAAoB,CAAA;QACR2E,UAAA,CAAW;MACb;IACF;IAAA;IAAA/F,aAAA,GAAAoB,CAAA;IAEA8E,WAAA;EACF,GAAG,EAAE;EAEL,MAAMM,aAAA;EAAA;EAAA,CAAAxG,aAAA,GAAAoB,CAAA,QAAgBuE,MAAA,CAAAC,OAAK,CAACa,WAAW,CAAC;IAAA;IAAAzG,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IACtCY,gBAAA;IAAA;IAAAhC,aAAA,GAAAoB,CAAA;IACA,MAAM+E,UAAA;EACR,GAAG,EAAE;EAAA;EAAAnG,aAAA,GAAAoB,CAAA;EAEL,OAAO;IACLoD,MAAA;IACAsB,OAAA;IACApB,KAAA;IACA8B;EACF;AACF;AAKO,MAAMtE,aAAA;AAAA;AAAA,CAAAlC,aAAA,GAAAoB,CAAA,QAAgBiB,oBAAA;AAKtB,MAAMJ,WAAA;AAAA;AAAA,CAAAjC,aAAA,GAAAoB,CAAA,QAAc;EACzBiB,oBAAA;EACAF,iBAAA;EACAG,eAAA;EACAF,eAAA;EACAJ;AACF","ignoreList":[]}