{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\__tests__\\hooks\\useCategoryNavigation.test.ts"],"sourcesContent":["/**\r\n * useCategoryNavigation Hook Tests\r\n * Enterprise-ready test suite for category navigation logic\r\n * Pinteya E-commerce\r\n */\r\n\r\nimport { renderHook, act } from '@testing-library/react';\r\nimport { useRouter, useSearchParams, usePathname } from 'next/navigation';\r\nimport { useCategoryNavigation } from '@/hooks/useCategoryNavigation';\r\n\r\n// Mock Next.js navigation hooks\r\njest.mock('next/navigation', () => ({\r\n  useRouter: jest.fn(),\r\n  useSearchParams: jest.fn(),\r\n  usePathname: jest.fn(() => '/'),\r\n}));\r\n\r\n// Mock analytics\r\nconst mockGtag = jest.fn();\r\nObject.defineProperty(window, 'gtag', {\r\n  value: mockGtag,\r\n  writable: true,\r\n});\r\n\r\ndescribe('useCategoryNavigation Hook', () => {\r\n  const mockPush = jest.fn();\r\n  const mockGet = jest.fn();\r\n  const mockForEach = jest.fn();\r\n\r\n  beforeEach(() => {\r\n    jest.clearAllMocks();\r\n    \r\n    // Setup router mock\r\n    (useRouter as jest.Mock).mockReturnValue({\r\n      push: mockPush,\r\n    });\r\n\r\n    // Setup search params mock\r\n    (useSearchParams as jest.Mock).mockReturnValue({\r\n      get: mockGet,\r\n      forEach: mockForEach,\r\n    });\r\n\r\n    // Setup pathname mock\r\n    (usePathname as jest.Mock).mockReturnValue('/');\r\n\r\n    // Reset analytics mock\r\n    mockGtag.mockClear();\r\n  });\r\n\r\n  describe('Navigation Functions', () => {\r\n    it('navigates to filtered view with categories', async () => {\r\n      mockGet.mockReturnValue(null);\r\n      \r\n      const { result } = renderHook(() => \r\n        useCategoryNavigation({ enableAnalytics: true })\r\n      );\r\n\r\n      const categories = ['cat1', 'cat2'];\r\n      \r\n      await act(async () => {\r\n        result.current.navigateToFiltered(categories);\r\n        // Wait for debounce\r\n        await new Promise(resolve => setTimeout(resolve, 400));\r\n      });\r\n\r\n      expect(mockPush).toHaveBeenCalledWith('/?categories=cat1%2Ccat2');\r\n    });\r\n\r\n    it('navigates to home (clears filters)', async () => {\r\n      mockGet.mockReturnValue('cat1,cat2');\r\n      \r\n      const { result } = renderHook(() => \r\n        useCategoryNavigation({ enableAnalytics: true })\r\n      );\r\n\r\n      await act(async () => {\r\n        result.current.navigateToHome();\r\n        // Wait for debounce\r\n        await new Promise(resolve => setTimeout(resolve, 400));\r\n      });\r\n\r\n      expect(mockPush).toHaveBeenCalledWith('/');\r\n    });\r\n\r\n    it('preserves other URL parameters when enabled', async () => {\r\n      mockGet.mockImplementation((key: string) => {\r\n        if (key === 'categories') {return null;}\r\n        if (key === 'search') {return 'test';}\r\n        return null;\r\n      });\r\n      \r\n      mockForEach.mockImplementation((callback: (value: string, key: string) => void) => {\r\n        callback('test', 'search');\r\n      });\r\n\r\n      const { result } = renderHook(() => \r\n        useCategoryNavigation({ \r\n          preserveParams: true,\r\n          enableAnalytics: true \r\n        })\r\n      );\r\n\r\n      const categories = ['cat1'];\r\n      \r\n      await act(async () => {\r\n        result.current.navigateToFiltered(categories);\r\n        // Wait for debounce\r\n        await new Promise(resolve => setTimeout(resolve, 400));\r\n      });\r\n\r\n      expect(mockPush).toHaveBeenCalledWith('/?search=test&categories=cat1');\r\n    });\r\n\r\n    it('does not preserve other parameters when disabled', async () => {\r\n      mockGet.mockImplementation((key: string) => {\r\n        if (key === 'categories') {return null;}\r\n        if (key === 'search') {return 'test';}\r\n        return null;\r\n      });\r\n\r\n      const { result } = renderHook(() => \r\n        useCategoryNavigation({ \r\n          preserveParams: false,\r\n          enableAnalytics: true \r\n        })\r\n      );\r\n\r\n      const categories = ['cat1'];\r\n      \r\n      await act(async () => {\r\n        result.current.navigateToFiltered(categories);\r\n        // Wait for debounce\r\n        await new Promise(resolve => setTimeout(resolve, 400));\r\n      });\r\n\r\n      expect(mockPush).toHaveBeenCalledWith('/?categories=cat1');\r\n    });\r\n  });\r\n\r\n  describe('URL Building', () => {\r\n    it('builds correct URL with single category', () => {\r\n      mockGet.mockReturnValue(null);\r\n      mockForEach.mockImplementation(() => {}); // No other params\r\n\r\n      const { result } = renderHook(() =>\r\n        useCategoryNavigation()\r\n      );\r\n\r\n      const url = result.current.getCurrentUrl();\r\n      expect(url).toBe('/');\r\n    });\r\n\r\n    it('builds correct URL with multiple categories', () => {\r\n      mockGet.mockReturnValue('cat1,cat2,cat3');\r\n      mockForEach.mockImplementation(() => {}); // No other params\r\n\r\n      const { result } = renderHook(() =>\r\n        useCategoryNavigation()\r\n      );\r\n\r\n      const url = result.current.getCurrentUrl();\r\n      expect(url).toBe('/?categories=cat1%2Ccat2%2Ccat3');\r\n    });\r\n\r\n    it('handles empty categories correctly', () => {\r\n      mockGet.mockReturnValue('');\r\n      mockForEach.mockImplementation(() => {}); // No other params\r\n\r\n      const { result } = renderHook(() =>\r\n        useCategoryNavigation()\r\n      );\r\n\r\n      const url = result.current.getCurrentUrl();\r\n      expect(url).toBe('/');\r\n    });\r\n  });\r\n\r\n  describe('Navigation State', () => {\r\n    it('tracks navigation state correctly', async () => {\r\n      const { result } = renderHook(() => \r\n        useCategoryNavigation()\r\n      );\r\n\r\n      expect(result.current.isNavigating).toBe(false);\r\n\r\n      act(() => {\r\n        result.current.navigateToFiltered(['cat1']);\r\n      });\r\n\r\n      expect(result.current.isNavigating).toBe(true);\r\n\r\n      // Wait for navigation to complete\r\n      await act(async () => {\r\n        await new Promise(resolve => setTimeout(resolve, 500));\r\n      });\r\n\r\n      expect(result.current.isNavigating).toBe(false);\r\n    });\r\n  });\r\n\r\n  describe('Analytics Tracking', () => {\r\n    it('tracks navigation analytics when enabled', async () => {\r\n      const { result } = renderHook(() => \r\n        useCategoryNavigation({ enableAnalytics: true })\r\n      );\r\n\r\n      await act(async () => {\r\n        result.current.navigateToFiltered(['cat1', 'cat2']);\r\n        // Wait for debounce\r\n        await new Promise(resolve => setTimeout(resolve, 400));\r\n      });\r\n\r\n      expect(mockGtag).toHaveBeenCalledWith(\r\n        'event',\r\n        'category_navigation',\r\n        expect.objectContaining({\r\n          event_category: 'navigation',\r\n          event_label: 'filter',\r\n          value: 2,\r\n        })\r\n      );\r\n    });\r\n\r\n    it('tracks clear navigation analytics', async () => {\r\n      const { result } = renderHook(() => \r\n        useCategoryNavigation({ enableAnalytics: true })\r\n      );\r\n\r\n      await act(async () => {\r\n        result.current.navigateToHome();\r\n        // Wait for debounce\r\n        await new Promise(resolve => setTimeout(resolve, 400));\r\n      });\r\n\r\n      expect(mockGtag).toHaveBeenCalledWith(\r\n        'event',\r\n        'category_navigation',\r\n        expect.objectContaining({\r\n          event_category: 'navigation',\r\n          event_label: 'clear',\r\n          value: 0,\r\n        })\r\n      );\r\n    });\r\n\r\n    it('does not track analytics when disabled', async () => {\r\n      const { result } = renderHook(() => \r\n        useCategoryNavigation({ enableAnalytics: false })\r\n      );\r\n\r\n      await act(async () => {\r\n        result.current.navigateToFiltered(['cat1']);\r\n        // Wait for debounce\r\n        await new Promise(resolve => setTimeout(resolve, 400));\r\n      });\r\n\r\n      expect(mockGtag).not.toHaveBeenCalled();\r\n    });\r\n  });\r\n\r\n  describe('Configuration Options', () => {\r\n    it('uses custom parameter name', async () => {\r\n      mockGet.mockReturnValue(null);\r\n      mockForEach.mockImplementation(() => {}); // No other params\r\n\r\n      const { result } = renderHook(() =>\r\n        useCategoryNavigation({ paramName: 'filters' })\r\n      );\r\n\r\n      await act(async () => {\r\n        result.current.navigateToFiltered(['cat1']);\r\n        // Wait for debounce\r\n        await new Promise(resolve => setTimeout(resolve, 400));\r\n      });\r\n\r\n      expect(mockPush).toHaveBeenCalledWith('/?filters=cat1');\r\n    });\r\n\r\n    it('uses custom base path', async () => {\r\n      mockGet.mockReturnValue(null);\r\n      mockForEach.mockImplementation(() => {}); // No other params\r\n\r\n      const { result } = renderHook(() =>\r\n        useCategoryNavigation({ basePath: '/shop' })\r\n      );\r\n\r\n      await act(async () => {\r\n        result.current.navigateToFiltered(['cat1']);\r\n        // Wait for debounce\r\n        await new Promise(resolve => setTimeout(resolve, 400));\r\n      });\r\n\r\n      expect(mockPush).toHaveBeenCalledWith('/shop?categories=cat1');\r\n    });\r\n\r\n    it('respects custom debounce delay', async () => {\r\n      jest.useFakeTimers();\r\n      mockGet.mockReturnValue(null);\r\n      mockForEach.mockImplementation(() => {}); // No other params\r\n\r\n      const { result } = renderHook(() =>\r\n        useCategoryNavigation({ debounceDelay: 100 })\r\n      );\r\n\r\n      act(() => {\r\n        result.current.navigateToFiltered(['cat1']);\r\n      });\r\n\r\n      expect(mockPush).not.toHaveBeenCalled();\r\n\r\n      act(() => {\r\n        jest.advanceTimersByTime(100);\r\n      });\r\n\r\n      expect(mockPush).toHaveBeenCalledWith('/?categories=cat1');\r\n\r\n      jest.useRealTimers();\r\n    });\r\n  });\r\n\r\n  describe('Error Handling', () => {\r\n    it('handles navigation errors gracefully', () => {\r\n      // Test that the hook doesn't crash when navigation fails\r\n      mockPush.mockImplementation(() => {\r\n        throw new Error('Navigation failed');\r\n      });\r\n\r\n      const { result } = renderHook(() =>\r\n        useCategoryNavigation()\r\n      );\r\n\r\n      // Should not throw when navigation fails\r\n      expect(() => {\r\n        result.current.navigateToFiltered(['cat1']);\r\n      }).not.toThrow();\r\n    });\r\n  });\r\n\r\n  describe('Cleanup', () => {\r\n    it('cleans up debounce timer on unmount', () => {\r\n      // This test verifies that the hook cleans up properly\r\n      // The actual cleanup is handled internally by the hook\r\n      const { unmount } = renderHook(() =>\r\n        useCategoryNavigation()\r\n      );\r\n\r\n      // Should unmount without errors\r\n      expect(() => unmount()).not.toThrow();\r\n    });\r\n  });\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["jest","mock","useRouter","fn","useSearchParams","usePathname","mockGtag","Object","defineProperty","window","value","writable","describe","mockPush","mockGet","mockForEach","beforeEach","clearAllMocks","mockReturnValue","push","get","forEach","mockClear","it","result","renderHook","useCategoryNavigation","enableAnalytics","categories","act","current","navigateToFiltered","Promise","resolve","setTimeout","expect","toHaveBeenCalledWith","navigateToHome","mockImplementation","key","callback","preserveParams","url","getCurrentUrl","toBe","isNavigating","objectContaining","event_category","event_label","not","toHaveBeenCalled","paramName","basePath","useFakeTimers","debounceDelay","advanceTimersByTime","useRealTimers","Error","toThrow","unmount"],"mappings":"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"}