{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\auth.ts"],"sourcesContent":["import NextAuth from \"next-auth\"\r\nimport Google from \"next-auth/providers/google\"\r\nimport { SupabaseAdapter } from \"./lib/integrations/supabase/supabase-adapter\"\r\n\r\n// Validación de variables de entorno requeridas\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL\r\nconst supabaseServiceRoleKey = process.env.SUPABASE_SERVICE_ROLE_KEY\r\n\r\nif (!supabaseUrl) {\r\n  throw new Error(\"NEXT_PUBLIC_SUPABASE_URL is required but not defined\")\r\n}\r\n\r\nif (!supabaseServiceRoleKey) {\r\n  throw new Error(\"SUPABASE_SERVICE_ROLE_KEY is required but not defined\")\r\n}\r\n\r\nconst nextAuth = NextAuth({\r\n  adapter: SupabaseAdapter({\r\n    url: supabaseUrl,\r\n    secret: supabaseServiceRoleKey,\r\n  }),\r\n  providers: [\r\n    Google({\r\n      clientId: process.env.AUTH_GOOGLE_ID!,\r\n      clientSecret: process.env.AUTH_GOOGLE_SECRET!,\r\n      authorization: {\r\n        params: {\r\n          prompt: \"select_account\",\r\n        },\r\n      },\r\n    }),\r\n  ],\r\n  pages: {\r\n    signIn: \"/auth/signin\",\r\n    error: \"/auth/error\",\r\n  },\r\n  callbacks: {\r\n    async jwt({ token, user, account }) {\r\n      if (account && user) {\r\n        token.accessToken = account.access_token\r\n        token.refreshToken = account.refresh_token\r\n        token.userId = user.id\r\n      }\r\n      return token\r\n    },\r\n    async session({ session, token }) {\r\n      if (token) {\r\n        session.accessToken = token.accessToken as string\r\n        session.refreshToken = token.refreshToken as string\r\n        session.user.id = token.userId as string\r\n      }\r\n      return session\r\n    },\r\n    async signIn({ user, account, profile }) {\r\n      // Permitir el sign-in para todos los usuarios de Google\r\n      if (account?.provider === \"google\") {\r\n        return true\r\n      }\r\n      return false\r\n    },\r\n  },\r\n  events: {\r\n    async signIn({ user, account, profile }) {\r\n      console.log(\"Usuario autenticado:\", user.email)\r\n    },\r\n    async signOut({ session, token }) {\r\n      console.log(\"Usuario desconectado\")\r\n    },\r\n  },\r\n  session: {\r\n    strategy: \"jwt\" as const,\r\n    maxAge: 30 * 24 * 60 * 60, // 30 días\r\n  },\r\n  jwt: {\r\n    maxAge: 30 * 24 * 60 * 60, // 30 días\r\n  },\r\n})\r\n\r\nexport const { auth, handlers, signIn, signOut } = nextAuth\r\n\r\n// Tipos TypeScript para extender la sesión\r\ndeclare module \"next-auth\" {\r\n  interface Session {\r\n    supabaseAccessToken?: string\r\n    user: {\r\n      id: string\r\n      name?: string | null\r\n      email?: string | null\r\n      image?: string | null\r\n    }\r\n  }\r\n}\r\n\r\ndeclare module \"next-auth/jwt\" {\r\n  interface JWT {\r\n    sub: string\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["auth","handlers","signIn","signOut","supabaseUrl","process","env","NEXT_PUBLIC_SUPABASE_URL","supabaseServiceRoleKey","SUPABASE_SERVICE_ROLE_KEY","Error","nextAuth","NextAuth","adapter","SupabaseAdapter","url","secret","providers","Google","clientId","AUTH_GOOGLE_ID","clientSecret","AUTH_GOOGLE_SECRET","authorization","params","prompt","pages","error","callbacks","jwt","token","user","account","accessToken","access_token","refreshToken","refresh_token","userId","id","session","profile","provider","events","console","log","email","strategy","maxAge"],"mappings":";;;;;;;;;;;QA8EeA;eAAAA;;QAAMC;eAAAA;;QAAUC;eAAAA;;QAAQC;eAAAA;;;iEA9ElB;+DACF;iCACa;;;;;;AAEhC,gDAAgD;AAChD,MAAMC,cAAcC,QAAQC,GAAG,CAACC,wBAAwB;AACxD,MAAMC,yBAAyBH,QAAQC,GAAG,CAACG,yBAAyB;AAEpE,IAAI,CAACL,aAAa;IAChB,MAAM,IAAIM,MAAM;AAClB;AAEA,IAAI,CAACF,wBAAwB;IAC3B,MAAM,IAAIE,MAAM;AAClB;AAEA,MAAMC,WAAWC,IAAAA,iBAAQ,EAAC;IACxBC,SAASC,IAAAA,gCAAe,EAAC;QACvBC,KAAKX;QACLY,QAAQR;IACV;IACAS,WAAW;QACTC,IAAAA,eAAM,EAAC;YACLC,UAAUd,QAAQC,GAAG,CAACc,cAAc;YACpCC,cAAchB,QAAQC,GAAG,CAACgB,kBAAkB;YAC5CC,eAAe;gBACbC,QAAQ;oBACNC,QAAQ;gBACV;YACF;QACF;KACD;IACDC,OAAO;QACLxB,QAAQ;QACRyB,OAAO;IACT;IACAC,WAAW;QACT,MAAMC,KAAI,EAAEC,KAAK,EAAEC,IAAI,EAAEC,OAAO,EAAE;YAChC,IAAIA,WAAWD,MAAM;gBACnBD,MAAMG,WAAW,GAAGD,QAAQE,YAAY;gBACxCJ,MAAMK,YAAY,GAAGH,QAAQI,aAAa;gBAC1CN,MAAMO,MAAM,GAAGN,KAAKO,EAAE;YACxB;YACA,OAAOR;QACT;QACA,MAAMS,SAAQ,EAAEA,OAAO,EAAET,KAAK,EAAE;YAC9B,IAAIA,OAAO;gBACTS,QAAQN,WAAW,GAAGH,MAAMG,WAAW;gBACvCM,QAAQJ,YAAY,GAAGL,MAAMK,YAAY;gBACzCI,QAAQR,IAAI,CAACO,EAAE,GAAGR,MAAMO,MAAM;YAChC;YACA,OAAOE;QACT;QACA,MAAMrC,QAAO,EAAE6B,IAAI,EAAEC,OAAO,EAAEQ,OAAO,EAAE;YACrC,wDAAwD;YACxD,IAAIR,SAASS,aAAa,UAAU;gBAClC,OAAO;YACT;YACA,OAAO;QACT;IACF;IACAC,QAAQ;QACN,MAAMxC,QAAO,EAAE6B,IAAI,EAAEC,OAAO,EAAEQ,OAAO,EAAE;YACrCG,QAAQC,GAAG,CAAC,wBAAwBb,KAAKc,KAAK;QAChD;QACA,MAAM1C,SAAQ,EAAEoC,OAAO,EAAET,KAAK,EAAE;YAC9Ba,QAAQC,GAAG,CAAC;QACd;IACF;IACAL,SAAS;QACPO,UAAU;QACVC,QAAQ,KAAK,KAAK,KAAK;IACzB;IACAlB,KAAK;QACHkB,QAAQ,KAAK,KAAK,KAAK;IACzB;AACF;AAEO,MAAM,EAAE/C,IAAI,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,OAAO,EAAE,GAAGQ"}