{"version":3,"names":["GET","request","cov_b5tbe6jd3","f","s","_logger","logger","info","LogLevel","INFO","userAgent","headers","get","referer","LogCategory","SEO","xmlContent","generateCompleteSitemapXML","_server","NextResponse","status","Date","toISOString","error","ERROR","fallbackXML","generateFallbackSitemap","baseUrl","b","process","env","NEXT_PUBLIC_SITE_URL","now","split","products","categories","Promise","all","getProductsForSitemap","getCategoriesForSitemap","xmlHeader","urlsetOpen","urls","staticPages","url","priority","changefreq","forEach","page","category","slug","updated_at","image","escapeXml","name","slice","product","images","Array","isArray","urlsetClose","finalXML","totalUrls","length","Math","min","sizeKB","round","Buffer","byteLength","supabase","_supabase","getSupabaseClient","data","from","select","eq","order","ascending","limit","warn","WARN","text","replace"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\sitemap.xml\\route.ts"],"sourcesContent":["// ===================================\r\n// PINTEYA E-COMMERCE - DYNAMIC SITEMAP.XML ROUTE\r\n// Ruta para servir sitemap.xml dinámico que reemplaza el estático\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { enhancedDynamicSitemapGenerator } from '@/lib/seo/dynamic-sitemap-generator';\r\nimport { logger, LogCategory, LogLevel } from '@/lib/enterprise/logger';\r\nimport { getSupabaseClient } from '@/lib/integrations/supabase';\r\n\r\n// ===================================\r\n// GET /sitemap.xml - Servir sitemap dinámico\r\n// ===================================\r\n\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    logger.info(LogLevel.INFO, 'Dynamic sitemap.xml requested', {\r\n      userAgent: request.headers.get('user-agent'),\r\n      referer: request.headers.get('referer')\r\n    }, LogCategory.SEO);\r\n\r\n    // Generar sitemap XML completo\r\n    const xmlContent = await generateCompleteSitemapXML();\r\n\r\n    return new NextResponse(xmlContent, {\r\n      status: 200,\r\n      headers: {\r\n        'Content-Type': 'application/xml; charset=utf-8',\r\n        'Cache-Control': 'public, max-age=3600, s-maxage=3600', // Cache por 1 hora\r\n        'X-Sitemap-Type': 'dynamic',\r\n        'X-Generated-At': new Date().toISOString(),\r\n        'X-Robots-Tag': 'noindex' // Los sitemaps no deben indexarse\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    logger.error(LogLevel.ERROR, 'Dynamic sitemap.xml generation error', error as Error, LogCategory.SEO);\r\n\r\n    // Fallback a sitemap básico en caso de error\r\n    const fallbackXML = generateFallbackSitemap();\r\n    \r\n    return new NextResponse(fallbackXML, {\r\n      status: 200,\r\n      headers: {\r\n        'Content-Type': 'application/xml; charset=utf-8',\r\n        'Cache-Control': 'public, max-age=300', // Cache más corto para fallback\r\n        'X-Sitemap-Type': 'fallback',\r\n        'X-Error': 'true'\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n// ===================================\r\n// GENERACIÓN DE SITEMAP COMPLETO\r\n// ===================================\r\n\r\nasync function generateCompleteSitemapXML(): Promise<string> {\r\n  const baseUrl = process.env.NEXT_PUBLIC_SITE_URL || 'https://pinteya-ecommerce.vercel.app';\r\n  const now = new Date().toISOString().split('T')[0];\r\n\r\n  // Obtener datos dinámicos\r\n  const [products, categories] = await Promise.all([\r\n    getProductsForSitemap(),\r\n    getCategoriesForSitemap()\r\n  ]);\r\n\r\n  const xmlHeader = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n';\r\n  const urlsetOpen = '<urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\" xmlns:image=\"http://www.google.com/schemas/sitemap-image/1.1\">\\n';\r\n\r\n  let urls = '';\r\n\r\n  // Páginas estáticas principales\r\n  const staticPages = [\r\n    { url: '/', priority: '1.0', changefreq: 'daily' },\r\n    { url: '/shop', priority: '0.9', changefreq: 'daily' },\r\n    { url: '/about', priority: '0.6', changefreq: 'monthly' },\r\n    { url: '/contact', priority: '0.6', changefreq: 'monthly' },\r\n    { url: '/help', priority: '0.6', changefreq: 'monthly' },\r\n    { url: '/search', priority: '0.5', changefreq: 'weekly' }\r\n  ];\r\n\r\n  staticPages.forEach(page => {\r\n    urls += `  <url>\\n`;\r\n    urls += `    <loc>${baseUrl}${page.url}</loc>\\n`;\r\n    urls += `    <lastmod>${now}</lastmod>\\n`;\r\n    urls += `    <changefreq>${page.changefreq}</changefreq>\\n`;\r\n    urls += `    <priority>${page.priority}</priority>\\n`;\r\n    urls += `  </url>\\n`;\r\n  });\r\n\r\n  // Páginas de categorías\r\n  categories.forEach(category => {\r\n    urls += `  <url>\\n`;\r\n    urls += `    <loc>${baseUrl}/shop?category=${category.slug}</loc>\\n`;\r\n    urls += `    <lastmod>${category.updated_at || now}</lastmod>\\n`;\r\n    urls += `    <changefreq>weekly</changefreq>\\n`;\r\n    urls += `    <priority>0.8</priority>\\n`;\r\n    \r\n    // Agregar imagen de categoría si existe\r\n    if (category.image) {\r\n      urls += `    <image:image>\\n`;\r\n      urls += `      <image:loc>${baseUrl}${category.image}</image:loc>\\n`;\r\n      urls += `      <image:caption>${escapeXml(category.name)}</image:caption>\\n`;\r\n      urls += `      <image:title>${escapeXml(category.name)}</image:title>\\n`;\r\n      urls += `    </image:image>\\n`;\r\n    }\r\n    \r\n    urls += `  </url>\\n`;\r\n  });\r\n\r\n  // Páginas de productos (limitamos a los más recientes para evitar sitemaps muy grandes)\r\n  products.slice(0, 1000).forEach(product => {\r\n    urls += `  <url>\\n`;\r\n    urls += `    <loc>${baseUrl}/shop-details/${product.slug}</loc>\\n`;\r\n    urls += `    <lastmod>${product.updated_at || now}</lastmod>\\n`;\r\n    urls += `    <changefreq>weekly</changefreq>\\n`;\r\n    urls += `    <priority>0.7</priority>\\n`;\r\n    \r\n    // Agregar imágenes del producto (máximo 3)\r\n    if (product.images && Array.isArray(product.images)) {\r\n      product.images.slice(0, 3).forEach((image: string) => {\r\n        if (image) {\r\n          urls += `    <image:image>\\n`;\r\n          urls += `      <image:loc>${baseUrl}${image}</image:loc>\\n`;\r\n          urls += `      <image:caption>${escapeXml(product.name)}</image:caption>\\n`;\r\n          urls += `      <image:title>${escapeXml(product.name)}</image:title>\\n`;\r\n          urls += `    </image:image>\\n`;\r\n        }\r\n      });\r\n    }\r\n    \r\n    urls += `  </url>\\n`;\r\n  });\r\n\r\n  const urlsetClose = '</urlset>';\r\n\r\n  const finalXML = xmlHeader + urlsetOpen + urls + urlsetClose;\r\n\r\n  // Log estadísticas\r\n  logger.info(LogLevel.INFO, 'Dynamic sitemap.xml generated', {\r\n    totalUrls: staticPages.length + categories.length + Math.min(products.length, 1000),\r\n    staticPages: staticPages.length,\r\n    categories: categories.length,\r\n    products: Math.min(products.length, 1000),\r\n    sizeKB: Math.round(Buffer.byteLength(finalXML, 'utf8') / 1024)\r\n  }, LogCategory.SEO);\r\n\r\n  return finalXML;\r\n}\r\n\r\n// ===================================\r\n// OBTENER DATOS DE LA BASE DE DATOS\r\n// ===================================\r\n\r\nasync function getProductsForSitemap() {\r\n  try {\r\n    const supabase = getSupabaseClient();\r\n    if (!supabase) {return [];}\r\n\r\n    const { data: products, error } = await supabase\r\n      .from('products')\r\n      .select('slug, name, updated_at, images')\r\n      .eq('is_active', true)\r\n      .order('updated_at', { ascending: false })\r\n      .limit(1000); // Limitar para performance\r\n\r\n    if (error) {\r\n      logger.warn(LogLevel.WARN, 'Error fetching products for sitemap', {}, LogCategory.SEO);\r\n      return [];\r\n    }\r\n\r\n    return products || [];\r\n\r\n  } catch (error) {\r\n    logger.error(LogLevel.ERROR, 'Error in getProductsForSitemap', error as Error, LogCategory.SEO);\r\n    return [];\r\n  }\r\n}\r\n\r\nasync function getCategoriesForSitemap() {\r\n  try {\r\n    const supabase = getSupabaseClient();\r\n    if (!supabase) {return [];}\r\n\r\n    const { data: categories, error } = await supabase\r\n      .from('categories')\r\n      .select('slug, name, updated_at, image')\r\n      .order('name');\r\n\r\n    if (error) {\r\n      logger.warn(LogLevel.WARN, 'Error fetching categories for sitemap', {}, LogCategory.SEO);\r\n      return [];\r\n    }\r\n\r\n    return categories || [];\r\n\r\n  } catch (error) {\r\n    logger.error(LogLevel.ERROR, 'Error in getCategoriesForSitemap', error as Error, LogCategory.SEO);\r\n    return [];\r\n  }\r\n}\r\n\r\n// ===================================\r\n// UTILIDADES\r\n// ===================================\r\n\r\nfunction escapeXml(text: string): string {\r\n  return text\r\n    .replace(/&/g, '&amp;')\r\n    .replace(/</g, '&lt;')\r\n    .replace(/>/g, '&gt;')\r\n    .replace(/\"/g, '&quot;')\r\n    .replace(/'/g, '&#39;');\r\n}\r\n\r\nfunction generateFallbackSitemap(): string {\r\n  const baseUrl = process.env.NEXT_PUBLIC_SITE_URL || 'https://pinteya-ecommerce.vercel.app';\r\n  const now = new Date().toISOString().split('T')[0];\r\n\r\n  return `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">\r\n  <url>\r\n    <loc>${baseUrl}/</loc>\r\n    <lastmod>${now}</lastmod>\r\n    <changefreq>daily</changefreq>\r\n    <priority>1.0</priority>\r\n  </url>\r\n  <url>\r\n    <loc>${baseUrl}/shop</loc>\r\n    <lastmod>${now}</lastmod>\r\n    <changefreq>daily</changefreq>\r\n    <priority>0.9</priority>\r\n  </url>\r\n  <url>\r\n    <loc>${baseUrl}/about</loc>\r\n    <lastmod>${now}</lastmod>\r\n    <changefreq>monthly</changefreq>\r\n    <priority>0.6</priority>\r\n  </url>\r\n  <url>\r\n    <loc>${baseUrl}/contact</loc>\r\n    <lastmod>${now}</lastmod>\r\n    <changefreq>monthly</changefreq>\r\n    <priority>0.6</priority>\r\n  </url>\r\n</urlset>`;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}