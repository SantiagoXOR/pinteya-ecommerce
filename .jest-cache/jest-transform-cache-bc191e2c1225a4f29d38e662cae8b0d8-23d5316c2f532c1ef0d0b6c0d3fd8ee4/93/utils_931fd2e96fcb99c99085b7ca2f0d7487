f045a52e12a261f7144cbfc93f99d25a
"use strict";

/* istanbul ignore next */
function cov_1bi93gbm3w() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\utils.ts";
  var hash = "96bed402007bc39285bd3e1826cb349d61681707";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\utils.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 18
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 30
        }
      },
      "6": {
        start: {
          line: 19,
          column: 14
        },
        end: {
          line: 19,
          column: 29
        }
      },
      "7": {
        start: {
          line: 20,
          column: 23
        },
        end: {
          line: 20,
          column: 48
        }
      },
      "8": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 64
        }
      },
      "9": {
        start: {
          line: 25,
          column: 22
        },
        end: {
          line: 25,
          column: 78
        }
      },
      "10": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 29,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 14
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 26
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "cn",
        decl: {
          start: {
            line: 21,
            column: 9
          },
          end: {
            line: 21,
            column: 11
          }
        },
        loc: {
          start: {
            line: 21,
            column: 23
          },
          end: {
            line: 23,
            column: 1
          }
        },
        line: 21
      },
      "4": {
        name: "formatCurrency",
        decl: {
          start: {
            line: 24,
            column: 9
          },
          end: {
            line: 24,
            column: 23
          }
        },
        loc: {
          start: {
            line: 24,
            column: 32
          },
          end: {
            line: 30,
            column: 1
          }
        },
        line: 24
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 25,
            column: 22
          },
          end: {
            line: 25,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 25,
            column: 51
          },
          end: {
            line: 25,
            column: 69
          }
        }, {
          start: {
            line: 25,
            column: 72
          },
          end: {
            line: 25,
            column: 78
          }
        }],
        line: 25
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\utils.ts"],
      sourcesContent: ["import { clsx, type ClassValue } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n\r\nexport function formatCurrency(amount: number | string): string {\r\n  const numAmount = typeof amount === 'string' ? parseFloat(amount) : amount;\r\n  return new Intl.NumberFormat('es-AR', {\r\n    style: 'currency',\r\n    currency: 'ARS',\r\n  }).format(numAmount);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["cn", "formatCurrency", "inputs", "twMerge", "clsx", "amount", "numAmount", "parseFloat", "Intl", "NumberFormat", "style", "currency", "format"],
      mappings: ";;;;;;;;;;;QAGgBA;eAAAA;;QAIAC;eAAAA;;;sBAPsB;+BACd;AAEjB,SAASD,GAAG,GAAGE,MAAoB;IACxC,OAAOC,IAAAA,sBAAO,EAACC,IAAAA,UAAI,EAACF;AACtB;AAEO,SAASD,eAAeI,MAAuB;IACpD,MAAMC,YAAY,OAAOD,WAAW,WAAWE,WAAWF,UAAUA;IACpE,OAAO,IAAIG,KAAKC,YAAY,CAAC,SAAS;QACpCC,OAAO;QACPC,UAAU;IACZ,GAAGC,MAAM,CAACN;AACZ"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "96bed402007bc39285bd3e1826cb349d61681707"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1bi93gbm3w = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1bi93gbm3w();
cov_1bi93gbm3w().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1bi93gbm3w().f[0]++;
  cov_1bi93gbm3w().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1bi93gbm3w().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1bi93gbm3w().s[3]++;
_export(exports, {
  get cn() {
    /* istanbul ignore next */
    cov_1bi93gbm3w().f[1]++;
    cov_1bi93gbm3w().s[4]++;
    return cn;
  },
  get formatCurrency() {
    /* istanbul ignore next */
    cov_1bi93gbm3w().f[2]++;
    cov_1bi93gbm3w().s[5]++;
    return formatCurrency;
  }
});
const _clsx =
/* istanbul ignore next */
(cov_1bi93gbm3w().s[6]++, require("clsx"));
const _tailwindmerge =
/* istanbul ignore next */
(cov_1bi93gbm3w().s[7]++, require("tailwind-merge"));
function cn(...inputs) {
  /* istanbul ignore next */
  cov_1bi93gbm3w().f[3]++;
  cov_1bi93gbm3w().s[8]++;
  return (0, _tailwindmerge.twMerge)((0, _clsx.clsx)(inputs));
}
function formatCurrency(amount) {
  /* istanbul ignore next */
  cov_1bi93gbm3w().f[4]++;
  const numAmount =
  /* istanbul ignore next */
  (cov_1bi93gbm3w().s[9]++, typeof amount === 'string' ?
  /* istanbul ignore next */
  (cov_1bi93gbm3w().b[0][0]++, parseFloat(amount)) :
  /* istanbul ignore next */
  (cov_1bi93gbm3w().b[0][1]++, amount));
  /* istanbul ignore next */
  cov_1bi93gbm3w().s[10]++;
  return new Intl.NumberFormat('es-AR', {
    style: 'currency',
    currency: 'ARS'
  }).format(numAmount);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjbiIsImNvdl8xYmk5M2dibTN3IiwiZiIsInMiLCJmb3JtYXRDdXJyZW5jeSIsImlucHV0cyIsIl90YWlsd2luZG1lcmdlIiwidHdNZXJnZSIsIl9jbHN4IiwiY2xzeCIsImFtb3VudCIsIm51bUFtb3VudCIsImIiLCJwYXJzZUZsb2F0IiwiSW50bCIsIk51bWJlckZvcm1hdCIsInN0eWxlIiwiY3VycmVuY3kiLCJmb3JtYXQiXSwic291cmNlcyI6WyJDOlxcVXNlcnNcXG1hcnRpXFxEZXNrdG9wXFxERVNBUlJPTExPU1dcXEJPSUxFUlBMQVRURSBFLUNPTU1FUkNFXFxzcmNcXGxpYlxcdXRpbHMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY2xzeCwgdHlwZSBDbGFzc1ZhbHVlIH0gZnJvbSBcImNsc3hcIlxyXG5pbXBvcnQgeyB0d01lcmdlIH0gZnJvbSBcInRhaWx3aW5kLW1lcmdlXCJcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBjbiguLi5pbnB1dHM6IENsYXNzVmFsdWVbXSkge1xyXG4gIHJldHVybiB0d01lcmdlKGNsc3goaW5wdXRzKSlcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGZvcm1hdEN1cnJlbmN5KGFtb3VudDogbnVtYmVyIHwgc3RyaW5nKTogc3RyaW5nIHtcclxuICBjb25zdCBudW1BbW91bnQgPSB0eXBlb2YgYW1vdW50ID09PSAnc3RyaW5nJyA/IHBhcnNlRmxvYXQoYW1vdW50KSA6IGFtb3VudDtcclxuICByZXR1cm4gbmV3IEludGwuTnVtYmVyRm9ybWF0KCdlcy1BUicsIHtcclxuICAgIHN0eWxlOiAnY3VycmVuY3knLFxyXG4gICAgY3VycmVuY3k6ICdBUlMnLFxyXG4gIH0pLmZvcm1hdChudW1BbW91bnQpO1xyXG59XHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztNQUdnQkEsR0FBQTtJQUFBO0lBQUFDLGNBQUEsR0FBQUMsQ0FBQTtJQUFBRCxjQUFBLEdBQUFFLENBQUE7V0FBQUgsRUFBQTs7TUFJQUksZUFBQTtJQUFBO0lBQUFILGNBQUEsR0FBQUMsQ0FBQTtJQUFBRCxjQUFBLEdBQUFFLENBQUE7V0FBQUMsY0FBQTs7Ozs7a0NBUHNCOzs7a0NBQ2Q7QUFFakIsU0FBU0osR0FBRyxHQUFHSyxNQUFvQjtFQUFBO0VBQUFKLGNBQUEsR0FBQUMsQ0FBQTtFQUFBRCxjQUFBLEdBQUFFLENBQUE7RUFDeEMsT0FBTyxJQUFBRyxjQUFBLENBQUFDLE9BQU8sRUFBQyxJQUFBQyxLQUFBLENBQUFDLElBQUksRUFBQ0osTUFBQTtBQUN0QjtBQUVPLFNBQVNELGVBQWVNLE1BQXVCO0VBQUE7RUFBQVQsY0FBQSxHQUFBQyxDQUFBO0VBQ3BELE1BQU1TLFNBQUE7RUFBQTtFQUFBLENBQUFWLGNBQUEsR0FBQUUsQ0FBQSxPQUFZLE9BQU9PLE1BQUEsS0FBVztFQUFBO0VBQUEsQ0FBQVQsY0FBQSxHQUFBVyxDQUFBLFVBQVdDLFVBQUEsQ0FBV0gsTUFBQTtFQUFBO0VBQUEsQ0FBQVQsY0FBQSxHQUFBVyxDQUFBLFVBQVVGLE1BQUE7RUFBQTtFQUFBVCxjQUFBLEdBQUFFLENBQUE7RUFDcEUsT0FBTyxJQUFJVyxJQUFBLENBQUtDLFlBQVksQ0FBQyxTQUFTO0lBQ3BDQyxLQUFBLEVBQU87SUFDUEMsUUFBQSxFQUFVO0VBQ1osR0FBR0MsTUFBTSxDQUFDUCxTQUFBO0FBQ1oiLCJpZ25vcmVMaXN0IjpbXX0=