{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\utils\\product-utils.ts"],"sourcesContent":["// Utilidades para manejo de productos\r\n\r\nexport interface ProductType {\r\n  id: string;\r\n  name: string;\r\n  hasColorSelector: boolean;\r\n  capacityUnit: 'litros' | 'kg' | 'unidades' | 'metros';\r\n  defaultCapacities: string[];\r\n  category: string;\r\n  // Nuevos selectores específicos\r\n  hasGrainSelector?: boolean; // Para lijas\r\n  hasSizeSelector?: boolean;  // Para pinceles\r\n  hasWidthSelector?: boolean; // Para cintas de papel\r\n  grainOptions?: string[];    // Opciones de grano para lijas\r\n  sizeOptions?: string[];     // Opciones de tamaño para pinceles\r\n  widthOptions?: string[];    // Opciones de ancho para cintas\r\n  // Configuración de colores permitidos\r\n  allowedColorCategories?: string[]; // Categorías de colores permitidas para este tipo de producto\r\n}\r\n\r\n// Configuración de tipos de productos\r\nexport const PRODUCT_TYPES: ProductType[] = [\r\n  {\r\n    id: 'pinturas-latex',\r\n    name: 'Pinturas Látex',\r\n    hasColorSelector: true,\r\n    capacityUnit: 'litros',\r\n    defaultCapacities: ['1L', '4L', '10L', '20L'],\r\n    category: 'pinturas',\r\n    allowedColorCategories: ['Neutros', 'Cálidos', 'Fríos', 'Tierras'] // Látex tiene todos los colores generales\r\n  },\r\n  {\r\n    id: 'pinturas-esmalte',\r\n    name: 'Pinturas Esmalte',\r\n    hasColorSelector: true,\r\n    capacityUnit: 'litros',\r\n    defaultCapacities: ['1L', '4L', '10L', '20L'],\r\n    category: 'pinturas',\r\n    allowedColorCategories: ['Neutros', 'Cálidos', 'Fríos', 'Tierras', 'Sintético'] // Esmalte sintético incluye más colores\r\n  },\r\n  {\r\n    id: 'impregnante-madera',\r\n    name: 'Impregnante para Madera',\r\n    hasColorSelector: true,\r\n    capacityUnit: 'litros',\r\n    defaultCapacities: ['1L', '4L', '10L'],\r\n    category: 'protectores',\r\n    allowedColorCategories: ['Madera'] // Solo colores de madera\r\n  },\r\n  {\r\n    id: 'poximix',\r\n    name: 'Poximix',\r\n    hasColorSelector: false, // Solo viene en gris\r\n    capacityUnit: 'kg',\r\n    defaultCapacities: ['5kg', '10kg', '25kg'],\r\n    category: 'adhesivos'\r\n  },\r\n  {\r\n    id: 'lijas',\r\n    name: 'Lijas',\r\n    hasColorSelector: false,\r\n    capacityUnit: 'unidades',\r\n    defaultCapacities: ['1 unidad', '5 unidades', '10 unidades'],\r\n    category: 'herramientas',\r\n    hasGrainSelector: true,\r\n    grainOptions: ['80', '120', '150', '220', '320', '400', '600', '800']\r\n  },\r\n  {\r\n    id: 'bandejas',\r\n    name: 'Bandejas',\r\n    hasColorSelector: false,\r\n    capacityUnit: 'unidades',\r\n    defaultCapacities: ['1 unidad'],\r\n    category: 'accesorios'\r\n  },\r\n  {\r\n    id: 'pinceles',\r\n    name: 'Pinceles',\r\n    hasColorSelector: false,\r\n    capacityUnit: 'unidades',\r\n    defaultCapacities: ['1 unidad'],\r\n    category: 'herramientas',\r\n    hasSizeSelector: true,\r\n    sizeOptions: ['1/2\"', '1\"', '1 1/2\"', '2\"', '2 1/2\"', '3\"', '4\"']\r\n  },\r\n  {\r\n    id: 'rodillos',\r\n    name: 'Rodillos',\r\n    hasColorSelector: false,\r\n    capacityUnit: 'unidades',\r\n    defaultCapacities: ['1 unidad'],\r\n    category: 'herramientas'\r\n  },\r\n  {\r\n    id: 'cintas-papel',\r\n    name: 'Cintas de Papel',\r\n    hasColorSelector: false,\r\n    capacityUnit: 'metros',\r\n    defaultCapacities: ['25m', '50m'],\r\n    category: 'accesorios',\r\n    hasWidthSelector: true,\r\n    widthOptions: ['12mm', '18mm', '24mm', '36mm', '48mm', '72mm']\r\n  }\r\n];\r\n\r\n// Función para detectar el tipo de producto basado en nombre y categoría\r\nexport const detectProductType = (productName: string, category?: string): ProductType => {\r\n  const name = productName.toLowerCase();\r\n  \r\n  // Detección específica por nombre\r\n  if (name.includes('poximix')) {\r\n    return PRODUCT_TYPES.find(type => type.id === 'poximix')!;\r\n  }\r\n  \r\n  // Detección de impregnantes para madera (como Danzke)\r\n  if (name.includes('impregnante') || name.includes('danzke') || \r\n      (name.includes('protector') && name.includes('madera'))) {\r\n    return PRODUCT_TYPES.find(type => type.id === 'impregnante-madera')!;\r\n  }\r\n  \r\n  // Detección específica para Sintético Converlux\r\n  if (name.includes('converlux') || name.includes('sintético') || name.includes('sintetico')) {\r\n    return PRODUCT_TYPES.find(type => type.id === 'pinturas-esmalte')!;\r\n  }\r\n  \r\n  // Detección de productos sintéticos (esmaltes, converlux, etc.)\r\n  if (name.includes('esmalte') || name.includes('sintetico') || name.includes('sintético') ||\r\n      name.includes('converlux') || name.includes('convertidor') || \r\n      (name.includes('metal') && name.includes('madera'))) {\r\n    return PRODUCT_TYPES.find(type => type.id === 'pinturas-esmalte')!;\r\n  }\r\n  \r\n  // Detección de pinturas látex (recuplast, interior, etc.)\r\n  if (name.includes('latex') || name.includes('látex') || name.includes('recuplast') ||\r\n      name.includes('interior') || name.includes('exterior') || name.includes('acrilico') ||\r\n      name.includes('acrílico')) {\r\n    return PRODUCT_TYPES.find(type => type.id === 'pinturas-latex')!;\r\n  }\r\n  \r\n  if (name.includes('lija')) {\r\n    return PRODUCT_TYPES.find(type => type.id === 'lijas')!;\r\n  }\r\n  \r\n  if (name.includes('bandeja')) {\r\n    return PRODUCT_TYPES.find(type => type.id === 'bandejas')!;\r\n  }\r\n  \r\n  if (name.includes('pincel')) {\r\n    return PRODUCT_TYPES.find(type => type.id === 'pinceles')!;\r\n  }\r\n  \r\n  if (name.includes('rodillo')) {\r\n    return PRODUCT_TYPES.find(type => type.id === 'rodillos')!;\r\n  }\r\n  \r\n  if (name.includes('cinta') && (name.includes('papel') || name.includes('enmascarar'))) {\r\n    return PRODUCT_TYPES.find(type => type.id === 'cintas-papel')!;\r\n  }\r\n  \r\n  // Detección por categoría\r\n  if (category) {\r\n    const cat = category.toLowerCase();\r\n    \r\n    if (cat.includes('pintura') || cat.includes('latex') || cat.includes('esmalte')) {\r\n      // Distinguir entre esmalte sintético y látex\r\n      if (name.includes('esmalte') || name.includes('sintetico') || name.includes('sintético') ||\r\n          name.includes('converlux')) {\r\n        return PRODUCT_TYPES.find(type => type.id === 'pinturas-esmalte')!;\r\n      }\r\n      return PRODUCT_TYPES.find(type => type.id === 'pinturas-latex')!;\r\n    }\r\n    \r\n    if (cat.includes('protector') || cat.includes('impregnante')) {\r\n      return PRODUCT_TYPES.find(type => type.id === 'impregnante-madera')!;\r\n    }\r\n    \r\n    if (cat.includes('adhesivo') || cat.includes('pegamento')) {\r\n      return PRODUCT_TYPES.find(type => type.id === 'poximix')!;\r\n    }\r\n    \r\n    if (cat.includes('herramienta')) {\r\n      return PRODUCT_TYPES.find(type => type.id === 'pinceles')!;\r\n    }\r\n    \r\n    if (cat.includes('accesorio')) {\r\n      return PRODUCT_TYPES.find(type => type.id === 'bandejas')!;\r\n    }\r\n  }\r\n  \r\n  // Por defecto, asumir que es pintura látex\r\n  return PRODUCT_TYPES.find(type => type.id === 'pinturas-latex')!;\r\n};\r\n\r\n// Función para obtener capacidades formateadas según la unidad\r\nexport const formatCapacity = (capacity: string, unit: string): string => {\r\n  // Si la capacidad es \"Sin especificar\", devolverla tal como está\r\n  if (capacity === 'Sin especificar') {\r\n    return capacity;\r\n  }\r\n  \r\n  switch (unit) {\r\n    case 'litros':\r\n      // Verificar si ya termina con 'L' (mayúscula) o 'l' (minúscula)\r\n      if (capacity.endsWith('L') || capacity.endsWith('l')) {\r\n        // Si termina con 'l' minúscula, convertir a 'L' mayúscula\r\n        return capacity.endsWith('l') ? capacity.slice(0, -1) + 'L' : capacity;\r\n      }\r\n      return `${capacity}L`;\r\n    case 'kg':\r\n      return capacity.endsWith('kg') ? capacity : `${capacity}kg`;\r\n    case 'metros':\r\n      return capacity.endsWith('m') ? capacity : `${capacity}m`;\r\n    case 'unidades':\r\n      return capacity.includes('unidad') ? capacity : `${capacity} unidad${capacity !== '1' ? 'es' : ''}`;\r\n    default:\r\n      return capacity;\r\n  }\r\n};\r\n\r\n// Función para obtener el color por defecto según el tipo de producto\r\nexport const getDefaultColor = (productType: ProductType): string => {\r\n  if (!productType.hasColorSelector) {\r\n    // Productos sin selector de color tienen un color fijo\r\n    if (productType.id === 'poximix') return 'gris';\r\n    return 'natural';\r\n  }\r\n  \r\n  return 'blanco-puro'; // Color por defecto para productos con selector\r\n};"],"names":["PRODUCT_TYPES","detectProductType","formatCapacity","getDefaultColor","id","name","hasColorSelector","capacityUnit","defaultCapacities","category","allowedColorCategories","hasGrainSelector","grainOptions","hasSizeSelector","sizeOptions","hasWidthSelector","widthOptions","productName","toLowerCase","includes","find","type","cat","capacity","unit","endsWith","slice","productType"],"mappings":"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"}