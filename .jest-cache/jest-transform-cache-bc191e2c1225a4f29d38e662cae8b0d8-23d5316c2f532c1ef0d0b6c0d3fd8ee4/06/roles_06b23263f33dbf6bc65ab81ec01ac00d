89821ef813e5158b8bf71a593ad62d66
'use client';
"use strict";

/* istanbul ignore next */
function cov_trmbbyrn3() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\auth\\roles.ts";
  var hash = "6a56f3e246de29ed41bd6a70a5888936b55fe35a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\auth\\roles.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 43,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 32
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 32
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 27
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 30
        }
      },
      "8": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 29
        }
      },
      "9": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 32
        }
      },
      "10": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 29
        }
      },
      "11": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 30
        }
      },
      "12": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 27
        }
      },
      "13": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 34
        }
      },
      "14": {
        start: {
          line: 44,
          column: 25
        },
        end: {
          line: 103,
          column: 1
        }
      },
      "15": {
        start: {
          line: 104,
          column: 25
        },
        end: {
          line: 140,
          column: 1
        }
      },
      "16": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 145,
          column: 9
        }
      },
      "17": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 144,
          column: 53
        }
      },
      "18": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 146,
          column: 36
        }
      },
      "19": {
        start: {
          line: 151,
          column: 32
        },
        end: {
          line: 151,
          column: 58
        }
      },
      "20": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 152,
          column: 52
        }
      },
      "21": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 157,
          column: 89
        }
      },
      "22": {
        start: {
          line: 157,
          column: 47
        },
        end: {
          line: 157,
          column: 87
        }
      },
      "23": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 162,
          column: 88
        }
      },
      "24": {
        start: {
          line: 162,
          column: 46
        },
        end: {
          line: 162,
          column: 86
        }
      },
      "25": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 167,
          column: 44
        }
      },
      "26": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 172,
          column: 56
        }
      },
      "27": {
        start: {
          line: 177,
          column: 26
        },
        end: {
          line: 183,
          column: 9
        }
      },
      "28": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 184,
          column: 51
        }
      },
      "29": {
        start: {
          line: 189,
          column: 25
        },
        end: {
          line: 195,
          column: 9
        }
      },
      "30": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 199,
          column: 9
        }
      },
      "31": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 198,
          column: 28
        }
      },
      "32": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 207,
          column: 9
        }
      },
      "33": {
        start: {
          line: 202,
          column: 12
        },
        end: {
          line: 206,
          column: 14
        }
      },
      "34": {
        start: {
          line: 209,
          column: 8
        },
        end: {
          line: 214,
          column: 9
        }
      },
      "35": {
        start: {
          line: 210,
          column: 12
        },
        end: {
          line: 213,
          column: 14
        }
      },
      "36": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 216,
          column: 18
        }
      },
      "37": {
        start: {
          line: 221,
          column: 32
        },
        end: {
          line: 221,
          column: 69
        }
      },
      "38": {
        start: {
          line: 222,
          column: 8
        },
        end: {
          line: 222,
          column: 52
        }
      },
      "39": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 227,
          column: 46
        }
      },
      "40": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 232,
          column: 45
        }
      },
      "41": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 242,
          column: 11
        }
      },
      "42": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 240,
          column: 13
        }
      },
      "43": {
        start: {
          line: 239,
          column: 16
        },
        end: {
          line: 239,
          column: 28
        }
      },
      "44": {
        start: {
          line: 241,
          column: 12
        },
        end: {
          line: 241,
          column: 75
        }
      },
      "45": {
        start: {
          line: 245,
          column: 20
        },
        end: {
          line: 245,
          column: 45
        }
      },
      "46": {
        start: {
          line: 246,
          column: 22
        },
        end: {
          line: 246,
          column: 93
        }
      },
      "47": {
        start: {
          line: 246,
          column: 46
        },
        end: {
          line: 246,
          column: 93
        }
      },
      "48": {
        start: {
          line: 247,
          column: 23
        },
        end: {
          line: 247,
          column: 97
        }
      },
      "49": {
        start: {
          line: 247,
          column: 48
        },
        end: {
          line: 247,
          column: 97
        }
      },
      "50": {
        start: {
          line: 248,
          column: 25
        },
        end: {
          line: 248,
          column: 101
        }
      },
      "51": {
        start: {
          line: 248,
          column: 50
        },
        end: {
          line: 248,
          column: 101
        }
      },
      "52": {
        start: {
          line: 249,
          column: 23
        },
        end: {
          line: 249,
          column: 63
        }
      },
      "53": {
        start: {
          line: 249,
          column: 31
        },
        end: {
          line: 249,
          column: 63
        }
      },
      "54": {
        start: {
          line: 250,
          column: 22
        },
        end: {
          line: 250,
          column: 101
        }
      },
      "55": {
        start: {
          line: 250,
          column: 50
        },
        end: {
          line: 250,
          column: 101
        }
      },
      "56": {
        start: {
          line: 252,
          column: 4
        },
        end: {
          line: 259,
          column: 6
        }
      },
      "57": {
        start: {
          line: 253,
          column: 37
        },
        end: {
          line: 253,
          column: 72
        }
      },
      "58": {
        start: {
          line: 254,
          column: 39
        },
        end: {
          line: 254,
          column: 76
        }
      },
      "59": {
        start: {
          line: 255,
          column: 41
        },
        end: {
          line: 255,
          column: 80
        }
      },
      "60": {
        start: {
          line: 256,
          column: 28
        },
        end: {
          line: 256,
          column: 52
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 28
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 28
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 23
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 26
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 25
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        loc: {
          start: {
            line: 28,
            column: 28
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 28
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        loc: {
          start: {
            line: 31,
            column: 25
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 31
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        },
        loc: {
          start: {
            line: 34,
            column: 26
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 34
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        loc: {
          start: {
            line: 37,
            column: 23
          },
          end: {
            line: 39,
            column: 5
          }
        },
        line: 37
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        loc: {
          start: {
            line: 40,
            column: 30
          },
          end: {
            line: 42,
            column: 5
          }
        },
        line: 40
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 142,
            column: 4
          },
          end: {
            line: 142,
            column: 5
          }
        },
        loc: {
          start: {
            line: 142,
            column: 25
          },
          end: {
            line: 147,
            column: 5
          }
        },
        line: 142
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 150,
            column: 6
          },
          end: {
            line: 150,
            column: 7
          }
        },
        loc: {
          start: {
            line: 150,
            column: 42
          },
          end: {
            line: 153,
            column: 5
          }
        },
        line: 150
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 156,
            column: 6
          },
          end: {
            line: 156,
            column: 7
          }
        },
        loc: {
          start: {
            line: 156,
            column: 44
          },
          end: {
            line: 158,
            column: 5
          }
        },
        line: 156
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 157,
            column: 33
          },
          end: {
            line: 157,
            column: 34
          }
        },
        loc: {
          start: {
            line: 157,
            column: 47
          },
          end: {
            line: 157,
            column: 87
          }
        },
        line: 157
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 161,
            column: 6
          },
          end: {
            line: 161,
            column: 7
          }
        },
        loc: {
          start: {
            line: 161,
            column: 46
          },
          end: {
            line: 163,
            column: 5
          }
        },
        line: 161
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 162,
            column: 32
          },
          end: {
            line: 162,
            column: 33
          }
        },
        loc: {
          start: {
            line: 162,
            column: 46
          },
          end: {
            line: 162,
            column: 86
          }
        },
        line: 162
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 166,
            column: 6
          },
          end: {
            line: 166,
            column: 7
          }
        },
        loc: {
          start: {
            line: 166,
            column: 31
          },
          end: {
            line: 168,
            column: 5
          }
        },
        line: 166
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 171,
            column: 6
          },
          end: {
            line: 171,
            column: 7
          }
        },
        loc: {
          start: {
            line: 171,
            column: 27
          },
          end: {
            line: 173,
            column: 5
          }
        },
        line: 171
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 176,
            column: 6
          },
          end: {
            line: 176,
            column: 7
          }
        },
        loc: {
          start: {
            line: 176,
            column: 33
          },
          end: {
            line: 185,
            column: 5
          }
        },
        line: 176
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 188,
            column: 6
          },
          end: {
            line: 188,
            column: 7
          }
        },
        loc: {
          start: {
            line: 188,
            column: 42
          },
          end: {
            line: 217,
            column: 5
          }
        },
        line: 188
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 220,
            column: 6
          },
          end: {
            line: 220,
            column: 7
          }
        },
        loc: {
          start: {
            line: 220,
            column: 46
          },
          end: {
            line: 223,
            column: 5
          }
        },
        line: 220
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 226,
            column: 6
          },
          end: {
            line: 226,
            column: 7
          }
        },
        loc: {
          start: {
            line: 226,
            column: 30
          },
          end: {
            line: 228,
            column: 5
          }
        },
        line: 226
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 231,
            column: 6
          },
          end: {
            line: 231,
            column: 7
          }
        },
        loc: {
          start: {
            line: 231,
            column: 20
          },
          end: {
            line: 233,
            column: 5
          }
        },
        line: 231
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 236,
            column: 6
          },
          end: {
            line: 236,
            column: 7
          }
        },
        loc: {
          start: {
            line: 236,
            column: 43
          },
          end: {
            line: 243,
            column: 5
          }
        },
        line: 236
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 237,
            column: 28
          },
          end: {
            line: 237,
            column: 29
          }
        },
        loc: {
          start: {
            line: 237,
            column: 36
          },
          end: {
            line: 242,
            column: 9
          }
        },
        line: 237
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 246,
            column: 22
          },
          end: {
            line: 246,
            column: 23
          }
        },
        loc: {
          start: {
            line: 246,
            column: 46
          },
          end: {
            line: 246,
            column: 93
          }
        },
        line: 246
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 247,
            column: 23
          },
          end: {
            line: 247,
            column: 24
          }
        },
        loc: {
          start: {
            line: 247,
            column: 48
          },
          end: {
            line: 247,
            column: 97
          }
        },
        line: 247
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 248,
            column: 25
          },
          end: {
            line: 248,
            column: 26
          }
        },
        loc: {
          start: {
            line: 248,
            column: 50
          },
          end: {
            line: 248,
            column: 101
          }
        },
        line: 248
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 249,
            column: 23
          },
          end: {
            line: 249,
            column: 24
          }
        },
        loc: {
          start: {
            line: 249,
            column: 31
          },
          end: {
            line: 249,
            column: 63
          }
        },
        line: 249
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 250,
            column: 22
          },
          end: {
            line: 250,
            column: 23
          }
        },
        loc: {
          start: {
            line: 250,
            column: 50
          },
          end: {
            line: 250,
            column: 101
          }
        },
        line: 250
      },
      "31": {
        name: "useRolePermissions",
        decl: {
          start: {
            line: 251,
            column: 9
          },
          end: {
            line: 251,
            column: 27
          }
        },
        loc: {
          start: {
            line: 251,
            column: 38
          },
          end: {
            line: 260,
            column: 1
          }
        },
        line: 251
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 253,
            column: 23
          },
          end: {
            line: 253,
            column: 24
          }
        },
        loc: {
          start: {
            line: 253,
            column: 37
          },
          end: {
            line: 253,
            column: 72
          }
        },
        line: 253
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 254,
            column: 24
          },
          end: {
            line: 254,
            column: 25
          }
        },
        loc: {
          start: {
            line: 254,
            column: 39
          },
          end: {
            line: 254,
            column: 76
          }
        },
        line: 254
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 255,
            column: 26
          },
          end: {
            line: 255,
            column: 27
          }
        },
        loc: {
          start: {
            line: 255,
            column: 41
          },
          end: {
            line: 255,
            column: 80
          }
        },
        line: 255
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 256,
            column: 24
          },
          end: {
            line: 256,
            column: 25
          }
        },
        loc: {
          start: {
            line: 256,
            column: 28
          },
          end: {
            line: 256,
            column: 52
          }
        },
        line: 256
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 143,
            column: 8
          },
          end: {
            line: 145,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 143,
            column: 8
          },
          end: {
            line: 145,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 143
      },
      "1": {
        loc: {
          start: {
            line: 167,
            column: 15
          },
          end: {
            line: 167,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 167,
            column: 15
          },
          end: {
            line: 167,
            column: 37
          }
        }, {
          start: {
            line: 167,
            column: 41
          },
          end: {
            line: 167,
            column: 43
          }
        }],
        line: 167
      },
      "2": {
        loc: {
          start: {
            line: 197,
            column: 8
          },
          end: {
            line: 199,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 197,
            column: 8
          },
          end: {
            line: 199,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 197
      },
      "3": {
        loc: {
          start: {
            line: 201,
            column: 8
          },
          end: {
            line: 207,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 201,
            column: 8
          },
          end: {
            line: 207,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 201
      },
      "4": {
        loc: {
          start: {
            line: 209,
            column: 8
          },
          end: {
            line: 214,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 209,
            column: 8
          },
          end: {
            line: 214,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 209
      },
      "5": {
        loc: {
          start: {
            line: 227,
            column: 15
          },
          end: {
            line: 227,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 227,
            column: 15
          },
          end: {
            line: 227,
            column: 37
          }
        }, {
          start: {
            line: 227,
            column: 41
          },
          end: {
            line: 227,
            column: 45
          }
        }],
        line: 227
      },
      "6": {
        loc: {
          start: {
            line: 238,
            column: 12
          },
          end: {
            line: 240,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 238,
            column: 12
          },
          end: {
            line: 240,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 238
      },
      "7": {
        loc: {
          start: {
            line: 238,
            column: 16
          },
          end: {
            line: 238,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 238,
            column: 16
          },
          end: {
            line: 238,
            column: 41
          }
        }, {
          start: {
            line: 238,
            column: 45
          },
          end: {
            line: 238,
            column: 82
          }
        }],
        line: 238
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\auth\\roles.ts"],
      sourcesContent: ["'use client'\r\n\r\nexport type Permission = \r\n  | 'products:read'\r\n  | 'products:write'\r\n  | 'products:delete'\r\n  | 'orders:read'\r\n  | 'orders:write'\r\n  | 'orders:delete'\r\n  | 'users:read'\r\n  | 'users:write'\r\n  | 'users:delete'\r\n  | 'analytics:read'\r\n  | 'settings:read'\r\n  | 'settings:write'\r\n  | 'inventory:read'\r\n  | 'inventory:write'\r\n  | 'reports:read'\r\n  | 'reports:generate'\r\n  | 'notifications:send'\r\n  | 'admin:access'\r\n\r\nexport type Role = 'super_admin' | 'admin' | 'manager' | 'employee' | 'customer'\r\n\r\nexport interface UserRole {\r\n  id: string\r\n  name: Role\r\n  displayName: string\r\n  description: string\r\n  permissions: Permission[]\r\n  isActive: boolean\r\n  createdAt: Date\r\n  updatedAt: Date\r\n}\r\n\r\nexport interface UserWithRole {\r\n  id: string\r\n  email: string\r\n  name: string\r\n  role: Role\r\n  permissions: Permission[]\r\n  isActive: boolean\r\n}\r\n\r\n// Definici\xF3n de roles y sus permisos\r\nexport const ROLE_PERMISSIONS: Record<Role, Permission[]> = {\r\n  super_admin: [\r\n    'products:read', 'products:write', 'products:delete',\r\n    'orders:read', 'orders:write', 'orders:delete',\r\n    'users:read', 'users:write', 'users:delete',\r\n    'analytics:read',\r\n    'settings:read', 'settings:write',\r\n    'inventory:read', 'inventory:write',\r\n    'reports:read', 'reports:generate',\r\n    'notifications:send',\r\n    'admin:access'\r\n  ],\r\n  admin: [\r\n    'products:read', 'products:write', 'products:delete',\r\n    'orders:read', 'orders:write',\r\n    'users:read', 'users:write',\r\n    'analytics:read',\r\n    'settings:read', 'settings:write',\r\n    'inventory:read', 'inventory:write',\r\n    'reports:read', 'reports:generate',\r\n    'notifications:send',\r\n    'admin:access'\r\n  ],\r\n  manager: [\r\n    'products:read', 'products:write',\r\n    'orders:read', 'orders:write',\r\n    'users:read',\r\n    'analytics:read',\r\n    'inventory:read', 'inventory:write',\r\n    'reports:read',\r\n    'admin:access'\r\n  ],\r\n  employee: [\r\n    'products:read',\r\n    'orders:read', 'orders:write',\r\n    'inventory:read',\r\n    'admin:access'\r\n  ],\r\n  customer: []\r\n}\r\n\r\nexport const ROLE_DEFINITIONS: Record<Role, Omit<UserRole, 'id' | 'createdAt' | 'updatedAt'>> = {\r\n  super_admin: {\r\n    name: 'super_admin',\r\n    displayName: 'Super Administrador',\r\n    description: 'Acceso completo a todas las funcionalidades del sistema',\r\n    permissions: ROLE_PERMISSIONS.super_admin,\r\n    isActive: true\r\n  },\r\n  admin: {\r\n    name: 'admin',\r\n    displayName: 'Administrador',\r\n    description: 'Acceso administrativo con la mayor\xEDa de permisos',\r\n    permissions: ROLE_PERMISSIONS.admin,\r\n    isActive: true\r\n  },\r\n  manager: {\r\n    name: 'manager',\r\n    displayName: 'Gerente',\r\n    description: 'Gesti\xF3n de productos, \xF3rdenes e inventario',\r\n    permissions: ROLE_PERMISSIONS.manager,\r\n    isActive: true\r\n  },\r\n  employee: {\r\n    name: 'employee',\r\n    displayName: 'Empleado',\r\n    description: 'Acceso b\xE1sico para gesti\xF3n de \xF3rdenes',\r\n    permissions: ROLE_PERMISSIONS.employee,\r\n    isActive: true\r\n  },\r\n  customer: {\r\n    name: 'customer',\r\n    displayName: 'Cliente',\r\n    description: 'Usuario cliente con acceso a la tienda',\r\n    permissions: ROLE_PERMISSIONS.customer,\r\n    isActive: true\r\n  }\r\n}\r\n\r\nexport class RoleManager {\r\n  private static instance: RoleManager\r\n\r\n  static getInstance(): RoleManager {\r\n    if (!RoleManager.instance) {\r\n      RoleManager.instance = new RoleManager()\r\n    }\r\n    return RoleManager.instance\r\n  }\r\n\r\n  /**\r\n   * Verifica si un usuario tiene un permiso espec\xEDfico\r\n   */\r\n  hasPermission(userRole: Role, permission: Permission): boolean {\r\n    const rolePermissions = ROLE_PERMISSIONS[userRole]\r\n    return rolePermissions.includes(permission)\r\n  }\r\n\r\n  /**\r\n   * Verifica si un usuario tiene m\xFAltiples permisos\r\n   */\r\n  hasPermissions(userRole: Role, permissions: Permission[]): boolean {\r\n    return permissions.every(permission => this.hasPermission(userRole, permission))\r\n  }\r\n\r\n  /**\r\n   * Verifica si un usuario tiene al menos uno de los permisos especificados\r\n   */\r\n  hasAnyPermission(userRole: Role, permissions: Permission[]): boolean {\r\n    return permissions.some(permission => this.hasPermission(userRole, permission))\r\n  }\r\n\r\n  /**\r\n   * Obtiene todos los permisos de un rol\r\n   */\r\n  getRolePermissions(role: Role): Permission[] {\r\n    return ROLE_PERMISSIONS[role] || []\r\n  }\r\n\r\n  /**\r\n   * Verifica si un rol puede acceder al panel de administraci\xF3n\r\n   */\r\n  canAccessAdmin(role: Role): boolean {\r\n    return this.hasPermission(role, 'admin:access')\r\n  }\r\n\r\n  /**\r\n   * Verifica si un rol es superior a otro\r\n   */\r\n  isRoleHigher(role1: Role, role2: Role): boolean {\r\n    const hierarchy: Record<Role, number> = {\r\n      customer: 0,\r\n      employee: 1,\r\n      manager: 2,\r\n      admin: 3,\r\n      super_admin: 4\r\n    }\r\n    return hierarchy[role1] > hierarchy[role2]\r\n  }\r\n\r\n  /**\r\n   * Obtiene los roles que un usuario puede asignar\r\n   */\r\n  getAssignableRoles(currentUserRole: Role): Role[] {\r\n    const allRoles: Role[] = ['customer', 'employee', 'manager', 'admin', 'super_admin']\r\n    \r\n    // Solo super_admin puede asignar cualquier rol\r\n    if (currentUserRole === 'super_admin') {\r\n      return allRoles\r\n    }\r\n    \r\n    // Admin puede asignar roles inferiores\r\n    if (currentUserRole === 'admin') {\r\n      return ['customer', 'employee', 'manager']\r\n    }\r\n    \r\n    // Manager puede asignar solo customer y employee\r\n    if (currentUserRole === 'manager') {\r\n      return ['customer', 'employee']\r\n    }\r\n    \r\n    // Otros roles no pueden asignar roles\r\n    return []\r\n  }\r\n\r\n  /**\r\n   * Valida si una asignaci\xF3n de rol es v\xE1lida\r\n   */\r\n  canAssignRole(assignerRole: Role, targetRole: Role): boolean {\r\n    const assignableRoles = this.getAssignableRoles(assignerRole)\r\n    return assignableRoles.includes(targetRole)\r\n  }\r\n\r\n  /**\r\n   * Obtiene la definici\xF3n completa de un rol\r\n   */\r\n  getRoleDefinition(role: Role): Omit<UserRole, 'id' | 'createdAt' | 'updatedAt'> | null {\r\n    return ROLE_DEFINITIONS[role] || null\r\n  }\r\n\r\n  /**\r\n   * Obtiene todos los roles disponibles\r\n   */\r\n  getAllRoles(): Role[] {\r\n    return Object.keys(ROLE_DEFINITIONS) as Role[]\r\n  }\r\n\r\n  /**\r\n   * Filtra recursos basado en permisos\r\n   */\r\n  filterByPermissions<T extends { requiredPermissions?: Permission[] }>(\r\n    items: T[],\r\n    userRole: Role\r\n  ): T[] {\r\n    return items.filter(item => {\r\n      if (!item.requiredPermissions || item.requiredPermissions.length === 0) {\r\n        return true\r\n      }\r\n      return this.hasPermissions(userRole, item.requiredPermissions)\r\n    })\r\n  }\r\n}\r\n\r\n// Instancia singleton\r\nexport const roleManager = RoleManager.getInstance()\r\n\r\n// Funciones de conveniencia\r\nexport const hasPermission = (userRole: Role, permission: Permission) => \r\n  roleManager.hasPermission(userRole, permission)\r\n\r\nexport const hasPermissions = (userRole: Role, permissions: Permission[]) => \r\n  roleManager.hasPermissions(userRole, permissions)\r\n\r\nexport const hasAnyPermission = (userRole: Role, permissions: Permission[]) => \r\n  roleManager.hasAnyPermission(userRole, permissions)\r\n\r\nexport const canAccessAdmin = (role: Role) => \r\n  roleManager.canAccessAdmin(role)\r\n\r\nexport const canAssignRole = (assignerRole: Role, targetRole: Role) => \r\n  roleManager.canAssignRole(assignerRole, targetRole)\r\n\r\n// Hook para usar en componentes React\r\nexport function useRolePermissions(userRole: Role) {\r\n  return {\r\n    hasPermission: (permission: Permission) => hasPermission(userRole, permission),\r\n    hasPermissions: (permissions: Permission[]) => hasPermissions(userRole, permissions),\r\n    hasAnyPermission: (permissions: Permission[]) => hasAnyPermission(userRole, permissions),\r\n    canAccessAdmin: () => canAccessAdmin(userRole),\r\n    rolePermissions: roleManager.getRolePermissions(userRole),\r\n    roleDefinition: roleManager.getRoleDefinition(userRole)\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["ROLE_DEFINITIONS", "ROLE_PERMISSIONS", "RoleManager", "canAccessAdmin", "canAssignRole", "hasAnyPermission", "hasPermission", "hasPermissions", "roleManager", "useRolePermissions", "super_admin", "admin", "manager", "employee", "customer", "name", "displayName", "description", "permissions", "isActive", "getInstance", "instance", "userRole", "permission", "rolePermissions", "includes", "every", "some", "getRolePermissions", "role", "isRoleHigher", "role1", "role2", "hierarchy", "getAssignableRoles", "currentUserRole", "allRoles", "assignerRole", "targetRole", "assignableRoles", "getRoleDefinition", "getAllRoles", "Object", "keys", "filterByPermissions", "items", "filter", "item", "requiredPermissions", "length", "roleDefinition"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6a56f3e246de29ed41bd6a70a5888936b55fe35a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_trmbbyrn3 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_trmbbyrn3();
cov_trmbbyrn3().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_trmbbyrn3().f[0]++;
  cov_trmbbyrn3().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_trmbbyrn3().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_trmbbyrn3().s[3]++;
_export(exports, {
  get ROLE_DEFINITIONS() {
    /* istanbul ignore next */
    cov_trmbbyrn3().f[1]++;
    cov_trmbbyrn3().s[4]++;
    return ROLE_DEFINITIONS;
  },
  get ROLE_PERMISSIONS() {
    /* istanbul ignore next */
    cov_trmbbyrn3().f[2]++;
    cov_trmbbyrn3().s[5]++;
    return ROLE_PERMISSIONS;
  },
  get RoleManager() {
    /* istanbul ignore next */
    cov_trmbbyrn3().f[3]++;
    cov_trmbbyrn3().s[6]++;
    return RoleManager;
  },
  get canAccessAdmin() {
    /* istanbul ignore next */
    cov_trmbbyrn3().f[4]++;
    cov_trmbbyrn3().s[7]++;
    return canAccessAdmin;
  },
  get canAssignRole() {
    /* istanbul ignore next */
    cov_trmbbyrn3().f[5]++;
    cov_trmbbyrn3().s[8]++;
    return canAssignRole;
  },
  get hasAnyPermission() {
    /* istanbul ignore next */
    cov_trmbbyrn3().f[6]++;
    cov_trmbbyrn3().s[9]++;
    return hasAnyPermission;
  },
  get hasPermission() {
    /* istanbul ignore next */
    cov_trmbbyrn3().f[7]++;
    cov_trmbbyrn3().s[10]++;
    return hasPermission;
  },
  get hasPermissions() {
    /* istanbul ignore next */
    cov_trmbbyrn3().f[8]++;
    cov_trmbbyrn3().s[11]++;
    return hasPermissions;
  },
  get roleManager() {
    /* istanbul ignore next */
    cov_trmbbyrn3().f[9]++;
    cov_trmbbyrn3().s[12]++;
    return roleManager;
  },
  get useRolePermissions() {
    /* istanbul ignore next */
    cov_trmbbyrn3().f[10]++;
    cov_trmbbyrn3().s[13]++;
    return useRolePermissions;
  }
});
const ROLE_PERMISSIONS =
/* istanbul ignore next */
(cov_trmbbyrn3().s[14]++, {
  super_admin: ['products:read', 'products:write', 'products:delete', 'orders:read', 'orders:write', 'orders:delete', 'users:read', 'users:write', 'users:delete', 'analytics:read', 'settings:read', 'settings:write', 'inventory:read', 'inventory:write', 'reports:read', 'reports:generate', 'notifications:send', 'admin:access'],
  admin: ['products:read', 'products:write', 'products:delete', 'orders:read', 'orders:write', 'users:read', 'users:write', 'analytics:read', 'settings:read', 'settings:write', 'inventory:read', 'inventory:write', 'reports:read', 'reports:generate', 'notifications:send', 'admin:access'],
  manager: ['products:read', 'products:write', 'orders:read', 'orders:write', 'users:read', 'analytics:read', 'inventory:read', 'inventory:write', 'reports:read', 'admin:access'],
  employee: ['products:read', 'orders:read', 'orders:write', 'inventory:read', 'admin:access'],
  customer: []
});
const ROLE_DEFINITIONS =
/* istanbul ignore next */
(cov_trmbbyrn3().s[15]++, {
  super_admin: {
    name: 'super_admin',
    displayName: 'Super Administrador',
    description: 'Acceso completo a todas las funcionalidades del sistema',
    permissions: ROLE_PERMISSIONS.super_admin,
    isActive: true
  },
  admin: {
    name: 'admin',
    displayName: 'Administrador',
    description: 'Acceso administrativo con la mayoría de permisos',
    permissions: ROLE_PERMISSIONS.admin,
    isActive: true
  },
  manager: {
    name: 'manager',
    displayName: 'Gerente',
    description: 'Gestión de productos, órdenes e inventario',
    permissions: ROLE_PERMISSIONS.manager,
    isActive: true
  },
  employee: {
    name: 'employee',
    displayName: 'Empleado',
    description: 'Acceso básico para gestión de órdenes',
    permissions: ROLE_PERMISSIONS.employee,
    isActive: true
  },
  customer: {
    name: 'customer',
    displayName: 'Cliente',
    description: 'Usuario cliente con acceso a la tienda',
    permissions: ROLE_PERMISSIONS.customer,
    isActive: true
  }
});
class RoleManager {
  static getInstance() {
    /* istanbul ignore next */
    cov_trmbbyrn3().f[11]++;
    cov_trmbbyrn3().s[16]++;
    if (!RoleManager.instance) {
      /* istanbul ignore next */
      cov_trmbbyrn3().b[0][0]++;
      cov_trmbbyrn3().s[17]++;
      RoleManager.instance = new RoleManager();
    } else
    /* istanbul ignore next */
    {
      cov_trmbbyrn3().b[0][1]++;
    }
    cov_trmbbyrn3().s[18]++;
    return RoleManager.instance;
  }
  /**
  * Verifica si un usuario tiene un permiso específico
  */
  hasPermission(userRole, permission) {
    /* istanbul ignore next */
    cov_trmbbyrn3().f[12]++;
    const rolePermissions =
    /* istanbul ignore next */
    (cov_trmbbyrn3().s[19]++, ROLE_PERMISSIONS[userRole]);
    /* istanbul ignore next */
    cov_trmbbyrn3().s[20]++;
    return rolePermissions.includes(permission);
  }
  /**
  * Verifica si un usuario tiene múltiples permisos
  */
  hasPermissions(userRole, permissions) {
    /* istanbul ignore next */
    cov_trmbbyrn3().f[13]++;
    cov_trmbbyrn3().s[21]++;
    return permissions.every(permission => {
      /* istanbul ignore next */
      cov_trmbbyrn3().f[14]++;
      cov_trmbbyrn3().s[22]++;
      return this.hasPermission(userRole, permission);
    });
  }
  /**
  * Verifica si un usuario tiene al menos uno de los permisos especificados
  */
  hasAnyPermission(userRole, permissions) {
    /* istanbul ignore next */
    cov_trmbbyrn3().f[15]++;
    cov_trmbbyrn3().s[23]++;
    return permissions.some(permission => {
      /* istanbul ignore next */
      cov_trmbbyrn3().f[16]++;
      cov_trmbbyrn3().s[24]++;
      return this.hasPermission(userRole, permission);
    });
  }
  /**
  * Obtiene todos los permisos de un rol
  */
  getRolePermissions(role) {
    /* istanbul ignore next */
    cov_trmbbyrn3().f[17]++;
    cov_trmbbyrn3().s[25]++;
    return /* istanbul ignore next */(cov_trmbbyrn3().b[1][0]++, ROLE_PERMISSIONS[role]) ||
    /* istanbul ignore next */
    (cov_trmbbyrn3().b[1][1]++, []);
  }
  /**
  * Verifica si un rol puede acceder al panel de administración
  */
  canAccessAdmin(role) {
    /* istanbul ignore next */
    cov_trmbbyrn3().f[18]++;
    cov_trmbbyrn3().s[26]++;
    return this.hasPermission(role, 'admin:access');
  }
  /**
  * Verifica si un rol es superior a otro
  */
  isRoleHigher(role1, role2) {
    /* istanbul ignore next */
    cov_trmbbyrn3().f[19]++;
    const hierarchy =
    /* istanbul ignore next */
    (cov_trmbbyrn3().s[27]++, {
      customer: 0,
      employee: 1,
      manager: 2,
      admin: 3,
      super_admin: 4
    });
    /* istanbul ignore next */
    cov_trmbbyrn3().s[28]++;
    return hierarchy[role1] > hierarchy[role2];
  }
  /**
  * Obtiene los roles que un usuario puede asignar
  */
  getAssignableRoles(currentUserRole) {
    /* istanbul ignore next */
    cov_trmbbyrn3().f[20]++;
    const allRoles =
    /* istanbul ignore next */
    (cov_trmbbyrn3().s[29]++, ['customer', 'employee', 'manager', 'admin', 'super_admin']);
    // Solo super_admin puede asignar cualquier rol
    /* istanbul ignore next */
    cov_trmbbyrn3().s[30]++;
    if (currentUserRole === 'super_admin') {
      /* istanbul ignore next */
      cov_trmbbyrn3().b[2][0]++;
      cov_trmbbyrn3().s[31]++;
      return allRoles;
    } else
    /* istanbul ignore next */
    {
      cov_trmbbyrn3().b[2][1]++;
    }
    // Admin puede asignar roles inferiores
    cov_trmbbyrn3().s[32]++;
    if (currentUserRole === 'admin') {
      /* istanbul ignore next */
      cov_trmbbyrn3().b[3][0]++;
      cov_trmbbyrn3().s[33]++;
      return ['customer', 'employee', 'manager'];
    } else
    /* istanbul ignore next */
    {
      cov_trmbbyrn3().b[3][1]++;
    }
    // Manager puede asignar solo customer y employee
    cov_trmbbyrn3().s[34]++;
    if (currentUserRole === 'manager') {
      /* istanbul ignore next */
      cov_trmbbyrn3().b[4][0]++;
      cov_trmbbyrn3().s[35]++;
      return ['customer', 'employee'];
    } else
    /* istanbul ignore next */
    {
      cov_trmbbyrn3().b[4][1]++;
    }
    // Otros roles no pueden asignar roles
    cov_trmbbyrn3().s[36]++;
    return [];
  }
  /**
  * Valida si una asignación de rol es válida
  */
  canAssignRole(assignerRole, targetRole) {
    /* istanbul ignore next */
    cov_trmbbyrn3().f[21]++;
    const assignableRoles =
    /* istanbul ignore next */
    (cov_trmbbyrn3().s[37]++, this.getAssignableRoles(assignerRole));
    /* istanbul ignore next */
    cov_trmbbyrn3().s[38]++;
    return assignableRoles.includes(targetRole);
  }
  /**
  * Obtiene la definición completa de un rol
  */
  getRoleDefinition(role) {
    /* istanbul ignore next */
    cov_trmbbyrn3().f[22]++;
    cov_trmbbyrn3().s[39]++;
    return /* istanbul ignore next */(cov_trmbbyrn3().b[5][0]++, ROLE_DEFINITIONS[role]) ||
    /* istanbul ignore next */
    (cov_trmbbyrn3().b[5][1]++, null);
  }
  /**
  * Obtiene todos los roles disponibles
  */
  getAllRoles() {
    /* istanbul ignore next */
    cov_trmbbyrn3().f[23]++;
    cov_trmbbyrn3().s[40]++;
    return Object.keys(ROLE_DEFINITIONS);
  }
  /**
  * Filtra recursos basado en permisos
  */
  filterByPermissions(items, userRole) {
    /* istanbul ignore next */
    cov_trmbbyrn3().f[24]++;
    cov_trmbbyrn3().s[41]++;
    return items.filter(item => {
      /* istanbul ignore next */
      cov_trmbbyrn3().f[25]++;
      cov_trmbbyrn3().s[42]++;
      if (
      /* istanbul ignore next */
      (cov_trmbbyrn3().b[7][0]++, !item.requiredPermissions) ||
      /* istanbul ignore next */
      (cov_trmbbyrn3().b[7][1]++, item.requiredPermissions.length === 0)) {
        /* istanbul ignore next */
        cov_trmbbyrn3().b[6][0]++;
        cov_trmbbyrn3().s[43]++;
        return true;
      } else
      /* istanbul ignore next */
      {
        cov_trmbbyrn3().b[6][1]++;
      }
      cov_trmbbyrn3().s[44]++;
      return this.hasPermissions(userRole, item.requiredPermissions);
    });
  }
}
const roleManager =
/* istanbul ignore next */
(cov_trmbbyrn3().s[45]++, RoleManager.getInstance());
/* istanbul ignore next */
cov_trmbbyrn3().s[46]++;
const hasPermission = (userRole, permission) => {
  /* istanbul ignore next */
  cov_trmbbyrn3().f[26]++;
  cov_trmbbyrn3().s[47]++;
  return roleManager.hasPermission(userRole, permission);
};
/* istanbul ignore next */
cov_trmbbyrn3().s[48]++;
const hasPermissions = (userRole, permissions) => {
  /* istanbul ignore next */
  cov_trmbbyrn3().f[27]++;
  cov_trmbbyrn3().s[49]++;
  return roleManager.hasPermissions(userRole, permissions);
};
/* istanbul ignore next */
cov_trmbbyrn3().s[50]++;
const hasAnyPermission = (userRole, permissions) => {
  /* istanbul ignore next */
  cov_trmbbyrn3().f[28]++;
  cov_trmbbyrn3().s[51]++;
  return roleManager.hasAnyPermission(userRole, permissions);
};
/* istanbul ignore next */
cov_trmbbyrn3().s[52]++;
const canAccessAdmin = role => {
  /* istanbul ignore next */
  cov_trmbbyrn3().f[29]++;
  cov_trmbbyrn3().s[53]++;
  return roleManager.canAccessAdmin(role);
};
/* istanbul ignore next */
cov_trmbbyrn3().s[54]++;
const canAssignRole = (assignerRole, targetRole) => {
  /* istanbul ignore next */
  cov_trmbbyrn3().f[30]++;
  cov_trmbbyrn3().s[55]++;
  return roleManager.canAssignRole(assignerRole, targetRole);
};
function useRolePermissions(userRole) {
  /* istanbul ignore next */
  cov_trmbbyrn3().f[31]++;
  cov_trmbbyrn3().s[56]++;
  return {
    hasPermission: permission => {
      /* istanbul ignore next */
      cov_trmbbyrn3().f[32]++;
      cov_trmbbyrn3().s[57]++;
      return hasPermission(userRole, permission);
    },
    hasPermissions: permissions => {
      /* istanbul ignore next */
      cov_trmbbyrn3().f[33]++;
      cov_trmbbyrn3().s[58]++;
      return hasPermissions(userRole, permissions);
    },
    hasAnyPermission: permissions => {
      /* istanbul ignore next */
      cov_trmbbyrn3().f[34]++;
      cov_trmbbyrn3().s[59]++;
      return hasAnyPermission(userRole, permissions);
    },
    canAccessAdmin: () => {
      /* istanbul ignore next */
      cov_trmbbyrn3().f[35]++;
      cov_trmbbyrn3().s[60]++;
      return canAccessAdmin(userRole);
    },
    rolePermissions: roleManager.getRolePermissions(userRole),
    roleDefinition: roleManager.getRoleDefinition(userRole)
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,