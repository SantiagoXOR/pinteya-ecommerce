294b06d7b30340340ab6a1f290eac77a
// ===================================
// PINTEYA E-COMMERCE - CACHE WARMING SYSTEM
// ===================================
"use strict";

/* istanbul ignore next */
function cov_2hzya20w9l() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\cache\\cache-warming-system.ts";
  var hash = "41ba570dd80b7f4e400476441bcfd175ac59b48e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\cache\\cache-warming-system.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "2": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "3": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 30,
          column: 3
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 34
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 33
        }
      },
      "6": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 30
        }
      },
      "7": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 30
        }
      },
      "8": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 34
        }
      },
      "9": {
        start: {
          line: 31,
          column: 16
        },
        end: {
          line: 31,
          column: 47
        }
      },
      "10": {
        start: {
          line: 32,
          column: 38
        },
        end: {
          line: 32,
          column: 82
        }
      },
      "11": {
        start: {
          line: 33,
          column: 18
        },
        end: {
          line: 33,
          column: 40
        }
      },
      "12": {
        start: {
          line: 34,
          column: 35
        },
        end: {
          line: 42,
          column: 5
        }
      },
      "13": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 35,
          column: 46
        }
      },
      "14": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 46
        }
      },
      "15": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 37,
          column: 36
        }
      },
      "16": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 38,
          column: 48
        }
      },
      "17": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 39,
          column: 42
        }
      },
      "18": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 40,
          column: 44
        }
      },
      "19": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 41,
          column: 26
        }
      },
      "20": {
        start: {
          line: 43,
          column: 23
        },
        end: {
          line: 115,
          column: 1
        }
      },
      "21": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 118,
          column: 31
        }
      },
      "22": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 119,
          column: 36
        }
      },
      "23": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 120,
          column: 39
        }
      },
      "24": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 130,
          column: 10
        }
      },
      "25": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 131,
          column: 41
        }
      },
      "26": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 136,
          column: 9
        }
      },
      "27": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 135,
          column: 67
        }
      },
      "28": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 137,
          column: 43
        }
      },
      "29": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 155,
          column: 11
        }
      },
      "30": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 169,
          column: 11
        }
      },
      "31": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 183,
          column: 11
        }
      },
      "32": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 197,
          column: 11
        }
      },
      "33": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 202,
          column: 38
        }
      },
      "34": {
        start: {
          line: 203,
          column: 8
        },
        end: {
          line: 203,
          column: 48
        }
      },
      "35": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 207,
          column: 9
        }
      },
      "36": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 206,
          column: 36
        }
      },
      "37": {
        start: {
          line: 209,
          column: 8
        },
        end: {
          line: 211,
          column: 9
        }
      },
      "38": {
        start: {
          line: 210,
          column: 12
        },
        end: {
          line: 210,
          column: 38
        }
      },
      "39": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 212,
          column: 109
        }
      },
      "40": {
        start: {
          line: 217,
          column: 21
        },
        end: {
          line: 217,
          column: 43
        }
      },
      "41": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 220,
          column: 9
        }
      },
      "42": {
        start: {
          line: 219,
          column: 12
        },
        end: {
          line: 219,
          column: 62
        }
      },
      "43": {
        start: {
          line: 222,
          column: 8
        },
        end: {
          line: 225,
          column: 9
        }
      },
      "44": {
        start: {
          line: 223,
          column: 12
        },
        end: {
          line: 223,
          column: 95
        }
      },
      "45": {
        start: {
          line: 224,
          column: 12
        },
        end: {
          line: 224,
          column: 47
        }
      },
      "46": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 229,
          column: 9
        }
      },
      "47": {
        start: {
          line: 228,
          column: 12
        },
        end: {
          line: 228,
          column: 78
        }
      },
      "48": {
        start: {
          line: 230,
          column: 26
        },
        end: {
          line: 230,
          column: 36
        }
      },
      "49": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 231,
          column: 33
        }
      },
      "50": {
        start: {
          line: 232,
          column: 27
        },
        end: {
          line: 232,
          column: 58
        }
      },
      "51": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 233,
          column: 48
        }
      },
      "52": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 256,
          column: 9
        }
      },
      "53": {
        start: {
          line: 235,
          column: 27
        },
        end: {
          line: 235,
          column: 43
        }
      },
      "54": {
        start: {
          line: 237,
          column: 12
        },
        end: {
          line: 237,
          column: 32
        }
      },
      "55": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 238,
          column: 38
        }
      },
      "56": {
        start: {
          line: 239,
          column: 12
        },
        end: {
          line: 239,
          column: 114
        }
      },
      "57": {
        start: {
          line: 241,
          column: 12
        },
        end: {
          line: 241,
          column: 40
        }
      },
      "58": {
        start: {
          line: 242,
          column: 12
        },
        end: {
          line: 242,
          column: 56
        }
      },
      "59": {
        start: {
          line: 243,
          column: 12
        },
        end: {
          line: 243,
          column: 90
        }
      },
      "60": {
        start: {
          line: 244,
          column: 12
        },
        end: {
          line: 244,
          column: 44
        }
      },
      "61": {
        start: {
          line: 245,
          column: 12
        },
        end: {
          line: 245,
          column: 116
        }
      },
      "62": {
        start: {
          line: 246,
          column: 12
        },
        end: {
          line: 246,
          column: 26
        }
      },
      "63": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 249,
          column: 30
        }
      },
      "64": {
        start: {
          line: 250,
          column: 12
        },
        end: {
          line: 250,
          column: 37
        }
      },
      "65": {
        start: {
          line: 251,
          column: 12
        },
        end: {
          line: 251,
          column: 99
        }
      },
      "66": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 252,
          column: 24
        }
      },
      "67": {
        start: {
          line: 254,
          column: 12
        },
        end: {
          line: 254,
          column: 43
        }
      },
      "68": {
        start: {
          line: 255,
          column: 12
        },
        end: {
          line: 255,
          column: 37
        }
      },
      "69": {
        start: {
          line: 261,
          column: 32
        },
        end: {
          line: 261,
          column: 43
        }
      },
      "70": {
        start: {
          line: 262,
          column: 24
        },
        end: {
          line: 262,
          column: 28
        }
      },
      "71": {
        start: {
          line: 263,
          column: 27
        },
        end: {
          line: 263,
          column: 55
        }
      },
      "72": {
        start: {
          line: 264,
          column: 34
        },
        end: {
          line: 264,
          column: 69
        }
      },
      "73": {
        start: {
          line: 265,
          column: 29
        },
        end: {
          line: 265,
          column: 62
        }
      },
      "74": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 277,
          column: 9
        }
      },
      "75": {
        start: {
          line: 266,
          column: 26
        },
        end: {
          line: 266,
          column: 27
        }
      },
      "76": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 276,
          column: 13
        }
      },
      "77": {
        start: {
          line: 268,
          column: 16
        },
        end: {
          line: 268,
          column: 58
        }
      },
      "78": {
        start: {
          line: 270,
          column: 16
        },
        end: {
          line: 270,
          column: 34
        }
      },
      "79": {
        start: {
          line: 271,
          column: 16
        },
        end: {
          line: 275,
          column: 17
        }
      },
      "80": {
        start: {
          line: 272,
          column: 34
        },
        end: {
          line: 272,
          column: 85
        }
      },
      "81": {
        start: {
          line: 273,
          column: 20
        },
        end: {
          line: 273,
          column: 155
        }
      },
      "82": {
        start: {
          line: 274,
          column: 20
        },
        end: {
          line: 274,
          column: 77
        }
      },
      "83": {
        start: {
          line: 274,
          column: 49
        },
        end: {
          line: 274,
          column: 75
        }
      },
      "84": {
        start: {
          line: 278,
          column: 8
        },
        end: {
          line: 278,
          column: 24
        }
      },
      "85": {
        start: {
          line: 283,
          column: 26
        },
        end: {
          line: 283,
          column: 36
        }
      },
      "86": {
        start: {
          line: 284,
          column: 8
        },
        end: {
          line: 317,
          column: 9
        }
      },
      "87": {
        start: {
          line: 286,
          column: 35
        },
        end: {
          line: 288,
          column: 14
        }
      },
      "88": {
        start: {
          line: 287,
          column: 16
        },
        end: {
          line: 287,
          column: 91
        }
      },
      "89": {
        start: {
          line: 287,
          column: 31
        },
        end: {
          line: 287,
          column: 59
        }
      },
      "90": {
        start: {
          line: 289,
          column: 32
        },
        end: {
          line: 289,
          column: 46
        }
      },
      "91": {
        start: {
          line: 290,
          column: 25
        },
        end: {
          line: 293,
          column: 14
        }
      },
      "92": {
        start: {
          line: 295,
          column: 12
        },
        end: {
          line: 295,
          column: 146
        }
      },
      "93": {
        start: {
          line: 295,
          column: 104
        },
        end: {
          line: 295,
          column: 125
        }
      },
      "94": {
        start: {
          line: 296,
          column: 29
        },
        end: {
          line: 296,
          column: 51
        }
      },
      "95": {
        start: {
          line: 297,
          column: 29
        },
        end: {
          line: 297,
          column: 56
        }
      },
      "96": {
        start: {
          line: 298,
          column: 12
        },
        end: {
          line: 305,
          column: 14
        }
      },
      "97": {
        start: {
          line: 307,
          column: 29
        },
        end: {
          line: 307,
          column: 51
        }
      },
      "98": {
        start: {
          line: 308,
          column: 12
        },
        end: {
          line: 316,
          column: 14
        }
      },
      "99": {
        start: {
          line: 322,
          column: 29
        },
        end: {
          line: 322,
          column: 40
        }
      },
      "100": {
        start: {
          line: 323,
          column: 8
        },
        end: {
          line: 325,
          column: 9
        }
      },
      "101": {
        start: {
          line: 324,
          column: 12
        },
        end: {
          line: 324,
          column: 19
        }
      },
      "102": {
        start: {
          line: 327,
          column: 28
        },
        end: {
          line: 327,
          column: 59
        }
      },
      "103": {
        start: {
          line: 328,
          column: 8
        },
        end: {
          line: 330,
          column: 9
        }
      },
      "104": {
        start: {
          line: 329,
          column: 12
        },
        end: {
          line: 329,
          column: 39
        }
      },
      "105": {
        start: {
          line: 332,
          column: 8
        },
        end: {
          line: 341,
          column: 9
        }
      },
      "106": {
        start: {
          line: 333,
          column: 29
        },
        end: {
          line: 337,
          column: 33
        }
      },
      "107": {
        start: {
          line: 334,
          column: 16
        },
        end: {
          line: 336,
          column: 19
        }
      },
      "108": {
        start: {
          line: 335,
          column: 20
        },
        end: {
          line: 335,
          column: 118
        }
      },
      "109": {
        start: {
          line: 338,
          column: 12
        },
        end: {
          line: 338,
          column: 54
        }
      },
      "110": {
        start: {
          line: 340,
          column: 12
        },
        end: {
          line: 340,
          column: 58
        }
      },
      "111": {
        start: {
          line: 346,
          column: 31
        },
        end: {
          line: 346,
          column: 37
        }
      },
      "112": {
        start: {
          line: 347,
          column: 8
        },
        end: {
          line: 349,
          column: 9
        }
      },
      "113": {
        start: {
          line: 348,
          column: 12
        },
        end: {
          line: 348,
          column: 24
        }
      },
      "114": {
        start: {
          line: 351,
          column: 8
        },
        end: {
          line: 356,
          column: 9
        }
      },
      "115": {
        start: {
          line: 352,
          column: 31
        },
        end: {
          line: 352,
          column: 57
        }
      },
      "116": {
        start: {
          line: 353,
          column: 12
        },
        end: {
          line: 355,
          column: 13
        }
      },
      "117": {
        start: {
          line: 354,
          column: 16
        },
        end: {
          line: 354,
          column: 29
        }
      },
      "118": {
        start: {
          line: 358,
          column: 8
        },
        end: {
          line: 367,
          column: 9
        }
      },
      "119": {
        start: {
          line: 359,
          column: 24
        },
        end: {
          line: 359,
          column: 34
        }
      },
      "120": {
        start: {
          line: 360,
          column: 32
        },
        end: {
          line: 360,
          column: 127
        }
      },
      "121": {
        start: {
          line: 361,
          column: 35
        },
        end: {
          line: 363,
          column: 14
        }
      },
      "122": {
        start: {
          line: 362,
          column: 16
        },
        end: {
          line: 362,
          column: 80
        }
      },
      "123": {
        start: {
          line: 364,
          column: 12
        },
        end: {
          line: 366,
          column: 13
        }
      },
      "124": {
        start: {
          line: 365,
          column: 16
        },
        end: {
          line: 365,
          column: 29
        }
      },
      "125": {
        start: {
          line: 369,
          column: 8
        },
        end: {
          line: 374,
          column: 9
        }
      },
      "126": {
        start: {
          line: 370,
          column: 28
        },
        end: {
          line: 370,
          column: 56
        }
      },
      "127": {
        start: {
          line: 371,
          column: 12
        },
        end: {
          line: 373,
          column: 13
        }
      },
      "128": {
        start: {
          line: 372,
          column: 16
        },
        end: {
          line: 372,
          column: 29
        }
      },
      "129": {
        start: {
          line: 375,
          column: 8
        },
        end: {
          line: 375,
          column: 20
        }
      },
      "130": {
        start: {
          line: 381,
          column: 8
        },
        end: {
          line: 381,
          column: 35
        }
      },
      "131": {
        start: {
          line: 386,
          column: 24
        },
        end: {
          line: 386,
          column: 98
        }
      },
      "132": {
        start: {
          line: 387,
          column: 30
        },
        end: {
          line: 387,
          column: 95
        }
      },
      "133": {
        start: {
          line: 387,
          column: 70
        },
        end: {
          line: 387,
          column: 91
        }
      },
      "134": {
        start: {
          line: 388,
          column: 26
        },
        end: {
          line: 388,
          column: 82
        }
      },
      "135": {
        start: {
          line: 388,
          column: 66
        },
        end: {
          line: 388,
          column: 78
        }
      },
      "136": {
        start: {
          line: 389,
          column: 8
        },
        end: {
          line: 389,
          column: 65
        }
      },
      "137": {
        start: {
          line: 394,
          column: 30
        },
        end: {
          line: 394,
          column: 111
        }
      },
      "138": {
        start: {
          line: 394,
          column: 77
        },
        end: {
          line: 394,
          column: 110
        }
      },
      "139": {
        start: {
          line: 395,
          column: 24
        },
        end: {
          line: 395,
          column: 102
        }
      },
      "140": {
        start: {
          line: 395,
          column: 75
        },
        end: {
          line: 395,
          column: 100
        }
      },
      "141": {
        start: {
          line: 396,
          column: 8
        },
        end: {
          line: 410,
          column: 11
        }
      },
      "142": {
        start: {
          line: 397,
          column: 12
        },
        end: {
          line: 409,
          column: 13
        }
      },
      "143": {
        start: {
          line: 398,
          column: 16
        },
        end: {
          line: 398,
          column: 36
        }
      },
      "144": {
        start: {
          line: 400,
          column: 16
        },
        end: {
          line: 408,
          column: 18
        }
      },
      "145": {
        start: {
          line: 415,
          column: 8
        },
        end: {
          line: 417,
          column: 10
        }
      },
      "146": {
        start: {
          line: 422,
          column: 8
        },
        end: {
          line: 422,
          column: 47
        }
      },
      "147": {
        start: {
          line: 427,
          column: 8
        },
        end: {
          line: 427,
          column: 38
        }
      },
      "148": {
        start: {
          line: 432,
          column: 21
        },
        end: {
          line: 432,
          column: 43
        }
      },
      "149": {
        start: {
          line: 433,
          column: 8
        },
        end: {
          line: 435,
          column: 9
        }
      },
      "150": {
        start: {
          line: 434,
          column: 12
        },
        end: {
          line: 434,
          column: 25
        }
      },
      "151": {
        start: {
          line: 437,
          column: 29
        },
        end: {
          line: 437,
          column: 59
        }
      },
      "152": {
        start: {
          line: 438,
          column: 8
        },
        end: {
          line: 441,
          column: 9
        }
      },
      "153": {
        start: {
          line: 439,
          column: 12
        },
        end: {
          line: 439,
          column: 40
        }
      },
      "154": {
        start: {
          line: 440,
          column: 12
        },
        end: {
          line: 440,
          column: 46
        }
      },
      "155": {
        start: {
          line: 443,
          column: 8
        },
        end: {
          line: 443,
          column: 34
        }
      },
      "156": {
        start: {
          line: 444,
          column: 8
        },
        end: {
          line: 444,
          column: 48
        }
      },
      "157": {
        start: {
          line: 445,
          column: 8
        },
        end: {
          line: 445,
          column: 88
        }
      },
      "158": {
        start: {
          line: 446,
          column: 8
        },
        end: {
          line: 446,
          column: 20
        }
      },
      "159": {
        start: {
          line: 451,
          column: 8
        },
        end: {
          line: 453,
          column: 11
        }
      },
      "160": {
        start: {
          line: 452,
          column: 12
        },
        end: {
          line: 452,
          column: 31
        }
      },
      "161": {
        start: {
          line: 454,
          column: 8
        },
        end: {
          line: 454,
          column: 35
        }
      },
      "162": {
        start: {
          line: 455,
          column: 8
        },
        end: {
          line: 455,
          column: 105
        }
      },
      "163": {
        start: {
          line: 463,
          column: 32
        },
        end: {
          line: 472,
          column: 20
        }
      },
      "164": {
        start: {
          line: 473,
          column: 8
        },
        end: {
          line: 475,
          column: 9
        }
      },
      "165": {
        start: {
          line: 474,
          column: 12
        },
        end: {
          line: 474,
          column: 24
        }
      },
      "166": {
        start: {
          line: 476,
          column: 8
        },
        end: {
          line: 476,
          column: 20
        }
      },
      "167": {
        start: {
          line: 481,
          column: 32
        },
        end: {
          line: 481,
          column: 130
        }
      },
      "168": {
        start: {
          line: 482,
          column: 8
        },
        end: {
          line: 484,
          column: 9
        }
      },
      "169": {
        start: {
          line: 483,
          column: 12
        },
        end: {
          line: 483,
          column: 24
        }
      },
      "170": {
        start: {
          line: 485,
          column: 8
        },
        end: {
          line: 485,
          column: 20
        }
      },
      "171": {
        start: {
          line: 491,
          column: 8
        },
        end: {
          line: 506,
          column: 10
        }
      },
      "172": {
        start: {
          line: 512,
          column: 8
        },
        end: {
          line: 533,
          column: 10
        }
      },
      "173": {
        start: {
          line: 536,
          column: 27
        },
        end: {
          line: 536,
          column: 59
        }
      },
      "174": {
        start: {
          line: 537,
          column: 26
        },
        end: {
          line: 577,
          column: 1
        }
      },
      "175": {
        start: {
          line: 541,
          column: 22
        },
        end: {
          line: 541,
          column: 24
        }
      },
      "176": {
        start: {
          line: 542,
          column: 8
        },
        end: {
          line: 562,
          column: 9
        }
      },
      "177": {
        start: {
          line: 543,
          column: 12
        },
        end: {
          line: 551,
          column: 15
        }
      },
      "178": {
        start: {
          line: 545,
          column: 29
        },
        end: {
          line: 545,
          column: 73
        }
      },
      "179": {
        start: {
          line: 549,
          column: 29
        },
        end: {
          line: 549,
          column: 72
        }
      },
      "180": {
        start: {
          line: 552,
          column: 15
        },
        end: {
          line: 562,
          column: 9
        }
      },
      "181": {
        start: {
          line: 553,
          column: 12
        },
        end: {
          line: 561,
          column: 15
        }
      },
      "182": {
        start: {
          line: 555,
          column: 29
        },
        end: {
          line: 555,
          column: 73
        }
      },
      "183": {
        start: {
          line: 559,
          column: 29
        },
        end: {
          line: 559,
          column: 72
        }
      },
      "184": {
        start: {
          line: 563,
          column: 31
        },
        end: {
          line: 563,
          column: 155
        }
      },
      "185": {
        start: {
          line: 563,
          column: 49
        },
        end: {
          line: 563,
          column: 154
        }
      },
      "186": {
        start: {
          line: 564,
          column: 8
        },
        end: {
          line: 564,
          column: 49
        }
      },
      "187": {
        start: {
          line: 570,
          column: 8
        },
        end: {
          line: 570,
          column: 102
        }
      },
      "188": {
        start: {
          line: 575,
          column: 8
        },
        end: {
          line: 575,
          column: 61
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 16
          }
        },
        loc: {
          start: {
            line: 8,
            column: 30
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 30
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 29
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 26
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 26
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 30
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 34,
            column: 35
          },
          end: {
            line: 34,
            column: 36
          }
        },
        loc: {
          start: {
            line: 34,
            column: 60
          },
          end: {
            line: 42,
            column: 1
          }
        },
        line: 34
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 117,
            column: 4
          },
          end: {
            line: 117,
            column: 5
          }
        },
        loc: {
          start: {
            line: 117,
            column: 17
          },
          end: {
            line: 132,
            column: 5
          }
        },
        line: 117
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 133,
            column: 4
          },
          end: {
            line: 133,
            column: 5
          }
        },
        loc: {
          start: {
            line: 133,
            column: 25
          },
          end: {
            line: 138,
            column: 5
          }
        },
        line: 133
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 141,
            column: 6
          },
          end: {
            line: 141,
            column: 7
          }
        },
        loc: {
          start: {
            line: 141,
            column: 34
          },
          end: {
            line: 198,
            column: 5
          }
        },
        line: 141
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 201,
            column: 6
          },
          end: {
            line: 201,
            column: 7
          }
        },
        loc: {
          start: {
            line: 201,
            column: 25
          },
          end: {
            line: 213,
            column: 5
          }
        },
        line: 201
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 216,
            column: 6
          },
          end: {
            line: 216,
            column: 7
          }
        },
        loc: {
          start: {
            line: 216,
            column: 32
          },
          end: {
            line: 257,
            column: 5
          }
        },
        line: 216
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 260,
            column: 6
          },
          end: {
            line: 260,
            column: 7
          }
        },
        loc: {
          start: {
            line: 260,
            column: 39
          },
          end: {
            line: 279,
            column: 5
          }
        },
        line: 260
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 274,
            column: 38
          },
          end: {
            line: 274,
            column: 39
          }
        },
        loc: {
          start: {
            line: 274,
            column: 49
          },
          end: {
            line: 274,
            column: 75
          }
        },
        line: 274
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 282,
            column: 6
          },
          end: {
            line: 282,
            column: 7
          }
        },
        loc: {
          start: {
            line: 282,
            column: 36
          },
          end: {
            line: 318,
            column: 5
          }
        },
        line: 282
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 286,
            column: 47
          },
          end: {
            line: 286,
            column: 48
          }
        },
        loc: {
          start: {
            line: 286,
            column: 60
          },
          end: {
            line: 288,
            column: 13
          }
        },
        line: 286
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 287,
            column: 27
          },
          end: {
            line: 287,
            column: 28
          }
        },
        loc: {
          start: {
            line: 287,
            column: 31
          },
          end: {
            line: 287,
            column: 59
          }
        },
        line: 287
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 295,
            column: 100
          },
          end: {
            line: 295,
            column: 101
          }
        },
        loc: {
          start: {
            line: 295,
            column: 104
          },
          end: {
            line: 295,
            column: 125
          }
        },
        line: 295
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 321,
            column: 6
          },
          end: {
            line: 321,
            column: 7
          }
        },
        loc: {
          start: {
            line: 321,
            column: 25
          },
          end: {
            line: 342,
            column: 5
          }
        },
        line: 321
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 333,
            column: 41
          },
          end: {
            line: 333,
            column: 42
          }
        },
        loc: {
          start: {
            line: 333,
            column: 45
          },
          end: {
            line: 337,
            column: 13
          }
        },
        line: 333
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 334,
            column: 48
          },
          end: {
            line: 334,
            column: 49
          }
        },
        loc: {
          start: {
            line: 334,
            column: 57
          },
          end: {
            line: 336,
            column: 17
          }
        },
        line: 334
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 345,
            column: 6
          },
          end: {
            line: 345,
            column: 7
          }
        },
        loc: {
          start: {
            line: 345,
            column: 36
          },
          end: {
            line: 376,
            column: 5
          }
        },
        line: 345
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 361,
            column: 63
          },
          end: {
            line: 361,
            column: 64
          }
        },
        loc: {
          start: {
            line: 361,
            column: 73
          },
          end: {
            line: 363,
            column: 13
          }
        },
        line: 361
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 379,
            column: 6
          },
          end: {
            line: 379,
            column: 7
          }
        },
        loc: {
          start: {
            line: 379,
            column: 28
          },
          end: {
            line: 382,
            column: 5
          }
        },
        line: 379
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 385,
            column: 6
          },
          end: {
            line: 385,
            column: 7
          }
        },
        loc: {
          start: {
            line: 385,
            column: 30
          },
          end: {
            line: 390,
            column: 5
          }
        },
        line: 385
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 387,
            column: 60
          },
          end: {
            line: 387,
            column: 61
          }
        },
        loc: {
          start: {
            line: 387,
            column: 70
          },
          end: {
            line: 387,
            column: 91
          }
        },
        line: 387
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 388,
            column: 56
          },
          end: {
            line: 388,
            column: 57
          }
        },
        loc: {
          start: {
            line: 388,
            column: 66
          },
          end: {
            line: 388,
            column: 78
          }
        },
        line: 388
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 393,
            column: 6
          },
          end: {
            line: 393,
            column: 7
          }
        },
        loc: {
          start: {
            line: 393,
            column: 38
          },
          end: {
            line: 411,
            column: 5
          }
        },
        line: 393
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 394,
            column: 69
          },
          end: {
            line: 394,
            column: 70
          }
        },
        loc: {
          start: {
            line: 394,
            column: 77
          },
          end: {
            line: 394,
            column: 110
          }
        },
        line: 394
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 395,
            column: 67
          },
          end: {
            line: 395,
            column: 68
          }
        },
        loc: {
          start: {
            line: 395,
            column: 75
          },
          end: {
            line: 395,
            column: 100
          }
        },
        line: 395
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 396,
            column: 27
          },
          end: {
            line: 396,
            column: 28
          }
        },
        loc: {
          start: {
            line: 396,
            column: 44
          },
          end: {
            line: 410,
            column: 9
          }
        },
        line: 396
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 414,
            column: 6
          },
          end: {
            line: 414,
            column: 7
          }
        },
        loc: {
          start: {
            line: 414,
            column: 17
          },
          end: {
            line: 418,
            column: 5
          }
        },
        line: 414
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 421,
            column: 6
          },
          end: {
            line: 421,
            column: 7
          }
        },
        loc: {
          start: {
            line: 421,
            column: 17
          },
          end: {
            line: 423,
            column: 5
          }
        },
        line: 421
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 426,
            column: 6
          },
          end: {
            line: 426,
            column: 7
          }
        },
        loc: {
          start: {
            line: 426,
            column: 22
          },
          end: {
            line: 428,
            column: 5
          }
        },
        line: 426
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 431,
            column: 6
          },
          end: {
            line: 431,
            column: 7
          }
        },
        loc: {
          start: {
            line: 431,
            column: 25
          },
          end: {
            line: 447,
            column: 5
          }
        },
        line: 431
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 450,
            column: 6
          },
          end: {
            line: 450,
            column: 7
          }
        },
        loc: {
          start: {
            line: 450,
            column: 16
          },
          end: {
            line: 456,
            column: 5
          }
        },
        line: 450
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 451,
            column: 35
          },
          end: {
            line: 451,
            column: 36
          }
        },
        loc: {
          start: {
            line: 451,
            column: 42
          },
          end: {
            line: 453,
            column: 9
          }
        },
        line: 451
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 462,
            column: 6
          },
          end: {
            line: 462,
            column: 7
          }
        },
        loc: {
          start: {
            line: 462,
            column: 35
          },
          end: {
            line: 477,
            column: 5
          }
        },
        line: 462
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 480,
            column: 6
          },
          end: {
            line: 480,
            column: 7
          }
        },
        loc: {
          start: {
            line: 480,
            column: 34
          },
          end: {
            line: 486,
            column: 5
          }
        },
        line: 480
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 489,
            column: 6
          },
          end: {
            line: 489,
            column: 7
          }
        },
        loc: {
          start: {
            line: 489,
            column: 32
          },
          end: {
            line: 507,
            column: 5
          }
        },
        line: 489
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 510,
            column: 6
          },
          end: {
            line: 510,
            column: 7
          }
        },
        loc: {
          start: {
            line: 510,
            column: 36
          },
          end: {
            line: 534,
            column: 5
          }
        },
        line: 510
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 540,
            column: 6
          },
          end: {
            line: 540,
            column: 7
          }
        },
        loc: {
          start: {
            line: 540,
            column: 34
          },
          end: {
            line: 565,
            column: 5
          }
        },
        line: 540
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 545,
            column: 25
          },
          end: {
            line: 545,
            column: 26
          }
        },
        loc: {
          start: {
            line: 545,
            column: 29
          },
          end: {
            line: 545,
            column: 73
          }
        },
        line: 545
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 549,
            column: 25
          },
          end: {
            line: 549,
            column: 26
          }
        },
        loc: {
          start: {
            line: 549,
            column: 29
          },
          end: {
            line: 549,
            column: 72
          }
        },
        line: 549
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 555,
            column: 25
          },
          end: {
            line: 555,
            column: 26
          }
        },
        loc: {
          start: {
            line: 555,
            column: 29
          },
          end: {
            line: 555,
            column: 73
          }
        },
        line: 555
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 559,
            column: 25
          },
          end: {
            line: 559,
            column: 26
          }
        },
        loc: {
          start: {
            line: 559,
            column: 29
          },
          end: {
            line: 559,
            column: 72
          }
        },
        line: 559
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 563,
            column: 41
          },
          end: {
            line: 563,
            column: 42
          }
        },
        loc: {
          start: {
            line: 563,
            column: 49
          },
          end: {
            line: 563,
            column: 154
          }
        },
        line: 563
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 568,
            column: 6
          },
          end: {
            line: 568,
            column: 7
          }
        },
        loc: {
          start: {
            line: 568,
            column: 35
          },
          end: {
            line: 571,
            column: 5
          }
        },
        line: 568
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 574,
            column: 6
          },
          end: {
            line: 574,
            column: 7
          }
        },
        loc: {
          start: {
            line: 574,
            column: 30
          },
          end: {
            line: 576,
            column: 5
          }
        },
        line: 574
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 136,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 136,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      },
      "1": {
        loc: {
          start: {
            line: 205,
            column: 8
          },
          end: {
            line: 207,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 205,
            column: 8
          },
          end: {
            line: 207,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 205
      },
      "2": {
        loc: {
          start: {
            line: 209,
            column: 8
          },
          end: {
            line: 211,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 209,
            column: 8
          },
          end: {
            line: 211,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 209
      },
      "3": {
        loc: {
          start: {
            line: 218,
            column: 8
          },
          end: {
            line: 220,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 218,
            column: 8
          },
          end: {
            line: 220,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 218
      },
      "4": {
        loc: {
          start: {
            line: 222,
            column: 8
          },
          end: {
            line: 225,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 222,
            column: 8
          },
          end: {
            line: 225,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 222
      },
      "5": {
        loc: {
          start: {
            line: 227,
            column: 8
          },
          end: {
            line: 229,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 227,
            column: 8
          },
          end: {
            line: 229,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 227
      },
      "6": {
        loc: {
          start: {
            line: 263,
            column: 27
          },
          end: {
            line: 263,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 263,
            column: 27
          },
          end: {
            line: 263,
            column: 50
          }
        }, {
          start: {
            line: 263,
            column: 54
          },
          end: {
            line: 263,
            column: 55
          }
        }],
        line: 263
      },
      "7": {
        loc: {
          start: {
            line: 264,
            column: 34
          },
          end: {
            line: 264,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 264,
            column: 34
          },
          end: {
            line: 264,
            column: 64
          }
        }, {
          start: {
            line: 264,
            column: 68
          },
          end: {
            line: 264,
            column: 69
          }
        }],
        line: 264
      },
      "8": {
        loc: {
          start: {
            line: 265,
            column: 29
          },
          end: {
            line: 265,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 265,
            column: 29
          },
          end: {
            line: 265,
            column: 54
          }
        }, {
          start: {
            line: 265,
            column: 58
          },
          end: {
            line: 265,
            column: 62
          }
        }],
        line: 265
      },
      "9": {
        loc: {
          start: {
            line: 271,
            column: 16
          },
          end: {
            line: 275,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 271,
            column: 16
          },
          end: {
            line: 275,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 271
      },
      "10": {
        loc: {
          start: {
            line: 287,
            column: 61
          },
          end: {
            line: 287,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 287,
            column: 61
          },
          end: {
            line: 287,
            column: 80
          }
        }, {
          start: {
            line: 287,
            column: 84
          },
          end: {
            line: 287,
            column: 89
          }
        }],
        line: 287
      },
      "11": {
        loc: {
          start: {
            line: 323,
            column: 8
          },
          end: {
            line: 325,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 323,
            column: 8
          },
          end: {
            line: 325,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 323
      },
      "12": {
        loc: {
          start: {
            line: 328,
            column: 8
          },
          end: {
            line: 330,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 328,
            column: 8
          },
          end: {
            line: 330,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 328
      },
      "13": {
        loc: {
          start: {
            line: 332,
            column: 8
          },
          end: {
            line: 341,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 332,
            column: 8
          },
          end: {
            line: 341,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 332
      },
      "14": {
        loc: {
          start: {
            line: 347,
            column: 8
          },
          end: {
            line: 349,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 347,
            column: 8
          },
          end: {
            line: 349,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 347
      },
      "15": {
        loc: {
          start: {
            line: 351,
            column: 8
          },
          end: {
            line: 356,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 351,
            column: 8
          },
          end: {
            line: 356,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 351
      },
      "16": {
        loc: {
          start: {
            line: 353,
            column: 12
          },
          end: {
            line: 355,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 353,
            column: 12
          },
          end: {
            line: 355,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 353
      },
      "17": {
        loc: {
          start: {
            line: 358,
            column: 8
          },
          end: {
            line: 367,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 358,
            column: 8
          },
          end: {
            line: 367,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 358
      },
      "18": {
        loc: {
          start: {
            line: 362,
            column: 23
          },
          end: {
            line: 362,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 362,
            column: 23
          },
          end: {
            line: 362,
            column: 50
          }
        }, {
          start: {
            line: 362,
            column: 54
          },
          end: {
            line: 362,
            column: 79
          }
        }],
        line: 362
      },
      "19": {
        loc: {
          start: {
            line: 364,
            column: 12
          },
          end: {
            line: 366,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 364,
            column: 12
          },
          end: {
            line: 366,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 364
      },
      "20": {
        loc: {
          start: {
            line: 369,
            column: 8
          },
          end: {
            line: 374,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 369,
            column: 8
          },
          end: {
            line: 374,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 369
      },
      "21": {
        loc: {
          start: {
            line: 371,
            column: 12
          },
          end: {
            line: 373,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 371,
            column: 12
          },
          end: {
            line: 373,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 371
      },
      "22": {
        loc: {
          start: {
            line: 389,
            column: 15
          },
          end: {
            line: 389,
            column: 64
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 389,
            column: 35
          },
          end: {
            line: 389,
            column: 60
          }
        }, {
          start: {
            line: 389,
            column: 63
          },
          end: {
            line: 389,
            column: 64
          }
        }],
        line: 389
      },
      "23": {
        loc: {
          start: {
            line: 397,
            column: 12
          },
          end: {
            line: 409,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 397,
            column: 12
          },
          end: {
            line: 409,
            column: 13
          }
        }, {
          start: {
            line: 399,
            column: 19
          },
          end: {
            line: 409,
            column: 13
          }
        }],
        line: 397
      },
      "24": {
        loc: {
          start: {
            line: 433,
            column: 8
          },
          end: {
            line: 435,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 433,
            column: 8
          },
          end: {
            line: 435,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 433
      },
      "25": {
        loc: {
          start: {
            line: 438,
            column: 8
          },
          end: {
            line: 441,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 438,
            column: 8
          },
          end: {
            line: 441,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 438
      },
      "26": {
        loc: {
          start: {
            line: 473,
            column: 8
          },
          end: {
            line: 475,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 473,
            column: 8
          },
          end: {
            line: 475,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 473
      },
      "27": {
        loc: {
          start: {
            line: 482,
            column: 8
          },
          end: {
            line: 484,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 482,
            column: 8
          },
          end: {
            line: 484,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 482
      },
      "28": {
        loc: {
          start: {
            line: 542,
            column: 8
          },
          end: {
            line: 562,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 542,
            column: 8
          },
          end: {
            line: 562,
            column: 9
          }
        }, {
          start: {
            line: 552,
            column: 15
          },
          end: {
            line: 562,
            column: 9
          }
        }],
        line: 542
      },
      "29": {
        loc: {
          start: {
            line: 552,
            column: 15
          },
          end: {
            line: 562,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 552,
            column: 15
          },
          end: {
            line: 562,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 552
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\cache\\cache-warming-system.ts"],
      sourcesContent: ["// ===================================\r\n// PINTEYA E-COMMERCE - CACHE WARMING SYSTEM\r\n// ===================================\r\n\r\nimport { logger, LogCategory } from '../enterprise/logger';\r\nimport { multiLayerCacheManager } from './multi-layer-cache-manager';\r\nimport { advancedCacheStrategyManager } from './advanced-cache-strategy-manager';\r\nimport { supabase } from '../supabase';\r\n\r\n/**\r\n * Estrategias de precalentamiento\r\n */\r\nexport enum WarmupStrategy {\r\n  IMMEDIATE = 'immediate',        // Inmediato al iniciar\r\n  SCHEDULED = 'scheduled',        // Programado por horarios\r\n  LAZY = 'lazy',                 // Bajo demanda\r\n  PREDICTIVE = 'predictive',     // Basado en predicciones\r\n  POPULAR = 'popular',           // Basado en popularidad\r\n  CRITICAL = 'critical'          // Solo datos cr\xEDticos\r\n}\r\n\r\n/**\r\n * Configuraci\xF3n de precalentamiento\r\n */\r\nexport interface WarmupConfig {\r\n  strategy: WarmupStrategy;\r\n  priority: 'low' | 'normal' | 'high' | 'critical';\r\n  schedule?: {\r\n    enabled: boolean;\r\n    cron?: string;\r\n    interval?: number;\r\n    timezone?: string;\r\n  };\r\n  conditions?: {\r\n    minCacheHitRate?: number;\r\n    maxServerLoad?: number;\r\n    timeWindows?: Array<{ start: string; end: string }>;\r\n  };\r\n  retryPolicy?: {\r\n    maxRetries: number;\r\n    backoffMultiplier: number;\r\n    initialDelay: number;\r\n  };\r\n  batchSize?: number;\r\n  concurrency?: number;\r\n  timeout?: number;\r\n}\r\n\r\n/**\r\n * Tarea de precalentamiento\r\n */\r\nexport interface WarmupTask {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  config: WarmupConfig;\r\n  fetcher: () => Promise<any>;\r\n  cacheKey: string;\r\n  strategyName: string;\r\n  dependencies?: string[];\r\n  estimatedDuration?: number;\r\n  lastRun?: number;\r\n  nextRun?: number;\r\n  successCount: number;\r\n  errorCount: number;\r\n  avgDuration: number;\r\n}\r\n\r\n/**\r\n * Resultado de precalentamiento\r\n */\r\nexport interface WarmupResult {\r\n  taskId: string;\r\n  success: boolean;\r\n  duration: number;\r\n  cacheKey: string;\r\n  dataSize: number;\r\n  error?: string;\r\n  timestamp: number;\r\n}\r\n\r\n/**\r\n * Estad\xEDsticas de precalentamiento\r\n */\r\nexport interface WarmupStats {\r\n  totalTasks: number;\r\n  activeTasks: number;\r\n  completedTasks: number;\r\n  failedTasks: number;\r\n  totalDuration: number;\r\n  avgDuration: number;\r\n  cacheHitImprovement: number;\r\n  lastRun: number;\r\n}\r\n\r\n/**\r\n * Configuraciones predefinidas de precalentamiento\r\n */\r\nexport const WARMUP_CONFIGS: Record<string, WarmupConfig> = {\r\n  // Datos cr\xEDticos del sistema\r\n  CRITICAL_SYSTEM: {\r\n    strategy: WarmupStrategy.IMMEDIATE,\r\n    priority: 'critical',\r\n    batchSize: 5,\r\n    concurrency: 2,\r\n    timeout: 30000,\r\n    retryPolicy: {\r\n      maxRetries: 3,\r\n      backoffMultiplier: 2,\r\n      initialDelay: 1000\r\n    }\r\n  },\r\n\r\n  // Productos populares\r\n  POPULAR_PRODUCTS: {\r\n    strategy: WarmupStrategy.SCHEDULED,\r\n    priority: 'high',\r\n    schedule: {\r\n      enabled: true,\r\n      interval: 3600000, // 1 hora\r\n      timezone: 'America/Argentina/Buenos_Aires'\r\n    },\r\n    batchSize: 20,\r\n    concurrency: 5,\r\n    timeout: 15000,\r\n    conditions: {\r\n      maxServerLoad: 0.7,\r\n      timeWindows: [\r\n        { start: '02:00', end: '06:00' }, // Madrugada\r\n        { start: '14:00', end: '16:00' }  // Siesta\r\n      ]\r\n    }\r\n  },\r\n\r\n  // Categor\xEDas principales\r\n  MAIN_CATEGORIES: {\r\n    strategy: WarmupStrategy.SCHEDULED,\r\n    priority: 'normal',\r\n    schedule: {\r\n      enabled: true,\r\n      interval: 7200000, // 2 horas\r\n      timezone: 'America/Argentina/Buenos_Aires'\r\n    },\r\n    batchSize: 10,\r\n    concurrency: 3,\r\n    timeout: 10000\r\n  },\r\n\r\n  // B\xFAsquedas frecuentes\r\n  FREQUENT_SEARCHES: {\r\n    strategy: WarmupStrategy.PREDICTIVE,\r\n    priority: 'normal',\r\n    batchSize: 15,\r\n    concurrency: 4,\r\n    timeout: 12000,\r\n    conditions: {\r\n      minCacheHitRate: 0.6\r\n    }\r\n  },\r\n\r\n  // Datos de usuario activos\r\n  ACTIVE_USERS: {\r\n    strategy: WarmupStrategy.LAZY,\r\n    priority: 'low',\r\n    batchSize: 10,\r\n    concurrency: 2,\r\n    timeout: 8000\r\n  }\r\n};\r\n\r\n/**\r\n * Sistema de precalentamiento de cache\r\n */\r\nexport class CacheWarmingSystem {\r\n  private static instance: CacheWarmingSystem;\r\n  private tasks = new Map<string, WarmupTask>();\r\n  private activeJobs = new Map<string, Promise<WarmupResult>>();\r\n  private scheduledJobs = new Map<string, NodeJS.Timeout>();\r\n  private stats: WarmupStats = {\r\n    totalTasks: 0,\r\n    activeTasks: 0,\r\n    completedTasks: 0,\r\n    failedTasks: 0,\r\n    totalDuration: 0,\r\n    avgDuration: 0,\r\n    cacheHitImprovement: 0,\r\n    lastRun: 0\r\n  };\r\n\r\n  private constructor() {\r\n    this.initializePredefinedTasks();\r\n  }\r\n\r\n  static getInstance(): CacheWarmingSystem {\r\n    if (!CacheWarmingSystem.instance) {\r\n      CacheWarmingSystem.instance = new CacheWarmingSystem();\r\n    }\r\n    return CacheWarmingSystem.instance;\r\n  }\r\n\r\n  /**\r\n   * Inicializa tareas predefinidas\r\n   */\r\n  private initializePredefinedTasks(): void {\r\n    // Tarea para productos populares\r\n    this.registerTask({\r\n      id: 'popular-products',\r\n      name: 'Productos Populares',\r\n      description: 'Precalienta cache de productos m\xE1s vendidos',\r\n      config: WARMUP_CONFIGS.POPULAR_PRODUCTS,\r\n      fetcher: this.fetchPopularProducts.bind(this),\r\n      cacheKey: 'products:popular',\r\n      strategyName: 'PRODUCT_DATA',\r\n      estimatedDuration: 5000,\r\n      successCount: 0,\r\n      errorCount: 0,\r\n      avgDuration: 0\r\n    });\r\n\r\n    // Tarea para categor\xEDas principales\r\n    this.registerTask({\r\n      id: 'main-categories',\r\n      name: 'Categor\xEDas Principales',\r\n      description: 'Precalienta cache de categor\xEDas principales',\r\n      config: WARMUP_CONFIGS.MAIN_CATEGORIES,\r\n      fetcher: this.fetchMainCategories.bind(this),\r\n      cacheKey: 'categories:main',\r\n      strategyName: 'PRODUCT_DATA',\r\n      estimatedDuration: 3000,\r\n      successCount: 0,\r\n      errorCount: 0,\r\n      avgDuration: 0\r\n    });\r\n\r\n    // Tarea para configuraci\xF3n del sistema\r\n    this.registerTask({\r\n      id: 'system-config',\r\n      name: 'Configuraci\xF3n del Sistema',\r\n      description: 'Precalienta configuraciones cr\xEDticas del sistema',\r\n      config: WARMUP_CONFIGS.CRITICAL_SYSTEM,\r\n      fetcher: this.fetchSystemConfig.bind(this),\r\n      cacheKey: 'system:config',\r\n      strategyName: 'CRITICAL_SYSTEM_DATA',\r\n      estimatedDuration: 2000,\r\n      successCount: 0,\r\n      errorCount: 0,\r\n      avgDuration: 0\r\n    });\r\n\r\n    // Tarea para b\xFAsquedas frecuentes\r\n    this.registerTask({\r\n      id: 'frequent-searches',\r\n      name: 'B\xFAsquedas Frecuentes',\r\n      description: 'Precalienta resultados de b\xFAsquedas m\xE1s frecuentes',\r\n      config: WARMUP_CONFIGS.FREQUENT_SEARCHES,\r\n      fetcher: this.fetchFrequentSearches.bind(this),\r\n      cacheKey: 'search:frequent',\r\n      strategyName: 'SEARCH_RESULTS',\r\n      estimatedDuration: 4000,\r\n      successCount: 0,\r\n      errorCount: 0,\r\n      avgDuration: 0\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Registra una nueva tarea de precalentamiento\r\n   */\r\n  registerTask(task: WarmupTask): void {\r\n    this.tasks.set(task.id, task);\r\n    this.stats.totalTasks = this.tasks.size;\r\n    \r\n    // Programar tarea si es necesario\r\n    if (task.config.schedule?.enabled) {\r\n      this.scheduleTask(task);\r\n    }\r\n    \r\n    // Ejecutar inmediatamente si es estrategia immediate\r\n    if (task.config.strategy === WarmupStrategy.IMMEDIATE) {\r\n      this.executeTask(task.id);\r\n    }\r\n    \r\n    logger.info(LogCategory.CACHE, `Tarea de precalentamiento registrada: ${task.name}`);\r\n  }\r\n\r\n  /**\r\n   * Ejecuta una tarea de precalentamiento\r\n   */\r\n  async executeTask(taskId: string): Promise<WarmupResult> {\r\n    const task = this.tasks.get(taskId);\r\n    if (!task) {\r\n      throw new Error(`Tarea no encontrada: ${taskId}`);\r\n    }\r\n\r\n    // Verificar si ya est\xE1 ejecut\xE1ndose\r\n    if (this.activeJobs.has(taskId)) {\r\n      logger.warn(LogCategory.CACHE, `Tarea ya en ejecuci\xF3n: ${taskId}`);\r\n      return this.activeJobs.get(taskId)!;\r\n    }\r\n\r\n    // Verificar condiciones\r\n    if (!await this.checkConditions(task.config)) {\r\n      throw new Error(`Condiciones no cumplidas para tarea: ${taskId}`);\r\n    }\r\n\r\n    const startTime = Date.now();\r\n    this.stats.activeTasks++;\r\n\r\n    const jobPromise = this.executeTaskWithRetry(task);\r\n    this.activeJobs.set(taskId, jobPromise);\r\n\r\n    try {\r\n      const result = await jobPromise;\r\n      \r\n      // Actualizar estad\xEDsticas de la tarea\r\n      task.successCount++;\r\n      task.lastRun = Date.now();\r\n      task.avgDuration = ((task.avgDuration * (task.successCount - 1)) + result.duration) / task.successCount;\r\n      \r\n      // Actualizar estad\xEDsticas globales\r\n      this.stats.completedTasks++;\r\n      this.stats.totalDuration += result.duration;\r\n      this.stats.avgDuration = this.stats.totalDuration / this.stats.completedTasks;\r\n      this.stats.lastRun = Date.now();\r\n      \r\n      logger.info(LogCategory.CACHE, `Tarea completada: ${task.name} (${result.duration}ms)`);\r\n      return result;\r\n      \r\n    } catch (error) {\r\n      // Actualizar estad\xEDsticas de error\r\n      task.errorCount++;\r\n      this.stats.failedTasks++;\r\n      \r\n      logger.error(LogCategory.CACHE, `Error en tarea: ${task.name}`, error as Error);\r\n      throw error;\r\n      \r\n    } finally {\r\n      this.activeJobs.delete(taskId);\r\n      this.stats.activeTasks--;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Ejecuta tarea con reintentos\r\n   */\r\n  private async executeTaskWithRetry(task: WarmupTask): Promise<WarmupResult> {\r\n    const { retryPolicy } = task.config;\r\n    let lastError: Error | null = null;\r\n    \r\n    const maxRetries = retryPolicy?.maxRetries || 1;\r\n    const backoffMultiplier = retryPolicy?.backoffMultiplier || 2;\r\n    const initialDelay = retryPolicy?.initialDelay || 1000;\r\n\r\n    for (let attempt = 0; attempt < maxRetries; attempt++) {\r\n      try {\r\n        return await this.executeSingleTask(task);\r\n      } catch (error) {\r\n        lastError = error as Error;\r\n        \r\n        if (attempt < maxRetries - 1) {\r\n          const delay = initialDelay * Math.pow(backoffMultiplier, attempt);\r\n          logger.warn(LogCategory.CACHE, `Reintentando tarea ${task.name} en ${delay}ms (intento ${attempt + 1}/${maxRetries})`);\r\n          await new Promise(resolve => setTimeout(resolve, delay));\r\n        }\r\n      }\r\n    }\r\n\r\n    throw lastError;\r\n  }\r\n\r\n  /**\r\n   * Ejecuta una sola tarea\r\n   */\r\n  private async executeSingleTask(task: WarmupTask): Promise<WarmupResult> {\r\n    const startTime = Date.now();\r\n    \r\n    try {\r\n      // Ejecutar fetcher con timeout\r\n      const timeoutPromise = new Promise((_, reject) => {\r\n        setTimeout(() => reject(new Error('Timeout')), task.config.timeout || 30000);\r\n      });\r\n      \r\n      const dataPromise = task.fetcher();\r\n      const data = await Promise.race([dataPromise, timeoutPromise]);\r\n      \r\n      // Guardar en cache usando la estrategia especificada\r\n      await advancedCacheStrategyManager.execute(\r\n        task.cacheKey,\r\n        () => Promise.resolve(data),\r\n        task.strategyName\r\n      );\r\n      \r\n      const duration = Date.now() - startTime;\r\n      const dataSize = JSON.stringify(data).length;\r\n      \r\n      return {\r\n        taskId: task.id,\r\n        success: true,\r\n        duration,\r\n        cacheKey: task.cacheKey,\r\n        dataSize,\r\n        timestamp: Date.now()\r\n      };\r\n      \r\n    } catch (error) {\r\n      const duration = Date.now() - startTime;\r\n      \r\n      return {\r\n        taskId: task.id,\r\n        success: false,\r\n        duration,\r\n        cacheKey: task.cacheKey,\r\n        dataSize: 0,\r\n        error: (error as Error).message,\r\n        timestamp: Date.now()\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Programa una tarea\r\n   */\r\n  private scheduleTask(task: WarmupTask): void {\r\n    const { schedule } = task.config;\r\n    if (!schedule?.enabled) {return;}\r\n\r\n    // Limpiar programaci\xF3n anterior si existe\r\n    const existingJob = this.scheduledJobs.get(task.id);\r\n    if (existingJob) {\r\n      clearInterval(existingJob);\r\n    }\r\n\r\n    // Programar nueva ejecuci\xF3n\r\n    if (schedule.interval) {\r\n      const interval = setInterval(() => {\r\n        this.executeTask(task.id).catch(error => {\r\n          logger.error(LogCategory.CACHE, `Error en tarea programada: ${task.name}`, error);\r\n        });\r\n      }, schedule.interval);\r\n      \r\n      this.scheduledJobs.set(task.id, interval);\r\n      \r\n      // Calcular pr\xF3xima ejecuci\xF3n\r\n      task.nextRun = Date.now() + schedule.interval;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Verifica condiciones para ejecutar tarea\r\n   */\r\n  private async checkConditions(config: WarmupConfig): Promise<boolean> {\r\n    const { conditions } = config;\r\n    if (!conditions) {return true;}\r\n\r\n    // Verificar carga del servidor\r\n    if (conditions.maxServerLoad) {\r\n      const serverLoad = await this.getServerLoad();\r\n      if (serverLoad > conditions.maxServerLoad) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // Verificar ventanas de tiempo\r\n    if (conditions.timeWindows) {\r\n      const now = new Date();\r\n      const currentTime = `${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}`;\r\n      \r\n      const isInTimeWindow = conditions.timeWindows.some(window => {\r\n        return currentTime >= window.start && currentTime <= window.end;\r\n      });\r\n      \r\n      if (!isInTimeWindow) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // Verificar hit rate m\xEDnimo\r\n    if (conditions.minCacheHitRate) {\r\n      const hitRate = await this.getCacheHitRate();\r\n      if (hitRate < conditions.minCacheHitRate) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Obtiene carga del servidor (placeholder)\r\n   */\r\n  private async getServerLoad(): Promise<number> {\r\n    // Implementar l\xF3gica real de monitoreo de carga\r\n    return Math.random() * 0.8; // Placeholder\r\n  }\r\n\r\n  /**\r\n   * Obtiene hit rate del cache\r\n   */\r\n  private async getCacheHitRate(): Promise<number> {\r\n    const metrics = advancedCacheStrategyManager.getAllMetrics();\r\n    const totalRequests = Object.values(metrics).reduce((sum, m) => sum + m.totalRequests, 0);\r\n    const totalHits = Object.values(metrics).reduce((sum, m) => sum + m.hits, 0);\r\n    \r\n    return totalRequests > 0 ? totalHits / totalRequests : 0;\r\n  }\r\n\r\n  /**\r\n   * Ejecuta todas las tareas de una estrategia\r\n   */\r\n  async executeStrategy(strategy: WarmupStrategy): Promise<WarmupResult[]> {\r\n    const strategyTasks = Array.from(this.tasks.values())\r\n      .filter(task => task.config.strategy === strategy);\r\n\r\n    const results = await Promise.allSettled(\r\n      strategyTasks.map(task => this.executeTask(task.id))\r\n    );\r\n\r\n    return results.map((result, index) => {\r\n      if (result.status === 'fulfilled') {\r\n        return result.value;\r\n      } else {\r\n        return {\r\n          taskId: strategyTasks[index].id,\r\n          success: false,\r\n          duration: 0,\r\n          cacheKey: strategyTasks[index].cacheKey,\r\n          dataSize: 0,\r\n          error: result.reason.message,\r\n          timestamp: Date.now()\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Obtiene estad\xEDsticas del sistema\r\n   */\r\n  getStats(): WarmupStats {\r\n    return { ...this.stats };\r\n  }\r\n\r\n  /**\r\n   * Obtiene todas las tareas\r\n   */\r\n  getTasks(): WarmupTask[] {\r\n    return Array.from(this.tasks.values());\r\n  }\r\n\r\n  /**\r\n   * Obtiene una tarea espec\xEDfica\r\n   */\r\n  getTask(taskId: string): WarmupTask | undefined {\r\n    return this.tasks.get(taskId);\r\n  }\r\n\r\n  /**\r\n   * Elimina una tarea\r\n   */\r\n  removeTask(taskId: string): boolean {\r\n    const task = this.tasks.get(taskId);\r\n    if (!task) {return false;}\r\n\r\n    // Limpiar programaci\xF3n\r\n    const scheduledJob = this.scheduledJobs.get(taskId);\r\n    if (scheduledJob) {\r\n      clearInterval(scheduledJob);\r\n      this.scheduledJobs.delete(taskId);\r\n    }\r\n\r\n    // Eliminar tarea\r\n    this.tasks.delete(taskId);\r\n    this.stats.totalTasks = this.tasks.size;\r\n    \r\n    logger.info(LogCategory.CACHE, `Tarea eliminada: ${task.name}`);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Detiene todas las tareas\r\n   */\r\n  stopAll(): void {\r\n    this.scheduledJobs.forEach((job) => {\r\n      clearInterval(job);\r\n    });\r\n    this.scheduledJobs.clear();\r\n    \r\n    logger.info(LogCategory.CACHE, 'Todas las tareas de precalentamiento detenidas');\r\n  }\r\n\r\n  // ===================================\r\n  // FETCHERS PREDEFINIDOS\r\n  // ===================================\r\n\r\n  /**\r\n   * Obtiene productos populares\r\n   */\r\n  private async fetchPopularProducts(): Promise<any> {\r\n    const { data, error } = await supabase\r\n      .from('products')\r\n      .select(`\r\n        id,\r\n        name,\r\n        price,\r\n        image_url,\r\n        category:categories(name),\r\n        inventory:inventory(stock)\r\n      `)\r\n      .eq('featured', true)\r\n      .order('sales_count', { ascending: false })\r\n      .limit(20);\r\n\r\n    if (error) {throw error;}\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * Obtiene categor\xEDas principales\r\n   */\r\n  private async fetchMainCategories(): Promise<any> {\r\n    const { data, error } = await supabase\r\n      .from('categories')\r\n      .select('*')\r\n      .eq('parent_id', null)\r\n      .order('order_index');\r\n\r\n    if (error) {throw error;}\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * Obtiene configuraci\xF3n del sistema\r\n   */\r\n  private async fetchSystemConfig(): Promise<any> {\r\n    // Simular configuraci\xF3n del sistema\r\n    return {\r\n      siteName: 'Pinteya E-commerce',\r\n      currency: 'ARS',\r\n      timezone: 'America/Argentina/Buenos_Aires',\r\n      features: {\r\n        cart: true,\r\n        wishlist: true,\r\n        reviews: true,\r\n        notifications: true\r\n      },\r\n      limits: {\r\n        maxCartItems: 50,\r\n        maxWishlistItems: 100,\r\n        maxImageSize: 5242880 // 5MB\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Obtiene b\xFAsquedas frecuentes\r\n   */\r\n  private async fetchFrequentSearches(): Promise<any> {\r\n    // Simular b\xFAsquedas frecuentes\r\n    return [\r\n      { query: 'pintura', count: 150 },\r\n      { query: 'herramientas', count: 120 },\r\n      { query: 'taladro', count: 95 },\r\n      { query: 'martillo', count: 80 },\r\n      { query: 'destornillador', count: 75 }\r\n    ];\r\n  }\r\n}\r\n\r\n// Instancia singleton\r\nexport const cacheWarmingSystem = CacheWarmingSystem.getInstance();\r\n\r\n/**\r\n * Utilidades para precalentamiento de cache\r\n */\r\nexport const CacheWarmingUtils = {\r\n  /**\r\n   * Precalienta cache para una p\xE1gina espec\xEDfica\r\n   */\r\n  async warmupPage(pagePath: string): Promise<void> {\r\n    const tasks: Array<{ key: string; fetcher: () => Promise<any>; strategy: string }> = [];\r\n\r\n    if (pagePath === '/') {\r\n      tasks.push(\r\n        { key: 'home:featured-products', fetcher: () => cacheWarmingSystem['fetchPopularProducts'](), strategy: 'PRODUCT_DATA' },\r\n        { key: 'home:main-categories', fetcher: () => cacheWarmingSystem['fetchMainCategories'](), strategy: 'PRODUCT_DATA' }\r\n      );\r\n    } else if (pagePath.startsWith('/shop')) {\r\n      tasks.push(\r\n        { key: 'shop:products', fetcher: () => cacheWarmingSystem['fetchPopularProducts'](), strategy: 'PRODUCT_DATA' },\r\n        { key: 'shop:categories', fetcher: () => cacheWarmingSystem['fetchMainCategories'](), strategy: 'PRODUCT_DATA' }\r\n      );\r\n    }\r\n\r\n    const warmupPromises = tasks.map(task =>\r\n      advancedCacheStrategyManager.execute(task.key, task.fetcher, task.strategy)\r\n    );\r\n\r\n    await Promise.allSettled(warmupPromises);\r\n  },\r\n\r\n  /**\r\n   * Precalienta cache basado en usuario\r\n   */\r\n  async warmupForUser(userId: string): Promise<void> {\r\n    // Implementar l\xF3gica espec\xEDfica del usuario\r\n    logger.info(LogCategory.CACHE, `Precalentando cache para usuario: ${userId}`);\r\n  },\r\n\r\n  /**\r\n   * Precalienta cache cr\xEDtico\r\n   */\r\n  async warmupCritical(): Promise<void> {\r\n    await cacheWarmingSystem.executeStrategy(WarmupStrategy.CRITICAL);\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["CacheWarmingSystem", "CacheWarmingUtils", "WARMUP_CONFIGS", "WarmupStrategy", "cacheWarmingSystem", "CRITICAL_SYSTEM", "strategy", "priority", "batchSize", "concurrency", "timeout", "retryPolicy", "maxRetries", "backoffMultiplier", "initialDelay", "POPULAR_PRODUCTS", "schedule", "enabled", "interval", "timezone", "conditions", "maxServerLoad", "timeWindows", "start", "end", "MAIN_CATEGORIES", "FREQUENT_SEARCHES", "minCacheHitRate", "ACTIVE_USERS", "tasks", "Map", "activeJobs", "scheduledJobs", "stats", "totalTasks", "activeTasks", "completedTasks", "failedTasks", "totalDuration", "avgDuration", "cacheHitImprovement", "lastRun", "initializePredefinedTasks", "getInstance", "instance", "registerTask", "id", "name", "description", "config", "fetcher", "fetchPopularProducts", "bind", "cacheKey", "strategyName", "estimatedDuration", "successCount", "errorCount", "fetchMainCategories", "fetchSystemConfig", "fetchFrequentSearches", "task", "set", "size", "scheduleTask", "executeTask", "logger", "info", "LogCategory", "CACHE", "taskId", "get", "Error", "has", "warn", "checkConditions", "startTime", "Date", "now", "jobPromise", "executeTaskWithRetry", "result", "duration", "error", "delete", "lastError", "attempt", "executeSingleTask", "delay", "Math", "pow", "Promise", "resolve", "setTimeout", "timeoutPromise", "_", "reject", "dataPromise", "data", "race", "advancedCacheStrategyManager", "execute", "dataSize", "JSON", "stringify", "length", "success", "timestamp", "message", "existingJob", "clearInterval", "setInterval", "catch", "nextRun", "serverLoad", "getServerLoad", "currentTime", "getHours", "toString", "padStart", "getMinutes", "isInTimeWindow", "some", "window", "hitRate", "getCacheHitRate", "random", "metrics", "getAllMetrics", "totalRequests", "Object", "values", "reduce", "sum", "m", "totalHits", "hits", "executeStrategy", "strategyTasks", "Array", "from", "filter", "results", "allSettled", "map", "index", "status", "value", "reason", "getStats", "getTasks", "getTask", "removeTask", "scheduledJob", "stopAll", "forEach", "job", "clear", "supabase", "select", "eq", "order", "ascending", "limit", "siteName", "currency", "features", "cart", "wishlist", "reviews", "notifications", "limits", "maxCartItems", "maxWishlistItems", "maxImageSize", "query", "count", "warmupPage", "pagePath", "push", "key", "startsWith", "warmupPromises", "warmupForUser", "userId", "warmupCritical"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "41ba570dd80b7f4e400476441bcfd175ac59b48e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2hzya20w9l = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2hzya20w9l();
cov_2hzya20w9l().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2hzya20w9l().f[0]++;
  cov_2hzya20w9l().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2hzya20w9l().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_2hzya20w9l().s[3]++;
_export(exports, {
  get CacheWarmingSystem() {
    /* istanbul ignore next */
    cov_2hzya20w9l().f[1]++;
    cov_2hzya20w9l().s[4]++;
    return CacheWarmingSystem;
  },
  get CacheWarmingUtils() {
    /* istanbul ignore next */
    cov_2hzya20w9l().f[2]++;
    cov_2hzya20w9l().s[5]++;
    return CacheWarmingUtils;
  },
  get WARMUP_CONFIGS() {
    /* istanbul ignore next */
    cov_2hzya20w9l().f[3]++;
    cov_2hzya20w9l().s[6]++;
    return WARMUP_CONFIGS;
  },
  get WarmupStrategy() {
    /* istanbul ignore next */
    cov_2hzya20w9l().f[4]++;
    cov_2hzya20w9l().s[7]++;
    return WarmupStrategy;
  },
  get cacheWarmingSystem() {
    /* istanbul ignore next */
    cov_2hzya20w9l().f[5]++;
    cov_2hzya20w9l().s[8]++;
    return cacheWarmingSystem;
  }
});
const _logger =
/* istanbul ignore next */
(cov_2hzya20w9l().s[9]++, require("../enterprise/logger"));
const _advancedcachestrategymanager =
/* istanbul ignore next */
(cov_2hzya20w9l().s[10]++, require("./advanced-cache-strategy-manager"));
const _supabase =
/* istanbul ignore next */
(cov_2hzya20w9l().s[11]++, require("../supabase"));
var WarmupStrategy =
/* istanbul ignore next */
(/*#__PURE__*/cov_2hzya20w9l().s[12]++, function (WarmupStrategy) {
  /* istanbul ignore next */
  cov_2hzya20w9l().f[6]++;
  cov_2hzya20w9l().s[13]++;
  WarmupStrategy["IMMEDIATE"] = "immediate";
  /* istanbul ignore next */
  cov_2hzya20w9l().s[14]++;
  WarmupStrategy["SCHEDULED"] = "scheduled";
  /* istanbul ignore next */
  cov_2hzya20w9l().s[15]++;
  WarmupStrategy["LAZY"] = "lazy";
  /* istanbul ignore next */
  cov_2hzya20w9l().s[16]++;
  WarmupStrategy["PREDICTIVE"] = "predictive";
  /* istanbul ignore next */
  cov_2hzya20w9l().s[17]++;
  WarmupStrategy["POPULAR"] = "popular";
  /* istanbul ignore next */
  cov_2hzya20w9l().s[18]++;
  WarmupStrategy["CRITICAL"] = "critical"; // Solo datos críticos
  /* istanbul ignore next */
  cov_2hzya20w9l().s[19]++;
  return WarmupStrategy;
}({}));
const WARMUP_CONFIGS =
/* istanbul ignore next */
(cov_2hzya20w9l().s[20]++, {
  // Datos críticos del sistema
  CRITICAL_SYSTEM: {
    strategy: "immediate",
    priority: 'critical',
    batchSize: 5,
    concurrency: 2,
    timeout: 30000,
    retryPolicy: {
      maxRetries: 3,
      backoffMultiplier: 2,
      initialDelay: 1000
    }
  },
  // Productos populares
  POPULAR_PRODUCTS: {
    strategy: "scheduled",
    priority: 'high',
    schedule: {
      enabled: true,
      interval: 3600000,
      timezone: 'America/Argentina/Buenos_Aires'
    },
    batchSize: 20,
    concurrency: 5,
    timeout: 15000,
    conditions: {
      maxServerLoad: 0.7,
      timeWindows: [{
        start: '02:00',
        end: '06:00'
      }, {
        start: '14:00',
        end: '16:00'
      } // Siesta
      ]
    }
  },
  // Categorías principales
  MAIN_CATEGORIES: {
    strategy: "scheduled",
    priority: 'normal',
    schedule: {
      enabled: true,
      interval: 7200000,
      timezone: 'America/Argentina/Buenos_Aires'
    },
    batchSize: 10,
    concurrency: 3,
    timeout: 10000
  },
  // Búsquedas frecuentes
  FREQUENT_SEARCHES: {
    strategy: "predictive",
    priority: 'normal',
    batchSize: 15,
    concurrency: 4,
    timeout: 12000,
    conditions: {
      minCacheHitRate: 0.6
    }
  },
  // Datos de usuario activos
  ACTIVE_USERS: {
    strategy: "lazy",
    priority: 'low',
    batchSize: 10,
    concurrency: 2,
    timeout: 8000
  }
});
class CacheWarmingSystem {
  constructor() {
    /* istanbul ignore next */
    cov_2hzya20w9l().f[7]++;
    cov_2hzya20w9l().s[21]++;
    this.tasks = new Map();
    /* istanbul ignore next */
    cov_2hzya20w9l().s[22]++;
    this.activeJobs = new Map();
    /* istanbul ignore next */
    cov_2hzya20w9l().s[23]++;
    this.scheduledJobs = new Map();
    /* istanbul ignore next */
    cov_2hzya20w9l().s[24]++;
    this.stats = {
      totalTasks: 0,
      activeTasks: 0,
      completedTasks: 0,
      failedTasks: 0,
      totalDuration: 0,
      avgDuration: 0,
      cacheHitImprovement: 0,
      lastRun: 0
    };
    /* istanbul ignore next */
    cov_2hzya20w9l().s[25]++;
    this.initializePredefinedTasks();
  }
  static getInstance() {
    /* istanbul ignore next */
    cov_2hzya20w9l().f[8]++;
    cov_2hzya20w9l().s[26]++;
    if (!CacheWarmingSystem.instance) {
      /* istanbul ignore next */
      cov_2hzya20w9l().b[0][0]++;
      cov_2hzya20w9l().s[27]++;
      CacheWarmingSystem.instance = new CacheWarmingSystem();
    } else
    /* istanbul ignore next */
    {
      cov_2hzya20w9l().b[0][1]++;
    }
    cov_2hzya20w9l().s[28]++;
    return CacheWarmingSystem.instance;
  }
  /**
  * Inicializa tareas predefinidas
  */
  initializePredefinedTasks() {
    /* istanbul ignore next */
    cov_2hzya20w9l().f[9]++;
    cov_2hzya20w9l().s[29]++;
    // Tarea para productos populares
    this.registerTask({
      id: 'popular-products',
      name: 'Productos Populares',
      description: 'Precalienta cache de productos más vendidos',
      config: WARMUP_CONFIGS.POPULAR_PRODUCTS,
      fetcher: this.fetchPopularProducts.bind(this),
      cacheKey: 'products:popular',
      strategyName: 'PRODUCT_DATA',
      estimatedDuration: 5000,
      successCount: 0,
      errorCount: 0,
      avgDuration: 0
    });
    // Tarea para categorías principales
    /* istanbul ignore next */
    cov_2hzya20w9l().s[30]++;
    this.registerTask({
      id: 'main-categories',
      name: 'Categorías Principales',
      description: 'Precalienta cache de categorías principales',
      config: WARMUP_CONFIGS.MAIN_CATEGORIES,
      fetcher: this.fetchMainCategories.bind(this),
      cacheKey: 'categories:main',
      strategyName: 'PRODUCT_DATA',
      estimatedDuration: 3000,
      successCount: 0,
      errorCount: 0,
      avgDuration: 0
    });
    // Tarea para configuración del sistema
    /* istanbul ignore next */
    cov_2hzya20w9l().s[31]++;
    this.registerTask({
      id: 'system-config',
      name: 'Configuración del Sistema',
      description: 'Precalienta configuraciones críticas del sistema',
      config: WARMUP_CONFIGS.CRITICAL_SYSTEM,
      fetcher: this.fetchSystemConfig.bind(this),
      cacheKey: 'system:config',
      strategyName: 'CRITICAL_SYSTEM_DATA',
      estimatedDuration: 2000,
      successCount: 0,
      errorCount: 0,
      avgDuration: 0
    });
    // Tarea para búsquedas frecuentes
    /* istanbul ignore next */
    cov_2hzya20w9l().s[32]++;
    this.registerTask({
      id: 'frequent-searches',
      name: 'Búsquedas Frecuentes',
      description: 'Precalienta resultados de búsquedas más frecuentes',
      config: WARMUP_CONFIGS.FREQUENT_SEARCHES,
      fetcher: this.fetchFrequentSearches.bind(this),
      cacheKey: 'search:frequent',
      strategyName: 'SEARCH_RESULTS',
      estimatedDuration: 4000,
      successCount: 0,
      errorCount: 0,
      avgDuration: 0
    });
  }
  /**
  * Registra una nueva tarea de precalentamiento
  */
  registerTask(task) {
    /* istanbul ignore next */
    cov_2hzya20w9l().f[10]++;
    cov_2hzya20w9l().s[33]++;
    this.tasks.set(task.id, task);
    /* istanbul ignore next */
    cov_2hzya20w9l().s[34]++;
    this.stats.totalTasks = this.tasks.size;
    // Programar tarea si es necesario
    /* istanbul ignore next */
    cov_2hzya20w9l().s[35]++;
    if (task.config.schedule?.enabled) {
      /* istanbul ignore next */
      cov_2hzya20w9l().b[1][0]++;
      cov_2hzya20w9l().s[36]++;
      this.scheduleTask(task);
    } else
    /* istanbul ignore next */
    {
      cov_2hzya20w9l().b[1][1]++;
    }
    // Ejecutar inmediatamente si es estrategia immediate
    cov_2hzya20w9l().s[37]++;
    if (task.config.strategy === "immediate") {
      /* istanbul ignore next */
      cov_2hzya20w9l().b[2][0]++;
      cov_2hzya20w9l().s[38]++;
      this.executeTask(task.id);
    } else
    /* istanbul ignore next */
    {
      cov_2hzya20w9l().b[2][1]++;
    }
    cov_2hzya20w9l().s[39]++;
    _logger.logger.info(_logger.LogCategory.CACHE, `Tarea de precalentamiento registrada: ${task.name}`);
  }
  /**
  * Ejecuta una tarea de precalentamiento
  */
  async executeTask(taskId) {
    /* istanbul ignore next */
    cov_2hzya20w9l().f[11]++;
    const task =
    /* istanbul ignore next */
    (cov_2hzya20w9l().s[40]++, this.tasks.get(taskId));
    /* istanbul ignore next */
    cov_2hzya20w9l().s[41]++;
    if (!task) {
      /* istanbul ignore next */
      cov_2hzya20w9l().b[3][0]++;
      cov_2hzya20w9l().s[42]++;
      throw new Error(`Tarea no encontrada: ${taskId}`);
    } else
    /* istanbul ignore next */
    {
      cov_2hzya20w9l().b[3][1]++;
    }
    // Verificar si ya está ejecutándose
    cov_2hzya20w9l().s[43]++;
    if (this.activeJobs.has(taskId)) {
      /* istanbul ignore next */
      cov_2hzya20w9l().b[4][0]++;
      cov_2hzya20w9l().s[44]++;
      _logger.logger.warn(_logger.LogCategory.CACHE, `Tarea ya en ejecución: ${taskId}`);
      /* istanbul ignore next */
      cov_2hzya20w9l().s[45]++;
      return this.activeJobs.get(taskId);
    } else
    /* istanbul ignore next */
    {
      cov_2hzya20w9l().b[4][1]++;
    }
    // Verificar condiciones
    cov_2hzya20w9l().s[46]++;
    if (!(await this.checkConditions(task.config))) {
      /* istanbul ignore next */
      cov_2hzya20w9l().b[5][0]++;
      cov_2hzya20w9l().s[47]++;
      throw new Error(`Condiciones no cumplidas para tarea: ${taskId}`);
    } else
    /* istanbul ignore next */
    {
      cov_2hzya20w9l().b[5][1]++;
    }
    const startTime =
    /* istanbul ignore next */
    (cov_2hzya20w9l().s[48]++, Date.now());
    /* istanbul ignore next */
    cov_2hzya20w9l().s[49]++;
    this.stats.activeTasks++;
    const jobPromise =
    /* istanbul ignore next */
    (cov_2hzya20w9l().s[50]++, this.executeTaskWithRetry(task));
    /* istanbul ignore next */
    cov_2hzya20w9l().s[51]++;
    this.activeJobs.set(taskId, jobPromise);
    /* istanbul ignore next */
    cov_2hzya20w9l().s[52]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_2hzya20w9l().s[53]++, await jobPromise);
      // Actualizar estadísticas de la tarea
      /* istanbul ignore next */
      cov_2hzya20w9l().s[54]++;
      task.successCount++;
      /* istanbul ignore next */
      cov_2hzya20w9l().s[55]++;
      task.lastRun = Date.now();
      /* istanbul ignore next */
      cov_2hzya20w9l().s[56]++;
      task.avgDuration = (task.avgDuration * (task.successCount - 1) + result.duration) / task.successCount;
      // Actualizar estadísticas globales
      /* istanbul ignore next */
      cov_2hzya20w9l().s[57]++;
      this.stats.completedTasks++;
      /* istanbul ignore next */
      cov_2hzya20w9l().s[58]++;
      this.stats.totalDuration += result.duration;
      /* istanbul ignore next */
      cov_2hzya20w9l().s[59]++;
      this.stats.avgDuration = this.stats.totalDuration / this.stats.completedTasks;
      /* istanbul ignore next */
      cov_2hzya20w9l().s[60]++;
      this.stats.lastRun = Date.now();
      /* istanbul ignore next */
      cov_2hzya20w9l().s[61]++;
      _logger.logger.info(_logger.LogCategory.CACHE, `Tarea completada: ${task.name} (${result.duration}ms)`);
      /* istanbul ignore next */
      cov_2hzya20w9l().s[62]++;
      return result;
    } catch (error) {
      /* istanbul ignore next */
      cov_2hzya20w9l().s[63]++;
      // Actualizar estadísticas de error
      task.errorCount++;
      /* istanbul ignore next */
      cov_2hzya20w9l().s[64]++;
      this.stats.failedTasks++;
      /* istanbul ignore next */
      cov_2hzya20w9l().s[65]++;
      _logger.logger.error(_logger.LogCategory.CACHE, `Error en tarea: ${task.name}`, error);
      /* istanbul ignore next */
      cov_2hzya20w9l().s[66]++;
      throw error;
    } finally {
      /* istanbul ignore next */
      cov_2hzya20w9l().s[67]++;
      this.activeJobs.delete(taskId);
      /* istanbul ignore next */
      cov_2hzya20w9l().s[68]++;
      this.stats.activeTasks--;
    }
  }
  /**
  * Ejecuta tarea con reintentos
  */
  async executeTaskWithRetry(task) {
    /* istanbul ignore next */
    cov_2hzya20w9l().f[12]++;
    const {
      retryPolicy
    } =
    /* istanbul ignore next */
    (cov_2hzya20w9l().s[69]++, task.config);
    let lastError =
    /* istanbul ignore next */
    (cov_2hzya20w9l().s[70]++, null);
    const maxRetries =
    /* istanbul ignore next */
    (cov_2hzya20w9l().s[71]++,
    /* istanbul ignore next */
    (cov_2hzya20w9l().b[6][0]++, retryPolicy?.maxRetries) ||
    /* istanbul ignore next */
    (cov_2hzya20w9l().b[6][1]++, 1));
    const backoffMultiplier =
    /* istanbul ignore next */
    (cov_2hzya20w9l().s[72]++,
    /* istanbul ignore next */
    (cov_2hzya20w9l().b[7][0]++, retryPolicy?.backoffMultiplier) ||
    /* istanbul ignore next */
    (cov_2hzya20w9l().b[7][1]++, 2));
    const initialDelay =
    /* istanbul ignore next */
    (cov_2hzya20w9l().s[73]++,
    /* istanbul ignore next */
    (cov_2hzya20w9l().b[8][0]++, retryPolicy?.initialDelay) ||
    /* istanbul ignore next */
    (cov_2hzya20w9l().b[8][1]++, 1000));
    /* istanbul ignore next */
    cov_2hzya20w9l().s[74]++;
    for (let attempt =
    /* istanbul ignore next */
    (cov_2hzya20w9l().s[75]++, 0); attempt < maxRetries; attempt++) {
      /* istanbul ignore next */
      cov_2hzya20w9l().s[76]++;
      try {
        /* istanbul ignore next */
        cov_2hzya20w9l().s[77]++;
        return await this.executeSingleTask(task);
      } catch (error) {
        /* istanbul ignore next */
        cov_2hzya20w9l().s[78]++;
        lastError = error;
        /* istanbul ignore next */
        cov_2hzya20w9l().s[79]++;
        if (attempt < maxRetries - 1) {
          /* istanbul ignore next */
          cov_2hzya20w9l().b[9][0]++;
          const delay =
          /* istanbul ignore next */
          (cov_2hzya20w9l().s[80]++, initialDelay * Math.pow(backoffMultiplier, attempt));
          /* istanbul ignore next */
          cov_2hzya20w9l().s[81]++;
          _logger.logger.warn(_logger.LogCategory.CACHE, `Reintentando tarea ${task.name} en ${delay}ms (intento ${attempt + 1}/${maxRetries})`);
          /* istanbul ignore next */
          cov_2hzya20w9l().s[82]++;
          await new Promise(resolve => {
            /* istanbul ignore next */
            cov_2hzya20w9l().f[13]++;
            cov_2hzya20w9l().s[83]++;
            return setTimeout(resolve, delay);
          });
        } else
        /* istanbul ignore next */
        {
          cov_2hzya20w9l().b[9][1]++;
        }
      }
    }
    /* istanbul ignore next */
    cov_2hzya20w9l().s[84]++;
    throw lastError;
  }
  /**
  * Ejecuta una sola tarea
  */
  async executeSingleTask(task) {
    /* istanbul ignore next */
    cov_2hzya20w9l().f[14]++;
    const startTime =
    /* istanbul ignore next */
    (cov_2hzya20w9l().s[85]++, Date.now());
    /* istanbul ignore next */
    cov_2hzya20w9l().s[86]++;
    try {
      // Ejecutar fetcher con timeout
      const timeoutPromise =
      /* istanbul ignore next */
      (cov_2hzya20w9l().s[87]++, new Promise((_, reject) => {
        /* istanbul ignore next */
        cov_2hzya20w9l().f[15]++;
        cov_2hzya20w9l().s[88]++;
        setTimeout(() => {
          /* istanbul ignore next */
          cov_2hzya20w9l().f[16]++;
          cov_2hzya20w9l().s[89]++;
          return reject(new Error('Timeout'));
        },
        /* istanbul ignore next */
        (cov_2hzya20w9l().b[10][0]++, task.config.timeout) ||
        /* istanbul ignore next */
        (cov_2hzya20w9l().b[10][1]++, 30000));
      }));
      const dataPromise =
      /* istanbul ignore next */
      (cov_2hzya20w9l().s[90]++, task.fetcher());
      const data =
      /* istanbul ignore next */
      (cov_2hzya20w9l().s[91]++, await Promise.race([dataPromise, timeoutPromise]));
      // Guardar en cache usando la estrategia especificada
      /* istanbul ignore next */
      cov_2hzya20w9l().s[92]++;
      await _advancedcachestrategymanager.advancedCacheStrategyManager.execute(task.cacheKey, () => {
        /* istanbul ignore next */
        cov_2hzya20w9l().f[17]++;
        cov_2hzya20w9l().s[93]++;
        return Promise.resolve(data);
      }, task.strategyName);
      const duration =
      /* istanbul ignore next */
      (cov_2hzya20w9l().s[94]++, Date.now() - startTime);
      const dataSize =
      /* istanbul ignore next */
      (cov_2hzya20w9l().s[95]++, JSON.stringify(data).length);
      /* istanbul ignore next */
      cov_2hzya20w9l().s[96]++;
      return {
        taskId: task.id,
        success: true,
        duration,
        cacheKey: task.cacheKey,
        dataSize,
        timestamp: Date.now()
      };
    } catch (error) {
      const duration =
      /* istanbul ignore next */
      (cov_2hzya20w9l().s[97]++, Date.now() - startTime);
      /* istanbul ignore next */
      cov_2hzya20w9l().s[98]++;
      return {
        taskId: task.id,
        success: false,
        duration,
        cacheKey: task.cacheKey,
        dataSize: 0,
        error: error.message,
        timestamp: Date.now()
      };
    }
  }
  /**
  * Programa una tarea
  */
  scheduleTask(task) {
    /* istanbul ignore next */
    cov_2hzya20w9l().f[18]++;
    const {
      schedule
    } =
    /* istanbul ignore next */
    (cov_2hzya20w9l().s[99]++, task.config);
    /* istanbul ignore next */
    cov_2hzya20w9l().s[100]++;
    if (!schedule?.enabled) {
      /* istanbul ignore next */
      cov_2hzya20w9l().b[11][0]++;
      cov_2hzya20w9l().s[101]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2hzya20w9l().b[11][1]++;
    }
    // Limpiar programación anterior si existe
    const existingJob =
    /* istanbul ignore next */
    (cov_2hzya20w9l().s[102]++, this.scheduledJobs.get(task.id));
    /* istanbul ignore next */
    cov_2hzya20w9l().s[103]++;
    if (existingJob) {
      /* istanbul ignore next */
      cov_2hzya20w9l().b[12][0]++;
      cov_2hzya20w9l().s[104]++;
      clearInterval(existingJob);
    } else
    /* istanbul ignore next */
    {
      cov_2hzya20w9l().b[12][1]++;
    }
    // Programar nueva ejecución
    cov_2hzya20w9l().s[105]++;
    if (schedule.interval) {
      /* istanbul ignore next */
      cov_2hzya20w9l().b[13][0]++;
      const interval =
      /* istanbul ignore next */
      (cov_2hzya20w9l().s[106]++, setInterval(() => {
        /* istanbul ignore next */
        cov_2hzya20w9l().f[19]++;
        cov_2hzya20w9l().s[107]++;
        this.executeTask(task.id).catch(error => {
          /* istanbul ignore next */
          cov_2hzya20w9l().f[20]++;
          cov_2hzya20w9l().s[108]++;
          _logger.logger.error(_logger.LogCategory.CACHE, `Error en tarea programada: ${task.name}`, error);
        });
      }, schedule.interval));
      /* istanbul ignore next */
      cov_2hzya20w9l().s[109]++;
      this.scheduledJobs.set(task.id, interval);
      // Calcular próxima ejecución
      /* istanbul ignore next */
      cov_2hzya20w9l().s[110]++;
      task.nextRun = Date.now() + schedule.interval;
    } else
    /* istanbul ignore next */
    {
      cov_2hzya20w9l().b[13][1]++;
    }
  }
  /**
  * Verifica condiciones para ejecutar tarea
  */
  async checkConditions(config) {
    /* istanbul ignore next */
    cov_2hzya20w9l().f[21]++;
    const {
      conditions
    } =
    /* istanbul ignore next */
    (cov_2hzya20w9l().s[111]++, config);
    /* istanbul ignore next */
    cov_2hzya20w9l().s[112]++;
    if (!conditions) {
      /* istanbul ignore next */
      cov_2hzya20w9l().b[14][0]++;
      cov_2hzya20w9l().s[113]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_2hzya20w9l().b[14][1]++;
    }
    // Verificar carga del servidor
    cov_2hzya20w9l().s[114]++;
    if (conditions.maxServerLoad) {
      /* istanbul ignore next */
      cov_2hzya20w9l().b[15][0]++;
      const serverLoad =
      /* istanbul ignore next */
      (cov_2hzya20w9l().s[115]++, await this.getServerLoad());
      /* istanbul ignore next */
      cov_2hzya20w9l().s[116]++;
      if (serverLoad > conditions.maxServerLoad) {
        /* istanbul ignore next */
        cov_2hzya20w9l().b[16][0]++;
        cov_2hzya20w9l().s[117]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_2hzya20w9l().b[16][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_2hzya20w9l().b[15][1]++;
    }
    // Verificar ventanas de tiempo
    cov_2hzya20w9l().s[118]++;
    if (conditions.timeWindows) {
      /* istanbul ignore next */
      cov_2hzya20w9l().b[17][0]++;
      const now =
      /* istanbul ignore next */
      (cov_2hzya20w9l().s[119]++, new Date());
      const currentTime =
      /* istanbul ignore next */
      (cov_2hzya20w9l().s[120]++, `${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}`);
      const isInTimeWindow =
      /* istanbul ignore next */
      (cov_2hzya20w9l().s[121]++, conditions.timeWindows.some(window => {
        /* istanbul ignore next */
        cov_2hzya20w9l().f[22]++;
        cov_2hzya20w9l().s[122]++;
        return /* istanbul ignore next */(cov_2hzya20w9l().b[18][0]++, currentTime >= window.start) &&
        /* istanbul ignore next */
        (cov_2hzya20w9l().b[18][1]++, currentTime <= window.end);
      }));
      /* istanbul ignore next */
      cov_2hzya20w9l().s[123]++;
      if (!isInTimeWindow) {
        /* istanbul ignore next */
        cov_2hzya20w9l().b[19][0]++;
        cov_2hzya20w9l().s[124]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_2hzya20w9l().b[19][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_2hzya20w9l().b[17][1]++;
    }
    // Verificar hit rate mínimo
    cov_2hzya20w9l().s[125]++;
    if (conditions.minCacheHitRate) {
      /* istanbul ignore next */
      cov_2hzya20w9l().b[20][0]++;
      const hitRate =
      /* istanbul ignore next */
      (cov_2hzya20w9l().s[126]++, await this.getCacheHitRate());
      /* istanbul ignore next */
      cov_2hzya20w9l().s[127]++;
      if (hitRate < conditions.minCacheHitRate) {
        /* istanbul ignore next */
        cov_2hzya20w9l().b[21][0]++;
        cov_2hzya20w9l().s[128]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_2hzya20w9l().b[21][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_2hzya20w9l().b[20][1]++;
    }
    cov_2hzya20w9l().s[129]++;
    return true;
  }
  /**
  * Obtiene carga del servidor (placeholder)
  */
  async getServerLoad() {
    /* istanbul ignore next */
    cov_2hzya20w9l().f[23]++;
    cov_2hzya20w9l().s[130]++;
    // Implementar lógica real de monitoreo de carga
    return Math.random() * 0.8; // Placeholder
  }
  /**
  * Obtiene hit rate del cache
  */
  async getCacheHitRate() {
    /* istanbul ignore next */
    cov_2hzya20w9l().f[24]++;
    const metrics =
    /* istanbul ignore next */
    (cov_2hzya20w9l().s[131]++, _advancedcachestrategymanager.advancedCacheStrategyManager.getAllMetrics());
    const totalRequests =
    /* istanbul ignore next */
    (cov_2hzya20w9l().s[132]++, Object.values(metrics).reduce((sum, m) => {
      /* istanbul ignore next */
      cov_2hzya20w9l().f[25]++;
      cov_2hzya20w9l().s[133]++;
      return sum + m.totalRequests;
    }, 0));
    const totalHits =
    /* istanbul ignore next */
    (cov_2hzya20w9l().s[134]++, Object.values(metrics).reduce((sum, m) => {
      /* istanbul ignore next */
      cov_2hzya20w9l().f[26]++;
      cov_2hzya20w9l().s[135]++;
      return sum + m.hits;
    }, 0));
    /* istanbul ignore next */
    cov_2hzya20w9l().s[136]++;
    return totalRequests > 0 ?
    /* istanbul ignore next */
    (cov_2hzya20w9l().b[22][0]++, totalHits / totalRequests) :
    /* istanbul ignore next */
    (cov_2hzya20w9l().b[22][1]++, 0);
  }
  /**
  * Ejecuta todas las tareas de una estrategia
  */
  async executeStrategy(strategy) {
    /* istanbul ignore next */
    cov_2hzya20w9l().f[27]++;
    const strategyTasks =
    /* istanbul ignore next */
    (cov_2hzya20w9l().s[137]++, Array.from(this.tasks.values()).filter(task => {
      /* istanbul ignore next */
      cov_2hzya20w9l().f[28]++;
      cov_2hzya20w9l().s[138]++;
      return task.config.strategy === strategy;
    }));
    const results =
    /* istanbul ignore next */
    (cov_2hzya20w9l().s[139]++, await Promise.allSettled(strategyTasks.map(task => {
      /* istanbul ignore next */
      cov_2hzya20w9l().f[29]++;
      cov_2hzya20w9l().s[140]++;
      return this.executeTask(task.id);
    })));
    /* istanbul ignore next */
    cov_2hzya20w9l().s[141]++;
    return results.map((result, index) => {
      /* istanbul ignore next */
      cov_2hzya20w9l().f[30]++;
      cov_2hzya20w9l().s[142]++;
      if (result.status === 'fulfilled') {
        /* istanbul ignore next */
        cov_2hzya20w9l().b[23][0]++;
        cov_2hzya20w9l().s[143]++;
        return result.value;
      } else {
        /* istanbul ignore next */
        cov_2hzya20w9l().b[23][1]++;
        cov_2hzya20w9l().s[144]++;
        return {
          taskId: strategyTasks[index].id,
          success: false,
          duration: 0,
          cacheKey: strategyTasks[index].cacheKey,
          dataSize: 0,
          error: result.reason.message,
          timestamp: Date.now()
        };
      }
    });
  }
  /**
  * Obtiene estadísticas del sistema
  */
  getStats() {
    /* istanbul ignore next */
    cov_2hzya20w9l().f[31]++;
    cov_2hzya20w9l().s[145]++;
    return {
      ...this.stats
    };
  }
  /**
  * Obtiene todas las tareas
  */
  getTasks() {
    /* istanbul ignore next */
    cov_2hzya20w9l().f[32]++;
    cov_2hzya20w9l().s[146]++;
    return Array.from(this.tasks.values());
  }
  /**
  * Obtiene una tarea específica
  */
  getTask(taskId) {
    /* istanbul ignore next */
    cov_2hzya20w9l().f[33]++;
    cov_2hzya20w9l().s[147]++;
    return this.tasks.get(taskId);
  }
  /**
  * Elimina una tarea
  */
  removeTask(taskId) {
    /* istanbul ignore next */
    cov_2hzya20w9l().f[34]++;
    const task =
    /* istanbul ignore next */
    (cov_2hzya20w9l().s[148]++, this.tasks.get(taskId));
    /* istanbul ignore next */
    cov_2hzya20w9l().s[149]++;
    if (!task) {
      /* istanbul ignore next */
      cov_2hzya20w9l().b[24][0]++;
      cov_2hzya20w9l().s[150]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_2hzya20w9l().b[24][1]++;
    }
    // Limpiar programación
    const scheduledJob =
    /* istanbul ignore next */
    (cov_2hzya20w9l().s[151]++, this.scheduledJobs.get(taskId));
    /* istanbul ignore next */
    cov_2hzya20w9l().s[152]++;
    if (scheduledJob) {
      /* istanbul ignore next */
      cov_2hzya20w9l().b[25][0]++;
      cov_2hzya20w9l().s[153]++;
      clearInterval(scheduledJob);
      /* istanbul ignore next */
      cov_2hzya20w9l().s[154]++;
      this.scheduledJobs.delete(taskId);
    } else
    /* istanbul ignore next */
    {
      cov_2hzya20w9l().b[25][1]++;
    }
    // Eliminar tarea
    cov_2hzya20w9l().s[155]++;
    this.tasks.delete(taskId);
    /* istanbul ignore next */
    cov_2hzya20w9l().s[156]++;
    this.stats.totalTasks = this.tasks.size;
    /* istanbul ignore next */
    cov_2hzya20w9l().s[157]++;
    _logger.logger.info(_logger.LogCategory.CACHE, `Tarea eliminada: ${task.name}`);
    /* istanbul ignore next */
    cov_2hzya20w9l().s[158]++;
    return true;
  }
  /**
  * Detiene todas las tareas
  */
  stopAll() {
    /* istanbul ignore next */
    cov_2hzya20w9l().f[35]++;
    cov_2hzya20w9l().s[159]++;
    this.scheduledJobs.forEach(job => {
      /* istanbul ignore next */
      cov_2hzya20w9l().f[36]++;
      cov_2hzya20w9l().s[160]++;
      clearInterval(job);
    });
    /* istanbul ignore next */
    cov_2hzya20w9l().s[161]++;
    this.scheduledJobs.clear();
    /* istanbul ignore next */
    cov_2hzya20w9l().s[162]++;
    _logger.logger.info(_logger.LogCategory.CACHE, 'Todas las tareas de precalentamiento detenidas');
  }
  // ===================================
  // FETCHERS PREDEFINIDOS
  // ===================================
  /**
  * Obtiene productos populares
  */
  async fetchPopularProducts() {
    /* istanbul ignore next */
    cov_2hzya20w9l().f[37]++;
    const {
      data,
      error
    } =
    /* istanbul ignore next */
    (cov_2hzya20w9l().s[163]++, await _supabase.supabase.from('products').select(`
        id,
        name,
        price,
        image_url,
        category:categories(name),
        inventory:inventory(stock)
      `).eq('featured', true).order('sales_count', {
      ascending: false
    }).limit(20));
    /* istanbul ignore next */
    cov_2hzya20w9l().s[164]++;
    if (error) {
      /* istanbul ignore next */
      cov_2hzya20w9l().b[26][0]++;
      cov_2hzya20w9l().s[165]++;
      throw error;
    } else
    /* istanbul ignore next */
    {
      cov_2hzya20w9l().b[26][1]++;
    }
    cov_2hzya20w9l().s[166]++;
    return data;
  }
  /**
  * Obtiene categorías principales
  */
  async fetchMainCategories() {
    /* istanbul ignore next */
    cov_2hzya20w9l().f[38]++;
    const {
      data,
      error
    } =
    /* istanbul ignore next */
    (cov_2hzya20w9l().s[167]++, await _supabase.supabase.from('categories').select('*').eq('parent_id', null).order('order_index'));
    /* istanbul ignore next */
    cov_2hzya20w9l().s[168]++;
    if (error) {
      /* istanbul ignore next */
      cov_2hzya20w9l().b[27][0]++;
      cov_2hzya20w9l().s[169]++;
      throw error;
    } else
    /* istanbul ignore next */
    {
      cov_2hzya20w9l().b[27][1]++;
    }
    cov_2hzya20w9l().s[170]++;
    return data;
  }
  /**
  * Obtiene configuración del sistema
  */
  async fetchSystemConfig() {
    /* istanbul ignore next */
    cov_2hzya20w9l().f[39]++;
    cov_2hzya20w9l().s[171]++;
    // Simular configuración del sistema
    return {
      siteName: 'Pinteya E-commerce',
      currency: 'ARS',
      timezone: 'America/Argentina/Buenos_Aires',
      features: {
        cart: true,
        wishlist: true,
        reviews: true,
        notifications: true
      },
      limits: {
        maxCartItems: 50,
        maxWishlistItems: 100,
        maxImageSize: 5242880 // 5MB
      }
    };
  }
  /**
  * Obtiene búsquedas frecuentes
  */
  async fetchFrequentSearches() {
    /* istanbul ignore next */
    cov_2hzya20w9l().f[40]++;
    cov_2hzya20w9l().s[172]++;
    // Simular búsquedas frecuentes
    return [{
      query: 'pintura',
      count: 150
    }, {
      query: 'herramientas',
      count: 120
    }, {
      query: 'taladro',
      count: 95
    }, {
      query: 'martillo',
      count: 80
    }, {
      query: 'destornillador',
      count: 75
    }];
  }
}
const cacheWarmingSystem =
/* istanbul ignore next */
(cov_2hzya20w9l().s[173]++, CacheWarmingSystem.getInstance());
const CacheWarmingUtils =
/* istanbul ignore next */
(cov_2hzya20w9l().s[174]++, {
  /**
  * Precalienta cache para una página específica
  */
  async warmupPage(pagePath) {
    /* istanbul ignore next */
    cov_2hzya20w9l().f[41]++;
    const tasks =
    /* istanbul ignore next */
    (cov_2hzya20w9l().s[175]++, []);
    /* istanbul ignore next */
    cov_2hzya20w9l().s[176]++;
    if (pagePath === '/') {
      /* istanbul ignore next */
      cov_2hzya20w9l().b[28][0]++;
      cov_2hzya20w9l().s[177]++;
      tasks.push({
        key: 'home:featured-products',
        fetcher: () => {
          /* istanbul ignore next */
          cov_2hzya20w9l().f[42]++;
          cov_2hzya20w9l().s[178]++;
          return cacheWarmingSystem['fetchPopularProducts']();
        },
        strategy: 'PRODUCT_DATA'
      }, {
        key: 'home:main-categories',
        fetcher: () => {
          /* istanbul ignore next */
          cov_2hzya20w9l().f[43]++;
          cov_2hzya20w9l().s[179]++;
          return cacheWarmingSystem['fetchMainCategories']();
        },
        strategy: 'PRODUCT_DATA'
      });
    } else {
      /* istanbul ignore next */
      cov_2hzya20w9l().b[28][1]++;
      cov_2hzya20w9l().s[180]++;
      if (pagePath.startsWith('/shop')) {
        /* istanbul ignore next */
        cov_2hzya20w9l().b[29][0]++;
        cov_2hzya20w9l().s[181]++;
        tasks.push({
          key: 'shop:products',
          fetcher: () => {
            /* istanbul ignore next */
            cov_2hzya20w9l().f[44]++;
            cov_2hzya20w9l().s[182]++;
            return cacheWarmingSystem['fetchPopularProducts']();
          },
          strategy: 'PRODUCT_DATA'
        }, {
          key: 'shop:categories',
          fetcher: () => {
            /* istanbul ignore next */
            cov_2hzya20w9l().f[45]++;
            cov_2hzya20w9l().s[183]++;
            return cacheWarmingSystem['fetchMainCategories']();
          },
          strategy: 'PRODUCT_DATA'
        });
      } else
      /* istanbul ignore next */
      {
        cov_2hzya20w9l().b[29][1]++;
      }
    }
    const warmupPromises =
    /* istanbul ignore next */
    (cov_2hzya20w9l().s[184]++, tasks.map(task => {
      /* istanbul ignore next */
      cov_2hzya20w9l().f[46]++;
      cov_2hzya20w9l().s[185]++;
      return _advancedcachestrategymanager.advancedCacheStrategyManager.execute(task.key, task.fetcher, task.strategy);
    }));
    /* istanbul ignore next */
    cov_2hzya20w9l().s[186]++;
    await Promise.allSettled(warmupPromises);
  },
  /**
  * Precalienta cache basado en usuario
  */
  async warmupForUser(userId) {
    /* istanbul ignore next */
    cov_2hzya20w9l().f[47]++;
    cov_2hzya20w9l().s[187]++;
    // Implementar lógica específica del usuario
    _logger.logger.info(_logger.LogCategory.CACHE, `Precalentando cache para usuario: ${userId}`);
  },
  /**
  * Precalienta cache crítico
  */
  async warmupCritical() {
    /* istanbul ignore next */
    cov_2hzya20w9l().f[48]++;
    cov_2hzya20w9l().s[188]++;
    await cacheWarmingSystem.executeStrategy("critical");
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,