9d4cbce64e4a2946161983963df01eae
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_2j9aud3tx0() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\user\\dashboard\\route.ts";
  var hash = "0fb25195eaf7fae785f5b6f65163f2dd5dee30b2";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\user\\dashboard\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 23
        }
      },
      "6": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 38
        }
      },
      "7": {
        start: {
          line: 21,
          column: 18
        },
        end: {
          line: 21,
          column: 66
        }
      },
      "8": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 54
        }
      },
      "9": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 24
        }
      },
      "10": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 127,
          column: 5
        }
      },
      "11": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 34,
          column: 9
        }
      },
      "12": {
        start: {
          line: 28,
          column: 12
        },
        end: {
          line: 28,
          column: 105
        }
      },
      "13": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 33,
          column: 15
        }
      },
      "14": {
        start: {
          line: 36,
          column: 24
        },
        end: {
          line: 36,
          column: 49
        }
      },
      "15": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 46,
          column: 9
        }
      },
      "16": {
        start: {
          line: 38,
          column: 34
        },
        end: {
          line: 42,
          column: 13
        }
      },
      "17": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 45,
          column: 15
        }
      },
      "18": {
        start: {
          line: 48,
          column: 26
        },
        end: {
          line: 48,
          column: 44
        }
      },
      "19": {
        start: {
          line: 49,
          column: 31
        },
        end: {
          line: 49,
          column: 118
        }
      },
      "20": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "21": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 55,
          column: 15
        }
      },
      "22": {
        start: {
          line: 58,
          column: 33
        },
        end: {
          line: 58,
          column: 140
        }
      },
      "23": {
        start: {
          line: 60,
          column: 39
        },
        end: {
          line: 74,
          column: 19
        }
      },
      "24": {
        start: {
          line: 76,
          column: 36
        },
        end: {
          line: 76,
          column: 123
        }
      },
      "25": {
        start: {
          line: 78,
          column: 28
        },
        end: {
          line: 78,
          column: 47
        }
      },
      "26": {
        start: {
          line: 79,
          column: 27
        },
        end: {
          line: 79,
          column: 94
        }
      },
      "27": {
        start: {
          line: 79,
          column: 56
        },
        end: {
          line: 79,
          column: 85
        }
      },
      "28": {
        start: {
          line: 80,
          column: 30
        },
        end: {
          line: 80,
          column: 93
        }
      },
      "29": {
        start: {
          line: 80,
          column: 54
        },
        end: {
          line: 80,
          column: 80
        }
      },
      "30": {
        start: {
          line: 81,
          column: 32
        },
        end: {
          line: 81,
          column: 97
        }
      },
      "31": {
        start: {
          line: 81,
          column: 56
        },
        end: {
          line: 81,
          column: 84
        }
      },
      "32": {
        start: {
          line: 82,
          column: 30
        },
        end: {
          line: 82,
          column: 93
        }
      },
      "33": {
        start: {
          line: 82,
          column: 54
        },
        end: {
          line: 82,
          column: 80
        }
      },
      "34": {
        start: {
          line: 84,
          column: 32
        },
        end: {
          line: 84,
          column: 70
        }
      },
      "35": {
        start: {
          line: 86,
          column: 38
        },
        end: {
          line: 94,
          column: 53
        }
      },
      "36": {
        start: {
          line: 94,
          column: 41
        },
        end: {
          line: 94,
          column: 45
        }
      },
      "37": {
        start: {
          line: 95,
          column: 29
        },
        end: {
          line: 95,
          column: 68
        }
      },
      "38": {
        start: {
          line: 96,
          column: 30
        },
        end: {
          line: 115,
          column: 9
        }
      },
      "39": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 119,
          column: 11
        }
      },
      "40": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 121,
          column: 66
        }
      },
      "41": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 126,
          column: 11
        }
      },
      "42": {
        start: {
          line: 133,
          column: 24
        },
        end: {
          line: 133,
          column: 26
        }
      },
      "43": {
        start: {
          line: 134,
          column: 16
        },
        end: {
          line: 134,
          column: 26
        }
      },
      "44": {
        start: {
          line: 136,
          column: 4
        },
        end: {
          line: 140,
          column: 5
        }
      },
      "45": {
        start: {
          line: 136,
          column: 16
        },
        end: {
          line: 136,
          column: 17
        }
      },
      "46": {
        start: {
          line: 137,
          column: 21
        },
        end: {
          line: 137,
          column: 71
        }
      },
      "47": {
        start: {
          line: 138,
          column: 20
        },
        end: {
          line: 138,
          column: 91
        }
      },
      "48": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 139,
          column: 29
        }
      },
      "49": {
        start: {
          line: 142,
          column: 4
        },
        end: {
          line: 148,
          column: 7
        }
      },
      "50": {
        start: {
          line: 143,
          column: 26
        },
        end: {
          line: 143,
          column: 52
        }
      },
      "51": {
        start: {
          line: 144,
          column: 20
        },
        end: {
          line: 144,
          column: 101
        }
      },
      "52": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 147,
          column: 9
        }
      },
      "53": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 146,
          column: 56
        }
      },
      "54": {
        start: {
          line: 149,
          column: 4
        },
        end: {
          line: 152,
          column: 12
        }
      },
      "55": {
        start: {
          line: 149,
          column: 63
        },
        end: {
          line: 152,
          column: 9
        }
      },
      "56": {
        start: {
          line: 158,
          column: 23
        },
        end: {
          line: 158,
          column: 25
        }
      },
      "57": {
        start: {
          line: 159,
          column: 4
        },
        end: {
          line: 170,
          column: 7
        }
      },
      "58": {
        start: {
          line: 160,
          column: 26
        },
        end: {
          line: 160,
          column: 41
        }
      },
      "59": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 167,
          column: 9
        }
      },
      "60": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 166,
          column: 14
        }
      },
      "61": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 168,
          column: 62
        }
      },
      "62": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 169,
          column: 48
        }
      },
      "63": {
        start: {
          line: 171,
          column: 4
        },
        end: {
          line: 171,
          column: 99
        }
      },
      "64": {
        start: {
          line: 171,
          column: 50
        },
        end: {
          line: 171,
          column: 85
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 19
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "GET",
        decl: {
          start: {
            line: 24,
            column: 15
          },
          end: {
            line: 24,
            column: 18
          }
        },
        loc: {
          start: {
            line: 24,
            column: 28
          },
          end: {
            line: 128,
            column: 1
          }
        },
        line: 24
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 79,
            column: 42
          },
          end: {
            line: 79,
            column: 43
          }
        },
        loc: {
          start: {
            line: 79,
            column: 56
          },
          end: {
            line: 79,
            column: 85
          }
        },
        line: 79
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 80,
            column: 45
          },
          end: {
            line: 80,
            column: 46
          }
        },
        loc: {
          start: {
            line: 80,
            column: 54
          },
          end: {
            line: 80,
            column: 80
          }
        },
        line: 80
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 81,
            column: 47
          },
          end: {
            line: 81,
            column: 48
          }
        },
        loc: {
          start: {
            line: 81,
            column: 56
          },
          end: {
            line: 81,
            column: 84
          }
        },
        line: 81
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 82,
            column: 45
          },
          end: {
            line: 82,
            column: 46
          }
        },
        loc: {
          start: {
            line: 82,
            column: 54
          },
          end: {
            line: 82,
            column: 80
          }
        },
        line: 82
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 94,
            column: 36
          },
          end: {
            line: 94,
            column: 37
          }
        },
        loc: {
          start: {
            line: 94,
            column: 41
          },
          end: {
            line: 94,
            column: 45
          }
        },
        line: 94
      },
      "9": {
        name: "calculateMonthlySpending",
        decl: {
          start: {
            line: 132,
            column: 9
          },
          end: {
            line: 132,
            column: 33
          }
        },
        loc: {
          start: {
            line: 132,
            column: 42
          },
          end: {
            line: 153,
            column: 1
          }
        },
        line: 132
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 142,
            column: 19
          },
          end: {
            line: 142,
            column: 20
          }
        },
        loc: {
          start: {
            line: 142,
            column: 28
          },
          end: {
            line: 148,
            column: 5
          }
        },
        line: 142
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 149,
            column: 43
          },
          end: {
            line: 149,
            column: 44
          }
        },
        loc: {
          start: {
            line: 149,
            column: 63
          },
          end: {
            line: 152,
            column: 9
          }
        },
        line: 149
      },
      "12": {
        name: "calculateTopProducts",
        decl: {
          start: {
            line: 157,
            column: 9
          },
          end: {
            line: 157,
            column: 29
          }
        },
        loc: {
          start: {
            line: 157,
            column: 42
          },
          end: {
            line: 172,
            column: 1
          }
        },
        line: 157
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 159,
            column: 23
          },
          end: {
            line: 159,
            column: 24
          }
        },
        loc: {
          start: {
            line: 159,
            column: 31
          },
          end: {
            line: 170,
            column: 5
          }
        },
        line: 159
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 171,
            column: 42
          },
          end: {
            line: 171,
            column: 43
          }
        },
        loc: {
          start: {
            line: 171,
            column: 50
          },
          end: {
            line: 171,
            column: 85
          }
        },
        line: 171
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "1": {
        loc: {
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "2": {
        loc: {
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "3": {
        loc: {
          start: {
            line: 78,
            column: 28
          },
          end: {
            line: 78,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 78,
            column: 28
          },
          end: {
            line: 78,
            column: 42
          }
        }, {
          start: {
            line: 78,
            column: 46
          },
          end: {
            line: 78,
            column: 47
          }
        }],
        line: 78
      },
      "4": {
        loc: {
          start: {
            line: 79,
            column: 27
          },
          end: {
            line: 79,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 79,
            column: 27
          },
          end: {
            line: 79,
            column: 89
          }
        }, {
          start: {
            line: 79,
            column: 93
          },
          end: {
            line: 79,
            column: 94
          }
        }],
        line: 79
      },
      "5": {
        loc: {
          start: {
            line: 80,
            column: 30
          },
          end: {
            line: 80,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 80,
            column: 30
          },
          end: {
            line: 80,
            column: 88
          }
        }, {
          start: {
            line: 80,
            column: 92
          },
          end: {
            line: 80,
            column: 93
          }
        }],
        line: 80
      },
      "6": {
        loc: {
          start: {
            line: 81,
            column: 32
          },
          end: {
            line: 81,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 81,
            column: 32
          },
          end: {
            line: 81,
            column: 92
          }
        }, {
          start: {
            line: 81,
            column: 96
          },
          end: {
            line: 81,
            column: 97
          }
        }],
        line: 81
      },
      "7": {
        loc: {
          start: {
            line: 82,
            column: 30
          },
          end: {
            line: 82,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 82,
            column: 30
          },
          end: {
            line: 82,
            column: 88
          }
        }, {
          start: {
            line: 82,
            column: 92
          },
          end: {
            line: 82,
            column: 93
          }
        }],
        line: 82
      },
      "8": {
        loc: {
          start: {
            line: 84,
            column: 57
          },
          end: {
            line: 84,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 84,
            column: 57
          },
          end: {
            line: 84,
            column: 63
          }
        }, {
          start: {
            line: 84,
            column: 67
          },
          end: {
            line: 84,
            column: 69
          }
        }],
        line: 84
      },
      "9": {
        loc: {
          start: {
            line: 94,
            column: 24
          },
          end: {
            line: 94,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 94,
            column: 24
          },
          end: {
            line: 94,
            column: 46
          }
        }, {
          start: {
            line: 94,
            column: 50
          },
          end: {
            line: 94,
            column: 52
          }
        }],
        line: 94
      },
      "10": {
        loc: {
          start: {
            line: 95,
            column: 50
          },
          end: {
            line: 95,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 95,
            column: 50
          },
          end: {
            line: 95,
            column: 61
          }
        }, {
          start: {
            line: 95,
            column: 65
          },
          end: {
            line: 95,
            column: 67
          }
        }],
        line: 95
      },
      "11": {
        loc: {
          start: {
            line: 109,
            column: 33
          },
          end: {
            line: 109,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 109,
            column: 33
          },
          end: {
            line: 109,
            column: 50
          }
        }, {
          start: {
            line: 109,
            column: 54
          },
          end: {
            line: 109,
            column: 55
          }
        }],
        line: 109
      },
      "12": {
        loc: {
          start: {
            line: 111,
            column: 27
          },
          end: {
            line: 111,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 111,
            column: 27
          },
          end: {
            line: 111,
            column: 39
          }
        }, {
          start: {
            line: 111,
            column: 43
          },
          end: {
            line: 111,
            column: 45
          }
        }],
        line: 111
      },
      "13": {
        loc: {
          start: {
            line: 114,
            column: 23
          },
          end: {
            line: 114,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 114,
            column: 23
          },
          end: {
            line: 114,
            column: 32
          }
        }, {
          start: {
            line: 114,
            column: 36
          },
          end: {
            line: 114,
            column: 38
          }
        }],
        line: 114
      },
      "14": {
        loc: {
          start: {
            line: 145,
            column: 8
          },
          end: {
            line: 147,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 145,
            column: 8
          },
          end: {
            line: 147,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 145
      },
      "15": {
        loc: {
          start: {
            line: 161,
            column: 8
          },
          end: {
            line: 167,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 161,
            column: 8
          },
          end: {
            line: 167,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 161
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\user\\dashboard\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - API DE DASHBOARD DE USUARIO\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { supabaseAdmin } from '@/lib/integrations/supabase';\r\nimport { auth } from '@/lib/auth/config';\r\nimport { ApiResponse } from '@/types/api';\r\n\r\n// ===================================\r\n// GET - Obtener estad\xEDsticas del dashboard\r\n// ===================================\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    // Verificar que el cliente administrativo est\xE9 disponible\r\n    if (!supabaseAdmin) {\r\n      console.error('Cliente administrativo de Supabase no disponible en GET /api/user/dashboard');\r\n      return NextResponse.json(\r\n        { error: 'Servicio de base de datos no disponible' },\r\n        { status: 503 }\r\n      );\r\n    }\r\n\r\n    // Autenticaci\xF3n con Clerk\r\n    const session = await auth();\r\n    if (!session?.user) {\r\n      const errorResponse: ApiResponse<null> = {\r\n        data: null,\r\n        success: false,\r\n        error: 'Usuario no autenticado',\r\n      };\r\n      return NextResponse.json(errorResponse, { status: 401 });\r\n    }\r\n\r\n    // Obtener usuario por email (NextAuth.js)\r\n    const userEmail = session.user.email;\r\n    const { data: user } = await supabaseAdmin\r\n      .from('users')\r\n      .select('*')\r\n      .eq('email', userEmail)\r\n      .single();\r\n\r\n    if (!user) {\r\n      return NextResponse.json(\r\n        { error: 'Usuario no encontrado' },\r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    // Obtener estad\xEDsticas de \xF3rdenes\r\n    const { data: orders } = await supabaseAdmin\r\n      .from('orders')\r\n      .select('id, total, status, created_at')\r\n      .eq('user_id', user.id);\r\n\r\n    // Obtener \xF3rdenes recientes con detalles\r\n    const { data: recentOrders } = await supabaseAdmin\r\n      .from('orders')\r\n      .select(`\r\n        id,\r\n        total,\r\n        status,\r\n        created_at,\r\n        order_items (\r\n          quantity,\r\n          products (\r\n            name,\r\n            images\r\n          )\r\n        )\r\n      `)\r\n      .eq('user_id', user.id)\r\n      .order('created_at', { ascending: false })\r\n      .limit(5);\r\n\r\n    // Obtener direcciones\r\n    const { data: addresses } = await supabaseAdmin\r\n      .from('user_addresses')\r\n      .select('*')\r\n      .eq('user_id', user.id);\r\n\r\n    // Calcular estad\xEDsticas\r\n    const totalOrders = orders?.length || 0;\r\n    const totalSpent = orders?.reduce((sum, order) => sum + parseFloat(order.total), 0) || 0;\r\n    const pendingOrders = orders?.filter(order => order.status === 'pending').length || 0;\r\n    const completedOrders = orders?.filter(order => order.status === 'delivered').length || 0;\r\n    const shippedOrders = orders?.filter(order => order.status === 'shipped').length || 0;\r\n\r\n    // Calcular gasto por mes (\xFAltimos 6 meses)\r\n    const monthlySpending = calculateMonthlySpending(orders || []);\r\n\r\n    // Productos m\xE1s comprados\r\n    const { data: topProducts } = await supabaseAdmin\r\n      .from('order_items')\r\n      .select(`\r\n        product_id,\r\n        quantity,\r\n        products (\r\n          name,\r\n          images,\r\n          price\r\n        )\r\n      `)\r\n      .in('order_id', orders?.map(o => o.id) || []);\r\n\r\n    const productStats = calculateTopProducts(topProducts || []);\r\n\r\n    const dashboardData = {\r\n      user: {\r\n        id: user.id,\r\n        name: user.name,\r\n        email: user.email,\r\n        created_at: user.created_at,\r\n      },\r\n      statistics: {\r\n        total_orders: totalOrders,\r\n        total_spent: totalSpent,\r\n        pending_orders: pendingOrders,\r\n        completed_orders: completedOrders,\r\n        shipped_orders: shippedOrders,\r\n        total_addresses: addresses?.length || 0,\r\n      },\r\n      recent_orders: recentOrders || [],\r\n      monthly_spending: monthlySpending,\r\n      top_products: productStats,\r\n      addresses: addresses || [],\r\n    };\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      dashboard: dashboardData,\r\n    });\r\n  } catch (error) {\r\n    console.error('Error en GET /api/user/dashboard:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// ===================================\r\n// Funci\xF3n auxiliar para calcular gasto mensual\r\n// ===================================\r\nfunction calculateMonthlySpending(orders: any[]) {\r\n  const monthlyData: { [key: string]: number } = {};\r\n  const now = new Date();\r\n\r\n  // Inicializar \xFAltimos 6 meses\r\n  for (let i = 5; i >= 0; i--) {\r\n    const date = new Date(now.getFullYear(), now.getMonth() - i, 1);\r\n    const key = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\r\n    monthlyData[key] = 0;\r\n  }\r\n\r\n  // Sumar gastos por mes\r\n  orders.forEach(order => {\r\n    const orderDate = new Date(order.created_at);\r\n    const key = `${orderDate.getFullYear()}-${String(orderDate.getMonth() + 1).padStart(2, '0')}`;\r\n    if (monthlyData.hasOwnProperty(key)) {\r\n      monthlyData[key] += parseFloat(order.total);\r\n    }\r\n  });\r\n\r\n  return Object.entries(monthlyData).map(([month, amount]) => ({\r\n    month,\r\n    amount,\r\n  }));\r\n}\r\n\r\n// ===================================\r\n// Funci\xF3n auxiliar para calcular productos m\xE1s comprados\r\n// ===================================\r\nfunction calculateTopProducts(orderItems: any[]) {\r\n  const productMap: { [key: string]: any } = {};\r\n\r\n  orderItems.forEach(item => {\r\n    const productId = item.product_id;\r\n    if (!productMap[productId]) {\r\n      productMap[productId] = {\r\n        product: item.products,\r\n        total_quantity: 0,\r\n        total_orders: 0,\r\n      };\r\n    }\r\n    productMap[productId].total_quantity += item.quantity;\r\n    productMap[productId].total_orders += 1;\r\n  });\r\n\r\n  return Object.values(productMap)\r\n    .sort((a: any, b: any) => b.total_quantity - a.total_quantity)\r\n    .slice(0, 5);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "runtime", "request", "supabaseAdmin", "console", "error", "NextResponse", "json", "status", "session", "auth", "user", "errorResponse", "data", "success", "userEmail", "email", "from", "select", "eq", "single", "orders", "id", "recentOrders", "order", "ascending", "limit", "addresses", "totalOrders", "length", "totalSpent", "reduce", "sum", "parseFloat", "total", "pendingOrders", "filter", "completedOrders", "shippedOrders", "monthlySpending", "calculateMonthlySpending", "topProducts", "in", "map", "o", "productStats", "calculateTopProducts", "dashboardData", "name", "created_at", "statistics", "total_orders", "total_spent", "pending_orders", "completed_orders", "shipped_orders", "total_addresses", "recent_orders", "monthly_spending", "top_products", "dashboard", "monthlyData", "now", "Date", "i", "date", "getFullYear", "getMonth", "key", "String", "padStart", "forEach", "orderDate", "hasOwnProperty", "Object", "entries", "month", "amount", "orderItems", "productMap", "item", "productId", "product_id", "product", "products", "total_quantity", "quantity", "values", "sort", "a", "b", "slice"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0fb25195eaf7fae785f5b6f65163f2dd5dee30b2"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2j9aud3tx0 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2j9aud3tx0();
cov_2j9aud3tx0().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2j9aud3tx0().f[0]++;
  cov_2j9aud3tx0().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2j9aud3tx0().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_2j9aud3tx0().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_2j9aud3tx0().f[1]++;
    cov_2j9aud3tx0().s[4]++;
    return GET;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_2j9aud3tx0().f[2]++;
    cov_2j9aud3tx0().s[5]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_2j9aud3tx0().s[6]++, require("next/server"));
const _supabase =
/* istanbul ignore next */
(cov_2j9aud3tx0().s[7]++, require("../../../../lib/integrations/supabase"));
const _config =
/* istanbul ignore next */
(cov_2j9aud3tx0().s[8]++, require("../../../../lib/auth/config"));
const runtime =
/* istanbul ignore next */
(cov_2j9aud3tx0().s[9]++, 'nodejs');
async function GET(request) {
  /* istanbul ignore next */
  cov_2j9aud3tx0().f[3]++;
  cov_2j9aud3tx0().s[10]++;
  try {
    /* istanbul ignore next */
    cov_2j9aud3tx0().s[11]++;
    // Verificar que el cliente administrativo estÃ© disponible
    if (!_supabase.supabaseAdmin) {
      /* istanbul ignore next */
      cov_2j9aud3tx0().b[0][0]++;
      cov_2j9aud3tx0().s[12]++;
      console.error('Cliente administrativo de Supabase no disponible en GET /api/user/dashboard');
      /* istanbul ignore next */
      cov_2j9aud3tx0().s[13]++;
      return _server.NextResponse.json({
        error: 'Servicio de base de datos no disponible'
      }, {
        status: 503
      });
    } else
    /* istanbul ignore next */
    {
      cov_2j9aud3tx0().b[0][1]++;
    }
    // AutenticaciÃ³n con Clerk
    const session =
    /* istanbul ignore next */
    (cov_2j9aud3tx0().s[14]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_2j9aud3tx0().s[15]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_2j9aud3tx0().b[1][0]++;
      const errorResponse =
      /* istanbul ignore next */
      (cov_2j9aud3tx0().s[16]++, {
        data: null,
        success: false,
        error: 'Usuario no autenticado'
      });
      /* istanbul ignore next */
      cov_2j9aud3tx0().s[17]++;
      return _server.NextResponse.json(errorResponse, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_2j9aud3tx0().b[1][1]++;
    }
    // Obtener usuario por email (NextAuth.js)
    const userEmail =
    /* istanbul ignore next */
    (cov_2j9aud3tx0().s[18]++, session.user.email);
    const {
      data: user
    } =
    /* istanbul ignore next */
    (cov_2j9aud3tx0().s[19]++, await _supabase.supabaseAdmin.from('users').select('*').eq('email', userEmail).single());
    /* istanbul ignore next */
    cov_2j9aud3tx0().s[20]++;
    if (!user) {
      /* istanbul ignore next */
      cov_2j9aud3tx0().b[2][0]++;
      cov_2j9aud3tx0().s[21]++;
      return _server.NextResponse.json({
        error: 'Usuario no encontrado'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_2j9aud3tx0().b[2][1]++;
    }
    // Obtener estadÃ­sticas de Ã³rdenes
    const {
      data: orders
    } =
    /* istanbul ignore next */
    (cov_2j9aud3tx0().s[22]++, await _supabase.supabaseAdmin.from('orders').select('id, total, status, created_at').eq('user_id', user.id));
    // Obtener Ã³rdenes recientes con detalles
    const {
      data: recentOrders
    } =
    /* istanbul ignore next */
    (cov_2j9aud3tx0().s[23]++, await _supabase.supabaseAdmin.from('orders').select(`
        id,
        total,
        status,
        created_at,
        order_items (
          quantity,
          products (
            name,
            images
          )
        )
      `).eq('user_id', user.id).order('created_at', {
      ascending: false
    }).limit(5));
    // Obtener direcciones
    const {
      data: addresses
    } =
    /* istanbul ignore next */
    (cov_2j9aud3tx0().s[24]++, await _supabase.supabaseAdmin.from('user_addresses').select('*').eq('user_id', user.id));
    // Calcular estadÃ­sticas
    const totalOrders =
    /* istanbul ignore next */
    (cov_2j9aud3tx0().s[25]++,
    /* istanbul ignore next */
    (cov_2j9aud3tx0().b[3][0]++, orders?.length) ||
    /* istanbul ignore next */
    (cov_2j9aud3tx0().b[3][1]++, 0));
    const totalSpent =
    /* istanbul ignore next */
    (cov_2j9aud3tx0().s[26]++,
    /* istanbul ignore next */
    (cov_2j9aud3tx0().b[4][0]++, orders?.reduce((sum, order) => {
      /* istanbul ignore next */
      cov_2j9aud3tx0().f[4]++;
      cov_2j9aud3tx0().s[27]++;
      return sum + parseFloat(order.total);
    }, 0)) ||
    /* istanbul ignore next */
    (cov_2j9aud3tx0().b[4][1]++, 0));
    const pendingOrders =
    /* istanbul ignore next */
    (cov_2j9aud3tx0().s[28]++,
    /* istanbul ignore next */
    (cov_2j9aud3tx0().b[5][0]++, orders?.filter(order => {
      /* istanbul ignore next */
      cov_2j9aud3tx0().f[5]++;
      cov_2j9aud3tx0().s[29]++;
      return order.status === 'pending';
    }).length) ||
    /* istanbul ignore next */
    (cov_2j9aud3tx0().b[5][1]++, 0));
    const completedOrders =
    /* istanbul ignore next */
    (cov_2j9aud3tx0().s[30]++,
    /* istanbul ignore next */
    (cov_2j9aud3tx0().b[6][0]++, orders?.filter(order => {
      /* istanbul ignore next */
      cov_2j9aud3tx0().f[6]++;
      cov_2j9aud3tx0().s[31]++;
      return order.status === 'delivered';
    }).length) ||
    /* istanbul ignore next */
    (cov_2j9aud3tx0().b[6][1]++, 0));
    const shippedOrders =
    /* istanbul ignore next */
    (cov_2j9aud3tx0().s[32]++,
    /* istanbul ignore next */
    (cov_2j9aud3tx0().b[7][0]++, orders?.filter(order => {
      /* istanbul ignore next */
      cov_2j9aud3tx0().f[7]++;
      cov_2j9aud3tx0().s[33]++;
      return order.status === 'shipped';
    }).length) ||
    /* istanbul ignore next */
    (cov_2j9aud3tx0().b[7][1]++, 0));
    // Calcular gasto por mes (Ãºltimos 6 meses)
    const monthlySpending =
    /* istanbul ignore next */
    (cov_2j9aud3tx0().s[34]++, calculateMonthlySpending(
    /* istanbul ignore next */
    (cov_2j9aud3tx0().b[8][0]++, orders) ||
    /* istanbul ignore next */
    (cov_2j9aud3tx0().b[8][1]++, [])));
    // Productos mÃ¡s comprados
    const {
      data: topProducts
    } =
    /* istanbul ignore next */
    (cov_2j9aud3tx0().s[35]++, await _supabase.supabaseAdmin.from('order_items').select(`
        product_id,
        quantity,
        products (
          name,
          images,
          price
        )
      `).in('order_id',
    /* istanbul ignore next */
    (cov_2j9aud3tx0().b[9][0]++, orders?.map(o => {
      /* istanbul ignore next */
      cov_2j9aud3tx0().f[8]++;
      cov_2j9aud3tx0().s[36]++;
      return o.id;
    })) ||
    /* istanbul ignore next */
    (cov_2j9aud3tx0().b[9][1]++, [])));
    const productStats =
    /* istanbul ignore next */
    (cov_2j9aud3tx0().s[37]++, calculateTopProducts(
    /* istanbul ignore next */
    (cov_2j9aud3tx0().b[10][0]++, topProducts) ||
    /* istanbul ignore next */
    (cov_2j9aud3tx0().b[10][1]++, [])));
    const dashboardData =
    /* istanbul ignore next */
    (cov_2j9aud3tx0().s[38]++, {
      user: {
        id: user.id,
        name: user.name,
        email: user.email,
        created_at: user.created_at
      },
      statistics: {
        total_orders: totalOrders,
        total_spent: totalSpent,
        pending_orders: pendingOrders,
        completed_orders: completedOrders,
        shipped_orders: shippedOrders,
        total_addresses:
        /* istanbul ignore next */
        (cov_2j9aud3tx0().b[11][0]++, addresses?.length) ||
        /* istanbul ignore next */
        (cov_2j9aud3tx0().b[11][1]++, 0)
      },
      recent_orders:
      /* istanbul ignore next */
      (cov_2j9aud3tx0().b[12][0]++, recentOrders) ||
      /* istanbul ignore next */
      (cov_2j9aud3tx0().b[12][1]++, []),
      monthly_spending: monthlySpending,
      top_products: productStats,
      addresses:
      /* istanbul ignore next */
      (cov_2j9aud3tx0().b[13][0]++, addresses) ||
      /* istanbul ignore next */
      (cov_2j9aud3tx0().b[13][1]++, [])
    });
    /* istanbul ignore next */
    cov_2j9aud3tx0().s[39]++;
    return _server.NextResponse.json({
      success: true,
      dashboard: dashboardData
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2j9aud3tx0().s[40]++;
    console.error('Error en GET /api/user/dashboard:', error);
    /* istanbul ignore next */
    cov_2j9aud3tx0().s[41]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
// ===================================
// FunciÃ³n auxiliar para calcular gasto mensual
// ===================================
function calculateMonthlySpending(orders) {
  /* istanbul ignore next */
  cov_2j9aud3tx0().f[9]++;
  const monthlyData =
  /* istanbul ignore next */
  (cov_2j9aud3tx0().s[42]++, {});
  const now =
  /* istanbul ignore next */
  (cov_2j9aud3tx0().s[43]++, new Date());
  // Inicializar Ãºltimos 6 meses
  /* istanbul ignore next */
  cov_2j9aud3tx0().s[44]++;
  for (let i =
  /* istanbul ignore next */
  (cov_2j9aud3tx0().s[45]++, 5); i >= 0; i--) {
    const date =
    /* istanbul ignore next */
    (cov_2j9aud3tx0().s[46]++, new Date(now.getFullYear(), now.getMonth() - i, 1));
    const key =
    /* istanbul ignore next */
    (cov_2j9aud3tx0().s[47]++, `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`);
    /* istanbul ignore next */
    cov_2j9aud3tx0().s[48]++;
    monthlyData[key] = 0;
  }
  // Sumar gastos por mes
  /* istanbul ignore next */
  cov_2j9aud3tx0().s[49]++;
  orders.forEach(order => {
    /* istanbul ignore next */
    cov_2j9aud3tx0().f[10]++;
    const orderDate =
    /* istanbul ignore next */
    (cov_2j9aud3tx0().s[50]++, new Date(order.created_at));
    const key =
    /* istanbul ignore next */
    (cov_2j9aud3tx0().s[51]++, `${orderDate.getFullYear()}-${String(orderDate.getMonth() + 1).padStart(2, '0')}`);
    /* istanbul ignore next */
    cov_2j9aud3tx0().s[52]++;
    if (monthlyData.hasOwnProperty(key)) {
      /* istanbul ignore next */
      cov_2j9aud3tx0().b[14][0]++;
      cov_2j9aud3tx0().s[53]++;
      monthlyData[key] += parseFloat(order.total);
    } else
    /* istanbul ignore next */
    {
      cov_2j9aud3tx0().b[14][1]++;
    }
  });
  /* istanbul ignore next */
  cov_2j9aud3tx0().s[54]++;
  return Object.entries(monthlyData).map(([month, amount]) => {
    /* istanbul ignore next */
    cov_2j9aud3tx0().f[11]++;
    cov_2j9aud3tx0().s[55]++;
    return {
      month,
      amount
    };
  });
}
// ===================================
// FunciÃ³n auxiliar para calcular productos mÃ¡s comprados
// ===================================
function calculateTopProducts(orderItems) {
  /* istanbul ignore next */
  cov_2j9aud3tx0().f[12]++;
  const productMap =
  /* istanbul ignore next */
  (cov_2j9aud3tx0().s[56]++, {});
  /* istanbul ignore next */
  cov_2j9aud3tx0().s[57]++;
  orderItems.forEach(item => {
    /* istanbul ignore next */
    cov_2j9aud3tx0().f[13]++;
    const productId =
    /* istanbul ignore next */
    (cov_2j9aud3tx0().s[58]++, item.product_id);
    /* istanbul ignore next */
    cov_2j9aud3tx0().s[59]++;
    if (!productMap[productId]) {
      /* istanbul ignore next */
      cov_2j9aud3tx0().b[15][0]++;
      cov_2j9aud3tx0().s[60]++;
      productMap[productId] = {
        product: item.products,
        total_quantity: 0,
        total_orders: 0
      };
    } else
    /* istanbul ignore next */
    {
      cov_2j9aud3tx0().b[15][1]++;
    }
    cov_2j9aud3tx0().s[61]++;
    productMap[productId].total_quantity += item.quantity;
    /* istanbul ignore next */
    cov_2j9aud3tx0().s[62]++;
    productMap[productId].total_orders += 1;
  });
  /* istanbul ignore next */
  cov_2j9aud3tx0().s[63]++;
  return Object.values(productMap).sort((a, b) => {
    /* istanbul ignore next */
    cov_2j9aud3tx0().f[14]++;
    cov_2j9aud3tx0().s[64]++;
    return b.total_quantity - a.total_quantity;
  }).slice(0, 5);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,