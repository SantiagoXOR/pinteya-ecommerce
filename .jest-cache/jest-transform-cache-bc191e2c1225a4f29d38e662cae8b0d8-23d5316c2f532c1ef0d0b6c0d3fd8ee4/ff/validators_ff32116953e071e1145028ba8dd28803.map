{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\utils\\validators.ts"],"sourcesContent":["// ===================================\r\n// UTILIDADES DE VALIDACIÓN\r\n// Funciones para validar datos críticos del sistema\r\n// ===================================\r\n\r\nexport interface ValidationResult {\r\n  isValid: boolean;\r\n  errors: string[];\r\n  message?: string;\r\n}\r\n\r\nexport interface ProductData {\r\n  name: string;\r\n  description?: string;\r\n  price: number;\r\n  stock: number;\r\n  category_id: number;\r\n  brand: string;\r\n  images: string[];\r\n}\r\n\r\nexport interface OrderItem {\r\n  product_id: number;\r\n  quantity: number;\r\n  price: number;\r\n}\r\n\r\nexport interface Address {\r\n  street: string;\r\n  city: string;\r\n  state: string;\r\n  postal_code: string;\r\n  country: string;\r\n}\r\n\r\nexport interface OrderData {\r\n  user_id: string;\r\n  items: OrderItem[];\r\n  total: number;\r\n  shipping_address: Address;\r\n  payment_method: string;\r\n}\r\n\r\nexport interface PaymentData {\r\n  method: string;\r\n  amount: number;\r\n  currency: string;\r\n  payment_method_id?: string;\r\n  installments?: number;\r\n  payer?: {\r\n    email: string;\r\n    identification?: {\r\n      type: string;\r\n      number: string;\r\n    };\r\n  };\r\n}\r\n\r\nexport interface DiscountData {\r\n  type: 'percentage' | 'fixed';\r\n  value: number;\r\n  currency?: string;\r\n}\r\n\r\n// ===================================\r\n// VALIDACIÓN DE EMAIL\r\n// ===================================\r\n\r\nexport function validateEmail(email: any): boolean {\r\n  // Handle null, undefined, and non-string values\r\n  if (!email || typeof email !== 'string') {\r\n    return false;\r\n  }\r\n\r\n  // Validar longitud total del email\r\n  if (email.length > 254) {\r\n    return false;\r\n  }\r\n\r\n  // Validar que no empiece o termine con punto\r\n  if (email.startsWith('.') || email.endsWith('.')) {\r\n    return false;\r\n  }\r\n\r\n  // Validar que tenga exactamente un @\r\n  if (email.split('@').length !== 2) {\r\n    return false;\r\n  }\r\n\r\n  // Validar longitud de partes locales y dominio\r\n  const [localPart, domain] = email.split('@');\r\n  if (localPart.length === 0 || localPart.length > 64) {\r\n    return false;\r\n  }\r\n  if (domain.length === 0 || domain.length > 253) {\r\n    return false;\r\n  }\r\n\r\n  // Validar que no tenga puntos consecutivos\r\n  if (email.includes('..')) {\r\n    return false;\r\n  }\r\n\r\n  // El dominio debe tener al menos un punto (TLD requerido)\r\n  if (!domain.includes('.')) {\r\n    return false;\r\n  }\r\n\r\n  // Regex para validación de email\r\n  const emailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+$/\r\n  \r\n  return emailRegex.test(email);\r\n}\r\n\r\n// ===================================\r\n// VALIDACIÓN DE CONTRASEÑA\r\n// ===================================\r\n\r\nexport function validatePassword(password: any): ValidationResult {\r\n  const errors: string[] = [];\r\n  let message = '';\r\n\r\n  if (!password || typeof password !== 'string') {\r\n    return {\r\n      isValid: false,\r\n      errors: ['invalid_type'],\r\n      message: 'La contraseña debe ser una cadena de texto'\r\n    };\r\n  }\r\n\r\n  // Validar longitud mínima\r\n  if (password.length < 8) {\r\n    errors.push('length');\r\n  }\r\n\r\n  // Validar mayúscula\r\n  if (!/[A-Z]/.test(password)) {\r\n    errors.push('uppercase');\r\n  }\r\n\r\n  // Validar minúscula\r\n  if (!/[a-z]/.test(password)) {\r\n    errors.push('lowercase');\r\n  }\r\n\r\n  // Validar número\r\n  if (!/\\d/.test(password)) {\r\n    errors.push('number');\r\n  }\r\n\r\n  // Validar carácter especial\r\n  if (!/[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]/.test(password)) {\r\n    errors.push('special');\r\n  }\r\n\r\n  // Generar mensaje de error\r\n  if (errors.length > 0) {\r\n    const errorMessages = {\r\n      length: 'al menos 8 caracteres',\r\n      uppercase: 'al menos una letra mayúscula',\r\n      lowercase: 'al menos una letra minúscula',\r\n      number: 'al menos un número',\r\n      special: 'al menos un carácter especial'\r\n    };\r\n\r\n    message = `La contraseña debe contener: ${errors.map(e => errorMessages[e as keyof typeof errorMessages]).join(', ')}`;\r\n  }\r\n\r\n  return {\r\n    isValid: errors.length === 0,\r\n    errors,\r\n    message\r\n  };\r\n}\r\n\r\n// ===================================\r\n// VALIDACIÓN DE TELÉFONO\r\n// ===================================\r\n\r\nexport function validatePhone(phone: any, country: 'AR' | 'INTERNATIONAL' = 'AR'): boolean {\r\n  if (!phone || typeof phone !== 'string') {\r\n    return false;\r\n  }\r\n\r\n  // Limpiar el teléfono de espacios y caracteres especiales\r\n  const cleanPhone = phone.replace(/[\\s\\-\\(\\)]/g, '');\r\n\r\n  if (country === 'AR') {\r\n    // Validar teléfonos argentinos\r\n    // Formatos válidos: +541123456789, 1123456789, 01123456789\r\n    const argPhoneRegex = /^(\\+54)?0?11\\d{8}$|^(\\+54)?0?\\d{10}$/;\r\n    return argPhoneRegex.test(cleanPhone);\r\n  }\r\n\r\n  if (country === 'INTERNATIONAL') {\r\n    // Validar formato internacional básico\r\n    const intPhoneRegex = /^\\+\\d{10,15}$/;\r\n    return intPhoneRegex.test(cleanPhone);\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n// ===================================\r\n// VALIDACIÓN DE DATOS DE PRODUCTO\r\n// ===================================\r\n\r\nexport function validateProductData(product: any): ValidationResult {\r\n  const errors: string[] = [];\r\n\r\n  if (!product || typeof product !== 'object') {\r\n    return {\r\n      isValid: false,\r\n      errors: ['invalid_type'],\r\n      message: 'Los datos del producto deben ser un objeto'\r\n    };\r\n  }\r\n\r\n  // Validar nombre\r\n  if (!product.name || typeof product.name !== 'string') {\r\n    errors.push('name');\r\n  } else if (product.name.length < 3 || product.name.length > 200) {\r\n    errors.push('name_length');\r\n  } else if (/<script|javascript:|on\\w+=/i.test(product.name)) {\r\n    errors.push('name_security');\r\n  }\r\n\r\n  // Validar precio\r\n  if (typeof product.price !== 'number' || product.price <= 0) {\r\n    errors.push('price');\r\n  } else if (product.price > 9999999) {\r\n    errors.push('price_too_high');\r\n  }\r\n\r\n  // Validar stock\r\n  if (typeof product.stock !== 'number' || product.stock < 0) {\r\n    errors.push('stock');\r\n  }\r\n\r\n  // Validar categoría\r\n  if (!product.category_id || typeof product.category_id !== 'number') {\r\n    errors.push('category_id');\r\n  }\r\n\r\n  // Validar marca\r\n  if (!product.brand || typeof product.brand !== 'string') {\r\n    errors.push('brand');\r\n  }\r\n\r\n  // Validar imágenes\r\n  if (!Array.isArray(product.images) || product.images.length === 0) {\r\n    errors.push('images');\r\n  }\r\n\r\n  return {\r\n    isValid: errors.length === 0,\r\n    errors\r\n  };\r\n}\r\n\r\n// ===================================\r\n// VALIDACIÓN DE DATOS DE ORDEN\r\n// ===================================\r\n\r\nexport function validateOrderData(order: any): ValidationResult {\r\n  const errors: string[] = [];\r\n\r\n  if (!order || typeof order !== 'object') {\r\n    return {\r\n      isValid: false,\r\n      errors: ['invalid_type']\r\n    };\r\n  }\r\n\r\n  // Validar user_id\r\n  if (!order.user_id || typeof order.user_id !== 'string') {\r\n    errors.push('user_id');\r\n  }\r\n\r\n  // Validar items\r\n  if (!Array.isArray(order.items) || order.items.length === 0) {\r\n    errors.push('items_empty');\r\n  } else {\r\n    // Validar cada item\r\n    order.items.forEach((item: any, index: number) => {\r\n      if (!item.product_id || typeof item.product_id !== 'number') {\r\n        errors.push(`item_${index}_product_id`);\r\n      }\r\n      if (!item.quantity || typeof item.quantity !== 'number' || item.quantity <= 0) {\r\n        errors.push(`item_${index}_quantity`);\r\n      }\r\n      if (typeof item.price !== 'number' || item.price <= 0) {\r\n        errors.push(`item_${index}_price`);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Validar total\r\n  if (typeof order.total !== 'number' || order.total <= 0) {\r\n    errors.push('total');\r\n  } else if (Array.isArray(order.items) && order.items.length > 0) {\r\n    // Verificar que el total coincida con la suma de items\r\n    const calculatedTotal = order.items.reduce((sum: number, item: any) => {\r\n      return sum + (item.quantity * item.price);\r\n    }, 0);\r\n    \r\n    if (Math.abs(calculatedTotal - order.total) > 0.01) {\r\n      errors.push('total_mismatch');\r\n    }\r\n  }\r\n\r\n  // Validar dirección de envío\r\n  const addressValidation = validateAddress(order.shipping_address);\r\n  if (!addressValidation.isValid) {\r\n    errors.push('shipping_address');\r\n  }\r\n\r\n  // Validar método de pago\r\n  if (!order.payment_method || typeof order.payment_method !== 'string') {\r\n    errors.push('payment_method');\r\n  }\r\n\r\n  return {\r\n    isValid: errors.length === 0,\r\n    errors\r\n  };\r\n}\r\n\r\n// ===================================\r\n// VALIDACIÓN DE DATOS DE PAGO\r\n// ===================================\r\n\r\nexport function validatePaymentData(payment: any): ValidationResult {\r\n  const errors: string[] = [];\r\n\r\n  if (!payment || typeof payment !== 'object') {\r\n    return {\r\n      isValid: false,\r\n      errors: ['invalid_type']\r\n    };\r\n  }\r\n\r\n  // Validar método\r\n  if (!payment.method || typeof payment.method !== 'string') {\r\n    errors.push('method');\r\n  }\r\n\r\n  // Validar monto\r\n  if (typeof payment.amount !== 'number' || payment.amount <= 0) {\r\n    errors.push('amount');\r\n  }\r\n\r\n  // Validar moneda\r\n  if (!validateCurrency(payment.currency)) {\r\n    errors.push('currency');\r\n  }\r\n\r\n  // Validaciones específicas para MercadoPago\r\n  if (payment.method === 'mercadopago') {\r\n    if (payment.payer && !validateEmail(payment.payer.email)) {\r\n      errors.push('payer_email');\r\n    }\r\n  }\r\n\r\n  return {\r\n    isValid: errors.length === 0,\r\n    errors\r\n  };\r\n}\r\n\r\n// ===================================\r\n// VALIDACIÓN DE DIRECCIÓN\r\n// ===================================\r\n\r\nexport function validateAddress(address: any): ValidationResult {\r\n  const errors: string[] = [];\r\n\r\n  if (!address || typeof address !== 'object') {\r\n    return {\r\n      isValid: false,\r\n      errors: ['invalid_type']\r\n    };\r\n  }\r\n\r\n  // Validar campos requeridos básicos\r\n  const requiredFields = ['street', 'city', 'postal_code', 'country'];\r\n  requiredFields.forEach(field => {\r\n    if (!address[field] || typeof address[field] !== 'string' || address[field].trim() === '') {\r\n      errors.push(field);\r\n    }\r\n  });\r\n\r\n  // Validar código postal por país\r\n  if (address.country && address.postal_code) {\r\n    const postalCodeValid = validatePostalCode(address.postal_code, address.country);\r\n    if (!postalCodeValid) {\r\n      errors.push('postal_code_format');\r\n    }\r\n  }\r\n\r\n  return {\r\n    isValid: errors.length === 0,\r\n    errors\r\n  };\r\n}\r\n\r\n// ===================================\r\n// VALIDACIÓN DE CÓDIGO POSTAL\r\n// ===================================\r\n\r\nfunction validatePostalCode(postalCode: string, country: string): boolean {\r\n  const patterns: { [key: string]: RegExp } = {\r\n    'Argentina': /^\\d{4}$/,\r\n    'USA': /^\\d{5}(-\\d{4})?$/,\r\n    'US': /^\\d{5}(-\\d{4})?$/,\r\n    'Brazil': /^\\d{5}-\\d{3}$/,\r\n    'Chile': /^\\d{7}$/,\r\n    'Canada': /^[A-Za-z]\\d[A-Za-z] \\d[A-Za-z]\\d$/,\r\n    'UK': /^[A-Z]{1,2}\\d[A-Z\\d]? \\d[A-Z]{2}$/i,\r\n    'Germany': /^\\d{5}$/,\r\n    'France': /^\\d{5}$/,\r\n    'Spain': /^\\d{5}$/,\r\n    'Italy': /^\\d{5}$/,\r\n    'Mexico': /^\\d{5}$/\r\n  };\r\n\r\n  const pattern = patterns[country];\r\n  return pattern ? pattern.test(postalCode) : true; // Si no hay patrón, aceptar\r\n}\r\n\r\n// ===================================\r\n// VALIDACIÓN DE MONEDA\r\n// ===================================\r\n\r\nexport function validateCurrency(currency: any): boolean {\r\n  if (!currency || typeof currency !== 'string') {\r\n    return false;\r\n  }\r\n\r\n  const supportedCurrencies = ['ARS', 'USD', 'EUR', 'BRL', 'CLP', 'UYU'];\r\n  return supportedCurrencies.includes(currency.toUpperCase());\r\n}\r\n\r\n// ===================================\r\n// VALIDACIÓN DE CANTIDAD\r\n// ===================================\r\n\r\nexport function validateQuantity(quantity: any): boolean {\r\n  if (typeof quantity !== 'number') {\r\n    return false;\r\n  }\r\n\r\n  // Debe ser un entero positivo\r\n  if (!Number.isInteger(quantity) || quantity <= 0) {\r\n    return false;\r\n  }\r\n\r\n  // Límite máximo de cantidad\r\n  if (quantity > 999) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n// ===================================\r\n// VALIDACIÓN DE DESCUENTO\r\n// ===================================\r\n\r\nexport function validateDiscount(discount: any): boolean {\r\n  if (!discount || typeof discount !== 'object') {\r\n    return false;\r\n  }\r\n\r\n  // Validar tipo\r\n  if (!['percentage', 'fixed'].includes(discount.type)) {\r\n    return false;\r\n  }\r\n\r\n  // Validar valor\r\n  if (typeof discount.value !== 'number' || discount.value < 0) {\r\n    return false;\r\n  }\r\n\r\n  // Validaciones específicas por tipo\r\n  if (discount.type === 'percentage') {\r\n    // Porcentaje no puede ser mayor a 100\r\n    if (discount.value > 100) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  if (discount.type === 'fixed') {\r\n    // Descuento fijo debe tener moneda\r\n    if (!discount.currency || !validateCurrency(discount.currency)) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n// ===================================\r\n// UTILIDADES ADICIONALES\r\n// ===================================\r\n\r\n/**\r\n * Sanitiza una cadena de texto removiendo caracteres peligrosos\r\n */\r\nexport function sanitizeString(input: string): string {\r\n  if (typeof input !== 'string') {\r\n    return '';\r\n  }\r\n\r\n  return input\r\n    .replace(/<script[^>]*>.*?<\\/script>/gi, '') // Remover scripts\r\n    .replace(/<[^>]*>/g, '') // Remover HTML tags\r\n    .replace(/javascript:/gi, '') // Remover javascript:\r\n    .replace(/on\\w+=/gi, '') // Remover event handlers\r\n    .trim();\r\n}\r\n\r\n/**\r\n * Valida que un objeto tenga todas las propiedades requeridas\r\n */\r\nexport function validateRequiredFields(obj: any, requiredFields: string[]): ValidationResult {\r\n  const errors: string[] = [];\r\n\r\n  if (!obj || typeof obj !== 'object') {\r\n    return {\r\n      isValid: false,\r\n      errors: ['invalid_object']\r\n    };\r\n  }\r\n\r\n  requiredFields.forEach(field => {\r\n    if (!(field in obj) || obj[field] === null || obj[field] === undefined || obj[field] === '') {\r\n      errors.push(field);\r\n    }\r\n  });\r\n\r\n  return {\r\n    isValid: errors.length === 0,\r\n    errors\r\n  };\r\n}\r\n\r\n/**\r\n * Valida un rango numérico\r\n */\r\nexport function validateNumberRange(value: any, min: number, max: number): boolean {\r\n  if (typeof value !== 'number') {\r\n    return false;\r\n  }\r\n\r\n  return value >= min && value <= max;\r\n}\r\n\r\n/**\r\n * Valida una fecha\r\n */\r\nexport function validateDate(date: any): boolean {\r\n  if (!date) {\r\n    return false;\r\n  }\r\n\r\n  const parsedDate = new Date(date);\r\n  return !isNaN(parsedDate.getTime());\r\n}\r\n\r\n/**\r\n * Valida una URL\r\n */\r\nexport function validateURL(url: any): boolean {\r\n  if (!url || typeof url !== 'string') {\r\n    return false;\r\n  }\r\n\r\n  try {\r\n    new URL(url);\r\n    return true;\r\n  } catch {\r\n    return false;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["sanitizeString","validateAddress","validateCurrency","validateDate","validateDiscount","validateEmail","validateNumberRange","validateOrderData","validatePassword","validatePaymentData","validatePhone","validateProductData","validateQuantity","validateRequiredFields","validateURL","email","length","startsWith","endsWith","split","localPart","domain","includes","emailRegex","test","password","errors","message","isValid","push","errorMessages","uppercase","lowercase","number","special","map","e","join","phone","country","cleanPhone","replace","argPhoneRegex","intPhoneRegex","product","name","price","stock","category_id","brand","Array","isArray","images","order","user_id","items","forEach","item","index","product_id","quantity","total","calculatedTotal","reduce","sum","Math","abs","addressValidation","shipping_address","payment_method","payment","method","amount","currency","payer","address","requiredFields","field","trim","postal_code","postalCodeValid","validatePostalCode","postalCode","patterns","pattern","supportedCurrencies","toUpperCase","Number","isInteger","discount","type","value","input","obj","undefined","min","max","date","parsedDate","Date","isNaN","getTime","url","URL"],"mappings":"AAAA,sCAAsC;AACtC,2BAA2B;AAC3B,oDAAoD;AACpD,sCAAsC;;;;;;;;;;;;QA0ftBA;eAAAA;;QAvIAC;eAAAA;;QA4DAC;eAAAA;;QA+HAC;eAAAA;;QA5FAC;eAAAA;;QAjZAC;eAAAA;;QAkeAC;eAAAA;;QA9RAC;eAAAA;;QAlJAC;eAAAA;;QAsNAC;eAAAA;;QAzJAC;eAAAA;;QA4BAC;eAAAA;;QAgPAC;eAAAA;;QA8EAC;eAAAA;;QAgDAC;eAAAA;;;AAzfT,SAAST,cAAcU,KAAU;IACtC,gDAAgD;IAChD,IAAI,CAACA,SAAS,OAAOA,UAAU,UAAU;QACvC,OAAO;IACT;IAEA,mCAAmC;IACnC,IAAIA,MAAMC,MAAM,GAAG,KAAK;QACtB,OAAO;IACT;IAEA,6CAA6C;IAC7C,IAAID,MAAME,UAAU,CAAC,QAAQF,MAAMG,QAAQ,CAAC,MAAM;QAChD,OAAO;IACT;IAEA,qCAAqC;IACrC,IAAIH,MAAMI,KAAK,CAAC,KAAKH,MAAM,KAAK,GAAG;QACjC,OAAO;IACT;IAEA,+CAA+C;IAC/C,MAAM,CAACI,WAAWC,OAAO,GAAGN,MAAMI,KAAK,CAAC;IACxC,IAAIC,UAAUJ,MAAM,KAAK,KAAKI,UAAUJ,MAAM,GAAG,IAAI;QACnD,OAAO;IACT;IACA,IAAIK,OAAOL,MAAM,KAAK,KAAKK,OAAOL,MAAM,GAAG,KAAK;QAC9C,OAAO;IACT;IAEA,2CAA2C;IAC3C,IAAID,MAAMO,QAAQ,CAAC,OAAO;QACxB,OAAO;IACT;IAEA,0DAA0D;IAC1D,IAAI,CAACD,OAAOC,QAAQ,CAAC,MAAM;QACzB,OAAO;IACT;IAEA,iCAAiC;IACjC,MAAMC,aAAa;IAEnB,OAAOA,WAAWC,IAAI,CAACT;AACzB;AAMO,SAASP,iBAAiBiB,QAAa;IAC5C,MAAMC,SAAmB,EAAE;IAC3B,IAAIC,UAAU;IAEd,IAAI,CAACF,YAAY,OAAOA,aAAa,UAAU;QAC7C,OAAO;YACLG,SAAS;YACTF,QAAQ;gBAAC;aAAe;YACxBC,SAAS;QACX;IACF;IAEA,0BAA0B;IAC1B,IAAIF,SAAST,MAAM,GAAG,GAAG;QACvBU,OAAOG,IAAI,CAAC;IACd;IAEA,oBAAoB;IACpB,IAAI,CAAC,QAAQL,IAAI,CAACC,WAAW;QAC3BC,OAAOG,IAAI,CAAC;IACd;IAEA,oBAAoB;IACpB,IAAI,CAAC,QAAQL,IAAI,CAACC,WAAW;QAC3BC,OAAOG,IAAI,CAAC;IACd;IAEA,iBAAiB;IACjB,IAAI,CAAC,KAAKL,IAAI,CAACC,WAAW;QACxBC,OAAOG,IAAI,CAAC;IACd;IAEA,4BAA4B;IAC5B,IAAI,CAAC,wCAAwCL,IAAI,CAACC,WAAW;QAC3DC,OAAOG,IAAI,CAAC;IACd;IAEA,2BAA2B;IAC3B,IAAIH,OAAOV,MAAM,GAAG,GAAG;QACrB,MAAMc,gBAAgB;YACpBd,QAAQ;YACRe,WAAW;YACXC,WAAW;YACXC,QAAQ;YACRC,SAAS;QACX;QAEAP,UAAU,CAAC,6BAA6B,EAAED,OAAOS,GAAG,CAACC,CAAAA,IAAKN,aAAa,CAACM,EAAgC,EAAEC,IAAI,CAAC,OAAO;IACxH;IAEA,OAAO;QACLT,SAASF,OAAOV,MAAM,KAAK;QAC3BU;QACAC;IACF;AACF;AAMO,SAASjB,cAAc4B,KAAU,EAAEC,UAAkC,IAAI;IAC9E,IAAI,CAACD,SAAS,OAAOA,UAAU,UAAU;QACvC,OAAO;IACT;IAEA,0DAA0D;IAC1D,MAAME,aAAaF,MAAMG,OAAO,CAAC,eAAe;IAEhD,IAAIF,YAAY,MAAM;QACpB,+BAA+B;QAC/B,2DAA2D;QAC3D,MAAMG,gBAAgB;QACtB,OAAOA,cAAclB,IAAI,CAACgB;IAC5B;IAEA,IAAID,YAAY,iBAAiB;QAC/B,uCAAuC;QACvC,MAAMI,gBAAgB;QACtB,OAAOA,cAAcnB,IAAI,CAACgB;IAC5B;IAEA,OAAO;AACT;AAMO,SAAS7B,oBAAoBiC,OAAY;IAC9C,MAAMlB,SAAmB,EAAE;IAE3B,IAAI,CAACkB,WAAW,OAAOA,YAAY,UAAU;QAC3C,OAAO;YACLhB,SAAS;YACTF,QAAQ;gBAAC;aAAe;YACxBC,SAAS;QACX;IACF;IAEA,iBAAiB;IACjB,IAAI,CAACiB,QAAQC,IAAI,IAAI,OAAOD,QAAQC,IAAI,KAAK,UAAU;QACrDnB,OAAOG,IAAI,CAAC;IACd,OAAO,IAAIe,QAAQC,IAAI,CAAC7B,MAAM,GAAG,KAAK4B,QAAQC,IAAI,CAAC7B,MAAM,GAAG,KAAK;QAC/DU,OAAOG,IAAI,CAAC;IACd,OAAO,IAAI,8BAA8BL,IAAI,CAACoB,QAAQC,IAAI,GAAG;QAC3DnB,OAAOG,IAAI,CAAC;IACd;IAEA,iBAAiB;IACjB,IAAI,OAAOe,QAAQE,KAAK,KAAK,YAAYF,QAAQE,KAAK,IAAI,GAAG;QAC3DpB,OAAOG,IAAI,CAAC;IACd,OAAO,IAAIe,QAAQE,KAAK,GAAG,SAAS;QAClCpB,OAAOG,IAAI,CAAC;IACd;IAEA,gBAAgB;IAChB,IAAI,OAAOe,QAAQG,KAAK,KAAK,YAAYH,QAAQG,KAAK,GAAG,GAAG;QAC1DrB,OAAOG,IAAI,CAAC;IACd;IAEA,oBAAoB;IACpB,IAAI,CAACe,QAAQI,WAAW,IAAI,OAAOJ,QAAQI,WAAW,KAAK,UAAU;QACnEtB,OAAOG,IAAI,CAAC;IACd;IAEA,gBAAgB;IAChB,IAAI,CAACe,QAAQK,KAAK,IAAI,OAAOL,QAAQK,KAAK,KAAK,UAAU;QACvDvB,OAAOG,IAAI,CAAC;IACd;IAEA,mBAAmB;IACnB,IAAI,CAACqB,MAAMC,OAAO,CAACP,QAAQQ,MAAM,KAAKR,QAAQQ,MAAM,CAACpC,MAAM,KAAK,GAAG;QACjEU,OAAOG,IAAI,CAAC;IACd;IAEA,OAAO;QACLD,SAASF,OAAOV,MAAM,KAAK;QAC3BU;IACF;AACF;AAMO,SAASnB,kBAAkB8C,KAAU;IAC1C,MAAM3B,SAAmB,EAAE;IAE3B,IAAI,CAAC2B,SAAS,OAAOA,UAAU,UAAU;QACvC,OAAO;YACLzB,SAAS;YACTF,QAAQ;gBAAC;aAAe;QAC1B;IACF;IAEA,kBAAkB;IAClB,IAAI,CAAC2B,MAAMC,OAAO,IAAI,OAAOD,MAAMC,OAAO,KAAK,UAAU;QACvD5B,OAAOG,IAAI,CAAC;IACd;IAEA,gBAAgB;IAChB,IAAI,CAACqB,MAAMC,OAAO,CAACE,MAAME,KAAK,KAAKF,MAAME,KAAK,CAACvC,MAAM,KAAK,GAAG;QAC3DU,OAAOG,IAAI,CAAC;IACd,OAAO;QACL,oBAAoB;QACpBwB,MAAME,KAAK,CAACC,OAAO,CAAC,CAACC,MAAWC;YAC9B,IAAI,CAACD,KAAKE,UAAU,IAAI,OAAOF,KAAKE,UAAU,KAAK,UAAU;gBAC3DjC,OAAOG,IAAI,CAAC,CAAC,KAAK,EAAE6B,MAAM,WAAW,CAAC;YACxC;YACA,IAAI,CAACD,KAAKG,QAAQ,IAAI,OAAOH,KAAKG,QAAQ,KAAK,YAAYH,KAAKG,QAAQ,IAAI,GAAG;gBAC7ElC,OAAOG,IAAI,CAAC,CAAC,KAAK,EAAE6B,MAAM,SAAS,CAAC;YACtC;YACA,IAAI,OAAOD,KAAKX,KAAK,KAAK,YAAYW,KAAKX,KAAK,IAAI,GAAG;gBACrDpB,OAAOG,IAAI,CAAC,CAAC,KAAK,EAAE6B,MAAM,MAAM,CAAC;YACnC;QACF;IACF;IAEA,gBAAgB;IAChB,IAAI,OAAOL,MAAMQ,KAAK,KAAK,YAAYR,MAAMQ,KAAK,IAAI,GAAG;QACvDnC,OAAOG,IAAI,CAAC;IACd,OAAO,IAAIqB,MAAMC,OAAO,CAACE,MAAME,KAAK,KAAKF,MAAME,KAAK,CAACvC,MAAM,GAAG,GAAG;QAC/D,uDAAuD;QACvD,MAAM8C,kBAAkBT,MAAME,KAAK,CAACQ,MAAM,CAAC,CAACC,KAAaP;YACvD,OAAOO,MAAOP,KAAKG,QAAQ,GAAGH,KAAKX,KAAK;QAC1C,GAAG;QAEH,IAAImB,KAAKC,GAAG,CAACJ,kBAAkBT,MAAMQ,KAAK,IAAI,MAAM;YAClDnC,OAAOG,IAAI,CAAC;QACd;IACF;IAEA,6BAA6B;IAC7B,MAAMsC,oBAAoBlE,gBAAgBoD,MAAMe,gBAAgB;IAChE,IAAI,CAACD,kBAAkBvC,OAAO,EAAE;QAC9BF,OAAOG,IAAI,CAAC;IACd;IAEA,yBAAyB;IACzB,IAAI,CAACwB,MAAMgB,cAAc,IAAI,OAAOhB,MAAMgB,cAAc,KAAK,UAAU;QACrE3C,OAAOG,IAAI,CAAC;IACd;IAEA,OAAO;QACLD,SAASF,OAAOV,MAAM,KAAK;QAC3BU;IACF;AACF;AAMO,SAASjB,oBAAoB6D,OAAY;IAC9C,MAAM5C,SAAmB,EAAE;IAE3B,IAAI,CAAC4C,WAAW,OAAOA,YAAY,UAAU;QAC3C,OAAO;YACL1C,SAAS;YACTF,QAAQ;gBAAC;aAAe;QAC1B;IACF;IAEA,iBAAiB;IACjB,IAAI,CAAC4C,QAAQC,MAAM,IAAI,OAAOD,QAAQC,MAAM,KAAK,UAAU;QACzD7C,OAAOG,IAAI,CAAC;IACd;IAEA,gBAAgB;IAChB,IAAI,OAAOyC,QAAQE,MAAM,KAAK,YAAYF,QAAQE,MAAM,IAAI,GAAG;QAC7D9C,OAAOG,IAAI,CAAC;IACd;IAEA,iBAAiB;IACjB,IAAI,CAAC3B,iBAAiBoE,QAAQG,QAAQ,GAAG;QACvC/C,OAAOG,IAAI,CAAC;IACd;IAEA,4CAA4C;IAC5C,IAAIyC,QAAQC,MAAM,KAAK,eAAe;QACpC,IAAID,QAAQI,KAAK,IAAI,CAACrE,cAAciE,QAAQI,KAAK,CAAC3D,KAAK,GAAG;YACxDW,OAAOG,IAAI,CAAC;QACd;IACF;IAEA,OAAO;QACLD,SAASF,OAAOV,MAAM,KAAK;QAC3BU;IACF;AACF;AAMO,SAASzB,gBAAgB0E,OAAY;IAC1C,MAAMjD,SAAmB,EAAE;IAE3B,IAAI,CAACiD,WAAW,OAAOA,YAAY,UAAU;QAC3C,OAAO;YACL/C,SAAS;YACTF,QAAQ;gBAAC;aAAe;QAC1B;IACF;IAEA,oCAAoC;IACpC,MAAMkD,iBAAiB;QAAC;QAAU;QAAQ;QAAe;KAAU;IACnEA,eAAepB,OAAO,CAACqB,CAAAA;QACrB,IAAI,CAACF,OAAO,CAACE,MAAM,IAAI,OAAOF,OAAO,CAACE,MAAM,KAAK,YAAYF,OAAO,CAACE,MAAM,CAACC,IAAI,OAAO,IAAI;YACzFpD,OAAOG,IAAI,CAACgD;QACd;IACF;IAEA,iCAAiC;IACjC,IAAIF,QAAQpC,OAAO,IAAIoC,QAAQI,WAAW,EAAE;QAC1C,MAAMC,kBAAkBC,mBAAmBN,QAAQI,WAAW,EAAEJ,QAAQpC,OAAO;QAC/E,IAAI,CAACyC,iBAAiB;YACpBtD,OAAOG,IAAI,CAAC;QACd;IACF;IAEA,OAAO;QACLD,SAASF,OAAOV,MAAM,KAAK;QAC3BU;IACF;AACF;AAEA,sCAAsC;AACtC,8BAA8B;AAC9B,sCAAsC;AAEtC,SAASuD,mBAAmBC,UAAkB,EAAE3C,OAAe;IAC7D,MAAM4C,WAAsC;QAC1C,aAAa;QACb,OAAO;QACP,MAAM;QACN,UAAU;QACV,SAAS;QACT,UAAU;QACV,MAAM;QACN,WAAW;QACX,UAAU;QACV,SAAS;QACT,SAAS;QACT,UAAU;IACZ;IAEA,MAAMC,UAAUD,QAAQ,CAAC5C,QAAQ;IACjC,OAAO6C,UAAUA,QAAQ5D,IAAI,CAAC0D,cAAc,MAAM,4BAA4B;AAChF;AAMO,SAAShF,iBAAiBuE,QAAa;IAC5C,IAAI,CAACA,YAAY,OAAOA,aAAa,UAAU;QAC7C,OAAO;IACT;IAEA,MAAMY,sBAAsB;QAAC;QAAO;QAAO;QAAO;QAAO;QAAO;KAAM;IACtE,OAAOA,oBAAoB/D,QAAQ,CAACmD,SAASa,WAAW;AAC1D;AAMO,SAAS1E,iBAAiBgD,QAAa;IAC5C,IAAI,OAAOA,aAAa,UAAU;QAChC,OAAO;IACT;IAEA,8BAA8B;IAC9B,IAAI,CAAC2B,OAAOC,SAAS,CAAC5B,aAAaA,YAAY,GAAG;QAChD,OAAO;IACT;IAEA,4BAA4B;IAC5B,IAAIA,WAAW,KAAK;QAClB,OAAO;IACT;IAEA,OAAO;AACT;AAMO,SAASxD,iBAAiBqF,QAAa;IAC5C,IAAI,CAACA,YAAY,OAAOA,aAAa,UAAU;QAC7C,OAAO;IACT;IAEA,eAAe;IACf,IAAI,CAAC;QAAC;QAAc;KAAQ,CAACnE,QAAQ,CAACmE,SAASC,IAAI,GAAG;QACpD,OAAO;IACT;IAEA,gBAAgB;IAChB,IAAI,OAAOD,SAASE,KAAK,KAAK,YAAYF,SAASE,KAAK,GAAG,GAAG;QAC5D,OAAO;IACT;IAEA,oCAAoC;IACpC,IAAIF,SAASC,IAAI,KAAK,cAAc;QAClC,sCAAsC;QACtC,IAAID,SAASE,KAAK,GAAG,KAAK;YACxB,OAAO;QACT;IACF;IAEA,IAAIF,SAASC,IAAI,KAAK,SAAS;QAC7B,mCAAmC;QACnC,IAAI,CAACD,SAAShB,QAAQ,IAAI,CAACvE,iBAAiBuF,SAAShB,QAAQ,GAAG;YAC9D,OAAO;QACT;IACF;IAEA,OAAO;AACT;AASO,SAASzE,eAAe4F,KAAa;IAC1C,IAAI,OAAOA,UAAU,UAAU;QAC7B,OAAO;IACT;IAEA,OAAOA,MACJnD,OAAO,CAAC,gCAAgC,IAAI,kBAAkB;KAC9DA,OAAO,CAAC,YAAY,IAAI,oBAAoB;KAC5CA,OAAO,CAAC,iBAAiB,IAAI,sBAAsB;KACnDA,OAAO,CAAC,YAAY,IAAI,yBAAyB;KACjDqC,IAAI;AACT;AAKO,SAASjE,uBAAuBgF,GAAQ,EAAEjB,cAAwB;IACvE,MAAMlD,SAAmB,EAAE;IAE3B,IAAI,CAACmE,OAAO,OAAOA,QAAQ,UAAU;QACnC,OAAO;YACLjE,SAAS;YACTF,QAAQ;gBAAC;aAAiB;QAC5B;IACF;IAEAkD,eAAepB,OAAO,CAACqB,CAAAA;QACrB,IAAI,CAAEA,CAAAA,SAASgB,GAAE,KAAMA,GAAG,CAAChB,MAAM,KAAK,QAAQgB,GAAG,CAAChB,MAAM,KAAKiB,aAAaD,GAAG,CAAChB,MAAM,KAAK,IAAI;YAC3FnD,OAAOG,IAAI,CAACgD;QACd;IACF;IAEA,OAAO;QACLjD,SAASF,OAAOV,MAAM,KAAK;QAC3BU;IACF;AACF;AAKO,SAASpB,oBAAoBqF,KAAU,EAAEI,GAAW,EAAEC,GAAW;IACtE,IAAI,OAAOL,UAAU,UAAU;QAC7B,OAAO;IACT;IAEA,OAAOA,SAASI,OAAOJ,SAASK;AAClC;AAKO,SAAS7F,aAAa8F,IAAS;IACpC,IAAI,CAACA,MAAM;QACT,OAAO;IACT;IAEA,MAAMC,aAAa,IAAIC,KAAKF;IAC5B,OAAO,CAACG,MAAMF,WAAWG,OAAO;AAClC;AAKO,SAASvF,YAAYwF,GAAQ;IAClC,IAAI,CAACA,OAAO,OAAOA,QAAQ,UAAU;QACnC,OAAO;IACT;IAEA,IAAI;QACF,IAAIC,IAAID;QACR,OAAO;IACT,EAAE,OAAM;QACN,OAAO;IACT;AACF"}