{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\admin\\useOrdersApi.ts"],"sourcesContent":["// ===================================\r\n// PINTEYA E-COMMERCE - ORDERS API HOOK\r\n// Hook especializado para llamadas a la API de órdenes\r\n// ===================================\r\n\r\nimport { useCallback, useRef } from 'react';\r\nimport {\r\n  StrictOrdersListResponse,\r\n  ApiResult,\r\n  toStrictOrdersResponse,\r\n  createStrictApiError,\r\n  isStrictApiResponse\r\n} from '@/types/api-strict';\r\nimport { StrictOrderFilters } from './useOrdersEnterpriseStrict';\r\nimport { UseOrdersCacheReturn } from './useOrdersCache';\r\n\r\n// ===================================\r\n// TIPOS Y CONFIGURACIÓN\r\n// ===================================\r\n\r\ninterface ApiOptions {\r\n  timeout: number;\r\n  maxRetries: number;\r\n  enableCache: boolean;\r\n}\r\n\r\ninterface UseOrdersApiOptions extends ApiOptions {\r\n  cache: UseOrdersCacheReturn;\r\n}\r\n\r\nexport interface UseOrdersApiReturn {\r\n  fetchOrdersInternal: (filters: StrictOrderFilters, isRetry?: boolean) => Promise<ApiResult<StrictOrdersListResponse['data']>>;\r\n  abortCurrentRequest: () => void;\r\n  isRequestInProgress: () => boolean;\r\n}\r\n\r\n// ===================================\r\n// UTILIDADES DE API\r\n// ===================================\r\n\r\nfunction buildApiUrl(filters: StrictOrderFilters): string {\r\n  const searchParams = new URLSearchParams();\r\n  \r\n  // Agregar parámetros de filtros\r\n  Object.entries(filters).forEach(([key, value]) => {\r\n    // Siempre incluir parámetros requeridos por la API\r\n    if (key === 'page' || key === 'limit' || key === 'sort_by' || key === 'sort_order') {\r\n      if (value !== undefined && value !== null && value !== '') {\r\n        searchParams.append(key, String(value));\r\n      }\r\n    }\r\n    // Para otros parámetros, aplicar filtros normales\r\n    else if (value !== undefined && value !== null && value !== 'all' && value !== '') {\r\n      searchParams.append(key, String(value));\r\n    }\r\n  });\r\n  \r\n  // Asegurar que siempre tengamos los parámetros mínimos requeridos\r\n  if (!searchParams.has('page')) {\r\n    searchParams.append('page', '1');\r\n  }\r\n  if (!searchParams.has('limit')) {\r\n    searchParams.append('limit', '20');\r\n  }\r\n  if (!searchParams.has('sort_by')) {\r\n    searchParams.append('sort_by', 'created_at');\r\n  }\r\n  if (!searchParams.has('sort_order')) {\r\n    searchParams.append('sort_order', 'desc');\r\n  }\r\n  \r\n  return `/api/admin/orders?${searchParams.toString()}`;\r\n}\r\n\r\nasync function makeApiRequest(\r\n  url: string, \r\n  signal: AbortSignal, \r\n  timeout: number\r\n): Promise<Response> {\r\n  // Crear timeout promise\r\n  const timeoutPromise = new Promise<never>((_, reject) => {\r\n    setTimeout(() => reject(new Error(`Request timeout after ${timeout}ms`)), timeout);\r\n  });\r\n  \r\n  // Hacer la petición con timeout\r\n  const fetchPromise = fetch(url, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Accept': 'application/json'\r\n    },\r\n    credentials: 'include', // ✅ AGREGADO: Incluir cookies de sesión NextAuth.js\r\n    signal\r\n  });\r\n  \r\n  return Promise.race([fetchPromise, timeoutPromise]);\r\n}\r\n\r\n// ===================================\r\n// HOOK DE API\r\n// ===================================\r\n\r\nexport function useOrdersApi(options: UseOrdersApiOptions): UseOrdersApiReturn {\r\n  const abortControllerRef = useRef<AbortController | null>(null);\r\n  \r\n  const fetchOrdersInternal = useCallback(async (\r\n    filters: StrictOrderFilters,\r\n    isRetry: boolean = false\r\n  ): Promise<ApiResult<StrictOrdersListResponse['data']>> => {\r\n    try {\r\n      // Validar si la petición es demasiado reciente (anti-spam)\r\n      if (!isRetry && options.cache.isRequestTooRecent(filters)) {\r\n        if (process.env.NODE_ENV === 'development') {\r\n          console.log('[useOrdersApi] Request blocked - too recent');\r\n        }\r\n        return createStrictApiError('Request too recent', 'REQUEST_THROTTLED');\r\n      }\r\n      \r\n      // Verificar cache primero\r\n      if (options.enableCache) {\r\n        const cachedData = options.cache.getCachedData(filters);\r\n        if (cachedData) {\r\n          return { \r\n            success: true, \r\n            data: cachedData.data, \r\n            message: cachedData.message, \r\n            timestamp: cachedData.timestamp \r\n          };\r\n        }\r\n      }\r\n      \r\n      // Verificar si ya hay una petición pendiente\r\n      const pendingRequest = options.cache.getPendingRequest(filters);\r\n      if (pendingRequest) {\r\n        if (process.env.NODE_ENV === 'development') {\r\n          console.log('[useOrdersApi] Using pending request');\r\n        }\r\n        return await pendingRequest;\r\n      }\r\n      \r\n      // Gestión del AbortController - Solo abortar si es una petición diferente\r\n      // Crear un identificador único para esta petición\r\n      const requestId = JSON.stringify(filters);\r\n      \r\n      // Solo abortar si hay una petición anterior Y es diferente\r\n      if (abortControllerRef.current && !abortControllerRef.current.signal.aborted) {\r\n        // Solo abortar si los filtros son diferentes (nueva petición)\r\n        const currentRequestId = (abortControllerRef.current as any)._requestId;\r\n        if (currentRequestId && currentRequestId !== requestId) {\r\n          if (process.env.NODE_ENV === 'development') {\r\n            console.log('[useOrdersApi] Aborting previous different request');\r\n          }\r\n          abortControllerRef.current.abort();\r\n        } else if (!currentRequestId) {\r\n          // Abortar si no tiene ID (petición antigua)\r\n          abortControllerRef.current.abort();\r\n        }\r\n      }\r\n      \r\n      const controller = new AbortController();\r\n      (controller as any)._requestId = requestId;\r\n      abortControllerRef.current = controller;\r\n      \r\n      // Crear la promesa de la petición\r\n      const requestPromise = (async (): Promise<ApiResult<StrictOrdersListResponse['data']>> => {\r\n        try {\r\n          const url = buildApiUrl(filters);\r\n          \r\n          if (process.env.NODE_ENV === 'development') {\r\n            console.log('[useOrdersApi] Making request:', { url, filters });\r\n          }\r\n          \r\n          const response = await makeApiRequest(url, controller.signal, options.timeout);\r\n          \r\n          // Verificar si la petición fue cancelada\r\n          if (controller.signal.aborted) {\r\n            return createStrictApiError('Request cancelled', 'REQUEST_CANCELLED');\r\n          }\r\n          \r\n          // Verificar status de respuesta\r\n          if (!response.ok) {\r\n            const errorText = await response.text().catch(() => 'Unknown error');\r\n            throw new Error(`HTTP ${response.status}: ${errorText}`);\r\n          }\r\n          \r\n          // Parsear respuesta JSON\r\n          let jsonData: unknown;\r\n          try {\r\n            jsonData = await response.json();\r\n          } catch (parseError) {\r\n            throw new Error(`Failed to parse JSON response: ${parseError instanceof Error ? parseError.message : 'Unknown error'}`);\r\n          }\r\n          \r\n          // Validar y transformar respuesta\r\n          const validatedResponse = toStrictOrdersResponse(jsonData);\r\n          \r\n          if (!isStrictApiResponse(validatedResponse)) {\r\n            return validatedResponse; // Es un error\r\n          }\r\n          \r\n          // Guardar en cache si está habilitado\r\n          if (options.enableCache) {\r\n            options.cache.setCachedData(filters, validatedResponse);\r\n          }\r\n          \r\n          return { \r\n            success: true, \r\n            data: validatedResponse.data, \r\n            message: validatedResponse.message, \r\n            timestamp: validatedResponse.timestamp \r\n          };\r\n          \r\n        } catch (error) {\r\n          if (controller.signal.aborted) {\r\n            return createStrictApiError('Request cancelled', 'REQUEST_CANCELLED');\r\n          }\r\n          \r\n          const errorMessage = error instanceof Error ? error.message : 'Unknown error occurred';\r\n          console.error('[useOrdersApi] Request failed:', errorMessage);\r\n          \r\n          return createStrictApiError(errorMessage, 'FETCH_ERROR', { \r\n            originalError: error,\r\n            filters,\r\n            url: buildApiUrl(filters)\r\n          });\r\n        }\r\n      })();\r\n      \r\n      // Registrar la petición como pendiente\r\n      options.cache.setPendingRequest(filters, requestPromise);\r\n      \r\n      return await requestPromise;\r\n      \r\n    } catch (error) {\r\n      const errorMessage = error instanceof Error ? error.message : 'Unexpected error in fetchOrdersInternal';\r\n      console.error('[useOrdersApi] Unexpected error:', errorMessage);\r\n      \r\n      return createStrictApiError(errorMessage, 'UNEXPECTED_ERROR', { \r\n        originalError: error,\r\n        filters \r\n      });\r\n    }\r\n  }, [options]);\r\n  \r\n  const abortCurrentRequest = useCallback((): void => {\r\n    if (abortControllerRef.current && !abortControllerRef.current.signal.aborted) {\r\n      abortControllerRef.current.abort();\r\n      \r\n      if (process.env.NODE_ENV === 'development') {\r\n        console.log('[useOrdersApi] Request aborted');\r\n      }\r\n    }\r\n  }, []);\r\n  \r\n  const isRequestInProgress = useCallback((): boolean => {\r\n    return abortControllerRef.current !== null && !abortControllerRef.current.signal.aborted;\r\n  }, []);\r\n  \r\n  return {\r\n    fetchOrdersInternal,\r\n    abortCurrentRequest,\r\n    isRequestInProgress\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["useOrdersApi","buildApiUrl","filters","searchParams","URLSearchParams","Object","entries","forEach","key","value","undefined","append","String","has","toString","makeApiRequest","url","signal","timeout","timeoutPromise","Promise","_","reject","setTimeout","Error","fetchPromise","fetch","method","headers","credentials","race","options","abortControllerRef","useRef","fetchOrdersInternal","useCallback","isRetry","cache","isRequestTooRecent","process","env","NODE_ENV","console","log","createStrictApiError","enableCache","cachedData","getCachedData","success","data","message","timestamp","pendingRequest","getPendingRequest","requestId","JSON","stringify","current","aborted","currentRequestId","_requestId","abort","controller","AbortController","requestPromise","response","ok","errorText","text","catch","status","jsonData","json","parseError","validatedResponse","toStrictOrdersResponse","isStrictApiResponse","setCachedData","error","errorMessage","originalError","setPendingRequest","abortCurrentRequest","isRequestInProgress"],"mappings":"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"}