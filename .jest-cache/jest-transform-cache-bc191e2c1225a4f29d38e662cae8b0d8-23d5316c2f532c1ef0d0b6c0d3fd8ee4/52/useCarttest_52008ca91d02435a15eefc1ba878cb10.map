{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\__tests__\\hooks\\useCart.test.ts"],"sourcesContent":["// ===================================\r\n// PINTEYA E-COMMERCE - TESTS PARA USECART HOOK\r\n// ===================================\r\n\r\nimport React from 'react';\r\nimport { renderHook, act } from '@testing-library/react';\r\nimport { Provider } from 'react-redux';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport cartReducer, {\r\n  addItemToCart,\r\n  removeItemFromCart,\r\n  updateCartItemQuantity,\r\n  removeAllItemsFromCart,\r\n  selectCartItems,\r\n  selectTotalPrice\r\n} from '@/redux/features/cart-slice';\r\nimport { useAppSelector, useAppDispatch } from '@/redux/store';\r\n\r\n// Selector personalizado para contar items del carrito\r\nconst selectCartCount = (state: any) => state.cartReducer.items.length;\r\n\r\n// Mock del hook personalizado useCart\r\nconst useCart = () => {\r\n  const dispatch = useAppDispatch();\r\n  const cartItems = useAppSelector(selectCartItems);\r\n  const totalPrice = useAppSelector(selectTotalPrice);\r\n  const cartCount = useAppSelector(selectCartCount);\r\n\r\n  const addToCart = (item: any) => {\r\n    dispatch(addItemToCart(item));\r\n  };\r\n\r\n  const removeFromCart = (id: number) => {\r\n    dispatch(removeItemFromCart(id));\r\n  };\r\n\r\n  const updateQuantity = (id: number, quantity: number) => {\r\n    dispatch(updateCartItemQuantity({ id, quantity }));\r\n  };\r\n\r\n  const clearCart = () => {\r\n    dispatch(removeAllItemsFromCart());\r\n  };\r\n\r\n  return {\r\n    cartItems,\r\n    totalPrice,\r\n    cartCount,\r\n    addToCart,\r\n    removeFromCart,\r\n    updateQuantity,\r\n    clearCart,\r\n  };\r\n};\r\n\r\n// Producto de prueba\r\nconst mockProduct = {\r\n  id: 1,\r\n  title: 'Pintura Latex Interior Blanco 4L',\r\n  price: 18000,\r\n  discountedPrice: 15000,\r\n  quantity: 1,\r\n  imgs: {\r\n    thumbnails: ['/images/products/pintura-latex-blanco-sm.jpg'],\r\n    previews: ['/images/products/pintura-latex-blanco.jpg'],\r\n  },\r\n};\r\n\r\n// Función helper para renderizar hook con Redux store\r\nconst renderHookWithStore = (initialState = {}) => {\r\n  const store = configureStore({\r\n    reducer: {\r\n      cartReducer,\r\n    },\r\n    preloadedState: initialState,\r\n  });\r\n\r\n  const wrapper = ({ children }: { children: React.ReactNode }) => (\r\n    React.createElement(Provider, { store }, children)\r\n  );\r\n\r\n  return {\r\n    ...renderHook(() => useCart(), { wrapper }),\r\n    store,\r\n  };\r\n};\r\n\r\ndescribe('useCart Hook', () => {\r\n  it('should initialize with empty cart', () => {\r\n    const { result } = renderHookWithStore();\r\n\r\n    expect(result.current.cartItems).toEqual([]);\r\n    expect(result.current.totalPrice).toBe(0);\r\n    expect(result.current.cartCount).toBe(0);\r\n  });\r\n\r\n  it('should add item to cart', () => {\r\n    const { result } = renderHookWithStore();\r\n\r\n    act(() => {\r\n      result.current.addToCart(mockProduct);\r\n    });\r\n\r\n    expect(result.current.cartItems).toHaveLength(1);\r\n    expect(result.current.cartItems[0].id).toBe(mockProduct.id);\r\n    expect(result.current.cartItems[0].quantity).toBe(1);\r\n    expect(result.current.cartCount).toBe(1);\r\n  });\r\n\r\n  it('should increase quantity when adding existing item', () => {\r\n    const initialState = {\r\n      cartReducer: {\r\n        items: [mockProduct],\r\n      },\r\n    };\r\n\r\n    const { result } = renderHookWithStore(initialState);\r\n\r\n    act(() => {\r\n      result.current.addToCart(mockProduct);\r\n    });\r\n\r\n    expect(result.current.cartItems).toHaveLength(1);\r\n    expect(result.current.cartItems[0].quantity).toBe(2);\r\n    expect(result.current.cartCount).toBe(1); // Número de productos únicos\r\n  });\r\n\r\n  it('should remove item from cart', () => {\r\n    const initialState = {\r\n      cartReducer: {\r\n        items: [mockProduct],\r\n      },\r\n    };\r\n\r\n    const { result } = renderHookWithStore(initialState);\r\n\r\n    act(() => {\r\n      result.current.removeFromCart(mockProduct.id);\r\n    });\r\n\r\n    expect(result.current.cartItems).toHaveLength(0);\r\n    expect(result.current.cartCount).toBe(0);\r\n    expect(result.current.totalPrice).toBe(0);\r\n  });\r\n\r\n  it('should update item quantity', () => {\r\n    const initialState = {\r\n      cartReducer: {\r\n        items: [mockProduct],\r\n      },\r\n    };\r\n\r\n    const { result } = renderHookWithStore(initialState);\r\n\r\n    act(() => {\r\n      result.current.updateQuantity(mockProduct.id, 3);\r\n    });\r\n\r\n    expect(result.current.cartItems[0].quantity).toBe(3);\r\n  });\r\n\r\n  it('should set item quantity to 0 (but not remove from cart)', () => {\r\n    const initialState = {\r\n      cartReducer: {\r\n        items: [mockProduct],\r\n      },\r\n    };\r\n\r\n    const { result } = renderHookWithStore(initialState);\r\n\r\n    act(() => {\r\n      result.current.updateQuantity(mockProduct.id, 0);\r\n    });\r\n\r\n    // El reducer actual no elimina automáticamente items con cantidad 0\r\n    expect(result.current.cartItems).toHaveLength(1);\r\n    expect(result.current.cartItems[0].quantity).toBe(0);\r\n  });\r\n\r\n  it('should clear entire cart', () => {\r\n    const initialState = {\r\n      cartReducer: {\r\n        items: [\r\n          mockProduct,\r\n          { ...mockProduct, id: 2, title: 'Otro producto' },\r\n        ],\r\n      },\r\n    };\r\n\r\n    const { result } = renderHookWithStore(initialState);\r\n\r\n    act(() => {\r\n      result.current.clearCart();\r\n    });\r\n\r\n    expect(result.current.cartItems).toHaveLength(0);\r\n    expect(result.current.cartCount).toBe(0);\r\n    expect(result.current.totalPrice).toBe(0);\r\n  });\r\n\r\n  it('should calculate total price correctly', () => {\r\n    const product1 = { ...mockProduct, quantity: 2 }; // 15000 * 2 = 30000\r\n    const product2 = { ...mockProduct, id: 2, discountedPrice: 10000, quantity: 1 }; // 10000 * 1 = 10000\r\n\r\n    const initialState = {\r\n      cartReducer: {\r\n        items: [product1, product2],\r\n      },\r\n    };\r\n\r\n    const { result } = renderHookWithStore(initialState);\r\n\r\n    expect(result.current.totalPrice).toBe(40000); // 30000 + 10000\r\n  });\r\n\r\n  it('should handle multiple different products', () => {\r\n    const { result } = renderHookWithStore();\r\n\r\n    const product1 = mockProduct;\r\n    const product2 = { ...mockProduct, id: 2, title: 'Esmalte Azul' };\r\n    const product3 = { ...mockProduct, id: 3, title: 'Barniz Transparente' };\r\n\r\n    act(() => {\r\n      result.current.addToCart(product1);\r\n      result.current.addToCart(product2);\r\n      result.current.addToCart(product3);\r\n    });\r\n\r\n    expect(result.current.cartItems).toHaveLength(3);\r\n    expect(result.current.cartCount).toBe(3);\r\n  });\r\n\r\n  it('should handle edge cases with invalid quantities', () => {\r\n    const initialState = {\r\n      cartReducer: {\r\n        items: [mockProduct],\r\n      },\r\n    };\r\n\r\n    const { result } = renderHookWithStore(initialState);\r\n\r\n    // Intentar establecer cantidad negativa\r\n    act(() => {\r\n      result.current.updateQuantity(mockProduct.id, -1);\r\n    });\r\n\r\n    // El reducer actual permite cantidades negativas\r\n    expect(result.current.cartItems[0].quantity).toBe(-1);\r\n\r\n    // Verificar que el item sigue en el carrito\r\n    expect(result.current.cartItems).toHaveLength(1);\r\n  });\r\n\r\n  it('should handle removing non-existent item', () => {\r\n    const initialState = {\r\n      cartReducer: {\r\n        items: [mockProduct],\r\n      },\r\n    };\r\n\r\n    const { result } = renderHookWithStore(initialState);\r\n\r\n    act(() => {\r\n      result.current.removeFromCart(999); // ID que no existe\r\n    });\r\n\r\n    // El carrito debería permanecer sin cambios\r\n    expect(result.current.cartItems).toHaveLength(1);\r\n    expect(result.current.cartItems[0].id).toBe(mockProduct.id);\r\n  });\r\n\r\n  it('should handle updating quantity of non-existent item', () => {\r\n    const initialState = {\r\n      cartReducer: {\r\n        items: [mockProduct],\r\n      },\r\n    };\r\n\r\n    const { result } = renderHookWithStore(initialState);\r\n\r\n    act(() => {\r\n      result.current.updateQuantity(999, 5); // ID que no existe\r\n    });\r\n\r\n    // El carrito debería permanecer sin cambios\r\n    expect(result.current.cartItems).toHaveLength(1);\r\n    expect(result.current.cartItems[0].quantity).toBe(mockProduct.quantity);\r\n  });\r\n\r\n  it('should maintain cart state consistency', () => {\r\n    const { result } = renderHookWithStore();\r\n\r\n    // Agregar varios productos y realizar operaciones\r\n    act(() => {\r\n      result.current.addToCart(mockProduct);\r\n      result.current.addToCart({ ...mockProduct, id: 2 });\r\n      result.current.updateQuantity(1, 3);\r\n      result.current.removeFromCart(2);\r\n    });\r\n\r\n    expect(result.current.cartItems).toHaveLength(1);\r\n    expect(result.current.cartItems[0].id).toBe(1);\r\n    expect(result.current.cartItems[0].quantity).toBe(3);\r\n    expect(result.current.cartCount).toBe(1);\r\n  });\r\n\r\n  it('should handle products with different price structures', () => {\r\n    const productWithoutDiscount = {\r\n      ...mockProduct,\r\n      id: 2,\r\n      price: 20000,\r\n      discountedPrice: 20000, // Sin descuento\r\n    };\r\n\r\n    const { result } = renderHookWithStore();\r\n\r\n    act(() => {\r\n      result.current.addToCart(mockProduct); // Con descuento\r\n      result.current.addToCart(productWithoutDiscount); // Sin descuento\r\n    });\r\n\r\n    expect(result.current.cartItems).toHaveLength(2);\r\n    expect(result.current.totalPrice).toBe(35000); // 15000 + 20000\r\n  });\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["selectCartCount","state","cartReducer","items","length","useCart","dispatch","useAppDispatch","cartItems","useAppSelector","selectCartItems","totalPrice","selectTotalPrice","cartCount","addToCart","item","addItemToCart","removeFromCart","id","removeItemFromCart","updateQuantity","quantity","updateCartItemQuantity","clearCart","removeAllItemsFromCart","mockProduct","title","price","discountedPrice","imgs","thumbnails","previews","renderHookWithStore","initialState","store","configureStore","reducer","preloadedState","wrapper","children","React","createElement","Provider","renderHook","describe","it","result","expect","current","toEqual","toBe","act","toHaveLength","product1","product2","product3","productWithoutDiscount"],"mappings":"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"}