{"version":3,"names":["cov_c5lqdjo38","actualCoverage","s","PRODUCT_TYPES","f","detectProductType","formatCapacity","getDefaultColor","id","name","hasColorSelector","capacityUnit","defaultCapacities","category","allowedColorCategories","hasGrainSelector","grainOptions","hasSizeSelector","sizeOptions","hasWidthSelector","widthOptions","productName","toLowerCase","includes","b","find","type","cat","capacity","unit","endsWith","slice","productType"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\utils\\product-utils.ts"],"sourcesContent":["// Utilidades para manejo de productos\r\n\r\nexport interface ProductType {\r\n  id: string;\r\n  name: string;\r\n  hasColorSelector: boolean;\r\n  capacityUnit: 'litros' | 'kg' | 'unidades' | 'metros';\r\n  defaultCapacities: string[];\r\n  category: string;\r\n  // Nuevos selectores específicos\r\n  hasGrainSelector?: boolean; // Para lijas\r\n  hasSizeSelector?: boolean;  // Para pinceles\r\n  hasWidthSelector?: boolean; // Para cintas de papel\r\n  grainOptions?: string[];    // Opciones de grano para lijas\r\n  sizeOptions?: string[];     // Opciones de tamaño para pinceles\r\n  widthOptions?: string[];    // Opciones de ancho para cintas\r\n  // Configuración de colores permitidos\r\n  allowedColorCategories?: string[]; // Categorías de colores permitidas para este tipo de producto\r\n}\r\n\r\n// Configuración de tipos de productos\r\nexport const PRODUCT_TYPES: ProductType[] = [\r\n  {\r\n    id: 'pinturas-latex',\r\n    name: 'Pinturas Látex',\r\n    hasColorSelector: true,\r\n    capacityUnit: 'litros',\r\n    defaultCapacities: ['1L', '4L', '10L', '20L'],\r\n    category: 'pinturas',\r\n    allowedColorCategories: ['Neutros', 'Cálidos', 'Fríos', 'Tierras'] // Látex tiene todos los colores generales\r\n  },\r\n  {\r\n    id: 'pinturas-esmalte',\r\n    name: 'Pinturas Esmalte',\r\n    hasColorSelector: true,\r\n    capacityUnit: 'litros',\r\n    defaultCapacities: ['1L', '4L', '10L', '20L'],\r\n    category: 'pinturas',\r\n    allowedColorCategories: ['Neutros', 'Cálidos', 'Fríos', 'Tierras', 'Sintético'] // Esmalte sintético incluye más colores\r\n  },\r\n  {\r\n    id: 'impregnante-madera',\r\n    name: 'Impregnante para Madera',\r\n    hasColorSelector: true,\r\n    capacityUnit: 'litros',\r\n    defaultCapacities: ['1L', '4L', '10L'],\r\n    category: 'protectores',\r\n    allowedColorCategories: ['Madera'] // Solo colores de madera\r\n  },\r\n  {\r\n    id: 'poximix',\r\n    name: 'Poximix',\r\n    hasColorSelector: false, // Solo viene en gris\r\n    capacityUnit: 'kg',\r\n    defaultCapacities: ['5kg', '10kg', '25kg'],\r\n    category: 'adhesivos'\r\n  },\r\n  {\r\n    id: 'lijas',\r\n    name: 'Lijas',\r\n    hasColorSelector: false,\r\n    capacityUnit: 'unidades',\r\n    defaultCapacities: ['1 unidad', '5 unidades', '10 unidades'],\r\n    category: 'herramientas',\r\n    hasGrainSelector: true,\r\n    grainOptions: ['80', '120', '150', '220', '320', '400', '600', '800']\r\n  },\r\n  {\r\n    id: 'bandejas',\r\n    name: 'Bandejas',\r\n    hasColorSelector: false,\r\n    capacityUnit: 'unidades',\r\n    defaultCapacities: ['1 unidad'],\r\n    category: 'accesorios'\r\n  },\r\n  {\r\n    id: 'pinceles',\r\n    name: 'Pinceles',\r\n    hasColorSelector: false,\r\n    capacityUnit: 'unidades',\r\n    defaultCapacities: ['1 unidad'],\r\n    category: 'herramientas',\r\n    hasSizeSelector: true,\r\n    sizeOptions: ['1/2\"', '1\"', '1 1/2\"', '2\"', '2 1/2\"', '3\"', '4\"']\r\n  },\r\n  {\r\n    id: 'rodillos',\r\n    name: 'Rodillos',\r\n    hasColorSelector: false,\r\n    capacityUnit: 'unidades',\r\n    defaultCapacities: ['1 unidad'],\r\n    category: 'herramientas'\r\n  },\r\n  {\r\n    id: 'cintas-papel',\r\n    name: 'Cintas de Papel',\r\n    hasColorSelector: false,\r\n    capacityUnit: 'metros',\r\n    defaultCapacities: ['25m', '50m'],\r\n    category: 'accesorios',\r\n    hasWidthSelector: true,\r\n    widthOptions: ['12mm', '18mm', '24mm', '36mm', '48mm', '72mm']\r\n  }\r\n];\r\n\r\n// Función para detectar el tipo de producto basado en nombre y categoría\r\nexport const detectProductType = (productName: string, category?: string): ProductType => {\r\n  const name = productName.toLowerCase();\r\n  \r\n  // Detección específica por nombre\r\n  if (name.includes('poximix')) {\r\n    return PRODUCT_TYPES.find(type => type.id === 'poximix')!;\r\n  }\r\n  \r\n  // Detección de impregnantes para madera (como Danzke)\r\n  if (name.includes('impregnante') || name.includes('danzke') || \r\n      (name.includes('protector') && name.includes('madera'))) {\r\n    return PRODUCT_TYPES.find(type => type.id === 'impregnante-madera')!;\r\n  }\r\n  \r\n  // Detección específica para Sintético Converlux\r\n  if (name.includes('converlux') || name.includes('sintético') || name.includes('sintetico')) {\r\n    return PRODUCT_TYPES.find(type => type.id === 'pinturas-esmalte')!;\r\n  }\r\n  \r\n  // Detección de productos sintéticos (esmaltes, converlux, etc.)\r\n  if (name.includes('esmalte') || name.includes('sintetico') || name.includes('sintético') ||\r\n      name.includes('converlux') || name.includes('convertidor') || \r\n      (name.includes('metal') && name.includes('madera'))) {\r\n    return PRODUCT_TYPES.find(type => type.id === 'pinturas-esmalte')!;\r\n  }\r\n  \r\n  // Detección de pinturas látex (recuplast, interior, etc.)\r\n  if (name.includes('latex') || name.includes('látex') || name.includes('recuplast') ||\r\n      name.includes('interior') || name.includes('exterior') || name.includes('acrilico') ||\r\n      name.includes('acrílico')) {\r\n    return PRODUCT_TYPES.find(type => type.id === 'pinturas-latex')!;\r\n  }\r\n  \r\n  if (name.includes('lija')) {\r\n    return PRODUCT_TYPES.find(type => type.id === 'lijas')!;\r\n  }\r\n  \r\n  if (name.includes('bandeja')) {\r\n    return PRODUCT_TYPES.find(type => type.id === 'bandejas')!;\r\n  }\r\n  \r\n  if (name.includes('pincel')) {\r\n    return PRODUCT_TYPES.find(type => type.id === 'pinceles')!;\r\n  }\r\n  \r\n  if (name.includes('rodillo')) {\r\n    return PRODUCT_TYPES.find(type => type.id === 'rodillos')!;\r\n  }\r\n  \r\n  if (name.includes('cinta') && (name.includes('papel') || name.includes('enmascarar'))) {\r\n    return PRODUCT_TYPES.find(type => type.id === 'cintas-papel')!;\r\n  }\r\n  \r\n  // Detección por categoría\r\n  if (category) {\r\n    const cat = category.toLowerCase();\r\n    \r\n    if (cat.includes('pintura') || cat.includes('latex') || cat.includes('esmalte')) {\r\n      // Distinguir entre esmalte sintético y látex\r\n      if (name.includes('esmalte') || name.includes('sintetico') || name.includes('sintético') ||\r\n          name.includes('converlux')) {\r\n        return PRODUCT_TYPES.find(type => type.id === 'pinturas-esmalte')!;\r\n      }\r\n      return PRODUCT_TYPES.find(type => type.id === 'pinturas-latex')!;\r\n    }\r\n    \r\n    if (cat.includes('protector') || cat.includes('impregnante')) {\r\n      return PRODUCT_TYPES.find(type => type.id === 'impregnante-madera')!;\r\n    }\r\n    \r\n    if (cat.includes('adhesivo') || cat.includes('pegamento')) {\r\n      return PRODUCT_TYPES.find(type => type.id === 'poximix')!;\r\n    }\r\n    \r\n    if (cat.includes('herramienta')) {\r\n      return PRODUCT_TYPES.find(type => type.id === 'pinceles')!;\r\n    }\r\n    \r\n    if (cat.includes('accesorio')) {\r\n      return PRODUCT_TYPES.find(type => type.id === 'bandejas')!;\r\n    }\r\n  }\r\n  \r\n  // Por defecto, asumir que es pintura látex\r\n  return PRODUCT_TYPES.find(type => type.id === 'pinturas-latex')!;\r\n};\r\n\r\n// Función para obtener capacidades formateadas según la unidad\r\nexport const formatCapacity = (capacity: string, unit: string): string => {\r\n  // Si la capacidad es \"Sin especificar\", devolverla tal como está\r\n  if (capacity === 'Sin especificar') {\r\n    return capacity;\r\n  }\r\n  \r\n  switch (unit) {\r\n    case 'litros':\r\n      // Verificar si ya termina con 'L' (mayúscula) o 'l' (minúscula)\r\n      if (capacity.endsWith('L') || capacity.endsWith('l')) {\r\n        // Si termina con 'l' minúscula, convertir a 'L' mayúscula\r\n        return capacity.endsWith('l') ? capacity.slice(0, -1) + 'L' : capacity;\r\n      }\r\n      return `${capacity}L`;\r\n    case 'kg':\r\n      return capacity.endsWith('kg') ? capacity : `${capacity}kg`;\r\n    case 'metros':\r\n      return capacity.endsWith('m') ? capacity : `${capacity}m`;\r\n    case 'unidades':\r\n      return capacity.includes('unidad') ? capacity : `${capacity} unidad${capacity !== '1' ? 'es' : ''}`;\r\n    default:\r\n      return capacity;\r\n  }\r\n};\r\n\r\n// Función para obtener el color por defecto según el tipo de producto\r\nexport const getDefaultColor = (productType: ProductType): string => {\r\n  if (!productType.hasColorSelector) {\r\n    // Productos sin selector de color tienen un color fijo\r\n    if (productType.id === 'poximix') return 'gris';\r\n    return 'natural';\r\n  }\r\n  \r\n  return 'blanco-puro'; // Color por defecto para productos con selector\r\n};"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","ignoreList":[]}