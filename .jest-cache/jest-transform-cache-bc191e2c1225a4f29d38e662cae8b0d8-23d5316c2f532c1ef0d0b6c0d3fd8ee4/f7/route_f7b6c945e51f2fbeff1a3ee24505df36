b1b6cb6afd002e4a2b58d9dcd16a0d8e
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_78rrlaw26() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\analytics\\cleanup\\route.ts";
  var hash = "6aff36c8af8b344a8bc372765f47f231ee827337";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\analytics\\cleanup\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 20
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 23
        }
      },
      "7": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "8": {
        start: {
          line: 24,
          column: 18
        },
        end: {
          line: 24,
          column: 69
        }
      },
      "9": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 57
        }
      },
      "10": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 24
        }
      },
      "11": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 107,
          column: 5
        }
      },
      "12": {
        start: {
          line: 30,
          column: 24
        },
        end: {
          line: 30,
          column: 49
        }
      },
      "13": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 37,
          column: 9
        }
      },
      "14": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 36,
          column: 15
        }
      },
      "15": {
        start: {
          line: 38,
          column: 33
        },
        end: {
          line: 38,
          column: 53
        }
      },
      "16": {
        start: {
          line: 39,
          column: 27
        },
        end: {
          line: 39,
          column: 69
        }
      },
      "17": {
        start: {
          line: 40,
          column: 23
        },
        end: {
          line: 40,
          column: 60
        }
      },
      "18": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 48,
          column: 9
        }
      },
      "19": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 47,
          column: 15
        }
      },
      "20": {
        start: {
          line: 49,
          column: 25
        },
        end: {
          line: 49,
          column: 63
        }
      },
      "21": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "22": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 55,
          column: 15
        }
      },
      "23": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 79,
          column: 9
        }
      },
      "24": {
        start: {
          line: 59,
          column: 36
        },
        end: {
          line: 59,
          column: 93
        }
      },
      "25": {
        start: {
          line: 60,
          column: 37
        },
        end: {
          line: 63,
          column: 48
        }
      },
      "26": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 71,
          column: 13
        }
      },
      "27": {
        start: {
          line: 65,
          column: 16
        },
        end: {
          line: 65,
          column: 70
        }
      },
      "28": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 70,
          column: 19
        }
      },
      "29": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 78,
          column: 15
        }
      },
      "30": {
        start: {
          line: 81,
          column: 32
        },
        end: {
          line: 83,
          column: 10
        }
      },
      "31": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 91,
          column: 9
        }
      },
      "32": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 63
        }
      },
      "33": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 90,
          column: 15
        }
      },
      "34": {
        start: {
          line: 92,
          column: 23
        },
        end: {
          line: 92,
          column: 32
        }
      },
      "35": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 99,
          column: 11
        }
      },
      "36": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 101,
          column: 58
        }
      },
      "37": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 106,
          column: 11
        }
      },
      "38": {
        start: {
          line: 110,
          column: 4
        },
        end: {
          line: 174,
          column: 5
        }
      },
      "39": {
        start: {
          line: 112,
          column: 24
        },
        end: {
          line: 112,
          column: 49
        }
      },
      "40": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 119,
          column: 9
        }
      },
      "41": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 118,
          column: 15
        }
      },
      "42": {
        start: {
          line: 120,
          column: 25
        },
        end: {
          line: 120,
          column: 63
        }
      },
      "43": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 127,
          column: 9
        }
      },
      "44": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 126,
          column: 15
        }
      },
      "45": {
        start: {
          line: 129,
          column: 51
        },
        end: {
          line: 129,
          column: 92
        }
      },
      "46": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 137,
          column: 9
        }
      },
      "47": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 131,
          column: 72
        }
      },
      "48": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 136,
          column: 15
        }
      },
      "49": {
        start: {
          line: 139,
          column: 57
        },
        end: {
          line: 141,
          column: 22
        }
      },
      "50": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 144,
          column: 9
        }
      },
      "51": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 143,
          column: 71
        }
      },
      "52": {
        start: {
          line: 146,
          column: 32
        },
        end: {
          line: 146,
          column: 34
        }
      },
      "53": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 152,
          column: 9
        }
      },
      "54": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 151,
          column: 15
        }
      },
      "55": {
        start: {
          line: 149,
          column: 29
        },
        end: {
          line: 149,
          column: 90
        }
      },
      "56": {
        start: {
          line: 150,
          column: 16
        },
        end: {
          line: 150,
          column: 73
        }
      },
      "57": {
        start: {
          line: 153,
          column: 28
        },
        end: {
          line: 153,
          column: 38
        }
      },
      "58": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 166,
          column: 11
        }
      },
      "59": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 168,
          column: 64
        }
      },
      "60": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 173,
          column: 11
        }
      },
      "61": {
        start: {
          line: 179,
          column: 28
        },
        end: {
          line: 179,
          column: 30
        }
      },
      "62": {
        start: {
          line: 180,
          column: 4
        },
        end: {
          line: 182,
          column: 5
        }
      },
      "63": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 181,
          column: 31
        }
      },
      "64": {
        start: {
          line: 183,
          column: 24
        },
        end: {
          line: 183,
          column: 47
        }
      },
      "65": {
        start: {
          line: 184,
          column: 28
        },
        end: {
          line: 184,
          column: 57
        }
      },
      "66": {
        start: {
          line: 186,
          column: 4
        },
        end: {
          line: 193,
          column: 5
        }
      },
      "67": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 192,
          column: 11
        }
      },
      "68": {
        start: {
          line: 195,
          column: 4
        },
        end: {
          line: 202,
          column: 5
        }
      },
      "69": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 201,
          column: 11
        }
      },
      "70": {
        start: {
          line: 204,
          column: 4
        },
        end: {
          line: 211,
          column: 5
        }
      },
      "71": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 210,
          column: 11
        }
      },
      "72": {
        start: {
          line: 212,
          column: 4
        },
        end: {
          line: 212,
          column: 27
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "POST",
        decl: {
          start: {
            line: 27,
            column: 15
          },
          end: {
            line: 27,
            column: 19
          }
        },
        loc: {
          start: {
            line: 27,
            column: 29
          },
          end: {
            line: 108,
            column: 1
          }
        },
        line: 27
      },
      "5": {
        name: "GET",
        decl: {
          start: {
            line: 109,
            column: 15
          },
          end: {
            line: 109,
            column: 18
          }
        },
        loc: {
          start: {
            line: 109,
            column: 28
          },
          end: {
            line: 175,
            column: 1
          }
        },
        line: 109
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 148,
            column: 33
          },
          end: {
            line: 148,
            column: 34
          }
        },
        loc: {
          start: {
            line: 148,
            column: 42
          },
          end: {
            line: 151,
            column: 13
          }
        },
        line: 148
      },
      "7": {
        name: "generateCleanupRecommendations",
        decl: {
          start: {
            line: 178,
            column: 13
          },
          end: {
            line: 178,
            column: 43
          }
        },
        loc: {
          start: {
            line: 178,
            column: 51
          },
          end: {
            line: 213,
            column: 1
          }
        },
        line: 178
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "1": {
        loc: {
          start: {
            line: 39,
            column: 36
          },
          end: {
            line: 39,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 36
          },
          end: {
            line: 39,
            column: 60
          }
        }, {
          start: {
            line: 39,
            column: 64
          },
          end: {
            line: 39,
            column: 68
          }
        }],
        line: 39
      },
      "2": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "3": {
        loc: {
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 42,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 42,
            column: 26
          }
        }, {
          start: {
            line: 42,
            column: 30
          },
          end: {
            line: 42,
            column: 46
          }
        }],
        line: 42
      },
      "4": {
        loc: {
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "5": {
        loc: {
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "6": {
        loc: {
          start: {
            line: 64,
            column: 12
          },
          end: {
            line: 71,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 12
          },
          end: {
            line: 71,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "7": {
        loc: {
          start: {
            line: 75,
            column: 29
          },
          end: {
            line: 75,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 75,
            column: 29
          },
          end: {
            line: 75,
            column: 34
          }
        }, {
          start: {
            line: 75,
            column: 38
          },
          end: {
            line: 75,
            column: 39
          }
        }],
        line: 75
      },
      "8": {
        loc: {
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 91,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 91,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 84
      },
      "9": {
        loc: {
          start: {
            line: 95,
            column: 21
          },
          end: {
            line: 95,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 95,
            column: 21
          },
          end: {
            line: 95,
            column: 42
          }
        }, {
          start: {
            line: 95,
            column: 46
          },
          end: {
            line: 95,
            column: 47
          }
        }],
        line: 95
      },
      "10": {
        loc: {
          start: {
            line: 96,
            column: 23
          },
          end: {
            line: 96,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 96,
            column: 23
          },
          end: {
            line: 96,
            column: 41
          }
        }, {
          start: {
            line: 96,
            column: 45
          },
          end: {
            line: 96,
            column: 54
          }
        }],
        line: 96
      },
      "11": {
        loc: {
          start: {
            line: 113,
            column: 8
          },
          end: {
            line: 119,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 8
          },
          end: {
            line: 119,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 113
      },
      "12": {
        loc: {
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      },
      "13": {
        loc: {
          start: {
            line: 130,
            column: 8
          },
          end: {
            line: 137,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 130,
            column: 8
          },
          end: {
            line: 137,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 130
      },
      "14": {
        loc: {
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 144,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 144,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "15": {
        loc: {
          start: {
            line: 147,
            column: 8
          },
          end: {
            line: 152,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 147,
            column: 8
          },
          end: {
            line: 152,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 147
      },
      "16": {
        loc: {
          start: {
            line: 150,
            column: 41
          },
          end: {
            line: 150,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 150,
            column: 41
          },
          end: {
            line: 150,
            column: 62
          }
        }, {
          start: {
            line: 150,
            column: 66
          },
          end: {
            line: 150,
            column: 67
          }
        }],
        line: 150
      },
      "17": {
        loc: {
          start: {
            line: 157,
            column: 29
          },
          end: {
            line: 157,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 157,
            column: 29
          },
          end: {
            line: 157,
            column: 54
          }
        }, {
          start: {
            line: 157,
            column: 58
          },
          end: {
            line: 157,
            column: 59
          }
        }],
        line: 157
      },
      "18": {
        loc: {
          start: {
            line: 158,
            column: 27
          },
          end: {
            line: 158,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 158,
            column: 27
          },
          end: {
            line: 158,
            column: 50
          }
        }, {
          start: {
            line: 158,
            column: 54
          },
          end: {
            line: 158,
            column: 63
          }
        }],
        line: 158
      },
      "19": {
        loc: {
          start: {
            line: 159,
            column: 33
          },
          end: {
            line: 159,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 159,
            column: 33
          },
          end: {
            line: 159,
            column: 64
          }
        }, {
          start: {
            line: 159,
            column: 68
          },
          end: {
            line: 159,
            column: 69
          }
        }],
        line: 159
      },
      "20": {
        loc: {
          start: {
            line: 162,
            column: 34
          },
          end: {
            line: 162,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 162,
            column: 34
          },
          end: {
            line: 162,
            column: 64
          }
        }, {
          start: {
            line: 162,
            column: 68
          },
          end: {
            line: 162,
            column: 69
          }
        }],
        line: 162
      },
      "21": {
        loc: {
          start: {
            line: 180,
            column: 4
          },
          end: {
            line: 182,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 180,
            column: 4
          },
          end: {
            line: 182,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 180
      },
      "22": {
        loc: {
          start: {
            line: 183,
            column: 24
          },
          end: {
            line: 183,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 183,
            column: 24
          },
          end: {
            line: 183,
            column: 42
          }
        }, {
          start: {
            line: 183,
            column: 46
          },
          end: {
            line: 183,
            column: 47
          }
        }],
        line: 183
      },
      "23": {
        loc: {
          start: {
            line: 184,
            column: 28
          },
          end: {
            line: 184,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 184,
            column: 28
          },
          end: {
            line: 184,
            column: 52
          }
        }, {
          start: {
            line: 184,
            column: 56
          },
          end: {
            line: 184,
            column: 57
          }
        }],
        line: 184
      },
      "24": {
        loc: {
          start: {
            line: 186,
            column: 4
          },
          end: {
            line: 193,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 186,
            column: 4
          },
          end: {
            line: 193,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 186
      },
      "25": {
        loc: {
          start: {
            line: 195,
            column: 4
          },
          end: {
            line: 202,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 195,
            column: 4
          },
          end: {
            line: 202,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 195
      },
      "26": {
        loc: {
          start: {
            line: 204,
            column: 4
          },
          end: {
            line: 211,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 204,
            column: 4
          },
          end: {
            line: 211,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 204
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\analytics\\cleanup\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n/**\r\n * API PARA LIMPIEZA AUTOM\xC1TICA DE ANALYTICS - PINTEYA E-COMMERCE\r\n * Gestiona la limpieza autom\xE1tica de eventos antiguos y estad\xEDsticas\r\n */\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { getSupabaseClient } from '@/lib/integrations/supabase';\r\nimport { auth } from '@/lib/auth/config';\r\n\r\n/**\r\n * POST /api/admin/analytics/cleanup\r\n * Ejecutar limpieza de eventos antiguos (solo admins)\r\n */\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    // Verificar autenticaci\xF3n de admin\r\n    const session = await auth();\r\n    if (!session?.user) {\r\n      return NextResponse.json(\r\n        { error: 'No autorizado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    const { searchParams } = new URL(request.url);\r\n    const daysToKeep = parseInt(searchParams.get('days') || '30');\r\n    const dryRun = searchParams.get('dryRun') === 'true';\r\n\r\n    // Validar par\xE1metros\r\n    if (daysToKeep < 1 || daysToKeep > 365) {\r\n      return NextResponse.json(\r\n        { error: 'D\xEDas a mantener debe estar entre 1 y 365' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    const supabase = getSupabaseClient(true); // Usar cliente admin\r\n    if (!supabase) {\r\n      return NextResponse.json(\r\n        { error: 'Servicio administrativo no disponible' },\r\n        { status: 503 }\r\n      );\r\n    }\r\n\r\n    if (dryRun) {\r\n      // Simular limpieza - solo contar registros\r\n      const cutoffTimestamp = Math.floor(Date.now() / 1000) - (daysToKeep * 24 * 60 * 60);\r\n      \r\n      const { count, error } = await supabase\r\n        .from('analytics_events_optimized')\r\n        .select('*', { count: 'exact', head: true })\r\n        .lt('created_at', cutoffTimestamp);\r\n\r\n      if (error) {\r\n        console.error('Error en dry run de limpieza:', error);\r\n        return NextResponse.json(\r\n          { error: 'Error en simulaci\xF3n de limpieza' },\r\n          { status: 500 }\r\n        );\r\n      }\r\n\r\n      return NextResponse.json({\r\n        success: true,\r\n        dryRun: true,\r\n        wouldDelete: count || 0,\r\n        daysToKeep,\r\n        cutoffDate: new Date(cutoffTimestamp * 1000).toISOString()\r\n      });\r\n    }\r\n\r\n    // Ejecutar limpieza real\r\n    const { data, error } = await supabase.rpc('cleanup_old_analytics_events', {\r\n      days_to_keep: daysToKeep\r\n    });\r\n\r\n    if (error) {\r\n      console.error('Error ejecutando limpieza:', error);\r\n      return NextResponse.json(\r\n        { error: 'Error ejecutando limpieza autom\xE1tica' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    const result = data?.[0];\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      deleted: result?.deleted_count || 0,\r\n      sizeFreed: result?.size_freed || '0 bytes',\r\n      cleanupDate: result?.cleanup_date,\r\n      daysToKeep\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Error en API de limpieza:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * GET /api/admin/analytics/cleanup\r\n * Obtener estad\xEDsticas de analytics y limpieza\r\n */\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    // Verificar autenticaci\xF3n de admin\r\n    const session = await auth();\r\n    if (!session?.user) {\r\n      return NextResponse.json(\r\n        { error: 'No autorizado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    const supabase = getSupabaseClient(true);\r\n    if (!supabase) {\r\n      return NextResponse.json(\r\n        { error: 'Servicio administrativo no disponible' },\r\n        { status: 503 }\r\n      );\r\n    }\r\n\r\n    // Obtener estad\xEDsticas generales\r\n    const { data: stats, error: statsError } = await supabase.rpc('get_analytics_stats');\r\n\r\n    if (statsError) {\r\n      console.error('Error obteniendo estad\xEDsticas:', statsError);\r\n      return NextResponse.json(\r\n        { error: 'Error obteniendo estad\xEDsticas' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Obtener distribuci\xF3n por d\xEDas\r\n    const { data: distribution, error: distError } = await supabase\r\n      .from('analytics_events_optimized')\r\n      .select('created_at')\r\n      .order('created_at', { ascending: false })\r\n      .limit(1000);\r\n\r\n    if (distError) {\r\n      console.error('Error obteniendo distribuci\xF3n:', distError);\r\n    }\r\n\r\n    // Calcular distribuci\xF3n por d\xEDas\r\n    const dayDistribution: Record<string, number> = {};\r\n    if (distribution) {\r\n      distribution.forEach(event => {\r\n        const date = new Date(event.created_at * 1000).toISOString().split('T')[0];\r\n        dayDistribution[date] = (dayDistribution[date] || 0) + 1;\r\n      });\r\n    }\r\n\r\n    const statsResult = stats?.[0];\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      stats: {\r\n        totalEvents: statsResult?.total_events || 0,\r\n        tableSize: statsResult?.table_size || '0 bytes',\r\n        avgEventsPerDay: statsResult?.avg_events_per_day || 0,\r\n        oldestEvent: statsResult?.oldest_event,\r\n        newestEvent: statsResult?.newest_event,\r\n        compressionRatio: statsResult?.compression_ratio || 0,\r\n      },\r\n      distribution: dayDistribution,\r\n      recommendations: generateCleanupRecommendations(statsResult)\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Error en GET analytics cleanup:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Generar recomendaciones de limpieza\r\n */\r\nfunction generateCleanupRecommendations(stats: any) {\r\n  const recommendations = [];\r\n  \r\n  if (!stats) {return recommendations;}\r\n\r\n  const totalEvents = stats.total_events || 0;\r\n  const avgEventsPerDay = stats.avg_events_per_day || 0;\r\n\r\n  // Recomendaci\xF3n basada en volumen\r\n  if (totalEvents > 10000) {\r\n    recommendations.push({\r\n      type: 'warning',\r\n      message: 'Alto volumen de eventos detectado',\r\n      action: 'Considerar limpieza de eventos mayores a 30 d\xEDas',\r\n      priority: 'high'\r\n    });\r\n  }\r\n\r\n  // Recomendaci\xF3n basada en crecimiento\r\n  if (avgEventsPerDay > 100) {\r\n    recommendations.push({\r\n      type: 'info',\r\n      message: 'Crecimiento r\xE1pido de eventos',\r\n      action: 'Configurar limpieza autom\xE1tica semanal',\r\n      priority: 'medium'\r\n    });\r\n  }\r\n\r\n  // Recomendaci\xF3n de compresi\xF3n\r\n  if (stats.compression_ratio < 200) {\r\n    recommendations.push({\r\n      type: 'success',\r\n      message: 'Excelente ratio de compresi\xF3n',\r\n      action: 'Sistema optimizado funcionando correctamente',\r\n      priority: 'low'\r\n    });\r\n  }\r\n\r\n  return recommendations;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "POST", "runtime", "request", "session", "auth", "user", "NextResponse", "json", "error", "status", "searchParams", "URL", "url", "daysToKeep", "parseInt", "get", "dryRun", "supabase", "getSupabaseClient", "cutoffTimestamp", "Math", "floor", "Date", "now", "count", "from", "select", "head", "lt", "console", "success", "wouldDelete", "cutoffDate", "toISOString", "data", "rpc", "days_to_keep", "result", "deleted", "deleted_count", "sizeFreed", "size_freed", "cleanupDate", "cleanup_date", "stats", "statsError", "distribution", "distError", "order", "ascending", "limit", "dayDistribution", "forEach", "event", "date", "created_at", "split", "statsResult", "totalEvents", "total_events", "tableSize", "table_size", "avgEventsPerDay", "avg_events_per_day", "oldestEvent", "oldest_event", "newestEvent", "newest_event", "compressionRatio", "compression_ratio", "recommendations", "generateCleanupRecommendations", "push", "type", "message", "action", "priority"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6aff36c8af8b344a8bc372765f47f231ee827337"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_78rrlaw26 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_78rrlaw26();
cov_78rrlaw26().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_78rrlaw26().f[0]++;
  cov_78rrlaw26().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_78rrlaw26().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_78rrlaw26().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_78rrlaw26().f[1]++;
    cov_78rrlaw26().s[4]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_78rrlaw26().f[2]++;
    cov_78rrlaw26().s[5]++;
    return POST;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_78rrlaw26().f[3]++;
    cov_78rrlaw26().s[6]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_78rrlaw26().s[7]++, require("next/server"));
const _supabase =
/* istanbul ignore next */
(cov_78rrlaw26().s[8]++, require("../../../../../lib/integrations/supabase"));
const _config =
/* istanbul ignore next */
(cov_78rrlaw26().s[9]++, require("../../../../../lib/auth/config"));
const runtime =
/* istanbul ignore next */
(cov_78rrlaw26().s[10]++, 'nodejs');
async function POST(request) {
  /* istanbul ignore next */
  cov_78rrlaw26().f[4]++;
  cov_78rrlaw26().s[11]++;
  try {
    // Verificar autenticaciÃ³n de admin
    const session =
    /* istanbul ignore next */
    (cov_78rrlaw26().s[12]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_78rrlaw26().s[13]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_78rrlaw26().b[0][0]++;
      cov_78rrlaw26().s[14]++;
      return _server.NextResponse.json({
        error: 'No autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_78rrlaw26().b[0][1]++;
    }
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_78rrlaw26().s[15]++, new URL(request.url));
    const daysToKeep =
    /* istanbul ignore next */
    (cov_78rrlaw26().s[16]++, parseInt(
    /* istanbul ignore next */
    (cov_78rrlaw26().b[1][0]++, searchParams.get('days')) ||
    /* istanbul ignore next */
    (cov_78rrlaw26().b[1][1]++, '30')));
    const dryRun =
    /* istanbul ignore next */
    (cov_78rrlaw26().s[17]++, searchParams.get('dryRun') === 'true');
    // Validar parÃ¡metros
    /* istanbul ignore next */
    cov_78rrlaw26().s[18]++;
    if (
    /* istanbul ignore next */
    (cov_78rrlaw26().b[3][0]++, daysToKeep < 1) ||
    /* istanbul ignore next */
    (cov_78rrlaw26().b[3][1]++, daysToKeep > 365)) {
      /* istanbul ignore next */
      cov_78rrlaw26().b[2][0]++;
      cov_78rrlaw26().s[19]++;
      return _server.NextResponse.json({
        error: 'DÃ­as a mantener debe estar entre 1 y 365'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_78rrlaw26().b[2][1]++;
    }
    const supabase =
    /* istanbul ignore next */
    (cov_78rrlaw26().s[20]++, (0, _supabase.getSupabaseClient)(true)); // Usar cliente admin
    /* istanbul ignore next */
    cov_78rrlaw26().s[21]++;
    if (!supabase) {
      /* istanbul ignore next */
      cov_78rrlaw26().b[4][0]++;
      cov_78rrlaw26().s[22]++;
      return _server.NextResponse.json({
        error: 'Servicio administrativo no disponible'
      }, {
        status: 503
      });
    } else
    /* istanbul ignore next */
    {
      cov_78rrlaw26().b[4][1]++;
    }
    cov_78rrlaw26().s[23]++;
    if (dryRun) {
      /* istanbul ignore next */
      cov_78rrlaw26().b[5][0]++;
      // Simular limpieza - solo contar registros
      const cutoffTimestamp =
      /* istanbul ignore next */
      (cov_78rrlaw26().s[24]++, Math.floor(Date.now() / 1000) - daysToKeep * 24 * 60 * 60);
      const {
        count,
        error
      } =
      /* istanbul ignore next */
      (cov_78rrlaw26().s[25]++, await supabase.from('analytics_events_optimized').select('*', {
        count: 'exact',
        head: true
      }).lt('created_at', cutoffTimestamp));
      /* istanbul ignore next */
      cov_78rrlaw26().s[26]++;
      if (error) {
        /* istanbul ignore next */
        cov_78rrlaw26().b[6][0]++;
        cov_78rrlaw26().s[27]++;
        console.error('Error en dry run de limpieza:', error);
        /* istanbul ignore next */
        cov_78rrlaw26().s[28]++;
        return _server.NextResponse.json({
          error: 'Error en simulaciÃ³n de limpieza'
        }, {
          status: 500
        });
      } else
      /* istanbul ignore next */
      {
        cov_78rrlaw26().b[6][1]++;
      }
      cov_78rrlaw26().s[29]++;
      return _server.NextResponse.json({
        success: true,
        dryRun: true,
        wouldDelete:
        /* istanbul ignore next */
        (cov_78rrlaw26().b[7][0]++, count) ||
        /* istanbul ignore next */
        (cov_78rrlaw26().b[7][1]++, 0),
        daysToKeep,
        cutoffDate: new Date(cutoffTimestamp * 1000).toISOString()
      });
    } else
    /* istanbul ignore next */
    {
      cov_78rrlaw26().b[5][1]++;
    }
    // Ejecutar limpieza real
    const {
      data,
      error
    } =
    /* istanbul ignore next */
    (cov_78rrlaw26().s[30]++, await supabase.rpc('cleanup_old_analytics_events', {
      days_to_keep: daysToKeep
    }));
    /* istanbul ignore next */
    cov_78rrlaw26().s[31]++;
    if (error) {
      /* istanbul ignore next */
      cov_78rrlaw26().b[8][0]++;
      cov_78rrlaw26().s[32]++;
      console.error('Error ejecutando limpieza:', error);
      /* istanbul ignore next */
      cov_78rrlaw26().s[33]++;
      return _server.NextResponse.json({
        error: 'Error ejecutando limpieza automÃ¡tica'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_78rrlaw26().b[8][1]++;
    }
    const result =
    /* istanbul ignore next */
    (cov_78rrlaw26().s[34]++, data?.[0]);
    /* istanbul ignore next */
    cov_78rrlaw26().s[35]++;
    return _server.NextResponse.json({
      success: true,
      deleted:
      /* istanbul ignore next */
      (cov_78rrlaw26().b[9][0]++, result?.deleted_count) ||
      /* istanbul ignore next */
      (cov_78rrlaw26().b[9][1]++, 0),
      sizeFreed:
      /* istanbul ignore next */
      (cov_78rrlaw26().b[10][0]++, result?.size_freed) ||
      /* istanbul ignore next */
      (cov_78rrlaw26().b[10][1]++, '0 bytes'),
      cleanupDate: result?.cleanup_date,
      daysToKeep
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_78rrlaw26().s[36]++;
    console.error('Error en API de limpieza:', error);
    /* istanbul ignore next */
    cov_78rrlaw26().s[37]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
async function GET(request) {
  /* istanbul ignore next */
  cov_78rrlaw26().f[5]++;
  cov_78rrlaw26().s[38]++;
  try {
    // Verificar autenticaciÃ³n de admin
    const session =
    /* istanbul ignore next */
    (cov_78rrlaw26().s[39]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_78rrlaw26().s[40]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_78rrlaw26().b[11][0]++;
      cov_78rrlaw26().s[41]++;
      return _server.NextResponse.json({
        error: 'No autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_78rrlaw26().b[11][1]++;
    }
    const supabase =
    /* istanbul ignore next */
    (cov_78rrlaw26().s[42]++, (0, _supabase.getSupabaseClient)(true));
    /* istanbul ignore next */
    cov_78rrlaw26().s[43]++;
    if (!supabase) {
      /* istanbul ignore next */
      cov_78rrlaw26().b[12][0]++;
      cov_78rrlaw26().s[44]++;
      return _server.NextResponse.json({
        error: 'Servicio administrativo no disponible'
      }, {
        status: 503
      });
    } else
    /* istanbul ignore next */
    {
      cov_78rrlaw26().b[12][1]++;
    }
    // Obtener estadÃ­sticas generales
    const {
      data: stats,
      error: statsError
    } =
    /* istanbul ignore next */
    (cov_78rrlaw26().s[45]++, await supabase.rpc('get_analytics_stats'));
    /* istanbul ignore next */
    cov_78rrlaw26().s[46]++;
    if (statsError) {
      /* istanbul ignore next */
      cov_78rrlaw26().b[13][0]++;
      cov_78rrlaw26().s[47]++;
      console.error('Error obteniendo estadÃ­sticas:', statsError);
      /* istanbul ignore next */
      cov_78rrlaw26().s[48]++;
      return _server.NextResponse.json({
        error: 'Error obteniendo estadÃ­sticas'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_78rrlaw26().b[13][1]++;
    }
    // Obtener distribuciÃ³n por dÃ­as
    const {
      data: distribution,
      error: distError
    } =
    /* istanbul ignore next */
    (cov_78rrlaw26().s[49]++, await supabase.from('analytics_events_optimized').select('created_at').order('created_at', {
      ascending: false
    }).limit(1000));
    /* istanbul ignore next */
    cov_78rrlaw26().s[50]++;
    if (distError) {
      /* istanbul ignore next */
      cov_78rrlaw26().b[14][0]++;
      cov_78rrlaw26().s[51]++;
      console.error('Error obteniendo distribuciÃ³n:', distError);
    } else
    /* istanbul ignore next */
    {
      cov_78rrlaw26().b[14][1]++;
    }
    // Calcular distribuciÃ³n por dÃ­as
    const dayDistribution =
    /* istanbul ignore next */
    (cov_78rrlaw26().s[52]++, {});
    /* istanbul ignore next */
    cov_78rrlaw26().s[53]++;
    if (distribution) {
      /* istanbul ignore next */
      cov_78rrlaw26().b[15][0]++;
      cov_78rrlaw26().s[54]++;
      distribution.forEach(event => {
        /* istanbul ignore next */
        cov_78rrlaw26().f[6]++;
        const date =
        /* istanbul ignore next */
        (cov_78rrlaw26().s[55]++, new Date(event.created_at * 1000).toISOString().split('T')[0]);
        /* istanbul ignore next */
        cov_78rrlaw26().s[56]++;
        dayDistribution[date] = (
        /* istanbul ignore next */
        (cov_78rrlaw26().b[16][0]++, dayDistribution[date]) ||
        /* istanbul ignore next */
        (cov_78rrlaw26().b[16][1]++, 0)) + 1;
      });
    } else
    /* istanbul ignore next */
    {
      cov_78rrlaw26().b[15][1]++;
    }
    const statsResult =
    /* istanbul ignore next */
    (cov_78rrlaw26().s[57]++, stats?.[0]);
    /* istanbul ignore next */
    cov_78rrlaw26().s[58]++;
    return _server.NextResponse.json({
      success: true,
      stats: {
        totalEvents:
        /* istanbul ignore next */
        (cov_78rrlaw26().b[17][0]++, statsResult?.total_events) ||
        /* istanbul ignore next */
        (cov_78rrlaw26().b[17][1]++, 0),
        tableSize:
        /* istanbul ignore next */
        (cov_78rrlaw26().b[18][0]++, statsResult?.table_size) ||
        /* istanbul ignore next */
        (cov_78rrlaw26().b[18][1]++, '0 bytes'),
        avgEventsPerDay:
        /* istanbul ignore next */
        (cov_78rrlaw26().b[19][0]++, statsResult?.avg_events_per_day) ||
        /* istanbul ignore next */
        (cov_78rrlaw26().b[19][1]++, 0),
        oldestEvent: statsResult?.oldest_event,
        newestEvent: statsResult?.newest_event,
        compressionRatio:
        /* istanbul ignore next */
        (cov_78rrlaw26().b[20][0]++, statsResult?.compression_ratio) ||
        /* istanbul ignore next */
        (cov_78rrlaw26().b[20][1]++, 0)
      },
      distribution: dayDistribution,
      recommendations: generateCleanupRecommendations(statsResult)
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_78rrlaw26().s[59]++;
    console.error('Error en GET analytics cleanup:', error);
    /* istanbul ignore next */
    cov_78rrlaw26().s[60]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
/**
 * Generar recomendaciones de limpieza
 */
function generateCleanupRecommendations(stats) {
  /* istanbul ignore next */
  cov_78rrlaw26().f[7]++;
  const recommendations =
  /* istanbul ignore next */
  (cov_78rrlaw26().s[61]++, []);
  /* istanbul ignore next */
  cov_78rrlaw26().s[62]++;
  if (!stats) {
    /* istanbul ignore next */
    cov_78rrlaw26().b[21][0]++;
    cov_78rrlaw26().s[63]++;
    return recommendations;
  } else
  /* istanbul ignore next */
  {
    cov_78rrlaw26().b[21][1]++;
  }
  const totalEvents =
  /* istanbul ignore next */
  (cov_78rrlaw26().s[64]++,
  /* istanbul ignore next */
  (cov_78rrlaw26().b[22][0]++, stats.total_events) ||
  /* istanbul ignore next */
  (cov_78rrlaw26().b[22][1]++, 0));
  const avgEventsPerDay =
  /* istanbul ignore next */
  (cov_78rrlaw26().s[65]++,
  /* istanbul ignore next */
  (cov_78rrlaw26().b[23][0]++, stats.avg_events_per_day) ||
  /* istanbul ignore next */
  (cov_78rrlaw26().b[23][1]++, 0));
  // RecomendaciÃ³n basada en volumen
  /* istanbul ignore next */
  cov_78rrlaw26().s[66]++;
  if (totalEvents > 10000) {
    /* istanbul ignore next */
    cov_78rrlaw26().b[24][0]++;
    cov_78rrlaw26().s[67]++;
    recommendations.push({
      type: 'warning',
      message: 'Alto volumen de eventos detectado',
      action: 'Considerar limpieza de eventos mayores a 30 dÃ­as',
      priority: 'high'
    });
  } else
  /* istanbul ignore next */
  {
    cov_78rrlaw26().b[24][1]++;
  }
  // RecomendaciÃ³n basada en crecimiento
  cov_78rrlaw26().s[68]++;
  if (avgEventsPerDay > 100) {
    /* istanbul ignore next */
    cov_78rrlaw26().b[25][0]++;
    cov_78rrlaw26().s[69]++;
    recommendations.push({
      type: 'info',
      message: 'Crecimiento rÃ¡pido de eventos',
      action: 'Configurar limpieza automÃ¡tica semanal',
      priority: 'medium'
    });
  } else
  /* istanbul ignore next */
  {
    cov_78rrlaw26().b[25][1]++;
  }
  // RecomendaciÃ³n de compresiÃ³n
  cov_78rrlaw26().s[70]++;
  if (stats.compression_ratio < 200) {
    /* istanbul ignore next */
    cov_78rrlaw26().b[26][0]++;
    cov_78rrlaw26().s[71]++;
    recommendations.push({
      type: 'success',
      message: 'Excelente ratio de compresiÃ³n',
      action: 'Sistema optimizado funcionando correctamente',
      priority: 'low'
    });
  } else
  /* istanbul ignore next */
  {
    cov_78rrlaw26().b[26][1]++;
  }
  cov_78rrlaw26().s[72]++;
  return recommendations;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,