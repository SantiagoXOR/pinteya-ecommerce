951bc6707de934269500ac8f840121bd
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_2amo8feyhg() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\products\\unified\\route.ts";
  var hash = "a608f608460d89fbb3783b675147fbf1589427f3";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\products\\unified\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 20
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 23
        }
      },
      "7": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "8": {
        start: {
          line: 24,
          column: 13
        },
        end: {
          line: 24,
          column: 27
        }
      },
      "9": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 57
        }
      },
      "10": {
        start: {
          line: 26,
          column: 20
        },
        end: {
          line: 26,
          column: 52
        }
      },
      "11": {
        start: {
          line: 27,
          column: 19
        },
        end: {
          line: 27,
          column: 64
        }
      },
      "12": {
        start: {
          line: 28,
          column: 29
        },
        end: {
          line: 28,
          column: 85
        }
      },
      "13": {
        start: {
          line: 29,
          column: 28
        },
        end: {
          line: 29,
          column: 83
        }
      },
      "14": {
        start: {
          line: 30,
          column: 27
        },
        end: {
          line: 30,
          column: 81
        }
      },
      "15": {
        start: {
          line: 31,
          column: 16
        },
        end: {
          line: 31,
          column: 24
        }
      },
      "16": {
        start: {
          line: 33,
          column: 20
        },
        end: {
          line: 33,
          column: 56
        }
      },
      "17": {
        start: {
          line: 34,
          column: 27
        },
        end: {
          line: 34,
          column: 64
        }
      },
      "18": {
        start: {
          line: 35,
          column: 22
        },
        end: {
          line: 40,
          column: 2
        }
      },
      "19": {
        start: {
          line: 42,
          column: 36
        },
        end: {
          line: 67,
          column: 2
        }
      },
      "20": {
        start: {
          line: 68,
          column: 35
        },
        end: {
          line: 83,
          column: 2
        }
      },
      "21": {
        start: {
          line: 86,
          column: 4
        },
        end: {
          line: 141,
          column: 5
        }
      },
      "22": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 82
        }
      },
      "23": {
        start: {
          line: 90,
          column: 28
        },
        end: {
          line: 90,
          column: 53
        }
      },
      "24": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 97,
          column: 13
        }
      },
      "25": {
        start: {
          line: 92,
          column: 16
        },
        end: {
          line: 96,
          column: 18
        }
      },
      "26": {
        start: {
          line: 98,
          column: 28
        },
        end: {
          line: 98,
          column: 72
        }
      },
      "27": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 105,
          column: 13
        }
      },
      "28": {
        start: {
          line: 100,
          column: 16
        },
        end: {
          line: 104,
          column: 18
        }
      },
      "29": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 110,
          column: 14
        }
      },
      "30": {
        start: {
          line: 112,
          column: 31
        },
        end: {
          line: 114,
          column: 14
        }
      },
      "31": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 121,
          column: 13
        }
      },
      "32": {
        start: {
          line: 116,
          column: 16
        },
        end: {
          line: 120,
          column: 18
        }
      },
      "33": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 126,
          column: 14
        }
      },
      "34": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 128,
          column: 94
        }
      },
      "35": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 134,
          column: 14
        }
      },
      "36": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 140,
          column: 14
        }
      },
      "37": {
        start: {
          line: 144,
          column: 4
        },
        end: {
          line: 246,
          column: 5
        }
      },
      "38": {
        start: {
          line: 145,
          column: 20
        },
        end: {
          line: 145,
          column: 40
        }
      },
      "39": {
        start: {
          line: 146,
          column: 26
        },
        end: {
          line: 146,
          column: 72
        }
      },
      "40": {
        start: {
          line: 148,
          column: 23
        },
        end: {
          line: 148,
          column: 67
        }
      },
      "41": {
        start: {
          line: 149,
          column: 118
        },
        end: {
          line: 149,
          column: 124
        }
      },
      "42": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 150,
          column: 80
        }
      },
      "43": {
        start: {
          line: 152,
          column: 27
        },
        end: {
          line: 152,
          column: 72
        }
      },
      "44": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 161,
          column: 9
        }
      },
      "45": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 160,
          column: 15
        }
      },
      "46": {
        start: {
          line: 162,
          column: 25
        },
        end: {
          line: 162,
          column: 61
        }
      },
      "47": {
        start: {
          line: 163,
          column: 23
        },
        end: {
          line: 163,
          column: 41
        }
      },
      "48": {
        start: {
          line: 165,
          column: 20
        },
        end: {
          line: 182,
          column: 10
        }
      },
      "49": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 186,
          column: 9
        }
      },
      "50": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 185,
          column: 55
        }
      },
      "51": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 189,
          column: 9
        }
      },
      "52": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 188,
          column: 57
        }
      },
      "53": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 192,
          column: 9
        }
      },
      "54": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 191,
          column: 53
        }
      },
      "55": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 195,
          column: 9
        }
      },
      "56": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 194,
          column: 50
        }
      },
      "57": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 198,
          column: 9
        }
      },
      "58": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 197,
          column: 50
        }
      },
      "59": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 202,
          column: 45
        }
      },
      "60": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 209,
          column: 9
        }
      },
      "61": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 206,
          column: 116
        }
      },
      "62": {
        start: {
          line: 206,
          column: 103
        },
        end: {
          line: 206,
          column: 114
        }
      },
      "63": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 208,
          column: 33
        }
      },
      "64": {
        start: {
          line: 210,
          column: 49
        },
        end: {
          line: 210,
          column: 55
        }
      },
      "65": {
        start: {
          line: 211,
          column: 8
        },
        end: {
          line: 220,
          column: 9
        }
      },
      "66": {
        start: {
          line: 212,
          column: 12
        },
        end: {
          line: 212,
          column: 63
        }
      },
      "67": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 219,
          column: 15
        }
      },
      "68": {
        start: {
          line: 221,
          column: 27
        },
        end: {
          line: 221,
          column: 58
        }
      },
      "69": {
        start: {
          line: 222,
          column: 8
        },
        end: {
          line: 222,
          column: 83
        }
      },
      "70": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 237,
          column: 11
        }
      },
      "71": {
        start: {
          line: 239,
          column: 8
        },
        end: {
          line: 239,
          column: 62
        }
      },
      "72": {
        start: {
          line: 240,
          column: 8
        },
        end: {
          line: 245,
          column: 11
        }
      },
      "73": {
        start: {
          line: 249,
          column: 4
        },
        end: {
          line: 299,
          column: 5
        }
      },
      "74": {
        start: {
          line: 250,
          column: 21
        },
        end: {
          line: 250,
          column: 41
        }
      },
      "75": {
        start: {
          line: 251,
          column: 23
        },
        end: {
          line: 251,
          column: 61
        }
      },
      "76": {
        start: {
          line: 252,
          column: 46
        },
        end: {
          line: 252,
          column: 52
        }
      },
      "77": {
        start: {
          line: 253,
          column: 8
        },
        end: {
          line: 253,
          column: 88
        }
      },
      "78": {
        start: {
          line: 255,
          column: 27
        },
        end: {
          line: 255,
          column: 74
        }
      },
      "79": {
        start: {
          line: 256,
          column: 8
        },
        end: {
          line: 264,
          column: 9
        }
      },
      "80": {
        start: {
          line: 257,
          column: 12
        },
        end: {
          line: 263,
          column: 15
        }
      },
      "81": {
        start: {
          line: 265,
          column: 25
        },
        end: {
          line: 265,
          column: 61
        }
      },
      "82": {
        start: {
          line: 267,
          column: 41
        },
        end: {
          line: 269,
          column: 28
        }
      },
      "83": {
        start: {
          line: 270,
          column: 8
        },
        end: {
          line: 279,
          column: 9
        }
      },
      "84": {
        start: {
          line: 271,
          column: 12
        },
        end: {
          line: 271,
          column: 70
        }
      },
      "85": {
        start: {
          line: 272,
          column: 12
        },
        end: {
          line: 278,
          column: 15
        }
      },
      "86": {
        start: {
          line: 280,
          column: 8
        },
        end: {
          line: 280,
          column: 82
        }
      },
      "87": {
        start: {
          line: 281,
          column: 8
        },
        end: {
          line: 290,
          column: 11
        }
      },
      "88": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 292,
          column: 69
        }
      },
      "89": {
        start: {
          line: 293,
          column: 8
        },
        end: {
          line: 298,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "unifiedAuth",
        decl: {
          start: {
            line: 85,
            column: 15
          },
          end: {
            line: 85,
            column: 26
          }
        },
        loc: {
          start: {
            line: 85,
            column: 50
          },
          end: {
            line: 142,
            column: 1
          }
        },
        line: 85
      },
      "5": {
        name: "GET",
        decl: {
          start: {
            line: 143,
            column: 15
          },
          end: {
            line: 143,
            column: 18
          }
        },
        loc: {
          start: {
            line: 143,
            column: 28
          },
          end: {
            line: 247,
            column: 1
          }
        },
        line: 143
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 206,
            column: 87
          },
          end: {
            line: 206,
            column: 88
          }
        },
        loc: {
          start: {
            line: 206,
            column: 103
          },
          end: {
            line: 206,
            column: 114
          }
        },
        line: 206
      },
      "7": {
        name: "POST",
        decl: {
          start: {
            line: 248,
            column: 15
          },
          end: {
            line: 248,
            column: 19
          }
        },
        loc: {
          start: {
            line: 248,
            column: 29
          },
          end: {
            line: 300,
            column: 1
          }
        },
        line: 248
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 86,
            column: 4
          },
          end: {
            line: 141,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 87,
            column: 8
          },
          end: {
            line: 88,
            column: 82
          }
        }, {
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 110,
            column: 14
          }
        }, {
          start: {
            line: 111,
            column: 8
          },
          end: {
            line: 126,
            column: 14
          }
        }, {
          start: {
            line: 127,
            column: 8
          },
          end: {
            line: 128,
            column: 94
          }
        }, {
          start: {
            line: 129,
            column: 8
          },
          end: {
            line: 134,
            column: 14
          }
        }, {
          start: {
            line: 135,
            column: 8
          },
          end: {
            line: 140,
            column: 14
          }
        }],
        line: 86
      },
      "1": {
        loc: {
          start: {
            line: 91,
            column: 12
          },
          end: {
            line: 97,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 12
          },
          end: {
            line: 97,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 91
      },
      "2": {
        loc: {
          start: {
            line: 99,
            column: 12
          },
          end: {
            line: 105,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 12
          },
          end: {
            line: 105,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      },
      "3": {
        loc: {
          start: {
            line: 115,
            column: 12
          },
          end: {
            line: 121,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 12
          },
          end: {
            line: 121,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 115
      },
      "4": {
        loc: {
          start: {
            line: 153,
            column: 8
          },
          end: {
            line: 161,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 153,
            column: 8
          },
          end: {
            line: 161,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 153
      },
      "5": {
        loc: {
          start: {
            line: 159,
            column: 24
          },
          end: {
            line: 159,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 159,
            column: 24
          },
          end: {
            line: 159,
            column: 41
          }
        }, {
          start: {
            line: 159,
            column: 45
          },
          end: {
            line: 159,
            column: 48
          }
        }],
        line: 159
      },
      "6": {
        loc: {
          start: {
            line: 162,
            column: 25
          },
          end: {
            line: 162,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 162,
            column: 25
          },
          end: {
            line: 162,
            column: 44
          }
        }, {
          start: {
            line: 162,
            column: 48
          },
          end: {
            line: 162,
            column: 61
          }
        }],
        line: 162
      },
      "7": {
        loc: {
          start: {
            line: 184,
            column: 8
          },
          end: {
            line: 186,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 184,
            column: 8
          },
          end: {
            line: 186,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 184
      },
      "8": {
        loc: {
          start: {
            line: 187,
            column: 8
          },
          end: {
            line: 189,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 187,
            column: 8
          },
          end: {
            line: 189,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 187
      },
      "9": {
        loc: {
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 192,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 192,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 190
      },
      "10": {
        loc: {
          start: {
            line: 193,
            column: 8
          },
          end: {
            line: 195,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 193,
            column: 8
          },
          end: {
            line: 195,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 193
      },
      "11": {
        loc: {
          start: {
            line: 196,
            column: 8
          },
          end: {
            line: 198,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 196,
            column: 8
          },
          end: {
            line: 198,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 196
      },
      "12": {
        loc: {
          start: {
            line: 205,
            column: 8
          },
          end: {
            line: 209,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 205,
            column: 8
          },
          end: {
            line: 209,
            column: 9
          }
        }, {
          start: {
            line: 207,
            column: 15
          },
          end: {
            line: 209,
            column: 9
          }
        }],
        line: 205
      },
      "13": {
        loc: {
          start: {
            line: 205,
            column: 12
          },
          end: {
            line: 205,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 205,
            column: 12
          },
          end: {
            line: 205,
            column: 31
          }
        }, {
          start: {
            line: 205,
            column: 35
          },
          end: {
            line: 205,
            column: 53
          }
        }],
        line: 205
      },
      "14": {
        loc: {
          start: {
            line: 211,
            column: 8
          },
          end: {
            line: 220,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 211,
            column: 8
          },
          end: {
            line: 220,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 211
      },
      "15": {
        loc: {
          start: {
            line: 221,
            column: 38
          },
          end: {
            line: 221,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 221,
            column: 38
          },
          end: {
            line: 221,
            column: 43
          }
        }, {
          start: {
            line: 221,
            column: 47
          },
          end: {
            line: 221,
            column: 48
          }
        }],
        line: 221
      },
      "16": {
        loc: {
          start: {
            line: 228,
            column: 23
          },
          end: {
            line: 228,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 228,
            column: 23
          },
          end: {
            line: 228,
            column: 28
          }
        }, {
          start: {
            line: 228,
            column: 32
          },
          end: {
            line: 228,
            column: 33
          }
        }],
        line: 228
      },
      "17": {
        loc: {
          start: {
            line: 256,
            column: 8
          },
          end: {
            line: 264,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 256,
            column: 8
          },
          end: {
            line: 264,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 256
      },
      "18": {
        loc: {
          start: {
            line: 262,
            column: 24
          },
          end: {
            line: 262,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 262,
            column: 24
          },
          end: {
            line: 262,
            column: 41
          }
        }, {
          start: {
            line: 262,
            column: 45
          },
          end: {
            line: 262,
            column: 48
          }
        }],
        line: 262
      },
      "19": {
        loc: {
          start: {
            line: 265,
            column: 25
          },
          end: {
            line: 265,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 265,
            column: 25
          },
          end: {
            line: 265,
            column: 44
          }
        }, {
          start: {
            line: 265,
            column: 48
          },
          end: {
            line: 265,
            column: 61
          }
        }],
        line: 265
      },
      "20": {
        loc: {
          start: {
            line: 270,
            column: 8
          },
          end: {
            line: 279,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 270,
            column: 8
          },
          end: {
            line: 279,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 270
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0, 0, 0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\products\\unified\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - API UNIFICADA DE PRODUCTOS ADMIN\r\n// Consolida todas las variantes: simple, direct, rls, secure, test\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { z } from 'zod';\r\nimport { auth } from '@/lib/auth/config';\r\nimport { createClient } from '@supabase/supabase-js';\r\nimport { checkCRUDPermissions } from '@/lib/auth/admin-auth';\r\nimport { requireAdminAuth } from '@/lib/auth/enterprise-auth-utils';\r\nimport { executeWithRLS } from '@/lib/auth/enterprise-rls-utils';\r\nimport { checkPermission } from '@/lib/auth/supabase-auth-utils';\r\n\r\n// Configuraci\xF3n de Supabase\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;\r\nconst supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY!;\r\n\r\nconst supabaseAdmin = createClient(supabaseUrl, supabaseServiceKey, {\r\n  auth: {\r\n    autoRefreshToken: false,\r\n    persistSession: false\r\n  }\r\n});\r\n\r\n// Schema de validaci\xF3n unificado\r\nconst UnifiedProductFiltersSchema = z.object({\r\n  page: z.coerce.number().int().min(1).default(1),\r\n  limit: z.coerce.number().int().min(1).max(100).default(20),\r\n  search: z.string().optional(),\r\n  category_id: z.string().uuid().optional(),\r\n  is_active: z.boolean().optional(),\r\n  price_min: z.coerce.number().min(0).optional(),\r\n  price_max: z.coerce.number().min(0).optional(),\r\n  sort_by: z.enum(['name', 'price', 'created_at', 'updated_at']).default('created_at'),\r\n  sort_order: z.enum(['asc', 'desc']).default('desc'),\r\n  auth_mode: z.enum(['simple', 'direct', 'rls', 'secure', 'test']).default('secure')\r\n});\r\n\r\nconst UnifiedProductCreateSchema = z.object({\r\n  name: z.string().min(1, 'Nombre es requerido'),\r\n  description: z.string().optional(),\r\n  price: z.number().min(0, 'Precio debe ser mayor a 0'),\r\n  stock: z.number().int().min(0).default(0),\r\n  category_id: z.string().uuid().optional(),\r\n  images: z.array(z.string().url()).optional(),\r\n  is_active: z.boolean().default(true),\r\n  auth_mode: z.enum(['simple', 'direct', 'rls', 'secure', 'test']).default('secure')\r\n});\r\n\r\n// Funci\xF3n de autenticaci\xF3n unificada\r\nasync function unifiedAuth(request: NextRequest, action: string, mode: string) {\r\n  switch (mode) {\r\n    case 'simple':\r\n      return await checkCRUDPermissions(action as any, 'products');\r\n    \r\n    case 'direct':\r\n      const session = await auth();\r\n      if (!session?.user) {\r\n        return { allowed: false, error: 'Autenticaci\xF3n requerida', status: 401 };\r\n      }\r\n      const isAdmin = session.user.email === 'santiago@xor.com.ar';\r\n      if (!isAdmin) {\r\n        return { allowed: false, error: 'Permisos de administrador requeridos', status: 403 };\r\n      }\r\n      return { allowed: true, user: session.user, supabase: supabaseAdmin };\r\n    \r\n    case 'rls':\r\n      const authResult = await requireAdminAuth(request, ['products_read']);\r\n      if (!authResult.success) {\r\n        return { allowed: false, error: authResult.error, status: authResult.status };\r\n      }\r\n      return { allowed: true, context: authResult.context, supabase: authResult.supabase };\r\n    \r\n    case 'secure':\r\n      return await checkPermission(request, 'products', action);\r\n    \r\n    case 'test':\r\n      // Modo test sin autenticaci\xF3n para debugging\r\n      return { allowed: true, supabase: supabaseAdmin };\r\n    \r\n    default:\r\n      return { allowed: false, error: 'Modo de autenticaci\xF3n no v\xE1lido', status: 400 };\r\n  }\r\n}\r\n\r\n/**\r\n * GET /api/admin/products/unified\r\n * API unificada para obtener productos con m\xFAltiples modos de autenticaci\xF3n\r\n */\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    const url = new URL(request.url);\r\n    const rawParams = Object.fromEntries(url.searchParams.entries());\r\n    \r\n    // Validar par\xE1metros\r\n    const params = UnifiedProductFiltersSchema.parse(rawParams);\r\n    const { auth_mode, page, limit, search, category_id, is_active, price_min, price_max, sort_by, sort_order } = params;\r\n    \r\n    console.log(`\uD83D\uDD0D Unified Products API: Mode ${auth_mode}, Page ${page}`);\r\n    \r\n    // Autenticaci\xF3n unificada\r\n    const authResult = await unifiedAuth(request, 'read', auth_mode);\r\n    \r\n    if (!authResult.allowed) {\r\n      return NextResponse.json(\r\n        { \r\n          error: authResult.error,\r\n          code: 'AUTH_FAILED',\r\n          mode: auth_mode\r\n        },\r\n        { status: authResult.status || 401 }\r\n      );\r\n    }\r\n    \r\n    const supabase = authResult.supabase || supabaseAdmin;\r\n    const offset = (page - 1) * limit;\r\n    \r\n    // Construir consulta\r\n    let query = supabase\r\n      .from('products')\r\n      .select(`\r\n        id,\r\n        name,\r\n        description,\r\n        price,\r\n        stock,\r\n        category_id,\r\n        images,\r\n        is_active,\r\n        created_at,\r\n        updated_at,\r\n        categories (\r\n          id,\r\n          name\r\n        )\r\n      `, { count: 'exact' });\r\n    \r\n    // Aplicar filtros\r\n    if (search) {\r\n      query = query.ilike('name', `%${search}%`);\r\n    }\r\n    if (category_id) {\r\n      query = query.eq('category_id', category_id);\r\n    }\r\n    if (is_active !== undefined) {\r\n      query = query.eq('is_active', is_active);\r\n    }\r\n    if (price_min !== undefined) {\r\n      query = query.gte('price', price_min);\r\n    }\r\n    if (price_max !== undefined) {\r\n      query = query.lte('price', price_max);\r\n    }\r\n    \r\n    // Aplicar ordenamiento y paginaci\xF3n\r\n    query = query\r\n      .order(sort_by, { ascending: sort_order === 'asc' })\r\n      .range(offset, offset + limit - 1);\r\n    \r\n    // Ejecutar consulta con RLS si es necesario\r\n    let result;\r\n    if (auth_mode === 'rls' && authResult.context) {\r\n      result = await executeWithRLS(\r\n        authResult.context,\r\n        async (client) => await query\r\n      );\r\n    } else {\r\n      result = await query;\r\n    }\r\n    \r\n    const { data: products, error, count } = result;\r\n    \r\n    if (error) {\r\n      console.error(`\u274C ${auth_mode} mode error:`, error);\r\n      return NextResponse.json(\r\n        { \r\n          error: 'Error al obtener productos',\r\n          details: error.message,\r\n          mode: auth_mode\r\n        },\r\n        { status: 500 }\r\n      );\r\n    }\r\n    \r\n    const totalPages = Math.ceil((count || 0) / limit);\r\n    \r\n    console.log(`\u2705 ${auth_mode} mode: ${products?.length} products retrieved`);\r\n    \r\n    return NextResponse.json({\r\n      data: products,\r\n      pagination: {\r\n        page,\r\n        limit,\r\n        total: count || 0,\r\n        totalPages,\r\n        hasNext: page < totalPages,\r\n        hasPrev: page > 1\r\n      },\r\n      meta: {\r\n        auth_mode,\r\n        timestamp: new Date().toISOString()\r\n      }\r\n    });\r\n    \r\n  } catch (error: any) {\r\n    console.error('\u274C Unified Products API error:', error);\r\n    return NextResponse.json(\r\n      { \r\n        error: 'Error interno del servidor',\r\n        details: error.message\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * POST /api/admin/products/unified\r\n * API unificada para crear productos\r\n */\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    const body = await request.json();\r\n    const params = UnifiedProductCreateSchema.parse(body);\r\n    const { auth_mode, ...productData } = params;\r\n    \r\n    console.log(`\uD83D\uDD27 Unified Products API: Creating product with ${auth_mode} mode`);\r\n    \r\n    // Autenticaci\xF3n unificada\r\n    const authResult = await unifiedAuth(request, 'create', auth_mode);\r\n    \r\n    if (!authResult.allowed) {\r\n      return NextResponse.json(\r\n        { \r\n          error: authResult.error,\r\n          code: 'AUTH_FAILED',\r\n          mode: auth_mode\r\n        },\r\n        { status: authResult.status || 401 }\r\n      );\r\n    }\r\n    \r\n    const supabase = authResult.supabase || supabaseAdmin;\r\n    \r\n    // Crear producto\r\n    const { data: product, error } = await supabase\r\n      .from('products')\r\n      .insert([productData])\r\n      .select()\r\n      .single();\r\n    \r\n    if (error) {\r\n      console.error(`\u274C ${auth_mode} mode create error:`, error);\r\n      return NextResponse.json(\r\n        { \r\n          error: 'Error al crear producto',\r\n          details: error.message,\r\n          mode: auth_mode\r\n        },\r\n        { status: 500 }\r\n      );\r\n    }\r\n    \r\n    console.log(`\u2705 ${auth_mode} mode: Product created with ID ${product.id}`);\r\n    \r\n    return NextResponse.json({\r\n      data: product,\r\n      message: 'Producto creado exitosamente',\r\n      meta: {\r\n        auth_mode,\r\n        timestamp: new Date().toISOString()\r\n      }\r\n    }, { status: 201 });\r\n    \r\n  } catch (error: any) {\r\n    console.error('\u274C Unified Products API create error:', error);\r\n    return NextResponse.json(\r\n      { \r\n        error: 'Error interno del servidor',\r\n        details: error.message\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "POST", "runtime", "supabaseUrl", "process", "env", "NEXT_PUBLIC_SUPABASE_URL", "supabaseServiceKey", "SUPABASE_SERVICE_ROLE_KEY", "supabaseAdmin", "createClient", "auth", "autoRefreshToken", "persistSession", "UnifiedProductFiltersSchema", "z", "object", "page", "coerce", "number", "int", "min", "default", "limit", "max", "search", "string", "optional", "category_id", "uuid", "is_active", "boolean", "price_min", "price_max", "sort_by", "enum", "sort_order", "auth_mode", "UnifiedProductCreateSchema", "name", "description", "price", "stock", "images", "array", "url", "unifiedAuth", "request", "action", "mode", "checkCRUDPermissions", "session", "user", "allowed", "error", "status", "isAdmin", "email", "supabase", "authResult", "requireAdminAuth", "success", "context", "checkPermission", "URL", "rawParams", "Object", "fromEntries", "searchParams", "entries", "params", "parse", "console", "log", "NextResponse", "json", "code", "offset", "query", "from", "select", "count", "ilike", "eq", "undefined", "gte", "lte", "order", "ascending", "range", "result", "executeWithRLS", "client", "data", "products", "details", "message", "totalPages", "Math", "ceil", "length", "pagination", "total", "hasNext", "hasPrev", "meta", "timestamp", "Date", "toISOString", "body", "productData", "product", "insert", "single", "id"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a608f608460d89fbb3783b675147fbf1589427f3"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2amo8feyhg = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2amo8feyhg();
cov_2amo8feyhg().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2amo8feyhg().f[0]++;
  cov_2amo8feyhg().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2amo8feyhg().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_2amo8feyhg().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_2amo8feyhg().f[1]++;
    cov_2amo8feyhg().s[4]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_2amo8feyhg().f[2]++;
    cov_2amo8feyhg().s[5]++;
    return POST;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_2amo8feyhg().f[3]++;
    cov_2amo8feyhg().s[6]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_2amo8feyhg().s[7]++, require("next/server"));
const _zod =
/* istanbul ignore next */
(cov_2amo8feyhg().s[8]++, require("zod"));
const _config =
/* istanbul ignore next */
(cov_2amo8feyhg().s[9]++, require("../../../../../lib/auth/config"));
const _supabasejs =
/* istanbul ignore next */
(cov_2amo8feyhg().s[10]++, require("@supabase/supabase-js"));
const _adminauth =
/* istanbul ignore next */
(cov_2amo8feyhg().s[11]++, require("../../../../../lib/auth/admin-auth"));
const _enterpriseauthutils =
/* istanbul ignore next */
(cov_2amo8feyhg().s[12]++, require("../../../../../lib/auth/enterprise-auth-utils"));
const _enterpriserlsutils =
/* istanbul ignore next */
(cov_2amo8feyhg().s[13]++, require("../../../../../lib/auth/enterprise-rls-utils"));
const _supabaseauthutils =
/* istanbul ignore next */
(cov_2amo8feyhg().s[14]++, require("../../../../../lib/auth/supabase-auth-utils"));
const runtime =
/* istanbul ignore next */
(cov_2amo8feyhg().s[15]++, 'nodejs');
// ConfiguraciÃ³n de Supabase
const supabaseUrl =
/* istanbul ignore next */
(cov_2amo8feyhg().s[16]++, process.env.NEXT_PUBLIC_SUPABASE_URL);
const supabaseServiceKey =
/* istanbul ignore next */
(cov_2amo8feyhg().s[17]++, process.env.SUPABASE_SERVICE_ROLE_KEY);
const supabaseAdmin =
/* istanbul ignore next */
(cov_2amo8feyhg().s[18]++, (0, _supabasejs.createClient)(supabaseUrl, supabaseServiceKey, {
  auth: {
    autoRefreshToken: false,
    persistSession: false
  }
}));
// Schema de validaciÃ³n unificado
const UnifiedProductFiltersSchema =
/* istanbul ignore next */
(cov_2amo8feyhg().s[19]++, _zod.z.object({
  page: _zod.z.coerce.number().int().min(1).default(1),
  limit: _zod.z.coerce.number().int().min(1).max(100).default(20),
  search: _zod.z.string().optional(),
  category_id: _zod.z.string().uuid().optional(),
  is_active: _zod.z.boolean().optional(),
  price_min: _zod.z.coerce.number().min(0).optional(),
  price_max: _zod.z.coerce.number().min(0).optional(),
  sort_by: _zod.z.enum(['name', 'price', 'created_at', 'updated_at']).default('created_at'),
  sort_order: _zod.z.enum(['asc', 'desc']).default('desc'),
  auth_mode: _zod.z.enum(['simple', 'direct', 'rls', 'secure', 'test']).default('secure')
}));
const UnifiedProductCreateSchema =
/* istanbul ignore next */
(cov_2amo8feyhg().s[20]++, _zod.z.object({
  name: _zod.z.string().min(1, 'Nombre es requerido'),
  description: _zod.z.string().optional(),
  price: _zod.z.number().min(0, 'Precio debe ser mayor a 0'),
  stock: _zod.z.number().int().min(0).default(0),
  category_id: _zod.z.string().uuid().optional(),
  images: _zod.z.array(_zod.z.string().url()).optional(),
  is_active: _zod.z.boolean().default(true),
  auth_mode: _zod.z.enum(['simple', 'direct', 'rls', 'secure', 'test']).default('secure')
}));
// FunciÃ³n de autenticaciÃ³n unificada
async function unifiedAuth(request, action, mode) {
  /* istanbul ignore next */
  cov_2amo8feyhg().f[4]++;
  cov_2amo8feyhg().s[21]++;
  switch (mode) {
    case 'simple':
      /* istanbul ignore next */
      cov_2amo8feyhg().b[0][0]++;
      cov_2amo8feyhg().s[22]++;
      return await (0, _adminauth.checkCRUDPermissions)(action, 'products');
    case 'direct':
      /* istanbul ignore next */
      cov_2amo8feyhg().b[0][1]++;
      const session =
      /* istanbul ignore next */
      (cov_2amo8feyhg().s[23]++, await (0, _config.auth)());
      /* istanbul ignore next */
      cov_2amo8feyhg().s[24]++;
      if (!session?.user) {
        /* istanbul ignore next */
        cov_2amo8feyhg().b[1][0]++;
        cov_2amo8feyhg().s[25]++;
        return {
          allowed: false,
          error: 'AutenticaciÃ³n requerida',
          status: 401
        };
      } else
      /* istanbul ignore next */
      {
        cov_2amo8feyhg().b[1][1]++;
      }
      const isAdmin =
      /* istanbul ignore next */
      (cov_2amo8feyhg().s[26]++, session.user.email === 'santiago@xor.com.ar');
      /* istanbul ignore next */
      cov_2amo8feyhg().s[27]++;
      if (!isAdmin) {
        /* istanbul ignore next */
        cov_2amo8feyhg().b[2][0]++;
        cov_2amo8feyhg().s[28]++;
        return {
          allowed: false,
          error: 'Permisos de administrador requeridos',
          status: 403
        };
      } else
      /* istanbul ignore next */
      {
        cov_2amo8feyhg().b[2][1]++;
      }
      cov_2amo8feyhg().s[29]++;
      return {
        allowed: true,
        user: session.user,
        supabase: supabaseAdmin
      };
    case 'rls':
      /* istanbul ignore next */
      cov_2amo8feyhg().b[0][2]++;
      const authResult =
      /* istanbul ignore next */
      (cov_2amo8feyhg().s[30]++, await (0, _enterpriseauthutils.requireAdminAuth)(request, ['products_read']));
      /* istanbul ignore next */
      cov_2amo8feyhg().s[31]++;
      if (!authResult.success) {
        /* istanbul ignore next */
        cov_2amo8feyhg().b[3][0]++;
        cov_2amo8feyhg().s[32]++;
        return {
          allowed: false,
          error: authResult.error,
          status: authResult.status
        };
      } else
      /* istanbul ignore next */
      {
        cov_2amo8feyhg().b[3][1]++;
      }
      cov_2amo8feyhg().s[33]++;
      return {
        allowed: true,
        context: authResult.context,
        supabase: authResult.supabase
      };
    case 'secure':
      /* istanbul ignore next */
      cov_2amo8feyhg().b[0][3]++;
      cov_2amo8feyhg().s[34]++;
      return await (0, _supabaseauthutils.checkPermission)(request, 'products', action);
    case 'test':
      /* istanbul ignore next */
      cov_2amo8feyhg().b[0][4]++;
      cov_2amo8feyhg().s[35]++;
      // Modo test sin autenticaciÃ³n para debugging
      return {
        allowed: true,
        supabase: supabaseAdmin
      };
    default:
      /* istanbul ignore next */
      cov_2amo8feyhg().b[0][5]++;
      cov_2amo8feyhg().s[36]++;
      return {
        allowed: false,
        error: 'Modo de autenticaciÃ³n no vÃ¡lido',
        status: 400
      };
  }
}
async function GET(request) {
  /* istanbul ignore next */
  cov_2amo8feyhg().f[5]++;
  cov_2amo8feyhg().s[37]++;
  try {
    const url =
    /* istanbul ignore next */
    (cov_2amo8feyhg().s[38]++, new URL(request.url));
    const rawParams =
    /* istanbul ignore next */
    (cov_2amo8feyhg().s[39]++, Object.fromEntries(url.searchParams.entries()));
    // Validar parÃ¡metros
    const params =
    /* istanbul ignore next */
    (cov_2amo8feyhg().s[40]++, UnifiedProductFiltersSchema.parse(rawParams));
    const {
      auth_mode,
      page,
      limit,
      search,
      category_id,
      is_active,
      price_min,
      price_max,
      sort_by,
      sort_order
    } =
    /* istanbul ignore next */
    (cov_2amo8feyhg().s[41]++, params);
    /* istanbul ignore next */
    cov_2amo8feyhg().s[42]++;
    console.log(`ğ Unified Products API: Mode ${auth_mode}, Page ${page}`);
    // AutenticaciÃ³n unificada
    const authResult =
    /* istanbul ignore next */
    (cov_2amo8feyhg().s[43]++, await unifiedAuth(request, 'read', auth_mode));
    /* istanbul ignore next */
    cov_2amo8feyhg().s[44]++;
    if (!authResult.allowed) {
      /* istanbul ignore next */
      cov_2amo8feyhg().b[4][0]++;
      cov_2amo8feyhg().s[45]++;
      return _server.NextResponse.json({
        error: authResult.error,
        code: 'AUTH_FAILED',
        mode: auth_mode
      }, {
        status:
        /* istanbul ignore next */
        (cov_2amo8feyhg().b[5][0]++, authResult.status) ||
        /* istanbul ignore next */
        (cov_2amo8feyhg().b[5][1]++, 401)
      });
    } else
    /* istanbul ignore next */
    {
      cov_2amo8feyhg().b[4][1]++;
    }
    const supabase =
    /* istanbul ignore next */
    (cov_2amo8feyhg().s[46]++,
    /* istanbul ignore next */
    (cov_2amo8feyhg().b[6][0]++, authResult.supabase) ||
    /* istanbul ignore next */
    (cov_2amo8feyhg().b[6][1]++, supabaseAdmin));
    const offset =
    /* istanbul ignore next */
    (cov_2amo8feyhg().s[47]++, (page - 1) * limit);
    // Construir consulta
    let query =
    /* istanbul ignore next */
    (cov_2amo8feyhg().s[48]++, supabase.from('products').select(`
        id,
        name,
        description,
        price,
        stock,
        category_id,
        images,
        is_active,
        created_at,
        updated_at,
        categories (
          id,
          name
        )
      `, {
      count: 'exact'
    }));
    // Aplicar filtros
    /* istanbul ignore next */
    cov_2amo8feyhg().s[49]++;
    if (search) {
      /* istanbul ignore next */
      cov_2amo8feyhg().b[7][0]++;
      cov_2amo8feyhg().s[50]++;
      query = query.ilike('name', `%${search}%`);
    } else
    /* istanbul ignore next */
    {
      cov_2amo8feyhg().b[7][1]++;
    }
    cov_2amo8feyhg().s[51]++;
    if (category_id) {
      /* istanbul ignore next */
      cov_2amo8feyhg().b[8][0]++;
      cov_2amo8feyhg().s[52]++;
      query = query.eq('category_id', category_id);
    } else
    /* istanbul ignore next */
    {
      cov_2amo8feyhg().b[8][1]++;
    }
    cov_2amo8feyhg().s[53]++;
    if (is_active !== undefined) {
      /* istanbul ignore next */
      cov_2amo8feyhg().b[9][0]++;
      cov_2amo8feyhg().s[54]++;
      query = query.eq('is_active', is_active);
    } else
    /* istanbul ignore next */
    {
      cov_2amo8feyhg().b[9][1]++;
    }
    cov_2amo8feyhg().s[55]++;
    if (price_min !== undefined) {
      /* istanbul ignore next */
      cov_2amo8feyhg().b[10][0]++;
      cov_2amo8feyhg().s[56]++;
      query = query.gte('price', price_min);
    } else
    /* istanbul ignore next */
    {
      cov_2amo8feyhg().b[10][1]++;
    }
    cov_2amo8feyhg().s[57]++;
    if (price_max !== undefined) {
      /* istanbul ignore next */
      cov_2amo8feyhg().b[11][0]++;
      cov_2amo8feyhg().s[58]++;
      query = query.lte('price', price_max);
    } else
    /* istanbul ignore next */
    {
      cov_2amo8feyhg().b[11][1]++;
    }
    // Aplicar ordenamiento y paginaciÃ³n
    cov_2amo8feyhg().s[59]++;
    query = query.order(sort_by, {
      ascending: sort_order === 'asc'
    }).range(offset, offset + limit - 1);
    // Ejecutar consulta con RLS si es necesario
    let result;
    /* istanbul ignore next */
    cov_2amo8feyhg().s[60]++;
    if (
    /* istanbul ignore next */
    (cov_2amo8feyhg().b[13][0]++, auth_mode === 'rls') &&
    /* istanbul ignore next */
    (cov_2amo8feyhg().b[13][1]++, authResult.context)) {
      /* istanbul ignore next */
      cov_2amo8feyhg().b[12][0]++;
      cov_2amo8feyhg().s[61]++;
      result = await (0, _enterpriserlsutils.executeWithRLS)(authResult.context, async client => {
        /* istanbul ignore next */
        cov_2amo8feyhg().f[6]++;
        cov_2amo8feyhg().s[62]++;
        return await query;
      });
    } else {
      /* istanbul ignore next */
      cov_2amo8feyhg().b[12][1]++;
      cov_2amo8feyhg().s[63]++;
      result = await query;
    }
    const {
      data: products,
      error,
      count
    } =
    /* istanbul ignore next */
    (cov_2amo8feyhg().s[64]++, result);
    /* istanbul ignore next */
    cov_2amo8feyhg().s[65]++;
    if (error) {
      /* istanbul ignore next */
      cov_2amo8feyhg().b[14][0]++;
      cov_2amo8feyhg().s[66]++;
      console.error(`â ${auth_mode} mode error:`, error);
      /* istanbul ignore next */
      cov_2amo8feyhg().s[67]++;
      return _server.NextResponse.json({
        error: 'Error al obtener productos',
        details: error.message,
        mode: auth_mode
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_2amo8feyhg().b[14][1]++;
    }
    const totalPages =
    /* istanbul ignore next */
    (cov_2amo8feyhg().s[68]++, Math.ceil((
    /* istanbul ignore next */
    (cov_2amo8feyhg().b[15][0]++, count) ||
    /* istanbul ignore next */
    (cov_2amo8feyhg().b[15][1]++, 0)) / limit));
    /* istanbul ignore next */
    cov_2amo8feyhg().s[69]++;
    console.log(`â ${auth_mode} mode: ${products?.length} products retrieved`);
    /* istanbul ignore next */
    cov_2amo8feyhg().s[70]++;
    return _server.NextResponse.json({
      data: products,
      pagination: {
        page,
        limit,
        total:
        /* istanbul ignore next */
        (cov_2amo8feyhg().b[16][0]++, count) ||
        /* istanbul ignore next */
        (cov_2amo8feyhg().b[16][1]++, 0),
        totalPages,
        hasNext: page < totalPages,
        hasPrev: page > 1
      },
      meta: {
        auth_mode,
        timestamp: new Date().toISOString()
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2amo8feyhg().s[71]++;
    console.error('â Unified Products API error:', error);
    /* istanbul ignore next */
    cov_2amo8feyhg().s[72]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor',
      details: error.message
    }, {
      status: 500
    });
  }
}
async function POST(request) {
  /* istanbul ignore next */
  cov_2amo8feyhg().f[7]++;
  cov_2amo8feyhg().s[73]++;
  try {
    const body =
    /* istanbul ignore next */
    (cov_2amo8feyhg().s[74]++, await request.json());
    const params =
    /* istanbul ignore next */
    (cov_2amo8feyhg().s[75]++, UnifiedProductCreateSchema.parse(body));
    const {
      auth_mode,
      ...productData
    } =
    /* istanbul ignore next */
    (cov_2amo8feyhg().s[76]++, params);
    /* istanbul ignore next */
    cov_2amo8feyhg().s[77]++;
    console.log(`ğ§ Unified Products API: Creating product with ${auth_mode} mode`);
    // AutenticaciÃ³n unificada
    const authResult =
    /* istanbul ignore next */
    (cov_2amo8feyhg().s[78]++, await unifiedAuth(request, 'create', auth_mode));
    /* istanbul ignore next */
    cov_2amo8feyhg().s[79]++;
    if (!authResult.allowed) {
      /* istanbul ignore next */
      cov_2amo8feyhg().b[17][0]++;
      cov_2amo8feyhg().s[80]++;
      return _server.NextResponse.json({
        error: authResult.error,
        code: 'AUTH_FAILED',
        mode: auth_mode
      }, {
        status:
        /* istanbul ignore next */
        (cov_2amo8feyhg().b[18][0]++, authResult.status) ||
        /* istanbul ignore next */
        (cov_2amo8feyhg().b[18][1]++, 401)
      });
    } else
    /* istanbul ignore next */
    {
      cov_2amo8feyhg().b[17][1]++;
    }
    const supabase =
    /* istanbul ignore next */
    (cov_2amo8feyhg().s[81]++,
    /* istanbul ignore next */
    (cov_2amo8feyhg().b[19][0]++, authResult.supabase) ||
    /* istanbul ignore next */
    (cov_2amo8feyhg().b[19][1]++, supabaseAdmin));
    // Crear producto
    const {
      data: product,
      error
    } =
    /* istanbul ignore next */
    (cov_2amo8feyhg().s[82]++, await supabase.from('products').insert([productData]).select().single());
    /* istanbul ignore next */
    cov_2amo8feyhg().s[83]++;
    if (error) {
      /* istanbul ignore next */
      cov_2amo8feyhg().b[20][0]++;
      cov_2amo8feyhg().s[84]++;
      console.error(`â ${auth_mode} mode create error:`, error);
      /* istanbul ignore next */
      cov_2amo8feyhg().s[85]++;
      return _server.NextResponse.json({
        error: 'Error al crear producto',
        details: error.message,
        mode: auth_mode
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_2amo8feyhg().b[20][1]++;
    }
    cov_2amo8feyhg().s[86]++;
    console.log(`â ${auth_mode} mode: Product created with ID ${product.id}`);
    /* istanbul ignore next */
    cov_2amo8feyhg().s[87]++;
    return _server.NextResponse.json({
      data: product,
      message: 'Producto creado exitosamente',
      meta: {
        auth_mode,
        timestamp: new Date().toISOString()
      }
    }, {
      status: 201
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2amo8feyhg().s[88]++;
    console.error('â Unified Products API create error:', error);
    /* istanbul ignore next */
    cov_2amo8feyhg().s[89]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor',
      details: error.message
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,