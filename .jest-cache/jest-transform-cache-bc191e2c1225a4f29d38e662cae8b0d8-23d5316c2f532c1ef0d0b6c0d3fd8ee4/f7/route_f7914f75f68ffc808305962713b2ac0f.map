{"version":3,"names":["cov_2amo8feyhg","actualCoverage","s","GET","f","POST","runtime","supabaseUrl","process","env","NEXT_PUBLIC_SUPABASE_URL","supabaseServiceKey","SUPABASE_SERVICE_ROLE_KEY","supabaseAdmin","_supabasejs","createClient","auth","autoRefreshToken","persistSession","UnifiedProductFiltersSchema","_zod","z","object","page","coerce","number","int","min","default","limit","max","search","string","optional","category_id","uuid","is_active","boolean","price_min","price_max","sort_by","enum","sort_order","auth_mode","UnifiedProductCreateSchema","name","description","price","stock","images","array","url","unifiedAuth","request","action","mode","b","_adminauth","checkCRUDPermissions","session","_config","user","allowed","error","status","isAdmin","email","supabase","authResult","_enterpriseauthutils","requireAdminAuth","success","context","_supabaseauthutils","checkPermission","URL","rawParams","Object","fromEntries","searchParams","entries","params","parse","console","log","_server","NextResponse","json","code","offset","query","from","select","count","ilike","eq","undefined","gte","lte","order","ascending","range","result","_enterpriserlsutils","executeWithRLS","client","data","products","details","message","totalPages","Math","ceil","length","pagination","total","hasNext","hasPrev","meta","timestamp","Date","toISOString","body","productData","product","insert","single","id"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\products\\unified\\route.ts"],"sourcesContent":["// Configuraci√≥n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - API UNIFICADA DE PRODUCTOS ADMIN\r\n// Consolida todas las variantes: simple, direct, rls, secure, test\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { z } from 'zod';\r\nimport { auth } from '@/lib/auth/config';\r\nimport { createClient } from '@supabase/supabase-js';\r\nimport { checkCRUDPermissions } from '@/lib/auth/admin-auth';\r\nimport { requireAdminAuth } from '@/lib/auth/enterprise-auth-utils';\r\nimport { executeWithRLS } from '@/lib/auth/enterprise-rls-utils';\r\nimport { checkPermission } from '@/lib/auth/supabase-auth-utils';\r\n\r\n// Configuraci√≥n de Supabase\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;\r\nconst supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY!;\r\n\r\nconst supabaseAdmin = createClient(supabaseUrl, supabaseServiceKey, {\r\n  auth: {\r\n    autoRefreshToken: false,\r\n    persistSession: false\r\n  }\r\n});\r\n\r\n// Schema de validaci√≥n unificado\r\nconst UnifiedProductFiltersSchema = z.object({\r\n  page: z.coerce.number().int().min(1).default(1),\r\n  limit: z.coerce.number().int().min(1).max(100).default(20),\r\n  search: z.string().optional(),\r\n  category_id: z.string().uuid().optional(),\r\n  is_active: z.boolean().optional(),\r\n  price_min: z.coerce.number().min(0).optional(),\r\n  price_max: z.coerce.number().min(0).optional(),\r\n  sort_by: z.enum(['name', 'price', 'created_at', 'updated_at']).default('created_at'),\r\n  sort_order: z.enum(['asc', 'desc']).default('desc'),\r\n  auth_mode: z.enum(['simple', 'direct', 'rls', 'secure', 'test']).default('secure')\r\n});\r\n\r\nconst UnifiedProductCreateSchema = z.object({\r\n  name: z.string().min(1, 'Nombre es requerido'),\r\n  description: z.string().optional(),\r\n  price: z.number().min(0, 'Precio debe ser mayor a 0'),\r\n  stock: z.number().int().min(0).default(0),\r\n  category_id: z.string().uuid().optional(),\r\n  images: z.array(z.string().url()).optional(),\r\n  is_active: z.boolean().default(true),\r\n  auth_mode: z.enum(['simple', 'direct', 'rls', 'secure', 'test']).default('secure')\r\n});\r\n\r\n// Funci√≥n de autenticaci√≥n unificada\r\nasync function unifiedAuth(request: NextRequest, action: string, mode: string) {\r\n  switch (mode) {\r\n    case 'simple':\r\n      return await checkCRUDPermissions(action as any, 'products');\r\n    \r\n    case 'direct':\r\n      const session = await auth();\r\n      if (!session?.user) {\r\n        return { allowed: false, error: 'Autenticaci√≥n requerida', status: 401 };\r\n      }\r\n      const isAdmin = session.user.email === 'santiago@xor.com.ar';\r\n      if (!isAdmin) {\r\n        return { allowed: false, error: 'Permisos de administrador requeridos', status: 403 };\r\n      }\r\n      return { allowed: true, user: session.user, supabase: supabaseAdmin };\r\n    \r\n    case 'rls':\r\n      const authResult = await requireAdminAuth(request, ['products_read']);\r\n      if (!authResult.success) {\r\n        return { allowed: false, error: authResult.error, status: authResult.status };\r\n      }\r\n      return { allowed: true, context: authResult.context, supabase: authResult.supabase };\r\n    \r\n    case 'secure':\r\n      return await checkPermission(request, 'products', action);\r\n    \r\n    case 'test':\r\n      // Modo test sin autenticaci√≥n para debugging\r\n      return { allowed: true, supabase: supabaseAdmin };\r\n    \r\n    default:\r\n      return { allowed: false, error: 'Modo de autenticaci√≥n no v√°lido', status: 400 };\r\n  }\r\n}\r\n\r\n/**\r\n * GET /api/admin/products/unified\r\n * API unificada para obtener productos con m√∫ltiples modos de autenticaci√≥n\r\n */\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    const url = new URL(request.url);\r\n    const rawParams = Object.fromEntries(url.searchParams.entries());\r\n    \r\n    // Validar par√°metros\r\n    const params = UnifiedProductFiltersSchema.parse(rawParams);\r\n    const { auth_mode, page, limit, search, category_id, is_active, price_min, price_max, sort_by, sort_order } = params;\r\n    \r\n    console.log(`üîç Unified Products API: Mode ${auth_mode}, Page ${page}`);\r\n    \r\n    // Autenticaci√≥n unificada\r\n    const authResult = await unifiedAuth(request, 'read', auth_mode);\r\n    \r\n    if (!authResult.allowed) {\r\n      return NextResponse.json(\r\n        { \r\n          error: authResult.error,\r\n          code: 'AUTH_FAILED',\r\n          mode: auth_mode\r\n        },\r\n        { status: authResult.status || 401 }\r\n      );\r\n    }\r\n    \r\n    const supabase = authResult.supabase || supabaseAdmin;\r\n    const offset = (page - 1) * limit;\r\n    \r\n    // Construir consulta\r\n    let query = supabase\r\n      .from('products')\r\n      .select(`\r\n        id,\r\n        name,\r\n        description,\r\n        price,\r\n        stock,\r\n        category_id,\r\n        images,\r\n        is_active,\r\n        created_at,\r\n        updated_at,\r\n        categories (\r\n          id,\r\n          name\r\n        )\r\n      `, { count: 'exact' });\r\n    \r\n    // Aplicar filtros\r\n    if (search) {\r\n      query = query.ilike('name', `%${search}%`);\r\n    }\r\n    if (category_id) {\r\n      query = query.eq('category_id', category_id);\r\n    }\r\n    if (is_active !== undefined) {\r\n      query = query.eq('is_active', is_active);\r\n    }\r\n    if (price_min !== undefined) {\r\n      query = query.gte('price', price_min);\r\n    }\r\n    if (price_max !== undefined) {\r\n      query = query.lte('price', price_max);\r\n    }\r\n    \r\n    // Aplicar ordenamiento y paginaci√≥n\r\n    query = query\r\n      .order(sort_by, { ascending: sort_order === 'asc' })\r\n      .range(offset, offset + limit - 1);\r\n    \r\n    // Ejecutar consulta con RLS si es necesario\r\n    let result;\r\n    if (auth_mode === 'rls' && authResult.context) {\r\n      result = await executeWithRLS(\r\n        authResult.context,\r\n        async (client) => await query\r\n      );\r\n    } else {\r\n      result = await query;\r\n    }\r\n    \r\n    const { data: products, error, count } = result;\r\n    \r\n    if (error) {\r\n      console.error(`‚ùå ${auth_mode} mode error:`, error);\r\n      return NextResponse.json(\r\n        { \r\n          error: 'Error al obtener productos',\r\n          details: error.message,\r\n          mode: auth_mode\r\n        },\r\n        { status: 500 }\r\n      );\r\n    }\r\n    \r\n    const totalPages = Math.ceil((count || 0) / limit);\r\n    \r\n    console.log(`‚úÖ ${auth_mode} mode: ${products?.length} products retrieved`);\r\n    \r\n    return NextResponse.json({\r\n      data: products,\r\n      pagination: {\r\n        page,\r\n        limit,\r\n        total: count || 0,\r\n        totalPages,\r\n        hasNext: page < totalPages,\r\n        hasPrev: page > 1\r\n      },\r\n      meta: {\r\n        auth_mode,\r\n        timestamp: new Date().toISOString()\r\n      }\r\n    });\r\n    \r\n  } catch (error: any) {\r\n    console.error('‚ùå Unified Products API error:', error);\r\n    return NextResponse.json(\r\n      { \r\n        error: 'Error interno del servidor',\r\n        details: error.message\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * POST /api/admin/products/unified\r\n * API unificada para crear productos\r\n */\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    const body = await request.json();\r\n    const params = UnifiedProductCreateSchema.parse(body);\r\n    const { auth_mode, ...productData } = params;\r\n    \r\n    console.log(`üîß Unified Products API: Creating product with ${auth_mode} mode`);\r\n    \r\n    // Autenticaci√≥n unificada\r\n    const authResult = await unifiedAuth(request, 'create', auth_mode);\r\n    \r\n    if (!authResult.allowed) {\r\n      return NextResponse.json(\r\n        { \r\n          error: authResult.error,\r\n          code: 'AUTH_FAILED',\r\n          mode: auth_mode\r\n        },\r\n        { status: authResult.status || 401 }\r\n      );\r\n    }\r\n    \r\n    const supabase = authResult.supabase || supabaseAdmin;\r\n    \r\n    // Crear producto\r\n    const { data: product, error } = await supabase\r\n      .from('products')\r\n      .insert([productData])\r\n      .select()\r\n      .single();\r\n    \r\n    if (error) {\r\n      console.error(`‚ùå ${auth_mode} mode create error:`, error);\r\n      return NextResponse.json(\r\n        { \r\n          error: 'Error al crear producto',\r\n          details: error.message,\r\n          mode: auth_mode\r\n        },\r\n        { status: 500 }\r\n      );\r\n    }\r\n    \r\n    console.log(`‚úÖ ${auth_mode} mode: Product created with ID ${product.id}`);\r\n    \r\n    return NextResponse.json({\r\n      data: product,\r\n      message: 'Producto creado exitosamente',\r\n      meta: {\r\n        auth_mode,\r\n        timestamp: new Date().toISOString()\r\n      }\r\n    }, { status: 201 });\r\n    \r\n  } catch (error: any) {\r\n    console.error('‚ùå Unified Products API create error:', error);\r\n    return NextResponse.json(\r\n      { \r\n        error: 'Error interno del servidor',\r\n        details: error.message\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}