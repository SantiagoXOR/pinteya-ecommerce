{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\admin\\logistics\\LazyLogisticsComponents.tsx"],"sourcesContent":["// ===================================\r\n// PINTEYA E-COMMERCE - LAZY LOGISTICS COMPONENTS\r\n// Componentes con lazy loading para gestión de logística\r\n// ===================================\r\n\r\n\"use client\";\r\n\r\nimport React, { lazy, Suspense } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Skeleton } from '@/components/ui/skeleton';\r\nimport { Button } from '@/components/ui/button';\r\nimport { \r\n  Truck, \r\n  Map as MapIcon, \r\n  BarChart3, \r\n  Package,\r\n  AlertTriangle,\r\n  Loader2,\r\n  Activity,\r\n  Clock\r\n} from 'lucide-react';\r\n\r\n// ===================================\r\n// LAZY IMPORTS\r\n// ===================================\r\n\r\n// Lazy loading de componentes de logística\r\nconst RealTimeDashboard = lazy(() => import('./RealTimeDashboard'));\r\nconst LogisticsMap = lazy(() => import('./LogisticsMap'));\r\nconst CarrierPerformanceTable = lazy(() => import('./CarrierPerformanceTable'));\r\nconst ShipmentsList = lazy(() => import('./ShipmentsList'));\r\nconst TrackingTimeline = lazy(() => import('./TrackingTimeline'));\r\nconst GeofenceManager = lazy(() => import('./GeofenceManager'));\r\n\r\n// ===================================\r\n// SKELETON COMPONENTS\r\n// ===================================\r\n\r\nfunction RealTimeDashboardSkeleton() {\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <Skeleton className=\"h-8 w-48 mb-2\" />\r\n          <Skeleton className=\"h-4 w-64\" />\r\n        </div>\r\n        <div className=\"flex gap-2\">\r\n          <Skeleton className=\"h-10 w-32\" />\r\n          <Skeleton className=\"h-10 w-10\" />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Metrics Cards */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n        {Array.from({ length: 4 }).map((_, i) => (\r\n          <Card key={i}>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n              <Skeleton className=\"h-4 w-20\" />\r\n              <Truck className=\"h-4 w-4 text-muted-foreground\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n              <Skeleton className=\"h-8 w-16 mb-2\" />\r\n              <Skeleton className=\"h-3 w-24\" />\r\n            </CardContent>\r\n          </Card>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Main Content */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        {/* Map */}\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle className=\"flex items-center gap-2\">\r\n              <MapIcon className=\"w-5 h-5\" />\r\n              Mapa en Tiempo Real\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <Skeleton className=\"h-96 w-full rounded-lg\" />\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Activity Feed */}\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle className=\"flex items-center gap-2\">\r\n              <Activity className=\"w-5 h-5\" />\r\n              Actividad Reciente\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"space-y-4\">\r\n              {Array.from({ length: 6 }).map((_, i) => (\r\n                <div key={i} className=\"flex items-center space-x-3\">\r\n                  <Skeleton className=\"h-8 w-8 rounded-full\" />\r\n                  <div className=\"flex-1 space-y-1\">\r\n                    <Skeleton className=\"h-4 w-full\" />\r\n                    <Skeleton className=\"h-3 w-24\" />\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction LogisticsMapSkeleton() {\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle className=\"flex items-center gap-2\">\r\n          <MapIcon className=\"w-5 h-5\" />\r\n          <Skeleton className=\"h-6 w-32\" />\r\n        </CardTitle>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <div className=\"relative\">\r\n          <Skeleton className=\"h-96 w-full rounded-lg\" />\r\n          <div className=\"absolute top-4 right-4 space-y-2\">\r\n            <Skeleton className=\"h-8 w-8 rounded\" />\r\n            <Skeleton className=\"h-8 w-8 rounded\" />\r\n            <Skeleton className=\"h-8 w-8 rounded\" />\r\n          </div>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction CarrierPerformanceTableSkeleton() {\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle className=\"flex items-center gap-2\">\r\n          <BarChart3 className=\"w-5 h-5\" />\r\n          Performance de Couriers\r\n        </CardTitle>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <div className=\"space-y-4\">\r\n          {/* Table Header */}\r\n          <div className=\"grid grid-cols-5 gap-4 pb-2 border-b\">\r\n            {['Courier', 'Entregas', 'Puntualidad', 'Rating', 'Acciones'].map((header, i) => (\r\n              <Skeleton key={i} className=\"h-4 w-20\" />\r\n            ))}\r\n          </div>\r\n          \r\n          {/* Table Rows */}\r\n          {Array.from({ length: 5 }).map((_, i) => (\r\n            <div key={i} className=\"grid grid-cols-5 gap-4 py-2\">\r\n              <div className=\"flex items-center space-x-2\">\r\n                <Skeleton className=\"h-8 w-8 rounded\" />\r\n                <Skeleton className=\"h-4 w-24\" />\r\n              </div>\r\n              <Skeleton className=\"h-4 w-16\" />\r\n              <Skeleton className=\"h-4 w-20\" />\r\n              <Skeleton className=\"h-4 w-16\" />\r\n              <Skeleton className=\"h-8 w-20\" />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction ShipmentsListSkeleton() {\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle className=\"flex items-center gap-2\">\r\n          <Package className=\"w-5 h-5\" />\r\n          Lista de Envíos\r\n        </CardTitle>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <div className=\"space-y-4\">\r\n          {Array.from({ length: 8 }).map((_, i) => (\r\n            <div key={i} className=\"flex items-center justify-between p-4 border rounded-lg\">\r\n              <div className=\"flex items-center space-x-3\">\r\n                <Skeleton className=\"h-10 w-10 rounded\" />\r\n                <div className=\"space-y-1\">\r\n                  <Skeleton className=\"h-4 w-32\" />\r\n                  <Skeleton className=\"h-3 w-24\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <Skeleton className=\"h-6 w-16 rounded-full\" />\r\n                <Skeleton className=\"h-8 w-20\" />\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction TrackingTimelineSkeleton() {\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle className=\"flex items-center gap-2\">\r\n          <Clock className=\"w-5 h-5\" />\r\n          Timeline de Seguimiento\r\n        </CardTitle>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <div className=\"space-y-6\">\r\n          {Array.from({ length: 5 }).map((_, i) => (\r\n            <div key={i} className=\"flex items-start space-x-3\">\r\n              <Skeleton className=\"h-8 w-8 rounded-full mt-1\" />\r\n              <div className=\"flex-1 space-y-2\">\r\n                <Skeleton className=\"h-4 w-full\" />\r\n                <Skeleton className=\"h-3 w-32\" />\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\n// ===================================\r\n// ERROR BOUNDARY\r\n// ===================================\r\n\r\ninterface ErrorBoundaryState {\r\n  hasError: boolean;\r\n  error?: Error;\r\n}\r\n\r\nclass LogisticsErrorBoundary extends React.Component<\r\n  React.PropsWithChildren<{}>,\r\n  ErrorBoundaryState\r\n> {\r\n  constructor(props: React.PropsWithChildren<{}>) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(error: Error): ErrorBoundaryState {\r\n    return { hasError: true, error };\r\n  }\r\n\r\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\r\n    console.error('Logistics component lazy loading error:', error, errorInfo);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return (\r\n        <div className=\"flex items-center justify-center min-h-[400px]\">\r\n          <Card className=\"w-full max-w-md\">\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2 text-red-600\">\r\n                <AlertTriangle className=\"h-5 w-5\" />\r\n                Error de Carga\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <p className=\"text-sm text-gray-600 mb-4\">\r\n                No se pudo cargar el componente de logística. Por favor, intenta nuevamente.\r\n              </p>\r\n              <Button\r\n                onClick={() => window.location.reload()}\r\n                className=\"w-full\"\r\n              >\r\n                <Loader2 className=\"w-4 h-4 mr-2\" />\r\n                Recargar\r\n              </Button>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\n// ===================================\r\n// LAZY COMPONENTS\r\n// ===================================\r\n\r\nexport function LazyRealTimeDashboard(props: any) {\r\n  return (\r\n    <Suspense fallback={<RealTimeDashboardSkeleton />}>\r\n      <LogisticsErrorBoundary>\r\n        <RealTimeDashboard {...props} />\r\n      </LogisticsErrorBoundary>\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nexport function LazyLogisticsMap(props: any) {\r\n  return (\r\n    <Suspense fallback={<LogisticsMapSkeleton />}>\r\n      <LogisticsErrorBoundary>\r\n        <LogisticsMap {...props} />\r\n      </LogisticsErrorBoundary>\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nexport function LazyCarrierPerformanceTable(props: any) {\r\n  return (\r\n    <Suspense fallback={<CarrierPerformanceTableSkeleton />}>\r\n      <LogisticsErrorBoundary>\r\n        <CarrierPerformanceTable {...props} />\r\n      </LogisticsErrorBoundary>\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nexport function LazyShipmentsList(props: any) {\r\n  return (\r\n    <Suspense fallback={<ShipmentsListSkeleton />}>\r\n      <LogisticsErrorBoundary>\r\n        <ShipmentsList {...props} />\r\n      </LogisticsErrorBoundary>\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nexport function LazyTrackingTimeline(props: any) {\r\n  return (\r\n    <Suspense fallback={<TrackingTimelineSkeleton />}>\r\n      <LogisticsErrorBoundary>\r\n        <TrackingTimeline {...props} />\r\n      </LogisticsErrorBoundary>\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nexport function LazyGeofenceManager(props: any) {\r\n  return (\r\n    <Suspense fallback={<div className=\"h-64 flex items-center justify-center\"><Loader2 className=\"w-6 h-6 animate-spin\" /></div>}>\r\n      <LogisticsErrorBoundary>\r\n        <GeofenceManager {...props} />\r\n      </LogisticsErrorBoundary>\r\n    </Suspense>\r\n  );\r\n}\r\n\r\n// ===================================\r\n// PRELOADING HOOKS\r\n// ===================================\r\n\r\nexport function usePreloadLogisticsComponents() {\r\n  const preloadDashboard = React.useCallback(() => {\r\n    import('./RealTimeDashboard');\r\n  }, []);\r\n\r\n  const preloadMap = React.useCallback(() => {\r\n    import('./LogisticsMap');\r\n  }, []);\r\n\r\n  const preloadTable = React.useCallback(() => {\r\n    import('./CarrierPerformanceTable');\r\n  }, []);\r\n\r\n  const preloadShipments = React.useCallback(() => {\r\n    import('./ShipmentsList');\r\n  }, []);\r\n\r\n  return {\r\n    preloadDashboard,\r\n    preloadMap,\r\n    preloadTable,\r\n    preloadShipments\r\n  };\r\n}\r\n\r\n// ===================================\r\n// PREFETCH COMPONENT\r\n// ===================================\r\n\r\nexport function LogisticsComponentsPrefetch() {\r\n  const { preloadDashboard, preloadMap, preloadTable, preloadShipments } = usePreloadLogisticsComponents();\r\n\r\n  React.useEffect(() => {\r\n    // Precargar componentes críticos después de un delay\r\n    const timer = setTimeout(() => {\r\n      preloadDashboard();\r\n      preloadShipments();\r\n      // Map y Table se cargan bajo demanda por ser más pesados\r\n    }, 2000);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [preloadDashboard, preloadShipments]);\r\n\r\n  return null;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["LazyCarrierPerformanceTable","LazyGeofenceManager","LazyLogisticsMap","LazyRealTimeDashboard","LazyShipmentsList","LazyTrackingTimeline","LogisticsComponentsPrefetch","usePreloadLogisticsComponents","RealTimeDashboard","lazy","LogisticsMap","CarrierPerformanceTable","ShipmentsList","TrackingTimeline","GeofenceManager","RealTimeDashboardSkeleton","div","className","Skeleton","Array","from","length","map","_","i","Card","CardHeader","Truck","CardContent","CardTitle","MapIcon","Activity","LogisticsMapSkeleton","CarrierPerformanceTableSkeleton","BarChart3","header","ShipmentsListSkeleton","Package","TrackingTimelineSkeleton","Clock","LogisticsErrorBoundary","React","Component","props","state","hasError","getDerivedStateFromError","error","componentDidCatch","errorInfo","console","render","AlertTriangle","p","Button","onClick","window","location","reload","Loader2","children","Suspense","fallback","preloadDashboard","useCallback","preloadMap","preloadTable","preloadShipments","useEffect","timer","setTimeout","clearTimeout"],"mappings":"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"}