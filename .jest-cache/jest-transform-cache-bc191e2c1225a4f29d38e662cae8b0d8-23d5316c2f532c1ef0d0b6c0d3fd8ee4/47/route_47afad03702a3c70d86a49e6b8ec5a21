1c358b22e78c232a025e263cb7a278af
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_invfiu2rl() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\seo\\core-web-vitals\\route.ts";
  var hash = "fa6c9af6d326986e417d53dcc7a99ea078e21266";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\seo\\core-web-vitals\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 31,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 22
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 19
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 23
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 20
        }
      },
      "8": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 19
        }
      },
      "9": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 23
        }
      },
      "10": {
        start: {
          line: 32,
          column: 16
        },
        end: {
          line: 32,
          column: 38
        }
      },
      "11": {
        start: {
          line: 33,
          column: 30
        },
        end: {
          line: 33,
          column: 83
        }
      },
      "12": {
        start: {
          line: 34,
          column: 16
        },
        end: {
          line: 34,
          column: 60
        }
      },
      "13": {
        start: {
          line: 35,
          column: 20
        },
        end: {
          line: 35,
          column: 67
        }
      },
      "14": {
        start: {
          line: 36,
          column: 16
        },
        end: {
          line: 36,
          column: 24
        }
      },
      "15": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 87,
          column: 5
        }
      },
      "16": {
        start: {
          line: 39,
          column: 33
        },
        end: {
          line: 39,
          column: 53
        }
      },
      "17": {
        start: {
          line: 40,
          column: 20
        },
        end: {
          line: 40,
          column: 43
        }
      },
      "18": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 67,
          column: 9
        }
      },
      "19": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 66,
          column: 15
        }
      },
      "20": {
        start: {
          line: 69,
          column: 25
        },
        end: {
          line: 69,
          column: 107
        }
      },
      "21": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 73,
          column: 36
        }
      },
      "22": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 77,
          column: 11
        }
      },
      "23": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 118
        }
      },
      "24": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 86,
          column: 11
        }
      },
      "25": {
        start: {
          line: 90,
          column: 4
        },
        end: {
          line: 175,
          column: 5
        }
      },
      "26": {
        start: {
          line: 91,
          column: 21
        },
        end: {
          line: 91,
          column: 41
        }
      },
      "27": {
        start: {
          line: 92,
          column: 34
        },
        end: {
          line: 92,
          column: 38
        }
      },
      "28": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 112,
          column: 9
        }
      },
      "29": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 111,
          column: 15
        }
      },
      "30": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 121,
          column: 9
        }
      },
      "31": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 120,
          column: 15
        }
      },
      "32": {
        start: {
          line: 122,
          column: 24
        },
        end: {
          line: 122,
          column: 26
        }
      },
      "33": {
        start: {
          line: 123,
          column: 23
        },
        end: {
          line: 123,
          column: 25
        }
      },
      "34": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 147,
          column: 9
        }
      },
      "35": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 146,
          column: 13
        }
      },
      "36": {
        start: {
          line: 127,
          column: 33
        },
        end: {
          line: 127,
          column: 115
        }
      },
      "37": {
        start: {
          line: 129,
          column: 29
        },
        end: {
          line: 129,
          column: 37
        }
      },
      "38": {
        start: {
          line: 130,
          column: 16
        },
        end: {
          line: 135,
          column: 17
        }
      },
      "39": {
        start: {
          line: 131,
          column: 20
        },
        end: {
          line: 134,
          column: 22
        }
      },
      "40": {
        start: {
          line: 133,
          column: 76
        },
        end: {
          line: 133,
          column: 130
        }
      },
      "41": {
        start: {
          line: 136,
          column: 16
        },
        end: {
          line: 139,
          column: 17
        }
      },
      "42": {
        start: {
          line: 137,
          column: 77
        },
        end: {
          line: 137,
          column: 83
        }
      },
      "43": {
        start: {
          line: 138,
          column: 20
        },
        end: {
          line: 138,
          column: 56
        }
      },
      "44": {
        start: {
          line: 140,
          column: 16
        },
        end: {
          line: 140,
          column: 37
        }
      },
      "45": {
        start: {
          line: 142,
          column: 16
        },
        end: {
          line: 145,
          column: 19
        }
      },
      "46": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 152,
          column: 36
        }
      },
      "47": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 165,
          column: 11
        }
      },
      "48": {
        start: {
          line: 162,
          column: 91
        },
        end: {
          line: 162,
          column: 111
        }
      },
      "49": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 167,
          column: 119
        }
      },
      "50": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 174,
          column: 11
        }
      },
      "51": {
        start: {
          line: 178,
          column: 4
        },
        end: {
          line: 271,
          column: 5
        }
      },
      "52": {
        start: {
          line: 179,
          column: 21
        },
        end: {
          line: 179,
          column: 41
        }
      },
      "53": {
        start: {
          line: 180,
          column: 31
        },
        end: {
          line: 180,
          column: 35
        }
      },
      "54": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 216,
          column: 9
        }
      },
      "55": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 215,
          column: 15
        }
      },
      "56": {
        start: {
          line: 218,
          column: 32
        },
        end: {
          line: 225,
          column: 9
        }
      },
      "57": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 246,
          column: 9
        }
      },
      "58": {
        start: {
          line: 227,
          column: 12
        },
        end: {
          line: 245,
          column: 13
        }
      },
      "59": {
        start: {
          line: 228,
          column: 34
        },
        end: {
          line: 228,
          column: 52
        }
      },
      "60": {
        start: {
          line: 229,
          column: 16
        },
        end: {
          line: 236,
          column: 17
        }
      },
      "61": {
        start: {
          line: 230,
          column: 20
        },
        end: {
          line: 235,
          column: 23
        }
      },
      "62": {
        start: {
          line: 237,
          column: 16
        },
        end: {
          line: 244,
          column: 17
        }
      },
      "63": {
        start: {
          line: 238,
          column: 20
        },
        end: {
          line: 243,
          column: 23
        }
      },
      "64": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 250,
          column: 11
        }
      },
      "65": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 253,
          column: 36
        }
      },
      "66": {
        start: {
          line: 254,
          column: 8
        },
        end: {
          line: 261,
          column: 11
        }
      },
      "67": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 263,
          column: 118
        }
      },
      "68": {
        start: {
          line: 264,
          column: 8
        },
        end: {
          line: 270,
          column: 11
        }
      },
      "69": {
        start: {
          line: 274,
          column: 4
        },
        end: {
          line: 347,
          column: 5
        }
      },
      "70": {
        start: {
          line: 276,
          column: 8
        },
        end: {
          line: 303,
          column: 11
        }
      },
      "71": {
        start: {
          line: 304,
          column: 8
        },
        end: {
          line: 304,
          column: 128
        }
      },
      "72": {
        start: {
          line: 305,
          column: 8
        },
        end: {
          line: 337,
          column: 11
        }
      },
      "73": {
        start: {
          line: 339,
          column: 8
        },
        end: {
          line: 339,
          column: 121
        }
      },
      "74": {
        start: {
          line: 340,
          column: 8
        },
        end: {
          line: 346,
          column: 11
        }
      },
      "75": {
        start: {
          line: 350,
          column: 19
        },
        end: {
          line: 350,
          column: 48
        }
      },
      "76": {
        start: {
          line: 351,
          column: 24
        },
        end: {
          line: 351,
          column: 78
        }
      },
      "77": {
        start: {
          line: 352,
          column: 4
        },
        end: {
          line: 355,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 18
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 15
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 16
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 15
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        loc: {
          start: {
            line: 28,
            column: 19
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 28
      },
      "7": {
        name: "GET",
        decl: {
          start: {
            line: 37,
            column: 15
          },
          end: {
            line: 37,
            column: 18
          }
        },
        loc: {
          start: {
            line: 37,
            column: 28
          },
          end: {
            line: 88,
            column: 1
          }
        },
        line: 37
      },
      "8": {
        name: "POST",
        decl: {
          start: {
            line: 89,
            column: 15
          },
          end: {
            line: 89,
            column: 19
          }
        },
        loc: {
          start: {
            line: 89,
            column: 29
          },
          end: {
            line: 176,
            column: 1
          }
        },
        line: 89
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 133,
            column: 69
          },
          end: {
            line: 133,
            column: 70
          }
        },
        loc: {
          start: {
            line: 133,
            column: 76
          },
          end: {
            line: 133,
            column: 130
          }
        },
        line: 133
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 162,
            column: 81
          },
          end: {
            line: 162,
            column: 82
          }
        },
        loc: {
          start: {
            line: 162,
            column: 91
          },
          end: {
            line: 162,
            column: 111
          }
        },
        line: 162
      },
      "11": {
        name: "PUT",
        decl: {
          start: {
            line: 177,
            column: 15
          },
          end: {
            line: 177,
            column: 18
          }
        },
        loc: {
          start: {
            line: 177,
            column: 28
          },
          end: {
            line: 272,
            column: 1
          }
        },
        line: 177
      },
      "12": {
        name: "DELETE",
        decl: {
          start: {
            line: 273,
            column: 15
          },
          end: {
            line: 273,
            column: 21
          }
        },
        loc: {
          start: {
            line: 273,
            column: 31
          },
          end: {
            line: 348,
            column: 1
          }
        },
        line: 273
      },
      "13": {
        name: "OPTIONS",
        decl: {
          start: {
            line: 349,
            column: 15
          },
          end: {
            line: 349,
            column: 22
          }
        },
        loc: {
          start: {
            line: 349,
            column: 32
          },
          end: {
            line: 356,
            column: 1
          }
        },
        line: 349
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 67,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 67,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "1": {
        loc: {
          start: {
            line: 83,
            column: 21
          },
          end: {
            line: 83,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 83,
            column: 46
          },
          end: {
            line: 83,
            column: 59
          }
        }, {
          start: {
            line: 83,
            column: 62
          },
          end: {
            line: 83,
            column: 77
          }
        }],
        line: 83
      },
      "2": {
        loc: {
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 112,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 112,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "3": {
        loc: {
          start: {
            line: 94,
            column: 12
          },
          end: {
            line: 94,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 94,
            column: 12
          },
          end: {
            line: 94,
            column: 17
          }
        }, {
          start: {
            line: 94,
            column: 21
          },
          end: {
            line: 94,
            column: 41
          }
        }, {
          start: {
            line: 94,
            column: 45
          },
          end: {
            line: 94,
            column: 62
          }
        }],
        line: 94
      },
      "4": {
        loc: {
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 121,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 121,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      },
      "5": {
        loc: {
          start: {
            line: 130,
            column: 16
          },
          end: {
            line: 135,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 130,
            column: 16
          },
          end: {
            line: 135,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 130
      },
      "6": {
        loc: {
          start: {
            line: 133,
            column: 76
          },
          end: {
            line: 133,
            column: 130
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 133,
            column: 76
          },
          end: {
            line: 133,
            column: 103
          }
        }, {
          start: {
            line: 133,
            column: 107
          },
          end: {
            line: 133,
            column: 130
          }
        }],
        line: 133
      },
      "7": {
        loc: {
          start: {
            line: 136,
            column: 16
          },
          end: {
            line: 139,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 16
          },
          end: {
            line: 139,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 136
      },
      "8": {
        loc: {
          start: {
            line: 144,
            column: 27
          },
          end: {
            line: 144,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 144,
            column: 52
          },
          end: {
            line: 144,
            column: 65
          }
        }, {
          start: {
            line: 144,
            column: 68
          },
          end: {
            line: 144,
            column: 83
          }
        }],
        line: 144
      },
      "9": {
        loc: {
          start: {
            line: 162,
            column: 34
          },
          end: {
            line: 162,
            column: 137
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 162,
            column: 55
          },
          end: {
            line: 162,
            column: 133
          }
        }, {
          start: {
            line: 162,
            column: 136
          },
          end: {
            line: 162,
            column: 137
          }
        }],
        line: 162
      },
      "10": {
        loc: {
          start: {
            line: 171,
            column: 21
          },
          end: {
            line: 171,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 171,
            column: 46
          },
          end: {
            line: 171,
            column: 59
          }
        }, {
          start: {
            line: 171,
            column: 62
          },
          end: {
            line: 171,
            column: 77
          }
        }],
        line: 171
      },
      "11": {
        loc: {
          start: {
            line: 181,
            column: 8
          },
          end: {
            line: 216,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 181,
            column: 8
          },
          end: {
            line: 216,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 181
      },
      "12": {
        loc: {
          start: {
            line: 181,
            column: 12
          },
          end: {
            line: 181,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 181,
            column: 12
          },
          end: {
            line: 181,
            column: 23
          }
        }, {
          start: {
            line: 181,
            column: 27
          },
          end: {
            line: 181,
            column: 57
          }
        }],
        line: 181
      },
      "13": {
        loc: {
          start: {
            line: 227,
            column: 12
          },
          end: {
            line: 245,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 227,
            column: 12
          },
          end: {
            line: 245,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 227
      },
      "14": {
        loc: {
          start: {
            line: 229,
            column: 16
          },
          end: {
            line: 236,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 229,
            column: 16
          },
          end: {
            line: 236,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 229
      },
      "15": {
        loc: {
          start: {
            line: 229,
            column: 20
          },
          end: {
            line: 229,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 229,
            column: 20
          },
          end: {
            line: 229,
            column: 35
          }
        }, {
          start: {
            line: 229,
            column: 39
          },
          end: {
            line: 229,
            column: 66
          }
        }],
        line: 229
      },
      "16": {
        loc: {
          start: {
            line: 237,
            column: 16
          },
          end: {
            line: 244,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 237,
            column: 16
          },
          end: {
            line: 244,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 237
      },
      "17": {
        loc: {
          start: {
            line: 267,
            column: 21
          },
          end: {
            line: 267,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 267,
            column: 46
          },
          end: {
            line: 267,
            column: 59
          }
        }, {
          start: {
            line: 267,
            column: 62
          },
          end: {
            line: 267,
            column: 77
          }
        }],
        line: 267
      },
      "18": {
        loc: {
          start: {
            line: 343,
            column: 21
          },
          end: {
            line: 343,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 343,
            column: 46
          },
          end: {
            line: 343,
            column: 59
          }
        }, {
          start: {
            line: 343,
            column: 62
          },
          end: {
            line: 343,
            column: 77
          }
        }],
        line: 343
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\seo\\core-web-vitals\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - CORE WEB VITALS API\r\n// API espec\xEDfica para an\xE1lisis y optimizaci\xF3n de Core Web Vitals\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { enhancedSEOOptimizationTools } from '@/lib/seo/seo-optimization-tools';\r\nimport { logger, LogCategory, LogLevel } from '@/lib/enterprise/logger';\r\nimport { generateCorsHeaders } from '@/lib/security/cors-config';\r\n\r\n// ===================================\r\n// GET - Obtener informaci\xF3n de Core Web Vitals\r\n// ===================================\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    const { searchParams } = new URL(request.url);\r\n    const url = searchParams.get('url');\r\n\r\n    if (!url) {\r\n      return NextResponse.json({\r\n        success: true,\r\n        data: {\r\n          message: 'Core Web Vitals Analysis API',\r\n          description: 'Analyze and optimize Core Web Vitals metrics',\r\n          usage: {\r\n            'GET ?url=https://example.com': 'Analyze Core Web Vitals for specific URL',\r\n            'POST': 'Batch analyze multiple URLs',\r\n            'PUT': 'Update Core Web Vitals thresholds'\r\n          },\r\n          metrics: {\r\n            LCP: 'Largest Contentful Paint - measures loading performance',\r\n            FID: 'First Input Delay - measures interactivity',\r\n            CLS: 'Cumulative Layout Shift - measures visual stability',\r\n            FCP: 'First Contentful Paint - measures perceived loading speed',\r\n            TTFB: 'Time to First Byte - measures server response time',\r\n            INP: 'Interaction to Next Paint - measures responsiveness'\r\n          },\r\n          thresholds: {\r\n            good: 'Green zone - optimal performance',\r\n            needsImprovement: 'Yellow zone - needs optimization',\r\n            poor: 'Red zone - critical issues'\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    // Analizar Core Web Vitals para la URL espec\xEDfica\r\n    const analysis = await enhancedSEOOptimizationTools.analyzeCoreWebVitals(url);\r\n\r\n    logger.info(LogLevel.INFO, 'Core Web Vitals analysis completed', {\r\n      url,\r\n      overallScore: analysis.overallScore\r\n    }, LogCategory.SEO);\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: analysis\r\n    });\r\n\r\n  } catch (error) {\r\n    logger.error(LogLevel.ERROR, 'Core Web Vitals API GET error', error as Error, LogCategory.SEO);\r\n    \r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Failed to analyze Core Web Vitals',\r\n      details: error instanceof Error ? error.message : 'Unknown error'\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n// ===================================\r\n// POST - An\xE1lisis batch de m\xFAltiples URLs\r\n// ===================================\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    const body = await request.json();\r\n    const { urls, options } = body;\r\n\r\n    // Validar par\xE1metros\r\n    if (!urls || !Array.isArray(urls) || urls.length === 0) {\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: 'urls array is required and must not be empty',\r\n        example: {\r\n          urls: [\r\n            'https://pinteya.com',\r\n            'https://pinteya.com/products/pintura-interior',\r\n            'https://pinteya.com/categories/pinturas'\r\n          ],\r\n          options: {\r\n            includeOptimizations: true,\r\n            priorityOnly: false\r\n          }\r\n        }\r\n      }, { status: 400 });\r\n    }\r\n\r\n    // Limitar n\xFAmero de URLs para evitar sobrecarga\r\n    if (urls.length > 10) {\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: 'Maximum 10 URLs allowed per batch request'\r\n      }, { status: 400 });\r\n    }\r\n\r\n    const results = [];\r\n    const errors = [];\r\n\r\n    // Analizar cada URL\r\n    for (const url of urls) {\r\n      try {\r\n        const analysis = await enhancedSEOOptimizationTools.analyzeCoreWebVitals(url);\r\n        \r\n        // Filtrar resultados seg\xFAn opciones\r\n        let result = analysis;\r\n        if (options?.priorityOnly) {\r\n          result = {\r\n            ...analysis,\r\n            optimizations: analysis.optimizations.filter(opt => \r\n              opt.priority === 'critical' || opt.priority === 'high'\r\n            )\r\n          };\r\n        }\r\n\r\n        if (!options?.includeOptimizations) {\r\n          const { optimizations, ...resultWithoutOptimizations } = result;\r\n          result = resultWithoutOptimizations;\r\n        }\r\n\r\n        results.push(result);\r\n\r\n      } catch (error) {\r\n        errors.push({\r\n          url,\r\n          error: error instanceof Error ? error.message : 'Unknown error'\r\n        });\r\n      }\r\n    }\r\n\r\n    logger.info(LogLevel.INFO, 'Batch Core Web Vitals analysis completed', {\r\n      totalUrls: urls.length,\r\n      successfulAnalyses: results.length,\r\n      errors: errors.length\r\n    }, LogCategory.SEO);\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: {\r\n        results,\r\n        errors,\r\n        summary: {\r\n          totalUrls: urls.length,\r\n          successful: results.length,\r\n          failed: errors.length,\r\n          averageScore: results.length > 0 \r\n            ? Math.round(results.reduce((sum, r) => sum + r.overallScore, 0) / results.length)\r\n            : 0\r\n        }\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    logger.error(LogLevel.ERROR, 'Core Web Vitals API POST error', error as Error, LogCategory.SEO);\r\n    \r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Failed to perform batch analysis',\r\n      details: error instanceof Error ? error.message : 'Unknown error'\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n// ===================================\r\n// PUT - Actualizar umbrales de Core Web Vitals\r\n// ===================================\r\nexport async function PUT(request: NextRequest) {\r\n  try {\r\n    const body = await request.json();\r\n    const { thresholds } = body;\r\n\r\n    if (!thresholds || typeof thresholds !== 'object') {\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: 'thresholds object is required',\r\n        example: {\r\n          thresholds: {\r\n            lcp: { good: 2.5, needsImprovement: 4.0 },\r\n            fid: { good: 100, needsImprovement: 300 },\r\n            cls: { good: 0.1, needsImprovement: 0.25 },\r\n            fcp: { good: 1.8, needsImprovement: 3.0 },\r\n            ttfb: { good: 600, needsImprovement: 1500 },\r\n            inp: { good: 200, needsImprovement: 500 }\r\n          }\r\n        }\r\n      }, { status: 400 });\r\n    }\r\n\r\n    // Validar estructura de umbrales\r\n    const requiredMetrics = ['lcp', 'fid', 'cls', 'fcp', 'ttfb', 'inp'];\r\n    for (const metric of requiredMetrics) {\r\n      if (thresholds[metric]) {\r\n        const threshold = thresholds[metric];\r\n        if (!threshold.good || !threshold.needsImprovement) {\r\n          return NextResponse.json({\r\n            success: false,\r\n            error: `Threshold for ${metric} must have 'good' and 'needsImprovement' values`\r\n          }, { status: 400 });\r\n        }\r\n        \r\n        if (threshold.good >= threshold.needsImprovement) {\r\n          return NextResponse.json({\r\n            success: false,\r\n            error: `For ${metric}, 'good' threshold must be less than 'needsImprovement' threshold`\r\n          }, { status: 400 });\r\n        }\r\n      }\r\n    }\r\n\r\n    // Actualizar configuraci\xF3n\r\n    enhancedSEOOptimizationTools.configure({\r\n      coreWebVitalsThresholds: thresholds\r\n    });\r\n\r\n    logger.info(LogLevel.INFO, 'Core Web Vitals thresholds updated', {\r\n      updatedMetrics: Object.keys(thresholds)\r\n    }, LogCategory.SEO);\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: {\r\n        message: 'Core Web Vitals thresholds updated successfully',\r\n        updatedThresholds: thresholds,\r\n        timestamp: new Date().toISOString()\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    logger.error(LogLevel.ERROR, 'Core Web Vitals API PUT error', error as Error, LogCategory.SEO);\r\n    \r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Failed to update thresholds',\r\n      details: error instanceof Error ? error.message : 'Unknown error'\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n// ===================================\r\n// DELETE - Resetear umbrales a valores por defecto\r\n// ===================================\r\nexport async function DELETE(request: NextRequest) {\r\n  try {\r\n    // Resetear a configuraci\xF3n por defecto\r\n    enhancedSEOOptimizationTools.configure({\r\n      coreWebVitalsThresholds: {\r\n        lcp: { good: 2.5, needsImprovement: 4.0 },\r\n        fid: { good: 100, needsImprovement: 300 },\r\n        cls: { good: 0.1, needsImprovement: 0.25 },\r\n        fcp: { good: 1.8, needsImprovement: 3.0 },\r\n        ttfb: { good: 600, needsImprovement: 1500 },\r\n        inp: { good: 200, needsImprovement: 500 }\r\n      }\r\n    });\r\n\r\n    logger.info(LogLevel.INFO, 'Core Web Vitals thresholds reset to defaults', {}, LogCategory.SEO);\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: {\r\n        message: 'Core Web Vitals thresholds reset to default values',\r\n        defaultThresholds: {\r\n          lcp: { good: 2.5, needsImprovement: 4.0 },\r\n          fid: { good: 100, needsImprovement: 300 },\r\n          cls: { good: 0.1, needsImprovement: 0.25 },\r\n          fcp: { good: 1.8, needsImprovement: 3.0 },\r\n          ttfb: { good: 600, needsImprovement: 1500 },\r\n          inp: { good: 200, needsImprovement: 500 }\r\n        },\r\n        timestamp: new Date().toISOString()\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    logger.error(LogLevel.ERROR, 'Core Web Vitals API DELETE error', error as Error, LogCategory.SEO);\r\n    \r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Failed to reset thresholds',\r\n      details: error instanceof Error ? error.message : 'Unknown error'\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n// ===================================\r\n// OPCIONES CORS\r\n// ===================================\r\nexport async function OPTIONS(request: NextRequest) {\r\n  const origin = request.headers.get('origin');\r\n  const corsHeaders = generateCorsHeaders(origin, 'public');\r\n  \r\n  return new NextResponse(null, {\r\n    status: 200,\r\n    headers: corsHeaders,\r\n  });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["DELETE", "GET", "OPTIONS", "POST", "PUT", "runtime", "request", "searchParams", "URL", "url", "get", "NextResponse", "json", "success", "data", "message", "description", "usage", "metrics", "LCP", "FID", "CLS", "FCP", "TTFB", "INP", "thresholds", "good", "needsImprovement", "poor", "analysis", "enhancedSEOOptimizationTools", "analyzeCoreWebVitals", "logger", "info", "LogLevel", "INFO", "overallScore", "LogCategory", "SEO", "error", "ERROR", "details", "Error", "status", "body", "urls", "options", "Array", "isArray", "length", "example", "includeOptimizations", "priorityOnly", "results", "errors", "result", "optimizations", "filter", "opt", "priority", "resultWithoutOptimizations", "push", "totalUrls", "successfulAnalyses", "summary", "successful", "failed", "averageScore", "Math", "round", "reduce", "sum", "r", "lcp", "fid", "cls", "fcp", "ttfb", "inp", "requiredMetrics", "metric", "threshold", "configure", "coreWebVitalsThresholds", "updatedMetrics", "Object", "keys", "updatedThresholds", "timestamp", "Date", "toISOString", "defaultThresholds", "origin", "headers", "corsHeaders", "generateCorsHeaders"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "fa6c9af6d326986e417d53dcc7a99ea078e21266"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_invfiu2rl = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_invfiu2rl();
cov_invfiu2rl().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_invfiu2rl().f[0]++;
  cov_invfiu2rl().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_invfiu2rl().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_invfiu2rl().s[3]++;
_export(exports, {
  get DELETE() {
    /* istanbul ignore next */
    cov_invfiu2rl().f[1]++;
    cov_invfiu2rl().s[4]++;
    return DELETE;
  },
  get GET() {
    /* istanbul ignore next */
    cov_invfiu2rl().f[2]++;
    cov_invfiu2rl().s[5]++;
    return GET;
  },
  get OPTIONS() {
    /* istanbul ignore next */
    cov_invfiu2rl().f[3]++;
    cov_invfiu2rl().s[6]++;
    return OPTIONS;
  },
  get POST() {
    /* istanbul ignore next */
    cov_invfiu2rl().f[4]++;
    cov_invfiu2rl().s[7]++;
    return POST;
  },
  get PUT() {
    /* istanbul ignore next */
    cov_invfiu2rl().f[5]++;
    cov_invfiu2rl().s[8]++;
    return PUT;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_invfiu2rl().f[6]++;
    cov_invfiu2rl().s[9]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_invfiu2rl().s[10]++, require("next/server"));
const _seooptimizationtools =
/* istanbul ignore next */
(cov_invfiu2rl().s[11]++, require("../../../../lib/seo/seo-optimization-tools"));
const _logger =
/* istanbul ignore next */
(cov_invfiu2rl().s[12]++, require("../../../../lib/enterprise/logger"));
const _corsconfig =
/* istanbul ignore next */
(cov_invfiu2rl().s[13]++, require("../../../../lib/security/cors-config"));
const runtime =
/* istanbul ignore next */
(cov_invfiu2rl().s[14]++, 'nodejs');
async function GET(request) {
  /* istanbul ignore next */
  cov_invfiu2rl().f[7]++;
  cov_invfiu2rl().s[15]++;
  try {
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_invfiu2rl().s[16]++, new URL(request.url));
    const url =
    /* istanbul ignore next */
    (cov_invfiu2rl().s[17]++, searchParams.get('url'));
    /* istanbul ignore next */
    cov_invfiu2rl().s[18]++;
    if (!url) {
      /* istanbul ignore next */
      cov_invfiu2rl().b[0][0]++;
      cov_invfiu2rl().s[19]++;
      return _server.NextResponse.json({
        success: true,
        data: {
          message: 'Core Web Vitals Analysis API',
          description: 'Analyze and optimize Core Web Vitals metrics',
          usage: {
            'GET ?url=https://example.com': 'Analyze Core Web Vitals for specific URL',
            'POST': 'Batch analyze multiple URLs',
            'PUT': 'Update Core Web Vitals thresholds'
          },
          metrics: {
            LCP: 'Largest Contentful Paint - measures loading performance',
            FID: 'First Input Delay - measures interactivity',
            CLS: 'Cumulative Layout Shift - measures visual stability',
            FCP: 'First Contentful Paint - measures perceived loading speed',
            TTFB: 'Time to First Byte - measures server response time',
            INP: 'Interaction to Next Paint - measures responsiveness'
          },
          thresholds: {
            good: 'Green zone - optimal performance',
            needsImprovement: 'Yellow zone - needs optimization',
            poor: 'Red zone - critical issues'
          }
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_invfiu2rl().b[0][1]++;
    }
    // Analizar Core Web Vitals para la URL especÃ­fica
    const analysis =
    /* istanbul ignore next */
    (cov_invfiu2rl().s[20]++, await _seooptimizationtools.enhancedSEOOptimizationTools.analyzeCoreWebVitals(url));
    /* istanbul ignore next */
    cov_invfiu2rl().s[21]++;
    _logger.logger.info(_logger.LogLevel.INFO, 'Core Web Vitals analysis completed', {
      url,
      overallScore: analysis.overallScore
    }, _logger.LogCategory.SEO);
    /* istanbul ignore next */
    cov_invfiu2rl().s[22]++;
    return _server.NextResponse.json({
      success: true,
      data: analysis
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_invfiu2rl().s[23]++;
    _logger.logger.error(_logger.LogLevel.ERROR, 'Core Web Vitals API GET error', error, _logger.LogCategory.SEO);
    /* istanbul ignore next */
    cov_invfiu2rl().s[24]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Failed to analyze Core Web Vitals',
      details: error instanceof Error ?
      /* istanbul ignore next */
      (cov_invfiu2rl().b[1][0]++, error.message) :
      /* istanbul ignore next */
      (cov_invfiu2rl().b[1][1]++, 'Unknown error')
    }, {
      status: 500
    });
  }
}
async function POST(request) {
  /* istanbul ignore next */
  cov_invfiu2rl().f[8]++;
  cov_invfiu2rl().s[25]++;
  try {
    const body =
    /* istanbul ignore next */
    (cov_invfiu2rl().s[26]++, await request.json());
    const {
      urls,
      options
    } =
    /* istanbul ignore next */
    (cov_invfiu2rl().s[27]++, body);
    // Validar parÃ¡metros
    /* istanbul ignore next */
    cov_invfiu2rl().s[28]++;
    if (
    /* istanbul ignore next */
    (cov_invfiu2rl().b[3][0]++, !urls) ||
    /* istanbul ignore next */
    (cov_invfiu2rl().b[3][1]++, !Array.isArray(urls)) ||
    /* istanbul ignore next */
    (cov_invfiu2rl().b[3][2]++, urls.length === 0)) {
      /* istanbul ignore next */
      cov_invfiu2rl().b[2][0]++;
      cov_invfiu2rl().s[29]++;
      return _server.NextResponse.json({
        success: false,
        error: 'urls array is required and must not be empty',
        example: {
          urls: ['https://pinteya.com', 'https://pinteya.com/products/pintura-interior', 'https://pinteya.com/categories/pinturas'],
          options: {
            includeOptimizations: true,
            priorityOnly: false
          }
        }
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_invfiu2rl().b[2][1]++;
    }
    // Limitar nÃºmero de URLs para evitar sobrecarga
    cov_invfiu2rl().s[30]++;
    if (urls.length > 10) {
      /* istanbul ignore next */
      cov_invfiu2rl().b[4][0]++;
      cov_invfiu2rl().s[31]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Maximum 10 URLs allowed per batch request'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_invfiu2rl().b[4][1]++;
    }
    const results =
    /* istanbul ignore next */
    (cov_invfiu2rl().s[32]++, []);
    const errors =
    /* istanbul ignore next */
    (cov_invfiu2rl().s[33]++, []);
    // Analizar cada URL
    /* istanbul ignore next */
    cov_invfiu2rl().s[34]++;
    for (const url of urls) {
      /* istanbul ignore next */
      cov_invfiu2rl().s[35]++;
      try {
        const analysis =
        /* istanbul ignore next */
        (cov_invfiu2rl().s[36]++, await _seooptimizationtools.enhancedSEOOptimizationTools.analyzeCoreWebVitals(url));
        // Filtrar resultados segÃºn opciones
        let result =
        /* istanbul ignore next */
        (cov_invfiu2rl().s[37]++, analysis);
        /* istanbul ignore next */
        cov_invfiu2rl().s[38]++;
        if (options?.priorityOnly) {
          /* istanbul ignore next */
          cov_invfiu2rl().b[5][0]++;
          cov_invfiu2rl().s[39]++;
          result = {
            ...analysis,
            optimizations: analysis.optimizations.filter(opt => {
              /* istanbul ignore next */
              cov_invfiu2rl().f[9]++;
              cov_invfiu2rl().s[40]++;
              return /* istanbul ignore next */(cov_invfiu2rl().b[6][0]++, opt.priority === 'critical') ||
              /* istanbul ignore next */
              (cov_invfiu2rl().b[6][1]++, opt.priority === 'high');
            })
          };
        } else
        /* istanbul ignore next */
        {
          cov_invfiu2rl().b[5][1]++;
        }
        cov_invfiu2rl().s[41]++;
        if (!options?.includeOptimizations) {
          /* istanbul ignore next */
          cov_invfiu2rl().b[7][0]++;
          const {
            optimizations,
            ...resultWithoutOptimizations
          } =
          /* istanbul ignore next */
          (cov_invfiu2rl().s[42]++, result);
          /* istanbul ignore next */
          cov_invfiu2rl().s[43]++;
          result = resultWithoutOptimizations;
        } else
        /* istanbul ignore next */
        {
          cov_invfiu2rl().b[7][1]++;
        }
        cov_invfiu2rl().s[44]++;
        results.push(result);
      } catch (error) {
        /* istanbul ignore next */
        cov_invfiu2rl().s[45]++;
        errors.push({
          url,
          error: error instanceof Error ?
          /* istanbul ignore next */
          (cov_invfiu2rl().b[8][0]++, error.message) :
          /* istanbul ignore next */
          (cov_invfiu2rl().b[8][1]++, 'Unknown error')
        });
      }
    }
    /* istanbul ignore next */
    cov_invfiu2rl().s[46]++;
    _logger.logger.info(_logger.LogLevel.INFO, 'Batch Core Web Vitals analysis completed', {
      totalUrls: urls.length,
      successfulAnalyses: results.length,
      errors: errors.length
    }, _logger.LogCategory.SEO);
    /* istanbul ignore next */
    cov_invfiu2rl().s[47]++;
    return _server.NextResponse.json({
      success: true,
      data: {
        results,
        errors,
        summary: {
          totalUrls: urls.length,
          successful: results.length,
          failed: errors.length,
          averageScore: results.length > 0 ?
          /* istanbul ignore next */
          (cov_invfiu2rl().b[9][0]++, Math.round(results.reduce((sum, r) => {
            /* istanbul ignore next */
            cov_invfiu2rl().f[10]++;
            cov_invfiu2rl().s[48]++;
            return sum + r.overallScore;
          }, 0) / results.length)) :
          /* istanbul ignore next */
          (cov_invfiu2rl().b[9][1]++, 0)
        }
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_invfiu2rl().s[49]++;
    _logger.logger.error(_logger.LogLevel.ERROR, 'Core Web Vitals API POST error', error, _logger.LogCategory.SEO);
    /* istanbul ignore next */
    cov_invfiu2rl().s[50]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Failed to perform batch analysis',
      details: error instanceof Error ?
      /* istanbul ignore next */
      (cov_invfiu2rl().b[10][0]++, error.message) :
      /* istanbul ignore next */
      (cov_invfiu2rl().b[10][1]++, 'Unknown error')
    }, {
      status: 500
    });
  }
}
async function PUT(request) {
  /* istanbul ignore next */
  cov_invfiu2rl().f[11]++;
  cov_invfiu2rl().s[51]++;
  try {
    const body =
    /* istanbul ignore next */
    (cov_invfiu2rl().s[52]++, await request.json());
    const {
      thresholds
    } =
    /* istanbul ignore next */
    (cov_invfiu2rl().s[53]++, body);
    /* istanbul ignore next */
    cov_invfiu2rl().s[54]++;
    if (
    /* istanbul ignore next */
    (cov_invfiu2rl().b[12][0]++, !thresholds) ||
    /* istanbul ignore next */
    (cov_invfiu2rl().b[12][1]++, typeof thresholds !== 'object')) {
      /* istanbul ignore next */
      cov_invfiu2rl().b[11][0]++;
      cov_invfiu2rl().s[55]++;
      return _server.NextResponse.json({
        success: false,
        error: 'thresholds object is required',
        example: {
          thresholds: {
            lcp: {
              good: 2.5,
              needsImprovement: 4.0
            },
            fid: {
              good: 100,
              needsImprovement: 300
            },
            cls: {
              good: 0.1,
              needsImprovement: 0.25
            },
            fcp: {
              good: 1.8,
              needsImprovement: 3.0
            },
            ttfb: {
              good: 600,
              needsImprovement: 1500
            },
            inp: {
              good: 200,
              needsImprovement: 500
            }
          }
        }
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_invfiu2rl().b[11][1]++;
    }
    // Validar estructura de umbrales
    const requiredMetrics =
    /* istanbul ignore next */
    (cov_invfiu2rl().s[56]++, ['lcp', 'fid', 'cls', 'fcp', 'ttfb', 'inp']);
    /* istanbul ignore next */
    cov_invfiu2rl().s[57]++;
    for (const metric of requiredMetrics) {
      /* istanbul ignore next */
      cov_invfiu2rl().s[58]++;
      if (thresholds[metric]) {
        /* istanbul ignore next */
        cov_invfiu2rl().b[13][0]++;
        const threshold =
        /* istanbul ignore next */
        (cov_invfiu2rl().s[59]++, thresholds[metric]);
        /* istanbul ignore next */
        cov_invfiu2rl().s[60]++;
        if (
        /* istanbul ignore next */
        (cov_invfiu2rl().b[15][0]++, !threshold.good) ||
        /* istanbul ignore next */
        (cov_invfiu2rl().b[15][1]++, !threshold.needsImprovement)) {
          /* istanbul ignore next */
          cov_invfiu2rl().b[14][0]++;
          cov_invfiu2rl().s[61]++;
          return _server.NextResponse.json({
            success: false,
            error: `Threshold for ${metric} must have 'good' and 'needsImprovement' values`
          }, {
            status: 400
          });
        } else
        /* istanbul ignore next */
        {
          cov_invfiu2rl().b[14][1]++;
        }
        cov_invfiu2rl().s[62]++;
        if (threshold.good >= threshold.needsImprovement) {
          /* istanbul ignore next */
          cov_invfiu2rl().b[16][0]++;
          cov_invfiu2rl().s[63]++;
          return _server.NextResponse.json({
            success: false,
            error: `For ${metric}, 'good' threshold must be less than 'needsImprovement' threshold`
          }, {
            status: 400
          });
        } else
        /* istanbul ignore next */
        {
          cov_invfiu2rl().b[16][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_invfiu2rl().b[13][1]++;
      }
    }
    // Actualizar configuraciÃ³n
    /* istanbul ignore next */
    cov_invfiu2rl().s[64]++;
    _seooptimizationtools.enhancedSEOOptimizationTools.configure({
      coreWebVitalsThresholds: thresholds
    });
    /* istanbul ignore next */
    cov_invfiu2rl().s[65]++;
    _logger.logger.info(_logger.LogLevel.INFO, 'Core Web Vitals thresholds updated', {
      updatedMetrics: Object.keys(thresholds)
    }, _logger.LogCategory.SEO);
    /* istanbul ignore next */
    cov_invfiu2rl().s[66]++;
    return _server.NextResponse.json({
      success: true,
      data: {
        message: 'Core Web Vitals thresholds updated successfully',
        updatedThresholds: thresholds,
        timestamp: new Date().toISOString()
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_invfiu2rl().s[67]++;
    _logger.logger.error(_logger.LogLevel.ERROR, 'Core Web Vitals API PUT error', error, _logger.LogCategory.SEO);
    /* istanbul ignore next */
    cov_invfiu2rl().s[68]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Failed to update thresholds',
      details: error instanceof Error ?
      /* istanbul ignore next */
      (cov_invfiu2rl().b[17][0]++, error.message) :
      /* istanbul ignore next */
      (cov_invfiu2rl().b[17][1]++, 'Unknown error')
    }, {
      status: 500
    });
  }
}
async function DELETE(request) {
  /* istanbul ignore next */
  cov_invfiu2rl().f[12]++;
  cov_invfiu2rl().s[69]++;
  try {
    /* istanbul ignore next */
    cov_invfiu2rl().s[70]++;
    // Resetear a configuraciÃ³n por defecto
    _seooptimizationtools.enhancedSEOOptimizationTools.configure({
      coreWebVitalsThresholds: {
        lcp: {
          good: 2.5,
          needsImprovement: 4.0
        },
        fid: {
          good: 100,
          needsImprovement: 300
        },
        cls: {
          good: 0.1,
          needsImprovement: 0.25
        },
        fcp: {
          good: 1.8,
          needsImprovement: 3.0
        },
        ttfb: {
          good: 600,
          needsImprovement: 1500
        },
        inp: {
          good: 200,
          needsImprovement: 500
        }
      }
    });
    /* istanbul ignore next */
    cov_invfiu2rl().s[71]++;
    _logger.logger.info(_logger.LogLevel.INFO, 'Core Web Vitals thresholds reset to defaults', {}, _logger.LogCategory.SEO);
    /* istanbul ignore next */
    cov_invfiu2rl().s[72]++;
    return _server.NextResponse.json({
      success: true,
      data: {
        message: 'Core Web Vitals thresholds reset to default values',
        defaultThresholds: {
          lcp: {
            good: 2.5,
            needsImprovement: 4.0
          },
          fid: {
            good: 100,
            needsImprovement: 300
          },
          cls: {
            good: 0.1,
            needsImprovement: 0.25
          },
          fcp: {
            good: 1.8,
            needsImprovement: 3.0
          },
          ttfb: {
            good: 600,
            needsImprovement: 1500
          },
          inp: {
            good: 200,
            needsImprovement: 500
          }
        },
        timestamp: new Date().toISOString()
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_invfiu2rl().s[73]++;
    _logger.logger.error(_logger.LogLevel.ERROR, 'Core Web Vitals API DELETE error', error, _logger.LogCategory.SEO);
    /* istanbul ignore next */
    cov_invfiu2rl().s[74]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Failed to reset thresholds',
      details: error instanceof Error ?
      /* istanbul ignore next */
      (cov_invfiu2rl().b[18][0]++, error.message) :
      /* istanbul ignore next */
      (cov_invfiu2rl().b[18][1]++, 'Unknown error')
    }, {
      status: 500
    });
  }
}
async function OPTIONS(request) {
  /* istanbul ignore next */
  cov_invfiu2rl().f[13]++;
  const origin =
  /* istanbul ignore next */
  (cov_invfiu2rl().s[75]++, request.headers.get('origin'));
  const corsHeaders =
  /* istanbul ignore next */
  (cov_invfiu2rl().s[76]++, (0, _corsconfig.generateCorsHeaders)(origin, 'public'));
  /* istanbul ignore next */
  cov_invfiu2rl().s[77]++;
  return new _server.NextResponse(null, {
    status: 200,
    headers: corsHeaders
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,