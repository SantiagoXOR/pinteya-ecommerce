{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\admin\\products\\ProductVariantManager.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState } from 'react';\r\nimport { AdminCard } from '../ui/AdminCard';\r\nimport { Plus, X, Edit, Trash2, Palette, Package } from 'lucide-react';\r\nimport { cn } from '@/lib/core/utils';\r\n\r\ninterface ProductVariant {\r\n  name: string;\r\n  options: string[];\r\n}\r\n\r\ninterface ProductVariantManagerProps {\r\n  variants: ProductVariant[];\r\n  onChange: (variants: ProductVariant[]) => void;\r\n  error?: string;\r\n  className?: string;\r\n}\r\n\r\nexport function ProductVariantManager({\r\n  variants = [],\r\n  onChange,\r\n  error,\r\n  className\r\n}: ProductVariantManagerProps) {\r\n  const [editingVariant, setEditingVariant] = useState<number | null>(null);\r\n  const [newVariantName, setNewVariantName] = useState('');\r\n  const [newOption, setNewOption] = useState('');\r\n\r\n  // Predefined variant types\r\n  const variantTypes = [\r\n    { name: 'Color', icon: Palette, options: ['Blanco', 'Negro', 'Rojo', 'Azul', 'Verde'] },\r\n    { name: 'Tamaño', icon: Package, options: ['XS', 'S', 'M', 'L', 'XL'] },\r\n    { name: 'Material', icon: Package, options: ['Algodón', 'Poliéster', 'Lana', 'Seda'] },\r\n    { name: 'Capacidad', icon: Package, options: ['1L', '4L', '10L', '20L'] },\r\n  ];\r\n\r\n  // Add new variant\r\n  const addVariant = (name: string, initialOptions: string[] = []) => {\r\n    const newVariant: ProductVariant = {\r\n      name,\r\n      options: initialOptions,\r\n    };\r\n    onChange([...variants, newVariant]);\r\n    setNewVariantName('');\r\n  };\r\n\r\n  // Remove variant\r\n  const removeVariant = (index: number) => {\r\n    const newVariants = variants.filter((_, i) => i !== index);\r\n    onChange(newVariants);\r\n  };\r\n\r\n  // Update variant name\r\n  const updateVariantName = (index: number, name: string) => {\r\n    const newVariants = [...variants];\r\n    newVariants[index] = { ...newVariants[index], name };\r\n    onChange(newVariants);\r\n  };\r\n\r\n  // Add option to variant\r\n  const addOption = (variantIndex: number, option: string) => {\r\n    if (!option.trim()) {return;}\r\n    \r\n    const newVariants = [...variants];\r\n    const variant = newVariants[variantIndex];\r\n    \r\n    if (!variant.options.includes(option.trim())) {\r\n      variant.options.push(option.trim());\r\n      onChange(newVariants);\r\n    }\r\n    \r\n    setNewOption('');\r\n  };\r\n\r\n  // Remove option from variant\r\n  const removeOption = (variantIndex: number, optionIndex: number) => {\r\n    const newVariants = [...variants];\r\n    newVariants[variantIndex].options.splice(optionIndex, 1);\r\n    onChange(newVariants);\r\n  };\r\n\r\n  // Generate variant combinations\r\n  const generateCombinations = () => {\r\n    if (variants.length === 0) {return [];}\r\n    \r\n    const combinations: string[][] = [[]];\r\n    \r\n    variants.forEach(variant => {\r\n      const newCombinations: string[][] = [];\r\n      combinations.forEach(combination => {\r\n        variant.options.forEach(option => {\r\n          newCombinations.push([...combination, option]);\r\n        });\r\n      });\r\n      combinations.length = 0;\r\n      combinations.push(...newCombinations);\r\n    });\r\n    \r\n    return combinations;\r\n  };\r\n\r\n  const combinations = generateCombinations();\r\n\r\n  return (\r\n    <div className={cn(\"space-y-6\", className)}>\r\n      <AdminCard title=\"Gestión de Variantes\" className=\"p-6\">\r\n        <div className=\"space-y-6\">\r\n          {/* Info */}\r\n          <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\r\n            <h5 className=\"text-sm font-medium text-blue-800 mb-2\">\r\n              ¿Qué son las variantes?\r\n            </h5>\r\n            <p className=\"text-xs text-blue-700\">\r\n              Las variantes permiten ofrecer el mismo producto en diferentes opciones como color, tamaño, material, etc. \r\n              Cada combinación de variantes creará un producto único con su propio precio y stock.\r\n            </p>\r\n          </div>\r\n\r\n          {/* Quick Add Variants */}\r\n          <div>\r\n            <h4 className=\"text-sm font-medium text-gray-900 mb-3\">\r\n              Tipos de Variantes Comunes\r\n            </h4>\r\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-3\">\r\n              {variantTypes.map((type, index) => {\r\n                const Icon = type.icon;\r\n                const exists = variants.some(v => v.name.toLowerCase() === type.name.toLowerCase());\r\n                \r\n                return (\r\n                  <button\r\n                    key={index}\r\n                    type=\"button\"\r\n                    onClick={() => !exists && addVariant(type.name, type.options)}\r\n                    disabled={exists}\r\n                    className={cn(\r\n                      \"p-3 border rounded-lg text-left transition-colors\",\r\n                      exists \r\n                        ? \"border-gray-200 bg-gray-50 text-gray-400 cursor-not-allowed\"\r\n                        : \"border-gray-300 hover:border-blaze-orange-300 hover:bg-blaze-orange-50\"\r\n                    )}\r\n                  >\r\n                    <Icon className=\"w-5 h-5 mb-2\" />\r\n                    <div className=\"text-sm font-medium\">{type.name}</div>\r\n                    <div className=\"text-xs text-gray-500\">\r\n                      {exists ? 'Ya agregado' : `${type.options.length} opciones`}\r\n                    </div>\r\n                  </button>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Custom Variant */}\r\n          <div>\r\n            <h4 className=\"text-sm font-medium text-gray-900 mb-3\">\r\n              Agregar Variante Personalizada\r\n            </h4>\r\n            <div className=\"flex space-x-3\">\r\n              <input\r\n                type=\"text\"\r\n                value={newVariantName}\r\n                onChange={(e) => setNewVariantName(e.target.value)}\r\n                placeholder=\"Nombre de la variante (ej: Acabado)\"\r\n                className=\"flex-1 px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blaze-orange-500 focus:border-transparent\"\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => newVariantName.trim() && addVariant(newVariantName.trim())}\r\n                disabled={!newVariantName.trim()}\r\n                className=\"px-4 py-2 bg-blaze-orange-600 text-white rounded-lg hover:bg-blaze-orange-700 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n              >\r\n                <Plus className=\"w-4 h-4\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Error Message */}\r\n          {error && (\r\n            <div className=\"text-red-600 text-sm\">\r\n              {error instanceof Error ? error.message : String(error) || 'Ha ocurrido un error'}\r\n            </div>\r\n          )}\r\n\r\n          {/* Existing Variants */}\r\n          {variants.length > 0 && (\r\n            <div className=\"space-y-4\">\r\n              <h4 className=\"text-sm font-medium text-gray-900\">\r\n                Variantes Configuradas ({variants.length})\r\n              </h4>\r\n              \r\n              {variants.map((variant, variantIndex) => (\r\n                <div key={variantIndex} className=\"border border-gray-200 rounded-lg p-4\">\r\n                  <div className=\"flex items-center justify-between mb-3\">\r\n                    {editingVariant === variantIndex ? (\r\n                      <div className=\"flex items-center space-x-2 flex-1\">\r\n                        <input\r\n                          type=\"text\"\r\n                          value={variant.name}\r\n                          onChange={(e) => updateVariantName(variantIndex, e.target.value)}\r\n                          className=\"flex-1 px-3 py-1 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blaze-orange-500\"\r\n                        />\r\n                        <button\r\n                          type=\"button\"\r\n                          onClick={() => setEditingVariant(null)}\r\n                          className=\"text-green-600 hover:text-green-700\"\r\n                        >\r\n                          ✓\r\n                        </button>\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        <h5 className=\"font-medium text-gray-900\">{variant.name}</h5>\r\n                        <button\r\n                          type=\"button\"\r\n                          onClick={() => setEditingVariant(variantIndex)}\r\n                          className=\"text-gray-400 hover:text-gray-600\"\r\n                        >\r\n                          <Edit className=\"w-4 h-4\" />\r\n                        </button>\r\n                      </div>\r\n                    )}\r\n                    \r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => removeVariant(variantIndex)}\r\n                      className=\"text-red-500 hover:text-red-700\"\r\n                    >\r\n                      <Trash2 className=\"w-4 h-4\" />\r\n                    </button>\r\n                  </div>\r\n\r\n                  {/* Options */}\r\n                  <div className=\"space-y-3\">\r\n                    <div className=\"flex flex-wrap gap-2\">\r\n                      {variant.options.map((option, optionIndex) => (\r\n                        <span\r\n                          key={optionIndex}\r\n                          className=\"inline-flex items-center space-x-1 px-3 py-1 bg-gray-100 text-gray-800 rounded-full text-sm\"\r\n                        >\r\n                          <span>{option}</span>\r\n                          <button\r\n                            type=\"button\"\r\n                            onClick={() => removeOption(variantIndex, optionIndex)}\r\n                            className=\"text-gray-500 hover:text-red-500\"\r\n                          >\r\n                            <X className=\"w-3 h-3\" />\r\n                          </button>\r\n                        </span>\r\n                      ))}\r\n                    </div>\r\n\r\n                    {/* Add Option */}\r\n                    <div className=\"flex space-x-2\">\r\n                      <input\r\n                        type=\"text\"\r\n                        value={newOption}\r\n                        onChange={(e) => setNewOption(e.target.value)}\r\n                        placeholder={`Nueva opción para ${variant.name}`}\r\n                        className=\"flex-1 px-3 py-1 text-sm border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blaze-orange-500\"\r\n                        onKeyPress={(e) => {\r\n                          if (e.key === 'Enter') {\r\n                            addOption(variantIndex, newOption);\r\n                          }\r\n                        }}\r\n                      />\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() => addOption(variantIndex, newOption)}\r\n                        disabled={!newOption.trim()}\r\n                        className=\"px-3 py-1 text-sm bg-gray-200 text-gray-700 rounded hover:bg-gray-300 disabled:opacity-50\"\r\n                      >\r\n                        Agregar\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n\r\n          {/* Variant Combinations Preview */}\r\n          {combinations.length > 0 && (\r\n            <div className=\"space-y-3\">\r\n              <h4 className=\"text-sm font-medium text-gray-900\">\r\n                Combinaciones Generadas ({combinations.length})\r\n              </h4>\r\n              \r\n              {combinations.length <= 20 ? (\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2 max-h-40 overflow-y-auto\">\r\n                  {combinations.map((combination, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className=\"px-3 py-2 bg-gray-50 rounded text-sm text-gray-700\"\r\n                    >\r\n                      {combination.join(' / ')}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              ) : (\r\n                <div className=\"p-4 bg-yellow-50 border border-yellow-200 rounded-lg\">\r\n                  <p className=\"text-sm text-yellow-800\">\r\n                    Se generarán {combinations.length} combinaciones. \r\n                    Considera reducir las opciones si es demasiado complejo de gestionar.\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n          {/* Tips */}\r\n          {variants.length === 0 && (\r\n            <div className=\"text-center py-8 text-gray-500\">\r\n              <Package className=\"w-12 h-12 mx-auto mb-4 text-gray-300\" />\r\n              <p className=\"text-sm\">\r\n                No hay variantes configuradas. Agrega variantes si tu producto tiene diferentes opciones.\r\n              </p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </AdminCard>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["ProductVariantManager","variants","onChange","error","className","editingVariant","setEditingVariant","useState","newVariantName","setNewVariantName","newOption","setNewOption","variantTypes","name","icon","Palette","options","Package","addVariant","initialOptions","newVariant","removeVariant","index","newVariants","filter","_","i","updateVariantName","addOption","variantIndex","option","trim","variant","includes","push","removeOption","optionIndex","splice","generateCombinations","length","combinations","forEach","newCombinations","combination","div","cn","AdminCard","title","h5","p","h4","map","type","Icon","exists","some","v","toLowerCase","button","onClick","disabled","input","value","e","target","placeholder","Plus","Error","message","String","Edit","Trash2","span","X","onKeyPress","key","join"],"mappings":"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"}