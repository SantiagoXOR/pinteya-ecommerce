5cad45855433bf93985b2e06d621abbb
// =====================================================
// UTILIDADES: FORMATEO DE DATOS
// DescripciÃ³n: Funciones para formatear fechas, nÃºmeros, monedas, etc.
// Basado en: Intl API + date-fns + patrones enterprise
// =====================================================
"use strict";

/* istanbul ignore next */
function cov_1jmld52f8l() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\utils\\format.ts";
  var hash = "bf00b5cad0872bb653f42077ab1c38a88a779a21";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\utils\\format.ts",
    statementMap: {
      "0": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 9,
          column: 3
        }
      },
      "1": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 14,
          column: 7
        }
      },
      "2": {
        start: {
          line: 11,
          column: 24
        },
        end: {
          line: 14,
          column: 7
        }
      },
      "3": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 68,
          column: 3
        }
      },
      "4": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 31
        }
      },
      "5": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 29
        }
      },
      "6": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 33
        }
      },
      "7": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 30
        }
      },
      "8": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 26
        }
      },
      "9": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 30
        }
      },
      "10": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 30
        }
      },
      "11": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 30
        }
      },
      "12": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 28
        }
      },
      "13": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 33
        }
      },
      "14": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 32
        }
      },
      "15": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 33
        }
      },
      "16": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 34
        }
      },
      "17": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 36
        }
      },
      "18": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 26
        }
      },
      "19": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 29
        }
      },
      "20": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 28
        }
      },
      "21": {
        start: {
          line: 69,
          column: 26
        },
        end: {
          line: 69,
          column: 57
        }
      },
      "22": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 89,
          column: 5
        }
      },
      "23": {
        start: {
          line: 72,
          column: 24
        },
        end: {
          line: 72,
          column: 72
        }
      },
      "24": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 75,
          column: 9
        }
      },
      "25": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 36
        }
      },
      "26": {
        start: {
          line: 77,
          column: 20
        },
        end: {
          line: 77,
          column: 65
        }
      },
      "27": {
        start: {
          line: 78,
          column: 22
        },
        end: {
          line: 78,
          column: 74
        }
      },
      "28": {
        start: {
          line: 79,
          column: 21
        },
        end: {
          line: 79,
          column: 42
        }
      },
      "29": {
        start: {
          line: 80,
          column: 22
        },
        end: {
          line: 80,
          column: 68
        }
      },
      "30": {
        start: {
          line: 81,
          column: 24
        },
        end: {
          line: 81,
          column: 72
        }
      },
      "31": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 84,
          column: 9
        }
      },
      "32": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 65
        }
      },
      "33": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 41
        }
      },
      "34": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 87,
          column: 55
        }
      },
      "35": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 88,
          column: 32
        }
      },
      "36": {
        start: {
          line: 92,
          column: 4
        },
        end: {
          line: 92,
          column: 48
        }
      },
      "37": {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 127,
          column: 5
        }
      },
      "38": {
        start: {
          line: 96,
          column: 24
        },
        end: {
          line: 96,
          column: 95
        }
      },
      "39": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 99,
          column: 9
        }
      },
      "40": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 98,
          column: 36
        }
      },
      "41": {
        start: {
          line: 101,
          column: 20
        },
        end: {
          line: 101,
          column: 30
        }
      },
      "42": {
        start: {
          line: 102,
          column: 30
        },
        end: {
          line: 102,
          column: 84
        }
      },
      "43": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 105,
          column: 9
        }
      },
      "44": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 45
        }
      },
      "45": {
        start: {
          line: 106,
          column: 30
        },
        end: {
          line: 106,
          column: 60
        }
      },
      "46": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 109,
          column: 9
        }
      },
      "47": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 81
        }
      },
      "48": {
        start: {
          line: 110,
          column: 28
        },
        end: {
          line: 110,
          column: 58
        }
      },
      "49": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 113,
          column: 9
        }
      },
      "50": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 112,
          column: 75
        }
      },
      "51": {
        start: {
          line: 114,
          column: 27
        },
        end: {
          line: 114,
          column: 55
        }
      },
      "52": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 117,
          column: 9
        }
      },
      "53": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 72
        }
      },
      "54": {
        start: {
          line: 118,
          column: 29
        },
        end: {
          line: 118,
          column: 56
        }
      },
      "55": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 121,
          column: 9
        }
      },
      "56": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 120,
          column: 77
        }
      },
      "57": {
        start: {
          line: 122,
          column: 28
        },
        end: {
          line: 122,
          column: 57
        }
      },
      "58": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 123,
          column: 70
        }
      },
      "59": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 125,
          column: 59
        }
      },
      "60": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 126,
          column: 32
        }
      },
      "61": {
        start: {
          line: 130,
          column: 4
        },
        end: {
          line: 130,
          column: 31
        }
      },
      "62": {
        start: {
          line: 133,
          column: 4
        },
        end: {
          line: 143,
          column: 5
        }
      },
      "63": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 139,
          column: 26
        }
      },
      "64": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 141,
          column: 59
        }
      },
      "65": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 142,
          column: 39
        }
      },
      "66": {
        start: {
          line: 146,
          column: 4
        },
        end: {
          line: 151,
          column: 5
        }
      },
      "67": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 147,
          column: 69
        }
      },
      "68": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 149,
          column: 57
        }
      },
      "69": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 150,
          column: 33
        }
      },
      "70": {
        start: {
          line: 154,
          column: 4
        },
        end: {
          line: 163,
          column: 5
        }
      },
      "71": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 159,
          column: 31
        }
      },
      "72": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 161,
          column: 61
        }
      },
      "73": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 162,
          column: 45
        }
      },
      "74": {
        start: {
          line: 167,
          column: 20
        },
        end: {
          line: 167,
          column: 44
        }
      },
      "75": {
        start: {
          line: 168,
          column: 4
        },
        end: {
          line: 174,
          column: 5
        }
      },
      "76": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 170,
          column: 68
        }
      },
      "77": {
        start: {
          line: 171,
          column: 11
        },
        end: {
          line: 174,
          column: 5
        }
      },
      "78": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 173,
          column: 89
        }
      },
      "79": {
        start: {
          line: 175,
          column: 4
        },
        end: {
          line: 175,
          column: 17
        }
      },
      "80": {
        start: {
          line: 178,
          column: 18
        },
        end: {
          line: 185,
          column: 21
        }
      },
      "81": {
        start: {
          line: 186,
          column: 4
        },
        end: {
          line: 186,
          column: 28
        }
      },
      "82": {
        start: {
          line: 189,
          column: 4
        },
        end: {
          line: 191,
          column: 5
        }
      },
      "83": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 190,
          column: 20
        }
      },
      "84": {
        start: {
          line: 192,
          column: 4
        },
        end: {
          line: 192,
          column: 52
        }
      },
      "85": {
        start: {
          line: 195,
          column: 4
        },
        end: {
          line: 197,
          column: 5
        }
      },
      "86": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 196,
          column: 18
        }
      },
      "87": {
        start: {
          line: 198,
          column: 4
        },
        end: {
          line: 198,
          column: 70
        }
      },
      "88": {
        start: {
          line: 201,
          column: 4
        },
        end: {
          line: 205,
          column: 12
        }
      },
      "89": {
        start: {
          line: 208,
          column: 22
        },
        end: {
          line: 245,
          column: 5
        }
      },
      "90": {
        start: {
          line: 246,
          column: 4
        },
        end: {
          line: 249,
          column: 6
        }
      },
      "91": {
        start: {
          line: 252,
          column: 22
        },
        end: {
          line: 285,
          column: 5
        }
      },
      "92": {
        start: {
          line: 286,
          column: 4
        },
        end: {
          line: 289,
          column: 6
        }
      },
      "93": {
        start: {
          line: 292,
          column: 4
        },
        end: {
          line: 294,
          column: 5
        }
      },
      "94": {
        start: {
          line: 293,
          column: 8
        },
        end: {
          line: 293,
          column: 25
        }
      },
      "95": {
        start: {
          line: 295,
          column: 14
        },
        end: {
          line: 295,
          column: 18
        }
      },
      "96": {
        start: {
          line: 296,
          column: 18
        },
        end: {
          line: 302,
          column: 5
        }
      },
      "97": {
        start: {
          line: 303,
          column: 14
        },
        end: {
          line: 303,
          column: 55
        }
      },
      "98": {
        start: {
          line: 304,
          column: 4
        },
        end: {
          line: 304,
          column: 76
        }
      },
      "99": {
        start: {
          line: 307,
          column: 19
        },
        end: {
          line: 307,
          column: 39
        }
      },
      "100": {
        start: {
          line: 308,
          column: 19
        },
        end: {
          line: 308,
          column: 39
        }
      },
      "101": {
        start: {
          line: 309,
          column: 4
        },
        end: {
          line: 309,
          column: 90
        }
      },
      "102": {
        start: {
          line: 312,
          column: 4
        },
        end: {
          line: 314,
          column: 5
        }
      },
      "103": {
        start: {
          line: 313,
          column: 8
        },
        end: {
          line: 313,
          column: 32
        }
      },
      "104": {
        start: {
          line: 315,
          column: 18
        },
        end: {
          line: 315,
          column: 42
        }
      },
      "105": {
        start: {
          line: 316,
          column: 29
        },
        end: {
          line: 316,
          column: 41
        }
      },
      "106": {
        start: {
          line: 317,
          column: 4
        },
        end: {
          line: 319,
          column: 5
        }
      },
      "107": {
        start: {
          line: 318,
          column: 8
        },
        end: {
          line: 318,
          column: 27
        }
      },
      "108": {
        start: {
          line: 320,
          column: 4
        },
        end: {
          line: 320,
          column: 46
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 10,
            column: 9
          },
          end: {
            line: 10,
            column: 16
          }
        },
        loc: {
          start: {
            line: 10,
            column: 30
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        },
        loc: {
          start: {
            line: 17,
            column: 27
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        loc: {
          start: {
            line: 20,
            column: 25
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 20
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        loc: {
          start: {
            line: 23,
            column: 29
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 23
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        loc: {
          start: {
            line: 26,
            column: 26
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 26
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        loc: {
          start: {
            line: 29,
            column: 22
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 29
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        loc: {
          start: {
            line: 32,
            column: 26
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 32
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        loc: {
          start: {
            line: 35,
            column: 26
          },
          end: {
            line: 37,
            column: 5
          }
        },
        line: 35
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        loc: {
          start: {
            line: 38,
            column: 26
          },
          end: {
            line: 40,
            column: 5
          }
        },
        line: 38
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        },
        loc: {
          start: {
            line: 41,
            column: 24
          },
          end: {
            line: 43,
            column: 5
          }
        },
        line: 41
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        loc: {
          start: {
            line: 44,
            column: 29
          },
          end: {
            line: 46,
            column: 5
          }
        },
        line: 44
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        },
        loc: {
          start: {
            line: 47,
            column: 28
          },
          end: {
            line: 49,
            column: 5
          }
        },
        line: 47
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        },
        loc: {
          start: {
            line: 50,
            column: 29
          },
          end: {
            line: 52,
            column: 5
          }
        },
        line: 50
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        },
        loc: {
          start: {
            line: 53,
            column: 30
          },
          end: {
            line: 55,
            column: 5
          }
        },
        line: 53
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        },
        loc: {
          start: {
            line: 56,
            column: 32
          },
          end: {
            line: 58,
            column: 5
          }
        },
        line: 56
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        },
        loc: {
          start: {
            line: 59,
            column: 22
          },
          end: {
            line: 61,
            column: 5
          }
        },
        line: 59
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        },
        loc: {
          start: {
            line: 62,
            column: 25
          },
          end: {
            line: 64,
            column: 5
          }
        },
        line: 62
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 65,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        },
        loc: {
          start: {
            line: 65,
            column: 24
          },
          end: {
            line: 67,
            column: 5
          }
        },
        line: 65
      },
      "18": {
        name: "formatDate",
        decl: {
          start: {
            line: 70,
            column: 9
          },
          end: {
            line: 70,
            column: 19
          }
        },
        loc: {
          start: {
            line: 70,
            column: 50
          },
          end: {
            line: 90,
            column: 1
          }
        },
        line: 70
      },
      "19": {
        name: "formatDateTime",
        decl: {
          start: {
            line: 91,
            column: 9
          },
          end: {
            line: 91,
            column: 23
          }
        },
        loc: {
          start: {
            line: 91,
            column: 30
          },
          end: {
            line: 93,
            column: 1
          }
        },
        line: 91
      },
      "20": {
        name: "formatTimeAgo",
        decl: {
          start: {
            line: 94,
            column: 9
          },
          end: {
            line: 94,
            column: 22
          }
        },
        loc: {
          start: {
            line: 94,
            column: 29
          },
          end: {
            line: 128,
            column: 1
          }
        },
        line: 94
      },
      "21": {
        name: "formatRelativeTime",
        decl: {
          start: {
            line: 129,
            column: 9
          },
          end: {
            line: 129,
            column: 27
          }
        },
        loc: {
          start: {
            line: 129,
            column: 34
          },
          end: {
            line: 131,
            column: 1
          }
        },
        line: 129
      },
      "22": {
        name: "formatCurrency",
        decl: {
          start: {
            line: 132,
            column: 9
          },
          end: {
            line: 132,
            column: 23
          }
        },
        loc: {
          start: {
            line: 132,
            column: 68
          },
          end: {
            line: 144,
            column: 1
          }
        },
        line: 132
      },
      "23": {
        name: "formatNumber",
        decl: {
          start: {
            line: 145,
            column: 9
          },
          end: {
            line: 145,
            column: 21
          }
        },
        loc: {
          start: {
            line: 145,
            column: 57
          },
          end: {
            line: 152,
            column: 1
          }
        },
        line: 145
      },
      "24": {
        name: "formatPercentage",
        decl: {
          start: {
            line: 153,
            column: 9
          },
          end: {
            line: 153,
            column: 25
          }
        },
        loc: {
          start: {
            line: 153,
            column: 65
          },
          end: {
            line: 164,
            column: 1
          }
        },
        line: 153
      },
      "25": {
        name: "formatPhoneNumber",
        decl: {
          start: {
            line: 165,
            column: 9
          },
          end: {
            line: 165,
            column: 26
          }
        },
        loc: {
          start: {
            line: 165,
            column: 34
          },
          end: {
            line: 176,
            column: 1
          }
        },
        line: 165
      },
      "26": {
        name: "formatAddress",
        decl: {
          start: {
            line: 177,
            column: 9
          },
          end: {
            line: 177,
            column: 22
          }
        },
        loc: {
          start: {
            line: 177,
            column: 32
          },
          end: {
            line: 187,
            column: 1
          }
        },
        line: 177
      },
      "27": {
        name: "truncateText",
        decl: {
          start: {
            line: 188,
            column: 9
          },
          end: {
            line: 188,
            column: 21
          }
        },
        loc: {
          start: {
            line: 188,
            column: 44
          },
          end: {
            line: 193,
            column: 1
          }
        },
        line: 188
      },
      "28": {
        name: "capitalizeFirst",
        decl: {
          start: {
            line: 194,
            column: 9
          },
          end: {
            line: 194,
            column: 24
          }
        },
        loc: {
          start: {
            line: 194,
            column: 31
          },
          end: {
            line: 199,
            column: 1
          }
        },
        line: 194
      },
      "29": {
        name: "formatSlug",
        decl: {
          start: {
            line: 200,
            column: 9
          },
          end: {
            line: 200,
            column: 19
          }
        },
        loc: {
          start: {
            line: 200,
            column: 26
          },
          end: {
            line: 206,
            column: 1
          }
        },
        line: 200
      },
      "30": {
        name: "formatShipmentStatus",
        decl: {
          start: {
            line: 207,
            column: 9
          },
          end: {
            line: 207,
            column: 29
          }
        },
        loc: {
          start: {
            line: 207,
            column: 38
          },
          end: {
            line: 250,
            column: 1
          }
        },
        line: 207
      },
      "31": {
        name: "formatOrderStatus",
        decl: {
          start: {
            line: 251,
            column: 9
          },
          end: {
            line: 251,
            column: 26
          }
        },
        loc: {
          start: {
            line: 251,
            column: 35
          },
          end: {
            line: 290,
            column: 1
          }
        },
        line: 251
      },
      "32": {
        name: "formatFileSize",
        decl: {
          start: {
            line: 291,
            column: 9
          },
          end: {
            line: 291,
            column: 23
          }
        },
        loc: {
          start: {
            line: 291,
            column: 31
          },
          end: {
            line: 305,
            column: 1
          }
        },
        line: 291
      },
      "33": {
        name: "formatCoordinates",
        decl: {
          start: {
            line: 306,
            column: 9
          },
          end: {
            line: 306,
            column: 26
          }
        },
        loc: {
          start: {
            line: 306,
            column: 37
          },
          end: {
            line: 310,
            column: 1
          }
        },
        line: 306
      },
      "34": {
        name: "formatDuration",
        decl: {
          start: {
            line: 311,
            column: 9
          },
          end: {
            line: 311,
            column: 23
          }
        },
        loc: {
          start: {
            line: 311,
            column: 33
          },
          end: {
            line: 321,
            column: 1
          }
        },
        line: 311
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 70,
            column: 26
          },
          end: {
            line: 70,
            column: 48
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 70,
            column: 36
          },
          end: {
            line: 70,
            column: 48
          }
        }],
        line: 70
      },
      "1": {
        loc: {
          start: {
            line: 72,
            column: 24
          },
          end: {
            line: 72,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 72,
            column: 51
          },
          end: {
            line: 72,
            column: 65
          }
        }, {
          start: {
            line: 72,
            column: 68
          },
          end: {
            line: 72,
            column: 72
          }
        }],
        line: 72
      },
      "2": {
        loc: {
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 75,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 75,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "3": {
        loc: {
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "4": {
        loc: {
          start: {
            line: 96,
            column: 24
          },
          end: {
            line: 96,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 96,
            column: 51
          },
          end: {
            line: 96,
            column: 88
          }
        }, {
          start: {
            line: 96,
            column: 91
          },
          end: {
            line: 96,
            column: 95
          }
        }],
        line: 96
      },
      "5": {
        loc: {
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 99,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 99,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "6": {
        loc: {
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "7": {
        loc: {
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "8": {
        loc: {
          start: {
            line: 108,
            column: 50
          },
          end: {
            line: 108,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 108,
            column: 70
          },
          end: {
            line: 108,
            column: 73
          }
        }, {
          start: {
            line: 108,
            column: 76
          },
          end: {
            line: 108,
            column: 78
          }
        }],
        line: 108
      },
      "9": {
        loc: {
          start: {
            line: 111,
            column: 8
          },
          end: {
            line: 113,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 111,
            column: 8
          },
          end: {
            line: 113,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 111
      },
      "10": {
        loc: {
          start: {
            line: 112,
            column: 46
          },
          end: {
            line: 112,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 112,
            column: 64
          },
          end: {
            line: 112,
            column: 67
          }
        }, {
          start: {
            line: 112,
            column: 70
          },
          end: {
            line: 112,
            column: 72
          }
        }],
        line: 112
      },
      "11": {
        loc: {
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 117,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 117,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 115
      },
      "12": {
        loc: {
          start: {
            line: 116,
            column: 44
          },
          end: {
            line: 116,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 116,
            column: 61
          },
          end: {
            line: 116,
            column: 64
          }
        }, {
          start: {
            line: 116,
            column: 67
          },
          end: {
            line: 116,
            column: 69
          }
        }],
        line: 116
      },
      "13": {
        loc: {
          start: {
            line: 119,
            column: 8
          },
          end: {
            line: 121,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 8
          },
          end: {
            line: 121,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 119
      },
      "14": {
        loc: {
          start: {
            line: 120,
            column: 46
          },
          end: {
            line: 120,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 120,
            column: 65
          },
          end: {
            line: 120,
            column: 69
          }
        }, {
          start: {
            line: 120,
            column: 72
          },
          end: {
            line: 120,
            column: 74
          }
        }],
        line: 120
      },
      "15": {
        loc: {
          start: {
            line: 123,
            column: 41
          },
          end: {
            line: 123,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 123,
            column: 59
          },
          end: {
            line: 123,
            column: 62
          }
        }, {
          start: {
            line: 123,
            column: 65
          },
          end: {
            line: 123,
            column: 67
          }
        }],
        line: 123
      },
      "16": {
        loc: {
          start: {
            line: 132,
            column: 32
          },
          end: {
            line: 132,
            column: 48
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 132,
            column: 43
          },
          end: {
            line: 132,
            column: 48
          }
        }],
        line: 132
      },
      "17": {
        loc: {
          start: {
            line: 132,
            column: 50
          },
          end: {
            line: 132,
            column: 66
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 132,
            column: 59
          },
          end: {
            line: 132,
            column: 66
          }
        }],
        line: 132
      },
      "18": {
        loc: {
          start: {
            line: 145,
            column: 30
          },
          end: {
            line: 145,
            column: 46
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 145,
            column: 39
          },
          end: {
            line: 145,
            column: 46
          }
        }],
        line: 145
      },
      "19": {
        loc: {
          start: {
            line: 153,
            column: 33
          },
          end: {
            line: 153,
            column: 45
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 153,
            column: 44
          },
          end: {
            line: 153,
            column: 45
          }
        }],
        line: 153
      },
      "20": {
        loc: {
          start: {
            line: 153,
            column: 47
          },
          end: {
            line: 153,
            column: 63
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 153,
            column: 56
          },
          end: {
            line: 153,
            column: 63
          }
        }],
        line: 153
      },
      "21": {
        loc: {
          start: {
            line: 168,
            column: 4
          },
          end: {
            line: 174,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 168,
            column: 4
          },
          end: {
            line: 174,
            column: 5
          }
        }, {
          start: {
            line: 171,
            column: 11
          },
          end: {
            line: 174,
            column: 5
          }
        }],
        line: 168
      },
      "22": {
        loc: {
          start: {
            line: 171,
            column: 11
          },
          end: {
            line: 174,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 171,
            column: 11
          },
          end: {
            line: 174,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 171
      },
      "23": {
        loc: {
          start: {
            line: 171,
            column: 15
          },
          end: {
            line: 171,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 171,
            column: 15
          },
          end: {
            line: 171,
            column: 36
          }
        }, {
          start: {
            line: 171,
            column: 40
          },
          end: {
            line: 171,
            column: 65
          }
        }],
        line: 171
      },
      "24": {
        loc: {
          start: {
            line: 180,
            column: 8
          },
          end: {
            line: 180,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 180,
            column: 28
          },
          end: {
            line: 180,
            column: 56
          }
        }, {
          start: {
            line: 180,
            column: 59
          },
          end: {
            line: 180,
            column: 61
          }
        }],
        line: 180
      },
      "25": {
        loc: {
          start: {
            line: 188,
            column: 28
          },
          end: {
            line: 188,
            column: 42
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 188,
            column: 40
          },
          end: {
            line: 188,
            column: 42
          }
        }],
        line: 188
      },
      "26": {
        loc: {
          start: {
            line: 189,
            column: 4
          },
          end: {
            line: 191,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 189,
            column: 4
          },
          end: {
            line: 191,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 189
      },
      "27": {
        loc: {
          start: {
            line: 195,
            column: 4
          },
          end: {
            line: 197,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 195,
            column: 4
          },
          end: {
            line: 197,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 195
      },
      "28": {
        loc: {
          start: {
            line: 246,
            column: 11
          },
          end: {
            line: 249,
            column: 5
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 246,
            column: 11
          },
          end: {
            line: 246,
            column: 28
          }
        }, {
          start: {
            line: 246,
            column: 32
          },
          end: {
            line: 249,
            column: 5
          }
        }],
        line: 246
      },
      "29": {
        loc: {
          start: {
            line: 286,
            column: 11
          },
          end: {
            line: 289,
            column: 5
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 286,
            column: 11
          },
          end: {
            line: 286,
            column: 28
          }
        }, {
          start: {
            line: 286,
            column: 32
          },
          end: {
            line: 289,
            column: 5
          }
        }],
        line: 286
      },
      "30": {
        loc: {
          start: {
            line: 292,
            column: 4
          },
          end: {
            line: 294,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 292,
            column: 4
          },
          end: {
            line: 294,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 292
      },
      "31": {
        loc: {
          start: {
            line: 307,
            column: 19
          },
          end: {
            line: 307,
            column: 39
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 307,
            column: 30
          },
          end: {
            line: 307,
            column: 33
          }
        }, {
          start: {
            line: 307,
            column: 36
          },
          end: {
            line: 307,
            column: 39
          }
        }],
        line: 307
      },
      "32": {
        loc: {
          start: {
            line: 308,
            column: 19
          },
          end: {
            line: 308,
            column: 39
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 308,
            column: 30
          },
          end: {
            line: 308,
            column: 33
          }
        }, {
          start: {
            line: 308,
            column: 36
          },
          end: {
            line: 308,
            column: 39
          }
        }],
        line: 308
      },
      "33": {
        loc: {
          start: {
            line: 312,
            column: 4
          },
          end: {
            line: 314,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 312,
            column: 4
          },
          end: {
            line: 314,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 312
      },
      "34": {
        loc: {
          start: {
            line: 317,
            column: 4
          },
          end: {
            line: 319,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 317,
            column: 4
          },
          end: {
            line: 319,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 317
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0],
      "17": [0],
      "18": [0],
      "19": [0],
      "20": [0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\utils\\format.ts"],
      sourcesContent: ["// =====================================================\r\n// UTILIDADES: FORMATEO DE DATOS\r\n// Descripci\xF3n: Funciones para formatear fechas, n\xFAmeros, monedas, etc.\r\n// Basado en: Intl API + date-fns + patrones enterprise\r\n// =====================================================\r\n\r\nimport { format, formatDistance, formatDistanceToNow, parseISO, isValid, es } from '@/lib/optimized-imports';\r\n\r\n// =====================================================\r\n// FORMATEO DE FECHAS\r\n// =====================================================\r\n\r\nexport function formatDate(date: string | Date, pattern: string = 'dd/MM/yyyy'): string {\r\n  try {\r\n    const dateObj = typeof date === 'string' ? new Date(date) : date;\r\n    if (isNaN(dateObj.getTime())) {\r\n      return 'Fecha inv\xE1lida';\r\n    }\r\n\r\n    // Usar formateo nativo para evitar problemas con date-fns\r\n    const day = dateObj.getDate().toString().padStart(2, '0');\r\n    const month = (dateObj.getMonth() + 1).toString().padStart(2, '0');\r\n    const year = dateObj.getFullYear();\r\n    const hours = dateObj.getHours().toString().padStart(2, '0');\r\n    const minutes = dateObj.getMinutes().toString().padStart(2, '0');\r\n\r\n    if (pattern === 'dd/MM/yyyy hh:mm') {\r\n      return `${day}/${month}/${year} ${hours}:${minutes}`;\r\n    }\r\n\r\n    return `${day}/${month}/${year}`;\r\n  } catch (error) {\r\n    console.error('Error formatting date:', error);\r\n    return 'Fecha inv\xE1lida';\r\n  }\r\n}\r\n\r\nexport function formatDateTime(date: string | Date): string {\r\n  return formatDate(date, 'dd/MM/yyyy hh:mm');\r\n}\r\n\r\nexport function formatTimeAgo(date: string | Date): string {\r\n  try {\r\n    const dateObj = typeof date === 'string' ? parseISO(date) : date;\r\n    if (!isValid(dateObj)) {\r\n      return 'Fecha inv\xE1lida';\r\n    }\r\n\r\n    // Usar implementaci\xF3n simple sin locale para evitar errores de formato\r\n    const now = new Date();\r\n    const diffInSeconds = Math.floor((now.getTime() - dateObj.getTime()) / 1000);\r\n\r\n    if (diffInSeconds < 60) {\r\n      return 'hace menos de un minuto';\r\n    }\r\n\r\n    const diffInMinutes = Math.floor(diffInSeconds / 60);\r\n    if (diffInMinutes < 60) {\r\n      return `hace ${diffInMinutes} minuto${diffInMinutes > 1 ? 's' : ''}`;\r\n    }\r\n\r\n    const diffInHours = Math.floor(diffInMinutes / 60);\r\n    if (diffInHours < 24) {\r\n      return `hace ${diffInHours} hora${diffInHours > 1 ? 's' : ''}`;\r\n    }\r\n\r\n    const diffInDays = Math.floor(diffInHours / 24);\r\n    if (diffInDays < 30) {\r\n      return `hace ${diffInDays} d\xEDa${diffInDays > 1 ? 's' : ''}`;\r\n    }\r\n\r\n    const diffInMonths = Math.floor(diffInDays / 30);\r\n    if (diffInMonths < 12) {\r\n      return `hace ${diffInMonths} mes${diffInMonths > 1 ? 'es' : ''}`;\r\n    }\r\n\r\n    const diffInYears = Math.floor(diffInMonths / 12);\r\n    return `hace ${diffInYears} a\xF1o${diffInYears > 1 ? 's' : ''}`;\r\n  } catch (error) {\r\n    console.error('Error formatting time ago:', error);\r\n    return 'Fecha inv\xE1lida';\r\n  }\r\n}\r\n\r\nexport function formatRelativeTime(date: string | Date): string {\r\n  return formatTimeAgo(date);\r\n}\r\n\r\n// =====================================================\r\n// FORMATEO DE N\xDAMEROS Y MONEDAS\r\n// =====================================================\r\n\r\nexport function formatCurrency(\r\n  amount: number, \r\n  currency: string = 'ARS',\r\n  locale: string = 'es-AR'\r\n): string {\r\n  try {\r\n    return new Intl.NumberFormat(locale, {\r\n      style: 'currency',\r\n      currency: currency,\r\n      minimumFractionDigits: 0,\r\n      maximumFractionDigits: 2\r\n    }).format(amount);\r\n  } catch (error) {\r\n    console.error('Error formatting currency:', error);\r\n    return `$${amount.toFixed(2)}`;\r\n  }\r\n}\r\n\r\nexport function formatNumber(\r\n  number: number,\r\n  locale: string = 'es-AR',\r\n  options?: Intl.NumberFormatOptions\r\n): string {\r\n  try {\r\n    return new Intl.NumberFormat(locale, options).format(number);\r\n  } catch (error) {\r\n    console.error('Error formatting number:', error);\r\n    return number.toString();\r\n  }\r\n}\r\n\r\nexport function formatPercentage(\r\n  value: number,\r\n  decimals: number = 1,\r\n  locale: string = 'es-AR'\r\n): string {\r\n  try {\r\n    return new Intl.NumberFormat(locale, {\r\n      style: 'percent',\r\n      minimumFractionDigits: decimals,\r\n      maximumFractionDigits: decimals\r\n    }).format(value / 100);\r\n  } catch (error) {\r\n    console.error('Error formatting percentage:', error);\r\n    return `${value.toFixed(decimals)}%`;\r\n  }\r\n}\r\n\r\n// =====================================================\r\n// FORMATEO DE TEXTO\r\n// =====================================================\r\n\r\nexport function formatPhoneNumber(phone: string): string {\r\n  // Formato argentino: +54 9 351 123 4567\r\n  const cleaned = phone.replace(/\\D/g, '');\r\n  \r\n  if (cleaned.length === 10) {\r\n    // Formato local: 351 123 4567\r\n    return cleaned.replace(/(\\d{3})(\\d{3})(\\d{4})/, '$1 $2 $3');\r\n  } else if (cleaned.length === 13 && cleaned.startsWith('549')) {\r\n    // Formato internacional: +54 9 351 123 4567\r\n    return cleaned.replace(/(\\d{2})(\\d{1})(\\d{3})(\\d{3})(\\d{4})/, '+$1 $2 $3 $4 $5');\r\n  }\r\n  \r\n  return phone;\r\n}\r\n\r\nexport function formatAddress(address: {\r\n  street: string;\r\n  number: string;\r\n  apartment?: string;\r\n  neighborhood: string;\r\n  city: string;\r\n  state: string;\r\n  postal_code: string;\r\n}): string {\r\n  const parts = [\r\n    `${address.street} ${address.number}`,\r\n    address.apartment ? `Depto ${address.apartment}` : '',\r\n    address.neighborhood,\r\n    address.city,\r\n    address.state,\r\n    `CP ${address.postal_code}`\r\n  ].filter(Boolean);\r\n  \r\n  return parts.join(', ');\r\n}\r\n\r\nexport function truncateText(text: string, maxLength: number = 50): string {\r\n  if (text.length <= maxLength) {\r\n    return text;\r\n  }\r\n  return text.substring(0, maxLength - 3) + '...';\r\n}\r\n\r\nexport function capitalizeFirst(text: string): string {\r\n  if (!text) {return '';}\r\n  return text.charAt(0).toUpperCase() + text.slice(1).toLowerCase();\r\n}\r\n\r\nexport function formatSlug(text: string): string {\r\n  return text\r\n    .toLowerCase()\r\n    .normalize('NFD')\r\n    .replace(/[\\u0300-\\u036f]/g, '') // Remover acentos\r\n    .replace(/[^a-z0-9\\s-]/g, '') // Remover caracteres especiales\r\n    .replace(/\\s+/g, '-') // Reemplazar espacios con guiones\r\n    .replace(/-+/g, '-') // Remover guiones m\xFAltiples\r\n    .trim();\r\n}\r\n\r\n// =====================================================\r\n// FORMATEO DE ESTADOS Y BADGES\r\n// =====================================================\r\n\r\nexport function formatShipmentStatus(status: string): {\r\n  label: string;\r\n  color: 'default' | 'secondary' | 'destructive' | 'outline';\r\n} {\r\n  const statusMap: Record<string, { label: string; color: any }> = {\r\n    pending: { label: 'Pendiente', color: 'secondary' },\r\n    confirmed: { label: 'Confirmado', color: 'default' },\r\n    picked_up: { label: 'Retirado', color: 'default' },\r\n    in_transit: { label: 'En Tr\xE1nsito', color: 'default' },\r\n    out_for_delivery: { label: 'En Reparto', color: 'default' },\r\n    delivered: { label: 'Entregado', color: 'default' },\r\n    exception: { label: 'Excepci\xF3n', color: 'destructive' },\r\n    cancelled: { label: 'Cancelado', color: 'destructive' },\r\n    returned: { label: 'Devuelto', color: 'outline' }\r\n  };\r\n  \r\n  return statusMap[status] || { label: status, color: 'outline' };\r\n}\r\n\r\nexport function formatOrderStatus(status: string): {\r\n  label: string;\r\n  color: 'default' | 'secondary' | 'destructive' | 'outline';\r\n} {\r\n  const statusMap: Record<string, { label: string; color: any }> = {\r\n    pending: { label: 'Pendiente', color: 'secondary' },\r\n    confirmed: { label: 'Confirmado', color: 'default' },\r\n    processing: { label: 'Procesando', color: 'default' },\r\n    shipped: { label: 'Enviado', color: 'default' },\r\n    delivered: { label: 'Entregado', color: 'default' },\r\n    cancelled: { label: 'Cancelado', color: 'destructive' },\r\n    refunded: { label: 'Reembolsado', color: 'outline' },\r\n    returned: { label: 'Devuelto', color: 'outline' }\r\n  };\r\n  \r\n  return statusMap[status] || { label: status, color: 'outline' };\r\n}\r\n\r\n// =====================================================\r\n// FORMATEO DE ARCHIVOS Y TAMA\xD1OS\r\n// =====================================================\r\n\r\nexport function formatFileSize(bytes: number): string {\r\n  if (bytes === 0) {return '0 Bytes';}\r\n  \r\n  const k = 1024;\r\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n  \r\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n}\r\n\r\n// =====================================================\r\n// FORMATEO DE COORDENADAS\r\n// =====================================================\r\n\r\nexport function formatCoordinates(lat: number, lng: number): string {\r\n  const latDir = lat >= 0 ? 'N' : 'S';\r\n  const lngDir = lng >= 0 ? 'E' : 'O';\r\n  \r\n  return `${Math.abs(lat).toFixed(6)}\xB0${latDir}, ${Math.abs(lng).toFixed(6)}\xB0${lngDir}`;\r\n}\r\n\r\n// =====================================================\r\n// FORMATEO DE DURACI\xD3N\r\n// =====================================================\r\n\r\nexport function formatDuration(minutes: number): string {\r\n  if (minutes < 60) {\r\n    return `${minutes} min`;\r\n  }\r\n  \r\n  const hours = Math.floor(minutes / 60);\r\n  const remainingMinutes = minutes % 60;\r\n  \r\n  if (remainingMinutes === 0) {\r\n    return `${hours}h`;\r\n  }\r\n  \r\n  return `${hours}h ${remainingMinutes}min`;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["capitalizeFirst", "formatAddress", "formatCoordinates", "formatCurrency", "formatDate", "formatDateTime", "formatDuration", "formatFileSize", "formatNumber", "formatOrderStatus", "formatPercentage", "formatPhoneNumber", "formatRelativeTime", "formatShipmentStatus", "formatSlug", "formatTimeAgo", "truncateText", "date", "pattern", "dateObj", "Date", "isNaN", "getTime", "day", "getDate", "toString", "padStart", "month", "getMonth", "year", "getFullYear", "hours", "getHours", "minutes", "getMinutes", "error", "console", "parseISO", "isValid", "now", "diffInSeconds", "Math", "floor", "diffInMinutes", "diffInHours", "diffInDays", "diffInMonths", "diffInYears", "amount", "currency", "locale", "Intl", "NumberFormat", "style", "minimumFractionDigits", "maximumFractionDigits", "format", "toFixed", "number", "options", "value", "decimals", "phone", "cleaned", "replace", "length", "startsWith", "address", "parts", "street", "apartment", "neighborhood", "city", "state", "postal_code", "filter", "Boolean", "join", "text", "maxLength", "substring", "charAt", "toUpperCase", "slice", "toLowerCase", "normalize", "trim", "status", "statusMap", "pending", "label", "color", "confirmed", "picked_up", "in_transit", "out_for_delivery", "delivered", "exception", "cancelled", "returned", "processing", "shipped", "refunded", "bytes", "k", "sizes", "i", "log", "parseFloat", "pow", "lat", "lng", "latDir", "lngDir", "abs", "remainingMinutes"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "bf00b5cad0872bb653f42077ab1c38a88a779a21"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1jmld52f8l = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1jmld52f8l();
cov_1jmld52f8l().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1jmld52f8l().f[0]++;
  cov_1jmld52f8l().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1jmld52f8l().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1jmld52f8l().s[3]++;
_export(exports, {
  get capitalizeFirst() {
    /* istanbul ignore next */
    cov_1jmld52f8l().f[1]++;
    cov_1jmld52f8l().s[4]++;
    return capitalizeFirst;
  },
  get formatAddress() {
    /* istanbul ignore next */
    cov_1jmld52f8l().f[2]++;
    cov_1jmld52f8l().s[5]++;
    return formatAddress;
  },
  get formatCoordinates() {
    /* istanbul ignore next */
    cov_1jmld52f8l().f[3]++;
    cov_1jmld52f8l().s[6]++;
    return formatCoordinates;
  },
  get formatCurrency() {
    /* istanbul ignore next */
    cov_1jmld52f8l().f[4]++;
    cov_1jmld52f8l().s[7]++;
    return formatCurrency;
  },
  get formatDate() {
    /* istanbul ignore next */
    cov_1jmld52f8l().f[5]++;
    cov_1jmld52f8l().s[8]++;
    return formatDate;
  },
  get formatDateTime() {
    /* istanbul ignore next */
    cov_1jmld52f8l().f[6]++;
    cov_1jmld52f8l().s[9]++;
    return formatDateTime;
  },
  get formatDuration() {
    /* istanbul ignore next */
    cov_1jmld52f8l().f[7]++;
    cov_1jmld52f8l().s[10]++;
    return formatDuration;
  },
  get formatFileSize() {
    /* istanbul ignore next */
    cov_1jmld52f8l().f[8]++;
    cov_1jmld52f8l().s[11]++;
    return formatFileSize;
  },
  get formatNumber() {
    /* istanbul ignore next */
    cov_1jmld52f8l().f[9]++;
    cov_1jmld52f8l().s[12]++;
    return formatNumber;
  },
  get formatOrderStatus() {
    /* istanbul ignore next */
    cov_1jmld52f8l().f[10]++;
    cov_1jmld52f8l().s[13]++;
    return formatOrderStatus;
  },
  get formatPercentage() {
    /* istanbul ignore next */
    cov_1jmld52f8l().f[11]++;
    cov_1jmld52f8l().s[14]++;
    return formatPercentage;
  },
  get formatPhoneNumber() {
    /* istanbul ignore next */
    cov_1jmld52f8l().f[12]++;
    cov_1jmld52f8l().s[15]++;
    return formatPhoneNumber;
  },
  get formatRelativeTime() {
    /* istanbul ignore next */
    cov_1jmld52f8l().f[13]++;
    cov_1jmld52f8l().s[16]++;
    return formatRelativeTime;
  },
  get formatShipmentStatus() {
    /* istanbul ignore next */
    cov_1jmld52f8l().f[14]++;
    cov_1jmld52f8l().s[17]++;
    return formatShipmentStatus;
  },
  get formatSlug() {
    /* istanbul ignore next */
    cov_1jmld52f8l().f[15]++;
    cov_1jmld52f8l().s[18]++;
    return formatSlug;
  },
  get formatTimeAgo() {
    /* istanbul ignore next */
    cov_1jmld52f8l().f[16]++;
    cov_1jmld52f8l().s[19]++;
    return formatTimeAgo;
  },
  get truncateText() {
    /* istanbul ignore next */
    cov_1jmld52f8l().f[17]++;
    cov_1jmld52f8l().s[20]++;
    return truncateText;
  }
});
const _optimizedimports =
/* istanbul ignore next */
(cov_1jmld52f8l().s[21]++, require("../optimized-imports"));
function formatDate(date, pattern =
/* istanbul ignore next */
(cov_1jmld52f8l().b[0][0]++, 'dd/MM/yyyy')) {
  /* istanbul ignore next */
  cov_1jmld52f8l().f[18]++;
  cov_1jmld52f8l().s[22]++;
  try {
    const dateObj =
    /* istanbul ignore next */
    (cov_1jmld52f8l().s[23]++, typeof date === 'string' ?
    /* istanbul ignore next */
    (cov_1jmld52f8l().b[1][0]++, new Date(date)) :
    /* istanbul ignore next */
    (cov_1jmld52f8l().b[1][1]++, date));
    /* istanbul ignore next */
    cov_1jmld52f8l().s[24]++;
    if (isNaN(dateObj.getTime())) {
      /* istanbul ignore next */
      cov_1jmld52f8l().b[2][0]++;
      cov_1jmld52f8l().s[25]++;
      return 'Fecha invÃ¡lida';
    } else
    /* istanbul ignore next */
    {
      cov_1jmld52f8l().b[2][1]++;
    }
    // Usar formateo nativo para evitar problemas con date-fns
    const day =
    /* istanbul ignore next */
    (cov_1jmld52f8l().s[26]++, dateObj.getDate().toString().padStart(2, '0'));
    const month =
    /* istanbul ignore next */
    (cov_1jmld52f8l().s[27]++, (dateObj.getMonth() + 1).toString().padStart(2, '0'));
    const year =
    /* istanbul ignore next */
    (cov_1jmld52f8l().s[28]++, dateObj.getFullYear());
    const hours =
    /* istanbul ignore next */
    (cov_1jmld52f8l().s[29]++, dateObj.getHours().toString().padStart(2, '0'));
    const minutes =
    /* istanbul ignore next */
    (cov_1jmld52f8l().s[30]++, dateObj.getMinutes().toString().padStart(2, '0'));
    /* istanbul ignore next */
    cov_1jmld52f8l().s[31]++;
    if (pattern === 'dd/MM/yyyy hh:mm') {
      /* istanbul ignore next */
      cov_1jmld52f8l().b[3][0]++;
      cov_1jmld52f8l().s[32]++;
      return `${day}/${month}/${year} ${hours}:${minutes}`;
    } else
    /* istanbul ignore next */
    {
      cov_1jmld52f8l().b[3][1]++;
    }
    cov_1jmld52f8l().s[33]++;
    return `${day}/${month}/${year}`;
  } catch (error) {
    /* istanbul ignore next */
    cov_1jmld52f8l().s[34]++;
    console.error('Error formatting date:', error);
    /* istanbul ignore next */
    cov_1jmld52f8l().s[35]++;
    return 'Fecha invÃ¡lida';
  }
}
function formatDateTime(date) {
  /* istanbul ignore next */
  cov_1jmld52f8l().f[19]++;
  cov_1jmld52f8l().s[36]++;
  return formatDate(date, 'dd/MM/yyyy hh:mm');
}
function formatTimeAgo(date) {
  /* istanbul ignore next */
  cov_1jmld52f8l().f[20]++;
  cov_1jmld52f8l().s[37]++;
  try {
    const dateObj =
    /* istanbul ignore next */
    (cov_1jmld52f8l().s[38]++, typeof date === 'string' ?
    /* istanbul ignore next */
    (cov_1jmld52f8l().b[4][0]++, (0, _optimizedimports.parseISO)(date)) :
    /* istanbul ignore next */
    (cov_1jmld52f8l().b[4][1]++, date));
    /* istanbul ignore next */
    cov_1jmld52f8l().s[39]++;
    if (!(0, _optimizedimports.isValid)(dateObj)) {
      /* istanbul ignore next */
      cov_1jmld52f8l().b[5][0]++;
      cov_1jmld52f8l().s[40]++;
      return 'Fecha invÃ¡lida';
    } else
    /* istanbul ignore next */
    {
      cov_1jmld52f8l().b[5][1]++;
    }
    // Usar implementaciÃ³n simple sin locale para evitar errores de formato
    const now =
    /* istanbul ignore next */
    (cov_1jmld52f8l().s[41]++, new Date());
    const diffInSeconds =
    /* istanbul ignore next */
    (cov_1jmld52f8l().s[42]++, Math.floor((now.getTime() - dateObj.getTime()) / 1000));
    /* istanbul ignore next */
    cov_1jmld52f8l().s[43]++;
    if (diffInSeconds < 60) {
      /* istanbul ignore next */
      cov_1jmld52f8l().b[6][0]++;
      cov_1jmld52f8l().s[44]++;
      return 'hace menos de un minuto';
    } else
    /* istanbul ignore next */
    {
      cov_1jmld52f8l().b[6][1]++;
    }
    const diffInMinutes =
    /* istanbul ignore next */
    (cov_1jmld52f8l().s[45]++, Math.floor(diffInSeconds / 60));
    /* istanbul ignore next */
    cov_1jmld52f8l().s[46]++;
    if (diffInMinutes < 60) {
      /* istanbul ignore next */
      cov_1jmld52f8l().b[7][0]++;
      cov_1jmld52f8l().s[47]++;
      return `hace ${diffInMinutes} minuto${diffInMinutes > 1 ?
      /* istanbul ignore next */
      (cov_1jmld52f8l().b[8][0]++, 's') :
      /* istanbul ignore next */
      (cov_1jmld52f8l().b[8][1]++, '')}`;
    } else
    /* istanbul ignore next */
    {
      cov_1jmld52f8l().b[7][1]++;
    }
    const diffInHours =
    /* istanbul ignore next */
    (cov_1jmld52f8l().s[48]++, Math.floor(diffInMinutes / 60));
    /* istanbul ignore next */
    cov_1jmld52f8l().s[49]++;
    if (diffInHours < 24) {
      /* istanbul ignore next */
      cov_1jmld52f8l().b[9][0]++;
      cov_1jmld52f8l().s[50]++;
      return `hace ${diffInHours} hora${diffInHours > 1 ?
      /* istanbul ignore next */
      (cov_1jmld52f8l().b[10][0]++, 's') :
      /* istanbul ignore next */
      (cov_1jmld52f8l().b[10][1]++, '')}`;
    } else
    /* istanbul ignore next */
    {
      cov_1jmld52f8l().b[9][1]++;
    }
    const diffInDays =
    /* istanbul ignore next */
    (cov_1jmld52f8l().s[51]++, Math.floor(diffInHours / 24));
    /* istanbul ignore next */
    cov_1jmld52f8l().s[52]++;
    if (diffInDays < 30) {
      /* istanbul ignore next */
      cov_1jmld52f8l().b[11][0]++;
      cov_1jmld52f8l().s[53]++;
      return `hace ${diffInDays} dÃ­a${diffInDays > 1 ?
      /* istanbul ignore next */
      (cov_1jmld52f8l().b[12][0]++, 's') :
      /* istanbul ignore next */
      (cov_1jmld52f8l().b[12][1]++, '')}`;
    } else
    /* istanbul ignore next */
    {
      cov_1jmld52f8l().b[11][1]++;
    }
    const diffInMonths =
    /* istanbul ignore next */
    (cov_1jmld52f8l().s[54]++, Math.floor(diffInDays / 30));
    /* istanbul ignore next */
    cov_1jmld52f8l().s[55]++;
    if (diffInMonths < 12) {
      /* istanbul ignore next */
      cov_1jmld52f8l().b[13][0]++;
      cov_1jmld52f8l().s[56]++;
      return `hace ${diffInMonths} mes${diffInMonths > 1 ?
      /* istanbul ignore next */
      (cov_1jmld52f8l().b[14][0]++, 'es') :
      /* istanbul ignore next */
      (cov_1jmld52f8l().b[14][1]++, '')}`;
    } else
    /* istanbul ignore next */
    {
      cov_1jmld52f8l().b[13][1]++;
    }
    const diffInYears =
    /* istanbul ignore next */
    (cov_1jmld52f8l().s[57]++, Math.floor(diffInMonths / 12));
    /* istanbul ignore next */
    cov_1jmld52f8l().s[58]++;
    return `hace ${diffInYears} aÃ±o${diffInYears > 1 ?
    /* istanbul ignore next */
    (cov_1jmld52f8l().b[15][0]++, 's') :
    /* istanbul ignore next */
    (cov_1jmld52f8l().b[15][1]++, '')}`;
  } catch (error) {
    /* istanbul ignore next */
    cov_1jmld52f8l().s[59]++;
    console.error('Error formatting time ago:', error);
    /* istanbul ignore next */
    cov_1jmld52f8l().s[60]++;
    return 'Fecha invÃ¡lida';
  }
}
function formatRelativeTime(date) {
  /* istanbul ignore next */
  cov_1jmld52f8l().f[21]++;
  cov_1jmld52f8l().s[61]++;
  return formatTimeAgo(date);
}
function formatCurrency(amount, currency =
/* istanbul ignore next */
(cov_1jmld52f8l().b[16][0]++, 'ARS'), locale =
/* istanbul ignore next */
(cov_1jmld52f8l().b[17][0]++, 'es-AR')) {
  /* istanbul ignore next */
  cov_1jmld52f8l().f[22]++;
  cov_1jmld52f8l().s[62]++;
  try {
    /* istanbul ignore next */
    cov_1jmld52f8l().s[63]++;
    return new Intl.NumberFormat(locale, {
      style: 'currency',
      currency: currency,
      minimumFractionDigits: 0,
      maximumFractionDigits: 2
    }).format(amount);
  } catch (error) {
    /* istanbul ignore next */
    cov_1jmld52f8l().s[64]++;
    console.error('Error formatting currency:', error);
    /* istanbul ignore next */
    cov_1jmld52f8l().s[65]++;
    return `$${amount.toFixed(2)}`;
  }
}
function formatNumber(number, locale =
/* istanbul ignore next */
(cov_1jmld52f8l().b[18][0]++, 'es-AR'), options) {
  /* istanbul ignore next */
  cov_1jmld52f8l().f[23]++;
  cov_1jmld52f8l().s[66]++;
  try {
    /* istanbul ignore next */
    cov_1jmld52f8l().s[67]++;
    return new Intl.NumberFormat(locale, options).format(number);
  } catch (error) {
    /* istanbul ignore next */
    cov_1jmld52f8l().s[68]++;
    console.error('Error formatting number:', error);
    /* istanbul ignore next */
    cov_1jmld52f8l().s[69]++;
    return number.toString();
  }
}
function formatPercentage(value, decimals =
/* istanbul ignore next */
(cov_1jmld52f8l().b[19][0]++, 1), locale =
/* istanbul ignore next */
(cov_1jmld52f8l().b[20][0]++, 'es-AR')) {
  /* istanbul ignore next */
  cov_1jmld52f8l().f[24]++;
  cov_1jmld52f8l().s[70]++;
  try {
    /* istanbul ignore next */
    cov_1jmld52f8l().s[71]++;
    return new Intl.NumberFormat(locale, {
      style: 'percent',
      minimumFractionDigits: decimals,
      maximumFractionDigits: decimals
    }).format(value / 100);
  } catch (error) {
    /* istanbul ignore next */
    cov_1jmld52f8l().s[72]++;
    console.error('Error formatting percentage:', error);
    /* istanbul ignore next */
    cov_1jmld52f8l().s[73]++;
    return `${value.toFixed(decimals)}%`;
  }
}
function formatPhoneNumber(phone) {
  /* istanbul ignore next */
  cov_1jmld52f8l().f[25]++;
  // Formato argentino: +54 9 351 123 4567
  const cleaned =
  /* istanbul ignore next */
  (cov_1jmld52f8l().s[74]++, phone.replace(/\D/g, ''));
  /* istanbul ignore next */
  cov_1jmld52f8l().s[75]++;
  if (cleaned.length === 10) {
    /* istanbul ignore next */
    cov_1jmld52f8l().b[21][0]++;
    cov_1jmld52f8l().s[76]++;
    // Formato local: 351 123 4567
    return cleaned.replace(/(\d{3})(\d{3})(\d{4})/, '$1 $2 $3');
  } else {
    /* istanbul ignore next */
    cov_1jmld52f8l().b[21][1]++;
    cov_1jmld52f8l().s[77]++;
    if (
    /* istanbul ignore next */
    (cov_1jmld52f8l().b[23][0]++, cleaned.length === 13) &&
    /* istanbul ignore next */
    (cov_1jmld52f8l().b[23][1]++, cleaned.startsWith('549'))) {
      /* istanbul ignore next */
      cov_1jmld52f8l().b[22][0]++;
      cov_1jmld52f8l().s[78]++;
      // Formato internacional: +54 9 351 123 4567
      return cleaned.replace(/(\d{2})(\d{1})(\d{3})(\d{3})(\d{4})/, '+$1 $2 $3 $4 $5');
    } else
    /* istanbul ignore next */
    {
      cov_1jmld52f8l().b[22][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1jmld52f8l().s[79]++;
  return phone;
}
function formatAddress(address) {
  /* istanbul ignore next */
  cov_1jmld52f8l().f[26]++;
  const parts =
  /* istanbul ignore next */
  (cov_1jmld52f8l().s[80]++, [`${address.street} ${address.number}`, address.apartment ?
  /* istanbul ignore next */
  (cov_1jmld52f8l().b[24][0]++, `Depto ${address.apartment}`) :
  /* istanbul ignore next */
  (cov_1jmld52f8l().b[24][1]++, ''), address.neighborhood, address.city, address.state, `CP ${address.postal_code}`].filter(Boolean));
  /* istanbul ignore next */
  cov_1jmld52f8l().s[81]++;
  return parts.join(', ');
}
function truncateText(text, maxLength =
/* istanbul ignore next */
(cov_1jmld52f8l().b[25][0]++, 50)) {
  /* istanbul ignore next */
  cov_1jmld52f8l().f[27]++;
  cov_1jmld52f8l().s[82]++;
  if (text.length <= maxLength) {
    /* istanbul ignore next */
    cov_1jmld52f8l().b[26][0]++;
    cov_1jmld52f8l().s[83]++;
    return text;
  } else
  /* istanbul ignore next */
  {
    cov_1jmld52f8l().b[26][1]++;
  }
  cov_1jmld52f8l().s[84]++;
  return text.substring(0, maxLength - 3) + '...';
}
function capitalizeFirst(text) {
  /* istanbul ignore next */
  cov_1jmld52f8l().f[28]++;
  cov_1jmld52f8l().s[85]++;
  if (!text) {
    /* istanbul ignore next */
    cov_1jmld52f8l().b[27][0]++;
    cov_1jmld52f8l().s[86]++;
    return '';
  } else
  /* istanbul ignore next */
  {
    cov_1jmld52f8l().b[27][1]++;
  }
  cov_1jmld52f8l().s[87]++;
  return text.charAt(0).toUpperCase() + text.slice(1).toLowerCase();
}
function formatSlug(text) {
  /* istanbul ignore next */
  cov_1jmld52f8l().f[29]++;
  cov_1jmld52f8l().s[88]++;
  return text.toLowerCase().normalize('NFD').replace(/[\u0300-\u036f]/g, '') // Remover acentos
  .replace(/[^a-z0-9\s-]/g, '') // Remover caracteres especiales
  .replace(/\s+/g, '-') // Reemplazar espacios con guiones
  .replace(/-+/g, '-') // Remover guiones mÃºltiples
  .trim();
}
function formatShipmentStatus(status) {
  /* istanbul ignore next */
  cov_1jmld52f8l().f[30]++;
  const statusMap =
  /* istanbul ignore next */
  (cov_1jmld52f8l().s[89]++, {
    pending: {
      label: 'Pendiente',
      color: 'secondary'
    },
    confirmed: {
      label: 'Confirmado',
      color: 'default'
    },
    picked_up: {
      label: 'Retirado',
      color: 'default'
    },
    in_transit: {
      label: 'En TrÃ¡nsito',
      color: 'default'
    },
    out_for_delivery: {
      label: 'En Reparto',
      color: 'default'
    },
    delivered: {
      label: 'Entregado',
      color: 'default'
    },
    exception: {
      label: 'ExcepciÃ³n',
      color: 'destructive'
    },
    cancelled: {
      label: 'Cancelado',
      color: 'destructive'
    },
    returned: {
      label: 'Devuelto',
      color: 'outline'
    }
  });
  /* istanbul ignore next */
  cov_1jmld52f8l().s[90]++;
  return /* istanbul ignore next */(cov_1jmld52f8l().b[28][0]++, statusMap[status]) ||
  /* istanbul ignore next */
  (cov_1jmld52f8l().b[28][1]++, {
    label: status,
    color: 'outline'
  });
}
function formatOrderStatus(status) {
  /* istanbul ignore next */
  cov_1jmld52f8l().f[31]++;
  const statusMap =
  /* istanbul ignore next */
  (cov_1jmld52f8l().s[91]++, {
    pending: {
      label: 'Pendiente',
      color: 'secondary'
    },
    confirmed: {
      label: 'Confirmado',
      color: 'default'
    },
    processing: {
      label: 'Procesando',
      color: 'default'
    },
    shipped: {
      label: 'Enviado',
      color: 'default'
    },
    delivered: {
      label: 'Entregado',
      color: 'default'
    },
    cancelled: {
      label: 'Cancelado',
      color: 'destructive'
    },
    refunded: {
      label: 'Reembolsado',
      color: 'outline'
    },
    returned: {
      label: 'Devuelto',
      color: 'outline'
    }
  });
  /* istanbul ignore next */
  cov_1jmld52f8l().s[92]++;
  return /* istanbul ignore next */(cov_1jmld52f8l().b[29][0]++, statusMap[status]) ||
  /* istanbul ignore next */
  (cov_1jmld52f8l().b[29][1]++, {
    label: status,
    color: 'outline'
  });
}
function formatFileSize(bytes) {
  /* istanbul ignore next */
  cov_1jmld52f8l().f[32]++;
  cov_1jmld52f8l().s[93]++;
  if (bytes === 0) {
    /* istanbul ignore next */
    cov_1jmld52f8l().b[30][0]++;
    cov_1jmld52f8l().s[94]++;
    return '0 Bytes';
  } else
  /* istanbul ignore next */
  {
    cov_1jmld52f8l().b[30][1]++;
  }
  const k =
  /* istanbul ignore next */
  (cov_1jmld52f8l().s[95]++, 1024);
  const sizes =
  /* istanbul ignore next */
  (cov_1jmld52f8l().s[96]++, ['Bytes', 'KB', 'MB', 'GB', 'TB']);
  const i =
  /* istanbul ignore next */
  (cov_1jmld52f8l().s[97]++, Math.floor(Math.log(bytes) / Math.log(k)));
  /* istanbul ignore next */
  cov_1jmld52f8l().s[98]++;
  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
}
function formatCoordinates(lat, lng) {
  /* istanbul ignore next */
  cov_1jmld52f8l().f[33]++;
  const latDir =
  /* istanbul ignore next */
  (cov_1jmld52f8l().s[99]++, lat >= 0 ?
  /* istanbul ignore next */
  (cov_1jmld52f8l().b[31][0]++, 'N') :
  /* istanbul ignore next */
  (cov_1jmld52f8l().b[31][1]++, 'S'));
  const lngDir =
  /* istanbul ignore next */
  (cov_1jmld52f8l().s[100]++, lng >= 0 ?
  /* istanbul ignore next */
  (cov_1jmld52f8l().b[32][0]++, 'E') :
  /* istanbul ignore next */
  (cov_1jmld52f8l().b[32][1]++, 'O'));
  /* istanbul ignore next */
  cov_1jmld52f8l().s[101]++;
  return `${Math.abs(lat).toFixed(6)}Â°${latDir}, ${Math.abs(lng).toFixed(6)}Â°${lngDir}`;
}
function formatDuration(minutes) {
  /* istanbul ignore next */
  cov_1jmld52f8l().f[34]++;
  cov_1jmld52f8l().s[102]++;
  if (minutes < 60) {
    /* istanbul ignore next */
    cov_1jmld52f8l().b[33][0]++;
    cov_1jmld52f8l().s[103]++;
    return `${minutes} min`;
  } else
  /* istanbul ignore next */
  {
    cov_1jmld52f8l().b[33][1]++;
  }
  const hours =
  /* istanbul ignore next */
  (cov_1jmld52f8l().s[104]++, Math.floor(minutes / 60));
  const remainingMinutes =
  /* istanbul ignore next */
  (cov_1jmld52f8l().s[105]++, minutes % 60);
  /* istanbul ignore next */
  cov_1jmld52f8l().s[106]++;
  if (remainingMinutes === 0) {
    /* istanbul ignore next */
    cov_1jmld52f8l().b[34][0]++;
    cov_1jmld52f8l().s[107]++;
    return `${hours}h`;
  } else
  /* istanbul ignore next */
  {
    cov_1jmld52f8l().b[34][1]++;
  }
  cov_1jmld52f8l().s[108]++;
  return `${hours}h ${remainingMinutes}min`;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,