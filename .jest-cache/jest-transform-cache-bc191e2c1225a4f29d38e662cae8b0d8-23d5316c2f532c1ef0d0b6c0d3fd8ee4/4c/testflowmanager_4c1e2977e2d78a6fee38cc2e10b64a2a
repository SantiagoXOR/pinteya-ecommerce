4f2abe693ae6a797c908ab334ef2fa72
/**
 * Advanced Test Flow Manager
 * 
 * Gestiona la ejecución de flujos de test completos incluyendo:
 * - Ejecución de tests automatizados
 * - Captura de screenshots
 * - Generación de reportes
 * - Integración con el dashboard
 */"use strict";

/* istanbul ignore next */
function cov_28kxzuk0zx() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\test-flow-manager.ts";
  var hash = "a94310040710020684a6341201eb2812fc796be0";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\test-flow-manager.ts",
    statementMap: {
      "0": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 12,
          column: 3
        }
      },
      "1": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 17,
          column: 7
        }
      },
      "2": {
        start: {
          line: 14,
          column: 24
        },
        end: {
          line: 17,
          column: 7
        }
      },
      "3": {
        start: {
          line: 19,
          column: 0
        },
        end: {
          line: 29,
          column: 3
        }
      },
      "4": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 39
        }
      },
      "5": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 31
        }
      },
      "6": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 31
        }
      },
      "7": {
        start: {
          line: 30,
          column: 27
        },
        end: {
          line: 30,
          column: 58
        }
      },
      "8": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 37
        }
      },
      "9": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 30
        }
      },
      "10": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 76
        }
      },
      "11": {
        start: {
          line: 40,
          column: 27
        },
        end: {
          line: 53,
          column: 9
        }
      },
      "12": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 50
        }
      },
      "13": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 101,
          column: 9
        }
      },
      "14": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 56,
          column: 60
        }
      },
      "15": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 65,
          column: 13
        }
      },
      "16": {
        start: {
          line: 59,
          column: 42
        },
        end: {
          line: 63,
          column: 18
        }
      },
      "17": {
        start: {
          line: 64,
          column: 16
        },
        end: {
          line: 64,
          column: 66
        }
      },
      "18": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 76,
          column: 13
        }
      },
      "19": {
        start: {
          line: 67,
          column: 24
        },
        end: {
          line: 67,
          column: 25
        }
      },
      "20": {
        start: {
          line: 68,
          column: 29
        },
        end: {
          line: 68,
          column: 42
        }
      },
      "21": {
        start: {
          line: 69,
          column: 35
        },
        end: {
          line: 69,
          column: 84
        }
      },
      "22": {
        start: {
          line: 70,
          column: 16
        },
        end: {
          line: 70,
          column: 50
        }
      },
      "23": {
        start: {
          line: 72,
          column: 16
        },
        end: {
          line: 75,
          column: 17
        }
      },
      "24": {
        start: {
          line: 73,
          column: 20
        },
        end: {
          line: 73,
          column: 49
        }
      },
      "25": {
        start: {
          line: 74,
          column: 20
        },
        end: {
          line: 74,
          column: 26
        }
      },
      "26": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 81,
          column: 13
        }
      },
      "27": {
        start: {
          line: 79,
          column: 39
        },
        end: {
          line: 79,
          column: 94
        }
      },
      "28": {
        start: {
          line: 79,
          column: 69
        },
        end: {
          line: 79,
          column: 93
        }
      },
      "29": {
        start: {
          line: 80,
          column: 16
        },
        end: {
          line: 80,
          column: 73
        }
      },
      "30": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 90,
          column: 13
        }
      },
      "31": {
        start: {
          line: 84,
          column: 40
        },
        end: {
          line: 88,
          column: 18
        }
      },
      "32": {
        start: {
          line: 89,
          column: 16
        },
        end: {
          line: 89,
          column: 64
        }
      },
      "33": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 67
        }
      },
      "34": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 41
        }
      },
      "35": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 94,
          column: 91
        }
      },
      "36": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 96,
          column: 44
        }
      },
      "37": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 97,
          column: 96
        }
      },
      "38": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 98,
          column: 45
        }
      },
      "39": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 46
        }
      },
      "40": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 91
        }
      },
      "41": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 102,
          column: 26
        }
      },
      "42": {
        start: {
          line: 107,
          column: 27
        },
        end: {
          line: 113,
          column: 9
        }
      },
      "43": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 160,
          column: 9
        }
      },
      "44": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 115,
          column: 62
        }
      },
      "45": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 66
        }
      },
      "46": {
        start: {
          line: 118,
          column: 28
        },
        end: {
          line: 118,
          column: 68
        }
      },
      "47": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 122,
          column: 15
        }
      },
      "48": {
        start: {
          line: 121,
          column: 41
        },
        end: {
          line: 121,
          column: 119
        }
      },
      "49": {
        start: {
          line: 121,
          column: 56
        },
        end: {
          line: 121,
          column: 109
        }
      },
      "50": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 123,
          column: 41
        }
      },
      "51": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 124,
          column: 66
        }
      },
      "52": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 125,
          column: 63
        }
      },
      "53": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 135,
          column: 13
        }
      },
      "54": {
        start: {
          line: 128,
          column: 35
        },
        end: {
          line: 132,
          column: 18
        }
      },
      "55": {
        start: {
          line: 133,
          column: 16
        },
        end: {
          line: 133,
          column: 54
        }
      },
      "56": {
        start: {
          line: 134,
          column: 16
        },
        end: {
          line: 134,
          column: 59
        }
      },
      "57": {
        start: {
          line: 137,
          column: 33
        },
        end: {
          line: 137,
          column: 87
        }
      },
      "58": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 138,
          column: 41
        }
      },
      "59": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 139,
          column: 44
        }
      },
      "60": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 140,
          column: 60
        }
      },
      "61": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 141,
          column: 73
        }
      },
      "62": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 142,
          column: 80
        }
      },
      "63": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 156,
          column: 13
        }
      },
      "64": {
        start: {
          line: 145,
          column: 16
        },
        end: {
          line: 155,
          column: 17
        }
      },
      "65": {
        start: {
          line: 146,
          column: 44
        },
        end: {
          line: 150,
          column: 22
        }
      },
      "66": {
        start: {
          line: 151,
          column: 20
        },
        end: {
          line: 151,
          column: 63
        }
      },
      "67": {
        start: {
          line: 152,
          column: 20
        },
        end: {
          line: 152,
          column: 68
        }
      },
      "68": {
        start: {
          line: 154,
          column: 20
        },
        end: {
          line: 154,
          column: 92
        }
      },
      "69": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 158,
          column: 44
        }
      },
      "70": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 159,
          column: 96
        }
      },
      "71": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 161,
          column: 26
        }
      },
      "72": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 166,
          column: 72
        }
      },
      "73": {
        start: {
          line: 167,
          column: 25
        },
        end: {
          line: 167,
          column: 75
        }
      },
      "74": {
        start: {
          line: 167,
          column: 43
        },
        end: {
          line: 167,
          column: 74
        }
      },
      "75": {
        start: {
          line: 168,
          column: 24
        },
        end: {
          line: 168,
          column: 58
        }
      },
      "76": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 189,
          column: 11
        }
      },
      "77": {
        start: {
          line: 170,
          column: 12
        },
        end: {
          line: 188,
          column: 13
        }
      },
      "78": {
        start: {
          line: 171,
          column: 16
        },
        end: {
          line: 171,
          column: 36
        }
      },
      "79": {
        start: {
          line: 174,
          column: 16
        },
        end: {
          line: 187,
          column: 18
        }
      },
      "80": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 194,
          column: 52
        }
      },
      "81": {
        start: {
          line: 199,
          column: 24
        },
        end: {
          line: 201,
          column: 19
        }
      },
      "82": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 202,
          column: 57
        }
      },
      "83": {
        start: {
          line: 207,
          column: 22
        },
        end: {
          line: 207,
          column: 45
        }
      },
      "84": {
        start: {
          line: 208,
          column: 23
        },
        end: {
          line: 208,
          column: 81
        }
      },
      "85": {
        start: {
          line: 208,
          column: 52
        },
        end: {
          line: 208,
          column: 73
        }
      },
      "86": {
        start: {
          line: 209,
          column: 23
        },
        end: {
          line: 209,
          column: 81
        }
      },
      "87": {
        start: {
          line: 209,
          column: 52
        },
        end: {
          line: 209,
          column: 73
        }
      },
      "88": {
        start: {
          line: 210,
          column: 28
        },
        end: {
          line: 210,
          column: 64
        }
      },
      "89": {
        start: {
          line: 211,
          column: 30
        },
        end: {
          line: 211,
          column: 91
        }
      },
      "90": {
        start: {
          line: 211,
          column: 64
        },
        end: {
          line: 211,
          column: 87
        }
      },
      "91": {
        start: {
          line: 212,
          column: 32
        },
        end: {
          line: 212,
          column: 69
        }
      },
      "92": {
        start: {
          line: 213,
          column: 33
        },
        end: {
          line: 213,
          column: 97
        }
      },
      "93": {
        start: {
          line: 213,
          column: 67
        },
        end: {
          line: 213,
          column: 93
        }
      },
      "94": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 221,
          column: 10
        }
      },
      "95": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 226,
          column: 30
        }
      },
      "96": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 237,
          column: 9
        }
      },
      "97": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 232,
          column: 41
        }
      },
      "98": {
        start: {
          line: 233,
          column: 12
        },
        end: {
          line: 233,
          column: 44
        }
      },
      "99": {
        start: {
          line: 234,
          column: 12
        },
        end: {
          line: 234,
          column: 96
        }
      },
      "100": {
        start: {
          line: 235,
          column: 12
        },
        end: {
          line: 235,
          column: 65
        }
      },
      "101": {
        start: {
          line: 236,
          column: 12
        },
        end: {
          line: 236,
          column: 46
        }
      },
      "102": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 238,
          column: 33
        }
      },
      "103": {
        start: {
          line: 241,
          column: 24
        },
        end: {
          line: 340,
          column: 1
        }
      },
      "104": {
        start: {
          line: 259,
          column: 20
        },
        end: {
          line: 259,
          column: 76
        }
      },
      "105": {
        start: {
          line: 259,
          column: 49
        },
        end: {
          line: 259,
          column: 74
        }
      },
      "106": {
        start: {
          line: 268,
          column: 20
        },
        end: {
          line: 268,
          column: 75
        }
      },
      "107": {
        start: {
          line: 268,
          column: 49
        },
        end: {
          line: 268,
          column: 73
        }
      },
      "108": {
        start: {
          line: 277,
          column: 20
        },
        end: {
          line: 277,
          column: 75
        }
      },
      "109": {
        start: {
          line: 277,
          column: 49
        },
        end: {
          line: 277,
          column: 73
        }
      },
      "110": {
        start: {
          line: 286,
          column: 20
        },
        end: {
          line: 286,
          column: 76
        }
      },
      "111": {
        start: {
          line: 286,
          column: 49
        },
        end: {
          line: 286,
          column: 74
        }
      },
      "112": {
        start: {
          line: 295,
          column: 20
        },
        end: {
          line: 295,
          column: 75
        }
      },
      "113": {
        start: {
          line: 295,
          column: 49
        },
        end: {
          line: 295,
          column: 73
        }
      },
      "114": {
        start: {
          line: 316,
          column: 20
        },
        end: {
          line: 316,
          column: 75
        }
      },
      "115": {
        start: {
          line: 316,
          column: 49
        },
        end: {
          line: 316,
          column: 73
        }
      },
      "116": {
        start: {
          line: 325,
          column: 20
        },
        end: {
          line: 325,
          column: 76
        }
      },
      "117": {
        start: {
          line: 325,
          column: 49
        },
        end: {
          line: 325,
          column: 74
        }
      },
      "118": {
        start: {
          line: 334,
          column: 20
        },
        end: {
          line: 334,
          column: 75
        }
      },
      "119": {
        start: {
          line: 334,
          column: 49
        },
        end: {
          line: 334,
          column: 73
        }
      },
      "120": {
        start: {
          line: 341,
          column: 24
        },
        end: {
          line: 341,
          column: 53
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 13,
            column: 9
          },
          end: {
            line: 13,
            column: 16
          }
        },
        loc: {
          start: {
            line: 13,
            column: 30
          },
          end: {
            line: 18,
            column: 1
          }
        },
        line: 13
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        loc: {
          start: {
            line: 20,
            column: 35
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 20
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        loc: {
          start: {
            line: 23,
            column: 27
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 23
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        loc: {
          start: {
            line: 26,
            column: 27
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 26
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        loc: {
          start: {
            line: 32,
            column: 17
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 32
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 39,
            column: 6
          },
          end: {
            line: 39,
            column: 7
          }
        },
        loc: {
          start: {
            line: 39,
            column: 44
          },
          end: {
            line: 103,
            column: 5
          }
        },
        line: 39
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 79,
            column: 61
          },
          end: {
            line: 79,
            column: 62
          }
        },
        loc: {
          start: {
            line: 79,
            column: 69
          },
          end: {
            line: 79,
            column: 93
          }
        },
        line: 79
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 106,
            column: 6
          },
          end: {
            line: 106,
            column: 7
          }
        },
        loc: {
          start: {
            line: 106,
            column: 51
          },
          end: {
            line: 162,
            column: 5
          }
        },
        line: 106
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 121,
            column: 28
          },
          end: {
            line: 121,
            column: 29
          }
        },
        loc: {
          start: {
            line: 121,
            column: 41
          },
          end: {
            line: 121,
            column: 119
          }
        },
        line: 121
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 121,
            column: 52
          },
          end: {
            line: 121,
            column: 53
          }
        },
        loc: {
          start: {
            line: 121,
            column: 56
          },
          end: {
            line: 121,
            column: 109
          }
        },
        line: 121
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 165,
            column: 6
          },
          end: {
            line: 165,
            column: 7
          }
        },
        loc: {
          start: {
            line: 165,
            column: 54
          },
          end: {
            line: 190,
            column: 5
          }
        },
        line: 165
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 167,
            column: 35
          },
          end: {
            line: 167,
            column: 36
          }
        },
        loc: {
          start: {
            line: 167,
            column: 43
          },
          end: {
            line: 167,
            column: 74
          }
        },
        line: 167
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 169,
            column: 27
          },
          end: {
            line: 169,
            column: 28
          }
        },
        loc: {
          start: {
            line: 169,
            column: 44
          },
          end: {
            line: 189,
            column: 9
          }
        },
        line: 169
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 193,
            column: 6
          },
          end: {
            line: 193,
            column: 7
          }
        },
        loc: {
          start: {
            line: 193,
            column: 28
          },
          end: {
            line: 195,
            column: 5
          }
        },
        line: 193
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 198,
            column: 6
          },
          end: {
            line: 198,
            column: 7
          }
        },
        loc: {
          start: {
            line: 198,
            column: 28
          },
          end: {
            line: 203,
            column: 5
          }
        },
        line: 198
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 206,
            column: 6
          },
          end: {
            line: 206,
            column: 7
          }
        },
        loc: {
          start: {
            line: 206,
            column: 26
          },
          end: {
            line: 222,
            column: 5
          }
        },
        line: 206
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 208,
            column: 47
          },
          end: {
            line: 208,
            column: 48
          }
        },
        loc: {
          start: {
            line: 208,
            column: 52
          },
          end: {
            line: 208,
            column: 73
          }
        },
        line: 208
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 209,
            column: 47
          },
          end: {
            line: 209,
            column: 48
          }
        },
        loc: {
          start: {
            line: 209,
            column: 52
          },
          end: {
            line: 209,
            column: 73
          }
        },
        line: 209
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 211,
            column: 54
          },
          end: {
            line: 211,
            column: 55
          }
        },
        loc: {
          start: {
            line: 211,
            column: 64
          },
          end: {
            line: 211,
            column: 87
          }
        },
        line: 211
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 213,
            column: 57
          },
          end: {
            line: 213,
            column: 58
          }
        },
        loc: {
          start: {
            line: 213,
            column: 67
          },
          end: {
            line: 213,
            column: 93
          }
        },
        line: 213
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 225,
            column: 6
          },
          end: {
            line: 225,
            column: 7
          }
        },
        loc: {
          start: {
            line: 225,
            column: 21
          },
          end: {
            line: 227,
            column: 5
          }
        },
        line: 225
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 230,
            column: 6
          },
          end: {
            line: 230,
            column: 7
          }
        },
        loc: {
          start: {
            line: 230,
            column: 21
          },
          end: {
            line: 239,
            column: 5
          }
        },
        line: 230
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 257,
            column: 24
          },
          end: {
            line: 257,
            column: 25
          }
        },
        loc: {
          start: {
            line: 257,
            column: 34
          },
          end: {
            line: 260,
            column: 17
          }
        },
        line: 257
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 259,
            column: 38
          },
          end: {
            line: 259,
            column: 39
          }
        },
        loc: {
          start: {
            line: 259,
            column: 49
          },
          end: {
            line: 259,
            column: 74
          }
        },
        line: 259
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 267,
            column: 24
          },
          end: {
            line: 267,
            column: 25
          }
        },
        loc: {
          start: {
            line: 267,
            column: 34
          },
          end: {
            line: 269,
            column: 17
          }
        },
        line: 267
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 268,
            column: 38
          },
          end: {
            line: 268,
            column: 39
          }
        },
        loc: {
          start: {
            line: 268,
            column: 49
          },
          end: {
            line: 268,
            column: 73
          }
        },
        line: 268
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 276,
            column: 24
          },
          end: {
            line: 276,
            column: 25
          }
        },
        loc: {
          start: {
            line: 276,
            column: 34
          },
          end: {
            line: 278,
            column: 17
          }
        },
        line: 276
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 277,
            column: 38
          },
          end: {
            line: 277,
            column: 39
          }
        },
        loc: {
          start: {
            line: 277,
            column: 49
          },
          end: {
            line: 277,
            column: 73
          }
        },
        line: 277
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 285,
            column: 24
          },
          end: {
            line: 285,
            column: 25
          }
        },
        loc: {
          start: {
            line: 285,
            column: 34
          },
          end: {
            line: 287,
            column: 17
          }
        },
        line: 285
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 286,
            column: 38
          },
          end: {
            line: 286,
            column: 39
          }
        },
        loc: {
          start: {
            line: 286,
            column: 49
          },
          end: {
            line: 286,
            column: 74
          }
        },
        line: 286
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 294,
            column: 24
          },
          end: {
            line: 294,
            column: 25
          }
        },
        loc: {
          start: {
            line: 294,
            column: 34
          },
          end: {
            line: 296,
            column: 17
          }
        },
        line: 294
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 295,
            column: 38
          },
          end: {
            line: 295,
            column: 39
          }
        },
        loc: {
          start: {
            line: 295,
            column: 49
          },
          end: {
            line: 295,
            column: 73
          }
        },
        line: 295
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 315,
            column: 24
          },
          end: {
            line: 315,
            column: 25
          }
        },
        loc: {
          start: {
            line: 315,
            column: 34
          },
          end: {
            line: 317,
            column: 17
          }
        },
        line: 315
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 316,
            column: 38
          },
          end: {
            line: 316,
            column: 39
          }
        },
        loc: {
          start: {
            line: 316,
            column: 49
          },
          end: {
            line: 316,
            column: 73
          }
        },
        line: 316
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 324,
            column: 24
          },
          end: {
            line: 324,
            column: 25
          }
        },
        loc: {
          start: {
            line: 324,
            column: 34
          },
          end: {
            line: 326,
            column: 17
          }
        },
        line: 324
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 325,
            column: 38
          },
          end: {
            line: 325,
            column: 39
          }
        },
        loc: {
          start: {
            line: 325,
            column: 49
          },
          end: {
            line: 325,
            column: 74
          }
        },
        line: 325
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 333,
            column: 24
          },
          end: {
            line: 333,
            column: 25
          }
        },
        loc: {
          start: {
            line: 333,
            column: 34
          },
          end: {
            line: 335,
            column: 17
          }
        },
        line: 333
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 334,
            column: 38
          },
          end: {
            line: 334,
            column: 39
          }
        },
        loc: {
          start: {
            line: 334,
            column: 49
          },
          end: {
            line: 334,
            column: 73
          }
        },
        line: 334
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 39,
            column: 30
          },
          end: {
            line: 39,
            column: 42
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 39,
            column: 40
          },
          end: {
            line: 39,
            column: 42
          }
        }],
        line: 39
      },
      "1": {
        loc: {
          start: {
            line: 49,
            column: 29
          },
          end: {
            line: 49,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 29
          },
          end: {
            line: 49,
            column: 48
          }
        }, {
          start: {
            line: 49,
            column: 52
          },
          end: {
            line: 49,
            column: 58
          }
        }],
        line: 49
      },
      "2": {
        loc: {
          start: {
            line: 50,
            column: 22
          },
          end: {
            line: 50,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 22
          },
          end: {
            line: 50,
            column: 31
          }
        }, {
          start: {
            line: 50,
            column: 35
          },
          end: {
            line: 50,
            column: 37
          }
        }],
        line: 50
      },
      "3": {
        loc: {
          start: {
            line: 51,
            column: 26
          },
          end: {
            line: 51,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 26
          },
          end: {
            line: 51,
            column: 39
          }
        }, {
          start: {
            line: 51,
            column: 43
          },
          end: {
            line: 51,
            column: 51
          }
        }],
        line: 51
      },
      "4": {
        loc: {
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 65,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 65,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "5": {
        loc: {
          start: {
            line: 72,
            column: 16
          },
          end: {
            line: 75,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 16
          },
          end: {
            line: 75,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 72
      },
      "6": {
        loc: {
          start: {
            line: 72,
            column: 20
          },
          end: {
            line: 72,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 20
          },
          end: {
            line: 72,
            column: 50
          }
        }, {
          start: {
            line: 72,
            column: 54
          },
          end: {
            line: 72,
            column: 70
          }
        }],
        line: 72
      },
      "7": {
        loc: {
          start: {
            line: 78,
            column: 12
          },
          end: {
            line: 81,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 12
          },
          end: {
            line: 81,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 78
      },
      "8": {
        loc: {
          start: {
            line: 80,
            column: 36
          },
          end: {
            line: 80,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 80,
            column: 53
          },
          end: {
            line: 80,
            column: 61
          }
        }, {
          start: {
            line: 80,
            column: 64
          },
          end: {
            line: 80,
            column: 72
          }
        }],
        line: 80
      },
      "9": {
        loc: {
          start: {
            line: 83,
            column: 12
          },
          end: {
            line: 90,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 83,
            column: 12
          },
          end: {
            line: 90,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 83
      },
      "10": {
        loc: {
          start: {
            line: 94,
            column: 35
          },
          end: {
            line: 94,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 94,
            column: 60
          },
          end: {
            line: 94,
            column: 73
          }
        }, {
          start: {
            line: 94,
            column: 76
          },
          end: {
            line: 94,
            column: 89
          }
        }],
        line: 94
      },
      "11": {
        loc: {
          start: {
            line: 118,
            column: 28
          },
          end: {
            line: 118,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 118,
            column: 28
          },
          end: {
            line: 118,
            column: 40
          }
        }, {
          start: {
            line: 118,
            column: 44
          },
          end: {
            line: 118,
            column: 59
          }
        }, {
          start: {
            line: 118,
            column: 63
          },
          end: {
            line: 118,
            column: 68
          }
        }],
        line: 118
      },
      "12": {
        loc: {
          start: {
            line: 127,
            column: 12
          },
          end: {
            line: 135,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 12
          },
          end: {
            line: 135,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 127
      },
      "13": {
        loc: {
          start: {
            line: 127,
            column: 16
          },
          end: {
            line: 127,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 127,
            column: 16
          },
          end: {
            line: 127,
            column: 31
          }
        }, {
          start: {
            line: 127,
            column: 35
          },
          end: {
            line: 127,
            column: 62
          }
        }],
        line: 127
      },
      "14": {
        loc: {
          start: {
            line: 137,
            column: 33
          },
          end: {
            line: 137,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 137,
            column: 58
          },
          end: {
            line: 137,
            column: 71
          }
        }, {
          start: {
            line: 137,
            column: 74
          },
          end: {
            line: 137,
            column: 87
          }
        }],
        line: 137
      },
      "15": {
        loc: {
          start: {
            line: 144,
            column: 12
          },
          end: {
            line: 156,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 144,
            column: 12
          },
          end: {
            line: 156,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 144
      },
      "16": {
        loc: {
          start: {
            line: 165,
            column: 40
          },
          end: {
            line: 165,
            column: 52
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 165,
            column: 50
          },
          end: {
            line: 165,
            column: 52
          }
        }],
        line: 165
      },
      "17": {
        loc: {
          start: {
            line: 170,
            column: 12
          },
          end: {
            line: 188,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 170,
            column: 12
          },
          end: {
            line: 188,
            column: 13
          }
        }, {
          start: {
            line: 172,
            column: 19
          },
          end: {
            line: 188,
            column: 13
          }
        }],
        line: 170
      },
      "18": {
        loc: {
          start: {
            line: 184,
            column: 24
          },
          end: {
            line: 184,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 184,
            column: 24
          },
          end: {
            line: 184,
            column: 46
          }
        }, {
          start: {
            line: 184,
            column: 50
          },
          end: {
            line: 184,
            column: 69
          }
        }],
        line: 184
      },
      "19": {
        loc: {
          start: {
            line: 194,
            column: 15
          },
          end: {
            line: 194,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 194,
            column: 15
          },
          end: {
            line: 194,
            column: 43
          }
        }, {
          start: {
            line: 194,
            column: 47
          },
          end: {
            line: 194,
            column: 51
          }
        }],
        line: 194
      },
      "20": {
        loc: {
          start: {
            line: 202,
            column: 15
          },
          end: {
            line: 202,
            column: 56
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 202,
            column: 23
          },
          end: {
            line: 202,
            column: 46
          }
        }, {
          start: {
            line: 202,
            column: 49
          },
          end: {
            line: 202,
            column: 56
          }
        }],
        line: 202
      },
      "21": {
        loc: {
          start: {
            line: 210,
            column: 28
          },
          end: {
            line: 210,
            column: 64
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 210,
            column: 40
          },
          end: {
            line: 210,
            column: 60
          }
        }, {
          start: {
            line: 210,
            column: 63
          },
          end: {
            line: 210,
            column: 64
          }
        }],
        line: 210
      },
      "22": {
        loc: {
          start: {
            line: 211,
            column: 71
          },
          end: {
            line: 211,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 211,
            column: 71
          },
          end: {
            line: 211,
            column: 81
          }
        }, {
          start: {
            line: 211,
            column: 85
          },
          end: {
            line: 211,
            column: 86
          }
        }],
        line: 211
      },
      "23": {
        loc: {
          start: {
            line: 212,
            column: 32
          },
          end: {
            line: 212,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 212,
            column: 44
          },
          end: {
            line: 212,
            column: 65
          }
        }, {
          start: {
            line: 212,
            column: 68
          },
          end: {
            line: 212,
            column: 69
          }
        }],
        line: 212
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\test-flow-manager.ts"],
      sourcesContent: ["/**\r\n * Advanced Test Flow Manager\r\n * \r\n * Gestiona la ejecuci\xF3n de flujos de test completos incluyendo:\r\n * - Ejecuci\xF3n de tests automatizados\r\n * - Captura de screenshots\r\n * - Generaci\xF3n de reportes\r\n * - Integraci\xF3n con el dashboard\r\n */\r\n\r\nimport { ScreenshotManager } from './screenshot-manager';\r\n\r\nexport interface TestStep {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  action: () => Promise<void>;\r\n  expectedResult?: string;\r\n  screenshot?: boolean;\r\n  timeout?: number;\r\n}\r\n\r\nexport interface TestFlow {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  steps: TestStep[];\r\n  tags?: string[];\r\n  priority?: 'low' | 'medium' | 'high' | 'critical';\r\n  environment?: string;\r\n}\r\n\r\nexport interface TestFlowResult {\r\n  flowId: string;\r\n  flowName: string;\r\n  startTime: Date;\r\n  endTime?: Date;\r\n  duration?: number;\r\n  status: 'pending' | 'running' | 'passed' | 'failed' | 'skipped';\r\n  steps: TestStepResult[];\r\n  screenshots: string[];\r\n  errors: string[];\r\n  metadata?: Record<string, any>;\r\n}\r\n\r\nexport interface TestStepResult {\r\n  stepId: string;\r\n  stepName: string;\r\n  status: 'pending' | 'running' | 'passed' | 'failed' | 'skipped';\r\n  startTime: Date;\r\n  endTime?: Date;\r\n  duration?: number;\r\n  screenshot?: string;\r\n  error?: string;\r\n  logs?: string[];\r\n}\r\n\r\nexport interface TestFlowOptions {\r\n  screenshotEnabled?: boolean;\r\n  screenshotOnFailure?: boolean;\r\n  screenshotOnSuccess?: boolean;\r\n  timeout?: number;\r\n  retries?: number;\r\n  parallel?: boolean;\r\n  environment?: string;\r\n  tags?: string[];\r\n}\r\n\r\nexport class AdvancedTestFlowManager {\r\n  private screenshotManager: ScreenshotManager;\r\n  private activeFlows: Map<string, TestFlowResult> = new Map();\r\n  private flowHistory: TestFlowResult[] = [];\r\n\r\n  constructor() {\r\n    this.screenshotManager = new ScreenshotManager();\r\n  }\r\n\r\n  /**\r\n   * Ejecuta un flujo de test completo\r\n   */\r\n  async executeFlow(\r\n    flow: TestFlow, \r\n    options: TestFlowOptions = {}\r\n  ): Promise<TestFlowResult> {\r\n    const flowResult: TestFlowResult = {\r\n      flowId: flow.id,\r\n      flowName: flow.name,\r\n      startTime: new Date(),\r\n      status: 'running',\r\n      steps: [],\r\n      screenshots: [],\r\n      errors: [],\r\n      metadata: {\r\n        environment: options.environment || 'test',\r\n        tags: flow.tags || [],\r\n        priority: flow.priority || 'medium'\r\n      }\r\n    };\r\n\r\n    this.activeFlows.set(flow.id, flowResult);\r\n\r\n    try {\r\n      console.log(`\uD83D\uDE80 Iniciando flujo: ${flow.name}`);\r\n      \r\n      // Tomar screenshot inicial si est\xE1 habilitado\r\n      if (options.screenshotEnabled) {\r\n        const initialScreenshot = await this.screenshotManager.captureScreenshot({\r\n          name: `${flow.id}_initial`,\r\n          stepName: 'Inicio del flujo',\r\n          fullPage: true\r\n        });\r\n        flowResult.screenshots.push(initialScreenshot.id);\r\n      }\r\n\r\n      // Ejecutar cada paso del flujo\r\n      for (let i = 0; i < flow.steps.length; i++) {\r\n        const step = flow.steps[i];\r\n        const stepResult = await this.executeStep(step, flowResult, options);\r\n        flowResult.steps.push(stepResult);\r\n\r\n        // Si el paso falla y no hay reintentos, detener el flujo\r\n        if (stepResult.status === 'failed' && !options.retries) {\r\n          flowResult.status = 'failed';\r\n          break;\r\n        }\r\n      }\r\n\r\n      // Determinar el estado final del flujo\r\n      if (flowResult.status === 'running') {\r\n        const hasFailedSteps = flowResult.steps.some(step => step.status === 'failed');\r\n        flowResult.status = hasFailedSteps ? 'failed' : 'passed';\r\n      }\r\n\r\n      // Tomar screenshot final si est\xE1 habilitado\r\n      if (options.screenshotEnabled) {\r\n        const finalScreenshot = await this.screenshotManager.captureScreenshot({\r\n          name: `${flow.id}_final`,\r\n          stepName: 'Fin del flujo',\r\n          fullPage: true\r\n        });\r\n        flowResult.screenshots.push(finalScreenshot.id);\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error(`\u274C Error en flujo ${flow.name}:`, error);\r\n      flowResult.status = 'failed';\r\n      flowResult.errors.push(error instanceof Error ? error.message : String(error));\r\n    } finally {\r\n      flowResult.endTime = new Date();\r\n      flowResult.duration = flowResult.endTime.getTime() - flowResult.startTime.getTime();\r\n      \r\n      this.activeFlows.delete(flow.id);\r\n      this.flowHistory.push(flowResult);\r\n      \r\n      console.log(`\u2705 Flujo completado: ${flow.name} - Estado: ${flowResult.status}`);\r\n    }\r\n\r\n    return flowResult;\r\n  }\r\n\r\n  /**\r\n   * Ejecuta un paso individual del test\r\n   */\r\n  private async executeStep(\r\n    step: TestStep, \r\n    flowResult: TestFlowResult, \r\n    options: TestFlowOptions\r\n  ): Promise<TestStepResult> {\r\n    const stepResult: TestStepResult = {\r\n      stepId: step.id,\r\n      stepName: step.name,\r\n      status: 'running',\r\n      startTime: new Date(),\r\n      logs: []\r\n    };\r\n\r\n    try {\r\n      console.log(`  \uD83D\uDD04 Ejecutando paso: ${step.name}`);\r\n      stepResult.logs?.push(`Iniciando paso: ${step.name}`);\r\n\r\n      // Ejecutar la acci\xF3n del paso con timeout\r\n      const timeout = step.timeout || options.timeout || 30000;\r\n      await Promise.race([\r\n        step.action(),\r\n        new Promise((_, reject) => \r\n          setTimeout(() => reject(new Error(`Timeout de ${timeout}ms excedido`)), timeout)\r\n        )\r\n      ]);\r\n\r\n      stepResult.status = 'passed';\r\n      stepResult.logs?.push(`Paso completado exitosamente`);\r\n      console.log(`    \u2705 Paso completado: ${step.name}`);\r\n\r\n      // Tomar screenshot si est\xE1 configurado\r\n      if (step.screenshot || options.screenshotOnSuccess) {\r\n        const screenshot = await this.screenshotManager.captureScreenshot({\r\n          name: `${flowResult.flowId}_step_${step.id}`,\r\n          stepName: step.name,\r\n          fullPage: false\r\n        });\r\n        stepResult.screenshot = screenshot.id;\r\n        flowResult.screenshots.push(screenshot.id);\r\n      }\r\n\r\n    } catch (error) {\r\n      const errorMessage = error instanceof Error ? error.message : String(error);\r\n      stepResult.status = 'failed';\r\n      stepResult.error = errorMessage;\r\n      stepResult.logs?.push(`Error: ${errorMessage}`);\r\n      flowResult.errors.push(`Paso ${step.name}: ${errorMessage}`);\r\n      \r\n      console.error(`    \u274C Paso fallido: ${step.name} - ${errorMessage}`);\r\n\r\n      // Tomar screenshot en caso de error\r\n      if (options.screenshotOnFailure !== false) {\r\n        try {\r\n          const errorScreenshot = await this.screenshotManager.captureScreenshot({\r\n            name: `${flowResult.flowId}_error_${step.id}`,\r\n            stepName: `${step.name} (Error)`,\r\n            fullPage: true\r\n          });\r\n          stepResult.screenshot = errorScreenshot.id;\r\n          flowResult.screenshots.push(errorScreenshot.id);\r\n        } catch (screenshotError) {\r\n          console.error('Error capturando screenshot de error:', screenshotError);\r\n        }\r\n      }\r\n    } finally {\r\n      stepResult.endTime = new Date();\r\n      stepResult.duration = stepResult.endTime.getTime() - stepResult.startTime.getTime();\r\n    }\r\n\r\n    return stepResult;\r\n  }\r\n\r\n  /**\r\n   * Ejecuta m\xFAltiples flujos en paralelo\r\n   */\r\n  async executeFlowsParallel(\r\n    flows: TestFlow[], \r\n    options: TestFlowOptions = {}\r\n  ): Promise<TestFlowResult[]> {\r\n    console.log(`\uD83D\uDE80 Ejecutando ${flows.length} flujos en paralelo`);\r\n    \r\n    const promises = flows.map(flow => this.executeFlow(flow, options));\r\n    const results = await Promise.allSettled(promises);\r\n    \r\n    return results.map((result, index) => {\r\n      if (result.status === 'fulfilled') {\r\n        return result.value;\r\n      } else {\r\n        // Crear un resultado de error para flujos que fallaron completamente\r\n        return {\r\n          flowId: flows[index].id,\r\n          flowName: flows[index].name,\r\n          startTime: new Date(),\r\n          endTime: new Date(),\r\n          duration: 0,\r\n          status: 'failed' as const,\r\n          steps: [],\r\n          screenshots: [],\r\n          errors: [result.reason?.message || 'Error desconocido'],\r\n          metadata: {}\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Obtiene el estado de un flujo activo\r\n   */\r\n  getFlowStatus(flowId: string): TestFlowResult | null {\r\n    return this.activeFlows.get(flowId) || null;\r\n  }\r\n\r\n  /**\r\n   * Obtiene el historial de flujos ejecutados\r\n   */\r\n  getFlowHistory(limit?: number): TestFlowResult[] {\r\n    const history = [...this.flowHistory].reverse();\r\n    return limit ? history.slice(0, limit) : history;\r\n  }\r\n\r\n  /**\r\n   * Obtiene estad\xEDsticas de los flujos\r\n   */\r\n  getFlowStatistics(): {\r\n    total: number;\r\n    passed: number;\r\n    failed: number;\r\n    successRate: number;\r\n    averageDuration: number;\r\n    totalScreenshots: number;\r\n  } {\r\n    const total = this.flowHistory.length;\r\n    const passed = this.flowHistory.filter(f => f.status === 'passed').length;\r\n    const failed = this.flowHistory.filter(f => f.status === 'failed').length;\r\n    const successRate = total > 0 ? (passed / total) * 100 : 0;\r\n    \r\n    const totalDuration = this.flowHistory.reduce((sum, f) => sum + (f.duration || 0), 0);\r\n    const averageDuration = total > 0 ? totalDuration / total : 0;\r\n    \r\n    const totalScreenshots = this.flowHistory.reduce((sum, f) => sum + f.screenshots.length, 0);\r\n\r\n    return {\r\n      total,\r\n      passed,\r\n      failed,\r\n      successRate,\r\n      averageDuration,\r\n      totalScreenshots\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Limpia el historial de flujos\r\n   */\r\n  clearHistory(): void {\r\n    this.flowHistory = [];\r\n  }\r\n\r\n  /**\r\n   * Detiene todos los flujos activos\r\n   */\r\n  stopAllFlows(): void {\r\n    for (const [flowId, flowResult] of this.activeFlows) {\r\n      flowResult.status = 'failed';\r\n      flowResult.endTime = new Date();\r\n      flowResult.duration = flowResult.endTime.getTime() - flowResult.startTime.getTime();\r\n      flowResult.errors.push('Flujo detenido manualmente');\r\n      \r\n      this.flowHistory.push(flowResult);\r\n    }\r\n    \r\n    this.activeFlows.clear();\r\n  }\r\n}\r\n\r\n// Flujos de test predefinidos para e-commerce\r\nexport const predefinedFlows: TestFlow[] = [\r\n  {\r\n    id: 'ecommerce-complete-flow',\r\n    name: 'Flujo Completo E-commerce',\r\n    description: 'Test completo del flujo de compra en e-commerce',\r\n    priority: 'critical',\r\n    tags: ['e-commerce', 'checkout', 'integration'],\r\n    steps: [\r\n      {\r\n        id: 'navigate-home',\r\n        name: 'Navegar a p\xE1gina principal',\r\n        description: 'Abrir la p\xE1gina principal del e-commerce',\r\n        action: async () => {\r\n          // Simulaci\xF3n de navegaci\xF3n\r\n          await new Promise(resolve => setTimeout(resolve, 1000));\r\n        },\r\n        screenshot: true\r\n      },\r\n      {\r\n        id: 'search-product',\r\n        name: 'Buscar producto',\r\n        description: 'Buscar un producto espec\xEDfico',\r\n        action: async () => {\r\n          await new Promise(resolve => setTimeout(resolve, 800));\r\n        },\r\n        screenshot: true\r\n      },\r\n      {\r\n        id: 'add-to-cart',\r\n        name: 'Agregar al carrito',\r\n        description: 'Agregar producto al carrito de compras',\r\n        action: async () => {\r\n          await new Promise(resolve => setTimeout(resolve, 600));\r\n        },\r\n        screenshot: true\r\n      },\r\n      {\r\n        id: 'checkout-process',\r\n        name: 'Proceso de checkout',\r\n        description: 'Completar el proceso de compra',\r\n        action: async () => {\r\n          await new Promise(resolve => setTimeout(resolve, 1200));\r\n        },\r\n        screenshot: true\r\n      },\r\n      {\r\n        id: 'payment-confirmation',\r\n        name: 'Confirmaci\xF3n de pago',\r\n        description: 'Verificar confirmaci\xF3n de pago',\r\n        action: async () => {\r\n          await new Promise(resolve => setTimeout(resolve, 500));\r\n        },\r\n        screenshot: true\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    id: 'user-registration-flow',\r\n    name: 'Flujo de Registro de Usuario',\r\n    description: 'Test del proceso de registro de nuevos usuarios',\r\n    priority: 'high',\r\n    tags: ['authentication', 'registration'],\r\n    steps: [\r\n      {\r\n        id: 'open-registration',\r\n        name: 'Abrir formulario de registro',\r\n        description: 'Navegar al formulario de registro',\r\n        action: async () => {\r\n          await new Promise(resolve => setTimeout(resolve, 500));\r\n        },\r\n        screenshot: true\r\n      },\r\n      {\r\n        id: 'fill-form',\r\n        name: 'Llenar formulario',\r\n        description: 'Completar datos de registro',\r\n        action: async () => {\r\n          await new Promise(resolve => setTimeout(resolve, 1000));\r\n        },\r\n        screenshot: true\r\n      },\r\n      {\r\n        id: 'submit-registration',\r\n        name: 'Enviar registro',\r\n        description: 'Enviar formulario de registro',\r\n        action: async () => {\r\n          await new Promise(resolve => setTimeout(resolve, 800));\r\n        },\r\n        screenshot: true\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n// Instancia singleton del manager\r\nexport const testFlowManager = new AdvancedTestFlowManager();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["AdvancedTestFlowManager", "predefinedFlows", "testFlowManager", "activeFlows", "Map", "flowHistory", "screenshotManager", "ScreenshotManager", "executeFlow", "flow", "options", "flowResult", "flowId", "id", "flowName", "name", "startTime", "Date", "status", "steps", "screenshots", "errors", "metadata", "environment", "tags", "priority", "set", "console", "log", "screenshotEnabled", "initialScreenshot", "captureScreenshot", "stepName", "fullPage", "push", "i", "length", "step", "stepResult", "executeStep", "retries", "hasFailedSteps", "some", "finalScreenshot", "error", "Error", "message", "String", "endTime", "duration", "getTime", "delete", "stepId", "logs", "timeout", "Promise", "race", "action", "_", "reject", "setTimeout", "screenshot", "screenshotOnSuccess", "errorMessage", "screenshotOnFailure", "errorScreenshot", "screenshotError", "executeFlowsParallel", "flows", "promises", "map", "results", "allSettled", "result", "index", "value", "reason", "getFlowStatus", "get", "getFlowHistory", "limit", "history", "reverse", "slice", "getFlowStatistics", "total", "passed", "filter", "f", "failed", "successRate", "totalDuration", "reduce", "sum", "averageDuration", "totalScreenshots", "clearHistory", "stopAllFlows", "clear", "description", "resolve"],
      mappings: "AAAA;;;;;;;;CAQC;;;;;;;;;;;QA4DYA;eAAAA;;QA+QAC;eAAAA;;QA+FAC;eAAAA;;;mCAxaqB;AA0D3B,MAAMF;IAKX,aAAc;aAHNG,cAA2C,IAAIC;aAC/CC,cAAgC,EAAE;QAGxC,IAAI,CAACC,iBAAiB,GAAG,IAAIC,oCAAiB;IAChD;IAEA;;GAEC,GACD,MAAMC,YACJC,IAAc,EACdC,UAA2B,CAAC,CAAC,EACJ;QACzB,MAAMC,aAA6B;YACjCC,QAAQH,KAAKI,EAAE;YACfC,UAAUL,KAAKM,IAAI;YACnBC,WAAW,IAAIC;YACfC,QAAQ;YACRC,OAAO,EAAE;YACTC,aAAa,EAAE;YACfC,QAAQ,EAAE;YACVC,UAAU;gBACRC,aAAab,QAAQa,WAAW,IAAI;gBACpCC,MAAMf,KAAKe,IAAI,IAAI,EAAE;gBACrBC,UAAUhB,KAAKgB,QAAQ,IAAI;YAC7B;QACF;QAEA,IAAI,CAACtB,WAAW,CAACuB,GAAG,CAACjB,KAAKI,EAAE,EAAEF;QAE9B,IAAI;YACFgB,QAAQC,GAAG,CAAC,CAAC,oBAAoB,EAAEnB,KAAKM,IAAI,EAAE;YAE9C,8CAA8C;YAC9C,IAAIL,QAAQmB,iBAAiB,EAAE;gBAC7B,MAAMC,oBAAoB,MAAM,IAAI,CAACxB,iBAAiB,CAACyB,iBAAiB,CAAC;oBACvEhB,MAAM,GAAGN,KAAKI,EAAE,CAAC,QAAQ,CAAC;oBAC1BmB,UAAU;oBACVC,UAAU;gBACZ;gBACAtB,WAAWS,WAAW,CAACc,IAAI,CAACJ,kBAAkBjB,EAAE;YAClD;YAEA,+BAA+B;YAC/B,IAAK,IAAIsB,IAAI,GAAGA,IAAI1B,KAAKU,KAAK,CAACiB,MAAM,EAAED,IAAK;gBAC1C,MAAME,OAAO5B,KAAKU,KAAK,CAACgB,EAAE;gBAC1B,MAAMG,aAAa,MAAM,IAAI,CAACC,WAAW,CAACF,MAAM1B,YAAYD;gBAC5DC,WAAWQ,KAAK,CAACe,IAAI,CAACI;gBAEtB,yDAAyD;gBACzD,IAAIA,WAAWpB,MAAM,KAAK,YAAY,CAACR,QAAQ8B,OAAO,EAAE;oBACtD7B,WAAWO,MAAM,GAAG;oBACpB;gBACF;YACF;YAEA,uCAAuC;YACvC,IAAIP,WAAWO,MAAM,KAAK,WAAW;gBACnC,MAAMuB,iBAAiB9B,WAAWQ,KAAK,CAACuB,IAAI,CAACL,CAAAA,OAAQA,KAAKnB,MAAM,KAAK;gBACrEP,WAAWO,MAAM,GAAGuB,iBAAiB,WAAW;YAClD;YAEA,4CAA4C;YAC5C,IAAI/B,QAAQmB,iBAAiB,EAAE;gBAC7B,MAAMc,kBAAkB,MAAM,IAAI,CAACrC,iBAAiB,CAACyB,iBAAiB,CAAC;oBACrEhB,MAAM,GAAGN,KAAKI,EAAE,CAAC,MAAM,CAAC;oBACxBmB,UAAU;oBACVC,UAAU;gBACZ;gBACAtB,WAAWS,WAAW,CAACc,IAAI,CAACS,gBAAgB9B,EAAE;YAChD;QAEF,EAAE,OAAO+B,OAAO;YACdjB,QAAQiB,KAAK,CAAC,CAAC,iBAAiB,EAAEnC,KAAKM,IAAI,CAAC,CAAC,CAAC,EAAE6B;YAChDjC,WAAWO,MAAM,GAAG;YACpBP,WAAWU,MAAM,CAACa,IAAI,CAACU,iBAAiBC,QAAQD,MAAME,OAAO,GAAGC,OAAOH;QACzE,SAAU;YACRjC,WAAWqC,OAAO,GAAG,IAAI/B;YACzBN,WAAWsC,QAAQ,GAAGtC,WAAWqC,OAAO,CAACE,OAAO,KAAKvC,WAAWK,SAAS,CAACkC,OAAO;YAEjF,IAAI,CAAC/C,WAAW,CAACgD,MAAM,CAAC1C,KAAKI,EAAE;YAC/B,IAAI,CAACR,WAAW,CAAC6B,IAAI,CAACvB;YAEtBgB,QAAQC,GAAG,CAAC,CAAC,oBAAoB,EAAEnB,KAAKM,IAAI,CAAC,WAAW,EAAEJ,WAAWO,MAAM,EAAE;QAC/E;QAEA,OAAOP;IACT;IAEA;;GAEC,GACD,MAAc4B,YACZF,IAAc,EACd1B,UAA0B,EAC1BD,OAAwB,EACC;QACzB,MAAM4B,aAA6B;YACjCc,QAAQf,KAAKxB,EAAE;YACfmB,UAAUK,KAAKtB,IAAI;YACnBG,QAAQ;YACRF,WAAW,IAAIC;YACfoC,MAAM,EAAE;QACV;QAEA,IAAI;YACF1B,QAAQC,GAAG,CAAC,CAAC,sBAAsB,EAAES,KAAKtB,IAAI,EAAE;YAChDuB,WAAWe,IAAI,EAAEnB,KAAK,CAAC,gBAAgB,EAAEG,KAAKtB,IAAI,EAAE;YAEpD,0CAA0C;YAC1C,MAAMuC,UAAUjB,KAAKiB,OAAO,IAAI5C,QAAQ4C,OAAO,IAAI;YACnD,MAAMC,QAAQC,IAAI,CAAC;gBACjBnB,KAAKoB,MAAM;gBACX,IAAIF,QAAQ,CAACG,GAAGC,SACdC,WAAW,IAAMD,OAAO,IAAId,MAAM,CAAC,WAAW,EAAES,QAAQ,WAAW,CAAC,IAAIA;aAE3E;YAEDhB,WAAWpB,MAAM,GAAG;YACpBoB,WAAWe,IAAI,EAAEnB,KAAK,CAAC,4BAA4B,CAAC;YACpDP,QAAQC,GAAG,CAAC,CAAC,uBAAuB,EAAES,KAAKtB,IAAI,EAAE;YAEjD,uCAAuC;YACvC,IAAIsB,KAAKwB,UAAU,IAAInD,QAAQoD,mBAAmB,EAAE;gBAClD,MAAMD,aAAa,MAAM,IAAI,CAACvD,iBAAiB,CAACyB,iBAAiB,CAAC;oBAChEhB,MAAM,GAAGJ,WAAWC,MAAM,CAAC,MAAM,EAAEyB,KAAKxB,EAAE,EAAE;oBAC5CmB,UAAUK,KAAKtB,IAAI;oBACnBkB,UAAU;gBACZ;gBACAK,WAAWuB,UAAU,GAAGA,WAAWhD,EAAE;gBACrCF,WAAWS,WAAW,CAACc,IAAI,CAAC2B,WAAWhD,EAAE;YAC3C;QAEF,EAAE,OAAO+B,OAAO;YACd,MAAMmB,eAAenB,iBAAiBC,QAAQD,MAAME,OAAO,GAAGC,OAAOH;YACrEN,WAAWpB,MAAM,GAAG;YACpBoB,WAAWM,KAAK,GAAGmB;YACnBzB,WAAWe,IAAI,EAAEnB,KAAK,CAAC,OAAO,EAAE6B,cAAc;YAC9CpD,WAAWU,MAAM,CAACa,IAAI,CAAC,CAAC,KAAK,EAAEG,KAAKtB,IAAI,CAAC,EAAE,EAAEgD,cAAc;YAE3DpC,QAAQiB,KAAK,CAAC,CAAC,oBAAoB,EAAEP,KAAKtB,IAAI,CAAC,GAAG,EAAEgD,cAAc;YAElE,oCAAoC;YACpC,IAAIrD,QAAQsD,mBAAmB,KAAK,OAAO;gBACzC,IAAI;oBACF,MAAMC,kBAAkB,MAAM,IAAI,CAAC3D,iBAAiB,CAACyB,iBAAiB,CAAC;wBACrEhB,MAAM,GAAGJ,WAAWC,MAAM,CAAC,OAAO,EAAEyB,KAAKxB,EAAE,EAAE;wBAC7CmB,UAAU,GAAGK,KAAKtB,IAAI,CAAC,QAAQ,CAAC;wBAChCkB,UAAU;oBACZ;oBACAK,WAAWuB,UAAU,GAAGI,gBAAgBpD,EAAE;oBAC1CF,WAAWS,WAAW,CAACc,IAAI,CAAC+B,gBAAgBpD,EAAE;gBAChD,EAAE,OAAOqD,iBAAiB;oBACxBvC,QAAQiB,KAAK,CAAC,yCAAyCsB;gBACzD;YACF;QACF,SAAU;YACR5B,WAAWU,OAAO,GAAG,IAAI/B;YACzBqB,WAAWW,QAAQ,GAAGX,WAAWU,OAAO,CAACE,OAAO,KAAKZ,WAAWtB,SAAS,CAACkC,OAAO;QACnF;QAEA,OAAOZ;IACT;IAEA;;GAEC,GACD,MAAM6B,qBACJC,KAAiB,EACjB1D,UAA2B,CAAC,CAAC,EACF;QAC3BiB,QAAQC,GAAG,CAAC,CAAC,cAAc,EAAEwC,MAAMhC,MAAM,CAAC,mBAAmB,CAAC;QAE9D,MAAMiC,WAAWD,MAAME,GAAG,CAAC7D,CAAAA,OAAQ,IAAI,CAACD,WAAW,CAACC,MAAMC;QAC1D,MAAM6D,UAAU,MAAMhB,QAAQiB,UAAU,CAACH;QAEzC,OAAOE,QAAQD,GAAG,CAAC,CAACG,QAAQC;YAC1B,IAAID,OAAOvD,MAAM,KAAK,aAAa;gBACjC,OAAOuD,OAAOE,KAAK;YACrB,OAAO;gBACL,qEAAqE;gBACrE,OAAO;oBACL/D,QAAQwD,KAAK,CAACM,MAAM,CAAC7D,EAAE;oBACvBC,UAAUsD,KAAK,CAACM,MAAM,CAAC3D,IAAI;oBAC3BC,WAAW,IAAIC;oBACf+B,SAAS,IAAI/B;oBACbgC,UAAU;oBACV/B,QAAQ;oBACRC,OAAO,EAAE;oBACTC,aAAa,EAAE;oBACfC,QAAQ;wBAACoD,OAAOG,MAAM,EAAE9B,WAAW;qBAAoB;oBACvDxB,UAAU,CAAC;gBACb;YACF;QACF;IACF;IAEA;;GAEC,GACDuD,cAAcjE,MAAc,EAAyB;QACnD,OAAO,IAAI,CAACT,WAAW,CAAC2E,GAAG,CAAClE,WAAW;IACzC;IAEA;;GAEC,GACDmE,eAAeC,KAAc,EAAoB;QAC/C,MAAMC,UAAU;eAAI,IAAI,CAAC5E,WAAW;SAAC,CAAC6E,OAAO;QAC7C,OAAOF,QAAQC,QAAQE,KAAK,CAAC,GAAGH,SAASC;IAC3C;IAEA;;GAEC,GACDG,oBAOE;QACA,MAAMC,QAAQ,IAAI,CAAChF,WAAW,CAAC+B,MAAM;QACrC,MAAMkD,SAAS,IAAI,CAACjF,WAAW,CAACkF,MAAM,CAACC,CAAAA,IAAKA,EAAEtE,MAAM,KAAK,UAAUkB,MAAM;QACzE,MAAMqD,SAAS,IAAI,CAACpF,WAAW,CAACkF,MAAM,CAACC,CAAAA,IAAKA,EAAEtE,MAAM,KAAK,UAAUkB,MAAM;QACzE,MAAMsD,cAAcL,QAAQ,IAAI,AAACC,SAASD,QAAS,MAAM;QAEzD,MAAMM,gBAAgB,IAAI,CAACtF,WAAW,CAACuF,MAAM,CAAC,CAACC,KAAKL,IAAMK,MAAOL,CAAAA,EAAEvC,QAAQ,IAAI,CAAA,GAAI;QACnF,MAAM6C,kBAAkBT,QAAQ,IAAIM,gBAAgBN,QAAQ;QAE5D,MAAMU,mBAAmB,IAAI,CAAC1F,WAAW,CAACuF,MAAM,CAAC,CAACC,KAAKL,IAAMK,MAAML,EAAEpE,WAAW,CAACgB,MAAM,EAAE;QAEzF,OAAO;YACLiD;YACAC;YACAG;YACAC;YACAI;YACAC;QACF;IACF;IAEA;;GAEC,GACDC,eAAqB;QACnB,IAAI,CAAC3F,WAAW,GAAG,EAAE;IACvB;IAEA;;GAEC,GACD4F,eAAqB;QACnB,KAAK,MAAM,CAACrF,QAAQD,WAAW,IAAI,IAAI,CAACR,WAAW,CAAE;YACnDQ,WAAWO,MAAM,GAAG;YACpBP,WAAWqC,OAAO,GAAG,IAAI/B;YACzBN,WAAWsC,QAAQ,GAAGtC,WAAWqC,OAAO,CAACE,OAAO,KAAKvC,WAAWK,SAAS,CAACkC,OAAO;YACjFvC,WAAWU,MAAM,CAACa,IAAI,CAAC;YAEvB,IAAI,CAAC7B,WAAW,CAAC6B,IAAI,CAACvB;QACxB;QAEA,IAAI,CAACR,WAAW,CAAC+F,KAAK;IACxB;AACF;AAGO,MAAMjG,kBAA8B;IACzC;QACEY,IAAI;QACJE,MAAM;QACNoF,aAAa;QACb1E,UAAU;QACVD,MAAM;YAAC;YAAc;YAAY;SAAc;QAC/CL,OAAO;YACL;gBACEN,IAAI;gBACJE,MAAM;gBACNoF,aAAa;gBACb1C,QAAQ;oBACN,2BAA2B;oBAC3B,MAAM,IAAIF,QAAQ6C,CAAAA,UAAWxC,WAAWwC,SAAS;gBACnD;gBACAvC,YAAY;YACd;YACA;gBACEhD,IAAI;gBACJE,MAAM;gBACNoF,aAAa;gBACb1C,QAAQ;oBACN,MAAM,IAAIF,QAAQ6C,CAAAA,UAAWxC,WAAWwC,SAAS;gBACnD;gBACAvC,YAAY;YACd;YACA;gBACEhD,IAAI;gBACJE,MAAM;gBACNoF,aAAa;gBACb1C,QAAQ;oBACN,MAAM,IAAIF,QAAQ6C,CAAAA,UAAWxC,WAAWwC,SAAS;gBACnD;gBACAvC,YAAY;YACd;YACA;gBACEhD,IAAI;gBACJE,MAAM;gBACNoF,aAAa;gBACb1C,QAAQ;oBACN,MAAM,IAAIF,QAAQ6C,CAAAA,UAAWxC,WAAWwC,SAAS;gBACnD;gBACAvC,YAAY;YACd;YACA;gBACEhD,IAAI;gBACJE,MAAM;gBACNoF,aAAa;gBACb1C,QAAQ;oBACN,MAAM,IAAIF,QAAQ6C,CAAAA,UAAWxC,WAAWwC,SAAS;gBACnD;gBACAvC,YAAY;YACd;SACD;IACH;IACA;QACEhD,IAAI;QACJE,MAAM;QACNoF,aAAa;QACb1E,UAAU;QACVD,MAAM;YAAC;YAAkB;SAAe;QACxCL,OAAO;YACL;gBACEN,IAAI;gBACJE,MAAM;gBACNoF,aAAa;gBACb1C,QAAQ;oBACN,MAAM,IAAIF,QAAQ6C,CAAAA,UAAWxC,WAAWwC,SAAS;gBACnD;gBACAvC,YAAY;YACd;YACA;gBACEhD,IAAI;gBACJE,MAAM;gBACNoF,aAAa;gBACb1C,QAAQ;oBACN,MAAM,IAAIF,QAAQ6C,CAAAA,UAAWxC,WAAWwC,SAAS;gBACnD;gBACAvC,YAAY;YACd;YACA;gBACEhD,IAAI;gBACJE,MAAM;gBACNoF,aAAa;gBACb1C,QAAQ;oBACN,MAAM,IAAIF,QAAQ6C,CAAAA,UAAWxC,WAAWwC,SAAS;gBACnD;gBACAvC,YAAY;YACd;SACD;IACH;CACD;AAGM,MAAM3D,kBAAkB,IAAIF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a94310040710020684a6341201eb2812fc796be0"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_28kxzuk0zx = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_28kxzuk0zx();
cov_28kxzuk0zx().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_28kxzuk0zx().f[0]++;
  cov_28kxzuk0zx().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_28kxzuk0zx().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_28kxzuk0zx().s[3]++;
_export(exports, {
  get AdvancedTestFlowManager() {
    /* istanbul ignore next */
    cov_28kxzuk0zx().f[1]++;
    cov_28kxzuk0zx().s[4]++;
    return AdvancedTestFlowManager;
  },
  get predefinedFlows() {
    /* istanbul ignore next */
    cov_28kxzuk0zx().f[2]++;
    cov_28kxzuk0zx().s[5]++;
    return predefinedFlows;
  },
  get testFlowManager() {
    /* istanbul ignore next */
    cov_28kxzuk0zx().f[3]++;
    cov_28kxzuk0zx().s[6]++;
    return testFlowManager;
  }
});
const _screenshotmanager =
/* istanbul ignore next */
(cov_28kxzuk0zx().s[7]++, require("./screenshot-manager"));
class AdvancedTestFlowManager {
  constructor() {
    /* istanbul ignore next */
    cov_28kxzuk0zx().f[4]++;
    cov_28kxzuk0zx().s[8]++;
    this.activeFlows = new Map();
    /* istanbul ignore next */
    cov_28kxzuk0zx().s[9]++;
    this.flowHistory = [];
    /* istanbul ignore next */
    cov_28kxzuk0zx().s[10]++;
    this.screenshotManager = new _screenshotmanager.ScreenshotManager();
  }
  /**
  * Ejecuta un flujo de test completo
  */
  async executeFlow(flow, options =
  /* istanbul ignore next */
  (cov_28kxzuk0zx().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_28kxzuk0zx().f[5]++;
    const flowResult =
    /* istanbul ignore next */
    (cov_28kxzuk0zx().s[11]++, {
      flowId: flow.id,
      flowName: flow.name,
      startTime: new Date(),
      status: 'running',
      steps: [],
      screenshots: [],
      errors: [],
      metadata: {
        environment:
        /* istanbul ignore next */
        (cov_28kxzuk0zx().b[1][0]++, options.environment) ||
        /* istanbul ignore next */
        (cov_28kxzuk0zx().b[1][1]++, 'test'),
        tags:
        /* istanbul ignore next */
        (cov_28kxzuk0zx().b[2][0]++, flow.tags) ||
        /* istanbul ignore next */
        (cov_28kxzuk0zx().b[2][1]++, []),
        priority:
        /* istanbul ignore next */
        (cov_28kxzuk0zx().b[3][0]++, flow.priority) ||
        /* istanbul ignore next */
        (cov_28kxzuk0zx().b[3][1]++, 'medium')
      }
    });
    /* istanbul ignore next */
    cov_28kxzuk0zx().s[12]++;
    this.activeFlows.set(flow.id, flowResult);
    /* istanbul ignore next */
    cov_28kxzuk0zx().s[13]++;
    try {
      /* istanbul ignore next */
      cov_28kxzuk0zx().s[14]++;
      console.log(`🚀 Iniciando flujo: ${flow.name}`);
      // Tomar screenshot inicial si está habilitado
      /* istanbul ignore next */
      cov_28kxzuk0zx().s[15]++;
      if (options.screenshotEnabled) {
        /* istanbul ignore next */
        cov_28kxzuk0zx().b[4][0]++;
        const initialScreenshot =
        /* istanbul ignore next */
        (cov_28kxzuk0zx().s[16]++, await this.screenshotManager.captureScreenshot({
          name: `${flow.id}_initial`,
          stepName: 'Inicio del flujo',
          fullPage: true
        }));
        /* istanbul ignore next */
        cov_28kxzuk0zx().s[17]++;
        flowResult.screenshots.push(initialScreenshot.id);
      } else
      /* istanbul ignore next */
      {
        cov_28kxzuk0zx().b[4][1]++;
      }
      // Ejecutar cada paso del flujo
      cov_28kxzuk0zx().s[18]++;
      for (let i =
      /* istanbul ignore next */
      (cov_28kxzuk0zx().s[19]++, 0); i < flow.steps.length; i++) {
        const step =
        /* istanbul ignore next */
        (cov_28kxzuk0zx().s[20]++, flow.steps[i]);
        const stepResult =
        /* istanbul ignore next */
        (cov_28kxzuk0zx().s[21]++, await this.executeStep(step, flowResult, options));
        /* istanbul ignore next */
        cov_28kxzuk0zx().s[22]++;
        flowResult.steps.push(stepResult);
        // Si el paso falla y no hay reintentos, detener el flujo
        /* istanbul ignore next */
        cov_28kxzuk0zx().s[23]++;
        if (
        /* istanbul ignore next */
        (cov_28kxzuk0zx().b[6][0]++, stepResult.status === 'failed') &&
        /* istanbul ignore next */
        (cov_28kxzuk0zx().b[6][1]++, !options.retries)) {
          /* istanbul ignore next */
          cov_28kxzuk0zx().b[5][0]++;
          cov_28kxzuk0zx().s[24]++;
          flowResult.status = 'failed';
          /* istanbul ignore next */
          cov_28kxzuk0zx().s[25]++;
          break;
        } else
        /* istanbul ignore next */
        {
          cov_28kxzuk0zx().b[5][1]++;
        }
      }
      // Determinar el estado final del flujo
      /* istanbul ignore next */
      cov_28kxzuk0zx().s[26]++;
      if (flowResult.status === 'running') {
        /* istanbul ignore next */
        cov_28kxzuk0zx().b[7][0]++;
        const hasFailedSteps =
        /* istanbul ignore next */
        (cov_28kxzuk0zx().s[27]++, flowResult.steps.some(step => {
          /* istanbul ignore next */
          cov_28kxzuk0zx().f[6]++;
          cov_28kxzuk0zx().s[28]++;
          return step.status === 'failed';
        }));
        /* istanbul ignore next */
        cov_28kxzuk0zx().s[29]++;
        flowResult.status = hasFailedSteps ?
        /* istanbul ignore next */
        (cov_28kxzuk0zx().b[8][0]++, 'failed') :
        /* istanbul ignore next */
        (cov_28kxzuk0zx().b[8][1]++, 'passed');
      } else
      /* istanbul ignore next */
      {
        cov_28kxzuk0zx().b[7][1]++;
      }
      // Tomar screenshot final si está habilitado
      cov_28kxzuk0zx().s[30]++;
      if (options.screenshotEnabled) {
        /* istanbul ignore next */
        cov_28kxzuk0zx().b[9][0]++;
        const finalScreenshot =
        /* istanbul ignore next */
        (cov_28kxzuk0zx().s[31]++, await this.screenshotManager.captureScreenshot({
          name: `${flow.id}_final`,
          stepName: 'Fin del flujo',
          fullPage: true
        }));
        /* istanbul ignore next */
        cov_28kxzuk0zx().s[32]++;
        flowResult.screenshots.push(finalScreenshot.id);
      } else
      /* istanbul ignore next */
      {
        cov_28kxzuk0zx().b[9][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_28kxzuk0zx().s[33]++;
      console.error(`❌ Error en flujo ${flow.name}:`, error);
      /* istanbul ignore next */
      cov_28kxzuk0zx().s[34]++;
      flowResult.status = 'failed';
      /* istanbul ignore next */
      cov_28kxzuk0zx().s[35]++;
      flowResult.errors.push(error instanceof Error ?
      /* istanbul ignore next */
      (cov_28kxzuk0zx().b[10][0]++, error.message) :
      /* istanbul ignore next */
      (cov_28kxzuk0zx().b[10][1]++, String(error)));
    } finally {
      /* istanbul ignore next */
      cov_28kxzuk0zx().s[36]++;
      flowResult.endTime = new Date();
      /* istanbul ignore next */
      cov_28kxzuk0zx().s[37]++;
      flowResult.duration = flowResult.endTime.getTime() - flowResult.startTime.getTime();
      /* istanbul ignore next */
      cov_28kxzuk0zx().s[38]++;
      this.activeFlows.delete(flow.id);
      /* istanbul ignore next */
      cov_28kxzuk0zx().s[39]++;
      this.flowHistory.push(flowResult);
      /* istanbul ignore next */
      cov_28kxzuk0zx().s[40]++;
      console.log(`✅ Flujo completado: ${flow.name} - Estado: ${flowResult.status}`);
    }
    /* istanbul ignore next */
    cov_28kxzuk0zx().s[41]++;
    return flowResult;
  }
  /**
  * Ejecuta un paso individual del test
  */
  async executeStep(step, flowResult, options) {
    /* istanbul ignore next */
    cov_28kxzuk0zx().f[7]++;
    const stepResult =
    /* istanbul ignore next */
    (cov_28kxzuk0zx().s[42]++, {
      stepId: step.id,
      stepName: step.name,
      status: 'running',
      startTime: new Date(),
      logs: []
    });
    /* istanbul ignore next */
    cov_28kxzuk0zx().s[43]++;
    try {
      /* istanbul ignore next */
      cov_28kxzuk0zx().s[44]++;
      console.log(`  🔄 Ejecutando paso: ${step.name}`);
      /* istanbul ignore next */
      cov_28kxzuk0zx().s[45]++;
      stepResult.logs?.push(`Iniciando paso: ${step.name}`);
      // Ejecutar la acción del paso con timeout
      const timeout =
      /* istanbul ignore next */
      (cov_28kxzuk0zx().s[46]++,
      /* istanbul ignore next */
      (cov_28kxzuk0zx().b[11][0]++, step.timeout) ||
      /* istanbul ignore next */
      (cov_28kxzuk0zx().b[11][1]++, options.timeout) ||
      /* istanbul ignore next */
      (cov_28kxzuk0zx().b[11][2]++, 30000));
      /* istanbul ignore next */
      cov_28kxzuk0zx().s[47]++;
      await Promise.race([step.action(), new Promise((_, reject) => {
        /* istanbul ignore next */
        cov_28kxzuk0zx().f[8]++;
        cov_28kxzuk0zx().s[48]++;
        return setTimeout(() => {
          /* istanbul ignore next */
          cov_28kxzuk0zx().f[9]++;
          cov_28kxzuk0zx().s[49]++;
          return reject(new Error(`Timeout de ${timeout}ms excedido`));
        }, timeout);
      })]);
      /* istanbul ignore next */
      cov_28kxzuk0zx().s[50]++;
      stepResult.status = 'passed';
      /* istanbul ignore next */
      cov_28kxzuk0zx().s[51]++;
      stepResult.logs?.push(`Paso completado exitosamente`);
      /* istanbul ignore next */
      cov_28kxzuk0zx().s[52]++;
      console.log(`    ✅ Paso completado: ${step.name}`);
      // Tomar screenshot si está configurado
      /* istanbul ignore next */
      cov_28kxzuk0zx().s[53]++;
      if (
      /* istanbul ignore next */
      (cov_28kxzuk0zx().b[13][0]++, step.screenshot) ||
      /* istanbul ignore next */
      (cov_28kxzuk0zx().b[13][1]++, options.screenshotOnSuccess)) {
        /* istanbul ignore next */
        cov_28kxzuk0zx().b[12][0]++;
        const screenshot =
        /* istanbul ignore next */
        (cov_28kxzuk0zx().s[54]++, await this.screenshotManager.captureScreenshot({
          name: `${flowResult.flowId}_step_${step.id}`,
          stepName: step.name,
          fullPage: false
        }));
        /* istanbul ignore next */
        cov_28kxzuk0zx().s[55]++;
        stepResult.screenshot = screenshot.id;
        /* istanbul ignore next */
        cov_28kxzuk0zx().s[56]++;
        flowResult.screenshots.push(screenshot.id);
      } else
      /* istanbul ignore next */
      {
        cov_28kxzuk0zx().b[12][1]++;
      }
    } catch (error) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_28kxzuk0zx().s[57]++, error instanceof Error ?
      /* istanbul ignore next */
      (cov_28kxzuk0zx().b[14][0]++, error.message) :
      /* istanbul ignore next */
      (cov_28kxzuk0zx().b[14][1]++, String(error)));
      /* istanbul ignore next */
      cov_28kxzuk0zx().s[58]++;
      stepResult.status = 'failed';
      /* istanbul ignore next */
      cov_28kxzuk0zx().s[59]++;
      stepResult.error = errorMessage;
      /* istanbul ignore next */
      cov_28kxzuk0zx().s[60]++;
      stepResult.logs?.push(`Error: ${errorMessage}`);
      /* istanbul ignore next */
      cov_28kxzuk0zx().s[61]++;
      flowResult.errors.push(`Paso ${step.name}: ${errorMessage}`);
      /* istanbul ignore next */
      cov_28kxzuk0zx().s[62]++;
      console.error(`    ❌ Paso fallido: ${step.name} - ${errorMessage}`);
      // Tomar screenshot en caso de error
      /* istanbul ignore next */
      cov_28kxzuk0zx().s[63]++;
      if (options.screenshotOnFailure !== false) {
        /* istanbul ignore next */
        cov_28kxzuk0zx().b[15][0]++;
        cov_28kxzuk0zx().s[64]++;
        try {
          const errorScreenshot =
          /* istanbul ignore next */
          (cov_28kxzuk0zx().s[65]++, await this.screenshotManager.captureScreenshot({
            name: `${flowResult.flowId}_error_${step.id}`,
            stepName: `${step.name} (Error)`,
            fullPage: true
          }));
          /* istanbul ignore next */
          cov_28kxzuk0zx().s[66]++;
          stepResult.screenshot = errorScreenshot.id;
          /* istanbul ignore next */
          cov_28kxzuk0zx().s[67]++;
          flowResult.screenshots.push(errorScreenshot.id);
        } catch (screenshotError) {
          /* istanbul ignore next */
          cov_28kxzuk0zx().s[68]++;
          console.error('Error capturando screenshot de error:', screenshotError);
        }
      } else
      /* istanbul ignore next */
      {
        cov_28kxzuk0zx().b[15][1]++;
      }
    } finally {
      /* istanbul ignore next */
      cov_28kxzuk0zx().s[69]++;
      stepResult.endTime = new Date();
      /* istanbul ignore next */
      cov_28kxzuk0zx().s[70]++;
      stepResult.duration = stepResult.endTime.getTime() - stepResult.startTime.getTime();
    }
    /* istanbul ignore next */
    cov_28kxzuk0zx().s[71]++;
    return stepResult;
  }
  /**
  * Ejecuta múltiples flujos en paralelo
  */
  async executeFlowsParallel(flows, options =
  /* istanbul ignore next */
  (cov_28kxzuk0zx().b[16][0]++, {})) {
    /* istanbul ignore next */
    cov_28kxzuk0zx().f[10]++;
    cov_28kxzuk0zx().s[72]++;
    console.log(`🚀 Ejecutando ${flows.length} flujos en paralelo`);
    const promises =
    /* istanbul ignore next */
    (cov_28kxzuk0zx().s[73]++, flows.map(flow => {
      /* istanbul ignore next */
      cov_28kxzuk0zx().f[11]++;
      cov_28kxzuk0zx().s[74]++;
      return this.executeFlow(flow, options);
    }));
    const results =
    /* istanbul ignore next */
    (cov_28kxzuk0zx().s[75]++, await Promise.allSettled(promises));
    /* istanbul ignore next */
    cov_28kxzuk0zx().s[76]++;
    return results.map((result, index) => {
      /* istanbul ignore next */
      cov_28kxzuk0zx().f[12]++;
      cov_28kxzuk0zx().s[77]++;
      if (result.status === 'fulfilled') {
        /* istanbul ignore next */
        cov_28kxzuk0zx().b[17][0]++;
        cov_28kxzuk0zx().s[78]++;
        return result.value;
      } else {
        /* istanbul ignore next */
        cov_28kxzuk0zx().b[17][1]++;
        cov_28kxzuk0zx().s[79]++;
        // Crear un resultado de error para flujos que fallaron completamente
        return {
          flowId: flows[index].id,
          flowName: flows[index].name,
          startTime: new Date(),
          endTime: new Date(),
          duration: 0,
          status: 'failed',
          steps: [],
          screenshots: [],
          errors: [
          /* istanbul ignore next */
          (cov_28kxzuk0zx().b[18][0]++, result.reason?.message) ||
          /* istanbul ignore next */
          (cov_28kxzuk0zx().b[18][1]++, 'Error desconocido')],
          metadata: {}
        };
      }
    });
  }
  /**
  * Obtiene el estado de un flujo activo
  */
  getFlowStatus(flowId) {
    /* istanbul ignore next */
    cov_28kxzuk0zx().f[13]++;
    cov_28kxzuk0zx().s[80]++;
    return /* istanbul ignore next */(cov_28kxzuk0zx().b[19][0]++, this.activeFlows.get(flowId)) ||
    /* istanbul ignore next */
    (cov_28kxzuk0zx().b[19][1]++, null);
  }
  /**
  * Obtiene el historial de flujos ejecutados
  */
  getFlowHistory(limit) {
    /* istanbul ignore next */
    cov_28kxzuk0zx().f[14]++;
    const history =
    /* istanbul ignore next */
    (cov_28kxzuk0zx().s[81]++, [...this.flowHistory].reverse());
    /* istanbul ignore next */
    cov_28kxzuk0zx().s[82]++;
    return limit ?
    /* istanbul ignore next */
    (cov_28kxzuk0zx().b[20][0]++, history.slice(0, limit)) :
    /* istanbul ignore next */
    (cov_28kxzuk0zx().b[20][1]++, history);
  }
  /**
  * Obtiene estadísticas de los flujos
  */
  getFlowStatistics() {
    /* istanbul ignore next */
    cov_28kxzuk0zx().f[15]++;
    const total =
    /* istanbul ignore next */
    (cov_28kxzuk0zx().s[83]++, this.flowHistory.length);
    const passed =
    /* istanbul ignore next */
    (cov_28kxzuk0zx().s[84]++, this.flowHistory.filter(f => {
      /* istanbul ignore next */
      cov_28kxzuk0zx().f[16]++;
      cov_28kxzuk0zx().s[85]++;
      return f.status === 'passed';
    }).length);
    const failed =
    /* istanbul ignore next */
    (cov_28kxzuk0zx().s[86]++, this.flowHistory.filter(f => {
      /* istanbul ignore next */
      cov_28kxzuk0zx().f[17]++;
      cov_28kxzuk0zx().s[87]++;
      return f.status === 'failed';
    }).length);
    const successRate =
    /* istanbul ignore next */
    (cov_28kxzuk0zx().s[88]++, total > 0 ?
    /* istanbul ignore next */
    (cov_28kxzuk0zx().b[21][0]++, passed / total * 100) :
    /* istanbul ignore next */
    (cov_28kxzuk0zx().b[21][1]++, 0));
    const totalDuration =
    /* istanbul ignore next */
    (cov_28kxzuk0zx().s[89]++, this.flowHistory.reduce((sum, f) => {
      /* istanbul ignore next */
      cov_28kxzuk0zx().f[18]++;
      cov_28kxzuk0zx().s[90]++;
      return sum + (
      /* istanbul ignore next */
      (cov_28kxzuk0zx().b[22][0]++, f.duration) ||
      /* istanbul ignore next */
      (cov_28kxzuk0zx().b[22][1]++, 0));
    }, 0));
    const averageDuration =
    /* istanbul ignore next */
    (cov_28kxzuk0zx().s[91]++, total > 0 ?
    /* istanbul ignore next */
    (cov_28kxzuk0zx().b[23][0]++, totalDuration / total) :
    /* istanbul ignore next */
    (cov_28kxzuk0zx().b[23][1]++, 0));
    const totalScreenshots =
    /* istanbul ignore next */
    (cov_28kxzuk0zx().s[92]++, this.flowHistory.reduce((sum, f) => {
      /* istanbul ignore next */
      cov_28kxzuk0zx().f[19]++;
      cov_28kxzuk0zx().s[93]++;
      return sum + f.screenshots.length;
    }, 0));
    /* istanbul ignore next */
    cov_28kxzuk0zx().s[94]++;
    return {
      total,
      passed,
      failed,
      successRate,
      averageDuration,
      totalScreenshots
    };
  }
  /**
  * Limpia el historial de flujos
  */
  clearHistory() {
    /* istanbul ignore next */
    cov_28kxzuk0zx().f[20]++;
    cov_28kxzuk0zx().s[95]++;
    this.flowHistory = [];
  }
  /**
  * Detiene todos los flujos activos
  */
  stopAllFlows() {
    /* istanbul ignore next */
    cov_28kxzuk0zx().f[21]++;
    cov_28kxzuk0zx().s[96]++;
    for (const [flowId, flowResult] of this.activeFlows) {
      /* istanbul ignore next */
      cov_28kxzuk0zx().s[97]++;
      flowResult.status = 'failed';
      /* istanbul ignore next */
      cov_28kxzuk0zx().s[98]++;
      flowResult.endTime = new Date();
      /* istanbul ignore next */
      cov_28kxzuk0zx().s[99]++;
      flowResult.duration = flowResult.endTime.getTime() - flowResult.startTime.getTime();
      /* istanbul ignore next */
      cov_28kxzuk0zx().s[100]++;
      flowResult.errors.push('Flujo detenido manualmente');
      /* istanbul ignore next */
      cov_28kxzuk0zx().s[101]++;
      this.flowHistory.push(flowResult);
    }
    /* istanbul ignore next */
    cov_28kxzuk0zx().s[102]++;
    this.activeFlows.clear();
  }
}
const predefinedFlows =
/* istanbul ignore next */
(cov_28kxzuk0zx().s[103]++, [{
  id: 'ecommerce-complete-flow',
  name: 'Flujo Completo E-commerce',
  description: 'Test completo del flujo de compra en e-commerce',
  priority: 'critical',
  tags: ['e-commerce', 'checkout', 'integration'],
  steps: [{
    id: 'navigate-home',
    name: 'Navegar a página principal',
    description: 'Abrir la página principal del e-commerce',
    action: async () => {
      /* istanbul ignore next */
      cov_28kxzuk0zx().f[22]++;
      cov_28kxzuk0zx().s[104]++;
      // Simulación de navegación
      await new Promise(resolve => {
        /* istanbul ignore next */
        cov_28kxzuk0zx().f[23]++;
        cov_28kxzuk0zx().s[105]++;
        return setTimeout(resolve, 1000);
      });
    },
    screenshot: true
  }, {
    id: 'search-product',
    name: 'Buscar producto',
    description: 'Buscar un producto específico',
    action: async () => {
      /* istanbul ignore next */
      cov_28kxzuk0zx().f[24]++;
      cov_28kxzuk0zx().s[106]++;
      await new Promise(resolve => {
        /* istanbul ignore next */
        cov_28kxzuk0zx().f[25]++;
        cov_28kxzuk0zx().s[107]++;
        return setTimeout(resolve, 800);
      });
    },
    screenshot: true
  }, {
    id: 'add-to-cart',
    name: 'Agregar al carrito',
    description: 'Agregar producto al carrito de compras',
    action: async () => {
      /* istanbul ignore next */
      cov_28kxzuk0zx().f[26]++;
      cov_28kxzuk0zx().s[108]++;
      await new Promise(resolve => {
        /* istanbul ignore next */
        cov_28kxzuk0zx().f[27]++;
        cov_28kxzuk0zx().s[109]++;
        return setTimeout(resolve, 600);
      });
    },
    screenshot: true
  }, {
    id: 'checkout-process',
    name: 'Proceso de checkout',
    description: 'Completar el proceso de compra',
    action: async () => {
      /* istanbul ignore next */
      cov_28kxzuk0zx().f[28]++;
      cov_28kxzuk0zx().s[110]++;
      await new Promise(resolve => {
        /* istanbul ignore next */
        cov_28kxzuk0zx().f[29]++;
        cov_28kxzuk0zx().s[111]++;
        return setTimeout(resolve, 1200);
      });
    },
    screenshot: true
  }, {
    id: 'payment-confirmation',
    name: 'Confirmación de pago',
    description: 'Verificar confirmación de pago',
    action: async () => {
      /* istanbul ignore next */
      cov_28kxzuk0zx().f[30]++;
      cov_28kxzuk0zx().s[112]++;
      await new Promise(resolve => {
        /* istanbul ignore next */
        cov_28kxzuk0zx().f[31]++;
        cov_28kxzuk0zx().s[113]++;
        return setTimeout(resolve, 500);
      });
    },
    screenshot: true
  }]
}, {
  id: 'user-registration-flow',
  name: 'Flujo de Registro de Usuario',
  description: 'Test del proceso de registro de nuevos usuarios',
  priority: 'high',
  tags: ['authentication', 'registration'],
  steps: [{
    id: 'open-registration',
    name: 'Abrir formulario de registro',
    description: 'Navegar al formulario de registro',
    action: async () => {
      /* istanbul ignore next */
      cov_28kxzuk0zx().f[32]++;
      cov_28kxzuk0zx().s[114]++;
      await new Promise(resolve => {
        /* istanbul ignore next */
        cov_28kxzuk0zx().f[33]++;
        cov_28kxzuk0zx().s[115]++;
        return setTimeout(resolve, 500);
      });
    },
    screenshot: true
  }, {
    id: 'fill-form',
    name: 'Llenar formulario',
    description: 'Completar datos de registro',
    action: async () => {
      /* istanbul ignore next */
      cov_28kxzuk0zx().f[34]++;
      cov_28kxzuk0zx().s[116]++;
      await new Promise(resolve => {
        /* istanbul ignore next */
        cov_28kxzuk0zx().f[35]++;
        cov_28kxzuk0zx().s[117]++;
        return setTimeout(resolve, 1000);
      });
    },
    screenshot: true
  }, {
    id: 'submit-registration',
    name: 'Enviar registro',
    description: 'Enviar formulario de registro',
    action: async () => {
      /* istanbul ignore next */
      cov_28kxzuk0zx().f[36]++;
      cov_28kxzuk0zx().s[118]++;
      await new Promise(resolve => {
        /* istanbul ignore next */
        cov_28kxzuk0zx().f[37]++;
        cov_28kxzuk0zx().s[119]++;
        return setTimeout(resolve, 800);
      });
    },
    screenshot: true
  }]
}]);
const testFlowManager =
/* istanbul ignore next */
(cov_28kxzuk0zx().s[120]++, new AdvancedTestFlowManager());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,