3fb845ffc0052c0c2e95c4bb88f75b48
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_2jy0vjem40() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\monitoring\\config\\route.ts";
  var hash = "ec7c3c1d421ffbd35e0a88570db59d8f8fd12ca4";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\monitoring\\config\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 19
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 23
        }
      },
      "7": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "8": {
        start: {
          line: 24,
          column: 19
        },
        end: {
          line: 24,
          column: 64
        }
      },
      "9": {
        start: {
          line: 25,
          column: 24
        },
        end: {
          line: 25,
          column: 94
        }
      },
      "10": {
        start: {
          line: 26,
          column: 18
        },
        end: {
          line: 26,
          column: 69
        }
      },
      "11": {
        start: {
          line: 27,
          column: 16
        },
        end: {
          line: 27,
          column: 63
        }
      },
      "12": {
        start: {
          line: 28,
          column: 16
        },
        end: {
          line: 28,
          column: 24
        }
      },
      "13": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 109,
          column: 5
        }
      },
      "14": {
        start: {
          line: 32,
          column: 27
        },
        end: {
          line: 32,
          column: 79
        }
      },
      "15": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 40,
          column: 9
        }
      },
      "16": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 39,
          column: 15
        }
      },
      "17": {
        start: {
          line: 42,
          column: 23
        },
        end: {
          line: 84,
          column: 9
        }
      },
      "18": {
        start: {
          line: 86,
          column: 22
        },
        end: {
          line: 86,
          column: 44
        }
      },
      "19": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 90,
          column: 39
        }
      },
      "20": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 98,
          column: 11
        }
      },
      "21": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 102,
          column: 39
        }
      },
      "22": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 108,
          column: 11
        }
      },
      "23": {
        start: {
          line: 112,
          column: 4
        },
        end: {
          line: 182,
          column: 5
        }
      },
      "24": {
        start: {
          line: 114,
          column: 27
        },
        end: {
          line: 114,
          column: 79
        }
      },
      "25": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 122,
          column: 9
        }
      },
      "26": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 121,
          column: 15
        }
      },
      "27": {
        start: {
          line: 123,
          column: 21
        },
        end: {
          line: 123,
          column: 41
        }
      },
      "28": {
        start: {
          line: 124,
          column: 36
        },
        end: {
          line: 124,
          column: 40
        }
      },
      "29": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 132,
          column: 9
        }
      },
      "30": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 131,
          column: 15
        }
      },
      "31": {
        start: {
          line: 134,
          column: 27
        },
        end: {
          line: 134,
          column: 29
        }
      },
      "32": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 158,
          column: 9
        }
      },
      "33": {
        start: {
          line: 137,
          column: 16
        },
        end: {
          line: 137,
          column: 84
        }
      },
      "34": {
        start: {
          line: 138,
          column: 16
        },
        end: {
          line: 138,
          column: 22
        }
      },
      "35": {
        start: {
          line: 140,
          column: 16
        },
        end: {
          line: 140,
          column: 83
        }
      },
      "36": {
        start: {
          line: 141,
          column: 16
        },
        end: {
          line: 141,
          column: 22
        }
      },
      "37": {
        start: {
          line: 143,
          column: 16
        },
        end: {
          line: 143,
          column: 92
        }
      },
      "38": {
        start: {
          line: 144,
          column: 16
        },
        end: {
          line: 144,
          column: 22
        }
      },
      "39": {
        start: {
          line: 146,
          column: 16
        },
        end: {
          line: 146,
          column: 86
        }
      },
      "40": {
        start: {
          line: 147,
          column: 16
        },
        end: {
          line: 147,
          column: 22
        }
      },
      "41": {
        start: {
          line: 149,
          column: 16
        },
        end: {
          line: 149,
          column: 87
        }
      },
      "42": {
        start: {
          line: 150,
          column: 16
        },
        end: {
          line: 150,
          column: 22
        }
      },
      "43": {
        start: {
          line: 152,
          column: 16
        },
        end: {
          line: 157,
          column: 19
        }
      },
      "44": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 163,
          column: 39
        }
      },
      "45": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 171,
          column: 11
        }
      },
      "46": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 175,
          column: 39
        }
      },
      "47": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 181,
          column: 11
        }
      },
      "48": {
        start: {
          line: 187,
          column: 21
        },
        end: {
          line: 187,
          column: 59
        }
      },
      "49": {
        start: {
          line: 188,
          column: 4
        },
        end: {
          line: 203,
          column: 5
        }
      },
      "50": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 202,
          column: 10
        }
      },
      "51": {
        start: {
          line: 204,
          column: 20
        },
        end: {
          line: 204,
          column: 76
        }
      },
      "52": {
        start: {
          line: 206,
          column: 35
        },
        end: {
          line: 206,
          column: 126
        }
      },
      "53": {
        start: {
          line: 207,
          column: 36
        },
        end: {
          line: 210,
          column: 6
        }
      },
      "54": {
        start: {
          line: 212,
          column: 34
        },
        end: {
          line: 212,
          column: 132
        }
      },
      "55": {
        start: {
          line: 213,
          column: 35
        },
        end: {
          line: 216,
          column: 6
        }
      },
      "56": {
        start: {
          line: 218,
          column: 33
        },
        end: {
          line: 218,
          column: 118
        }
      },
      "57": {
        start: {
          line: 219,
          column: 40
        },
        end: {
          line: 222,
          column: 6
        }
      },
      "58": {
        start: {
          line: 223,
          column: 4
        },
        end: {
          line: 236,
          column: 6
        }
      },
      "59": {
        start: {
          line: 243,
          column: 24
        },
        end: {
          line: 248,
          column: 5
        }
      },
      "60": {
        start: {
          line: 249,
          column: 20
        },
        end: {
          line: 249,
          column: 22
        }
      },
      "61": {
        start: {
          line: 250,
          column: 4
        },
        end: {
          line: 254,
          column: 5
        }
      },
      "62": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 253,
          column: 9
        }
      },
      "63": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 252,
          column: 43
        }
      },
      "64": {
        start: {
          line: 255,
          column: 4
        },
        end: {
          line: 258,
          column: 6
        }
      },
      "65": {
        start: {
          line: 263,
          column: 24
        },
        end: {
          line: 268,
          column: 5
        }
      },
      "66": {
        start: {
          line: 269,
          column: 20
        },
        end: {
          line: 269,
          column: 22
        }
      },
      "67": {
        start: {
          line: 270,
          column: 4
        },
        end: {
          line: 274,
          column: 5
        }
      },
      "68": {
        start: {
          line: 271,
          column: 8
        },
        end: {
          line: 273,
          column: 9
        }
      },
      "69": {
        start: {
          line: 272,
          column: 12
        },
        end: {
          line: 272,
          column: 43
        }
      },
      "70": {
        start: {
          line: 275,
          column: 4
        },
        end: {
          line: 278,
          column: 6
        }
      },
      "71": {
        start: {
          line: 283,
          column: 20
        },
        end: {
          line: 283,
          column: 22
        }
      },
      "72": {
        start: {
          line: 284,
          column: 4
        },
        end: {
          line: 286,
          column: 5
        }
      },
      "73": {
        start: {
          line: 285,
          column: 8
        },
        end: {
          line: 285,
          column: 41
        }
      },
      "74": {
        start: {
          line: 288,
          column: 4
        },
        end: {
          line: 301,
          column: 5
        }
      },
      "75": {
        start: {
          line: 289,
          column: 8
        },
        end: {
          line: 292,
          column: 9
        }
      },
      "76": {
        start: {
          line: 290,
          column: 12
        },
        end: {
          line: 290,
          column: 63
        }
      },
      "77": {
        start: {
          line: 291,
          column: 12
        },
        end: {
          line: 291,
          column: 54
        }
      },
      "78": {
        start: {
          line: 293,
          column: 8
        },
        end: {
          line: 296,
          column: 9
        }
      },
      "79": {
        start: {
          line: 294,
          column: 12
        },
        end: {
          line: 294,
          column: 63
        }
      },
      "80": {
        start: {
          line: 295,
          column: 12
        },
        end: {
          line: 295,
          column: 54
        }
      },
      "81": {
        start: {
          line: 297,
          column: 8
        },
        end: {
          line: 300,
          column: 9
        }
      },
      "82": {
        start: {
          line: 298,
          column: 12
        },
        end: {
          line: 298,
          column: 61
        }
      },
      "83": {
        start: {
          line: 299,
          column: 12
        },
        end: {
          line: 299,
          column: 52
        }
      },
      "84": {
        start: {
          line: 302,
          column: 4
        },
        end: {
          line: 305,
          column: 6
        }
      },
      "85": {
        start: {
          line: 310,
          column: 24
        },
        end: {
          line: 314,
          column: 5
        }
      },
      "86": {
        start: {
          line: 315,
          column: 20
        },
        end: {
          line: 315,
          column: 22
        }
      },
      "87": {
        start: {
          line: 316,
          column: 4
        },
        end: {
          line: 320,
          column: 5
        }
      },
      "88": {
        start: {
          line: 317,
          column: 8
        },
        end: {
          line: 319,
          column: 9
        }
      },
      "89": {
        start: {
          line: 318,
          column: 12
        },
        end: {
          line: 318,
          column: 43
        }
      },
      "90": {
        start: {
          line: 321,
          column: 4
        },
        end: {
          line: 324,
          column: 6
        }
      },
      "91": {
        start: {
          line: 329,
          column: 24
        },
        end: {
          line: 333,
          column: 5
        }
      },
      "92": {
        start: {
          line: 334,
          column: 20
        },
        end: {
          line: 334,
          column: 22
        }
      },
      "93": {
        start: {
          line: 335,
          column: 4
        },
        end: {
          line: 339,
          column: 5
        }
      },
      "94": {
        start: {
          line: 336,
          column: 8
        },
        end: {
          line: 338,
          column: 9
        }
      },
      "95": {
        start: {
          line: 337,
          column: 12
        },
        end: {
          line: 337,
          column: 43
        }
      },
      "96": {
        start: {
          line: 340,
          column: 4
        },
        end: {
          line: 343,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 15
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "GET",
        decl: {
          start: {
            line: 29,
            column: 15
          },
          end: {
            line: 29,
            column: 18
          }
        },
        loc: {
          start: {
            line: 29,
            column: 28
          },
          end: {
            line: 110,
            column: 1
          }
        },
        line: 29
      },
      "5": {
        name: "PUT",
        decl: {
          start: {
            line: 111,
            column: 15
          },
          end: {
            line: 111,
            column: 18
          }
        },
        loc: {
          start: {
            line: 111,
            column: 28
          },
          end: {
            line: 183,
            column: 1
          }
        },
        line: 111
      },
      "6": {
        name: "getSystemStats",
        decl: {
          start: {
            line: 186,
            column: 19
          },
          end: {
            line: 186,
            column: 33
          }
        },
        loc: {
          start: {
            line: 186,
            column: 36
          },
          end: {
            line: 237,
            column: 1
          }
        },
        line: 186
      },
      "7": {
        name: "updateMetricsConfig",
        decl: {
          start: {
            line: 240,
            column: 19
          },
          end: {
            line: 240,
            column: 38
          }
        },
        loc: {
          start: {
            line: 240,
            column: 55
          },
          end: {
            line: 259,
            column: 1
          }
        },
        line: 240
      },
      "8": {
        name: "updateAlertsConfig",
        decl: {
          start: {
            line: 262,
            column: 19
          },
          end: {
            line: 262,
            column: 37
          }
        },
        loc: {
          start: {
            line: 262,
            column: 54
          },
          end: {
            line: 279,
            column: 1
          }
        },
        line: 262
      },
      "9": {
        name: "updateCircuitBreakersConfig",
        decl: {
          start: {
            line: 282,
            column: 19
          },
          end: {
            line: 282,
            column: 46
          }
        },
        loc: {
          start: {
            line: 282,
            column: 63
          },
          end: {
            line: 306,
            column: 1
          }
        },
        line: 282
      },
      "10": {
        name: "updateDashboardConfig",
        decl: {
          start: {
            line: 309,
            column: 19
          },
          end: {
            line: 309,
            column: 40
          }
        },
        loc: {
          start: {
            line: 309,
            column: 57
          },
          end: {
            line: 325,
            column: 1
          }
        },
        line: 309
      },
      "11": {
        name: "updateComplianceConfig",
        decl: {
          start: {
            line: 328,
            column: 19
          },
          end: {
            line: 328,
            column: 41
          }
        },
        loc: {
          start: {
            line: 328,
            column: 58
          },
          end: {
            line: 344,
            column: 1
          }
        },
        line: 328
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 40,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 40,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "1": {
        loc: {
          start: {
            line: 33,
            column: 12
          },
          end: {
            line: 33,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 12
          },
          end: {
            line: 33,
            column: 31
          }
        }, {
          start: {
            line: 33,
            column: 35
          },
          end: {
            line: 33,
            column: 53
          }
        }],
        line: 33
      },
      "2": {
        loc: {
          start: {
            line: 101,
            column: 19
          },
          end: {
            line: 101,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 101,
            column: 44
          },
          end: {
            line: 101,
            column: 57
          }
        }, {
          start: {
            line: 101,
            column: 60
          },
          end: {
            line: 101,
            column: 75
          }
        }],
        line: 101
      },
      "3": {
        loc: {
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 122,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 122,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 115
      },
      "4": {
        loc: {
          start: {
            line: 115,
            column: 12
          },
          end: {
            line: 115,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 115,
            column: 12
          },
          end: {
            line: 115,
            column: 31
          }
        }, {
          start: {
            line: 115,
            column: 35
          },
          end: {
            line: 115,
            column: 53
          }
        }],
        line: 115
      },
      "5": {
        loc: {
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 132,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 132,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "6": {
        loc: {
          start: {
            line: 125,
            column: 12
          },
          end: {
            line: 125,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 125,
            column: 12
          },
          end: {
            line: 125,
            column: 20
          }
        }, {
          start: {
            line: 125,
            column: 24
          },
          end: {
            line: 125,
            column: 31
          }
        }],
        line: 125
      },
      "7": {
        loc: {
          start: {
            line: 135,
            column: 8
          },
          end: {
            line: 158,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 136,
            column: 12
          },
          end: {
            line: 138,
            column: 22
          }
        }, {
          start: {
            line: 139,
            column: 12
          },
          end: {
            line: 141,
            column: 22
          }
        }, {
          start: {
            line: 142,
            column: 12
          },
          end: {
            line: 144,
            column: 22
          }
        }, {
          start: {
            line: 145,
            column: 12
          },
          end: {
            line: 147,
            column: 22
          }
        }, {
          start: {
            line: 148,
            column: 12
          },
          end: {
            line: 150,
            column: 22
          }
        }, {
          start: {
            line: 151,
            column: 12
          },
          end: {
            line: 157,
            column: 19
          }
        }],
        line: 135
      },
      "8": {
        loc: {
          start: {
            line: 174,
            column: 19
          },
          end: {
            line: 174,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 174,
            column: 44
          },
          end: {
            line: 174,
            column: 57
          }
        }, {
          start: {
            line: 174,
            column: 60
          },
          end: {
            line: 174,
            column: 75
          }
        }],
        line: 174
      },
      "9": {
        loc: {
          start: {
            line: 188,
            column: 4
          },
          end: {
            line: 203,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 188,
            column: 4
          },
          end: {
            line: 203,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 188
      },
      "10": {
        loc: {
          start: {
            line: 225,
            column: 19
          },
          end: {
            line: 225,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 225,
            column: 19
          },
          end: {
            line: 225,
            column: 31
          }
        }, {
          start: {
            line: 225,
            column: 35
          },
          end: {
            line: 225,
            column: 36
          }
        }],
        line: 225
      },
      "11": {
        loc: {
          start: {
            line: 226,
            column: 21
          },
          end: {
            line: 226,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 226,
            column: 21
          },
          end: {
            line: 226,
            column: 41
          }
        }, {
          start: {
            line: 226,
            column: 45
          },
          end: {
            line: 226,
            column: 46
          }
        }],
        line: 226
      },
      "12": {
        loc: {
          start: {
            line: 229,
            column: 20
          },
          end: {
            line: 229,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 229,
            column: 20
          },
          end: {
            line: 229,
            column: 39
          }
        }, {
          start: {
            line: 229,
            column: 43
          },
          end: {
            line: 229,
            column: 44
          }
        }],
        line: 229
      },
      "13": {
        loc: {
          start: {
            line: 230,
            column: 19
          },
          end: {
            line: 230,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 230,
            column: 19
          },
          end: {
            line: 230,
            column: 30
          }
        }, {
          start: {
            line: 230,
            column: 34
          },
          end: {
            line: 230,
            column: 35
          }
        }],
        line: 230
      },
      "14": {
        loc: {
          start: {
            line: 233,
            column: 19
          },
          end: {
            line: 233,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 233,
            column: 19
          },
          end: {
            line: 233,
            column: 35
          }
        }, {
          start: {
            line: 233,
            column: 39
          },
          end: {
            line: 233,
            column: 40
          }
        }],
        line: 233
      },
      "15": {
        loc: {
          start: {
            line: 234,
            column: 21
          },
          end: {
            line: 234,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 234,
            column: 21
          },
          end: {
            line: 234,
            column: 39
          }
        }, {
          start: {
            line: 234,
            column: 43
          },
          end: {
            line: 234,
            column: 44
          }
        }],
        line: 234
      },
      "16": {
        loc: {
          start: {
            line: 251,
            column: 8
          },
          end: {
            line: 253,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 251,
            column: 8
          },
          end: {
            line: 253,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 251
      },
      "17": {
        loc: {
          start: {
            line: 271,
            column: 8
          },
          end: {
            line: 273,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 271,
            column: 8
          },
          end: {
            line: 273,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 271
      },
      "18": {
        loc: {
          start: {
            line: 284,
            column: 4
          },
          end: {
            line: 286,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 284,
            column: 4
          },
          end: {
            line: 286,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 284
      },
      "19": {
        loc: {
          start: {
            line: 288,
            column: 4
          },
          end: {
            line: 301,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 288,
            column: 4
          },
          end: {
            line: 301,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 288
      },
      "20": {
        loc: {
          start: {
            line: 289,
            column: 8
          },
          end: {
            line: 292,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 289,
            column: 8
          },
          end: {
            line: 292,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 289
      },
      "21": {
        loc: {
          start: {
            line: 293,
            column: 8
          },
          end: {
            line: 296,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 293,
            column: 8
          },
          end: {
            line: 296,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 293
      },
      "22": {
        loc: {
          start: {
            line: 297,
            column: 8
          },
          end: {
            line: 300,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 297,
            column: 8
          },
          end: {
            line: 300,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 297
      },
      "23": {
        loc: {
          start: {
            line: 317,
            column: 8
          },
          end: {
            line: 319,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 317,
            column: 8
          },
          end: {
            line: 319,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 317
      },
      "24": {
        loc: {
          start: {
            line: 336,
            column: 8
          },
          end: {
            line: 338,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 336,
            column: 8
          },
          end: {
            line: 338,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 336
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0, 0, 0, 0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\monitoring\\config\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - MONITORING CONFIGURATION API\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { getAuthenticatedAdmin } from '@/lib/auth/admin-auth';\r\nimport { enterpriseMetrics } from '@/lib/monitoring/enterprise-metrics';\r\nimport { enterpriseAlertSystem } from '@/lib/monitoring/alert-system';\r\nimport { \r\n  mercadoPagoCriticalBreaker, \r\n  mercadoPagoStandardBreaker, \r\n  webhookProcessingBreaker \r\n} from '@/lib/integrations/mercadopago/circuit-breaker';\r\nimport { getSupabaseClient } from '@/lib/integrations/supabase';\r\nimport { logger, LogLevel, LogCategory } from '@/lib/enterprise/logger';\r\n\r\ninterface MonitoringConfig {\r\n  metrics: {\r\n    enabled: boolean;\r\n    flushInterval: number;\r\n    retentionDays: number;\r\n    aggregationPeriods: string[];\r\n  };\r\n  alerts: {\r\n    enabled: boolean;\r\n    escalationEnabled: boolean;\r\n    defaultCooldown: number;\r\n    maxAlertsPerHour: number;\r\n  };\r\n  circuitBreakers: {\r\n    enabled: boolean;\r\n    configs: Record<string, any>;\r\n  };\r\n  dashboard: {\r\n    refreshInterval: number;\r\n    maxDataPoints: number;\r\n    cacheTimeout: number;\r\n  };\r\n  compliance: {\r\n    auditEnabled: boolean;\r\n    retentionPolicies: Record<string, number>;\r\n    encryptionEnabled: boolean;\r\n  };\r\n}\r\n\r\n/**\r\n * GET /api/admin/monitoring/config\r\n * Obtiene la configuraci\xF3n actual del sistema de monitoreo\r\n */\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    // Verificar autenticaci\xF3n de admin\r\n    const authResult = await getAuthenticatedAdmin(request);\r\n    \r\n    if (!authResult.isAdmin || !authResult.userId) {\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: 'Acceso no autorizado'\r\n      }, { status: 401 });\r\n    }\r\n\r\n    // Obtener configuraci\xF3n actual\r\n    const config: MonitoringConfig = {\r\n      metrics: {\r\n        enabled: true,\r\n        flushInterval: 30000, // 30 segundos\r\n        retentionDays: 30,\r\n        aggregationPeriods: ['1m', '5m', '1h', '1d', '7d']\r\n      },\r\n      alerts: {\r\n        enabled: true,\r\n        escalationEnabled: true,\r\n        defaultCooldown: 5, // minutos\r\n        maxAlertsPerHour: 100\r\n      },\r\n      circuitBreakers: {\r\n        enabled: true,\r\n        configs: {\r\n          mercadopago_critical: mercadoPagoCriticalBreaker.getMetrics(),\r\n          mercadopago_standard: mercadoPagoStandardBreaker.getMetrics(),\r\n          webhook_processing: webhookProcessingBreaker.getMetrics()\r\n        }\r\n      },\r\n      dashboard: {\r\n        refreshInterval: 5000, // 5 segundos\r\n        maxDataPoints: 100,\r\n        cacheTimeout: 30 // segundos\r\n      },\r\n      compliance: {\r\n        auditEnabled: true,\r\n        retentionPolicies: {\r\n          authentication: 365,\r\n          payment_processing: 2555, // 7 a\xF1os\r\n          security_violation: 2555,\r\n          data_access: 1095 // 3 a\xF1os\r\n        },\r\n        encryptionEnabled: true\r\n      }\r\n    };\r\n\r\n    // Obtener estad\xEDsticas del sistema\r\n    const stats = await getSystemStats();\r\n\r\n    logger.info(LogLevel.INFO, 'Monitoring configuration retrieved', {\r\n      userId: authResult.userId,\r\n      configSections: Object.keys(config).length\r\n    }, LogCategory.SYSTEM);\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: {\r\n        config,\r\n        stats,\r\n        timestamp: new Date().toISOString()\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    logger.error(LogLevel.ERROR, 'Failed to get monitoring configuration', {\r\n      error: error instanceof Error ? error.message : 'Unknown error'\r\n    }, LogCategory.SYSTEM);\r\n\r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Error interno del servidor'\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n/**\r\n * PUT /api/admin/monitoring/config\r\n * Actualiza la configuraci\xF3n del sistema de monitoreo\r\n */\r\nexport async function PUT(request: NextRequest) {\r\n  try {\r\n    // Verificar autenticaci\xF3n de admin\r\n    const authResult = await getAuthenticatedAdmin(request);\r\n    \r\n    if (!authResult.isAdmin || !authResult.userId) {\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: 'Acceso no autorizado'\r\n      }, { status: 401 });\r\n    }\r\n\r\n    const body = await request.json();\r\n    const { section, config } = body;\r\n\r\n    if (!section || !config) {\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: 'Faltan par\xE1metros: section y config'\r\n      }, { status: 400 });\r\n    }\r\n\r\n    // Validar y aplicar configuraci\xF3n seg\xFAn la secci\xF3n\r\n    let updateResult: any = {};\r\n\r\n    switch (section) {\r\n      case 'metrics':\r\n        updateResult = await updateMetricsConfig(config, authResult.userId);\r\n        break;\r\n      case 'alerts':\r\n        updateResult = await updateAlertsConfig(config, authResult.userId);\r\n        break;\r\n      case 'circuitBreakers':\r\n        updateResult = await updateCircuitBreakersConfig(config, authResult.userId);\r\n        break;\r\n      case 'dashboard':\r\n        updateResult = await updateDashboardConfig(config, authResult.userId);\r\n        break;\r\n      case 'compliance':\r\n        updateResult = await updateComplianceConfig(config, authResult.userId);\r\n        break;\r\n      default:\r\n        return NextResponse.json({\r\n          success: false,\r\n          error: 'Secci\xF3n de configuraci\xF3n no v\xE1lida'\r\n        }, { status: 400 });\r\n    }\r\n\r\n    logger.info(LogLevel.INFO, `Monitoring configuration updated: ${section}`, {\r\n      userId: authResult.userId,\r\n      section,\r\n      changes: Object.keys(config).length\r\n    }, LogCategory.SYSTEM);\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: {\r\n        section,\r\n        updated: updateResult,\r\n        timestamp: new Date().toISOString()\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    logger.error(LogLevel.ERROR, 'Failed to update monitoring configuration', {\r\n      error: error instanceof Error ? error.message : 'Unknown error'\r\n    }, LogCategory.SYSTEM);\r\n\r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Error interno del servidor'\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n/**\r\n * Obtiene estad\xEDsticas del sistema\r\n */\r\nasync function getSystemStats() {\r\n  const supabase = getSupabaseClient(true);\r\n  \r\n  if (!supabase) {\r\n    return {\r\n      metrics: { total: 0, last24h: 0 },\r\n      alerts: { active: 0, total: 0 },\r\n      auditEvents: { total: 0, last24h: 0 }\r\n    };\r\n  }\r\n\r\n  const last24h = new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString();\r\n\r\n  // Estad\xEDsticas de m\xE9tricas\r\n  const { data: metricsStats } = await supabase\r\n    .from('enterprise_metrics')\r\n    .select('id, timestamp')\r\n    .gte('timestamp', last24h);\r\n\r\n  const { count: totalMetrics } = await supabase\r\n    .from('enterprise_metrics')\r\n    .select('*', { count: 'exact', head: true });\r\n\r\n  // Estad\xEDsticas de alertas\r\n  const { data: alertsStats } = await supabase\r\n    .from('enterprise_alerts')\r\n    .select('id, status, triggered_at')\r\n    .eq('status', 'active');\r\n\r\n  const { count: totalAlerts } = await supabase\r\n    .from('enterprise_alerts')\r\n    .select('*', { count: 'exact', head: true });\r\n\r\n  // Estad\xEDsticas de auditor\xEDa\r\n  const { data: auditStats } = await supabase\r\n    .from('audit_events')\r\n    .select('id, timestamp')\r\n    .gte('timestamp', last24h);\r\n\r\n  const { count: totalAuditEvents } = await supabase\r\n    .from('audit_events')\r\n    .select('*', { count: 'exact', head: true });\r\n\r\n  return {\r\n    metrics: {\r\n      total: totalMetrics || 0,\r\n      last24h: metricsStats?.length || 0\r\n    },\r\n    alerts: {\r\n      active: alertsStats?.length || 0,\r\n      total: totalAlerts || 0\r\n    },\r\n    auditEvents: {\r\n      total: totalAuditEvents || 0,\r\n      last24h: auditStats?.length || 0\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Actualiza configuraci\xF3n de m\xE9tricas\r\n */\r\nasync function updateMetricsConfig(config: any, userId: string) {\r\n  // TODO: Implementar actualizaci\xF3n de configuraci\xF3n de m\xE9tricas\r\n  // Por ahora solo validamos y retornamos confirmaci\xF3n\r\n  \r\n  const validFields = ['enabled', 'flushInterval', 'retentionDays', 'aggregationPeriods'];\r\n  const updates: Record<string, any> = {};\r\n\r\n  for (const field of validFields) {\r\n    if (config[field] !== undefined) {\r\n      updates[field] = config[field];\r\n    }\r\n  }\r\n\r\n  return {\r\n    updated: updates,\r\n    message: 'Metrics configuration updated successfully'\r\n  };\r\n}\r\n\r\n/**\r\n * Actualiza configuraci\xF3n de alertas\r\n */\r\nasync function updateAlertsConfig(config: any, userId: string) {\r\n  const validFields = ['enabled', 'escalationEnabled', 'defaultCooldown', 'maxAlertsPerHour'];\r\n  const updates: Record<string, any> = {};\r\n\r\n  for (const field of validFields) {\r\n    if (config[field] !== undefined) {\r\n      updates[field] = config[field];\r\n    }\r\n  }\r\n\r\n  return {\r\n    updated: updates,\r\n    message: 'Alerts configuration updated successfully'\r\n  };\r\n}\r\n\r\n/**\r\n * Actualiza configuraci\xF3n de circuit breakers\r\n */\r\nasync function updateCircuitBreakersConfig(config: any, userId: string) {\r\n  const updates: Record<string, any> = {};\r\n\r\n  if (config.enabled !== undefined) {\r\n    updates.enabled = config.enabled;\r\n  }\r\n\r\n  // Reset circuit breakers si se solicita\r\n  if (config.reset) {\r\n    if (config.reset.includes('mercadopago_critical')) {\r\n      mercadoPagoCriticalBreaker.reset();\r\n      updates.mercadopago_critical_reset = true;\r\n    }\r\n    if (config.reset.includes('mercadopago_standard')) {\r\n      mercadoPagoStandardBreaker.reset();\r\n      updates.mercadopago_standard_reset = true;\r\n    }\r\n    if (config.reset.includes('webhook_processing')) {\r\n      webhookProcessingBreaker.reset();\r\n      updates.webhook_processing_reset = true;\r\n    }\r\n  }\r\n\r\n  return {\r\n    updated: updates,\r\n    message: 'Circuit breakers configuration updated successfully'\r\n  };\r\n}\r\n\r\n/**\r\n * Actualiza configuraci\xF3n del dashboard\r\n */\r\nasync function updateDashboardConfig(config: any, userId: string) {\r\n  const validFields = ['refreshInterval', 'maxDataPoints', 'cacheTimeout'];\r\n  const updates: Record<string, any> = {};\r\n\r\n  for (const field of validFields) {\r\n    if (config[field] !== undefined) {\r\n      updates[field] = config[field];\r\n    }\r\n  }\r\n\r\n  return {\r\n    updated: updates,\r\n    message: 'Dashboard configuration updated successfully'\r\n  };\r\n}\r\n\r\n/**\r\n * Actualiza configuraci\xF3n de compliance\r\n */\r\nasync function updateComplianceConfig(config: any, userId: string) {\r\n  const validFields = ['auditEnabled', 'retentionPolicies', 'encryptionEnabled'];\r\n  const updates: Record<string, any> = {};\r\n\r\n  for (const field of validFields) {\r\n    if (config[field] !== undefined) {\r\n      updates[field] = config[field];\r\n    }\r\n  }\r\n\r\n  return {\r\n    updated: updates,\r\n    message: 'Compliance configuration updated successfully'\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "PUT", "runtime", "request", "authResult", "getAuthenticatedAdmin", "isAdmin", "userId", "NextResponse", "json", "success", "error", "status", "config", "metrics", "enabled", "flushInterval", "retentionDays", "aggregationPeriods", "alerts", "escalationEnabled", "defaultCooldown", "maxAlertsPerHour", "circuitBreakers", "configs", "mercadopago_critical", "mercadoPagoCriticalBreaker", "getMetrics", "mercadopago_standard", "mercadoPagoStandardBreaker", "webhook_processing", "webhookProcessingBreaker", "dashboard", "refreshInterval", "maxDataPoints", "cacheTimeout", "compliance", "auditEnabled", "retentionPolicies", "authentication", "payment_processing", "security_violation", "data_access", "encryptionEnabled", "stats", "getSystemStats", "logger", "info", "LogLevel", "INFO", "configSections", "Object", "keys", "length", "LogCategory", "SYSTEM", "data", "timestamp", "Date", "toISOString", "ERROR", "Error", "message", "body", "section", "updateResult", "updateMetricsConfig", "updateAlertsConfig", "updateCircuitBreakersConfig", "updateDashboardConfig", "updateComplianceConfig", "changes", "updated", "supabase", "getSupabaseClient", "total", "last24h", "active", "auditEvents", "now", "metricsStats", "from", "select", "gte", "count", "totalMetrics", "head", "alertsStats", "eq", "totalAlerts", "auditStats", "totalAuditEvents", "validFields", "updates", "field", "undefined", "reset", "includes", "mercadopago_critical_reset", "mercadopago_standard_reset", "webhook_processing_reset"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ec7c3c1d421ffbd35e0a88570db59d8f8fd12ca4"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2jy0vjem40 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2jy0vjem40();
cov_2jy0vjem40().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2jy0vjem40().f[0]++;
  cov_2jy0vjem40().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2jy0vjem40().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_2jy0vjem40().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_2jy0vjem40().f[1]++;
    cov_2jy0vjem40().s[4]++;
    return GET;
  },
  get PUT() {
    /* istanbul ignore next */
    cov_2jy0vjem40().f[2]++;
    cov_2jy0vjem40().s[5]++;
    return PUT;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_2jy0vjem40().f[3]++;
    cov_2jy0vjem40().s[6]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_2jy0vjem40().s[7]++, require("next/server"));
const _adminauth =
/* istanbul ignore next */
(cov_2jy0vjem40().s[8]++, require("../../../../../lib/auth/admin-auth"));
const _circuitbreaker =
/* istanbul ignore next */
(cov_2jy0vjem40().s[9]++, require("../../../../../lib/integrations/mercadopago/circuit-breaker"));
const _supabase =
/* istanbul ignore next */
(cov_2jy0vjem40().s[10]++, require("../../../../../lib/integrations/supabase"));
const _logger =
/* istanbul ignore next */
(cov_2jy0vjem40().s[11]++, require("../../../../../lib/enterprise/logger"));
const runtime =
/* istanbul ignore next */
(cov_2jy0vjem40().s[12]++, 'nodejs');
async function GET(request) {
  /* istanbul ignore next */
  cov_2jy0vjem40().f[4]++;
  cov_2jy0vjem40().s[13]++;
  try {
    // Verificar autenticaciÃ³n de admin
    const authResult =
    /* istanbul ignore next */
    (cov_2jy0vjem40().s[14]++, await (0, _adminauth.getAuthenticatedAdmin)(request));
    /* istanbul ignore next */
    cov_2jy0vjem40().s[15]++;
    if (
    /* istanbul ignore next */
    (cov_2jy0vjem40().b[1][0]++, !authResult.isAdmin) ||
    /* istanbul ignore next */
    (cov_2jy0vjem40().b[1][1]++, !authResult.userId)) {
      /* istanbul ignore next */
      cov_2jy0vjem40().b[0][0]++;
      cov_2jy0vjem40().s[16]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Acceso no autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_2jy0vjem40().b[0][1]++;
    }
    // Obtener configuraciÃ³n actual
    const config =
    /* istanbul ignore next */
    (cov_2jy0vjem40().s[17]++, {
      metrics: {
        enabled: true,
        flushInterval: 30000,
        retentionDays: 30,
        aggregationPeriods: ['1m', '5m', '1h', '1d', '7d']
      },
      alerts: {
        enabled: true,
        escalationEnabled: true,
        defaultCooldown: 5,
        maxAlertsPerHour: 100
      },
      circuitBreakers: {
        enabled: true,
        configs: {
          mercadopago_critical: _circuitbreaker.mercadoPagoCriticalBreaker.getMetrics(),
          mercadopago_standard: _circuitbreaker.mercadoPagoStandardBreaker.getMetrics(),
          webhook_processing: _circuitbreaker.webhookProcessingBreaker.getMetrics()
        }
      },
      dashboard: {
        refreshInterval: 5000,
        maxDataPoints: 100,
        cacheTimeout: 30 // segundos
      },
      compliance: {
        auditEnabled: true,
        retentionPolicies: {
          authentication: 365,
          payment_processing: 2555,
          security_violation: 2555,
          data_access: 1095 // 3 aÃ±os
        },
        encryptionEnabled: true
      }
    });
    // Obtener estadÃ­sticas del sistema
    const stats =
    /* istanbul ignore next */
    (cov_2jy0vjem40().s[18]++, await getSystemStats());
    /* istanbul ignore next */
    cov_2jy0vjem40().s[19]++;
    _logger.logger.info(_logger.LogLevel.INFO, 'Monitoring configuration retrieved', {
      userId: authResult.userId,
      configSections: Object.keys(config).length
    }, _logger.LogCategory.SYSTEM);
    /* istanbul ignore next */
    cov_2jy0vjem40().s[20]++;
    return _server.NextResponse.json({
      success: true,
      data: {
        config,
        stats,
        timestamp: new Date().toISOString()
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2jy0vjem40().s[21]++;
    _logger.logger.error(_logger.LogLevel.ERROR, 'Failed to get monitoring configuration', {
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_2jy0vjem40().b[2][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2jy0vjem40().b[2][1]++, 'Unknown error')
    }, _logger.LogCategory.SYSTEM);
    /* istanbul ignore next */
    cov_2jy0vjem40().s[22]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
async function PUT(request) {
  /* istanbul ignore next */
  cov_2jy0vjem40().f[5]++;
  cov_2jy0vjem40().s[23]++;
  try {
    // Verificar autenticaciÃ³n de admin
    const authResult =
    /* istanbul ignore next */
    (cov_2jy0vjem40().s[24]++, await (0, _adminauth.getAuthenticatedAdmin)(request));
    /* istanbul ignore next */
    cov_2jy0vjem40().s[25]++;
    if (
    /* istanbul ignore next */
    (cov_2jy0vjem40().b[4][0]++, !authResult.isAdmin) ||
    /* istanbul ignore next */
    (cov_2jy0vjem40().b[4][1]++, !authResult.userId)) {
      /* istanbul ignore next */
      cov_2jy0vjem40().b[3][0]++;
      cov_2jy0vjem40().s[26]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Acceso no autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_2jy0vjem40().b[3][1]++;
    }
    const body =
    /* istanbul ignore next */
    (cov_2jy0vjem40().s[27]++, await request.json());
    const {
      section,
      config
    } =
    /* istanbul ignore next */
    (cov_2jy0vjem40().s[28]++, body);
    /* istanbul ignore next */
    cov_2jy0vjem40().s[29]++;
    if (
    /* istanbul ignore next */
    (cov_2jy0vjem40().b[6][0]++, !section) ||
    /* istanbul ignore next */
    (cov_2jy0vjem40().b[6][1]++, !config)) {
      /* istanbul ignore next */
      cov_2jy0vjem40().b[5][0]++;
      cov_2jy0vjem40().s[30]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Faltan parÃ¡metros: section y config'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_2jy0vjem40().b[5][1]++;
    }
    // Validar y aplicar configuraciÃ³n segÃºn la secciÃ³n
    let updateResult =
    /* istanbul ignore next */
    (cov_2jy0vjem40().s[31]++, {});
    /* istanbul ignore next */
    cov_2jy0vjem40().s[32]++;
    switch (section) {
      case 'metrics':
        /* istanbul ignore next */
        cov_2jy0vjem40().b[7][0]++;
        cov_2jy0vjem40().s[33]++;
        updateResult = await updateMetricsConfig(config, authResult.userId);
        /* istanbul ignore next */
        cov_2jy0vjem40().s[34]++;
        break;
      case 'alerts':
        /* istanbul ignore next */
        cov_2jy0vjem40().b[7][1]++;
        cov_2jy0vjem40().s[35]++;
        updateResult = await updateAlertsConfig(config, authResult.userId);
        /* istanbul ignore next */
        cov_2jy0vjem40().s[36]++;
        break;
      case 'circuitBreakers':
        /* istanbul ignore next */
        cov_2jy0vjem40().b[7][2]++;
        cov_2jy0vjem40().s[37]++;
        updateResult = await updateCircuitBreakersConfig(config, authResult.userId);
        /* istanbul ignore next */
        cov_2jy0vjem40().s[38]++;
        break;
      case 'dashboard':
        /* istanbul ignore next */
        cov_2jy0vjem40().b[7][3]++;
        cov_2jy0vjem40().s[39]++;
        updateResult = await updateDashboardConfig(config, authResult.userId);
        /* istanbul ignore next */
        cov_2jy0vjem40().s[40]++;
        break;
      case 'compliance':
        /* istanbul ignore next */
        cov_2jy0vjem40().b[7][4]++;
        cov_2jy0vjem40().s[41]++;
        updateResult = await updateComplianceConfig(config, authResult.userId);
        /* istanbul ignore next */
        cov_2jy0vjem40().s[42]++;
        break;
      default:
        /* istanbul ignore next */
        cov_2jy0vjem40().b[7][5]++;
        cov_2jy0vjem40().s[43]++;
        return _server.NextResponse.json({
          success: false,
          error: 'SecciÃ³n de configuraciÃ³n no vÃ¡lida'
        }, {
          status: 400
        });
    }
    /* istanbul ignore next */
    cov_2jy0vjem40().s[44]++;
    _logger.logger.info(_logger.LogLevel.INFO, `Monitoring configuration updated: ${section}`, {
      userId: authResult.userId,
      section,
      changes: Object.keys(config).length
    }, _logger.LogCategory.SYSTEM);
    /* istanbul ignore next */
    cov_2jy0vjem40().s[45]++;
    return _server.NextResponse.json({
      success: true,
      data: {
        section,
        updated: updateResult,
        timestamp: new Date().toISOString()
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2jy0vjem40().s[46]++;
    _logger.logger.error(_logger.LogLevel.ERROR, 'Failed to update monitoring configuration', {
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_2jy0vjem40().b[8][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2jy0vjem40().b[8][1]++, 'Unknown error')
    }, _logger.LogCategory.SYSTEM);
    /* istanbul ignore next */
    cov_2jy0vjem40().s[47]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
/**
 * Obtiene estadÃ­sticas del sistema
 */
async function getSystemStats() {
  /* istanbul ignore next */
  cov_2jy0vjem40().f[6]++;
  const supabase =
  /* istanbul ignore next */
  (cov_2jy0vjem40().s[48]++, (0, _supabase.getSupabaseClient)(true));
  /* istanbul ignore next */
  cov_2jy0vjem40().s[49]++;
  if (!supabase) {
    /* istanbul ignore next */
    cov_2jy0vjem40().b[9][0]++;
    cov_2jy0vjem40().s[50]++;
    return {
      metrics: {
        total: 0,
        last24h: 0
      },
      alerts: {
        active: 0,
        total: 0
      },
      auditEvents: {
        total: 0,
        last24h: 0
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_2jy0vjem40().b[9][1]++;
  }
  const last24h =
  /* istanbul ignore next */
  (cov_2jy0vjem40().s[51]++, new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString());
  // EstadÃ­sticas de mÃ©tricas
  const {
    data: metricsStats
  } =
  /* istanbul ignore next */
  (cov_2jy0vjem40().s[52]++, await supabase.from('enterprise_metrics').select('id, timestamp').gte('timestamp', last24h));
  const {
    count: totalMetrics
  } =
  /* istanbul ignore next */
  (cov_2jy0vjem40().s[53]++, await supabase.from('enterprise_metrics').select('*', {
    count: 'exact',
    head: true
  }));
  // EstadÃ­sticas de alertas
  const {
    data: alertsStats
  } =
  /* istanbul ignore next */
  (cov_2jy0vjem40().s[54]++, await supabase.from('enterprise_alerts').select('id, status, triggered_at').eq('status', 'active'));
  const {
    count: totalAlerts
  } =
  /* istanbul ignore next */
  (cov_2jy0vjem40().s[55]++, await supabase.from('enterprise_alerts').select('*', {
    count: 'exact',
    head: true
  }));
  // EstadÃ­sticas de auditorÃ­a
  const {
    data: auditStats
  } =
  /* istanbul ignore next */
  (cov_2jy0vjem40().s[56]++, await supabase.from('audit_events').select('id, timestamp').gte('timestamp', last24h));
  const {
    count: totalAuditEvents
  } =
  /* istanbul ignore next */
  (cov_2jy0vjem40().s[57]++, await supabase.from('audit_events').select('*', {
    count: 'exact',
    head: true
  }));
  /* istanbul ignore next */
  cov_2jy0vjem40().s[58]++;
  return {
    metrics: {
      total:
      /* istanbul ignore next */
      (cov_2jy0vjem40().b[10][0]++, totalMetrics) ||
      /* istanbul ignore next */
      (cov_2jy0vjem40().b[10][1]++, 0),
      last24h:
      /* istanbul ignore next */
      (cov_2jy0vjem40().b[11][0]++, metricsStats?.length) ||
      /* istanbul ignore next */
      (cov_2jy0vjem40().b[11][1]++, 0)
    },
    alerts: {
      active:
      /* istanbul ignore next */
      (cov_2jy0vjem40().b[12][0]++, alertsStats?.length) ||
      /* istanbul ignore next */
      (cov_2jy0vjem40().b[12][1]++, 0),
      total:
      /* istanbul ignore next */
      (cov_2jy0vjem40().b[13][0]++, totalAlerts) ||
      /* istanbul ignore next */
      (cov_2jy0vjem40().b[13][1]++, 0)
    },
    auditEvents: {
      total:
      /* istanbul ignore next */
      (cov_2jy0vjem40().b[14][0]++, totalAuditEvents) ||
      /* istanbul ignore next */
      (cov_2jy0vjem40().b[14][1]++, 0),
      last24h:
      /* istanbul ignore next */
      (cov_2jy0vjem40().b[15][0]++, auditStats?.length) ||
      /* istanbul ignore next */
      (cov_2jy0vjem40().b[15][1]++, 0)
    }
  };
}
/**
 * Actualiza configuraciÃ³n de mÃ©tricas
 */
async function updateMetricsConfig(config, userId) {
  /* istanbul ignore next */
  cov_2jy0vjem40().f[7]++;
  // TODO: Implementar actualizaciÃ³n de configuraciÃ³n de mÃ©tricas
  // Por ahora solo validamos y retornamos confirmaciÃ³n
  const validFields =
  /* istanbul ignore next */
  (cov_2jy0vjem40().s[59]++, ['enabled', 'flushInterval', 'retentionDays', 'aggregationPeriods']);
  const updates =
  /* istanbul ignore next */
  (cov_2jy0vjem40().s[60]++, {});
  /* istanbul ignore next */
  cov_2jy0vjem40().s[61]++;
  for (const field of validFields) {
    /* istanbul ignore next */
    cov_2jy0vjem40().s[62]++;
    if (config[field] !== undefined) {
      /* istanbul ignore next */
      cov_2jy0vjem40().b[16][0]++;
      cov_2jy0vjem40().s[63]++;
      updates[field] = config[field];
    } else
    /* istanbul ignore next */
    {
      cov_2jy0vjem40().b[16][1]++;
    }
  }
  /* istanbul ignore next */
  cov_2jy0vjem40().s[64]++;
  return {
    updated: updates,
    message: 'Metrics configuration updated successfully'
  };
}
/**
 * Actualiza configuraciÃ³n de alertas
 */
async function updateAlertsConfig(config, userId) {
  /* istanbul ignore next */
  cov_2jy0vjem40().f[8]++;
  const validFields =
  /* istanbul ignore next */
  (cov_2jy0vjem40().s[65]++, ['enabled', 'escalationEnabled', 'defaultCooldown', 'maxAlertsPerHour']);
  const updates =
  /* istanbul ignore next */
  (cov_2jy0vjem40().s[66]++, {});
  /* istanbul ignore next */
  cov_2jy0vjem40().s[67]++;
  for (const field of validFields) {
    /* istanbul ignore next */
    cov_2jy0vjem40().s[68]++;
    if (config[field] !== undefined) {
      /* istanbul ignore next */
      cov_2jy0vjem40().b[17][0]++;
      cov_2jy0vjem40().s[69]++;
      updates[field] = config[field];
    } else
    /* istanbul ignore next */
    {
      cov_2jy0vjem40().b[17][1]++;
    }
  }
  /* istanbul ignore next */
  cov_2jy0vjem40().s[70]++;
  return {
    updated: updates,
    message: 'Alerts configuration updated successfully'
  };
}
/**
 * Actualiza configuraciÃ³n de circuit breakers
 */
async function updateCircuitBreakersConfig(config, userId) {
  /* istanbul ignore next */
  cov_2jy0vjem40().f[9]++;
  const updates =
  /* istanbul ignore next */
  (cov_2jy0vjem40().s[71]++, {});
  /* istanbul ignore next */
  cov_2jy0vjem40().s[72]++;
  if (config.enabled !== undefined) {
    /* istanbul ignore next */
    cov_2jy0vjem40().b[18][0]++;
    cov_2jy0vjem40().s[73]++;
    updates.enabled = config.enabled;
  } else
  /* istanbul ignore next */
  {
    cov_2jy0vjem40().b[18][1]++;
  }
  // Reset circuit breakers si se solicita
  cov_2jy0vjem40().s[74]++;
  if (config.reset) {
    /* istanbul ignore next */
    cov_2jy0vjem40().b[19][0]++;
    cov_2jy0vjem40().s[75]++;
    if (config.reset.includes('mercadopago_critical')) {
      /* istanbul ignore next */
      cov_2jy0vjem40().b[20][0]++;
      cov_2jy0vjem40().s[76]++;
      _circuitbreaker.mercadoPagoCriticalBreaker.reset();
      /* istanbul ignore next */
      cov_2jy0vjem40().s[77]++;
      updates.mercadopago_critical_reset = true;
    } else
    /* istanbul ignore next */
    {
      cov_2jy0vjem40().b[20][1]++;
    }
    cov_2jy0vjem40().s[78]++;
    if (config.reset.includes('mercadopago_standard')) {
      /* istanbul ignore next */
      cov_2jy0vjem40().b[21][0]++;
      cov_2jy0vjem40().s[79]++;
      _circuitbreaker.mercadoPagoStandardBreaker.reset();
      /* istanbul ignore next */
      cov_2jy0vjem40().s[80]++;
      updates.mercadopago_standard_reset = true;
    } else
    /* istanbul ignore next */
    {
      cov_2jy0vjem40().b[21][1]++;
    }
    cov_2jy0vjem40().s[81]++;
    if (config.reset.includes('webhook_processing')) {
      /* istanbul ignore next */
      cov_2jy0vjem40().b[22][0]++;
      cov_2jy0vjem40().s[82]++;
      _circuitbreaker.webhookProcessingBreaker.reset();
      /* istanbul ignore next */
      cov_2jy0vjem40().s[83]++;
      updates.webhook_processing_reset = true;
    } else
    /* istanbul ignore next */
    {
      cov_2jy0vjem40().b[22][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_2jy0vjem40().b[19][1]++;
  }
  cov_2jy0vjem40().s[84]++;
  return {
    updated: updates,
    message: 'Circuit breakers configuration updated successfully'
  };
}
/**
 * Actualiza configuraciÃ³n del dashboard
 */
async function updateDashboardConfig(config, userId) {
  /* istanbul ignore next */
  cov_2jy0vjem40().f[10]++;
  const validFields =
  /* istanbul ignore next */
  (cov_2jy0vjem40().s[85]++, ['refreshInterval', 'maxDataPoints', 'cacheTimeout']);
  const updates =
  /* istanbul ignore next */
  (cov_2jy0vjem40().s[86]++, {});
  /* istanbul ignore next */
  cov_2jy0vjem40().s[87]++;
  for (const field of validFields) {
    /* istanbul ignore next */
    cov_2jy0vjem40().s[88]++;
    if (config[field] !== undefined) {
      /* istanbul ignore next */
      cov_2jy0vjem40().b[23][0]++;
      cov_2jy0vjem40().s[89]++;
      updates[field] = config[field];
    } else
    /* istanbul ignore next */
    {
      cov_2jy0vjem40().b[23][1]++;
    }
  }
  /* istanbul ignore next */
  cov_2jy0vjem40().s[90]++;
  return {
    updated: updates,
    message: 'Dashboard configuration updated successfully'
  };
}
/**
 * Actualiza configuraciÃ³n de compliance
 */
async function updateComplianceConfig(config, userId) {
  /* istanbul ignore next */
  cov_2jy0vjem40().f[11]++;
  const validFields =
  /* istanbul ignore next */
  (cov_2jy0vjem40().s[91]++, ['auditEnabled', 'retentionPolicies', 'encryptionEnabled']);
  const updates =
  /* istanbul ignore next */
  (cov_2jy0vjem40().s[92]++, {});
  /* istanbul ignore next */
  cov_2jy0vjem40().s[93]++;
  for (const field of validFields) {
    /* istanbul ignore next */
    cov_2jy0vjem40().s[94]++;
    if (config[field] !== undefined) {
      /* istanbul ignore next */
      cov_2jy0vjem40().b[24][0]++;
      cov_2jy0vjem40().s[95]++;
      updates[field] = config[field];
    } else
    /* istanbul ignore next */
    {
      cov_2jy0vjem40().b[24][1]++;
    }
  }
  /* istanbul ignore next */
  cov_2jy0vjem40().s[96]++;
  return {
    updated: updates,
    message: 'Compliance configuration updated successfully'
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,