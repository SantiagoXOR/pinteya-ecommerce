a32cab345f7cf87e4918422d83980ef7
'use client';
"use strict";

/* istanbul ignore next */
function cov_1gudpud4bv() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\admin\\products\\CategorySelector.tsx";
  var hash = "8be5e56de73967da22d3cf58c9052f7616c8f7f3";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\admin\\products\\CategorySelector.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 32
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 31
        }
      },
      "5": {
        start: {
          line: 14,
          column: 20
        },
        end: {
          line: 14,
          column: 52
        }
      },
      "6": {
        start: {
          line: 15,
          column: 21
        },
        end: {
          line: 15,
          column: 44
        }
      },
      "7": {
        start: {
          line: 16,
          column: 15
        },
        end: {
          line: 16,
          column: 49
        }
      },
      "8": {
        start: {
          line: 19,
          column: 21
        },
        end: {
          line: 19,
          column: 51
        }
      },
      "9": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 22,
          column: 5
        }
      },
      "10": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 53
        }
      },
      "11": {
        start: {
          line: 23,
          column: 17
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "12": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 27
        }
      },
      "13": {
        start: {
          line: 28,
          column: 24
        },
        end: {
          line: 28,
          column: 33
        }
      },
      "14": {
        start: {
          line: 29,
          column: 27
        },
        end: {
          line: 29,
          column: 29
        }
      },
      "15": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 36,
          column: 7
        }
      },
      "16": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 35,
          column: 11
        }
      },
      "17": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 48,
          column: 7
        }
      },
      "18": {
        start: {
          line: 39,
          column: 29
        },
        end: {
          line: 39,
          column: 57
        }
      },
      "19": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 47,
          column: 9
        }
      },
      "20": {
        start: {
          line: 41,
          column: 27
        },
        end: {
          line: 41,
          column: 62
        }
      },
      "21": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 44,
          column: 13
        }
      },
      "22": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 43,
          column: 51
        }
      },
      "23": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 46,
          column: 46
        }
      },
      "24": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 49,
          column: 26
        }
      },
      "25": {
        start: {
          line: 53,
          column: 22
        },
        end: {
          line: 53,
          column: 24
        }
      },
      "26": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 62,
          column: 7
        }
      },
      "27": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 58,
          column: 11
        }
      },
      "28": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 61,
          column: 9
        }
      },
      "29": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 60,
          column: 79
        }
      },
      "30": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 63,
          column: 21
        }
      },
      "31": {
        start: {
          line: 66,
          column: 32
        },
        end: {
          line: 66,
          column: 59
        }
      },
      "32": {
        start: {
          line: 67,
          column: 40
        },
        end: {
          line: 67,
          column: 64
        }
      },
      "33": {
        start: {
          line: 68,
          column: 56
        },
        end: {
          line: 68,
          column: 87
        }
      },
      "34": {
        start: {
          line: 70,
          column: 68
        },
        end: {
          line: 76,
          column: 6
        }
      },
      "35": {
        start: {
          line: 77,
          column: 25
        },
        end: {
          line: 77,
          column: 54
        }
      },
      "36": {
        start: {
          line: 78,
          column: 27
        },
        end: {
          line: 78,
          column: 58
        }
      },
      "37": {
        start: {
          line: 80,
          column: 29
        },
        end: {
          line: 80,
          column: 73
        }
      },
      "38": {
        start: {
          line: 80,
          column: 56
        },
        end: {
          line: 80,
          column: 72
        }
      },
      "39": {
        start: {
          line: 82,
          column: 31
        },
        end: {
          line: 82,
          column: 156
        }
      },
      "40": {
        start: {
          line: 82,
          column: 78
        },
        end: {
          line: 82,
          column: 140
        }
      },
      "41": {
        start: {
          line: 83,
          column: 27
        },
        end: {
          line: 91,
          column: 5
        }
      },
      "42": {
        start: {
          line: 84,
          column: 28
        },
        end: {
          line: 84,
          column: 55
        }
      },
      "43": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 89,
          column: 9
        }
      },
      "44": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 86,
          column: 43
        }
      },
      "45": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 40
        }
      },
      "46": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 90,
          column: 43
        }
      },
      "47": {
        start: {
          line: 92,
          column: 25
        },
        end: {
          line: 96,
          column: 5
        }
      },
      "48": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 93,
          column: 29
        }
      },
      "49": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 94,
          column: 25
        }
      },
      "50": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 95,
          column: 26
        }
      },
      "51": {
        start: {
          line: 97,
          column: 31
        },
        end: {
          line: 143,
          column: 5
        }
      },
      "52": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 142,
          column: 29
        }
      },
      "53": {
        start: {
          line: 98,
          column: 56
        },
        end: {
          line: 142,
          column: 27
        }
      },
      "54": {
        start: {
          line: 105,
          column: 37
        },
        end: {
          line: 105,
          column: 62
        }
      },
      "55": {
        start: {
          line: 112,
          column: 44
        },
        end: {
          line: 112,
          column: 64
        }
      },
      "56": {
        start: {
          line: 113,
          column: 44
        },
        end: {
          line: 113,
          column: 72
        }
      },
      "57": {
        start: {
          line: 144,
          column: 27
        },
        end: {
          line: 170,
          column: 5
        }
      },
      "58": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 169,
          column: 29
        }
      },
      "59": {
        start: {
          line: 145,
          column: 56
        },
        end: {
          line: 169,
          column: 27
        }
      },
      "60": {
        start: {
          line: 147,
          column: 29
        },
        end: {
          line: 147,
          column: 54
        }
      },
      "61": {
        start: {
          line: 171,
          column: 4
        },
        end: {
          line: 176,
          column: 5
        }
      },
      "62": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 175,
          column: 11
        }
      },
      "63": {
        start: {
          line: 177,
          column: 4
        },
        end: {
          line: 253,
          column: 7
        }
      },
      "64": {
        start: {
          line: 182,
          column: 29
        },
        end: {
          line: 182,
          column: 47
        }
      },
      "65": {
        start: {
          line: 214,
          column: 51
        },
        end: {
          line: 214,
          column: 80
        }
      },
      "66": {
        start: {
          line: 234,
          column: 32
        },
        end: {
          line: 234,
          column: 67
        }
      },
      "67": {
        start: {
          line: 250,
          column: 29
        },
        end: {
          line: 250,
          column: 45
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "fetchCategories",
        decl: {
          start: {
            line: 18,
            column: 15
          },
          end: {
            line: 18,
            column: 30
          }
        },
        loc: {
          start: {
            line: 18,
            column: 33
          },
          end: {
            line: 25,
            column: 1
          }
        },
        line: 18
      },
      "2": {
        name: "buildCategoryTree",
        decl: {
          start: {
            line: 27,
            column: 9
          },
          end: {
            line: 27,
            column: 26
          }
        },
        loc: {
          start: {
            line: 27,
            column: 39
          },
          end: {
            line: 50,
            column: 1
          }
        },
        line: 27
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 31,
            column: 23
          },
          end: {
            line: 31,
            column: 24
          }
        },
        loc: {
          start: {
            line: 31,
            column: 35
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 31
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 38,
            column: 23
          },
          end: {
            line: 38,
            column: 24
          }
        },
        loc: {
          start: {
            line: 38,
            column: 35
          },
          end: {
            line: 48,
            column: 5
          }
        },
        line: 38
      },
      "5": {
        name: "flattenCategories",
        decl: {
          start: {
            line: 52,
            column: 9
          },
          end: {
            line: 52,
            column: 26
          }
        },
        loc: {
          start: {
            line: 52,
            column: 50
          },
          end: {
            line: 64,
            column: 1
          }
        },
        line: 52
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 54,
            column: 23
          },
          end: {
            line: 54,
            column: 24
          }
        },
        loc: {
          start: {
            line: 54,
            column: 35
          },
          end: {
            line: 62,
            column: 5
          }
        },
        line: 54
      },
      "7": {
        name: "CategorySelector",
        decl: {
          start: {
            line: 65,
            column: 9
          },
          end: {
            line: 65,
            column: 25
          }
        },
        loc: {
          start: {
            line: 65,
            column: 128
          },
          end: {
            line: 254,
            column: 1
          }
        },
        line: 65
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 80,
            column: 49
          },
          end: {
            line: 80,
            column: 50
          }
        },
        loc: {
          start: {
            line: 80,
            column: 56
          },
          end: {
            line: 80,
            column: 72
          }
        },
        line: 80
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 82,
            column: 66
          },
          end: {
            line: 82,
            column: 67
          }
        },
        loc: {
          start: {
            line: 82,
            column: 78
          },
          end: {
            line: 82,
            column: 140
          }
        },
        line: 82
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 83,
            column: 27
          },
          end: {
            line: 83,
            column: 28
          }
        },
        loc: {
          start: {
            line: 83,
            column: 41
          },
          end: {
            line: 91,
            column: 5
          }
        },
        line: 83
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 92,
            column: 25
          },
          end: {
            line: 92,
            column: 26
          }
        },
        loc: {
          start: {
            line: 92,
            column: 39
          },
          end: {
            line: 96,
            column: 5
          }
        },
        line: 92
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 97,
            column: 31
          },
          end: {
            line: 97,
            column: 32
          }
        },
        loc: {
          start: {
            line: 97,
            column: 56
          },
          end: {
            line: 143,
            column: 5
          }
        },
        line: 97
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 98,
            column: 30
          },
          end: {
            line: 98,
            column: 31
          }
        },
        loc: {
          start: {
            line: 98,
            column: 56
          },
          end: {
            line: 142,
            column: 27
          }
        },
        line: 98
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 105,
            column: 33
          },
          end: {
            line: 105,
            column: 34
          }
        },
        loc: {
          start: {
            line: 105,
            column: 37
          },
          end: {
            line: 105,
            column: 62
          }
        },
        line: 105
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 111,
            column: 49
          },
          end: {
            line: 111,
            column: 50
          }
        },
        loc: {
          start: {
            line: 111,
            column: 54
          },
          end: {
            line: 114,
            column: 41
          }
        },
        line: 111
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 144,
            column: 27
          },
          end: {
            line: 144,
            column: 28
          }
        },
        loc: {
          start: {
            line: 144,
            column: 41
          },
          end: {
            line: 170,
            column: 5
          }
        },
        line: 144
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 145,
            column: 30
          },
          end: {
            line: 145,
            column: 31
          }
        },
        loc: {
          start: {
            line: 145,
            column: 56
          },
          end: {
            line: 169,
            column: 27
          }
        },
        line: 145
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 147,
            column: 25
          },
          end: {
            line: 147,
            column: 26
          }
        },
        loc: {
          start: {
            line: 147,
            column: 29
          },
          end: {
            line: 147,
            column: 54
          }
        },
        line: 147
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 182,
            column: 25
          },
          end: {
            line: 182,
            column: 26
          }
        },
        loc: {
          start: {
            line: 182,
            column: 29
          },
          end: {
            line: 182,
            column: 47
          }
        },
        line: 182
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 214,
            column: 46
          },
          end: {
            line: 214,
            column: 47
          }
        },
        loc: {
          start: {
            line: 214,
            column: 51
          },
          end: {
            line: 214,
            column: 80
          }
        },
        line: 214
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 232,
            column: 37
          },
          end: {
            line: 232,
            column: 38
          }
        },
        loc: {
          start: {
            line: 232,
            column: 41
          },
          end: {
            line: 235,
            column: 29
          }
        },
        line: 232
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 250,
            column: 25
          },
          end: {
            line: 250,
            column: 26
          }
        },
        loc: {
          start: {
            line: 250,
            column: 29
          },
          end: {
            line: 250,
            column: 45
          }
        },
        line: 250
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 20
      },
      "1": {
        loc: {
          start: {
            line: 24,
            column: 11
          },
          end: {
            line: 24,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 11
          },
          end: {
            line: 24,
            column: 20
          }
        }, {
          start: {
            line: 24,
            column: 24
          },
          end: {
            line: 24,
            column: 26
          }
        }],
        line: 24
      },
      "2": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        }, {
          start: {
            line: 45,
            column: 15
          },
          end: {
            line: 47,
            column: 9
          }
        }],
        line: 40
      },
      "3": {
        loc: {
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 44,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 44,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "4": {
        loc: {
          start: {
            line: 52,
            column: 39
          },
          end: {
            line: 52,
            column: 48
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 52,
            column: 47
          },
          end: {
            line: 52,
            column: 48
          }
        }],
        line: 52
      },
      "5": {
        loc: {
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 61,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 61,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "6": {
        loc: {
          start: {
            line: 59,
            column: 12
          },
          end: {
            line: 59,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 12
          },
          end: {
            line: 59,
            column: 29
          }
        }, {
          start: {
            line: 59,
            column: 33
          },
          end: {
            line: 59,
            column: 61
          }
        }],
        line: 59
      },
      "7": {
        loc: {
          start: {
            line: 65,
            column: 52
          },
          end: {
            line: 65,
            column: 92
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 65,
            column: 66
          },
          end: {
            line: 65,
            column: 92
          }
        }],
        line: 65
      },
      "8": {
        loc: {
          start: {
            line: 65,
            column: 94
          },
          end: {
            line: 65,
            column: 113
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 65,
            column: 108
          },
          end: {
            line: 65,
            column: 113
          }
        }],
        line: 65
      },
      "9": {
        loc: {
          start: {
            line: 70,
            column: 18
          },
          end: {
            line: 70,
            column: 33
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 70,
            column: 31
          },
          end: {
            line: 70,
            column: 33
          }
        }],
        line: 70
      },
      "10": {
        loc: {
          start: {
            line: 82,
            column: 31
          },
          end: {
            line: 82,
            column: 156
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 82,
            column: 44
          },
          end: {
            line: 82,
            column: 141
          }
        }, {
          start: {
            line: 82,
            column: 144
          },
          end: {
            line: 82,
            column: 156
          }
        }],
        line: 82
      },
      "11": {
        loc: {
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 89,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 89,
            column: 9
          }
        }, {
          start: {
            line: 87,
            column: 15
          },
          end: {
            line: 89,
            column: 9
          }
        }],
        line: 85
      },
      "12": {
        loc: {
          start: {
            line: 97,
            column: 44
          },
          end: {
            line: 97,
            column: 53
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 97,
            column: 52
          },
          end: {
            line: 97,
            column: 53
          }
        }],
        line: 97
      },
      "13": {
        loc: {
          start: {
            line: 101,
            column: 129
          },
          end: {
            line: 101,
            column: 196
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 101,
            column: 129
          },
          end: {
            line: 101,
            column: 150
          }
        }, {
          start: {
            line: 101,
            column: 154
          },
          end: {
            line: 101,
            column: 196
          }
        }],
        line: 101
      },
      "14": {
        loc: {
          start: {
            line: 110,
            column: 36
          },
          end: {
            line: 126,
            column: 38
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 110,
            column: 102
          },
          end: {
            line: 121,
            column: 38
          }
        }, {
          start: {
            line: 121,
            column: 55
          },
          end: {
            line: 126,
            column: 38
          }
        }],
        line: 110
      },
      "15": {
        loc: {
          start: {
            line: 110,
            column: 36
          },
          end: {
            line: 110,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 110,
            column: 36
          },
          end: {
            line: 110,
            column: 53
          }
        }, {
          start: {
            line: 110,
            column: 57
          },
          end: {
            line: 110,
            column: 85
          }
        }],
        line: 110
      },
      "16": {
        loc: {
          start: {
            line: 116,
            column: 50
          },
          end: {
            line: 120,
            column: 42
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 116,
            column: 102
          },
          end: {
            line: 118,
            column: 42
          }
        }, {
          start: {
            line: 118,
            column: 59
          },
          end: {
            line: 120,
            column: 42
          }
        }],
        line: 116
      },
      "17": {
        loc: {
          start: {
            line: 133,
            column: 28
          },
          end: {
            line: 135,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 133,
            column: 28
          },
          end: {
            line: 133,
            column: 49
          }
        }, {
          start: {
            line: 133,
            column: 67
          },
          end: {
            line: 135,
            column: 30
          }
        }],
        line: 133
      },
      "18": {
        loc: {
          start: {
            line: 138,
            column: 20
          },
          end: {
            line: 140,
            column: 22
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 138,
            column: 20
          },
          end: {
            line: 138,
            column: 37
          }
        }, {
          start: {
            line: 138,
            column: 41
          },
          end: {
            line: 138,
            column: 69
          }
        }, {
          start: {
            line: 138,
            column: 73
          },
          end: {
            line: 138,
            column: 108
          }
        }, {
          start: {
            line: 138,
            column: 126
          },
          end: {
            line: 140,
            column: 22
          }
        }],
        line: 138
      },
      "19": {
        loc: {
          start: {
            line: 146,
            column: 105
          },
          end: {
            line: 146,
            column: 172
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 146,
            column: 105
          },
          end: {
            line: 146,
            column: 126
          }
        }, {
          start: {
            line: 146,
            column: 130
          },
          end: {
            line: 146,
            column: 172
          }
        }],
        line: 146
      },
      "20": {
        loc: {
          start: {
            line: 165,
            column: 20
          },
          end: {
            line: 167,
            column: 22
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 165,
            column: 20
          },
          end: {
            line: 165,
            column: 41
          }
        }, {
          start: {
            line: 165,
            column: 59
          },
          end: {
            line: 167,
            column: 22
          }
        }],
        line: 165
      },
      "21": {
        loc: {
          start: {
            line: 171,
            column: 4
          },
          end: {
            line: 176,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 171,
            column: 4
          },
          end: {
            line: 176,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 171
      },
      "22": {
        loc: {
          start: {
            line: 183,
            column: 199
          },
          end: {
            line: 183,
            column: 243
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 183,
            column: 207
          },
          end: {
            line: 183,
            column: 223
          }
        }, {
          start: {
            line: 183,
            column: 226
          },
          end: {
            line: 183,
            column: 243
          }
        }],
        line: 183
      },
      "23": {
        loc: {
          start: {
            line: 183,
            column: 245
          },
          end: {
            line: 183,
            column: 289
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 183,
            column: 245
          },
          end: {
            line: 183,
            column: 254
          }
        }, {
          start: {
            line: 183,
            column: 258
          },
          end: {
            line: 183,
            column: 289
          }
        }],
        line: 183
      },
      "24": {
        loc: {
          start: {
            line: 187,
            column: 61
          },
          end: {
            line: 187,
            column: 113
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 187,
            column: 80
          },
          end: {
            line: 187,
            column: 95
          }
        }, {
          start: {
            line: 187,
            column: 98
          },
          end: {
            line: 187,
            column: 113
          }
        }],
        line: 187
      },
      "25": {
        loc: {
          start: {
            line: 188,
            column: 34
          },
          end: {
            line: 188,
            column: 99
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 188,
            column: 46
          },
          end: {
            line: 188,
            column: 59
          }
        }, {
          start: {
            line: 188,
            column: 62
          },
          end: {
            line: 188,
            column: 99
          }
        }],
        line: 188
      },
      "26": {
        loc: {
          start: {
            line: 188,
            column: 62
          },
          end: {
            line: 188,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 188,
            column: 62
          },
          end: {
            line: 188,
            column: 84
          }
        }, {
          start: {
            line: 188,
            column: 88
          },
          end: {
            line: 188,
            column: 99
          }
        }],
        line: 188
      },
      "27": {
        loc: {
          start: {
            line: 191,
            column: 96
          },
          end: {
            line: 191,
            column: 128
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 191,
            column: 96
          },
          end: {
            line: 191,
            column: 102
          }
        }, {
          start: {
            line: 191,
            column: 106
          },
          end: {
            line: 191,
            column: 128
          }
        }],
        line: 191
      },
      "28": {
        loc: {
          start: {
            line: 195,
            column: 12
          },
          end: {
            line: 198,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 195,
            column: 12
          },
          end: {
            line: 195,
            column: 17
          }
        }, {
          start: {
            line: 195,
            column: 35
          },
          end: {
            line: 198,
            column: 14
          }
        }],
        line: 195
      },
      "29": {
        loc: {
          start: {
            line: 197,
            column: 26
          },
          end: {
            line: 197,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 197,
            column: 51
          },
          end: {
            line: 197,
            column: 64
          }
        }, {
          start: {
            line: 197,
            column: 67
          },
          end: {
            line: 197,
            column: 107
          }
        }],
        line: 197
      },
      "30": {
        loc: {
          start: {
            line: 197,
            column: 67
          },
          end: {
            line: 197,
            column: 107
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 197,
            column: 67
          },
          end: {
            line: 197,
            column: 84
          }
        }, {
          start: {
            line: 197,
            column: 88
          },
          end: {
            line: 197,
            column: 107
          }
        }],
        line: 197
      },
      "31": {
        loc: {
          start: {
            line: 199,
            column: 12
          },
          end: {
            line: 247,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 199,
            column: 12
          },
          end: {
            line: 199,
            column: 18
          }
        }, {
          start: {
            line: 199,
            column: 36
          },
          end: {
            line: 247,
            column: 14
          }
        }],
        line: 199
      },
      "32": {
        loc: {
          start: {
            line: 222,
            column: 34
          },
          end: {
            line: 225,
            column: 111
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 222,
            column: 74
          },
          end: {
            line: 225,
            column: 26
          }
        }, {
          start: {
            line: 225,
            column: 29
          },
          end: {
            line: 225,
            column: 111
          }
        }],
        line: 222
      },
      "33": {
        loc: {
          start: {
            line: 225,
            column: 29
          },
          end: {
            line: 225,
            column: 111
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 225,
            column: 42
          },
          end: {
            line: 225,
            column: 76
          }
        }, {
          start: {
            line: 225,
            column: 79
          },
          end: {
            line: 225,
            column: 111
          }
        }],
        line: 225
      },
      "34": {
        loc: {
          start: {
            line: 227,
            column: 20
          },
          end: {
            line: 245,
            column: 22
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 227,
            column: 20
          },
          end: {
            line: 227,
            column: 31
          }
        }, {
          start: {
            line: 227,
            column: 49
          },
          end: {
            line: 245,
            column: 22
          }
        }],
        line: 227
      },
      "35": {
        loc: {
          start: {
            line: 248,
            column: 12
          },
          end: {
            line: 251,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 248,
            column: 12
          },
          end: {
            line: 248,
            column: 18
          }
        }, {
          start: {
            line: 248,
            column: 36
          },
          end: {
            line: 251,
            column: 14
          }
        }],
        line: 248
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0],
      "8": [0],
      "9": [0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0, 0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\admin\\products\\CategorySelector.tsx"],
      sourcesContent: ["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { ChevronDown, Plus, Search, Folder, FolderOpen } from 'lucide-react';\r\nimport { cn } from '@/lib/core/utils';\r\n\r\ninterface Category {\r\n  id: string;\r\n  name: string;\r\n  description?: string;\r\n  parent_id?: string;\r\n  level: number;\r\n  children?: Category[];\r\n}\r\n\r\ninterface CategorySelectorProps {\r\n  value?: string;\r\n  onChange: (categoryId: string) => void;\r\n  error?: string;\r\n  placeholder?: string;\r\n  allowCreate?: boolean;\r\n  className?: string;\r\n}\r\n\r\n// API function to fetch categories\r\nasync function fetchCategories(): Promise<Category[]> {\r\n  const response = await fetch('/api/categories');\r\n  if (!response.ok) {\r\n    throw new Error('Error fetching categories');\r\n  }\r\n  const data = await response.json();\r\n  return data.data || [];\r\n}\r\n\r\n// Build category tree\r\nfunction buildCategoryTree(categories: Category[]): Category[] {\r\n  const categoryMap = new Map<string, Category>();\r\n  const rootCategories: Category[] = [];\r\n\r\n  // Create map of all categories\r\n  categories.forEach(category => {\r\n    categoryMap.set(category.id, { ...category, children: [] });\r\n  });\r\n\r\n  // Build tree structure\r\n  categories.forEach(category => {\r\n    const categoryNode = categoryMap.get(category.id)!;\r\n    \r\n    if (category.parent_id) {\r\n      const parent = categoryMap.get(category.parent_id);\r\n      if (parent) {\r\n        parent.children!.push(categoryNode);\r\n      }\r\n    } else {\r\n      rootCategories.push(categoryNode);\r\n    }\r\n  });\r\n\r\n  return rootCategories;\r\n}\r\n\r\n// Flatten categories for search\r\nfunction flattenCategories(categories: Category[], level = 0): Category[] {\r\n  const flattened: Category[] = [];\r\n  \r\n  categories.forEach(category => {\r\n    flattened.push({ ...category, level });\r\n    if (category.children && category.children.length > 0) {\r\n      flattened.push(...flattenCategories(category.children, level + 1));\r\n    }\r\n  });\r\n  \r\n  return flattened;\r\n}\r\n\r\nexport function CategorySelector({\r\n  value,\r\n  onChange,\r\n  error,\r\n  placeholder = \"Selecciona una categor\xEDa\",\r\n  allowCreate = false,\r\n  className\r\n}: CategorySelectorProps) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [expandedCategories, setExpandedCategories] = useState<Set<string>>(new Set());\r\n\r\n  // Fetch categories\r\n  const { data: categories = [], isLoading, error: fetchError } = useQuery({\r\n    queryKey: ['categories'],\r\n    queryFn: fetchCategories,\r\n    staleTime: 5 * 60 * 1000, // 5 minutes\r\n  });\r\n\r\n  const categoryTree = buildCategoryTree(categories);\r\n  const flatCategories = flattenCategories(categoryTree);\r\n  \r\n  // Find selected category\r\n  const selectedCategory = flatCategories.find(cat => cat.id === value);\r\n\r\n  // Filter categories based on search\r\n  const filteredCategories = searchTerm\r\n    ? flatCategories.filter(category =>\r\n        category.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n      )\r\n    : categoryTree;\r\n\r\n  const toggleExpanded = (categoryId: string) => {\r\n    const newExpanded = new Set(expandedCategories);\r\n    if (newExpanded.has(categoryId)) {\r\n      newExpanded.delete(categoryId);\r\n    } else {\r\n      newExpanded.add(categoryId);\r\n    }\r\n    setExpandedCategories(newExpanded);\r\n  };\r\n\r\n  const handleSelect = (categoryId: string) => {\r\n    onChange(categoryId);\r\n    setIsOpen(false);\r\n    setSearchTerm('');\r\n  };\r\n\r\n  const renderCategoryTree = (categories: Category[], level = 0) => {\r\n    return categories.map(category => (\r\n      <div key={category.id}>\r\n        <div\r\n          className={cn(\r\n            \"flex items-center justify-between px-3 py-2 hover:bg-gray-50 cursor-pointer\",\r\n            value === category.id && \"bg-blaze-orange-50 text-blaze-orange-700\"\r\n          )}\r\n          style={{ paddingLeft: `${12 + level * 20}px` }}\r\n          onClick={() => handleSelect(category.id)}\r\n        >\r\n          <div className=\"flex items-center space-x-2 flex-1\">\r\n            {category.children && category.children.length > 0 ? (\r\n              <button\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  toggleExpanded(category.id);\r\n                }}\r\n                className=\"p-1 hover:bg-gray-200 rounded\"\r\n              >\r\n                {expandedCategories.has(category.id) ? (\r\n                  <FolderOpen className=\"w-4 h-4 text-gray-500\" />\r\n                ) : (\r\n                  <Folder className=\"w-4 h-4 text-gray-500\" />\r\n                )}\r\n              </button>\r\n            ) : (\r\n              <div className=\"w-6 h-6 flex items-center justify-center\">\r\n                <div className=\"w-2 h-2 bg-gray-300 rounded-full\"></div>\r\n              </div>\r\n            )}\r\n            \r\n            <span className=\"text-sm font-medium\">{category.name}</span>\r\n          </div>\r\n          \r\n          {value === category.id && (\r\n            <div className=\"w-2 h-2 bg-blaze-orange-600 rounded-full\"></div>\r\n          )}\r\n        </div>\r\n        \r\n        {category.children && \r\n         category.children.length > 0 && \r\n         expandedCategories.has(category.id) && (\r\n          <div>\r\n            {renderCategoryTree(category.children, level + 1)}\r\n          </div>\r\n        )}\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  const renderFlatList = (categories: Category[]) => {\r\n    return categories.map(category => (\r\n      <div\r\n        key={category.id}\r\n        className={cn(\r\n          \"flex items-center px-3 py-2 hover:bg-gray-50 cursor-pointer\",\r\n          value === category.id && \"bg-blaze-orange-50 text-blaze-orange-700\"\r\n        )}\r\n        onClick={() => handleSelect(category.id)}\r\n      >\r\n        <div className=\"flex items-center space-x-2 flex-1\">\r\n          <div style={{ marginLeft: `${category.level * 16}px` }}>\r\n            <span className=\"text-sm\">\r\n              {'\u2014'.repeat(category.level)} {category.name}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        \r\n        {value === category.id && (\r\n          <div className=\"w-2 h-2 bg-blaze-orange-600 rounded-full\"></div>\r\n        )}\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  if (fetchError) {\r\n    return (\r\n      <div className=\"text-red-600 text-sm\">\r\n        Error al cargar categor\xEDas\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={cn(\"relative\", className)}>\r\n      {/* Selector Button */}\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => setIsOpen(!isOpen)}\r\n        className={cn(\r\n          \"w-full flex items-center justify-between px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blaze-orange-500 focus:border-transparent\",\r\n          error ? \"border-red-300\" : \"border-gray-300\",\r\n          isLoading && \"opacity-50 cursor-not-allowed\"\r\n        )}\r\n        disabled={isLoading}\r\n      >\r\n        <span className={cn(\r\n          \"text-sm\",\r\n          selectedCategory ? \"text-gray-900\" : \"text-gray-500\"\r\n        )}>\r\n          {isLoading ? 'Cargando...' : selectedCategory?.name || placeholder}\r\n        </span>\r\n        <ChevronDown className={cn(\r\n          \"w-4 h-4 text-gray-400 transition-transform\",\r\n          isOpen && \"transform rotate-180\"\r\n        )} />\r\n      </button>\r\n\r\n      {/* Error Message */}\r\n      {error && (\r\n        <p className=\"text-red-600 text-sm mt-1\">{error instanceof Error ? error.message : error?.toString() || 'Error desconocido'}</p>\r\n      )}\r\n\r\n      {/* Dropdown */}\r\n      {isOpen && (\r\n        <div className=\"absolute top-full left-0 right-0 mt-1 bg-white border border-gray-200 rounded-lg shadow-lg z-50 max-h-80 overflow-hidden\">\r\n          {/* Search */}\r\n          <div className=\"p-3 border-b border-gray-200\">\r\n            <div className=\"relative\">\r\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Buscar categor\xEDas...\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                className=\"w-full pl-10 pr-4 py-2 text-sm border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blaze-orange-500 focus:border-transparent\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Categories List */}\r\n          <div className=\"max-h-60 overflow-y-auto\">\r\n            {categories.length === 0 ? (\r\n              <div className=\"p-4 text-center text-gray-500 text-sm\">\r\n                No hay categor\xEDas disponibles\r\n              </div>\r\n            ) : searchTerm ? (\r\n              renderFlatList(filteredCategories as Category[])\r\n            ) : (\r\n              renderCategoryTree(categoryTree)\r\n            )}\r\n          </div>\r\n\r\n          {/* Create New Category */}\r\n          {allowCreate && (\r\n            <div className=\"border-t border-gray-200 p-3\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"flex items-center space-x-2 text-sm text-blaze-orange-600 hover:text-blaze-orange-700\"\r\n                onClick={() => {\r\n                  // TODO: Implement create category modal\r\n                  console.log('Create new category');\r\n                }}\r\n              >\r\n                <Plus className=\"w-4 h-4\" />\r\n                <span>Crear nueva categor\xEDa</span>\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Overlay */}\r\n      {isOpen && (\r\n        <div\r\n          className=\"fixed inset-0 z-40\"\r\n          onClick={() => setIsOpen(false)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["CategorySelector", "fetchCategories", "response", "fetch", "ok", "Error", "data", "json", "buildCategoryTree", "categories", "categoryMap", "Map", "rootCategories", "forEach", "category", "set", "id", "children", "categoryNode", "get", "parent_id", "parent", "push", "flattenCategories", "level", "flattened", "length", "value", "onChange", "error", "placeholder", "allowCreate", "className", "isOpen", "setIsOpen", "useState", "searchTerm", "setSearchTerm", "expandedCategories", "setExpandedCategories", "Set", "isLoading", "fetchError", "useQuery", "queryKey", "queryFn", "staleTime", "categoryTree", "flatCategories", "selectedCategory", "find", "cat", "filteredCategories", "filter", "name", "toLowerCase", "includes", "toggleExpanded", "categoryId", "newExpanded", "has", "delete", "add", "handleSelect", "renderCategoryTree", "map", "div", "cn", "style", "paddingLeft", "onClick", "button", "e", "stopPropagation", "FolderOpen", "Folder", "span", "renderFlatList", "marginLeft", "repeat", "type", "disabled", "ChevronDown", "p", "message", "toString", "Search", "input", "target", "console", "log", "Plus"],
      mappings: "AAAA;;;;;+BA4EgBA;;;eAAAA;;;;uBA1EoB;4BACX;6BACqC;uBAC3C;AAoBnB,mCAAmC;AACnC,eAAeC;IACb,MAAMC,WAAW,MAAMC,MAAM;IAC7B,IAAI,CAACD,SAASE,EAAE,EAAE;QAChB,MAAM,IAAIC,MAAM;IAClB;IACA,MAAMC,OAAO,MAAMJ,SAASK,IAAI;IAChC,OAAOD,KAAKA,IAAI,IAAI,EAAE;AACxB;AAEA,sBAAsB;AACtB,SAASE,kBAAkBC,UAAsB;IAC/C,MAAMC,cAAc,IAAIC;IACxB,MAAMC,iBAA6B,EAAE;IAErC,+BAA+B;IAC/BH,WAAWI,OAAO,CAACC,CAAAA;QACjBJ,YAAYK,GAAG,CAACD,SAASE,EAAE,EAAE;YAAE,GAAGF,QAAQ;YAAEG,UAAU,EAAE;QAAC;IAC3D;IAEA,uBAAuB;IACvBR,WAAWI,OAAO,CAACC,CAAAA;QACjB,MAAMI,eAAeR,YAAYS,GAAG,CAACL,SAASE,EAAE;QAEhD,IAAIF,SAASM,SAAS,EAAE;YACtB,MAAMC,SAASX,YAAYS,GAAG,CAACL,SAASM,SAAS;YACjD,IAAIC,QAAQ;gBACVA,OAAOJ,QAAQ,CAAEK,IAAI,CAACJ;YACxB;QACF,OAAO;YACLN,eAAeU,IAAI,CAACJ;QACtB;IACF;IAEA,OAAON;AACT;AAEA,gCAAgC;AAChC,SAASW,kBAAkBd,UAAsB,EAAEe,QAAQ,CAAC;IAC1D,MAAMC,YAAwB,EAAE;IAEhChB,WAAWI,OAAO,CAACC,CAAAA;QACjBW,UAAUH,IAAI,CAAC;YAAE,GAAGR,QAAQ;YAAEU;QAAM;QACpC,IAAIV,SAASG,QAAQ,IAAIH,SAASG,QAAQ,CAACS,MAAM,GAAG,GAAG;YACrDD,UAAUH,IAAI,IAAIC,kBAAkBT,SAASG,QAAQ,EAAEO,QAAQ;QACjE;IACF;IAEA,OAAOC;AACT;AAEO,SAASzB,iBAAiB,EAC/B2B,KAAK,EACLC,QAAQ,EACRC,KAAK,EACLC,cAAc,0BAA0B,EACxCC,cAAc,KAAK,EACnBC,SAAS,EACa;IACtB,MAAM,CAACC,QAAQC,UAAU,GAAGC,IAAAA,eAAQ,EAAC;IACrC,MAAM,CAACC,YAAYC,cAAc,GAAGF,IAAAA,eAAQ,EAAC;IAC7C,MAAM,CAACG,oBAAoBC,sBAAsB,GAAGJ,IAAAA,eAAQ,EAAc,IAAIK;IAE9E,mBAAmB;IACnB,MAAM,EAAElC,MAAMG,aAAa,EAAE,EAAEgC,SAAS,EAAEZ,OAAOa,UAAU,EAAE,GAAGC,IAAAA,oBAAQ,EAAC;QACvEC,UAAU;YAAC;SAAa;QACxBC,SAAS5C;QACT6C,WAAW,IAAI,KAAK;IACtB;IAEA,MAAMC,eAAevC,kBAAkBC;IACvC,MAAMuC,iBAAiBzB,kBAAkBwB;IAEzC,yBAAyB;IACzB,MAAME,mBAAmBD,eAAeE,IAAI,CAACC,CAAAA,MAAOA,IAAInC,EAAE,KAAKW;IAE/D,oCAAoC;IACpC,MAAMyB,qBAAqBhB,aACvBY,eAAeK,MAAM,CAACvC,CAAAA,WACpBA,SAASwC,IAAI,CAACC,WAAW,GAAGC,QAAQ,CAACpB,WAAWmB,WAAW,OAE7DR;IAEJ,MAAMU,iBAAiB,CAACC;QACtB,MAAMC,cAAc,IAAInB,IAAIF;QAC5B,IAAIqB,YAAYC,GAAG,CAACF,aAAa;YAC/BC,YAAYE,MAAM,CAACH;QACrB,OAAO;YACLC,YAAYG,GAAG,CAACJ;QAClB;QACAnB,sBAAsBoB;IACxB;IAEA,MAAMI,eAAe,CAACL;QACpB9B,SAAS8B;QACTxB,UAAU;QACVG,cAAc;IAChB;IAEA,MAAM2B,qBAAqB,CAACvD,YAAwBe,QAAQ,CAAC;QAC3D,OAAOf,WAAWwD,GAAG,CAACnD,CAAAA,yBACpB,sBAACoD;;kCACC,sBAACA;wBACClC,WAAWmC,IAAAA,SAAE,EACX,+EACAxC,UAAUb,SAASE,EAAE,IAAI;wBAE3BoD,OAAO;4BAAEC,aAAa,GAAG,KAAK7C,QAAQ,GAAG,EAAE,CAAC;wBAAC;wBAC7C8C,SAAS,IAAMP,aAAajD,SAASE,EAAE;;0CAEvC,sBAACkD;gCAAIlC,WAAU;;oCACZlB,SAASG,QAAQ,IAAIH,SAASG,QAAQ,CAACS,MAAM,GAAG,kBAC/C,qBAAC6C;wCACCD,SAAS,CAACE;4CACRA,EAAEC,eAAe;4CACjBhB,eAAe3C,SAASE,EAAE;wCAC5B;wCACAgB,WAAU;kDAETM,mBAAmBsB,GAAG,CAAC9C,SAASE,EAAE,kBACjC,qBAAC0D,uBAAU;4CAAC1C,WAAU;2DAEtB,qBAAC2C,mBAAM;4CAAC3C,WAAU;;uDAItB,qBAACkC;wCAAIlC,WAAU;kDACb,cAAA,qBAACkC;4CAAIlC,WAAU;;;kDAInB,qBAAC4C;wCAAK5C,WAAU;kDAAuBlB,SAASwC,IAAI;;;;4BAGrD3B,UAAUb,SAASE,EAAE,kBACpB,qBAACkD;gCAAIlC,WAAU;;;;oBAIlBlB,SAASG,QAAQ,IACjBH,SAASG,QAAQ,CAACS,MAAM,GAAG,KAC3BY,mBAAmBsB,GAAG,CAAC9C,SAASE,EAAE,mBACjC,qBAACkD;kCACEF,mBAAmBlD,SAASG,QAAQ,EAAEO,QAAQ;;;eA1C3CV,SAASE,EAAE;IA+CzB;IAEA,MAAM6D,iBAAiB,CAACpE;QACtB,OAAOA,WAAWwD,GAAG,CAACnD,CAAAA,yBACpB,sBAACoD;gBAEClC,WAAWmC,IAAAA,SAAE,EACX,+DACAxC,UAAUb,SAASE,EAAE,IAAI;gBAE3BsD,SAAS,IAAMP,aAAajD,SAASE,EAAE;;kCAEvC,qBAACkD;wBAAIlC,WAAU;kCACb,cAAA,qBAACkC;4BAAIE,OAAO;gCAAEU,YAAY,GAAGhE,SAASU,KAAK,GAAG,GAAG,EAAE,CAAC;4BAAC;sCACnD,cAAA,sBAACoD;gCAAK5C,WAAU;;oCACb,IAAI+C,MAAM,CAACjE,SAASU,KAAK;oCAAE;oCAAEV,SAASwC,IAAI;;;;;oBAKhD3B,UAAUb,SAASE,EAAE,kBACpB,qBAACkD;wBAAIlC,WAAU;;;eAhBZlB,SAASE,EAAE;IAoBtB;IAEA,IAAI0B,YAAY;QACd,qBACE,qBAACwB;YAAIlC,WAAU;sBAAuB;;IAI1C;IAEA,qBACE,sBAACkC;QAAIlC,WAAWmC,IAAAA,SAAE,EAAC,YAAYnC;;0BAE7B,sBAACuC;gBACCS,MAAK;gBACLV,SAAS,IAAMpC,UAAU,CAACD;gBAC1BD,WAAWmC,IAAAA,SAAE,EACX,6JACAtC,QAAQ,mBAAmB,mBAC3BY,aAAa;gBAEfwC,UAAUxC;;kCAEV,qBAACmC;wBAAK5C,WAAWmC,IAAAA,SAAE,EACjB,WACAlB,mBAAmB,kBAAkB;kCAEpCR,YAAY,gBAAgBQ,kBAAkBK,QAAQxB;;kCAEzD,qBAACoD,wBAAW;wBAAClD,WAAWmC,IAAAA,SAAE,EACxB,8CACAlC,UAAU;;;;YAKbJ,uBACC,qBAACsD;gBAAEnD,WAAU;0BAA6BH,iBAAiBxB,QAAQwB,MAAMuD,OAAO,GAAGvD,OAAOwD,cAAc;;YAIzGpD,wBACC,sBAACiC;gBAAIlC,WAAU;;kCAEb,qBAACkC;wBAAIlC,WAAU;kCACb,cAAA,sBAACkC;4BAAIlC,WAAU;;8CACb,qBAACsD,mBAAM;oCAACtD,WAAU;;8CAClB,qBAACuD;oCACCP,MAAK;oCACLlD,aAAY;oCACZH,OAAOS;oCACPR,UAAU,CAAC4C,IAAMnC,cAAcmC,EAAEgB,MAAM,CAAC7D,KAAK;oCAC7CK,WAAU;;;;;kCAMhB,qBAACkC;wBAAIlC,WAAU;kCACZvB,WAAWiB,MAAM,KAAK,kBACrB,qBAACwC;4BAAIlC,WAAU;sCAAwC;6BAGrDI,aACFyC,eAAezB,sBAEfY,mBAAmBjB;;oBAKtBhB,6BACC,qBAACmC;wBAAIlC,WAAU;kCACb,cAAA,sBAACuC;4BACCS,MAAK;4BACLhD,WAAU;4BACVsC,SAAS;gCACP,wCAAwC;gCACxCmB,QAAQC,GAAG,CAAC;4BACd;;8CAEA,qBAACC,iBAAI;oCAAC3D,WAAU;;8CAChB,qBAAC4C;8CAAK;;;;;;;YAQf3C,wBACC,qBAACiC;gBACClC,WAAU;gBACVsC,SAAS,IAAMpC,UAAU;;;;AAKnC"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8be5e56de73967da22d3cf58c9052f7616c8f7f3"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1gudpud4bv = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1gudpud4bv();
cov_1gudpud4bv().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1gudpud4bv().s[1]++;
Object.defineProperty(exports, "CategorySelector", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1gudpud4bv().f[0]++;
    cov_1gudpud4bv().s[2]++;
    return CategorySelector;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1gudpud4bv().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_1gudpud4bv().s[4]++, require("react"));
const _reactquery =
/* istanbul ignore next */
(cov_1gudpud4bv().s[5]++, require("@tanstack/react-query"));
const _lucidereact =
/* istanbul ignore next */
(cov_1gudpud4bv().s[6]++, require("lucide-react"));
const _utils =
/* istanbul ignore next */
(cov_1gudpud4bv().s[7]++, require("../../../lib/core/utils"));
// API function to fetch categories
async function fetchCategories() {
  /* istanbul ignore next */
  cov_1gudpud4bv().f[1]++;
  const response =
  /* istanbul ignore next */
  (cov_1gudpud4bv().s[8]++, await fetch('/api/categories'));
  /* istanbul ignore next */
  cov_1gudpud4bv().s[9]++;
  if (!response.ok) {
    /* istanbul ignore next */
    cov_1gudpud4bv().b[0][0]++;
    cov_1gudpud4bv().s[10]++;
    throw new Error('Error fetching categories');
  } else
  /* istanbul ignore next */
  {
    cov_1gudpud4bv().b[0][1]++;
  }
  const data =
  /* istanbul ignore next */
  (cov_1gudpud4bv().s[11]++, await response.json());
  /* istanbul ignore next */
  cov_1gudpud4bv().s[12]++;
  return /* istanbul ignore next */(cov_1gudpud4bv().b[1][0]++, data.data) ||
  /* istanbul ignore next */
  (cov_1gudpud4bv().b[1][1]++, []);
}
// Build category tree
function buildCategoryTree(categories) {
  /* istanbul ignore next */
  cov_1gudpud4bv().f[2]++;
  const categoryMap =
  /* istanbul ignore next */
  (cov_1gudpud4bv().s[13]++, new Map());
  const rootCategories =
  /* istanbul ignore next */
  (cov_1gudpud4bv().s[14]++, []);
  // Create map of all categories
  /* istanbul ignore next */
  cov_1gudpud4bv().s[15]++;
  categories.forEach(category => {
    /* istanbul ignore next */
    cov_1gudpud4bv().f[3]++;
    cov_1gudpud4bv().s[16]++;
    categoryMap.set(category.id, {
      ...category,
      children: []
    });
  });
  // Build tree structure
  /* istanbul ignore next */
  cov_1gudpud4bv().s[17]++;
  categories.forEach(category => {
    /* istanbul ignore next */
    cov_1gudpud4bv().f[4]++;
    const categoryNode =
    /* istanbul ignore next */
    (cov_1gudpud4bv().s[18]++, categoryMap.get(category.id));
    /* istanbul ignore next */
    cov_1gudpud4bv().s[19]++;
    if (category.parent_id) {
      /* istanbul ignore next */
      cov_1gudpud4bv().b[2][0]++;
      const parent =
      /* istanbul ignore next */
      (cov_1gudpud4bv().s[20]++, categoryMap.get(category.parent_id));
      /* istanbul ignore next */
      cov_1gudpud4bv().s[21]++;
      if (parent) {
        /* istanbul ignore next */
        cov_1gudpud4bv().b[3][0]++;
        cov_1gudpud4bv().s[22]++;
        parent.children.push(categoryNode);
      } else
      /* istanbul ignore next */
      {
        cov_1gudpud4bv().b[3][1]++;
      }
    } else {
      /* istanbul ignore next */
      cov_1gudpud4bv().b[2][1]++;
      cov_1gudpud4bv().s[23]++;
      rootCategories.push(categoryNode);
    }
  });
  /* istanbul ignore next */
  cov_1gudpud4bv().s[24]++;
  return rootCategories;
}
// Flatten categories for search
function flattenCategories(categories, level =
/* istanbul ignore next */
(cov_1gudpud4bv().b[4][0]++, 0)) {
  /* istanbul ignore next */
  cov_1gudpud4bv().f[5]++;
  const flattened =
  /* istanbul ignore next */
  (cov_1gudpud4bv().s[25]++, []);
  /* istanbul ignore next */
  cov_1gudpud4bv().s[26]++;
  categories.forEach(category => {
    /* istanbul ignore next */
    cov_1gudpud4bv().f[6]++;
    cov_1gudpud4bv().s[27]++;
    flattened.push({
      ...category,
      level
    });
    /* istanbul ignore next */
    cov_1gudpud4bv().s[28]++;
    if (
    /* istanbul ignore next */
    (cov_1gudpud4bv().b[6][0]++, category.children) &&
    /* istanbul ignore next */
    (cov_1gudpud4bv().b[6][1]++, category.children.length > 0)) {
      /* istanbul ignore next */
      cov_1gudpud4bv().b[5][0]++;
      cov_1gudpud4bv().s[29]++;
      flattened.push(...flattenCategories(category.children, level + 1));
    } else
    /* istanbul ignore next */
    {
      cov_1gudpud4bv().b[5][1]++;
    }
  });
  /* istanbul ignore next */
  cov_1gudpud4bv().s[30]++;
  return flattened;
}
function CategorySelector({
  value,
  onChange,
  error,
  placeholder =
  /* istanbul ignore next */
  (cov_1gudpud4bv().b[7][0]++, "Selecciona una categoría"),
  allowCreate =
  /* istanbul ignore next */
  (cov_1gudpud4bv().b[8][0]++, false),
  className
}) {
  /* istanbul ignore next */
  cov_1gudpud4bv().f[7]++;
  const [isOpen, setIsOpen] =
  /* istanbul ignore next */
  (cov_1gudpud4bv().s[31]++, (0, _react.useState)(false));
  const [searchTerm, setSearchTerm] =
  /* istanbul ignore next */
  (cov_1gudpud4bv().s[32]++, (0, _react.useState)(''));
  const [expandedCategories, setExpandedCategories] =
  /* istanbul ignore next */
  (cov_1gudpud4bv().s[33]++, (0, _react.useState)(new Set()));
  // Fetch categories
  const {
    data: categories =
    /* istanbul ignore next */
    (cov_1gudpud4bv().b[9][0]++, []),
    isLoading,
    error: fetchError
  } =
  /* istanbul ignore next */
  (cov_1gudpud4bv().s[34]++, (0, _reactquery.useQuery)({
    queryKey: ['categories'],
    queryFn: fetchCategories,
    staleTime: 5 * 60 * 1000
  }));
  const categoryTree =
  /* istanbul ignore next */
  (cov_1gudpud4bv().s[35]++, buildCategoryTree(categories));
  const flatCategories =
  /* istanbul ignore next */
  (cov_1gudpud4bv().s[36]++, flattenCategories(categoryTree));
  // Find selected category
  const selectedCategory =
  /* istanbul ignore next */
  (cov_1gudpud4bv().s[37]++, flatCategories.find(cat => {
    /* istanbul ignore next */
    cov_1gudpud4bv().f[8]++;
    cov_1gudpud4bv().s[38]++;
    return cat.id === value;
  }));
  // Filter categories based on search
  const filteredCategories =
  /* istanbul ignore next */
  (cov_1gudpud4bv().s[39]++, searchTerm ?
  /* istanbul ignore next */
  (cov_1gudpud4bv().b[10][0]++, flatCategories.filter(category => {
    /* istanbul ignore next */
    cov_1gudpud4bv().f[9]++;
    cov_1gudpud4bv().s[40]++;
    return category.name.toLowerCase().includes(searchTerm.toLowerCase());
  })) :
  /* istanbul ignore next */
  (cov_1gudpud4bv().b[10][1]++, categoryTree));
  /* istanbul ignore next */
  cov_1gudpud4bv().s[41]++;
  const toggleExpanded = categoryId => {
    /* istanbul ignore next */
    cov_1gudpud4bv().f[10]++;
    const newExpanded =
    /* istanbul ignore next */
    (cov_1gudpud4bv().s[42]++, new Set(expandedCategories));
    /* istanbul ignore next */
    cov_1gudpud4bv().s[43]++;
    if (newExpanded.has(categoryId)) {
      /* istanbul ignore next */
      cov_1gudpud4bv().b[11][0]++;
      cov_1gudpud4bv().s[44]++;
      newExpanded.delete(categoryId);
    } else {
      /* istanbul ignore next */
      cov_1gudpud4bv().b[11][1]++;
      cov_1gudpud4bv().s[45]++;
      newExpanded.add(categoryId);
    }
    /* istanbul ignore next */
    cov_1gudpud4bv().s[46]++;
    setExpandedCategories(newExpanded);
  };
  /* istanbul ignore next */
  cov_1gudpud4bv().s[47]++;
  const handleSelect = categoryId => {
    /* istanbul ignore next */
    cov_1gudpud4bv().f[11]++;
    cov_1gudpud4bv().s[48]++;
    onChange(categoryId);
    /* istanbul ignore next */
    cov_1gudpud4bv().s[49]++;
    setIsOpen(false);
    /* istanbul ignore next */
    cov_1gudpud4bv().s[50]++;
    setSearchTerm('');
  };
  /* istanbul ignore next */
  cov_1gudpud4bv().s[51]++;
  const renderCategoryTree = (categories, level =
  /* istanbul ignore next */
  (cov_1gudpud4bv().b[12][0]++, 0)) => {
    /* istanbul ignore next */
    cov_1gudpud4bv().f[12]++;
    cov_1gudpud4bv().s[52]++;
    return categories.map(category => {
      /* istanbul ignore next */
      cov_1gudpud4bv().f[13]++;
      cov_1gudpud4bv().s[53]++;
      return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: (0, _utils.cn)("flex items-center justify-between px-3 py-2 hover:bg-gray-50 cursor-pointer",
          /* istanbul ignore next */
          (cov_1gudpud4bv().b[13][0]++, value === category.id) &&
          /* istanbul ignore next */
          (cov_1gudpud4bv().b[13][1]++, "bg-blaze-orange-50 text-blaze-orange-700")),
          style: {
            paddingLeft: `${12 + level * 20}px`
          },
          onClick: () => {
            /* istanbul ignore next */
            cov_1gudpud4bv().f[14]++;
            cov_1gudpud4bv().s[54]++;
            return handleSelect(category.id);
          },
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex items-center space-x-2 flex-1",
            children: [
            /* istanbul ignore next */
            (cov_1gudpud4bv().b[15][0]++, category.children) &&
            /* istanbul ignore next */
            (cov_1gudpud4bv().b[15][1]++, category.children.length > 0) ?
            /* istanbul ignore next */
            (/*#__PURE__*/cov_1gudpud4bv().b[14][0]++, (0, _jsxruntime.jsx)("button", {
              onClick: e => {
                /* istanbul ignore next */
                cov_1gudpud4bv().f[15]++;
                cov_1gudpud4bv().s[55]++;
                e.stopPropagation();
                /* istanbul ignore next */
                cov_1gudpud4bv().s[56]++;
                toggleExpanded(category.id);
              },
              className: "p-1 hover:bg-gray-200 rounded",
              children: expandedCategories.has(category.id) ?
              /* istanbul ignore next */
              (/*#__PURE__*/cov_1gudpud4bv().b[16][0]++, (0, _jsxruntime.jsx)(_lucidereact.FolderOpen, {
                className: "w-4 h-4 text-gray-500"
              })) :
              /* istanbul ignore next */
              (/*#__PURE__*/cov_1gudpud4bv().b[16][1]++, (0, _jsxruntime.jsx)(_lucidereact.Folder, {
                className: "w-4 h-4 text-gray-500"
              }))
            })) :
            /* istanbul ignore next */
            (/*#__PURE__*/cov_1gudpud4bv().b[14][1]++, (0, _jsxruntime.jsx)("div", {
              className: "w-6 h-6 flex items-center justify-center",
              children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "w-2 h-2 bg-gray-300 rounded-full"
              })
            })), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              className: "text-sm font-medium",
              children: category.name
            })]
          }),
          /* istanbul ignore next */
          (cov_1gudpud4bv().b[17][0]++, value === category.id) &&
          /* istanbul ignore next */
          (cov_1gudpud4bv().b[17][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "w-2 h-2 bg-blaze-orange-600 rounded-full"
          }))]
        }),
        /* istanbul ignore next */
        (cov_1gudpud4bv().b[18][0]++, category.children) &&
        /* istanbul ignore next */
        (cov_1gudpud4bv().b[18][1]++, category.children.length > 0) &&
        /* istanbul ignore next */
        (cov_1gudpud4bv().b[18][2]++, expandedCategories.has(category.id)) &&
        /* istanbul ignore next */
        (cov_1gudpud4bv().b[18][3]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          children: renderCategoryTree(category.children, level + 1)
        }))]
      }, category.id);
    });
  };
  /* istanbul ignore next */
  cov_1gudpud4bv().s[57]++;
  const renderFlatList = categories => {
    /* istanbul ignore next */
    cov_1gudpud4bv().f[16]++;
    cov_1gudpud4bv().s[58]++;
    return categories.map(category => {
      /* istanbul ignore next */
      cov_1gudpud4bv().f[17]++;
      cov_1gudpud4bv().s[59]++;
      return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: (0, _utils.cn)("flex items-center px-3 py-2 hover:bg-gray-50 cursor-pointer",
        /* istanbul ignore next */
        (cov_1gudpud4bv().b[19][0]++, value === category.id) &&
        /* istanbul ignore next */
        (cov_1gudpud4bv().b[19][1]++, "bg-blaze-orange-50 text-blaze-orange-700")),
        onClick: () => {
          /* istanbul ignore next */
          cov_1gudpud4bv().f[18]++;
          cov_1gudpud4bv().s[60]++;
          return handleSelect(category.id);
        },
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "flex items-center space-x-2 flex-1",
          children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            style: {
              marginLeft: `${category.level * 16}px`
            },
            children: /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
              className: "text-sm",
              children: ['—'.repeat(category.level), " ", category.name]
            })
          })
        }),
        /* istanbul ignore next */
        (cov_1gudpud4bv().b[20][0]++, value === category.id) &&
        /* istanbul ignore next */
        (cov_1gudpud4bv().b[20][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "w-2 h-2 bg-blaze-orange-600 rounded-full"
        }))]
      }, category.id);
    });
  };
  /* istanbul ignore next */
  cov_1gudpud4bv().s[61]++;
  if (fetchError) {
    /* istanbul ignore next */
    cov_1gudpud4bv().b[21][0]++;
    cov_1gudpud4bv().s[62]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "text-red-600 text-sm",
      children: "Error al cargar categor\xedas"
    });
  } else
  /* istanbul ignore next */
  {
    cov_1gudpud4bv().b[21][1]++;
  }
  cov_1gudpud4bv().s[63]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: (0, _utils.cn)("relative", className),
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("button", {
      type: "button",
      onClick: () => {
        /* istanbul ignore next */
        cov_1gudpud4bv().f[19]++;
        cov_1gudpud4bv().s[64]++;
        return setIsOpen(!isOpen);
      },
      className: (0, _utils.cn)("w-full flex items-center justify-between px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blaze-orange-500 focus:border-transparent", error ?
      /* istanbul ignore next */
      (cov_1gudpud4bv().b[22][0]++, "border-red-300") :
      /* istanbul ignore next */
      (cov_1gudpud4bv().b[22][1]++, "border-gray-300"),
      /* istanbul ignore next */
      (cov_1gudpud4bv().b[23][0]++, isLoading) &&
      /* istanbul ignore next */
      (cov_1gudpud4bv().b[23][1]++, "opacity-50 cursor-not-allowed")),
      disabled: isLoading,
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
        className: (0, _utils.cn)("text-sm", selectedCategory ?
        /* istanbul ignore next */
        (cov_1gudpud4bv().b[24][0]++, "text-gray-900") :
        /* istanbul ignore next */
        (cov_1gudpud4bv().b[24][1]++, "text-gray-500")),
        children: isLoading ?
        /* istanbul ignore next */
        (cov_1gudpud4bv().b[25][0]++, 'Cargando...') :
        /* istanbul ignore next */
        (cov_1gudpud4bv().b[25][1]++,
        /* istanbul ignore next */
        (cov_1gudpud4bv().b[26][0]++, selectedCategory?.name) ||
        /* istanbul ignore next */
        (cov_1gudpud4bv().b[26][1]++, placeholder))
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.ChevronDown, {
        className: (0, _utils.cn)("w-4 h-4 text-gray-400 transition-transform",
        /* istanbul ignore next */
        (cov_1gudpud4bv().b[27][0]++, isOpen) &&
        /* istanbul ignore next */
        (cov_1gudpud4bv().b[27][1]++, "transform rotate-180"))
      })]
    }),
    /* istanbul ignore next */
    (cov_1gudpud4bv().b[28][0]++, error) &&
    /* istanbul ignore next */
    (cov_1gudpud4bv().b[28][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
      className: "text-red-600 text-sm mt-1",
      children: error instanceof Error ?
      /* istanbul ignore next */
      (cov_1gudpud4bv().b[29][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1gudpud4bv().b[29][1]++,
      /* istanbul ignore next */
      (cov_1gudpud4bv().b[30][0]++, error?.toString()) ||
      /* istanbul ignore next */
      (cov_1gudpud4bv().b[30][1]++, 'Error desconocido'))
    })),
    /* istanbul ignore next */
    (cov_1gudpud4bv().b[31][0]++, isOpen) &&
    /* istanbul ignore next */
    (cov_1gudpud4bv().b[31][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "absolute top-full left-0 right-0 mt-1 bg-white border border-gray-200 rounded-lg shadow-lg z-50 max-h-80 overflow-hidden",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "p-3 border-b border-gray-200",
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "relative",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Search, {
            className: "absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
            type: "text",
            placeholder: "Buscar categor\xedas...",
            value: searchTerm,
            onChange: e => {
              /* istanbul ignore next */
              cov_1gudpud4bv().f[20]++;
              cov_1gudpud4bv().s[65]++;
              return setSearchTerm(e.target.value);
            },
            className: "w-full pl-10 pr-4 py-2 text-sm border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blaze-orange-500 focus:border-transparent"
          })]
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "max-h-60 overflow-y-auto",
        children: categories.length === 0 ?
        /* istanbul ignore next */
        (/*#__PURE__*/cov_1gudpud4bv().b[32][0]++, (0, _jsxruntime.jsx)("div", {
          className: "p-4 text-center text-gray-500 text-sm",
          children: "No hay categor\xedas disponibles"
        })) :
        /* istanbul ignore next */
        (cov_1gudpud4bv().b[32][1]++, searchTerm ?
        /* istanbul ignore next */
        (cov_1gudpud4bv().b[33][0]++, renderFlatList(filteredCategories)) :
        /* istanbul ignore next */
        (cov_1gudpud4bv().b[33][1]++, renderCategoryTree(categoryTree)))
      }),
      /* istanbul ignore next */
      (cov_1gudpud4bv().b[34][0]++, allowCreate) &&
      /* istanbul ignore next */
      (cov_1gudpud4bv().b[34][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "border-t border-gray-200 p-3",
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)("button", {
          type: "button",
          className: "flex items-center space-x-2 text-sm text-blaze-orange-600 hover:text-blaze-orange-700",
          onClick: () => {
            /* istanbul ignore next */
            cov_1gudpud4bv().f[21]++;
            cov_1gudpud4bv().s[66]++;
            // TODO: Implement create category modal
            console.log('Create new category');
          },
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Plus, {
            className: "w-4 h-4"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
            children: "Crear nueva categor\xeda"
          })]
        })
      }))]
    })),
    /* istanbul ignore next */
    (cov_1gudpud4bv().b[35][0]++, isOpen) &&
    /* istanbul ignore next */
    (cov_1gudpud4bv().b[35][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "fixed inset-0 z-40",
      onClick: () => {
        /* istanbul ignore next */
        cov_1gudpud4bv().f[22]++;
        cov_1gudpud4bv().s[67]++;
        return setIsOpen(false);
      }
    }))]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,