{"version":3,"names":["adaptApiProductToComponent","cov_26gvlzppk5","f","s","adaptApiProductsToComponents","adaptComponentProductToApi","formatPrice","generateSlug","getDiscountPercentage","getFinalPrice","getMainImage","getPreviewImage","getThumbnailImage","getValidImageUrl","hasDiscount","apiProduct","images","b","id","title","name","brand","reviews","Math","floor","random","price","discountedPrice","discounted_price","undefined","imgs","thumbnails","thumbnail","previews","main","gallery","apiProducts","map","componentProduct","stock","product","originalPrice","round","imageUrl","fallback","trim","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","toLowerCase","normalize","replace"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\adapters\\product-adapter.ts"],"sourcesContent":["// ===================================\r\n// PINTEYA E-COMMERCE - ADAPTADOR DE PRODUCTOS\r\n// ===================================\r\n\r\nimport { Product } from '@/types/product';\r\nimport { ProductWithCategory } from '@/types/api';\r\n\r\n/**\r\n * Convierte un producto de la API al formato esperado por los componentes\r\n * @param apiProduct - Producto desde la API\r\n * @returns Product - Producto en formato de componente\r\n */\r\nexport function adaptApiProductToComponent(apiProduct: ProductWithCategory): Product & { name?: string } {\r\n  // Mapear correctamente las imágenes desde la estructura de BD a la estructura de componentes\r\n  const images = apiProduct.images || {};\r\n\r\n  return {\r\n    id: apiProduct.id,\r\n    title: apiProduct.name,\r\n    name: apiProduct.name, // Agregar el campo name para compatibilidad\r\n    brand: apiProduct.brand, // Agregar el campo brand que faltaba\r\n    reviews: Math.floor(Math.random() * 50) + 1, // Temporal: generar reviews aleatorias\r\n    price: apiProduct.price,\r\n    // FIX CRÍTICO: Solo usar discounted_price si es menor que price, sino undefined\r\n    discountedPrice: (apiProduct.discounted_price && apiProduct.discounted_price < apiProduct.price) \r\n      ? apiProduct.discounted_price \r\n      : undefined,\r\n    imgs: {\r\n      // Mapear desde la estructura real de la BD: { main, gallery, thumbnail }\r\n      thumbnails: images.thumbnail ? [images.thumbnail] : ['/images/products/placeholder.svg'],\r\n      previews: images.main ? [images.main] : (images.gallery?.[0] ? [images.gallery[0]] : ['/images/products/placeholder.svg']),\r\n    },\r\n  };\r\n}\r\n\r\n/**\r\n * Convierte una lista de productos de la API al formato de componentes\r\n * @param apiProducts - Lista de productos desde la API\r\n * @returns Product[] - Lista de productos en formato de componente\r\n */\r\nexport function adaptApiProductsToComponents(apiProducts: ProductWithCategory[]): (Product & { name?: string })[] {\r\n  return apiProducts.map(adaptApiProductToComponent);\r\n}\r\n\r\n/**\r\n * Convierte un producto de componente al formato de la API\r\n * @param componentProduct - Producto en formato de componente\r\n * @returns Partial<ProductWithCategory> - Producto en formato de API\r\n */\r\nexport function adaptComponentProductToApi(componentProduct: Product): Partial<ProductWithCategory> {\r\n  return {\r\n    id: componentProduct.id,\r\n    name: componentProduct.title,\r\n    price: componentProduct.price,\r\n    discounted_price: componentProduct.discountedPrice !== componentProduct.price \r\n      ? componentProduct.discountedPrice \r\n      : null,\r\n    images: componentProduct.imgs,\r\n    stock: 50, // Valor por defecto\r\n  };\r\n}\r\n\r\n/**\r\n * Verifica si un producto tiene descuento\r\n * @param product - Producto\r\n * @returns boolean\r\n */\r\nexport function hasDiscount(product: Product | ProductWithCategory): boolean {\r\n  if ('discountedPrice' in product) {\r\n    return product.discountedPrice !== undefined && product.discountedPrice < product.price;\r\n  }\r\n  if ('discounted_price' in product) {\r\n    return product.discounted_price !== null && product.discounted_price < product.price;\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Calcula el porcentaje de descuento\r\n * @param product - Producto\r\n * @returns number - Porcentaje de descuento\r\n */\r\nexport function getDiscountPercentage(product: Product | ProductWithCategory): number {\r\n  let originalPrice: number;\r\n  let discountedPrice: number;\r\n\r\n  if ('discountedPrice' in product) {\r\n    originalPrice = product.price;\r\n    discountedPrice = product.discountedPrice;\r\n  } else {\r\n    originalPrice = product.price;\r\n    discountedPrice = product.discounted_price || product.price;\r\n  }\r\n\r\n  if (discountedPrice >= originalPrice) {\r\n    return 0;\r\n  }\r\n\r\n  return Math.round(((originalPrice - discountedPrice) / originalPrice) * 100);\r\n}\r\n\r\n/**\r\n * Obtiene el precio final del producto (con descuento si aplica)\r\n * @param product - Producto\r\n * @returns number - Precio final\r\n */\r\nexport function getFinalPrice(product: Product | ProductWithCategory): number {\r\n  if ('discountedPrice' in product) {\r\n    return product.discountedPrice;\r\n  }\r\n  return product.discounted_price ?? product.price;\r\n}\r\n\r\n/**\r\n * Obtiene la imagen principal del producto\r\n * @param product - Producto\r\n * @returns string - URL de la imagen\r\n */\r\nexport function getMainImage(product: Product | ProductWithCategory): string {\r\n  if ('imgs' in product && product.imgs?.previews?.[0]) {\r\n    return product.imgs.previews[0];\r\n  }\r\n  if ('images' in product && product.images?.previews?.[0]) {\r\n    return product.images.previews[0];\r\n  }\r\n  return '/images/products/placeholder.svg';\r\n}\r\n\r\n/**\r\n * Valida y obtiene una URL de imagen válida, manejando cadenas vacías y undefined\r\n * @param imageUrl - URL de imagen a validar\r\n * @param fallback - URL de fallback (por defecto: placeholder)\r\n * @returns string - URL de imagen válida\r\n */\r\nexport function getValidImageUrl(imageUrl: string | undefined | null, fallback: string = '/images/products/placeholder.svg'): string {\r\n  // Verificar si la imagen existe y no es una cadena vacía o solo espacios\r\n  if (imageUrl && typeof imageUrl === 'string' && imageUrl.trim() !== '') {\r\n    return imageUrl.trim();\r\n  }\r\n  return fallback;\r\n}\r\n\r\n/**\r\n * Obtiene la imagen thumbnail del producto con validación robusta\r\n * @param product - Producto\r\n * @returns string - URL de la imagen thumbnail válida\r\n */\r\nexport function getThumbnailImage(product: Product | ProductWithCategory): string {\r\n  let imageUrl: string | undefined;\r\n\r\n  if ('imgs' in product && product.imgs?.thumbnails?.[0]) {\r\n    imageUrl = product.imgs.thumbnails[0];\r\n  } else if ('images' in product && product.images?.thumbnails?.[0]) {\r\n    imageUrl = product.images.thumbnails[0];\r\n  }\r\n\r\n  return getValidImageUrl(imageUrl);\r\n}\r\n\r\n/**\r\n * Obtiene la imagen preview del producto con validación robusta\r\n * @param product - Producto\r\n * @returns string - URL de la imagen preview válida\r\n */\r\nexport function getPreviewImage(product: Product | ProductWithCategory): string {\r\n  let imageUrl: string | undefined;\r\n\r\n  if ('imgs' in product && product.imgs?.previews?.[0]) {\r\n    imageUrl = product.imgs.previews[0];\r\n  } else if ('images' in product && product.images?.previews?.[0]) {\r\n    imageUrl = product.images.previews[0];\r\n  }\r\n\r\n  return getValidImageUrl(imageUrl);\r\n}\r\n\r\n/**\r\n * Formatea el precio para mostrar en pesos argentinos\r\n * @param price - Precio\r\n * @returns string - Precio formateado\r\n */\r\nexport function formatPrice(price: number): string {\r\n  return new Intl.NumberFormat('es-AR', {\r\n    style: 'currency',\r\n    currency: 'ARS',\r\n    minimumFractionDigits: 0,\r\n    maximumFractionDigits: 0,\r\n  }).format(price);\r\n}\r\n\r\n/**\r\n * Genera un slug a partir del nombre del producto\r\n * @param name - Nombre del producto\r\n * @returns string - Slug\r\n */\r\nexport function generateSlug(name: string): string {\r\n  return name\r\n    .toLowerCase()\r\n    .normalize('NFD')\r\n    .replace(/[\\u0300-\\u036f]/g, '') // Remover acentos\r\n    .replace(/[^a-z0-9\\s-]/g, '') // Remover caracteres especiales\r\n    .replace(/\\s+/g, '-') // Reemplazar espacios con guiones\r\n    .replace(/-+/g, '-') // Remover guiones múltiples\r\n    .replace(/^-|-$/g, ''); // Remover guiones al inicio y final\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}