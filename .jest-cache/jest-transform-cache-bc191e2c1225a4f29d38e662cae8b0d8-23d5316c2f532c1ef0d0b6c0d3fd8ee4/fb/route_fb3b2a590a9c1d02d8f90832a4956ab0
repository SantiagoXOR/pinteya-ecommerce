9c21465d64110b24de21f87b8b19093b
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_qjbyb75va() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\products\\route.ts";
  var hash = "0c467ba87f487fec44f71977e0fb79e53f937731";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\products\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 19
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 20
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 23
        }
      },
      "7": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "8": {
        start: {
          line: 24,
          column: 13
        },
        end: {
          line: 24,
          column: 27
        }
      },
      "9": {
        start: {
          line: 25,
          column: 19
        },
        end: {
          line: 25,
          column: 61
        }
      },
      "10": {
        start: {
          line: 26,
          column: 29
        },
        end: {
          line: 26,
          column: 82
        }
      },
      "11": {
        start: {
          line: 27,
          column: 22
        },
        end: {
          line: 27,
          column: 73
        }
      },
      "12": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 29,
          column: 51
        }
      },
      "13": {
        start: {
          line: 29,
          column: 39
        },
        end: {
          line: 29,
          column: 51
        }
      },
      "14": {
        start: {
          line: 30,
          column: 28
        },
        end: {
          line: 30,
          column: 41
        }
      },
      "15": {
        start: {
          line: 31,
          column: 27
        },
        end: {
          line: 31,
          column: 40
        }
      },
      "16": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 34,
          column: 20
        }
      },
      "17": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 66
        }
      },
      "18": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 39,
          column: 5
        }
      },
      "19": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 19
        }
      },
      "20": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "21": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 43,
          column: 10
        }
      },
      "22": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 45,
          column: 53
        }
      },
      "23": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 48,
          column: 5
        }
      },
      "24": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 30
        }
      },
      "25": {
        start: {
          line: 49,
          column: 17
        },
        end: {
          line: 51,
          column: 5
        }
      },
      "26": {
        start: {
          line: 52,
          column: 32
        },
        end: {
          line: 52,
          column: 88
        }
      },
      "27": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 62,
          column: 5
        }
      },
      "28": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 61,
          column: 9
        }
      },
      "29": {
        start: {
          line: 55,
          column: 23
        },
        end: {
          line: 55,
          column: 95
        }
      },
      "30": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 60,
          column: 13
        }
      },
      "31": {
        start: {
          line: 57,
          column: 16
        },
        end: {
          line: 57,
          column: 57
        }
      },
      "32": {
        start: {
          line: 59,
          column: 16
        },
        end: {
          line: 59,
          column: 39
        }
      },
      "33": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 63,
          column: 25
        }
      },
      "34": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 66,
          column: 5
        }
      },
      "35": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 31
        }
      },
      "36": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 67,
          column: 18
        }
      },
      "37": {
        start: {
          line: 69,
          column: 16
        },
        end: {
          line: 69,
          column: 24
        }
      },
      "38": {
        start: {
          line: 72,
          column: 4
        },
        end: {
          line: 72,
          column: 74
        }
      },
      "39": {
        start: {
          line: 77,
          column: 23
        },
        end: {
          line: 206,
          column: 1
        }
      },
      "40": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 205,
          column: 5
        }
      },
      "41": {
        start: {
          line: 80,
          column: 27
        },
        end: {
          line: 83,
          column: 10
        }
      },
      "42": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 92,
          column: 9
        }
      },
      "43": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 91,
          column: 15
        }
      },
      "44": {
        start: {
          line: 93,
          column: 24
        },
        end: {
          line: 93,
          column: 42
        }
      },
      "45": {
        start: {
          line: 95,
          column: 33
        },
        end: {
          line: 95,
          column: 88
        }
      },
      "46": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 102,
          column: 9
        }
      },
      "47": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 101,
          column: 15
        }
      },
      "48": {
        start: {
          line: 103,
          column: 35
        },
        end: {
          line: 103,
          column: 45
        }
      },
      "49": {
        start: {
          line: 104,
          column: 33
        },
        end: {
          line: 104,
          column: 53
        }
      },
      "50": {
        start: {
          line: 106,
          column: 28
        },
        end: {
          line: 106,
          column: 54
        }
      },
      "51": {
        start: {
          line: 107,
          column: 26
        },
        end: {
          line: 117,
          column: 9
        }
      },
      "52": {
        start: {
          line: 118,
          column: 24
        },
        end: {
          line: 118,
          column: 75
        }
      },
      "53": {
        start: {
          line: 120,
          column: 20
        },
        end: {
          line: 136,
          column: 10
        }
      },
      "54": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 140,
          column: 9
        }
      },
      "55": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 139,
          column: 63
        }
      },
      "56": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 143,
          column: 9
        }
      },
      "57": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 142,
          column: 65
        }
      },
      "58": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 146,
          column: 9
        }
      },
      "59": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 145,
          column: 61
        }
      },
      "60": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 149,
          column: 9
        }
      },
      "61": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 148,
          column: 58
        }
      },
      "62": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 152,
          column: 9
        }
      },
      "63": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 151,
          column: 58
        }
      },
      "64": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 156,
          column: 11
        }
      },
      "65": {
        start: {
          line: 158,
          column: 21
        },
        end: {
          line: 158,
          column: 55
        }
      },
      "66": {
        start: {
          line: 159,
          column: 19
        },
        end: {
          line: 159,
          column: 43
        }
      },
      "67": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 160,
          column: 38
        }
      },
      "68": {
        start: {
          line: 161,
          column: 49
        },
        end: {
          line: 161,
          column: 60
        }
      },
      "69": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 169,
          column: 9
        }
      },
      "70": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 163,
          column: 61
        }
      },
      "71": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 168,
          column: 15
        }
      },
      "72": {
        start: {
          line: 171,
          column: 36
        },
        end: {
          line: 175,
          column: 21
        }
      },
      "73": {
        start: {
          line: 171,
          column: 62
        },
        end: {
          line: 175,
          column: 13
        }
      },
      "74": {
        start: {
          line: 176,
          column: 22
        },
        end: {
          line: 176,
          column: 32
        }
      },
      "75": {
        start: {
          line: 177,
          column: 27
        },
        end: {
          line: 177,
          column: 59
        }
      },
      "76": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 189,
          column: 11
        }
      },
      "77": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 191,
          column: 66
        }
      },
      "78": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 199,
          column: 9
        }
      },
      "79": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 198,
          column: 15
        }
      },
      "80": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 204,
          column: 11
        }
      },
      "81": {
        start: {
          line: 210,
          column: 24
        },
        end: {
          line: 310,
          column: 1
        }
      },
      "82": {
        start: {
          line: 211,
          column: 4
        },
        end: {
          line: 309,
          column: 5
        }
      },
      "83": {
        start: {
          line: 213,
          column: 27
        },
        end: {
          line: 216,
          column: 10
        }
      },
      "84": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 225,
          column: 9
        }
      },
      "85": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 224,
          column: 15
        }
      },
      "86": {
        start: {
          line: 226,
          column: 24
        },
        end: {
          line: 226,
          column: 42
        }
      },
      "87": {
        start: {
          line: 228,
          column: 33
        },
        end: {
          line: 228,
          column: 81
        }
      },
      "88": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 235,
          column: 9
        }
      },
      "89": {
        start: {
          line: 230,
          column: 12
        },
        end: {
          line: 234,
          column: 15
        }
      },
      "90": {
        start: {
          line: 236,
          column: 35
        },
        end: {
          line: 236,
          column: 51
        }
      },
      "91": {
        start: {
          line: 238,
          column: 28
        },
        end: {
          line: 238,
          column: 49
        }
      },
      "92": {
        start: {
          line: 239,
          column: 8
        },
        end: {
          line: 247,
          column: 9
        }
      },
      "93": {
        start: {
          line: 240,
          column: 12
        },
        end: {
          line: 246,
          column: 15
        }
      },
      "94": {
        start: {
          line: 249,
          column: 57
        },
        end: {
          line: 249,
          column: 146
        }
      },
      "95": {
        start: {
          line: 250,
          column: 8
        },
        end: {
          line: 256,
          column: 9
        }
      },
      "96": {
        start: {
          line: 251,
          column: 12
        },
        end: {
          line: 255,
          column: 15
        }
      },
      "97": {
        start: {
          line: 258,
          column: 41
        },
        end: {
          line: 276,
          column: 17
        }
      },
      "98": {
        start: {
          line: 277,
          column: 8
        },
        end: {
          line: 284,
          column: 9
        }
      },
      "99": {
        start: {
          line: 278,
          column: 12
        },
        end: {
          line: 278,
          column: 60
        }
      },
      "100": {
        start: {
          line: 279,
          column: 12
        },
        end: {
          line: 283,
          column: 15
        }
      },
      "101": {
        start: {
          line: 286,
          column: 35
        },
        end: {
          line: 290,
          column: 9
        }
      },
      "102": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 292,
          column: 113
        }
      },
      "103": {
        start: {
          line: 293,
          column: 8
        },
        end: {
          line: 298,
          column: 11
        }
      },
      "104": {
        start: {
          line: 300,
          column: 8
        },
        end: {
          line: 300,
          column: 67
        }
      },
      "105": {
        start: {
          line: 301,
          column: 8
        },
        end: {
          line: 308,
          column: 11
        }
      },
      "106": {
        start: {
          line: 314,
          column: 30
        },
        end: {
          line: 421,
          column: 1
        }
      },
      "107": {
        start: {
          line: 315,
          column: 4
        },
        end: {
          line: 420,
          column: 5
        }
      },
      "108": {
        start: {
          line: 316,
          column: 8
        },
        end: {
          line: 316,
          column: 74
        }
      },
      "109": {
        start: {
          line: 318,
          column: 27
        },
        end: {
          line: 318,
          column: 91
        }
      },
      "110": {
        start: {
          line: 319,
          column: 8
        },
        end: {
          line: 327,
          column: 9
        }
      },
      "111": {
        start: {
          line: 320,
          column: 12
        },
        end: {
          line: 320,
          column: 60
        }
      },
      "112": {
        start: {
          line: 321,
          column: 12
        },
        end: {
          line: 326,
          column: 15
        }
      },
      "113": {
        start: {
          line: 328,
          column: 8
        },
        end: {
          line: 328,
          column: 41
        }
      },
      "114": {
        start: {
          line: 329,
          column: 35
        },
        end: {
          line: 329,
          column: 45
        }
      },
      "115": {
        start: {
          line: 330,
          column: 21
        },
        end: {
          line: 330,
          column: 41
        }
      },
      "116": {
        start: {
          line: 331,
          column: 8
        },
        end: {
          line: 331,
          column: 71
        }
      },
      "117": {
        start: {
          line: 333,
          column: 31
        },
        end: {
          line: 336,
          column: 9
        }
      },
      "118": {
        start: {
          line: 337,
          column: 8
        },
        end: {
          line: 346,
          column: 9
        }
      },
      "119": {
        start: {
          line: 338,
          column: 12
        },
        end: {
          line: 345,
          column: 13
        }
      },
      "120": {
        start: {
          line: 339,
          column: 16
        },
        end: {
          line: 344,
          column: 19
        }
      },
      "121": {
        start: {
          line: 348,
          column: 28
        },
        end: {
          line: 366,
          column: 9
        }
      },
      "122": {
        start: {
          line: 367,
          column: 8
        },
        end: {
          line: 367,
          column: 85
        }
      },
      "123": {
        start: {
          line: 369,
          column: 8
        },
        end: {
          line: 380,
          column: 9
        }
      },
      "124": {
        start: {
          line: 370,
          column: 61
        },
        end: {
          line: 370,
          column: 150
        }
      },
      "125": {
        start: {
          line: 371,
          column: 12
        },
        end: {
          line: 379,
          column: 13
        }
      },
      "126": {
        start: {
          line: 372,
          column: 16
        },
        end: {
          line: 372,
          column: 68
        }
      },
      "127": {
        start: {
          line: 373,
          column: 16
        },
        end: {
          line: 378,
          column: 19
        }
      },
      "128": {
        start: {
          line: 382,
          column: 41
        },
        end: {
          line: 392,
          column: 17
        }
      },
      "129": {
        start: {
          line: 393,
          column: 8
        },
        end: {
          line: 402,
          column: 9
        }
      },
      "130": {
        start: {
          line: 394,
          column: 12
        },
        end: {
          line: 394,
          column: 62
        }
      },
      "131": {
        start: {
          line: 395,
          column: 12
        },
        end: {
          line: 401,
          column: 15
        }
      },
      "132": {
        start: {
          line: 403,
          column: 8
        },
        end: {
          line: 403,
          column: 64
        }
      },
      "133": {
        start: {
          line: 404,
          column: 8
        },
        end: {
          line: 410,
          column: 11
        }
      },
      "134": {
        start: {
          line: 412,
          column: 8
        },
        end: {
          line: 412,
          column: 78
        }
      },
      "135": {
        start: {
          line: 413,
          column: 8
        },
        end: {
          line: 419,
          column: 11
        }
      },
      "136": {
        start: {
          line: 422,
          column: 12
        },
        end: {
          line: 480,
          column: 1
        }
      },
      "137": {
        start: {
          line: 423,
          column: 4
        },
        end: {
          line: 479,
          column: 5
        }
      },
      "138": {
        start: {
          line: 424,
          column: 8
        },
        end: {
          line: 424,
          column: 69
        }
      },
      "139": {
        start: {
          line: 426,
          column: 27
        },
        end: {
          line: 426,
          column: 73
        }
      },
      "140": {
        start: {
          line: 427,
          column: 8
        },
        end: {
          line: 434,
          column: 9
        }
      },
      "141": {
        start: {
          line: 428,
          column: 12
        },
        end: {
          line: 428,
          column: 60
        }
      },
      "142": {
        start: {
          line: 429,
          column: 12
        },
        end: {
          line: 433,
          column: 15
        }
      },
      "143": {
        start: {
          line: 436,
          column: 34
        },
        end: {
          line: 436,
          column: 144
        }
      },
      "144": {
        start: {
          line: 436,
          column: 81
        },
        end: {
          line: 436,
          column: 143
        }
      },
      "145": {
        start: {
          line: 437,
          column: 25
        },
        end: {
          line: 437,
          column: 38
        }
      },
      "146": {
        start: {
          line: 438,
          column: 8
        },
        end: {
          line: 438,
          column: 63
        }
      },
      "147": {
        start: {
          line: 440,
          column: 49
        },
        end: {
          line: 447,
          column: 20
        }
      },
      "148": {
        start: {
          line: 448,
          column: 8
        },
        end: {
          line: 456,
          column: 9
        }
      },
      "149": {
        start: {
          line: 449,
          column: 12
        },
        end: {
          line: 449,
          column: 54
        }
      },
      "150": {
        start: {
          line: 450,
          column: 12
        },
        end: {
          line: 455,
          column: 15
        }
      },
      "151": {
        start: {
          line: 457,
          column: 8
        },
        end: {
          line: 457,
          column: 83
        }
      },
      "152": {
        start: {
          line: 459,
          column: 36
        },
        end: {
          line: 463,
          column: 21
        }
      },
      "153": {
        start: {
          line: 459,
          column: 62
        },
        end: {
          line: 463,
          column: 13
        }
      },
      "154": {
        start: {
          line: 464,
          column: 8
        },
        end: {
          line: 470,
          column: 11
        }
      },
      "155": {
        start: {
          line: 472,
          column: 8
        },
        end: {
          line: 472,
          column: 68
        }
      },
      "156": {
        start: {
          line: 473,
          column: 8
        },
        end: {
          line: 478,
          column: 11
        }
      },
      "157": {
        start: {
          line: 481,
          column: 13
        },
        end: {
          line: 481,
          column: 30
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 28,
            column: 9
          },
          end: {
            line: 28,
            column: 33
          }
        },
        loc: {
          start: {
            line: 28,
            column: 47
          },
          end: {
            line: 35,
            column: 1
          }
        },
        line: 28
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 32,
            column: 39
          },
          end: {
            line: 32,
            column: 40
          }
        },
        loc: {
          start: {
            line: 32,
            column: 61
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 32
      },
      "6": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 36,
            column: 9
          },
          end: {
            line: 36,
            column: 34
          }
        },
        loc: {
          start: {
            line: 36,
            column: 53
          },
          end: {
            line: 68,
            column: 1
          }
        },
        line: 36
      },
      "7": {
        name: "checkAdminPermissionsForProducts",
        decl: {
          start: {
            line: 71,
            column: 15
          },
          end: {
            line: 71,
            column: 47
          }
        },
        loc: {
          start: {
            line: 71,
            column: 65
          },
          end: {
            line: 73,
            column: 1
          }
        },
        line: 71
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 77,
            column: 23
          },
          end: {
            line: 77,
            column: 24
          }
        },
        loc: {
          start: {
            line: 77,
            column: 40
          },
          end: {
            line: 206,
            column: 1
          }
        },
        line: 77
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 171,
            column: 50
          },
          end: {
            line: 171,
            column: 51
          }
        },
        loc: {
          start: {
            line: 171,
            column: 62
          },
          end: {
            line: 175,
            column: 13
          }
        },
        line: 171
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 210,
            column: 24
          },
          end: {
            line: 210,
            column: 25
          }
        },
        loc: {
          start: {
            line: 210,
            column: 41
          },
          end: {
            line: 310,
            column: 1
          }
        },
        line: 210
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 314,
            column: 30
          },
          end: {
            line: 314,
            column: 31
          }
        },
        loc: {
          start: {
            line: 314,
            column: 47
          },
          end: {
            line: 421,
            column: 1
          }
        },
        line: 314
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 422,
            column: 12
          },
          end: {
            line: 422,
            column: 13
          }
        },
        loc: {
          start: {
            line: 422,
            column: 29
          },
          end: {
            line: 480,
            column: 1
          }
        },
        line: 422
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 436,
            column: 63
          },
          end: {
            line: 436,
            column: 64
          }
        },
        loc: {
          start: {
            line: 436,
            column: 81
          },
          end: {
            line: 436,
            column: 143
          }
        },
        line: 436
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 459,
            column: 50
          },
          end: {
            line: 459,
            column: 51
          }
        },
        loc: {
          start: {
            line: 459,
            column: 62
          },
          end: {
            line: 463,
            column: 13
          }
        },
        line: 459
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 29,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 29,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "1": {
        loc: {
          start: {
            line: 33,
            column: 15
          },
          end: {
            line: 33,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 33,
            column: 29
          },
          end: {
            line: 33,
            column: 45
          }
        }, {
          start: {
            line: 33,
            column: 48
          },
          end: {
            line: 33,
            column: 65
          }
        }],
        line: 33
      },
      "2": {
        loc: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "3": {
        loc: {
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 37,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 37,
            column: 20
          }
        }, {
          start: {
            line: 37,
            column: 24
          },
          end: {
            line: 37,
            column: 27
          }
        }, {
          start: {
            line: 37,
            column: 31
          },
          end: {
            line: 37,
            column: 45
          }
        }],
        line: 37
      },
      "4": {
        loc: {
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "5": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 40,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 40,
            column: 20
          }
        }, {
          start: {
            line: 40,
            column: 24
          },
          end: {
            line: 40,
            column: 47
          }
        }, {
          start: {
            line: 40,
            column: 51
          },
          end: {
            line: 40,
            column: 76
          }
        }],
        line: 40
      },
      "6": {
        loc: {
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "7": {
        loc: {
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 46,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 46,
            column: 13
          }
        }, {
          start: {
            line: 46,
            column: 17
          },
          end: {
            line: 46,
            column: 31
          }
        }],
        line: 46
      },
      "8": {
        loc: {
          start: {
            line: 52,
            column: 32
          },
          end: {
            line: 52,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 32
          },
          end: {
            line: 52,
            column: 53
          }
        }, {
          start: {
            line: 52,
            column: 57
          },
          end: {
            line: 52,
            column: 88
          }
        }],
        line: 52
      },
      "9": {
        loc: {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 61,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 61,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "10": {
        loc: {
          start: {
            line: 54,
            column: 12
          },
          end: {
            line: 54,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 12
          },
          end: {
            line: 54,
            column: 29
          }
        }, {
          start: {
            line: 54,
            column: 33
          },
          end: {
            line: 54,
            column: 79
          }
        }],
        line: 54
      },
      "11": {
        loc: {
          start: {
            line: 55,
            column: 23
          },
          end: {
            line: 55,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 55,
            column: 47
          },
          end: {
            line: 55,
            column: 88
          }
        }, {
          start: {
            line: 55,
            column: 91
          },
          end: {
            line: 55,
            column: 95
          }
        }],
        line: 55
      },
      "12": {
        loc: {
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 60,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 60,
            column: 13
          }
        }, {
          start: {
            line: 58,
            column: 19
          },
          end: {
            line: 60,
            column: 13
          }
        }],
        line: 56
      },
      "13": {
        loc: {
          start: {
            line: 56,
            column: 16
          },
          end: {
            line: 56,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 16
          },
          end: {
            line: 56,
            column: 20
          }
        }, {
          start: {
            line: 56,
            column: 25
          },
          end: {
            line: 56,
            column: 33
          }
        }, {
          start: {
            line: 56,
            column: 37
          },
          end: {
            line: 56,
            column: 45
          }
        }],
        line: 56
      },
      "14": {
        loc: {
          start: {
            line: 64,
            column: 4
          },
          end: {
            line: 66,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 4
          },
          end: {
            line: 66,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "15": {
        loc: {
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 92,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 92,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 84
      },
      "16": {
        loc: {
          start: {
            line: 90,
            column: 24
          },
          end: {
            line: 90,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 90,
            column: 24
          },
          end: {
            line: 90,
            column: 41
          }
        }, {
          start: {
            line: 90,
            column: 45
          },
          end: {
            line: 90,
            column: 48
          }
        }],
        line: 90
      },
      "17": {
        loc: {
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 96
      },
      "18": {
        loc: {
          start: {
            line: 108,
            column: 18
          },
          end: {
            line: 108,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 108,
            column: 18
          },
          end: {
            line: 108,
            column: 42
          }
        }, {
          start: {
            line: 108,
            column: 46
          },
          end: {
            line: 108,
            column: 49
          }
        }],
        line: 108
      },
      "19": {
        loc: {
          start: {
            line: 109,
            column: 19
          },
          end: {
            line: 109,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 109,
            column: 19
          },
          end: {
            line: 109,
            column: 44
          }
        }, {
          start: {
            line: 109,
            column: 48
          },
          end: {
            line: 109,
            column: 76
          }
        }, {
          start: {
            line: 109,
            column: 80
          },
          end: {
            line: 109,
            column: 84
          }
        }],
        line: 109
      },
      "20": {
        loc: {
          start: {
            line: 110,
            column: 20
          },
          end: {
            line: 110,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 110,
            column: 20
          },
          end: {
            line: 110,
            column: 46
          }
        }, {
          start: {
            line: 110,
            column: 50
          },
          end: {
            line: 110,
            column: 59
          }
        }],
        line: 110
      },
      "21": {
        loc: {
          start: {
            line: 111,
            column: 25
          },
          end: {
            line: 111,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 111,
            column: 25
          },
          end: {
            line: 111,
            column: 53
          }
        }, {
          start: {
            line: 111,
            column: 57
          },
          end: {
            line: 111,
            column: 66
          }
        }],
        line: 111
      },
      "22": {
        loc: {
          start: {
            line: 112,
            column: 23
          },
          end: {
            line: 112,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 112,
            column: 37
          },
          end: {
            line: 112,
            column: 61
          }
        }, {
          start: {
            line: 112,
            column: 64
          },
          end: {
            line: 112,
            column: 73
          }
        }],
        line: 112
      },
      "23": {
        loc: {
          start: {
            line: 113,
            column: 23
          },
          end: {
            line: 113,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 113,
            column: 23
          },
          end: {
            line: 113,
            column: 51
          }
        }, {
          start: {
            line: 113,
            column: 55
          },
          end: {
            line: 113,
            column: 64
          }
        }],
        line: 113
      },
      "24": {
        loc: {
          start: {
            line: 114,
            column: 23
          },
          end: {
            line: 114,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 114,
            column: 23
          },
          end: {
            line: 114,
            column: 51
          }
        }, {
          start: {
            line: 114,
            column: 55
          },
          end: {
            line: 114,
            column: 64
          }
        }],
        line: 114
      },
      "25": {
        loc: {
          start: {
            line: 115,
            column: 21
          },
          end: {
            line: 115,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 115,
            column: 21
          },
          end: {
            line: 115,
            column: 47
          }
        }, {
          start: {
            line: 115,
            column: 51
          },
          end: {
            line: 115,
            column: 63
          }
        }],
        line: 115
      },
      "26": {
        loc: {
          start: {
            line: 116,
            column: 24
          },
          end: {
            line: 116,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 116,
            column: 24
          },
          end: {
            line: 116,
            column: 53
          }
        }, {
          start: {
            line: 116,
            column: 57
          },
          end: {
            line: 116,
            column: 63
          }
        }],
        line: 116
      },
      "27": {
        loc: {
          start: {
            line: 138,
            column: 8
          },
          end: {
            line: 140,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 138,
            column: 8
          },
          end: {
            line: 140,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 138
      },
      "28": {
        loc: {
          start: {
            line: 141,
            column: 8
          },
          end: {
            line: 143,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 141,
            column: 8
          },
          end: {
            line: 143,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 141
      },
      "29": {
        loc: {
          start: {
            line: 144,
            column: 8
          },
          end: {
            line: 146,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 144,
            column: 8
          },
          end: {
            line: 146,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 144
      },
      "30": {
        loc: {
          start: {
            line: 147,
            column: 8
          },
          end: {
            line: 149,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 147,
            column: 8
          },
          end: {
            line: 149,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 147
      },
      "31": {
        loc: {
          start: {
            line: 150,
            column: 8
          },
          end: {
            line: 152,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 8
          },
          end: {
            line: 152,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 150
      },
      "32": {
        loc: {
          start: {
            line: 162,
            column: 8
          },
          end: {
            line: 169,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 162,
            column: 8
          },
          end: {
            line: 169,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 162
      },
      "33": {
        loc: {
          start: {
            line: 171,
            column: 36
          },
          end: {
            line: 175,
            column: 21
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 171,
            column: 36
          },
          end: {
            line: 175,
            column: 15
          }
        }, {
          start: {
            line: 175,
            column: 19
          },
          end: {
            line: 175,
            column: 21
          }
        }],
        line: 171
      },
      "34": {
        loc: {
          start: {
            line: 173,
            column: 31
          },
          end: {
            line: 173,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 173,
            column: 31
          },
          end: {
            line: 173,
            column: 55
          }
        }, {
          start: {
            line: 173,
            column: 59
          },
          end: {
            line: 173,
            column: 63
          }
        }],
        line: 173
      },
      "35": {
        loc: {
          start: {
            line: 176,
            column: 22
          },
          end: {
            line: 176,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 176,
            column: 22
          },
          end: {
            line: 176,
            column: 27
          }
        }, {
          start: {
            line: 176,
            column: 31
          },
          end: {
            line: 176,
            column: 32
          }
        }],
        line: 176
      },
      "36": {
        loc: {
          start: {
            line: 192,
            column: 8
          },
          end: {
            line: 199,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 192,
            column: 8
          },
          end: {
            line: 199,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 192
      },
      "37": {
        loc: {
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 225,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 225,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 217
      },
      "38": {
        loc: {
          start: {
            line: 223,
            column: 24
          },
          end: {
            line: 223,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 223,
            column: 24
          },
          end: {
            line: 223,
            column: 41
          }
        }, {
          start: {
            line: 223,
            column: 45
          },
          end: {
            line: 223,
            column: 48
          }
        }],
        line: 223
      },
      "39": {
        loc: {
          start: {
            line: 229,
            column: 8
          },
          end: {
            line: 235,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 229,
            column: 8
          },
          end: {
            line: 235,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 229
      },
      "40": {
        loc: {
          start: {
            line: 239,
            column: 8
          },
          end: {
            line: 247,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 239,
            column: 8
          },
          end: {
            line: 247,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 239
      },
      "41": {
        loc: {
          start: {
            line: 250,
            column: 8
          },
          end: {
            line: 256,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 250,
            column: 8
          },
          end: {
            line: 256,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 250
      },
      "42": {
        loc: {
          start: {
            line: 250,
            column: 12
          },
          end: {
            line: 250,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 250,
            column: 12
          },
          end: {
            line: 250,
            column: 25
          }
        }, {
          start: {
            line: 250,
            column: 29
          },
          end: {
            line: 250,
            column: 38
          }
        }],
        line: 250
      },
      "43": {
        loc: {
          start: {
            line: 277,
            column: 8
          },
          end: {
            line: 284,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 277,
            column: 8
          },
          end: {
            line: 284,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 277
      },
      "44": {
        loc: {
          start: {
            line: 288,
            column: 27
          },
          end: {
            line: 288,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 288,
            column: 27
          },
          end: {
            line: 288,
            column: 51
          }
        }, {
          start: {
            line: 288,
            column: 55
          },
          end: {
            line: 288,
            column: 59
          }
        }],
        line: 288
      },
      "45": {
        loc: {
          start: {
            line: 319,
            column: 8
          },
          end: {
            line: 327,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 319,
            column: 8
          },
          end: {
            line: 327,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 319
      },
      "46": {
        loc: {
          start: {
            line: 322,
            column: 23
          },
          end: {
            line: 322,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 322,
            column: 23
          },
          end: {
            line: 322,
            column: 39
          }
        }, {
          start: {
            line: 322,
            column: 43
          },
          end: {
            line: 322,
            column: 68
          }
        }],
        line: 322
      },
      "47": {
        loc: {
          start: {
            line: 338,
            column: 12
          },
          end: {
            line: 345,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 338,
            column: 12
          },
          end: {
            line: 345,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 338
      },
      "48": {
        loc: {
          start: {
            line: 350,
            column: 25
          },
          end: {
            line: 350,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 350,
            column: 25
          },
          end: {
            line: 350,
            column: 41
          }
        }, {
          start: {
            line: 350,
            column: 45
          },
          end: {
            line: 350,
            column: 47
          }
        }],
        line: 350
      },
      "49": {
        loc: {
          start: {
            line: 351,
            column: 31
          },
          end: {
            line: 351,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 351,
            column: 31
          },
          end: {
            line: 351,
            column: 53
          }
        }, {
          start: {
            line: 351,
            column: 57
          },
          end: {
            line: 351,
            column: 59
          }
        }],
        line: 351
      },
      "50": {
        loc: {
          start: {
            line: 353,
            column: 30
          },
          end: {
            line: 353,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 353,
            column: 51
          },
          end: {
            line: 353,
            column: 81
          }
        }, {
          start: {
            line: 353,
            column: 84
          },
          end: {
            line: 353,
            column: 88
          }
        }],
        line: 353
      },
      "51": {
        loc: {
          start: {
            line: 354,
            column: 24
          },
          end: {
            line: 354,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 354,
            column: 42
          },
          end: {
            line: 354,
            column: 69
          }
        }, {
          start: {
            line: 354,
            column: 72
          },
          end: {
            line: 354,
            column: 76
          }
        }],
        line: 354
      },
      "52": {
        loc: {
          start: {
            line: 355,
            column: 19
          },
          end: {
            line: 355,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 355,
            column: 19
          },
          end: {
            line: 355,
            column: 39
          }
        }, {
          start: {
            line: 355,
            column: 43
          },
          end: {
            line: 355,
            column: 44
          }
        }],
        line: 355
      },
      "53": {
        loc: {
          start: {
            line: 356,
            column: 33
          },
          end: {
            line: 356,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 356,
            column: 33
          },
          end: {
            line: 356,
            column: 67
          }
        }, {
          start: {
            line: 356,
            column: 71
          },
          end: {
            line: 356,
            column: 72
          }
        }],
        line: 356
      },
      "54": {
        loc: {
          start: {
            line: 357,
            column: 25
          },
          end: {
            line: 357,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 357,
            column: 44
          },
          end: {
            line: 357,
            column: 70
          }
        }, {
          start: {
            line: 357,
            column: 73
          },
          end: {
            line: 357,
            column: 77
          }
        }],
        line: 357
      },
      "55": {
        loc: {
          start: {
            line: 358,
            column: 20
          },
          end: {
            line: 358,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 358,
            column: 20
          },
          end: {
            line: 358,
            column: 31
          }
        }, {
          start: {
            line: 358,
            column: 35
          },
          end: {
            line: 358,
            column: 42
          }
        }],
        line: 358
      },
      "56": {
        loc: {
          start: {
            line: 369,
            column: 8
          },
          end: {
            line: 380,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 369,
            column: 8
          },
          end: {
            line: 380,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 369
      },
      "57": {
        loc: {
          start: {
            line: 371,
            column: 12
          },
          end: {
            line: 379,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 371,
            column: 12
          },
          end: {
            line: 379,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 371
      },
      "58": {
        loc: {
          start: {
            line: 371,
            column: 16
          },
          end: {
            line: 371,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 371,
            column: 16
          },
          end: {
            line: 371,
            column: 29
          }
        }, {
          start: {
            line: 371,
            column: 33
          },
          end: {
            line: 371,
            column: 42
          }
        }],
        line: 371
      },
      "59": {
        loc: {
          start: {
            line: 393,
            column: 8
          },
          end: {
            line: 402,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 393,
            column: 8
          },
          end: {
            line: 402,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 393
      },
      "60": {
        loc: {
          start: {
            line: 416,
            column: 21
          },
          end: {
            line: 416,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 416,
            column: 46
          },
          end: {
            line: 416,
            column: 59
          }
        }, {
          start: {
            line: 416,
            column: 62
          },
          end: {
            line: 416,
            column: 77
          }
        }],
        line: 416
      },
      "61": {
        loc: {
          start: {
            line: 427,
            column: 8
          },
          end: {
            line: 434,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 427,
            column: 8
          },
          end: {
            line: 434,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 427
      },
      "62": {
        loc: {
          start: {
            line: 430,
            column: 23
          },
          end: {
            line: 430,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 430,
            column: 23
          },
          end: {
            line: 430,
            column: 39
          }
        }, {
          start: {
            line: 430,
            column: 43
          },
          end: {
            line: 430,
            column: 60
          }
        }],
        line: 430
      },
      "63": {
        loc: {
          start: {
            line: 448,
            column: 8
          },
          end: {
            line: 456,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 448,
            column: 8
          },
          end: {
            line: 456,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 448
      },
      "64": {
        loc: {
          start: {
            line: 457,
            column: 43
          },
          end: {
            line: 457,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 457,
            column: 43
          },
          end: {
            line: 457,
            column: 59
          }
        }, {
          start: {
            line: 457,
            column: 63
          },
          end: {
            line: 457,
            column: 64
          }
        }],
        line: 457
      },
      "65": {
        loc: {
          start: {
            line: 459,
            column: 36
          },
          end: {
            line: 463,
            column: 21
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 459,
            column: 36
          },
          end: {
            line: 463,
            column: 15
          }
        }, {
          start: {
            line: 463,
            column: 19
          },
          end: {
            line: 463,
            column: 21
          }
        }],
        line: 459
      },
      "66": {
        loc: {
          start: {
            line: 461,
            column: 31
          },
          end: {
            line: 461,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 461,
            column: 31
          },
          end: {
            line: 461,
            column: 55
          }
        }, {
          start: {
            line: 461,
            column: 59
          },
          end: {
            line: 461,
            column: 63
          }
        }],
        line: 461
      },
      "67": {
        loc: {
          start: {
            line: 466,
            column: 19
          },
          end: {
            line: 466,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 466,
            column: 19
          },
          end: {
            line: 466,
            column: 24
          }
        }, {
          start: {
            line: 466,
            column: 28
          },
          end: {
            line: 466,
            column: 29
          }
        }],
        line: 466
      },
      "68": {
        loc: {
          start: {
            line: 469,
            column: 35
          },
          end: {
            line: 469,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 469,
            column: 35
          },
          end: {
            line: 469,
            column: 40
          }
        }, {
          start: {
            line: 469,
            column: 44
          },
          end: {
            line: 469,
            column: 45
          }
        }],
        line: 469
      },
      "69": {
        loc: {
          start: {
            line: 475,
            column: 21
          },
          end: {
            line: 475,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 475,
            column: 46
          },
          end: {
            line: 475,
            column: 59
          }
        }, {
          start: {
            line: 475,
            column: 62
          },
          end: {
            line: 475,
            column: 77
          }
        }],
        line: 475
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\admin\\products\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { z } from 'zod';\r\nimport { checkCRUDPermissions, logAdminAction, getRequestInfo } from '@/lib/auth/admin-auth';\r\nimport { requireAdminAuth } from '@/lib/auth/enterprise-auth-utils';\r\nimport { withCriticalValidation } from '@/lib/validation/enterprise-validation-middleware';\r\nimport {\r\n  EnterpriseProductSchema,\r\n  EnterpriseProductFiltersSchema,\r\n  EnterprisePaginationSchema\r\n} from '@/lib/validation/enterprise-schemas';\r\nimport { ProductFiltersSchema } from '@/lib/validation/admin-schemas';\r\nimport type { ValidatedRequest } from '@/lib/validation/enterprise-validation-middleware';\r\n\r\n// Helper function to check admin permissions with proper role verification\r\nasync function checkAdminPermissionsForProducts(action: 'create' | 'read' | 'update' | 'delete', request?: NextRequest) {\r\n  return await checkCRUDPermissions(action, 'products');\r\n}\r\n\r\n/**\r\n * GET /api/admin/products\r\n * Obtener lista paginada de productos con filtros (ENTERPRISE)\r\n */\r\nconst getHandler = async (request: ValidatedRequest) => {\r\n  try {\r\n    // ENTERPRISE: Verificar autenticaci\xF3n con contexto completo\r\n    const authResult = await requireAdminAuth(request, ['admin_access', 'products_read']);\r\n\r\n    if (!authResult.success) {\r\n      return NextResponse.json(\r\n        {\r\n          error: authResult.error,\r\n          code: authResult.code,\r\n          enterprise: true\r\n        },\r\n        { status: authResult.status || 401 }\r\n      );\r\n    }\r\n\r\n    const context = authResult.context!;\r\n\r\n    // LEGACY: Mantener compatibilidad con sistema anterior\r\n    const legacyAuthResult = await checkAdminPermissionsForProducts('read', request);\r\n    if (!legacyAuthResult.success) {\r\n      return NextResponse.json(\r\n        { error: legacyAuthResult.error },\r\n        { status: legacyAuthResult.status }\r\n      );\r\n    }\r\n\r\n    const { supabase, user } = authResult;\r\n    const { searchParams } = new URL(request.url);\r\n\r\n    // Parse query parameters - let schema handle type conversion\r\n    const statusParam = searchParams.get('status');\r\n    \r\n    const rawParams = {\r\n      page: searchParams.get('page') || '1',\r\n      limit: searchParams.get('limit') || searchParams.get('pageSize') || '20',\r\n      search: searchParams.get('search') || undefined,\r\n      category_id: searchParams.get('category') || undefined,\r\n      is_active: statusParam ? statusParam === 'active' : undefined,\r\n      price_min: searchParams.get('priceMin') || undefined,\r\n      price_max: searchParams.get('priceMax') || undefined,\r\n      sort_by: searchParams.get('sortBy') || 'created_at',\r\n      sort_order: (searchParams.get('sortOrder') as 'asc' | 'desc') || 'desc'\r\n    };\r\n\r\n    const filters = ProductFiltersSchema.parse(rawParams);\r\n\r\n    // Build query\r\n    let query = supabase\r\n      .from('products')\r\n      .select(`\r\n        id,\r\n        name,\r\n        description,\r\n        price,\r\n        stock,\r\n        category_id,\r\n        images,\r\n        created_at,\r\n        updated_at,\r\n        categories (\r\n          id,\r\n          name\r\n        )\r\n      `, { count: 'exact' });\r\n\r\n    // Apply filters\r\n    if (filters.search) {\r\n      query = query.ilike('name', `%${filters.search}%`);\r\n    }\r\n    if (filters.category_id) {\r\n      query = query.eq('category_id', filters.category_id);\r\n    }\r\n    if (filters.is_active !== undefined) {\r\n      query = query.eq('is_active', filters.is_active);\r\n    }\r\n    if (filters.price_min !== undefined) {\r\n      query = query.gte('price', filters.price_min);\r\n    }\r\n    if (filters.price_max !== undefined) {\r\n      query = query.lte('price', filters.price_max);\r\n    }\r\n\r\n    // Apply sorting\r\n    query = query.order(filters.sort_by, { ascending: filters.sort_order === 'asc' });\r\n\r\n    // Apply pagination\r\n    const from = (filters.page - 1) * filters.limit;\r\n    const to = from + filters.limit - 1;\r\n    query = query.range(from, to);\r\n\r\n    const { data: products, error, count } = await query;\r\n\r\n    if (error) {\r\n      console.error('Error fetching products:', error);\r\n      return NextResponse.json(\r\n        { error: 'Error al obtener productos' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Transform data to include category name\r\n    const transformedProducts = products?.map(product => ({\r\n      ...product,\r\n      category_name: product.categories?.name || null,\r\n      categories: undefined, // Remove nested object\r\n    })) || [];\r\n\r\n    const total = count || 0;\r\n    const totalPages = Math.ceil(total / filters.limit);\r\n\r\n    return NextResponse.json({\r\n      data: transformedProducts,\r\n      total,\r\n      page: filters.page,\r\n      pageSize: filters.limit,\r\n      totalPages,\r\n      filters,\r\n      sort: {\r\n        by: filters.sort_by,\r\n        order: filters.sort_order,\r\n      },\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Error in GET /api/admin/products:', error);\r\n    \r\n    if (error instanceof z.ZodError) {\r\n      return NextResponse.json(\r\n        { error: 'Par\xE1metros inv\xE1lidos', details: error.errors },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * POST /api/admin/products\r\n * Crear nuevo producto (ENTERPRISE)\r\n */\r\nconst postHandler = async (request: ValidatedRequest) => {\r\n  try {\r\n    // ENTERPRISE: Verificar autenticaci\xF3n con contexto completo\r\n    const authResult = await requireAdminAuth(request, ['admin_access', 'products_create']);\r\n\r\n    if (!authResult.success) {\r\n      return NextResponse.json(\r\n        {\r\n          error: authResult.error,\r\n          code: authResult.code,\r\n          enterprise: true\r\n        },\r\n        { status: authResult.status || 401 }\r\n      );\r\n    }\r\n\r\n    const context = authResult.context!;\r\n\r\n    // LEGACY: Mantener compatibilidad con sistema anterior\r\n    const legacyAuthResult = await checkAdminPermissionsForProducts('create');\r\n    if (!legacyAuthResult.success) {\r\n      return NextResponse.json(\r\n        { error: legacyAuthResult.error },\r\n        { status: legacyAuthResult.status }\r\n      );\r\n    }\r\n\r\n    const { supabase, user } = legacyAuthResult;\r\n\r\n    // ENTERPRISE: Usar datos ya validados por middleware\r\n    const productData = request.validatedBody;\r\n\r\n    if (!productData) {\r\n      return NextResponse.json(\r\n        {\r\n          error: 'Datos de validaci\xF3n no encontrados',\r\n          code: 'VALIDATION_DATA_MISSING',\r\n          enterprise: true\r\n        },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Verify category exists\r\n    const { data: category, error: categoryError } = await supabase\r\n      .from('categories')\r\n      .select('id')\r\n      .eq('id', productData.category_id)\r\n      .single();\r\n\r\n    if (categoryError || !category) {\r\n      return NextResponse.json(\r\n        { error: 'Categor\xEDa no encontrada' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Create product\r\n    const { data: product, error } = await supabase\r\n      .from('products')\r\n      .insert({\r\n        ...productData,\r\n        created_at: new Date().toISOString(),\r\n        updated_at: new Date().toISOString(),\r\n      })\r\n      .select(`\r\n        id,\r\n        name,\r\n        description,\r\n        price,\r\n        stock,\r\n        category_id,\r\n        images,\r\n        created_at,\r\n        updated_at,\r\n        categories (\r\n          id,\r\n          name\r\n        )\r\n      `)\r\n      .single();\r\n\r\n    if (error) {\r\n      console.error('Error creating product:', error);\r\n      return NextResponse.json(\r\n        { error: 'Error al crear producto' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Transform response\r\n    const transformedProduct = {\r\n      ...product,\r\n      category_name: product.categories?.name || null,\r\n      categories: undefined,\r\n    };\r\n\r\n    // Log admin action\r\n    await logAdminAction(\r\n      user.id,\r\n      'CREATE',\r\n      'product',\r\n      product.id,\r\n      null,\r\n      transformedProduct\r\n    );\r\n\r\n    return NextResponse.json(\r\n      {\r\n        message: 'Producto creado exitosamente',\r\n        data: transformedProduct\r\n      },\r\n      { status: 201 }\r\n    );\r\n\r\n  } catch (error) {\r\n    console.error('Error in POST /api/admin/products:', error);\r\n\r\n    return NextResponse.json(\r\n      {\r\n        error: 'Error interno del servidor',\r\n        code: 'INTERNAL_ERROR',\r\n        enterprise: true,\r\n        timestamp: new Date().toISOString()\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n};\r\n\r\n/**\r\n * POST SIMPLIFICADO /api/admin/products\r\n * Crear nuevo producto SIN validaciones enterprise complejas\r\n */\r\nconst postHandlerSimple = async (request: NextRequest) => {\r\n  try {\r\n    console.log('\uD83D\uDD27 Products API: Creating product (SIMPLE MODE)...');\r\n\r\n    // Verificar autenticaci\xF3n b\xE1sica\r\n    const authResult = await checkCRUDPermissions('create', 'products');\r\n\r\n    if (!authResult.allowed) {\r\n      console.log('\u274C Auth failed:', authResult.error);\r\n      return NextResponse.json(\r\n        {\r\n          error: authResult.error || 'Autenticaci\xF3n requerida',\r\n          code: 'AUTH_ERROR'\r\n        },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    console.log('\u2705 Auth successful');\r\n    const { supabase, user } = authResult;\r\n\r\n    const body = await request.json();\r\n    console.log('\uD83D\uDCDD Request body:', JSON.stringify(body, null, 2));\r\n\r\n    // Validaci\xF3n b\xE1sica de campos requeridos\r\n    const requiredFields = ['name', 'price'];\r\n    for (const field of requiredFields) {\r\n      if (!body[field]) {\r\n        return NextResponse.json(\r\n          {\r\n            error: `Campo requerido: ${field}`,\r\n            code: 'MISSING_FIELD'\r\n          },\r\n          { status: 400 }\r\n        );\r\n      }\r\n    }\r\n\r\n    // Mapear datos del frontend al formato de base de datos\r\n    const productData = {\r\n      name: body.name,\r\n      description: body.description || '',\r\n      short_description: body.short_description || '',\r\n      price: parseFloat(body.price),\r\n      discounted_price: body.compare_price ? parseFloat(body.compare_price) : null,\r\n      cost_price: body.cost_price ? parseFloat(body.cost_price) : null,\r\n      stock: parseInt(body.stock) || 0,\r\n      low_stock_threshold: parseInt(body.low_stock_threshold) || 5,\r\n      category_id: body.category_id ? parseInt(body.category_id) : null,\r\n      status: body.status || 'draft',\r\n      is_active: body.status === 'active',\r\n      track_inventory: body.track_inventory !== false,\r\n      allow_backorders: body.allow_backorders === true,\r\n      // Generar slug autom\xE1tico\r\n      slug: body.name\r\n        .toLowerCase()\r\n        .replace(/[^a-z0-9\\s-]/g, '')\r\n        .replace(/\\s+/g, '-')\r\n        .replace(/-+/g, '-')\r\n        .trim() + '-' + Date.now(),\r\n      created_at: new Date().toISOString(),\r\n      updated_at: new Date().toISOString()\r\n    };\r\n\r\n    console.log('\uD83D\uDD04 Mapped product data:', JSON.stringify(productData, null, 2));\r\n\r\n    // Verificar categor\xEDa si se proporciona\r\n    if (productData.category_id) {\r\n      const { data: category, error: categoryError } = await supabase\r\n        .from('categories')\r\n        .select('id')\r\n        .eq('id', productData.category_id)\r\n        .single();\r\n\r\n      if (categoryError || !category) {\r\n        console.log('\u274C Category not found:', categoryError);\r\n        return NextResponse.json(\r\n          {\r\n            error: 'Categor\xEDa no encontrada',\r\n            code: 'CATEGORY_NOT_FOUND'\r\n          },\r\n          { status: 400 }\r\n        );\r\n      }\r\n    }\r\n\r\n    // Crear producto\r\n    const { data: product, error } = await supabase\r\n      .from('products')\r\n      .insert(productData)\r\n      .select(`\r\n        id,\r\n        name,\r\n        description,\r\n        price,\r\n        stock,\r\n        category_id,\r\n        status,\r\n        created_at,\r\n        updated_at\r\n      `)\r\n      .single();\r\n\r\n    if (error) {\r\n      console.error('\u274C Error creating product:', error);\r\n      return NextResponse.json(\r\n        {\r\n          error: 'Error al crear producto',\r\n          code: 'DATABASE_ERROR',\r\n          details: error.message\r\n        },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    console.log('\u2705 Product created successfully:', product);\r\n\r\n    return NextResponse.json(\r\n      {\r\n        success: true,\r\n        message: 'Producto creado exitosamente',\r\n        data: product\r\n      },\r\n      { status: 201 }\r\n    );\r\n\r\n  } catch (error) {\r\n    console.error('\u274C Error in POST /api/admin/products (SIMPLE):', error);\r\n\r\n    return NextResponse.json(\r\n      {\r\n        error: 'Error interno del servidor',\r\n        code: 'INTERNAL_ERROR',\r\n        details: error instanceof Error ? error.message : 'Unknown error'\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n};\r\n\r\n// USAR VERSI\xD3N SIMPLIFICADA TEMPORALMENTE PARA DEBUG\r\nexport const GET = async (request: NextRequest) => {\r\n  try {\r\n    console.log('\uD83D\uDD0D GET /api/admin/products - Starting request');\r\n    \r\n    // Simple auth check\r\n    const authResult = await checkAdminPermissionsForProducts('read');\r\n    if (!authResult.allowed) {\r\n      console.log('\u274C Auth failed:', authResult.error);\r\n      return NextResponse.json(\r\n        { error: authResult.error || 'Acceso denegado' },\r\n        { status: 403 }\r\n      );\r\n    }\r\n\r\n    // Get supabase instance\r\n    const { supabaseAdmin } = await import('@/lib/supabase');\r\n    const supabase = supabaseAdmin;\r\n    console.log('\u2705 Auth successful, querying products...');\r\n\r\n    // Simple query without complex filters\r\n    const { data: products, error, count } = await supabase\r\n      .from('products')\r\n      .select(`\r\n        *,\r\n        categories!inner(name)\r\n      `, { count: 'exact' })\r\n      .eq('is_active', true)\r\n      .order('created_at', { ascending: false })\r\n      .limit(20);\r\n\r\n    if (error) {\r\n      console.error('\u274C Database error:', error);\r\n      return NextResponse.json(\r\n        { error: 'Error al obtener productos', details: error.message },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    console.log('\u2705 Products fetched:', products?.length || 0, 'total:', count);\r\n\r\n    // Transform data\r\n    const transformedProducts = products?.map(product => ({\r\n      ...product,\r\n      category_name: product.categories?.name || null,\r\n      categories: undefined,\r\n    })) || [];\r\n\r\n    return NextResponse.json({\r\n      data: transformedProducts,\r\n      total: count || 0,\r\n      page: 1,\r\n      pageSize: 20,\r\n      totalPages: Math.ceil((count || 0) / 20),\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('\u274C Error in GET /api/admin/products:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor', details: error instanceof Error ? error.message : 'Unknown error' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n};\r\n\r\n// USAR VERSI\xD3N SIMPLIFICADA TEMPORALMENTE\r\nexport const POST = postHandlerSimple;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["GET", "POST", "runtime", "checkAdminPermissionsForProducts", "action", "request", "checkCRUDPermissions", "getHandler", "authResult", "requireAdminAuth", "success", "NextResponse", "json", "error", "code", "enterprise", "status", "context", "legacyAuthResult", "supabase", "user", "searchParams", "URL", "url", "statusParam", "get", "rawParams", "page", "limit", "search", "undefined", "category_id", "is_active", "price_min", "price_max", "sort_by", "sort_order", "filters", "ProductFiltersSchema", "parse", "query", "from", "select", "count", "ilike", "eq", "gte", "lte", "order", "ascending", "to", "range", "data", "products", "console", "transformedProducts", "map", "product", "category_name", "categories", "name", "total", "totalPages", "Math", "ceil", "pageSize", "sort", "by", "z", "ZodError", "details", "errors", "postHandler", "productData", "validatedBody", "category", "categoryError", "single", "insert", "created_at", "Date", "toISOString", "updated_at", "transformedProduct", "logAdminAction", "id", "message", "timestamp", "postHandlerSimple", "log", "allowed", "body", "JSON", "stringify", "requiredFields", "field", "description", "short_description", "price", "parseFloat", "discounted_price", "compare_price", "cost_price", "stock", "parseInt", "low_stock_threshold", "track_inventory", "allow_backorders", "slug", "toLowerCase", "replace", "trim", "now", "Error", "supabaseAdmin", "length"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0c467ba87f487fec44f71977e0fb79e53f937731"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_qjbyb75va = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_qjbyb75va();
cov_qjbyb75va().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_qjbyb75va().f[0]++;
  cov_qjbyb75va().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_qjbyb75va().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_qjbyb75va().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_qjbyb75va().f[1]++;
    cov_qjbyb75va().s[4]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_qjbyb75va().f[2]++;
    cov_qjbyb75va().s[5]++;
    return POST;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_qjbyb75va().f[3]++;
    cov_qjbyb75va().s[6]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_qjbyb75va().s[7]++, require("next/server"));
const _zod =
/* istanbul ignore next */
(cov_qjbyb75va().s[8]++, require("zod"));
const _adminauth =
/* istanbul ignore next */
(cov_qjbyb75va().s[9]++, require("../../../../lib/auth/admin-auth"));
const _enterpriseauthutils =
/* istanbul ignore next */
(cov_qjbyb75va().s[10]++, require("../../../../lib/auth/enterprise-auth-utils"));
const _adminschemas =
/* istanbul ignore next */
(cov_qjbyb75va().s[11]++, require("../../../../lib/validation/admin-schemas"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_qjbyb75va().f[4]++;
  cov_qjbyb75va().s[12]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_qjbyb75va().b[0][0]++;
    cov_qjbyb75va().s[13]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_qjbyb75va().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_qjbyb75va().s[14]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_qjbyb75va().s[15]++, new WeakMap());
  /* istanbul ignore next */
  cov_qjbyb75va().s[16]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_qjbyb75va().f[5]++;
    cov_qjbyb75va().s[17]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_qjbyb75va().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_qjbyb75va().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_qjbyb75va().f[6]++;
  cov_qjbyb75va().s[18]++;
  if (
  /* istanbul ignore next */
  (cov_qjbyb75va().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_qjbyb75va().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_qjbyb75va().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_qjbyb75va().b[2][0]++;
    cov_qjbyb75va().s[19]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_qjbyb75va().b[2][1]++;
  }
  cov_qjbyb75va().s[20]++;
  if (
  /* istanbul ignore next */
  (cov_qjbyb75va().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_qjbyb75va().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_qjbyb75va().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_qjbyb75va().b[4][0]++;
    cov_qjbyb75va().s[21]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_qjbyb75va().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_qjbyb75va().s[22]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_qjbyb75va().s[23]++;
  if (
  /* istanbul ignore next */
  (cov_qjbyb75va().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_qjbyb75va().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_qjbyb75va().b[6][0]++;
    cov_qjbyb75va().s[24]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_qjbyb75va().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_qjbyb75va().s[25]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_qjbyb75va().s[26]++,
  /* istanbul ignore next */
  (cov_qjbyb75va().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_qjbyb75va().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_qjbyb75va().s[27]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_qjbyb75va().s[28]++;
    if (
    /* istanbul ignore next */
    (cov_qjbyb75va().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_qjbyb75va().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_qjbyb75va().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_qjbyb75va().s[29]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_qjbyb75va().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_qjbyb75va().b[11][1]++, null));
      /* istanbul ignore next */
      cov_qjbyb75va().s[30]++;
      if (
      /* istanbul ignore next */
      (cov_qjbyb75va().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_qjbyb75va().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_qjbyb75va().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_qjbyb75va().b[12][0]++;
        cov_qjbyb75va().s[31]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_qjbyb75va().b[12][1]++;
        cov_qjbyb75va().s[32]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_qjbyb75va().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_qjbyb75va().s[33]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_qjbyb75va().s[34]++;
  if (cache) {
    /* istanbul ignore next */
    cov_qjbyb75va().b[14][0]++;
    cov_qjbyb75va().s[35]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_qjbyb75va().b[14][1]++;
  }
  cov_qjbyb75va().s[36]++;
  return newObj;
}
const runtime =
/* istanbul ignore next */
(cov_qjbyb75va().s[37]++, 'nodejs');
// Helper function to check admin permissions with proper role verification
async function checkAdminPermissionsForProducts(action, request) {
  /* istanbul ignore next */
  cov_qjbyb75va().f[7]++;
  cov_qjbyb75va().s[38]++;
  return await (0, _adminauth.checkCRUDPermissions)(action, 'products');
}
/**
 * GET /api/admin/products
 * Obtener lista paginada de productos con filtros (ENTERPRISE)
 */
/* istanbul ignore next */
cov_qjbyb75va().s[39]++;
const getHandler = async request => {
  /* istanbul ignore next */
  cov_qjbyb75va().f[8]++;
  cov_qjbyb75va().s[40]++;
  try {
    // ENTERPRISE: Verificar autenticaciÃ³n con contexto completo
    const authResult =
    /* istanbul ignore next */
    (cov_qjbyb75va().s[41]++, await (0, _enterpriseauthutils.requireAdminAuth)(request, ['admin_access', 'products_read']));
    /* istanbul ignore next */
    cov_qjbyb75va().s[42]++;
    if (!authResult.success) {
      /* istanbul ignore next */
      cov_qjbyb75va().b[15][0]++;
      cov_qjbyb75va().s[43]++;
      return _server.NextResponse.json({
        error: authResult.error,
        code: authResult.code,
        enterprise: true
      }, {
        status:
        /* istanbul ignore next */
        (cov_qjbyb75va().b[16][0]++, authResult.status) ||
        /* istanbul ignore next */
        (cov_qjbyb75va().b[16][1]++, 401)
      });
    } else
    /* istanbul ignore next */
    {
      cov_qjbyb75va().b[15][1]++;
    }
    const context =
    /* istanbul ignore next */
    (cov_qjbyb75va().s[44]++, authResult.context);
    // LEGACY: Mantener compatibilidad con sistema anterior
    const legacyAuthResult =
    /* istanbul ignore next */
    (cov_qjbyb75va().s[45]++, await checkAdminPermissionsForProducts('read', request));
    /* istanbul ignore next */
    cov_qjbyb75va().s[46]++;
    if (!legacyAuthResult.success) {
      /* istanbul ignore next */
      cov_qjbyb75va().b[17][0]++;
      cov_qjbyb75va().s[47]++;
      return _server.NextResponse.json({
        error: legacyAuthResult.error
      }, {
        status: legacyAuthResult.status
      });
    } else
    /* istanbul ignore next */
    {
      cov_qjbyb75va().b[17][1]++;
    }
    const {
      supabase,
      user
    } =
    /* istanbul ignore next */
    (cov_qjbyb75va().s[48]++, authResult);
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_qjbyb75va().s[49]++, new URL(request.url));
    // Parse query parameters - let schema handle type conversion
    const statusParam =
    /* istanbul ignore next */
    (cov_qjbyb75va().s[50]++, searchParams.get('status'));
    const rawParams =
    /* istanbul ignore next */
    (cov_qjbyb75va().s[51]++, {
      page:
      /* istanbul ignore next */
      (cov_qjbyb75va().b[18][0]++, searchParams.get('page')) ||
      /* istanbul ignore next */
      (cov_qjbyb75va().b[18][1]++, '1'),
      limit:
      /* istanbul ignore next */
      (cov_qjbyb75va().b[19][0]++, searchParams.get('limit')) ||
      /* istanbul ignore next */
      (cov_qjbyb75va().b[19][1]++, searchParams.get('pageSize')) ||
      /* istanbul ignore next */
      (cov_qjbyb75va().b[19][2]++, '20'),
      search:
      /* istanbul ignore next */
      (cov_qjbyb75va().b[20][0]++, searchParams.get('search')) ||
      /* istanbul ignore next */
      (cov_qjbyb75va().b[20][1]++, undefined),
      category_id:
      /* istanbul ignore next */
      (cov_qjbyb75va().b[21][0]++, searchParams.get('category')) ||
      /* istanbul ignore next */
      (cov_qjbyb75va().b[21][1]++, undefined),
      is_active: statusParam ?
      /* istanbul ignore next */
      (cov_qjbyb75va().b[22][0]++, statusParam === 'active') :
      /* istanbul ignore next */
      (cov_qjbyb75va().b[22][1]++, undefined),
      price_min:
      /* istanbul ignore next */
      (cov_qjbyb75va().b[23][0]++, searchParams.get('priceMin')) ||
      /* istanbul ignore next */
      (cov_qjbyb75va().b[23][1]++, undefined),
      price_max:
      /* istanbul ignore next */
      (cov_qjbyb75va().b[24][0]++, searchParams.get('priceMax')) ||
      /* istanbul ignore next */
      (cov_qjbyb75va().b[24][1]++, undefined),
      sort_by:
      /* istanbul ignore next */
      (cov_qjbyb75va().b[25][0]++, searchParams.get('sortBy')) ||
      /* istanbul ignore next */
      (cov_qjbyb75va().b[25][1]++, 'created_at'),
      sort_order:
      /* istanbul ignore next */
      (cov_qjbyb75va().b[26][0]++, searchParams.get('sortOrder')) ||
      /* istanbul ignore next */
      (cov_qjbyb75va().b[26][1]++, 'desc')
    });
    const filters =
    /* istanbul ignore next */
    (cov_qjbyb75va().s[52]++, _adminschemas.ProductFiltersSchema.parse(rawParams));
    // Build query
    let query =
    /* istanbul ignore next */
    (cov_qjbyb75va().s[53]++, supabase.from('products').select(`
        id,
        name,
        description,
        price,
        stock,
        category_id,
        images,
        created_at,
        updated_at,
        categories (
          id,
          name
        )
      `, {
      count: 'exact'
    }));
    // Apply filters
    /* istanbul ignore next */
    cov_qjbyb75va().s[54]++;
    if (filters.search) {
      /* istanbul ignore next */
      cov_qjbyb75va().b[27][0]++;
      cov_qjbyb75va().s[55]++;
      query = query.ilike('name', `%${filters.search}%`);
    } else
    /* istanbul ignore next */
    {
      cov_qjbyb75va().b[27][1]++;
    }
    cov_qjbyb75va().s[56]++;
    if (filters.category_id) {
      /* istanbul ignore next */
      cov_qjbyb75va().b[28][0]++;
      cov_qjbyb75va().s[57]++;
      query = query.eq('category_id', filters.category_id);
    } else
    /* istanbul ignore next */
    {
      cov_qjbyb75va().b[28][1]++;
    }
    cov_qjbyb75va().s[58]++;
    if (filters.is_active !== undefined) {
      /* istanbul ignore next */
      cov_qjbyb75va().b[29][0]++;
      cov_qjbyb75va().s[59]++;
      query = query.eq('is_active', filters.is_active);
    } else
    /* istanbul ignore next */
    {
      cov_qjbyb75va().b[29][1]++;
    }
    cov_qjbyb75va().s[60]++;
    if (filters.price_min !== undefined) {
      /* istanbul ignore next */
      cov_qjbyb75va().b[30][0]++;
      cov_qjbyb75va().s[61]++;
      query = query.gte('price', filters.price_min);
    } else
    /* istanbul ignore next */
    {
      cov_qjbyb75va().b[30][1]++;
    }
    cov_qjbyb75va().s[62]++;
    if (filters.price_max !== undefined) {
      /* istanbul ignore next */
      cov_qjbyb75va().b[31][0]++;
      cov_qjbyb75va().s[63]++;
      query = query.lte('price', filters.price_max);
    } else
    /* istanbul ignore next */
    {
      cov_qjbyb75va().b[31][1]++;
    }
    // Apply sorting
    cov_qjbyb75va().s[64]++;
    query = query.order(filters.sort_by, {
      ascending: filters.sort_order === 'asc'
    });
    // Apply pagination
    const from =
    /* istanbul ignore next */
    (cov_qjbyb75va().s[65]++, (filters.page - 1) * filters.limit);
    const to =
    /* istanbul ignore next */
    (cov_qjbyb75va().s[66]++, from + filters.limit - 1);
    /* istanbul ignore next */
    cov_qjbyb75va().s[67]++;
    query = query.range(from, to);
    const {
      data: products,
      error,
      count
    } =
    /* istanbul ignore next */
    (cov_qjbyb75va().s[68]++, await query);
    /* istanbul ignore next */
    cov_qjbyb75va().s[69]++;
    if (error) {
      /* istanbul ignore next */
      cov_qjbyb75va().b[32][0]++;
      cov_qjbyb75va().s[70]++;
      console.error('Error fetching products:', error);
      /* istanbul ignore next */
      cov_qjbyb75va().s[71]++;
      return _server.NextResponse.json({
        error: 'Error al obtener productos'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_qjbyb75va().b[32][1]++;
    }
    // Transform data to include category name
    const transformedProducts =
    /* istanbul ignore next */
    (cov_qjbyb75va().s[72]++,
    /* istanbul ignore next */
    (cov_qjbyb75va().b[33][0]++, products?.map(product => {
      /* istanbul ignore next */
      cov_qjbyb75va().f[9]++;
      cov_qjbyb75va().s[73]++;
      return {
        ...product,
        category_name:
        /* istanbul ignore next */
        (cov_qjbyb75va().b[34][0]++, product.categories?.name) ||
        /* istanbul ignore next */
        (cov_qjbyb75va().b[34][1]++, null),
        categories: undefined
      };
    })) ||
    /* istanbul ignore next */
    (cov_qjbyb75va().b[33][1]++, []));
    const total =
    /* istanbul ignore next */
    (cov_qjbyb75va().s[74]++,
    /* istanbul ignore next */
    (cov_qjbyb75va().b[35][0]++, count) ||
    /* istanbul ignore next */
    (cov_qjbyb75va().b[35][1]++, 0));
    const totalPages =
    /* istanbul ignore next */
    (cov_qjbyb75va().s[75]++, Math.ceil(total / filters.limit));
    /* istanbul ignore next */
    cov_qjbyb75va().s[76]++;
    return _server.NextResponse.json({
      data: transformedProducts,
      total,
      page: filters.page,
      pageSize: filters.limit,
      totalPages,
      filters,
      sort: {
        by: filters.sort_by,
        order: filters.sort_order
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_qjbyb75va().s[77]++;
    console.error('Error in GET /api/admin/products:', error);
    /* istanbul ignore next */
    cov_qjbyb75va().s[78]++;
    if (error instanceof _zod.z.ZodError) {
      /* istanbul ignore next */
      cov_qjbyb75va().b[36][0]++;
      cov_qjbyb75va().s[79]++;
      return _server.NextResponse.json({
        error: 'ParÃ¡metros invÃ¡lidos',
        details: error.errors
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_qjbyb75va().b[36][1]++;
    }
    cov_qjbyb75va().s[80]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
};
/**
 * POST /api/admin/products
 * Crear nuevo producto (ENTERPRISE)
 */
/* istanbul ignore next */
cov_qjbyb75va().s[81]++;
const postHandler = async request => {
  /* istanbul ignore next */
  cov_qjbyb75va().f[10]++;
  cov_qjbyb75va().s[82]++;
  try {
    // ENTERPRISE: Verificar autenticaciÃ³n con contexto completo
    const authResult =
    /* istanbul ignore next */
    (cov_qjbyb75va().s[83]++, await (0, _enterpriseauthutils.requireAdminAuth)(request, ['admin_access', 'products_create']));
    /* istanbul ignore next */
    cov_qjbyb75va().s[84]++;
    if (!authResult.success) {
      /* istanbul ignore next */
      cov_qjbyb75va().b[37][0]++;
      cov_qjbyb75va().s[85]++;
      return _server.NextResponse.json({
        error: authResult.error,
        code: authResult.code,
        enterprise: true
      }, {
        status:
        /* istanbul ignore next */
        (cov_qjbyb75va().b[38][0]++, authResult.status) ||
        /* istanbul ignore next */
        (cov_qjbyb75va().b[38][1]++, 401)
      });
    } else
    /* istanbul ignore next */
    {
      cov_qjbyb75va().b[37][1]++;
    }
    const context =
    /* istanbul ignore next */
    (cov_qjbyb75va().s[86]++, authResult.context);
    // LEGACY: Mantener compatibilidad con sistema anterior
    const legacyAuthResult =
    /* istanbul ignore next */
    (cov_qjbyb75va().s[87]++, await checkAdminPermissionsForProducts('create'));
    /* istanbul ignore next */
    cov_qjbyb75va().s[88]++;
    if (!legacyAuthResult.success) {
      /* istanbul ignore next */
      cov_qjbyb75va().b[39][0]++;
      cov_qjbyb75va().s[89]++;
      return _server.NextResponse.json({
        error: legacyAuthResult.error
      }, {
        status: legacyAuthResult.status
      });
    } else
    /* istanbul ignore next */
    {
      cov_qjbyb75va().b[39][1]++;
    }
    const {
      supabase,
      user
    } =
    /* istanbul ignore next */
    (cov_qjbyb75va().s[90]++, legacyAuthResult);
    // ENTERPRISE: Usar datos ya validados por middleware
    const productData =
    /* istanbul ignore next */
    (cov_qjbyb75va().s[91]++, request.validatedBody);
    /* istanbul ignore next */
    cov_qjbyb75va().s[92]++;
    if (!productData) {
      /* istanbul ignore next */
      cov_qjbyb75va().b[40][0]++;
      cov_qjbyb75va().s[93]++;
      return _server.NextResponse.json({
        error: 'Datos de validaciÃ³n no encontrados',
        code: 'VALIDATION_DATA_MISSING',
        enterprise: true
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_qjbyb75va().b[40][1]++;
    }
    // Verify category exists
    const {
      data: category,
      error: categoryError
    } =
    /* istanbul ignore next */
    (cov_qjbyb75va().s[94]++, await supabase.from('categories').select('id').eq('id', productData.category_id).single());
    /* istanbul ignore next */
    cov_qjbyb75va().s[95]++;
    if (
    /* istanbul ignore next */
    (cov_qjbyb75va().b[42][0]++, categoryError) ||
    /* istanbul ignore next */
    (cov_qjbyb75va().b[42][1]++, !category)) {
      /* istanbul ignore next */
      cov_qjbyb75va().b[41][0]++;
      cov_qjbyb75va().s[96]++;
      return _server.NextResponse.json({
        error: 'CategorÃ­a no encontrada'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_qjbyb75va().b[41][1]++;
    }
    // Create product
    const {
      data: product,
      error
    } =
    /* istanbul ignore next */
    (cov_qjbyb75va().s[97]++, await supabase.from('products').insert({
      ...productData,
      created_at: new Date().toISOString(),
      updated_at: new Date().toISOString()
    }).select(`
        id,
        name,
        description,
        price,
        stock,
        category_id,
        images,
        created_at,
        updated_at,
        categories (
          id,
          name
        )
      `).single());
    /* istanbul ignore next */
    cov_qjbyb75va().s[98]++;
    if (error) {
      /* istanbul ignore next */
      cov_qjbyb75va().b[43][0]++;
      cov_qjbyb75va().s[99]++;
      console.error('Error creating product:', error);
      /* istanbul ignore next */
      cov_qjbyb75va().s[100]++;
      return _server.NextResponse.json({
        error: 'Error al crear producto'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_qjbyb75va().b[43][1]++;
    }
    // Transform response
    const transformedProduct =
    /* istanbul ignore next */
    (cov_qjbyb75va().s[101]++, {
      ...product,
      category_name:
      /* istanbul ignore next */
      (cov_qjbyb75va().b[44][0]++, product.categories?.name) ||
      /* istanbul ignore next */
      (cov_qjbyb75va().b[44][1]++, null),
      categories: undefined
    });
    // Log admin action
    /* istanbul ignore next */
    cov_qjbyb75va().s[102]++;
    await (0, _adminauth.logAdminAction)(user.id, 'CREATE', 'product', product.id, null, transformedProduct);
    /* istanbul ignore next */
    cov_qjbyb75va().s[103]++;
    return _server.NextResponse.json({
      message: 'Producto creado exitosamente',
      data: transformedProduct
    }, {
      status: 201
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_qjbyb75va().s[104]++;
    console.error('Error in POST /api/admin/products:', error);
    /* istanbul ignore next */
    cov_qjbyb75va().s[105]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor',
      code: 'INTERNAL_ERROR',
      enterprise: true,
      timestamp: new Date().toISOString()
    }, {
      status: 500
    });
  }
};
/**
 * POST SIMPLIFICADO /api/admin/products
 * Crear nuevo producto SIN validaciones enterprise complejas
 */
/* istanbul ignore next */
cov_qjbyb75va().s[106]++;
const postHandlerSimple = async request => {
  /* istanbul ignore next */
  cov_qjbyb75va().f[11]++;
  cov_qjbyb75va().s[107]++;
  try {
    /* istanbul ignore next */
    cov_qjbyb75va().s[108]++;
    console.log('ğ§ Products API: Creating product (SIMPLE MODE)...');
    // Verificar autenticaciÃ³n bÃ¡sica
    const authResult =
    /* istanbul ignore next */
    (cov_qjbyb75va().s[109]++, await (0, _adminauth.checkCRUDPermissions)('create', 'products'));
    /* istanbul ignore next */
    cov_qjbyb75va().s[110]++;
    if (!authResult.allowed) {
      /* istanbul ignore next */
      cov_qjbyb75va().b[45][0]++;
      cov_qjbyb75va().s[111]++;
      console.log('â Auth failed:', authResult.error);
      /* istanbul ignore next */
      cov_qjbyb75va().s[112]++;
      return _server.NextResponse.json({
        error:
        /* istanbul ignore next */
        (cov_qjbyb75va().b[46][0]++, authResult.error) ||
        /* istanbul ignore next */
        (cov_qjbyb75va().b[46][1]++, 'AutenticaciÃ³n requerida'),
        code: 'AUTH_ERROR'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_qjbyb75va().b[45][1]++;
    }
    cov_qjbyb75va().s[113]++;
    console.log('â Auth successful');
    const {
      supabase,
      user
    } =
    /* istanbul ignore next */
    (cov_qjbyb75va().s[114]++, authResult);
    const body =
    /* istanbul ignore next */
    (cov_qjbyb75va().s[115]++, await request.json());
    /* istanbul ignore next */
    cov_qjbyb75va().s[116]++;
    console.log('ğ Request body:', JSON.stringify(body, null, 2));
    // ValidaciÃ³n bÃ¡sica de campos requeridos
    const requiredFields =
    /* istanbul ignore next */
    (cov_qjbyb75va().s[117]++, ['name', 'price']);
    /* istanbul ignore next */
    cov_qjbyb75va().s[118]++;
    for (const field of requiredFields) {
      /* istanbul ignore next */
      cov_qjbyb75va().s[119]++;
      if (!body[field]) {
        /* istanbul ignore next */
        cov_qjbyb75va().b[47][0]++;
        cov_qjbyb75va().s[120]++;
        return _server.NextResponse.json({
          error: `Campo requerido: ${field}`,
          code: 'MISSING_FIELD'
        }, {
          status: 400
        });
      } else
      /* istanbul ignore next */
      {
        cov_qjbyb75va().b[47][1]++;
      }
    }
    // Mapear datos del frontend al formato de base de datos
    const productData =
    /* istanbul ignore next */
    (cov_qjbyb75va().s[121]++, {
      name: body.name,
      description:
      /* istanbul ignore next */
      (cov_qjbyb75va().b[48][0]++, body.description) ||
      /* istanbul ignore next */
      (cov_qjbyb75va().b[48][1]++, ''),
      short_description:
      /* istanbul ignore next */
      (cov_qjbyb75va().b[49][0]++, body.short_description) ||
      /* istanbul ignore next */
      (cov_qjbyb75va().b[49][1]++, ''),
      price: parseFloat(body.price),
      discounted_price: body.compare_price ?
      /* istanbul ignore next */
      (cov_qjbyb75va().b[50][0]++, parseFloat(body.compare_price)) :
      /* istanbul ignore next */
      (cov_qjbyb75va().b[50][1]++, null),
      cost_price: body.cost_price ?
      /* istanbul ignore next */
      (cov_qjbyb75va().b[51][0]++, parseFloat(body.cost_price)) :
      /* istanbul ignore next */
      (cov_qjbyb75va().b[51][1]++, null),
      stock:
      /* istanbul ignore next */
      (cov_qjbyb75va().b[52][0]++, parseInt(body.stock)) ||
      /* istanbul ignore next */
      (cov_qjbyb75va().b[52][1]++, 0),
      low_stock_threshold:
      /* istanbul ignore next */
      (cov_qjbyb75va().b[53][0]++, parseInt(body.low_stock_threshold)) ||
      /* istanbul ignore next */
      (cov_qjbyb75va().b[53][1]++, 5),
      category_id: body.category_id ?
      /* istanbul ignore next */
      (cov_qjbyb75va().b[54][0]++, parseInt(body.category_id)) :
      /* istanbul ignore next */
      (cov_qjbyb75va().b[54][1]++, null),
      status:
      /* istanbul ignore next */
      (cov_qjbyb75va().b[55][0]++, body.status) ||
      /* istanbul ignore next */
      (cov_qjbyb75va().b[55][1]++, 'draft'),
      is_active: body.status === 'active',
      track_inventory: body.track_inventory !== false,
      allow_backorders: body.allow_backorders === true,
      // Generar slug automÃ¡tico
      slug: body.name.toLowerCase().replace(/[^a-z0-9\s-]/g, '').replace(/\s+/g, '-').replace(/-+/g, '-').trim() + '-' + Date.now(),
      created_at: new Date().toISOString(),
      updated_at: new Date().toISOString()
    });
    /* istanbul ignore next */
    cov_qjbyb75va().s[122]++;
    console.log('ğ Mapped product data:', JSON.stringify(productData, null, 2));
    // Verificar categorÃ­a si se proporciona
    /* istanbul ignore next */
    cov_qjbyb75va().s[123]++;
    if (productData.category_id) {
      /* istanbul ignore next */
      cov_qjbyb75va().b[56][0]++;
      const {
        data: category,
        error: categoryError
      } =
      /* istanbul ignore next */
      (cov_qjbyb75va().s[124]++, await supabase.from('categories').select('id').eq('id', productData.category_id).single());
      /* istanbul ignore next */
      cov_qjbyb75va().s[125]++;
      if (
      /* istanbul ignore next */
      (cov_qjbyb75va().b[58][0]++, categoryError) ||
      /* istanbul ignore next */
      (cov_qjbyb75va().b[58][1]++, !category)) {
        /* istanbul ignore next */
        cov_qjbyb75va().b[57][0]++;
        cov_qjbyb75va().s[126]++;
        console.log('â Category not found:', categoryError);
        /* istanbul ignore next */
        cov_qjbyb75va().s[127]++;
        return _server.NextResponse.json({
          error: 'CategorÃ­a no encontrada',
          code: 'CATEGORY_NOT_FOUND'
        }, {
          status: 400
        });
      } else
      /* istanbul ignore next */
      {
        cov_qjbyb75va().b[57][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_qjbyb75va().b[56][1]++;
    }
    // Crear producto
    const {
      data: product,
      error
    } =
    /* istanbul ignore next */
    (cov_qjbyb75va().s[128]++, await supabase.from('products').insert(productData).select(`
        id,
        name,
        description,
        price,
        stock,
        category_id,
        status,
        created_at,
        updated_at
      `).single());
    /* istanbul ignore next */
    cov_qjbyb75va().s[129]++;
    if (error) {
      /* istanbul ignore next */
      cov_qjbyb75va().b[59][0]++;
      cov_qjbyb75va().s[130]++;
      console.error('â Error creating product:', error);
      /* istanbul ignore next */
      cov_qjbyb75va().s[131]++;
      return _server.NextResponse.json({
        error: 'Error al crear producto',
        code: 'DATABASE_ERROR',
        details: error.message
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_qjbyb75va().b[59][1]++;
    }
    cov_qjbyb75va().s[132]++;
    console.log('â Product created successfully:', product);
    /* istanbul ignore next */
    cov_qjbyb75va().s[133]++;
    return _server.NextResponse.json({
      success: true,
      message: 'Producto creado exitosamente',
      data: product
    }, {
      status: 201
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_qjbyb75va().s[134]++;
    console.error('â Error in POST /api/admin/products (SIMPLE):', error);
    /* istanbul ignore next */
    cov_qjbyb75va().s[135]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor',
      code: 'INTERNAL_ERROR',
      details: error instanceof Error ?
      /* istanbul ignore next */
      (cov_qjbyb75va().b[60][0]++, error.message) :
      /* istanbul ignore next */
      (cov_qjbyb75va().b[60][1]++, 'Unknown error')
    }, {
      status: 500
    });
  }
};
/* istanbul ignore next */
cov_qjbyb75va().s[136]++;
const GET = async request => {
  /* istanbul ignore next */
  cov_qjbyb75va().f[12]++;
  cov_qjbyb75va().s[137]++;
  try {
    /* istanbul ignore next */
    cov_qjbyb75va().s[138]++;
    console.log('ğ GET /api/admin/products - Starting request');
    // Simple auth check
    const authResult =
    /* istanbul ignore next */
    (cov_qjbyb75va().s[139]++, await checkAdminPermissionsForProducts('read'));
    /* istanbul ignore next */
    cov_qjbyb75va().s[140]++;
    if (!authResult.allowed) {
      /* istanbul ignore next */
      cov_qjbyb75va().b[61][0]++;
      cov_qjbyb75va().s[141]++;
      console.log('â Auth failed:', authResult.error);
      /* istanbul ignore next */
      cov_qjbyb75va().s[142]++;
      return _server.NextResponse.json({
        error:
        /* istanbul ignore next */
        (cov_qjbyb75va().b[62][0]++, authResult.error) ||
        /* istanbul ignore next */
        (cov_qjbyb75va().b[62][1]++, 'Acceso denegado')
      }, {
        status: 403
      });
    } else
    /* istanbul ignore next */
    {
      cov_qjbyb75va().b[61][1]++;
    }
    // Get supabase instance
    const {
      supabaseAdmin
    } =
    /* istanbul ignore next */
    (cov_qjbyb75va().s[143]++, await Promise.resolve().then(() => {
      /* istanbul ignore next */
      cov_qjbyb75va().f[13]++;
      cov_qjbyb75va().s[144]++;
      return /*#__PURE__*/_interop_require_wildcard(require("../../../../lib/supabase"));
    }));
    const supabase =
    /* istanbul ignore next */
    (cov_qjbyb75va().s[145]++, supabaseAdmin);
    /* istanbul ignore next */
    cov_qjbyb75va().s[146]++;
    console.log('â Auth successful, querying products...');
    // Simple query without complex filters
    const {
      data: products,
      error,
      count
    } =
    /* istanbul ignore next */
    (cov_qjbyb75va().s[147]++, await supabase.from('products').select(`
        *,
        categories!inner(name)
      `, {
      count: 'exact'
    }).eq('is_active', true).order('created_at', {
      ascending: false
    }).limit(20));
    /* istanbul ignore next */
    cov_qjbyb75va().s[148]++;
    if (error) {
      /* istanbul ignore next */
      cov_qjbyb75va().b[63][0]++;
      cov_qjbyb75va().s[149]++;
      console.error('â Database error:', error);
      /* istanbul ignore next */
      cov_qjbyb75va().s[150]++;
      return _server.NextResponse.json({
        error: 'Error al obtener productos',
        details: error.message
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_qjbyb75va().b[63][1]++;
    }
    cov_qjbyb75va().s[151]++;
    console.log('â Products fetched:',
    /* istanbul ignore next */
    (cov_qjbyb75va().b[64][0]++, products?.length) ||
    /* istanbul ignore next */
    (cov_qjbyb75va().b[64][1]++, 0), 'total:', count);
    // Transform data
    const transformedProducts =
    /* istanbul ignore next */
    (cov_qjbyb75va().s[152]++,
    /* istanbul ignore next */
    (cov_qjbyb75va().b[65][0]++, products?.map(product => {
      /* istanbul ignore next */
      cov_qjbyb75va().f[14]++;
      cov_qjbyb75va().s[153]++;
      return {
        ...product,
        category_name:
        /* istanbul ignore next */
        (cov_qjbyb75va().b[66][0]++, product.categories?.name) ||
        /* istanbul ignore next */
        (cov_qjbyb75va().b[66][1]++, null),
        categories: undefined
      };
    })) ||
    /* istanbul ignore next */
    (cov_qjbyb75va().b[65][1]++, []));
    /* istanbul ignore next */
    cov_qjbyb75va().s[154]++;
    return _server.NextResponse.json({
      data: transformedProducts,
      total:
      /* istanbul ignore next */
      (cov_qjbyb75va().b[67][0]++, count) ||
      /* istanbul ignore next */
      (cov_qjbyb75va().b[67][1]++, 0),
      page: 1,
      pageSize: 20,
      totalPages: Math.ceil((
      /* istanbul ignore next */
      (cov_qjbyb75va().b[68][0]++, count) ||
      /* istanbul ignore next */
      (cov_qjbyb75va().b[68][1]++, 0)) / 20)
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_qjbyb75va().s[155]++;
    console.error('â Error in GET /api/admin/products:', error);
    /* istanbul ignore next */
    cov_qjbyb75va().s[156]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor',
      details: error instanceof Error ?
      /* istanbul ignore next */
      (cov_qjbyb75va().b[69][0]++, error.message) :
      /* istanbul ignore next */
      (cov_qjbyb75va().b[69][1]++, 'Unknown error')
    }, {
      status: 500
    });
  }
};
const POST =
/* istanbul ignore next */
(cov_qjbyb75va().s[157]++, postHandlerSimple);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,