{"version":3,"names":["GoogleMapsLogistics","cov_101fy95wxx","f","s","default","_default","DEFAULT_CENTER","lat","lng","DEFAULT_ZOOM","CITY_COORDINATES","STATUS_CONFIG","pending","color","label","icon","_lucidereact","Clock","confirmed","Package","in_transit","Truck","delivered","CheckCircle","exception","AlertTriangle","shipments","onShipmentSelect","enableRouteOptimization","b","enableRealTimeTracking","height","routes","_useRouteOptimization","useRouteOptimization","selectedShipment","setSelectedShipment","_react","useState","mapCenter","setMapCenter","mapZoom","setMapZoom","searchTerm","setSearchTerm","statusFilter","setStatusFilter","activeTab","setActiveTab","selectedRouteId","setSelectedRouteId","showAllRoutes","setShowAllRoutes","showRoutes","setShowRoutes","mapRef","useRef","isMountedRef","useEffect","current","shipmentsWithCoordinates","useMemo","Array","isArray","map","shipment","index","destination","coordinates","city","baseCoords","Math","random","address","filteredShipments","filter","matchesSearch","tracking_number","toLowerCase","includes","matchesStatus","status","length","validShipments","avgLat","reduce","sum","avgLng","isNaN","handleMarkerClick","useCallback","handleInfoWindowClose","optimizeRoutes","zones","_reactgooglemaps","Map","forEach","zone","has","set","get","push","routeId","totalDistance","estimatedTime","id","name","total_distance","estimated_time","setOptimizedRoutes","error","console","getStatusConfig","apiKey","process","env","NEXT_PUBLIC_GOOGLE_MAPS_API_KEY","_jsxruntime","jsxs","_card","Card","className","style","jsx","CardHeader","CardTitle","MapPin","CardContent","Search","_input","Input","placeholder","value","onChange","e","target","_select","Select","onValueChange","SelectTrigger","SelectValue","SelectContent","SelectItem","_button","Button","variant","onClick","Navigation","_tabs","Tabs","TabsList","TabsTrigger","TabsContent","APIProvider","defaultCenter","defaultZoom","gestureHandling","disableDefaultUI","width","statusConfig","Marker","position","title","InfoWindow","onClose","_badge","Badge","courier","cost","estimated_delivery","Date","toLocaleDateString","_RouteOptimizationPanel","RouteOptimizationPanel","onRouteSelect","route","start_location","_RouteVisualization","RouteVisualization","Zap"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\admin\\logistics\\GoogleMapsLogistics.tsx"],"sourcesContent":["// =====================================================\r\n// COMPONENTE: GOOGLE MAPS LOGISTICS ENTERPRISE\r\n// Descripción: Integración completa de Google Maps para logística\r\n// Basado en: @vis.gl/react-google-maps + Real-time tracking\r\n// =====================================================\r\n\r\n'use client';\r\n\r\nimport React, { useState, useEffect, useMemo, useCallback, useRef } from 'react';\r\nimport { APIProvider, Map, AdvancedMarker, InfoWindow, Pin, useMap, Marker } from '@vis.gl/react-google-maps';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport {\r\n  MapPin,\r\n  Package,\r\n  Truck,\r\n  Clock,\r\n  CheckCircle,\r\n  AlertTriangle,\r\n  Search,\r\n  Navigation,\r\n  Zap,\r\n  Settings\r\n} from 'lucide-react';\r\nimport { RouteOptimizationPanel } from './RouteOptimizationPanel';\r\nimport { RouteVisualization } from './RouteVisualization';\r\nimport { useRouteOptimization } from '@/hooks/admin/useRouteOptimization';\r\n\r\n// =====================================================\r\n// INTERFACES Y TIPOS\r\n// =====================================================\r\n\r\ninterface Coordinates {\r\n  lat: number;\r\n  lng: number;\r\n}\r\n\r\ninterface ShipmentLocation {\r\n  id: string;\r\n  tracking_number: string;\r\n  status: 'pending' | 'confirmed' | 'in_transit' | 'delivered' | 'exception';\r\n  destination: {\r\n    address: string;\r\n    city: string;\r\n    coordinates?: Coordinates;\r\n  };\r\n  courier: string;\r\n  estimated_delivery?: string;\r\n  cost: number;\r\n  created_at: string;\r\n  priority?: 'low' | 'medium' | 'high' | 'urgent';\r\n  route_id?: string;\r\n}\r\n\r\ninterface RouteOptimization {\r\n  id: string;\r\n  name: string;\r\n  shipments: ShipmentLocation[];\r\n  total_distance: number;\r\n  estimated_time: number;\r\n  driver?: string;\r\n  vehicle?: string;\r\n  status: 'planned' | 'active' | 'completed';\r\n}\r\n\r\ninterface GoogleMapsLogisticsProps {\r\n  shipments: ShipmentLocation[];\r\n  onShipmentSelect?: (shipment: ShipmentLocation) => void;\r\n  enableRouteOptimization?: boolean;\r\n  enableRealTimeTracking?: boolean;\r\n  height?: string;\r\n}\r\n\r\n// =====================================================\r\n// CONFIGURACIÓN Y CONSTANTES\r\n// =====================================================\r\n\r\nconst DEFAULT_CENTER: Coordinates = { lat: -34.6037, lng: -58.3816 }; // Buenos Aires\r\nconst DEFAULT_ZOOM = 11;\r\n\r\nconst CITY_COORDINATES = {\r\n  'Buenos Aires': { lat: -34.6037, lng: -58.3816 },\r\n  'Córdoba': { lat: -31.4201, lng: -64.1888 },\r\n  'Rosario': { lat: -32.9442, lng: -60.6505 },\r\n  'Mendoza': { lat: -32.8895, lng: -68.8458 },\r\n  'La Plata': { lat: -34.9215, lng: -57.9545 },\r\n  'Alta Gracia': { lat: -31.6539, lng: -64.4281 },\r\n  'Mar del Plata': { lat: -38.0055, lng: -57.5426 },\r\n  'Salta': { lat: -24.7821, lng: -65.4232 },\r\n  'San Miguel de Tucumán': { lat: -26.8083, lng: -65.2176 },\r\n  'Santa Fe': { lat: -31.6333, lng: -60.7000 }\r\n};\r\n\r\nconst STATUS_CONFIG = {\r\n  pending: { color: '#f59e0b', label: 'Pendiente', icon: Clock },\r\n  confirmed: { color: '#3b82f6', label: 'Confirmado', icon: Package },\r\n  in_transit: { color: '#8b5cf6', label: 'En Tránsito', icon: Truck },\r\n  delivered: { color: '#10b981', label: 'Entregado', icon: CheckCircle },\r\n  exception: { color: '#ef4444', label: 'Excepción', icon: AlertTriangle }\r\n};\r\n\r\n// =====================================================\r\n// COMPONENTE PRINCIPAL\r\n// =====================================================\r\n\r\nexport function GoogleMapsLogistics({ \r\n  shipments, \r\n  onShipmentSelect,\r\n  enableRouteOptimization = true,\r\n  enableRealTimeTracking = true,\r\n  height = '600px'\r\n}: GoogleMapsLogisticsProps) {\r\n  // Hook de optimización de rutas\r\n  const { routes } = useRouteOptimization();\r\n\r\n  // Estados\r\n  const [selectedShipment, setSelectedShipment] = useState<ShipmentLocation | null>(null);\r\n  const [mapCenter, setMapCenter] = useState(DEFAULT_CENTER);\r\n  const [mapZoom, setMapZoom] = useState(DEFAULT_ZOOM);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [statusFilter, setStatusFilter] = useState<string>('all');\r\n  const [activeTab, setActiveTab] = useState('map');\r\n  const [selectedRouteId, setSelectedRouteId] = useState<string | undefined>();\r\n  const [showAllRoutes, setShowAllRoutes] = useState(false);\r\n  const [showRoutes, setShowRoutes] = useState(false);\r\n  \r\n  // Referencias\r\n  const mapRef = useRef<google.maps.Map | null>(null);\r\n  const isMountedRef = useRef(true);\r\n\r\n  // Cleanup al desmontar\r\n  useEffect(() => {\r\n    return () => {\r\n      isMountedRef.current = false;\r\n      setSelectedShipment(null);\r\n    };\r\n  }, []);\r\n\r\n  // Procesar envíos con coordenadas\r\n  const shipmentsWithCoordinates = useMemo(() => {\r\n    if (!shipments || !Array.isArray(shipments)) {\r\n      return [];\r\n    }\r\n\r\n    return shipments.map((shipment, index) => {\r\n      if (!shipment.destination || !shipment.destination.coordinates) {\r\n        const destination = shipment.destination || {};\r\n        const city = destination.city || 'Buenos Aires';\r\n        const baseCoords = CITY_COORDINATES[city as keyof typeof CITY_COORDINATES] || DEFAULT_CENTER;\r\n        \r\n        // Agregar variación aleatoria para evitar superposición\r\n        const lat = baseCoords.lat + (Math.random() - 0.5) * 0.02;\r\n        const lng = baseCoords.lng + (Math.random() - 0.5) * 0.02;\r\n        \r\n        return {\r\n          ...shipment,\r\n          destination: {\r\n            ...destination,\r\n            city,\r\n            address: destination.address || 'Dirección no especificada',\r\n            coordinates: { lat, lng }\r\n          }\r\n        };\r\n      }\r\n      return shipment;\r\n    });\r\n  }, [shipments]);\r\n\r\n  // Filtrar envíos\r\n  const filteredShipments = useMemo(() => {\r\n    return shipmentsWithCoordinates.filter(shipment => {\r\n      const matchesSearch = searchTerm === '' || \r\n        shipment.tracking_number.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        shipment.destination.address.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        shipment.destination.city.toLowerCase().includes(searchTerm.toLowerCase());\r\n      \r\n      const matchesStatus = statusFilter === 'all' || shipment.status === statusFilter;\r\n      \r\n      return matchesSearch && matchesStatus;\r\n    });\r\n  }, [shipmentsWithCoordinates, searchTerm, statusFilter]);\r\n\r\n  // Calcular centro del mapa\r\n  useEffect(() => {\r\n    if (!isMountedRef.current) return;\r\n    \r\n    if (filteredShipments.length > 0) {\r\n      const validShipments = filteredShipments.filter(s => s.destination.coordinates);\r\n      if (validShipments.length > 0) {\r\n        const avgLat = validShipments.reduce((sum, s) => sum + (s.destination.coordinates?.lat || 0), 0) / validShipments.length;\r\n        const avgLng = validShipments.reduce((sum, s) => sum + (s.destination.coordinates?.lng || 0), 0) / validShipments.length;\r\n        \r\n        if (isMountedRef.current && !isNaN(avgLat) && !isNaN(avgLng)) {\r\n          setMapCenter({ lat: avgLat, lng: avgLng });\r\n        }\r\n      }\r\n    }\r\n  }, [filteredShipments]);\r\n\r\n  // Callbacks seguros\r\n  const handleMarkerClick = useCallback((shipment: ShipmentLocation) => {\r\n    if (isMountedRef.current) {\r\n      setSelectedShipment(shipment);\r\n      onShipmentSelect?.(shipment);\r\n    }\r\n  }, [onShipmentSelect]);\r\n\r\n  const handleInfoWindowClose = useCallback(() => {\r\n    if (isMountedRef.current) {\r\n      setSelectedShipment(null);\r\n    }\r\n  }, []);\r\n\r\n  // Optimización de rutas\r\n  const optimizeRoutes = useCallback(async () => {\r\n    if (!enableRouteOptimization || filteredShipments.length === 0) return;\r\n\r\n    try {\r\n      // Agrupar envíos por zona geográfica\r\n      const zones = new Map<string, ShipmentLocation[]>();\r\n      \r\n      filteredShipments.forEach(shipment => {\r\n        const zone = shipment.destination.city;\r\n        if (!zones.has(zone)) {\r\n          zones.set(zone, []);\r\n        }\r\n        zones.get(zone)!.push(shipment);\r\n      });\r\n\r\n      const routes: RouteOptimization[] = [];\r\n      let routeId = 1;\r\n\r\n      zones.forEach((shipments, city) => {\r\n        if (shipments.length > 0) {\r\n          // Calcular distancia estimada (simplificado)\r\n          const totalDistance = shipments.length * 5; // 5km promedio por envío\r\n          const estimatedTime = shipments.length * 15; // 15 min promedio por envío\r\n\r\n          routes.push({\r\n            id: `route-${routeId++}`,\r\n            name: `Ruta ${city}`,\r\n            shipments,\r\n            total_distance: totalDistance,\r\n            estimated_time: estimatedTime,\r\n            status: 'planned'\r\n          });\r\n        }\r\n      });\r\n\r\n      setOptimizedRoutes(routes);\r\n    } catch (error) {\r\n      console.error('Error optimizando rutas:', error);\r\n    }\r\n  }, [filteredShipments, enableRouteOptimization]);\r\n\r\n  // Obtener configuración de estado\r\n  const getStatusConfig = (status: string) => {\r\n    return STATUS_CONFIG[status as keyof typeof STATUS_CONFIG] || STATUS_CONFIG.pending;\r\n  };\r\n\r\n  // Verificar si Google Maps está disponible\r\n  const apiKey = process.env.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY;\r\n  \r\n  if (!apiKey) {\r\n    return (\r\n      <Card className=\"w-full\" style={{ height }}>\r\n        <CardHeader>\r\n          <CardTitle className=\"flex items-center gap-2\">\r\n            <MapPin className=\"w-5 h-5\" />\r\n            Mapa de Logística\r\n          </CardTitle>\r\n        </CardHeader>\r\n        <CardContent className=\"flex items-center justify-center h-96\">\r\n          <div className=\"text-center space-y-4\">\r\n            <AlertTriangle className=\"w-12 h-12 text-yellow-500 mx-auto\" />\r\n            <div>\r\n              <h3 className=\"text-lg font-semibold\">Google Maps API no configurada</h3>\r\n              <p className=\"text-gray-600 mt-2\">\r\n                Para habilitar el mapa, configura tu API key de Google Maps en las variables de entorno.\r\n              </p>\r\n              <p className=\"text-sm text-gray-500 mt-1\">\r\n                Variable requerida: <code>NEXT_PUBLIC_GOOGLE_MAPS_API_KEY</code>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-full space-y-4\">\r\n      {/* Controles superiores */}\r\n      <div className=\"flex flex-col sm:flex-row gap-4 items-start sm:items-center justify-between\">\r\n        <div className=\"flex flex-col sm:flex-row gap-2 flex-1\">\r\n          <div className=\"relative flex-1 max-w-md\">\r\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\" />\r\n            <Input\r\n              placeholder=\"Buscar por tracking, dirección o ciudad...\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              className=\"pl-10\"\r\n            />\r\n          </div>\r\n          <Select value={statusFilter} onValueChange={setStatusFilter}>\r\n            <SelectTrigger className=\"w-48\">\r\n              <SelectValue placeholder=\"Filtrar por estado\" />\r\n            </SelectTrigger>\r\n            <SelectContent>\r\n              <SelectItem value=\"all\">Todos los estados</SelectItem>\r\n              <SelectItem value=\"pending\">Pendientes</SelectItem>\r\n              <SelectItem value=\"confirmed\">Confirmados</SelectItem>\r\n              <SelectItem value=\"in_transit\">En Tránsito</SelectItem>\r\n              <SelectItem value=\"delivered\">Entregados</SelectItem>\r\n              <SelectItem value=\"exception\">Excepciones</SelectItem>\r\n            </SelectContent>\r\n          </Select>\r\n        </div>\r\n        \r\n        {enableRouteOptimization && (\r\n          <div className=\"flex gap-2\">\r\n            <Button\r\n              variant=\"outline\"\r\n              onClick={optimizeRoutes}\r\n              className=\"flex items-center gap-2\"\r\n            >\r\n              <Navigation className=\"w-4 h-4\" />\r\n              Optimizar Rutas\r\n            </Button>\r\n            <Button\r\n              variant={showRoutes ? \"default\" : \"outline\"}\r\n              onClick={() => setShowRoutes(!showRoutes)}\r\n              className=\"flex items-center gap-2\"\r\n            >\r\n              <Navigation className=\"w-4 h-4\" />\r\n              {showRoutes ? 'Ocultar' : 'Mostrar'} Rutas\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Estadísticas rápidas */}\r\n      <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n        <div className=\"bg-blue-50 p-3 rounded-lg\">\r\n          <div className=\"flex items-center gap-2\">\r\n            <Package className=\"w-4 h-4 text-blue-600\" />\r\n            <span className=\"text-sm font-medium text-blue-900\">Total Envíos</span>\r\n          </div>\r\n          <p className=\"text-2xl font-bold text-blue-600\">{filteredShipments.length}</p>\r\n        </div>\r\n        <div className=\"bg-green-50 p-3 rounded-lg\">\r\n          <div className=\"flex items-center gap-2\">\r\n            <CheckCircle className=\"w-4 h-4 text-green-600\" />\r\n            <span className=\"text-sm font-medium text-green-900\">Entregados</span>\r\n          </div>\r\n          <p className=\"text-2xl font-bold text-green-600\">\r\n            {filteredShipments.filter(s => s.status === 'delivered').length}\r\n          </p>\r\n        </div>\r\n        <div className=\"bg-purple-50 p-3 rounded-lg\">\r\n          <div className=\"flex items-center gap-2\">\r\n            <Truck className=\"w-4 h-4 text-purple-600\" />\r\n            <span className=\"text-sm font-medium text-purple-900\">En Tránsito</span>\r\n          </div>\r\n          <p className=\"text-2xl font-bold text-purple-600\">\r\n            {filteredShipments.filter(s => s.status === 'in_transit').length}\r\n          </p>\r\n        </div>\r\n        <div className=\"bg-yellow-50 p-3 rounded-lg\">\r\n          <div className=\"flex items-center gap-2\">\r\n            <Clock className=\"w-4 h-4 text-yellow-600\" />\r\n            <span className=\"text-sm font-medium text-yellow-900\">Pendientes</span>\r\n          </div>\r\n          <p className=\"text-2xl font-bold text-yellow-600\">\r\n            {filteredShipments.filter(s => s.status === 'pending').length}\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Tabs principales */}\r\n      <Tabs value={activeTab} onValueChange={setActiveTab}>\r\n        <TabsList className=\"grid w-full grid-cols-3\">\r\n          <TabsTrigger value=\"map\">Mapa Interactivo</TabsTrigger>\r\n          <TabsTrigger value=\"routes\">Rutas Optimizadas</TabsTrigger>\r\n          <TabsTrigger value=\"tracking\">Tracking en Vivo</TabsTrigger>\r\n        </TabsList>\r\n\r\n        {/* Mapa principal */}\r\n        <TabsContent value=\"map\">\r\n          <Card style={{ height }}>\r\n            <CardContent className=\"p-0\">\r\n              <APIProvider apiKey={apiKey}>\r\n                <Map\r\n                  defaultCenter={mapCenter}\r\n                  defaultZoom={mapZoom}\r\n                  gestureHandling=\"greedy\"\r\n                  disableDefaultUI={false}\r\n                  style={{ width: '100%', height }}\r\n                >\r\n                  {/* Marcadores de envíos */}\r\n                  {filteredShipments.map((shipment) => {\r\n                    if (!shipment.destination.coordinates) return null;\r\n\r\n                    const statusConfig = getStatusConfig(shipment.status);\r\n\r\n                    // Usar Marker normal como fallback si no hay mapId válido\r\n                    return (\r\n                      <Marker\r\n                        key={shipment.id}\r\n                        position={shipment.destination.coordinates}\r\n                        onClick={() => handleMarkerClick(shipment)}\r\n                        title={`Envío ${shipment.id} - ${shipment.status}`}\r\n                      />\r\n                    );\r\n                  })}\r\n                  \r\n                  {/* InfoWindow para envío seleccionado */}\r\n                  {selectedShipment && selectedShipment.destination.coordinates && isMountedRef.current && (\r\n                    <InfoWindow\r\n                      position={selectedShipment.destination.coordinates}\r\n                      onClose={handleInfoWindowClose}\r\n                    >\r\n                      <div className=\"p-2 max-w-sm\">\r\n                        <div className=\"flex items-center gap-2 mb-2\">\r\n                          <Package className=\"w-4 h-4\" />\r\n                          <span className=\"font-semibold\">{selectedShipment.tracking_number}</span>\r\n                          <Badge variant=\"secondary\">\r\n                            {getStatusConfig(selectedShipment.status).label}\r\n                          </Badge>\r\n                        </div>\r\n                        <div className=\"space-y-1 text-sm\">\r\n                          <p><strong>Destino:</strong> {selectedShipment.destination.address}</p>\r\n                          <p><strong>Ciudad:</strong> {selectedShipment.destination.city}</p>\r\n                          <p><strong>Courier:</strong> {selectedShipment.courier}</p>\r\n                          <p><strong>Costo:</strong> ${selectedShipment.cost}</p>\r\n                          {selectedShipment.estimated_delivery && (\r\n                            <p><strong>Entrega estimada:</strong> {new Date(selectedShipment.estimated_delivery).toLocaleDateString()}</p>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </InfoWindow>\r\n                  )}\r\n                </Map>\r\n              </APIProvider>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        {/* Rutas optimizadas */}\r\n        <TabsContent value=\"routes\">\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n            {/* Panel de optimización */}\r\n            <div className=\"space-y-4\">\r\n              <RouteOptimizationPanel\r\n                shipments={filteredShipments}\r\n                onRouteSelect={(route) => {\r\n                  // Centrar mapa en la ruta seleccionada\r\n                  if (route.start_location) {\r\n                    setMapCenter(route.start_location);\r\n                    setMapZoom(12);\r\n                  }\r\n                  setSelectedRouteId(route.id);\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            {/* Mapa con visualización de rutas */}\r\n            <div className=\"space-y-4\">\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle className=\"flex items-center gap-2\">\r\n                    <Navigation className=\"w-5 h-5\" />\r\n                    Visualización de Rutas\r\n                  </CardTitle>\r\n                </CardHeader>\r\n                <CardContent className=\"p-0\">\r\n                  <APIProvider apiKey={apiKey}>\r\n                    <Map\r\n                      defaultCenter={mapCenter}\r\n                      defaultZoom={mapZoom}\r\n                      gestureHandling=\"greedy\"\r\n                      disableDefaultUI={false}\r\n                      style={{ width: '100%', height: '500px' }}\r\n                    >\r\n                      {/* Marcadores de envíos */}\r\n                      {filteredShipments.map((shipment) => {\r\n                        if (!shipment.destination.coordinates) return null;\r\n\r\n                        const statusConfig = getStatusConfig(shipment.status);\r\n\r\n                        return (\r\n                          <Marker\r\n                            key={shipment.id}\r\n                            position={shipment.destination.coordinates}\r\n                            onClick={() => handleMarkerClick(shipment)}\r\n                            title={`Envío ${shipment.id} - ${shipment.status}`}\r\n                          />\r\n                        );\r\n                      })}\r\n\r\n                      {/* InfoWindow para envío seleccionado */}\r\n                      {selectedShipment && selectedShipment.destination.coordinates && isMountedRef.current && (\r\n                        <InfoWindow\r\n                          position={selectedShipment.destination.coordinates}\r\n                          onClose={handleInfoWindowClose}\r\n                        >\r\n                          <div className=\"p-2 max-w-sm\">\r\n                            <div className=\"flex items-center gap-2 mb-2\">\r\n                              <Package className=\"w-4 h-4\" />\r\n                              <h3 className=\"font-semibold\">Envío #{selectedShipment.id}</h3>\r\n                            </div>\r\n                            <div className=\"space-y-1 text-sm\">\r\n                              <p><strong>Tracking:</strong> {selectedShipment.tracking_number}</p>\r\n                              <p><strong>Estado:</strong> {getStatusConfig(selectedShipment.status).label}</p>\r\n                              <p><strong>Destino:</strong> {selectedShipment.destination.address}</p>\r\n                              <p><strong>Ciudad:</strong> {selectedShipment.destination.city}</p>\r\n                              <p><strong>Courier:</strong> {selectedShipment.courier}</p>\r\n                              {selectedShipment.estimated_delivery && (\r\n                                <p><strong>Entrega estimada:</strong> {new Date(selectedShipment.estimated_delivery).toLocaleDateString()}</p>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        </InfoWindow>\r\n                      )}\r\n                    </Map>\r\n                  </APIProvider>\r\n                </CardContent>\r\n              </Card>\r\n\r\n              {/* Componente de visualización de rutas */}\r\n              <RouteVisualization\r\n                routes={routes}\r\n                selectedRouteId={selectedRouteId}\r\n                onRouteSelect={setSelectedRouteId}\r\n                showAllRoutes={showAllRoutes}\r\n              />\r\n            </div>\r\n          </div>\r\n        </TabsContent>\r\n\r\n        {/* Tracking en vivo */}\r\n        <TabsContent value=\"tracking\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <Zap className=\"w-5 h-5\" />\r\n                Tracking en Tiempo Real\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"text-center py-8\">\r\n                <Zap className=\"w-12 h-12 text-blue-500 mx-auto mb-4\" />\r\n                <h3 className=\"text-lg font-semibold mb-2\">Tracking en Tiempo Real</h3>\r\n                <p className=\"text-gray-600\">\r\n                  Funcionalidad de tracking en vivo en desarrollo.\r\n                  Se integrará con WebSockets para actualizaciones en tiempo real.\r\n                </p>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GoogleMapsLogistics;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","ignoreList":[]}