{"version":3,"names":["cov_16vyzw6748","actualCoverage","s","DashboardPrefetch","f","default","LazyMetricsDashboard","usePrefetchDashboard","MetricsDashboard","_react","lazy","Promise","resolve","then","_interop_require_wildcard","require","DashboardSkeleton","_jsxruntime","jsxs","className","jsx","Array","from","length","map","_","i","_card","Card","CardHeader","CardContent","j","DashboardError","error","retry","message","onClick","_lucidereact","RefreshCw","Suspense","fallback","ErrorBoundary","Component","constructor","props","state","hasError","getDerivedStateFromError","componentDidCatch","errorInfo","console","render","b","Error","setState","undefined","children","prefetch","fetch","catch","useEffect","timer","setTimeout","clearTimeout"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\components\\Dashboard\\LazyMetricsDashboard.tsx"],"sourcesContent":["// ===================================\r\n// PINTEYA E-COMMERCE - LAZY METRICS DASHBOARD\r\n// ===================================\r\n\r\n\"use client\";\r\n\r\nimport React, { lazy, Suspense } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { RefreshCw } from 'lucide-react';\r\n\r\n// Lazy loading del dashboard principal\r\nconst MetricsDashboard = lazy(() => import('./MetricsDashboard'));\r\n\r\n// Componente de loading\r\nfunction DashboardSkeleton() {\r\n  return (\r\n    <div className=\"space-y-6 animate-pulse\">\r\n      {/* Header skeleton */}\r\n      <div className=\"flex justify-between items-center\">\r\n        <div>\r\n          <div className=\"h-8 bg-gray-200 rounded w-64 mb-2\"></div>\r\n          <div className=\"h-4 bg-gray-200 rounded w-96\"></div>\r\n        </div>\r\n        <div className=\"flex gap-4\">\r\n          <div className=\"h-10 bg-gray-200 rounded w-32\"></div>\r\n          <div className=\"h-10 bg-gray-200 rounded w-32\"></div>\r\n          <div className=\"h-10 bg-gray-200 rounded w-24\"></div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Metrics cards skeleton */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n        {Array.from({ length: 4 }).map((_, i) => (\r\n          <Card key={i}>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n              <div className=\"h-4 bg-gray-200 rounded w-24\"></div>\r\n              <div className=\"h-4 w-4 bg-gray-200 rounded\"></div>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"h-8 bg-gray-200 rounded w-16 mb-2\"></div>\r\n              <div className=\"h-3 bg-gray-200 rounded w-32\"></div>\r\n            </CardContent>\r\n          </Card>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Endpoint cards skeleton */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n        {Array.from({ length: 3 }).map((_, i) => (\r\n          <Card key={i}>\r\n            <CardHeader>\r\n              <div className=\"h-6 bg-gray-200 rounded w-48\"></div>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <div className=\"grid grid-cols-2 gap-4\">\r\n                {Array.from({ length: 4 }).map((_, j) => (\r\n                  <div key={j}>\r\n                    <div className=\"h-3 bg-gray-200 rounded w-12 mb-1\"></div>\r\n                    <div className=\"h-4 bg-gray-200 rounded w-16\"></div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <div className=\"border-t pt-4\">\r\n                <div className=\"h-4 bg-gray-200 rounded w-32 mb-2\"></div>\r\n                <div className=\"grid grid-cols-2 gap-2\">\r\n                  {Array.from({ length: 4 }).map((_, j) => (\r\n                    <div key={j} className=\"h-3 bg-gray-200 rounded w-20\"></div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Componente de error\r\nfunction DashboardError({ error, retry }: { error: Error; retry: () => void }) {\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center h-64 space-y-4\">\r\n      <div className=\"text-red-500 text-center\">\r\n        <h3 className=\"text-lg font-semibold mb-2\">Error al cargar el dashboard</h3>\r\n        <p className=\"text-sm text-gray-600\">{error.message}</p>\r\n      </div>\r\n      <button\r\n        onClick={retry}\r\n        className=\"flex items-center px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors\"\r\n      >\r\n        <RefreshCw className=\"w-4 h-4 mr-2\" />\r\n        Reintentar\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Componente principal con lazy loading\r\nexport default function LazyMetricsDashboard() {\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 p-6\">\r\n      <Suspense fallback={<DashboardSkeleton />}>\r\n        <ErrorBoundary>\r\n          <MetricsDashboard />\r\n        </ErrorBoundary>\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Error boundary para manejar errores de carga\r\nclass ErrorBoundary extends React.Component<\r\n  { children: React.ReactNode },\r\n  { hasError: boolean; error?: Error }\r\n> {\r\n  constructor(props: { children: React.ReactNode }) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(error: Error) {\r\n    return { hasError: true, error };\r\n  }\r\n\r\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\r\n    console.error('Dashboard error:', error, errorInfo);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return (\r\n        <DashboardError\r\n          error={this.state.error || new Error('Unknown error')}\r\n          retry={() => this.setState({ hasError: false, error: undefined })}\r\n        />\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\n// Hook para precargar el dashboard\r\nexport function usePrefetchDashboard() {\r\n  const prefetch = () => {\r\n    // Precargar el componente\r\n    import('./MetricsDashboard');\r\n    \r\n    // Precargar datos de métricas\r\n    fetch('/api/metrics?hours=1').catch(() => {\r\n      // Ignorar errores de precarga\r\n    });\r\n  };\r\n\r\n  return { prefetch };\r\n}\r\n\r\n// Componente de precarga para usar en otras páginas\r\nexport function DashboardPrefetch() {\r\n  const { prefetch } = usePrefetchDashboard();\r\n\r\n  React.useEffect(() => {\r\n    // Precargar después de un pequeño delay\r\n    const timer = setTimeout(prefetch, 1000);\r\n    return () => clearTimeout(timer);\r\n  }, [prefetch]);\r\n\r\n  return null;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}