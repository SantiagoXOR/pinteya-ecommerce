{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\admin\\monitoring\\enterprise\\page.tsx"],"sourcesContent":["/**\r\n * Página del Dashboard Enterprise Completo\r\n * Integra todos los sistemas de optimización y monitoreo\r\n */\r\n\r\n'use client';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport { Alert, AlertDescription } from '@/components/ui/alert';\r\nimport EnterpriseMonitoringDashboard from '@/components/Dashboard/EnterpriseMonitoringDashboard';\r\nimport {\r\n  Activity,\r\n  AlertTriangle,\r\n  CheckCircle,\r\n  Clock,\r\n  Database,\r\n  Play,\r\n  RefreshCw,\r\n  Settings,\r\n  Shield,\r\n  Zap,\r\n  Server,\r\n  TestTube,\r\n  Bell,\r\n  BarChart3,\r\n  TrendingUp,\r\n  Eye,\r\n  Lock\r\n} from 'lucide-react';\r\n\r\n// =====================================================\r\n// TIPOS E INTERFACES\r\n// =====================================================\r\n\r\ninterface SystemStatus {\r\n  name: string;\r\n  status: 'initializing' | 'running' | 'error' | 'stopped';\r\n  version: string;\r\n  startTime?: string;\r\n  error?: string;\r\n  metrics?: any;\r\n}\r\n\r\ninterface InitializationResult {\r\n  success: boolean;\r\n  systems: SystemStatus[];\r\n  totalTime: number;\r\n  errors: string[];\r\n  warnings: string[];\r\n}\r\n\r\ninterface AlertInfo {\r\n  id: string;\r\n  title: string;\r\n  severity: 'low' | 'medium' | 'high' | 'critical';\r\n  category: string;\r\n  status: 'active' | 'acknowledged' | 'resolved';\r\n  triggeredAt: string;\r\n}\r\n\r\n// =====================================================\r\n// COMPONENTES\r\n// =====================================================\r\n\r\nconst SystemStatusCard: React.FC<{ system: SystemStatus }> = ({ system }) => {\r\n  const getStatusColor = () => {\r\n    switch (system.status) {\r\n      case 'running': return 'text-green-600 bg-green-50';\r\n      case 'error': return 'text-red-600 bg-red-50';\r\n      case 'initializing': return 'text-yellow-600 bg-yellow-50';\r\n      case 'stopped': return 'text-gray-600 bg-gray-50';\r\n      default: return 'text-gray-600 bg-gray-50';\r\n    }\r\n  };\r\n\r\n  const getStatusIcon = () => {\r\n    switch (system.status) {\r\n      case 'running': return <CheckCircle className=\"w-4 h-4\" />;\r\n      case 'error': return <AlertTriangle className=\"w-4 h-4\" />;\r\n      case 'initializing': return <Clock className=\"w-4 h-4\" />;\r\n      case 'stopped': return <Server className=\"w-4 h-4\" />;\r\n      default: return <Server className=\"w-4 h-4\" />;\r\n    }\r\n  };\r\n\r\n  const getStatusText = () => {\r\n    switch (system.status) {\r\n      case 'running': return 'Funcionando';\r\n      case 'error': return 'Error';\r\n      case 'initializing': return 'Inicializando';\r\n      case 'stopped': return 'Detenido';\r\n      default: return 'Desconocido';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent className=\"p-4\">\r\n        <div className=\"flex items-center justify-between mb-3\">\r\n          <h3 className=\"font-semibold text-gray-900\">{system.name}</h3>\r\n          <div className={`flex items-center space-x-1 px-2 py-1 rounded-full ${getStatusColor()}`}>\r\n            {getStatusIcon()}\r\n            <span className=\"text-xs font-medium\">{getStatusText()}</span>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"space-y-2 text-sm\">\r\n          <div className=\"flex justify-between\">\r\n            <span className=\"text-gray-600\">Versión:</span>\r\n            <span className=\"font-medium\">{system.version}</span>\r\n          </div>\r\n          \r\n          {system.startTime && (\r\n            <div className=\"flex justify-between\">\r\n              <span className=\"text-gray-600\">Inicio:</span>\r\n              <span className=\"font-medium\">{new Date(system.startTime).toLocaleTimeString()}</span>\r\n            </div>\r\n          )}\r\n          \r\n          {system.error && (\r\n            <div className=\"mt-2\">\r\n              <span className=\"text-red-600 text-xs\">{system.error}</span>\r\n            </div>\r\n          )}\r\n          \r\n          {system.metrics && (\r\n            <div className=\"mt-2 pt-2 border-t border-gray-200\">\r\n              <span className=\"text-xs text-gray-500\">\r\n                {Object.keys(system.metrics).length} métricas disponibles\r\n              </span>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst AlertCard: React.FC<{ alert: AlertInfo }> = ({ alert }) => {\r\n  const getSeverityColor = () => {\r\n    switch (alert.severity) {\r\n      case 'critical': return 'bg-red-100 text-red-800';\r\n      case 'high': return 'bg-orange-100 text-orange-800';\r\n      case 'medium': return 'bg-yellow-100 text-yellow-800';\r\n      case 'low': return 'bg-blue-100 text-blue-800';\r\n      default: return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const getStatusColor = () => {\r\n    switch (alert.status) {\r\n      case 'active': return 'bg-red-100 text-red-800';\r\n      case 'acknowledged': return 'bg-yellow-100 text-yellow-800';\r\n      case 'resolved': return 'bg-green-100 text-green-800';\r\n      default: return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent className=\"p-4\">\r\n        <div className=\"flex items-start justify-between mb-2\">\r\n          <h4 className=\"font-medium text-gray-900 text-sm\">{alert.title}</h4>\r\n          <div className=\"flex space-x-1\">\r\n            <Badge className={getSeverityColor()}>{alert.severity}</Badge>\r\n            <Badge className={getStatusColor()}>{alert.status}</Badge>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"space-y-1 text-xs text-gray-600\">\r\n          <div>Categoría: {alert.category}</div>\r\n          <div>Activada: {new Date(alert.triggeredAt).toLocaleString()}</div>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\n// =====================================================\r\n// COMPONENTE PRINCIPAL\r\n// =====================================================\r\n\r\nexport default function EnterpriseMonitoringPage() {\r\n  const [systemStatus, setSystemStatus] = useState<SystemStatus[]>([]);\r\n  const [alerts, setAlerts] = useState<AlertInfo[]>([]);\r\n  const [isInitializing, setIsInitializing] = useState(false);\r\n  const [initResult, setInitResult] = useState<InitializationResult | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Cargar estado inicial\r\n  useEffect(() => {\r\n    loadSystemStatus();\r\n    loadAlerts();\r\n  }, []);\r\n\r\n  const loadSystemStatus = async () => {\r\n    try {\r\n      const response = await fetch('/api/admin/system/initialize-enterprise');\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setSystemStatus(data.data.systems || []);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading system status:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const loadAlerts = async () => {\r\n    try {\r\n      // Simular carga de alertas - en producción vendría de la API\r\n      const mockAlerts: AlertInfo[] = [\r\n        {\r\n          id: '1',\r\n          title: 'Alto uso de memoria detectado',\r\n          severity: 'high',\r\n          category: 'capacity',\r\n          status: 'active',\r\n          triggeredAt: new Date(Date.now() - 30 * 60 * 1000).toISOString()\r\n        },\r\n        {\r\n          id: '2',\r\n          title: 'Tasa de cache hit baja',\r\n          severity: 'medium',\r\n          category: 'performance',\r\n          status: 'acknowledged',\r\n          triggeredAt: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString()\r\n        }\r\n      ];\r\n      setAlerts(mockAlerts);\r\n    } catch (error) {\r\n      console.error('Error loading alerts:', error);\r\n    }\r\n  };\r\n\r\n  const initializeEnterpriseSystems = async () => {\r\n    setIsInitializing(true);\r\n    setInitResult(null);\r\n\r\n    try {\r\n      const response = await fetch('/api/admin/system/initialize-enterprise', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      const data = await response.json();\r\n      setInitResult(data.data);\r\n      \r\n      if (data.success) {\r\n        await loadSystemStatus();\r\n      }\r\n    } catch (error) {\r\n      console.error('Error initializing systems:', error);\r\n      setInitResult({\r\n        success: false,\r\n        systems: [],\r\n        totalTime: 0,\r\n        errors: ['Error de conexión al inicializar sistemas'],\r\n        warnings: []\r\n      });\r\n    } finally {\r\n      setIsInitializing(false);\r\n    }\r\n  };\r\n\r\n  const runSystemTests = async () => {\r\n    try {\r\n      // Simular ejecución de tests\r\n      console.log('Running system tests...');\r\n      // En producción, esto haría una llamada a la API de tests\r\n    } catch (error) {\r\n      console.error('Error running tests:', error);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-64\">\r\n        <div className=\"flex items-center space-x-2\">\r\n          <RefreshCw className=\"w-6 h-6 animate-spin text-blue-600\" />\r\n          <span className=\"text-lg font-medium text-gray-600\">Cargando dashboard enterprise...</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const runningSystems = systemStatus.filter(s => s.status === 'running').length;\r\n  const totalSystems = systemStatus.length;\r\n  const healthScore = totalSystems > 0 ? (runningSystems / totalSystems) * 100 : 0;\r\n  const activeAlerts = alerts.filter(a => a.status === 'active').length;\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex justify-between items-center\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold text-gray-900\">Dashboard Enterprise</h1>\r\n          <p className=\"text-gray-600\">\r\n            Sistema completo de optimización y monitoreo enterprise\r\n          </p>\r\n        </div>\r\n        <div className=\"flex items-center space-x-3\">\r\n          <Button \r\n            onClick={runSystemTests} \r\n            variant=\"outline\" \r\n            size=\"sm\"\r\n          >\r\n            <TestTube className=\"w-4 h-4 mr-2\" />\r\n            Ejecutar Tests\r\n          </Button>\r\n          <Button \r\n            onClick={initializeEnterpriseSystems} \r\n            disabled={isInitializing}\r\n            size=\"sm\"\r\n          >\r\n            {isInitializing ? (\r\n              <RefreshCw className=\"w-4 h-4 mr-2 animate-spin\" />\r\n            ) : (\r\n              <Play className=\"w-4 h-4 mr-2\" />\r\n            )}\r\n            {isInitializing ? 'Inicializando...' : 'Inicializar Sistemas'}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Métricas principales */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n        <Card>\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-600\">Salud del Sistema</p>\r\n                <p className=\"text-2xl font-bold text-gray-900\">{healthScore.toFixed(1)}%</p>\r\n                <p className=\"text-xs text-gray-500\">{runningSystems}/{totalSystems} sistemas</p>\r\n              </div>\r\n              <div className=\"p-2 rounded-lg bg-green-50\">\r\n                <Activity className=\"w-5 h-5 text-green-600\" />\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-600\">Alertas Activas</p>\r\n                <p className=\"text-2xl font-bold text-gray-900\">{activeAlerts}</p>\r\n                <p className=\"text-xs text-gray-500\">de {alerts.length} totales</p>\r\n              </div>\r\n              <div className=\"p-2 rounded-lg bg-red-50\">\r\n                <Bell className=\"w-5 h-5 text-red-600\" />\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-600\">Sistemas Activos</p>\r\n                <p className=\"text-2xl font-bold text-gray-900\">{runningSystems}</p>\r\n                <p className=\"text-xs text-gray-500\">funcionando correctamente</p>\r\n              </div>\r\n              <div className=\"p-2 rounded-lg bg-blue-50\">\r\n                <Server className=\"w-5 h-5 text-blue-600\" />\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-600\">Última Actualización</p>\r\n                <p className=\"text-2xl font-bold text-gray-900\">{new Date().toLocaleTimeString()}</p>\r\n                <p className=\"text-xs text-gray-500\">tiempo real</p>\r\n              </div>\r\n              <div className=\"p-2 rounded-lg bg-purple-50\">\r\n                <Clock className=\"w-5 h-5 text-purple-600\" />\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Resultado de inicialización */}\r\n      {initResult && (\r\n        <Alert className={initResult.success ? 'border-green-200 bg-green-50' : 'border-red-200 bg-red-50'}>\r\n          <div className=\"flex items-center\">\r\n            {initResult.success ? (\r\n              <CheckCircle className=\"w-4 h-4 text-green-600\" />\r\n            ) : (\r\n              <AlertTriangle className=\"w-4 h-4 text-red-600\" />\r\n            )}\r\n            <AlertDescription className=\"ml-2\">\r\n              <strong>\r\n                {initResult.success ? 'Inicialización Exitosa' : 'Inicialización con Errores'}\r\n              </strong>\r\n              <div className=\"mt-1 text-sm\">\r\n                {initResult.success ? (\r\n                  `${initResult.systems.length} sistemas inicializados en ${initResult.totalTime}ms`\r\n                ) : (\r\n                  `${initResult.errors.length} errores encontrados`\r\n                )}\r\n              </div>\r\n              {initResult.errors.length > 0 && (\r\n                <div className=\"mt-2\">\r\n                  <ul className=\"text-xs space-y-1\">\r\n                    {initResult.errors.map((error, index) => (\r\n                      <li key={index} className=\"text-red-600\">• {error instanceof Error ? error.message : error?.toString() || 'Error desconocido'}</li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              )}\r\n              {initResult.warnings.length > 0 && (\r\n                <div className=\"mt-2\">\r\n                  <ul className=\"text-xs space-y-1\">\r\n                    {initResult.warnings.map((warning, index) => (\r\n                      <li key={index} className=\"text-yellow-600\">• {warning}</li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              )}\r\n            </AlertDescription>\r\n          </div>\r\n        </Alert>\r\n      )}\r\n\r\n      {/* Tabs principales */}\r\n      <Tabs defaultValue=\"overview\" className=\"space-y-6\">\r\n        <TabsList className=\"grid w-full grid-cols-5\">\r\n          <TabsTrigger value=\"overview\">Resumen</TabsTrigger>\r\n          <TabsTrigger value=\"systems\">Sistemas</TabsTrigger>\r\n          <TabsTrigger value=\"alerts\">Alertas</TabsTrigger>\r\n          <TabsTrigger value=\"monitoring\">Monitoreo</TabsTrigger>\r\n          <TabsTrigger value=\"testing\">Testing</TabsTrigger>\r\n        </TabsList>\r\n\r\n        {/* Tab Resumen */}\r\n        <TabsContent value=\"overview\" className=\"space-y-6\">\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n            {/* Estado de sistemas */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center\">\r\n                  <Server className=\"w-5 h-5 mr-2 text-blue-600\" />\r\n                  Estado de Sistemas Enterprise\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                  {systemStatus.map((system, index) => (\r\n                    <SystemStatusCard key={index} system={system} />\r\n                  ))}\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Alertas recientes */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center\">\r\n                  <Bell className=\"w-5 h-5 mr-2 text-red-600\" />\r\n                  Alertas Recientes\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-3\">\r\n                  {alerts.slice(0, 5).map((alert) => (\r\n                    <AlertCard key={alert.id} alert={alert} />\r\n                  ))}\r\n                  {alerts.length === 0 && (\r\n                    <div className=\"text-center py-8 text-gray-500\">\r\n                      <Bell className=\"w-8 h-8 mx-auto mb-2 opacity-50\" />\r\n                      <p>No hay alertas activas</p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </TabsContent>\r\n\r\n        {/* Tab Sistemas */}\r\n        <TabsContent value=\"systems\" className=\"space-y-6\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n            {systemStatus.map((system, index) => (\r\n              <SystemStatusCard key={index} system={system} />\r\n            ))}\r\n          </div>\r\n        </TabsContent>\r\n\r\n        {/* Tab Alertas */}\r\n        <TabsContent value=\"alerts\" className=\"space-y-6\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n            {alerts.map((alert) => (\r\n              <AlertCard key={alert.id} alert={alert} />\r\n            ))}\r\n          </div>\r\n        </TabsContent>\r\n\r\n        {/* Tab Monitoreo */}\r\n        <TabsContent value=\"monitoring\" className=\"space-y-6\">\r\n          <EnterpriseMonitoringDashboard />\r\n        </TabsContent>\r\n\r\n        {/* Tab Testing */}\r\n        <TabsContent value=\"testing\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center\">\r\n                <TestTube className=\"w-5 h-5 mr-2 text-green-600\" />\r\n                Testing Automatizado Enterprise\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"text-center py-8\">\r\n                <TestTube className=\"w-12 h-12 mx-auto mb-4 text-gray-400\" />\r\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Sistema de Testing Automatizado</h3>\r\n                <p className=\"text-gray-600 mb-4\">\r\n                  Tests continuos de seguridad, performance e integración ejecutándose en segundo plano\r\n                </p>\r\n                <Button onClick={runSystemTests}>\r\n                  <Play className=\"w-4 h-4 mr-2\" />\r\n                  Ejecutar Suite Completa\r\n                </Button>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["EnterpriseMonitoringPage","SystemStatusCard","system","getStatusColor","status","getStatusIcon","CheckCircle","className","AlertTriangle","Clock","Server","getStatusText","Card","CardContent","div","h3","name","span","version","startTime","Date","toLocaleTimeString","error","metrics","Object","keys","length","AlertCard","alert","getSeverityColor","severity","h4","title","Badge","category","triggeredAt","toLocaleString","systemStatus","setSystemStatus","useState","alerts","setAlerts","isInitializing","setIsInitializing","initResult","setInitResult","loading","setLoading","useEffect","loadSystemStatus","loadAlerts","response","fetch","ok","data","json","systems","console","mockAlerts","id","now","toISOString","initializeEnterpriseSystems","method","headers","success","totalTime","errors","warnings","runSystemTests","log","RefreshCw","runningSystems","filter","s","totalSystems","healthScore","activeAlerts","a","h1","p","Button","onClick","variant","size","TestTube","disabled","Play","toFixed","Activity","Bell","Alert","AlertDescription","strong","ul","map","index","li","Error","message","toString","warning","Tabs","defaultValue","TabsList","TabsTrigger","value","TabsContent","CardHeader","CardTitle","slice","EnterpriseMonitoringDashboard"],"mappings":"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"}