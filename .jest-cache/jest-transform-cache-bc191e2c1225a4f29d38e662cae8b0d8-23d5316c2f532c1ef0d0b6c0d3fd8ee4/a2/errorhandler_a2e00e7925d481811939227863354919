423afae76fe8dea82da54598056d7bde
// ğŸ”§ Enterprise Error Handler
"use strict";

/* istanbul ignore next */
function cov_2eanr1h61t() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\api\\error-handler.ts";
  var hash = "ae969baad92dda1edc10fe1b858863d15baf6ee5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\api\\error-handler.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 34,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 24
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 29
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 30
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 29
        }
      },
      "8": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 33
        }
      },
      "9": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 31
        }
      },
      "10": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 32
        }
      },
      "11": {
        start: {
          line: 35,
          column: 16
        },
        end: {
          line: 35,
          column: 38
        }
      },
      "12": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 95
        }
      },
      "13": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 31
        }
      },
      "14": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 71,
          column: 6
        }
      },
      "15": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 70,
          column: 9
        }
      },
      "16": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 45,
          column: 51
        }
      },
      "17": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 47
        }
      },
      "18": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 59,
          column: 13
        }
      },
      "19": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 58,
          column: 19
        }
      },
      "20": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 69,
          column: 15
        }
      },
      "21": {
        start: {
          line: 73,
          column: 22
        },
        end: {
          line: 73,
          column: 93
        }
      },
      "22": {
        start: {
          line: 73,
          column: 34
        },
        end: {
          line: 73,
          column: 93
        }
      },
      "23": {
        start: {
          line: 74,
          column: 24
        },
        end: {
          line: 74,
          column: 99
        }
      },
      "24": {
        start: {
          line: 74,
          column: 44
        },
        end: {
          line: 74,
          column: 99
        }
      },
      "25": {
        start: {
          line: 75,
          column: 26
        },
        end: {
          line: 75,
          column: 97
        }
      },
      "26": {
        start: {
          line: 75,
          column: 55
        },
        end: {
          line: 75,
          column: 97
        }
      },
      "27": {
        start: {
          line: 76,
          column: 23
        },
        end: {
          line: 76,
          column: 90
        }
      },
      "28": {
        start: {
          line: 76,
          column: 51
        },
        end: {
          line: 76,
          column: 90
        }
      },
      "29": {
        start: {
          line: 77,
          column: 22
        },
        end: {
          line: 77,
          column: 89
        }
      },
      "30": {
        start: {
          line: 77,
          column: 42
        },
        end: {
          line: 77,
          column: 89
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 20
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 25
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 26
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 25
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 29
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        loc: {
          start: {
            line: 28,
            column: 27
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 28
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        loc: {
          start: {
            line: 31,
            column: 28
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 31
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        loc: {
          start: {
            line: 37,
            column: 76
          },
          end: {
            line: 40,
            column: 5
          }
        },
        line: 37
      },
      "9": {
        name: "withErrorHandler",
        decl: {
          start: {
            line: 42,
            column: 9
          },
          end: {
            line: 42,
            column: 25
          }
        },
        loc: {
          start: {
            line: 42,
            column: 35
          },
          end: {
            line: 72,
            column: 1
          }
        },
        line: 42
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 43,
            column: 11
          },
          end: {
            line: 43,
            column: 12
          }
        },
        loc: {
          start: {
            line: 43,
            column: 44
          },
          end: {
            line: 71,
            column: 5
          }
        },
        line: 43
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 73,
            column: 22
          },
          end: {
            line: 73,
            column: 23
          }
        },
        loc: {
          start: {
            line: 73,
            column: 34
          },
          end: {
            line: 73,
            column: 93
          }
        },
        line: 73
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 74,
            column: 24
          },
          end: {
            line: 74,
            column: 25
          }
        },
        loc: {
          start: {
            line: 74,
            column: 44
          },
          end: {
            line: 74,
            column: 99
          }
        },
        line: 74
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 75,
            column: 26
          },
          end: {
            line: 75,
            column: 27
          }
        },
        loc: {
          start: {
            line: 75,
            column: 55
          },
          end: {
            line: 75,
            column: 97
          }
        },
        line: 75
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 76,
            column: 23
          },
          end: {
            line: 76,
            column: 24
          }
        },
        loc: {
          start: {
            line: 76,
            column: 51
          },
          end: {
            line: 76,
            column: 90
          }
        },
        line: 76
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 77,
            column: 22
          },
          end: {
            line: 77,
            column: 23
          }
        },
        loc: {
          start: {
            line: 77,
            column: 42
          },
          end: {
            line: 77,
            column: 89
          }
        },
        line: 77
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 37,
            column: 25
          },
          end: {
            line: 37,
            column: 41
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 37,
            column: 38
          },
          end: {
            line: 37,
            column: 41
          }
        }],
        line: 37
      },
      "1": {
        loc: {
          start: {
            line: 37,
            column: 43
          },
          end: {
            line: 37,
            column: 66
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 37,
            column: 50
          },
          end: {
            line: 37,
            column: 66
          }
        }],
        line: 37
      },
      "2": {
        loc: {
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 59,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 59,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "3": {
        loc: {
          start: {
            line: 75,
            column: 27
          },
          end: {
            line: 75,
            column: 52
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 75,
            column: 37
          },
          end: {
            line: 75,
            column: 52
          }
        }],
        line: 75
      },
      "4": {
        loc: {
          start: {
            line: 76,
            column: 24
          },
          end: {
            line: 76,
            column: 48
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 76,
            column: 34
          },
          end: {
            line: 76,
            column: 48
          }
        }],
        line: 76
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0],
      "3": [0],
      "4": [0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\lib\\api\\error-handler.ts"],
      sourcesContent: ["// \uD83D\uDD27 Enterprise Error Handler\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\n\r\nexport class ApiError extends Error {\r\n  constructor(\r\n    message: string,\r\n    public statusCode: number = 500,\r\n    public code: string = 'INTERNAL_ERROR',\r\n    public details?: any\r\n  ) {\r\n    super(message);\r\n    this.name = 'ApiError';\r\n  }\r\n}\r\n\r\nexport function withErrorHandler(handler: Function) {\r\n  return async function (request: NextRequest, context: any) {\r\n    try {\r\n      return await handler(request, context);\r\n    } catch (error) {\r\n      console.error('API Error:', error);\r\n\r\n      if (error instanceof ApiError) {\r\n        return NextResponse.json(\r\n          {\r\n            success: false,\r\n            error: error.message,\r\n            code: error.code,\r\n            details: error.details,\r\n            timestamp: new Date().toISOString(),\r\n            path: request.url\r\n          },\r\n          { status: error.statusCode }\r\n        );\r\n      }\r\n\r\n      // Error no controlado\r\n      return NextResponse.json(\r\n        {\r\n          success: false,\r\n          error: 'Error interno del servidor',\r\n          code: 'INTERNAL_ERROR',\r\n          timestamp: new Date().toISOString(),\r\n          path: request.url\r\n        },\r\n        { status: 500 }\r\n      );\r\n    }\r\n  };\r\n}\r\n\r\n// Errores espec\xEDficos\r\nexport const NotFoundError = (resource: string) => \r\n  new ApiError(`${resource} no encontrado`, 404, 'NOT_FOUND');\r\n\r\nexport const ValidationError = (message: string, details?: any) => \r\n  new ApiError(message, 422, 'VALIDATION_ERROR', details);\r\n\r\nexport const UnauthorizedError = (message: string = 'No autorizado') => \r\n  new ApiError(message, 401, 'UNAUTHORIZED');\r\n\r\nexport const ForbiddenError = (message: string = 'Sin permisos') => \r\n  new ApiError(message, 403, 'FORBIDDEN');\r\n\r\nexport const ConflictError = (message: string, details?: any) => \r\n  new ApiError(message, 409, 'CONFLICT', details);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["ApiError", "ConflictError", "ForbiddenError", "NotFoundError", "UnauthorizedError", "ValidationError", "withErrorHandler", "Error", "message", "statusCode", "code", "details", "name", "handler", "request", "context", "error", "console", "NextResponse", "json", "success", "timestamp", "Date", "toISOString", "path", "url", "status", "resource"],
      mappings: "AAAA,8BAA8B;;;;;;;;;;;;QAIjBA;eAAAA;;QA6DAC;eAAAA;;QAHAC;eAAAA;;QATAC;eAAAA;;QAMAC;eAAAA;;QAHAC;eAAAA;;QAxCGC;eAAAA;;;wBAd0B;AAEnC,MAAMN,iBAAiBO;IAC5B,YACEC,OAAe,EACf,AAAOC,aAAqB,GAAG,EAC/B,AAAOC,OAAe,gBAAgB,EACtC,AAAOC,OAAa,CACpB;QACA,KAAK,CAACH,eAJCC,aAAAA,iBACAC,OAAAA,WACAC,UAAAA;QAGP,IAAI,CAACC,IAAI,GAAG;IACd;AACF;AAEO,SAASN,iBAAiBO,OAAiB;IAChD,OAAO,eAAgBC,OAAoB,EAAEC,OAAY;QACvD,IAAI;YACF,OAAO,MAAMF,QAAQC,SAASC;QAChC,EAAE,OAAOC,OAAO;YACdC,QAAQD,KAAK,CAAC,cAAcA;YAE5B,IAAIA,iBAAiBhB,UAAU;gBAC7B,OAAOkB,oBAAY,CAACC,IAAI,CACtB;oBACEC,SAAS;oBACTJ,OAAOA,MAAMR,OAAO;oBACpBE,MAAMM,MAAMN,IAAI;oBAChBC,SAASK,MAAML,OAAO;oBACtBU,WAAW,IAAIC,OAAOC,WAAW;oBACjCC,MAAMV,QAAQW,GAAG;gBACnB,GACA;oBAAEC,QAAQV,MAAMP,UAAU;gBAAC;YAE/B;YAEA,sBAAsB;YACtB,OAAOS,oBAAY,CAACC,IAAI,CACtB;gBACEC,SAAS;gBACTJ,OAAO;gBACPN,MAAM;gBACNW,WAAW,IAAIC,OAAOC,WAAW;gBACjCC,MAAMV,QAAQW,GAAG;YACnB,GACA;gBAAEC,QAAQ;YAAI;QAElB;IACF;AACF;AAGO,MAAMvB,gBAAgB,CAACwB,WAC5B,IAAI3B,SAAS,GAAG2B,SAAS,cAAc,CAAC,EAAE,KAAK;AAE1C,MAAMtB,kBAAkB,CAACG,SAAiBG,UAC/C,IAAIX,SAASQ,SAAS,KAAK,oBAAoBG;AAE1C,MAAMP,oBAAoB,CAACI,UAAkB,eAAe,GACjE,IAAIR,SAASQ,SAAS,KAAK;AAEtB,MAAMN,iBAAiB,CAACM,UAAkB,cAAc,GAC7D,IAAIR,SAASQ,SAAS,KAAK;AAEtB,MAAMP,gBAAgB,CAACO,SAAiBG,UAC7C,IAAIX,SAASQ,SAAS,KAAK,YAAYG"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ae969baad92dda1edc10fe1b858863d15baf6ee5"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2eanr1h61t = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2eanr1h61t();
cov_2eanr1h61t().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2eanr1h61t().f[0]++;
  cov_2eanr1h61t().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2eanr1h61t().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_2eanr1h61t().s[3]++;
_export(exports, {
  get ApiError() {
    /* istanbul ignore next */
    cov_2eanr1h61t().f[1]++;
    cov_2eanr1h61t().s[4]++;
    return ApiError;
  },
  get ConflictError() {
    /* istanbul ignore next */
    cov_2eanr1h61t().f[2]++;
    cov_2eanr1h61t().s[5]++;
    return ConflictError;
  },
  get ForbiddenError() {
    /* istanbul ignore next */
    cov_2eanr1h61t().f[3]++;
    cov_2eanr1h61t().s[6]++;
    return ForbiddenError;
  },
  get NotFoundError() {
    /* istanbul ignore next */
    cov_2eanr1h61t().f[4]++;
    cov_2eanr1h61t().s[7]++;
    return NotFoundError;
  },
  get UnauthorizedError() {
    /* istanbul ignore next */
    cov_2eanr1h61t().f[5]++;
    cov_2eanr1h61t().s[8]++;
    return UnauthorizedError;
  },
  get ValidationError() {
    /* istanbul ignore next */
    cov_2eanr1h61t().f[6]++;
    cov_2eanr1h61t().s[9]++;
    return ValidationError;
  },
  get withErrorHandler() {
    /* istanbul ignore next */
    cov_2eanr1h61t().f[7]++;
    cov_2eanr1h61t().s[10]++;
    return withErrorHandler;
  }
});
const _server =
/* istanbul ignore next */
(cov_2eanr1h61t().s[11]++, require("next/server"));
class ApiError extends Error {
  constructor(message, statusCode =
  /* istanbul ignore next */
  (cov_2eanr1h61t().b[0][0]++, 500), code =
  /* istanbul ignore next */
  (cov_2eanr1h61t().b[1][0]++, 'INTERNAL_ERROR'), details) {
    /* istanbul ignore next */
    cov_2eanr1h61t().f[8]++;
    cov_2eanr1h61t().s[12]++;
    super(message), this.statusCode = statusCode, this.code = code, this.details = details;
    /* istanbul ignore next */
    cov_2eanr1h61t().s[13]++;
    this.name = 'ApiError';
  }
}
function withErrorHandler(handler) {
  /* istanbul ignore next */
  cov_2eanr1h61t().f[9]++;
  cov_2eanr1h61t().s[14]++;
  return async function (request, context) {
    /* istanbul ignore next */
    cov_2eanr1h61t().f[10]++;
    cov_2eanr1h61t().s[15]++;
    try {
      /* istanbul ignore next */
      cov_2eanr1h61t().s[16]++;
      return await handler(request, context);
    } catch (error) {
      /* istanbul ignore next */
      cov_2eanr1h61t().s[17]++;
      console.error('API Error:', error);
      /* istanbul ignore next */
      cov_2eanr1h61t().s[18]++;
      if (error instanceof ApiError) {
        /* istanbul ignore next */
        cov_2eanr1h61t().b[2][0]++;
        cov_2eanr1h61t().s[19]++;
        return _server.NextResponse.json({
          success: false,
          error: error.message,
          code: error.code,
          details: error.details,
          timestamp: new Date().toISOString(),
          path: request.url
        }, {
          status: error.statusCode
        });
      } else
      /* istanbul ignore next */
      {
        cov_2eanr1h61t().b[2][1]++;
      }
      // Error no controlado
      cov_2eanr1h61t().s[20]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Error interno del servidor',
        code: 'INTERNAL_ERROR',
        timestamp: new Date().toISOString(),
        path: request.url
      }, {
        status: 500
      });
    }
  };
}
/* istanbul ignore next */
cov_2eanr1h61t().s[21]++;
const NotFoundError = resource => {
  /* istanbul ignore next */
  cov_2eanr1h61t().f[11]++;
  cov_2eanr1h61t().s[22]++;
  return new ApiError(`${resource} no encontrado`, 404, 'NOT_FOUND');
};
/* istanbul ignore next */
cov_2eanr1h61t().s[23]++;
const ValidationError = (message, details) => {
  /* istanbul ignore next */
  cov_2eanr1h61t().f[12]++;
  cov_2eanr1h61t().s[24]++;
  return new ApiError(message, 422, 'VALIDATION_ERROR', details);
};
/* istanbul ignore next */
cov_2eanr1h61t().s[25]++;
const UnauthorizedError = (message =
/* istanbul ignore next */
(cov_2eanr1h61t().b[3][0]++, 'No autorizado')) => {
  /* istanbul ignore next */
  cov_2eanr1h61t().f[13]++;
  cov_2eanr1h61t().s[26]++;
  return new ApiError(message, 401, 'UNAUTHORIZED');
};
/* istanbul ignore next */
cov_2eanr1h61t().s[27]++;
const ForbiddenError = (message =
/* istanbul ignore next */
(cov_2eanr1h61t().b[4][0]++, 'Sin permisos')) => {
  /* istanbul ignore next */
  cov_2eanr1h61t().f[14]++;
  cov_2eanr1h61t().s[28]++;
  return new ApiError(message, 403, 'FORBIDDEN');
};
/* istanbul ignore next */
cov_2eanr1h61t().s[29]++;
const ConflictError = (message, details) => {
  /* istanbul ignore next */
  cov_2eanr1h61t().f[15]++;
  cov_2eanr1h61t().s[30]++;
  return new ApiError(message, 409, 'CONFLICT', details);
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,