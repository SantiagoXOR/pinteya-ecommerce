{"version":3,"names":["cov_2g62tqrmsc","actualCoverage","s","PATCH","f","runtime","request","session","_config","auth","user","id","b","_server","NextResponse","json","error","status","userId","body","privacy","validatedPrivacy","validatePrivacySettings","data","currentPrefs","fetchError","_supabase","supabaseAdmin","from","select","eq","single","code","console","existingPrefs","preferences","updatedPreferences","updatedPrefs","upsert","user_id","updated_at","Date","toISOString","requestInfo","_activityLogger","getRequestInfo","logPreferenceActivity","updated_settings","Object","keys","profile_visibility","profileVisibility","activity_tracking","activityTracking","marketing_consent","marketingConsent","data_collection","dataCollection","third_party_sharing","thirdPartySharing","analytics_opt_out","analyticsOptOut","success","message","validated","undefined","supportedVisibility","includes","booleanSettings","forEach","setting","length"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\user\\preferences\\privacy\\route.ts"],"sourcesContent":["// Configuración para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - API DE PREFERENCIAS DE PRIVACIDAD\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { auth } from '@/lib/auth/config';\r\nimport { supabaseAdmin } from '@/lib/integrations/supabase';\r\nimport { logPreferenceActivity, getRequestInfo } from '@/lib/activity/activityLogger';\r\n\r\n// PATCH - Actualizar preferencias de privacidad\r\nexport async function PATCH(request: NextRequest) {\r\n  try {\r\n    const session = await auth();\r\n    if (!session?.user?.id) {\r\n      return NextResponse.json(\r\n        { error: 'No autorizado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    const userId = session.user.id;\r\n    const body = await request.json();\r\n    const { privacy } = body;\r\n\r\n    if (!privacy) {\r\n      return NextResponse.json(\r\n        { error: 'Configuración de privacidad requerida' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Validar configuraciones de privacidad\r\n    const validatedPrivacy = validatePrivacySettings(privacy);\r\n    if (!validatedPrivacy) {\r\n      return NextResponse.json(\r\n        { error: 'Configuración de privacidad inválida' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Obtener preferencias actuales\r\n    const { data: currentPrefs, error: fetchError } = await supabaseAdmin\r\n      .from('user_preferences')\r\n      .select('preferences')\r\n      .eq('user_id', userId)\r\n      .single();\r\n\r\n    if (fetchError && fetchError.code !== 'PGRST116') {\r\n      console.error('Error al obtener preferencias actuales:', fetchError);\r\n      return NextResponse.json(\r\n        { error: 'Error al obtener preferencias actuales' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Combinar con preferencias existentes\r\n    const existingPrefs = currentPrefs?.preferences || {};\r\n    const updatedPreferences = {\r\n      ...existingPrefs,\r\n      privacy: {\r\n        ...existingPrefs.privacy,\r\n        ...validatedPrivacy,\r\n      },\r\n    };\r\n\r\n    // Actualizar en la base de datos\r\n    const { data: updatedPrefs, error } = await supabaseAdmin\r\n      .from('user_preferences')\r\n      .upsert({\r\n        user_id: userId,\r\n        preferences: updatedPreferences,\r\n        updated_at: new Date().toISOString(),\r\n      })\r\n      .select()\r\n      .single();\r\n\r\n    if (error) {\r\n      console.error('Error al actualizar preferencias de privacidad:', error);\r\n      return NextResponse.json(\r\n        { error: 'Error al actualizar preferencias de privacidad' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Registrar actividad de seguridad para cambios importantes\r\n    const requestInfo = getRequestInfo(request);\r\n    await logPreferenceActivity(\r\n      userId,\r\n      'update_privacy',\r\n      {\r\n        updated_settings: Object.keys(validatedPrivacy),\r\n        profile_visibility: validatedPrivacy.profileVisibility,\r\n        activity_tracking: validatedPrivacy.activityTracking,\r\n        marketing_consent: validatedPrivacy.marketingConsent,\r\n        data_collection: validatedPrivacy.dataCollection,\r\n        third_party_sharing: validatedPrivacy.thirdPartySharing,\r\n        analytics_opt_out: validatedPrivacy.analyticsOptOut,\r\n      },\r\n      requestInfo\r\n    );\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      privacy: updatedPrefs.preferences.privacy,\r\n      message: 'Preferencias de privacidad actualizadas correctamente',\r\n    });\r\n  } catch (error) {\r\n    console.error('Error en PATCH /api/user/preferences/privacy:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// Función para validar configuraciones de privacidad\r\nfunction validatePrivacySettings(privacy: any): any | null {\r\n  try {\r\n    const validated: any = {};\r\n\r\n    // Validar visibilidad del perfil\r\n    if (privacy.profileVisibility !== undefined) {\r\n      const supportedVisibility = ['public', 'private'];\r\n      if (supportedVisibility.includes(privacy.profileVisibility)) {\r\n        validated.profileVisibility = privacy.profileVisibility;\r\n      }\r\n    }\r\n\r\n    // Validar configuraciones booleanas\r\n    const booleanSettings = [\r\n      'activityTracking',\r\n      'marketingConsent',\r\n      'dataCollection',\r\n      'thirdPartySharing',\r\n      'analyticsOptOut',\r\n    ];\r\n\r\n    booleanSettings.forEach(setting => {\r\n      if (typeof privacy[setting] === 'boolean') {\r\n        validated[setting] = privacy[setting];\r\n      }\r\n    });\r\n\r\n    return Object.keys(validated).length > 0 ? validated : null;\r\n  } catch (error) {\r\n    console.error('Error al validar configuraciones de privacidad:', error);\r\n    return null;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]}