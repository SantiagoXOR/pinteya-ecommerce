6e02e99af781e7642a6dd8c33d4a3502
// ConfiguraciÃ³n para Node.js Runtime
"use strict";

/* istanbul ignore next */
function cov_2g62tqrmsc() {
  var path = "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\user\\preferences\\privacy\\route.ts";
  var hash = "69379e1125ba20f3fb23af2453a43b4c5581ca76";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\user\\preferences\\privacy\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 21
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 23
        }
      },
      "6": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 38
        }
      },
      "7": {
        start: {
          line: 21,
          column: 16
        },
        end: {
          line: 21,
          column: 57
        }
      },
      "8": {
        start: {
          line: 22,
          column: 18
        },
        end: {
          line: 22,
          column: 69
        }
      },
      "9": {
        start: {
          line: 23,
          column: 24
        },
        end: {
          line: 23,
          column: 77
        }
      },
      "10": {
        start: {
          line: 24,
          column: 16
        },
        end: {
          line: 24,
          column: 24
        }
      },
      "11": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 110,
          column: 5
        }
      },
      "12": {
        start: {
          line: 27,
          column: 24
        },
        end: {
          line: 27,
          column: 49
        }
      },
      "13": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 34,
          column: 9
        }
      },
      "14": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 33,
          column: 15
        }
      },
      "15": {
        start: {
          line: 35,
          column: 23
        },
        end: {
          line: 35,
          column: 38
        }
      },
      "16": {
        start: {
          line: 36,
          column: 21
        },
        end: {
          line: 36,
          column: 41
        }
      },
      "17": {
        start: {
          line: 37,
          column: 28
        },
        end: {
          line: 37,
          column: 32
        }
      },
      "18": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 44,
          column: 9
        }
      },
      "19": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 43,
          column: 15
        }
      },
      "20": {
        start: {
          line: 46,
          column: 33
        },
        end: {
          line: 46,
          column: 65
        }
      },
      "21": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 53,
          column: 9
        }
      },
      "22": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 52,
          column: 15
        }
      },
      "23": {
        start: {
          line: 55,
          column: 58
        },
        end: {
          line: 55,
          column: 165
        }
      },
      "24": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 63,
          column: 9
        }
      },
      "25": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 81
        }
      },
      "26": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 62,
          column: 15
        }
      },
      "27": {
        start: {
          line: 65,
          column: 30
        },
        end: {
          line: 65,
          column: 61
        }
      },
      "28": {
        start: {
          line: 66,
          column: 35
        },
        end: {
          line: 72,
          column: 9
        }
      },
      "29": {
        start: {
          line: 74,
          column: 46
        },
        end: {
          line: 78,
          column: 28
        }
      },
      "30": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 86,
          column: 9
        }
      },
      "31": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 84
        }
      },
      "32": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 85,
          column: 15
        }
      },
      "33": {
        start: {
          line: 88,
          column: 28
        },
        end: {
          line: 88,
          column: 72
        }
      },
      "34": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 97,
          column: 24
        }
      },
      "35": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 102,
          column: 11
        }
      },
      "36": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 104,
          column: 78
        }
      },
      "37": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 109,
          column: 11
        }
      },
      "38": {
        start: {
          line: 114,
          column: 4
        },
        end: {
          line: 143,
          column: 5
        }
      },
      "39": {
        start: {
          line: 115,
          column: 26
        },
        end: {
          line: 115,
          column: 28
        }
      },
      "40": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 125,
          column: 9
        }
      },
      "41": {
        start: {
          line: 118,
          column: 40
        },
        end: {
          line: 121,
          column: 13
        }
      },
      "42": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 124,
          column: 13
        }
      },
      "43": {
        start: {
          line: 123,
          column: 16
        },
        end: {
          line: 123,
          column: 72
        }
      },
      "44": {
        start: {
          line: 127,
          column: 32
        },
        end: {
          line: 133,
          column: 9
        }
      },
      "45": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 138,
          column: 11
        }
      },
      "46": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 137,
          column: 13
        }
      },
      "47": {
        start: {
          line: 136,
          column: 16
        },
        end: {
          line: 136,
          column: 54
        }
      },
      "48": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 139,
          column: 68
        }
      },
      "49": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 141,
          column: 80
        }
      },
      "50": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 142,
          column: 20
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 17
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 19
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "PATCH",
        decl: {
          start: {
            line: 25,
            column: 15
          },
          end: {
            line: 25,
            column: 20
          }
        },
        loc: {
          start: {
            line: 25,
            column: 30
          },
          end: {
            line: 111,
            column: 1
          }
        },
        line: 25
      },
      "4": {
        name: "validatePrivacySettings",
        decl: {
          start: {
            line: 113,
            column: 9
          },
          end: {
            line: 113,
            column: 32
          }
        },
        loc: {
          start: {
            line: 113,
            column: 42
          },
          end: {
            line: 144,
            column: 1
          }
        },
        line: 113
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 134,
            column: 32
          },
          end: {
            line: 134,
            column: 33
          }
        },
        loc: {
          start: {
            line: 134,
            column: 43
          },
          end: {
            line: 138,
            column: 9
          }
        },
        line: 134
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "1": {
        loc: {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "2": {
        loc: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "3": {
        loc: {
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "4": {
        loc: {
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 56,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 56,
            column: 22
          }
        }, {
          start: {
            line: 56,
            column: 26
          },
          end: {
            line: 56,
            column: 56
          }
        }],
        line: 56
      },
      "5": {
        loc: {
          start: {
            line: 65,
            column: 30
          },
          end: {
            line: 65,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 30
          },
          end: {
            line: 65,
            column: 55
          }
        }, {
          start: {
            line: 65,
            column: 59
          },
          end: {
            line: 65,
            column: 61
          }
        }],
        line: 65
      },
      "6": {
        loc: {
          start: {
            line: 79,
            column: 8
          },
          end: {
            line: 86,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 79,
            column: 8
          },
          end: {
            line: 86,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 79
      },
      "7": {
        loc: {
          start: {
            line: 117,
            column: 8
          },
          end: {
            line: 125,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 117,
            column: 8
          },
          end: {
            line: 125,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 117
      },
      "8": {
        loc: {
          start: {
            line: 122,
            column: 12
          },
          end: {
            line: 124,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 12
          },
          end: {
            line: 124,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 122
      },
      "9": {
        loc: {
          start: {
            line: 135,
            column: 12
          },
          end: {
            line: 137,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 135,
            column: 12
          },
          end: {
            line: 137,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 135
      },
      "10": {
        loc: {
          start: {
            line: 139,
            column: 15
          },
          end: {
            line: 139,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 139,
            column: 51
          },
          end: {
            line: 139,
            column: 60
          }
        }, {
          start: {
            line: 139,
            column: 63
          },
          end: {
            line: 139,
            column: 67
          }
        }],
        line: 139
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\user\\preferences\\privacy\\route.ts"],
      sourcesContent: ["// Configuraci\xF3n para Node.js Runtime\r\nexport const runtime = 'nodejs';\r\n\r\n// ===================================\r\n// PINTEYA E-COMMERCE - API DE PREFERENCIAS DE PRIVACIDAD\r\n// ===================================\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { auth } from '@/lib/auth/config';\r\nimport { supabaseAdmin } from '@/lib/integrations/supabase';\r\nimport { logPreferenceActivity, getRequestInfo } from '@/lib/activity/activityLogger';\r\n\r\n// PATCH - Actualizar preferencias de privacidad\r\nexport async function PATCH(request: NextRequest) {\r\n  try {\r\n    const session = await auth();\r\n    if (!session?.user?.id) {\r\n      return NextResponse.json(\r\n        { error: 'No autorizado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    const userId = session.user.id;\r\n    const body = await request.json();\r\n    const { privacy } = body;\r\n\r\n    if (!privacy) {\r\n      return NextResponse.json(\r\n        { error: 'Configuraci\xF3n de privacidad requerida' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Validar configuraciones de privacidad\r\n    const validatedPrivacy = validatePrivacySettings(privacy);\r\n    if (!validatedPrivacy) {\r\n      return NextResponse.json(\r\n        { error: 'Configuraci\xF3n de privacidad inv\xE1lida' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Obtener preferencias actuales\r\n    const { data: currentPrefs, error: fetchError } = await supabaseAdmin\r\n      .from('user_preferences')\r\n      .select('preferences')\r\n      .eq('user_id', userId)\r\n      .single();\r\n\r\n    if (fetchError && fetchError.code !== 'PGRST116') {\r\n      console.error('Error al obtener preferencias actuales:', fetchError);\r\n      return NextResponse.json(\r\n        { error: 'Error al obtener preferencias actuales' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Combinar con preferencias existentes\r\n    const existingPrefs = currentPrefs?.preferences || {};\r\n    const updatedPreferences = {\r\n      ...existingPrefs,\r\n      privacy: {\r\n        ...existingPrefs.privacy,\r\n        ...validatedPrivacy,\r\n      },\r\n    };\r\n\r\n    // Actualizar en la base de datos\r\n    const { data: updatedPrefs, error } = await supabaseAdmin\r\n      .from('user_preferences')\r\n      .upsert({\r\n        user_id: userId,\r\n        preferences: updatedPreferences,\r\n        updated_at: new Date().toISOString(),\r\n      })\r\n      .select()\r\n      .single();\r\n\r\n    if (error) {\r\n      console.error('Error al actualizar preferencias de privacidad:', error);\r\n      return NextResponse.json(\r\n        { error: 'Error al actualizar preferencias de privacidad' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    // Registrar actividad de seguridad para cambios importantes\r\n    const requestInfo = getRequestInfo(request);\r\n    await logPreferenceActivity(\r\n      userId,\r\n      'update_privacy',\r\n      {\r\n        updated_settings: Object.keys(validatedPrivacy),\r\n        profile_visibility: validatedPrivacy.profileVisibility,\r\n        activity_tracking: validatedPrivacy.activityTracking,\r\n        marketing_consent: validatedPrivacy.marketingConsent,\r\n        data_collection: validatedPrivacy.dataCollection,\r\n        third_party_sharing: validatedPrivacy.thirdPartySharing,\r\n        analytics_opt_out: validatedPrivacy.analyticsOptOut,\r\n      },\r\n      requestInfo\r\n    );\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      privacy: updatedPrefs.preferences.privacy,\r\n      message: 'Preferencias de privacidad actualizadas correctamente',\r\n    });\r\n  } catch (error) {\r\n    console.error('Error en PATCH /api/user/preferences/privacy:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// Funci\xF3n para validar configuraciones de privacidad\r\nfunction validatePrivacySettings(privacy: any): any | null {\r\n  try {\r\n    const validated: any = {};\r\n\r\n    // Validar visibilidad del perfil\r\n    if (privacy.profileVisibility !== undefined) {\r\n      const supportedVisibility = ['public', 'private'];\r\n      if (supportedVisibility.includes(privacy.profileVisibility)) {\r\n        validated.profileVisibility = privacy.profileVisibility;\r\n      }\r\n    }\r\n\r\n    // Validar configuraciones booleanas\r\n    const booleanSettings = [\r\n      'activityTracking',\r\n      'marketingConsent',\r\n      'dataCollection',\r\n      'thirdPartySharing',\r\n      'analyticsOptOut',\r\n    ];\r\n\r\n    booleanSettings.forEach(setting => {\r\n      if (typeof privacy[setting] === 'boolean') {\r\n        validated[setting] = privacy[setting];\r\n      }\r\n    });\r\n\r\n    return Object.keys(validated).length > 0 ? validated : null;\r\n  } catch (error) {\r\n    console.error('Error al validar configuraciones de privacidad:', error);\r\n    return null;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],
      names: ["PATCH", "runtime", "request", "session", "auth", "user", "id", "NextResponse", "json", "error", "status", "userId", "body", "privacy", "validatedPrivacy", "validatePrivacySettings", "data", "currentPrefs", "fetchError", "supabaseAdmin", "from", "select", "eq", "single", "code", "console", "existingPrefs", "preferences", "updatedPreferences", "updatedPrefs", "upsert", "user_id", "updated_at", "Date", "toISOString", "requestInfo", "getRequestInfo", "logPreferenceActivity", "updated_settings", "Object", "keys", "profile_visibility", "profileVisibility", "activity_tracking", "activityTracking", "marketing_consent", "marketingConsent", "data_collection", "dataCollection", "third_party_sharing", "thirdPartySharing", "analytics_opt_out", "analyticsOptOut", "success", "message", "validated", "undefined", "supportedVisibility", "includes", "booleanSettings", "forEach", "setting", "length"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "69379e1125ba20f3fb23af2453a43b4c5581ca76"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2g62tqrmsc = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2g62tqrmsc();
cov_2g62tqrmsc().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2g62tqrmsc().f[0]++;
  cov_2g62tqrmsc().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2g62tqrmsc().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_2g62tqrmsc().s[3]++;
_export(exports, {
  get PATCH() {
    /* istanbul ignore next */
    cov_2g62tqrmsc().f[1]++;
    cov_2g62tqrmsc().s[4]++;
    return PATCH;
  },
  get runtime() {
    /* istanbul ignore next */
    cov_2g62tqrmsc().f[2]++;
    cov_2g62tqrmsc().s[5]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_2g62tqrmsc().s[6]++, require("next/server"));
const _config =
/* istanbul ignore next */
(cov_2g62tqrmsc().s[7]++, require("../../../../../lib/auth/config"));
const _supabase =
/* istanbul ignore next */
(cov_2g62tqrmsc().s[8]++, require("../../../../../lib/integrations/supabase"));
const _activityLogger =
/* istanbul ignore next */
(cov_2g62tqrmsc().s[9]++, require("../../../../../lib/activity/activityLogger"));
const runtime =
/* istanbul ignore next */
(cov_2g62tqrmsc().s[10]++, 'nodejs');
async function PATCH(request) {
  /* istanbul ignore next */
  cov_2g62tqrmsc().f[3]++;
  cov_2g62tqrmsc().s[11]++;
  try {
    const session =
    /* istanbul ignore next */
    (cov_2g62tqrmsc().s[12]++, await (0, _config.auth)());
    /* istanbul ignore next */
    cov_2g62tqrmsc().s[13]++;
    if (!session?.user?.id) {
      /* istanbul ignore next */
      cov_2g62tqrmsc().b[0][0]++;
      cov_2g62tqrmsc().s[14]++;
      return _server.NextResponse.json({
        error: 'No autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_2g62tqrmsc().b[0][1]++;
    }
    const userId =
    /* istanbul ignore next */
    (cov_2g62tqrmsc().s[15]++, session.user.id);
    const body =
    /* istanbul ignore next */
    (cov_2g62tqrmsc().s[16]++, await request.json());
    const {
      privacy
    } =
    /* istanbul ignore next */
    (cov_2g62tqrmsc().s[17]++, body);
    /* istanbul ignore next */
    cov_2g62tqrmsc().s[18]++;
    if (!privacy) {
      /* istanbul ignore next */
      cov_2g62tqrmsc().b[1][0]++;
      cov_2g62tqrmsc().s[19]++;
      return _server.NextResponse.json({
        error: 'ConfiguraciÃ³n de privacidad requerida'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_2g62tqrmsc().b[1][1]++;
    }
    // Validar configuraciones de privacidad
    const validatedPrivacy =
    /* istanbul ignore next */
    (cov_2g62tqrmsc().s[20]++, validatePrivacySettings(privacy));
    /* istanbul ignore next */
    cov_2g62tqrmsc().s[21]++;
    if (!validatedPrivacy) {
      /* istanbul ignore next */
      cov_2g62tqrmsc().b[2][0]++;
      cov_2g62tqrmsc().s[22]++;
      return _server.NextResponse.json({
        error: 'ConfiguraciÃ³n de privacidad invÃ¡lida'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_2g62tqrmsc().b[2][1]++;
    }
    // Obtener preferencias actuales
    const {
      data: currentPrefs,
      error: fetchError
    } =
    /* istanbul ignore next */
    (cov_2g62tqrmsc().s[23]++, await _supabase.supabaseAdmin.from('user_preferences').select('preferences').eq('user_id', userId).single());
    /* istanbul ignore next */
    cov_2g62tqrmsc().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_2g62tqrmsc().b[4][0]++, fetchError) &&
    /* istanbul ignore next */
    (cov_2g62tqrmsc().b[4][1]++, fetchError.code !== 'PGRST116')) {
      /* istanbul ignore next */
      cov_2g62tqrmsc().b[3][0]++;
      cov_2g62tqrmsc().s[25]++;
      console.error('Error al obtener preferencias actuales:', fetchError);
      /* istanbul ignore next */
      cov_2g62tqrmsc().s[26]++;
      return _server.NextResponse.json({
        error: 'Error al obtener preferencias actuales'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_2g62tqrmsc().b[3][1]++;
    }
    // Combinar con preferencias existentes
    const existingPrefs =
    /* istanbul ignore next */
    (cov_2g62tqrmsc().s[27]++,
    /* istanbul ignore next */
    (cov_2g62tqrmsc().b[5][0]++, currentPrefs?.preferences) ||
    /* istanbul ignore next */
    (cov_2g62tqrmsc().b[5][1]++, {}));
    const updatedPreferences =
    /* istanbul ignore next */
    (cov_2g62tqrmsc().s[28]++, {
      ...existingPrefs,
      privacy: {
        ...existingPrefs.privacy,
        ...validatedPrivacy
      }
    });
    // Actualizar en la base de datos
    const {
      data: updatedPrefs,
      error
    } =
    /* istanbul ignore next */
    (cov_2g62tqrmsc().s[29]++, await _supabase.supabaseAdmin.from('user_preferences').upsert({
      user_id: userId,
      preferences: updatedPreferences,
      updated_at: new Date().toISOString()
    }).select().single());
    /* istanbul ignore next */
    cov_2g62tqrmsc().s[30]++;
    if (error) {
      /* istanbul ignore next */
      cov_2g62tqrmsc().b[6][0]++;
      cov_2g62tqrmsc().s[31]++;
      console.error('Error al actualizar preferencias de privacidad:', error);
      /* istanbul ignore next */
      cov_2g62tqrmsc().s[32]++;
      return _server.NextResponse.json({
        error: 'Error al actualizar preferencias de privacidad'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_2g62tqrmsc().b[6][1]++;
    }
    // Registrar actividad de seguridad para cambios importantes
    const requestInfo =
    /* istanbul ignore next */
    (cov_2g62tqrmsc().s[33]++, (0, _activityLogger.getRequestInfo)(request));
    /* istanbul ignore next */
    cov_2g62tqrmsc().s[34]++;
    await (0, _activityLogger.logPreferenceActivity)(userId, 'update_privacy', {
      updated_settings: Object.keys(validatedPrivacy),
      profile_visibility: validatedPrivacy.profileVisibility,
      activity_tracking: validatedPrivacy.activityTracking,
      marketing_consent: validatedPrivacy.marketingConsent,
      data_collection: validatedPrivacy.dataCollection,
      third_party_sharing: validatedPrivacy.thirdPartySharing,
      analytics_opt_out: validatedPrivacy.analyticsOptOut
    }, requestInfo);
    /* istanbul ignore next */
    cov_2g62tqrmsc().s[35]++;
    return _server.NextResponse.json({
      success: true,
      privacy: updatedPrefs.preferences.privacy,
      message: 'Preferencias de privacidad actualizadas correctamente'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2g62tqrmsc().s[36]++;
    console.error('Error en PATCH /api/user/preferences/privacy:', error);
    /* istanbul ignore next */
    cov_2g62tqrmsc().s[37]++;
    return _server.NextResponse.json({
      error: 'Error interno del servidor'
    }, {
      status: 500
    });
  }
}
// FunciÃ³n para validar configuraciones de privacidad
function validatePrivacySettings(privacy) {
  /* istanbul ignore next */
  cov_2g62tqrmsc().f[4]++;
  cov_2g62tqrmsc().s[38]++;
  try {
    const validated =
    /* istanbul ignore next */
    (cov_2g62tqrmsc().s[39]++, {});
    // Validar visibilidad del perfil
    /* istanbul ignore next */
    cov_2g62tqrmsc().s[40]++;
    if (privacy.profileVisibility !== undefined) {
      /* istanbul ignore next */
      cov_2g62tqrmsc().b[7][0]++;
      const supportedVisibility =
      /* istanbul ignore next */
      (cov_2g62tqrmsc().s[41]++, ['public', 'private']);
      /* istanbul ignore next */
      cov_2g62tqrmsc().s[42]++;
      if (supportedVisibility.includes(privacy.profileVisibility)) {
        /* istanbul ignore next */
        cov_2g62tqrmsc().b[8][0]++;
        cov_2g62tqrmsc().s[43]++;
        validated.profileVisibility = privacy.profileVisibility;
      } else
      /* istanbul ignore next */
      {
        cov_2g62tqrmsc().b[8][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_2g62tqrmsc().b[7][1]++;
    }
    // Validar configuraciones booleanas
    const booleanSettings =
    /* istanbul ignore next */
    (cov_2g62tqrmsc().s[44]++, ['activityTracking', 'marketingConsent', 'dataCollection', 'thirdPartySharing', 'analyticsOptOut']);
    /* istanbul ignore next */
    cov_2g62tqrmsc().s[45]++;
    booleanSettings.forEach(setting => {
      /* istanbul ignore next */
      cov_2g62tqrmsc().f[5]++;
      cov_2g62tqrmsc().s[46]++;
      if (typeof privacy[setting] === 'boolean') {
        /* istanbul ignore next */
        cov_2g62tqrmsc().b[9][0]++;
        cov_2g62tqrmsc().s[47]++;
        validated[setting] = privacy[setting];
      } else
      /* istanbul ignore next */
      {
        cov_2g62tqrmsc().b[9][1]++;
      }
    });
    /* istanbul ignore next */
    cov_2g62tqrmsc().s[48]++;
    return Object.keys(validated).length > 0 ?
    /* istanbul ignore next */
    (cov_2g62tqrmsc().b[10][0]++, validated) :
    /* istanbul ignore next */
    (cov_2g62tqrmsc().b[10][1]++, null);
  } catch (error) {
    /* istanbul ignore next */
    cov_2g62tqrmsc().s[49]++;
    console.error('Error al validar configuraciones de privacidad:', error);
    /* istanbul ignore next */
    cov_2g62tqrmsc().s[50]++;
    return null;
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,