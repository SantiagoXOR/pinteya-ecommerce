{"version":3,"names":["cov_2h8io3dtj3","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","GET","PUT","request","params","routeId","id","routeData","total_distance","estimated_time","status","shipments","orderNumber","tracking_number","customer_name","customer_phone","destination","address","city","postal_code","coordinates","lat","lng","items","quantity","weight","estimated_delivery_time","requires_signature","waypoints","driver","created_at","Date","toISOString","updated_at","_server","NextResponse","json","error","console","session","_auth","auth","user","email","body","current_shipment_index","supabase","_server1","createClient","data","driverError","from","select","eq","single","updateData","updatedRoute","updateError","update"],"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\app\\api\\driver\\routes\\[id]\\route.ts"],"sourcesContent":["/**\r\n * API para obtener detalles específicos de una ruta asignada al driver\r\n * GET /api/driver/routes/[id]\r\n */\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { auth } from '@/auth';\r\nimport { createClient } from '@/lib/integrations/supabase/server';\r\n\r\nexport async function GET(\r\n  request: NextRequest,\r\n  { params }: { params: { id: string } }\r\n) {\r\n  try {\r\n    const routeId = params.id;\r\n\r\n    // Para pruebas, devolver datos de ejemplo\r\n    const routeData = {\r\n      id: routeId,\r\n      name: `Ruta de Entrega #${routeId}`,\r\n      total_distance: 35.6,\r\n      estimated_time: 2640, // 44 minutos en segundos\r\n      status: 'active',\r\n      shipments: [\r\n        {\r\n          id: routeId,\r\n          orderNumber: `#${routeId}`,\r\n          tracking_number: `TRK-${routeId}`,\r\n          customer_name: 'Cliente de Prueba',\r\n          customer_phone: '+54 351 123-4567',\r\n          destination: {\r\n            address: 'Av. Colón 1234, Piso 2, Depto A, Córdoba, Córdoba 5000',\r\n            city: 'Córdoba',\r\n            postal_code: '5000',\r\n            coordinates: {\r\n              lat: -31.4084841,\r\n              lng: -64.1917654\r\n            }\r\n          },\r\n          items: [\r\n            {\r\n              name: 'Producto de Prueba',\r\n              quantity: 1,\r\n              weight: 1\r\n            }\r\n          ],\r\n          status: 'confirmed',\r\n          estimated_delivery_time: '14:00 - 18:00',\r\n          requires_signature: false\r\n        }\r\n      ],\r\n      waypoints: [\r\n        {\r\n          lat: -31.4084841,\r\n          lng: -64.1917654\r\n        }\r\n      ],\r\n      driver: {\r\n        id: 'driver-1',\r\n        name: 'Santiago Martinez'\r\n      },\r\n      created_at: new Date().toISOString(),\r\n      updated_at: new Date().toISOString()\r\n    };\r\n\r\n    return NextResponse.json(routeData);\r\n\r\n\r\n\r\n  } catch (error) {\r\n    console.error('Error in driver route API:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\nexport async function PUT(\r\n  request: NextRequest,\r\n  { params }: { params: { id: string } }\r\n) {\r\n  try {\r\n    // Verificar autenticación\r\n    const session = await auth();\r\n    \r\n    if (!session?.user?.email) {\r\n      return NextResponse.json(\r\n        { error: 'No autorizado' },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    const routeId = params.id;\r\n    const body = await request.json();\r\n    const { status, shipments, current_shipment_index } = body;\r\n\r\n    const supabase = await createClient();\r\n\r\n    // Obtener información del driver\r\n    const { data: driver, error: driverError } = await supabase\r\n      .from('drivers')\r\n      .select('id')\r\n      .eq('email', session.user.email)\r\n      .single();\r\n\r\n    if (driverError || !driver) {\r\n      return NextResponse.json(\r\n        { error: 'Driver no encontrado' },\r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    // Actualizar la ruta\r\n    const updateData: any = {\r\n      updated_at: new Date().toISOString()\r\n    };\r\n\r\n    if (status) updateData.status = status;\r\n    if (shipments) updateData.shipments = shipments;\r\n\r\n    const { data: updatedRoute, error: updateError } = await supabase\r\n      .from('optimized_routes')\r\n      .update(updateData)\r\n      .eq('id', routeId)\r\n      .eq('driver_id', driver.id)\r\n      .select()\r\n      .single();\r\n\r\n    if (updateError) {\r\n      console.error('Error updating route:', updateError);\r\n      return NextResponse.json(\r\n        { error: 'Error actualizando ruta' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    return NextResponse.json(updatedRoute);\r\n\r\n  } catch (error) {\r\n    console.error('Error in driver route update API:', error);\r\n    return NextResponse.json(\r\n      { error: 'Error interno del servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n"],"mappings":"AAAA;;;GAGC;;AAAA;AAAA,SAAAA,eAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;IAAA;IAAAE,KAAA;MAAA;QAAAC,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;IAAA;IAAAO,SAAA;MAAA;QAAAD,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;IAAA;IAAAW,CAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;IAAA;IAAAC,CAAA;MAAA;MAAA;MAAA;MAAA;MAAA;IAAA;IAAAC,CAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;IAAA;IAAAC,cAAA;MAAAC,OAAA;MAAAC,OAAA;MAAAC,cAAA;MAAAC,KAAA;MAAAC,QAAA;IAAA;IAAAC,eAAA;IAAA3B,IAAA;EAAA;EAAA,IAAA4B,QAAA,GAAA3B,MAAA,CAAAE,GAAA,MAAAF,MAAA,CAAAE,GAAA;EAAA,KAAAyB,QAAA,CAAA7B,IAAA,KAAA6B,QAAA,CAAA7B,IAAA,EAAAC,IAAA,KAAAA,IAAA;IAAA4B,QAAA,CAAA7B,IAAA,IAAAK,YAAA;EAAA;EAAA,IAAAyB,cAAA,GAAAD,QAAA,CAAA7B,IAAA;EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAMqB+B,IAAA;IAAA;IAAAhC,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;WAAAY,GAAA;;MAqEAC,IAAA;IAAA;IAAAjC,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;WAAAa,GAAA;;;;;kCAzEoB;;;kCACrB;;;kCACQ;AAEtB,eAAeD,IACpBE,OAAoB,EACpB;EAAEC;AAAM,CAA8B;EAAA;EAAAnC,cAAA,GAAAqB,CAAA;EAAArB,cAAA,GAAAoB,CAAA;EAEtC,IAAI;IACF,MAAMgB,OAAA;IAAA;IAAA,CAAApC,cAAA,GAAAoB,CAAA,QAAUe,MAAA,CAAOE,EAAE;IAEzB;IACA,MAAMC,SAAA;IAAA;IAAA,CAAAtC,cAAA,GAAAoB,CAAA,QAAY;MAChBiB,EAAA,EAAID,OAAA;MACJvB,IAAA,EAAM,oBAAoBuB,OAAA,EAAS;MACnCG,cAAA,EAAgB;MAChBC,cAAA,EAAgB;MAChBC,MAAA,EAAQ;MACRC,SAAA,EAAW,CACT;QACEL,EAAA,EAAID,OAAA;QACJO,WAAA,EAAa,IAAIP,OAAA,EAAS;QAC1BQ,eAAA,EAAiB,OAAOR,OAAA,EAAS;QACjCS,aAAA,EAAe;QACfC,cAAA,EAAgB;QAChBC,WAAA,EAAa;UACXC,OAAA,EAAS;UACTC,IAAA,EAAM;UACNC,WAAA,EAAa;UACbC,WAAA,EAAa;YACXC,GAAA,EAAK,CAAC;YACNC,GAAA,EAAK,CAAC;UACR;QACF;QACAC,KAAA,EAAO,CACL;UACEzC,IAAA,EAAM;UACN0C,QAAA,EAAU;UACVC,MAAA,EAAQ;QACV,EACD;QACDf,MAAA,EAAQ;QACRgB,uBAAA,EAAyB;QACzBC,kBAAA,EAAoB;MACtB,EACD;MACDC,SAAA,EAAW,CACT;QACEP,GAAA,EAAK,CAAC;QACNC,GAAA,EAAK,CAAC;MACR,EACD;MACDO,MAAA,EAAQ;QACNvB,EAAA,EAAI;QACJxB,IAAA,EAAM;MACR;MACAgD,UAAA,EAAY,IAAIC,IAAA,GAAOC,WAAW;MAClCC,UAAA,EAAY,IAAIF,IAAA,GAAOC,WAAW;IACpC;IAAA;IAAA/D,cAAA,GAAAoB,CAAA;IAEA,OAAO6C,OAAA,CAAAC,YAAY,CAACC,IAAI,CAAC7B,SAAA;EAI3B,EAAE,OAAO8B,KAAA,EAAO;IAAA;IAAApE,cAAA,GAAAoB,CAAA;IACdiD,OAAA,CAAQD,KAAK,CAAC,8BAA8BA,KAAA;IAAA;IAAApE,cAAA,GAAAoB,CAAA;IAC5C,OAAO6C,OAAA,CAAAC,YAAY,CAACC,IAAI,CACtB;MAAEC,KAAA,EAAO;IAA6B,GACtC;MAAE3B,MAAA,EAAQ;IAAI;EAElB;AACF;AAEO,eAAeR,IACpBC,OAAoB,EACpB;EAAEC;AAAM,CAA8B;EAAA;EAAAnC,cAAA,GAAAqB,CAAA;EAAArB,cAAA,GAAAoB,CAAA;EAEtC,IAAI;IACF;IACA,MAAMkD,OAAA;IAAA;IAAA,CAAAtE,cAAA,GAAAoB,CAAA,QAAU,MAAM,IAAAmD,KAAA,CAAAC,IAAI;IAAA;IAAAxE,cAAA,GAAAoB,CAAA;IAE1B,IAAI,CAACkD,OAAA,EAASG,IAAA,EAAMC,KAAA,EAAO;MAAA;MAAA1E,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MACzB,OAAO6C,OAAA,CAAAC,YAAY,CAACC,IAAI,CACtB;QAAEC,KAAA,EAAO;MAAgB,GACzB;QAAE3B,MAAA,EAAQ;MAAI;IAElB;IAAA;IAAA;MAAAzC,cAAA,GAAAsB,CAAA;IAAA;IAEA,MAAMc,OAAA;IAAA;IAAA,CAAApC,cAAA,GAAAoB,CAAA,QAAUe,MAAA,CAAOE,EAAE;IACzB,MAAMsC,IAAA;IAAA;IAAA,CAAA3E,cAAA,GAAAoB,CAAA,QAAO,MAAMc,OAAA,CAAQiC,IAAI;IAC/B,MAAM;MAAE1B,MAAM;MAAEC,SAAS;MAAEkC;IAAsB,CAAE;IAAA;IAAA,CAAA5E,cAAA,GAAAoB,CAAA,QAAGuD,IAAA;IAEtD,MAAME,QAAA;IAAA;IAAA,CAAA7E,cAAA,GAAAoB,CAAA,QAAW,MAAM,IAAA0D,QAAA,CAAAC,YAAY;IAEnC;IACA,MAAM;MAAEC,IAAA,EAAMpB,MAAM;MAAEQ,KAAA,EAAOa;IAAW,CAAE;IAAA;IAAA,CAAAjF,cAAA,GAAAoB,CAAA,QAAG,MAAMyD,QAAA,CAChDK,IAAI,CAAC,WACLC,MAAM,CAAC,MACPC,EAAE,CAAC,SAASd,OAAA,CAAQG,IAAI,CAACC,KAAK,EAC9BW,MAAM;IAAA;IAAArF,cAAA,GAAAoB,CAAA;IAET;IAAI;IAAA,CAAApB,cAAA,GAAAsB,CAAA,UAAA2D,WAAA;IAAA;IAAA,CAAAjF,cAAA,GAAAsB,CAAA,UAAe,CAACsC,MAAA,GAAQ;MAAA;MAAA5D,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MAC1B,OAAO6C,OAAA,CAAAC,YAAY,CAACC,IAAI,CACtB;QAAEC,KAAA,EAAO;MAAuB,GAChC;QAAE3B,MAAA,EAAQ;MAAI;IAElB;IAAA;IAAA;MAAAzC,cAAA,GAAAsB,CAAA;IAAA;IAEA;IACA,MAAMgE,UAAA;IAAA;IAAA,CAAAtF,cAAA,GAAAoB,CAAA,QAAkB;MACtB4C,UAAA,EAAY,IAAIF,IAAA,GAAOC,WAAW;IACpC;IAAA;IAAA/D,cAAA,GAAAoB,CAAA;IAEA,IAAIqB,MAAA,EAAQ;MAAA;MAAAzC,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MAAAkE,UAAA,CAAW7C,MAAM,GAAGA,MAAA;IAAA;IAAA;IAAA;MAAAzC,cAAA,GAAAsB,CAAA;IAAA;IAAAtB,cAAA,GAAAoB,CAAA;IAChC,IAAIsB,SAAA,EAAW;MAAA;MAAA1C,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MAAAkE,UAAA,CAAW5C,SAAS,GAAGA,SAAA;IAAA;IAAA;IAAA;MAAA1C,cAAA,GAAAsB,CAAA;IAAA;IAEtC,MAAM;MAAE0D,IAAA,EAAMO,YAAY;MAAEnB,KAAA,EAAOoB;IAAW,CAAE;IAAA;IAAA,CAAAxF,cAAA,GAAAoB,CAAA,QAAG,MAAMyD,QAAA,CACtDK,IAAI,CAAC,oBACLO,MAAM,CAACH,UAAA,EACPF,EAAE,CAAC,MAAMhD,OAAA,EACTgD,EAAE,CAAC,aAAaxB,MAAA,CAAOvB,EAAE,EACzB8C,MAAM,GACNE,MAAM;IAAA;IAAArF,cAAA,GAAAoB,CAAA;IAET,IAAIoE,WAAA,EAAa;MAAA;MAAAxF,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MACfiD,OAAA,CAAQD,KAAK,CAAC,yBAAyBoB,WAAA;MAAA;MAAAxF,cAAA,GAAAoB,CAAA;MACvC,OAAO6C,OAAA,CAAAC,YAAY,CAACC,IAAI,CACtB;QAAEC,KAAA,EAAO;MAA0B,GACnC;QAAE3B,MAAA,EAAQ;MAAI;IAElB;IAAA;IAAA;MAAAzC,cAAA,GAAAsB,CAAA;IAAA;IAAAtB,cAAA,GAAAoB,CAAA;IAEA,OAAO6C,OAAA,CAAAC,YAAY,CAACC,IAAI,CAACoB,YAAA;EAE3B,EAAE,OAAOnB,KAAA,EAAO;IAAA;IAAApE,cAAA,GAAAoB,CAAA;IACdiD,OAAA,CAAQD,KAAK,CAAC,qCAAqCA,KAAA;IAAA;IAAApE,cAAA,GAAAoB,CAAA;IACnD,OAAO6C,OAAA,CAAAC,YAAY,CAACC,IAAI,CACtB;MAAEC,KAAA,EAAO;IAA6B,GACtC;MAAE3B,MAAA,EAAQ;IAAI;EAElB;AACF","ignoreList":[]}