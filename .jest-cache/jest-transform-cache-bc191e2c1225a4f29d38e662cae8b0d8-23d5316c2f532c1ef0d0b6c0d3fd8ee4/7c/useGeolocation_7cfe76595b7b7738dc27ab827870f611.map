{"version":3,"sources":["C:\\Users\\marti\\Desktop\\DESARROLLOSW\\BOILERPLATTE E-COMMERCE\\src\\hooks\\useGeolocation.ts"],"sourcesContent":["/**\n * Hook para geolocalizaci√≥n autom√°tica y detecci√≥n de zona de entrega\n * Detecta la ubicaci√≥n del usuario y determina la zona de entrega m√°s cercana\n */\n\n'use client'\n\nimport { useState, useEffect, useCallback } from 'react'\n\nexport interface DeliveryZone {\n  id: string\n  name: string\n  available: boolean\n  coordinates?: {\n    lat: number\n    lng: number\n  }\n  radius?: number // Radio en km\n}\n\nexport interface GeolocationState {\n  location: {\n    lat: number\n    lng: number\n  } | null\n  isLoading: boolean\n  error: string | null\n  permissionStatus: 'granted' | 'denied' | 'prompt' | 'unknown'\n  detectedZone: DeliveryZone | null\n}\n\n// Zonas de entrega con coordenadas aproximadas\nconst DELIVERY_ZONES: DeliveryZone[] = [\n  {\n    id: 'cordoba-capital',\n    name: 'C√≥rdoba Capital',\n    available: true,\n    coordinates: { lat: -31.4201, lng: -64.1888 },\n    radius: 15,\n  },\n  {\n    id: 'cordoba-interior',\n    name: 'Interior de C√≥rdoba',\n    available: true,\n    coordinates: { lat: -31.4201, lng: -64.1888 },\n    radius: 100,\n  },\n  {\n    id: 'buenos-aires',\n    name: 'Buenos Aires',\n    available: false,\n    coordinates: { lat: -34.6118, lng: -58.396 },\n    radius: 50,\n  },\n  {\n    id: 'rosario',\n    name: 'Rosario',\n    available: false,\n    coordinates: { lat: -32.9442, lng: -60.6505 },\n    radius: 30,\n  },\n]\n\n// Funci√≥n para calcular distancia entre dos puntos (f√≥rmula de Haversine)\nfunction calculateDistance(lat1: number, lng1: number, lat2: number, lng2: number): number {\n  const R = 6371 // Radio de la Tierra en km\n  const dLat = ((lat2 - lat1) * Math.PI) / 180\n  const dLng = ((lng2 - lng1) * Math.PI) / 180\n  const a =\n    Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n    Math.cos((lat1 * Math.PI) / 180) *\n      Math.cos((lat2 * Math.PI) / 180) *\n      Math.sin(dLng / 2) *\n      Math.sin(dLng / 2)\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\n  return R * c\n}\n\n// Funci√≥n para detectar la zona m√°s cercana\nfunction detectNearestZone(userLat: number, userLng: number): DeliveryZone | null {\n  let nearestZone: DeliveryZone | null = null\n  let minDistance = Infinity\n\n  for (const zone of DELIVERY_ZONES) {\n    if (zone.coordinates) {\n      const distance = calculateDistance(\n        userLat,\n        userLng,\n        zone.coordinates.lat,\n        zone.coordinates.lng\n      )\n\n      console.log(\n        `üó∫Ô∏è Distance to ${zone.name}: ${distance.toFixed(2)}km (radius: ${zone.radius}km)`\n      )\n\n      // Verificar si est√° dentro del radio de la zona\n      if (zone.radius && distance <= zone.radius && distance < minDistance) {\n        nearestZone = zone\n        minDistance = distance\n      } else {\n      }\n    } else {\n    }\n  }\n\n  // Si no encuentra una zona espec√≠fica, usar C√≥rdoba Interior como fallback\n  const fallbackZone = DELIVERY_ZONES.find(zone => zone.id === 'cordoba-interior')\n  const result = nearestZone || fallbackZone || null\n\n  return result\n}\n\nexport const useGeolocation = () => {\n  const [state, setState] = useState<GeolocationState>({\n    location: null,\n    isLoading: false,\n    error: null,\n    permissionStatus: 'unknown',\n    detectedZone: null,\n  })\n\n  // Funci√≥n para solicitar geolocalizaci√≥n\n  const requestLocation = useCallback(() => {\n    if (!navigator.geolocation) {\n      setState(prev => ({\n        ...prev,\n        error: 'Geolocalizaci√≥n no soportada por este navegador',\n        permissionStatus: 'denied',\n      }))\n      return\n    }\n\n    setState(prev => {\n      const newState = { ...prev, isLoading: true, error: null }\n      return newState\n    })\n\n    // Usar Promise para mejor manejo de errores\n    const getCurrentPositionPromise = () => {\n      return new Promise<GeolocationPosition>((resolve, reject) => {\n        navigator.geolocation.getCurrentPosition(resolve, reject, {\n          enableHighAccuracy: false,\n          timeout: 30000,\n          maximumAge: 0,\n        })\n      })\n    }\n\n    // Ejecutar con async/await para mejor control\n    getCurrentPositionPromise()\n      .then(position => {\n        const { latitude, longitude, accuracy } = position.coords\n\n        const detectedZone = detectNearestZone(latitude, longitude)\n\n        // Usar setTimeout para asegurar que el setState se ejecute en el pr√≥ximo tick\n        setTimeout(() => {\n          setState(prev => {\n            const newState = {\n              ...prev,\n              location: { lat: latitude, lng: longitude },\n              detectedZone,\n              isLoading: false,\n              permissionStatus: 'granted' as const,\n              error: null,\n            }\n            return newState\n          })\n        }, 0)\n      })\n      .catch(error => {\n        let errorMessage = 'Error al obtener ubicaci√≥n'\n        let permissionStatus: 'denied' | 'unknown' = 'unknown'\n\n        switch (error.code) {\n          case error.PERMISSION_DENIED:\n            errorMessage = 'Permisos de ubicaci√≥n denegados'\n            permissionStatus = 'denied'\n            break\n          case error.POSITION_UNAVAILABLE:\n            errorMessage = 'Ubicaci√≥n no disponible'\n            break\n          case error.TIMEOUT:\n            errorMessage = 'Tiempo de espera agotado'\n            break\n        }\n\n        // Tambi√©n usar setTimeout para el manejo de errores\n        setTimeout(() => {\n          setState(prev => ({\n            ...prev,\n            error: errorMessage,\n            isLoading: false,\n            permissionStatus,\n          }))\n        }, 0)\n      })\n  }, [])\n\n  // Verificar permisos al montar el componente\n  useEffect(() => {\n    if ('permissions' in navigator) {\n      navigator.permissions\n        .query({ name: 'geolocation' })\n        .then(result => {\n          setState(prev => ({ ...prev, permissionStatus: result.state as any }))\n\n          // Si ya tiene permisos, solicitar ubicaci√≥n autom√°ticamente\n          if (result.state === 'granted') {\n            // No solicitar autom√°ticamente para evitar bucles infinitos\n          } else if (result.state === 'prompt') {\n            // No solicitar autom√°ticamente si es 'prompt' para evitar popup inesperado\n          } else {\n          }\n        })\n        .catch(error => {\n          setState(prev => ({ ...prev, permissionStatus: 'unknown' }))\n        })\n    } else {\n      setState(prev => ({ ...prev, permissionStatus: 'unknown' }))\n    }\n  }, []) // Sin dependencias para evitar bucles\n\n  // Funci√≥n para obtener todas las zonas disponibles\n  const getAvailableZones = useCallback(() => {\n    return DELIVERY_ZONES\n  }, [])\n\n  // Funci√≥n para seleccionar zona manualmente\n  const selectZone = useCallback((zoneId: string) => {\n    const zone = DELIVERY_ZONES.find(z => z.id === zoneId)\n    if (zone) {\n      setState(prev => ({ ...prev, detectedZone: zone }))\n    }\n  }, [])\n\n  // Funci√≥n de test para simular geolocalizaci√≥n exitosa\n  const testLocation = useCallback((lat: number = -31.4201, lng: number = -64.1888) => {\n    const detectedZone = detectNearestZone(lat, lng)\n\n    setState(prev => {\n      const newState = {\n        ...prev,\n        location: { lat, lng },\n        detectedZone,\n        isLoading: false,\n        permissionStatus: 'granted' as const,\n        error: null,\n      }\n      return newState\n    })\n  }, [])\n\n  return {\n    ...state,\n    requestLocation,\n    getAvailableZones,\n    selectZone,\n    deliveryZones: DELIVERY_ZONES,\n    testLocation, // Funci√≥n de test para debugging\n  }\n}\n"],"names":["useGeolocation","DELIVERY_ZONES","id","name","available","coordinates","lat","lng","radius","calculateDistance","lat1","lng1","lat2","lng2","R","dLat","Math","PI","dLng","a","sin","cos","c","atan2","sqrt","detectNearestZone","userLat","userLng","nearestZone","minDistance","Infinity","zone","distance","console","log","toFixed","fallbackZone","find","result","state","setState","useState","location","isLoading","error","permissionStatus","detectedZone","requestLocation","useCallback","navigator","geolocation","prev","newState","getCurrentPositionPromise","Promise","resolve","reject","getCurrentPosition","enableHighAccuracy","timeout","maximumAge","then","position","latitude","longitude","accuracy","coords","setTimeout","catch","errorMessage","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","useEffect","permissions","query","getAvailableZones","selectZone","zoneId","z","testLocation","deliveryZones"],"mappings":"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"}